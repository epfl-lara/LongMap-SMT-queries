; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10680 () Bool)

(assert start!10680)

(declare-fun b!85197 () Bool)

(declare-fun b_free!2233 () Bool)

(declare-fun b_next!2233 () Bool)

(assert (=> b!85197 (= b_free!2233 (not b_next!2233))))

(declare-fun tp!8926 () Bool)

(declare-fun b_and!5153 () Bool)

(assert (=> b!85197 (= tp!8926 b_and!5153)))

(declare-fun b!85211 () Bool)

(declare-fun b_free!2235 () Bool)

(declare-fun b_next!2235 () Bool)

(assert (=> b!85211 (= b_free!2235 (not b_next!2235))))

(declare-fun tp!8923 () Bool)

(declare-fun b_and!5155 () Bool)

(assert (=> b!85211 (= tp!8923 b_and!5155)))

(declare-fun b!85192 () Bool)

(declare-fun e!55562 () Bool)

(declare-fun e!55556 () Bool)

(assert (=> b!85192 (= e!55562 e!55556)))

(declare-fun mapNonEmpty!3393 () Bool)

(declare-fun mapRes!3394 () Bool)

(declare-fun tp!8925 () Bool)

(declare-fun e!55555 () Bool)

(assert (=> mapNonEmpty!3393 (= mapRes!3394 (and tp!8925 e!55555))))

(declare-datatypes ((V!3025 0))(
  ( (V!3026 (val!1311 Int)) )
))
(declare-datatypes ((ValueCell!923 0))(
  ( (ValueCellFull!923 (v!2647 V!3025)) (EmptyCell!923) )
))
(declare-fun mapRest!3394 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapKey!3394 () (_ BitVec 32))

(declare-fun mapValue!3393 () ValueCell!923)

(declare-datatypes ((array!4011 0))(
  ( (array!4012 (arr!1910 (Array (_ BitVec 32) (_ BitVec 64))) (size!2154 (_ BitVec 32))) )
))
(declare-datatypes ((array!4013 0))(
  ( (array!4014 (arr!1911 (Array (_ BitVec 32) ValueCell!923)) (size!2155 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!754 0))(
  ( (LongMapFixedSize!755 (defaultEntry!2337 Int) (mask!6365 (_ BitVec 32)) (extraKeys!2176 (_ BitVec 32)) (zeroValue!2229 V!3025) (minValue!2229 V!3025) (_size!426 (_ BitVec 32)) (_keys!4009 array!4011) (_values!2320 array!4013) (_vacant!426 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!754)

(assert (=> mapNonEmpty!3393 (= (arr!1911 (_values!2320 newMap!16)) (store mapRest!3394 mapKey!3394 mapValue!3393))))

(declare-fun b!85193 () Bool)

(declare-datatypes ((Unit!2498 0))(
  ( (Unit!2499) )
))
(declare-fun e!55552 () Unit!2498)

(declare-fun Unit!2500 () Unit!2498)

(assert (=> b!85193 (= e!55552 Unit!2500)))

(declare-fun lt!40191 () Unit!2498)

(declare-datatypes ((Cell!562 0))(
  ( (Cell!563 (v!2648 LongMapFixedSize!754)) )
))
(declare-datatypes ((LongMap!562 0))(
  ( (LongMap!563 (underlying!292 Cell!562)) )
))
(declare-fun thiss!992 () LongMap!562)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!59 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2498)

(assert (=> b!85193 (= lt!40191 (lemmaListMapContainsThenArrayContainsFrom!59 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4011 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!85193 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!40190 () Unit!2498)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4011 (_ BitVec 32) (_ BitVec 32)) Unit!2498)

(assert (=> b!85193 (= lt!40190 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1508 0))(
  ( (Nil!1505) (Cons!1504 (h!2095 (_ BitVec 64)) (t!5221 List!1508)) )
))
(declare-fun arrayNoDuplicates!0 (array!4011 (_ BitVec 32) List!1508) Bool)

(assert (=> b!85193 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) from!355 Nil!1505)))

(declare-fun lt!40186 () Unit!2498)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4011 (_ BitVec 32) (_ BitVec 64) List!1508) Unit!2498)

(assert (=> b!85193 (= lt!40186 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505)))))

(assert (=> b!85193 false))

(declare-fun b!85194 () Bool)

(declare-fun res!43907 () Bool)

(declare-fun e!55567 () Bool)

(assert (=> b!85194 (=> (not res!43907) (not e!55567))))

(assert (=> b!85194 (= res!43907 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun mapIsEmpty!3393 () Bool)

(declare-fun mapRes!3393 () Bool)

(assert (=> mapIsEmpty!3393 mapRes!3393))

(declare-fun b!85195 () Bool)

(declare-fun res!43911 () Bool)

(assert (=> b!85195 (=> (not res!43911) (not e!55567))))

(assert (=> b!85195 (= res!43911 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6365 newMap!16)) (_size!426 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85196 () Bool)

(declare-fun res!43906 () Bool)

(assert (=> b!85196 (=> (not res!43906) (not e!55567))))

(declare-fun valid!335 (LongMapFixedSize!754) Bool)

(assert (=> b!85196 (= res!43906 (valid!335 newMap!16))))

(declare-fun tp_is_empty!2533 () Bool)

(declare-fun e!55568 () Bool)

(declare-fun array_inv!1179 (array!4011) Bool)

(declare-fun array_inv!1180 (array!4013) Bool)

(assert (=> b!85197 (= e!55556 (and tp!8926 tp_is_empty!2533 (array_inv!1179 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (array_inv!1180 (_values!2320 (v!2648 (underlying!292 thiss!992)))) e!55568))))

(declare-fun b!85198 () Bool)

(declare-fun e!55557 () Bool)

(assert (=> b!85198 (= e!55557 tp_is_empty!2533)))

(declare-fun b!85199 () Bool)

(declare-fun e!55553 () Bool)

(declare-fun e!55551 () Bool)

(assert (=> b!85199 (= e!55553 e!55551)))

(declare-fun res!43909 () Bool)

(assert (=> b!85199 (=> (not res!43909) (not e!55551))))

(declare-datatypes ((tuple2!2186 0))(
  ( (tuple2!2187 (_1!1104 Bool) (_2!1104 LongMapFixedSize!754)) )
))
(declare-fun lt!40184 () tuple2!2186)

(assert (=> b!85199 (= res!43909 (and (_1!1104 lt!40184) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!40189 () Unit!2498)

(assert (=> b!85199 (= lt!40189 e!55552)))

(declare-datatypes ((tuple2!2188 0))(
  ( (tuple2!2189 (_1!1105 (_ BitVec 64)) (_2!1105 V!3025)) )
))
(declare-datatypes ((List!1509 0))(
  ( (Nil!1506) (Cons!1505 (h!2096 tuple2!2188) (t!5222 List!1509)) )
))
(declare-datatypes ((ListLongMap!1441 0))(
  ( (ListLongMap!1442 (toList!736 List!1509)) )
))
(declare-fun lt!40195 () ListLongMap!1441)

(declare-fun c!13813 () Bool)

(declare-fun contains!747 (ListLongMap!1441 (_ BitVec 64)) Bool)

(assert (=> b!85199 (= c!13813 (contains!747 lt!40195 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun lt!40194 () V!3025)

(declare-fun update!123 (LongMapFixedSize!754 (_ BitVec 64) V!3025) tuple2!2186)

(assert (=> b!85199 (= lt!40184 (update!123 newMap!16 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))

(declare-fun b!85200 () Bool)

(declare-fun e!55558 () Bool)

(assert (=> b!85200 (= e!55558 e!55562)))

(declare-fun b!85201 () Bool)

(assert (=> b!85201 (= e!55568 (and e!55557 mapRes!3393))))

(declare-fun condMapEmpty!3394 () Bool)

(declare-fun mapDefault!3394 () ValueCell!923)

(assert (=> b!85201 (= condMapEmpty!3394 (= (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3394)))))

(declare-fun mapIsEmpty!3394 () Bool)

(assert (=> mapIsEmpty!3394 mapRes!3394))

(declare-fun b!85202 () Bool)

(declare-fun e!55565 () Bool)

(assert (=> b!85202 (= e!55551 (not e!55565))))

(declare-fun res!43910 () Bool)

(assert (=> b!85202 (=> res!43910 e!55565)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!85202 (= res!43910 (not (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun lt!40197 () tuple2!2188)

(declare-fun lt!40193 () ListLongMap!1441)

(declare-fun lt!40188 () ListLongMap!1441)

(declare-fun lt!40192 () tuple2!2188)

(declare-fun +!107 (ListLongMap!1441 tuple2!2188) ListLongMap!1441)

(assert (=> b!85202 (= (+!107 lt!40188 lt!40192) (+!107 (+!107 lt!40193 lt!40192) lt!40197))))

(assert (=> b!85202 (= lt!40192 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun lt!40198 () Unit!2498)

(declare-fun addCommutativeForDiffKeys!27 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64) V!3025) Unit!2498)

(assert (=> b!85202 (= lt!40198 (addCommutativeForDiffKeys!27 lt!40193 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun lt!40185 () ListLongMap!1441)

(assert (=> b!85202 (= lt!40185 lt!40188)))

(assert (=> b!85202 (= lt!40188 (+!107 lt!40193 lt!40197))))

(declare-fun lt!40199 () ListLongMap!1441)

(declare-fun lt!40182 () tuple2!2188)

(assert (=> b!85202 (= lt!40185 (+!107 lt!40199 lt!40182))))

(declare-fun lt!40187 () ListLongMap!1441)

(assert (=> b!85202 (= lt!40193 (+!107 lt!40187 lt!40182))))

(assert (=> b!85202 (= lt!40182 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(assert (=> b!85202 (= lt!40199 (+!107 lt!40187 lt!40197))))

(assert (=> b!85202 (= lt!40197 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))

(declare-fun lt!40183 () Unit!2498)

(assert (=> b!85202 (= lt!40183 (addCommutativeForDiffKeys!27 lt!40187 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!72 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) ListLongMap!1441)

(assert (=> b!85202 (= lt!40187 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85203 () Bool)

(declare-fun e!55560 () Bool)

(assert (=> b!85203 (= e!55567 e!55560)))

(declare-fun res!43913 () Bool)

(assert (=> b!85203 (=> (not res!43913) (not e!55560))))

(declare-fun lt!40196 () ListLongMap!1441)

(assert (=> b!85203 (= res!43913 (= lt!40196 lt!40195))))

(declare-fun map!1196 (LongMapFixedSize!754) ListLongMap!1441)

(assert (=> b!85203 (= lt!40195 (map!1196 newMap!16))))

(declare-fun getCurrentListMap!430 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) ListLongMap!1441)

(assert (=> b!85203 (= lt!40196 (getCurrentListMap!430 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun mapNonEmpty!3394 () Bool)

(declare-fun tp!8924 () Bool)

(declare-fun e!55554 () Bool)

(assert (=> mapNonEmpty!3394 (= mapRes!3393 (and tp!8924 e!55554))))

(declare-fun mapValue!3394 () ValueCell!923)

(declare-fun mapRest!3393 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapKey!3393 () (_ BitVec 32))

(assert (=> mapNonEmpty!3394 (= (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (store mapRest!3393 mapKey!3393 mapValue!3394))))

(declare-fun b!85204 () Bool)

(assert (=> b!85204 (= e!55560 e!55553)))

(declare-fun res!43908 () Bool)

(assert (=> b!85204 (=> (not res!43908) (not e!55553))))

(assert (=> b!85204 (= res!43908 (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1204 (ValueCell!923 V!3025) V!3025)

(declare-fun dynLambda!344 (Int (_ BitVec 64)) V!3025)

(assert (=> b!85204 (= lt!40194 (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85205 () Bool)

(declare-fun e!55566 () Bool)

(assert (=> b!85205 (= e!55566 tp_is_empty!2533)))

(declare-fun b!85206 () Bool)

(assert (=> b!85206 (= e!55565 (or (not (= (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6365 (v!2648 (underlying!292 thiss!992)))))) (not (= (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992)))))) (bvslt (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!85207 () Bool)

(declare-fun Unit!2501 () Unit!2498)

(assert (=> b!85207 (= e!55552 Unit!2501)))

(declare-fun b!85208 () Bool)

(assert (=> b!85208 (= e!55555 tp_is_empty!2533)))

(declare-fun b!85209 () Bool)

(assert (=> b!85209 (= e!55554 tp_is_empty!2533)))

(declare-fun b!85210 () Bool)

(declare-fun e!55559 () Bool)

(assert (=> b!85210 (= e!55559 (and e!55566 mapRes!3394))))

(declare-fun condMapEmpty!3393 () Bool)

(declare-fun mapDefault!3393 () ValueCell!923)

(assert (=> b!85210 (= condMapEmpty!3393 (= (arr!1911 (_values!2320 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3393)))))

(declare-fun e!55561 () Bool)

(assert (=> b!85211 (= e!55561 (and tp!8923 tp_is_empty!2533 (array_inv!1179 (_keys!4009 newMap!16)) (array_inv!1180 (_values!2320 newMap!16)) e!55559))))

(declare-fun res!43912 () Bool)

(assert (=> start!10680 (=> (not res!43912) (not e!55567))))

(declare-fun valid!336 (LongMap!562) Bool)

(assert (=> start!10680 (= res!43912 (valid!336 thiss!992))))

(assert (=> start!10680 e!55567))

(assert (=> start!10680 e!55558))

(assert (=> start!10680 true))

(assert (=> start!10680 e!55561))

(assert (= (and start!10680 res!43912) b!85194))

(assert (= (and b!85194 res!43907) b!85196))

(assert (= (and b!85196 res!43906) b!85195))

(assert (= (and b!85195 res!43911) b!85203))

(assert (= (and b!85203 res!43913) b!85204))

(assert (= (and b!85204 res!43908) b!85199))

(assert (= (and b!85199 c!13813) b!85193))

(assert (= (and b!85199 (not c!13813)) b!85207))

(assert (= (and b!85199 res!43909) b!85202))

(assert (= (and b!85202 (not res!43910)) b!85206))

(assert (= (and b!85201 condMapEmpty!3394) mapIsEmpty!3393))

(assert (= (and b!85201 (not condMapEmpty!3394)) mapNonEmpty!3394))

(get-info :version)

(assert (= (and mapNonEmpty!3394 ((_ is ValueCellFull!923) mapValue!3394)) b!85209))

(assert (= (and b!85201 ((_ is ValueCellFull!923) mapDefault!3394)) b!85198))

(assert (= b!85197 b!85201))

(assert (= b!85192 b!85197))

(assert (= b!85200 b!85192))

(assert (= start!10680 b!85200))

(assert (= (and b!85210 condMapEmpty!3393) mapIsEmpty!3394))

(assert (= (and b!85210 (not condMapEmpty!3393)) mapNonEmpty!3393))

(assert (= (and mapNonEmpty!3393 ((_ is ValueCellFull!923) mapValue!3393)) b!85208))

(assert (= (and b!85210 ((_ is ValueCellFull!923) mapDefault!3393)) b!85205))

(assert (= b!85211 b!85210))

(assert (= start!10680 b!85211))

(declare-fun b_lambda!3789 () Bool)

(assert (=> (not b_lambda!3789) (not b!85204)))

(declare-fun t!5218 () Bool)

(declare-fun tb!1681 () Bool)

(assert (=> (and b!85197 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) t!5218) tb!1681))

(declare-fun result!2903 () Bool)

(assert (=> tb!1681 (= result!2903 tp_is_empty!2533)))

(assert (=> b!85204 t!5218))

(declare-fun b_and!5157 () Bool)

(assert (= b_and!5153 (and (=> t!5218 result!2903) b_and!5157)))

(declare-fun tb!1683 () Bool)

(declare-fun t!5220 () Bool)

(assert (=> (and b!85211 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) t!5220) tb!1683))

(declare-fun result!2907 () Bool)

(assert (= result!2907 result!2903))

(assert (=> b!85204 t!5220))

(declare-fun b_and!5159 () Bool)

(assert (= b_and!5155 (and (=> t!5220 result!2907) b_and!5159)))

(declare-fun m!89563 () Bool)

(assert (=> start!10680 m!89563))

(declare-fun m!89565 () Bool)

(assert (=> b!85193 m!89565))

(declare-fun m!89567 () Bool)

(assert (=> b!85193 m!89567))

(declare-fun m!89569 () Bool)

(assert (=> b!85193 m!89569))

(declare-fun m!89571 () Bool)

(assert (=> b!85193 m!89571))

(assert (=> b!85193 m!89569))

(assert (=> b!85193 m!89569))

(declare-fun m!89573 () Bool)

(assert (=> b!85193 m!89573))

(assert (=> b!85193 m!89569))

(declare-fun m!89575 () Bool)

(assert (=> b!85193 m!89575))

(declare-fun m!89577 () Bool)

(assert (=> b!85211 m!89577))

(declare-fun m!89579 () Bool)

(assert (=> b!85211 m!89579))

(declare-fun m!89581 () Bool)

(assert (=> b!85203 m!89581))

(declare-fun m!89583 () Bool)

(assert (=> b!85203 m!89583))

(assert (=> b!85202 m!89569))

(declare-fun m!89585 () Bool)

(assert (=> b!85202 m!89585))

(declare-fun m!89587 () Bool)

(assert (=> b!85202 m!89587))

(declare-fun m!89589 () Bool)

(assert (=> b!85202 m!89589))

(declare-fun m!89591 () Bool)

(assert (=> b!85202 m!89591))

(declare-fun m!89593 () Bool)

(assert (=> b!85202 m!89593))

(assert (=> b!85202 m!89569))

(declare-fun m!89595 () Bool)

(assert (=> b!85202 m!89595))

(assert (=> b!85202 m!89569))

(declare-fun m!89597 () Bool)

(assert (=> b!85202 m!89597))

(declare-fun m!89599 () Bool)

(assert (=> b!85202 m!89599))

(declare-fun m!89601 () Bool)

(assert (=> b!85202 m!89601))

(declare-fun m!89603 () Bool)

(assert (=> b!85202 m!89603))

(declare-fun m!89605 () Bool)

(assert (=> b!85202 m!89605))

(assert (=> b!85202 m!89587))

(declare-fun m!89607 () Bool)

(assert (=> b!85197 m!89607))

(declare-fun m!89609 () Bool)

(assert (=> b!85197 m!89609))

(assert (=> b!85199 m!89569))

(assert (=> b!85199 m!89569))

(declare-fun m!89611 () Bool)

(assert (=> b!85199 m!89611))

(assert (=> b!85199 m!89569))

(declare-fun m!89613 () Bool)

(assert (=> b!85199 m!89613))

(declare-fun m!89615 () Bool)

(assert (=> mapNonEmpty!3393 m!89615))

(declare-fun m!89617 () Bool)

(assert (=> mapNonEmpty!3394 m!89617))

(assert (=> b!85204 m!89569))

(declare-fun m!89619 () Bool)

(assert (=> b!85204 m!89619))

(declare-fun m!89621 () Bool)

(assert (=> b!85204 m!89621))

(assert (=> b!85204 m!89619))

(assert (=> b!85204 m!89621))

(declare-fun m!89623 () Bool)

(assert (=> b!85204 m!89623))

(declare-fun m!89625 () Bool)

(assert (=> b!85196 m!89625))

(check-sat (not b!85211) tp_is_empty!2533 b_and!5157 (not b_next!2233) b_and!5159 (not b!85204) (not mapNonEmpty!3394) (not b!85196) (not start!10680) (not b!85193) (not b!85199) (not b!85197) (not b!85203) (not b_lambda!3789) (not mapNonEmpty!3393) (not b!85202) (not b_next!2235))
(check-sat b_and!5157 b_and!5159 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun b_lambda!3795 () Bool)

(assert (= b_lambda!3789 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3795)))

(check-sat (not b!85211) tp_is_empty!2533 (not b_lambda!3795) b_and!5157 (not b_next!2233) b_and!5159 (not b!85204) (not mapNonEmpty!3394) (not b!85196) (not start!10680) (not b!85193) (not b!85199) (not b!85203) (not b!85197) (not mapNonEmpty!3393) (not b!85202) (not b_next!2235))
(check-sat b_and!5157 b_and!5159 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun d!22115 () Bool)

(assert (=> d!22115 (not (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40310 () Unit!2498)

(declare-fun choose!68 (array!4011 (_ BitVec 32) (_ BitVec 64) List!1508) Unit!2498)

(assert (=> d!22115 (= lt!40310 (choose!68 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505)))))

(assert (=> d!22115 (bvslt (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22115 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505)) lt!40310)))

(declare-fun bs!3616 () Bool)

(assert (= bs!3616 d!22115))

(assert (=> bs!3616 m!89569))

(assert (=> bs!3616 m!89573))

(assert (=> bs!3616 m!89569))

(declare-fun m!89755 () Bool)

(assert (=> bs!3616 m!89755))

(assert (=> b!85193 d!22115))

(declare-fun d!22117 () Bool)

(assert (=> d!22117 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) from!355 Nil!1505)))

(declare-fun lt!40313 () Unit!2498)

(declare-fun choose!39 (array!4011 (_ BitVec 32) (_ BitVec 32)) Unit!2498)

(assert (=> d!22117 (= lt!40313 (choose!39 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!22117 (bvslt (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22117 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 from!355) lt!40313)))

(declare-fun bs!3617 () Bool)

(assert (= bs!3617 d!22117))

(assert (=> bs!3617 m!89567))

(declare-fun m!89757 () Bool)

(assert (=> bs!3617 m!89757))

(assert (=> b!85193 d!22117))

(declare-fun d!22119 () Bool)

(declare-fun res!43966 () Bool)

(declare-fun e!55681 () Bool)

(assert (=> d!22119 (=> res!43966 e!55681)))

(assert (=> d!22119 (= res!43966 (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22119 (= (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!55681)))

(declare-fun b!85342 () Bool)

(declare-fun e!55682 () Bool)

(assert (=> b!85342 (= e!55681 e!55682)))

(declare-fun res!43967 () Bool)

(assert (=> b!85342 (=> (not res!43967) (not e!55682))))

(assert (=> b!85342 (= res!43967 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85343 () Bool)

(assert (=> b!85343 (= e!55682 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!22119 (not res!43966)) b!85342))

(assert (= (and b!85342 res!43967) b!85343))

(declare-fun m!89759 () Bool)

(assert (=> d!22119 m!89759))

(assert (=> b!85343 m!89569))

(declare-fun m!89761 () Bool)

(assert (=> b!85343 m!89761))

(assert (=> b!85193 d!22119))

(declare-fun d!22121 () Bool)

(declare-fun e!55685 () Bool)

(assert (=> d!22121 e!55685))

(declare-fun c!13822 () Bool)

(assert (=> d!22121 (= c!13822 (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!40316 () Unit!2498)

(declare-fun choose!505 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2498)

(assert (=> d!22121 (= lt!40316 (choose!505 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(assert (=> d!22121 (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992))))))

(assert (=> d!22121 (= (lemmaListMapContainsThenArrayContainsFrom!59 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) lt!40316)))

(declare-fun b!85348 () Bool)

(assert (=> b!85348 (= e!55685 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85349 () Bool)

(assert (=> b!85349 (= e!55685 (ite (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22121 c!13822) b!85348))

(assert (= (and d!22121 (not c!13822)) b!85349))

(assert (=> d!22121 m!89569))

(declare-fun m!89763 () Bool)

(assert (=> d!22121 m!89763))

(assert (=> d!22121 m!89601))

(assert (=> b!85348 m!89569))

(assert (=> b!85348 m!89573))

(assert (=> b!85193 d!22121))

(declare-fun b!85360 () Bool)

(declare-fun e!55697 () Bool)

(declare-fun e!55696 () Bool)

(assert (=> b!85360 (= e!55697 e!55696)))

(declare-fun c!13825 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!85360 (= c!13825 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85362 () Bool)

(declare-fun call!8027 () Bool)

(assert (=> b!85362 (= e!55696 call!8027)))

(declare-fun bm!8024 () Bool)

(assert (=> bm!8024 (= call!8027 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)))))

(declare-fun b!85363 () Bool)

(declare-fun e!55695 () Bool)

(declare-fun contains!748 (List!1508 (_ BitVec 64)) Bool)

(assert (=> b!85363 (= e!55695 (contains!748 Nil!1505 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85364 () Bool)

(declare-fun e!55694 () Bool)

(assert (=> b!85364 (= e!55694 e!55697)))

(declare-fun res!43974 () Bool)

(assert (=> b!85364 (=> (not res!43974) (not e!55697))))

(assert (=> b!85364 (= res!43974 (not e!55695))))

(declare-fun res!43975 () Bool)

(assert (=> b!85364 (=> (not res!43975) (not e!55695))))

(assert (=> b!85364 (= res!43975 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun d!22123 () Bool)

(declare-fun res!43976 () Bool)

(assert (=> d!22123 (=> res!43976 e!55694)))

(assert (=> d!22123 (= res!43976 (bvsge from!355 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!22123 (= (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) from!355 Nil!1505) e!55694)))

(declare-fun b!85361 () Bool)

(assert (=> b!85361 (= e!55696 call!8027)))

(assert (= (and d!22123 (not res!43976)) b!85364))

(assert (= (and b!85364 res!43975) b!85363))

(assert (= (and b!85364 res!43974) b!85360))

(assert (= (and b!85360 c!13825) b!85362))

(assert (= (and b!85360 (not c!13825)) b!85361))

(assert (= (or b!85362 b!85361) bm!8024))

(assert (=> b!85360 m!89569))

(assert (=> b!85360 m!89569))

(declare-fun m!89765 () Bool)

(assert (=> b!85360 m!89765))

(assert (=> bm!8024 m!89569))

(declare-fun m!89767 () Bool)

(assert (=> bm!8024 m!89767))

(assert (=> b!85363 m!89569))

(assert (=> b!85363 m!89569))

(declare-fun m!89769 () Bool)

(assert (=> b!85363 m!89769))

(assert (=> b!85364 m!89569))

(assert (=> b!85364 m!89569))

(assert (=> b!85364 m!89765))

(assert (=> b!85193 d!22123))

(declare-fun d!22125 () Bool)

(declare-fun e!55700 () Bool)

(assert (=> d!22125 e!55700))

(declare-fun res!43981 () Bool)

(assert (=> d!22125 (=> (not res!43981) (not e!55700))))

(declare-fun lt!40328 () ListLongMap!1441)

(assert (=> d!22125 (= res!43981 (contains!747 lt!40328 (_1!1105 lt!40197)))))

(declare-fun lt!40326 () List!1509)

(assert (=> d!22125 (= lt!40328 (ListLongMap!1442 lt!40326))))

(declare-fun lt!40325 () Unit!2498)

(declare-fun lt!40327 () Unit!2498)

(assert (=> d!22125 (= lt!40325 lt!40327)))

(declare-datatypes ((Option!147 0))(
  ( (Some!146 (v!2654 V!3025)) (None!145) )
))
(declare-fun getValueByKey!141 (List!1509 (_ BitVec 64)) Option!147)

(assert (=> d!22125 (= (getValueByKey!141 lt!40326 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(declare-fun lemmaContainsTupThenGetReturnValue!58 (List!1509 (_ BitVec 64) V!3025) Unit!2498)

(assert (=> d!22125 (= lt!40327 (lemmaContainsTupThenGetReturnValue!58 lt!40326 (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun insertStrictlySorted!61 (List!1509 (_ BitVec 64) V!3025) List!1509)

(assert (=> d!22125 (= lt!40326 (insertStrictlySorted!61 (toList!736 (+!107 lt!40193 lt!40192)) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(assert (=> d!22125 (= (+!107 (+!107 lt!40193 lt!40192) lt!40197) lt!40328)))

(declare-fun b!85369 () Bool)

(declare-fun res!43982 () Bool)

(assert (=> b!85369 (=> (not res!43982) (not e!55700))))

(assert (=> b!85369 (= res!43982 (= (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197))))))

(declare-fun b!85370 () Bool)

(declare-fun contains!749 (List!1509 tuple2!2188) Bool)

(assert (=> b!85370 (= e!55700 (contains!749 (toList!736 lt!40328) lt!40197))))

(assert (= (and d!22125 res!43981) b!85369))

(assert (= (and b!85369 res!43982) b!85370))

(declare-fun m!89771 () Bool)

(assert (=> d!22125 m!89771))

(declare-fun m!89773 () Bool)

(assert (=> d!22125 m!89773))

(declare-fun m!89775 () Bool)

(assert (=> d!22125 m!89775))

(declare-fun m!89777 () Bool)

(assert (=> d!22125 m!89777))

(declare-fun m!89779 () Bool)

(assert (=> b!85369 m!89779))

(declare-fun m!89781 () Bool)

(assert (=> b!85370 m!89781))

(assert (=> b!85202 d!22125))

(declare-fun b!85395 () Bool)

(declare-fun e!55718 () ListLongMap!1441)

(assert (=> b!85395 (= e!55718 (ListLongMap!1442 Nil!1506))))

(declare-fun b!85396 () Bool)

(assert (=> b!85396 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> b!85396 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun lt!40349 () ListLongMap!1441)

(declare-fun e!55717 () Bool)

(declare-fun apply!82 (ListLongMap!1441 (_ BitVec 64)) V!3025)

(assert (=> b!85396 (= e!55717 (= (apply!82 lt!40349 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!55721 () Bool)

(declare-fun b!85397 () Bool)

(assert (=> b!85397 (= e!55721 (= lt!40349 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85398 () Bool)

(declare-fun res!43993 () Bool)

(declare-fun e!55716 () Bool)

(assert (=> b!85398 (=> (not res!43993) (not e!55716))))

(assert (=> b!85398 (= res!43993 (not (contains!747 lt!40349 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85399 () Bool)

(declare-fun e!55720 () Bool)

(assert (=> b!85399 (= e!55720 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85399 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!85400 () Bool)

(declare-fun e!55719 () ListLongMap!1441)

(assert (=> b!85400 (= e!55718 e!55719)))

(declare-fun c!13837 () Bool)

(assert (=> b!85400 (= c!13837 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85401 () Bool)

(declare-fun lt!40343 () Unit!2498)

(declare-fun lt!40348 () Unit!2498)

(assert (=> b!85401 (= lt!40343 lt!40348)))

(declare-fun lt!40346 () V!3025)

(declare-fun lt!40347 () (_ BitVec 64))

(declare-fun lt!40345 () (_ BitVec 64))

(declare-fun lt!40344 () ListLongMap!1441)

(assert (=> b!85401 (not (contains!747 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)) lt!40345))))

(declare-fun addStillNotContains!33 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2498)

(assert (=> b!85401 (= lt!40348 (addStillNotContains!33 lt!40344 lt!40347 lt!40346 lt!40345))))

(assert (=> b!85401 (= lt!40345 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85401 (= lt!40346 (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85401 (= lt!40347 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!8030 () ListLongMap!1441)

(assert (=> b!85401 (= lt!40344 call!8030)))

(assert (=> b!85401 (= e!55719 (+!107 call!8030 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!8027 () Bool)

(assert (=> bm!8027 (= call!8030 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85402 () Bool)

(declare-fun isEmpty!341 (ListLongMap!1441) Bool)

(assert (=> b!85402 (= e!55721 (isEmpty!341 lt!40349))))

(declare-fun d!22127 () Bool)

(assert (=> d!22127 e!55716))

(declare-fun res!43992 () Bool)

(assert (=> d!22127 (=> (not res!43992) (not e!55716))))

(assert (=> d!22127 (= res!43992 (not (contains!747 lt!40349 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22127 (= lt!40349 e!55718)))

(declare-fun c!13834 () Bool)

(assert (=> d!22127 (= c!13834 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!22127 (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992))))))

(assert (=> d!22127 (= (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) lt!40349)))

(declare-fun b!85403 () Bool)

(declare-fun e!55715 () Bool)

(assert (=> b!85403 (= e!55715 e!55721)))

(declare-fun c!13836 () Bool)

(assert (=> b!85403 (= c!13836 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85404 () Bool)

(assert (=> b!85404 (= e!55716 e!55715)))

(declare-fun c!13835 () Bool)

(assert (=> b!85404 (= c!13835 e!55720)))

(declare-fun res!43991 () Bool)

(assert (=> b!85404 (=> (not res!43991) (not e!55720))))

(assert (=> b!85404 (= res!43991 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85405 () Bool)

(assert (=> b!85405 (= e!55719 call!8030)))

(declare-fun b!85406 () Bool)

(assert (=> b!85406 (= e!55715 e!55717)))

(assert (=> b!85406 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun res!43994 () Bool)

(assert (=> b!85406 (= res!43994 (contains!747 lt!40349 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85406 (=> (not res!43994) (not e!55717))))

(assert (= (and d!22127 c!13834) b!85395))

(assert (= (and d!22127 (not c!13834)) b!85400))

(assert (= (and b!85400 c!13837) b!85401))

(assert (= (and b!85400 (not c!13837)) b!85405))

(assert (= (or b!85401 b!85405) bm!8027))

(assert (= (and d!22127 res!43992) b!85398))

(assert (= (and b!85398 res!43993) b!85404))

(assert (= (and b!85404 res!43991) b!85399))

(assert (= (and b!85404 c!13835) b!85406))

(assert (= (and b!85404 (not c!13835)) b!85403))

(assert (= (and b!85406 res!43994) b!85396))

(assert (= (and b!85403 c!13836) b!85397))

(assert (= (and b!85403 (not c!13836)) b!85402))

(declare-fun b_lambda!3797 () Bool)

(assert (=> (not b_lambda!3797) (not b!85396)))

(assert (=> b!85396 t!5218))

(declare-fun b_and!5177 () Bool)

(assert (= b_and!5157 (and (=> t!5218 result!2903) b_and!5177)))

(assert (=> b!85396 t!5220))

(declare-fun b_and!5179 () Bool)

(assert (= b_and!5159 (and (=> t!5220 result!2907) b_and!5179)))

(declare-fun b_lambda!3799 () Bool)

(assert (=> (not b_lambda!3799) (not b!85401)))

(assert (=> b!85401 t!5218))

(declare-fun b_and!5181 () Bool)

(assert (= b_and!5177 (and (=> t!5218 result!2903) b_and!5181)))

(assert (=> b!85401 t!5220))

(declare-fun b_and!5183 () Bool)

(assert (= b_and!5179 (and (=> t!5220 result!2907) b_and!5183)))

(declare-fun m!89783 () Bool)

(assert (=> b!85397 m!89783))

(declare-fun m!89785 () Bool)

(assert (=> b!85398 m!89785))

(declare-fun m!89787 () Bool)

(assert (=> b!85402 m!89787))

(assert (=> b!85406 m!89759))

(assert (=> b!85406 m!89759))

(declare-fun m!89789 () Bool)

(assert (=> b!85406 m!89789))

(declare-fun m!89791 () Bool)

(assert (=> d!22127 m!89791))

(assert (=> d!22127 m!89601))

(assert (=> bm!8027 m!89783))

(assert (=> b!85396 m!89759))

(assert (=> b!85396 m!89759))

(declare-fun m!89793 () Bool)

(assert (=> b!85396 m!89793))

(declare-fun m!89795 () Bool)

(assert (=> b!85396 m!89795))

(assert (=> b!85396 m!89621))

(declare-fun m!89797 () Bool)

(assert (=> b!85396 m!89797))

(assert (=> b!85396 m!89795))

(assert (=> b!85396 m!89621))

(declare-fun m!89799 () Bool)

(assert (=> b!85401 m!89799))

(assert (=> b!85401 m!89759))

(declare-fun m!89801 () Bool)

(assert (=> b!85401 m!89801))

(assert (=> b!85401 m!89795))

(assert (=> b!85401 m!89621))

(assert (=> b!85401 m!89797))

(assert (=> b!85401 m!89801))

(declare-fun m!89803 () Bool)

(assert (=> b!85401 m!89803))

(assert (=> b!85401 m!89621))

(declare-fun m!89805 () Bool)

(assert (=> b!85401 m!89805))

(assert (=> b!85401 m!89795))

(assert (=> b!85399 m!89759))

(assert (=> b!85399 m!89759))

(declare-fun m!89807 () Bool)

(assert (=> b!85399 m!89807))

(assert (=> b!85400 m!89759))

(assert (=> b!85400 m!89759))

(assert (=> b!85400 m!89807))

(assert (=> b!85202 d!22127))

(declare-fun d!22129 () Bool)

(declare-fun e!55722 () Bool)

(assert (=> d!22129 e!55722))

(declare-fun res!43995 () Bool)

(assert (=> d!22129 (=> (not res!43995) (not e!55722))))

(declare-fun lt!40353 () ListLongMap!1441)

(assert (=> d!22129 (= res!43995 (contains!747 lt!40353 (_1!1105 lt!40197)))))

(declare-fun lt!40351 () List!1509)

(assert (=> d!22129 (= lt!40353 (ListLongMap!1442 lt!40351))))

(declare-fun lt!40350 () Unit!2498)

(declare-fun lt!40352 () Unit!2498)

(assert (=> d!22129 (= lt!40350 lt!40352)))

(assert (=> d!22129 (= (getValueByKey!141 lt!40351 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(assert (=> d!22129 (= lt!40352 (lemmaContainsTupThenGetReturnValue!58 lt!40351 (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(assert (=> d!22129 (= lt!40351 (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(assert (=> d!22129 (= (+!107 lt!40193 lt!40197) lt!40353)))

(declare-fun b!85407 () Bool)

(declare-fun res!43996 () Bool)

(assert (=> b!85407 (=> (not res!43996) (not e!55722))))

(assert (=> b!85407 (= res!43996 (= (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197))))))

(declare-fun b!85408 () Bool)

(assert (=> b!85408 (= e!55722 (contains!749 (toList!736 lt!40353) lt!40197))))

(assert (= (and d!22129 res!43995) b!85407))

(assert (= (and b!85407 res!43996) b!85408))

(declare-fun m!89809 () Bool)

(assert (=> d!22129 m!89809))

(declare-fun m!89811 () Bool)

(assert (=> d!22129 m!89811))

(declare-fun m!89813 () Bool)

(assert (=> d!22129 m!89813))

(declare-fun m!89815 () Bool)

(assert (=> d!22129 m!89815))

(declare-fun m!89817 () Bool)

(assert (=> b!85407 m!89817))

(declare-fun m!89819 () Bool)

(assert (=> b!85408 m!89819))

(assert (=> b!85202 d!22129))

(declare-fun d!22131 () Bool)

(declare-fun e!55723 () Bool)

(assert (=> d!22131 e!55723))

(declare-fun res!43997 () Bool)

(assert (=> d!22131 (=> (not res!43997) (not e!55723))))

(declare-fun lt!40357 () ListLongMap!1441)

(assert (=> d!22131 (= res!43997 (contains!747 lt!40357 (_1!1105 lt!40192)))))

(declare-fun lt!40355 () List!1509)

(assert (=> d!22131 (= lt!40357 (ListLongMap!1442 lt!40355))))

(declare-fun lt!40354 () Unit!2498)

(declare-fun lt!40356 () Unit!2498)

(assert (=> d!22131 (= lt!40354 lt!40356)))

(assert (=> d!22131 (= (getValueByKey!141 lt!40355 (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192)))))

(assert (=> d!22131 (= lt!40356 (lemmaContainsTupThenGetReturnValue!58 lt!40355 (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(assert (=> d!22131 (= lt!40355 (insertStrictlySorted!61 (toList!736 lt!40188) (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(assert (=> d!22131 (= (+!107 lt!40188 lt!40192) lt!40357)))

(declare-fun b!85409 () Bool)

(declare-fun res!43998 () Bool)

(assert (=> b!85409 (=> (not res!43998) (not e!55723))))

(assert (=> b!85409 (= res!43998 (= (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192))))))

(declare-fun b!85410 () Bool)

(assert (=> b!85410 (= e!55723 (contains!749 (toList!736 lt!40357) lt!40192))))

(assert (= (and d!22131 res!43997) b!85409))

(assert (= (and b!85409 res!43998) b!85410))

(declare-fun m!89821 () Bool)

(assert (=> d!22131 m!89821))

(declare-fun m!89823 () Bool)

(assert (=> d!22131 m!89823))

(declare-fun m!89825 () Bool)

(assert (=> d!22131 m!89825))

(declare-fun m!89827 () Bool)

(assert (=> d!22131 m!89827))

(declare-fun m!89829 () Bool)

(assert (=> b!85409 m!89829))

(declare-fun m!89831 () Bool)

(assert (=> b!85410 m!89831))

(assert (=> b!85202 d!22131))

(declare-fun d!22133 () Bool)

(assert (=> d!22133 (= (+!107 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (+!107 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun lt!40360 () Unit!2498)

(declare-fun choose!506 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64) V!3025) Unit!2498)

(assert (=> d!22133 (= lt!40360 (choose!506 lt!40187 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(assert (=> d!22133 (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22133 (= (addCommutativeForDiffKeys!27 lt!40187 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) lt!40360)))

(declare-fun bs!3618 () Bool)

(assert (= bs!3618 d!22133))

(assert (=> bs!3618 m!89569))

(declare-fun m!89833 () Bool)

(assert (=> bs!3618 m!89833))

(declare-fun m!89835 () Bool)

(assert (=> bs!3618 m!89835))

(declare-fun m!89837 () Bool)

(assert (=> bs!3618 m!89837))

(declare-fun m!89839 () Bool)

(assert (=> bs!3618 m!89839))

(assert (=> bs!3618 m!89835))

(declare-fun m!89841 () Bool)

(assert (=> bs!3618 m!89841))

(assert (=> bs!3618 m!89837))

(assert (=> b!85202 d!22133))

(declare-fun d!22135 () Bool)

(declare-fun e!55724 () Bool)

(assert (=> d!22135 e!55724))

(declare-fun res!43999 () Bool)

(assert (=> d!22135 (=> (not res!43999) (not e!55724))))

(declare-fun lt!40364 () ListLongMap!1441)

(assert (=> d!22135 (= res!43999 (contains!747 lt!40364 (_1!1105 lt!40192)))))

(declare-fun lt!40362 () List!1509)

(assert (=> d!22135 (= lt!40364 (ListLongMap!1442 lt!40362))))

(declare-fun lt!40361 () Unit!2498)

(declare-fun lt!40363 () Unit!2498)

(assert (=> d!22135 (= lt!40361 lt!40363)))

(assert (=> d!22135 (= (getValueByKey!141 lt!40362 (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192)))))

(assert (=> d!22135 (= lt!40363 (lemmaContainsTupThenGetReturnValue!58 lt!40362 (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(assert (=> d!22135 (= lt!40362 (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(assert (=> d!22135 (= (+!107 lt!40193 lt!40192) lt!40364)))

(declare-fun b!85411 () Bool)

(declare-fun res!44000 () Bool)

(assert (=> b!85411 (=> (not res!44000) (not e!55724))))

(assert (=> b!85411 (= res!44000 (= (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192))))))

(declare-fun b!85412 () Bool)

(assert (=> b!85412 (= e!55724 (contains!749 (toList!736 lt!40364) lt!40192))))

(assert (= (and d!22135 res!43999) b!85411))

(assert (= (and b!85411 res!44000) b!85412))

(declare-fun m!89843 () Bool)

(assert (=> d!22135 m!89843))

(declare-fun m!89845 () Bool)

(assert (=> d!22135 m!89845))

(declare-fun m!89847 () Bool)

(assert (=> d!22135 m!89847))

(declare-fun m!89849 () Bool)

(assert (=> d!22135 m!89849))

(declare-fun m!89851 () Bool)

(assert (=> b!85411 m!89851))

(declare-fun m!89853 () Bool)

(assert (=> b!85412 m!89853))

(assert (=> b!85202 d!22135))

(declare-fun d!22137 () Bool)

(declare-fun e!55725 () Bool)

(assert (=> d!22137 e!55725))

(declare-fun res!44001 () Bool)

(assert (=> d!22137 (=> (not res!44001) (not e!55725))))

(declare-fun lt!40368 () ListLongMap!1441)

(assert (=> d!22137 (= res!44001 (contains!747 lt!40368 (_1!1105 lt!40182)))))

(declare-fun lt!40366 () List!1509)

(assert (=> d!22137 (= lt!40368 (ListLongMap!1442 lt!40366))))

(declare-fun lt!40365 () Unit!2498)

(declare-fun lt!40367 () Unit!2498)

(assert (=> d!22137 (= lt!40365 lt!40367)))

(assert (=> d!22137 (= (getValueByKey!141 lt!40366 (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182)))))

(assert (=> d!22137 (= lt!40367 (lemmaContainsTupThenGetReturnValue!58 lt!40366 (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(assert (=> d!22137 (= lt!40366 (insertStrictlySorted!61 (toList!736 lt!40199) (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(assert (=> d!22137 (= (+!107 lt!40199 lt!40182) lt!40368)))

(declare-fun b!85413 () Bool)

(declare-fun res!44002 () Bool)

(assert (=> b!85413 (=> (not res!44002) (not e!55725))))

(assert (=> b!85413 (= res!44002 (= (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182))))))

(declare-fun b!85414 () Bool)

(assert (=> b!85414 (= e!55725 (contains!749 (toList!736 lt!40368) lt!40182))))

(assert (= (and d!22137 res!44001) b!85413))

(assert (= (and b!85413 res!44002) b!85414))

(declare-fun m!89855 () Bool)

(assert (=> d!22137 m!89855))

(declare-fun m!89857 () Bool)

(assert (=> d!22137 m!89857))

(declare-fun m!89859 () Bool)

(assert (=> d!22137 m!89859))

(declare-fun m!89861 () Bool)

(assert (=> d!22137 m!89861))

(declare-fun m!89863 () Bool)

(assert (=> b!85413 m!89863))

(declare-fun m!89865 () Bool)

(assert (=> b!85414 m!89865))

(assert (=> b!85202 d!22137))

(declare-fun d!22139 () Bool)

(declare-fun e!55726 () Bool)

(assert (=> d!22139 e!55726))

(declare-fun res!44003 () Bool)

(assert (=> d!22139 (=> (not res!44003) (not e!55726))))

(declare-fun lt!40372 () ListLongMap!1441)

(assert (=> d!22139 (= res!44003 (contains!747 lt!40372 (_1!1105 lt!40182)))))

(declare-fun lt!40370 () List!1509)

(assert (=> d!22139 (= lt!40372 (ListLongMap!1442 lt!40370))))

(declare-fun lt!40369 () Unit!2498)

(declare-fun lt!40371 () Unit!2498)

(assert (=> d!22139 (= lt!40369 lt!40371)))

(assert (=> d!22139 (= (getValueByKey!141 lt!40370 (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182)))))

(assert (=> d!22139 (= lt!40371 (lemmaContainsTupThenGetReturnValue!58 lt!40370 (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(assert (=> d!22139 (= lt!40370 (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(assert (=> d!22139 (= (+!107 lt!40187 lt!40182) lt!40372)))

(declare-fun b!85415 () Bool)

(declare-fun res!44004 () Bool)

(assert (=> b!85415 (=> (not res!44004) (not e!55726))))

(assert (=> b!85415 (= res!44004 (= (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182))))))

(declare-fun b!85416 () Bool)

(assert (=> b!85416 (= e!55726 (contains!749 (toList!736 lt!40372) lt!40182))))

(assert (= (and d!22139 res!44003) b!85415))

(assert (= (and b!85415 res!44004) b!85416))

(declare-fun m!89867 () Bool)

(assert (=> d!22139 m!89867))

(declare-fun m!89869 () Bool)

(assert (=> d!22139 m!89869))

(declare-fun m!89871 () Bool)

(assert (=> d!22139 m!89871))

(declare-fun m!89873 () Bool)

(assert (=> d!22139 m!89873))

(declare-fun m!89875 () Bool)

(assert (=> b!85415 m!89875))

(declare-fun m!89877 () Bool)

(assert (=> b!85416 m!89877))

(assert (=> b!85202 d!22139))

(declare-fun d!22141 () Bool)

(declare-fun e!55727 () Bool)

(assert (=> d!22141 e!55727))

(declare-fun res!44005 () Bool)

(assert (=> d!22141 (=> (not res!44005) (not e!55727))))

(declare-fun lt!40376 () ListLongMap!1441)

(assert (=> d!22141 (= res!44005 (contains!747 lt!40376 (_1!1105 lt!40197)))))

(declare-fun lt!40374 () List!1509)

(assert (=> d!22141 (= lt!40376 (ListLongMap!1442 lt!40374))))

(declare-fun lt!40373 () Unit!2498)

(declare-fun lt!40375 () Unit!2498)

(assert (=> d!22141 (= lt!40373 lt!40375)))

(assert (=> d!22141 (= (getValueByKey!141 lt!40374 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(assert (=> d!22141 (= lt!40375 (lemmaContainsTupThenGetReturnValue!58 lt!40374 (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(assert (=> d!22141 (= lt!40374 (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(assert (=> d!22141 (= (+!107 lt!40187 lt!40197) lt!40376)))

(declare-fun b!85417 () Bool)

(declare-fun res!44006 () Bool)

(assert (=> b!85417 (=> (not res!44006) (not e!55727))))

(assert (=> b!85417 (= res!44006 (= (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197))))))

(declare-fun b!85418 () Bool)

(assert (=> b!85418 (= e!55727 (contains!749 (toList!736 lt!40376) lt!40197))))

(assert (= (and d!22141 res!44005) b!85417))

(assert (= (and b!85417 res!44006) b!85418))

(declare-fun m!89879 () Bool)

(assert (=> d!22141 m!89879))

(declare-fun m!89881 () Bool)

(assert (=> d!22141 m!89881))

(declare-fun m!89883 () Bool)

(assert (=> d!22141 m!89883))

(declare-fun m!89885 () Bool)

(assert (=> d!22141 m!89885))

(declare-fun m!89887 () Bool)

(assert (=> b!85417 m!89887))

(declare-fun m!89889 () Bool)

(assert (=> b!85418 m!89889))

(assert (=> b!85202 d!22141))

(declare-fun d!22143 () Bool)

(assert (=> d!22143 (= (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992)))) (and (or (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000001111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000011111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000001111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000011111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000001111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000011111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000001111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000011111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000001111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000011111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000001111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000011111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000001111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000011111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000111111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000001111111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000011111111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000111111111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00001111111111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00011111111111111111111111111111) (= (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!85202 d!22143))

(declare-fun d!22145 () Bool)

(assert (=> d!22145 (= (+!107 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (+!107 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun lt!40377 () Unit!2498)

(assert (=> d!22145 (= lt!40377 (choose!506 lt!40193 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(assert (=> d!22145 (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22145 (= (addCommutativeForDiffKeys!27 lt!40193 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))) lt!40377)))

(declare-fun bs!3619 () Bool)

(assert (= bs!3619 d!22145))

(assert (=> bs!3619 m!89569))

(declare-fun m!89891 () Bool)

(assert (=> bs!3619 m!89891))

(declare-fun m!89893 () Bool)

(assert (=> bs!3619 m!89893))

(declare-fun m!89895 () Bool)

(assert (=> bs!3619 m!89895))

(declare-fun m!89897 () Bool)

(assert (=> bs!3619 m!89897))

(assert (=> bs!3619 m!89893))

(declare-fun m!89899 () Bool)

(assert (=> bs!3619 m!89899))

(assert (=> bs!3619 m!89895))

(assert (=> b!85202 d!22145))

(declare-fun d!22147 () Bool)

(assert (=> d!22147 (= (map!1196 newMap!16) (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun bs!3620 () Bool)

(assert (= bs!3620 d!22147))

(declare-fun m!89901 () Bool)

(assert (=> bs!3620 m!89901))

(assert (=> b!85203 d!22147))

(declare-fun bm!8042 () Bool)

(declare-fun c!13853 () Bool)

(declare-fun call!8048 () ListLongMap!1441)

(declare-fun call!8050 () ListLongMap!1441)

(declare-fun call!8046 () ListLongMap!1441)

(declare-fun c!13852 () Bool)

(declare-fun call!8051 () ListLongMap!1441)

(assert (=> bm!8042 (= call!8050 (+!107 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun d!22149 () Bool)

(declare-fun e!55754 () Bool)

(assert (=> d!22149 e!55754))

(declare-fun res!44025 () Bool)

(assert (=> d!22149 (=> (not res!44025) (not e!55754))))

(assert (=> d!22149 (= res!44025 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun lt!40439 () ListLongMap!1441)

(declare-fun lt!40422 () ListLongMap!1441)

(assert (=> d!22149 (= lt!40439 lt!40422)))

(declare-fun lt!40436 () Unit!2498)

(declare-fun e!55758 () Unit!2498)

(assert (=> d!22149 (= lt!40436 e!55758)))

(declare-fun c!13850 () Bool)

(declare-fun e!55759 () Bool)

(assert (=> d!22149 (= c!13850 e!55759)))

(declare-fun res!44032 () Bool)

(assert (=> d!22149 (=> (not res!44032) (not e!55759))))

(assert (=> d!22149 (= res!44032 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!55766 () ListLongMap!1441)

(assert (=> d!22149 (= lt!40422 e!55766)))

(assert (=> d!22149 (= c!13853 (and (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22149 (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992))))))

(assert (=> d!22149 (= (getCurrentListMap!430 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) lt!40439)))

(declare-fun bm!8043 () Bool)

(assert (=> bm!8043 (= call!8048 call!8046)))

(declare-fun b!85461 () Bool)

(declare-fun e!55756 () Bool)

(declare-fun e!55765 () Bool)

(assert (=> b!85461 (= e!55756 e!55765)))

(declare-fun res!44030 () Bool)

(assert (=> b!85461 (=> (not res!44030) (not e!55765))))

(assert (=> b!85461 (= res!44030 (contains!747 lt!40439 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85461 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85462 () Bool)

(declare-fun lt!40425 () Unit!2498)

(assert (=> b!85462 (= e!55758 lt!40425)))

(declare-fun lt!40431 () ListLongMap!1441)

(assert (=> b!85462 (= lt!40431 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun lt!40427 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40427 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40435 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40435 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40430 () Unit!2498)

(declare-fun addStillContains!58 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2498)

(assert (=> b!85462 (= lt!40430 (addStillContains!58 lt!40431 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40435))))

(assert (=> b!85462 (contains!747 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40435)))

(declare-fun lt!40432 () Unit!2498)

(assert (=> b!85462 (= lt!40432 lt!40430)))

(declare-fun lt!40443 () ListLongMap!1441)

(assert (=> b!85462 (= lt!40443 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun lt!40426 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40426 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40423 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40423 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40442 () Unit!2498)

(declare-fun addApplyDifferent!58 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2498)

(assert (=> b!85462 (= lt!40442 (addApplyDifferent!58 lt!40443 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40423))))

(assert (=> b!85462 (= (apply!82 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40423) (apply!82 lt!40443 lt!40423))))

(declare-fun lt!40424 () Unit!2498)

(assert (=> b!85462 (= lt!40424 lt!40442)))

(declare-fun lt!40437 () ListLongMap!1441)

(assert (=> b!85462 (= lt!40437 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun lt!40428 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40428 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40434 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40434 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40440 () Unit!2498)

(assert (=> b!85462 (= lt!40440 (addApplyDifferent!58 lt!40437 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40434))))

(assert (=> b!85462 (= (apply!82 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40434) (apply!82 lt!40437 lt!40434))))

(declare-fun lt!40441 () Unit!2498)

(assert (=> b!85462 (= lt!40441 lt!40440)))

(declare-fun lt!40438 () ListLongMap!1441)

(assert (=> b!85462 (= lt!40438 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun lt!40429 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40429 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40433 () (_ BitVec 64))

(assert (=> b!85462 (= lt!40433 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!85462 (= lt!40425 (addApplyDifferent!58 lt!40438 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40433))))

(assert (=> b!85462 (= (apply!82 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40433) (apply!82 lt!40438 lt!40433))))

(declare-fun bm!8044 () Bool)

(assert (=> bm!8044 (= call!8046 call!8051)))

(declare-fun b!85463 () Bool)

(declare-fun res!44028 () Bool)

(assert (=> b!85463 (=> (not res!44028) (not e!55754))))

(assert (=> b!85463 (= res!44028 e!55756)))

(declare-fun res!44027 () Bool)

(assert (=> b!85463 (=> res!44027 e!55756)))

(declare-fun e!55763 () Bool)

(assert (=> b!85463 (= res!44027 (not e!55763))))

(declare-fun res!44029 () Bool)

(assert (=> b!85463 (=> (not res!44029) (not e!55763))))

(assert (=> b!85463 (= res!44029 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85464 () Bool)

(declare-fun e!55757 () Bool)

(declare-fun call!8045 () Bool)

(assert (=> b!85464 (= e!55757 (not call!8045))))

(declare-fun b!85465 () Bool)

(declare-fun e!55764 () ListLongMap!1441)

(assert (=> b!85465 (= e!55766 e!55764)))

(assert (=> b!85465 (= c!13852 (and (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85466 () Bool)

(declare-fun e!55762 () Bool)

(declare-fun call!8047 () Bool)

(assert (=> b!85466 (= e!55762 (not call!8047))))

(declare-fun b!85467 () Bool)

(declare-fun e!55755 () Bool)

(assert (=> b!85467 (= e!55755 (= (apply!82 lt!40439 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun bm!8045 () Bool)

(declare-fun call!8049 () ListLongMap!1441)

(assert (=> bm!8045 (= call!8049 call!8050)))

(declare-fun b!85468 () Bool)

(declare-fun e!55761 () Bool)

(assert (=> b!85468 (= e!55762 e!55761)))

(declare-fun res!44026 () Bool)

(assert (=> b!85468 (= res!44026 call!8047)))

(assert (=> b!85468 (=> (not res!44026) (not e!55761))))

(declare-fun b!85469 () Bool)

(assert (=> b!85469 (= e!55754 e!55757)))

(declare-fun c!13851 () Bool)

(assert (=> b!85469 (= c!13851 (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85470 () Bool)

(assert (=> b!85470 (= e!55766 (+!107 call!8050 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85471 () Bool)

(assert (=> b!85471 (= e!55757 e!55755)))

(declare-fun res!44031 () Bool)

(assert (=> b!85471 (= res!44031 call!8045)))

(assert (=> b!85471 (=> (not res!44031) (not e!55755))))

(declare-fun b!85472 () Bool)

(declare-fun Unit!2505 () Unit!2498)

(assert (=> b!85472 (= e!55758 Unit!2505)))

(declare-fun b!85473 () Bool)

(assert (=> b!85473 (= e!55759 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!8046 () Bool)

(assert (=> bm!8046 (= call!8051 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85474 () Bool)

(declare-fun res!44033 () Bool)

(assert (=> b!85474 (=> (not res!44033) (not e!55754))))

(assert (=> b!85474 (= res!44033 e!55762)))

(declare-fun c!13855 () Bool)

(assert (=> b!85474 (= c!13855 (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85475 () Bool)

(declare-fun e!55760 () ListLongMap!1441)

(assert (=> b!85475 (= e!55760 call!8049)))

(declare-fun b!85476 () Bool)

(assert (=> b!85476 (= e!55763 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85477 () Bool)

(assert (=> b!85477 (= e!55760 call!8048)))

(declare-fun b!85478 () Bool)

(assert (=> b!85478 (= e!55764 call!8049)))

(declare-fun bm!8047 () Bool)

(assert (=> bm!8047 (= call!8045 (contains!747 lt!40439 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85479 () Bool)

(assert (=> b!85479 (= e!55761 (= (apply!82 lt!40439 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85480 () Bool)

(declare-fun c!13854 () Bool)

(assert (=> b!85480 (= c!13854 (and (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85480 (= e!55764 e!55760)))

(declare-fun b!85481 () Bool)

(assert (=> b!85481 (= e!55765 (= (apply!82 lt!40439 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85481 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> b!85481 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun bm!8048 () Bool)

(assert (=> bm!8048 (= call!8047 (contains!747 lt!40439 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22149 c!13853) b!85470))

(assert (= (and d!22149 (not c!13853)) b!85465))

(assert (= (and b!85465 c!13852) b!85478))

(assert (= (and b!85465 (not c!13852)) b!85480))

(assert (= (and b!85480 c!13854) b!85475))

(assert (= (and b!85480 (not c!13854)) b!85477))

(assert (= (or b!85475 b!85477) bm!8043))

(assert (= (or b!85478 bm!8043) bm!8044))

(assert (= (or b!85478 b!85475) bm!8045))

(assert (= (or b!85470 bm!8044) bm!8046))

(assert (= (or b!85470 bm!8045) bm!8042))

(assert (= (and d!22149 res!44032) b!85473))

(assert (= (and d!22149 c!13850) b!85462))

(assert (= (and d!22149 (not c!13850)) b!85472))

(assert (= (and d!22149 res!44025) b!85463))

(assert (= (and b!85463 res!44029) b!85476))

(assert (= (and b!85463 (not res!44027)) b!85461))

(assert (= (and b!85461 res!44030) b!85481))

(assert (= (and b!85463 res!44028) b!85474))

(assert (= (and b!85474 c!13855) b!85468))

(assert (= (and b!85474 (not c!13855)) b!85466))

(assert (= (and b!85468 res!44026) b!85479))

(assert (= (or b!85468 b!85466) bm!8048))

(assert (= (and b!85474 res!44033) b!85469))

(assert (= (and b!85469 c!13851) b!85471))

(assert (= (and b!85469 (not c!13851)) b!85464))

(assert (= (and b!85471 res!44031) b!85467))

(assert (= (or b!85471 b!85464) bm!8047))

(declare-fun b_lambda!3801 () Bool)

(assert (=> (not b_lambda!3801) (not b!85481)))

(assert (=> b!85481 t!5218))

(declare-fun b_and!5185 () Bool)

(assert (= b_and!5181 (and (=> t!5218 result!2903) b_and!5185)))

(assert (=> b!85481 t!5220))

(declare-fun b_and!5187 () Bool)

(assert (= b_and!5183 (and (=> t!5220 result!2907) b_and!5187)))

(declare-fun m!89903 () Bool)

(assert (=> b!85470 m!89903))

(declare-fun m!89905 () Bool)

(assert (=> b!85479 m!89905))

(assert (=> b!85481 m!89795))

(assert (=> b!85481 m!89621))

(assert (=> b!85481 m!89797))

(assert (=> b!85481 m!89795))

(assert (=> b!85481 m!89621))

(assert (=> b!85481 m!89759))

(declare-fun m!89907 () Bool)

(assert (=> b!85481 m!89907))

(assert (=> b!85481 m!89759))

(assert (=> bm!8046 m!89599))

(assert (=> b!85473 m!89759))

(assert (=> b!85473 m!89759))

(assert (=> b!85473 m!89807))

(declare-fun m!89909 () Bool)

(assert (=> bm!8048 m!89909))

(declare-fun m!89911 () Bool)

(assert (=> bm!8042 m!89911))

(declare-fun m!89913 () Bool)

(assert (=> b!85462 m!89913))

(declare-fun m!89915 () Bool)

(assert (=> b!85462 m!89915))

(declare-fun m!89917 () Bool)

(assert (=> b!85462 m!89917))

(declare-fun m!89919 () Bool)

(assert (=> b!85462 m!89919))

(declare-fun m!89921 () Bool)

(assert (=> b!85462 m!89921))

(assert (=> b!85462 m!89599))

(assert (=> b!85462 m!89759))

(declare-fun m!89923 () Bool)

(assert (=> b!85462 m!89923))

(declare-fun m!89925 () Bool)

(assert (=> b!85462 m!89925))

(declare-fun m!89927 () Bool)

(assert (=> b!85462 m!89927))

(declare-fun m!89929 () Bool)

(assert (=> b!85462 m!89929))

(declare-fun m!89931 () Bool)

(assert (=> b!85462 m!89931))

(declare-fun m!89933 () Bool)

(assert (=> b!85462 m!89933))

(declare-fun m!89935 () Bool)

(assert (=> b!85462 m!89935))

(declare-fun m!89937 () Bool)

(assert (=> b!85462 m!89937))

(assert (=> b!85462 m!89921))

(declare-fun m!89939 () Bool)

(assert (=> b!85462 m!89939))

(assert (=> b!85462 m!89913))

(assert (=> b!85462 m!89931))

(assert (=> b!85462 m!89927))

(declare-fun m!89941 () Bool)

(assert (=> b!85462 m!89941))

(assert (=> b!85476 m!89759))

(assert (=> b!85476 m!89759))

(assert (=> b!85476 m!89807))

(declare-fun m!89943 () Bool)

(assert (=> bm!8047 m!89943))

(assert (=> d!22149 m!89601))

(declare-fun m!89945 () Bool)

(assert (=> b!85467 m!89945))

(assert (=> b!85461 m!89759))

(assert (=> b!85461 m!89759))

(declare-fun m!89947 () Bool)

(assert (=> b!85461 m!89947))

(assert (=> b!85203 d!22149))

(declare-fun d!22151 () Bool)

(declare-fun e!55772 () Bool)

(assert (=> d!22151 e!55772))

(declare-fun res!44036 () Bool)

(assert (=> d!22151 (=> res!44036 e!55772)))

(declare-fun lt!40453 () Bool)

(assert (=> d!22151 (= res!44036 (not lt!40453))))

(declare-fun lt!40455 () Bool)

(assert (=> d!22151 (= lt!40453 lt!40455)))

(declare-fun lt!40452 () Unit!2498)

(declare-fun e!55771 () Unit!2498)

(assert (=> d!22151 (= lt!40452 e!55771)))

(declare-fun c!13858 () Bool)

(assert (=> d!22151 (= c!13858 lt!40455)))

(declare-fun containsKey!144 (List!1509 (_ BitVec 64)) Bool)

(assert (=> d!22151 (= lt!40455 (containsKey!144 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22151 (= (contains!747 lt!40195 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!40453)))

(declare-fun b!85488 () Bool)

(declare-fun lt!40454 () Unit!2498)

(assert (=> b!85488 (= e!55771 lt!40454)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!92 (List!1509 (_ BitVec 64)) Unit!2498)

(assert (=> b!85488 (= lt!40454 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun isDefined!93 (Option!147) Bool)

(assert (=> b!85488 (isDefined!93 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85489 () Bool)

(declare-fun Unit!2506 () Unit!2498)

(assert (=> b!85489 (= e!55771 Unit!2506)))

(declare-fun b!85490 () Bool)

(assert (=> b!85490 (= e!55772 (isDefined!93 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (= (and d!22151 c!13858) b!85488))

(assert (= (and d!22151 (not c!13858)) b!85489))

(assert (= (and d!22151 (not res!44036)) b!85490))

(assert (=> d!22151 m!89569))

(declare-fun m!89949 () Bool)

(assert (=> d!22151 m!89949))

(assert (=> b!85488 m!89569))

(declare-fun m!89951 () Bool)

(assert (=> b!85488 m!89951))

(assert (=> b!85488 m!89569))

(declare-fun m!89953 () Bool)

(assert (=> b!85488 m!89953))

(assert (=> b!85488 m!89953))

(declare-fun m!89955 () Bool)

(assert (=> b!85488 m!89955))

(assert (=> b!85490 m!89569))

(assert (=> b!85490 m!89953))

(assert (=> b!85490 m!89953))

(assert (=> b!85490 m!89955))

(assert (=> b!85199 d!22151))

(declare-fun b!85571 () Bool)

(declare-fun e!55815 () Bool)

(declare-datatypes ((SeekEntryResult!237 0))(
  ( (MissingZero!237 (index!3085 (_ BitVec 32))) (Found!237 (index!3086 (_ BitVec 32))) (Intermediate!237 (undefined!1049 Bool) (index!3087 (_ BitVec 32)) (x!11990 (_ BitVec 32))) (Undefined!237) (MissingVacant!237 (index!3088 (_ BitVec 32))) )
))
(declare-fun lt!40534 () SeekEntryResult!237)

(assert (=> b!85571 (= e!55815 ((_ is Undefined!237) lt!40534))))

(declare-fun b!85572 () Bool)

(declare-fun res!44069 () Bool)

(assert (=> b!85572 (= res!44069 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!40534)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55833 () Bool)

(assert (=> b!85572 (=> (not res!44069) (not e!55833))))

(declare-fun b!85573 () Bool)

(declare-fun lt!40523 () Unit!2498)

(declare-fun lt!40513 () Unit!2498)

(assert (=> b!85573 (= lt!40523 lt!40513)))

(declare-fun call!8113 () ListLongMap!1441)

(declare-fun call!8108 () ListLongMap!1441)

(assert (=> b!85573 (= call!8113 call!8108)))

(declare-fun lt!40530 () (_ BitVec 32))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2498)

(assert (=> b!85573 (= lt!40513 (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40530 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40194 (defaultEntry!2337 newMap!16)))))

(assert (=> b!85573 (= lt!40530 (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!55835 () tuple2!2186)

(assert (=> b!85573 (= e!55835 (tuple2!2187 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6365 newMap!16) (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) (zeroValue!2229 newMap!16) lt!40194 (_size!426 newMap!16) (_keys!4009 newMap!16) (_values!2320 newMap!16) (_vacant!426 newMap!16))))))

(declare-fun bm!8097 () Bool)

(declare-fun call!8122 () Bool)

(declare-fun call!8118 () Bool)

(assert (=> bm!8097 (= call!8122 call!8118)))

(declare-fun bm!8098 () Bool)

(declare-fun call!8101 () SeekEntryResult!237)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4011 (_ BitVec 32)) SeekEntryResult!237)

(assert (=> bm!8098 (= call!8101 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!85574 () Bool)

(declare-fun res!44075 () Bool)

(declare-fun e!55826 () Bool)

(assert (=> b!85574 (=> (not res!44075) (not e!55826))))

(declare-fun call!8111 () Bool)

(assert (=> b!85574 (= res!44075 call!8111)))

(declare-fun e!55816 () Bool)

(assert (=> b!85574 (= e!55816 e!55826)))

(declare-fun b!85575 () Bool)

(declare-fun e!55831 () Unit!2498)

(declare-fun lt!40516 () Unit!2498)

(assert (=> b!85575 (= e!55831 lt!40516)))

(declare-fun call!8107 () Unit!2498)

(assert (=> b!85575 (= lt!40516 call!8107)))

(declare-fun lt!40526 () SeekEntryResult!237)

(declare-fun call!8112 () SeekEntryResult!237)

(assert (=> b!85575 (= lt!40526 call!8112)))

(declare-fun res!44078 () Bool)

(assert (=> b!85575 (= res!44078 ((_ is Found!237) lt!40526))))

(declare-fun e!55819 () Bool)

(assert (=> b!85575 (=> (not res!44078) (not e!55819))))

(assert (=> b!85575 e!55819))

(declare-fun b!85576 () Bool)

(assert (=> b!85576 (= e!55819 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40526)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85577 () Bool)

(declare-fun res!44068 () Bool)

(declare-fun call!8119 () Bool)

(assert (=> b!85577 (= res!44068 call!8119)))

(declare-fun e!55829 () Bool)

(assert (=> b!85577 (=> (not res!44068) (not e!55829))))

(declare-fun b!85578 () Bool)

(declare-fun e!55834 () ListLongMap!1441)

(declare-fun call!8120 () ListLongMap!1441)

(assert (=> b!85578 (= e!55834 call!8120)))

(declare-fun b!85579 () Bool)

(declare-fun e!55825 () tuple2!2186)

(declare-fun e!55827 () tuple2!2186)

(assert (=> b!85579 (= e!55825 e!55827)))

(declare-fun lt!40518 () SeekEntryResult!237)

(assert (=> b!85579 (= lt!40518 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun c!13893 () Bool)

(assert (=> b!85579 (= c!13893 ((_ is Undefined!237) lt!40518))))

(declare-fun bm!8099 () Bool)

(declare-fun call!8117 () SeekEntryResult!237)

(assert (=> bm!8099 (= call!8117 call!8101)))

(declare-fun bm!8100 () Bool)

(assert (=> bm!8100 (= call!8112 call!8101)))

(declare-fun bm!8101 () Bool)

(declare-fun call!8115 () Unit!2498)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2498)

(assert (=> bm!8101 (= call!8115 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun b!85580 () Bool)

(declare-fun Unit!2507 () Unit!2498)

(assert (=> b!85580 (= e!55831 Unit!2507)))

(declare-fun lt!40525 () Unit!2498)

(assert (=> b!85580 (= lt!40525 call!8115)))

(assert (=> b!85580 (= lt!40534 call!8112)))

(declare-fun c!13894 () Bool)

(assert (=> b!85580 (= c!13894 ((_ is MissingZero!237) lt!40534))))

(declare-fun e!55821 () Bool)

(assert (=> b!85580 e!55821))

(declare-fun lt!40529 () Unit!2498)

(assert (=> b!85580 (= lt!40529 lt!40525)))

(assert (=> b!85580 false))

(declare-fun bm!8102 () Bool)

(assert (=> bm!8102 (= call!8111 call!8119)))

(declare-fun b!85581 () Bool)

(declare-fun res!44065 () Bool)

(declare-fun e!55828 () Bool)

(assert (=> b!85581 (=> (not res!44065) (not e!55828))))

(assert (=> b!85581 (= res!44065 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!40534)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85582 () Bool)

(declare-fun e!55830 () tuple2!2186)

(declare-fun e!55817 () tuple2!2186)

(assert (=> b!85582 (= e!55830 e!55817)))

(declare-fun c!13897 () Bool)

(assert (=> b!85582 (= c!13897 ((_ is MissingZero!237) lt!40518))))

(declare-fun b!85583 () Bool)

(declare-fun res!44074 () Bool)

(assert (=> b!85583 (=> (not res!44074) (not e!55828))))

(assert (=> b!85583 (= res!44074 call!8122)))

(assert (=> b!85583 (= e!55821 e!55828)))

(declare-fun bm!8103 () Bool)

(declare-fun call!8116 () ListLongMap!1441)

(declare-fun call!8109 () ListLongMap!1441)

(assert (=> bm!8103 (= call!8116 call!8109)))

(declare-fun b!85584 () Bool)

(declare-fun e!55824 () Bool)

(declare-fun lt!40520 () SeekEntryResult!237)

(assert (=> b!85584 (= e!55824 ((_ is Undefined!237) lt!40520))))

(declare-fun b!85585 () Bool)

(assert (=> b!85585 (= e!55825 e!55835)))

(declare-fun c!13892 () Bool)

(assert (=> b!85585 (= c!13892 (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85586 () Bool)

(declare-fun lt!40517 () Unit!2498)

(declare-fun e!55823 () Unit!2498)

(assert (=> b!85586 (= lt!40517 e!55823)))

(declare-fun c!13886 () Bool)

(declare-fun call!8102 () Bool)

(assert (=> b!85586 (= c!13886 call!8102)))

(assert (=> b!85586 (= e!55827 (tuple2!2187 false newMap!16))))

(declare-fun bm!8104 () Bool)

(declare-fun call!8100 () Bool)

(declare-fun call!8104 () Bool)

(assert (=> bm!8104 (= call!8100 call!8104)))

(declare-fun b!85587 () Bool)

(declare-fun lt!40524 () Unit!2498)

(assert (=> b!85587 (= e!55823 lt!40524)))

(assert (=> b!85587 (= lt!40524 call!8115)))

(assert (=> b!85587 (= lt!40520 call!8117)))

(declare-fun c!13895 () Bool)

(assert (=> b!85587 (= c!13895 ((_ is MissingZero!237) lt!40520))))

(assert (=> b!85587 e!55816))

(declare-fun b!85588 () Bool)

(declare-fun res!44077 () Bool)

(assert (=> b!85588 (=> (not res!44077) (not e!55826))))

(assert (=> b!85588 (= res!44077 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!40520)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85589 () Bool)

(declare-fun e!55818 () Bool)

(declare-fun e!55832 () Bool)

(assert (=> b!85589 (= e!55818 e!55832)))

(declare-fun c!13891 () Bool)

(declare-fun lt!40512 () tuple2!2186)

(assert (=> b!85589 (= c!13891 (_1!1104 lt!40512))))

(declare-fun lt!40514 () (_ BitVec 32))

(declare-fun bm!8105 () Bool)

(declare-fun c!13888 () Bool)

(declare-fun lt!40522 () array!4013)

(assert (=> bm!8105 (= call!8109 (getCurrentListMap!430 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85590 () Bool)

(declare-fun lt!40531 () tuple2!2186)

(assert (=> b!85590 (= e!55830 (tuple2!2187 (_1!1104 lt!40531) (_2!1104 lt!40531)))))

(declare-fun call!8110 () tuple2!2186)

(assert (=> b!85590 (= lt!40531 call!8110)))

(declare-fun call!8123 () ListLongMap!1441)

(declare-fun bm!8106 () Bool)

(assert (=> bm!8106 (= call!8123 (getCurrentListMap!430 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85591 () Bool)

(assert (=> b!85591 (= e!55834 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85592 () Bool)

(declare-fun call!8103 () Bool)

(assert (=> b!85592 (= e!55828 (not call!8103))))

(declare-fun bm!8107 () Bool)

(assert (=> bm!8107 (= call!8102 (contains!747 call!8116 (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(declare-fun b!85593 () Bool)

(declare-fun e!55822 () Bool)

(assert (=> b!85593 (= e!55822 (not call!8100))))

(declare-fun b!85594 () Bool)

(declare-fun c!13887 () Bool)

(assert (=> b!85594 (= c!13887 ((_ is MissingVacant!237) lt!40520))))

(assert (=> b!85594 (= e!55816 e!55824)))

(declare-fun bm!8108 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2498)

(assert (=> bm!8108 (= call!8107 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun bm!8109 () Bool)

(declare-fun call!8114 () Bool)

(assert (=> bm!8109 (= call!8119 call!8114)))

(declare-fun b!85595 () Bool)

(assert (=> b!85595 (= e!55826 (not call!8100))))

(declare-fun call!8105 () ListLongMap!1441)

(declare-fun b!85596 () Bool)

(declare-fun e!55820 () Bool)

(declare-fun call!8121 () ListLongMap!1441)

(assert (=> b!85596 (= e!55820 (= call!8105 (+!107 call!8121 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!85597 () Bool)

(declare-fun res!44076 () Bool)

(assert (=> b!85597 (= res!44076 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!40520)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85597 (=> (not res!44076) (not e!55822))))

(declare-fun c!13885 () Bool)

(declare-fun bm!8110 () Bool)

(declare-fun lt!40532 () SeekEntryResult!237)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!8110 (= call!8114 (inRange!0 (ite c!13893 (ite c!13886 (index!3086 lt!40532) (ite c!13895 (index!3085 lt!40520) (index!3088 lt!40520))) (ite c!13885 (index!3086 lt!40526) (ite c!13894 (index!3085 lt!40534) (index!3088 lt!40534)))) (mask!6365 newMap!16)))))

(declare-fun b!85598 () Bool)

(declare-fun Unit!2508 () Unit!2498)

(assert (=> b!85598 (= e!55823 Unit!2508)))

(declare-fun lt!40511 () Unit!2498)

(assert (=> b!85598 (= lt!40511 call!8107)))

(assert (=> b!85598 (= lt!40532 call!8117)))

(declare-fun res!44070 () Bool)

(assert (=> b!85598 (= res!44070 ((_ is Found!237) lt!40532))))

(assert (=> b!85598 (=> (not res!44070) (not e!55829))))

(assert (=> b!85598 e!55829))

(declare-fun lt!40519 () Unit!2498)

(assert (=> b!85598 (= lt!40519 lt!40511)))

(assert (=> b!85598 false))

(declare-fun b!85599 () Bool)

(assert (=> b!85599 (= e!55829 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40532)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun c!13896 () Bool)

(declare-fun bm!8111 () Bool)

(declare-fun updateHelperNewKey!31 (LongMapFixedSize!754 (_ BitVec 64) V!3025 (_ BitVec 32)) tuple2!2186)

(assert (=> bm!8111 (= call!8110 (updateHelperNewKey!31 newMap!16 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))

(declare-fun b!85600 () Bool)

(declare-fun lt!40533 () Unit!2498)

(declare-fun lt!40528 () Unit!2498)

(assert (=> b!85600 (= lt!40533 lt!40528)))

(assert (=> b!85600 (= call!8113 call!8108)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!31 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2498)

(assert (=> b!85600 (= lt!40528 (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40514 (zeroValue!2229 newMap!16) lt!40194 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)))))

(assert (=> b!85600 (= lt!40514 (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!85600 (= e!55835 (tuple2!2187 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6365 newMap!16) (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) lt!40194 (minValue!2229 newMap!16) (_size!426 newMap!16) (_keys!4009 newMap!16) (_values!2320 newMap!16) (_vacant!426 newMap!16))))))

(declare-fun b!85601 () Bool)

(assert (=> b!85601 (= c!13896 ((_ is MissingVacant!237) lt!40518))))

(assert (=> b!85601 (= e!55827 e!55830)))

(declare-fun bm!8112 () Bool)

(assert (=> bm!8112 (= call!8103 call!8104)))

(declare-fun bm!8113 () Bool)

(assert (=> bm!8113 (= call!8121 (map!1196 newMap!16))))

(declare-fun b!85602 () Bool)

(assert (=> b!85602 (= e!55833 (not call!8103))))

(declare-fun b!85603 () Bool)

(declare-fun c!13890 () Bool)

(assert (=> b!85603 (= c!13890 ((_ is MissingVacant!237) lt!40534))))

(assert (=> b!85603 (= e!55821 e!55815)))

(declare-fun call!8106 () ListLongMap!1441)

(declare-fun bm!8114 () Bool)

(assert (=> bm!8114 (= call!8106 (+!107 e!55834 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun c!13889 () Bool)

(assert (=> bm!8114 (= c!13889 c!13888)))

(declare-fun b!85604 () Bool)

(assert (=> b!85604 (= e!55832 (= call!8105 call!8121))))

(declare-fun b!85605 () Bool)

(assert (=> b!85605 (= e!55824 e!55822)))

(declare-fun res!44066 () Bool)

(assert (=> b!85605 (= res!44066 call!8111)))

(assert (=> b!85605 (=> (not res!44066) (not e!55822))))

(declare-fun bm!8115 () Bool)

(assert (=> bm!8115 (= call!8104 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!85606 () Bool)

(declare-fun res!44073 () Bool)

(assert (=> b!85606 (= res!44073 call!8118)))

(assert (=> b!85606 (=> (not res!44073) (not e!55819))))

(declare-fun bm!8116 () Bool)

(assert (=> bm!8116 (= call!8118 call!8114)))

(declare-fun b!85607 () Bool)

(assert (=> b!85607 (= e!55832 e!55820)))

(declare-fun res!44072 () Bool)

(assert (=> b!85607 (= res!44072 (contains!747 call!8105 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!85607 (=> (not res!44072) (not e!55820))))

(declare-fun bm!8117 () Bool)

(assert (=> bm!8117 (= call!8120 call!8123)))

(declare-fun bm!8119 () Bool)

(assert (=> bm!8119 (= call!8113 call!8106)))

(declare-fun b!85608 () Bool)

(declare-fun lt!40535 () Unit!2498)

(declare-fun lt!40521 () Unit!2498)

(assert (=> b!85608 (= lt!40535 lt!40521)))

(assert (=> b!85608 call!8102))

(declare-fun lemmaValidKeyInArrayIsInListMap!91 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) Unit!2498)

(assert (=> b!85608 (= lt!40521 (lemmaValidKeyInArrayIsInListMap!91 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (defaultEntry!2337 newMap!16)))))

(assert (=> b!85608 (= lt!40522 (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))))

(declare-fun lt!40515 () Unit!2498)

(declare-fun lt!40527 () Unit!2498)

(assert (=> b!85608 (= lt!40515 lt!40527)))

(assert (=> b!85608 (= call!8106 call!8123)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2498)

(assert (=> b!85608 (= lt!40527 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40536 () Unit!2498)

(assert (=> b!85608 (= lt!40536 e!55831)))

(assert (=> b!85608 (= c!13885 (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!85608 (= e!55817 (tuple2!2187 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (_size!426 newMap!16) (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (_vacant!426 newMap!16))))))

(declare-fun b!85609 () Bool)

(declare-fun lt!40510 () tuple2!2186)

(assert (=> b!85609 (= lt!40510 call!8110)))

(assert (=> b!85609 (= e!55817 (tuple2!2187 (_1!1104 lt!40510) (_2!1104 lt!40510)))))

(declare-fun bm!8118 () Bool)

(assert (=> bm!8118 (= call!8108 call!8109)))

(declare-fun d!22153 () Bool)

(assert (=> d!22153 e!55818))

(declare-fun res!44071 () Bool)

(assert (=> d!22153 (=> (not res!44071) (not e!55818))))

(assert (=> d!22153 (= res!44071 (valid!335 (_2!1104 lt!40512)))))

(assert (=> d!22153 (= lt!40512 e!55825)))

(assert (=> d!22153 (= c!13888 (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvneg (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (=> d!22153 (valid!335 newMap!16)))

(assert (=> d!22153 (= (update!123 newMap!16 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194) lt!40512)))

(declare-fun b!85610 () Bool)

(assert (=> b!85610 (= e!55815 e!55833)))

(declare-fun res!44067 () Bool)

(assert (=> b!85610 (= res!44067 call!8122)))

(assert (=> b!85610 (=> (not res!44067) (not e!55833))))

(declare-fun bm!8120 () Bool)

(assert (=> bm!8120 (= call!8105 (map!1196 (_2!1104 lt!40512)))))

(assert (= (and d!22153 c!13888) b!85585))

(assert (= (and d!22153 (not c!13888)) b!85579))

(assert (= (and b!85585 c!13892) b!85600))

(assert (= (and b!85585 (not c!13892)) b!85573))

(assert (= (or b!85600 b!85573) bm!8117))

(assert (= (or b!85600 b!85573) bm!8118))

(assert (= (or b!85600 b!85573) bm!8119))

(assert (= (and b!85579 c!13893) b!85586))

(assert (= (and b!85579 (not c!13893)) b!85601))

(assert (= (and b!85586 c!13886) b!85598))

(assert (= (and b!85586 (not c!13886)) b!85587))

(assert (= (and b!85598 res!44070) b!85577))

(assert (= (and b!85577 res!44068) b!85599))

(assert (= (and b!85587 c!13895) b!85574))

(assert (= (and b!85587 (not c!13895)) b!85594))

(assert (= (and b!85574 res!44075) b!85588))

(assert (= (and b!85588 res!44077) b!85595))

(assert (= (and b!85594 c!13887) b!85605))

(assert (= (and b!85594 (not c!13887)) b!85584))

(assert (= (and b!85605 res!44066) b!85597))

(assert (= (and b!85597 res!44076) b!85593))

(assert (= (or b!85574 b!85605) bm!8102))

(assert (= (or b!85595 b!85593) bm!8104))

(assert (= (or b!85577 bm!8102) bm!8109))

(assert (= (or b!85598 b!85587) bm!8099))

(assert (= (and b!85601 c!13896) b!85590))

(assert (= (and b!85601 (not c!13896)) b!85582))

(assert (= (and b!85582 c!13897) b!85609))

(assert (= (and b!85582 (not c!13897)) b!85608))

(assert (= (and b!85608 c!13885) b!85575))

(assert (= (and b!85608 (not c!13885)) b!85580))

(assert (= (and b!85575 res!44078) b!85606))

(assert (= (and b!85606 res!44073) b!85576))

(assert (= (and b!85580 c!13894) b!85583))

(assert (= (and b!85580 (not c!13894)) b!85603))

(assert (= (and b!85583 res!44074) b!85581))

(assert (= (and b!85581 res!44065) b!85592))

(assert (= (and b!85603 c!13890) b!85610))

(assert (= (and b!85603 (not c!13890)) b!85571))

(assert (= (and b!85610 res!44067) b!85572))

(assert (= (and b!85572 res!44069) b!85602))

(assert (= (or b!85583 b!85610) bm!8097))

(assert (= (or b!85592 b!85602) bm!8112))

(assert (= (or b!85606 bm!8097) bm!8116))

(assert (= (or b!85575 b!85580) bm!8100))

(assert (= (or b!85590 b!85609) bm!8111))

(assert (= (or bm!8104 bm!8112) bm!8115))

(assert (= (or b!85587 b!85580) bm!8101))

(assert (= (or b!85586 b!85608) bm!8103))

(assert (= (or bm!8109 bm!8116) bm!8110))

(assert (= (or bm!8099 bm!8100) bm!8098))

(assert (= (or b!85598 b!85575) bm!8108))

(assert (= (or b!85586 b!85608) bm!8107))

(assert (= (or bm!8118 bm!8103) bm!8105))

(assert (= (or bm!8117 b!85608) bm!8106))

(assert (= (or bm!8119 b!85608) bm!8114))

(assert (= (and bm!8114 c!13889) b!85578))

(assert (= (and bm!8114 (not c!13889)) b!85591))

(assert (= (and d!22153 res!44071) b!85589))

(assert (= (and b!85589 c!13891) b!85607))

(assert (= (and b!85589 (not c!13891)) b!85604))

(assert (= (and b!85607 res!44072) b!85596))

(assert (= (or b!85596 b!85604) bm!8113))

(assert (= (or b!85607 b!85596 b!85604) bm!8120))

(assert (=> b!85579 m!89569))

(declare-fun m!89957 () Bool)

(assert (=> b!85579 m!89957))

(assert (=> bm!8108 m!89569))

(declare-fun m!89959 () Bool)

(assert (=> bm!8108 m!89959))

(declare-fun m!89961 () Bool)

(assert (=> bm!8107 m!89961))

(declare-fun m!89963 () Bool)

(assert (=> bm!8107 m!89963))

(declare-fun m!89965 () Bool)

(assert (=> bm!8114 m!89965))

(declare-fun m!89967 () Bool)

(assert (=> d!22153 m!89967))

(assert (=> d!22153 m!89625))

(assert (=> b!85607 m!89569))

(declare-fun m!89969 () Bool)

(assert (=> b!85607 m!89969))

(declare-fun m!89971 () Bool)

(assert (=> b!85573 m!89971))

(declare-fun m!89973 () Bool)

(assert (=> b!85597 m!89973))

(declare-fun m!89975 () Bool)

(assert (=> b!85600 m!89975))

(declare-fun m!89977 () Bool)

(assert (=> b!85572 m!89977))

(declare-fun m!89979 () Bool)

(assert (=> b!85581 m!89979))

(declare-fun m!89981 () Bool)

(assert (=> bm!8106 m!89981))

(declare-fun m!89983 () Bool)

(assert (=> bm!8106 m!89983))

(declare-fun m!89985 () Bool)

(assert (=> b!85588 m!89985))

(declare-fun m!89987 () Bool)

(assert (=> bm!8105 m!89987))

(declare-fun m!89989 () Bool)

(assert (=> b!85608 m!89989))

(assert (=> b!85608 m!89981))

(assert (=> b!85608 m!89901))

(assert (=> b!85608 m!89901))

(assert (=> b!85608 m!89569))

(declare-fun m!89991 () Bool)

(assert (=> b!85608 m!89991))

(assert (=> b!85608 m!89569))

(declare-fun m!89993 () Bool)

(assert (=> b!85608 m!89993))

(declare-fun m!89995 () Bool)

(assert (=> b!85596 m!89995))

(assert (=> bm!8113 m!89581))

(declare-fun m!89997 () Bool)

(assert (=> bm!8120 m!89997))

(declare-fun m!89999 () Bool)

(assert (=> b!85599 m!89999))

(assert (=> bm!8111 m!89569))

(declare-fun m!90001 () Bool)

(assert (=> bm!8111 m!90001))

(assert (=> bm!8115 m!89569))

(declare-fun m!90003 () Bool)

(assert (=> bm!8115 m!90003))

(assert (=> b!85591 m!89901))

(assert (=> bm!8101 m!89569))

(declare-fun m!90005 () Bool)

(assert (=> bm!8101 m!90005))

(declare-fun m!90007 () Bool)

(assert (=> bm!8110 m!90007))

(declare-fun m!90009 () Bool)

(assert (=> b!85576 m!90009))

(assert (=> bm!8098 m!89569))

(assert (=> bm!8098 m!89957))

(assert (=> b!85199 d!22153))

(declare-fun d!22155 () Bool)

(declare-fun c!13900 () Bool)

(assert (=> d!22155 (= c!13900 ((_ is ValueCellFull!923) (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun e!55838 () V!3025)

(assert (=> d!22155 (= (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55838)))

(declare-fun b!85615 () Bool)

(declare-fun get!1205 (ValueCell!923 V!3025) V!3025)

(assert (=> b!85615 (= e!55838 (get!1205 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85616 () Bool)

(declare-fun get!1206 (ValueCell!923 V!3025) V!3025)

(assert (=> b!85616 (= e!55838 (get!1206 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22155 c!13900) b!85615))

(assert (= (and d!22155 (not c!13900)) b!85616))

(assert (=> b!85615 m!89619))

(assert (=> b!85615 m!89621))

(declare-fun m!90011 () Bool)

(assert (=> b!85615 m!90011))

(assert (=> b!85616 m!89619))

(assert (=> b!85616 m!89621))

(declare-fun m!90013 () Bool)

(assert (=> b!85616 m!90013))

(assert (=> b!85204 d!22155))

(declare-fun d!22157 () Bool)

(declare-fun res!44085 () Bool)

(declare-fun e!55841 () Bool)

(assert (=> d!22157 (=> (not res!44085) (not e!55841))))

(declare-fun simpleValid!58 (LongMapFixedSize!754) Bool)

(assert (=> d!22157 (= res!44085 (simpleValid!58 newMap!16))))

(assert (=> d!22157 (= (valid!335 newMap!16) e!55841)))

(declare-fun b!85623 () Bool)

(declare-fun res!44086 () Bool)

(assert (=> b!85623 (=> (not res!44086) (not e!55841))))

(declare-fun arrayCountValidKeys!0 (array!4011 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!85623 (= res!44086 (= (arrayCountValidKeys!0 (_keys!4009 newMap!16) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (_size!426 newMap!16)))))

(declare-fun b!85624 () Bool)

(declare-fun res!44087 () Bool)

(assert (=> b!85624 (=> (not res!44087) (not e!55841))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4011 (_ BitVec 32)) Bool)

(assert (=> b!85624 (= res!44087 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!85625 () Bool)

(assert (=> b!85625 (= e!55841 (arrayNoDuplicates!0 (_keys!4009 newMap!16) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!22157 res!44085) b!85623))

(assert (= (and b!85623 res!44086) b!85624))

(assert (= (and b!85624 res!44087) b!85625))

(declare-fun m!90015 () Bool)

(assert (=> d!22157 m!90015))

(declare-fun m!90017 () Bool)

(assert (=> b!85623 m!90017))

(declare-fun m!90019 () Bool)

(assert (=> b!85624 m!90019))

(declare-fun m!90021 () Bool)

(assert (=> b!85625 m!90021))

(assert (=> b!85196 d!22157))

(declare-fun d!22159 () Bool)

(assert (=> d!22159 (= (valid!336 thiss!992) (valid!335 (v!2648 (underlying!292 thiss!992))))))

(declare-fun bs!3621 () Bool)

(assert (= bs!3621 d!22159))

(declare-fun m!90023 () Bool)

(assert (=> bs!3621 m!90023))

(assert (=> start!10680 d!22159))

(declare-fun d!22161 () Bool)

(assert (=> d!22161 (= (array_inv!1179 (_keys!4009 newMap!16)) (bvsge (size!2154 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85211 d!22161))

(declare-fun d!22163 () Bool)

(assert (=> d!22163 (= (array_inv!1180 (_values!2320 newMap!16)) (bvsge (size!2155 (_values!2320 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85211 d!22163))

(declare-fun d!22165 () Bool)

(assert (=> d!22165 (= (array_inv!1179 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvsge (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85197 d!22165))

(declare-fun d!22167 () Bool)

(assert (=> d!22167 (= (array_inv!1180 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvsge (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85197 d!22167))

(declare-fun mapIsEmpty!3409 () Bool)

(declare-fun mapRes!3409 () Bool)

(assert (=> mapIsEmpty!3409 mapRes!3409))

(declare-fun condMapEmpty!3409 () Bool)

(declare-fun mapDefault!3409 () ValueCell!923)

(assert (=> mapNonEmpty!3394 (= condMapEmpty!3409 (= mapRest!3393 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3409)))))

(declare-fun e!55847 () Bool)

(assert (=> mapNonEmpty!3394 (= tp!8924 (and e!55847 mapRes!3409))))

(declare-fun b!85632 () Bool)

(declare-fun e!55846 () Bool)

(assert (=> b!85632 (= e!55846 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3409 () Bool)

(declare-fun tp!8953 () Bool)

(assert (=> mapNonEmpty!3409 (= mapRes!3409 (and tp!8953 e!55846))))

(declare-fun mapValue!3409 () ValueCell!923)

(declare-fun mapKey!3409 () (_ BitVec 32))

(declare-fun mapRest!3409 () (Array (_ BitVec 32) ValueCell!923))

(assert (=> mapNonEmpty!3409 (= mapRest!3393 (store mapRest!3409 mapKey!3409 mapValue!3409))))

(declare-fun b!85633 () Bool)

(assert (=> b!85633 (= e!55847 tp_is_empty!2533)))

(assert (= (and mapNonEmpty!3394 condMapEmpty!3409) mapIsEmpty!3409))

(assert (= (and mapNonEmpty!3394 (not condMapEmpty!3409)) mapNonEmpty!3409))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!923) mapValue!3409)) b!85632))

(assert (= (and mapNonEmpty!3394 ((_ is ValueCellFull!923) mapDefault!3409)) b!85633))

(declare-fun m!90025 () Bool)

(assert (=> mapNonEmpty!3409 m!90025))

(declare-fun mapIsEmpty!3410 () Bool)

(declare-fun mapRes!3410 () Bool)

(assert (=> mapIsEmpty!3410 mapRes!3410))

(declare-fun condMapEmpty!3410 () Bool)

(declare-fun mapDefault!3410 () ValueCell!923)

(assert (=> mapNonEmpty!3393 (= condMapEmpty!3410 (= mapRest!3394 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3410)))))

(declare-fun e!55849 () Bool)

(assert (=> mapNonEmpty!3393 (= tp!8925 (and e!55849 mapRes!3410))))

(declare-fun b!85634 () Bool)

(declare-fun e!55848 () Bool)

(assert (=> b!85634 (= e!55848 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3410 () Bool)

(declare-fun tp!8954 () Bool)

(assert (=> mapNonEmpty!3410 (= mapRes!3410 (and tp!8954 e!55848))))

(declare-fun mapValue!3410 () ValueCell!923)

(declare-fun mapRest!3410 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapKey!3410 () (_ BitVec 32))

(assert (=> mapNonEmpty!3410 (= mapRest!3394 (store mapRest!3410 mapKey!3410 mapValue!3410))))

(declare-fun b!85635 () Bool)

(assert (=> b!85635 (= e!55849 tp_is_empty!2533)))

(assert (= (and mapNonEmpty!3393 condMapEmpty!3410) mapIsEmpty!3410))

(assert (= (and mapNonEmpty!3393 (not condMapEmpty!3410)) mapNonEmpty!3410))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!923) mapValue!3410)) b!85634))

(assert (= (and mapNonEmpty!3393 ((_ is ValueCellFull!923) mapDefault!3410)) b!85635))

(declare-fun m!90027 () Bool)

(assert (=> mapNonEmpty!3410 m!90027))

(declare-fun b_lambda!3803 () Bool)

(assert (= b_lambda!3797 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3803)))

(declare-fun b_lambda!3805 () Bool)

(assert (= b_lambda!3799 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3805)))

(declare-fun b_lambda!3807 () Bool)

(assert (= b_lambda!3801 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3807)))

(check-sat (not b!85400) (not b!85470) (not bm!8114) (not b_lambda!3807) (not b!85414) (not b!85573) (not b!85473) (not d!22153) (not b!85608) (not b!85411) (not d!22117) (not bm!8048) (not d!22129) (not b!85462) (not b!85412) (not b!85408) (not b!85623) (not d!22159) (not bm!8047) (not bm!8101) (not b!85413) (not b!85579) (not d!22133) (not bm!8098) (not b!85396) (not b!85407) (not mapNonEmpty!3409) (not b!85402) (not d!22125) (not b!85467) tp_is_empty!2533 (not b!85369) (not b!85607) (not d!22147) (not d!22151) (not b_lambda!3795) (not b!85398) (not b!85363) (not b!85418) (not b_next!2233) (not d!22115) (not bm!8046) (not b!85415) (not d!22149) (not b!85397) (not bm!8042) (not b!85406) (not mapNonEmpty!3410) (not b!85364) (not b!85490) (not bm!8107) (not b!85370) (not b!85616) (not b!85417) (not d!22135) (not b!85409) (not bm!8115) (not d!22141) (not b!85343) b_and!5187 (not d!22157) (not b!85401) (not b!85488) (not b!85596) (not b!85399) (not d!22139) (not b!85416) (not d!22127) (not b!85625) (not d!22145) (not b!85624) (not bm!8105) (not b!85348) (not b!85410) (not b_lambda!3805) (not d!22131) (not bm!8108) (not b!85615) (not b!85591) (not bm!8120) (not b!85481) (not b!85479) (not d!22137) (not b_next!2235) (not b!85476) (not bm!8110) (not b!85360) (not b!85600) (not bm!8111) (not b!85461) (not bm!8024) (not d!22121) (not bm!8027) (not bm!8113) b_and!5185 (not bm!8106) (not b_lambda!3803))
(check-sat b_and!5185 b_and!5187 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun d!22169 () Bool)

(assert (=> d!22169 (= (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85476 d!22169))

(declare-fun b!85636 () Bool)

(declare-fun e!55853 () ListLongMap!1441)

(assert (=> b!85636 (= e!55853 (ListLongMap!1442 Nil!1506))))

(declare-fun b!85637 () Bool)

(assert (=> b!85637 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> b!85637 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!55852 () Bool)

(declare-fun lt!40543 () ListLongMap!1441)

(assert (=> b!85637 (= e!55852 (= (apply!82 lt!40543 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!55856 () Bool)

(declare-fun b!85638 () Bool)

(assert (=> b!85638 (= e!55856 (= lt!40543 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85639 () Bool)

(declare-fun res!44090 () Bool)

(declare-fun e!55851 () Bool)

(assert (=> b!85639 (=> (not res!44090) (not e!55851))))

(assert (=> b!85639 (= res!44090 (not (contains!747 lt!40543 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85640 () Bool)

(declare-fun e!55855 () Bool)

(assert (=> b!85640 (= e!55855 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85640 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!85641 () Bool)

(declare-fun e!55854 () ListLongMap!1441)

(assert (=> b!85641 (= e!55853 e!55854)))

(declare-fun c!13904 () Bool)

(assert (=> b!85641 (= c!13904 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85642 () Bool)

(declare-fun lt!40537 () Unit!2498)

(declare-fun lt!40542 () Unit!2498)

(assert (=> b!85642 (= lt!40537 lt!40542)))

(declare-fun lt!40540 () V!3025)

(declare-fun lt!40539 () (_ BitVec 64))

(declare-fun lt!40538 () ListLongMap!1441)

(declare-fun lt!40541 () (_ BitVec 64))

(assert (=> b!85642 (not (contains!747 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540)) lt!40539))))

(assert (=> b!85642 (= lt!40542 (addStillNotContains!33 lt!40538 lt!40541 lt!40540 lt!40539))))

(assert (=> b!85642 (= lt!40539 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85642 (= lt!40540 (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85642 (= lt!40541 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!8124 () ListLongMap!1441)

(assert (=> b!85642 (= lt!40538 call!8124)))

(assert (=> b!85642 (= e!55854 (+!107 call!8124 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!8121 () Bool)

(assert (=> bm!8121 (= call!8124 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85643 () Bool)

(assert (=> b!85643 (= e!55856 (isEmpty!341 lt!40543))))

(declare-fun d!22171 () Bool)

(assert (=> d!22171 e!55851))

(declare-fun res!44089 () Bool)

(assert (=> d!22171 (=> (not res!44089) (not e!55851))))

(assert (=> d!22171 (= res!44089 (not (contains!747 lt!40543 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22171 (= lt!40543 e!55853)))

(declare-fun c!13901 () Bool)

(assert (=> d!22171 (= c!13901 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!22171 (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992))))))

(assert (=> d!22171 (= (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) lt!40543)))

(declare-fun b!85644 () Bool)

(declare-fun e!55850 () Bool)

(assert (=> b!85644 (= e!55850 e!55856)))

(declare-fun c!13903 () Bool)

(assert (=> b!85644 (= c!13903 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85645 () Bool)

(assert (=> b!85645 (= e!55851 e!55850)))

(declare-fun c!13902 () Bool)

(assert (=> b!85645 (= c!13902 e!55855)))

(declare-fun res!44088 () Bool)

(assert (=> b!85645 (=> (not res!44088) (not e!55855))))

(assert (=> b!85645 (= res!44088 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85646 () Bool)

(assert (=> b!85646 (= e!55854 call!8124)))

(declare-fun b!85647 () Bool)

(assert (=> b!85647 (= e!55850 e!55852)))

(assert (=> b!85647 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun res!44091 () Bool)

(assert (=> b!85647 (= res!44091 (contains!747 lt!40543 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85647 (=> (not res!44091) (not e!55852))))

(assert (= (and d!22171 c!13901) b!85636))

(assert (= (and d!22171 (not c!13901)) b!85641))

(assert (= (and b!85641 c!13904) b!85642))

(assert (= (and b!85641 (not c!13904)) b!85646))

(assert (= (or b!85642 b!85646) bm!8121))

(assert (= (and d!22171 res!44089) b!85639))

(assert (= (and b!85639 res!44090) b!85645))

(assert (= (and b!85645 res!44088) b!85640))

(assert (= (and b!85645 c!13902) b!85647))

(assert (= (and b!85645 (not c!13902)) b!85644))

(assert (= (and b!85647 res!44091) b!85637))

(assert (= (and b!85644 c!13903) b!85638))

(assert (= (and b!85644 (not c!13903)) b!85643))

(declare-fun b_lambda!3809 () Bool)

(assert (=> (not b_lambda!3809) (not b!85637)))

(assert (=> b!85637 t!5218))

(declare-fun b_and!5189 () Bool)

(assert (= b_and!5185 (and (=> t!5218 result!2903) b_and!5189)))

(assert (=> b!85637 t!5220))

(declare-fun b_and!5191 () Bool)

(assert (= b_and!5187 (and (=> t!5220 result!2907) b_and!5191)))

(declare-fun b_lambda!3811 () Bool)

(assert (=> (not b_lambda!3811) (not b!85642)))

(assert (=> b!85642 t!5218))

(declare-fun b_and!5193 () Bool)

(assert (= b_and!5189 (and (=> t!5218 result!2903) b_and!5193)))

(assert (=> b!85642 t!5220))

(declare-fun b_and!5195 () Bool)

(assert (= b_and!5191 (and (=> t!5220 result!2907) b_and!5195)))

(declare-fun m!90029 () Bool)

(assert (=> b!85638 m!90029))

(declare-fun m!90031 () Bool)

(assert (=> b!85639 m!90031))

(declare-fun m!90033 () Bool)

(assert (=> b!85643 m!90033))

(declare-fun m!90035 () Bool)

(assert (=> b!85647 m!90035))

(assert (=> b!85647 m!90035))

(declare-fun m!90037 () Bool)

(assert (=> b!85647 m!90037))

(declare-fun m!90039 () Bool)

(assert (=> d!22171 m!90039))

(assert (=> d!22171 m!89601))

(assert (=> bm!8121 m!90029))

(assert (=> b!85637 m!90035))

(assert (=> b!85637 m!90035))

(declare-fun m!90041 () Bool)

(assert (=> b!85637 m!90041))

(declare-fun m!90043 () Bool)

(assert (=> b!85637 m!90043))

(assert (=> b!85637 m!89621))

(declare-fun m!90045 () Bool)

(assert (=> b!85637 m!90045))

(assert (=> b!85637 m!90043))

(assert (=> b!85637 m!89621))

(declare-fun m!90047 () Bool)

(assert (=> b!85642 m!90047))

(assert (=> b!85642 m!90035))

(declare-fun m!90049 () Bool)

(assert (=> b!85642 m!90049))

(assert (=> b!85642 m!90043))

(assert (=> b!85642 m!89621))

(assert (=> b!85642 m!90045))

(assert (=> b!85642 m!90049))

(declare-fun m!90051 () Bool)

(assert (=> b!85642 m!90051))

(assert (=> b!85642 m!89621))

(declare-fun m!90053 () Bool)

(assert (=> b!85642 m!90053))

(assert (=> b!85642 m!90043))

(assert (=> b!85640 m!90035))

(assert (=> b!85640 m!90035))

(declare-fun m!90055 () Bool)

(assert (=> b!85640 m!90055))

(assert (=> b!85641 m!90035))

(assert (=> b!85641 m!90035))

(assert (=> b!85641 m!90055))

(assert (=> bm!8027 d!22171))

(declare-fun d!22173 () Bool)

(declare-fun lt!40546 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!90 (List!1509) (InoxSet tuple2!2188))

(assert (=> d!22173 (= lt!40546 (select (content!90 (toList!736 lt!40328)) lt!40197))))

(declare-fun e!55862 () Bool)

(assert (=> d!22173 (= lt!40546 e!55862)))

(declare-fun res!44097 () Bool)

(assert (=> d!22173 (=> (not res!44097) (not e!55862))))

(assert (=> d!22173 (= res!44097 ((_ is Cons!1505) (toList!736 lt!40328)))))

(assert (=> d!22173 (= (contains!749 (toList!736 lt!40328) lt!40197) lt!40546)))

(declare-fun b!85652 () Bool)

(declare-fun e!55861 () Bool)

(assert (=> b!85652 (= e!55862 e!55861)))

(declare-fun res!44096 () Bool)

(assert (=> b!85652 (=> res!44096 e!55861)))

(assert (=> b!85652 (= res!44096 (= (h!2096 (toList!736 lt!40328)) lt!40197))))

(declare-fun b!85653 () Bool)

(assert (=> b!85653 (= e!55861 (contains!749 (t!5222 (toList!736 lt!40328)) lt!40197))))

(assert (= (and d!22173 res!44097) b!85652))

(assert (= (and b!85652 (not res!44096)) b!85653))

(declare-fun m!90057 () Bool)

(assert (=> d!22173 m!90057))

(declare-fun m!90059 () Bool)

(assert (=> d!22173 m!90059))

(declare-fun m!90061 () Bool)

(assert (=> b!85653 m!90061))

(assert (=> b!85370 d!22173))

(declare-fun bm!8124 () Bool)

(declare-fun call!8127 () Bool)

(assert (=> bm!8124 (= call!8127 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!85662 () Bool)

(declare-fun e!55870 () Bool)

(declare-fun e!55869 () Bool)

(assert (=> b!85662 (= e!55870 e!55869)))

(declare-fun lt!40555 () (_ BitVec 64))

(assert (=> b!85662 (= lt!40555 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40553 () Unit!2498)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4011 (_ BitVec 64) (_ BitVec 32)) Unit!2498)

(assert (=> b!85662 (= lt!40553 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4009 newMap!16) lt!40555 #b00000000000000000000000000000000))))

(assert (=> b!85662 (arrayContainsKey!0 (_keys!4009 newMap!16) lt!40555 #b00000000000000000000000000000000)))

(declare-fun lt!40554 () Unit!2498)

(assert (=> b!85662 (= lt!40554 lt!40553)))

(declare-fun res!44102 () Bool)

(assert (=> b!85662 (= res!44102 (= (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (_keys!4009 newMap!16) (mask!6365 newMap!16)) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!85662 (=> (not res!44102) (not e!55869))))

(declare-fun b!85663 () Bool)

(assert (=> b!85663 (= e!55869 call!8127)))

(declare-fun b!85664 () Bool)

(assert (=> b!85664 (= e!55870 call!8127)))

(declare-fun b!85665 () Bool)

(declare-fun e!55871 () Bool)

(assert (=> b!85665 (= e!55871 e!55870)))

(declare-fun c!13907 () Bool)

(assert (=> b!85665 (= c!13907 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!22175 () Bool)

(declare-fun res!44103 () Bool)

(assert (=> d!22175 (=> res!44103 e!55871)))

(assert (=> d!22175 (= res!44103 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22175 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 newMap!16) (mask!6365 newMap!16)) e!55871)))

(assert (= (and d!22175 (not res!44103)) b!85665))

(assert (= (and b!85665 c!13907) b!85662))

(assert (= (and b!85665 (not c!13907)) b!85664))

(assert (= (and b!85662 res!44102) b!85663))

(assert (= (or b!85663 b!85664) bm!8124))

(declare-fun m!90063 () Bool)

(assert (=> bm!8124 m!90063))

(declare-fun m!90065 () Bool)

(assert (=> b!85662 m!90065))

(declare-fun m!90067 () Bool)

(assert (=> b!85662 m!90067))

(declare-fun m!90069 () Bool)

(assert (=> b!85662 m!90069))

(assert (=> b!85662 m!90065))

(declare-fun m!90071 () Bool)

(assert (=> b!85662 m!90071))

(assert (=> b!85665 m!90065))

(assert (=> b!85665 m!90065))

(declare-fun m!90073 () Bool)

(assert (=> b!85665 m!90073))

(assert (=> b!85624 d!22175))

(declare-fun b!85677 () Bool)

(declare-fun e!55877 () Option!147)

(assert (=> b!85677 (= e!55877 None!145)))

(declare-fun d!22177 () Bool)

(declare-fun c!13912 () Bool)

(assert (=> d!22177 (= c!13912 (and ((_ is Cons!1505) (toList!736 lt!40376)) (= (_1!1105 (h!2096 (toList!736 lt!40376))) (_1!1105 lt!40197))))))

(declare-fun e!55876 () Option!147)

(assert (=> d!22177 (= (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197)) e!55876)))

(declare-fun b!85675 () Bool)

(assert (=> b!85675 (= e!55876 e!55877)))

(declare-fun c!13913 () Bool)

(assert (=> b!85675 (= c!13913 (and ((_ is Cons!1505) (toList!736 lt!40376)) (not (= (_1!1105 (h!2096 (toList!736 lt!40376))) (_1!1105 lt!40197)))))))

(declare-fun b!85676 () Bool)

(assert (=> b!85676 (= e!55877 (getValueByKey!141 (t!5222 (toList!736 lt!40376)) (_1!1105 lt!40197)))))

(declare-fun b!85674 () Bool)

(assert (=> b!85674 (= e!55876 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40376)))))))

(assert (= (and d!22177 c!13912) b!85674))

(assert (= (and d!22177 (not c!13912)) b!85675))

(assert (= (and b!85675 c!13913) b!85676))

(assert (= (and b!85675 (not c!13913)) b!85677))

(declare-fun m!90075 () Bool)

(assert (=> b!85676 m!90075))

(assert (=> b!85417 d!22177))

(declare-fun d!22179 () Bool)

(assert (=> d!22179 (= (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85360 d!22179))

(assert (=> d!22149 d!22143))

(assert (=> b!85400 d!22169))

(declare-fun d!22181 () Bool)

(declare-fun lt!40558 () Bool)

(declare-fun content!91 (List!1508) (InoxSet (_ BitVec 64)))

(assert (=> d!22181 (= lt!40558 (select (content!91 Nil!1505) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun e!55882 () Bool)

(assert (=> d!22181 (= lt!40558 e!55882)))

(declare-fun res!44108 () Bool)

(assert (=> d!22181 (=> (not res!44108) (not e!55882))))

(assert (=> d!22181 (= res!44108 ((_ is Cons!1504) Nil!1505))))

(assert (=> d!22181 (= (contains!748 Nil!1505 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!40558)))

(declare-fun b!85682 () Bool)

(declare-fun e!55883 () Bool)

(assert (=> b!85682 (= e!55882 e!55883)))

(declare-fun res!44109 () Bool)

(assert (=> b!85682 (=> res!44109 e!55883)))

(assert (=> b!85682 (= res!44109 (= (h!2095 Nil!1505) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85683 () Bool)

(assert (=> b!85683 (= e!55883 (contains!748 (t!5221 Nil!1505) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22181 res!44108) b!85682))

(assert (= (and b!85682 (not res!44109)) b!85683))

(declare-fun m!90077 () Bool)

(assert (=> d!22181 m!90077))

(assert (=> d!22181 m!89569))

(declare-fun m!90079 () Bool)

(assert (=> d!22181 m!90079))

(assert (=> b!85683 m!89569))

(declare-fun m!90081 () Bool)

(assert (=> b!85683 m!90081))

(assert (=> b!85363 d!22181))

(declare-fun d!22183 () Bool)

(declare-fun e!55884 () Bool)

(assert (=> d!22183 e!55884))

(declare-fun res!44110 () Bool)

(assert (=> d!22183 (=> (not res!44110) (not e!55884))))

(declare-fun lt!40562 () ListLongMap!1441)

(assert (=> d!22183 (= res!44110 (contains!747 lt!40562 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!40560 () List!1509)

(assert (=> d!22183 (= lt!40562 (ListLongMap!1442 lt!40560))))

(declare-fun lt!40559 () Unit!2498)

(declare-fun lt!40561 () Unit!2498)

(assert (=> d!22183 (= lt!40559 lt!40561)))

(assert (=> d!22183 (= (getValueByKey!141 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22183 (= lt!40561 (lemmaContainsTupThenGetReturnValue!58 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22183 (= lt!40560 (insertStrictlySorted!61 (toList!736 call!8121) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22183 (= (+!107 call!8121 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!40562)))

(declare-fun b!85684 () Bool)

(declare-fun res!44111 () Bool)

(assert (=> b!85684 (=> (not res!44111) (not e!55884))))

(assert (=> b!85684 (= res!44111 (= (getValueByKey!141 (toList!736 lt!40562) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!85685 () Bool)

(assert (=> b!85685 (= e!55884 (contains!749 (toList!736 lt!40562) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22183 res!44110) b!85684))

(assert (= (and b!85684 res!44111) b!85685))

(declare-fun m!90083 () Bool)

(assert (=> d!22183 m!90083))

(declare-fun m!90085 () Bool)

(assert (=> d!22183 m!90085))

(declare-fun m!90087 () Bool)

(assert (=> d!22183 m!90087))

(declare-fun m!90089 () Bool)

(assert (=> d!22183 m!90089))

(declare-fun m!90091 () Bool)

(assert (=> b!85684 m!90091))

(declare-fun m!90093 () Bool)

(assert (=> b!85685 m!90093))

(assert (=> b!85596 d!22183))

(declare-fun d!22185 () Bool)

(declare-fun get!1207 (Option!147) V!3025)

(assert (=> d!22185 (= (apply!82 lt!40443 lt!40423) (get!1207 (getValueByKey!141 (toList!736 lt!40443) lt!40423)))))

(declare-fun bs!3622 () Bool)

(assert (= bs!3622 d!22185))

(declare-fun m!90095 () Bool)

(assert (=> bs!3622 m!90095))

(assert (=> bs!3622 m!90095))

(declare-fun m!90097 () Bool)

(assert (=> bs!3622 m!90097))

(assert (=> b!85462 d!22185))

(declare-fun d!22187 () Bool)

(declare-fun e!55885 () Bool)

(assert (=> d!22187 e!55885))

(declare-fun res!44112 () Bool)

(assert (=> d!22187 (=> (not res!44112) (not e!55885))))

(declare-fun lt!40566 () ListLongMap!1441)

(assert (=> d!22187 (= res!44112 (contains!747 lt!40566 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40564 () List!1509)

(assert (=> d!22187 (= lt!40566 (ListLongMap!1442 lt!40564))))

(declare-fun lt!40563 () Unit!2498)

(declare-fun lt!40565 () Unit!2498)

(assert (=> d!22187 (= lt!40563 lt!40565)))

(assert (=> d!22187 (= (getValueByKey!141 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22187 (= lt!40565 (lemmaContainsTupThenGetReturnValue!58 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22187 (= lt!40564 (insertStrictlySorted!61 (toList!736 lt!40438) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22187 (= (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40566)))

(declare-fun b!85686 () Bool)

(declare-fun res!44113 () Bool)

(assert (=> b!85686 (=> (not res!44113) (not e!55885))))

(assert (=> b!85686 (= res!44113 (= (getValueByKey!141 (toList!736 lt!40566) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!85687 () Bool)

(assert (=> b!85687 (= e!55885 (contains!749 (toList!736 lt!40566) (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22187 res!44112) b!85686))

(assert (= (and b!85686 res!44113) b!85687))

(declare-fun m!90099 () Bool)

(assert (=> d!22187 m!90099))

(declare-fun m!90101 () Bool)

(assert (=> d!22187 m!90101))

(declare-fun m!90103 () Bool)

(assert (=> d!22187 m!90103))

(declare-fun m!90105 () Bool)

(assert (=> d!22187 m!90105))

(declare-fun m!90107 () Bool)

(assert (=> b!85686 m!90107))

(declare-fun m!90109 () Bool)

(assert (=> b!85687 m!90109))

(assert (=> b!85462 d!22187))

(declare-fun d!22189 () Bool)

(declare-fun e!55887 () Bool)

(assert (=> d!22189 e!55887))

(declare-fun res!44114 () Bool)

(assert (=> d!22189 (=> res!44114 e!55887)))

(declare-fun lt!40568 () Bool)

(assert (=> d!22189 (= res!44114 (not lt!40568))))

(declare-fun lt!40570 () Bool)

(assert (=> d!22189 (= lt!40568 lt!40570)))

(declare-fun lt!40567 () Unit!2498)

(declare-fun e!55886 () Unit!2498)

(assert (=> d!22189 (= lt!40567 e!55886)))

(declare-fun c!13914 () Bool)

(assert (=> d!22189 (= c!13914 lt!40570)))

(assert (=> d!22189 (= lt!40570 (containsKey!144 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))

(assert (=> d!22189 (= (contains!747 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40435) lt!40568)))

(declare-fun b!85688 () Bool)

(declare-fun lt!40569 () Unit!2498)

(assert (=> b!85688 (= e!55886 lt!40569)))

(assert (=> b!85688 (= lt!40569 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))

(assert (=> b!85688 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))

(declare-fun b!85689 () Bool)

(declare-fun Unit!2509 () Unit!2498)

(assert (=> b!85689 (= e!55886 Unit!2509)))

(declare-fun b!85690 () Bool)

(assert (=> b!85690 (= e!55887 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435)))))

(assert (= (and d!22189 c!13914) b!85688))

(assert (= (and d!22189 (not c!13914)) b!85689))

(assert (= (and d!22189 (not res!44114)) b!85690))

(declare-fun m!90111 () Bool)

(assert (=> d!22189 m!90111))

(declare-fun m!90113 () Bool)

(assert (=> b!85688 m!90113))

(declare-fun m!90115 () Bool)

(assert (=> b!85688 m!90115))

(assert (=> b!85688 m!90115))

(declare-fun m!90117 () Bool)

(assert (=> b!85688 m!90117))

(assert (=> b!85690 m!90115))

(assert (=> b!85690 m!90115))

(assert (=> b!85690 m!90117))

(assert (=> b!85462 d!22189))

(declare-fun d!22191 () Bool)

(declare-fun e!55888 () Bool)

(assert (=> d!22191 e!55888))

(declare-fun res!44115 () Bool)

(assert (=> d!22191 (=> (not res!44115) (not e!55888))))

(declare-fun lt!40574 () ListLongMap!1441)

(assert (=> d!22191 (= res!44115 (contains!747 lt!40574 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40572 () List!1509)

(assert (=> d!22191 (= lt!40574 (ListLongMap!1442 lt!40572))))

(declare-fun lt!40571 () Unit!2498)

(declare-fun lt!40573 () Unit!2498)

(assert (=> d!22191 (= lt!40571 lt!40573)))

(assert (=> d!22191 (= (getValueByKey!141 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22191 (= lt!40573 (lemmaContainsTupThenGetReturnValue!58 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22191 (= lt!40572 (insertStrictlySorted!61 (toList!736 lt!40437) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22191 (= (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40574)))

(declare-fun b!85691 () Bool)

(declare-fun res!44116 () Bool)

(assert (=> b!85691 (=> (not res!44116) (not e!55888))))

(assert (=> b!85691 (= res!44116 (= (getValueByKey!141 (toList!736 lt!40574) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!85692 () Bool)

(assert (=> b!85692 (= e!55888 (contains!749 (toList!736 lt!40574) (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22191 res!44115) b!85691))

(assert (= (and b!85691 res!44116) b!85692))

(declare-fun m!90119 () Bool)

(assert (=> d!22191 m!90119))

(declare-fun m!90121 () Bool)

(assert (=> d!22191 m!90121))

(declare-fun m!90123 () Bool)

(assert (=> d!22191 m!90123))

(declare-fun m!90125 () Bool)

(assert (=> d!22191 m!90125))

(declare-fun m!90127 () Bool)

(assert (=> b!85691 m!90127))

(declare-fun m!90129 () Bool)

(assert (=> b!85692 m!90129))

(assert (=> b!85462 d!22191))

(declare-fun d!22193 () Bool)

(assert (=> d!22193 (= (apply!82 lt!40437 lt!40434) (get!1207 (getValueByKey!141 (toList!736 lt!40437) lt!40434)))))

(declare-fun bs!3623 () Bool)

(assert (= bs!3623 d!22193))

(declare-fun m!90131 () Bool)

(assert (=> bs!3623 m!90131))

(assert (=> bs!3623 m!90131))

(declare-fun m!90133 () Bool)

(assert (=> bs!3623 m!90133))

(assert (=> b!85462 d!22193))

(declare-fun d!22195 () Bool)

(declare-fun e!55889 () Bool)

(assert (=> d!22195 e!55889))

(declare-fun res!44117 () Bool)

(assert (=> d!22195 (=> (not res!44117) (not e!55889))))

(declare-fun lt!40578 () ListLongMap!1441)

(assert (=> d!22195 (= res!44117 (contains!747 lt!40578 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40576 () List!1509)

(assert (=> d!22195 (= lt!40578 (ListLongMap!1442 lt!40576))))

(declare-fun lt!40575 () Unit!2498)

(declare-fun lt!40577 () Unit!2498)

(assert (=> d!22195 (= lt!40575 lt!40577)))

(assert (=> d!22195 (= (getValueByKey!141 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22195 (= lt!40577 (lemmaContainsTupThenGetReturnValue!58 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22195 (= lt!40576 (insertStrictlySorted!61 (toList!736 lt!40443) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22195 (= (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40578)))

(declare-fun b!85693 () Bool)

(declare-fun res!44118 () Bool)

(assert (=> b!85693 (=> (not res!44118) (not e!55889))))

(assert (=> b!85693 (= res!44118 (= (getValueByKey!141 (toList!736 lt!40578) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!85694 () Bool)

(assert (=> b!85694 (= e!55889 (contains!749 (toList!736 lt!40578) (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22195 res!44117) b!85693))

(assert (= (and b!85693 res!44118) b!85694))

(declare-fun m!90135 () Bool)

(assert (=> d!22195 m!90135))

(declare-fun m!90137 () Bool)

(assert (=> d!22195 m!90137))

(declare-fun m!90139 () Bool)

(assert (=> d!22195 m!90139))

(declare-fun m!90141 () Bool)

(assert (=> d!22195 m!90141))

(declare-fun m!90143 () Bool)

(assert (=> b!85693 m!90143))

(declare-fun m!90145 () Bool)

(assert (=> b!85694 m!90145))

(assert (=> b!85462 d!22195))

(declare-fun d!22197 () Bool)

(assert (=> d!22197 (= (apply!82 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40434) (apply!82 lt!40437 lt!40434))))

(declare-fun lt!40581 () Unit!2498)

(declare-fun choose!507 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2498)

(assert (=> d!22197 (= lt!40581 (choose!507 lt!40437 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40434))))

(declare-fun e!55892 () Bool)

(assert (=> d!22197 e!55892))

(declare-fun res!44121 () Bool)

(assert (=> d!22197 (=> (not res!44121) (not e!55892))))

(assert (=> d!22197 (= res!44121 (contains!747 lt!40437 lt!40434))))

(assert (=> d!22197 (= (addApplyDifferent!58 lt!40437 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40434) lt!40581)))

(declare-fun b!85698 () Bool)

(assert (=> b!85698 (= e!55892 (not (= lt!40434 lt!40428)))))

(assert (= (and d!22197 res!44121) b!85698))

(declare-fun m!90147 () Bool)

(assert (=> d!22197 m!90147))

(declare-fun m!90149 () Bool)

(assert (=> d!22197 m!90149))

(assert (=> d!22197 m!89927))

(assert (=> d!22197 m!89929))

(assert (=> d!22197 m!89927))

(assert (=> d!22197 m!89935))

(assert (=> b!85462 d!22197))

(declare-fun d!22199 () Bool)

(declare-fun e!55893 () Bool)

(assert (=> d!22199 e!55893))

(declare-fun res!44122 () Bool)

(assert (=> d!22199 (=> (not res!44122) (not e!55893))))

(declare-fun lt!40585 () ListLongMap!1441)

(assert (=> d!22199 (= res!44122 (contains!747 lt!40585 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40583 () List!1509)

(assert (=> d!22199 (= lt!40585 (ListLongMap!1442 lt!40583))))

(declare-fun lt!40582 () Unit!2498)

(declare-fun lt!40584 () Unit!2498)

(assert (=> d!22199 (= lt!40582 lt!40584)))

(assert (=> d!22199 (= (getValueByKey!141 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22199 (= lt!40584 (lemmaContainsTupThenGetReturnValue!58 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22199 (= lt!40583 (insertStrictlySorted!61 (toList!736 lt!40431) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22199 (= (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40585)))

(declare-fun b!85699 () Bool)

(declare-fun res!44123 () Bool)

(assert (=> b!85699 (=> (not res!44123) (not e!55893))))

(assert (=> b!85699 (= res!44123 (= (getValueByKey!141 (toList!736 lt!40585) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!85700 () Bool)

(assert (=> b!85700 (= e!55893 (contains!749 (toList!736 lt!40585) (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22199 res!44122) b!85699))

(assert (= (and b!85699 res!44123) b!85700))

(declare-fun m!90151 () Bool)

(assert (=> d!22199 m!90151))

(declare-fun m!90153 () Bool)

(assert (=> d!22199 m!90153))

(declare-fun m!90155 () Bool)

(assert (=> d!22199 m!90155))

(declare-fun m!90157 () Bool)

(assert (=> d!22199 m!90157))

(declare-fun m!90159 () Bool)

(assert (=> b!85699 m!90159))

(declare-fun m!90161 () Bool)

(assert (=> b!85700 m!90161))

(assert (=> b!85462 d!22199))

(declare-fun d!22201 () Bool)

(assert (=> d!22201 (= (apply!82 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40423) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40423)))))

(declare-fun bs!3624 () Bool)

(assert (= bs!3624 d!22201))

(declare-fun m!90163 () Bool)

(assert (=> bs!3624 m!90163))

(assert (=> bs!3624 m!90163))

(declare-fun m!90165 () Bool)

(assert (=> bs!3624 m!90165))

(assert (=> b!85462 d!22201))

(declare-fun d!22203 () Bool)

(assert (=> d!22203 (= (apply!82 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40434) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40434)))))

(declare-fun bs!3625 () Bool)

(assert (= bs!3625 d!22203))

(declare-fun m!90167 () Bool)

(assert (=> bs!3625 m!90167))

(assert (=> bs!3625 m!90167))

(declare-fun m!90169 () Bool)

(assert (=> bs!3625 m!90169))

(assert (=> b!85462 d!22203))

(assert (=> b!85462 d!22127))

(declare-fun d!22205 () Bool)

(assert (=> d!22205 (= (apply!82 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40433) (apply!82 lt!40438 lt!40433))))

(declare-fun lt!40586 () Unit!2498)

(assert (=> d!22205 (= lt!40586 (choose!507 lt!40438 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40433))))

(declare-fun e!55894 () Bool)

(assert (=> d!22205 e!55894))

(declare-fun res!44124 () Bool)

(assert (=> d!22205 (=> (not res!44124) (not e!55894))))

(assert (=> d!22205 (= res!44124 (contains!747 lt!40438 lt!40433))))

(assert (=> d!22205 (= (addApplyDifferent!58 lt!40438 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40433) lt!40586)))

(declare-fun b!85701 () Bool)

(assert (=> b!85701 (= e!55894 (not (= lt!40433 lt!40429)))))

(assert (= (and d!22205 res!44124) b!85701))

(declare-fun m!90171 () Bool)

(assert (=> d!22205 m!90171))

(declare-fun m!90173 () Bool)

(assert (=> d!22205 m!90173))

(assert (=> d!22205 m!89931))

(assert (=> d!22205 m!89933))

(assert (=> d!22205 m!89931))

(assert (=> d!22205 m!89925))

(assert (=> b!85462 d!22205))

(declare-fun d!22207 () Bool)

(assert (=> d!22207 (= (apply!82 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40433) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40433)))))

(declare-fun bs!3626 () Bool)

(assert (= bs!3626 d!22207))

(declare-fun m!90175 () Bool)

(assert (=> bs!3626 m!90175))

(assert (=> bs!3626 m!90175))

(declare-fun m!90177 () Bool)

(assert (=> bs!3626 m!90177))

(assert (=> b!85462 d!22207))

(declare-fun d!22209 () Bool)

(assert (=> d!22209 (contains!747 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40435)))

(declare-fun lt!40589 () Unit!2498)

(declare-fun choose!508 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2498)

(assert (=> d!22209 (= lt!40589 (choose!508 lt!40431 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40435))))

(assert (=> d!22209 (contains!747 lt!40431 lt!40435)))

(assert (=> d!22209 (= (addStillContains!58 lt!40431 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40435) lt!40589)))

(declare-fun bs!3627 () Bool)

(assert (= bs!3627 d!22209))

(assert (=> bs!3627 m!89913))

(assert (=> bs!3627 m!89913))

(assert (=> bs!3627 m!89915))

(declare-fun m!90179 () Bool)

(assert (=> bs!3627 m!90179))

(declare-fun m!90181 () Bool)

(assert (=> bs!3627 m!90181))

(assert (=> b!85462 d!22209))

(declare-fun d!22211 () Bool)

(assert (=> d!22211 (= (apply!82 lt!40438 lt!40433) (get!1207 (getValueByKey!141 (toList!736 lt!40438) lt!40433)))))

(declare-fun bs!3628 () Bool)

(assert (= bs!3628 d!22211))

(declare-fun m!90183 () Bool)

(assert (=> bs!3628 m!90183))

(assert (=> bs!3628 m!90183))

(declare-fun m!90185 () Bool)

(assert (=> bs!3628 m!90185))

(assert (=> b!85462 d!22211))

(declare-fun d!22213 () Bool)

(assert (=> d!22213 (= (apply!82 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40423) (apply!82 lt!40443 lt!40423))))

(declare-fun lt!40590 () Unit!2498)

(assert (=> d!22213 (= lt!40590 (choose!507 lt!40443 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40423))))

(declare-fun e!55895 () Bool)

(assert (=> d!22213 e!55895))

(declare-fun res!44125 () Bool)

(assert (=> d!22213 (=> (not res!44125) (not e!55895))))

(assert (=> d!22213 (= res!44125 (contains!747 lt!40443 lt!40423))))

(assert (=> d!22213 (= (addApplyDifferent!58 lt!40443 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40423) lt!40590)))

(declare-fun b!85703 () Bool)

(assert (=> b!85703 (= e!55895 (not (= lt!40423 lt!40426)))))

(assert (= (and d!22213 res!44125) b!85703))

(declare-fun m!90187 () Bool)

(assert (=> d!22213 m!90187))

(declare-fun m!90189 () Bool)

(assert (=> d!22213 m!90189))

(assert (=> d!22213 m!89921))

(assert (=> d!22213 m!89939))

(assert (=> d!22213 m!89921))

(assert (=> d!22213 m!89937))

(assert (=> b!85462 d!22213))

(declare-fun d!22215 () Bool)

(assert (=> d!22215 (= (map!1196 (_2!1104 lt!40512)) (getCurrentListMap!430 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))))))

(declare-fun bs!3629 () Bool)

(assert (= bs!3629 d!22215))

(declare-fun m!90191 () Bool)

(assert (=> bs!3629 m!90191))

(assert (=> bm!8120 d!22215))

(declare-fun d!22217 () Bool)

(assert (=> d!22217 (= (apply!82 lt!40439 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3630 () Bool)

(assert (= bs!3630 d!22217))

(declare-fun m!90193 () Bool)

(assert (=> bs!3630 m!90193))

(assert (=> bs!3630 m!90193))

(declare-fun m!90195 () Bool)

(assert (=> bs!3630 m!90195))

(assert (=> b!85479 d!22217))

(declare-fun d!22219 () Bool)

(assert (=> d!22219 (= (inRange!0 (ite c!13893 (ite c!13886 (index!3086 lt!40532) (ite c!13895 (index!3085 lt!40520) (index!3088 lt!40520))) (ite c!13885 (index!3086 lt!40526) (ite c!13894 (index!3085 lt!40534) (index!3088 lt!40534)))) (mask!6365 newMap!16)) (and (bvsge (ite c!13893 (ite c!13886 (index!3086 lt!40532) (ite c!13895 (index!3085 lt!40520) (index!3088 lt!40520))) (ite c!13885 (index!3086 lt!40526) (ite c!13894 (index!3085 lt!40534) (index!3088 lt!40534)))) #b00000000000000000000000000000000) (bvslt (ite c!13893 (ite c!13886 (index!3086 lt!40532) (ite c!13895 (index!3085 lt!40520) (index!3088 lt!40520))) (ite c!13885 (index!3086 lt!40526) (ite c!13894 (index!3085 lt!40534) (index!3088 lt!40534)))) (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8110 d!22219))

(declare-fun d!22221 () Bool)

(assert (=> d!22221 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40593 () Unit!2498)

(declare-fun choose!509 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2498)

(assert (=> d!22221 (= lt!40593 (choose!509 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40530 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40194 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22221 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22221 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40530 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40194 (defaultEntry!2337 newMap!16)) lt!40593)))

(declare-fun bs!3631 () Bool)

(assert (= bs!3631 d!22221))

(assert (=> bs!3631 m!89901))

(declare-fun m!90197 () Bool)

(assert (=> bs!3631 m!90197))

(assert (=> bs!3631 m!89901))

(declare-fun m!90199 () Bool)

(assert (=> bs!3631 m!90199))

(declare-fun m!90201 () Bool)

(assert (=> bs!3631 m!90201))

(declare-fun m!90203 () Bool)

(assert (=> bs!3631 m!90203))

(assert (=> b!85573 d!22221))

(declare-fun d!22223 () Bool)

(assert (=> d!22223 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40596 () Unit!2498)

(declare-fun choose!510 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2498)

(assert (=> d!22223 (= lt!40596 (choose!510 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40514 (zeroValue!2229 newMap!16) lt!40194 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22223 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22223 (= (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40514 (zeroValue!2229 newMap!16) lt!40194 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)) lt!40596)))

(declare-fun bs!3632 () Bool)

(assert (= bs!3632 d!22223))

(declare-fun m!90205 () Bool)

(assert (=> bs!3632 m!90205))

(assert (=> bs!3632 m!90203))

(assert (=> bs!3632 m!89901))

(declare-fun m!90207 () Bool)

(assert (=> bs!3632 m!90207))

(assert (=> bs!3632 m!89901))

(declare-fun m!90209 () Bool)

(assert (=> bs!3632 m!90209))

(assert (=> b!85600 d!22223))

(declare-fun d!22225 () Bool)

(assert (=> d!22225 (= (apply!82 lt!40439 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1207 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3633 () Bool)

(assert (= bs!3633 d!22225))

(assert (=> bs!3633 m!89759))

(declare-fun m!90211 () Bool)

(assert (=> bs!3633 m!90211))

(assert (=> bs!3633 m!90211))

(declare-fun m!90213 () Bool)

(assert (=> bs!3633 m!90213))

(assert (=> b!85481 d!22225))

(declare-fun d!22227 () Bool)

(declare-fun c!13915 () Bool)

(assert (=> d!22227 (= c!13915 ((_ is ValueCellFull!923) (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55896 () V!3025)

(assert (=> d!22227 (= (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55896)))

(declare-fun b!85704 () Bool)

(assert (=> b!85704 (= e!55896 (get!1205 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85705 () Bool)

(assert (=> b!85705 (= e!55896 (get!1206 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22227 c!13915) b!85704))

(assert (= (and d!22227 (not c!13915)) b!85705))

(assert (=> b!85704 m!89795))

(assert (=> b!85704 m!89621))

(declare-fun m!90215 () Bool)

(assert (=> b!85704 m!90215))

(assert (=> b!85705 m!89795))

(assert (=> b!85705 m!89621))

(declare-fun m!90217 () Bool)

(assert (=> b!85705 m!90217))

(assert (=> b!85481 d!22227))

(declare-fun d!22229 () Bool)

(declare-fun e!55898 () Bool)

(assert (=> d!22229 e!55898))

(declare-fun res!44126 () Bool)

(assert (=> d!22229 (=> res!44126 e!55898)))

(declare-fun lt!40598 () Bool)

(assert (=> d!22229 (= res!44126 (not lt!40598))))

(declare-fun lt!40600 () Bool)

(assert (=> d!22229 (= lt!40598 lt!40600)))

(declare-fun lt!40597 () Unit!2498)

(declare-fun e!55897 () Unit!2498)

(assert (=> d!22229 (= lt!40597 e!55897)))

(declare-fun c!13916 () Bool)

(assert (=> d!22229 (= c!13916 lt!40600)))

(assert (=> d!22229 (= lt!40600 (containsKey!144 (toList!736 lt!40372) (_1!1105 lt!40182)))))

(assert (=> d!22229 (= (contains!747 lt!40372 (_1!1105 lt!40182)) lt!40598)))

(declare-fun b!85706 () Bool)

(declare-fun lt!40599 () Unit!2498)

(assert (=> b!85706 (= e!55897 lt!40599)))

(assert (=> b!85706 (= lt!40599 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40372) (_1!1105 lt!40182)))))

(assert (=> b!85706 (isDefined!93 (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182)))))

(declare-fun b!85707 () Bool)

(declare-fun Unit!2510 () Unit!2498)

(assert (=> b!85707 (= e!55897 Unit!2510)))

(declare-fun b!85708 () Bool)

(assert (=> b!85708 (= e!55898 (isDefined!93 (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182))))))

(assert (= (and d!22229 c!13916) b!85706))

(assert (= (and d!22229 (not c!13916)) b!85707))

(assert (= (and d!22229 (not res!44126)) b!85708))

(declare-fun m!90219 () Bool)

(assert (=> d!22229 m!90219))

(declare-fun m!90221 () Bool)

(assert (=> b!85706 m!90221))

(assert (=> b!85706 m!89875))

(assert (=> b!85706 m!89875))

(declare-fun m!90223 () Bool)

(assert (=> b!85706 m!90223))

(assert (=> b!85708 m!89875))

(assert (=> b!85708 m!89875))

(assert (=> b!85708 m!90223))

(assert (=> d!22139 d!22229))

(declare-fun b!85712 () Bool)

(declare-fun e!55900 () Option!147)

(assert (=> b!85712 (= e!55900 None!145)))

(declare-fun d!22231 () Bool)

(declare-fun c!13917 () Bool)

(assert (=> d!22231 (= c!13917 (and ((_ is Cons!1505) lt!40370) (= (_1!1105 (h!2096 lt!40370)) (_1!1105 lt!40182))))))

(declare-fun e!55899 () Option!147)

(assert (=> d!22231 (= (getValueByKey!141 lt!40370 (_1!1105 lt!40182)) e!55899)))

(declare-fun b!85710 () Bool)

(assert (=> b!85710 (= e!55899 e!55900)))

(declare-fun c!13918 () Bool)

(assert (=> b!85710 (= c!13918 (and ((_ is Cons!1505) lt!40370) (not (= (_1!1105 (h!2096 lt!40370)) (_1!1105 lt!40182)))))))

(declare-fun b!85711 () Bool)

(assert (=> b!85711 (= e!55900 (getValueByKey!141 (t!5222 lt!40370) (_1!1105 lt!40182)))))

(declare-fun b!85709 () Bool)

(assert (=> b!85709 (= e!55899 (Some!146 (_2!1105 (h!2096 lt!40370))))))

(assert (= (and d!22231 c!13917) b!85709))

(assert (= (and d!22231 (not c!13917)) b!85710))

(assert (= (and b!85710 c!13918) b!85711))

(assert (= (and b!85710 (not c!13918)) b!85712))

(declare-fun m!90225 () Bool)

(assert (=> b!85711 m!90225))

(assert (=> d!22139 d!22231))

(declare-fun d!22233 () Bool)

(assert (=> d!22233 (= (getValueByKey!141 lt!40370 (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182)))))

(declare-fun lt!40603 () Unit!2498)

(declare-fun choose!511 (List!1509 (_ BitVec 64) V!3025) Unit!2498)

(assert (=> d!22233 (= lt!40603 (choose!511 lt!40370 (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(declare-fun e!55903 () Bool)

(assert (=> d!22233 e!55903))

(declare-fun res!44131 () Bool)

(assert (=> d!22233 (=> (not res!44131) (not e!55903))))

(declare-fun isStrictlySorted!285 (List!1509) Bool)

(assert (=> d!22233 (= res!44131 (isStrictlySorted!285 lt!40370))))

(assert (=> d!22233 (= (lemmaContainsTupThenGetReturnValue!58 lt!40370 (_1!1105 lt!40182) (_2!1105 lt!40182)) lt!40603)))

(declare-fun b!85717 () Bool)

(declare-fun res!44132 () Bool)

(assert (=> b!85717 (=> (not res!44132) (not e!55903))))

(assert (=> b!85717 (= res!44132 (containsKey!144 lt!40370 (_1!1105 lt!40182)))))

(declare-fun b!85718 () Bool)

(assert (=> b!85718 (= e!55903 (contains!749 lt!40370 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(assert (= (and d!22233 res!44131) b!85717))

(assert (= (and b!85717 res!44132) b!85718))

(assert (=> d!22233 m!89869))

(declare-fun m!90227 () Bool)

(assert (=> d!22233 m!90227))

(declare-fun m!90229 () Bool)

(assert (=> d!22233 m!90229))

(declare-fun m!90231 () Bool)

(assert (=> b!85717 m!90231))

(declare-fun m!90233 () Bool)

(assert (=> b!85718 m!90233))

(assert (=> d!22139 d!22233))

(declare-fun b!85739 () Bool)

(declare-fun e!55917 () List!1509)

(declare-fun call!8134 () List!1509)

(assert (=> b!85739 (= e!55917 call!8134)))

(declare-fun e!55916 () List!1509)

(declare-fun call!8135 () List!1509)

(declare-fun bm!8131 () Bool)

(declare-fun c!13930 () Bool)

(declare-fun $colon$colon!71 (List!1509 tuple2!2188) List!1509)

(assert (=> bm!8131 (= call!8135 ($colon$colon!71 e!55916 (ite c!13930 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182)))))))

(declare-fun c!13929 () Bool)

(assert (=> bm!8131 (= c!13929 c!13930)))

(declare-fun b!85740 () Bool)

(declare-fun c!13928 () Bool)

(assert (=> b!85740 (= c!13928 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 lt!40182))))))

(declare-fun e!55914 () List!1509)

(assert (=> b!85740 (= e!55917 e!55914)))

(declare-fun b!85741 () Bool)

(declare-fun e!55918 () Bool)

(declare-fun lt!40606 () List!1509)

(assert (=> b!85741 (= e!55918 (contains!749 lt!40606 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!85742 () Bool)

(declare-fun res!44137 () Bool)

(assert (=> b!85742 (=> (not res!44137) (not e!55918))))

(assert (=> b!85742 (= res!44137 (containsKey!144 lt!40606 (_1!1105 lt!40182)))))

(declare-fun bm!8132 () Bool)

(assert (=> bm!8132 (= call!8134 call!8135)))

(declare-fun b!85743 () Bool)

(assert (=> b!85743 (= e!55916 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40187)) (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(declare-fun b!85744 () Bool)

(declare-fun c!13927 () Bool)

(assert (=> b!85744 (= e!55916 (ite c!13927 (t!5222 (toList!736 lt!40187)) (ite c!13928 (Cons!1505 (h!2096 (toList!736 lt!40187)) (t!5222 (toList!736 lt!40187))) Nil!1506)))))

(declare-fun b!85745 () Bool)

(declare-fun e!55915 () List!1509)

(assert (=> b!85745 (= e!55915 call!8135)))

(declare-fun bm!8133 () Bool)

(declare-fun call!8136 () List!1509)

(assert (=> bm!8133 (= call!8136 call!8134)))

(declare-fun d!22235 () Bool)

(assert (=> d!22235 e!55918))

(declare-fun res!44138 () Bool)

(assert (=> d!22235 (=> (not res!44138) (not e!55918))))

(assert (=> d!22235 (= res!44138 (isStrictlySorted!285 lt!40606))))

(assert (=> d!22235 (= lt!40606 e!55915)))

(assert (=> d!22235 (= c!13930 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 lt!40182))))))

(assert (=> d!22235 (isStrictlySorted!285 (toList!736 lt!40187))))

(assert (=> d!22235 (= (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 lt!40182) (_2!1105 lt!40182)) lt!40606)))

(declare-fun b!85746 () Bool)

(assert (=> b!85746 (= e!55914 call!8136)))

(declare-fun b!85747 () Bool)

(assert (=> b!85747 (= e!55915 e!55917)))

(assert (=> b!85747 (= c!13927 (and ((_ is Cons!1505) (toList!736 lt!40187)) (= (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 lt!40182))))))

(declare-fun b!85748 () Bool)

(assert (=> b!85748 (= e!55914 call!8136)))

(assert (= (and d!22235 c!13930) b!85745))

(assert (= (and d!22235 (not c!13930)) b!85747))

(assert (= (and b!85747 c!13927) b!85739))

(assert (= (and b!85747 (not c!13927)) b!85740))

(assert (= (and b!85740 c!13928) b!85746))

(assert (= (and b!85740 (not c!13928)) b!85748))

(assert (= (or b!85746 b!85748) bm!8133))

(assert (= (or b!85739 bm!8133) bm!8132))

(assert (= (or b!85745 bm!8132) bm!8131))

(assert (= (and bm!8131 c!13929) b!85743))

(assert (= (and bm!8131 (not c!13929)) b!85744))

(assert (= (and d!22235 res!44138) b!85742))

(assert (= (and b!85742 res!44137) b!85741))

(declare-fun m!90235 () Bool)

(assert (=> b!85741 m!90235))

(declare-fun m!90237 () Bool)

(assert (=> b!85742 m!90237))

(declare-fun m!90239 () Bool)

(assert (=> bm!8131 m!90239))

(declare-fun m!90241 () Bool)

(assert (=> d!22235 m!90241))

(declare-fun m!90243 () Bool)

(assert (=> d!22235 m!90243))

(declare-fun m!90245 () Bool)

(assert (=> b!85743 m!90245))

(assert (=> d!22139 d!22235))

(declare-fun b!85752 () Bool)

(declare-fun e!55920 () Option!147)

(assert (=> b!85752 (= e!55920 None!145)))

(declare-fun d!22237 () Bool)

(declare-fun c!13931 () Bool)

(assert (=> d!22237 (= c!13931 (and ((_ is Cons!1505) (toList!736 lt!40353)) (= (_1!1105 (h!2096 (toList!736 lt!40353))) (_1!1105 lt!40197))))))

(declare-fun e!55919 () Option!147)

(assert (=> d!22237 (= (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197)) e!55919)))

(declare-fun b!85750 () Bool)

(assert (=> b!85750 (= e!55919 e!55920)))

(declare-fun c!13932 () Bool)

(assert (=> b!85750 (= c!13932 (and ((_ is Cons!1505) (toList!736 lt!40353)) (not (= (_1!1105 (h!2096 (toList!736 lt!40353))) (_1!1105 lt!40197)))))))

(declare-fun b!85751 () Bool)

(assert (=> b!85751 (= e!55920 (getValueByKey!141 (t!5222 (toList!736 lt!40353)) (_1!1105 lt!40197)))))

(declare-fun b!85749 () Bool)

(assert (=> b!85749 (= e!55919 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40353)))))))

(assert (= (and d!22237 c!13931) b!85749))

(assert (= (and d!22237 (not c!13931)) b!85750))

(assert (= (and b!85750 c!13932) b!85751))

(assert (= (and b!85750 (not c!13932)) b!85752))

(declare-fun m!90247 () Bool)

(assert (=> b!85751 m!90247))

(assert (=> b!85407 d!22237))

(declare-fun d!22239 () Bool)

(declare-fun res!44139 () Bool)

(declare-fun e!55921 () Bool)

(assert (=> d!22239 (=> (not res!44139) (not e!55921))))

(assert (=> d!22239 (= res!44139 (simpleValid!58 (v!2648 (underlying!292 thiss!992))))))

(assert (=> d!22239 (= (valid!335 (v!2648 (underlying!292 thiss!992))) e!55921)))

(declare-fun b!85753 () Bool)

(declare-fun res!44140 () Bool)

(assert (=> b!85753 (=> (not res!44140) (not e!55921))))

(assert (=> b!85753 (= res!44140 (= (arrayCountValidKeys!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))) (_size!426 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85754 () Bool)

(declare-fun res!44141 () Bool)

(assert (=> b!85754 (=> (not res!44141) (not e!55921))))

(assert (=> b!85754 (= res!44141 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!85755 () Bool)

(assert (=> b!85755 (= e!55921 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!22239 res!44139) b!85753))

(assert (= (and b!85753 res!44140) b!85754))

(assert (= (and b!85754 res!44141) b!85755))

(declare-fun m!90249 () Bool)

(assert (=> d!22239 m!90249))

(declare-fun m!90251 () Bool)

(assert (=> b!85753 m!90251))

(declare-fun m!90253 () Bool)

(assert (=> b!85754 m!90253))

(declare-fun m!90255 () Bool)

(assert (=> b!85755 m!90255))

(assert (=> d!22159 d!22239))

(assert (=> bm!8113 d!22147))

(assert (=> d!22117 d!22123))

(declare-fun d!22241 () Bool)

(assert (=> d!22241 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) from!355 Nil!1505)))

(assert (=> d!22241 true))

(declare-fun _$71!114 () Unit!2498)

(assert (=> d!22241 (= (choose!39 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!114)))

(declare-fun bs!3634 () Bool)

(assert (= bs!3634 d!22241))

(assert (=> bs!3634 m!89567))

(assert (=> d!22117 d!22241))

(declare-fun d!22243 () Bool)

(declare-fun e!55923 () Bool)

(assert (=> d!22243 e!55923))

(declare-fun res!44142 () Bool)

(assert (=> d!22243 (=> res!44142 e!55923)))

(declare-fun lt!40608 () Bool)

(assert (=> d!22243 (= res!44142 (not lt!40608))))

(declare-fun lt!40610 () Bool)

(assert (=> d!22243 (= lt!40608 lt!40610)))

(declare-fun lt!40607 () Unit!2498)

(declare-fun e!55922 () Unit!2498)

(assert (=> d!22243 (= lt!40607 e!55922)))

(declare-fun c!13933 () Bool)

(assert (=> d!22243 (= c!13933 lt!40610)))

(assert (=> d!22243 (= lt!40610 (containsKey!144 (toList!736 lt!40368) (_1!1105 lt!40182)))))

(assert (=> d!22243 (= (contains!747 lt!40368 (_1!1105 lt!40182)) lt!40608)))

(declare-fun b!85756 () Bool)

(declare-fun lt!40609 () Unit!2498)

(assert (=> b!85756 (= e!55922 lt!40609)))

(assert (=> b!85756 (= lt!40609 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40368) (_1!1105 lt!40182)))))

(assert (=> b!85756 (isDefined!93 (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182)))))

(declare-fun b!85757 () Bool)

(declare-fun Unit!2511 () Unit!2498)

(assert (=> b!85757 (= e!55922 Unit!2511)))

(declare-fun b!85758 () Bool)

(assert (=> b!85758 (= e!55923 (isDefined!93 (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182))))))

(assert (= (and d!22243 c!13933) b!85756))

(assert (= (and d!22243 (not c!13933)) b!85757))

(assert (= (and d!22243 (not res!44142)) b!85758))

(declare-fun m!90257 () Bool)

(assert (=> d!22243 m!90257))

(declare-fun m!90259 () Bool)

(assert (=> b!85756 m!90259))

(assert (=> b!85756 m!89863))

(assert (=> b!85756 m!89863))

(declare-fun m!90261 () Bool)

(assert (=> b!85756 m!90261))

(assert (=> b!85758 m!89863))

(assert (=> b!85758 m!89863))

(assert (=> b!85758 m!90261))

(assert (=> d!22137 d!22243))

(declare-fun b!85762 () Bool)

(declare-fun e!55925 () Option!147)

(assert (=> b!85762 (= e!55925 None!145)))

(declare-fun d!22245 () Bool)

(declare-fun c!13934 () Bool)

(assert (=> d!22245 (= c!13934 (and ((_ is Cons!1505) lt!40366) (= (_1!1105 (h!2096 lt!40366)) (_1!1105 lt!40182))))))

(declare-fun e!55924 () Option!147)

(assert (=> d!22245 (= (getValueByKey!141 lt!40366 (_1!1105 lt!40182)) e!55924)))

(declare-fun b!85760 () Bool)

(assert (=> b!85760 (= e!55924 e!55925)))

(declare-fun c!13935 () Bool)

(assert (=> b!85760 (= c!13935 (and ((_ is Cons!1505) lt!40366) (not (= (_1!1105 (h!2096 lt!40366)) (_1!1105 lt!40182)))))))

(declare-fun b!85761 () Bool)

(assert (=> b!85761 (= e!55925 (getValueByKey!141 (t!5222 lt!40366) (_1!1105 lt!40182)))))

(declare-fun b!85759 () Bool)

(assert (=> b!85759 (= e!55924 (Some!146 (_2!1105 (h!2096 lt!40366))))))

(assert (= (and d!22245 c!13934) b!85759))

(assert (= (and d!22245 (not c!13934)) b!85760))

(assert (= (and b!85760 c!13935) b!85761))

(assert (= (and b!85760 (not c!13935)) b!85762))

(declare-fun m!90263 () Bool)

(assert (=> b!85761 m!90263))

(assert (=> d!22137 d!22245))

(declare-fun d!22247 () Bool)

(assert (=> d!22247 (= (getValueByKey!141 lt!40366 (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182)))))

(declare-fun lt!40611 () Unit!2498)

(assert (=> d!22247 (= lt!40611 (choose!511 lt!40366 (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(declare-fun e!55926 () Bool)

(assert (=> d!22247 e!55926))

(declare-fun res!44143 () Bool)

(assert (=> d!22247 (=> (not res!44143) (not e!55926))))

(assert (=> d!22247 (= res!44143 (isStrictlySorted!285 lt!40366))))

(assert (=> d!22247 (= (lemmaContainsTupThenGetReturnValue!58 lt!40366 (_1!1105 lt!40182) (_2!1105 lt!40182)) lt!40611)))

(declare-fun b!85763 () Bool)

(declare-fun res!44144 () Bool)

(assert (=> b!85763 (=> (not res!44144) (not e!55926))))

(assert (=> b!85763 (= res!44144 (containsKey!144 lt!40366 (_1!1105 lt!40182)))))

(declare-fun b!85764 () Bool)

(assert (=> b!85764 (= e!55926 (contains!749 lt!40366 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(assert (= (and d!22247 res!44143) b!85763))

(assert (= (and b!85763 res!44144) b!85764))

(assert (=> d!22247 m!89857))

(declare-fun m!90265 () Bool)

(assert (=> d!22247 m!90265))

(declare-fun m!90267 () Bool)

(assert (=> d!22247 m!90267))

(declare-fun m!90269 () Bool)

(assert (=> b!85763 m!90269))

(declare-fun m!90271 () Bool)

(assert (=> b!85764 m!90271))

(assert (=> d!22137 d!22247))

(declare-fun b!85765 () Bool)

(declare-fun e!55930 () List!1509)

(declare-fun call!8137 () List!1509)

(assert (=> b!85765 (= e!55930 call!8137)))

(declare-fun c!13939 () Bool)

(declare-fun call!8138 () List!1509)

(declare-fun e!55929 () List!1509)

(declare-fun bm!8134 () Bool)

(assert (=> bm!8134 (= call!8138 ($colon$colon!71 e!55929 (ite c!13939 (h!2096 (toList!736 lt!40199)) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182)))))))

(declare-fun c!13938 () Bool)

(assert (=> bm!8134 (= c!13938 c!13939)))

(declare-fun b!85766 () Bool)

(declare-fun c!13937 () Bool)

(assert (=> b!85766 (= c!13937 (and ((_ is Cons!1505) (toList!736 lt!40199)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40199))) (_1!1105 lt!40182))))))

(declare-fun e!55927 () List!1509)

(assert (=> b!85766 (= e!55930 e!55927)))

(declare-fun b!85767 () Bool)

(declare-fun e!55931 () Bool)

(declare-fun lt!40612 () List!1509)

(assert (=> b!85767 (= e!55931 (contains!749 lt!40612 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!85768 () Bool)

(declare-fun res!44145 () Bool)

(assert (=> b!85768 (=> (not res!44145) (not e!55931))))

(assert (=> b!85768 (= res!44145 (containsKey!144 lt!40612 (_1!1105 lt!40182)))))

(declare-fun bm!8135 () Bool)

(assert (=> bm!8135 (= call!8137 call!8138)))

(declare-fun b!85769 () Bool)

(assert (=> b!85769 (= e!55929 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40199)) (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(declare-fun b!85770 () Bool)

(declare-fun c!13936 () Bool)

(assert (=> b!85770 (= e!55929 (ite c!13936 (t!5222 (toList!736 lt!40199)) (ite c!13937 (Cons!1505 (h!2096 (toList!736 lt!40199)) (t!5222 (toList!736 lt!40199))) Nil!1506)))))

(declare-fun b!85771 () Bool)

(declare-fun e!55928 () List!1509)

(assert (=> b!85771 (= e!55928 call!8138)))

(declare-fun bm!8136 () Bool)

(declare-fun call!8139 () List!1509)

(assert (=> bm!8136 (= call!8139 call!8137)))

(declare-fun d!22249 () Bool)

(assert (=> d!22249 e!55931))

(declare-fun res!44146 () Bool)

(assert (=> d!22249 (=> (not res!44146) (not e!55931))))

(assert (=> d!22249 (= res!44146 (isStrictlySorted!285 lt!40612))))

(assert (=> d!22249 (= lt!40612 e!55928)))

(assert (=> d!22249 (= c!13939 (and ((_ is Cons!1505) (toList!736 lt!40199)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40199))) (_1!1105 lt!40182))))))

(assert (=> d!22249 (isStrictlySorted!285 (toList!736 lt!40199))))

(assert (=> d!22249 (= (insertStrictlySorted!61 (toList!736 lt!40199) (_1!1105 lt!40182) (_2!1105 lt!40182)) lt!40612)))

(declare-fun b!85772 () Bool)

(assert (=> b!85772 (= e!55927 call!8139)))

(declare-fun b!85773 () Bool)

(assert (=> b!85773 (= e!55928 e!55930)))

(assert (=> b!85773 (= c!13936 (and ((_ is Cons!1505) (toList!736 lt!40199)) (= (_1!1105 (h!2096 (toList!736 lt!40199))) (_1!1105 lt!40182))))))

(declare-fun b!85774 () Bool)

(assert (=> b!85774 (= e!55927 call!8139)))

(assert (= (and d!22249 c!13939) b!85771))

(assert (= (and d!22249 (not c!13939)) b!85773))

(assert (= (and b!85773 c!13936) b!85765))

(assert (= (and b!85773 (not c!13936)) b!85766))

(assert (= (and b!85766 c!13937) b!85772))

(assert (= (and b!85766 (not c!13937)) b!85774))

(assert (= (or b!85772 b!85774) bm!8136))

(assert (= (or b!85765 bm!8136) bm!8135))

(assert (= (or b!85771 bm!8135) bm!8134))

(assert (= (and bm!8134 c!13938) b!85769))

(assert (= (and bm!8134 (not c!13938)) b!85770))

(assert (= (and d!22249 res!44146) b!85768))

(assert (= (and b!85768 res!44145) b!85767))

(declare-fun m!90273 () Bool)

(assert (=> b!85767 m!90273))

(declare-fun m!90275 () Bool)

(assert (=> b!85768 m!90275))

(declare-fun m!90277 () Bool)

(assert (=> bm!8134 m!90277))

(declare-fun m!90279 () Bool)

(assert (=> d!22249 m!90279))

(declare-fun m!90281 () Bool)

(assert (=> d!22249 m!90281))

(declare-fun m!90283 () Bool)

(assert (=> b!85769 m!90283))

(assert (=> d!22137 d!22249))

(declare-fun d!22251 () Bool)

(declare-fun e!55934 () Bool)

(assert (=> d!22251 e!55934))

(declare-fun c!13942 () Bool)

(assert (=> d!22251 (= c!13942 (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!22251 true))

(declare-fun _$29!108 () Unit!2498)

(assert (=> d!22251 (= (choose!505 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) _$29!108)))

(declare-fun b!85779 () Bool)

(assert (=> b!85779 (= e!55934 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85780 () Bool)

(assert (=> b!85780 (= e!55934 (ite (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22251 c!13942) b!85779))

(assert (= (and d!22251 (not c!13942)) b!85780))

(assert (=> b!85779 m!89569))

(assert (=> b!85779 m!89573))

(assert (=> d!22121 d!22251))

(assert (=> d!22121 d!22143))

(assert (=> b!85348 d!22119))

(declare-fun d!22253 () Bool)

(assert (=> d!22253 (= (get!1206 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85616 d!22253))

(declare-fun d!22255 () Bool)

(declare-fun e!55936 () Bool)

(assert (=> d!22255 e!55936))

(declare-fun res!44147 () Bool)

(assert (=> d!22255 (=> res!44147 e!55936)))

(declare-fun lt!40614 () Bool)

(assert (=> d!22255 (= res!44147 (not lt!40614))))

(declare-fun lt!40616 () Bool)

(assert (=> d!22255 (= lt!40614 lt!40616)))

(declare-fun lt!40613 () Unit!2498)

(declare-fun e!55935 () Unit!2498)

(assert (=> d!22255 (= lt!40613 e!55935)))

(declare-fun c!13943 () Bool)

(assert (=> d!22255 (= c!13943 lt!40616)))

(assert (=> d!22255 (= lt!40616 (containsKey!144 (toList!736 lt!40376) (_1!1105 lt!40197)))))

(assert (=> d!22255 (= (contains!747 lt!40376 (_1!1105 lt!40197)) lt!40614)))

(declare-fun b!85781 () Bool)

(declare-fun lt!40615 () Unit!2498)

(assert (=> b!85781 (= e!55935 lt!40615)))

(assert (=> b!85781 (= lt!40615 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40376) (_1!1105 lt!40197)))))

(assert (=> b!85781 (isDefined!93 (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197)))))

(declare-fun b!85782 () Bool)

(declare-fun Unit!2512 () Unit!2498)

(assert (=> b!85782 (= e!55935 Unit!2512)))

(declare-fun b!85783 () Bool)

(assert (=> b!85783 (= e!55936 (isDefined!93 (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197))))))

(assert (= (and d!22255 c!13943) b!85781))

(assert (= (and d!22255 (not c!13943)) b!85782))

(assert (= (and d!22255 (not res!44147)) b!85783))

(declare-fun m!90285 () Bool)

(assert (=> d!22255 m!90285))

(declare-fun m!90287 () Bool)

(assert (=> b!85781 m!90287))

(assert (=> b!85781 m!89887))

(assert (=> b!85781 m!89887))

(declare-fun m!90289 () Bool)

(assert (=> b!85781 m!90289))

(assert (=> b!85783 m!89887))

(assert (=> b!85783 m!89887))

(assert (=> b!85783 m!90289))

(assert (=> d!22141 d!22255))

(declare-fun b!85787 () Bool)

(declare-fun e!55938 () Option!147)

(assert (=> b!85787 (= e!55938 None!145)))

(declare-fun d!22257 () Bool)

(declare-fun c!13944 () Bool)

(assert (=> d!22257 (= c!13944 (and ((_ is Cons!1505) lt!40374) (= (_1!1105 (h!2096 lt!40374)) (_1!1105 lt!40197))))))

(declare-fun e!55937 () Option!147)

(assert (=> d!22257 (= (getValueByKey!141 lt!40374 (_1!1105 lt!40197)) e!55937)))

(declare-fun b!85785 () Bool)

(assert (=> b!85785 (= e!55937 e!55938)))

(declare-fun c!13945 () Bool)

(assert (=> b!85785 (= c!13945 (and ((_ is Cons!1505) lt!40374) (not (= (_1!1105 (h!2096 lt!40374)) (_1!1105 lt!40197)))))))

(declare-fun b!85786 () Bool)

(assert (=> b!85786 (= e!55938 (getValueByKey!141 (t!5222 lt!40374) (_1!1105 lt!40197)))))

(declare-fun b!85784 () Bool)

(assert (=> b!85784 (= e!55937 (Some!146 (_2!1105 (h!2096 lt!40374))))))

(assert (= (and d!22257 c!13944) b!85784))

(assert (= (and d!22257 (not c!13944)) b!85785))

(assert (= (and b!85785 c!13945) b!85786))

(assert (= (and b!85785 (not c!13945)) b!85787))

(declare-fun m!90291 () Bool)

(assert (=> b!85786 m!90291))

(assert (=> d!22141 d!22257))

(declare-fun d!22259 () Bool)

(assert (=> d!22259 (= (getValueByKey!141 lt!40374 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(declare-fun lt!40617 () Unit!2498)

(assert (=> d!22259 (= lt!40617 (choose!511 lt!40374 (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun e!55939 () Bool)

(assert (=> d!22259 e!55939))

(declare-fun res!44148 () Bool)

(assert (=> d!22259 (=> (not res!44148) (not e!55939))))

(assert (=> d!22259 (= res!44148 (isStrictlySorted!285 lt!40374))))

(assert (=> d!22259 (= (lemmaContainsTupThenGetReturnValue!58 lt!40374 (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!40617)))

(declare-fun b!85788 () Bool)

(declare-fun res!44149 () Bool)

(assert (=> b!85788 (=> (not res!44149) (not e!55939))))

(assert (=> b!85788 (= res!44149 (containsKey!144 lt!40374 (_1!1105 lt!40197)))))

(declare-fun b!85789 () Bool)

(assert (=> b!85789 (= e!55939 (contains!749 lt!40374 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22259 res!44148) b!85788))

(assert (= (and b!85788 res!44149) b!85789))

(assert (=> d!22259 m!89881))

(declare-fun m!90293 () Bool)

(assert (=> d!22259 m!90293))

(declare-fun m!90295 () Bool)

(assert (=> d!22259 m!90295))

(declare-fun m!90297 () Bool)

(assert (=> b!85788 m!90297))

(declare-fun m!90299 () Bool)

(assert (=> b!85789 m!90299))

(assert (=> d!22141 d!22259))

(declare-fun b!85790 () Bool)

(declare-fun e!55943 () List!1509)

(declare-fun call!8140 () List!1509)

(assert (=> b!85790 (= e!55943 call!8140)))

(declare-fun bm!8137 () Bool)

(declare-fun c!13949 () Bool)

(declare-fun e!55942 () List!1509)

(declare-fun call!8141 () List!1509)

(assert (=> bm!8137 (= call!8141 ($colon$colon!71 e!55942 (ite c!13949 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))))))

(declare-fun c!13948 () Bool)

(assert (=> bm!8137 (= c!13948 c!13949)))

(declare-fun b!85791 () Bool)

(declare-fun c!13947 () Bool)

(assert (=> b!85791 (= c!13947 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 lt!40197))))))

(declare-fun e!55940 () List!1509)

(assert (=> b!85791 (= e!55943 e!55940)))

(declare-fun b!85792 () Bool)

(declare-fun e!55944 () Bool)

(declare-fun lt!40618 () List!1509)

(assert (=> b!85792 (= e!55944 (contains!749 lt!40618 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!85793 () Bool)

(declare-fun res!44150 () Bool)

(assert (=> b!85793 (=> (not res!44150) (not e!55944))))

(assert (=> b!85793 (= res!44150 (containsKey!144 lt!40618 (_1!1105 lt!40197)))))

(declare-fun bm!8138 () Bool)

(assert (=> bm!8138 (= call!8140 call!8141)))

(declare-fun b!85794 () Bool)

(assert (=> b!85794 (= e!55942 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40187)) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun b!85795 () Bool)

(declare-fun c!13946 () Bool)

(assert (=> b!85795 (= e!55942 (ite c!13946 (t!5222 (toList!736 lt!40187)) (ite c!13947 (Cons!1505 (h!2096 (toList!736 lt!40187)) (t!5222 (toList!736 lt!40187))) Nil!1506)))))

(declare-fun b!85796 () Bool)

(declare-fun e!55941 () List!1509)

(assert (=> b!85796 (= e!55941 call!8141)))

(declare-fun bm!8139 () Bool)

(declare-fun call!8142 () List!1509)

(assert (=> bm!8139 (= call!8142 call!8140)))

(declare-fun d!22261 () Bool)

(assert (=> d!22261 e!55944))

(declare-fun res!44151 () Bool)

(assert (=> d!22261 (=> (not res!44151) (not e!55944))))

(assert (=> d!22261 (= res!44151 (isStrictlySorted!285 lt!40618))))

(assert (=> d!22261 (= lt!40618 e!55941)))

(assert (=> d!22261 (= c!13949 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 lt!40197))))))

(assert (=> d!22261 (isStrictlySorted!285 (toList!736 lt!40187))))

(assert (=> d!22261 (= (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!40618)))

(declare-fun b!85797 () Bool)

(assert (=> b!85797 (= e!55940 call!8142)))

(declare-fun b!85798 () Bool)

(assert (=> b!85798 (= e!55941 e!55943)))

(assert (=> b!85798 (= c!13946 (and ((_ is Cons!1505) (toList!736 lt!40187)) (= (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 lt!40197))))))

(declare-fun b!85799 () Bool)

(assert (=> b!85799 (= e!55940 call!8142)))

(assert (= (and d!22261 c!13949) b!85796))

(assert (= (and d!22261 (not c!13949)) b!85798))

(assert (= (and b!85798 c!13946) b!85790))

(assert (= (and b!85798 (not c!13946)) b!85791))

(assert (= (and b!85791 c!13947) b!85797))

(assert (= (and b!85791 (not c!13947)) b!85799))

(assert (= (or b!85797 b!85799) bm!8139))

(assert (= (or b!85790 bm!8139) bm!8138))

(assert (= (or b!85796 bm!8138) bm!8137))

(assert (= (and bm!8137 c!13948) b!85794))

(assert (= (and bm!8137 (not c!13948)) b!85795))

(assert (= (and d!22261 res!44151) b!85793))

(assert (= (and b!85793 res!44150) b!85792))

(declare-fun m!90301 () Bool)

(assert (=> b!85792 m!90301))

(declare-fun m!90303 () Bool)

(assert (=> b!85793 m!90303))

(declare-fun m!90305 () Bool)

(assert (=> bm!8137 m!90305))

(declare-fun m!90307 () Bool)

(assert (=> d!22261 m!90307))

(assert (=> d!22261 m!90243))

(declare-fun m!90309 () Bool)

(assert (=> b!85794 m!90309))

(assert (=> d!22141 d!22261))

(declare-fun b!85803 () Bool)

(declare-fun e!55946 () Option!147)

(assert (=> b!85803 (= e!55946 None!145)))

(declare-fun d!22263 () Bool)

(declare-fun c!13950 () Bool)

(assert (=> d!22263 (= c!13950 (and ((_ is Cons!1505) (toList!736 lt!40357)) (= (_1!1105 (h!2096 (toList!736 lt!40357))) (_1!1105 lt!40192))))))

(declare-fun e!55945 () Option!147)

(assert (=> d!22263 (= (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192)) e!55945)))

(declare-fun b!85801 () Bool)

(assert (=> b!85801 (= e!55945 e!55946)))

(declare-fun c!13951 () Bool)

(assert (=> b!85801 (= c!13951 (and ((_ is Cons!1505) (toList!736 lt!40357)) (not (= (_1!1105 (h!2096 (toList!736 lt!40357))) (_1!1105 lt!40192)))))))

(declare-fun b!85802 () Bool)

(assert (=> b!85802 (= e!55946 (getValueByKey!141 (t!5222 (toList!736 lt!40357)) (_1!1105 lt!40192)))))

(declare-fun b!85800 () Bool)

(assert (=> b!85800 (= e!55945 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40357)))))))

(assert (= (and d!22263 c!13950) b!85800))

(assert (= (and d!22263 (not c!13950)) b!85801))

(assert (= (and b!85801 c!13951) b!85802))

(assert (= (and b!85801 (not c!13951)) b!85803))

(declare-fun m!90311 () Bool)

(assert (=> b!85802 m!90311))

(assert (=> b!85409 d!22263))

(declare-fun call!8149 () ListLongMap!1441)

(declare-fun bm!8140 () Bool)

(declare-fun call!8146 () ListLongMap!1441)

(declare-fun c!13954 () Bool)

(declare-fun c!13955 () Bool)

(declare-fun call!8144 () ListLongMap!1441)

(declare-fun call!8148 () ListLongMap!1441)

(assert (=> bm!8140 (= call!8148 (+!107 (ite c!13955 call!8149 (ite c!13954 call!8144 call!8146)) (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!22265 () Bool)

(declare-fun e!55947 () Bool)

(assert (=> d!22265 e!55947))

(declare-fun res!44152 () Bool)

(assert (=> d!22265 (=> (not res!44152) (not e!55947))))

(assert (=> d!22265 (= res!44152 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!40636 () ListLongMap!1441)

(declare-fun lt!40619 () ListLongMap!1441)

(assert (=> d!22265 (= lt!40636 lt!40619)))

(declare-fun lt!40633 () Unit!2498)

(declare-fun e!55951 () Unit!2498)

(assert (=> d!22265 (= lt!40633 e!55951)))

(declare-fun c!13952 () Bool)

(declare-fun e!55952 () Bool)

(assert (=> d!22265 (= c!13952 e!55952)))

(declare-fun res!44159 () Bool)

(assert (=> d!22265 (=> (not res!44159) (not e!55952))))

(assert (=> d!22265 (= res!44159 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!55959 () ListLongMap!1441)

(assert (=> d!22265 (= lt!40619 e!55959)))

(assert (=> d!22265 (= c!13955 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22265 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22265 (= (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40636)))

(declare-fun bm!8141 () Bool)

(assert (=> bm!8141 (= call!8146 call!8144)))

(declare-fun b!85804 () Bool)

(declare-fun e!55949 () Bool)

(declare-fun e!55958 () Bool)

(assert (=> b!85804 (= e!55949 e!55958)))

(declare-fun res!44157 () Bool)

(assert (=> b!85804 (=> (not res!44157) (not e!55958))))

(assert (=> b!85804 (= res!44157 (contains!747 lt!40636 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85804 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!85805 () Bool)

(declare-fun lt!40622 () Unit!2498)

(assert (=> b!85805 (= e!55951 lt!40622)))

(declare-fun lt!40628 () ListLongMap!1441)

(assert (=> b!85805 (= lt!40628 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40624 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40624 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40632 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40632 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40627 () Unit!2498)

(assert (=> b!85805 (= lt!40627 (addStillContains!58 lt!40628 lt!40624 (zeroValue!2229 newMap!16) lt!40632))))

(assert (=> b!85805 (contains!747 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))) lt!40632)))

(declare-fun lt!40629 () Unit!2498)

(assert (=> b!85805 (= lt!40629 lt!40627)))

(declare-fun lt!40640 () ListLongMap!1441)

(assert (=> b!85805 (= lt!40640 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40623 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40623 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40620 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40620 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40639 () Unit!2498)

(assert (=> b!85805 (= lt!40639 (addApplyDifferent!58 lt!40640 lt!40623 (minValue!2229 newMap!16) lt!40620))))

(assert (=> b!85805 (= (apply!82 (+!107 lt!40640 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))) lt!40620) (apply!82 lt!40640 lt!40620))))

(declare-fun lt!40621 () Unit!2498)

(assert (=> b!85805 (= lt!40621 lt!40639)))

(declare-fun lt!40634 () ListLongMap!1441)

(assert (=> b!85805 (= lt!40634 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40625 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40625 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40631 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40631 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40637 () Unit!2498)

(assert (=> b!85805 (= lt!40637 (addApplyDifferent!58 lt!40634 lt!40625 (zeroValue!2229 newMap!16) lt!40631))))

(assert (=> b!85805 (= (apply!82 (+!107 lt!40634 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))) lt!40631) (apply!82 lt!40634 lt!40631))))

(declare-fun lt!40638 () Unit!2498)

(assert (=> b!85805 (= lt!40638 lt!40637)))

(declare-fun lt!40635 () ListLongMap!1441)

(assert (=> b!85805 (= lt!40635 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40626 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40626 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40630 () (_ BitVec 64))

(assert (=> b!85805 (= lt!40630 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85805 (= lt!40622 (addApplyDifferent!58 lt!40635 lt!40626 (minValue!2229 newMap!16) lt!40630))))

(assert (=> b!85805 (= (apply!82 (+!107 lt!40635 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))) lt!40630) (apply!82 lt!40635 lt!40630))))

(declare-fun bm!8142 () Bool)

(assert (=> bm!8142 (= call!8144 call!8149)))

(declare-fun b!85806 () Bool)

(declare-fun res!44155 () Bool)

(assert (=> b!85806 (=> (not res!44155) (not e!55947))))

(assert (=> b!85806 (= res!44155 e!55949)))

(declare-fun res!44154 () Bool)

(assert (=> b!85806 (=> res!44154 e!55949)))

(declare-fun e!55956 () Bool)

(assert (=> b!85806 (= res!44154 (not e!55956))))

(declare-fun res!44156 () Bool)

(assert (=> b!85806 (=> (not res!44156) (not e!55956))))

(assert (=> b!85806 (= res!44156 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!85807 () Bool)

(declare-fun e!55950 () Bool)

(declare-fun call!8143 () Bool)

(assert (=> b!85807 (= e!55950 (not call!8143))))

(declare-fun b!85808 () Bool)

(declare-fun e!55957 () ListLongMap!1441)

(assert (=> b!85808 (= e!55959 e!55957)))

(assert (=> b!85808 (= c!13954 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85809 () Bool)

(declare-fun e!55955 () Bool)

(declare-fun call!8145 () Bool)

(assert (=> b!85809 (= e!55955 (not call!8145))))

(declare-fun b!85810 () Bool)

(declare-fun e!55948 () Bool)

(assert (=> b!85810 (= e!55948 (= (apply!82 lt!40636 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8143 () Bool)

(declare-fun call!8147 () ListLongMap!1441)

(assert (=> bm!8143 (= call!8147 call!8148)))

(declare-fun b!85811 () Bool)

(declare-fun e!55954 () Bool)

(assert (=> b!85811 (= e!55955 e!55954)))

(declare-fun res!44153 () Bool)

(assert (=> b!85811 (= res!44153 call!8145)))

(assert (=> b!85811 (=> (not res!44153) (not e!55954))))

(declare-fun b!85812 () Bool)

(assert (=> b!85812 (= e!55947 e!55950)))

(declare-fun c!13953 () Bool)

(assert (=> b!85812 (= c!13953 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85813 () Bool)

(assert (=> b!85813 (= e!55959 (+!107 call!8148 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!85814 () Bool)

(assert (=> b!85814 (= e!55950 e!55948)))

(declare-fun res!44158 () Bool)

(assert (=> b!85814 (= res!44158 call!8143)))

(assert (=> b!85814 (=> (not res!44158) (not e!55948))))

(declare-fun b!85815 () Bool)

(declare-fun Unit!2513 () Unit!2498)

(assert (=> b!85815 (= e!55951 Unit!2513)))

(declare-fun b!85816 () Bool)

(assert (=> b!85816 (= e!55952 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8144 () Bool)

(assert (=> bm!8144 (= call!8149 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85817 () Bool)

(declare-fun res!44160 () Bool)

(assert (=> b!85817 (=> (not res!44160) (not e!55947))))

(assert (=> b!85817 (= res!44160 e!55955)))

(declare-fun c!13957 () Bool)

(assert (=> b!85817 (= c!13957 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85818 () Bool)

(declare-fun e!55953 () ListLongMap!1441)

(assert (=> b!85818 (= e!55953 call!8147)))

(declare-fun b!85819 () Bool)

(assert (=> b!85819 (= e!55956 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85820 () Bool)

(assert (=> b!85820 (= e!55953 call!8146)))

(declare-fun b!85821 () Bool)

(assert (=> b!85821 (= e!55957 call!8147)))

(declare-fun bm!8145 () Bool)

(assert (=> bm!8145 (= call!8143 (contains!747 lt!40636 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85822 () Bool)

(assert (=> b!85822 (= e!55954 (= (apply!82 lt!40636 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!85823 () Bool)

(declare-fun c!13956 () Bool)

(assert (=> b!85823 (= c!13956 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!85823 (= e!55957 e!55953)))

(declare-fun b!85824 () Bool)

(assert (=> b!85824 (= e!55958 (= (apply!82 lt!40636 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85824 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_values!2320 newMap!16))))))

(assert (=> b!85824 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8146 () Bool)

(assert (=> bm!8146 (= call!8145 (contains!747 lt!40636 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22265 c!13955) b!85813))

(assert (= (and d!22265 (not c!13955)) b!85808))

(assert (= (and b!85808 c!13954) b!85821))

(assert (= (and b!85808 (not c!13954)) b!85823))

(assert (= (and b!85823 c!13956) b!85818))

(assert (= (and b!85823 (not c!13956)) b!85820))

(assert (= (or b!85818 b!85820) bm!8141))

(assert (= (or b!85821 bm!8141) bm!8142))

(assert (= (or b!85821 b!85818) bm!8143))

(assert (= (or b!85813 bm!8142) bm!8144))

(assert (= (or b!85813 bm!8143) bm!8140))

(assert (= (and d!22265 res!44159) b!85816))

(assert (= (and d!22265 c!13952) b!85805))

(assert (= (and d!22265 (not c!13952)) b!85815))

(assert (= (and d!22265 res!44152) b!85806))

(assert (= (and b!85806 res!44156) b!85819))

(assert (= (and b!85806 (not res!44154)) b!85804))

(assert (= (and b!85804 res!44157) b!85824))

(assert (= (and b!85806 res!44155) b!85817))

(assert (= (and b!85817 c!13957) b!85811))

(assert (= (and b!85817 (not c!13957)) b!85809))

(assert (= (and b!85811 res!44153) b!85822))

(assert (= (or b!85811 b!85809) bm!8146))

(assert (= (and b!85817 res!44160) b!85812))

(assert (= (and b!85812 c!13953) b!85814))

(assert (= (and b!85812 (not c!13953)) b!85807))

(assert (= (and b!85814 res!44158) b!85810))

(assert (= (or b!85814 b!85807) bm!8145))

(declare-fun b_lambda!3813 () Bool)

(assert (=> (not b_lambda!3813) (not b!85824)))

(declare-fun t!5233 () Bool)

(declare-fun tb!1693 () Bool)

(assert (=> (and b!85197 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16)) t!5233) tb!1693))

(declare-fun result!2923 () Bool)

(assert (=> tb!1693 (= result!2923 tp_is_empty!2533)))

(assert (=> b!85824 t!5233))

(declare-fun b_and!5197 () Bool)

(assert (= b_and!5193 (and (=> t!5233 result!2923) b_and!5197)))

(declare-fun t!5235 () Bool)

(declare-fun tb!1695 () Bool)

(assert (=> (and b!85211 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 newMap!16)) t!5235) tb!1695))

(declare-fun result!2925 () Bool)

(assert (= result!2925 result!2923))

(assert (=> b!85824 t!5235))

(declare-fun b_and!5199 () Bool)

(assert (= b_and!5195 (and (=> t!5235 result!2925) b_and!5199)))

(declare-fun m!90313 () Bool)

(assert (=> b!85813 m!90313))

(declare-fun m!90315 () Bool)

(assert (=> b!85822 m!90315))

(declare-fun m!90317 () Bool)

(assert (=> b!85824 m!90317))

(declare-fun m!90319 () Bool)

(assert (=> b!85824 m!90319))

(declare-fun m!90321 () Bool)

(assert (=> b!85824 m!90321))

(assert (=> b!85824 m!90317))

(assert (=> b!85824 m!90319))

(assert (=> b!85824 m!90065))

(declare-fun m!90323 () Bool)

(assert (=> b!85824 m!90323))

(assert (=> b!85824 m!90065))

(declare-fun m!90325 () Bool)

(assert (=> bm!8144 m!90325))

(assert (=> b!85816 m!90065))

(assert (=> b!85816 m!90065))

(assert (=> b!85816 m!90073))

(declare-fun m!90327 () Bool)

(assert (=> bm!8146 m!90327))

(declare-fun m!90329 () Bool)

(assert (=> bm!8140 m!90329))

(declare-fun m!90331 () Bool)

(assert (=> b!85805 m!90331))

(declare-fun m!90333 () Bool)

(assert (=> b!85805 m!90333))

(declare-fun m!90335 () Bool)

(assert (=> b!85805 m!90335))

(declare-fun m!90337 () Bool)

(assert (=> b!85805 m!90337))

(declare-fun m!90339 () Bool)

(assert (=> b!85805 m!90339))

(assert (=> b!85805 m!90325))

(assert (=> b!85805 m!90065))

(declare-fun m!90341 () Bool)

(assert (=> b!85805 m!90341))

(declare-fun m!90343 () Bool)

(assert (=> b!85805 m!90343))

(declare-fun m!90345 () Bool)

(assert (=> b!85805 m!90345))

(declare-fun m!90347 () Bool)

(assert (=> b!85805 m!90347))

(declare-fun m!90349 () Bool)

(assert (=> b!85805 m!90349))

(declare-fun m!90351 () Bool)

(assert (=> b!85805 m!90351))

(declare-fun m!90353 () Bool)

(assert (=> b!85805 m!90353))

(declare-fun m!90355 () Bool)

(assert (=> b!85805 m!90355))

(assert (=> b!85805 m!90339))

(declare-fun m!90357 () Bool)

(assert (=> b!85805 m!90357))

(assert (=> b!85805 m!90331))

(assert (=> b!85805 m!90349))

(assert (=> b!85805 m!90345))

(declare-fun m!90359 () Bool)

(assert (=> b!85805 m!90359))

(assert (=> b!85819 m!90065))

(assert (=> b!85819 m!90065))

(assert (=> b!85819 m!90073))

(declare-fun m!90361 () Bool)

(assert (=> bm!8145 m!90361))

(assert (=> d!22265 m!90203))

(declare-fun m!90363 () Bool)

(assert (=> b!85810 m!90363))

(assert (=> b!85804 m!90065))

(assert (=> b!85804 m!90065))

(declare-fun m!90365 () Bool)

(assert (=> b!85804 m!90365))

(assert (=> d!22147 d!22265))

(declare-fun d!22267 () Bool)

(declare-fun e!55961 () Bool)

(assert (=> d!22267 e!55961))

(declare-fun res!44161 () Bool)

(assert (=> d!22267 (=> res!44161 e!55961)))

(declare-fun lt!40642 () Bool)

(assert (=> d!22267 (= res!44161 (not lt!40642))))

(declare-fun lt!40644 () Bool)

(assert (=> d!22267 (= lt!40642 lt!40644)))

(declare-fun lt!40641 () Unit!2498)

(declare-fun e!55960 () Unit!2498)

(assert (=> d!22267 (= lt!40641 e!55960)))

(declare-fun c!13958 () Bool)

(assert (=> d!22267 (= c!13958 lt!40644)))

(assert (=> d!22267 (= lt!40644 (containsKey!144 (toList!736 lt!40328) (_1!1105 lt!40197)))))

(assert (=> d!22267 (= (contains!747 lt!40328 (_1!1105 lt!40197)) lt!40642)))

(declare-fun b!85825 () Bool)

(declare-fun lt!40643 () Unit!2498)

(assert (=> b!85825 (= e!55960 lt!40643)))

(assert (=> b!85825 (= lt!40643 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40328) (_1!1105 lt!40197)))))

(assert (=> b!85825 (isDefined!93 (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197)))))

(declare-fun b!85826 () Bool)

(declare-fun Unit!2514 () Unit!2498)

(assert (=> b!85826 (= e!55960 Unit!2514)))

(declare-fun b!85827 () Bool)

(assert (=> b!85827 (= e!55961 (isDefined!93 (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197))))))

(assert (= (and d!22267 c!13958) b!85825))

(assert (= (and d!22267 (not c!13958)) b!85826))

(assert (= (and d!22267 (not res!44161)) b!85827))

(declare-fun m!90367 () Bool)

(assert (=> d!22267 m!90367))

(declare-fun m!90369 () Bool)

(assert (=> b!85825 m!90369))

(assert (=> b!85825 m!89779))

(assert (=> b!85825 m!89779))

(declare-fun m!90371 () Bool)

(assert (=> b!85825 m!90371))

(assert (=> b!85827 m!89779))

(assert (=> b!85827 m!89779))

(assert (=> b!85827 m!90371))

(assert (=> d!22125 d!22267))

(declare-fun b!85831 () Bool)

(declare-fun e!55963 () Option!147)

(assert (=> b!85831 (= e!55963 None!145)))

(declare-fun d!22269 () Bool)

(declare-fun c!13959 () Bool)

(assert (=> d!22269 (= c!13959 (and ((_ is Cons!1505) lt!40326) (= (_1!1105 (h!2096 lt!40326)) (_1!1105 lt!40197))))))

(declare-fun e!55962 () Option!147)

(assert (=> d!22269 (= (getValueByKey!141 lt!40326 (_1!1105 lt!40197)) e!55962)))

(declare-fun b!85829 () Bool)

(assert (=> b!85829 (= e!55962 e!55963)))

(declare-fun c!13960 () Bool)

(assert (=> b!85829 (= c!13960 (and ((_ is Cons!1505) lt!40326) (not (= (_1!1105 (h!2096 lt!40326)) (_1!1105 lt!40197)))))))

(declare-fun b!85830 () Bool)

(assert (=> b!85830 (= e!55963 (getValueByKey!141 (t!5222 lt!40326) (_1!1105 lt!40197)))))

(declare-fun b!85828 () Bool)

(assert (=> b!85828 (= e!55962 (Some!146 (_2!1105 (h!2096 lt!40326))))))

(assert (= (and d!22269 c!13959) b!85828))

(assert (= (and d!22269 (not c!13959)) b!85829))

(assert (= (and b!85829 c!13960) b!85830))

(assert (= (and b!85829 (not c!13960)) b!85831))

(declare-fun m!90373 () Bool)

(assert (=> b!85830 m!90373))

(assert (=> d!22125 d!22269))

(declare-fun d!22271 () Bool)

(assert (=> d!22271 (= (getValueByKey!141 lt!40326 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(declare-fun lt!40645 () Unit!2498)

(assert (=> d!22271 (= lt!40645 (choose!511 lt!40326 (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun e!55964 () Bool)

(assert (=> d!22271 e!55964))

(declare-fun res!44162 () Bool)

(assert (=> d!22271 (=> (not res!44162) (not e!55964))))

(assert (=> d!22271 (= res!44162 (isStrictlySorted!285 lt!40326))))

(assert (=> d!22271 (= (lemmaContainsTupThenGetReturnValue!58 lt!40326 (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!40645)))

(declare-fun b!85832 () Bool)

(declare-fun res!44163 () Bool)

(assert (=> b!85832 (=> (not res!44163) (not e!55964))))

(assert (=> b!85832 (= res!44163 (containsKey!144 lt!40326 (_1!1105 lt!40197)))))

(declare-fun b!85833 () Bool)

(assert (=> b!85833 (= e!55964 (contains!749 lt!40326 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22271 res!44162) b!85832))

(assert (= (and b!85832 res!44163) b!85833))

(assert (=> d!22271 m!89773))

(declare-fun m!90375 () Bool)

(assert (=> d!22271 m!90375))

(declare-fun m!90377 () Bool)

(assert (=> d!22271 m!90377))

(declare-fun m!90379 () Bool)

(assert (=> b!85832 m!90379))

(declare-fun m!90381 () Bool)

(assert (=> b!85833 m!90381))

(assert (=> d!22125 d!22271))

(declare-fun b!85834 () Bool)

(declare-fun e!55968 () List!1509)

(declare-fun call!8150 () List!1509)

(assert (=> b!85834 (= e!55968 call!8150)))

(declare-fun call!8151 () List!1509)

(declare-fun c!13964 () Bool)

(declare-fun bm!8147 () Bool)

(declare-fun e!55967 () List!1509)

(assert (=> bm!8147 (= call!8151 ($colon$colon!71 e!55967 (ite c!13964 (h!2096 (toList!736 (+!107 lt!40193 lt!40192))) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))))))

(declare-fun c!13963 () Bool)

(assert (=> bm!8147 (= c!13963 c!13964)))

(declare-fun b!85835 () Bool)

(declare-fun c!13962 () Bool)

(assert (=> b!85835 (= c!13962 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 lt!40192))) (bvsgt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 lt!40192)))) (_1!1105 lt!40197))))))

(declare-fun e!55965 () List!1509)

(assert (=> b!85835 (= e!55968 e!55965)))

(declare-fun b!85836 () Bool)

(declare-fun e!55969 () Bool)

(declare-fun lt!40646 () List!1509)

(assert (=> b!85836 (= e!55969 (contains!749 lt!40646 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!85837 () Bool)

(declare-fun res!44164 () Bool)

(assert (=> b!85837 (=> (not res!44164) (not e!55969))))

(assert (=> b!85837 (= res!44164 (containsKey!144 lt!40646 (_1!1105 lt!40197)))))

(declare-fun bm!8148 () Bool)

(assert (=> bm!8148 (= call!8150 call!8151)))

(declare-fun b!85838 () Bool)

(assert (=> b!85838 (= e!55967 (insertStrictlySorted!61 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun b!85839 () Bool)

(declare-fun c!13961 () Bool)

(assert (=> b!85839 (= e!55967 (ite c!13961 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))) (ite c!13962 (Cons!1505 (h!2096 (toList!736 (+!107 lt!40193 lt!40192))) (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) Nil!1506)))))

(declare-fun b!85840 () Bool)

(declare-fun e!55966 () List!1509)

(assert (=> b!85840 (= e!55966 call!8151)))

(declare-fun bm!8149 () Bool)

(declare-fun call!8152 () List!1509)

(assert (=> bm!8149 (= call!8152 call!8150)))

(declare-fun d!22273 () Bool)

(assert (=> d!22273 e!55969))

(declare-fun res!44165 () Bool)

(assert (=> d!22273 (=> (not res!44165) (not e!55969))))

(assert (=> d!22273 (= res!44165 (isStrictlySorted!285 lt!40646))))

(assert (=> d!22273 (= lt!40646 e!55966)))

(assert (=> d!22273 (= c!13964 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 lt!40192))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 lt!40192)))) (_1!1105 lt!40197))))))

(assert (=> d!22273 (isStrictlySorted!285 (toList!736 (+!107 lt!40193 lt!40192)))))

(assert (=> d!22273 (= (insertStrictlySorted!61 (toList!736 (+!107 lt!40193 lt!40192)) (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!40646)))

(declare-fun b!85841 () Bool)

(assert (=> b!85841 (= e!55965 call!8152)))

(declare-fun b!85842 () Bool)

(assert (=> b!85842 (= e!55966 e!55968)))

(assert (=> b!85842 (= c!13961 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 lt!40192))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 lt!40192)))) (_1!1105 lt!40197))))))

(declare-fun b!85843 () Bool)

(assert (=> b!85843 (= e!55965 call!8152)))

(assert (= (and d!22273 c!13964) b!85840))

(assert (= (and d!22273 (not c!13964)) b!85842))

(assert (= (and b!85842 c!13961) b!85834))

(assert (= (and b!85842 (not c!13961)) b!85835))

(assert (= (and b!85835 c!13962) b!85841))

(assert (= (and b!85835 (not c!13962)) b!85843))

(assert (= (or b!85841 b!85843) bm!8149))

(assert (= (or b!85834 bm!8149) bm!8148))

(assert (= (or b!85840 bm!8148) bm!8147))

(assert (= (and bm!8147 c!13963) b!85838))

(assert (= (and bm!8147 (not c!13963)) b!85839))

(assert (= (and d!22273 res!44165) b!85837))

(assert (= (and b!85837 res!44164) b!85836))

(declare-fun m!90383 () Bool)

(assert (=> b!85836 m!90383))

(declare-fun m!90385 () Bool)

(assert (=> b!85837 m!90385))

(declare-fun m!90387 () Bool)

(assert (=> bm!8147 m!90387))

(declare-fun m!90389 () Bool)

(assert (=> d!22273 m!90389))

(declare-fun m!90391 () Bool)

(assert (=> d!22273 m!90391))

(declare-fun m!90393 () Bool)

(assert (=> b!85838 m!90393))

(assert (=> d!22125 d!22273))

(declare-fun d!22275 () Bool)

(declare-fun res!44166 () Bool)

(declare-fun e!55970 () Bool)

(assert (=> d!22275 (=> res!44166 e!55970)))

(assert (=> d!22275 (= res!44166 (= (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22275 (= (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000) e!55970)))

(declare-fun b!85844 () Bool)

(declare-fun e!55971 () Bool)

(assert (=> b!85844 (= e!55970 e!55971)))

(declare-fun res!44167 () Bool)

(assert (=> b!85844 (=> (not res!44167) (not e!55971))))

(assert (=> b!85844 (= res!44167 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!85845 () Bool)

(assert (=> b!85845 (= e!55971 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22275 (not res!44166)) b!85844))

(assert (= (and b!85844 res!44167) b!85845))

(assert (=> d!22275 m!90065))

(assert (=> b!85845 m!89569))

(declare-fun m!90395 () Bool)

(assert (=> b!85845 m!90395))

(assert (=> bm!8115 d!22275))

(declare-fun b!85849 () Bool)

(declare-fun e!55973 () Option!147)

(assert (=> b!85849 (= e!55973 None!145)))

(declare-fun d!22277 () Bool)

(declare-fun c!13965 () Bool)

(assert (=> d!22277 (= c!13965 (and ((_ is Cons!1505) (toList!736 lt!40364)) (= (_1!1105 (h!2096 (toList!736 lt!40364))) (_1!1105 lt!40192))))))

(declare-fun e!55972 () Option!147)

(assert (=> d!22277 (= (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192)) e!55972)))

(declare-fun b!85847 () Bool)

(assert (=> b!85847 (= e!55972 e!55973)))

(declare-fun c!13966 () Bool)

(assert (=> b!85847 (= c!13966 (and ((_ is Cons!1505) (toList!736 lt!40364)) (not (= (_1!1105 (h!2096 (toList!736 lt!40364))) (_1!1105 lt!40192)))))))

(declare-fun b!85848 () Bool)

(assert (=> b!85848 (= e!55973 (getValueByKey!141 (t!5222 (toList!736 lt!40364)) (_1!1105 lt!40192)))))

(declare-fun b!85846 () Bool)

(assert (=> b!85846 (= e!55972 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40364)))))))

(assert (= (and d!22277 c!13965) b!85846))

(assert (= (and d!22277 (not c!13965)) b!85847))

(assert (= (and b!85847 c!13966) b!85848))

(assert (= (and b!85847 (not c!13966)) b!85849))

(declare-fun m!90397 () Bool)

(assert (=> b!85848 m!90397))

(assert (=> b!85411 d!22277))

(declare-fun d!22279 () Bool)

(assert (=> d!22279 (= (apply!82 lt!40349 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1207 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3635 () Bool)

(assert (= bs!3635 d!22279))

(assert (=> bs!3635 m!89759))

(declare-fun m!90399 () Bool)

(assert (=> bs!3635 m!90399))

(assert (=> bs!3635 m!90399))

(declare-fun m!90401 () Bool)

(assert (=> bs!3635 m!90401))

(assert (=> b!85396 d!22279))

(assert (=> b!85396 d!22227))

(assert (=> b!85591 d!22265))

(declare-fun d!22281 () Bool)

(declare-fun res!44172 () Bool)

(declare-fun e!55978 () Bool)

(assert (=> d!22281 (=> res!44172 e!55978)))

(assert (=> d!22281 (= res!44172 (and ((_ is Cons!1505) (toList!736 lt!40195)) (= (_1!1105 (h!2096 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (=> d!22281 (= (containsKey!144 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!55978)))

(declare-fun b!85854 () Bool)

(declare-fun e!55979 () Bool)

(assert (=> b!85854 (= e!55978 e!55979)))

(declare-fun res!44173 () Bool)

(assert (=> b!85854 (=> (not res!44173) (not e!55979))))

(assert (=> b!85854 (= res!44173 (and (or (not ((_ is Cons!1505) (toList!736 lt!40195))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) ((_ is Cons!1505) (toList!736 lt!40195)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun b!85855 () Bool)

(assert (=> b!85855 (= e!55979 (containsKey!144 (t!5222 (toList!736 lt!40195)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22281 (not res!44172)) b!85854))

(assert (= (and b!85854 res!44173) b!85855))

(assert (=> b!85855 m!89569))

(declare-fun m!90403 () Bool)

(assert (=> b!85855 m!90403))

(assert (=> d!22151 d!22281))

(declare-fun b!85859 () Bool)

(declare-fun e!55981 () Option!147)

(assert (=> b!85859 (= e!55981 None!145)))

(declare-fun d!22283 () Bool)

(declare-fun c!13967 () Bool)

(assert (=> d!22283 (= c!13967 (and ((_ is Cons!1505) (toList!736 lt!40372)) (= (_1!1105 (h!2096 (toList!736 lt!40372))) (_1!1105 lt!40182))))))

(declare-fun e!55980 () Option!147)

(assert (=> d!22283 (= (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182)) e!55980)))

(declare-fun b!85857 () Bool)

(assert (=> b!85857 (= e!55980 e!55981)))

(declare-fun c!13968 () Bool)

(assert (=> b!85857 (= c!13968 (and ((_ is Cons!1505) (toList!736 lt!40372)) (not (= (_1!1105 (h!2096 (toList!736 lt!40372))) (_1!1105 lt!40182)))))))

(declare-fun b!85858 () Bool)

(assert (=> b!85858 (= e!55981 (getValueByKey!141 (t!5222 (toList!736 lt!40372)) (_1!1105 lt!40182)))))

(declare-fun b!85856 () Bool)

(assert (=> b!85856 (= e!55980 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40372)))))))

(assert (= (and d!22283 c!13967) b!85856))

(assert (= (and d!22283 (not c!13967)) b!85857))

(assert (= (and b!85857 c!13968) b!85858))

(assert (= (and b!85857 (not c!13968)) b!85859))

(declare-fun m!90405 () Bool)

(assert (=> b!85858 m!90405))

(assert (=> b!85415 d!22283))

(declare-fun b!85876 () Bool)

(declare-fun res!44182 () Bool)

(declare-fun e!55993 () Bool)

(assert (=> b!85876 (=> (not res!44182) (not e!55993))))

(declare-fun call!8158 () Bool)

(assert (=> b!85876 (= res!44182 call!8158)))

(declare-fun e!55991 () Bool)

(assert (=> b!85876 (= e!55991 e!55993)))

(declare-fun d!22285 () Bool)

(declare-fun e!55990 () Bool)

(assert (=> d!22285 e!55990))

(declare-fun c!13974 () Bool)

(declare-fun lt!40652 () SeekEntryResult!237)

(assert (=> d!22285 (= c!13974 ((_ is MissingZero!237) lt!40652))))

(assert (=> d!22285 (= lt!40652 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun lt!40651 () Unit!2498)

(declare-fun choose!512 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2498)

(assert (=> d!22285 (= lt!40651 (choose!512 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22285 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22285 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) lt!40651)))

(declare-fun b!85877 () Bool)

(declare-fun call!8157 () Bool)

(assert (=> b!85877 (= e!55993 (not call!8157))))

(declare-fun b!85878 () Bool)

(assert (=> b!85878 (and (bvsge (index!3085 lt!40652) #b00000000000000000000000000000000) (bvslt (index!3085 lt!40652) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun res!44185 () Bool)

(assert (=> b!85878 (= res!44185 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!40652)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55992 () Bool)

(assert (=> b!85878 (=> (not res!44185) (not e!55992))))

(declare-fun b!85879 () Bool)

(assert (=> b!85879 (= e!55990 e!55992)))

(declare-fun res!44183 () Bool)

(assert (=> b!85879 (= res!44183 call!8158)))

(assert (=> b!85879 (=> (not res!44183) (not e!55992))))

(declare-fun bm!8154 () Bool)

(assert (=> bm!8154 (= call!8157 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!8155 () Bool)

(assert (=> bm!8155 (= call!8158 (inRange!0 (ite c!13974 (index!3085 lt!40652) (index!3088 lt!40652)) (mask!6365 newMap!16)))))

(declare-fun b!85880 () Bool)

(declare-fun res!44184 () Bool)

(assert (=> b!85880 (=> (not res!44184) (not e!55993))))

(assert (=> b!85880 (= res!44184 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!40652)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85880 (and (bvsge (index!3088 lt!40652) #b00000000000000000000000000000000) (bvslt (index!3088 lt!40652) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!85881 () Bool)

(assert (=> b!85881 (= e!55991 ((_ is Undefined!237) lt!40652))))

(declare-fun b!85882 () Bool)

(assert (=> b!85882 (= e!55990 e!55991)))

(declare-fun c!13973 () Bool)

(assert (=> b!85882 (= c!13973 ((_ is MissingVacant!237) lt!40652))))

(declare-fun b!85883 () Bool)

(assert (=> b!85883 (= e!55992 (not call!8157))))

(assert (= (and d!22285 c!13974) b!85879))

(assert (= (and d!22285 (not c!13974)) b!85882))

(assert (= (and b!85879 res!44183) b!85878))

(assert (= (and b!85878 res!44185) b!85883))

(assert (= (and b!85882 c!13973) b!85876))

(assert (= (and b!85882 (not c!13973)) b!85881))

(assert (= (and b!85876 res!44182) b!85880))

(assert (= (and b!85880 res!44184) b!85877))

(assert (= (or b!85879 b!85876) bm!8155))

(assert (= (or b!85883 b!85877) bm!8154))

(assert (=> d!22285 m!89569))

(assert (=> d!22285 m!89957))

(assert (=> d!22285 m!89569))

(declare-fun m!90407 () Bool)

(assert (=> d!22285 m!90407))

(assert (=> d!22285 m!90203))

(declare-fun m!90409 () Bool)

(assert (=> bm!8155 m!90409))

(declare-fun m!90411 () Bool)

(assert (=> b!85880 m!90411))

(assert (=> bm!8154 m!89569))

(assert (=> bm!8154 m!90003))

(declare-fun m!90413 () Bool)

(assert (=> b!85878 m!90413))

(assert (=> bm!8101 d!22285))

(declare-fun d!22287 () Bool)

(declare-fun res!44197 () Bool)

(declare-fun e!55996 () Bool)

(assert (=> d!22287 (=> (not res!44197) (not e!55996))))

(assert (=> d!22287 (= res!44197 (validMask!0 (mask!6365 newMap!16)))))

(assert (=> d!22287 (= (simpleValid!58 newMap!16) e!55996)))

(declare-fun b!85892 () Bool)

(declare-fun res!44195 () Bool)

(assert (=> b!85892 (=> (not res!44195) (not e!55996))))

(assert (=> b!85892 (= res!44195 (and (= (size!2155 (_values!2320 newMap!16)) (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001)) (= (size!2154 (_keys!4009 newMap!16)) (size!2155 (_values!2320 newMap!16))) (bvsge (_size!426 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!426 newMap!16) (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!85893 () Bool)

(declare-fun res!44196 () Bool)

(assert (=> b!85893 (=> (not res!44196) (not e!55996))))

(declare-fun size!2160 (LongMapFixedSize!754) (_ BitVec 32))

(assert (=> b!85893 (= res!44196 (bvsge (size!2160 newMap!16) (_size!426 newMap!16)))))

(declare-fun b!85894 () Bool)

(declare-fun res!44194 () Bool)

(assert (=> b!85894 (=> (not res!44194) (not e!55996))))

(assert (=> b!85894 (= res!44194 (= (size!2160 newMap!16) (bvadd (_size!426 newMap!16) (bvsdiv (bvadd (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!85895 () Bool)

(assert (=> b!85895 (= e!55996 (and (bvsge (extraKeys!2176 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!426 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!22287 res!44197) b!85892))

(assert (= (and b!85892 res!44195) b!85893))

(assert (= (and b!85893 res!44196) b!85894))

(assert (= (and b!85894 res!44194) b!85895))

(assert (=> d!22287 m!90203))

(declare-fun m!90415 () Bool)

(assert (=> b!85893 m!90415))

(assert (=> b!85894 m!90415))

(assert (=> d!22157 d!22287))

(assert (=> b!85473 d!22169))

(declare-fun d!22289 () Bool)

(declare-fun e!55998 () Bool)

(assert (=> d!22289 e!55998))

(declare-fun res!44198 () Bool)

(assert (=> d!22289 (=> res!44198 e!55998)))

(declare-fun lt!40654 () Bool)

(assert (=> d!22289 (= res!44198 (not lt!40654))))

(declare-fun lt!40656 () Bool)

(assert (=> d!22289 (= lt!40654 lt!40656)))

(declare-fun lt!40653 () Unit!2498)

(declare-fun e!55997 () Unit!2498)

(assert (=> d!22289 (= lt!40653 e!55997)))

(declare-fun c!13975 () Bool)

(assert (=> d!22289 (= c!13975 lt!40656)))

(assert (=> d!22289 (= lt!40656 (containsKey!144 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22289 (= (contains!747 lt!40349 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40654)))

(declare-fun b!85896 () Bool)

(declare-fun lt!40655 () Unit!2498)

(assert (=> b!85896 (= e!55997 lt!40655)))

(assert (=> b!85896 (= lt!40655 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85896 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85897 () Bool)

(declare-fun Unit!2515 () Unit!2498)

(assert (=> b!85897 (= e!55997 Unit!2515)))

(declare-fun b!85898 () Bool)

(assert (=> b!85898 (= e!55998 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22289 c!13975) b!85896))

(assert (= (and d!22289 (not c!13975)) b!85897))

(assert (= (and d!22289 (not res!44198)) b!85898))

(declare-fun m!90417 () Bool)

(assert (=> d!22289 m!90417))

(declare-fun m!90419 () Bool)

(assert (=> b!85896 m!90419))

(declare-fun m!90421 () Bool)

(assert (=> b!85896 m!90421))

(assert (=> b!85896 m!90421))

(declare-fun m!90423 () Bool)

(assert (=> b!85896 m!90423))

(assert (=> b!85898 m!90421))

(assert (=> b!85898 m!90421))

(assert (=> b!85898 m!90423))

(assert (=> b!85398 d!22289))

(declare-fun b!85902 () Bool)

(declare-fun e!56000 () Option!147)

(assert (=> b!85902 (= e!56000 None!145)))

(declare-fun d!22291 () Bool)

(declare-fun c!13976 () Bool)

(assert (=> d!22291 (= c!13976 (and ((_ is Cons!1505) (toList!736 lt!40368)) (= (_1!1105 (h!2096 (toList!736 lt!40368))) (_1!1105 lt!40182))))))

(declare-fun e!55999 () Option!147)

(assert (=> d!22291 (= (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182)) e!55999)))

(declare-fun b!85900 () Bool)

(assert (=> b!85900 (= e!55999 e!56000)))

(declare-fun c!13977 () Bool)

(assert (=> b!85900 (= c!13977 (and ((_ is Cons!1505) (toList!736 lt!40368)) (not (= (_1!1105 (h!2096 (toList!736 lt!40368))) (_1!1105 lt!40182)))))))

(declare-fun b!85901 () Bool)

(assert (=> b!85901 (= e!56000 (getValueByKey!141 (t!5222 (toList!736 lt!40368)) (_1!1105 lt!40182)))))

(declare-fun b!85899 () Bool)

(assert (=> b!85899 (= e!55999 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40368)))))))

(assert (= (and d!22291 c!13976) b!85899))

(assert (= (and d!22291 (not c!13976)) b!85900))

(assert (= (and b!85900 c!13977) b!85901))

(assert (= (and b!85900 (not c!13977)) b!85902))

(declare-fun m!90425 () Bool)

(assert (=> b!85901 m!90425))

(assert (=> b!85413 d!22291))

(declare-fun d!22293 () Bool)

(declare-fun e!56002 () Bool)

(assert (=> d!22293 e!56002))

(declare-fun res!44199 () Bool)

(assert (=> d!22293 (=> res!44199 e!56002)))

(declare-fun lt!40658 () Bool)

(assert (=> d!22293 (= res!44199 (not lt!40658))))

(declare-fun lt!40660 () Bool)

(assert (=> d!22293 (= lt!40658 lt!40660)))

(declare-fun lt!40657 () Unit!2498)

(declare-fun e!56001 () Unit!2498)

(assert (=> d!22293 (= lt!40657 e!56001)))

(declare-fun c!13978 () Bool)

(assert (=> d!22293 (= c!13978 lt!40660)))

(assert (=> d!22293 (= lt!40660 (containsKey!144 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(assert (=> d!22293 (= (contains!747 call!8116 (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))) lt!40658)))

(declare-fun b!85903 () Bool)

(declare-fun lt!40659 () Unit!2498)

(assert (=> b!85903 (= e!56001 lt!40659)))

(assert (=> b!85903 (= lt!40659 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(assert (=> b!85903 (isDefined!93 (getValueByKey!141 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(declare-fun b!85904 () Bool)

(declare-fun Unit!2516 () Unit!2498)

(assert (=> b!85904 (= e!56001 Unit!2516)))

(declare-fun b!85905 () Bool)

(assert (=> b!85905 (= e!56002 (isDefined!93 (getValueByKey!141 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))))

(assert (= (and d!22293 c!13978) b!85903))

(assert (= (and d!22293 (not c!13978)) b!85904))

(assert (= (and d!22293 (not res!44199)) b!85905))

(declare-fun m!90427 () Bool)

(assert (=> d!22293 m!90427))

(declare-fun m!90429 () Bool)

(assert (=> b!85903 m!90429))

(declare-fun m!90431 () Bool)

(assert (=> b!85903 m!90431))

(assert (=> b!85903 m!90431))

(declare-fun m!90433 () Bool)

(assert (=> b!85903 m!90433))

(assert (=> b!85905 m!90431))

(assert (=> b!85905 m!90431))

(assert (=> b!85905 m!90433))

(assert (=> bm!8107 d!22293))

(declare-fun d!22295 () Bool)

(declare-fun lt!40661 () Bool)

(assert (=> d!22295 (= lt!40661 (select (content!90 (toList!736 lt!40376)) lt!40197))))

(declare-fun e!56004 () Bool)

(assert (=> d!22295 (= lt!40661 e!56004)))

(declare-fun res!44201 () Bool)

(assert (=> d!22295 (=> (not res!44201) (not e!56004))))

(assert (=> d!22295 (= res!44201 ((_ is Cons!1505) (toList!736 lt!40376)))))

(assert (=> d!22295 (= (contains!749 (toList!736 lt!40376) lt!40197) lt!40661)))

(declare-fun b!85906 () Bool)

(declare-fun e!56003 () Bool)

(assert (=> b!85906 (= e!56004 e!56003)))

(declare-fun res!44200 () Bool)

(assert (=> b!85906 (=> res!44200 e!56003)))

(assert (=> b!85906 (= res!44200 (= (h!2096 (toList!736 lt!40376)) lt!40197))))

(declare-fun b!85907 () Bool)

(assert (=> b!85907 (= e!56003 (contains!749 (t!5222 (toList!736 lt!40376)) lt!40197))))

(assert (= (and d!22295 res!44201) b!85906))

(assert (= (and b!85906 (not res!44200)) b!85907))

(declare-fun m!90435 () Bool)

(assert (=> d!22295 m!90435))

(declare-fun m!90437 () Bool)

(assert (=> d!22295 m!90437))

(declare-fun m!90439 () Bool)

(assert (=> b!85907 m!90439))

(assert (=> b!85418 d!22295))

(declare-fun b!85908 () Bool)

(declare-fun e!56008 () Bool)

(declare-fun e!56007 () Bool)

(assert (=> b!85908 (= e!56008 e!56007)))

(declare-fun c!13979 () Bool)

(assert (=> b!85908 (= c!13979 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85910 () Bool)

(declare-fun call!8159 () Bool)

(assert (=> b!85910 (= e!56007 call!8159)))

(declare-fun bm!8156 () Bool)

(assert (=> bm!8156 (= call!8159 (arrayNoDuplicates!0 (_keys!4009 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13979 (Cons!1504 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(declare-fun b!85911 () Bool)

(declare-fun e!56006 () Bool)

(assert (=> b!85911 (= e!56006 (contains!748 Nil!1505 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85912 () Bool)

(declare-fun e!56005 () Bool)

(assert (=> b!85912 (= e!56005 e!56008)))

(declare-fun res!44202 () Bool)

(assert (=> b!85912 (=> (not res!44202) (not e!56008))))

(assert (=> b!85912 (= res!44202 (not e!56006))))

(declare-fun res!44203 () Bool)

(assert (=> b!85912 (=> (not res!44203) (not e!56006))))

(assert (=> b!85912 (= res!44203 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!22297 () Bool)

(declare-fun res!44204 () Bool)

(assert (=> d!22297 (=> res!44204 e!56005)))

(assert (=> d!22297 (= res!44204 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22297 (= (arrayNoDuplicates!0 (_keys!4009 newMap!16) #b00000000000000000000000000000000 Nil!1505) e!56005)))

(declare-fun b!85909 () Bool)

(assert (=> b!85909 (= e!56007 call!8159)))

(assert (= (and d!22297 (not res!44204)) b!85912))

(assert (= (and b!85912 res!44203) b!85911))

(assert (= (and b!85912 res!44202) b!85908))

(assert (= (and b!85908 c!13979) b!85910))

(assert (= (and b!85908 (not c!13979)) b!85909))

(assert (= (or b!85910 b!85909) bm!8156))

(assert (=> b!85908 m!90065))

(assert (=> b!85908 m!90065))

(assert (=> b!85908 m!90073))

(assert (=> bm!8156 m!90065))

(declare-fun m!90441 () Bool)

(assert (=> bm!8156 m!90441))

(assert (=> b!85911 m!90065))

(assert (=> b!85911 m!90065))

(declare-fun m!90443 () Bool)

(assert (=> b!85911 m!90443))

(assert (=> b!85912 m!90065))

(assert (=> b!85912 m!90065))

(assert (=> b!85912 m!90073))

(assert (=> b!85625 d!22297))

(declare-fun d!22299 () Bool)

(declare-fun e!56010 () Bool)

(assert (=> d!22299 e!56010))

(declare-fun res!44205 () Bool)

(assert (=> d!22299 (=> res!44205 e!56010)))

(declare-fun lt!40663 () Bool)

(assert (=> d!22299 (= res!44205 (not lt!40663))))

(declare-fun lt!40665 () Bool)

(assert (=> d!22299 (= lt!40663 lt!40665)))

(declare-fun lt!40662 () Unit!2498)

(declare-fun e!56009 () Unit!2498)

(assert (=> d!22299 (= lt!40662 e!56009)))

(declare-fun c!13980 () Bool)

(assert (=> d!22299 (= c!13980 lt!40665)))

(assert (=> d!22299 (= lt!40665 (containsKey!144 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))

(assert (=> d!22299 (= (contains!747 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)) lt!40345) lt!40663)))

(declare-fun b!85913 () Bool)

(declare-fun lt!40664 () Unit!2498)

(assert (=> b!85913 (= e!56009 lt!40664)))

(assert (=> b!85913 (= lt!40664 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))

(assert (=> b!85913 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))

(declare-fun b!85914 () Bool)

(declare-fun Unit!2517 () Unit!2498)

(assert (=> b!85914 (= e!56009 Unit!2517)))

(declare-fun b!85915 () Bool)

(assert (=> b!85915 (= e!56010 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345)))))

(assert (= (and d!22299 c!13980) b!85913))

(assert (= (and d!22299 (not c!13980)) b!85914))

(assert (= (and d!22299 (not res!44205)) b!85915))

(declare-fun m!90445 () Bool)

(assert (=> d!22299 m!90445))

(declare-fun m!90447 () Bool)

(assert (=> b!85913 m!90447))

(declare-fun m!90449 () Bool)

(assert (=> b!85913 m!90449))

(assert (=> b!85913 m!90449))

(declare-fun m!90451 () Bool)

(assert (=> b!85913 m!90451))

(assert (=> b!85915 m!90449))

(assert (=> b!85915 m!90449))

(assert (=> b!85915 m!90451))

(assert (=> b!85401 d!22299))

(assert (=> b!85401 d!22227))

(declare-fun d!22301 () Bool)

(declare-fun e!56011 () Bool)

(assert (=> d!22301 e!56011))

(declare-fun res!44206 () Bool)

(assert (=> d!22301 (=> (not res!44206) (not e!56011))))

(declare-fun lt!40669 () ListLongMap!1441)

(assert (=> d!22301 (= res!44206 (contains!747 lt!40669 (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun lt!40667 () List!1509)

(assert (=> d!22301 (= lt!40669 (ListLongMap!1442 lt!40667))))

(declare-fun lt!40666 () Unit!2498)

(declare-fun lt!40668 () Unit!2498)

(assert (=> d!22301 (= lt!40666 lt!40668)))

(assert (=> d!22301 (= (getValueByKey!141 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346))) (Some!146 (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))

(assert (=> d!22301 (= lt!40668 (lemmaContainsTupThenGetReturnValue!58 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))

(assert (=> d!22301 (= lt!40667 (insertStrictlySorted!61 (toList!736 lt!40344) (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))

(assert (=> d!22301 (= (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)) lt!40669)))

(declare-fun b!85916 () Bool)

(declare-fun res!44207 () Bool)

(assert (=> b!85916 (=> (not res!44207) (not e!56011))))

(assert (=> b!85916 (= res!44207 (= (getValueByKey!141 (toList!736 lt!40669) (_1!1105 (tuple2!2189 lt!40347 lt!40346))) (Some!146 (_2!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(declare-fun b!85917 () Bool)

(assert (=> b!85917 (= e!56011 (contains!749 (toList!736 lt!40669) (tuple2!2189 lt!40347 lt!40346)))))

(assert (= (and d!22301 res!44206) b!85916))

(assert (= (and b!85916 res!44207) b!85917))

(declare-fun m!90453 () Bool)

(assert (=> d!22301 m!90453))

(declare-fun m!90455 () Bool)

(assert (=> d!22301 m!90455))

(declare-fun m!90457 () Bool)

(assert (=> d!22301 m!90457))

(declare-fun m!90459 () Bool)

(assert (=> d!22301 m!90459))

(declare-fun m!90461 () Bool)

(assert (=> b!85916 m!90461))

(declare-fun m!90463 () Bool)

(assert (=> b!85917 m!90463))

(assert (=> b!85401 d!22301))

(declare-fun d!22303 () Bool)

(assert (=> d!22303 (not (contains!747 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)) lt!40345))))

(declare-fun lt!40672 () Unit!2498)

(declare-fun choose!513 (ListLongMap!1441 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2498)

(assert (=> d!22303 (= lt!40672 (choose!513 lt!40344 lt!40347 lt!40346 lt!40345))))

(declare-fun e!56014 () Bool)

(assert (=> d!22303 e!56014))

(declare-fun res!44210 () Bool)

(assert (=> d!22303 (=> (not res!44210) (not e!56014))))

(assert (=> d!22303 (= res!44210 (not (contains!747 lt!40344 lt!40345)))))

(assert (=> d!22303 (= (addStillNotContains!33 lt!40344 lt!40347 lt!40346 lt!40345) lt!40672)))

(declare-fun b!85921 () Bool)

(assert (=> b!85921 (= e!56014 (not (= lt!40347 lt!40345)))))

(assert (= (and d!22303 res!44210) b!85921))

(assert (=> d!22303 m!89801))

(assert (=> d!22303 m!89801))

(assert (=> d!22303 m!89803))

(declare-fun m!90465 () Bool)

(assert (=> d!22303 m!90465))

(declare-fun m!90467 () Bool)

(assert (=> d!22303 m!90467))

(assert (=> b!85401 d!22303))

(declare-fun d!22305 () Bool)

(declare-fun e!56015 () Bool)

(assert (=> d!22305 e!56015))

(declare-fun res!44211 () Bool)

(assert (=> d!22305 (=> (not res!44211) (not e!56015))))

(declare-fun lt!40676 () ListLongMap!1441)

(assert (=> d!22305 (= res!44211 (contains!747 lt!40676 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!40674 () List!1509)

(assert (=> d!22305 (= lt!40676 (ListLongMap!1442 lt!40674))))

(declare-fun lt!40673 () Unit!2498)

(declare-fun lt!40675 () Unit!2498)

(assert (=> d!22305 (= lt!40673 lt!40675)))

(assert (=> d!22305 (= (getValueByKey!141 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22305 (= lt!40675 (lemmaContainsTupThenGetReturnValue!58 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22305 (= lt!40674 (insertStrictlySorted!61 (toList!736 call!8030) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22305 (= (+!107 call!8030 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!40676)))

(declare-fun b!85922 () Bool)

(declare-fun res!44212 () Bool)

(assert (=> b!85922 (=> (not res!44212) (not e!56015))))

(assert (=> b!85922 (= res!44212 (= (getValueByKey!141 (toList!736 lt!40676) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!85923 () Bool)

(assert (=> b!85923 (= e!56015 (contains!749 (toList!736 lt!40676) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22305 res!44211) b!85922))

(assert (= (and b!85922 res!44212) b!85923))

(declare-fun m!90469 () Bool)

(assert (=> d!22305 m!90469))

(declare-fun m!90471 () Bool)

(assert (=> d!22305 m!90471))

(declare-fun m!90473 () Bool)

(assert (=> d!22305 m!90473))

(declare-fun m!90475 () Bool)

(assert (=> d!22305 m!90475))

(declare-fun m!90477 () Bool)

(assert (=> b!85922 m!90477))

(declare-fun m!90479 () Bool)

(assert (=> b!85923 m!90479))

(assert (=> b!85401 d!22305))

(declare-fun b!85927 () Bool)

(declare-fun e!56017 () Option!147)

(assert (=> b!85927 (= e!56017 None!145)))

(declare-fun d!22307 () Bool)

(declare-fun c!13981 () Bool)

(assert (=> d!22307 (= c!13981 (and ((_ is Cons!1505) (toList!736 lt!40328)) (= (_1!1105 (h!2096 (toList!736 lt!40328))) (_1!1105 lt!40197))))))

(declare-fun e!56016 () Option!147)

(assert (=> d!22307 (= (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197)) e!56016)))

(declare-fun b!85925 () Bool)

(assert (=> b!85925 (= e!56016 e!56017)))

(declare-fun c!13982 () Bool)

(assert (=> b!85925 (= c!13982 (and ((_ is Cons!1505) (toList!736 lt!40328)) (not (= (_1!1105 (h!2096 (toList!736 lt!40328))) (_1!1105 lt!40197)))))))

(declare-fun b!85926 () Bool)

(assert (=> b!85926 (= e!56017 (getValueByKey!141 (t!5222 (toList!736 lt!40328)) (_1!1105 lt!40197)))))

(declare-fun b!85924 () Bool)

(assert (=> b!85924 (= e!56016 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40328)))))))

(assert (= (and d!22307 c!13981) b!85924))

(assert (= (and d!22307 (not c!13981)) b!85925))

(assert (= (and b!85925 c!13982) b!85926))

(assert (= (and b!85925 (not c!13982)) b!85927))

(declare-fun m!90481 () Bool)

(assert (=> b!85926 m!90481))

(assert (=> b!85369 d!22307))

(declare-fun d!22309 () Bool)

(declare-fun lt!40677 () Bool)

(assert (=> d!22309 (= lt!40677 (select (content!90 (toList!736 lt!40372)) lt!40182))))

(declare-fun e!56019 () Bool)

(assert (=> d!22309 (= lt!40677 e!56019)))

(declare-fun res!44214 () Bool)

(assert (=> d!22309 (=> (not res!44214) (not e!56019))))

(assert (=> d!22309 (= res!44214 ((_ is Cons!1505) (toList!736 lt!40372)))))

(assert (=> d!22309 (= (contains!749 (toList!736 lt!40372) lt!40182) lt!40677)))

(declare-fun b!85928 () Bool)

(declare-fun e!56018 () Bool)

(assert (=> b!85928 (= e!56019 e!56018)))

(declare-fun res!44213 () Bool)

(assert (=> b!85928 (=> res!44213 e!56018)))

(assert (=> b!85928 (= res!44213 (= (h!2096 (toList!736 lt!40372)) lt!40182))))

(declare-fun b!85929 () Bool)

(assert (=> b!85929 (= e!56018 (contains!749 (t!5222 (toList!736 lt!40372)) lt!40182))))

(assert (= (and d!22309 res!44214) b!85928))

(assert (= (and b!85928 (not res!44213)) b!85929))

(declare-fun m!90483 () Bool)

(assert (=> d!22309 m!90483))

(declare-fun m!90485 () Bool)

(assert (=> d!22309 m!90485))

(declare-fun m!90487 () Bool)

(assert (=> b!85929 m!90487))

(assert (=> b!85416 d!22309))

(declare-fun d!22311 () Bool)

(declare-fun e!56021 () Bool)

(assert (=> d!22311 e!56021))

(declare-fun res!44215 () Bool)

(assert (=> d!22311 (=> res!44215 e!56021)))

(declare-fun lt!40679 () Bool)

(assert (=> d!22311 (= res!44215 (not lt!40679))))

(declare-fun lt!40681 () Bool)

(assert (=> d!22311 (= lt!40679 lt!40681)))

(declare-fun lt!40678 () Unit!2498)

(declare-fun e!56020 () Unit!2498)

(assert (=> d!22311 (= lt!40678 e!56020)))

(declare-fun c!13983 () Bool)

(assert (=> d!22311 (= c!13983 lt!40681)))

(assert (=> d!22311 (= lt!40681 (containsKey!144 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22311 (= (contains!747 call!8105 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!40679)))

(declare-fun b!85930 () Bool)

(declare-fun lt!40680 () Unit!2498)

(assert (=> b!85930 (= e!56020 lt!40680)))

(assert (=> b!85930 (= lt!40680 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!85930 (isDefined!93 (getValueByKey!141 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85931 () Bool)

(declare-fun Unit!2518 () Unit!2498)

(assert (=> b!85931 (= e!56020 Unit!2518)))

(declare-fun b!85932 () Bool)

(assert (=> b!85932 (= e!56021 (isDefined!93 (getValueByKey!141 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (= (and d!22311 c!13983) b!85930))

(assert (= (and d!22311 (not c!13983)) b!85931))

(assert (= (and d!22311 (not res!44215)) b!85932))

(assert (=> d!22311 m!89569))

(declare-fun m!90489 () Bool)

(assert (=> d!22311 m!90489))

(assert (=> b!85930 m!89569))

(declare-fun m!90491 () Bool)

(assert (=> b!85930 m!90491))

(assert (=> b!85930 m!89569))

(declare-fun m!90493 () Bool)

(assert (=> b!85930 m!90493))

(assert (=> b!85930 m!90493))

(declare-fun m!90495 () Bool)

(assert (=> b!85930 m!90495))

(assert (=> b!85932 m!89569))

(assert (=> b!85932 m!90493))

(assert (=> b!85932 m!90493))

(assert (=> b!85932 m!90495))

(assert (=> b!85607 d!22311))

(declare-fun b!85941 () Bool)

(declare-fun e!56027 () (_ BitVec 32))

(assert (=> b!85941 (= e!56027 #b00000000000000000000000000000000)))

(declare-fun bm!8159 () Bool)

(declare-fun call!8162 () (_ BitVec 32))

(assert (=> bm!8159 (= call!8162 (arrayCountValidKeys!0 (_keys!4009 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun d!22313 () Bool)

(declare-fun lt!40684 () (_ BitVec 32))

(assert (=> d!22313 (and (bvsge lt!40684 #b00000000000000000000000000000000) (bvsle lt!40684 (bvsub (size!2154 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22313 (= lt!40684 e!56027)))

(declare-fun c!13989 () Bool)

(assert (=> d!22313 (= c!13989 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22313 (and (bvsle #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2154 (_keys!4009 newMap!16)) (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22313 (= (arrayCountValidKeys!0 (_keys!4009 newMap!16) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) lt!40684)))

(declare-fun b!85942 () Bool)

(declare-fun e!56026 () (_ BitVec 32))

(assert (=> b!85942 (= e!56026 (bvadd #b00000000000000000000000000000001 call!8162))))

(declare-fun b!85943 () Bool)

(assert (=> b!85943 (= e!56027 e!56026)))

(declare-fun c!13988 () Bool)

(assert (=> b!85943 (= c!13988 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85944 () Bool)

(assert (=> b!85944 (= e!56026 call!8162)))

(assert (= (and d!22313 c!13989) b!85941))

(assert (= (and d!22313 (not c!13989)) b!85943))

(assert (= (and b!85943 c!13988) b!85942))

(assert (= (and b!85943 (not c!13988)) b!85944))

(assert (= (or b!85942 b!85944) bm!8159))

(declare-fun m!90497 () Bool)

(assert (=> bm!8159 m!90497))

(assert (=> b!85943 m!90065))

(assert (=> b!85943 m!90065))

(assert (=> b!85943 m!90073))

(assert (=> b!85623 d!22313))

(declare-fun d!22315 () Bool)

(declare-fun e!56030 () Bool)

(assert (=> d!22315 e!56030))

(declare-fun res!44221 () Bool)

(assert (=> d!22315 (=> (not res!44221) (not e!56030))))

(declare-fun lt!40690 () SeekEntryResult!237)

(assert (=> d!22315 (= res!44221 ((_ is Found!237) lt!40690))))

(assert (=> d!22315 (= lt!40690 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun lt!40689 () Unit!2498)

(declare-fun choose!514 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2498)

(assert (=> d!22315 (= lt!40689 (choose!514 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22315 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22315 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) lt!40689)))

(declare-fun b!85949 () Bool)

(declare-fun res!44220 () Bool)

(assert (=> b!85949 (=> (not res!44220) (not e!56030))))

(assert (=> b!85949 (= res!44220 (inRange!0 (index!3086 lt!40690) (mask!6365 newMap!16)))))

(declare-fun b!85950 () Bool)

(assert (=> b!85950 (= e!56030 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40690)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!85950 (and (bvsge (index!3086 lt!40690) #b00000000000000000000000000000000) (bvslt (index!3086 lt!40690) (size!2154 (_keys!4009 newMap!16))))))

(assert (= (and d!22315 res!44221) b!85949))

(assert (= (and b!85949 res!44220) b!85950))

(assert (=> d!22315 m!89569))

(assert (=> d!22315 m!89957))

(assert (=> d!22315 m!89569))

(declare-fun m!90499 () Bool)

(assert (=> d!22315 m!90499))

(assert (=> d!22315 m!90203))

(declare-fun m!90501 () Bool)

(assert (=> b!85949 m!90501))

(declare-fun m!90503 () Bool)

(assert (=> b!85950 m!90503))

(assert (=> bm!8108 d!22315))

(declare-fun d!22317 () Bool)

(declare-fun res!44222 () Bool)

(declare-fun e!56031 () Bool)

(assert (=> d!22317 (=> res!44222 e!56031)))

(assert (=> d!22317 (= res!44222 (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22317 (= (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!56031)))

(declare-fun b!85951 () Bool)

(declare-fun e!56032 () Bool)

(assert (=> b!85951 (= e!56031 e!56032)))

(declare-fun res!44223 () Bool)

(assert (=> b!85951 (=> (not res!44223) (not e!56032))))

(assert (=> b!85951 (= res!44223 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!85952 () Bool)

(assert (=> b!85952 (= e!56032 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22317 (not res!44222)) b!85951))

(assert (= (and b!85951 res!44223) b!85952))

(assert (=> d!22317 m!90035))

(assert (=> b!85952 m!89569))

(declare-fun m!90505 () Bool)

(assert (=> b!85952 m!90505))

(assert (=> b!85343 d!22317))

(declare-fun d!22319 () Bool)

(declare-fun e!56034 () Bool)

(assert (=> d!22319 e!56034))

(declare-fun res!44224 () Bool)

(assert (=> d!22319 (=> res!44224 e!56034)))

(declare-fun lt!40692 () Bool)

(assert (=> d!22319 (= res!44224 (not lt!40692))))

(declare-fun lt!40694 () Bool)

(assert (=> d!22319 (= lt!40692 lt!40694)))

(declare-fun lt!40691 () Unit!2498)

(declare-fun e!56033 () Unit!2498)

(assert (=> d!22319 (= lt!40691 e!56033)))

(declare-fun c!13990 () Bool)

(assert (=> d!22319 (= c!13990 lt!40694)))

(assert (=> d!22319 (= lt!40694 (containsKey!144 (toList!736 lt!40353) (_1!1105 lt!40197)))))

(assert (=> d!22319 (= (contains!747 lt!40353 (_1!1105 lt!40197)) lt!40692)))

(declare-fun b!85953 () Bool)

(declare-fun lt!40693 () Unit!2498)

(assert (=> b!85953 (= e!56033 lt!40693)))

(assert (=> b!85953 (= lt!40693 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40353) (_1!1105 lt!40197)))))

(assert (=> b!85953 (isDefined!93 (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197)))))

(declare-fun b!85954 () Bool)

(declare-fun Unit!2519 () Unit!2498)

(assert (=> b!85954 (= e!56033 Unit!2519)))

(declare-fun b!85955 () Bool)

(assert (=> b!85955 (= e!56034 (isDefined!93 (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197))))))

(assert (= (and d!22319 c!13990) b!85953))

(assert (= (and d!22319 (not c!13990)) b!85954))

(assert (= (and d!22319 (not res!44224)) b!85955))

(declare-fun m!90507 () Bool)

(assert (=> d!22319 m!90507))

(declare-fun m!90509 () Bool)

(assert (=> b!85953 m!90509))

(assert (=> b!85953 m!89817))

(assert (=> b!85953 m!89817))

(declare-fun m!90511 () Bool)

(assert (=> b!85953 m!90511))

(assert (=> b!85955 m!89817))

(assert (=> b!85955 m!89817))

(assert (=> b!85955 m!90511))

(assert (=> d!22129 d!22319))

(declare-fun b!85959 () Bool)

(declare-fun e!56036 () Option!147)

(assert (=> b!85959 (= e!56036 None!145)))

(declare-fun d!22321 () Bool)

(declare-fun c!13991 () Bool)

(assert (=> d!22321 (= c!13991 (and ((_ is Cons!1505) lt!40351) (= (_1!1105 (h!2096 lt!40351)) (_1!1105 lt!40197))))))

(declare-fun e!56035 () Option!147)

(assert (=> d!22321 (= (getValueByKey!141 lt!40351 (_1!1105 lt!40197)) e!56035)))

(declare-fun b!85957 () Bool)

(assert (=> b!85957 (= e!56035 e!56036)))

(declare-fun c!13992 () Bool)

(assert (=> b!85957 (= c!13992 (and ((_ is Cons!1505) lt!40351) (not (= (_1!1105 (h!2096 lt!40351)) (_1!1105 lt!40197)))))))

(declare-fun b!85958 () Bool)

(assert (=> b!85958 (= e!56036 (getValueByKey!141 (t!5222 lt!40351) (_1!1105 lt!40197)))))

(declare-fun b!85956 () Bool)

(assert (=> b!85956 (= e!56035 (Some!146 (_2!1105 (h!2096 lt!40351))))))

(assert (= (and d!22321 c!13991) b!85956))

(assert (= (and d!22321 (not c!13991)) b!85957))

(assert (= (and b!85957 c!13992) b!85958))

(assert (= (and b!85957 (not c!13992)) b!85959))

(declare-fun m!90513 () Bool)

(assert (=> b!85958 m!90513))

(assert (=> d!22129 d!22321))

(declare-fun d!22323 () Bool)

(assert (=> d!22323 (= (getValueByKey!141 lt!40351 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(declare-fun lt!40695 () Unit!2498)

(assert (=> d!22323 (= lt!40695 (choose!511 lt!40351 (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun e!56037 () Bool)

(assert (=> d!22323 e!56037))

(declare-fun res!44225 () Bool)

(assert (=> d!22323 (=> (not res!44225) (not e!56037))))

(assert (=> d!22323 (= res!44225 (isStrictlySorted!285 lt!40351))))

(assert (=> d!22323 (= (lemmaContainsTupThenGetReturnValue!58 lt!40351 (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!40695)))

(declare-fun b!85960 () Bool)

(declare-fun res!44226 () Bool)

(assert (=> b!85960 (=> (not res!44226) (not e!56037))))

(assert (=> b!85960 (= res!44226 (containsKey!144 lt!40351 (_1!1105 lt!40197)))))

(declare-fun b!85961 () Bool)

(assert (=> b!85961 (= e!56037 (contains!749 lt!40351 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22323 res!44225) b!85960))

(assert (= (and b!85960 res!44226) b!85961))

(assert (=> d!22323 m!89811))

(declare-fun m!90515 () Bool)

(assert (=> d!22323 m!90515))

(declare-fun m!90517 () Bool)

(assert (=> d!22323 m!90517))

(declare-fun m!90519 () Bool)

(assert (=> b!85960 m!90519))

(declare-fun m!90521 () Bool)

(assert (=> b!85961 m!90521))

(assert (=> d!22129 d!22323))

(declare-fun b!85962 () Bool)

(declare-fun e!56041 () List!1509)

(declare-fun call!8163 () List!1509)

(assert (=> b!85962 (= e!56041 call!8163)))

(declare-fun c!13996 () Bool)

(declare-fun e!56040 () List!1509)

(declare-fun call!8164 () List!1509)

(declare-fun bm!8160 () Bool)

(assert (=> bm!8160 (= call!8164 ($colon$colon!71 e!56040 (ite c!13996 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))))))

(declare-fun c!13995 () Bool)

(assert (=> bm!8160 (= c!13995 c!13996)))

(declare-fun b!85963 () Bool)

(declare-fun c!13994 () Bool)

(assert (=> b!85963 (= c!13994 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 lt!40197))))))

(declare-fun e!56038 () List!1509)

(assert (=> b!85963 (= e!56041 e!56038)))

(declare-fun b!85964 () Bool)

(declare-fun e!56042 () Bool)

(declare-fun lt!40696 () List!1509)

(assert (=> b!85964 (= e!56042 (contains!749 lt!40696 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!85965 () Bool)

(declare-fun res!44227 () Bool)

(assert (=> b!85965 (=> (not res!44227) (not e!56042))))

(assert (=> b!85965 (= res!44227 (containsKey!144 lt!40696 (_1!1105 lt!40197)))))

(declare-fun bm!8161 () Bool)

(assert (=> bm!8161 (= call!8163 call!8164)))

(declare-fun b!85966 () Bool)

(assert (=> b!85966 (= e!56040 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40193)) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun b!85967 () Bool)

(declare-fun c!13993 () Bool)

(assert (=> b!85967 (= e!56040 (ite c!13993 (t!5222 (toList!736 lt!40193)) (ite c!13994 (Cons!1505 (h!2096 (toList!736 lt!40193)) (t!5222 (toList!736 lt!40193))) Nil!1506)))))

(declare-fun b!85968 () Bool)

(declare-fun e!56039 () List!1509)

(assert (=> b!85968 (= e!56039 call!8164)))

(declare-fun bm!8162 () Bool)

(declare-fun call!8165 () List!1509)

(assert (=> bm!8162 (= call!8165 call!8163)))

(declare-fun d!22325 () Bool)

(assert (=> d!22325 e!56042))

(declare-fun res!44228 () Bool)

(assert (=> d!22325 (=> (not res!44228) (not e!56042))))

(assert (=> d!22325 (= res!44228 (isStrictlySorted!285 lt!40696))))

(assert (=> d!22325 (= lt!40696 e!56039)))

(assert (=> d!22325 (= c!13996 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 lt!40197))))))

(assert (=> d!22325 (isStrictlySorted!285 (toList!736 lt!40193))))

(assert (=> d!22325 (= (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!40696)))

(declare-fun b!85969 () Bool)

(assert (=> b!85969 (= e!56038 call!8165)))

(declare-fun b!85970 () Bool)

(assert (=> b!85970 (= e!56039 e!56041)))

(assert (=> b!85970 (= c!13993 (and ((_ is Cons!1505) (toList!736 lt!40193)) (= (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 lt!40197))))))

(declare-fun b!85971 () Bool)

(assert (=> b!85971 (= e!56038 call!8165)))

(assert (= (and d!22325 c!13996) b!85968))

(assert (= (and d!22325 (not c!13996)) b!85970))

(assert (= (and b!85970 c!13993) b!85962))

(assert (= (and b!85970 (not c!13993)) b!85963))

(assert (= (and b!85963 c!13994) b!85969))

(assert (= (and b!85963 (not c!13994)) b!85971))

(assert (= (or b!85969 b!85971) bm!8162))

(assert (= (or b!85962 bm!8162) bm!8161))

(assert (= (or b!85968 bm!8161) bm!8160))

(assert (= (and bm!8160 c!13995) b!85966))

(assert (= (and bm!8160 (not c!13995)) b!85967))

(assert (= (and d!22325 res!44228) b!85965))

(assert (= (and b!85965 res!44227) b!85964))

(declare-fun m!90523 () Bool)

(assert (=> b!85964 m!90523))

(declare-fun m!90525 () Bool)

(assert (=> b!85965 m!90525))

(declare-fun m!90527 () Bool)

(assert (=> bm!8160 m!90527))

(declare-fun m!90529 () Bool)

(assert (=> d!22325 m!90529))

(declare-fun m!90531 () Bool)

(assert (=> d!22325 m!90531))

(declare-fun m!90533 () Bool)

(assert (=> b!85966 m!90533))

(assert (=> d!22129 d!22325))

(declare-fun d!22327 () Bool)

(declare-fun e!56045 () Bool)

(assert (=> d!22327 e!56045))

(declare-fun res!44231 () Bool)

(assert (=> d!22327 (=> (not res!44231) (not e!56045))))

(assert (=> d!22327 (= res!44231 (and (bvsge (index!3086 lt!40518) #b00000000000000000000000000000000) (bvslt (index!3086 lt!40518) (size!2154 (_keys!4009 newMap!16)))))))

(declare-fun lt!40699 () Unit!2498)

(declare-fun choose!515 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) Unit!2498)

(assert (=> d!22327 (= lt!40699 (choose!515 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22327 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22327 (= (lemmaValidKeyInArrayIsInListMap!91 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (defaultEntry!2337 newMap!16)) lt!40699)))

(declare-fun b!85974 () Bool)

(assert (=> b!85974 (= e!56045 (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))

(assert (= (and d!22327 res!44231) b!85974))

(declare-fun m!90535 () Bool)

(assert (=> d!22327 m!90535))

(assert (=> d!22327 m!90203))

(declare-fun m!90537 () Bool)

(assert (=> b!85974 m!90537))

(assert (=> b!85974 m!89961))

(assert (=> b!85974 m!90537))

(assert (=> b!85974 m!89961))

(declare-fun m!90539 () Bool)

(assert (=> b!85974 m!90539))

(assert (=> b!85608 d!22327))

(declare-fun d!22329 () Bool)

(declare-fun e!56048 () Bool)

(assert (=> d!22329 e!56048))

(declare-fun res!44234 () Bool)

(assert (=> d!22329 (=> (not res!44234) (not e!56048))))

(assert (=> d!22329 (= res!44234 (and (bvsge (index!3086 lt!40518) #b00000000000000000000000000000000) (bvslt (index!3086 lt!40518) (size!2155 (_values!2320 newMap!16)))))))

(declare-fun lt!40702 () Unit!2498)

(declare-fun choose!516 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2498)

(assert (=> d!22329 (= lt!40702 (choose!516 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22329 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22329 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)) lt!40702)))

(declare-fun b!85977 () Bool)

(assert (=> b!85977 (= e!56048 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (getCurrentListMap!430 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))))

(assert (= (and d!22329 res!44234) b!85977))

(assert (=> d!22329 m!89569))

(declare-fun m!90541 () Bool)

(assert (=> d!22329 m!90541))

(assert (=> d!22329 m!90203))

(assert (=> b!85977 m!89901))

(assert (=> b!85977 m!89901))

(declare-fun m!90543 () Bool)

(assert (=> b!85977 m!90543))

(assert (=> b!85977 m!89981))

(declare-fun m!90545 () Bool)

(assert (=> b!85977 m!90545))

(assert (=> b!85608 d!22329))

(declare-fun d!22331 () Bool)

(declare-fun e!56050 () Bool)

(assert (=> d!22331 e!56050))

(declare-fun res!44235 () Bool)

(assert (=> d!22331 (=> res!44235 e!56050)))

(declare-fun lt!40704 () Bool)

(assert (=> d!22331 (= res!44235 (not lt!40704))))

(declare-fun lt!40706 () Bool)

(assert (=> d!22331 (= lt!40704 lt!40706)))

(declare-fun lt!40703 () Unit!2498)

(declare-fun e!56049 () Unit!2498)

(assert (=> d!22331 (= lt!40703 e!56049)))

(declare-fun c!13997 () Bool)

(assert (=> d!22331 (= c!13997 lt!40706)))

(assert (=> d!22331 (= lt!40706 (containsKey!144 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22331 (= (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!40704)))

(declare-fun b!85978 () Bool)

(declare-fun lt!40705 () Unit!2498)

(assert (=> b!85978 (= e!56049 lt!40705)))

(assert (=> b!85978 (= lt!40705 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!85978 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!85979 () Bool)

(declare-fun Unit!2520 () Unit!2498)

(assert (=> b!85979 (= e!56049 Unit!2520)))

(declare-fun b!85980 () Bool)

(assert (=> b!85980 (= e!56050 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (= (and d!22331 c!13997) b!85978))

(assert (= (and d!22331 (not c!13997)) b!85979))

(assert (= (and d!22331 (not res!44235)) b!85980))

(assert (=> d!22331 m!89569))

(declare-fun m!90547 () Bool)

(assert (=> d!22331 m!90547))

(assert (=> b!85978 m!89569))

(declare-fun m!90549 () Bool)

(assert (=> b!85978 m!90549))

(assert (=> b!85978 m!89569))

(declare-fun m!90551 () Bool)

(assert (=> b!85978 m!90551))

(assert (=> b!85978 m!90551))

(declare-fun m!90553 () Bool)

(assert (=> b!85978 m!90553))

(assert (=> b!85980 m!89569))

(assert (=> b!85980 m!90551))

(assert (=> b!85980 m!90551))

(assert (=> b!85980 m!90553))

(assert (=> b!85608 d!22331))

(assert (=> b!85608 d!22265))

(declare-fun d!22333 () Bool)

(declare-fun e!56051 () Bool)

(assert (=> d!22333 e!56051))

(declare-fun res!44236 () Bool)

(assert (=> d!22333 (=> (not res!44236) (not e!56051))))

(declare-fun lt!40710 () ListLongMap!1441)

(assert (=> d!22333 (= res!44236 (contains!747 lt!40710 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun lt!40708 () List!1509)

(assert (=> d!22333 (= lt!40710 (ListLongMap!1442 lt!40708))))

(declare-fun lt!40707 () Unit!2498)

(declare-fun lt!40709 () Unit!2498)

(assert (=> d!22333 (= lt!40707 lt!40709)))

(assert (=> d!22333 (= (getValueByKey!141 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (Some!146 (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22333 (= lt!40709 (lemmaContainsTupThenGetReturnValue!58 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22333 (= lt!40708 (insertStrictlySorted!61 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22333 (= (+!107 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40710)))

(declare-fun b!85981 () Bool)

(declare-fun res!44237 () Bool)

(assert (=> b!85981 (=> (not res!44237) (not e!56051))))

(assert (=> b!85981 (= res!44237 (= (getValueByKey!141 (toList!736 lt!40710) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (Some!146 (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!85982 () Bool)

(assert (=> b!85982 (= e!56051 (contains!749 (toList!736 lt!40710) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (= (and d!22333 res!44236) b!85981))

(assert (= (and b!85981 res!44237) b!85982))

(declare-fun m!90555 () Bool)

(assert (=> d!22333 m!90555))

(declare-fun m!90557 () Bool)

(assert (=> d!22333 m!90557))

(declare-fun m!90559 () Bool)

(assert (=> d!22333 m!90559))

(declare-fun m!90561 () Bool)

(assert (=> d!22333 m!90561))

(declare-fun m!90563 () Bool)

(assert (=> b!85981 m!90563))

(declare-fun m!90565 () Bool)

(assert (=> b!85982 m!90565))

(assert (=> bm!8042 d!22333))

(declare-fun b!85983 () Bool)

(declare-fun e!56055 () Bool)

(declare-fun e!56054 () Bool)

(assert (=> b!85983 (= e!56055 e!56054)))

(declare-fun c!13998 () Bool)

(assert (=> b!85983 (= c!13998 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85985 () Bool)

(declare-fun call!8166 () Bool)

(assert (=> b!85985 (= e!56054 call!8166)))

(declare-fun bm!8163 () Bool)

(assert (=> bm!8163 (= call!8166 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13998 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505))))))

(declare-fun e!56053 () Bool)

(declare-fun b!85986 () Bool)

(assert (=> b!85986 (= e!56053 (contains!748 (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85987 () Bool)

(declare-fun e!56052 () Bool)

(assert (=> b!85987 (= e!56052 e!56055)))

(declare-fun res!44238 () Bool)

(assert (=> b!85987 (=> (not res!44238) (not e!56055))))

(assert (=> b!85987 (= res!44238 (not e!56053))))

(declare-fun res!44239 () Bool)

(assert (=> b!85987 (=> (not res!44239) (not e!56053))))

(assert (=> b!85987 (= res!44239 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!22335 () Bool)

(declare-fun res!44240 () Bool)

(assert (=> d!22335 (=> res!44240 e!56052)))

(assert (=> d!22335 (= res!44240 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!22335 (= (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) e!56052)))

(declare-fun b!85984 () Bool)

(assert (=> b!85984 (= e!56054 call!8166)))

(assert (= (and d!22335 (not res!44240)) b!85987))

(assert (= (and b!85987 res!44239) b!85986))

(assert (= (and b!85987 res!44238) b!85983))

(assert (= (and b!85983 c!13998) b!85985))

(assert (= (and b!85983 (not c!13998)) b!85984))

(assert (= (or b!85985 b!85984) bm!8163))

(declare-fun m!90567 () Bool)

(assert (=> b!85983 m!90567))

(assert (=> b!85983 m!90567))

(declare-fun m!90569 () Bool)

(assert (=> b!85983 m!90569))

(assert (=> bm!8163 m!90567))

(declare-fun m!90571 () Bool)

(assert (=> bm!8163 m!90571))

(assert (=> b!85986 m!90567))

(assert (=> b!85986 m!90567))

(declare-fun m!90573 () Bool)

(assert (=> b!85986 m!90573))

(assert (=> b!85987 m!90567))

(assert (=> b!85987 m!90567))

(assert (=> b!85987 m!90569))

(assert (=> bm!8024 d!22335))

(declare-fun d!22337 () Bool)

(declare-fun res!44241 () Bool)

(declare-fun e!56056 () Bool)

(assert (=> d!22337 (=> (not res!44241) (not e!56056))))

(assert (=> d!22337 (= res!44241 (simpleValid!58 (_2!1104 lt!40512)))))

(assert (=> d!22337 (= (valid!335 (_2!1104 lt!40512)) e!56056)))

(declare-fun b!85988 () Bool)

(declare-fun res!44242 () Bool)

(assert (=> b!85988 (=> (not res!44242) (not e!56056))))

(assert (=> b!85988 (= res!44242 (= (arrayCountValidKeys!0 (_keys!4009 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))) (_size!426 (_2!1104 lt!40512))))))

(declare-fun b!85989 () Bool)

(declare-fun res!44243 () Bool)

(assert (=> b!85989 (=> (not res!44243) (not e!56056))))

(assert (=> b!85989 (= res!44243 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512))))))

(declare-fun b!85990 () Bool)

(assert (=> b!85990 (= e!56056 (arrayNoDuplicates!0 (_keys!4009 (_2!1104 lt!40512)) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!22337 res!44241) b!85988))

(assert (= (and b!85988 res!44242) b!85989))

(assert (= (and b!85989 res!44243) b!85990))

(declare-fun m!90575 () Bool)

(assert (=> d!22337 m!90575))

(declare-fun m!90577 () Bool)

(assert (=> b!85988 m!90577))

(declare-fun m!90579 () Bool)

(assert (=> b!85989 m!90579))

(declare-fun m!90581 () Bool)

(assert (=> b!85990 m!90581))

(assert (=> d!22153 d!22337))

(assert (=> d!22153 d!22157))

(declare-fun d!22339 () Bool)

(declare-fun isEmpty!342 (List!1509) Bool)

(assert (=> d!22339 (= (isEmpty!341 lt!40349) (isEmpty!342 (toList!736 lt!40349)))))

(declare-fun bs!3636 () Bool)

(assert (= bs!3636 d!22339))

(declare-fun m!90583 () Bool)

(assert (=> bs!3636 m!90583))

(assert (=> b!85402 d!22339))

(declare-fun d!22341 () Bool)

(assert (=> d!22341 (= (+!107 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (+!107 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (=> d!22341 true))

(declare-fun _$28!142 () Unit!2498)

(assert (=> d!22341 (= (choose!506 lt!40187 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) _$28!142)))

(declare-fun bs!3637 () Bool)

(assert (= bs!3637 d!22341))

(assert (=> bs!3637 m!89835))

(assert (=> bs!3637 m!89835))

(assert (=> bs!3637 m!89841))

(assert (=> bs!3637 m!89837))

(assert (=> bs!3637 m!89837))

(assert (=> bs!3637 m!89839))

(assert (=> d!22133 d!22341))

(declare-fun d!22343 () Bool)

(declare-fun e!56057 () Bool)

(assert (=> d!22343 e!56057))

(declare-fun res!44244 () Bool)

(assert (=> d!22343 (=> (not res!44244) (not e!56057))))

(declare-fun lt!40714 () ListLongMap!1441)

(assert (=> d!22343 (= res!44244 (contains!747 lt!40714 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!40712 () List!1509)

(assert (=> d!22343 (= lt!40714 (ListLongMap!1442 lt!40712))))

(declare-fun lt!40711 () Unit!2498)

(declare-fun lt!40713 () Unit!2498)

(assert (=> d!22343 (= lt!40711 lt!40713)))

(assert (=> d!22343 (= (getValueByKey!141 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22343 (= lt!40713 (lemmaContainsTupThenGetReturnValue!58 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22343 (= lt!40712 (insertStrictlySorted!61 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22343 (= (+!107 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!40714)))

(declare-fun b!85991 () Bool)

(declare-fun res!44245 () Bool)

(assert (=> b!85991 (=> (not res!44245) (not e!56057))))

(assert (=> b!85991 (= res!44245 (= (getValueByKey!141 (toList!736 lt!40714) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!85992 () Bool)

(assert (=> b!85992 (= e!56057 (contains!749 (toList!736 lt!40714) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22343 res!44244) b!85991))

(assert (= (and b!85991 res!44245) b!85992))

(declare-fun m!90585 () Bool)

(assert (=> d!22343 m!90585))

(declare-fun m!90587 () Bool)

(assert (=> d!22343 m!90587))

(declare-fun m!90589 () Bool)

(assert (=> d!22343 m!90589))

(declare-fun m!90591 () Bool)

(assert (=> d!22343 m!90591))

(declare-fun m!90593 () Bool)

(assert (=> b!85991 m!90593))

(declare-fun m!90595 () Bool)

(assert (=> b!85992 m!90595))

(assert (=> d!22133 d!22343))

(declare-fun d!22345 () Bool)

(declare-fun e!56058 () Bool)

(assert (=> d!22345 e!56058))

(declare-fun res!44246 () Bool)

(assert (=> d!22345 (=> (not res!44246) (not e!56058))))

(declare-fun lt!40718 () ListLongMap!1441)

(assert (=> d!22345 (= res!44246 (contains!747 lt!40718 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40716 () List!1509)

(assert (=> d!22345 (= lt!40718 (ListLongMap!1442 lt!40716))))

(declare-fun lt!40715 () Unit!2498)

(declare-fun lt!40717 () Unit!2498)

(assert (=> d!22345 (= lt!40715 lt!40717)))

(assert (=> d!22345 (= (getValueByKey!141 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22345 (= lt!40717 (lemmaContainsTupThenGetReturnValue!58 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22345 (= lt!40716 (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22345 (= (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40718)))

(declare-fun b!85993 () Bool)

(declare-fun res!44247 () Bool)

(assert (=> b!85993 (=> (not res!44247) (not e!56058))))

(assert (=> b!85993 (= res!44247 (= (getValueByKey!141 (toList!736 lt!40718) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!85994 () Bool)

(assert (=> b!85994 (= e!56058 (contains!749 (toList!736 lt!40718) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22345 res!44246) b!85993))

(assert (= (and b!85993 res!44247) b!85994))

(declare-fun m!90597 () Bool)

(assert (=> d!22345 m!90597))

(declare-fun m!90599 () Bool)

(assert (=> d!22345 m!90599))

(declare-fun m!90601 () Bool)

(assert (=> d!22345 m!90601))

(declare-fun m!90603 () Bool)

(assert (=> d!22345 m!90603))

(declare-fun m!90605 () Bool)

(assert (=> b!85993 m!90605))

(declare-fun m!90607 () Bool)

(assert (=> b!85994 m!90607))

(assert (=> d!22133 d!22345))

(declare-fun d!22347 () Bool)

(declare-fun e!56059 () Bool)

(assert (=> d!22347 e!56059))

(declare-fun res!44248 () Bool)

(assert (=> d!22347 (=> (not res!44248) (not e!56059))))

(declare-fun lt!40722 () ListLongMap!1441)

(assert (=> d!22347 (= res!44248 (contains!747 lt!40722 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!40720 () List!1509)

(assert (=> d!22347 (= lt!40722 (ListLongMap!1442 lt!40720))))

(declare-fun lt!40719 () Unit!2498)

(declare-fun lt!40721 () Unit!2498)

(assert (=> d!22347 (= lt!40719 lt!40721)))

(assert (=> d!22347 (= (getValueByKey!141 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22347 (= lt!40721 (lemmaContainsTupThenGetReturnValue!58 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22347 (= lt!40720 (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22347 (= (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!40722)))

(declare-fun b!85995 () Bool)

(declare-fun res!44249 () Bool)

(assert (=> b!85995 (=> (not res!44249) (not e!56059))))

(assert (=> b!85995 (= res!44249 (= (getValueByKey!141 (toList!736 lt!40722) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!85996 () Bool)

(assert (=> b!85996 (= e!56059 (contains!749 (toList!736 lt!40722) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22347 res!44248) b!85995))

(assert (= (and b!85995 res!44249) b!85996))

(declare-fun m!90609 () Bool)

(assert (=> d!22347 m!90609))

(declare-fun m!90611 () Bool)

(assert (=> d!22347 m!90611))

(declare-fun m!90613 () Bool)

(assert (=> d!22347 m!90613))

(declare-fun m!90615 () Bool)

(assert (=> d!22347 m!90615))

(declare-fun m!90617 () Bool)

(assert (=> b!85995 m!90617))

(declare-fun m!90619 () Bool)

(assert (=> b!85996 m!90619))

(assert (=> d!22133 d!22347))

(declare-fun d!22349 () Bool)

(declare-fun e!56060 () Bool)

(assert (=> d!22349 e!56060))

(declare-fun res!44250 () Bool)

(assert (=> d!22349 (=> (not res!44250) (not e!56060))))

(declare-fun lt!40726 () ListLongMap!1441)

(assert (=> d!22349 (= res!44250 (contains!747 lt!40726 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40724 () List!1509)

(assert (=> d!22349 (= lt!40726 (ListLongMap!1442 lt!40724))))

(declare-fun lt!40723 () Unit!2498)

(declare-fun lt!40725 () Unit!2498)

(assert (=> d!22349 (= lt!40723 lt!40725)))

(assert (=> d!22349 (= (getValueByKey!141 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22349 (= lt!40725 (lemmaContainsTupThenGetReturnValue!58 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22349 (= lt!40724 (insertStrictlySorted!61 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22349 (= (+!107 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40726)))

(declare-fun b!85997 () Bool)

(declare-fun res!44251 () Bool)

(assert (=> b!85997 (=> (not res!44251) (not e!56060))))

(assert (=> b!85997 (= res!44251 (= (getValueByKey!141 (toList!736 lt!40726) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!85998 () Bool)

(assert (=> b!85998 (= e!56060 (contains!749 (toList!736 lt!40726) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22349 res!44250) b!85997))

(assert (= (and b!85997 res!44251) b!85998))

(declare-fun m!90621 () Bool)

(assert (=> d!22349 m!90621))

(declare-fun m!90623 () Bool)

(assert (=> d!22349 m!90623))

(declare-fun m!90625 () Bool)

(assert (=> d!22349 m!90625))

(declare-fun m!90627 () Bool)

(assert (=> d!22349 m!90627))

(declare-fun m!90629 () Bool)

(assert (=> b!85997 m!90629))

(declare-fun m!90631 () Bool)

(assert (=> b!85998 m!90631))

(assert (=> d!22133 d!22349))

(declare-fun d!22351 () Bool)

(declare-fun e!56062 () Bool)

(assert (=> d!22351 e!56062))

(declare-fun res!44252 () Bool)

(assert (=> d!22351 (=> res!44252 e!56062)))

(declare-fun lt!40728 () Bool)

(assert (=> d!22351 (= res!44252 (not lt!40728))))

(declare-fun lt!40730 () Bool)

(assert (=> d!22351 (= lt!40728 lt!40730)))

(declare-fun lt!40727 () Unit!2498)

(declare-fun e!56061 () Unit!2498)

(assert (=> d!22351 (= lt!40727 e!56061)))

(declare-fun c!13999 () Bool)

(assert (=> d!22351 (= c!13999 lt!40730)))

(assert (=> d!22351 (= lt!40730 (containsKey!144 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22351 (= (contains!747 lt!40349 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40728)))

(declare-fun b!85999 () Bool)

(declare-fun lt!40729 () Unit!2498)

(assert (=> b!85999 (= e!56061 lt!40729)))

(assert (=> b!85999 (= lt!40729 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85999 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86000 () Bool)

(declare-fun Unit!2521 () Unit!2498)

(assert (=> b!86000 (= e!56061 Unit!2521)))

(declare-fun b!86001 () Bool)

(assert (=> b!86001 (= e!56062 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22351 c!13999) b!85999))

(assert (= (and d!22351 (not c!13999)) b!86000))

(assert (= (and d!22351 (not res!44252)) b!86001))

(assert (=> d!22351 m!89759))

(declare-fun m!90633 () Bool)

(assert (=> d!22351 m!90633))

(assert (=> b!85999 m!89759))

(declare-fun m!90635 () Bool)

(assert (=> b!85999 m!90635))

(assert (=> b!85999 m!89759))

(assert (=> b!85999 m!90399))

(assert (=> b!85999 m!90399))

(declare-fun m!90637 () Bool)

(assert (=> b!85999 m!90637))

(assert (=> b!86001 m!89759))

(assert (=> b!86001 m!90399))

(assert (=> b!86001 m!90399))

(assert (=> b!86001 m!90637))

(assert (=> b!85406 d!22351))

(declare-fun d!22353 () Bool)

(declare-fun e!56064 () Bool)

(assert (=> d!22353 e!56064))

(declare-fun res!44253 () Bool)

(assert (=> d!22353 (=> res!44253 e!56064)))

(declare-fun lt!40732 () Bool)

(assert (=> d!22353 (= res!44253 (not lt!40732))))

(declare-fun lt!40734 () Bool)

(assert (=> d!22353 (= lt!40732 lt!40734)))

(declare-fun lt!40731 () Unit!2498)

(declare-fun e!56063 () Unit!2498)

(assert (=> d!22353 (= lt!40731 e!56063)))

(declare-fun c!14000 () Bool)

(assert (=> d!22353 (= c!14000 lt!40734)))

(assert (=> d!22353 (= lt!40734 (containsKey!144 (toList!736 lt!40357) (_1!1105 lt!40192)))))

(assert (=> d!22353 (= (contains!747 lt!40357 (_1!1105 lt!40192)) lt!40732)))

(declare-fun b!86002 () Bool)

(declare-fun lt!40733 () Unit!2498)

(assert (=> b!86002 (= e!56063 lt!40733)))

(assert (=> b!86002 (= lt!40733 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40357) (_1!1105 lt!40192)))))

(assert (=> b!86002 (isDefined!93 (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192)))))

(declare-fun b!86003 () Bool)

(declare-fun Unit!2522 () Unit!2498)

(assert (=> b!86003 (= e!56063 Unit!2522)))

(declare-fun b!86004 () Bool)

(assert (=> b!86004 (= e!56064 (isDefined!93 (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192))))))

(assert (= (and d!22353 c!14000) b!86002))

(assert (= (and d!22353 (not c!14000)) b!86003))

(assert (= (and d!22353 (not res!44253)) b!86004))

(declare-fun m!90639 () Bool)

(assert (=> d!22353 m!90639))

(declare-fun m!90641 () Bool)

(assert (=> b!86002 m!90641))

(assert (=> b!86002 m!89829))

(assert (=> b!86002 m!89829))

(declare-fun m!90643 () Bool)

(assert (=> b!86002 m!90643))

(assert (=> b!86004 m!89829))

(assert (=> b!86004 m!89829))

(assert (=> b!86004 m!90643))

(assert (=> d!22131 d!22353))

(declare-fun b!86008 () Bool)

(declare-fun e!56066 () Option!147)

(assert (=> b!86008 (= e!56066 None!145)))

(declare-fun d!22355 () Bool)

(declare-fun c!14001 () Bool)

(assert (=> d!22355 (= c!14001 (and ((_ is Cons!1505) lt!40355) (= (_1!1105 (h!2096 lt!40355)) (_1!1105 lt!40192))))))

(declare-fun e!56065 () Option!147)

(assert (=> d!22355 (= (getValueByKey!141 lt!40355 (_1!1105 lt!40192)) e!56065)))

(declare-fun b!86006 () Bool)

(assert (=> b!86006 (= e!56065 e!56066)))

(declare-fun c!14002 () Bool)

(assert (=> b!86006 (= c!14002 (and ((_ is Cons!1505) lt!40355) (not (= (_1!1105 (h!2096 lt!40355)) (_1!1105 lt!40192)))))))

(declare-fun b!86007 () Bool)

(assert (=> b!86007 (= e!56066 (getValueByKey!141 (t!5222 lt!40355) (_1!1105 lt!40192)))))

(declare-fun b!86005 () Bool)

(assert (=> b!86005 (= e!56065 (Some!146 (_2!1105 (h!2096 lt!40355))))))

(assert (= (and d!22355 c!14001) b!86005))

(assert (= (and d!22355 (not c!14001)) b!86006))

(assert (= (and b!86006 c!14002) b!86007))

(assert (= (and b!86006 (not c!14002)) b!86008))

(declare-fun m!90645 () Bool)

(assert (=> b!86007 m!90645))

(assert (=> d!22131 d!22355))

(declare-fun d!22357 () Bool)

(assert (=> d!22357 (= (getValueByKey!141 lt!40355 (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192)))))

(declare-fun lt!40735 () Unit!2498)

(assert (=> d!22357 (= lt!40735 (choose!511 lt!40355 (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(declare-fun e!56067 () Bool)

(assert (=> d!22357 e!56067))

(declare-fun res!44254 () Bool)

(assert (=> d!22357 (=> (not res!44254) (not e!56067))))

(assert (=> d!22357 (= res!44254 (isStrictlySorted!285 lt!40355))))

(assert (=> d!22357 (= (lemmaContainsTupThenGetReturnValue!58 lt!40355 (_1!1105 lt!40192) (_2!1105 lt!40192)) lt!40735)))

(declare-fun b!86009 () Bool)

(declare-fun res!44255 () Bool)

(assert (=> b!86009 (=> (not res!44255) (not e!56067))))

(assert (=> b!86009 (= res!44255 (containsKey!144 lt!40355 (_1!1105 lt!40192)))))

(declare-fun b!86010 () Bool)

(assert (=> b!86010 (= e!56067 (contains!749 lt!40355 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(assert (= (and d!22357 res!44254) b!86009))

(assert (= (and b!86009 res!44255) b!86010))

(assert (=> d!22357 m!89823))

(declare-fun m!90647 () Bool)

(assert (=> d!22357 m!90647))

(declare-fun m!90649 () Bool)

(assert (=> d!22357 m!90649))

(declare-fun m!90651 () Bool)

(assert (=> b!86009 m!90651))

(declare-fun m!90653 () Bool)

(assert (=> b!86010 m!90653))

(assert (=> d!22131 d!22357))

(declare-fun b!86011 () Bool)

(declare-fun e!56071 () List!1509)

(declare-fun call!8167 () List!1509)

(assert (=> b!86011 (= e!56071 call!8167)))

(declare-fun call!8168 () List!1509)

(declare-fun c!14006 () Bool)

(declare-fun e!56070 () List!1509)

(declare-fun bm!8164 () Bool)

(assert (=> bm!8164 (= call!8168 ($colon$colon!71 e!56070 (ite c!14006 (h!2096 (toList!736 lt!40188)) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192)))))))

(declare-fun c!14005 () Bool)

(assert (=> bm!8164 (= c!14005 c!14006)))

(declare-fun b!86012 () Bool)

(declare-fun c!14004 () Bool)

(assert (=> b!86012 (= c!14004 (and ((_ is Cons!1505) (toList!736 lt!40188)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40188))) (_1!1105 lt!40192))))))

(declare-fun e!56068 () List!1509)

(assert (=> b!86012 (= e!56071 e!56068)))

(declare-fun b!86013 () Bool)

(declare-fun e!56072 () Bool)

(declare-fun lt!40736 () List!1509)

(assert (=> b!86013 (= e!56072 (contains!749 lt!40736 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!86014 () Bool)

(declare-fun res!44256 () Bool)

(assert (=> b!86014 (=> (not res!44256) (not e!56072))))

(assert (=> b!86014 (= res!44256 (containsKey!144 lt!40736 (_1!1105 lt!40192)))))

(declare-fun bm!8165 () Bool)

(assert (=> bm!8165 (= call!8167 call!8168)))

(declare-fun b!86015 () Bool)

(assert (=> b!86015 (= e!56070 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40188)) (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(declare-fun b!86016 () Bool)

(declare-fun c!14003 () Bool)

(assert (=> b!86016 (= e!56070 (ite c!14003 (t!5222 (toList!736 lt!40188)) (ite c!14004 (Cons!1505 (h!2096 (toList!736 lt!40188)) (t!5222 (toList!736 lt!40188))) Nil!1506)))))

(declare-fun b!86017 () Bool)

(declare-fun e!56069 () List!1509)

(assert (=> b!86017 (= e!56069 call!8168)))

(declare-fun bm!8166 () Bool)

(declare-fun call!8169 () List!1509)

(assert (=> bm!8166 (= call!8169 call!8167)))

(declare-fun d!22359 () Bool)

(assert (=> d!22359 e!56072))

(declare-fun res!44257 () Bool)

(assert (=> d!22359 (=> (not res!44257) (not e!56072))))

(assert (=> d!22359 (= res!44257 (isStrictlySorted!285 lt!40736))))

(assert (=> d!22359 (= lt!40736 e!56069)))

(assert (=> d!22359 (= c!14006 (and ((_ is Cons!1505) (toList!736 lt!40188)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40188))) (_1!1105 lt!40192))))))

(assert (=> d!22359 (isStrictlySorted!285 (toList!736 lt!40188))))

(assert (=> d!22359 (= (insertStrictlySorted!61 (toList!736 lt!40188) (_1!1105 lt!40192) (_2!1105 lt!40192)) lt!40736)))

(declare-fun b!86018 () Bool)

(assert (=> b!86018 (= e!56068 call!8169)))

(declare-fun b!86019 () Bool)

(assert (=> b!86019 (= e!56069 e!56071)))

(assert (=> b!86019 (= c!14003 (and ((_ is Cons!1505) (toList!736 lt!40188)) (= (_1!1105 (h!2096 (toList!736 lt!40188))) (_1!1105 lt!40192))))))

(declare-fun b!86020 () Bool)

(assert (=> b!86020 (= e!56068 call!8169)))

(assert (= (and d!22359 c!14006) b!86017))

(assert (= (and d!22359 (not c!14006)) b!86019))

(assert (= (and b!86019 c!14003) b!86011))

(assert (= (and b!86019 (not c!14003)) b!86012))

(assert (= (and b!86012 c!14004) b!86018))

(assert (= (and b!86012 (not c!14004)) b!86020))

(assert (= (or b!86018 b!86020) bm!8166))

(assert (= (or b!86011 bm!8166) bm!8165))

(assert (= (or b!86017 bm!8165) bm!8164))

(assert (= (and bm!8164 c!14005) b!86015))

(assert (= (and bm!8164 (not c!14005)) b!86016))

(assert (= (and d!22359 res!44257) b!86014))

(assert (= (and b!86014 res!44256) b!86013))

(declare-fun m!90655 () Bool)

(assert (=> b!86013 m!90655))

(declare-fun m!90657 () Bool)

(assert (=> b!86014 m!90657))

(declare-fun m!90659 () Bool)

(assert (=> bm!8164 m!90659))

(declare-fun m!90661 () Bool)

(assert (=> d!22359 m!90661))

(declare-fun m!90663 () Bool)

(assert (=> d!22359 m!90663))

(declare-fun m!90665 () Bool)

(assert (=> b!86015 m!90665))

(assert (=> d!22131 d!22359))

(declare-fun d!22361 () Bool)

(declare-fun e!56074 () Bool)

(assert (=> d!22361 e!56074))

(declare-fun res!44258 () Bool)

(assert (=> d!22361 (=> res!44258 e!56074)))

(declare-fun lt!40738 () Bool)

(assert (=> d!22361 (= res!44258 (not lt!40738))))

(declare-fun lt!40740 () Bool)

(assert (=> d!22361 (= lt!40738 lt!40740)))

(declare-fun lt!40737 () Unit!2498)

(declare-fun e!56073 () Unit!2498)

(assert (=> d!22361 (= lt!40737 e!56073)))

(declare-fun c!14007 () Bool)

(assert (=> d!22361 (= c!14007 lt!40740)))

(assert (=> d!22361 (= lt!40740 (containsKey!144 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22361 (= (contains!747 lt!40439 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40738)))

(declare-fun b!86021 () Bool)

(declare-fun lt!40739 () Unit!2498)

(assert (=> b!86021 (= e!56073 lt!40739)))

(assert (=> b!86021 (= lt!40739 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!86021 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86022 () Bool)

(declare-fun Unit!2523 () Unit!2498)

(assert (=> b!86022 (= e!56073 Unit!2523)))

(declare-fun b!86023 () Bool)

(assert (=> b!86023 (= e!56074 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22361 c!14007) b!86021))

(assert (= (and d!22361 (not c!14007)) b!86022))

(assert (= (and d!22361 (not res!44258)) b!86023))

(assert (=> d!22361 m!89759))

(declare-fun m!90667 () Bool)

(assert (=> d!22361 m!90667))

(assert (=> b!86021 m!89759))

(declare-fun m!90669 () Bool)

(assert (=> b!86021 m!90669))

(assert (=> b!86021 m!89759))

(assert (=> b!86021 m!90211))

(assert (=> b!86021 m!90211))

(declare-fun m!90671 () Bool)

(assert (=> b!86021 m!90671))

(assert (=> b!86023 m!89759))

(assert (=> b!86023 m!90211))

(assert (=> b!86023 m!90211))

(assert (=> b!86023 m!90671))

(assert (=> b!85461 d!22361))

(assert (=> b!85364 d!22179))

(declare-fun d!22363 () Bool)

(declare-fun e!56076 () Bool)

(assert (=> d!22363 e!56076))

(declare-fun res!44259 () Bool)

(assert (=> d!22363 (=> res!44259 e!56076)))

(declare-fun lt!40742 () Bool)

(assert (=> d!22363 (= res!44259 (not lt!40742))))

(declare-fun lt!40744 () Bool)

(assert (=> d!22363 (= lt!40742 lt!40744)))

(declare-fun lt!40741 () Unit!2498)

(declare-fun e!56075 () Unit!2498)

(assert (=> d!22363 (= lt!40741 e!56075)))

(declare-fun c!14008 () Bool)

(assert (=> d!22363 (= c!14008 lt!40744)))

(assert (=> d!22363 (= lt!40744 (containsKey!144 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22363 (= (contains!747 lt!40439 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40742)))

(declare-fun b!86024 () Bool)

(declare-fun lt!40743 () Unit!2498)

(assert (=> b!86024 (= e!56075 lt!40743)))

(assert (=> b!86024 (= lt!40743 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86024 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86025 () Bool)

(declare-fun Unit!2524 () Unit!2498)

(assert (=> b!86025 (= e!56075 Unit!2524)))

(declare-fun b!86026 () Bool)

(assert (=> b!86026 (= e!56076 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22363 c!14008) b!86024))

(assert (= (and d!22363 (not c!14008)) b!86025))

(assert (= (and d!22363 (not res!44259)) b!86026))

(declare-fun m!90673 () Bool)

(assert (=> d!22363 m!90673))

(declare-fun m!90675 () Bool)

(assert (=> b!86024 m!90675))

(declare-fun m!90677 () Bool)

(assert (=> b!86024 m!90677))

(assert (=> b!86024 m!90677))

(declare-fun m!90679 () Bool)

(assert (=> b!86024 m!90679))

(assert (=> b!86026 m!90677))

(assert (=> b!86026 m!90677))

(assert (=> b!86026 m!90679))

(assert (=> bm!8047 d!22363))

(declare-fun d!22365 () Bool)

(declare-fun e!56078 () Bool)

(assert (=> d!22365 e!56078))

(declare-fun res!44260 () Bool)

(assert (=> d!22365 (=> res!44260 e!56078)))

(declare-fun lt!40746 () Bool)

(assert (=> d!22365 (= res!44260 (not lt!40746))))

(declare-fun lt!40748 () Bool)

(assert (=> d!22365 (= lt!40746 lt!40748)))

(declare-fun lt!40745 () Unit!2498)

(declare-fun e!56077 () Unit!2498)

(assert (=> d!22365 (= lt!40745 e!56077)))

(declare-fun c!14009 () Bool)

(assert (=> d!22365 (= c!14009 lt!40748)))

(assert (=> d!22365 (= lt!40748 (containsKey!144 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22365 (= (contains!747 lt!40439 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40746)))

(declare-fun b!86027 () Bool)

(declare-fun lt!40747 () Unit!2498)

(assert (=> b!86027 (= e!56077 lt!40747)))

(assert (=> b!86027 (= lt!40747 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86027 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86028 () Bool)

(declare-fun Unit!2525 () Unit!2498)

(assert (=> b!86028 (= e!56077 Unit!2525)))

(declare-fun b!86029 () Bool)

(assert (=> b!86029 (= e!56078 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22365 c!14009) b!86027))

(assert (= (and d!22365 (not c!14009)) b!86028))

(assert (= (and d!22365 (not res!44260)) b!86029))

(declare-fun m!90681 () Bool)

(assert (=> d!22365 m!90681))

(declare-fun m!90683 () Bool)

(assert (=> b!86027 m!90683))

(assert (=> b!86027 m!90193))

(assert (=> b!86027 m!90193))

(declare-fun m!90685 () Bool)

(assert (=> b!86027 m!90685))

(assert (=> b!86029 m!90193))

(assert (=> b!86029 m!90193))

(assert (=> b!86029 m!90685))

(assert (=> bm!8048 d!22365))

(declare-fun d!22367 () Bool)

(declare-fun e!56080 () Bool)

(assert (=> d!22367 e!56080))

(declare-fun res!44261 () Bool)

(assert (=> d!22367 (=> res!44261 e!56080)))

(declare-fun lt!40750 () Bool)

(assert (=> d!22367 (= res!44261 (not lt!40750))))

(declare-fun lt!40752 () Bool)

(assert (=> d!22367 (= lt!40750 lt!40752)))

(declare-fun lt!40749 () Unit!2498)

(declare-fun e!56079 () Unit!2498)

(assert (=> d!22367 (= lt!40749 e!56079)))

(declare-fun c!14010 () Bool)

(assert (=> d!22367 (= c!14010 lt!40752)))

(assert (=> d!22367 (= lt!40752 (containsKey!144 (toList!736 lt!40364) (_1!1105 lt!40192)))))

(assert (=> d!22367 (= (contains!747 lt!40364 (_1!1105 lt!40192)) lt!40750)))

(declare-fun b!86030 () Bool)

(declare-fun lt!40751 () Unit!2498)

(assert (=> b!86030 (= e!56079 lt!40751)))

(assert (=> b!86030 (= lt!40751 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40364) (_1!1105 lt!40192)))))

(assert (=> b!86030 (isDefined!93 (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192)))))

(declare-fun b!86031 () Bool)

(declare-fun Unit!2526 () Unit!2498)

(assert (=> b!86031 (= e!56079 Unit!2526)))

(declare-fun b!86032 () Bool)

(assert (=> b!86032 (= e!56080 (isDefined!93 (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192))))))

(assert (= (and d!22367 c!14010) b!86030))

(assert (= (and d!22367 (not c!14010)) b!86031))

(assert (= (and d!22367 (not res!44261)) b!86032))

(declare-fun m!90687 () Bool)

(assert (=> d!22367 m!90687))

(declare-fun m!90689 () Bool)

(assert (=> b!86030 m!90689))

(assert (=> b!86030 m!89851))

(assert (=> b!86030 m!89851))

(declare-fun m!90691 () Bool)

(assert (=> b!86030 m!90691))

(assert (=> b!86032 m!89851))

(assert (=> b!86032 m!89851))

(assert (=> b!86032 m!90691))

(assert (=> d!22135 d!22367))

(declare-fun b!86036 () Bool)

(declare-fun e!56082 () Option!147)

(assert (=> b!86036 (= e!56082 None!145)))

(declare-fun d!22369 () Bool)

(declare-fun c!14011 () Bool)

(assert (=> d!22369 (= c!14011 (and ((_ is Cons!1505) lt!40362) (= (_1!1105 (h!2096 lt!40362)) (_1!1105 lt!40192))))))

(declare-fun e!56081 () Option!147)

(assert (=> d!22369 (= (getValueByKey!141 lt!40362 (_1!1105 lt!40192)) e!56081)))

(declare-fun b!86034 () Bool)

(assert (=> b!86034 (= e!56081 e!56082)))

(declare-fun c!14012 () Bool)

(assert (=> b!86034 (= c!14012 (and ((_ is Cons!1505) lt!40362) (not (= (_1!1105 (h!2096 lt!40362)) (_1!1105 lt!40192)))))))

(declare-fun b!86035 () Bool)

(assert (=> b!86035 (= e!56082 (getValueByKey!141 (t!5222 lt!40362) (_1!1105 lt!40192)))))

(declare-fun b!86033 () Bool)

(assert (=> b!86033 (= e!56081 (Some!146 (_2!1105 (h!2096 lt!40362))))))

(assert (= (and d!22369 c!14011) b!86033))

(assert (= (and d!22369 (not c!14011)) b!86034))

(assert (= (and b!86034 c!14012) b!86035))

(assert (= (and b!86034 (not c!14012)) b!86036))

(declare-fun m!90693 () Bool)

(assert (=> b!86035 m!90693))

(assert (=> d!22135 d!22369))

(declare-fun d!22371 () Bool)

(assert (=> d!22371 (= (getValueByKey!141 lt!40362 (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192)))))

(declare-fun lt!40753 () Unit!2498)

(assert (=> d!22371 (= lt!40753 (choose!511 lt!40362 (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(declare-fun e!56083 () Bool)

(assert (=> d!22371 e!56083))

(declare-fun res!44262 () Bool)

(assert (=> d!22371 (=> (not res!44262) (not e!56083))))

(assert (=> d!22371 (= res!44262 (isStrictlySorted!285 lt!40362))))

(assert (=> d!22371 (= (lemmaContainsTupThenGetReturnValue!58 lt!40362 (_1!1105 lt!40192) (_2!1105 lt!40192)) lt!40753)))

(declare-fun b!86037 () Bool)

(declare-fun res!44263 () Bool)

(assert (=> b!86037 (=> (not res!44263) (not e!56083))))

(assert (=> b!86037 (= res!44263 (containsKey!144 lt!40362 (_1!1105 lt!40192)))))

(declare-fun b!86038 () Bool)

(assert (=> b!86038 (= e!56083 (contains!749 lt!40362 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(assert (= (and d!22371 res!44262) b!86037))

(assert (= (and b!86037 res!44263) b!86038))

(assert (=> d!22371 m!89845))

(declare-fun m!90695 () Bool)

(assert (=> d!22371 m!90695))

(declare-fun m!90697 () Bool)

(assert (=> d!22371 m!90697))

(declare-fun m!90699 () Bool)

(assert (=> b!86037 m!90699))

(declare-fun m!90701 () Bool)

(assert (=> b!86038 m!90701))

(assert (=> d!22135 d!22371))

(declare-fun b!86039 () Bool)

(declare-fun e!56087 () List!1509)

(declare-fun call!8170 () List!1509)

(assert (=> b!86039 (= e!56087 call!8170)))

(declare-fun call!8171 () List!1509)

(declare-fun c!14016 () Bool)

(declare-fun bm!8167 () Bool)

(declare-fun e!56086 () List!1509)

(assert (=> bm!8167 (= call!8171 ($colon$colon!71 e!56086 (ite c!14016 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192)))))))

(declare-fun c!14015 () Bool)

(assert (=> bm!8167 (= c!14015 c!14016)))

(declare-fun b!86040 () Bool)

(declare-fun c!14014 () Bool)

(assert (=> b!86040 (= c!14014 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 lt!40192))))))

(declare-fun e!56084 () List!1509)

(assert (=> b!86040 (= e!56087 e!56084)))

(declare-fun b!86041 () Bool)

(declare-fun e!56088 () Bool)

(declare-fun lt!40754 () List!1509)

(assert (=> b!86041 (= e!56088 (contains!749 lt!40754 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!86042 () Bool)

(declare-fun res!44264 () Bool)

(assert (=> b!86042 (=> (not res!44264) (not e!56088))))

(assert (=> b!86042 (= res!44264 (containsKey!144 lt!40754 (_1!1105 lt!40192)))))

(declare-fun bm!8168 () Bool)

(assert (=> bm!8168 (= call!8170 call!8171)))

(declare-fun b!86043 () Bool)

(assert (=> b!86043 (= e!56086 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40193)) (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(declare-fun c!14013 () Bool)

(declare-fun b!86044 () Bool)

(assert (=> b!86044 (= e!56086 (ite c!14013 (t!5222 (toList!736 lt!40193)) (ite c!14014 (Cons!1505 (h!2096 (toList!736 lt!40193)) (t!5222 (toList!736 lt!40193))) Nil!1506)))))

(declare-fun b!86045 () Bool)

(declare-fun e!56085 () List!1509)

(assert (=> b!86045 (= e!56085 call!8171)))

(declare-fun bm!8169 () Bool)

(declare-fun call!8172 () List!1509)

(assert (=> bm!8169 (= call!8172 call!8170)))

(declare-fun d!22373 () Bool)

(assert (=> d!22373 e!56088))

(declare-fun res!44265 () Bool)

(assert (=> d!22373 (=> (not res!44265) (not e!56088))))

(assert (=> d!22373 (= res!44265 (isStrictlySorted!285 lt!40754))))

(assert (=> d!22373 (= lt!40754 e!56085)))

(assert (=> d!22373 (= c!14016 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 lt!40192))))))

(assert (=> d!22373 (isStrictlySorted!285 (toList!736 lt!40193))))

(assert (=> d!22373 (= (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 lt!40192) (_2!1105 lt!40192)) lt!40754)))

(declare-fun b!86046 () Bool)

(assert (=> b!86046 (= e!56084 call!8172)))

(declare-fun b!86047 () Bool)

(assert (=> b!86047 (= e!56085 e!56087)))

(assert (=> b!86047 (= c!14013 (and ((_ is Cons!1505) (toList!736 lt!40193)) (= (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 lt!40192))))))

(declare-fun b!86048 () Bool)

(assert (=> b!86048 (= e!56084 call!8172)))

(assert (= (and d!22373 c!14016) b!86045))

(assert (= (and d!22373 (not c!14016)) b!86047))

(assert (= (and b!86047 c!14013) b!86039))

(assert (= (and b!86047 (not c!14013)) b!86040))

(assert (= (and b!86040 c!14014) b!86046))

(assert (= (and b!86040 (not c!14014)) b!86048))

(assert (= (or b!86046 b!86048) bm!8169))

(assert (= (or b!86039 bm!8169) bm!8168))

(assert (= (or b!86045 bm!8168) bm!8167))

(assert (= (and bm!8167 c!14015) b!86043))

(assert (= (and bm!8167 (not c!14015)) b!86044))

(assert (= (and d!22373 res!44265) b!86042))

(assert (= (and b!86042 res!44264) b!86041))

(declare-fun m!90703 () Bool)

(assert (=> b!86041 m!90703))

(declare-fun m!90705 () Bool)

(assert (=> b!86042 m!90705))

(declare-fun m!90707 () Bool)

(assert (=> bm!8167 m!90707))

(declare-fun m!90709 () Bool)

(assert (=> d!22373 m!90709))

(assert (=> d!22373 m!90531))

(declare-fun m!90711 () Bool)

(assert (=> b!86043 m!90711))

(assert (=> d!22135 d!22373))

(declare-fun bm!8178 () Bool)

(declare-fun call!8184 () Bool)

(declare-fun call!8181 () Bool)

(assert (=> bm!8178 (= call!8184 call!8181)))

(declare-fun b!86083 () Bool)

(declare-fun res!44289 () Bool)

(declare-fun e!56105 () Bool)

(assert (=> b!86083 (=> (not res!44289) (not e!56105))))

(declare-fun lt!40819 () SeekEntryResult!237)

(assert (=> b!86083 (= res!44289 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!40819)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!40836 () SeekEntryResult!237)

(declare-fun e!56110 () Bool)

(declare-fun b!86084 () Bool)

(assert (=> b!86084 (= e!56110 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40836)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86086 () Bool)

(declare-fun e!56108 () Unit!2498)

(declare-fun Unit!2527 () Unit!2498)

(assert (=> b!86086 (= e!56108 Unit!2527)))

(declare-fun lt!40841 () Unit!2498)

(assert (=> b!86086 (= lt!40841 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun call!8182 () SeekEntryResult!237)

(assert (=> b!86086 (= lt!40836 call!8182)))

(declare-fun res!44288 () Bool)

(assert (=> b!86086 (= res!44288 ((_ is Found!237) lt!40836))))

(assert (=> b!86086 (=> (not res!44288) (not e!56110))))

(assert (=> b!86086 e!56110))

(declare-fun lt!40833 () Unit!2498)

(assert (=> b!86086 (= lt!40833 lt!40841)))

(assert (=> b!86086 false))

(declare-fun b!86087 () Bool)

(declare-fun c!14026 () Bool)

(assert (=> b!86087 (= c!14026 ((_ is MissingVacant!237) lt!40819))))

(declare-fun e!56111 () Bool)

(declare-fun e!56112 () Bool)

(assert (=> b!86087 (= e!56111 e!56112)))

(declare-fun b!86088 () Bool)

(declare-fun res!44286 () Bool)

(assert (=> b!86088 (= res!44286 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!40819)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56107 () Bool)

(assert (=> b!86088 (=> (not res!44286) (not e!56107))))

(declare-fun b!86089 () Bool)

(declare-fun e!56106 () Unit!2498)

(declare-fun Unit!2528 () Unit!2498)

(assert (=> b!86089 (= e!56106 Unit!2528)))

(declare-fun b!86090 () Bool)

(declare-fun res!44287 () Bool)

(assert (=> b!86090 (= res!44287 call!8181)))

(assert (=> b!86090 (=> (not res!44287) (not e!56110))))

(declare-fun b!86091 () Bool)

(declare-fun lt!40830 () Unit!2498)

(assert (=> b!86091 (= e!56108 lt!40830)))

(assert (=> b!86091 (= lt!40830 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(assert (=> b!86091 (= lt!40819 call!8182)))

(declare-fun c!14028 () Bool)

(assert (=> b!86091 (= c!14028 ((_ is MissingZero!237) lt!40819))))

(assert (=> b!86091 e!56111))

(declare-fun bm!8179 () Bool)

(assert (=> bm!8179 (= call!8182 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!86092 () Bool)

(declare-fun call!8183 () Bool)

(assert (=> b!86092 (= e!56107 (not call!8183))))

(declare-fun b!86085 () Bool)

(assert (=> b!86085 (= e!56112 ((_ is Undefined!237) lt!40819))))

(declare-fun d!22375 () Bool)

(declare-fun e!56109 () Bool)

(assert (=> d!22375 e!56109))

(declare-fun res!44292 () Bool)

(assert (=> d!22375 (=> (not res!44292) (not e!56109))))

(declare-fun lt!40840 () tuple2!2186)

(assert (=> d!22375 (= res!44292 (_1!1104 lt!40840))))

(assert (=> d!22375 (= lt!40840 (tuple2!2187 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd (_size!426 newMap!16) #b00000000000000000000000000000001) (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (_vacant!426 newMap!16))))))

(declare-fun lt!40826 () Unit!2498)

(declare-fun lt!40835 () Unit!2498)

(assert (=> d!22375 (= lt!40826 lt!40835)))

(declare-fun lt!40821 () array!4013)

(declare-fun lt!40844 () array!4011)

(assert (=> d!22375 (contains!747 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))

(assert (=> d!22375 (= lt!40835 (lemmaValidKeyInArrayIsInListMap!91 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22375 (= lt!40821 (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))))

(assert (=> d!22375 (= lt!40844 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun lt!40825 () Unit!2498)

(declare-fun lt!40823 () Unit!2498)

(assert (=> d!22375 (= lt!40825 lt!40823)))

(declare-fun lt!40842 () array!4011)

(assert (=> d!22375 (= (arrayCountValidKeys!0 lt!40842 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4011 (_ BitVec 32)) Unit!2498)

(assert (=> d!22375 (= lt!40823 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40842 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))

(assert (=> d!22375 (= lt!40842 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun lt!40817 () Unit!2498)

(declare-fun lt!40843 () Unit!2498)

(assert (=> d!22375 (= lt!40817 lt!40843)))

(declare-fun lt!40822 () array!4011)

(assert (=> d!22375 (arrayContainsKey!0 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!22375 (= lt!40843 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))

(assert (=> d!22375 (= lt!40822 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun lt!40828 () Unit!2498)

(declare-fun lt!40829 () Unit!2498)

(assert (=> d!22375 (= lt!40828 lt!40829)))

(assert (=> d!22375 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (getCurrentListMap!430 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!19 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2498)

(assert (=> d!22375 (= lt!40829 (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40831 () Unit!2498)

(declare-fun lt!40816 () Unit!2498)

(assert (=> d!22375 (= lt!40831 lt!40816)))

(assert (=> d!22375 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (mask!6365 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4011 (_ BitVec 32) (_ BitVec 32)) Unit!2498)

(assert (=> d!22375 (= lt!40816 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (mask!6365 newMap!16)))))

(declare-fun lt!40837 () Unit!2498)

(declare-fun lt!40827 () Unit!2498)

(assert (=> d!22375 (= lt!40837 lt!40827)))

(assert (=> d!22375 (= (arrayCountValidKeys!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4009 newMap!16) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4011 (_ BitVec 32) (_ BitVec 64)) Unit!2498)

(assert (=> d!22375 (= lt!40827 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4009 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun lt!40824 () Unit!2498)

(declare-fun lt!40838 () Unit!2498)

(assert (=> d!22375 (= lt!40824 lt!40838)))

(declare-fun lt!40815 () List!1508)

(declare-fun lt!40820 () (_ BitVec 32))

(assert (=> d!22375 (arrayNoDuplicates!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) lt!40820 lt!40815)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4011 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1508) Unit!2498)

(assert (=> d!22375 (= lt!40838 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) lt!40820 lt!40815))))

(assert (=> d!22375 (= lt!40815 Nil!1505)))

(assert (=> d!22375 (= lt!40820 #b00000000000000000000000000000000)))

(declare-fun lt!40839 () Unit!2498)

(assert (=> d!22375 (= lt!40839 e!56106)))

(declare-fun c!14027 () Bool)

(assert (=> d!22375 (= c!14027 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!40834 () Unit!2498)

(assert (=> d!22375 (= lt!40834 e!56108)))

(declare-fun c!14025 () Bool)

(assert (=> d!22375 (= c!14025 (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22375 (valid!335 newMap!16)))

(assert (=> d!22375 (= (updateHelperNewKey!31 newMap!16 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))) lt!40840)))

(declare-fun b!86093 () Bool)

(assert (=> b!86093 (= e!56109 (= (map!1196 (_2!1104 lt!40840)) (+!107 (map!1196 newMap!16) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86094 () Bool)

(declare-fun Unit!2529 () Unit!2498)

(assert (=> b!86094 (= e!56106 Unit!2529)))

(declare-fun lt!40832 () Unit!2498)

(declare-fun lemmaArrayContainsKeyThenInListMap!19 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2498)

(assert (=> b!86094 (= lt!40832 (lemmaArrayContainsKeyThenInListMap!19 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> b!86094 (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))

(declare-fun lt!40818 () Unit!2498)

(assert (=> b!86094 (= lt!40818 lt!40832)))

(assert (=> b!86094 false))

(declare-fun bm!8180 () Bool)

(assert (=> bm!8180 (= call!8183 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!86095 () Bool)

(declare-fun res!44291 () Bool)

(assert (=> b!86095 (=> (not res!44291) (not e!56105))))

(assert (=> b!86095 (= res!44291 call!8184)))

(assert (=> b!86095 (= e!56111 e!56105)))

(declare-fun b!86096 () Bool)

(declare-fun res!44284 () Bool)

(assert (=> b!86096 (=> (not res!44284) (not e!56109))))

(assert (=> b!86096 (= res!44284 (contains!747 (map!1196 (_2!1104 lt!40840)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86097 () Bool)

(assert (=> b!86097 (= e!56112 e!56107)))

(declare-fun res!44290 () Bool)

(assert (=> b!86097 (= res!44290 call!8184)))

(assert (=> b!86097 (=> (not res!44290) (not e!56107))))

(declare-fun b!86098 () Bool)

(assert (=> b!86098 (= e!56105 (not call!8183))))

(declare-fun b!86099 () Bool)

(declare-fun res!44285 () Bool)

(assert (=> b!86099 (=> (not res!44285) (not e!56109))))

(assert (=> b!86099 (= res!44285 (valid!335 (_2!1104 lt!40840)))))

(declare-fun bm!8181 () Bool)

(assert (=> bm!8181 (= call!8181 (inRange!0 (ite c!14025 (index!3086 lt!40836) (ite c!14028 (index!3085 lt!40819) (index!3088 lt!40819))) (mask!6365 newMap!16)))))

(assert (= (and d!22375 c!14025) b!86086))

(assert (= (and d!22375 (not c!14025)) b!86091))

(assert (= (and b!86086 res!44288) b!86090))

(assert (= (and b!86090 res!44287) b!86084))

(assert (= (and b!86091 c!14028) b!86095))

(assert (= (and b!86091 (not c!14028)) b!86087))

(assert (= (and b!86095 res!44291) b!86083))

(assert (= (and b!86083 res!44289) b!86098))

(assert (= (and b!86087 c!14026) b!86097))

(assert (= (and b!86087 (not c!14026)) b!86085))

(assert (= (and b!86097 res!44290) b!86088))

(assert (= (and b!86088 res!44286) b!86092))

(assert (= (or b!86095 b!86097) bm!8178))

(assert (= (or b!86098 b!86092) bm!8180))

(assert (= (or b!86090 bm!8178) bm!8181))

(assert (= (or b!86086 b!86091) bm!8179))

(assert (= (and d!22375 c!14027) b!86094))

(assert (= (and d!22375 (not c!14027)) b!86089))

(assert (= (and d!22375 res!44292) b!86099))

(assert (= (and b!86099 res!44285) b!86096))

(assert (= (and b!86096 res!44284) b!86093))

(declare-fun m!90713 () Bool)

(assert (=> b!86093 m!90713))

(assert (=> b!86093 m!89581))

(assert (=> b!86093 m!89581))

(declare-fun m!90715 () Bool)

(assert (=> b!86093 m!90715))

(assert (=> d!22375 m!90017))

(assert (=> d!22375 m!89569))

(declare-fun m!90717 () Bool)

(assert (=> d!22375 m!90717))

(assert (=> d!22375 m!89569))

(declare-fun m!90719 () Bool)

(assert (=> d!22375 m!90719))

(assert (=> d!22375 m!89901))

(assert (=> d!22375 m!90543))

(declare-fun m!90721 () Bool)

(assert (=> d!22375 m!90721))

(declare-fun m!90723 () Bool)

(assert (=> d!22375 m!90723))

(declare-fun m!90725 () Bool)

(assert (=> d!22375 m!90725))

(assert (=> d!22375 m!89569))

(declare-fun m!90727 () Bool)

(assert (=> d!22375 m!90727))

(declare-fun m!90729 () Bool)

(assert (=> d!22375 m!90729))

(declare-fun m!90731 () Bool)

(assert (=> d!22375 m!90731))

(assert (=> d!22375 m!89569))

(declare-fun m!90733 () Bool)

(assert (=> d!22375 m!90733))

(declare-fun m!90735 () Bool)

(assert (=> d!22375 m!90735))

(assert (=> d!22375 m!89569))

(declare-fun m!90737 () Bool)

(assert (=> d!22375 m!90737))

(declare-fun m!90739 () Bool)

(assert (=> d!22375 m!90739))

(assert (=> d!22375 m!89569))

(declare-fun m!90741 () Bool)

(assert (=> d!22375 m!90741))

(assert (=> d!22375 m!89901))

(declare-fun m!90743 () Bool)

(assert (=> d!22375 m!90743))

(assert (=> d!22375 m!90735))

(declare-fun m!90745 () Bool)

(assert (=> d!22375 m!90745))

(assert (=> d!22375 m!89625))

(assert (=> d!22375 m!89569))

(assert (=> d!22375 m!90003))

(declare-fun m!90747 () Bool)

(assert (=> d!22375 m!90747))

(assert (=> d!22375 m!89901))

(assert (=> d!22375 m!89569))

(assert (=> d!22375 m!89991))

(declare-fun m!90749 () Bool)

(assert (=> d!22375 m!90749))

(assert (=> d!22375 m!90743))

(declare-fun m!90751 () Bool)

(assert (=> d!22375 m!90751))

(declare-fun m!90753 () Bool)

(assert (=> b!86099 m!90753))

(assert (=> b!86096 m!90713))

(assert (=> b!86096 m!90713))

(assert (=> b!86096 m!89569))

(declare-fun m!90755 () Bool)

(assert (=> b!86096 m!90755))

(assert (=> bm!8179 m!89569))

(assert (=> bm!8179 m!89957))

(declare-fun m!90757 () Bool)

(assert (=> b!86083 m!90757))

(declare-fun m!90759 () Bool)

(assert (=> b!86088 m!90759))

(assert (=> b!86086 m!89569))

(assert (=> b!86086 m!89959))

(assert (=> bm!8180 m!89569))

(assert (=> bm!8180 m!90003))

(assert (=> b!86091 m!89569))

(assert (=> b!86091 m!90005))

(assert (=> b!86094 m!89569))

(declare-fun m!90761 () Bool)

(assert (=> b!86094 m!90761))

(assert (=> b!86094 m!89901))

(assert (=> b!86094 m!89901))

(assert (=> b!86094 m!89569))

(assert (=> b!86094 m!89991))

(declare-fun m!90763 () Bool)

(assert (=> b!86084 m!90763))

(declare-fun m!90765 () Bool)

(assert (=> bm!8181 m!90765))

(assert (=> bm!8111 d!22375))

(declare-fun d!22377 () Bool)

(assert (=> d!22377 (= (apply!82 lt!40439 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3638 () Bool)

(assert (= bs!3638 d!22377))

(assert (=> bs!3638 m!90677))

(assert (=> bs!3638 m!90677))

(declare-fun m!90767 () Bool)

(assert (=> bs!3638 m!90767))

(assert (=> b!85467 d!22377))

(declare-fun d!22379 () Bool)

(assert (=> d!22379 (isDefined!93 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun lt!40847 () Unit!2498)

(declare-fun choose!517 (List!1509 (_ BitVec 64)) Unit!2498)

(assert (=> d!22379 (= lt!40847 (choose!517 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun e!56115 () Bool)

(assert (=> d!22379 e!56115))

(declare-fun res!44295 () Bool)

(assert (=> d!22379 (=> (not res!44295) (not e!56115))))

(assert (=> d!22379 (= res!44295 (isStrictlySorted!285 (toList!736 lt!40195)))))

(assert (=> d!22379 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!40847)))

(declare-fun b!86102 () Bool)

(assert (=> b!86102 (= e!56115 (containsKey!144 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22379 res!44295) b!86102))

(assert (=> d!22379 m!89569))

(assert (=> d!22379 m!89953))

(assert (=> d!22379 m!89953))

(assert (=> d!22379 m!89955))

(assert (=> d!22379 m!89569))

(declare-fun m!90769 () Bool)

(assert (=> d!22379 m!90769))

(declare-fun m!90771 () Bool)

(assert (=> d!22379 m!90771))

(assert (=> b!86102 m!89569))

(assert (=> b!86102 m!89949))

(assert (=> b!85488 d!22379))

(declare-fun d!22381 () Bool)

(declare-fun isEmpty!343 (Option!147) Bool)

(assert (=> d!22381 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun bs!3639 () Bool)

(assert (= bs!3639 d!22381))

(assert (=> bs!3639 m!89953))

(declare-fun m!90773 () Bool)

(assert (=> bs!3639 m!90773))

(assert (=> b!85488 d!22381))

(declare-fun b!86106 () Bool)

(declare-fun e!56117 () Option!147)

(assert (=> b!86106 (= e!56117 None!145)))

(declare-fun c!14029 () Bool)

(declare-fun d!22383 () Bool)

(assert (=> d!22383 (= c!14029 (and ((_ is Cons!1505) (toList!736 lt!40195)) (= (_1!1105 (h!2096 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun e!56116 () Option!147)

(assert (=> d!22383 (= (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56116)))

(declare-fun b!86104 () Bool)

(assert (=> b!86104 (= e!56116 e!56117)))

(declare-fun c!14030 () Bool)

(assert (=> b!86104 (= c!14030 (and ((_ is Cons!1505) (toList!736 lt!40195)) (not (= (_1!1105 (h!2096 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun b!86105 () Bool)

(assert (=> b!86105 (= e!56117 (getValueByKey!141 (t!5222 (toList!736 lt!40195)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86103 () Bool)

(assert (=> b!86103 (= e!56116 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40195)))))))

(assert (= (and d!22383 c!14029) b!86103))

(assert (= (and d!22383 (not c!14029)) b!86104))

(assert (= (and b!86104 c!14030) b!86105))

(assert (= (and b!86104 (not c!14030)) b!86106))

(assert (=> b!86105 m!89569))

(declare-fun m!90775 () Bool)

(assert (=> b!86105 m!90775))

(assert (=> b!85488 d!22383))

(declare-fun lt!40856 () SeekEntryResult!237)

(declare-fun d!22385 () Bool)

(assert (=> d!22385 (and (or ((_ is Undefined!237) lt!40856) (not ((_ is Found!237) lt!40856)) (and (bvsge (index!3086 lt!40856) #b00000000000000000000000000000000) (bvslt (index!3086 lt!40856) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!40856) ((_ is Found!237) lt!40856) (not ((_ is MissingZero!237) lt!40856)) (and (bvsge (index!3085 lt!40856) #b00000000000000000000000000000000) (bvslt (index!3085 lt!40856) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!40856) ((_ is Found!237) lt!40856) ((_ is MissingZero!237) lt!40856) (not ((_ is MissingVacant!237) lt!40856)) (and (bvsge (index!3088 lt!40856) #b00000000000000000000000000000000) (bvslt (index!3088 lt!40856) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!40856) (ite ((_ is Found!237) lt!40856) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40856)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite ((_ is MissingZero!237) lt!40856) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!40856)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!237) lt!40856) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!40856)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56125 () SeekEntryResult!237)

(assert (=> d!22385 (= lt!40856 e!56125)))

(declare-fun c!14038 () Bool)

(declare-fun lt!40855 () SeekEntryResult!237)

(assert (=> d!22385 (= c!14038 (and ((_ is Intermediate!237) lt!40855) (undefined!1049 lt!40855)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4011 (_ BitVec 32)) SeekEntryResult!237)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!22385 (= lt!40855 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(assert (=> d!22385 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22385 (= (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)) lt!40856)))

(declare-fun b!86119 () Bool)

(declare-fun c!14039 () Bool)

(declare-fun lt!40854 () (_ BitVec 64))

(assert (=> b!86119 (= c!14039 (= lt!40854 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56126 () SeekEntryResult!237)

(declare-fun e!56124 () SeekEntryResult!237)

(assert (=> b!86119 (= e!56126 e!56124)))

(declare-fun b!86120 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4011 (_ BitVec 32)) SeekEntryResult!237)

(assert (=> b!86120 (= e!56124 (seekKeyOrZeroReturnVacant!0 (x!11990 lt!40855) (index!3087 lt!40855) (index!3087 lt!40855) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!86121 () Bool)

(assert (=> b!86121 (= e!56124 (MissingZero!237 (index!3087 lt!40855)))))

(declare-fun b!86122 () Bool)

(assert (=> b!86122 (= e!56125 Undefined!237)))

(declare-fun b!86123 () Bool)

(assert (=> b!86123 (= e!56126 (Found!237 (index!3087 lt!40855)))))

(declare-fun b!86124 () Bool)

(assert (=> b!86124 (= e!56125 e!56126)))

(assert (=> b!86124 (= lt!40854 (select (arr!1910 (_keys!4009 newMap!16)) (index!3087 lt!40855)))))

(declare-fun c!14037 () Bool)

(assert (=> b!86124 (= c!14037 (= lt!40854 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22385 c!14038) b!86122))

(assert (= (and d!22385 (not c!14038)) b!86124))

(assert (= (and b!86124 c!14037) b!86123))

(assert (= (and b!86124 (not c!14037)) b!86119))

(assert (= (and b!86119 c!14039) b!86121))

(assert (= (and b!86119 (not c!14039)) b!86120))

(declare-fun m!90777 () Bool)

(assert (=> d!22385 m!90777))

(declare-fun m!90779 () Bool)

(assert (=> d!22385 m!90779))

(declare-fun m!90781 () Bool)

(assert (=> d!22385 m!90781))

(assert (=> d!22385 m!90203))

(declare-fun m!90783 () Bool)

(assert (=> d!22385 m!90783))

(assert (=> d!22385 m!89569))

(declare-fun m!90785 () Bool)

(assert (=> d!22385 m!90785))

(assert (=> d!22385 m!89569))

(assert (=> d!22385 m!90783))

(assert (=> b!86120 m!89569))

(declare-fun m!90787 () Bool)

(assert (=> b!86120 m!90787))

(declare-fun m!90789 () Bool)

(assert (=> b!86124 m!90789))

(assert (=> bm!8098 d!22385))

(declare-fun d!22387 () Bool)

(declare-fun e!56127 () Bool)

(assert (=> d!22387 e!56127))

(declare-fun res!44296 () Bool)

(assert (=> d!22387 (=> (not res!44296) (not e!56127))))

(declare-fun lt!40860 () ListLongMap!1441)

(assert (=> d!22387 (= res!44296 (contains!747 lt!40860 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun lt!40858 () List!1509)

(assert (=> d!22387 (= lt!40860 (ListLongMap!1442 lt!40858))))

(declare-fun lt!40857 () Unit!2498)

(declare-fun lt!40859 () Unit!2498)

(assert (=> d!22387 (= lt!40857 lt!40859)))

(assert (=> d!22387 (= (getValueByKey!141 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (Some!146 (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!22387 (= lt!40859 (lemmaContainsTupThenGetReturnValue!58 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!22387 (= lt!40858 (insertStrictlySorted!61 (toList!736 e!55834) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!22387 (= (+!107 e!55834 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!40860)))

(declare-fun b!86125 () Bool)

(declare-fun res!44297 () Bool)

(assert (=> b!86125 (=> (not res!44297) (not e!56127))))

(assert (=> b!86125 (= res!44297 (= (getValueByKey!141 (toList!736 lt!40860) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (Some!146 (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86126 () Bool)

(assert (=> b!86126 (= e!56127 (contains!749 (toList!736 lt!40860) (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (= (and d!22387 res!44296) b!86125))

(assert (= (and b!86125 res!44297) b!86126))

(declare-fun m!90791 () Bool)

(assert (=> d!22387 m!90791))

(declare-fun m!90793 () Bool)

(assert (=> d!22387 m!90793))

(declare-fun m!90795 () Bool)

(assert (=> d!22387 m!90795))

(declare-fun m!90797 () Bool)

(assert (=> d!22387 m!90797))

(declare-fun m!90799 () Bool)

(assert (=> b!86125 m!90799))

(declare-fun m!90801 () Bool)

(assert (=> b!86126 m!90801))

(assert (=> bm!8114 d!22387))

(declare-fun call!8188 () ListLongMap!1441)

(declare-fun c!14042 () Bool)

(declare-fun call!8190 () ListLongMap!1441)

(declare-fun bm!8182 () Bool)

(declare-fun c!14043 () Bool)

(declare-fun call!8186 () ListLongMap!1441)

(declare-fun call!8191 () ListLongMap!1441)

(assert (=> bm!8182 (= call!8190 (+!107 (ite c!14043 call!8191 (ite c!14042 call!8186 call!8188)) (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!22389 () Bool)

(declare-fun e!56128 () Bool)

(assert (=> d!22389 e!56128))

(declare-fun res!44298 () Bool)

(assert (=> d!22389 (=> (not res!44298) (not e!56128))))

(assert (=> d!22389 (= res!44298 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!40878 () ListLongMap!1441)

(declare-fun lt!40861 () ListLongMap!1441)

(assert (=> d!22389 (= lt!40878 lt!40861)))

(declare-fun lt!40875 () Unit!2498)

(declare-fun e!56132 () Unit!2498)

(assert (=> d!22389 (= lt!40875 e!56132)))

(declare-fun c!14040 () Bool)

(declare-fun e!56133 () Bool)

(assert (=> d!22389 (= c!14040 e!56133)))

(declare-fun res!44305 () Bool)

(assert (=> d!22389 (=> (not res!44305) (not e!56133))))

(assert (=> d!22389 (= res!44305 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!56140 () ListLongMap!1441)

(assert (=> d!22389 (= lt!40861 e!56140)))

(assert (=> d!22389 (= c!14043 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22389 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22389 (= (getCurrentListMap!430 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40878)))

(declare-fun bm!8183 () Bool)

(assert (=> bm!8183 (= call!8188 call!8186)))

(declare-fun b!86127 () Bool)

(declare-fun e!56130 () Bool)

(declare-fun e!56139 () Bool)

(assert (=> b!86127 (= e!56130 e!56139)))

(declare-fun res!44303 () Bool)

(assert (=> b!86127 (=> (not res!44303) (not e!56139))))

(assert (=> b!86127 (= res!44303 (contains!747 lt!40878 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86127 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86128 () Bool)

(declare-fun lt!40864 () Unit!2498)

(assert (=> b!86128 (= e!56132 lt!40864)))

(declare-fun lt!40870 () ListLongMap!1441)

(assert (=> b!86128 (= lt!40870 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40866 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40866 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40874 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40874 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40869 () Unit!2498)

(assert (=> b!86128 (= lt!40869 (addStillContains!58 lt!40870 lt!40866 (zeroValue!2229 newMap!16) lt!40874))))

(assert (=> b!86128 (contains!747 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))) lt!40874)))

(declare-fun lt!40871 () Unit!2498)

(assert (=> b!86128 (= lt!40871 lt!40869)))

(declare-fun lt!40882 () ListLongMap!1441)

(assert (=> b!86128 (= lt!40882 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40865 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40865 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40862 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40862 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40881 () Unit!2498)

(assert (=> b!86128 (= lt!40881 (addApplyDifferent!58 lt!40882 lt!40865 (minValue!2229 newMap!16) lt!40862))))

(assert (=> b!86128 (= (apply!82 (+!107 lt!40882 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))) lt!40862) (apply!82 lt!40882 lt!40862))))

(declare-fun lt!40863 () Unit!2498)

(assert (=> b!86128 (= lt!40863 lt!40881)))

(declare-fun lt!40876 () ListLongMap!1441)

(assert (=> b!86128 (= lt!40876 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40867 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40867 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40873 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40873 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40879 () Unit!2498)

(assert (=> b!86128 (= lt!40879 (addApplyDifferent!58 lt!40876 lt!40867 (zeroValue!2229 newMap!16) lt!40873))))

(assert (=> b!86128 (= (apply!82 (+!107 lt!40876 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))) lt!40873) (apply!82 lt!40876 lt!40873))))

(declare-fun lt!40880 () Unit!2498)

(assert (=> b!86128 (= lt!40880 lt!40879)))

(declare-fun lt!40877 () ListLongMap!1441)

(assert (=> b!86128 (= lt!40877 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40868 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40868 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40872 () (_ BitVec 64))

(assert (=> b!86128 (= lt!40872 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86128 (= lt!40864 (addApplyDifferent!58 lt!40877 lt!40868 (minValue!2229 newMap!16) lt!40872))))

(assert (=> b!86128 (= (apply!82 (+!107 lt!40877 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))) lt!40872) (apply!82 lt!40877 lt!40872))))

(declare-fun bm!8184 () Bool)

(assert (=> bm!8184 (= call!8186 call!8191)))

(declare-fun b!86129 () Bool)

(declare-fun res!44301 () Bool)

(assert (=> b!86129 (=> (not res!44301) (not e!56128))))

(assert (=> b!86129 (= res!44301 e!56130)))

(declare-fun res!44300 () Bool)

(assert (=> b!86129 (=> res!44300 e!56130)))

(declare-fun e!56137 () Bool)

(assert (=> b!86129 (= res!44300 (not e!56137))))

(declare-fun res!44302 () Bool)

(assert (=> b!86129 (=> (not res!44302) (not e!56137))))

(assert (=> b!86129 (= res!44302 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86130 () Bool)

(declare-fun e!56131 () Bool)

(declare-fun call!8185 () Bool)

(assert (=> b!86130 (= e!56131 (not call!8185))))

(declare-fun b!86131 () Bool)

(declare-fun e!56138 () ListLongMap!1441)

(assert (=> b!86131 (= e!56140 e!56138)))

(assert (=> b!86131 (= c!14042 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86132 () Bool)

(declare-fun e!56136 () Bool)

(declare-fun call!8187 () Bool)

(assert (=> b!86132 (= e!56136 (not call!8187))))

(declare-fun b!86133 () Bool)

(declare-fun e!56129 () Bool)

(assert (=> b!86133 (= e!56129 (= (apply!82 lt!40878 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8185 () Bool)

(declare-fun call!8189 () ListLongMap!1441)

(assert (=> bm!8185 (= call!8189 call!8190)))

(declare-fun b!86134 () Bool)

(declare-fun e!56135 () Bool)

(assert (=> b!86134 (= e!56136 e!56135)))

(declare-fun res!44299 () Bool)

(assert (=> b!86134 (= res!44299 call!8187)))

(assert (=> b!86134 (=> (not res!44299) (not e!56135))))

(declare-fun b!86135 () Bool)

(assert (=> b!86135 (= e!56128 e!56131)))

(declare-fun c!14041 () Bool)

(assert (=> b!86135 (= c!14041 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86136 () Bool)

(assert (=> b!86136 (= e!56140 (+!107 call!8190 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!86137 () Bool)

(assert (=> b!86137 (= e!56131 e!56129)))

(declare-fun res!44304 () Bool)

(assert (=> b!86137 (= res!44304 call!8185)))

(assert (=> b!86137 (=> (not res!44304) (not e!56129))))

(declare-fun b!86138 () Bool)

(declare-fun Unit!2530 () Unit!2498)

(assert (=> b!86138 (= e!56132 Unit!2530)))

(declare-fun b!86139 () Bool)

(assert (=> b!86139 (= e!56133 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8186 () Bool)

(assert (=> bm!8186 (= call!8191 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!86140 () Bool)

(declare-fun res!44306 () Bool)

(assert (=> b!86140 (=> (not res!44306) (not e!56128))))

(assert (=> b!86140 (= res!44306 e!56136)))

(declare-fun c!14045 () Bool)

(assert (=> b!86140 (= c!14045 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86141 () Bool)

(declare-fun e!56134 () ListLongMap!1441)

(assert (=> b!86141 (= e!56134 call!8189)))

(declare-fun b!86142 () Bool)

(assert (=> b!86142 (= e!56137 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86143 () Bool)

(assert (=> b!86143 (= e!56134 call!8188)))

(declare-fun b!86144 () Bool)

(assert (=> b!86144 (= e!56138 call!8189)))

(declare-fun bm!8187 () Bool)

(assert (=> bm!8187 (= call!8185 (contains!747 lt!40878 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86145 () Bool)

(assert (=> b!86145 (= e!56135 (= (apply!82 lt!40878 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!86146 () Bool)

(declare-fun c!14044 () Bool)

(assert (=> b!86146 (= c!14044 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86146 (= e!56138 e!56134)))

(declare-fun b!86147 () Bool)

(assert (=> b!86147 (= e!56139 (= (apply!82 lt!40878 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86147 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))))))))

(assert (=> b!86147 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8188 () Bool)

(assert (=> bm!8188 (= call!8187 (contains!747 lt!40878 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22389 c!14043) b!86136))

(assert (= (and d!22389 (not c!14043)) b!86131))

(assert (= (and b!86131 c!14042) b!86144))

(assert (= (and b!86131 (not c!14042)) b!86146))

(assert (= (and b!86146 c!14044) b!86141))

(assert (= (and b!86146 (not c!14044)) b!86143))

(assert (= (or b!86141 b!86143) bm!8183))

(assert (= (or b!86144 bm!8183) bm!8184))

(assert (= (or b!86144 b!86141) bm!8185))

(assert (= (or b!86136 bm!8184) bm!8186))

(assert (= (or b!86136 bm!8185) bm!8182))

(assert (= (and d!22389 res!44305) b!86139))

(assert (= (and d!22389 c!14040) b!86128))

(assert (= (and d!22389 (not c!14040)) b!86138))

(assert (= (and d!22389 res!44298) b!86129))

(assert (= (and b!86129 res!44302) b!86142))

(assert (= (and b!86129 (not res!44300)) b!86127))

(assert (= (and b!86127 res!44303) b!86147))

(assert (= (and b!86129 res!44301) b!86140))

(assert (= (and b!86140 c!14045) b!86134))

(assert (= (and b!86140 (not c!14045)) b!86132))

(assert (= (and b!86134 res!44299) b!86145))

(assert (= (or b!86134 b!86132) bm!8188))

(assert (= (and b!86140 res!44306) b!86135))

(assert (= (and b!86135 c!14041) b!86137))

(assert (= (and b!86135 (not c!14041)) b!86130))

(assert (= (and b!86137 res!44304) b!86133))

(assert (= (or b!86137 b!86130) bm!8187))

(declare-fun b_lambda!3815 () Bool)

(assert (=> (not b_lambda!3815) (not b!86147)))

(assert (=> b!86147 t!5233))

(declare-fun b_and!5201 () Bool)

(assert (= b_and!5197 (and (=> t!5233 result!2923) b_and!5201)))

(assert (=> b!86147 t!5235))

(declare-fun b_and!5203 () Bool)

(assert (= b_and!5199 (and (=> t!5235 result!2925) b_and!5203)))

(declare-fun m!90803 () Bool)

(assert (=> b!86136 m!90803))

(declare-fun m!90805 () Bool)

(assert (=> b!86145 m!90805))

(declare-fun m!90807 () Bool)

(assert (=> b!86147 m!90807))

(assert (=> b!86147 m!90319))

(declare-fun m!90809 () Bool)

(assert (=> b!86147 m!90809))

(assert (=> b!86147 m!90807))

(assert (=> b!86147 m!90319))

(assert (=> b!86147 m!90065))

(declare-fun m!90811 () Bool)

(assert (=> b!86147 m!90811))

(assert (=> b!86147 m!90065))

(declare-fun m!90813 () Bool)

(assert (=> bm!8186 m!90813))

(assert (=> b!86139 m!90065))

(assert (=> b!86139 m!90065))

(assert (=> b!86139 m!90073))

(declare-fun m!90815 () Bool)

(assert (=> bm!8188 m!90815))

(declare-fun m!90817 () Bool)

(assert (=> bm!8182 m!90817))

(declare-fun m!90819 () Bool)

(assert (=> b!86128 m!90819))

(declare-fun m!90821 () Bool)

(assert (=> b!86128 m!90821))

(declare-fun m!90823 () Bool)

(assert (=> b!86128 m!90823))

(declare-fun m!90825 () Bool)

(assert (=> b!86128 m!90825))

(declare-fun m!90827 () Bool)

(assert (=> b!86128 m!90827))

(assert (=> b!86128 m!90813))

(assert (=> b!86128 m!90065))

(declare-fun m!90829 () Bool)

(assert (=> b!86128 m!90829))

(declare-fun m!90831 () Bool)

(assert (=> b!86128 m!90831))

(declare-fun m!90833 () Bool)

(assert (=> b!86128 m!90833))

(declare-fun m!90835 () Bool)

(assert (=> b!86128 m!90835))

(declare-fun m!90837 () Bool)

(assert (=> b!86128 m!90837))

(declare-fun m!90839 () Bool)

(assert (=> b!86128 m!90839))

(declare-fun m!90841 () Bool)

(assert (=> b!86128 m!90841))

(declare-fun m!90843 () Bool)

(assert (=> b!86128 m!90843))

(assert (=> b!86128 m!90827))

(declare-fun m!90845 () Bool)

(assert (=> b!86128 m!90845))

(assert (=> b!86128 m!90819))

(assert (=> b!86128 m!90837))

(assert (=> b!86128 m!90833))

(declare-fun m!90847 () Bool)

(assert (=> b!86128 m!90847))

(assert (=> b!86142 m!90065))

(assert (=> b!86142 m!90065))

(assert (=> b!86142 m!90073))

(declare-fun m!90849 () Bool)

(assert (=> bm!8187 m!90849))

(assert (=> d!22389 m!90203))

(declare-fun m!90851 () Bool)

(assert (=> b!86133 m!90851))

(assert (=> b!86127 m!90065))

(assert (=> b!86127 m!90065))

(declare-fun m!90853 () Bool)

(assert (=> b!86127 m!90853))

(assert (=> bm!8106 d!22389))

(declare-fun d!22391 () Bool)

(declare-fun lt!40883 () Bool)

(assert (=> d!22391 (= lt!40883 (select (content!90 (toList!736 lt!40357)) lt!40192))))

(declare-fun e!56142 () Bool)

(assert (=> d!22391 (= lt!40883 e!56142)))

(declare-fun res!44308 () Bool)

(assert (=> d!22391 (=> (not res!44308) (not e!56142))))

(assert (=> d!22391 (= res!44308 ((_ is Cons!1505) (toList!736 lt!40357)))))

(assert (=> d!22391 (= (contains!749 (toList!736 lt!40357) lt!40192) lt!40883)))

(declare-fun b!86148 () Bool)

(declare-fun e!56141 () Bool)

(assert (=> b!86148 (= e!56142 e!56141)))

(declare-fun res!44307 () Bool)

(assert (=> b!86148 (=> res!44307 e!56141)))

(assert (=> b!86148 (= res!44307 (= (h!2096 (toList!736 lt!40357)) lt!40192))))

(declare-fun b!86149 () Bool)

(assert (=> b!86149 (= e!56141 (contains!749 (t!5222 (toList!736 lt!40357)) lt!40192))))

(assert (= (and d!22391 res!44308) b!86148))

(assert (= (and b!86148 (not res!44307)) b!86149))

(declare-fun m!90855 () Bool)

(assert (=> d!22391 m!90855))

(declare-fun m!90857 () Bool)

(assert (=> d!22391 m!90857))

(declare-fun m!90859 () Bool)

(assert (=> b!86149 m!90859))

(assert (=> b!85410 d!22391))

(assert (=> b!85490 d!22381))

(assert (=> b!85490 d!22383))

(declare-fun d!22393 () Bool)

(assert (=> d!22393 (= (get!1205 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2647 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!85615 d!22393))

(declare-fun d!22395 () Bool)

(declare-fun lt!40884 () Bool)

(assert (=> d!22395 (= lt!40884 (select (content!90 (toList!736 lt!40353)) lt!40197))))

(declare-fun e!56144 () Bool)

(assert (=> d!22395 (= lt!40884 e!56144)))

(declare-fun res!44310 () Bool)

(assert (=> d!22395 (=> (not res!44310) (not e!56144))))

(assert (=> d!22395 (= res!44310 ((_ is Cons!1505) (toList!736 lt!40353)))))

(assert (=> d!22395 (= (contains!749 (toList!736 lt!40353) lt!40197) lt!40884)))

(declare-fun b!86150 () Bool)

(declare-fun e!56143 () Bool)

(assert (=> b!86150 (= e!56144 e!56143)))

(declare-fun res!44309 () Bool)

(assert (=> b!86150 (=> res!44309 e!56143)))

(assert (=> b!86150 (= res!44309 (= (h!2096 (toList!736 lt!40353)) lt!40197))))

(declare-fun b!86151 () Bool)

(assert (=> b!86151 (= e!56143 (contains!749 (t!5222 (toList!736 lt!40353)) lt!40197))))

(assert (= (and d!22395 res!44310) b!86150))

(assert (= (and b!86150 (not res!44309)) b!86151))

(declare-fun m!90861 () Bool)

(assert (=> d!22395 m!90861))

(declare-fun m!90863 () Bool)

(assert (=> d!22395 m!90863))

(declare-fun m!90865 () Bool)

(assert (=> b!86151 m!90865))

(assert (=> b!85408 d!22395))

(declare-fun call!8193 () ListLongMap!1441)

(declare-fun call!8197 () ListLongMap!1441)

(declare-fun call!8195 () ListLongMap!1441)

(declare-fun bm!8189 () Bool)

(declare-fun c!14048 () Bool)

(declare-fun call!8198 () ListLongMap!1441)

(declare-fun c!14049 () Bool)

(assert (=> bm!8189 (= call!8197 (+!107 (ite c!14049 call!8198 (ite c!14048 call!8193 call!8195)) (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(declare-fun d!22397 () Bool)

(declare-fun e!56145 () Bool)

(assert (=> d!22397 e!56145))

(declare-fun res!44311 () Bool)

(assert (=> d!22397 (=> (not res!44311) (not e!56145))))

(assert (=> d!22397 (= res!44311 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!40902 () ListLongMap!1441)

(declare-fun lt!40885 () ListLongMap!1441)

(assert (=> d!22397 (= lt!40902 lt!40885)))

(declare-fun lt!40899 () Unit!2498)

(declare-fun e!56149 () Unit!2498)

(assert (=> d!22397 (= lt!40899 e!56149)))

(declare-fun c!14046 () Bool)

(declare-fun e!56150 () Bool)

(assert (=> d!22397 (= c!14046 e!56150)))

(declare-fun res!44318 () Bool)

(assert (=> d!22397 (=> (not res!44318) (not e!56150))))

(assert (=> d!22397 (= res!44318 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!56157 () ListLongMap!1441)

(assert (=> d!22397 (= lt!40885 e!56157)))

(assert (=> d!22397 (= c!14049 (and (not (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22397 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22397 (= (getCurrentListMap!430 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40902)))

(declare-fun bm!8190 () Bool)

(assert (=> bm!8190 (= call!8195 call!8193)))

(declare-fun b!86152 () Bool)

(declare-fun e!56147 () Bool)

(declare-fun e!56156 () Bool)

(assert (=> b!86152 (= e!56147 e!56156)))

(declare-fun res!44316 () Bool)

(assert (=> b!86152 (=> (not res!44316) (not e!56156))))

(assert (=> b!86152 (= res!44316 (contains!747 lt!40902 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86152 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86153 () Bool)

(declare-fun lt!40888 () Unit!2498)

(assert (=> b!86153 (= e!56149 lt!40888)))

(declare-fun lt!40894 () ListLongMap!1441)

(assert (=> b!86153 (= lt!40894 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40890 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40890 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40898 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40898 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40893 () Unit!2498)

(assert (=> b!86153 (= lt!40893 (addStillContains!58 lt!40894 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) lt!40898))))

(assert (=> b!86153 (contains!747 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!40898)))

(declare-fun lt!40895 () Unit!2498)

(assert (=> b!86153 (= lt!40895 lt!40893)))

(declare-fun lt!40906 () ListLongMap!1441)

(assert (=> b!86153 (= lt!40906 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40889 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40889 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40886 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40886 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40905 () Unit!2498)

(assert (=> b!86153 (= lt!40905 (addApplyDifferent!58 lt!40906 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) lt!40886))))

(assert (=> b!86153 (= (apply!82 (+!107 lt!40906 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!40886) (apply!82 lt!40906 lt!40886))))

(declare-fun lt!40887 () Unit!2498)

(assert (=> b!86153 (= lt!40887 lt!40905)))

(declare-fun lt!40900 () ListLongMap!1441)

(assert (=> b!86153 (= lt!40900 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40891 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40891 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40897 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40897 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40903 () Unit!2498)

(assert (=> b!86153 (= lt!40903 (addApplyDifferent!58 lt!40900 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) lt!40897))))

(assert (=> b!86153 (= (apply!82 (+!107 lt!40900 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!40897) (apply!82 lt!40900 lt!40897))))

(declare-fun lt!40904 () Unit!2498)

(assert (=> b!86153 (= lt!40904 lt!40903)))

(declare-fun lt!40901 () ListLongMap!1441)

(assert (=> b!86153 (= lt!40901 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40892 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40892 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40896 () (_ BitVec 64))

(assert (=> b!86153 (= lt!40896 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86153 (= lt!40888 (addApplyDifferent!58 lt!40901 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) lt!40896))))

(assert (=> b!86153 (= (apply!82 (+!107 lt!40901 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!40896) (apply!82 lt!40901 lt!40896))))

(declare-fun bm!8191 () Bool)

(assert (=> bm!8191 (= call!8193 call!8198)))

(declare-fun b!86154 () Bool)

(declare-fun res!44314 () Bool)

(assert (=> b!86154 (=> (not res!44314) (not e!56145))))

(assert (=> b!86154 (= res!44314 e!56147)))

(declare-fun res!44313 () Bool)

(assert (=> b!86154 (=> res!44313 e!56147)))

(declare-fun e!56154 () Bool)

(assert (=> b!86154 (= res!44313 (not e!56154))))

(declare-fun res!44315 () Bool)

(assert (=> b!86154 (=> (not res!44315) (not e!56154))))

(assert (=> b!86154 (= res!44315 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86155 () Bool)

(declare-fun e!56148 () Bool)

(declare-fun call!8192 () Bool)

(assert (=> b!86155 (= e!56148 (not call!8192))))

(declare-fun b!86156 () Bool)

(declare-fun e!56155 () ListLongMap!1441)

(assert (=> b!86156 (= e!56157 e!56155)))

(assert (=> b!86156 (= c!14048 (and (not (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86157 () Bool)

(declare-fun e!56153 () Bool)

(declare-fun call!8194 () Bool)

(assert (=> b!86157 (= e!56153 (not call!8194))))

(declare-fun e!56146 () Bool)

(declare-fun b!86158 () Bool)

(assert (=> b!86158 (= e!56146 (= (apply!82 lt!40902 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))

(declare-fun bm!8192 () Bool)

(declare-fun call!8196 () ListLongMap!1441)

(assert (=> bm!8192 (= call!8196 call!8197)))

(declare-fun b!86159 () Bool)

(declare-fun e!56152 () Bool)

(assert (=> b!86159 (= e!56153 e!56152)))

(declare-fun res!44312 () Bool)

(assert (=> b!86159 (= res!44312 call!8194)))

(assert (=> b!86159 (=> (not res!44312) (not e!56152))))

(declare-fun b!86160 () Bool)

(assert (=> b!86160 (= e!56145 e!56148)))

(declare-fun c!14047 () Bool)

(assert (=> b!86160 (= c!14047 (not (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86161 () Bool)

(assert (=> b!86161 (= e!56157 (+!107 call!8197 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))

(declare-fun b!86162 () Bool)

(assert (=> b!86162 (= e!56148 e!56146)))

(declare-fun res!44317 () Bool)

(assert (=> b!86162 (= res!44317 call!8192)))

(assert (=> b!86162 (=> (not res!44317) (not e!56146))))

(declare-fun b!86163 () Bool)

(declare-fun Unit!2531 () Unit!2498)

(assert (=> b!86163 (= e!56149 Unit!2531)))

(declare-fun b!86164 () Bool)

(assert (=> b!86164 (= e!56150 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8193 () Bool)

(assert (=> bm!8193 (= call!8198 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!86165 () Bool)

(declare-fun res!44319 () Bool)

(assert (=> b!86165 (=> (not res!44319) (not e!56145))))

(assert (=> b!86165 (= res!44319 e!56153)))

(declare-fun c!14051 () Bool)

(assert (=> b!86165 (= c!14051 (not (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86166 () Bool)

(declare-fun e!56151 () ListLongMap!1441)

(assert (=> b!86166 (= e!56151 call!8196)))

(declare-fun b!86167 () Bool)

(assert (=> b!86167 (= e!56154 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86168 () Bool)

(assert (=> b!86168 (= e!56151 call!8195)))

(declare-fun b!86169 () Bool)

(assert (=> b!86169 (= e!56155 call!8196)))

(declare-fun bm!8194 () Bool)

(assert (=> bm!8194 (= call!8192 (contains!747 lt!40902 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86170 () Bool)

(assert (=> b!86170 (= e!56152 (= (apply!82 lt!40902 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))

(declare-fun b!86171 () Bool)

(declare-fun c!14050 () Bool)

(assert (=> b!86171 (= c!14050 (and (not (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86171 (= e!56155 e!56151)))

(declare-fun b!86172 () Bool)

(assert (=> b!86172 (= e!56156 (= (apply!82 lt!40902 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86172 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522))))))

(assert (=> b!86172 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8195 () Bool)

(assert (=> bm!8195 (= call!8194 (contains!747 lt!40902 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22397 c!14049) b!86161))

(assert (= (and d!22397 (not c!14049)) b!86156))

(assert (= (and b!86156 c!14048) b!86169))

(assert (= (and b!86156 (not c!14048)) b!86171))

(assert (= (and b!86171 c!14050) b!86166))

(assert (= (and b!86171 (not c!14050)) b!86168))

(assert (= (or b!86166 b!86168) bm!8190))

(assert (= (or b!86169 bm!8190) bm!8191))

(assert (= (or b!86169 b!86166) bm!8192))

(assert (= (or b!86161 bm!8191) bm!8193))

(assert (= (or b!86161 bm!8192) bm!8189))

(assert (= (and d!22397 res!44318) b!86164))

(assert (= (and d!22397 c!14046) b!86153))

(assert (= (and d!22397 (not c!14046)) b!86163))

(assert (= (and d!22397 res!44311) b!86154))

(assert (= (and b!86154 res!44315) b!86167))

(assert (= (and b!86154 (not res!44313)) b!86152))

(assert (= (and b!86152 res!44316) b!86172))

(assert (= (and b!86154 res!44314) b!86165))

(assert (= (and b!86165 c!14051) b!86159))

(assert (= (and b!86165 (not c!14051)) b!86157))

(assert (= (and b!86159 res!44312) b!86170))

(assert (= (or b!86159 b!86157) bm!8195))

(assert (= (and b!86165 res!44319) b!86160))

(assert (= (and b!86160 c!14047) b!86162))

(assert (= (and b!86160 (not c!14047)) b!86155))

(assert (= (and b!86162 res!44317) b!86158))

(assert (= (or b!86162 b!86155) bm!8194))

(declare-fun b_lambda!3817 () Bool)

(assert (=> (not b_lambda!3817) (not b!86172)))

(assert (=> b!86172 t!5233))

(declare-fun b_and!5205 () Bool)

(assert (= b_and!5201 (and (=> t!5233 result!2923) b_and!5205)))

(assert (=> b!86172 t!5235))

(declare-fun b_and!5207 () Bool)

(assert (= b_and!5203 (and (=> t!5235 result!2925) b_and!5207)))

(declare-fun m!90867 () Bool)

(assert (=> b!86161 m!90867))

(declare-fun m!90869 () Bool)

(assert (=> b!86170 m!90869))

(declare-fun m!90871 () Bool)

(assert (=> b!86172 m!90871))

(assert (=> b!86172 m!90319))

(declare-fun m!90873 () Bool)

(assert (=> b!86172 m!90873))

(assert (=> b!86172 m!90871))

(assert (=> b!86172 m!90319))

(assert (=> b!86172 m!90065))

(declare-fun m!90875 () Bool)

(assert (=> b!86172 m!90875))

(assert (=> b!86172 m!90065))

(declare-fun m!90877 () Bool)

(assert (=> bm!8193 m!90877))

(assert (=> b!86164 m!90065))

(assert (=> b!86164 m!90065))

(assert (=> b!86164 m!90073))

(declare-fun m!90879 () Bool)

(assert (=> bm!8195 m!90879))

(declare-fun m!90881 () Bool)

(assert (=> bm!8189 m!90881))

(declare-fun m!90883 () Bool)

(assert (=> b!86153 m!90883))

(declare-fun m!90885 () Bool)

(assert (=> b!86153 m!90885))

(declare-fun m!90887 () Bool)

(assert (=> b!86153 m!90887))

(declare-fun m!90889 () Bool)

(assert (=> b!86153 m!90889))

(declare-fun m!90891 () Bool)

(assert (=> b!86153 m!90891))

(assert (=> b!86153 m!90877))

(assert (=> b!86153 m!90065))

(declare-fun m!90893 () Bool)

(assert (=> b!86153 m!90893))

(declare-fun m!90895 () Bool)

(assert (=> b!86153 m!90895))

(declare-fun m!90897 () Bool)

(assert (=> b!86153 m!90897))

(declare-fun m!90899 () Bool)

(assert (=> b!86153 m!90899))

(declare-fun m!90901 () Bool)

(assert (=> b!86153 m!90901))

(declare-fun m!90903 () Bool)

(assert (=> b!86153 m!90903))

(declare-fun m!90905 () Bool)

(assert (=> b!86153 m!90905))

(declare-fun m!90907 () Bool)

(assert (=> b!86153 m!90907))

(assert (=> b!86153 m!90891))

(declare-fun m!90909 () Bool)

(assert (=> b!86153 m!90909))

(assert (=> b!86153 m!90883))

(assert (=> b!86153 m!90901))

(assert (=> b!86153 m!90897))

(declare-fun m!90911 () Bool)

(assert (=> b!86153 m!90911))

(assert (=> b!86167 m!90065))

(assert (=> b!86167 m!90065))

(assert (=> b!86167 m!90073))

(declare-fun m!90913 () Bool)

(assert (=> bm!8194 m!90913))

(assert (=> d!22397 m!90203))

(declare-fun m!90915 () Bool)

(assert (=> b!86158 m!90915))

(assert (=> b!86152 m!90065))

(assert (=> b!86152 m!90065))

(declare-fun m!90917 () Bool)

(assert (=> b!86152 m!90917))

(assert (=> bm!8105 d!22397))

(declare-fun d!22399 () Bool)

(declare-fun lt!40907 () Bool)

(assert (=> d!22399 (= lt!40907 (select (content!90 (toList!736 lt!40364)) lt!40192))))

(declare-fun e!56159 () Bool)

(assert (=> d!22399 (= lt!40907 e!56159)))

(declare-fun res!44321 () Bool)

(assert (=> d!22399 (=> (not res!44321) (not e!56159))))

(assert (=> d!22399 (= res!44321 ((_ is Cons!1505) (toList!736 lt!40364)))))

(assert (=> d!22399 (= (contains!749 (toList!736 lt!40364) lt!40192) lt!40907)))

(declare-fun b!86173 () Bool)

(declare-fun e!56158 () Bool)

(assert (=> b!86173 (= e!56159 e!56158)))

(declare-fun res!44320 () Bool)

(assert (=> b!86173 (=> res!44320 e!56158)))

(assert (=> b!86173 (= res!44320 (= (h!2096 (toList!736 lt!40364)) lt!40192))))

(declare-fun b!86174 () Bool)

(assert (=> b!86174 (= e!56158 (contains!749 (t!5222 (toList!736 lt!40364)) lt!40192))))

(assert (= (and d!22399 res!44321) b!86173))

(assert (= (and b!86173 (not res!44320)) b!86174))

(declare-fun m!90919 () Bool)

(assert (=> d!22399 m!90919))

(declare-fun m!90921 () Bool)

(assert (=> d!22399 m!90921))

(declare-fun m!90923 () Bool)

(assert (=> b!86174 m!90923))

(assert (=> b!85412 d!22399))

(assert (=> b!85397 d!22171))

(assert (=> b!85579 d!22385))

(declare-fun d!22401 () Bool)

(declare-fun e!56160 () Bool)

(assert (=> d!22401 e!56160))

(declare-fun res!44322 () Bool)

(assert (=> d!22401 (=> (not res!44322) (not e!56160))))

(declare-fun lt!40911 () ListLongMap!1441)

(assert (=> d!22401 (= res!44322 (contains!747 lt!40911 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40909 () List!1509)

(assert (=> d!22401 (= lt!40911 (ListLongMap!1442 lt!40909))))

(declare-fun lt!40908 () Unit!2498)

(declare-fun lt!40910 () Unit!2498)

(assert (=> d!22401 (= lt!40908 lt!40910)))

(assert (=> d!22401 (= (getValueByKey!141 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22401 (= lt!40910 (lemmaContainsTupThenGetReturnValue!58 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22401 (= lt!40909 (insertStrictlySorted!61 (toList!736 call!8050) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22401 (= (+!107 call!8050 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40911)))

(declare-fun b!86175 () Bool)

(declare-fun res!44323 () Bool)

(assert (=> b!86175 (=> (not res!44323) (not e!56160))))

(assert (=> b!86175 (= res!44323 (= (getValueByKey!141 (toList!736 lt!40911) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86176 () Bool)

(assert (=> b!86176 (= e!56160 (contains!749 (toList!736 lt!40911) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22401 res!44322) b!86175))

(assert (= (and b!86175 res!44323) b!86176))

(declare-fun m!90925 () Bool)

(assert (=> d!22401 m!90925))

(declare-fun m!90927 () Bool)

(assert (=> d!22401 m!90927))

(declare-fun m!90929 () Bool)

(assert (=> d!22401 m!90929))

(declare-fun m!90931 () Bool)

(assert (=> d!22401 m!90931))

(declare-fun m!90933 () Bool)

(assert (=> b!86175 m!90933))

(declare-fun m!90935 () Bool)

(assert (=> b!86176 m!90935))

(assert (=> b!85470 d!22401))

(declare-fun d!22403 () Bool)

(declare-fun e!56162 () Bool)

(assert (=> d!22403 e!56162))

(declare-fun res!44324 () Bool)

(assert (=> d!22403 (=> res!44324 e!56162)))

(declare-fun lt!40913 () Bool)

(assert (=> d!22403 (= res!44324 (not lt!40913))))

(declare-fun lt!40915 () Bool)

(assert (=> d!22403 (= lt!40913 lt!40915)))

(declare-fun lt!40912 () Unit!2498)

(declare-fun e!56161 () Unit!2498)

(assert (=> d!22403 (= lt!40912 e!56161)))

(declare-fun c!14052 () Bool)

(assert (=> d!22403 (= c!14052 lt!40915)))

(assert (=> d!22403 (= lt!40915 (containsKey!144 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22403 (= (contains!747 lt!40349 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40913)))

(declare-fun b!86177 () Bool)

(declare-fun lt!40914 () Unit!2498)

(assert (=> b!86177 (= e!56161 lt!40914)))

(assert (=> b!86177 (= lt!40914 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86177 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86178 () Bool)

(declare-fun Unit!2532 () Unit!2498)

(assert (=> b!86178 (= e!56161 Unit!2532)))

(declare-fun b!86179 () Bool)

(assert (=> b!86179 (= e!56162 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22403 c!14052) b!86177))

(assert (= (and d!22403 (not c!14052)) b!86178))

(assert (= (and d!22403 (not res!44324)) b!86179))

(declare-fun m!90937 () Bool)

(assert (=> d!22403 m!90937))

(declare-fun m!90939 () Bool)

(assert (=> b!86177 m!90939))

(declare-fun m!90941 () Bool)

(assert (=> b!86177 m!90941))

(assert (=> b!86177 m!90941))

(declare-fun m!90943 () Bool)

(assert (=> b!86177 m!90943))

(assert (=> b!86179 m!90941))

(assert (=> b!86179 m!90941))

(assert (=> b!86179 m!90943))

(assert (=> d!22127 d!22403))

(assert (=> d!22127 d!22143))

(declare-fun d!22405 () Bool)

(declare-fun e!56163 () Bool)

(assert (=> d!22405 e!56163))

(declare-fun res!44325 () Bool)

(assert (=> d!22405 (=> (not res!44325) (not e!56163))))

(declare-fun lt!40919 () ListLongMap!1441)

(assert (=> d!22405 (= res!44325 (contains!747 lt!40919 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!40917 () List!1509)

(assert (=> d!22405 (= lt!40919 (ListLongMap!1442 lt!40917))))

(declare-fun lt!40916 () Unit!2498)

(declare-fun lt!40918 () Unit!2498)

(assert (=> d!22405 (= lt!40916 lt!40918)))

(assert (=> d!22405 (= (getValueByKey!141 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22405 (= lt!40918 (lemmaContainsTupThenGetReturnValue!58 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22405 (= lt!40917 (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22405 (= (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!40919)))

(declare-fun b!86180 () Bool)

(declare-fun res!44326 () Bool)

(assert (=> b!86180 (=> (not res!44326) (not e!56163))))

(assert (=> b!86180 (= res!44326 (= (getValueByKey!141 (toList!736 lt!40919) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86181 () Bool)

(assert (=> b!86181 (= e!56163 (contains!749 (toList!736 lt!40919) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22405 res!44325) b!86180))

(assert (= (and b!86180 res!44326) b!86181))

(declare-fun m!90945 () Bool)

(assert (=> d!22405 m!90945))

(declare-fun m!90947 () Bool)

(assert (=> d!22405 m!90947))

(declare-fun m!90949 () Bool)

(assert (=> d!22405 m!90949))

(declare-fun m!90951 () Bool)

(assert (=> d!22405 m!90951))

(declare-fun m!90953 () Bool)

(assert (=> b!86180 m!90953))

(declare-fun m!90955 () Bool)

(assert (=> b!86181 m!90955))

(assert (=> d!22145 d!22405))

(declare-fun d!22407 () Bool)

(declare-fun e!56164 () Bool)

(assert (=> d!22407 e!56164))

(declare-fun res!44327 () Bool)

(assert (=> d!22407 (=> (not res!44327) (not e!56164))))

(declare-fun lt!40923 () ListLongMap!1441)

(assert (=> d!22407 (= res!44327 (contains!747 lt!40923 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40921 () List!1509)

(assert (=> d!22407 (= lt!40923 (ListLongMap!1442 lt!40921))))

(declare-fun lt!40920 () Unit!2498)

(declare-fun lt!40922 () Unit!2498)

(assert (=> d!22407 (= lt!40920 lt!40922)))

(assert (=> d!22407 (= (getValueByKey!141 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22407 (= lt!40922 (lemmaContainsTupThenGetReturnValue!58 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22407 (= lt!40921 (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22407 (= (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40923)))

(declare-fun b!86182 () Bool)

(declare-fun res!44328 () Bool)

(assert (=> b!86182 (=> (not res!44328) (not e!56164))))

(assert (=> b!86182 (= res!44328 (= (getValueByKey!141 (toList!736 lt!40923) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86183 () Bool)

(assert (=> b!86183 (= e!56164 (contains!749 (toList!736 lt!40923) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22407 res!44327) b!86182))

(assert (= (and b!86182 res!44328) b!86183))

(declare-fun m!90957 () Bool)

(assert (=> d!22407 m!90957))

(declare-fun m!90959 () Bool)

(assert (=> d!22407 m!90959))

(declare-fun m!90961 () Bool)

(assert (=> d!22407 m!90961))

(declare-fun m!90963 () Bool)

(assert (=> d!22407 m!90963))

(declare-fun m!90965 () Bool)

(assert (=> b!86182 m!90965))

(declare-fun m!90967 () Bool)

(assert (=> b!86183 m!90967))

(assert (=> d!22145 d!22407))

(declare-fun d!22409 () Bool)

(assert (=> d!22409 (= (+!107 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (+!107 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (=> d!22409 true))

(declare-fun _$28!143 () Unit!2498)

(assert (=> d!22409 (= (choose!506 lt!40193 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))) _$28!143)))

(declare-fun bs!3640 () Bool)

(assert (= bs!3640 d!22409))

(assert (=> bs!3640 m!89893))

(assert (=> bs!3640 m!89893))

(assert (=> bs!3640 m!89899))

(assert (=> bs!3640 m!89895))

(assert (=> bs!3640 m!89895))

(assert (=> bs!3640 m!89897))

(assert (=> d!22145 d!22409))

(declare-fun d!22411 () Bool)

(declare-fun e!56165 () Bool)

(assert (=> d!22411 e!56165))

(declare-fun res!44329 () Bool)

(assert (=> d!22411 (=> (not res!44329) (not e!56165))))

(declare-fun lt!40927 () ListLongMap!1441)

(assert (=> d!22411 (= res!44329 (contains!747 lt!40927 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!40925 () List!1509)

(assert (=> d!22411 (= lt!40927 (ListLongMap!1442 lt!40925))))

(declare-fun lt!40924 () Unit!2498)

(declare-fun lt!40926 () Unit!2498)

(assert (=> d!22411 (= lt!40924 lt!40926)))

(assert (=> d!22411 (= (getValueByKey!141 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22411 (= lt!40926 (lemmaContainsTupThenGetReturnValue!58 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22411 (= lt!40925 (insertStrictlySorted!61 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22411 (= (+!107 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!40927)))

(declare-fun b!86184 () Bool)

(declare-fun res!44330 () Bool)

(assert (=> b!86184 (=> (not res!44330) (not e!56165))))

(assert (=> b!86184 (= res!44330 (= (getValueByKey!141 (toList!736 lt!40927) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86185 () Bool)

(assert (=> b!86185 (= e!56165 (contains!749 (toList!736 lt!40927) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22411 res!44329) b!86184))

(assert (= (and b!86184 res!44330) b!86185))

(declare-fun m!90969 () Bool)

(assert (=> d!22411 m!90969))

(declare-fun m!90971 () Bool)

(assert (=> d!22411 m!90971))

(declare-fun m!90973 () Bool)

(assert (=> d!22411 m!90973))

(declare-fun m!90975 () Bool)

(assert (=> d!22411 m!90975))

(declare-fun m!90977 () Bool)

(assert (=> b!86184 m!90977))

(declare-fun m!90979 () Bool)

(assert (=> b!86185 m!90979))

(assert (=> d!22145 d!22411))

(declare-fun d!22413 () Bool)

(declare-fun e!56166 () Bool)

(assert (=> d!22413 e!56166))

(declare-fun res!44331 () Bool)

(assert (=> d!22413 (=> (not res!44331) (not e!56166))))

(declare-fun lt!40931 () ListLongMap!1441)

(assert (=> d!22413 (= res!44331 (contains!747 lt!40931 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!40929 () List!1509)

(assert (=> d!22413 (= lt!40931 (ListLongMap!1442 lt!40929))))

(declare-fun lt!40928 () Unit!2498)

(declare-fun lt!40930 () Unit!2498)

(assert (=> d!22413 (= lt!40928 lt!40930)))

(assert (=> d!22413 (= (getValueByKey!141 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22413 (= lt!40930 (lemmaContainsTupThenGetReturnValue!58 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22413 (= lt!40929 (insertStrictlySorted!61 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22413 (= (+!107 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40931)))

(declare-fun b!86186 () Bool)

(declare-fun res!44332 () Bool)

(assert (=> b!86186 (=> (not res!44332) (not e!56166))))

(assert (=> b!86186 (= res!44332 (= (getValueByKey!141 (toList!736 lt!40931) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86187 () Bool)

(assert (=> b!86187 (= e!56166 (contains!749 (toList!736 lt!40931) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22413 res!44331) b!86186))

(assert (= (and b!86186 res!44332) b!86187))

(declare-fun m!90981 () Bool)

(assert (=> d!22413 m!90981))

(declare-fun m!90983 () Bool)

(assert (=> d!22413 m!90983))

(declare-fun m!90985 () Bool)

(assert (=> d!22413 m!90985))

(declare-fun m!90987 () Bool)

(assert (=> d!22413 m!90987))

(declare-fun m!90989 () Bool)

(assert (=> b!86186 m!90989))

(declare-fun m!90991 () Bool)

(assert (=> b!86187 m!90991))

(assert (=> d!22145 d!22413))

(assert (=> bm!8046 d!22127))

(assert (=> b!85399 d!22169))

(declare-fun d!22415 () Bool)

(declare-fun lt!40932 () Bool)

(assert (=> d!22415 (= lt!40932 (select (content!90 (toList!736 lt!40368)) lt!40182))))

(declare-fun e!56168 () Bool)

(assert (=> d!22415 (= lt!40932 e!56168)))

(declare-fun res!44334 () Bool)

(assert (=> d!22415 (=> (not res!44334) (not e!56168))))

(assert (=> d!22415 (= res!44334 ((_ is Cons!1505) (toList!736 lt!40368)))))

(assert (=> d!22415 (= (contains!749 (toList!736 lt!40368) lt!40182) lt!40932)))

(declare-fun b!86188 () Bool)

(declare-fun e!56167 () Bool)

(assert (=> b!86188 (= e!56168 e!56167)))

(declare-fun res!44333 () Bool)

(assert (=> b!86188 (=> res!44333 e!56167)))

(assert (=> b!86188 (= res!44333 (= (h!2096 (toList!736 lt!40368)) lt!40182))))

(declare-fun b!86189 () Bool)

(assert (=> b!86189 (= e!56167 (contains!749 (t!5222 (toList!736 lt!40368)) lt!40182))))

(assert (= (and d!22415 res!44334) b!86188))

(assert (= (and b!86188 (not res!44333)) b!86189))

(declare-fun m!90993 () Bool)

(assert (=> d!22415 m!90993))

(declare-fun m!90995 () Bool)

(assert (=> d!22415 m!90995))

(declare-fun m!90997 () Bool)

(assert (=> b!86189 m!90997))

(assert (=> b!85414 d!22415))

(assert (=> d!22115 d!22119))

(declare-fun d!22417 () Bool)

(assert (=> d!22417 (not (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!22417 true))

(declare-fun _$68!73 () Unit!2498)

(assert (=> d!22417 (= (choose!68 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505)) _$68!73)))

(declare-fun bs!3641 () Bool)

(assert (= bs!3641 d!22417))

(assert (=> bs!3641 m!89569))

(assert (=> bs!3641 m!89573))

(assert (=> d!22115 d!22417))

(declare-fun mapIsEmpty!3411 () Bool)

(declare-fun mapRes!3411 () Bool)

(assert (=> mapIsEmpty!3411 mapRes!3411))

(declare-fun condMapEmpty!3411 () Bool)

(declare-fun mapDefault!3411 () ValueCell!923)

(assert (=> mapNonEmpty!3409 (= condMapEmpty!3411 (= mapRest!3409 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3411)))))

(declare-fun e!56170 () Bool)

(assert (=> mapNonEmpty!3409 (= tp!8953 (and e!56170 mapRes!3411))))

(declare-fun b!86190 () Bool)

(declare-fun e!56169 () Bool)

(assert (=> b!86190 (= e!56169 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3411 () Bool)

(declare-fun tp!8955 () Bool)

(assert (=> mapNonEmpty!3411 (= mapRes!3411 (and tp!8955 e!56169))))

(declare-fun mapKey!3411 () (_ BitVec 32))

(declare-fun mapRest!3411 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapValue!3411 () ValueCell!923)

(assert (=> mapNonEmpty!3411 (= mapRest!3409 (store mapRest!3411 mapKey!3411 mapValue!3411))))

(declare-fun b!86191 () Bool)

(assert (=> b!86191 (= e!56170 tp_is_empty!2533)))

(assert (= (and mapNonEmpty!3409 condMapEmpty!3411) mapIsEmpty!3411))

(assert (= (and mapNonEmpty!3409 (not condMapEmpty!3411)) mapNonEmpty!3411))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!923) mapValue!3411)) b!86190))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!923) mapDefault!3411)) b!86191))

(declare-fun m!90999 () Bool)

(assert (=> mapNonEmpty!3411 m!90999))

(declare-fun mapIsEmpty!3412 () Bool)

(declare-fun mapRes!3412 () Bool)

(assert (=> mapIsEmpty!3412 mapRes!3412))

(declare-fun condMapEmpty!3412 () Bool)

(declare-fun mapDefault!3412 () ValueCell!923)

(assert (=> mapNonEmpty!3410 (= condMapEmpty!3412 (= mapRest!3410 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3412)))))

(declare-fun e!56172 () Bool)

(assert (=> mapNonEmpty!3410 (= tp!8954 (and e!56172 mapRes!3412))))

(declare-fun b!86192 () Bool)

(declare-fun e!56171 () Bool)

(assert (=> b!86192 (= e!56171 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3412 () Bool)

(declare-fun tp!8956 () Bool)

(assert (=> mapNonEmpty!3412 (= mapRes!3412 (and tp!8956 e!56171))))

(declare-fun mapValue!3412 () ValueCell!923)

(declare-fun mapKey!3412 () (_ BitVec 32))

(declare-fun mapRest!3412 () (Array (_ BitVec 32) ValueCell!923))

(assert (=> mapNonEmpty!3412 (= mapRest!3410 (store mapRest!3412 mapKey!3412 mapValue!3412))))

(declare-fun b!86193 () Bool)

(assert (=> b!86193 (= e!56172 tp_is_empty!2533)))

(assert (= (and mapNonEmpty!3410 condMapEmpty!3412) mapIsEmpty!3412))

(assert (= (and mapNonEmpty!3410 (not condMapEmpty!3412)) mapNonEmpty!3412))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!923) mapValue!3412)) b!86192))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!923) mapDefault!3412)) b!86193))

(declare-fun m!91001 () Bool)

(assert (=> mapNonEmpty!3412 m!91001))

(declare-fun b_lambda!3819 () Bool)

(assert (= b_lambda!3813 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3819)))

(declare-fun b_lambda!3821 () Bool)

(assert (= b_lambda!3817 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3821)))

(declare-fun b_lambda!3823 () Bool)

(assert (= b_lambda!3811 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3823)))

(declare-fun b_lambda!3825 () Bool)

(assert (= b_lambda!3809 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3825)))

(declare-fun b_lambda!3827 () Bool)

(assert (= b_lambda!3815 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3827)))

(check-sat (not b!86177) (not b!85819) (not b!85711) (not b!86030) (not d!22173) (not b_lambda!3827) (not b!86183) (not b!85753) (not b!85755) (not d!22229) (not d!22341) (not b!85665) (not b!85974) (not bm!8186) (not d!22181) (not b!85966) (not d!22411) (not b!86035) (not d!22403) (not d!22287) (not b!86086) (not b!86024) (not d!22327) (not b!86126) (not d!22197) (not d!22189) (not b!85896) (not b!85922) (not bm!8124) (not d!22191) (not bm!8181) (not b!85898) (not d!22203) (not b!85637) (not d!22413) (not b!85751) (not d!22323) (not d!22415) (not bm!8187) (not b!86096) (not b!85769) (not bm!8145) (not b!85994) (not d!22209) (not d!22201) (not b!85977) (not b!86184) (not b!86174) (not d!22293) (not b!86145) (not b!86170) (not b!86091) (not b!85691) (not b!85932) (not b!86041) (not b!86010) (not bm!8156) (not b!86037) (not b!85926) b_and!5205 (not d!22247) (not d!22289) (not d!22417) (not b!85905) (not b!85825) (not b!85642) (not b!86015) (not b!85816) (not b!85779) (not b!85684) (not d!22381) (not bm!8155) (not b!86042) (not d!22273) (not bm!8164) (not bm!8131) (not b!85802) (not bm!8188) (not b!86102) (not b!85999) (not b!85981) (not d!22401) (not b!86001) (not b!85717) (not b!86136) (not b!86161) (not d!22365) (not b!86009) (not b!86094) (not d!22271) (not d!22207) (not b!86014) (not b!85758) (not bm!8160) (not d!22303) (not b!85901) (not b!85794) (not b!85694) (not d!22375) (not b!85988) (not b!85907) (not bm!8189) (not d!22387) tp_is_empty!2533 (not d!22233) (not b!86093) (not d!22267) (not b!85639) (not b!85781) (not b!85858) (not b!85756) (not b!85783) (not bm!8159) (not b!85687) (not b!85700) (not d!22349) (not b!85647) (not bm!8180) (not b!85953) (not bm!8121) (not b!85768) (not b!85653) (not b!85662) (not b!85894) (not b_lambda!3795) (not b!85916) (not d!22265) b_and!5207 (not b!86149) (not b!85929) (not b!85992) (not b!85813) (not d!22261) (not b!85804) (not d!22319) (not b!85638) (not b_next!2233) (not d!22409) (not b!85822) (not d!22405) (not b!85805) (not b!85693) (not d!22309) (not b!86153) (not d!22259) (not d!22221) (not b!85989) (not d!22243) (not d!22315) (not b!86105) (not b!86004) (not bm!8137) (not b!86142) (not b_lambda!3807) (not b!85792) (not b!85767) (not bm!8163) (not b!86180) (not b!85980) (not mapNonEmpty!3411) (not bm!8195) (not d!22241) (not b!85913) (not b!85830) (not b!85996) (not b!85978) (not b!85832) (not bm!8146) (not d!22295) (not b!86158) (not b!85742) (not d!22377) (not d!22389) (not b!85998) (not d!22213) (not b!85685) (not b!86133) (not d!22211) (not b!85827) (not b!85690) (not b_lambda!3819) (not b!85743) (not b!86187) (not b!85848) (not b!86021) (not b!85786) (not b_lambda!3825) (not b!85793) (not b!85692) (not b!85983) (not d!22385) (not b!86002) (not b!85993) (not d!22347) (not bm!8144) (not d!22379) (not b!85824) (not d!22359) (not d!22407) (not b!86125) (not d!22305) (not b!85838) (not d!22337) (not b!85705) (not d!22217) (not d!22185) (not b!85718) (not b_lambda!3821) (not b!86029) (not b!85986) (not b!86032) (not d!22183) (not mapNonEmpty!3412) (not d!22249) (not b!85949) (not bm!8194) (not d!22363) (not b!86043) (not b!85836) (not b!85952) (not bm!8167) (not b!86026) (not b!85788) (not d!22333) (not b!85997) (not d!22329) (not b!85683) (not b!85706) (not b!86167) (not d!22235) (not b!85943) (not d!22391) (not d!22367) (not d!22371) (not b!85845) (not d!22399) (not b!86164) (not b!85960) (not b!86099) (not d!22397) (not b!85789) (not d!22171) (not d!22343) (not d!22225) (not b!85741) (not b!85640) (not b!85961) (not b!85893) (not b!85810) (not b!85917) (not b!85643) (not d!22279) (not b!86139) (not bm!8154) (not b_lambda!3805) (not b!86013) (not b!86038) (not b!86189) (not d!22331) (not b_lambda!3823) (not d!22299) (not b!86172) (not b!85915) (not bm!8140) (not d!22205) (not b!86182) (not b!86127) (not b!85923) (not b!85955) (not b!86147) (not d!22195) (not b!86186) (not b!85708) (not b!85676) (not bm!8134) (not d!22339) (not b!86151) (not b!85855) (not b!85982) (not b!85991) (not b!86181) (not d!22353) (not b!85987) (not b!85958) (not b_next!2235) (not b!85930) (not d!22223) (not b!85990) (not b!86179) (not b!85641) (not d!22395) (not b!85911) (not d!22199) (not d!22373) (not b!86152) (not b!86176) (not b!85688) (not d!22193) (not b!85704) (not bm!8193) (not b!85965) (not b!85763) (not d!22325) (not b!85903) (not d!22215) (not b!85754) (not d!22361) (not d!22301) (not b!85699) (not d!22239) (not b!86027) (not b!85912) (not bm!8182) (not b!85761) (not b!86120) (not b!85833) (not d!22255) (not b!85964) (not b!85908) (not b!85995) (not d!22345) (not b!85686) (not b!86128) (not b!86007) (not b!85837) (not d!22351) (not b!85764) (not bm!8147) (not b!86023) (not d!22357) (not d!22285) (not b_lambda!3803) (not b!86185) (not d!22187) (not b!86175) (not d!22311) (not bm!8179))
(check-sat b_and!5205 b_and!5207 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun d!22419 () Bool)

(assert (=> d!22419 (= (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86142 d!22419))

(declare-fun d!22421 () Bool)

(declare-fun e!56174 () Bool)

(assert (=> d!22421 e!56174))

(declare-fun res!44335 () Bool)

(assert (=> d!22421 (=> res!44335 e!56174)))

(declare-fun lt!40934 () Bool)

(assert (=> d!22421 (= res!44335 (not lt!40934))))

(declare-fun lt!40936 () Bool)

(assert (=> d!22421 (= lt!40934 lt!40936)))

(declare-fun lt!40933 () Unit!2498)

(declare-fun e!56173 () Unit!2498)

(assert (=> d!22421 (= lt!40933 e!56173)))

(declare-fun c!14053 () Bool)

(assert (=> d!22421 (= c!14053 lt!40936)))

(assert (=> d!22421 (= lt!40936 (containsKey!144 (toList!736 lt!40636) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22421 (= (contains!747 lt!40636 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) lt!40934)))

(declare-fun b!86194 () Bool)

(declare-fun lt!40935 () Unit!2498)

(assert (=> b!86194 (= e!56173 lt!40935)))

(assert (=> b!86194 (= lt!40935 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40636) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86194 (isDefined!93 (getValueByKey!141 (toList!736 lt!40636) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86195 () Bool)

(declare-fun Unit!2533 () Unit!2498)

(assert (=> b!86195 (= e!56173 Unit!2533)))

(declare-fun b!86196 () Bool)

(assert (=> b!86196 (= e!56174 (isDefined!93 (getValueByKey!141 (toList!736 lt!40636) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22421 c!14053) b!86194))

(assert (= (and d!22421 (not c!14053)) b!86195))

(assert (= (and d!22421 (not res!44335)) b!86196))

(assert (=> d!22421 m!90065))

(declare-fun m!91003 () Bool)

(assert (=> d!22421 m!91003))

(assert (=> b!86194 m!90065))

(declare-fun m!91005 () Bool)

(assert (=> b!86194 m!91005))

(assert (=> b!86194 m!90065))

(declare-fun m!91007 () Bool)

(assert (=> b!86194 m!91007))

(assert (=> b!86194 m!91007))

(declare-fun m!91009 () Bool)

(assert (=> b!86194 m!91009))

(assert (=> b!86196 m!90065))

(assert (=> b!86196 m!91007))

(assert (=> b!86196 m!91007))

(assert (=> b!86196 m!91009))

(assert (=> b!85804 d!22421))

(declare-fun d!22423 () Bool)

(assert (=> d!22423 (= (isEmpty!341 lt!40543) (isEmpty!342 (toList!736 lt!40543)))))

(declare-fun bs!3642 () Bool)

(assert (= bs!3642 d!22423))

(declare-fun m!91011 () Bool)

(assert (=> bs!3642 m!91011))

(assert (=> b!85643 d!22423))

(declare-fun d!22425 () Bool)

(assert (=> d!22425 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22425 true))

(declare-fun _$8!76 () Unit!2498)

(assert (=> d!22425 (= (choose!509 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40530 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40194 (defaultEntry!2337 newMap!16)) _$8!76)))

(declare-fun bs!3643 () Bool)

(assert (= bs!3643 d!22425))

(assert (=> bs!3643 m!89901))

(assert (=> bs!3643 m!89901))

(assert (=> bs!3643 m!90199))

(assert (=> bs!3643 m!90201))

(assert (=> d!22221 d!22425))

(assert (=> d!22221 d!22265))

(declare-fun d!22427 () Bool)

(assert (=> d!22427 (= (validMask!0 (mask!6365 newMap!16)) (and (or (= (mask!6365 newMap!16) #b00000000000000000000000000000111) (= (mask!6365 newMap!16) #b00000000000000000000000000001111) (= (mask!6365 newMap!16) #b00000000000000000000000000011111) (= (mask!6365 newMap!16) #b00000000000000000000000000111111) (= (mask!6365 newMap!16) #b00000000000000000000000001111111) (= (mask!6365 newMap!16) #b00000000000000000000000011111111) (= (mask!6365 newMap!16) #b00000000000000000000000111111111) (= (mask!6365 newMap!16) #b00000000000000000000001111111111) (= (mask!6365 newMap!16) #b00000000000000000000011111111111) (= (mask!6365 newMap!16) #b00000000000000000000111111111111) (= (mask!6365 newMap!16) #b00000000000000000001111111111111) (= (mask!6365 newMap!16) #b00000000000000000011111111111111) (= (mask!6365 newMap!16) #b00000000000000000111111111111111) (= (mask!6365 newMap!16) #b00000000000000001111111111111111) (= (mask!6365 newMap!16) #b00000000000000011111111111111111) (= (mask!6365 newMap!16) #b00000000000000111111111111111111) (= (mask!6365 newMap!16) #b00000000000001111111111111111111) (= (mask!6365 newMap!16) #b00000000000011111111111111111111) (= (mask!6365 newMap!16) #b00000000000111111111111111111111) (= (mask!6365 newMap!16) #b00000000001111111111111111111111) (= (mask!6365 newMap!16) #b00000000011111111111111111111111) (= (mask!6365 newMap!16) #b00000000111111111111111111111111) (= (mask!6365 newMap!16) #b00000001111111111111111111111111) (= (mask!6365 newMap!16) #b00000011111111111111111111111111) (= (mask!6365 newMap!16) #b00000111111111111111111111111111) (= (mask!6365 newMap!16) #b00001111111111111111111111111111) (= (mask!6365 newMap!16) #b00011111111111111111111111111111) (= (mask!6365 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6365 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!22221 d!22427))

(declare-fun d!22429 () Bool)

(declare-fun e!56175 () Bool)

(assert (=> d!22429 e!56175))

(declare-fun res!44336 () Bool)

(assert (=> d!22429 (=> (not res!44336) (not e!56175))))

(declare-fun lt!40940 () ListLongMap!1441)

(assert (=> d!22429 (= res!44336 (contains!747 lt!40940 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(declare-fun lt!40938 () List!1509)

(assert (=> d!22429 (= lt!40940 (ListLongMap!1442 lt!40938))))

(declare-fun lt!40937 () Unit!2498)

(declare-fun lt!40939 () Unit!2498)

(assert (=> d!22429 (= lt!40937 lt!40939)))

(assert (=> d!22429 (= (getValueByKey!141 lt!40938 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(assert (=> d!22429 (= lt!40939 (lemmaContainsTupThenGetReturnValue!58 lt!40938 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(assert (=> d!22429 (= lt!40938 (insertStrictlySorted!61 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(assert (=> d!22429 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) lt!40940)))

(declare-fun b!86197 () Bool)

(declare-fun res!44337 () Bool)

(assert (=> b!86197 (=> (not res!44337) (not e!56175))))

(assert (=> b!86197 (= res!44337 (= (getValueByKey!141 (toList!736 lt!40940) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)))))))

(declare-fun b!86198 () Bool)

(assert (=> b!86198 (= e!56175 (contains!749 (toList!736 lt!40940) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)))))

(assert (= (and d!22429 res!44336) b!86197))

(assert (= (and b!86197 res!44337) b!86198))

(declare-fun m!91013 () Bool)

(assert (=> d!22429 m!91013))

(declare-fun m!91015 () Bool)

(assert (=> d!22429 m!91015))

(declare-fun m!91017 () Bool)

(assert (=> d!22429 m!91017))

(declare-fun m!91019 () Bool)

(assert (=> d!22429 m!91019))

(declare-fun m!91021 () Bool)

(assert (=> b!86197 m!91021))

(declare-fun m!91023 () Bool)

(assert (=> b!86198 m!91023))

(assert (=> d!22221 d!22429))

(declare-fun bm!8196 () Bool)

(declare-fun call!8202 () ListLongMap!1441)

(declare-fun call!8200 () ListLongMap!1441)

(declare-fun c!14057 () Bool)

(declare-fun call!8205 () ListLongMap!1441)

(declare-fun c!14056 () Bool)

(declare-fun call!8204 () ListLongMap!1441)

(assert (=> bm!8196 (= call!8204 (+!107 (ite c!14057 call!8205 (ite c!14056 call!8200 call!8202)) (ite (or c!14057 c!14056) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(declare-fun d!22431 () Bool)

(declare-fun e!56176 () Bool)

(assert (=> d!22431 e!56176))

(declare-fun res!44338 () Bool)

(assert (=> d!22431 (=> (not res!44338) (not e!56176))))

(assert (=> d!22431 (= res!44338 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!40958 () ListLongMap!1441)

(declare-fun lt!40941 () ListLongMap!1441)

(assert (=> d!22431 (= lt!40958 lt!40941)))

(declare-fun lt!40955 () Unit!2498)

(declare-fun e!56180 () Unit!2498)

(assert (=> d!22431 (= lt!40955 e!56180)))

(declare-fun c!14054 () Bool)

(declare-fun e!56181 () Bool)

(assert (=> d!22431 (= c!14054 e!56181)))

(declare-fun res!44345 () Bool)

(assert (=> d!22431 (=> (not res!44345) (not e!56181))))

(assert (=> d!22431 (= res!44345 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!56188 () ListLongMap!1441)

(assert (=> d!22431 (= lt!40941 e!56188)))

(assert (=> d!22431 (= c!14057 (and (not (= (bvand lt!40530 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40530 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22431 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22431 (= (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40958)))

(declare-fun bm!8197 () Bool)

(assert (=> bm!8197 (= call!8202 call!8200)))

(declare-fun b!86199 () Bool)

(declare-fun e!56178 () Bool)

(declare-fun e!56187 () Bool)

(assert (=> b!86199 (= e!56178 e!56187)))

(declare-fun res!44343 () Bool)

(assert (=> b!86199 (=> (not res!44343) (not e!56187))))

(assert (=> b!86199 (= res!44343 (contains!747 lt!40958 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86199 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86200 () Bool)

(declare-fun lt!40944 () Unit!2498)

(assert (=> b!86200 (= e!56180 lt!40944)))

(declare-fun lt!40950 () ListLongMap!1441)

(assert (=> b!86200 (= lt!40950 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40946 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40946 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40954 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40954 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40949 () Unit!2498)

(assert (=> b!86200 (= lt!40949 (addStillContains!58 lt!40950 lt!40946 (zeroValue!2229 newMap!16) lt!40954))))

(assert (=> b!86200 (contains!747 (+!107 lt!40950 (tuple2!2189 lt!40946 (zeroValue!2229 newMap!16))) lt!40954)))

(declare-fun lt!40951 () Unit!2498)

(assert (=> b!86200 (= lt!40951 lt!40949)))

(declare-fun lt!40962 () ListLongMap!1441)

(assert (=> b!86200 (= lt!40962 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40945 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40945 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40942 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40942 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40961 () Unit!2498)

(assert (=> b!86200 (= lt!40961 (addApplyDifferent!58 lt!40962 lt!40945 lt!40194 lt!40942))))

(assert (=> b!86200 (= (apply!82 (+!107 lt!40962 (tuple2!2189 lt!40945 lt!40194)) lt!40942) (apply!82 lt!40962 lt!40942))))

(declare-fun lt!40943 () Unit!2498)

(assert (=> b!86200 (= lt!40943 lt!40961)))

(declare-fun lt!40956 () ListLongMap!1441)

(assert (=> b!86200 (= lt!40956 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40947 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40947 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40953 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40953 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40959 () Unit!2498)

(assert (=> b!86200 (= lt!40959 (addApplyDifferent!58 lt!40956 lt!40947 (zeroValue!2229 newMap!16) lt!40953))))

(assert (=> b!86200 (= (apply!82 (+!107 lt!40956 (tuple2!2189 lt!40947 (zeroValue!2229 newMap!16))) lt!40953) (apply!82 lt!40956 lt!40953))))

(declare-fun lt!40960 () Unit!2498)

(assert (=> b!86200 (= lt!40960 lt!40959)))

(declare-fun lt!40957 () ListLongMap!1441)

(assert (=> b!86200 (= lt!40957 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40948 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40948 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40952 () (_ BitVec 64))

(assert (=> b!86200 (= lt!40952 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86200 (= lt!40944 (addApplyDifferent!58 lt!40957 lt!40948 lt!40194 lt!40952))))

(assert (=> b!86200 (= (apply!82 (+!107 lt!40957 (tuple2!2189 lt!40948 lt!40194)) lt!40952) (apply!82 lt!40957 lt!40952))))

(declare-fun bm!8198 () Bool)

(assert (=> bm!8198 (= call!8200 call!8205)))

(declare-fun b!86201 () Bool)

(declare-fun res!44341 () Bool)

(assert (=> b!86201 (=> (not res!44341) (not e!56176))))

(assert (=> b!86201 (= res!44341 e!56178)))

(declare-fun res!44340 () Bool)

(assert (=> b!86201 (=> res!44340 e!56178)))

(declare-fun e!56185 () Bool)

(assert (=> b!86201 (= res!44340 (not e!56185))))

(declare-fun res!44342 () Bool)

(assert (=> b!86201 (=> (not res!44342) (not e!56185))))

(assert (=> b!86201 (= res!44342 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86202 () Bool)

(declare-fun e!56179 () Bool)

(declare-fun call!8199 () Bool)

(assert (=> b!86202 (= e!56179 (not call!8199))))

(declare-fun b!86203 () Bool)

(declare-fun e!56186 () ListLongMap!1441)

(assert (=> b!86203 (= e!56188 e!56186)))

(assert (=> b!86203 (= c!14056 (and (not (= (bvand lt!40530 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40530 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86204 () Bool)

(declare-fun e!56184 () Bool)

(declare-fun call!8201 () Bool)

(assert (=> b!86204 (= e!56184 (not call!8201))))

(declare-fun b!86205 () Bool)

(declare-fun e!56177 () Bool)

(assert (=> b!86205 (= e!56177 (= (apply!82 lt!40958 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40194))))

(declare-fun bm!8199 () Bool)

(declare-fun call!8203 () ListLongMap!1441)

(assert (=> bm!8199 (= call!8203 call!8204)))

(declare-fun b!86206 () Bool)

(declare-fun e!56183 () Bool)

(assert (=> b!86206 (= e!56184 e!56183)))

(declare-fun res!44339 () Bool)

(assert (=> b!86206 (= res!44339 call!8201)))

(assert (=> b!86206 (=> (not res!44339) (not e!56183))))

(declare-fun b!86207 () Bool)

(assert (=> b!86207 (= e!56176 e!56179)))

(declare-fun c!14055 () Bool)

(assert (=> b!86207 (= c!14055 (not (= (bvand lt!40530 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86208 () Bool)

(assert (=> b!86208 (= e!56188 (+!107 call!8204 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)))))

(declare-fun b!86209 () Bool)

(assert (=> b!86209 (= e!56179 e!56177)))

(declare-fun res!44344 () Bool)

(assert (=> b!86209 (= res!44344 call!8199)))

(assert (=> b!86209 (=> (not res!44344) (not e!56177))))

(declare-fun b!86210 () Bool)

(declare-fun Unit!2534 () Unit!2498)

(assert (=> b!86210 (= e!56180 Unit!2534)))

(declare-fun b!86211 () Bool)

(assert (=> b!86211 (= e!56181 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8200 () Bool)

(assert (=> bm!8200 (= call!8205 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40530 (zeroValue!2229 newMap!16) lt!40194 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!86212 () Bool)

(declare-fun res!44346 () Bool)

(assert (=> b!86212 (=> (not res!44346) (not e!56176))))

(assert (=> b!86212 (= res!44346 e!56184)))

(declare-fun c!14059 () Bool)

(assert (=> b!86212 (= c!14059 (not (= (bvand lt!40530 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86213 () Bool)

(declare-fun e!56182 () ListLongMap!1441)

(assert (=> b!86213 (= e!56182 call!8203)))

(declare-fun b!86214 () Bool)

(assert (=> b!86214 (= e!56185 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86215 () Bool)

(assert (=> b!86215 (= e!56182 call!8202)))

(declare-fun b!86216 () Bool)

(assert (=> b!86216 (= e!56186 call!8203)))

(declare-fun bm!8201 () Bool)

(assert (=> bm!8201 (= call!8199 (contains!747 lt!40958 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86217 () Bool)

(assert (=> b!86217 (= e!56183 (= (apply!82 lt!40958 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!86218 () Bool)

(declare-fun c!14058 () Bool)

(assert (=> b!86218 (= c!14058 (and (not (= (bvand lt!40530 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40530 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86218 (= e!56186 e!56182)))

(declare-fun b!86219 () Bool)

(assert (=> b!86219 (= e!56187 (= (apply!82 lt!40958 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_values!2320 newMap!16))))))

(assert (=> b!86219 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8202 () Bool)

(assert (=> bm!8202 (= call!8201 (contains!747 lt!40958 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22431 c!14057) b!86208))

(assert (= (and d!22431 (not c!14057)) b!86203))

(assert (= (and b!86203 c!14056) b!86216))

(assert (= (and b!86203 (not c!14056)) b!86218))

(assert (= (and b!86218 c!14058) b!86213))

(assert (= (and b!86218 (not c!14058)) b!86215))

(assert (= (or b!86213 b!86215) bm!8197))

(assert (= (or b!86216 bm!8197) bm!8198))

(assert (= (or b!86216 b!86213) bm!8199))

(assert (= (or b!86208 bm!8198) bm!8200))

(assert (= (or b!86208 bm!8199) bm!8196))

(assert (= (and d!22431 res!44345) b!86211))

(assert (= (and d!22431 c!14054) b!86200))

(assert (= (and d!22431 (not c!14054)) b!86210))

(assert (= (and d!22431 res!44338) b!86201))

(assert (= (and b!86201 res!44342) b!86214))

(assert (= (and b!86201 (not res!44340)) b!86199))

(assert (= (and b!86199 res!44343) b!86219))

(assert (= (and b!86201 res!44341) b!86212))

(assert (= (and b!86212 c!14059) b!86206))

(assert (= (and b!86212 (not c!14059)) b!86204))

(assert (= (and b!86206 res!44339) b!86217))

(assert (= (or b!86206 b!86204) bm!8202))

(assert (= (and b!86212 res!44346) b!86207))

(assert (= (and b!86207 c!14055) b!86209))

(assert (= (and b!86207 (not c!14055)) b!86202))

(assert (= (and b!86209 res!44344) b!86205))

(assert (= (or b!86209 b!86202) bm!8201))

(declare-fun b_lambda!3829 () Bool)

(assert (=> (not b_lambda!3829) (not b!86219)))

(assert (=> b!86219 t!5233))

(declare-fun b_and!5209 () Bool)

(assert (= b_and!5205 (and (=> t!5233 result!2923) b_and!5209)))

(assert (=> b!86219 t!5235))

(declare-fun b_and!5211 () Bool)

(assert (= b_and!5207 (and (=> t!5235 result!2925) b_and!5211)))

(declare-fun m!91025 () Bool)

(assert (=> b!86208 m!91025))

(declare-fun m!91027 () Bool)

(assert (=> b!86217 m!91027))

(assert (=> b!86219 m!90317))

(assert (=> b!86219 m!90319))

(assert (=> b!86219 m!90321))

(assert (=> b!86219 m!90317))

(assert (=> b!86219 m!90319))

(assert (=> b!86219 m!90065))

(declare-fun m!91029 () Bool)

(assert (=> b!86219 m!91029))

(assert (=> b!86219 m!90065))

(declare-fun m!91031 () Bool)

(assert (=> bm!8200 m!91031))

(assert (=> b!86211 m!90065))

(assert (=> b!86211 m!90065))

(assert (=> b!86211 m!90073))

(declare-fun m!91033 () Bool)

(assert (=> bm!8202 m!91033))

(declare-fun m!91035 () Bool)

(assert (=> bm!8196 m!91035))

(declare-fun m!91037 () Bool)

(assert (=> b!86200 m!91037))

(declare-fun m!91039 () Bool)

(assert (=> b!86200 m!91039))

(declare-fun m!91041 () Bool)

(assert (=> b!86200 m!91041))

(declare-fun m!91043 () Bool)

(assert (=> b!86200 m!91043))

(declare-fun m!91045 () Bool)

(assert (=> b!86200 m!91045))

(assert (=> b!86200 m!91031))

(assert (=> b!86200 m!90065))

(declare-fun m!91047 () Bool)

(assert (=> b!86200 m!91047))

(declare-fun m!91049 () Bool)

(assert (=> b!86200 m!91049))

(declare-fun m!91051 () Bool)

(assert (=> b!86200 m!91051))

(declare-fun m!91053 () Bool)

(assert (=> b!86200 m!91053))

(declare-fun m!91055 () Bool)

(assert (=> b!86200 m!91055))

(declare-fun m!91057 () Bool)

(assert (=> b!86200 m!91057))

(declare-fun m!91059 () Bool)

(assert (=> b!86200 m!91059))

(declare-fun m!91061 () Bool)

(assert (=> b!86200 m!91061))

(assert (=> b!86200 m!91045))

(declare-fun m!91063 () Bool)

(assert (=> b!86200 m!91063))

(assert (=> b!86200 m!91037))

(assert (=> b!86200 m!91055))

(assert (=> b!86200 m!91051))

(declare-fun m!91065 () Bool)

(assert (=> b!86200 m!91065))

(assert (=> b!86214 m!90065))

(assert (=> b!86214 m!90065))

(assert (=> b!86214 m!90073))

(declare-fun m!91067 () Bool)

(assert (=> bm!8201 m!91067))

(assert (=> d!22431 m!90203))

(declare-fun m!91069 () Bool)

(assert (=> b!86205 m!91069))

(assert (=> b!86199 m!90065))

(assert (=> b!86199 m!90065))

(declare-fun m!91071 () Bool)

(assert (=> b!86199 m!91071))

(assert (=> d!22221 d!22431))

(declare-fun d!22433 () Bool)

(declare-fun lt!40963 () Bool)

(assert (=> d!22433 (= lt!40963 (select (content!90 lt!40355) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun e!56190 () Bool)

(assert (=> d!22433 (= lt!40963 e!56190)))

(declare-fun res!44348 () Bool)

(assert (=> d!22433 (=> (not res!44348) (not e!56190))))

(assert (=> d!22433 (= res!44348 ((_ is Cons!1505) lt!40355))))

(assert (=> d!22433 (= (contains!749 lt!40355 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))) lt!40963)))

(declare-fun b!86220 () Bool)

(declare-fun e!56189 () Bool)

(assert (=> b!86220 (= e!56190 e!56189)))

(declare-fun res!44347 () Bool)

(assert (=> b!86220 (=> res!44347 e!56189)))

(assert (=> b!86220 (= res!44347 (= (h!2096 lt!40355) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!86221 () Bool)

(assert (=> b!86221 (= e!56189 (contains!749 (t!5222 lt!40355) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(assert (= (and d!22433 res!44348) b!86220))

(assert (= (and b!86220 (not res!44347)) b!86221))

(declare-fun m!91073 () Bool)

(assert (=> d!22433 m!91073))

(declare-fun m!91075 () Bool)

(assert (=> d!22433 m!91075))

(declare-fun m!91077 () Bool)

(assert (=> b!86221 m!91077))

(assert (=> b!86010 d!22433))

(declare-fun d!22435 () Bool)

(declare-fun res!44353 () Bool)

(declare-fun e!56195 () Bool)

(assert (=> d!22435 (=> res!44353 e!56195)))

(assert (=> d!22435 (= res!44353 (or ((_ is Nil!1506) lt!40612) ((_ is Nil!1506) (t!5222 lt!40612))))))

(assert (=> d!22435 (= (isStrictlySorted!285 lt!40612) e!56195)))

(declare-fun b!86226 () Bool)

(declare-fun e!56196 () Bool)

(assert (=> b!86226 (= e!56195 e!56196)))

(declare-fun res!44354 () Bool)

(assert (=> b!86226 (=> (not res!44354) (not e!56196))))

(assert (=> b!86226 (= res!44354 (bvslt (_1!1105 (h!2096 lt!40612)) (_1!1105 (h!2096 (t!5222 lt!40612)))))))

(declare-fun b!86227 () Bool)

(assert (=> b!86227 (= e!56196 (isStrictlySorted!285 (t!5222 lt!40612)))))

(assert (= (and d!22435 (not res!44353)) b!86226))

(assert (= (and b!86226 res!44354) b!86227))

(declare-fun m!91079 () Bool)

(assert (=> b!86227 m!91079))

(assert (=> d!22249 d!22435))

(declare-fun d!22437 () Bool)

(declare-fun res!44355 () Bool)

(declare-fun e!56197 () Bool)

(assert (=> d!22437 (=> res!44355 e!56197)))

(assert (=> d!22437 (= res!44355 (or ((_ is Nil!1506) (toList!736 lt!40199)) ((_ is Nil!1506) (t!5222 (toList!736 lt!40199)))))))

(assert (=> d!22437 (= (isStrictlySorted!285 (toList!736 lt!40199)) e!56197)))

(declare-fun b!86228 () Bool)

(declare-fun e!56198 () Bool)

(assert (=> b!86228 (= e!56197 e!56198)))

(declare-fun res!44356 () Bool)

(assert (=> b!86228 (=> (not res!44356) (not e!56198))))

(assert (=> b!86228 (= res!44356 (bvslt (_1!1105 (h!2096 (toList!736 lt!40199))) (_1!1105 (h!2096 (t!5222 (toList!736 lt!40199))))))))

(declare-fun b!86229 () Bool)

(assert (=> b!86229 (= e!56198 (isStrictlySorted!285 (t!5222 (toList!736 lt!40199))))))

(assert (= (and d!22437 (not res!44355)) b!86228))

(assert (= (and b!86228 res!44356) b!86229))

(declare-fun m!91081 () Bool)

(assert (=> b!86229 m!91081))

(assert (=> d!22249 d!22437))

(declare-fun d!22439 () Bool)

(declare-fun e!56200 () Bool)

(assert (=> d!22439 e!56200))

(declare-fun res!44357 () Bool)

(assert (=> d!22439 (=> res!44357 e!56200)))

(declare-fun lt!40965 () Bool)

(assert (=> d!22439 (= res!44357 (not lt!40965))))

(declare-fun lt!40967 () Bool)

(assert (=> d!22439 (= lt!40965 lt!40967)))

(declare-fun lt!40964 () Unit!2498)

(declare-fun e!56199 () Unit!2498)

(assert (=> d!22439 (= lt!40964 e!56199)))

(declare-fun c!14060 () Bool)

(assert (=> d!22439 (= c!14060 lt!40967)))

(assert (=> d!22439 (= lt!40967 (containsKey!144 (toList!736 (map!1196 (_2!1104 lt!40840))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22439 (= (contains!747 (map!1196 (_2!1104 lt!40840)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!40965)))

(declare-fun b!86230 () Bool)

(declare-fun lt!40966 () Unit!2498)

(assert (=> b!86230 (= e!56199 lt!40966)))

(assert (=> b!86230 (= lt!40966 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (map!1196 (_2!1104 lt!40840))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> b!86230 (isDefined!93 (getValueByKey!141 (toList!736 (map!1196 (_2!1104 lt!40840))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86231 () Bool)

(declare-fun Unit!2535 () Unit!2498)

(assert (=> b!86231 (= e!56199 Unit!2535)))

(declare-fun b!86232 () Bool)

(assert (=> b!86232 (= e!56200 (isDefined!93 (getValueByKey!141 (toList!736 (map!1196 (_2!1104 lt!40840))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (= (and d!22439 c!14060) b!86230))

(assert (= (and d!22439 (not c!14060)) b!86231))

(assert (= (and d!22439 (not res!44357)) b!86232))

(assert (=> d!22439 m!89569))

(declare-fun m!91083 () Bool)

(assert (=> d!22439 m!91083))

(assert (=> b!86230 m!89569))

(declare-fun m!91085 () Bool)

(assert (=> b!86230 m!91085))

(assert (=> b!86230 m!89569))

(declare-fun m!91087 () Bool)

(assert (=> b!86230 m!91087))

(assert (=> b!86230 m!91087))

(declare-fun m!91089 () Bool)

(assert (=> b!86230 m!91089))

(assert (=> b!86232 m!89569))

(assert (=> b!86232 m!91087))

(assert (=> b!86232 m!91087))

(assert (=> b!86232 m!91089))

(assert (=> b!86096 d!22439))

(declare-fun d!22441 () Bool)

(assert (=> d!22441 (= (map!1196 (_2!1104 lt!40840)) (getCurrentListMap!430 (_keys!4009 (_2!1104 lt!40840)) (_values!2320 (_2!1104 lt!40840)) (mask!6365 (_2!1104 lt!40840)) (extraKeys!2176 (_2!1104 lt!40840)) (zeroValue!2229 (_2!1104 lt!40840)) (minValue!2229 (_2!1104 lt!40840)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40840))))))

(declare-fun bs!3644 () Bool)

(assert (= bs!3644 d!22441))

(declare-fun m!91091 () Bool)

(assert (=> bs!3644 m!91091))

(assert (=> b!86096 d!22441))

(assert (=> b!85779 d!22119))

(declare-fun d!22443 () Bool)

(declare-fun e!56202 () Bool)

(assert (=> d!22443 e!56202))

(declare-fun res!44358 () Bool)

(assert (=> d!22443 (=> res!44358 e!56202)))

(declare-fun lt!40969 () Bool)

(assert (=> d!22443 (= res!44358 (not lt!40969))))

(declare-fun lt!40971 () Bool)

(assert (=> d!22443 (= lt!40969 lt!40971)))

(declare-fun lt!40968 () Unit!2498)

(declare-fun e!56201 () Unit!2498)

(assert (=> d!22443 (= lt!40968 e!56201)))

(declare-fun c!14061 () Bool)

(assert (=> d!22443 (= c!14061 lt!40971)))

(assert (=> d!22443 (= lt!40971 (containsKey!144 (toList!736 lt!40636) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22443 (= (contains!747 lt!40636 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40969)))

(declare-fun b!86233 () Bool)

(declare-fun lt!40970 () Unit!2498)

(assert (=> b!86233 (= e!56201 lt!40970)))

(assert (=> b!86233 (= lt!40970 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40636) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86233 (isDefined!93 (getValueByKey!141 (toList!736 lt!40636) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86234 () Bool)

(declare-fun Unit!2536 () Unit!2498)

(assert (=> b!86234 (= e!56201 Unit!2536)))

(declare-fun b!86235 () Bool)

(assert (=> b!86235 (= e!56202 (isDefined!93 (getValueByKey!141 (toList!736 lt!40636) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22443 c!14061) b!86233))

(assert (= (and d!22443 (not c!14061)) b!86234))

(assert (= (and d!22443 (not res!44358)) b!86235))

(declare-fun m!91093 () Bool)

(assert (=> d!22443 m!91093))

(declare-fun m!91095 () Bool)

(assert (=> b!86233 m!91095))

(declare-fun m!91097 () Bool)

(assert (=> b!86233 m!91097))

(assert (=> b!86233 m!91097))

(declare-fun m!91099 () Bool)

(assert (=> b!86233 m!91099))

(assert (=> b!86235 m!91097))

(assert (=> b!86235 m!91097))

(assert (=> b!86235 m!91099))

(assert (=> bm!8146 d!22443))

(declare-fun d!22445 () Bool)

(declare-fun c!14064 () Bool)

(assert (=> d!22445 (= c!14064 ((_ is Nil!1506) (toList!736 lt!40357)))))

(declare-fun e!56205 () (InoxSet tuple2!2188))

(assert (=> d!22445 (= (content!90 (toList!736 lt!40357)) e!56205)))

(declare-fun b!86240 () Bool)

(assert (=> b!86240 (= e!56205 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!86241 () Bool)

(assert (=> b!86241 (= e!56205 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40357)) true) (content!90 (t!5222 (toList!736 lt!40357)))))))

(assert (= (and d!22445 c!14064) b!86240))

(assert (= (and d!22445 (not c!14064)) b!86241))

(declare-fun m!91101 () Bool)

(assert (=> b!86241 m!91101))

(declare-fun m!91103 () Bool)

(assert (=> b!86241 m!91103))

(assert (=> d!22391 d!22445))

(declare-fun d!22447 () Bool)

(declare-fun res!44359 () Bool)

(declare-fun e!56206 () Bool)

(assert (=> d!22447 (=> res!44359 e!56206)))

(assert (=> d!22447 (= res!44359 (and ((_ is Cons!1505) (toList!736 lt!40439)) (= (_1!1105 (h!2096 (toList!736 lt!40439))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22447 (= (containsKey!144 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000) e!56206)))

(declare-fun b!86242 () Bool)

(declare-fun e!56207 () Bool)

(assert (=> b!86242 (= e!56206 e!56207)))

(declare-fun res!44360 () Bool)

(assert (=> b!86242 (=> (not res!44360) (not e!56207))))

(assert (=> b!86242 (= res!44360 (and (or (not ((_ is Cons!1505) (toList!736 lt!40439))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40439))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1505) (toList!736 lt!40439)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40439))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86243 () Bool)

(assert (=> b!86243 (= e!56207 (containsKey!144 (t!5222 (toList!736 lt!40439)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22447 (not res!44359)) b!86242))

(assert (= (and b!86242 res!44360) b!86243))

(declare-fun m!91105 () Bool)

(assert (=> b!86243 m!91105))

(assert (=> d!22365 d!22447))

(declare-fun d!22449 () Bool)

(assert (=> d!22449 (= (apply!82 lt!40876 lt!40873) (get!1207 (getValueByKey!141 (toList!736 lt!40876) lt!40873)))))

(declare-fun bs!3645 () Bool)

(assert (= bs!3645 d!22449))

(declare-fun m!91107 () Bool)

(assert (=> bs!3645 m!91107))

(assert (=> bs!3645 m!91107))

(declare-fun m!91109 () Bool)

(assert (=> bs!3645 m!91109))

(assert (=> b!86128 d!22449))

(declare-fun d!22451 () Bool)

(assert (=> d!22451 (= (apply!82 (+!107 lt!40882 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))) lt!40862) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40882 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))) lt!40862)))))

(declare-fun bs!3646 () Bool)

(assert (= bs!3646 d!22451))

(declare-fun m!91111 () Bool)

(assert (=> bs!3646 m!91111))

(assert (=> bs!3646 m!91111))

(declare-fun m!91113 () Bool)

(assert (=> bs!3646 m!91113))

(assert (=> b!86128 d!22451))

(declare-fun d!22453 () Bool)

(declare-fun e!56208 () Bool)

(assert (=> d!22453 e!56208))

(declare-fun res!44361 () Bool)

(assert (=> d!22453 (=> (not res!44361) (not e!56208))))

(declare-fun lt!40975 () ListLongMap!1441)

(assert (=> d!22453 (= res!44361 (contains!747 lt!40975 (_1!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!40973 () List!1509)

(assert (=> d!22453 (= lt!40975 (ListLongMap!1442 lt!40973))))

(declare-fun lt!40972 () Unit!2498)

(declare-fun lt!40974 () Unit!2498)

(assert (=> d!22453 (= lt!40972 lt!40974)))

(assert (=> d!22453 (= (getValueByKey!141 lt!40973 (_1!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22453 (= lt!40974 (lemmaContainsTupThenGetReturnValue!58 lt!40973 (_1!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22453 (= lt!40973 (insertStrictlySorted!61 (toList!736 lt!40870) (_1!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22453 (= (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))) lt!40975)))

(declare-fun b!86244 () Bool)

(declare-fun res!44362 () Bool)

(assert (=> b!86244 (=> (not res!44362) (not e!56208))))

(assert (=> b!86244 (= res!44362 (= (getValueByKey!141 (toList!736 lt!40975) (_1!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86245 () Bool)

(assert (=> b!86245 (= e!56208 (contains!749 (toList!736 lt!40975) (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22453 res!44361) b!86244))

(assert (= (and b!86244 res!44362) b!86245))

(declare-fun m!91115 () Bool)

(assert (=> d!22453 m!91115))

(declare-fun m!91117 () Bool)

(assert (=> d!22453 m!91117))

(declare-fun m!91119 () Bool)

(assert (=> d!22453 m!91119))

(declare-fun m!91121 () Bool)

(assert (=> d!22453 m!91121))

(declare-fun m!91123 () Bool)

(assert (=> b!86244 m!91123))

(declare-fun m!91125 () Bool)

(assert (=> b!86245 m!91125))

(assert (=> b!86128 d!22453))

(declare-fun d!22455 () Bool)

(assert (=> d!22455 (= (apply!82 (+!107 lt!40877 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))) lt!40872) (apply!82 lt!40877 lt!40872))))

(declare-fun lt!40976 () Unit!2498)

(assert (=> d!22455 (= lt!40976 (choose!507 lt!40877 lt!40868 (minValue!2229 newMap!16) lt!40872))))

(declare-fun e!56209 () Bool)

(assert (=> d!22455 e!56209))

(declare-fun res!44363 () Bool)

(assert (=> d!22455 (=> (not res!44363) (not e!56209))))

(assert (=> d!22455 (= res!44363 (contains!747 lt!40877 lt!40872))))

(assert (=> d!22455 (= (addApplyDifferent!58 lt!40877 lt!40868 (minValue!2229 newMap!16) lt!40872) lt!40976)))

(declare-fun b!86246 () Bool)

(assert (=> b!86246 (= e!56209 (not (= lt!40872 lt!40868)))))

(assert (= (and d!22455 res!44363) b!86246))

(declare-fun m!91127 () Bool)

(assert (=> d!22455 m!91127))

(declare-fun m!91129 () Bool)

(assert (=> d!22455 m!91129))

(assert (=> d!22455 m!90837))

(assert (=> d!22455 m!90839))

(assert (=> d!22455 m!90837))

(assert (=> d!22455 m!90831))

(assert (=> b!86128 d!22455))

(declare-fun d!22457 () Bool)

(assert (=> d!22457 (= (apply!82 (+!107 lt!40882 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))) lt!40862) (apply!82 lt!40882 lt!40862))))

(declare-fun lt!40977 () Unit!2498)

(assert (=> d!22457 (= lt!40977 (choose!507 lt!40882 lt!40865 (minValue!2229 newMap!16) lt!40862))))

(declare-fun e!56210 () Bool)

(assert (=> d!22457 e!56210))

(declare-fun res!44364 () Bool)

(assert (=> d!22457 (=> (not res!44364) (not e!56210))))

(assert (=> d!22457 (= res!44364 (contains!747 lt!40882 lt!40862))))

(assert (=> d!22457 (= (addApplyDifferent!58 lt!40882 lt!40865 (minValue!2229 newMap!16) lt!40862) lt!40977)))

(declare-fun b!86247 () Bool)

(assert (=> b!86247 (= e!56210 (not (= lt!40862 lt!40865)))))

(assert (= (and d!22457 res!44364) b!86247))

(declare-fun m!91131 () Bool)

(assert (=> d!22457 m!91131))

(declare-fun m!91133 () Bool)

(assert (=> d!22457 m!91133))

(assert (=> d!22457 m!90827))

(assert (=> d!22457 m!90845))

(assert (=> d!22457 m!90827))

(assert (=> d!22457 m!90843))

(assert (=> b!86128 d!22457))

(declare-fun d!22459 () Bool)

(declare-fun e!56212 () Bool)

(assert (=> d!22459 e!56212))

(declare-fun res!44365 () Bool)

(assert (=> d!22459 (=> res!44365 e!56212)))

(declare-fun lt!40979 () Bool)

(assert (=> d!22459 (= res!44365 (not lt!40979))))

(declare-fun lt!40981 () Bool)

(assert (=> d!22459 (= lt!40979 lt!40981)))

(declare-fun lt!40978 () Unit!2498)

(declare-fun e!56211 () Unit!2498)

(assert (=> d!22459 (= lt!40978 e!56211)))

(declare-fun c!14065 () Bool)

(assert (=> d!22459 (= c!14065 lt!40981)))

(assert (=> d!22459 (= lt!40981 (containsKey!144 (toList!736 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))) lt!40874))))

(assert (=> d!22459 (= (contains!747 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))) lt!40874) lt!40979)))

(declare-fun b!86248 () Bool)

(declare-fun lt!40980 () Unit!2498)

(assert (=> b!86248 (= e!56211 lt!40980)))

(assert (=> b!86248 (= lt!40980 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))) lt!40874))))

(assert (=> b!86248 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))) lt!40874))))

(declare-fun b!86249 () Bool)

(declare-fun Unit!2537 () Unit!2498)

(assert (=> b!86249 (= e!56211 Unit!2537)))

(declare-fun b!86250 () Bool)

(assert (=> b!86250 (= e!56212 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16)))) lt!40874)))))

(assert (= (and d!22459 c!14065) b!86248))

(assert (= (and d!22459 (not c!14065)) b!86249))

(assert (= (and d!22459 (not res!44365)) b!86250))

(declare-fun m!91135 () Bool)

(assert (=> d!22459 m!91135))

(declare-fun m!91137 () Bool)

(assert (=> b!86248 m!91137))

(declare-fun m!91139 () Bool)

(assert (=> b!86248 m!91139))

(assert (=> b!86248 m!91139))

(declare-fun m!91141 () Bool)

(assert (=> b!86248 m!91141))

(assert (=> b!86250 m!91139))

(assert (=> b!86250 m!91139))

(assert (=> b!86250 m!91141))

(assert (=> b!86128 d!22459))

(declare-fun d!22461 () Bool)

(assert (=> d!22461 (= (apply!82 (+!107 lt!40876 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))) lt!40873) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40876 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))) lt!40873)))))

(declare-fun bs!3647 () Bool)

(assert (= bs!3647 d!22461))

(declare-fun m!91143 () Bool)

(assert (=> bs!3647 m!91143))

(assert (=> bs!3647 m!91143))

(declare-fun m!91145 () Bool)

(assert (=> bs!3647 m!91145))

(assert (=> b!86128 d!22461))

(declare-fun d!22463 () Bool)

(assert (=> d!22463 (= (apply!82 (+!107 lt!40877 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))) lt!40872) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40877 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))) lt!40872)))))

(declare-fun bs!3648 () Bool)

(assert (= bs!3648 d!22463))

(declare-fun m!91147 () Bool)

(assert (=> bs!3648 m!91147))

(assert (=> bs!3648 m!91147))

(declare-fun m!91149 () Bool)

(assert (=> bs!3648 m!91149))

(assert (=> b!86128 d!22463))

(declare-fun d!22465 () Bool)

(assert (=> d!22465 (= (apply!82 lt!40882 lt!40862) (get!1207 (getValueByKey!141 (toList!736 lt!40882) lt!40862)))))

(declare-fun bs!3649 () Bool)

(assert (= bs!3649 d!22465))

(declare-fun m!91151 () Bool)

(assert (=> bs!3649 m!91151))

(assert (=> bs!3649 m!91151))

(declare-fun m!91153 () Bool)

(assert (=> bs!3649 m!91153))

(assert (=> b!86128 d!22465))

(declare-fun d!22467 () Bool)

(declare-fun e!56213 () Bool)

(assert (=> d!22467 e!56213))

(declare-fun res!44366 () Bool)

(assert (=> d!22467 (=> (not res!44366) (not e!56213))))

(declare-fun lt!40985 () ListLongMap!1441)

(assert (=> d!22467 (= res!44366 (contains!747 lt!40985 (_1!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))))))

(declare-fun lt!40983 () List!1509)

(assert (=> d!22467 (= lt!40985 (ListLongMap!1442 lt!40983))))

(declare-fun lt!40982 () Unit!2498)

(declare-fun lt!40984 () Unit!2498)

(assert (=> d!22467 (= lt!40982 lt!40984)))

(assert (=> d!22467 (= (getValueByKey!141 lt!40983 (_1!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))))))

(assert (=> d!22467 (= lt!40984 (lemmaContainsTupThenGetReturnValue!58 lt!40983 (_1!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))))))

(assert (=> d!22467 (= lt!40983 (insertStrictlySorted!61 (toList!736 lt!40882) (_1!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))))))

(assert (=> d!22467 (= (+!107 lt!40882 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))) lt!40985)))

(declare-fun b!86251 () Bool)

(declare-fun res!44367 () Bool)

(assert (=> b!86251 (=> (not res!44367) (not e!56213))))

(assert (=> b!86251 (= res!44367 (= (getValueByKey!141 (toList!736 lt!40985) (_1!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40865 (minValue!2229 newMap!16))))))))

(declare-fun b!86252 () Bool)

(assert (=> b!86252 (= e!56213 (contains!749 (toList!736 lt!40985) (tuple2!2189 lt!40865 (minValue!2229 newMap!16))))))

(assert (= (and d!22467 res!44366) b!86251))

(assert (= (and b!86251 res!44367) b!86252))

(declare-fun m!91155 () Bool)

(assert (=> d!22467 m!91155))

(declare-fun m!91157 () Bool)

(assert (=> d!22467 m!91157))

(declare-fun m!91159 () Bool)

(assert (=> d!22467 m!91159))

(declare-fun m!91161 () Bool)

(assert (=> d!22467 m!91161))

(declare-fun m!91163 () Bool)

(assert (=> b!86251 m!91163))

(declare-fun m!91165 () Bool)

(assert (=> b!86252 m!91165))

(assert (=> b!86128 d!22467))

(declare-fun b!86253 () Bool)

(declare-fun e!56217 () ListLongMap!1441)

(assert (=> b!86253 (= e!56217 (ListLongMap!1442 Nil!1506))))

(declare-fun b!86254 () Bool)

(assert (=> b!86254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> b!86254 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))))))))

(declare-fun e!56216 () Bool)

(declare-fun lt!40992 () ListLongMap!1441)

(assert (=> b!86254 (= e!56216 (= (apply!82 lt!40992 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86255 () Bool)

(declare-fun e!56220 () Bool)

(assert (=> b!86255 (= e!56220 (= lt!40992 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16))))))

(declare-fun b!86256 () Bool)

(declare-fun res!44370 () Bool)

(declare-fun e!56215 () Bool)

(assert (=> b!86256 (=> (not res!44370) (not e!56215))))

(assert (=> b!86256 (= res!44370 (not (contains!747 lt!40992 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86257 () Bool)

(declare-fun e!56219 () Bool)

(assert (=> b!86257 (= e!56219 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86257 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86258 () Bool)

(declare-fun e!56218 () ListLongMap!1441)

(assert (=> b!86258 (= e!56217 e!56218)))

(declare-fun c!14069 () Bool)

(assert (=> b!86258 (= c!14069 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86259 () Bool)

(declare-fun lt!40986 () Unit!2498)

(declare-fun lt!40991 () Unit!2498)

(assert (=> b!86259 (= lt!40986 lt!40991)))

(declare-fun lt!40990 () (_ BitVec 64))

(declare-fun lt!40989 () V!3025)

(declare-fun lt!40987 () ListLongMap!1441)

(declare-fun lt!40988 () (_ BitVec 64))

(assert (=> b!86259 (not (contains!747 (+!107 lt!40987 (tuple2!2189 lt!40990 lt!40989)) lt!40988))))

(assert (=> b!86259 (= lt!40991 (addStillNotContains!33 lt!40987 lt!40990 lt!40989 lt!40988))))

(assert (=> b!86259 (= lt!40988 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86259 (= lt!40989 (get!1204 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86259 (= lt!40990 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!8206 () ListLongMap!1441)

(assert (=> b!86259 (= lt!40987 call!8206)))

(assert (=> b!86259 (= e!56218 (+!107 call!8206 (tuple2!2189 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (get!1204 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!8203 () Bool)

(assert (=> bm!8203 (= call!8206 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16)))))

(declare-fun b!86260 () Bool)

(assert (=> b!86260 (= e!56220 (isEmpty!341 lt!40992))))

(declare-fun d!22469 () Bool)

(assert (=> d!22469 e!56215))

(declare-fun res!44369 () Bool)

(assert (=> d!22469 (=> (not res!44369) (not e!56215))))

(assert (=> d!22469 (= res!44369 (not (contains!747 lt!40992 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22469 (= lt!40992 e!56217)))

(declare-fun c!14066 () Bool)

(assert (=> d!22469 (= c!14066 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22469 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22469 (= (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40992)))

(declare-fun b!86261 () Bool)

(declare-fun e!56214 () Bool)

(assert (=> b!86261 (= e!56214 e!56220)))

(declare-fun c!14068 () Bool)

(assert (=> b!86261 (= c!14068 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86262 () Bool)

(assert (=> b!86262 (= e!56215 e!56214)))

(declare-fun c!14067 () Bool)

(assert (=> b!86262 (= c!14067 e!56219)))

(declare-fun res!44368 () Bool)

(assert (=> b!86262 (=> (not res!44368) (not e!56219))))

(assert (=> b!86262 (= res!44368 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86263 () Bool)

(assert (=> b!86263 (= e!56218 call!8206)))

(declare-fun b!86264 () Bool)

(assert (=> b!86264 (= e!56214 e!56216)))

(assert (=> b!86264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun res!44371 () Bool)

(assert (=> b!86264 (= res!44371 (contains!747 lt!40992 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86264 (=> (not res!44371) (not e!56216))))

(assert (= (and d!22469 c!14066) b!86253))

(assert (= (and d!22469 (not c!14066)) b!86258))

(assert (= (and b!86258 c!14069) b!86259))

(assert (= (and b!86258 (not c!14069)) b!86263))

(assert (= (or b!86259 b!86263) bm!8203))

(assert (= (and d!22469 res!44369) b!86256))

(assert (= (and b!86256 res!44370) b!86262))

(assert (= (and b!86262 res!44368) b!86257))

(assert (= (and b!86262 c!14067) b!86264))

(assert (= (and b!86262 (not c!14067)) b!86261))

(assert (= (and b!86264 res!44371) b!86254))

(assert (= (and b!86261 c!14068) b!86255))

(assert (= (and b!86261 (not c!14068)) b!86260))

(declare-fun b_lambda!3831 () Bool)

(assert (=> (not b_lambda!3831) (not b!86254)))

(assert (=> b!86254 t!5233))

(declare-fun b_and!5213 () Bool)

(assert (= b_and!5209 (and (=> t!5233 result!2923) b_and!5213)))

(assert (=> b!86254 t!5235))

(declare-fun b_and!5215 () Bool)

(assert (= b_and!5211 (and (=> t!5235 result!2925) b_and!5215)))

(declare-fun b_lambda!3833 () Bool)

(assert (=> (not b_lambda!3833) (not b!86259)))

(assert (=> b!86259 t!5233))

(declare-fun b_and!5217 () Bool)

(assert (= b_and!5213 (and (=> t!5233 result!2923) b_and!5217)))

(assert (=> b!86259 t!5235))

(declare-fun b_and!5219 () Bool)

(assert (= b_and!5215 (and (=> t!5235 result!2925) b_and!5219)))

(declare-fun m!91167 () Bool)

(assert (=> b!86255 m!91167))

(declare-fun m!91169 () Bool)

(assert (=> b!86256 m!91169))

(declare-fun m!91171 () Bool)

(assert (=> b!86260 m!91171))

(assert (=> b!86264 m!90065))

(assert (=> b!86264 m!90065))

(declare-fun m!91173 () Bool)

(assert (=> b!86264 m!91173))

(declare-fun m!91175 () Bool)

(assert (=> d!22469 m!91175))

(assert (=> d!22469 m!90203))

(assert (=> bm!8203 m!91167))

(assert (=> b!86254 m!90065))

(assert (=> b!86254 m!90065))

(declare-fun m!91177 () Bool)

(assert (=> b!86254 m!91177))

(assert (=> b!86254 m!90807))

(assert (=> b!86254 m!90319))

(assert (=> b!86254 m!90809))

(assert (=> b!86254 m!90807))

(assert (=> b!86254 m!90319))

(declare-fun m!91179 () Bool)

(assert (=> b!86259 m!91179))

(assert (=> b!86259 m!90065))

(declare-fun m!91181 () Bool)

(assert (=> b!86259 m!91181))

(assert (=> b!86259 m!90807))

(assert (=> b!86259 m!90319))

(assert (=> b!86259 m!90809))

(assert (=> b!86259 m!91181))

(declare-fun m!91183 () Bool)

(assert (=> b!86259 m!91183))

(assert (=> b!86259 m!90319))

(declare-fun m!91185 () Bool)

(assert (=> b!86259 m!91185))

(assert (=> b!86259 m!90807))

(assert (=> b!86257 m!90065))

(assert (=> b!86257 m!90065))

(assert (=> b!86257 m!90073))

(assert (=> b!86258 m!90065))

(assert (=> b!86258 m!90065))

(assert (=> b!86258 m!90073))

(assert (=> b!86128 d!22469))

(declare-fun d!22471 () Bool)

(assert (=> d!22471 (= (apply!82 lt!40877 lt!40872) (get!1207 (getValueByKey!141 (toList!736 lt!40877) lt!40872)))))

(declare-fun bs!3650 () Bool)

(assert (= bs!3650 d!22471))

(declare-fun m!91187 () Bool)

(assert (=> bs!3650 m!91187))

(assert (=> bs!3650 m!91187))

(declare-fun m!91189 () Bool)

(assert (=> bs!3650 m!91189))

(assert (=> b!86128 d!22471))

(declare-fun d!22473 () Bool)

(assert (=> d!22473 (= (apply!82 (+!107 lt!40876 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))) lt!40873) (apply!82 lt!40876 lt!40873))))

(declare-fun lt!40993 () Unit!2498)

(assert (=> d!22473 (= lt!40993 (choose!507 lt!40876 lt!40867 (zeroValue!2229 newMap!16) lt!40873))))

(declare-fun e!56221 () Bool)

(assert (=> d!22473 e!56221))

(declare-fun res!44372 () Bool)

(assert (=> d!22473 (=> (not res!44372) (not e!56221))))

(assert (=> d!22473 (= res!44372 (contains!747 lt!40876 lt!40873))))

(assert (=> d!22473 (= (addApplyDifferent!58 lt!40876 lt!40867 (zeroValue!2229 newMap!16) lt!40873) lt!40993)))

(declare-fun b!86265 () Bool)

(assert (=> b!86265 (= e!56221 (not (= lt!40873 lt!40867)))))

(assert (= (and d!22473 res!44372) b!86265))

(declare-fun m!91191 () Bool)

(assert (=> d!22473 m!91191))

(declare-fun m!91193 () Bool)

(assert (=> d!22473 m!91193))

(assert (=> d!22473 m!90833))

(assert (=> d!22473 m!90835))

(assert (=> d!22473 m!90833))

(assert (=> d!22473 m!90841))

(assert (=> b!86128 d!22473))

(declare-fun d!22475 () Bool)

(declare-fun e!56222 () Bool)

(assert (=> d!22475 e!56222))

(declare-fun res!44373 () Bool)

(assert (=> d!22475 (=> (not res!44373) (not e!56222))))

(declare-fun lt!40997 () ListLongMap!1441)

(assert (=> d!22475 (= res!44373 (contains!747 lt!40997 (_1!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!40995 () List!1509)

(assert (=> d!22475 (= lt!40997 (ListLongMap!1442 lt!40995))))

(declare-fun lt!40994 () Unit!2498)

(declare-fun lt!40996 () Unit!2498)

(assert (=> d!22475 (= lt!40994 lt!40996)))

(assert (=> d!22475 (= (getValueByKey!141 lt!40995 (_1!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22475 (= lt!40996 (lemmaContainsTupThenGetReturnValue!58 lt!40995 (_1!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22475 (= lt!40995 (insertStrictlySorted!61 (toList!736 lt!40876) (_1!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22475 (= (+!107 lt!40876 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))) lt!40997)))

(declare-fun b!86266 () Bool)

(declare-fun res!44374 () Bool)

(assert (=> b!86266 (=> (not res!44374) (not e!56222))))

(assert (=> b!86266 (= res!44374 (= (getValueByKey!141 (toList!736 lt!40997) (_1!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86267 () Bool)

(assert (=> b!86267 (= e!56222 (contains!749 (toList!736 lt!40997) (tuple2!2189 lt!40867 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22475 res!44373) b!86266))

(assert (= (and b!86266 res!44374) b!86267))

(declare-fun m!91195 () Bool)

(assert (=> d!22475 m!91195))

(declare-fun m!91197 () Bool)

(assert (=> d!22475 m!91197))

(declare-fun m!91199 () Bool)

(assert (=> d!22475 m!91199))

(declare-fun m!91201 () Bool)

(assert (=> d!22475 m!91201))

(declare-fun m!91203 () Bool)

(assert (=> b!86266 m!91203))

(declare-fun m!91205 () Bool)

(assert (=> b!86267 m!91205))

(assert (=> b!86128 d!22475))

(declare-fun d!22477 () Bool)

(declare-fun e!56223 () Bool)

(assert (=> d!22477 e!56223))

(declare-fun res!44375 () Bool)

(assert (=> d!22477 (=> (not res!44375) (not e!56223))))

(declare-fun lt!41001 () ListLongMap!1441)

(assert (=> d!22477 (= res!44375 (contains!747 lt!41001 (_1!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))))))

(declare-fun lt!40999 () List!1509)

(assert (=> d!22477 (= lt!41001 (ListLongMap!1442 lt!40999))))

(declare-fun lt!40998 () Unit!2498)

(declare-fun lt!41000 () Unit!2498)

(assert (=> d!22477 (= lt!40998 lt!41000)))

(assert (=> d!22477 (= (getValueByKey!141 lt!40999 (_1!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))))))

(assert (=> d!22477 (= lt!41000 (lemmaContainsTupThenGetReturnValue!58 lt!40999 (_1!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))))))

(assert (=> d!22477 (= lt!40999 (insertStrictlySorted!61 (toList!736 lt!40877) (_1!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))))))

(assert (=> d!22477 (= (+!107 lt!40877 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))) lt!41001)))

(declare-fun b!86268 () Bool)

(declare-fun res!44376 () Bool)

(assert (=> b!86268 (=> (not res!44376) (not e!56223))))

(assert (=> b!86268 (= res!44376 (= (getValueByKey!141 (toList!736 lt!41001) (_1!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40868 (minValue!2229 newMap!16))))))))

(declare-fun b!86269 () Bool)

(assert (=> b!86269 (= e!56223 (contains!749 (toList!736 lt!41001) (tuple2!2189 lt!40868 (minValue!2229 newMap!16))))))

(assert (= (and d!22477 res!44375) b!86268))

(assert (= (and b!86268 res!44376) b!86269))

(declare-fun m!91207 () Bool)

(assert (=> d!22477 m!91207))

(declare-fun m!91209 () Bool)

(assert (=> d!22477 m!91209))

(declare-fun m!91211 () Bool)

(assert (=> d!22477 m!91211))

(declare-fun m!91213 () Bool)

(assert (=> d!22477 m!91213))

(declare-fun m!91215 () Bool)

(assert (=> b!86268 m!91215))

(declare-fun m!91217 () Bool)

(assert (=> b!86269 m!91217))

(assert (=> b!86128 d!22477))

(declare-fun d!22479 () Bool)

(assert (=> d!22479 (contains!747 (+!107 lt!40870 (tuple2!2189 lt!40866 (zeroValue!2229 newMap!16))) lt!40874)))

(declare-fun lt!41002 () Unit!2498)

(assert (=> d!22479 (= lt!41002 (choose!508 lt!40870 lt!40866 (zeroValue!2229 newMap!16) lt!40874))))

(assert (=> d!22479 (contains!747 lt!40870 lt!40874)))

(assert (=> d!22479 (= (addStillContains!58 lt!40870 lt!40866 (zeroValue!2229 newMap!16) lt!40874) lt!41002)))

(declare-fun bs!3651 () Bool)

(assert (= bs!3651 d!22479))

(assert (=> bs!3651 m!90819))

(assert (=> bs!3651 m!90819))

(assert (=> bs!3651 m!90821))

(declare-fun m!91219 () Bool)

(assert (=> bs!3651 m!91219))

(declare-fun m!91221 () Bool)

(assert (=> bs!3651 m!91221))

(assert (=> b!86128 d!22479))

(declare-fun d!22481 () Bool)

(assert (=> d!22481 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22481 true))

(declare-fun _$7!74 () Unit!2498)

(assert (=> d!22481 (= (choose!510 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) lt!40514 (zeroValue!2229 newMap!16) lt!40194 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)) _$7!74)))

(declare-fun bs!3652 () Bool)

(assert (= bs!3652 d!22481))

(assert (=> bs!3652 m!89901))

(assert (=> bs!3652 m!89901))

(assert (=> bs!3652 m!90207))

(assert (=> bs!3652 m!90205))

(assert (=> d!22223 d!22481))

(assert (=> d!22223 d!22265))

(declare-fun call!8212 () ListLongMap!1441)

(declare-fun c!14073 () Bool)

(declare-fun bm!8204 () Bool)

(declare-fun call!8213 () ListLongMap!1441)

(declare-fun c!14072 () Bool)

(declare-fun call!8208 () ListLongMap!1441)

(declare-fun call!8210 () ListLongMap!1441)

(assert (=> bm!8204 (= call!8212 (+!107 (ite c!14073 call!8213 (ite c!14072 call!8208 call!8210)) (ite (or c!14073 c!14072) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!22483 () Bool)

(declare-fun e!56224 () Bool)

(assert (=> d!22483 e!56224))

(declare-fun res!44377 () Bool)

(assert (=> d!22483 (=> (not res!44377) (not e!56224))))

(assert (=> d!22483 (= res!44377 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!41020 () ListLongMap!1441)

(declare-fun lt!41003 () ListLongMap!1441)

(assert (=> d!22483 (= lt!41020 lt!41003)))

(declare-fun lt!41017 () Unit!2498)

(declare-fun e!56228 () Unit!2498)

(assert (=> d!22483 (= lt!41017 e!56228)))

(declare-fun c!14070 () Bool)

(declare-fun e!56229 () Bool)

(assert (=> d!22483 (= c!14070 e!56229)))

(declare-fun res!44384 () Bool)

(assert (=> d!22483 (=> (not res!44384) (not e!56229))))

(assert (=> d!22483 (= res!44384 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!56236 () ListLongMap!1441)

(assert (=> d!22483 (= lt!41003 e!56236)))

(assert (=> d!22483 (= c!14073 (and (not (= (bvand lt!40514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40514 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22483 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22483 (= (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41020)))

(declare-fun bm!8205 () Bool)

(assert (=> bm!8205 (= call!8210 call!8208)))

(declare-fun b!86270 () Bool)

(declare-fun e!56226 () Bool)

(declare-fun e!56235 () Bool)

(assert (=> b!86270 (= e!56226 e!56235)))

(declare-fun res!44382 () Bool)

(assert (=> b!86270 (=> (not res!44382) (not e!56235))))

(assert (=> b!86270 (= res!44382 (contains!747 lt!41020 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86270 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86271 () Bool)

(declare-fun lt!41006 () Unit!2498)

(assert (=> b!86271 (= e!56228 lt!41006)))

(declare-fun lt!41012 () ListLongMap!1441)

(assert (=> b!86271 (= lt!41012 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41008 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41008 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41016 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41016 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41011 () Unit!2498)

(assert (=> b!86271 (= lt!41011 (addStillContains!58 lt!41012 lt!41008 lt!40194 lt!41016))))

(assert (=> b!86271 (contains!747 (+!107 lt!41012 (tuple2!2189 lt!41008 lt!40194)) lt!41016)))

(declare-fun lt!41013 () Unit!2498)

(assert (=> b!86271 (= lt!41013 lt!41011)))

(declare-fun lt!41024 () ListLongMap!1441)

(assert (=> b!86271 (= lt!41024 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41007 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41007 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41004 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41004 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41023 () Unit!2498)

(assert (=> b!86271 (= lt!41023 (addApplyDifferent!58 lt!41024 lt!41007 (minValue!2229 newMap!16) lt!41004))))

(assert (=> b!86271 (= (apply!82 (+!107 lt!41024 (tuple2!2189 lt!41007 (minValue!2229 newMap!16))) lt!41004) (apply!82 lt!41024 lt!41004))))

(declare-fun lt!41005 () Unit!2498)

(assert (=> b!86271 (= lt!41005 lt!41023)))

(declare-fun lt!41018 () ListLongMap!1441)

(assert (=> b!86271 (= lt!41018 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41009 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41009 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41015 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41015 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41021 () Unit!2498)

(assert (=> b!86271 (= lt!41021 (addApplyDifferent!58 lt!41018 lt!41009 lt!40194 lt!41015))))

(assert (=> b!86271 (= (apply!82 (+!107 lt!41018 (tuple2!2189 lt!41009 lt!40194)) lt!41015) (apply!82 lt!41018 lt!41015))))

(declare-fun lt!41022 () Unit!2498)

(assert (=> b!86271 (= lt!41022 lt!41021)))

(declare-fun lt!41019 () ListLongMap!1441)

(assert (=> b!86271 (= lt!41019 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41010 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41010 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41014 () (_ BitVec 64))

(assert (=> b!86271 (= lt!41014 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86271 (= lt!41006 (addApplyDifferent!58 lt!41019 lt!41010 (minValue!2229 newMap!16) lt!41014))))

(assert (=> b!86271 (= (apply!82 (+!107 lt!41019 (tuple2!2189 lt!41010 (minValue!2229 newMap!16))) lt!41014) (apply!82 lt!41019 lt!41014))))

(declare-fun bm!8206 () Bool)

(assert (=> bm!8206 (= call!8208 call!8213)))

(declare-fun b!86272 () Bool)

(declare-fun res!44380 () Bool)

(assert (=> b!86272 (=> (not res!44380) (not e!56224))))

(assert (=> b!86272 (= res!44380 e!56226)))

(declare-fun res!44379 () Bool)

(assert (=> b!86272 (=> res!44379 e!56226)))

(declare-fun e!56233 () Bool)

(assert (=> b!86272 (= res!44379 (not e!56233))))

(declare-fun res!44381 () Bool)

(assert (=> b!86272 (=> (not res!44381) (not e!56233))))

(assert (=> b!86272 (= res!44381 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86273 () Bool)

(declare-fun e!56227 () Bool)

(declare-fun call!8207 () Bool)

(assert (=> b!86273 (= e!56227 (not call!8207))))

(declare-fun b!86274 () Bool)

(declare-fun e!56234 () ListLongMap!1441)

(assert (=> b!86274 (= e!56236 e!56234)))

(assert (=> b!86274 (= c!14072 (and (not (= (bvand lt!40514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40514 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86275 () Bool)

(declare-fun e!56232 () Bool)

(declare-fun call!8209 () Bool)

(assert (=> b!86275 (= e!56232 (not call!8209))))

(declare-fun b!86276 () Bool)

(declare-fun e!56225 () Bool)

(assert (=> b!86276 (= e!56225 (= (apply!82 lt!41020 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8207 () Bool)

(declare-fun call!8211 () ListLongMap!1441)

(assert (=> bm!8207 (= call!8211 call!8212)))

(declare-fun b!86277 () Bool)

(declare-fun e!56231 () Bool)

(assert (=> b!86277 (= e!56232 e!56231)))

(declare-fun res!44378 () Bool)

(assert (=> b!86277 (= res!44378 call!8209)))

(assert (=> b!86277 (=> (not res!44378) (not e!56231))))

(declare-fun b!86278 () Bool)

(assert (=> b!86278 (= e!56224 e!56227)))

(declare-fun c!14071 () Bool)

(assert (=> b!86278 (= c!14071 (not (= (bvand lt!40514 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86279 () Bool)

(assert (=> b!86279 (= e!56236 (+!107 call!8212 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!86280 () Bool)

(assert (=> b!86280 (= e!56227 e!56225)))

(declare-fun res!44383 () Bool)

(assert (=> b!86280 (= res!44383 call!8207)))

(assert (=> b!86280 (=> (not res!44383) (not e!56225))))

(declare-fun b!86281 () Bool)

(declare-fun Unit!2538 () Unit!2498)

(assert (=> b!86281 (= e!56228 Unit!2538)))

(declare-fun b!86282 () Bool)

(assert (=> b!86282 (= e!56229 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8208 () Bool)

(assert (=> bm!8208 (= call!8213 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) lt!40514 lt!40194 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!86283 () Bool)

(declare-fun res!44385 () Bool)

(assert (=> b!86283 (=> (not res!44385) (not e!56224))))

(assert (=> b!86283 (= res!44385 e!56232)))

(declare-fun c!14075 () Bool)

(assert (=> b!86283 (= c!14075 (not (= (bvand lt!40514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86284 () Bool)

(declare-fun e!56230 () ListLongMap!1441)

(assert (=> b!86284 (= e!56230 call!8211)))

(declare-fun b!86285 () Bool)

(assert (=> b!86285 (= e!56233 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86286 () Bool)

(assert (=> b!86286 (= e!56230 call!8210)))

(declare-fun b!86287 () Bool)

(assert (=> b!86287 (= e!56234 call!8211)))

(declare-fun bm!8209 () Bool)

(assert (=> bm!8209 (= call!8207 (contains!747 lt!41020 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86288 () Bool)

(assert (=> b!86288 (= e!56231 (= (apply!82 lt!41020 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40194))))

(declare-fun b!86289 () Bool)

(declare-fun c!14074 () Bool)

(assert (=> b!86289 (= c!14074 (and (not (= (bvand lt!40514 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40514 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86289 (= e!56234 e!56230)))

(declare-fun b!86290 () Bool)

(assert (=> b!86290 (= e!56235 (= (apply!82 lt!41020 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86290 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_values!2320 newMap!16))))))

(assert (=> b!86290 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8210 () Bool)

(assert (=> bm!8210 (= call!8209 (contains!747 lt!41020 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22483 c!14073) b!86279))

(assert (= (and d!22483 (not c!14073)) b!86274))

(assert (= (and b!86274 c!14072) b!86287))

(assert (= (and b!86274 (not c!14072)) b!86289))

(assert (= (and b!86289 c!14074) b!86284))

(assert (= (and b!86289 (not c!14074)) b!86286))

(assert (= (or b!86284 b!86286) bm!8205))

(assert (= (or b!86287 bm!8205) bm!8206))

(assert (= (or b!86287 b!86284) bm!8207))

(assert (= (or b!86279 bm!8206) bm!8208))

(assert (= (or b!86279 bm!8207) bm!8204))

(assert (= (and d!22483 res!44384) b!86282))

(assert (= (and d!22483 c!14070) b!86271))

(assert (= (and d!22483 (not c!14070)) b!86281))

(assert (= (and d!22483 res!44377) b!86272))

(assert (= (and b!86272 res!44381) b!86285))

(assert (= (and b!86272 (not res!44379)) b!86270))

(assert (= (and b!86270 res!44382) b!86290))

(assert (= (and b!86272 res!44380) b!86283))

(assert (= (and b!86283 c!14075) b!86277))

(assert (= (and b!86283 (not c!14075)) b!86275))

(assert (= (and b!86277 res!44378) b!86288))

(assert (= (or b!86277 b!86275) bm!8210))

(assert (= (and b!86283 res!44385) b!86278))

(assert (= (and b!86278 c!14071) b!86280))

(assert (= (and b!86278 (not c!14071)) b!86273))

(assert (= (and b!86280 res!44383) b!86276))

(assert (= (or b!86280 b!86273) bm!8209))

(declare-fun b_lambda!3835 () Bool)

(assert (=> (not b_lambda!3835) (not b!86290)))

(assert (=> b!86290 t!5233))

(declare-fun b_and!5221 () Bool)

(assert (= b_and!5217 (and (=> t!5233 result!2923) b_and!5221)))

(assert (=> b!86290 t!5235))

(declare-fun b_and!5223 () Bool)

(assert (= b_and!5219 (and (=> t!5235 result!2925) b_and!5223)))

(declare-fun m!91223 () Bool)

(assert (=> b!86279 m!91223))

(declare-fun m!91225 () Bool)

(assert (=> b!86288 m!91225))

(assert (=> b!86290 m!90317))

(assert (=> b!86290 m!90319))

(assert (=> b!86290 m!90321))

(assert (=> b!86290 m!90317))

(assert (=> b!86290 m!90319))

(assert (=> b!86290 m!90065))

(declare-fun m!91227 () Bool)

(assert (=> b!86290 m!91227))

(assert (=> b!86290 m!90065))

(declare-fun m!91229 () Bool)

(assert (=> bm!8208 m!91229))

(assert (=> b!86282 m!90065))

(assert (=> b!86282 m!90065))

(assert (=> b!86282 m!90073))

(declare-fun m!91231 () Bool)

(assert (=> bm!8210 m!91231))

(declare-fun m!91233 () Bool)

(assert (=> bm!8204 m!91233))

(declare-fun m!91235 () Bool)

(assert (=> b!86271 m!91235))

(declare-fun m!91237 () Bool)

(assert (=> b!86271 m!91237))

(declare-fun m!91239 () Bool)

(assert (=> b!86271 m!91239))

(declare-fun m!91241 () Bool)

(assert (=> b!86271 m!91241))

(declare-fun m!91243 () Bool)

(assert (=> b!86271 m!91243))

(assert (=> b!86271 m!91229))

(assert (=> b!86271 m!90065))

(declare-fun m!91245 () Bool)

(assert (=> b!86271 m!91245))

(declare-fun m!91247 () Bool)

(assert (=> b!86271 m!91247))

(declare-fun m!91249 () Bool)

(assert (=> b!86271 m!91249))

(declare-fun m!91251 () Bool)

(assert (=> b!86271 m!91251))

(declare-fun m!91253 () Bool)

(assert (=> b!86271 m!91253))

(declare-fun m!91255 () Bool)

(assert (=> b!86271 m!91255))

(declare-fun m!91257 () Bool)

(assert (=> b!86271 m!91257))

(declare-fun m!91259 () Bool)

(assert (=> b!86271 m!91259))

(assert (=> b!86271 m!91243))

(declare-fun m!91261 () Bool)

(assert (=> b!86271 m!91261))

(assert (=> b!86271 m!91235))

(assert (=> b!86271 m!91253))

(assert (=> b!86271 m!91249))

(declare-fun m!91263 () Bool)

(assert (=> b!86271 m!91263))

(assert (=> b!86285 m!90065))

(assert (=> b!86285 m!90065))

(assert (=> b!86285 m!90073))

(declare-fun m!91265 () Bool)

(assert (=> bm!8209 m!91265))

(assert (=> d!22483 m!90203))

(declare-fun m!91267 () Bool)

(assert (=> b!86276 m!91267))

(assert (=> b!86270 m!90065))

(assert (=> b!86270 m!90065))

(declare-fun m!91269 () Bool)

(assert (=> b!86270 m!91269))

(assert (=> d!22223 d!22483))

(assert (=> d!22223 d!22427))

(declare-fun d!22485 () Bool)

(declare-fun e!56237 () Bool)

(assert (=> d!22485 e!56237))

(declare-fun res!44386 () Bool)

(assert (=> d!22485 (=> (not res!44386) (not e!56237))))

(declare-fun lt!41028 () ListLongMap!1441)

(assert (=> d!22485 (= res!44386 (contains!747 lt!41028 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(declare-fun lt!41026 () List!1509)

(assert (=> d!22485 (= lt!41028 (ListLongMap!1442 lt!41026))))

(declare-fun lt!41025 () Unit!2498)

(declare-fun lt!41027 () Unit!2498)

(assert (=> d!22485 (= lt!41025 lt!41027)))

(assert (=> d!22485 (= (getValueByKey!141 lt!41026 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(assert (=> d!22485 (= lt!41027 (lemmaContainsTupThenGetReturnValue!58 lt!41026 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(assert (=> d!22485 (= lt!41026 (insertStrictlySorted!61 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194))))))

(assert (=> d!22485 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)) lt!41028)))

(declare-fun b!86291 () Bool)

(declare-fun res!44387 () Bool)

(assert (=> b!86291 (=> (not res!44387) (not e!56237))))

(assert (=> b!86291 (= res!44387 (= (getValueByKey!141 (toList!736 lt!41028) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)))))))

(declare-fun b!86292 () Bool)

(assert (=> b!86292 (= e!56237 (contains!749 (toList!736 lt!41028) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194)))))

(assert (= (and d!22485 res!44386) b!86291))

(assert (= (and b!86291 res!44387) b!86292))

(declare-fun m!91271 () Bool)

(assert (=> d!22485 m!91271))

(declare-fun m!91273 () Bool)

(assert (=> d!22485 m!91273))

(declare-fun m!91275 () Bool)

(assert (=> d!22485 m!91275))

(declare-fun m!91277 () Bool)

(assert (=> d!22485 m!91277))

(declare-fun m!91279 () Bool)

(assert (=> b!86291 m!91279))

(declare-fun m!91281 () Bool)

(assert (=> b!86292 m!91281))

(assert (=> d!22223 d!22485))

(declare-fun b!86296 () Bool)

(declare-fun e!56239 () Option!147)

(assert (=> b!86296 (= e!56239 None!145)))

(declare-fun c!14076 () Bool)

(declare-fun d!22487 () Bool)

(assert (=> d!22487 (= c!14076 (and ((_ is Cons!1505) (toList!736 lt!40562)) (= (_1!1105 (h!2096 (toList!736 lt!40562))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56238 () Option!147)

(assert (=> d!22487 (= (getValueByKey!141 (toList!736 lt!40562) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56238)))

(declare-fun b!86294 () Bool)

(assert (=> b!86294 (= e!56238 e!56239)))

(declare-fun c!14077 () Bool)

(assert (=> b!86294 (= c!14077 (and ((_ is Cons!1505) (toList!736 lt!40562)) (not (= (_1!1105 (h!2096 (toList!736 lt!40562))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86295 () Bool)

(assert (=> b!86295 (= e!56239 (getValueByKey!141 (t!5222 (toList!736 lt!40562)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86293 () Bool)

(assert (=> b!86293 (= e!56238 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40562)))))))

(assert (= (and d!22487 c!14076) b!86293))

(assert (= (and d!22487 (not c!14076)) b!86294))

(assert (= (and b!86294 c!14077) b!86295))

(assert (= (and b!86294 (not c!14077)) b!86296))

(declare-fun m!91283 () Bool)

(assert (=> b!86295 m!91283))

(assert (=> b!85684 d!22487))

(declare-fun d!22489 () Bool)

(declare-fun e!56241 () Bool)

(assert (=> d!22489 e!56241))

(declare-fun res!44388 () Bool)

(assert (=> d!22489 (=> res!44388 e!56241)))

(declare-fun lt!41030 () Bool)

(assert (=> d!22489 (= res!44388 (not lt!41030))))

(declare-fun lt!41032 () Bool)

(assert (=> d!22489 (= lt!41030 lt!41032)))

(declare-fun lt!41029 () Unit!2498)

(declare-fun e!56240 () Unit!2498)

(assert (=> d!22489 (= lt!41029 e!56240)))

(declare-fun c!14078 () Bool)

(assert (=> d!22489 (= c!14078 lt!41032)))

(assert (=> d!22489 (= lt!41032 (containsKey!144 (toList!736 lt!40860) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!22489 (= (contains!747 lt!40860 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) lt!41030)))

(declare-fun b!86297 () Bool)

(declare-fun lt!41031 () Unit!2498)

(assert (=> b!86297 (= e!56240 lt!41031)))

(assert (=> b!86297 (= lt!41031 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40860) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> b!86297 (isDefined!93 (getValueByKey!141 (toList!736 lt!40860) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86298 () Bool)

(declare-fun Unit!2539 () Unit!2498)

(assert (=> b!86298 (= e!56240 Unit!2539)))

(declare-fun b!86299 () Bool)

(assert (=> b!86299 (= e!56241 (isDefined!93 (getValueByKey!141 (toList!736 lt!40860) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(assert (= (and d!22489 c!14078) b!86297))

(assert (= (and d!22489 (not c!14078)) b!86298))

(assert (= (and d!22489 (not res!44388)) b!86299))

(declare-fun m!91285 () Bool)

(assert (=> d!22489 m!91285))

(declare-fun m!91287 () Bool)

(assert (=> b!86297 m!91287))

(assert (=> b!86297 m!90799))

(assert (=> b!86297 m!90799))

(declare-fun m!91289 () Bool)

(assert (=> b!86297 m!91289))

(assert (=> b!86299 m!90799))

(assert (=> b!86299 m!90799))

(assert (=> b!86299 m!91289))

(assert (=> d!22387 d!22489))

(declare-fun b!86303 () Bool)

(declare-fun e!56243 () Option!147)

(assert (=> b!86303 (= e!56243 None!145)))

(declare-fun d!22491 () Bool)

(declare-fun c!14079 () Bool)

(assert (=> d!22491 (= c!14079 (and ((_ is Cons!1505) lt!40858) (= (_1!1105 (h!2096 lt!40858)) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun e!56242 () Option!147)

(assert (=> d!22491 (= (getValueByKey!141 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) e!56242)))

(declare-fun b!86301 () Bool)

(assert (=> b!86301 (= e!56242 e!56243)))

(declare-fun c!14080 () Bool)

(assert (=> b!86301 (= c!14080 (and ((_ is Cons!1505) lt!40858) (not (= (_1!1105 (h!2096 lt!40858)) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))))

(declare-fun b!86302 () Bool)

(assert (=> b!86302 (= e!56243 (getValueByKey!141 (t!5222 lt!40858) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86300 () Bool)

(assert (=> b!86300 (= e!56242 (Some!146 (_2!1105 (h!2096 lt!40858))))))

(assert (= (and d!22491 c!14079) b!86300))

(assert (= (and d!22491 (not c!14079)) b!86301))

(assert (= (and b!86301 c!14080) b!86302))

(assert (= (and b!86301 (not c!14080)) b!86303))

(declare-fun m!91291 () Bool)

(assert (=> b!86302 m!91291))

(assert (=> d!22387 d!22491))

(declare-fun d!22493 () Bool)

(assert (=> d!22493 (= (getValueByKey!141 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (Some!146 (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun lt!41033 () Unit!2498)

(assert (=> d!22493 (= lt!41033 (choose!511 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56244 () Bool)

(assert (=> d!22493 e!56244))

(declare-fun res!44389 () Bool)

(assert (=> d!22493 (=> (not res!44389) (not e!56244))))

(assert (=> d!22493 (= res!44389 (isStrictlySorted!285 lt!40858))))

(assert (=> d!22493 (= (lemmaContainsTupThenGetReturnValue!58 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) lt!41033)))

(declare-fun b!86304 () Bool)

(declare-fun res!44390 () Bool)

(assert (=> b!86304 (=> (not res!44390) (not e!56244))))

(assert (=> b!86304 (= res!44390 (containsKey!144 lt!40858 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86305 () Bool)

(assert (=> b!86305 (= e!56244 (contains!749 lt!40858 (tuple2!2189 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(assert (= (and d!22493 res!44389) b!86304))

(assert (= (and b!86304 res!44390) b!86305))

(assert (=> d!22493 m!90793))

(declare-fun m!91293 () Bool)

(assert (=> d!22493 m!91293))

(declare-fun m!91295 () Bool)

(assert (=> d!22493 m!91295))

(declare-fun m!91297 () Bool)

(assert (=> b!86304 m!91297))

(declare-fun m!91299 () Bool)

(assert (=> b!86305 m!91299))

(assert (=> d!22387 d!22493))

(declare-fun b!86306 () Bool)

(declare-fun e!56248 () List!1509)

(declare-fun call!8214 () List!1509)

(assert (=> b!86306 (= e!56248 call!8214)))

(declare-fun call!8215 () List!1509)

(declare-fun c!14084 () Bool)

(declare-fun bm!8211 () Bool)

(declare-fun e!56247 () List!1509)

(assert (=> bm!8211 (= call!8215 ($colon$colon!71 e!56247 (ite c!14084 (h!2096 (toList!736 e!55834)) (tuple2!2189 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))))

(declare-fun c!14083 () Bool)

(assert (=> bm!8211 (= c!14083 c!14084)))

(declare-fun b!86307 () Bool)

(declare-fun c!14082 () Bool)

(assert (=> b!86307 (= c!14082 (and ((_ is Cons!1505) (toList!736 e!55834)) (bvsgt (_1!1105 (h!2096 (toList!736 e!55834))) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun e!56245 () List!1509)

(assert (=> b!86307 (= e!56248 e!56245)))

(declare-fun lt!41034 () List!1509)

(declare-fun b!86308 () Bool)

(declare-fun e!56249 () Bool)

(assert (=> b!86308 (= e!56249 (contains!749 lt!41034 (tuple2!2189 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86309 () Bool)

(declare-fun res!44391 () Bool)

(assert (=> b!86309 (=> (not res!44391) (not e!56249))))

(assert (=> b!86309 (= res!44391 (containsKey!144 lt!41034 (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun bm!8212 () Bool)

(assert (=> bm!8212 (= call!8214 call!8215)))

(declare-fun b!86310 () Bool)

(assert (=> b!86310 (= e!56247 (insertStrictlySorted!61 (t!5222 (toList!736 e!55834)) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun c!14081 () Bool)

(declare-fun b!86311 () Bool)

(assert (=> b!86311 (= e!56247 (ite c!14081 (t!5222 (toList!736 e!55834)) (ite c!14082 (Cons!1505 (h!2096 (toList!736 e!55834)) (t!5222 (toList!736 e!55834))) Nil!1506)))))

(declare-fun b!86312 () Bool)

(declare-fun e!56246 () List!1509)

(assert (=> b!86312 (= e!56246 call!8215)))

(declare-fun bm!8213 () Bool)

(declare-fun call!8216 () List!1509)

(assert (=> bm!8213 (= call!8216 call!8214)))

(declare-fun d!22495 () Bool)

(assert (=> d!22495 e!56249))

(declare-fun res!44392 () Bool)

(assert (=> d!22495 (=> (not res!44392) (not e!56249))))

(assert (=> d!22495 (= res!44392 (isStrictlySorted!285 lt!41034))))

(assert (=> d!22495 (= lt!41034 e!56246)))

(assert (=> d!22495 (= c!14084 (and ((_ is Cons!1505) (toList!736 e!55834)) (bvslt (_1!1105 (h!2096 (toList!736 e!55834))) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(assert (=> d!22495 (isStrictlySorted!285 (toList!736 e!55834))))

(assert (=> d!22495 (= (insertStrictlySorted!61 (toList!736 e!55834) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_2!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) lt!41034)))

(declare-fun b!86313 () Bool)

(assert (=> b!86313 (= e!56245 call!8216)))

(declare-fun b!86314 () Bool)

(assert (=> b!86314 (= e!56246 e!56248)))

(assert (=> b!86314 (= c!14081 (and ((_ is Cons!1505) (toList!736 e!55834)) (= (_1!1105 (h!2096 (toList!736 e!55834))) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86315 () Bool)

(assert (=> b!86315 (= e!56245 call!8216)))

(assert (= (and d!22495 c!14084) b!86312))

(assert (= (and d!22495 (not c!14084)) b!86314))

(assert (= (and b!86314 c!14081) b!86306))

(assert (= (and b!86314 (not c!14081)) b!86307))

(assert (= (and b!86307 c!14082) b!86313))

(assert (= (and b!86307 (not c!14082)) b!86315))

(assert (= (or b!86313 b!86315) bm!8213))

(assert (= (or b!86306 bm!8213) bm!8212))

(assert (= (or b!86312 bm!8212) bm!8211))

(assert (= (and bm!8211 c!14083) b!86310))

(assert (= (and bm!8211 (not c!14083)) b!86311))

(assert (= (and d!22495 res!44392) b!86309))

(assert (= (and b!86309 res!44391) b!86308))

(declare-fun m!91301 () Bool)

(assert (=> b!86308 m!91301))

(declare-fun m!91303 () Bool)

(assert (=> b!86309 m!91303))

(declare-fun m!91305 () Bool)

(assert (=> bm!8211 m!91305))

(declare-fun m!91307 () Bool)

(assert (=> d!22495 m!91307))

(declare-fun m!91309 () Bool)

(assert (=> d!22495 m!91309))

(declare-fun m!91311 () Bool)

(assert (=> b!86310 m!91311))

(assert (=> d!22387 d!22495))

(declare-fun lt!41035 () Bool)

(declare-fun d!22497 () Bool)

(assert (=> d!22497 (= lt!41035 (select (content!90 (toList!736 lt!40578)) (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56251 () Bool)

(assert (=> d!22497 (= lt!41035 e!56251)))

(declare-fun res!44394 () Bool)

(assert (=> d!22497 (=> (not res!44394) (not e!56251))))

(assert (=> d!22497 (= res!44394 ((_ is Cons!1505) (toList!736 lt!40578)))))

(assert (=> d!22497 (= (contains!749 (toList!736 lt!40578) (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41035)))

(declare-fun b!86316 () Bool)

(declare-fun e!56250 () Bool)

(assert (=> b!86316 (= e!56251 e!56250)))

(declare-fun res!44393 () Bool)

(assert (=> b!86316 (=> res!44393 e!56250)))

(assert (=> b!86316 (= res!44393 (= (h!2096 (toList!736 lt!40578)) (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86317 () Bool)

(assert (=> b!86317 (= e!56250 (contains!749 (t!5222 (toList!736 lt!40578)) (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22497 res!44394) b!86316))

(assert (= (and b!86316 (not res!44393)) b!86317))

(declare-fun m!91313 () Bool)

(assert (=> d!22497 m!91313))

(declare-fun m!91315 () Bool)

(assert (=> d!22497 m!91315))

(declare-fun m!91317 () Bool)

(assert (=> b!86317 m!91317))

(assert (=> b!85694 d!22497))

(declare-fun d!22499 () Bool)

(assert (=> d!22499 (= (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40434)) (v!2654 (getValueByKey!141 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40434)))))

(assert (=> d!22203 d!22499))

(declare-fun b!86321 () Bool)

(declare-fun e!56253 () Option!147)

(assert (=> b!86321 (= e!56253 None!145)))

(declare-fun c!14085 () Bool)

(declare-fun d!22501 () Bool)

(assert (=> d!22501 (= c!14085 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40434)))))

(declare-fun e!56252 () Option!147)

(assert (=> d!22501 (= (getValueByKey!141 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40434) e!56252)))

(declare-fun b!86319 () Bool)

(assert (=> b!86319 (= e!56252 e!56253)))

(declare-fun c!14086 () Bool)

(assert (=> b!86319 (= c!14086 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (not (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40434))))))

(declare-fun b!86320 () Bool)

(assert (=> b!86320 (= e!56253 (getValueByKey!141 (t!5222 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!40434))))

(declare-fun b!86318 () Bool)

(assert (=> b!86318 (= e!56252 (Some!146 (_2!1105 (h!2096 (toList!736 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(assert (= (and d!22501 c!14085) b!86318))

(assert (= (and d!22501 (not c!14085)) b!86319))

(assert (= (and b!86319 c!14086) b!86320))

(assert (= (and b!86319 (not c!14086)) b!86321))

(declare-fun m!91319 () Bool)

(assert (=> b!86320 m!91319))

(assert (=> d!22203 d!22501))

(declare-fun d!22503 () Bool)

(assert (=> d!22503 (= (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85983 d!22503))

(declare-fun d!22505 () Bool)

(declare-fun res!44395 () Bool)

(declare-fun e!56254 () Bool)

(assert (=> d!22505 (=> res!44395 e!56254)))

(assert (=> d!22505 (= res!44395 (and ((_ is Cons!1505) (toList!736 lt!40376)) (= (_1!1105 (h!2096 (toList!736 lt!40376))) (_1!1105 lt!40197))))))

(assert (=> d!22505 (= (containsKey!144 (toList!736 lt!40376) (_1!1105 lt!40197)) e!56254)))

(declare-fun b!86322 () Bool)

(declare-fun e!56255 () Bool)

(assert (=> b!86322 (= e!56254 e!56255)))

(declare-fun res!44396 () Bool)

(assert (=> b!86322 (=> (not res!44396) (not e!56255))))

(assert (=> b!86322 (= res!44396 (and (or (not ((_ is Cons!1505) (toList!736 lt!40376))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40376))) (_1!1105 lt!40197))) ((_ is Cons!1505) (toList!736 lt!40376)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40376))) (_1!1105 lt!40197))))))

(declare-fun b!86323 () Bool)

(assert (=> b!86323 (= e!56255 (containsKey!144 (t!5222 (toList!736 lt!40376)) (_1!1105 lt!40197)))))

(assert (= (and d!22505 (not res!44395)) b!86322))

(assert (= (and b!86322 res!44396) b!86323))

(declare-fun m!91321 () Bool)

(assert (=> b!86323 m!91321))

(assert (=> d!22255 d!22505))

(declare-fun d!22507 () Bool)

(declare-fun e!56257 () Bool)

(assert (=> d!22507 e!56257))

(declare-fun res!44397 () Bool)

(assert (=> d!22507 (=> res!44397 e!56257)))

(declare-fun lt!41037 () Bool)

(assert (=> d!22507 (= res!44397 (not lt!41037))))

(declare-fun lt!41039 () Bool)

(assert (=> d!22507 (= lt!41037 lt!41039)))

(declare-fun lt!41036 () Unit!2498)

(declare-fun e!56256 () Unit!2498)

(assert (=> d!22507 (= lt!41036 e!56256)))

(declare-fun c!14087 () Bool)

(assert (=> d!22507 (= c!14087 lt!41039)))

(assert (=> d!22507 (= lt!41039 (containsKey!144 (toList!736 lt!40566) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22507 (= (contains!747 lt!40566 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41037)))

(declare-fun b!86324 () Bool)

(declare-fun lt!41038 () Unit!2498)

(assert (=> b!86324 (= e!56256 lt!41038)))

(assert (=> b!86324 (= lt!41038 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40566) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86324 (isDefined!93 (getValueByKey!141 (toList!736 lt!40566) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86325 () Bool)

(declare-fun Unit!2540 () Unit!2498)

(assert (=> b!86325 (= e!56256 Unit!2540)))

(declare-fun b!86326 () Bool)

(assert (=> b!86326 (= e!56257 (isDefined!93 (getValueByKey!141 (toList!736 lt!40566) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22507 c!14087) b!86324))

(assert (= (and d!22507 (not c!14087)) b!86325))

(assert (= (and d!22507 (not res!44397)) b!86326))

(declare-fun m!91323 () Bool)

(assert (=> d!22507 m!91323))

(declare-fun m!91325 () Bool)

(assert (=> b!86324 m!91325))

(assert (=> b!86324 m!90107))

(assert (=> b!86324 m!90107))

(declare-fun m!91327 () Bool)

(assert (=> b!86324 m!91327))

(assert (=> b!86326 m!90107))

(assert (=> b!86326 m!90107))

(assert (=> b!86326 m!91327))

(assert (=> d!22187 d!22507))

(declare-fun b!86330 () Bool)

(declare-fun e!56259 () Option!147)

(assert (=> b!86330 (= e!56259 None!145)))

(declare-fun c!14088 () Bool)

(declare-fun d!22509 () Bool)

(assert (=> d!22509 (= c!14088 (and ((_ is Cons!1505) lt!40564) (= (_1!1105 (h!2096 lt!40564)) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56258 () Option!147)

(assert (=> d!22509 (= (getValueByKey!141 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56258)))

(declare-fun b!86328 () Bool)

(assert (=> b!86328 (= e!56258 e!56259)))

(declare-fun c!14089 () Bool)

(assert (=> b!86328 (= c!14089 (and ((_ is Cons!1505) lt!40564) (not (= (_1!1105 (h!2096 lt!40564)) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86329 () Bool)

(assert (=> b!86329 (= e!56259 (getValueByKey!141 (t!5222 lt!40564) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86327 () Bool)

(assert (=> b!86327 (= e!56258 (Some!146 (_2!1105 (h!2096 lt!40564))))))

(assert (= (and d!22509 c!14088) b!86327))

(assert (= (and d!22509 (not c!14088)) b!86328))

(assert (= (and b!86328 c!14089) b!86329))

(assert (= (and b!86328 (not c!14089)) b!86330))

(declare-fun m!91329 () Bool)

(assert (=> b!86329 m!91329))

(assert (=> d!22187 d!22509))

(declare-fun d!22511 () Bool)

(assert (=> d!22511 (= (getValueByKey!141 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41040 () Unit!2498)

(assert (=> d!22511 (= lt!41040 (choose!511 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56260 () Bool)

(assert (=> d!22511 e!56260))

(declare-fun res!44398 () Bool)

(assert (=> d!22511 (=> (not res!44398) (not e!56260))))

(assert (=> d!22511 (= res!44398 (isStrictlySorted!285 lt!40564))))

(assert (=> d!22511 (= (lemmaContainsTupThenGetReturnValue!58 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41040)))

(declare-fun b!86331 () Bool)

(declare-fun res!44399 () Bool)

(assert (=> b!86331 (=> (not res!44399) (not e!56260))))

(assert (=> b!86331 (= res!44399 (containsKey!144 lt!40564 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86332 () Bool)

(assert (=> b!86332 (= e!56260 (contains!749 lt!40564 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22511 res!44398) b!86331))

(assert (= (and b!86331 res!44399) b!86332))

(assert (=> d!22511 m!90101))

(declare-fun m!91331 () Bool)

(assert (=> d!22511 m!91331))

(declare-fun m!91333 () Bool)

(assert (=> d!22511 m!91333))

(declare-fun m!91335 () Bool)

(assert (=> b!86331 m!91335))

(declare-fun m!91337 () Bool)

(assert (=> b!86332 m!91337))

(assert (=> d!22187 d!22511))

(declare-fun b!86333 () Bool)

(declare-fun e!56264 () List!1509)

(declare-fun call!8217 () List!1509)

(assert (=> b!86333 (= e!56264 call!8217)))

(declare-fun bm!8214 () Bool)

(declare-fun call!8218 () List!1509)

(declare-fun c!14093 () Bool)

(declare-fun e!56263 () List!1509)

(assert (=> bm!8214 (= call!8218 ($colon$colon!71 e!56263 (ite c!14093 (h!2096 (toList!736 lt!40438)) (tuple2!2189 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14092 () Bool)

(assert (=> bm!8214 (= c!14092 c!14093)))

(declare-fun c!14091 () Bool)

(declare-fun b!86334 () Bool)

(assert (=> b!86334 (= c!14091 (and ((_ is Cons!1505) (toList!736 lt!40438)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40438))) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56261 () List!1509)

(assert (=> b!86334 (= e!56264 e!56261)))

(declare-fun e!56265 () Bool)

(declare-fun lt!41041 () List!1509)

(declare-fun b!86335 () Bool)

(assert (=> b!86335 (= e!56265 (contains!749 lt!41041 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86336 () Bool)

(declare-fun res!44400 () Bool)

(assert (=> b!86336 (=> (not res!44400) (not e!56265))))

(assert (=> b!86336 (= res!44400 (containsKey!144 lt!41041 (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8215 () Bool)

(assert (=> bm!8215 (= call!8217 call!8218)))

(declare-fun b!86337 () Bool)

(assert (=> b!86337 (= e!56263 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40438)) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun c!14090 () Bool)

(declare-fun b!86338 () Bool)

(assert (=> b!86338 (= e!56263 (ite c!14090 (t!5222 (toList!736 lt!40438)) (ite c!14091 (Cons!1505 (h!2096 (toList!736 lt!40438)) (t!5222 (toList!736 lt!40438))) Nil!1506)))))

(declare-fun b!86339 () Bool)

(declare-fun e!56262 () List!1509)

(assert (=> b!86339 (= e!56262 call!8218)))

(declare-fun bm!8216 () Bool)

(declare-fun call!8219 () List!1509)

(assert (=> bm!8216 (= call!8219 call!8217)))

(declare-fun d!22513 () Bool)

(assert (=> d!22513 e!56265))

(declare-fun res!44401 () Bool)

(assert (=> d!22513 (=> (not res!44401) (not e!56265))))

(assert (=> d!22513 (= res!44401 (isStrictlySorted!285 lt!41041))))

(assert (=> d!22513 (= lt!41041 e!56262)))

(assert (=> d!22513 (= c!14093 (and ((_ is Cons!1505) (toList!736 lt!40438)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40438))) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22513 (isStrictlySorted!285 (toList!736 lt!40438))))

(assert (=> d!22513 (= (insertStrictlySorted!61 (toList!736 lt!40438) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41041)))

(declare-fun b!86340 () Bool)

(assert (=> b!86340 (= e!56261 call!8219)))

(declare-fun b!86341 () Bool)

(assert (=> b!86341 (= e!56262 e!56264)))

(assert (=> b!86341 (= c!14090 (and ((_ is Cons!1505) (toList!736 lt!40438)) (= (_1!1105 (h!2096 (toList!736 lt!40438))) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86342 () Bool)

(assert (=> b!86342 (= e!56261 call!8219)))

(assert (= (and d!22513 c!14093) b!86339))

(assert (= (and d!22513 (not c!14093)) b!86341))

(assert (= (and b!86341 c!14090) b!86333))

(assert (= (and b!86341 (not c!14090)) b!86334))

(assert (= (and b!86334 c!14091) b!86340))

(assert (= (and b!86334 (not c!14091)) b!86342))

(assert (= (or b!86340 b!86342) bm!8216))

(assert (= (or b!86333 bm!8216) bm!8215))

(assert (= (or b!86339 bm!8215) bm!8214))

(assert (= (and bm!8214 c!14092) b!86337))

(assert (= (and bm!8214 (not c!14092)) b!86338))

(assert (= (and d!22513 res!44401) b!86336))

(assert (= (and b!86336 res!44400) b!86335))

(declare-fun m!91339 () Bool)

(assert (=> b!86335 m!91339))

(declare-fun m!91341 () Bool)

(assert (=> b!86336 m!91341))

(declare-fun m!91343 () Bool)

(assert (=> bm!8214 m!91343))

(declare-fun m!91345 () Bool)

(assert (=> d!22513 m!91345))

(declare-fun m!91347 () Bool)

(assert (=> d!22513 m!91347))

(declare-fun m!91349 () Bool)

(assert (=> b!86337 m!91349))

(assert (=> d!22187 d!22513))

(declare-fun b!86346 () Bool)

(declare-fun e!56267 () Option!147)

(assert (=> b!86346 (= e!56267 None!145)))

(declare-fun d!22515 () Bool)

(declare-fun c!14094 () Bool)

(assert (=> d!22515 (= c!14094 (and ((_ is Cons!1505) (toList!736 lt!40718)) (= (_1!1105 (h!2096 (toList!736 lt!40718))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56266 () Option!147)

(assert (=> d!22515 (= (getValueByKey!141 (toList!736 lt!40718) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56266)))

(declare-fun b!86344 () Bool)

(assert (=> b!86344 (= e!56266 e!56267)))

(declare-fun c!14095 () Bool)

(assert (=> b!86344 (= c!14095 (and ((_ is Cons!1505) (toList!736 lt!40718)) (not (= (_1!1105 (h!2096 (toList!736 lt!40718))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86345 () Bool)

(assert (=> b!86345 (= e!56267 (getValueByKey!141 (t!5222 (toList!736 lt!40718)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86343 () Bool)

(assert (=> b!86343 (= e!56266 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40718)))))))

(assert (= (and d!22515 c!14094) b!86343))

(assert (= (and d!22515 (not c!14094)) b!86344))

(assert (= (and b!86344 c!14095) b!86345))

(assert (= (and b!86344 (not c!14095)) b!86346))

(declare-fun m!91351 () Bool)

(assert (=> b!86345 m!91351))

(assert (=> b!85993 d!22515))

(assert (=> d!22409 d!22413))

(assert (=> d!22409 d!22405))

(assert (=> d!22409 d!22411))

(assert (=> d!22409 d!22407))

(declare-fun d!22517 () Bool)

(declare-fun res!44405 () Bool)

(declare-fun e!56268 () Bool)

(assert (=> d!22517 (=> (not res!44405) (not e!56268))))

(assert (=> d!22517 (= res!44405 (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992)))))))

(assert (=> d!22517 (= (simpleValid!58 (v!2648 (underlying!292 thiss!992))) e!56268)))

(declare-fun b!86347 () Bool)

(declare-fun res!44403 () Bool)

(assert (=> b!86347 (=> (not res!44403) (not e!56268))))

(assert (=> b!86347 (= res!44403 (and (= (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001)) (= (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992))))) (bvsge (_size!426 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!426 (v!2648 (underlying!292 thiss!992))) (bvadd (mask!6365 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!86348 () Bool)

(declare-fun res!44404 () Bool)

(assert (=> b!86348 (=> (not res!44404) (not e!56268))))

(assert (=> b!86348 (= res!44404 (bvsge (size!2160 (v!2648 (underlying!292 thiss!992))) (_size!426 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!86349 () Bool)

(declare-fun res!44402 () Bool)

(assert (=> b!86349 (=> (not res!44402) (not e!56268))))

(assert (=> b!86349 (= res!44402 (= (size!2160 (v!2648 (underlying!292 thiss!992))) (bvadd (_size!426 (v!2648 (underlying!292 thiss!992))) (bvsdiv (bvadd (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86350 () Bool)

(assert (=> b!86350 (= e!56268 (and (bvsge (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!426 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!22517 res!44405) b!86347))

(assert (= (and b!86347 res!44403) b!86348))

(assert (= (and b!86348 res!44404) b!86349))

(assert (= (and b!86349 res!44402) b!86350))

(assert (=> d!22517 m!89601))

(declare-fun m!91353 () Bool)

(assert (=> b!86348 m!91353))

(assert (=> b!86349 m!91353))

(assert (=> d!22239 d!22517))

(declare-fun d!22519 () Bool)

(assert (not d!22519))

(assert (=> b!85683 d!22519))

(declare-fun d!22521 () Bool)

(assert (=> d!22521 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41042 () Unit!2498)

(assert (=> d!22521 (= lt!41042 (choose!517 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56269 () Bool)

(assert (=> d!22521 e!56269))

(declare-fun res!44406 () Bool)

(assert (=> d!22521 (=> (not res!44406) (not e!56269))))

(assert (=> d!22521 (= res!44406 (isStrictlySorted!285 (toList!736 lt!40439)))))

(assert (=> d!22521 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41042)))

(declare-fun b!86351 () Bool)

(assert (=> b!86351 (= e!56269 (containsKey!144 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22521 res!44406) b!86351))

(assert (=> d!22521 m!90193))

(assert (=> d!22521 m!90193))

(assert (=> d!22521 m!90685))

(declare-fun m!91355 () Bool)

(assert (=> d!22521 m!91355))

(declare-fun m!91357 () Bool)

(assert (=> d!22521 m!91357))

(assert (=> b!86351 m!90681))

(assert (=> b!86027 d!22521))

(declare-fun d!22523 () Bool)

(assert (=> d!22523 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3653 () Bool)

(assert (= bs!3653 d!22523))

(assert (=> bs!3653 m!90193))

(declare-fun m!91359 () Bool)

(assert (=> bs!3653 m!91359))

(assert (=> b!86027 d!22523))

(declare-fun b!86355 () Bool)

(declare-fun e!56271 () Option!147)

(assert (=> b!86355 (= e!56271 None!145)))

(declare-fun d!22525 () Bool)

(declare-fun c!14096 () Bool)

(assert (=> d!22525 (= c!14096 (and ((_ is Cons!1505) (toList!736 lt!40439)) (= (_1!1105 (h!2096 (toList!736 lt!40439))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56270 () Option!147)

(assert (=> d!22525 (= (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000) e!56270)))

(declare-fun b!86353 () Bool)

(assert (=> b!86353 (= e!56270 e!56271)))

(declare-fun c!14097 () Bool)

(assert (=> b!86353 (= c!14097 (and ((_ is Cons!1505) (toList!736 lt!40439)) (not (= (_1!1105 (h!2096 (toList!736 lt!40439))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86354 () Bool)

(assert (=> b!86354 (= e!56271 (getValueByKey!141 (t!5222 (toList!736 lt!40439)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86352 () Bool)

(assert (=> b!86352 (= e!56270 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40439)))))))

(assert (= (and d!22525 c!14096) b!86352))

(assert (= (and d!22525 (not c!14096)) b!86353))

(assert (= (and b!86353 c!14097) b!86354))

(assert (= (and b!86353 (not c!14097)) b!86355))

(declare-fun m!91361 () Bool)

(assert (=> b!86354 m!91361))

(assert (=> b!86027 d!22525))

(declare-fun d!22527 () Bool)

(declare-fun res!44407 () Bool)

(declare-fun e!56272 () Bool)

(assert (=> d!22527 (=> res!44407 e!56272)))

(assert (=> d!22527 (= res!44407 (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22527 (= (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!56272)))

(declare-fun b!86356 () Bool)

(declare-fun e!56273 () Bool)

(assert (=> b!86356 (= e!56272 e!56273)))

(declare-fun res!44408 () Bool)

(assert (=> b!86356 (=> (not res!44408) (not e!56273))))

(assert (=> b!86356 (= res!44408 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86357 () Bool)

(assert (=> b!86357 (= e!56273 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22527 (not res!44407)) b!86356))

(assert (= (and b!86356 res!44408) b!86357))

(declare-fun m!91363 () Bool)

(assert (=> d!22527 m!91363))

(assert (=> b!86357 m!89569))

(declare-fun m!91365 () Bool)

(assert (=> b!86357 m!91365))

(assert (=> b!85952 d!22527))

(declare-fun d!22529 () Bool)

(assert (=> d!22529 (= (get!1207 (getValueByKey!141 (toList!736 lt!40437) lt!40434)) (v!2654 (getValueByKey!141 (toList!736 lt!40437) lt!40434)))))

(assert (=> d!22193 d!22529))

(declare-fun b!86361 () Bool)

(declare-fun e!56275 () Option!147)

(assert (=> b!86361 (= e!56275 None!145)))

(declare-fun d!22531 () Bool)

(declare-fun c!14098 () Bool)

(assert (=> d!22531 (= c!14098 (and ((_ is Cons!1505) (toList!736 lt!40437)) (= (_1!1105 (h!2096 (toList!736 lt!40437))) lt!40434)))))

(declare-fun e!56274 () Option!147)

(assert (=> d!22531 (= (getValueByKey!141 (toList!736 lt!40437) lt!40434) e!56274)))

(declare-fun b!86359 () Bool)

(assert (=> b!86359 (= e!56274 e!56275)))

(declare-fun c!14099 () Bool)

(assert (=> b!86359 (= c!14099 (and ((_ is Cons!1505) (toList!736 lt!40437)) (not (= (_1!1105 (h!2096 (toList!736 lt!40437))) lt!40434))))))

(declare-fun b!86360 () Bool)

(assert (=> b!86360 (= e!56275 (getValueByKey!141 (t!5222 (toList!736 lt!40437)) lt!40434))))

(declare-fun b!86358 () Bool)

(assert (=> b!86358 (= e!56274 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40437)))))))

(assert (= (and d!22531 c!14098) b!86358))

(assert (= (and d!22531 (not c!14098)) b!86359))

(assert (= (and b!86359 c!14099) b!86360))

(assert (= (and b!86359 (not c!14099)) b!86361))

(declare-fun m!91367 () Bool)

(assert (=> b!86360 m!91367))

(assert (=> d!22193 d!22531))

(declare-fun lt!41043 () Bool)

(declare-fun d!22533 () Bool)

(assert (=> d!22533 (= lt!41043 (select (content!90 (toList!736 lt!40860)) (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun e!56277 () Bool)

(assert (=> d!22533 (= lt!41043 e!56277)))

(declare-fun res!44410 () Bool)

(assert (=> d!22533 (=> (not res!44410) (not e!56277))))

(assert (=> d!22533 (= res!44410 ((_ is Cons!1505) (toList!736 lt!40860)))))

(assert (=> d!22533 (= (contains!749 (toList!736 lt!40860) (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41043)))

(declare-fun b!86362 () Bool)

(declare-fun e!56276 () Bool)

(assert (=> b!86362 (= e!56277 e!56276)))

(declare-fun res!44409 () Bool)

(assert (=> b!86362 (=> res!44409 e!56276)))

(assert (=> b!86362 (= res!44409 (= (h!2096 (toList!736 lt!40860)) (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86363 () Bool)

(assert (=> b!86363 (= e!56276 (contains!749 (t!5222 (toList!736 lt!40860)) (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (= (and d!22533 res!44410) b!86362))

(assert (= (and b!86362 (not res!44409)) b!86363))

(declare-fun m!91369 () Bool)

(assert (=> d!22533 m!91369))

(declare-fun m!91371 () Bool)

(assert (=> d!22533 m!91371))

(declare-fun m!91373 () Bool)

(assert (=> b!86363 m!91373))

(assert (=> b!86126 d!22533))

(declare-fun d!22535 () Bool)

(declare-fun res!44411 () Bool)

(declare-fun e!56278 () Bool)

(assert (=> d!22535 (=> res!44411 e!56278)))

(assert (=> d!22535 (= res!44411 (and ((_ is Cons!1505) lt!40370) (= (_1!1105 (h!2096 lt!40370)) (_1!1105 lt!40182))))))

(assert (=> d!22535 (= (containsKey!144 lt!40370 (_1!1105 lt!40182)) e!56278)))

(declare-fun b!86364 () Bool)

(declare-fun e!56279 () Bool)

(assert (=> b!86364 (= e!56278 e!56279)))

(declare-fun res!44412 () Bool)

(assert (=> b!86364 (=> (not res!44412) (not e!56279))))

(assert (=> b!86364 (= res!44412 (and (or (not ((_ is Cons!1505) lt!40370)) (bvsle (_1!1105 (h!2096 lt!40370)) (_1!1105 lt!40182))) ((_ is Cons!1505) lt!40370) (bvslt (_1!1105 (h!2096 lt!40370)) (_1!1105 lt!40182))))))

(declare-fun b!86365 () Bool)

(assert (=> b!86365 (= e!56279 (containsKey!144 (t!5222 lt!40370) (_1!1105 lt!40182)))))

(assert (= (and d!22535 (not res!44411)) b!86364))

(assert (= (and b!86364 res!44412) b!86365))

(declare-fun m!91375 () Bool)

(assert (=> b!86365 m!91375))

(assert (=> b!85717 d!22535))

(declare-fun d!22537 () Bool)

(assert (=> d!22537 (= (apply!82 lt!40902 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40902) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3654 () Bool)

(assert (= bs!3654 d!22537))

(declare-fun m!91377 () Bool)

(assert (=> bs!3654 m!91377))

(assert (=> bs!3654 m!91377))

(declare-fun m!91379 () Bool)

(assert (=> bs!3654 m!91379))

(assert (=> b!86170 d!22537))

(declare-fun d!22539 () Bool)

(assert (=> d!22539 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182)))))))

(declare-fun bs!3655 () Bool)

(assert (= bs!3655 d!22539))

(assert (=> bs!3655 m!89875))

(declare-fun m!91381 () Bool)

(assert (=> bs!3655 m!91381))

(assert (=> b!85708 d!22539))

(assert (=> b!85708 d!22283))

(declare-fun d!22541 () Bool)

(assert (=> d!22541 (= (get!1206 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85705 d!22541))

(declare-fun d!22543 () Bool)

(assert (=> d!22543 (= ($colon$colon!71 e!55929 (ite c!13939 (h!2096 (toList!736 lt!40199)) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182)))) (Cons!1505 (ite c!13939 (h!2096 (toList!736 lt!40199)) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))) e!55929))))

(assert (=> bm!8134 d!22543))

(declare-fun d!22545 () Bool)

(declare-fun res!44413 () Bool)

(declare-fun e!56280 () Bool)

(assert (=> d!22545 (=> res!44413 e!56280)))

(assert (=> d!22545 (= res!44413 (and ((_ is Cons!1505) lt!40618) (= (_1!1105 (h!2096 lt!40618)) (_1!1105 lt!40197))))))

(assert (=> d!22545 (= (containsKey!144 lt!40618 (_1!1105 lt!40197)) e!56280)))

(declare-fun b!86366 () Bool)

(declare-fun e!56281 () Bool)

(assert (=> b!86366 (= e!56280 e!56281)))

(declare-fun res!44414 () Bool)

(assert (=> b!86366 (=> (not res!44414) (not e!56281))))

(assert (=> b!86366 (= res!44414 (and (or (not ((_ is Cons!1505) lt!40618)) (bvsle (_1!1105 (h!2096 lt!40618)) (_1!1105 lt!40197))) ((_ is Cons!1505) lt!40618) (bvslt (_1!1105 (h!2096 lt!40618)) (_1!1105 lt!40197))))))

(declare-fun b!86367 () Bool)

(assert (=> b!86367 (= e!56281 (containsKey!144 (t!5222 lt!40618) (_1!1105 lt!40197)))))

(assert (= (and d!22545 (not res!44413)) b!86366))

(assert (= (and b!86366 res!44414) b!86367))

(declare-fun m!91383 () Bool)

(assert (=> b!86367 m!91383))

(assert (=> b!85793 d!22545))

(declare-fun b!86368 () Bool)

(declare-fun e!56285 () List!1509)

(declare-fun call!8220 () List!1509)

(assert (=> b!86368 (= e!56285 call!8220)))

(declare-fun bm!8217 () Bool)

(declare-fun call!8221 () List!1509)

(declare-fun e!56284 () List!1509)

(declare-fun c!14103 () Bool)

(assert (=> bm!8217 (= call!8221 ($colon$colon!71 e!56284 (ite c!14103 (h!2096 (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))))))

(declare-fun c!14102 () Bool)

(assert (=> bm!8217 (= c!14102 c!14103)))

(declare-fun c!14101 () Bool)

(declare-fun b!86369 () Bool)

(assert (=> b!86369 (= c!14101 (and ((_ is Cons!1505) (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))))) (_1!1105 lt!40197))))))

(declare-fun e!56282 () List!1509)

(assert (=> b!86369 (= e!56285 e!56282)))

(declare-fun b!86370 () Bool)

(declare-fun e!56286 () Bool)

(declare-fun lt!41044 () List!1509)

(assert (=> b!86370 (= e!56286 (contains!749 lt!41044 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!86371 () Bool)

(declare-fun res!44415 () Bool)

(assert (=> b!86371 (=> (not res!44415) (not e!56286))))

(assert (=> b!86371 (= res!44415 (containsKey!144 lt!41044 (_1!1105 lt!40197)))))

(declare-fun bm!8218 () Bool)

(assert (=> bm!8218 (= call!8220 call!8221)))

(declare-fun b!86372 () Bool)

(assert (=> b!86372 (= e!56284 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun c!14100 () Bool)

(declare-fun b!86373 () Bool)

(assert (=> b!86373 (= e!56284 (ite c!14100 (t!5222 (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (ite c!14101 (Cons!1505 (h!2096 (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (t!5222 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))))) Nil!1506)))))

(declare-fun b!86374 () Bool)

(declare-fun e!56283 () List!1509)

(assert (=> b!86374 (= e!56283 call!8221)))

(declare-fun bm!8219 () Bool)

(declare-fun call!8222 () List!1509)

(assert (=> bm!8219 (= call!8222 call!8220)))

(declare-fun d!22547 () Bool)

(assert (=> d!22547 e!56286))

(declare-fun res!44416 () Bool)

(assert (=> d!22547 (=> (not res!44416) (not e!56286))))

(assert (=> d!22547 (= res!44416 (isStrictlySorted!285 lt!41044))))

(assert (=> d!22547 (= lt!41044 e!56283)))

(assert (=> d!22547 (= c!14103 (and ((_ is Cons!1505) (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))))) (_1!1105 lt!40197))))))

(assert (=> d!22547 (isStrictlySorted!285 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))))))

(assert (=> d!22547 (= (insertStrictlySorted!61 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))) (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!41044)))

(declare-fun b!86375 () Bool)

(assert (=> b!86375 (= e!56282 call!8222)))

(declare-fun b!86376 () Bool)

(assert (=> b!86376 (= e!56283 e!56285)))

(assert (=> b!86376 (= c!14100 (and ((_ is Cons!1505) (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))) (= (_1!1105 (h!2096 (t!5222 (toList!736 (+!107 lt!40193 lt!40192))))) (_1!1105 lt!40197))))))

(declare-fun b!86377 () Bool)

(assert (=> b!86377 (= e!56282 call!8222)))

(assert (= (and d!22547 c!14103) b!86374))

(assert (= (and d!22547 (not c!14103)) b!86376))

(assert (= (and b!86376 c!14100) b!86368))

(assert (= (and b!86376 (not c!14100)) b!86369))

(assert (= (and b!86369 c!14101) b!86375))

(assert (= (and b!86369 (not c!14101)) b!86377))

(assert (= (or b!86375 b!86377) bm!8219))

(assert (= (or b!86368 bm!8219) bm!8218))

(assert (= (or b!86374 bm!8218) bm!8217))

(assert (= (and bm!8217 c!14102) b!86372))

(assert (= (and bm!8217 (not c!14102)) b!86373))

(assert (= (and d!22547 res!44416) b!86371))

(assert (= (and b!86371 res!44415) b!86370))

(declare-fun m!91385 () Bool)

(assert (=> b!86370 m!91385))

(declare-fun m!91387 () Bool)

(assert (=> b!86371 m!91387))

(declare-fun m!91389 () Bool)

(assert (=> bm!8217 m!91389))

(declare-fun m!91391 () Bool)

(assert (=> d!22547 m!91391))

(declare-fun m!91393 () Bool)

(assert (=> d!22547 m!91393))

(declare-fun m!91395 () Bool)

(assert (=> b!86372 m!91395))

(assert (=> b!85838 d!22547))

(declare-fun d!22549 () Bool)

(declare-fun res!44417 () Bool)

(declare-fun e!56287 () Bool)

(assert (=> d!22549 (=> res!44417 e!56287)))

(assert (=> d!22549 (= res!44417 (and ((_ is Cons!1505) lt!40606) (= (_1!1105 (h!2096 lt!40606)) (_1!1105 lt!40182))))))

(assert (=> d!22549 (= (containsKey!144 lt!40606 (_1!1105 lt!40182)) e!56287)))

(declare-fun b!86378 () Bool)

(declare-fun e!56288 () Bool)

(assert (=> b!86378 (= e!56287 e!56288)))

(declare-fun res!44418 () Bool)

(assert (=> b!86378 (=> (not res!44418) (not e!56288))))

(assert (=> b!86378 (= res!44418 (and (or (not ((_ is Cons!1505) lt!40606)) (bvsle (_1!1105 (h!2096 lt!40606)) (_1!1105 lt!40182))) ((_ is Cons!1505) lt!40606) (bvslt (_1!1105 (h!2096 lt!40606)) (_1!1105 lt!40182))))))

(declare-fun b!86379 () Bool)

(assert (=> b!86379 (= e!56288 (containsKey!144 (t!5222 lt!40606) (_1!1105 lt!40182)))))

(assert (= (and d!22549 (not res!44417)) b!86378))

(assert (= (and b!86378 res!44418) b!86379))

(declare-fun m!91397 () Bool)

(assert (=> b!86379 m!91397))

(assert (=> b!85742 d!22549))

(declare-fun d!22551 () Bool)

(assert (=> d!22551 (arrayContainsKey!0 (_keys!4009 newMap!16) lt!40555 #b00000000000000000000000000000000)))

(declare-fun lt!41047 () Unit!2498)

(declare-fun choose!13 (array!4011 (_ BitVec 64) (_ BitVec 32)) Unit!2498)

(assert (=> d!22551 (= lt!41047 (choose!13 (_keys!4009 newMap!16) lt!40555 #b00000000000000000000000000000000))))

(assert (=> d!22551 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!22551 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4009 newMap!16) lt!40555 #b00000000000000000000000000000000) lt!41047)))

(declare-fun bs!3656 () Bool)

(assert (= bs!3656 d!22551))

(assert (=> bs!3656 m!90069))

(declare-fun m!91399 () Bool)

(assert (=> bs!3656 m!91399))

(assert (=> b!85662 d!22551))

(declare-fun d!22553 () Bool)

(declare-fun res!44419 () Bool)

(declare-fun e!56289 () Bool)

(assert (=> d!22553 (=> res!44419 e!56289)))

(assert (=> d!22553 (= res!44419 (= (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) lt!40555))))

(assert (=> d!22553 (= (arrayContainsKey!0 (_keys!4009 newMap!16) lt!40555 #b00000000000000000000000000000000) e!56289)))

(declare-fun b!86380 () Bool)

(declare-fun e!56290 () Bool)

(assert (=> b!86380 (= e!56289 e!56290)))

(declare-fun res!44420 () Bool)

(assert (=> b!86380 (=> (not res!44420) (not e!56290))))

(assert (=> b!86380 (= res!44420 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86381 () Bool)

(assert (=> b!86381 (= e!56290 (arrayContainsKey!0 (_keys!4009 newMap!16) lt!40555 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22553 (not res!44419)) b!86380))

(assert (= (and b!86380 res!44420) b!86381))

(assert (=> d!22553 m!90065))

(declare-fun m!91401 () Bool)

(assert (=> b!86381 m!91401))

(assert (=> b!85662 d!22553))

(declare-fun d!22555 () Bool)

(declare-fun lt!41050 () SeekEntryResult!237)

(assert (=> d!22555 (and (or ((_ is Undefined!237) lt!41050) (not ((_ is Found!237) lt!41050)) (and (bvsge (index!3086 lt!41050) #b00000000000000000000000000000000) (bvslt (index!3086 lt!41050) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!41050) ((_ is Found!237) lt!41050) (not ((_ is MissingZero!237) lt!41050)) (and (bvsge (index!3085 lt!41050) #b00000000000000000000000000000000) (bvslt (index!3085 lt!41050) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!41050) ((_ is Found!237) lt!41050) ((_ is MissingZero!237) lt!41050) (not ((_ is MissingVacant!237) lt!41050)) (and (bvsge (index!3088 lt!41050) #b00000000000000000000000000000000) (bvslt (index!3088 lt!41050) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!41050) (ite ((_ is Found!237) lt!41050) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!41050)) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!237) lt!41050) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!41050)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!237) lt!41050) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!41050)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56292 () SeekEntryResult!237)

(assert (=> d!22555 (= lt!41050 e!56292)))

(declare-fun c!14105 () Bool)

(declare-fun lt!41049 () SeekEntryResult!237)

(assert (=> d!22555 (= c!14105 (and ((_ is Intermediate!237) lt!41049) (undefined!1049 lt!41049)))))

(assert (=> d!22555 (= lt!41049 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (mask!6365 newMap!16)) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(assert (=> d!22555 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22555 (= (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (_keys!4009 newMap!16) (mask!6365 newMap!16)) lt!41050)))

(declare-fun b!86382 () Bool)

(declare-fun c!14106 () Bool)

(declare-fun lt!41048 () (_ BitVec 64))

(assert (=> b!86382 (= c!14106 (= lt!41048 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56293 () SeekEntryResult!237)

(declare-fun e!56291 () SeekEntryResult!237)

(assert (=> b!86382 (= e!56293 e!56291)))

(declare-fun b!86383 () Bool)

(assert (=> b!86383 (= e!56291 (seekKeyOrZeroReturnVacant!0 (x!11990 lt!41049) (index!3087 lt!41049) (index!3087 lt!41049) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!86384 () Bool)

(assert (=> b!86384 (= e!56291 (MissingZero!237 (index!3087 lt!41049)))))

(declare-fun b!86385 () Bool)

(assert (=> b!86385 (= e!56292 Undefined!237)))

(declare-fun b!86386 () Bool)

(assert (=> b!86386 (= e!56293 (Found!237 (index!3087 lt!41049)))))

(declare-fun b!86387 () Bool)

(assert (=> b!86387 (= e!56292 e!56293)))

(assert (=> b!86387 (= lt!41048 (select (arr!1910 (_keys!4009 newMap!16)) (index!3087 lt!41049)))))

(declare-fun c!14104 () Bool)

(assert (=> b!86387 (= c!14104 (= lt!41048 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22555 c!14105) b!86385))

(assert (= (and d!22555 (not c!14105)) b!86387))

(assert (= (and b!86387 c!14104) b!86386))

(assert (= (and b!86387 (not c!14104)) b!86382))

(assert (= (and b!86382 c!14106) b!86384))

(assert (= (and b!86382 (not c!14106)) b!86383))

(declare-fun m!91403 () Bool)

(assert (=> d!22555 m!91403))

(declare-fun m!91405 () Bool)

(assert (=> d!22555 m!91405))

(declare-fun m!91407 () Bool)

(assert (=> d!22555 m!91407))

(assert (=> d!22555 m!90203))

(declare-fun m!91409 () Bool)

(assert (=> d!22555 m!91409))

(assert (=> d!22555 m!90065))

(declare-fun m!91411 () Bool)

(assert (=> d!22555 m!91411))

(assert (=> d!22555 m!90065))

(assert (=> d!22555 m!91409))

(assert (=> b!86383 m!90065))

(declare-fun m!91413 () Bool)

(assert (=> b!86383 m!91413))

(declare-fun m!91415 () Bool)

(assert (=> b!86387 m!91415))

(assert (=> b!85662 d!22555))

(declare-fun b!86391 () Bool)

(declare-fun e!56295 () Option!147)

(assert (=> b!86391 (= e!56295 None!145)))

(declare-fun d!22557 () Bool)

(declare-fun c!14107 () Bool)

(assert (=> d!22557 (= c!14107 (and ((_ is Cons!1505) (toList!736 lt!40566)) (= (_1!1105 (h!2096 (toList!736 lt!40566))) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56294 () Option!147)

(assert (=> d!22557 (= (getValueByKey!141 (toList!736 lt!40566) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56294)))

(declare-fun b!86389 () Bool)

(assert (=> b!86389 (= e!56294 e!56295)))

(declare-fun c!14108 () Bool)

(assert (=> b!86389 (= c!14108 (and ((_ is Cons!1505) (toList!736 lt!40566)) (not (= (_1!1105 (h!2096 (toList!736 lt!40566))) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86390 () Bool)

(assert (=> b!86390 (= e!56295 (getValueByKey!141 (t!5222 (toList!736 lt!40566)) (_1!1105 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86388 () Bool)

(assert (=> b!86388 (= e!56294 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40566)))))))

(assert (= (and d!22557 c!14107) b!86388))

(assert (= (and d!22557 (not c!14107)) b!86389))

(assert (= (and b!86389 c!14108) b!86390))

(assert (= (and b!86389 (not c!14108)) b!86391))

(declare-fun m!91417 () Bool)

(assert (=> b!86390 m!91417))

(assert (=> b!85686 d!22557))

(declare-fun d!22559 () Bool)

(assert (=> d!22559 (= (get!1207 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2654 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22279 d!22559))

(declare-fun b!86395 () Bool)

(declare-fun e!56297 () Option!147)

(assert (=> b!86395 (= e!56297 None!145)))

(declare-fun d!22561 () Bool)

(declare-fun c!14109 () Bool)

(assert (=> d!22561 (= c!14109 (and ((_ is Cons!1505) (toList!736 lt!40349)) (= (_1!1105 (h!2096 (toList!736 lt!40349))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!56296 () Option!147)

(assert (=> d!22561 (= (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56296)))

(declare-fun b!86393 () Bool)

(assert (=> b!86393 (= e!56296 e!56297)))

(declare-fun c!14110 () Bool)

(assert (=> b!86393 (= c!14110 (and ((_ is Cons!1505) (toList!736 lt!40349)) (not (= (_1!1105 (h!2096 (toList!736 lt!40349))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!86394 () Bool)

(assert (=> b!86394 (= e!56297 (getValueByKey!141 (t!5222 (toList!736 lt!40349)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86392 () Bool)

(assert (=> b!86392 (= e!56296 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40349)))))))

(assert (= (and d!22561 c!14109) b!86392))

(assert (= (and d!22561 (not c!14109)) b!86393))

(assert (= (and b!86393 c!14110) b!86394))

(assert (= (and b!86393 (not c!14110)) b!86395))

(assert (=> b!86394 m!89759))

(declare-fun m!91419 () Bool)

(assert (=> b!86394 m!91419))

(assert (=> d!22279 d!22561))

(declare-fun d!22563 () Bool)

(declare-fun e!56299 () Bool)

(assert (=> d!22563 e!56299))

(declare-fun res!44421 () Bool)

(assert (=> d!22563 (=> res!44421 e!56299)))

(declare-fun lt!41052 () Bool)

(assert (=> d!22563 (= res!44421 (not lt!41052))))

(declare-fun lt!41054 () Bool)

(assert (=> d!22563 (= lt!41052 lt!41054)))

(declare-fun lt!41051 () Unit!2498)

(declare-fun e!56298 () Unit!2498)

(assert (=> d!22563 (= lt!41051 e!56298)))

(declare-fun c!14111 () Bool)

(assert (=> d!22563 (= c!14111 lt!41054)))

(assert (=> d!22563 (= lt!41054 (containsKey!144 (toList!736 lt!40562) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22563 (= (contains!747 lt!40562 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41052)))

(declare-fun b!86396 () Bool)

(declare-fun lt!41053 () Unit!2498)

(assert (=> b!86396 (= e!56298 lt!41053)))

(assert (=> b!86396 (= lt!41053 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40562) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> b!86396 (isDefined!93 (getValueByKey!141 (toList!736 lt!40562) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86397 () Bool)

(declare-fun Unit!2541 () Unit!2498)

(assert (=> b!86397 (= e!56298 Unit!2541)))

(declare-fun b!86398 () Bool)

(assert (=> b!86398 (= e!56299 (isDefined!93 (getValueByKey!141 (toList!736 lt!40562) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!22563 c!14111) b!86396))

(assert (= (and d!22563 (not c!14111)) b!86397))

(assert (= (and d!22563 (not res!44421)) b!86398))

(declare-fun m!91421 () Bool)

(assert (=> d!22563 m!91421))

(declare-fun m!91423 () Bool)

(assert (=> b!86396 m!91423))

(assert (=> b!86396 m!90091))

(assert (=> b!86396 m!90091))

(declare-fun m!91425 () Bool)

(assert (=> b!86396 m!91425))

(assert (=> b!86398 m!90091))

(assert (=> b!86398 m!90091))

(assert (=> b!86398 m!91425))

(assert (=> d!22183 d!22563))

(declare-fun b!86402 () Bool)

(declare-fun e!56301 () Option!147)

(assert (=> b!86402 (= e!56301 None!145)))

(declare-fun d!22565 () Bool)

(declare-fun c!14112 () Bool)

(assert (=> d!22565 (= c!14112 (and ((_ is Cons!1505) lt!40560) (= (_1!1105 (h!2096 lt!40560)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56300 () Option!147)

(assert (=> d!22565 (= (getValueByKey!141 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56300)))

(declare-fun b!86400 () Bool)

(assert (=> b!86400 (= e!56300 e!56301)))

(declare-fun c!14113 () Bool)

(assert (=> b!86400 (= c!14113 (and ((_ is Cons!1505) lt!40560) (not (= (_1!1105 (h!2096 lt!40560)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86401 () Bool)

(assert (=> b!86401 (= e!56301 (getValueByKey!141 (t!5222 lt!40560) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86399 () Bool)

(assert (=> b!86399 (= e!56300 (Some!146 (_2!1105 (h!2096 lt!40560))))))

(assert (= (and d!22565 c!14112) b!86399))

(assert (= (and d!22565 (not c!14112)) b!86400))

(assert (= (and b!86400 c!14113) b!86401))

(assert (= (and b!86400 (not c!14113)) b!86402))

(declare-fun m!91427 () Bool)

(assert (=> b!86401 m!91427))

(assert (=> d!22183 d!22565))

(declare-fun d!22567 () Bool)

(assert (=> d!22567 (= (getValueByKey!141 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41055 () Unit!2498)

(assert (=> d!22567 (= lt!41055 (choose!511 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun e!56302 () Bool)

(assert (=> d!22567 e!56302))

(declare-fun res!44422 () Bool)

(assert (=> d!22567 (=> (not res!44422) (not e!56302))))

(assert (=> d!22567 (= res!44422 (isStrictlySorted!285 lt!40560))))

(assert (=> d!22567 (= (lemmaContainsTupThenGetReturnValue!58 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41055)))

(declare-fun b!86403 () Bool)

(declare-fun res!44423 () Bool)

(assert (=> b!86403 (=> (not res!44423) (not e!56302))))

(assert (=> b!86403 (= res!44423 (containsKey!144 lt!40560 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86404 () Bool)

(assert (=> b!86404 (= e!56302 (contains!749 lt!40560 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!22567 res!44422) b!86403))

(assert (= (and b!86403 res!44423) b!86404))

(assert (=> d!22567 m!90085))

(declare-fun m!91429 () Bool)

(assert (=> d!22567 m!91429))

(declare-fun m!91431 () Bool)

(assert (=> d!22567 m!91431))

(declare-fun m!91433 () Bool)

(assert (=> b!86403 m!91433))

(declare-fun m!91435 () Bool)

(assert (=> b!86404 m!91435))

(assert (=> d!22183 d!22567))

(declare-fun b!86405 () Bool)

(declare-fun e!56306 () List!1509)

(declare-fun call!8223 () List!1509)

(assert (=> b!86405 (= e!56306 call!8223)))

(declare-fun call!8224 () List!1509)

(declare-fun c!14117 () Bool)

(declare-fun e!56305 () List!1509)

(declare-fun bm!8220 () Bool)

(assert (=> bm!8220 (= call!8224 ($colon$colon!71 e!56305 (ite c!14117 (h!2096 (toList!736 call!8121)) (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun c!14116 () Bool)

(assert (=> bm!8220 (= c!14116 c!14117)))

(declare-fun c!14115 () Bool)

(declare-fun b!86406 () Bool)

(assert (=> b!86406 (= c!14115 (and ((_ is Cons!1505) (toList!736 call!8121)) (bvsgt (_1!1105 (h!2096 (toList!736 call!8121))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56303 () List!1509)

(assert (=> b!86406 (= e!56306 e!56303)))

(declare-fun e!56307 () Bool)

(declare-fun lt!41056 () List!1509)

(declare-fun b!86407 () Bool)

(assert (=> b!86407 (= e!56307 (contains!749 lt!41056 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86408 () Bool)

(declare-fun res!44424 () Bool)

(assert (=> b!86408 (=> (not res!44424) (not e!56307))))

(assert (=> b!86408 (= res!44424 (containsKey!144 lt!41056 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun bm!8221 () Bool)

(assert (=> bm!8221 (= call!8223 call!8224)))

(declare-fun b!86409 () Bool)

(assert (=> b!86409 (= e!56305 (insertStrictlySorted!61 (t!5222 (toList!736 call!8121)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun c!14114 () Bool)

(declare-fun b!86410 () Bool)

(assert (=> b!86410 (= e!56305 (ite c!14114 (t!5222 (toList!736 call!8121)) (ite c!14115 (Cons!1505 (h!2096 (toList!736 call!8121)) (t!5222 (toList!736 call!8121))) Nil!1506)))))

(declare-fun b!86411 () Bool)

(declare-fun e!56304 () List!1509)

(assert (=> b!86411 (= e!56304 call!8224)))

(declare-fun bm!8222 () Bool)

(declare-fun call!8225 () List!1509)

(assert (=> bm!8222 (= call!8225 call!8223)))

(declare-fun d!22569 () Bool)

(assert (=> d!22569 e!56307))

(declare-fun res!44425 () Bool)

(assert (=> d!22569 (=> (not res!44425) (not e!56307))))

(assert (=> d!22569 (= res!44425 (isStrictlySorted!285 lt!41056))))

(assert (=> d!22569 (= lt!41056 e!56304)))

(assert (=> d!22569 (= c!14117 (and ((_ is Cons!1505) (toList!736 call!8121)) (bvslt (_1!1105 (h!2096 (toList!736 call!8121))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!22569 (isStrictlySorted!285 (toList!736 call!8121))))

(assert (=> d!22569 (= (insertStrictlySorted!61 (toList!736 call!8121) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41056)))

(declare-fun b!86412 () Bool)

(assert (=> b!86412 (= e!56303 call!8225)))

(declare-fun b!86413 () Bool)

(assert (=> b!86413 (= e!56304 e!56306)))

(assert (=> b!86413 (= c!14114 (and ((_ is Cons!1505) (toList!736 call!8121)) (= (_1!1105 (h!2096 (toList!736 call!8121))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86414 () Bool)

(assert (=> b!86414 (= e!56303 call!8225)))

(assert (= (and d!22569 c!14117) b!86411))

(assert (= (and d!22569 (not c!14117)) b!86413))

(assert (= (and b!86413 c!14114) b!86405))

(assert (= (and b!86413 (not c!14114)) b!86406))

(assert (= (and b!86406 c!14115) b!86412))

(assert (= (and b!86406 (not c!14115)) b!86414))

(assert (= (or b!86412 b!86414) bm!8222))

(assert (= (or b!86405 bm!8222) bm!8221))

(assert (= (or b!86411 bm!8221) bm!8220))

(assert (= (and bm!8220 c!14116) b!86409))

(assert (= (and bm!8220 (not c!14116)) b!86410))

(assert (= (and d!22569 res!44425) b!86408))

(assert (= (and b!86408 res!44424) b!86407))

(declare-fun m!91437 () Bool)

(assert (=> b!86407 m!91437))

(declare-fun m!91439 () Bool)

(assert (=> b!86408 m!91439))

(declare-fun m!91441 () Bool)

(assert (=> bm!8220 m!91441))

(declare-fun m!91443 () Bool)

(assert (=> d!22569 m!91443))

(declare-fun m!91445 () Bool)

(assert (=> d!22569 m!91445))

(declare-fun m!91447 () Bool)

(assert (=> b!86409 m!91447))

(assert (=> d!22183 d!22569))

(declare-fun d!22571 () Bool)

(declare-fun c!14118 () Bool)

(assert (=> d!22571 (= c!14118 ((_ is Nil!1506) (toList!736 lt!40368)))))

(declare-fun e!56308 () (InoxSet tuple2!2188))

(assert (=> d!22571 (= (content!90 (toList!736 lt!40368)) e!56308)))

(declare-fun b!86415 () Bool)

(assert (=> b!86415 (= e!56308 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!86416 () Bool)

(assert (=> b!86416 (= e!56308 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40368)) true) (content!90 (t!5222 (toList!736 lt!40368)))))))

(assert (= (and d!22571 c!14118) b!86415))

(assert (= (and d!22571 (not c!14118)) b!86416))

(declare-fun m!91449 () Bool)

(assert (=> b!86416 m!91449))

(declare-fun m!91451 () Bool)

(assert (=> b!86416 m!91451))

(assert (=> d!22415 d!22571))

(declare-fun d!22573 () Bool)

(assert (=> d!22573 (= (isEmpty!342 (toList!736 lt!40349)) ((_ is Nil!1506) (toList!736 lt!40349)))))

(assert (=> d!22339 d!22573))

(declare-fun d!22575 () Bool)

(assert (=> d!22575 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))

(declare-fun lt!41057 () Unit!2498)

(assert (=> d!22575 (= lt!41057 (choose!517 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))

(declare-fun e!56309 () Bool)

(assert (=> d!22575 e!56309))

(declare-fun res!44426 () Bool)

(assert (=> d!22575 (=> (not res!44426) (not e!56309))))

(assert (=> d!22575 (= res!44426 (isStrictlySorted!285 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22575 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435) lt!41057)))

(declare-fun b!86417 () Bool)

(assert (=> b!86417 (= e!56309 (containsKey!144 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))

(assert (= (and d!22575 res!44426) b!86417))

(assert (=> d!22575 m!90115))

(assert (=> d!22575 m!90115))

(assert (=> d!22575 m!90117))

(declare-fun m!91453 () Bool)

(assert (=> d!22575 m!91453))

(declare-fun m!91455 () Bool)

(assert (=> d!22575 m!91455))

(assert (=> b!86417 m!90111))

(assert (=> b!85688 d!22575))

(declare-fun d!22577 () Bool)

(assert (=> d!22577 (= (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435)) (not (isEmpty!343 (getValueByKey!141 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435))))))

(declare-fun bs!3657 () Bool)

(assert (= bs!3657 d!22577))

(assert (=> bs!3657 m!90115))

(declare-fun m!91457 () Bool)

(assert (=> bs!3657 m!91457))

(assert (=> b!85688 d!22577))

(declare-fun b!86421 () Bool)

(declare-fun e!56311 () Option!147)

(assert (=> b!86421 (= e!56311 None!145)))

(declare-fun c!14119 () Bool)

(declare-fun d!22579 () Bool)

(assert (=> d!22579 (= c!14119 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40435)))))

(declare-fun e!56310 () Option!147)

(assert (=> d!22579 (= (getValueByKey!141 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435) e!56310)))

(declare-fun b!86419 () Bool)

(assert (=> b!86419 (= e!56310 e!56311)))

(declare-fun c!14120 () Bool)

(assert (=> b!86419 (= c!14120 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (not (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40435))))))

(declare-fun b!86420 () Bool)

(assert (=> b!86420 (= e!56311 (getValueByKey!141 (t!5222 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!40435))))

(declare-fun b!86418 () Bool)

(assert (=> b!86418 (= e!56310 (Some!146 (_2!1105 (h!2096 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(assert (= (and d!22579 c!14119) b!86418))

(assert (= (and d!22579 (not c!14119)) b!86419))

(assert (= (and b!86419 c!14120) b!86420))

(assert (= (and b!86419 (not c!14120)) b!86421))

(declare-fun m!91459 () Bool)

(assert (=> b!86420 m!91459))

(assert (=> b!85688 d!22579))

(declare-fun b!86422 () Bool)

(declare-fun e!56315 () ListLongMap!1441)

(assert (=> b!86422 (= e!56315 (ListLongMap!1442 Nil!1506))))

(declare-fun b!86423 () Bool)

(assert (=> b!86423 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> b!86423 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2155 (_values!2320 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun lt!41064 () ListLongMap!1441)

(declare-fun e!56314 () Bool)

(assert (=> b!86423 (= e!56314 (= (apply!82 lt!41064 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!56318 () Bool)

(declare-fun b!86424 () Bool)

(assert (=> b!86424 (= e!56318 (= lt!41064 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86425 () Bool)

(declare-fun res!44429 () Bool)

(declare-fun e!56313 () Bool)

(assert (=> b!86425 (=> (not res!44429) (not e!56313))))

(assert (=> b!86425 (= res!44429 (not (contains!747 lt!41064 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86426 () Bool)

(declare-fun e!56317 () Bool)

(assert (=> b!86426 (= e!56317 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!86426 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!86427 () Bool)

(declare-fun e!56316 () ListLongMap!1441)

(assert (=> b!86427 (= e!56315 e!56316)))

(declare-fun c!14124 () Bool)

(assert (=> b!86427 (= c!14124 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!86428 () Bool)

(declare-fun lt!41058 () Unit!2498)

(declare-fun lt!41063 () Unit!2498)

(assert (=> b!86428 (= lt!41058 lt!41063)))

(declare-fun lt!41062 () (_ BitVec 64))

(declare-fun lt!41059 () ListLongMap!1441)

(declare-fun lt!41061 () V!3025)

(declare-fun lt!41060 () (_ BitVec 64))

(assert (=> b!86428 (not (contains!747 (+!107 lt!41059 (tuple2!2189 lt!41062 lt!41061)) lt!41060))))

(assert (=> b!86428 (= lt!41063 (addStillNotContains!33 lt!41059 lt!41062 lt!41061 lt!41060))))

(assert (=> b!86428 (= lt!41060 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86428 (= lt!41061 (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86428 (= lt!41062 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!8226 () ListLongMap!1441)

(assert (=> b!86428 (= lt!41059 call!8226)))

(assert (=> b!86428 (= e!56316 (+!107 call!8226 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!8223 () Bool)

(assert (=> bm!8223 (= call!8226 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!86429 () Bool)

(assert (=> b!86429 (= e!56318 (isEmpty!341 lt!41064))))

(declare-fun d!22581 () Bool)

(assert (=> d!22581 e!56313))

(declare-fun res!44428 () Bool)

(assert (=> d!22581 (=> (not res!44428) (not e!56313))))

(assert (=> d!22581 (= res!44428 (not (contains!747 lt!41064 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22581 (= lt!41064 e!56315)))

(declare-fun c!14121 () Bool)

(assert (=> d!22581 (= c!14121 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!22581 (validMask!0 (mask!6365 (v!2648 (underlying!292 thiss!992))))))

(assert (=> d!22581 (= (getCurrentListMapNoExtraKeys!72 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (_values!2320 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992))) (extraKeys!2176 (v!2648 (underlying!292 thiss!992))) (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) (minValue!2229 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992)))) lt!41064)))

(declare-fun b!86430 () Bool)

(declare-fun e!56312 () Bool)

(assert (=> b!86430 (= e!56312 e!56318)))

(declare-fun c!14123 () Bool)

(assert (=> b!86430 (= c!14123 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86431 () Bool)

(assert (=> b!86431 (= e!56313 e!56312)))

(declare-fun c!14122 () Bool)

(assert (=> b!86431 (= c!14122 e!56317)))

(declare-fun res!44427 () Bool)

(assert (=> b!86431 (=> (not res!44427) (not e!56317))))

(assert (=> b!86431 (= res!44427 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86432 () Bool)

(assert (=> b!86432 (= e!56316 call!8226)))

(declare-fun b!86433 () Bool)

(assert (=> b!86433 (= e!56312 e!56314)))

(assert (=> b!86433 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun res!44430 () Bool)

(assert (=> b!86433 (= res!44430 (contains!747 lt!41064 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!86433 (=> (not res!44430) (not e!56314))))

(assert (= (and d!22581 c!14121) b!86422))

(assert (= (and d!22581 (not c!14121)) b!86427))

(assert (= (and b!86427 c!14124) b!86428))

(assert (= (and b!86427 (not c!14124)) b!86432))

(assert (= (or b!86428 b!86432) bm!8223))

(assert (= (and d!22581 res!44428) b!86425))

(assert (= (and b!86425 res!44429) b!86431))

(assert (= (and b!86431 res!44427) b!86426))

(assert (= (and b!86431 c!14122) b!86433))

(assert (= (and b!86431 (not c!14122)) b!86430))

(assert (= (and b!86433 res!44430) b!86423))

(assert (= (and b!86430 c!14123) b!86424))

(assert (= (and b!86430 (not c!14123)) b!86429))

(declare-fun b_lambda!3837 () Bool)

(assert (=> (not b_lambda!3837) (not b!86423)))

(assert (=> b!86423 t!5218))

(declare-fun b_and!5225 () Bool)

(assert (= b_and!5221 (and (=> t!5218 result!2903) b_and!5225)))

(assert (=> b!86423 t!5220))

(declare-fun b_and!5227 () Bool)

(assert (= b_and!5223 (and (=> t!5220 result!2907) b_and!5227)))

(declare-fun b_lambda!3839 () Bool)

(assert (=> (not b_lambda!3839) (not b!86428)))

(assert (=> b!86428 t!5218))

(declare-fun b_and!5229 () Bool)

(assert (= b_and!5225 (and (=> t!5218 result!2903) b_and!5229)))

(assert (=> b!86428 t!5220))

(declare-fun b_and!5231 () Bool)

(assert (= b_and!5227 (and (=> t!5220 result!2907) b_and!5231)))

(declare-fun m!91461 () Bool)

(assert (=> b!86424 m!91461))

(declare-fun m!91463 () Bool)

(assert (=> b!86425 m!91463))

(declare-fun m!91465 () Bool)

(assert (=> b!86429 m!91465))

(assert (=> b!86433 m!91363))

(assert (=> b!86433 m!91363))

(declare-fun m!91467 () Bool)

(assert (=> b!86433 m!91467))

(declare-fun m!91469 () Bool)

(assert (=> d!22581 m!91469))

(assert (=> d!22581 m!89601))

(assert (=> bm!8223 m!91461))

(assert (=> b!86423 m!91363))

(assert (=> b!86423 m!91363))

(declare-fun m!91471 () Bool)

(assert (=> b!86423 m!91471))

(declare-fun m!91473 () Bool)

(assert (=> b!86423 m!91473))

(assert (=> b!86423 m!89621))

(declare-fun m!91475 () Bool)

(assert (=> b!86423 m!91475))

(assert (=> b!86423 m!91473))

(assert (=> b!86423 m!89621))

(declare-fun m!91477 () Bool)

(assert (=> b!86428 m!91477))

(assert (=> b!86428 m!91363))

(declare-fun m!91479 () Bool)

(assert (=> b!86428 m!91479))

(assert (=> b!86428 m!91473))

(assert (=> b!86428 m!89621))

(assert (=> b!86428 m!91475))

(assert (=> b!86428 m!91479))

(declare-fun m!91481 () Bool)

(assert (=> b!86428 m!91481))

(assert (=> b!86428 m!89621))

(declare-fun m!91483 () Bool)

(assert (=> b!86428 m!91483))

(assert (=> b!86428 m!91473))

(assert (=> b!86426 m!91363))

(assert (=> b!86426 m!91363))

(declare-fun m!91485 () Bool)

(assert (=> b!86426 m!91485))

(assert (=> b!86427 m!91363))

(assert (=> b!86427 m!91363))

(assert (=> b!86427 m!91485))

(assert (=> bm!8121 d!22581))

(declare-fun d!22583 () Bool)

(assert (=> d!22583 (= (apply!82 lt!40636 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1207 (getValueByKey!141 (toList!736 lt!40636) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3658 () Bool)

(assert (= bs!3658 d!22583))

(assert (=> bs!3658 m!90065))

(assert (=> bs!3658 m!91007))

(assert (=> bs!3658 m!91007))

(declare-fun m!91487 () Bool)

(assert (=> bs!3658 m!91487))

(assert (=> b!85824 d!22583))

(declare-fun d!22585 () Bool)

(declare-fun c!14125 () Bool)

(assert (=> d!22585 (= c!14125 ((_ is ValueCellFull!923) (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56319 () V!3025)

(assert (=> d!22585 (= (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56319)))

(declare-fun b!86434 () Bool)

(assert (=> b!86434 (= e!56319 (get!1205 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86435 () Bool)

(assert (=> b!86435 (= e!56319 (get!1206 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22585 c!14125) b!86434))

(assert (= (and d!22585 (not c!14125)) b!86435))

(assert (=> b!86434 m!90317))

(assert (=> b!86434 m!90319))

(declare-fun m!91489 () Bool)

(assert (=> b!86434 m!91489))

(assert (=> b!86435 m!90317))

(assert (=> b!86435 m!90319))

(declare-fun m!91491 () Bool)

(assert (=> b!86435 m!91491))

(assert (=> b!85824 d!22585))

(declare-fun d!22587 () Bool)

(declare-fun e!56321 () Bool)

(assert (=> d!22587 e!56321))

(declare-fun res!44431 () Bool)

(assert (=> d!22587 (=> res!44431 e!56321)))

(declare-fun lt!41066 () Bool)

(assert (=> d!22587 (= res!44431 (not lt!41066))))

(declare-fun lt!41068 () Bool)

(assert (=> d!22587 (= lt!41066 lt!41068)))

(declare-fun lt!41065 () Unit!2498)

(declare-fun e!56320 () Unit!2498)

(assert (=> d!22587 (= lt!41065 e!56320)))

(declare-fun c!14126 () Bool)

(assert (=> d!22587 (= c!14126 lt!41068)))

(assert (=> d!22587 (= lt!41068 (containsKey!144 (toList!736 lt!40722) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22587 (= (contains!747 lt!40722 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41066)))

(declare-fun b!86436 () Bool)

(declare-fun lt!41067 () Unit!2498)

(assert (=> b!86436 (= e!56320 lt!41067)))

(assert (=> b!86436 (= lt!41067 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40722) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> b!86436 (isDefined!93 (getValueByKey!141 (toList!736 lt!40722) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86437 () Bool)

(declare-fun Unit!2542 () Unit!2498)

(assert (=> b!86437 (= e!56320 Unit!2542)))

(declare-fun b!86438 () Bool)

(assert (=> b!86438 (= e!56321 (isDefined!93 (getValueByKey!141 (toList!736 lt!40722) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!22587 c!14126) b!86436))

(assert (= (and d!22587 (not c!14126)) b!86437))

(assert (= (and d!22587 (not res!44431)) b!86438))

(declare-fun m!91493 () Bool)

(assert (=> d!22587 m!91493))

(declare-fun m!91495 () Bool)

(assert (=> b!86436 m!91495))

(assert (=> b!86436 m!90617))

(assert (=> b!86436 m!90617))

(declare-fun m!91497 () Bool)

(assert (=> b!86436 m!91497))

(assert (=> b!86438 m!90617))

(assert (=> b!86438 m!90617))

(assert (=> b!86438 m!91497))

(assert (=> d!22347 d!22587))

(declare-fun b!86442 () Bool)

(declare-fun e!56323 () Option!147)

(assert (=> b!86442 (= e!56323 None!145)))

(declare-fun d!22589 () Bool)

(declare-fun c!14127 () Bool)

(assert (=> d!22589 (= c!14127 (and ((_ is Cons!1505) lt!40720) (= (_1!1105 (h!2096 lt!40720)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56322 () Option!147)

(assert (=> d!22589 (= (getValueByKey!141 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56322)))

(declare-fun b!86440 () Bool)

(assert (=> b!86440 (= e!56322 e!56323)))

(declare-fun c!14128 () Bool)

(assert (=> b!86440 (= c!14128 (and ((_ is Cons!1505) lt!40720) (not (= (_1!1105 (h!2096 lt!40720)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86441 () Bool)

(assert (=> b!86441 (= e!56323 (getValueByKey!141 (t!5222 lt!40720) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86439 () Bool)

(assert (=> b!86439 (= e!56322 (Some!146 (_2!1105 (h!2096 lt!40720))))))

(assert (= (and d!22589 c!14127) b!86439))

(assert (= (and d!22589 (not c!14127)) b!86440))

(assert (= (and b!86440 c!14128) b!86441))

(assert (= (and b!86440 (not c!14128)) b!86442))

(declare-fun m!91499 () Bool)

(assert (=> b!86441 m!91499))

(assert (=> d!22347 d!22589))

(declare-fun d!22591 () Bool)

(assert (=> d!22591 (= (getValueByKey!141 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41069 () Unit!2498)

(assert (=> d!22591 (= lt!41069 (choose!511 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun e!56324 () Bool)

(assert (=> d!22591 e!56324))

(declare-fun res!44432 () Bool)

(assert (=> d!22591 (=> (not res!44432) (not e!56324))))

(assert (=> d!22591 (= res!44432 (isStrictlySorted!285 lt!40720))))

(assert (=> d!22591 (= (lemmaContainsTupThenGetReturnValue!58 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41069)))

(declare-fun b!86443 () Bool)

(declare-fun res!44433 () Bool)

(assert (=> b!86443 (=> (not res!44433) (not e!56324))))

(assert (=> b!86443 (= res!44433 (containsKey!144 lt!40720 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86444 () Bool)

(assert (=> b!86444 (= e!56324 (contains!749 lt!40720 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!22591 res!44432) b!86443))

(assert (= (and b!86443 res!44433) b!86444))

(assert (=> d!22591 m!90611))

(declare-fun m!91501 () Bool)

(assert (=> d!22591 m!91501))

(declare-fun m!91503 () Bool)

(assert (=> d!22591 m!91503))

(declare-fun m!91505 () Bool)

(assert (=> b!86443 m!91505))

(declare-fun m!91507 () Bool)

(assert (=> b!86444 m!91507))

(assert (=> d!22347 d!22591))

(declare-fun b!86445 () Bool)

(declare-fun e!56328 () List!1509)

(declare-fun call!8227 () List!1509)

(assert (=> b!86445 (= e!56328 call!8227)))

(declare-fun e!56327 () List!1509)

(declare-fun call!8228 () List!1509)

(declare-fun bm!8224 () Bool)

(declare-fun c!14132 () Bool)

(assert (=> bm!8224 (= call!8228 ($colon$colon!71 e!56327 (ite c!14132 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun c!14131 () Bool)

(assert (=> bm!8224 (= c!14131 c!14132)))

(declare-fun c!14130 () Bool)

(declare-fun b!86446 () Bool)

(assert (=> b!86446 (= c!14130 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56325 () List!1509)

(assert (=> b!86446 (= e!56328 e!56325)))

(declare-fun e!56329 () Bool)

(declare-fun b!86447 () Bool)

(declare-fun lt!41070 () List!1509)

(assert (=> b!86447 (= e!56329 (contains!749 lt!41070 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86448 () Bool)

(declare-fun res!44434 () Bool)

(assert (=> b!86448 (=> (not res!44434) (not e!56329))))

(assert (=> b!86448 (= res!44434 (containsKey!144 lt!41070 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun bm!8225 () Bool)

(assert (=> bm!8225 (= call!8227 call!8228)))

(declare-fun b!86449 () Bool)

(assert (=> b!86449 (= e!56327 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40187)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86450 () Bool)

(declare-fun c!14129 () Bool)

(assert (=> b!86450 (= e!56327 (ite c!14129 (t!5222 (toList!736 lt!40187)) (ite c!14130 (Cons!1505 (h!2096 (toList!736 lt!40187)) (t!5222 (toList!736 lt!40187))) Nil!1506)))))

(declare-fun b!86451 () Bool)

(declare-fun e!56326 () List!1509)

(assert (=> b!86451 (= e!56326 call!8228)))

(declare-fun bm!8226 () Bool)

(declare-fun call!8229 () List!1509)

(assert (=> bm!8226 (= call!8229 call!8227)))

(declare-fun d!22593 () Bool)

(assert (=> d!22593 e!56329))

(declare-fun res!44435 () Bool)

(assert (=> d!22593 (=> (not res!44435) (not e!56329))))

(assert (=> d!22593 (= res!44435 (isStrictlySorted!285 lt!41070))))

(assert (=> d!22593 (= lt!41070 e!56326)))

(assert (=> d!22593 (= c!14132 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!22593 (isStrictlySorted!285 (toList!736 lt!40187))))

(assert (=> d!22593 (= (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41070)))

(declare-fun b!86452 () Bool)

(assert (=> b!86452 (= e!56325 call!8229)))

(declare-fun b!86453 () Bool)

(assert (=> b!86453 (= e!56326 e!56328)))

(assert (=> b!86453 (= c!14129 (and ((_ is Cons!1505) (toList!736 lt!40187)) (= (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86454 () Bool)

(assert (=> b!86454 (= e!56325 call!8229)))

(assert (= (and d!22593 c!14132) b!86451))

(assert (= (and d!22593 (not c!14132)) b!86453))

(assert (= (and b!86453 c!14129) b!86445))

(assert (= (and b!86453 (not c!14129)) b!86446))

(assert (= (and b!86446 c!14130) b!86452))

(assert (= (and b!86446 (not c!14130)) b!86454))

(assert (= (or b!86452 b!86454) bm!8226))

(assert (= (or b!86445 bm!8226) bm!8225))

(assert (= (or b!86451 bm!8225) bm!8224))

(assert (= (and bm!8224 c!14131) b!86449))

(assert (= (and bm!8224 (not c!14131)) b!86450))

(assert (= (and d!22593 res!44435) b!86448))

(assert (= (and b!86448 res!44434) b!86447))

(declare-fun m!91509 () Bool)

(assert (=> b!86447 m!91509))

(declare-fun m!91511 () Bool)

(assert (=> b!86448 m!91511))

(declare-fun m!91513 () Bool)

(assert (=> bm!8224 m!91513))

(declare-fun m!91515 () Bool)

(assert (=> d!22593 m!91515))

(assert (=> d!22593 m!90243))

(declare-fun m!91517 () Bool)

(assert (=> b!86449 m!91517))

(assert (=> d!22347 d!22593))

(declare-fun d!22595 () Bool)

(assert (=> d!22595 (isDefined!93 (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197)))))

(declare-fun lt!41071 () Unit!2498)

(assert (=> d!22595 (= lt!41071 (choose!517 (toList!736 lt!40328) (_1!1105 lt!40197)))))

(declare-fun e!56330 () Bool)

(assert (=> d!22595 e!56330))

(declare-fun res!44436 () Bool)

(assert (=> d!22595 (=> (not res!44436) (not e!56330))))

(assert (=> d!22595 (= res!44436 (isStrictlySorted!285 (toList!736 lt!40328)))))

(assert (=> d!22595 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40328) (_1!1105 lt!40197)) lt!41071)))

(declare-fun b!86455 () Bool)

(assert (=> b!86455 (= e!56330 (containsKey!144 (toList!736 lt!40328) (_1!1105 lt!40197)))))

(assert (= (and d!22595 res!44436) b!86455))

(assert (=> d!22595 m!89779))

(assert (=> d!22595 m!89779))

(assert (=> d!22595 m!90371))

(declare-fun m!91519 () Bool)

(assert (=> d!22595 m!91519))

(declare-fun m!91521 () Bool)

(assert (=> d!22595 m!91521))

(assert (=> b!86455 m!90367))

(assert (=> b!85825 d!22595))

(declare-fun d!22597 () Bool)

(assert (=> d!22597 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40328) (_1!1105 lt!40197)))))))

(declare-fun bs!3659 () Bool)

(assert (= bs!3659 d!22597))

(assert (=> bs!3659 m!89779))

(declare-fun m!91523 () Bool)

(assert (=> bs!3659 m!91523))

(assert (=> b!85825 d!22597))

(assert (=> b!85825 d!22307))

(declare-fun d!22599 () Bool)

(declare-fun e!56332 () Bool)

(assert (=> d!22599 e!56332))

(declare-fun res!44437 () Bool)

(assert (=> d!22599 (=> res!44437 e!56332)))

(declare-fun lt!41073 () Bool)

(assert (=> d!22599 (= res!44437 (not lt!41073))))

(declare-fun lt!41075 () Bool)

(assert (=> d!22599 (= lt!41073 lt!41075)))

(declare-fun lt!41072 () Unit!2498)

(declare-fun e!56331 () Unit!2498)

(assert (=> d!22599 (= lt!41072 e!56331)))

(declare-fun c!14133 () Bool)

(assert (=> d!22599 (= c!14133 lt!41075)))

(assert (=> d!22599 (= lt!41075 (containsKey!144 (toList!736 lt!40878) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22599 (= (contains!747 lt!40878 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) lt!41073)))

(declare-fun b!86456 () Bool)

(declare-fun lt!41074 () Unit!2498)

(assert (=> b!86456 (= e!56331 lt!41074)))

(assert (=> b!86456 (= lt!41074 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40878) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86456 (isDefined!93 (getValueByKey!141 (toList!736 lt!40878) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86457 () Bool)

(declare-fun Unit!2543 () Unit!2498)

(assert (=> b!86457 (= e!56331 Unit!2543)))

(declare-fun b!86458 () Bool)

(assert (=> b!86458 (= e!56332 (isDefined!93 (getValueByKey!141 (toList!736 lt!40878) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22599 c!14133) b!86456))

(assert (= (and d!22599 (not c!14133)) b!86457))

(assert (= (and d!22599 (not res!44437)) b!86458))

(assert (=> d!22599 m!90065))

(declare-fun m!91525 () Bool)

(assert (=> d!22599 m!91525))

(assert (=> b!86456 m!90065))

(declare-fun m!91527 () Bool)

(assert (=> b!86456 m!91527))

(assert (=> b!86456 m!90065))

(declare-fun m!91529 () Bool)

(assert (=> b!86456 m!91529))

(assert (=> b!86456 m!91529))

(declare-fun m!91531 () Bool)

(assert (=> b!86456 m!91531))

(assert (=> b!86458 m!90065))

(assert (=> b!86458 m!91529))

(assert (=> b!86458 m!91529))

(assert (=> b!86458 m!91531))

(assert (=> b!86127 d!22599))

(declare-fun d!22601 () Bool)

(assert (=> d!22601 (= ($colon$colon!71 e!56086 (ite c!14016 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192)))) (Cons!1505 (ite c!14016 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))) e!56086))))

(assert (=> bm!8167 d!22601))

(declare-fun b!86462 () Bool)

(declare-fun e!56334 () Option!147)

(assert (=> b!86462 (= e!56334 None!145)))

(declare-fun d!22603 () Bool)

(declare-fun c!14134 () Bool)

(assert (=> d!22603 (= c!14134 (and ((_ is Cons!1505) (t!5222 lt!40370)) (= (_1!1105 (h!2096 (t!5222 lt!40370))) (_1!1105 lt!40182))))))

(declare-fun e!56333 () Option!147)

(assert (=> d!22603 (= (getValueByKey!141 (t!5222 lt!40370) (_1!1105 lt!40182)) e!56333)))

(declare-fun b!86460 () Bool)

(assert (=> b!86460 (= e!56333 e!56334)))

(declare-fun c!14135 () Bool)

(assert (=> b!86460 (= c!14135 (and ((_ is Cons!1505) (t!5222 lt!40370)) (not (= (_1!1105 (h!2096 (t!5222 lt!40370))) (_1!1105 lt!40182)))))))

(declare-fun b!86461 () Bool)

(assert (=> b!86461 (= e!56334 (getValueByKey!141 (t!5222 (t!5222 lt!40370)) (_1!1105 lt!40182)))))

(declare-fun b!86459 () Bool)

(assert (=> b!86459 (= e!56333 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40370)))))))

(assert (= (and d!22603 c!14134) b!86459))

(assert (= (and d!22603 (not c!14134)) b!86460))

(assert (= (and b!86460 c!14135) b!86461))

(assert (= (and b!86460 (not c!14135)) b!86462))

(declare-fun m!91533 () Bool)

(assert (=> b!86461 m!91533))

(assert (=> b!85711 d!22603))

(declare-fun d!22605 () Bool)

(declare-fun lt!41076 () Bool)

(assert (=> d!22605 (= lt!41076 (select (content!90 (t!5222 (toList!736 lt!40368))) lt!40182))))

(declare-fun e!56336 () Bool)

(assert (=> d!22605 (= lt!41076 e!56336)))

(declare-fun res!44439 () Bool)

(assert (=> d!22605 (=> (not res!44439) (not e!56336))))

(assert (=> d!22605 (= res!44439 ((_ is Cons!1505) (t!5222 (toList!736 lt!40368))))))

(assert (=> d!22605 (= (contains!749 (t!5222 (toList!736 lt!40368)) lt!40182) lt!41076)))

(declare-fun b!86463 () Bool)

(declare-fun e!56335 () Bool)

(assert (=> b!86463 (= e!56336 e!56335)))

(declare-fun res!44438 () Bool)

(assert (=> b!86463 (=> res!44438 e!56335)))

(assert (=> b!86463 (= res!44438 (= (h!2096 (t!5222 (toList!736 lt!40368))) lt!40182))))

(declare-fun b!86464 () Bool)

(assert (=> b!86464 (= e!56335 (contains!749 (t!5222 (t!5222 (toList!736 lt!40368))) lt!40182))))

(assert (= (and d!22605 res!44439) b!86463))

(assert (= (and b!86463 (not res!44438)) b!86464))

(assert (=> d!22605 m!91451))

(declare-fun m!91535 () Bool)

(assert (=> d!22605 m!91535))

(declare-fun m!91537 () Bool)

(assert (=> b!86464 m!91537))

(assert (=> b!86189 d!22605))

(declare-fun b!86468 () Bool)

(declare-fun e!56338 () Option!147)

(assert (=> b!86468 (= e!56338 None!145)))

(declare-fun d!22607 () Bool)

(declare-fun c!14136 () Bool)

(assert (=> d!22607 (= c!14136 (and ((_ is Cons!1505) (toList!736 lt!40578)) (= (_1!1105 (h!2096 (toList!736 lt!40578))) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56337 () Option!147)

(assert (=> d!22607 (= (getValueByKey!141 (toList!736 lt!40578) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56337)))

(declare-fun b!86466 () Bool)

(assert (=> b!86466 (= e!56337 e!56338)))

(declare-fun c!14137 () Bool)

(assert (=> b!86466 (= c!14137 (and ((_ is Cons!1505) (toList!736 lt!40578)) (not (= (_1!1105 (h!2096 (toList!736 lt!40578))) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86467 () Bool)

(assert (=> b!86467 (= e!56338 (getValueByKey!141 (t!5222 (toList!736 lt!40578)) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86465 () Bool)

(assert (=> b!86465 (= e!56337 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40578)))))))

(assert (= (and d!22607 c!14136) b!86465))

(assert (= (and d!22607 (not c!14136)) b!86466))

(assert (= (and b!86466 c!14137) b!86467))

(assert (= (and b!86466 (not c!14137)) b!86468))

(declare-fun m!91539 () Bool)

(assert (=> b!86467 m!91539))

(assert (=> b!85693 d!22607))

(assert (=> d!22265 d!22427))

(declare-fun c!14141 () Bool)

(declare-fun call!8236 () ListLongMap!1441)

(declare-fun bm!8227 () Bool)

(declare-fun call!8233 () ListLongMap!1441)

(declare-fun c!14140 () Bool)

(declare-fun call!8235 () ListLongMap!1441)

(declare-fun call!8231 () ListLongMap!1441)

(assert (=> bm!8227 (= call!8235 (+!107 (ite c!14141 call!8236 (ite c!14140 call!8231 call!8233)) (ite (or c!14141 c!14140) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (_2!1104 lt!40512))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (_2!1104 lt!40512))))))))

(declare-fun d!22609 () Bool)

(declare-fun e!56339 () Bool)

(assert (=> d!22609 e!56339))

(declare-fun res!44440 () Bool)

(assert (=> d!22609 (=> (not res!44440) (not e!56339))))

(assert (=> d!22609 (= res!44440 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))))

(declare-fun lt!41094 () ListLongMap!1441)

(declare-fun lt!41077 () ListLongMap!1441)

(assert (=> d!22609 (= lt!41094 lt!41077)))

(declare-fun lt!41091 () Unit!2498)

(declare-fun e!56343 () Unit!2498)

(assert (=> d!22609 (= lt!41091 e!56343)))

(declare-fun c!14138 () Bool)

(declare-fun e!56344 () Bool)

(assert (=> d!22609 (= c!14138 e!56344)))

(declare-fun res!44447 () Bool)

(assert (=> d!22609 (=> (not res!44447) (not e!56344))))

(assert (=> d!22609 (= res!44447 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(declare-fun e!56351 () ListLongMap!1441)

(assert (=> d!22609 (= lt!41077 e!56351)))

(assert (=> d!22609 (= c!14141 (and (not (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22609 (validMask!0 (mask!6365 (_2!1104 lt!40512)))))

(assert (=> d!22609 (= (getCurrentListMap!430 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))) lt!41094)))

(declare-fun bm!8228 () Bool)

(assert (=> bm!8228 (= call!8233 call!8231)))

(declare-fun b!86469 () Bool)

(declare-fun e!56341 () Bool)

(declare-fun e!56350 () Bool)

(assert (=> b!86469 (= e!56341 e!56350)))

(declare-fun res!44445 () Bool)

(assert (=> b!86469 (=> (not res!44445) (not e!56350))))

(assert (=> b!86469 (= res!44445 (contains!747 lt!41094 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(assert (=> b!86469 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(declare-fun b!86470 () Bool)

(declare-fun lt!41080 () Unit!2498)

(assert (=> b!86470 (= e!56343 lt!41080)))

(declare-fun lt!41086 () ListLongMap!1441)

(assert (=> b!86470 (= lt!41086 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))))))

(declare-fun lt!41082 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41082 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41090 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41090 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000))))

(declare-fun lt!41085 () Unit!2498)

(assert (=> b!86470 (= lt!41085 (addStillContains!58 lt!41086 lt!41082 (zeroValue!2229 (_2!1104 lt!40512)) lt!41090))))

(assert (=> b!86470 (contains!747 (+!107 lt!41086 (tuple2!2189 lt!41082 (zeroValue!2229 (_2!1104 lt!40512)))) lt!41090)))

(declare-fun lt!41087 () Unit!2498)

(assert (=> b!86470 (= lt!41087 lt!41085)))

(declare-fun lt!41098 () ListLongMap!1441)

(assert (=> b!86470 (= lt!41098 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))))))

(declare-fun lt!41081 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41081 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41078 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41078 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000))))

(declare-fun lt!41097 () Unit!2498)

(assert (=> b!86470 (= lt!41097 (addApplyDifferent!58 lt!41098 lt!41081 (minValue!2229 (_2!1104 lt!40512)) lt!41078))))

(assert (=> b!86470 (= (apply!82 (+!107 lt!41098 (tuple2!2189 lt!41081 (minValue!2229 (_2!1104 lt!40512)))) lt!41078) (apply!82 lt!41098 lt!41078))))

(declare-fun lt!41079 () Unit!2498)

(assert (=> b!86470 (= lt!41079 lt!41097)))

(declare-fun lt!41092 () ListLongMap!1441)

(assert (=> b!86470 (= lt!41092 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))))))

(declare-fun lt!41083 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41083 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41089 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41089 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000))))

(declare-fun lt!41095 () Unit!2498)

(assert (=> b!86470 (= lt!41095 (addApplyDifferent!58 lt!41092 lt!41083 (zeroValue!2229 (_2!1104 lt!40512)) lt!41089))))

(assert (=> b!86470 (= (apply!82 (+!107 lt!41092 (tuple2!2189 lt!41083 (zeroValue!2229 (_2!1104 lt!40512)))) lt!41089) (apply!82 lt!41092 lt!41089))))

(declare-fun lt!41096 () Unit!2498)

(assert (=> b!86470 (= lt!41096 lt!41095)))

(declare-fun lt!41093 () ListLongMap!1441)

(assert (=> b!86470 (= lt!41093 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))))))

(declare-fun lt!41084 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41084 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41088 () (_ BitVec 64))

(assert (=> b!86470 (= lt!41088 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000))))

(assert (=> b!86470 (= lt!41080 (addApplyDifferent!58 lt!41093 lt!41084 (minValue!2229 (_2!1104 lt!40512)) lt!41088))))

(assert (=> b!86470 (= (apply!82 (+!107 lt!41093 (tuple2!2189 lt!41084 (minValue!2229 (_2!1104 lt!40512)))) lt!41088) (apply!82 lt!41093 lt!41088))))

(declare-fun bm!8229 () Bool)

(assert (=> bm!8229 (= call!8231 call!8236)))

(declare-fun b!86471 () Bool)

(declare-fun res!44443 () Bool)

(assert (=> b!86471 (=> (not res!44443) (not e!56339))))

(assert (=> b!86471 (= res!44443 e!56341)))

(declare-fun res!44442 () Bool)

(assert (=> b!86471 (=> res!44442 e!56341)))

(declare-fun e!56348 () Bool)

(assert (=> b!86471 (= res!44442 (not e!56348))))

(declare-fun res!44444 () Bool)

(assert (=> b!86471 (=> (not res!44444) (not e!56348))))

(assert (=> b!86471 (= res!44444 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(declare-fun b!86472 () Bool)

(declare-fun e!56342 () Bool)

(declare-fun call!8230 () Bool)

(assert (=> b!86472 (= e!56342 (not call!8230))))

(declare-fun b!86473 () Bool)

(declare-fun e!56349 () ListLongMap!1441)

(assert (=> b!86473 (= e!56351 e!56349)))

(assert (=> b!86473 (= c!14140 (and (not (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86474 () Bool)

(declare-fun e!56347 () Bool)

(declare-fun call!8232 () Bool)

(assert (=> b!86474 (= e!56347 (not call!8232))))

(declare-fun b!86475 () Bool)

(declare-fun e!56340 () Bool)

(assert (=> b!86475 (= e!56340 (= (apply!82 lt!41094 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 (_2!1104 lt!40512))))))

(declare-fun bm!8230 () Bool)

(declare-fun call!8234 () ListLongMap!1441)

(assert (=> bm!8230 (= call!8234 call!8235)))

(declare-fun b!86476 () Bool)

(declare-fun e!56346 () Bool)

(assert (=> b!86476 (= e!56347 e!56346)))

(declare-fun res!44441 () Bool)

(assert (=> b!86476 (= res!44441 call!8232)))

(assert (=> b!86476 (=> (not res!44441) (not e!56346))))

(declare-fun b!86477 () Bool)

(assert (=> b!86477 (= e!56339 e!56342)))

(declare-fun c!14139 () Bool)

(assert (=> b!86477 (= c!14139 (not (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86478 () Bool)

(assert (=> b!86478 (= e!56351 (+!107 call!8235 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (_2!1104 lt!40512)))))))

(declare-fun b!86479 () Bool)

(assert (=> b!86479 (= e!56342 e!56340)))

(declare-fun res!44446 () Bool)

(assert (=> b!86479 (= res!44446 call!8230)))

(assert (=> b!86479 (=> (not res!44446) (not e!56340))))

(declare-fun b!86480 () Bool)

(declare-fun Unit!2544 () Unit!2498)

(assert (=> b!86480 (= e!56343 Unit!2544)))

(declare-fun b!86481 () Bool)

(assert (=> b!86481 (= e!56344 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun bm!8231 () Bool)

(assert (=> bm!8231 (= call!8236 (getCurrentListMapNoExtraKeys!72 (_keys!4009 (_2!1104 lt!40512)) (_values!2320 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512)) (extraKeys!2176 (_2!1104 lt!40512)) (zeroValue!2229 (_2!1104 lt!40512)) (minValue!2229 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1104 lt!40512))))))

(declare-fun b!86482 () Bool)

(declare-fun res!44448 () Bool)

(assert (=> b!86482 (=> (not res!44448) (not e!56339))))

(assert (=> b!86482 (= res!44448 e!56347)))

(declare-fun c!14143 () Bool)

(assert (=> b!86482 (= c!14143 (not (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86483 () Bool)

(declare-fun e!56345 () ListLongMap!1441)

(assert (=> b!86483 (= e!56345 call!8234)))

(declare-fun b!86484 () Bool)

(assert (=> b!86484 (= e!56348 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun b!86485 () Bool)

(assert (=> b!86485 (= e!56345 call!8233)))

(declare-fun b!86486 () Bool)

(assert (=> b!86486 (= e!56349 call!8234)))

(declare-fun bm!8232 () Bool)

(assert (=> bm!8232 (= call!8230 (contains!747 lt!41094 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86487 () Bool)

(assert (=> b!86487 (= e!56346 (= (apply!82 lt!41094 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 (_2!1104 lt!40512))))))

(declare-fun b!86488 () Bool)

(declare-fun c!14142 () Bool)

(assert (=> b!86488 (= c!14142 (and (not (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!86488 (= e!56349 e!56345)))

(declare-fun b!86489 () Bool)

(assert (=> b!86489 (= e!56350 (= (apply!82 lt!41094 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (_values!2320 (_2!1104 lt!40512))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 (_2!1104 lt!40512)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_values!2320 (_2!1104 lt!40512)))))))

(assert (=> b!86489 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(declare-fun bm!8233 () Bool)

(assert (=> bm!8233 (= call!8232 (contains!747 lt!41094 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22609 c!14141) b!86478))

(assert (= (and d!22609 (not c!14141)) b!86473))

(assert (= (and b!86473 c!14140) b!86486))

(assert (= (and b!86473 (not c!14140)) b!86488))

(assert (= (and b!86488 c!14142) b!86483))

(assert (= (and b!86488 (not c!14142)) b!86485))

(assert (= (or b!86483 b!86485) bm!8228))

(assert (= (or b!86486 bm!8228) bm!8229))

(assert (= (or b!86486 b!86483) bm!8230))

(assert (= (or b!86478 bm!8229) bm!8231))

(assert (= (or b!86478 bm!8230) bm!8227))

(assert (= (and d!22609 res!44447) b!86481))

(assert (= (and d!22609 c!14138) b!86470))

(assert (= (and d!22609 (not c!14138)) b!86480))

(assert (= (and d!22609 res!44440) b!86471))

(assert (= (and b!86471 res!44444) b!86484))

(assert (= (and b!86471 (not res!44442)) b!86469))

(assert (= (and b!86469 res!44445) b!86489))

(assert (= (and b!86471 res!44443) b!86482))

(assert (= (and b!86482 c!14143) b!86476))

(assert (= (and b!86482 (not c!14143)) b!86474))

(assert (= (and b!86476 res!44441) b!86487))

(assert (= (or b!86476 b!86474) bm!8233))

(assert (= (and b!86482 res!44448) b!86477))

(assert (= (and b!86477 c!14139) b!86479))

(assert (= (and b!86477 (not c!14139)) b!86472))

(assert (= (and b!86479 res!44446) b!86475))

(assert (= (or b!86479 b!86472) bm!8232))

(declare-fun b_lambda!3841 () Bool)

(assert (=> (not b_lambda!3841) (not b!86489)))

(declare-fun tb!1697 () Bool)

(declare-fun t!5238 () Bool)

(assert (=> (and b!85197 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 (_2!1104 lt!40512))) t!5238) tb!1697))

(declare-fun result!2927 () Bool)

(assert (=> tb!1697 (= result!2927 tp_is_empty!2533)))

(assert (=> b!86489 t!5238))

(declare-fun b_and!5233 () Bool)

(assert (= b_and!5229 (and (=> t!5238 result!2927) b_and!5233)))

(declare-fun t!5240 () Bool)

(declare-fun tb!1699 () Bool)

(assert (=> (and b!85211 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (_2!1104 lt!40512))) t!5240) tb!1699))

(declare-fun result!2929 () Bool)

(assert (= result!2929 result!2927))

(assert (=> b!86489 t!5240))

(declare-fun b_and!5235 () Bool)

(assert (= b_and!5231 (and (=> t!5240 result!2929) b_and!5235)))

(declare-fun m!91541 () Bool)

(assert (=> b!86478 m!91541))

(declare-fun m!91543 () Bool)

(assert (=> b!86487 m!91543))

(declare-fun m!91545 () Bool)

(assert (=> b!86489 m!91545))

(declare-fun m!91547 () Bool)

(assert (=> b!86489 m!91547))

(declare-fun m!91549 () Bool)

(assert (=> b!86489 m!91549))

(assert (=> b!86489 m!91545))

(assert (=> b!86489 m!91547))

(declare-fun m!91551 () Bool)

(assert (=> b!86489 m!91551))

(declare-fun m!91553 () Bool)

(assert (=> b!86489 m!91553))

(assert (=> b!86489 m!91551))

(declare-fun m!91555 () Bool)

(assert (=> bm!8231 m!91555))

(assert (=> b!86481 m!91551))

(assert (=> b!86481 m!91551))

(declare-fun m!91557 () Bool)

(assert (=> b!86481 m!91557))

(declare-fun m!91559 () Bool)

(assert (=> bm!8233 m!91559))

(declare-fun m!91561 () Bool)

(assert (=> bm!8227 m!91561))

(declare-fun m!91563 () Bool)

(assert (=> b!86470 m!91563))

(declare-fun m!91565 () Bool)

(assert (=> b!86470 m!91565))

(declare-fun m!91567 () Bool)

(assert (=> b!86470 m!91567))

(declare-fun m!91569 () Bool)

(assert (=> b!86470 m!91569))

(declare-fun m!91571 () Bool)

(assert (=> b!86470 m!91571))

(assert (=> b!86470 m!91555))

(assert (=> b!86470 m!91551))

(declare-fun m!91573 () Bool)

(assert (=> b!86470 m!91573))

(declare-fun m!91575 () Bool)

(assert (=> b!86470 m!91575))

(declare-fun m!91577 () Bool)

(assert (=> b!86470 m!91577))

(declare-fun m!91579 () Bool)

(assert (=> b!86470 m!91579))

(declare-fun m!91581 () Bool)

(assert (=> b!86470 m!91581))

(declare-fun m!91583 () Bool)

(assert (=> b!86470 m!91583))

(declare-fun m!91585 () Bool)

(assert (=> b!86470 m!91585))

(declare-fun m!91587 () Bool)

(assert (=> b!86470 m!91587))

(assert (=> b!86470 m!91571))

(declare-fun m!91589 () Bool)

(assert (=> b!86470 m!91589))

(assert (=> b!86470 m!91563))

(assert (=> b!86470 m!91581))

(assert (=> b!86470 m!91577))

(declare-fun m!91591 () Bool)

(assert (=> b!86470 m!91591))

(assert (=> b!86484 m!91551))

(assert (=> b!86484 m!91551))

(assert (=> b!86484 m!91557))

(declare-fun m!91593 () Bool)

(assert (=> bm!8232 m!91593))

(declare-fun m!91595 () Bool)

(assert (=> d!22609 m!91595))

(declare-fun m!91597 () Bool)

(assert (=> b!86475 m!91597))

(assert (=> b!86469 m!91551))

(assert (=> b!86469 m!91551))

(declare-fun m!91599 () Bool)

(assert (=> b!86469 m!91599))

(assert (=> d!22215 d!22609))

(declare-fun d!22611 () Bool)

(declare-fun res!44452 () Bool)

(declare-fun e!56352 () Bool)

(assert (=> d!22611 (=> (not res!44452) (not e!56352))))

(assert (=> d!22611 (= res!44452 (validMask!0 (mask!6365 (_2!1104 lt!40512))))))

(assert (=> d!22611 (= (simpleValid!58 (_2!1104 lt!40512)) e!56352)))

(declare-fun b!86490 () Bool)

(declare-fun res!44450 () Bool)

(assert (=> b!86490 (=> (not res!44450) (not e!56352))))

(assert (=> b!86490 (= res!44450 (and (= (size!2155 (_values!2320 (_2!1104 lt!40512))) (bvadd (mask!6365 (_2!1104 lt!40512)) #b00000000000000000000000000000001)) (= (size!2154 (_keys!4009 (_2!1104 lt!40512))) (size!2155 (_values!2320 (_2!1104 lt!40512)))) (bvsge (_size!426 (_2!1104 lt!40512)) #b00000000000000000000000000000000) (bvsle (_size!426 (_2!1104 lt!40512)) (bvadd (mask!6365 (_2!1104 lt!40512)) #b00000000000000000000000000000001))))))

(declare-fun b!86491 () Bool)

(declare-fun res!44451 () Bool)

(assert (=> b!86491 (=> (not res!44451) (not e!56352))))

(assert (=> b!86491 (= res!44451 (bvsge (size!2160 (_2!1104 lt!40512)) (_size!426 (_2!1104 lt!40512))))))

(declare-fun b!86492 () Bool)

(declare-fun res!44449 () Bool)

(assert (=> b!86492 (=> (not res!44449) (not e!56352))))

(assert (=> b!86492 (= res!44449 (= (size!2160 (_2!1104 lt!40512)) (bvadd (_size!426 (_2!1104 lt!40512)) (bvsdiv (bvadd (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86493 () Bool)

(assert (=> b!86493 (= e!56352 (and (bvsge (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 (_2!1104 lt!40512)) #b00000000000000000000000000000011) (bvsge (_vacant!426 (_2!1104 lt!40512)) #b00000000000000000000000000000000)))))

(assert (= (and d!22611 res!44452) b!86490))

(assert (= (and b!86490 res!44450) b!86491))

(assert (= (and b!86491 res!44451) b!86492))

(assert (= (and b!86492 res!44449) b!86493))

(assert (=> d!22611 m!91595))

(declare-fun m!91601 () Bool)

(assert (=> b!86491 m!91601))

(assert (=> b!86492 m!91601))

(assert (=> d!22337 d!22611))

(declare-fun b!86494 () Bool)

(declare-fun e!56354 () (_ BitVec 32))

(assert (=> b!86494 (= e!56354 #b00000000000000000000000000000000)))

(declare-fun bm!8234 () Bool)

(declare-fun call!8237 () (_ BitVec 32))

(assert (=> bm!8234 (= call!8237 (arrayCountValidKeys!0 (_keys!4009 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun d!22613 () Bool)

(declare-fun lt!41099 () (_ BitVec 32))

(assert (=> d!22613 (and (bvsge lt!41099 #b00000000000000000000000000000000) (bvsle lt!41099 (bvsub (size!2154 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!22613 (= lt!41099 e!56354)))

(declare-fun c!14145 () Bool)

(assert (=> d!22613 (= c!14145 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22613 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2154 (_keys!4009 newMap!16)) (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22613 (= (arrayCountValidKeys!0 (_keys!4009 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))) lt!41099)))

(declare-fun b!86495 () Bool)

(declare-fun e!56353 () (_ BitVec 32))

(assert (=> b!86495 (= e!56353 (bvadd #b00000000000000000000000000000001 call!8237))))

(declare-fun b!86496 () Bool)

(assert (=> b!86496 (= e!56354 e!56353)))

(declare-fun c!14144 () Bool)

(assert (=> b!86496 (= c!14144 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86497 () Bool)

(assert (=> b!86497 (= e!56353 call!8237)))

(assert (= (and d!22613 c!14145) b!86494))

(assert (= (and d!22613 (not c!14145)) b!86496))

(assert (= (and b!86496 c!14144) b!86495))

(assert (= (and b!86496 (not c!14144)) b!86497))

(assert (= (or b!86495 b!86497) bm!8234))

(declare-fun m!91603 () Bool)

(assert (=> bm!8234 m!91603))

(declare-fun m!91605 () Bool)

(assert (=> b!86496 m!91605))

(assert (=> b!86496 m!91605))

(declare-fun m!91607 () Bool)

(assert (=> b!86496 m!91607))

(assert (=> bm!8159 d!22613))

(declare-fun d!22615 () Bool)

(assert (=> d!22615 (= (get!1207 (getValueByKey!141 (toList!736 lt!40438) lt!40433)) (v!2654 (getValueByKey!141 (toList!736 lt!40438) lt!40433)))))

(assert (=> d!22211 d!22615))

(declare-fun b!86501 () Bool)

(declare-fun e!56356 () Option!147)

(assert (=> b!86501 (= e!56356 None!145)))

(declare-fun d!22617 () Bool)

(declare-fun c!14146 () Bool)

(assert (=> d!22617 (= c!14146 (and ((_ is Cons!1505) (toList!736 lt!40438)) (= (_1!1105 (h!2096 (toList!736 lt!40438))) lt!40433)))))

(declare-fun e!56355 () Option!147)

(assert (=> d!22617 (= (getValueByKey!141 (toList!736 lt!40438) lt!40433) e!56355)))

(declare-fun b!86499 () Bool)

(assert (=> b!86499 (= e!56355 e!56356)))

(declare-fun c!14147 () Bool)

(assert (=> b!86499 (= c!14147 (and ((_ is Cons!1505) (toList!736 lt!40438)) (not (= (_1!1105 (h!2096 (toList!736 lt!40438))) lt!40433))))))

(declare-fun b!86500 () Bool)

(assert (=> b!86500 (= e!56356 (getValueByKey!141 (t!5222 (toList!736 lt!40438)) lt!40433))))

(declare-fun b!86498 () Bool)

(assert (=> b!86498 (= e!56355 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40438)))))))

(assert (= (and d!22617 c!14146) b!86498))

(assert (= (and d!22617 (not c!14146)) b!86499))

(assert (= (and b!86499 c!14147) b!86500))

(assert (= (and b!86499 (not c!14147)) b!86501))

(declare-fun m!91609 () Bool)

(assert (=> b!86500 m!91609))

(assert (=> d!22211 d!22617))

(declare-fun d!22619 () Bool)

(assert (=> d!22619 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197)))))))

(declare-fun bs!3660 () Bool)

(assert (= bs!3660 d!22619))

(assert (=> bs!3660 m!89817))

(declare-fun m!91611 () Bool)

(assert (=> bs!3660 m!91611))

(assert (=> b!85955 d!22619))

(assert (=> b!85955 d!22237))

(assert (=> d!22341 d!22349))

(assert (=> d!22341 d!22347))

(assert (=> d!22341 d!22343))

(assert (=> d!22341 d!22345))

(declare-fun d!22621 () Bool)

(declare-fun c!14148 () Bool)

(assert (=> d!22621 (= c!14148 ((_ is Nil!1506) (toList!736 lt!40376)))))

(declare-fun e!56357 () (InoxSet tuple2!2188))

(assert (=> d!22621 (= (content!90 (toList!736 lt!40376)) e!56357)))

(declare-fun b!86502 () Bool)

(assert (=> b!86502 (= e!56357 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!86503 () Bool)

(assert (=> b!86503 (= e!56357 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40376)) true) (content!90 (t!5222 (toList!736 lt!40376)))))))

(assert (= (and d!22621 c!14148) b!86502))

(assert (= (and d!22621 (not c!14148)) b!86503))

(declare-fun m!91613 () Bool)

(assert (=> b!86503 m!91613))

(declare-fun m!91615 () Bool)

(assert (=> b!86503 m!91615))

(assert (=> d!22295 d!22621))

(declare-fun d!22623 () Bool)

(declare-fun res!44453 () Bool)

(declare-fun e!56358 () Bool)

(assert (=> d!22623 (=> res!44453 e!56358)))

(assert (=> d!22623 (= res!44453 (or ((_ is Nil!1506) lt!40754) ((_ is Nil!1506) (t!5222 lt!40754))))))

(assert (=> d!22623 (= (isStrictlySorted!285 lt!40754) e!56358)))

(declare-fun b!86504 () Bool)

(declare-fun e!56359 () Bool)

(assert (=> b!86504 (= e!56358 e!56359)))

(declare-fun res!44454 () Bool)

(assert (=> b!86504 (=> (not res!44454) (not e!56359))))

(assert (=> b!86504 (= res!44454 (bvslt (_1!1105 (h!2096 lt!40754)) (_1!1105 (h!2096 (t!5222 lt!40754)))))))

(declare-fun b!86505 () Bool)

(assert (=> b!86505 (= e!56359 (isStrictlySorted!285 (t!5222 lt!40754)))))

(assert (= (and d!22623 (not res!44453)) b!86504))

(assert (= (and b!86504 res!44454) b!86505))

(declare-fun m!91617 () Bool)

(assert (=> b!86505 m!91617))

(assert (=> d!22373 d!22623))

(declare-fun d!22625 () Bool)

(declare-fun res!44455 () Bool)

(declare-fun e!56360 () Bool)

(assert (=> d!22625 (=> res!44455 e!56360)))

(assert (=> d!22625 (= res!44455 (or ((_ is Nil!1506) (toList!736 lt!40193)) ((_ is Nil!1506) (t!5222 (toList!736 lt!40193)))))))

(assert (=> d!22625 (= (isStrictlySorted!285 (toList!736 lt!40193)) e!56360)))

(declare-fun b!86506 () Bool)

(declare-fun e!56361 () Bool)

(assert (=> b!86506 (= e!56360 e!56361)))

(declare-fun res!44456 () Bool)

(assert (=> b!86506 (=> (not res!44456) (not e!56361))))

(assert (=> b!86506 (= res!44456 (bvslt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193))))))))

(declare-fun b!86507 () Bool)

(assert (=> b!86507 (= e!56361 (isStrictlySorted!285 (t!5222 (toList!736 lt!40193))))))

(assert (= (and d!22625 (not res!44455)) b!86506))

(assert (= (and b!86506 res!44456) b!86507))

(declare-fun m!91619 () Bool)

(assert (=> b!86507 m!91619))

(assert (=> d!22373 d!22625))

(declare-fun d!22627 () Bool)

(declare-fun e!56363 () Bool)

(assert (=> d!22627 e!56363))

(declare-fun res!44457 () Bool)

(assert (=> d!22627 (=> res!44457 e!56363)))

(declare-fun lt!41101 () Bool)

(assert (=> d!22627 (= res!44457 (not lt!41101))))

(declare-fun lt!41103 () Bool)

(assert (=> d!22627 (= lt!41101 lt!41103)))

(declare-fun lt!41100 () Unit!2498)

(declare-fun e!56362 () Unit!2498)

(assert (=> d!22627 (= lt!41100 e!56362)))

(declare-fun c!14149 () Bool)

(assert (=> d!22627 (= c!14149 lt!41103)))

(assert (=> d!22627 (= lt!41103 (containsKey!144 (toList!736 lt!40878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22627 (= (contains!747 lt!40878 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41101)))

(declare-fun b!86508 () Bool)

(declare-fun lt!41102 () Unit!2498)

(assert (=> b!86508 (= e!56362 lt!41102)))

(assert (=> b!86508 (= lt!41102 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86508 (isDefined!93 (getValueByKey!141 (toList!736 lt!40878) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86509 () Bool)

(declare-fun Unit!2545 () Unit!2498)

(assert (=> b!86509 (= e!56362 Unit!2545)))

(declare-fun b!86510 () Bool)

(assert (=> b!86510 (= e!56363 (isDefined!93 (getValueByKey!141 (toList!736 lt!40878) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22627 c!14149) b!86508))

(assert (= (and d!22627 (not c!14149)) b!86509))

(assert (= (and d!22627 (not res!44457)) b!86510))

(declare-fun m!91621 () Bool)

(assert (=> d!22627 m!91621))

(declare-fun m!91623 () Bool)

(assert (=> b!86508 m!91623))

(declare-fun m!91625 () Bool)

(assert (=> b!86508 m!91625))

(assert (=> b!86508 m!91625))

(declare-fun m!91627 () Bool)

(assert (=> b!86508 m!91627))

(assert (=> b!86510 m!91625))

(assert (=> b!86510 m!91625))

(assert (=> b!86510 m!91627))

(assert (=> bm!8188 d!22627))

(declare-fun d!22629 () Bool)

(assert (=> d!22629 (= (apply!82 lt!40636 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40636) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3661 () Bool)

(assert (= bs!3661 d!22629))

(declare-fun m!91629 () Bool)

(assert (=> bs!3661 m!91629))

(assert (=> bs!3661 m!91629))

(declare-fun m!91631 () Bool)

(assert (=> bs!3661 m!91631))

(assert (=> b!85810 d!22629))

(declare-fun d!22631 () Bool)

(assert (=> d!22631 (= (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) (not (isEmpty!343 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun bs!3662 () Bool)

(assert (= bs!3662 d!22631))

(assert (=> bs!3662 m!90551))

(declare-fun m!91633 () Bool)

(assert (=> bs!3662 m!91633))

(assert (=> b!85980 d!22631))

(declare-fun b!86514 () Bool)

(declare-fun e!56365 () Option!147)

(assert (=> b!86514 (= e!56365 None!145)))

(declare-fun d!22633 () Bool)

(declare-fun c!14150 () Bool)

(assert (=> d!22633 (= c!14150 (and ((_ is Cons!1505) (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (= (_1!1105 (h!2096 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun e!56364 () Option!147)

(assert (=> d!22633 (= (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56364)))

(declare-fun b!86512 () Bool)

(assert (=> b!86512 (= e!56364 e!56365)))

(declare-fun c!14151 () Bool)

(assert (=> b!86512 (= c!14151 (and ((_ is Cons!1505) (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (not (= (_1!1105 (h!2096 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun b!86513 () Bool)

(assert (=> b!86513 (= e!56365 (getValueByKey!141 (t!5222 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86511 () Bool)

(assert (=> b!86511 (= e!56364 (Some!146 (_2!1105 (h!2096 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))))))

(assert (= (and d!22633 c!14150) b!86511))

(assert (= (and d!22633 (not c!14150)) b!86512))

(assert (= (and b!86512 c!14151) b!86513))

(assert (= (and b!86512 (not c!14151)) b!86514))

(assert (=> b!86513 m!89569))

(declare-fun m!91635 () Bool)

(assert (=> b!86513 m!91635))

(assert (=> b!85980 d!22633))

(declare-fun d!22635 () Bool)

(declare-fun lt!41104 () Bool)

(assert (=> d!22635 (= lt!41104 (select (content!90 lt!40618) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun e!56367 () Bool)

(assert (=> d!22635 (= lt!41104 e!56367)))

(declare-fun res!44459 () Bool)

(assert (=> d!22635 (=> (not res!44459) (not e!56367))))

(assert (=> d!22635 (= res!44459 ((_ is Cons!1505) lt!40618))))

(assert (=> d!22635 (= (contains!749 lt!40618 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) lt!41104)))

(declare-fun b!86515 () Bool)

(declare-fun e!56366 () Bool)

(assert (=> b!86515 (= e!56367 e!56366)))

(declare-fun res!44458 () Bool)

(assert (=> b!86515 (=> res!44458 e!56366)))

(assert (=> b!86515 (= res!44458 (= (h!2096 lt!40618) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!86516 () Bool)

(assert (=> b!86516 (= e!56366 (contains!749 (t!5222 lt!40618) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22635 res!44459) b!86515))

(assert (= (and b!86515 (not res!44458)) b!86516))

(declare-fun m!91637 () Bool)

(assert (=> d!22635 m!91637))

(declare-fun m!91639 () Bool)

(assert (=> d!22635 m!91639))

(declare-fun m!91641 () Bool)

(assert (=> b!86516 m!91641))

(assert (=> b!85792 d!22635))

(assert (=> d!22209 d!22189))

(assert (=> d!22209 d!22199))

(declare-fun d!22637 () Bool)

(assert (=> d!22637 (contains!747 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40435)))

(assert (=> d!22637 true))

(declare-fun _$35!330 () Unit!2498)

(assert (=> d!22637 (= (choose!508 lt!40431 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40435) _$35!330)))

(declare-fun bs!3663 () Bool)

(assert (= bs!3663 d!22637))

(assert (=> bs!3663 m!89913))

(assert (=> bs!3663 m!89913))

(assert (=> bs!3663 m!89915))

(assert (=> d!22209 d!22637))

(declare-fun d!22639 () Bool)

(declare-fun e!56369 () Bool)

(assert (=> d!22639 e!56369))

(declare-fun res!44460 () Bool)

(assert (=> d!22639 (=> res!44460 e!56369)))

(declare-fun lt!41106 () Bool)

(assert (=> d!22639 (= res!44460 (not lt!41106))))

(declare-fun lt!41108 () Bool)

(assert (=> d!22639 (= lt!41106 lt!41108)))

(declare-fun lt!41105 () Unit!2498)

(declare-fun e!56368 () Unit!2498)

(assert (=> d!22639 (= lt!41105 e!56368)))

(declare-fun c!14152 () Bool)

(assert (=> d!22639 (= c!14152 lt!41108)))

(assert (=> d!22639 (= lt!41108 (containsKey!144 (toList!736 lt!40431) lt!40435))))

(assert (=> d!22639 (= (contains!747 lt!40431 lt!40435) lt!41106)))

(declare-fun b!86518 () Bool)

(declare-fun lt!41107 () Unit!2498)

(assert (=> b!86518 (= e!56368 lt!41107)))

(assert (=> b!86518 (= lt!41107 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40431) lt!40435))))

(assert (=> b!86518 (isDefined!93 (getValueByKey!141 (toList!736 lt!40431) lt!40435))))

(declare-fun b!86519 () Bool)

(declare-fun Unit!2546 () Unit!2498)

(assert (=> b!86519 (= e!56368 Unit!2546)))

(declare-fun b!86520 () Bool)

(assert (=> b!86520 (= e!56369 (isDefined!93 (getValueByKey!141 (toList!736 lt!40431) lt!40435)))))

(assert (= (and d!22639 c!14152) b!86518))

(assert (= (and d!22639 (not c!14152)) b!86519))

(assert (= (and d!22639 (not res!44460)) b!86520))

(declare-fun m!91643 () Bool)

(assert (=> d!22639 m!91643))

(declare-fun m!91645 () Bool)

(assert (=> b!86518 m!91645))

(declare-fun m!91647 () Bool)

(assert (=> b!86518 m!91647))

(assert (=> b!86518 m!91647))

(declare-fun m!91649 () Bool)

(assert (=> b!86518 m!91649))

(assert (=> b!86520 m!91647))

(assert (=> b!86520 m!91647))

(assert (=> b!86520 m!91649))

(assert (=> d!22209 d!22639))

(declare-fun d!22641 () Bool)

(declare-fun e!56371 () Bool)

(assert (=> d!22641 e!56371))

(declare-fun res!44461 () Bool)

(assert (=> d!22641 (=> res!44461 e!56371)))

(declare-fun lt!41110 () Bool)

(assert (=> d!22641 (= res!44461 (not lt!41110))))

(declare-fun lt!41112 () Bool)

(assert (=> d!22641 (= lt!41110 lt!41112)))

(declare-fun lt!41109 () Unit!2498)

(declare-fun e!56370 () Unit!2498)

(assert (=> d!22641 (= lt!41109 e!56370)))

(declare-fun c!14153 () Bool)

(assert (=> d!22641 (= c!14153 lt!41112)))

(assert (=> d!22641 (= lt!41112 (containsKey!144 (toList!736 lt!40902) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22641 (= (contains!747 lt!40902 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41110)))

(declare-fun b!86521 () Bool)

(declare-fun lt!41111 () Unit!2498)

(assert (=> b!86521 (= e!56370 lt!41111)))

(assert (=> b!86521 (= lt!41111 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40902) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86521 (isDefined!93 (getValueByKey!141 (toList!736 lt!40902) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86522 () Bool)

(declare-fun Unit!2547 () Unit!2498)

(assert (=> b!86522 (= e!56370 Unit!2547)))

(declare-fun b!86523 () Bool)

(assert (=> b!86523 (= e!56371 (isDefined!93 (getValueByKey!141 (toList!736 lt!40902) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22641 c!14153) b!86521))

(assert (= (and d!22641 (not c!14153)) b!86522))

(assert (= (and d!22641 (not res!44461)) b!86523))

(declare-fun m!91651 () Bool)

(assert (=> d!22641 m!91651))

(declare-fun m!91653 () Bool)

(assert (=> b!86521 m!91653))

(declare-fun m!91655 () Bool)

(assert (=> b!86521 m!91655))

(assert (=> b!86521 m!91655))

(declare-fun m!91657 () Bool)

(assert (=> b!86521 m!91657))

(assert (=> b!86523 m!91655))

(assert (=> b!86523 m!91655))

(assert (=> b!86523 m!91657))

(assert (=> bm!8194 d!22641))

(assert (=> d!22371 d!22369))

(declare-fun d!22643 () Bool)

(assert (=> d!22643 (= (getValueByKey!141 lt!40362 (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192)))))

(assert (=> d!22643 true))

(declare-fun _$22!418 () Unit!2498)

(assert (=> d!22643 (= (choose!511 lt!40362 (_1!1105 lt!40192) (_2!1105 lt!40192)) _$22!418)))

(declare-fun bs!3664 () Bool)

(assert (= bs!3664 d!22643))

(assert (=> bs!3664 m!89845))

(assert (=> d!22371 d!22643))

(declare-fun d!22645 () Bool)

(declare-fun res!44462 () Bool)

(declare-fun e!56372 () Bool)

(assert (=> d!22645 (=> res!44462 e!56372)))

(assert (=> d!22645 (= res!44462 (or ((_ is Nil!1506) lt!40362) ((_ is Nil!1506) (t!5222 lt!40362))))))

(assert (=> d!22645 (= (isStrictlySorted!285 lt!40362) e!56372)))

(declare-fun b!86524 () Bool)

(declare-fun e!56373 () Bool)

(assert (=> b!86524 (= e!56372 e!56373)))

(declare-fun res!44463 () Bool)

(assert (=> b!86524 (=> (not res!44463) (not e!56373))))

(assert (=> b!86524 (= res!44463 (bvslt (_1!1105 (h!2096 lt!40362)) (_1!1105 (h!2096 (t!5222 lt!40362)))))))

(declare-fun b!86525 () Bool)

(assert (=> b!86525 (= e!56373 (isStrictlySorted!285 (t!5222 lt!40362)))))

(assert (= (and d!22645 (not res!44462)) b!86524))

(assert (= (and b!86524 res!44463) b!86525))

(declare-fun m!91659 () Bool)

(assert (=> b!86525 m!91659))

(assert (=> d!22371 d!22645))

(declare-fun d!22647 () Bool)

(declare-fun lt!41113 () Bool)

(assert (=> d!22647 (= lt!41113 (select (content!90 (toList!736 lt!40722)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun e!56375 () Bool)

(assert (=> d!22647 (= lt!41113 e!56375)))

(declare-fun res!44465 () Bool)

(assert (=> d!22647 (=> (not res!44465) (not e!56375))))

(assert (=> d!22647 (= res!44465 ((_ is Cons!1505) (toList!736 lt!40722)))))

(assert (=> d!22647 (= (contains!749 (toList!736 lt!40722) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41113)))

(declare-fun b!86526 () Bool)

(declare-fun e!56374 () Bool)

(assert (=> b!86526 (= e!56375 e!56374)))

(declare-fun res!44464 () Bool)

(assert (=> b!86526 (=> res!44464 e!56374)))

(assert (=> b!86526 (= res!44464 (= (h!2096 (toList!736 lt!40722)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun b!86527 () Bool)

(assert (=> b!86527 (= e!56374 (contains!749 (t!5222 (toList!736 lt!40722)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22647 res!44465) b!86526))

(assert (= (and b!86526 (not res!44464)) b!86527))

(declare-fun m!91661 () Bool)

(assert (=> d!22647 m!91661))

(declare-fun m!91663 () Bool)

(assert (=> d!22647 m!91663))

(declare-fun m!91665 () Bool)

(assert (=> b!86527 m!91665))

(assert (=> b!85996 d!22647))

(declare-fun d!22649 () Bool)

(declare-fun lt!41114 () Bool)

(assert (=> d!22649 (= lt!41114 (select (content!90 lt!40351) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun e!56377 () Bool)

(assert (=> d!22649 (= lt!41114 e!56377)))

(declare-fun res!44467 () Bool)

(assert (=> d!22649 (=> (not res!44467) (not e!56377))))

(assert (=> d!22649 (= res!44467 ((_ is Cons!1505) lt!40351))))

(assert (=> d!22649 (= (contains!749 lt!40351 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) lt!41114)))

(declare-fun b!86528 () Bool)

(declare-fun e!56376 () Bool)

(assert (=> b!86528 (= e!56377 e!56376)))

(declare-fun res!44466 () Bool)

(assert (=> b!86528 (=> res!44466 e!56376)))

(assert (=> b!86528 (= res!44466 (= (h!2096 lt!40351) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!86529 () Bool)

(assert (=> b!86529 (= e!56376 (contains!749 (t!5222 lt!40351) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22649 res!44467) b!86528))

(assert (= (and b!86528 (not res!44466)) b!86529))

(declare-fun m!91667 () Bool)

(assert (=> d!22649 m!91667))

(declare-fun m!91669 () Bool)

(assert (=> d!22649 m!91669))

(declare-fun m!91671 () Bool)

(assert (=> b!86529 m!91671))

(assert (=> b!85961 d!22649))

(declare-fun b!86533 () Bool)

(declare-fun e!56379 () Option!147)

(assert (=> b!86533 (= e!56379 None!145)))

(declare-fun d!22651 () Bool)

(declare-fun c!14154 () Bool)

(assert (=> d!22651 (= c!14154 (and ((_ is Cons!1505) (toList!736 lt!40860)) (= (_1!1105 (h!2096 (toList!736 lt!40860))) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun e!56378 () Option!147)

(assert (=> d!22651 (= (getValueByKey!141 (toList!736 lt!40860) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) e!56378)))

(declare-fun b!86531 () Bool)

(assert (=> b!86531 (= e!56378 e!56379)))

(declare-fun c!14155 () Bool)

(assert (=> b!86531 (= c!14155 (and ((_ is Cons!1505) (toList!736 lt!40860)) (not (= (_1!1105 (h!2096 (toList!736 lt!40860))) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))))

(declare-fun b!86532 () Bool)

(assert (=> b!86532 (= e!56379 (getValueByKey!141 (t!5222 (toList!736 lt!40860)) (_1!1105 (ite c!13888 (ite c!13892 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40194) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40194)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!86530 () Bool)

(assert (=> b!86530 (= e!56378 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40860)))))))

(assert (= (and d!22651 c!14154) b!86530))

(assert (= (and d!22651 (not c!14154)) b!86531))

(assert (= (and b!86531 c!14155) b!86532))

(assert (= (and b!86531 (not c!14155)) b!86533))

(declare-fun m!91673 () Bool)

(assert (=> b!86532 m!91673))

(assert (=> b!86125 d!22651))

(declare-fun d!22653 () Bool)

(assert (=> d!22653 (= (get!1205 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2647 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85704 d!22653))

(declare-fun b!86534 () Bool)

(declare-fun e!56383 () Bool)

(declare-fun e!56382 () Bool)

(assert (=> b!86534 (= e!56383 e!56382)))

(declare-fun c!14156 () Bool)

(assert (=> b!86534 (= c!14156 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!86536 () Bool)

(declare-fun call!8238 () Bool)

(assert (=> b!86536 (= e!56382 call!8238)))

(declare-fun bm!8235 () Bool)

(assert (=> bm!8235 (= call!8238 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14156 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(declare-fun b!86537 () Bool)

(declare-fun e!56381 () Bool)

(assert (=> b!86537 (= e!56381 (contains!748 Nil!1505 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!86538 () Bool)

(declare-fun e!56380 () Bool)

(assert (=> b!86538 (= e!56380 e!56383)))

(declare-fun res!44468 () Bool)

(assert (=> b!86538 (=> (not res!44468) (not e!56383))))

(assert (=> b!86538 (= res!44468 (not e!56381))))

(declare-fun res!44469 () Bool)

(assert (=> b!86538 (=> (not res!44469) (not e!56381))))

(assert (=> b!86538 (= res!44469 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!22655 () Bool)

(declare-fun res!44470 () Bool)

(assert (=> d!22655 (=> res!44470 e!56380)))

(assert (=> d!22655 (= res!44470 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!22655 (= (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 Nil!1505) e!56380)))

(declare-fun b!86535 () Bool)

(assert (=> b!86535 (= e!56382 call!8238)))

(assert (= (and d!22655 (not res!44470)) b!86538))

(assert (= (and b!86538 res!44469) b!86537))

(assert (= (and b!86538 res!44468) b!86534))

(assert (= (and b!86534 c!14156) b!86536))

(assert (= (and b!86534 (not c!14156)) b!86535))

(assert (= (or b!86536 b!86535) bm!8235))

(declare-fun m!91675 () Bool)

(assert (=> b!86534 m!91675))

(assert (=> b!86534 m!91675))

(declare-fun m!91677 () Bool)

(assert (=> b!86534 m!91677))

(assert (=> bm!8235 m!91675))

(declare-fun m!91679 () Bool)

(assert (=> bm!8235 m!91679))

(assert (=> b!86537 m!91675))

(assert (=> b!86537 m!91675))

(declare-fun m!91681 () Bool)

(assert (=> b!86537 m!91681))

(assert (=> b!86538 m!91675))

(assert (=> b!86538 m!91675))

(assert (=> b!86538 m!91677))

(assert (=> b!85755 d!22655))

(declare-fun d!22657 () Bool)

(assert (=> d!22657 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192)))))))

(declare-fun bs!3665 () Bool)

(assert (= bs!3665 d!22657))

(assert (=> bs!3665 m!89829))

(declare-fun m!91683 () Bool)

(assert (=> bs!3665 m!91683))

(assert (=> b!86004 d!22657))

(assert (=> b!86004 d!22263))

(declare-fun d!22659 () Bool)

(declare-fun res!44471 () Bool)

(declare-fun e!56384 () Bool)

(assert (=> d!22659 (=> res!44471 e!56384)))

(assert (=> d!22659 (= res!44471 (and ((_ is Cons!1505) lt!40355) (= (_1!1105 (h!2096 lt!40355)) (_1!1105 lt!40192))))))

(assert (=> d!22659 (= (containsKey!144 lt!40355 (_1!1105 lt!40192)) e!56384)))

(declare-fun b!86539 () Bool)

(declare-fun e!56385 () Bool)

(assert (=> b!86539 (= e!56384 e!56385)))

(declare-fun res!44472 () Bool)

(assert (=> b!86539 (=> (not res!44472) (not e!56385))))

(assert (=> b!86539 (= res!44472 (and (or (not ((_ is Cons!1505) lt!40355)) (bvsle (_1!1105 (h!2096 lt!40355)) (_1!1105 lt!40192))) ((_ is Cons!1505) lt!40355) (bvslt (_1!1105 (h!2096 lt!40355)) (_1!1105 lt!40192))))))

(declare-fun b!86540 () Bool)

(assert (=> b!86540 (= e!56385 (containsKey!144 (t!5222 lt!40355) (_1!1105 lt!40192)))))

(assert (= (and d!22659 (not res!44471)) b!86539))

(assert (= (and b!86539 res!44472) b!86540))

(declare-fun m!91685 () Bool)

(assert (=> b!86540 m!91685))

(assert (=> b!86009 d!22659))

(declare-fun d!22661 () Bool)

(declare-fun e!56387 () Bool)

(assert (=> d!22661 e!56387))

(declare-fun res!44473 () Bool)

(assert (=> d!22661 (=> res!44473 e!56387)))

(declare-fun lt!41116 () Bool)

(assert (=> d!22661 (= res!44473 (not lt!41116))))

(declare-fun lt!41118 () Bool)

(assert (=> d!22661 (= lt!41116 lt!41118)))

(declare-fun lt!41115 () Unit!2498)

(declare-fun e!56386 () Unit!2498)

(assert (=> d!22661 (= lt!41115 e!56386)))

(declare-fun c!14157 () Bool)

(assert (=> d!22661 (= c!14157 lt!41118)))

(assert (=> d!22661 (= lt!41118 (containsKey!144 (toList!736 lt!40578) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22661 (= (contains!747 lt!40578 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41116)))

(declare-fun b!86541 () Bool)

(declare-fun lt!41117 () Unit!2498)

(assert (=> b!86541 (= e!56386 lt!41117)))

(assert (=> b!86541 (= lt!41117 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40578) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86541 (isDefined!93 (getValueByKey!141 (toList!736 lt!40578) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86542 () Bool)

(declare-fun Unit!2548 () Unit!2498)

(assert (=> b!86542 (= e!56386 Unit!2548)))

(declare-fun b!86543 () Bool)

(assert (=> b!86543 (= e!56387 (isDefined!93 (getValueByKey!141 (toList!736 lt!40578) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22661 c!14157) b!86541))

(assert (= (and d!22661 (not c!14157)) b!86542))

(assert (= (and d!22661 (not res!44473)) b!86543))

(declare-fun m!91687 () Bool)

(assert (=> d!22661 m!91687))

(declare-fun m!91689 () Bool)

(assert (=> b!86541 m!91689))

(assert (=> b!86541 m!90143))

(assert (=> b!86541 m!90143))

(declare-fun m!91691 () Bool)

(assert (=> b!86541 m!91691))

(assert (=> b!86543 m!90143))

(assert (=> b!86543 m!90143))

(assert (=> b!86543 m!91691))

(assert (=> d!22195 d!22661))

(declare-fun b!86547 () Bool)

(declare-fun e!56389 () Option!147)

(assert (=> b!86547 (= e!56389 None!145)))

(declare-fun d!22663 () Bool)

(declare-fun c!14158 () Bool)

(assert (=> d!22663 (= c!14158 (and ((_ is Cons!1505) lt!40576) (= (_1!1105 (h!2096 lt!40576)) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56388 () Option!147)

(assert (=> d!22663 (= (getValueByKey!141 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56388)))

(declare-fun b!86545 () Bool)

(assert (=> b!86545 (= e!56388 e!56389)))

(declare-fun c!14159 () Bool)

(assert (=> b!86545 (= c!14159 (and ((_ is Cons!1505) lt!40576) (not (= (_1!1105 (h!2096 lt!40576)) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86546 () Bool)

(assert (=> b!86546 (= e!56389 (getValueByKey!141 (t!5222 lt!40576) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86544 () Bool)

(assert (=> b!86544 (= e!56388 (Some!146 (_2!1105 (h!2096 lt!40576))))))

(assert (= (and d!22663 c!14158) b!86544))

(assert (= (and d!22663 (not c!14158)) b!86545))

(assert (= (and b!86545 c!14159) b!86546))

(assert (= (and b!86545 (not c!14159)) b!86547))

(declare-fun m!91693 () Bool)

(assert (=> b!86546 m!91693))

(assert (=> d!22195 d!22663))

(declare-fun d!22665 () Bool)

(assert (=> d!22665 (= (getValueByKey!141 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41119 () Unit!2498)

(assert (=> d!22665 (= lt!41119 (choose!511 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56390 () Bool)

(assert (=> d!22665 e!56390))

(declare-fun res!44474 () Bool)

(assert (=> d!22665 (=> (not res!44474) (not e!56390))))

(assert (=> d!22665 (= res!44474 (isStrictlySorted!285 lt!40576))))

(assert (=> d!22665 (= (lemmaContainsTupThenGetReturnValue!58 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41119)))

(declare-fun b!86548 () Bool)

(declare-fun res!44475 () Bool)

(assert (=> b!86548 (=> (not res!44475) (not e!56390))))

(assert (=> b!86548 (= res!44475 (containsKey!144 lt!40576 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86549 () Bool)

(assert (=> b!86549 (= e!56390 (contains!749 lt!40576 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22665 res!44474) b!86548))

(assert (= (and b!86548 res!44475) b!86549))

(assert (=> d!22665 m!90137))

(declare-fun m!91695 () Bool)

(assert (=> d!22665 m!91695))

(declare-fun m!91697 () Bool)

(assert (=> d!22665 m!91697))

(declare-fun m!91699 () Bool)

(assert (=> b!86548 m!91699))

(declare-fun m!91701 () Bool)

(assert (=> b!86549 m!91701))

(assert (=> d!22195 d!22665))

(declare-fun b!86550 () Bool)

(declare-fun e!56394 () List!1509)

(declare-fun call!8239 () List!1509)

(assert (=> b!86550 (= e!56394 call!8239)))

(declare-fun call!8240 () List!1509)

(declare-fun e!56393 () List!1509)

(declare-fun c!14163 () Bool)

(declare-fun bm!8236 () Bool)

(assert (=> bm!8236 (= call!8240 ($colon$colon!71 e!56393 (ite c!14163 (h!2096 (toList!736 lt!40443)) (tuple2!2189 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14162 () Bool)

(assert (=> bm!8236 (= c!14162 c!14163)))

(declare-fun b!86551 () Bool)

(declare-fun c!14161 () Bool)

(assert (=> b!86551 (= c!14161 (and ((_ is Cons!1505) (toList!736 lt!40443)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40443))) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56391 () List!1509)

(assert (=> b!86551 (= e!56394 e!56391)))

(declare-fun e!56395 () Bool)

(declare-fun lt!41120 () List!1509)

(declare-fun b!86552 () Bool)

(assert (=> b!86552 (= e!56395 (contains!749 lt!41120 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86553 () Bool)

(declare-fun res!44476 () Bool)

(assert (=> b!86553 (=> (not res!44476) (not e!56395))))

(assert (=> b!86553 (= res!44476 (containsKey!144 lt!41120 (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8237 () Bool)

(assert (=> bm!8237 (= call!8239 call!8240)))

(declare-fun b!86554 () Bool)

(assert (=> b!86554 (= e!56393 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40443)) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86555 () Bool)

(declare-fun c!14160 () Bool)

(assert (=> b!86555 (= e!56393 (ite c!14160 (t!5222 (toList!736 lt!40443)) (ite c!14161 (Cons!1505 (h!2096 (toList!736 lt!40443)) (t!5222 (toList!736 lt!40443))) Nil!1506)))))

(declare-fun b!86556 () Bool)

(declare-fun e!56392 () List!1509)

(assert (=> b!86556 (= e!56392 call!8240)))

(declare-fun bm!8238 () Bool)

(declare-fun call!8241 () List!1509)

(assert (=> bm!8238 (= call!8241 call!8239)))

(declare-fun d!22667 () Bool)

(assert (=> d!22667 e!56395))

(declare-fun res!44477 () Bool)

(assert (=> d!22667 (=> (not res!44477) (not e!56395))))

(assert (=> d!22667 (= res!44477 (isStrictlySorted!285 lt!41120))))

(assert (=> d!22667 (= lt!41120 e!56392)))

(assert (=> d!22667 (= c!14163 (and ((_ is Cons!1505) (toList!736 lt!40443)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40443))) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22667 (isStrictlySorted!285 (toList!736 lt!40443))))

(assert (=> d!22667 (= (insertStrictlySorted!61 (toList!736 lt!40443) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41120)))

(declare-fun b!86557 () Bool)

(assert (=> b!86557 (= e!56391 call!8241)))

(declare-fun b!86558 () Bool)

(assert (=> b!86558 (= e!56392 e!56394)))

(assert (=> b!86558 (= c!14160 (and ((_ is Cons!1505) (toList!736 lt!40443)) (= (_1!1105 (h!2096 (toList!736 lt!40443))) (_1!1105 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86559 () Bool)

(assert (=> b!86559 (= e!56391 call!8241)))

(assert (= (and d!22667 c!14163) b!86556))

(assert (= (and d!22667 (not c!14163)) b!86558))

(assert (= (and b!86558 c!14160) b!86550))

(assert (= (and b!86558 (not c!14160)) b!86551))

(assert (= (and b!86551 c!14161) b!86557))

(assert (= (and b!86551 (not c!14161)) b!86559))

(assert (= (or b!86557 b!86559) bm!8238))

(assert (= (or b!86550 bm!8238) bm!8237))

(assert (= (or b!86556 bm!8237) bm!8236))

(assert (= (and bm!8236 c!14162) b!86554))

(assert (= (and bm!8236 (not c!14162)) b!86555))

(assert (= (and d!22667 res!44477) b!86553))

(assert (= (and b!86553 res!44476) b!86552))

(declare-fun m!91703 () Bool)

(assert (=> b!86552 m!91703))

(declare-fun m!91705 () Bool)

(assert (=> b!86553 m!91705))

(declare-fun m!91707 () Bool)

(assert (=> bm!8236 m!91707))

(declare-fun m!91709 () Bool)

(assert (=> d!22667 m!91709))

(declare-fun m!91711 () Bool)

(assert (=> d!22667 m!91711))

(declare-fun m!91713 () Bool)

(assert (=> b!86554 m!91713))

(assert (=> d!22195 d!22667))

(declare-fun d!22669 () Bool)

(declare-fun lt!41121 () Bool)

(assert (=> d!22669 (= lt!41121 (select (content!90 lt!40606) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun e!56397 () Bool)

(assert (=> d!22669 (= lt!41121 e!56397)))

(declare-fun res!44479 () Bool)

(assert (=> d!22669 (=> (not res!44479) (not e!56397))))

(assert (=> d!22669 (= res!44479 ((_ is Cons!1505) lt!40606))))

(assert (=> d!22669 (= (contains!749 lt!40606 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))) lt!41121)))

(declare-fun b!86560 () Bool)

(declare-fun e!56396 () Bool)

(assert (=> b!86560 (= e!56397 e!56396)))

(declare-fun res!44478 () Bool)

(assert (=> b!86560 (=> res!44478 e!56396)))

(assert (=> b!86560 (= res!44478 (= (h!2096 lt!40606) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!86561 () Bool)

(assert (=> b!86561 (= e!56396 (contains!749 (t!5222 lt!40606) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(assert (= (and d!22669 res!44479) b!86560))

(assert (= (and b!86560 (not res!44478)) b!86561))

(declare-fun m!91715 () Bool)

(assert (=> d!22669 m!91715))

(declare-fun m!91717 () Bool)

(assert (=> d!22669 m!91717))

(declare-fun m!91719 () Bool)

(assert (=> b!86561 m!91719))

(assert (=> b!85741 d!22669))

(declare-fun b!86565 () Bool)

(declare-fun e!56399 () Option!147)

(assert (=> b!86565 (= e!56399 None!145)))

(declare-fun d!22671 () Bool)

(declare-fun c!14164 () Bool)

(assert (=> d!22671 (= c!14164 (and ((_ is Cons!1505) (t!5222 lt!40326)) (= (_1!1105 (h!2096 (t!5222 lt!40326))) (_1!1105 lt!40197))))))

(declare-fun e!56398 () Option!147)

(assert (=> d!22671 (= (getValueByKey!141 (t!5222 lt!40326) (_1!1105 lt!40197)) e!56398)))

(declare-fun b!86563 () Bool)

(assert (=> b!86563 (= e!56398 e!56399)))

(declare-fun c!14165 () Bool)

(assert (=> b!86563 (= c!14165 (and ((_ is Cons!1505) (t!5222 lt!40326)) (not (= (_1!1105 (h!2096 (t!5222 lt!40326))) (_1!1105 lt!40197)))))))

(declare-fun b!86564 () Bool)

(assert (=> b!86564 (= e!56399 (getValueByKey!141 (t!5222 (t!5222 lt!40326)) (_1!1105 lt!40197)))))

(declare-fun b!86562 () Bool)

(assert (=> b!86562 (= e!56398 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40326)))))))

(assert (= (and d!22671 c!14164) b!86562))

(assert (= (and d!22671 (not c!14164)) b!86563))

(assert (= (and b!86563 c!14165) b!86564))

(assert (= (and b!86563 (not c!14165)) b!86565))

(declare-fun m!91721 () Bool)

(assert (=> b!86564 m!91721))

(assert (=> b!85830 d!22671))

(declare-fun bm!8239 () Bool)

(declare-fun call!8242 () Bool)

(assert (=> bm!8239 (= call!8242 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!86566 () Bool)

(declare-fun e!56401 () Bool)

(declare-fun e!56400 () Bool)

(assert (=> b!86566 (= e!56401 e!56400)))

(declare-fun lt!41124 () (_ BitVec 64))

(assert (=> b!86566 (= lt!41124 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!41122 () Unit!2498)

(assert (=> b!86566 (= lt!41122 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4009 newMap!16) lt!41124 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!86566 (arrayContainsKey!0 (_keys!4009 newMap!16) lt!41124 #b00000000000000000000000000000000)))

(declare-fun lt!41123 () Unit!2498)

(assert (=> b!86566 (= lt!41123 lt!41122)))

(declare-fun res!44480 () Bool)

(assert (=> b!86566 (= res!44480 (= (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4009 newMap!16) (mask!6365 newMap!16)) (Found!237 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!86566 (=> (not res!44480) (not e!56400))))

(declare-fun b!86567 () Bool)

(assert (=> b!86567 (= e!56400 call!8242)))

(declare-fun b!86568 () Bool)

(assert (=> b!86568 (= e!56401 call!8242)))

(declare-fun b!86569 () Bool)

(declare-fun e!56402 () Bool)

(assert (=> b!86569 (= e!56402 e!56401)))

(declare-fun c!14166 () Bool)

(assert (=> b!86569 (= c!14166 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!22673 () Bool)

(declare-fun res!44481 () Bool)

(assert (=> d!22673 (=> res!44481 e!56402)))

(assert (=> d!22673 (= res!44481 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22673 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4009 newMap!16) (mask!6365 newMap!16)) e!56402)))

(assert (= (and d!22673 (not res!44481)) b!86569))

(assert (= (and b!86569 c!14166) b!86566))

(assert (= (and b!86569 (not c!14166)) b!86568))

(assert (= (and b!86566 res!44480) b!86567))

(assert (= (or b!86567 b!86568) bm!8239))

(declare-fun m!91723 () Bool)

(assert (=> bm!8239 m!91723))

(assert (=> b!86566 m!91605))

(declare-fun m!91725 () Bool)

(assert (=> b!86566 m!91725))

(declare-fun m!91727 () Bool)

(assert (=> b!86566 m!91727))

(assert (=> b!86566 m!91605))

(declare-fun m!91729 () Bool)

(assert (=> b!86566 m!91729))

(assert (=> b!86569 m!91605))

(assert (=> b!86569 m!91605))

(assert (=> b!86569 m!91607))

(assert (=> bm!8124 d!22673))

(assert (=> d!22205 d!22187))

(declare-fun d!22675 () Bool)

(assert (=> d!22675 (= (apply!82 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40433) (apply!82 lt!40438 lt!40433))))

(assert (=> d!22675 true))

(declare-fun _$34!839 () Unit!2498)

(assert (=> d!22675 (= (choose!507 lt!40438 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40433) _$34!839)))

(declare-fun bs!3666 () Bool)

(assert (= bs!3666 d!22675))

(assert (=> bs!3666 m!89931))

(assert (=> bs!3666 m!89931))

(assert (=> bs!3666 m!89933))

(assert (=> bs!3666 m!89925))

(assert (=> d!22205 d!22675))

(declare-fun d!22677 () Bool)

(declare-fun e!56404 () Bool)

(assert (=> d!22677 e!56404))

(declare-fun res!44482 () Bool)

(assert (=> d!22677 (=> res!44482 e!56404)))

(declare-fun lt!41126 () Bool)

(assert (=> d!22677 (= res!44482 (not lt!41126))))

(declare-fun lt!41128 () Bool)

(assert (=> d!22677 (= lt!41126 lt!41128)))

(declare-fun lt!41125 () Unit!2498)

(declare-fun e!56403 () Unit!2498)

(assert (=> d!22677 (= lt!41125 e!56403)))

(declare-fun c!14167 () Bool)

(assert (=> d!22677 (= c!14167 lt!41128)))

(assert (=> d!22677 (= lt!41128 (containsKey!144 (toList!736 lt!40438) lt!40433))))

(assert (=> d!22677 (= (contains!747 lt!40438 lt!40433) lt!41126)))

(declare-fun b!86571 () Bool)

(declare-fun lt!41127 () Unit!2498)

(assert (=> b!86571 (= e!56403 lt!41127)))

(assert (=> b!86571 (= lt!41127 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40438) lt!40433))))

(assert (=> b!86571 (isDefined!93 (getValueByKey!141 (toList!736 lt!40438) lt!40433))))

(declare-fun b!86572 () Bool)

(declare-fun Unit!2549 () Unit!2498)

(assert (=> b!86572 (= e!56403 Unit!2549)))

(declare-fun b!86573 () Bool)

(assert (=> b!86573 (= e!56404 (isDefined!93 (getValueByKey!141 (toList!736 lt!40438) lt!40433)))))

(assert (= (and d!22677 c!14167) b!86571))

(assert (= (and d!22677 (not c!14167)) b!86572))

(assert (= (and d!22677 (not res!44482)) b!86573))

(declare-fun m!91731 () Bool)

(assert (=> d!22677 m!91731))

(declare-fun m!91733 () Bool)

(assert (=> b!86571 m!91733))

(assert (=> b!86571 m!90183))

(assert (=> b!86571 m!90183))

(declare-fun m!91735 () Bool)

(assert (=> b!86571 m!91735))

(assert (=> b!86573 m!90183))

(assert (=> b!86573 m!90183))

(assert (=> b!86573 m!91735))

(assert (=> d!22205 d!22677))

(assert (=> d!22205 d!22207))

(assert (=> d!22205 d!22211))

(declare-fun d!22679 () Bool)

(assert (=> d!22679 (isDefined!93 (getValueByKey!141 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun lt!41129 () Unit!2498)

(assert (=> d!22679 (= lt!41129 (choose!517 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun e!56405 () Bool)

(assert (=> d!22679 e!56405))

(declare-fun res!44483 () Bool)

(assert (=> d!22679 (=> (not res!44483) (not e!56405))))

(assert (=> d!22679 (= res!44483 (isStrictlySorted!285 (toList!736 call!8105)))))

(assert (=> d!22679 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!41129)))

(declare-fun b!86574 () Bool)

(assert (=> b!86574 (= e!56405 (containsKey!144 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22679 res!44483) b!86574))

(assert (=> d!22679 m!89569))

(assert (=> d!22679 m!90493))

(assert (=> d!22679 m!90493))

(assert (=> d!22679 m!90495))

(assert (=> d!22679 m!89569))

(declare-fun m!91737 () Bool)

(assert (=> d!22679 m!91737))

(declare-fun m!91739 () Bool)

(assert (=> d!22679 m!91739))

(assert (=> b!86574 m!89569))

(assert (=> b!86574 m!90489))

(assert (=> b!85930 d!22679))

(declare-fun d!22681 () Bool)

(assert (=> d!22681 (= (isDefined!93 (getValueByKey!141 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) (not (isEmpty!343 (getValueByKey!141 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun bs!3667 () Bool)

(assert (= bs!3667 d!22681))

(assert (=> bs!3667 m!90493))

(declare-fun m!91741 () Bool)

(assert (=> bs!3667 m!91741))

(assert (=> b!85930 d!22681))

(declare-fun b!86578 () Bool)

(declare-fun e!56407 () Option!147)

(assert (=> b!86578 (= e!56407 None!145)))

(declare-fun d!22683 () Bool)

(declare-fun c!14168 () Bool)

(assert (=> d!22683 (= c!14168 (and ((_ is Cons!1505) (toList!736 call!8105)) (= (_1!1105 (h!2096 (toList!736 call!8105))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun e!56406 () Option!147)

(assert (=> d!22683 (= (getValueByKey!141 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56406)))

(declare-fun b!86576 () Bool)

(assert (=> b!86576 (= e!56406 e!56407)))

(declare-fun c!14169 () Bool)

(assert (=> b!86576 (= c!14169 (and ((_ is Cons!1505) (toList!736 call!8105)) (not (= (_1!1105 (h!2096 (toList!736 call!8105))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun b!86577 () Bool)

(assert (=> b!86577 (= e!56407 (getValueByKey!141 (t!5222 (toList!736 call!8105)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86575 () Bool)

(assert (=> b!86575 (= e!56406 (Some!146 (_2!1105 (h!2096 (toList!736 call!8105)))))))

(assert (= (and d!22683 c!14168) b!86575))

(assert (= (and d!22683 (not c!14168)) b!86576))

(assert (= (and b!86576 c!14169) b!86577))

(assert (= (and b!86576 (not c!14169)) b!86578))

(assert (=> b!86577 m!89569))

(declare-fun m!91743 () Bool)

(assert (=> b!86577 m!91743))

(assert (=> b!85930 d!22683))

(declare-fun d!22685 () Bool)

(assert (=> d!22685 (= (apply!82 lt!40902 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40902) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3668 () Bool)

(assert (= bs!3668 d!22685))

(assert (=> bs!3668 m!91655))

(assert (=> bs!3668 m!91655))

(declare-fun m!91745 () Bool)

(assert (=> bs!3668 m!91745))

(assert (=> b!86158 d!22685))

(declare-fun b!86582 () Bool)

(declare-fun e!56409 () Option!147)

(assert (=> b!86582 (= e!56409 None!145)))

(declare-fun d!22687 () Bool)

(declare-fun c!14170 () Bool)

(assert (=> d!22687 (= c!14170 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40357))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40357)))) (_1!1105 lt!40192))))))

(declare-fun e!56408 () Option!147)

(assert (=> d!22687 (= (getValueByKey!141 (t!5222 (toList!736 lt!40357)) (_1!1105 lt!40192)) e!56408)))

(declare-fun b!86580 () Bool)

(assert (=> b!86580 (= e!56408 e!56409)))

(declare-fun c!14171 () Bool)

(assert (=> b!86580 (= c!14171 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40357))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40357)))) (_1!1105 lt!40192)))))))

(declare-fun b!86581 () Bool)

(assert (=> b!86581 (= e!56409 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40357))) (_1!1105 lt!40192)))))

(declare-fun b!86579 () Bool)

(assert (=> b!86579 (= e!56408 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40357))))))))

(assert (= (and d!22687 c!14170) b!86579))

(assert (= (and d!22687 (not c!14170)) b!86580))

(assert (= (and b!86580 c!14171) b!86581))

(assert (= (and b!86580 (not c!14171)) b!86582))

(declare-fun m!91747 () Bool)

(assert (=> b!86581 m!91747))

(assert (=> b!85802 d!22687))

(declare-fun d!22689 () Bool)

(assert (=> d!22689 (= (inRange!0 (index!3086 lt!40690) (mask!6365 newMap!16)) (and (bvsge (index!3086 lt!40690) #b00000000000000000000000000000000) (bvslt (index!3086 lt!40690) (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!85949 d!22689))

(declare-fun b!86583 () Bool)

(declare-fun e!56413 () List!1509)

(declare-fun call!8243 () List!1509)

(assert (=> b!86583 (= e!56413 call!8243)))

(declare-fun e!56412 () List!1509)

(declare-fun call!8244 () List!1509)

(declare-fun bm!8240 () Bool)

(declare-fun c!14175 () Bool)

(assert (=> bm!8240 (= call!8244 ($colon$colon!71 e!56412 (ite c!14175 (h!2096 (t!5222 (toList!736 lt!40187))) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182)))))))

(declare-fun c!14174 () Bool)

(assert (=> bm!8240 (= c!14174 c!14175)))

(declare-fun b!86584 () Bool)

(declare-fun c!14173 () Bool)

(assert (=> b!86584 (= c!14173 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40187))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187)))) (_1!1105 lt!40182))))))

(declare-fun e!56410 () List!1509)

(assert (=> b!86584 (= e!56413 e!56410)))

(declare-fun b!86585 () Bool)

(declare-fun e!56414 () Bool)

(declare-fun lt!41130 () List!1509)

(assert (=> b!86585 (= e!56414 (contains!749 lt!41130 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!86586 () Bool)

(declare-fun res!44484 () Bool)

(assert (=> b!86586 (=> (not res!44484) (not e!56414))))

(assert (=> b!86586 (= res!44484 (containsKey!144 lt!41130 (_1!1105 lt!40182)))))

(declare-fun bm!8241 () Bool)

(assert (=> bm!8241 (= call!8243 call!8244)))

(declare-fun b!86587 () Bool)

(assert (=> b!86587 (= e!56412 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 lt!40187))) (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(declare-fun c!14172 () Bool)

(declare-fun b!86588 () Bool)

(assert (=> b!86588 (= e!56412 (ite c!14172 (t!5222 (t!5222 (toList!736 lt!40187))) (ite c!14173 (Cons!1505 (h!2096 (t!5222 (toList!736 lt!40187))) (t!5222 (t!5222 (toList!736 lt!40187)))) Nil!1506)))))

(declare-fun b!86589 () Bool)

(declare-fun e!56411 () List!1509)

(assert (=> b!86589 (= e!56411 call!8244)))

(declare-fun bm!8242 () Bool)

(declare-fun call!8245 () List!1509)

(assert (=> bm!8242 (= call!8245 call!8243)))

(declare-fun d!22691 () Bool)

(assert (=> d!22691 e!56414))

(declare-fun res!44485 () Bool)

(assert (=> d!22691 (=> (not res!44485) (not e!56414))))

(assert (=> d!22691 (= res!44485 (isStrictlySorted!285 lt!41130))))

(assert (=> d!22691 (= lt!41130 e!56411)))

(assert (=> d!22691 (= c!14175 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40187))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187)))) (_1!1105 lt!40182))))))

(assert (=> d!22691 (isStrictlySorted!285 (t!5222 (toList!736 lt!40187)))))

(assert (=> d!22691 (= (insertStrictlySorted!61 (t!5222 (toList!736 lt!40187)) (_1!1105 lt!40182) (_2!1105 lt!40182)) lt!41130)))

(declare-fun b!86590 () Bool)

(assert (=> b!86590 (= e!56410 call!8245)))

(declare-fun b!86591 () Bool)

(assert (=> b!86591 (= e!56411 e!56413)))

(assert (=> b!86591 (= c!14172 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40187))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187)))) (_1!1105 lt!40182))))))

(declare-fun b!86592 () Bool)

(assert (=> b!86592 (= e!56410 call!8245)))

(assert (= (and d!22691 c!14175) b!86589))

(assert (= (and d!22691 (not c!14175)) b!86591))

(assert (= (and b!86591 c!14172) b!86583))

(assert (= (and b!86591 (not c!14172)) b!86584))

(assert (= (and b!86584 c!14173) b!86590))

(assert (= (and b!86584 (not c!14173)) b!86592))

(assert (= (or b!86590 b!86592) bm!8242))

(assert (= (or b!86583 bm!8242) bm!8241))

(assert (= (or b!86589 bm!8241) bm!8240))

(assert (= (and bm!8240 c!14174) b!86587))

(assert (= (and bm!8240 (not c!14174)) b!86588))

(assert (= (and d!22691 res!44485) b!86586))

(assert (= (and b!86586 res!44484) b!86585))

(declare-fun m!91749 () Bool)

(assert (=> b!86585 m!91749))

(declare-fun m!91751 () Bool)

(assert (=> b!86586 m!91751))

(declare-fun m!91753 () Bool)

(assert (=> bm!8240 m!91753))

(declare-fun m!91755 () Bool)

(assert (=> d!22691 m!91755))

(declare-fun m!91757 () Bool)

(assert (=> d!22691 m!91757))

(declare-fun m!91759 () Bool)

(assert (=> b!86587 m!91759))

(assert (=> b!85743 d!22691))

(declare-fun b!86596 () Bool)

(declare-fun e!56416 () Option!147)

(assert (=> b!86596 (= e!56416 None!145)))

(declare-fun d!22693 () Bool)

(declare-fun c!14176 () Bool)

(assert (=> d!22693 (= c!14176 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40376))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40376)))) (_1!1105 lt!40197))))))

(declare-fun e!56415 () Option!147)

(assert (=> d!22693 (= (getValueByKey!141 (t!5222 (toList!736 lt!40376)) (_1!1105 lt!40197)) e!56415)))

(declare-fun b!86594 () Bool)

(assert (=> b!86594 (= e!56415 e!56416)))

(declare-fun c!14177 () Bool)

(assert (=> b!86594 (= c!14177 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40376))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40376)))) (_1!1105 lt!40197)))))))

(declare-fun b!86595 () Bool)

(assert (=> b!86595 (= e!56416 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40376))) (_1!1105 lt!40197)))))

(declare-fun b!86593 () Bool)

(assert (=> b!86593 (= e!56415 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40376))))))))

(assert (= (and d!22693 c!14176) b!86593))

(assert (= (and d!22693 (not c!14176)) b!86594))

(assert (= (and b!86594 c!14177) b!86595))

(assert (= (and b!86594 (not c!14177)) b!86596))

(declare-fun m!91761 () Bool)

(assert (=> b!86595 m!91761))

(assert (=> b!85676 d!22693))

(declare-fun d!22695 () Bool)

(declare-fun res!44486 () Bool)

(declare-fun e!56417 () Bool)

(assert (=> d!22695 (=> res!44486 e!56417)))

(assert (=> d!22695 (= res!44486 (and ((_ is Cons!1505) (toList!736 lt!40364)) (= (_1!1105 (h!2096 (toList!736 lt!40364))) (_1!1105 lt!40192))))))

(assert (=> d!22695 (= (containsKey!144 (toList!736 lt!40364) (_1!1105 lt!40192)) e!56417)))

(declare-fun b!86597 () Bool)

(declare-fun e!56418 () Bool)

(assert (=> b!86597 (= e!56417 e!56418)))

(declare-fun res!44487 () Bool)

(assert (=> b!86597 (=> (not res!44487) (not e!56418))))

(assert (=> b!86597 (= res!44487 (and (or (not ((_ is Cons!1505) (toList!736 lt!40364))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40364))) (_1!1105 lt!40192))) ((_ is Cons!1505) (toList!736 lt!40364)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40364))) (_1!1105 lt!40192))))))

(declare-fun b!86598 () Bool)

(assert (=> b!86598 (= e!56418 (containsKey!144 (t!5222 (toList!736 lt!40364)) (_1!1105 lt!40192)))))

(assert (= (and d!22695 (not res!44486)) b!86597))

(assert (= (and b!86597 res!44487) b!86598))

(declare-fun m!91763 () Bool)

(assert (=> b!86598 m!91763))

(assert (=> d!22367 d!22695))

(declare-fun b!86602 () Bool)

(declare-fun e!56420 () Option!147)

(assert (=> b!86602 (= e!56420 None!145)))

(declare-fun d!22697 () Bool)

(declare-fun c!14178 () Bool)

(assert (=> d!22697 (= c!14178 (and ((_ is Cons!1505) (toList!736 lt!40931)) (= (_1!1105 (h!2096 (toList!736 lt!40931))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56419 () Option!147)

(assert (=> d!22697 (= (getValueByKey!141 (toList!736 lt!40931) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56419)))

(declare-fun b!86600 () Bool)

(assert (=> b!86600 (= e!56419 e!56420)))

(declare-fun c!14179 () Bool)

(assert (=> b!86600 (= c!14179 (and ((_ is Cons!1505) (toList!736 lt!40931)) (not (= (_1!1105 (h!2096 (toList!736 lt!40931))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86601 () Bool)

(assert (=> b!86601 (= e!56420 (getValueByKey!141 (t!5222 (toList!736 lt!40931)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86599 () Bool)

(assert (=> b!86599 (= e!56419 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40931)))))))

(assert (= (and d!22697 c!14178) b!86599))

(assert (= (and d!22697 (not c!14178)) b!86600))

(assert (= (and b!86600 c!14179) b!86601))

(assert (= (and b!86600 (not c!14179)) b!86602))

(declare-fun m!91765 () Bool)

(assert (=> b!86601 m!91765))

(assert (=> b!86186 d!22697))

(declare-fun d!22699 () Bool)

(declare-fun e!56422 () Bool)

(assert (=> d!22699 e!56422))

(declare-fun res!44488 () Bool)

(assert (=> d!22699 (=> res!44488 e!56422)))

(declare-fun lt!41132 () Bool)

(assert (=> d!22699 (= res!44488 (not lt!41132))))

(declare-fun lt!41134 () Bool)

(assert (=> d!22699 (= lt!41132 lt!41134)))

(declare-fun lt!41131 () Unit!2498)

(declare-fun e!56421 () Unit!2498)

(assert (=> d!22699 (= lt!41131 e!56421)))

(declare-fun c!14180 () Bool)

(assert (=> d!22699 (= c!14180 lt!41134)))

(assert (=> d!22699 (= lt!41134 (containsKey!144 (toList!736 lt!40676) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22699 (= (contains!747 lt!40676 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41132)))

(declare-fun b!86603 () Bool)

(declare-fun lt!41133 () Unit!2498)

(assert (=> b!86603 (= e!56421 lt!41133)))

(assert (=> b!86603 (= lt!41133 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40676) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!86603 (isDefined!93 (getValueByKey!141 (toList!736 lt!40676) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86604 () Bool)

(declare-fun Unit!2550 () Unit!2498)

(assert (=> b!86604 (= e!56421 Unit!2550)))

(declare-fun b!86605 () Bool)

(assert (=> b!86605 (= e!56422 (isDefined!93 (getValueByKey!141 (toList!736 lt!40676) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!22699 c!14180) b!86603))

(assert (= (and d!22699 (not c!14180)) b!86604))

(assert (= (and d!22699 (not res!44488)) b!86605))

(declare-fun m!91767 () Bool)

(assert (=> d!22699 m!91767))

(declare-fun m!91769 () Bool)

(assert (=> b!86603 m!91769))

(assert (=> b!86603 m!90477))

(assert (=> b!86603 m!90477))

(declare-fun m!91771 () Bool)

(assert (=> b!86603 m!91771))

(assert (=> b!86605 m!90477))

(assert (=> b!86605 m!90477))

(assert (=> b!86605 m!91771))

(assert (=> d!22305 d!22699))

(declare-fun b!86609 () Bool)

(declare-fun e!56424 () Option!147)

(assert (=> b!86609 (= e!56424 None!145)))

(declare-fun d!22701 () Bool)

(declare-fun c!14181 () Bool)

(assert (=> d!22701 (= c!14181 (and ((_ is Cons!1505) lt!40674) (= (_1!1105 (h!2096 lt!40674)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!56423 () Option!147)

(assert (=> d!22701 (= (getValueByKey!141 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56423)))

(declare-fun b!86607 () Bool)

(assert (=> b!86607 (= e!56423 e!56424)))

(declare-fun c!14182 () Bool)

(assert (=> b!86607 (= c!14182 (and ((_ is Cons!1505) lt!40674) (not (= (_1!1105 (h!2096 lt!40674)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!86608 () Bool)

(assert (=> b!86608 (= e!56424 (getValueByKey!141 (t!5222 lt!40674) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86606 () Bool)

(assert (=> b!86606 (= e!56423 (Some!146 (_2!1105 (h!2096 lt!40674))))))

(assert (= (and d!22701 c!14181) b!86606))

(assert (= (and d!22701 (not c!14181)) b!86607))

(assert (= (and b!86607 c!14182) b!86608))

(assert (= (and b!86607 (not c!14182)) b!86609))

(declare-fun m!91773 () Bool)

(assert (=> b!86608 m!91773))

(assert (=> d!22305 d!22701))

(declare-fun d!22703 () Bool)

(assert (=> d!22703 (= (getValueByKey!141 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41135 () Unit!2498)

(assert (=> d!22703 (= lt!41135 (choose!511 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56425 () Bool)

(assert (=> d!22703 e!56425))

(declare-fun res!44489 () Bool)

(assert (=> d!22703 (=> (not res!44489) (not e!56425))))

(assert (=> d!22703 (= res!44489 (isStrictlySorted!285 lt!40674))))

(assert (=> d!22703 (= (lemmaContainsTupThenGetReturnValue!58 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41135)))

(declare-fun b!86610 () Bool)

(declare-fun res!44490 () Bool)

(assert (=> b!86610 (=> (not res!44490) (not e!56425))))

(assert (=> b!86610 (= res!44490 (containsKey!144 lt!40674 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86611 () Bool)

(assert (=> b!86611 (= e!56425 (contains!749 lt!40674 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!22703 res!44489) b!86610))

(assert (= (and b!86610 res!44490) b!86611))

(assert (=> d!22703 m!90471))

(declare-fun m!91775 () Bool)

(assert (=> d!22703 m!91775))

(declare-fun m!91777 () Bool)

(assert (=> d!22703 m!91777))

(declare-fun m!91779 () Bool)

(assert (=> b!86610 m!91779))

(declare-fun m!91781 () Bool)

(assert (=> b!86611 m!91781))

(assert (=> d!22305 d!22703))

(declare-fun b!86612 () Bool)

(declare-fun e!56429 () List!1509)

(declare-fun call!8246 () List!1509)

(assert (=> b!86612 (= e!56429 call!8246)))

(declare-fun c!14186 () Bool)

(declare-fun bm!8243 () Bool)

(declare-fun call!8247 () List!1509)

(declare-fun e!56428 () List!1509)

(assert (=> bm!8243 (= call!8247 ($colon$colon!71 e!56428 (ite c!14186 (h!2096 (toList!736 call!8030)) (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!14185 () Bool)

(assert (=> bm!8243 (= c!14185 c!14186)))

(declare-fun c!14184 () Bool)

(declare-fun b!86613 () Bool)

(assert (=> b!86613 (= c!14184 (and ((_ is Cons!1505) (toList!736 call!8030)) (bvsgt (_1!1105 (h!2096 (toList!736 call!8030))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!56426 () List!1509)

(assert (=> b!86613 (= e!56429 e!56426)))

(declare-fun e!56430 () Bool)

(declare-fun lt!41136 () List!1509)

(declare-fun b!86614 () Bool)

(assert (=> b!86614 (= e!56430 (contains!749 lt!41136 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!86615 () Bool)

(declare-fun res!44491 () Bool)

(assert (=> b!86615 (=> (not res!44491) (not e!56430))))

(assert (=> b!86615 (= res!44491 (containsKey!144 lt!41136 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!8244 () Bool)

(assert (=> bm!8244 (= call!8246 call!8247)))

(declare-fun b!86616 () Bool)

(assert (=> b!86616 (= e!56428 (insertStrictlySorted!61 (t!5222 (toList!736 call!8030)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86617 () Bool)

(declare-fun c!14183 () Bool)

(assert (=> b!86617 (= e!56428 (ite c!14183 (t!5222 (toList!736 call!8030)) (ite c!14184 (Cons!1505 (h!2096 (toList!736 call!8030)) (t!5222 (toList!736 call!8030))) Nil!1506)))))

(declare-fun b!86618 () Bool)

(declare-fun e!56427 () List!1509)

(assert (=> b!86618 (= e!56427 call!8247)))

(declare-fun bm!8245 () Bool)

(declare-fun call!8248 () List!1509)

(assert (=> bm!8245 (= call!8248 call!8246)))

(declare-fun d!22705 () Bool)

(assert (=> d!22705 e!56430))

(declare-fun res!44492 () Bool)

(assert (=> d!22705 (=> (not res!44492) (not e!56430))))

(assert (=> d!22705 (= res!44492 (isStrictlySorted!285 lt!41136))))

(assert (=> d!22705 (= lt!41136 e!56427)))

(assert (=> d!22705 (= c!14186 (and ((_ is Cons!1505) (toList!736 call!8030)) (bvslt (_1!1105 (h!2096 (toList!736 call!8030))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!22705 (isStrictlySorted!285 (toList!736 call!8030))))

(assert (=> d!22705 (= (insertStrictlySorted!61 (toList!736 call!8030) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41136)))

(declare-fun b!86619 () Bool)

(assert (=> b!86619 (= e!56426 call!8248)))

(declare-fun b!86620 () Bool)

(assert (=> b!86620 (= e!56427 e!56429)))

(assert (=> b!86620 (= c!14183 (and ((_ is Cons!1505) (toList!736 call!8030)) (= (_1!1105 (h!2096 (toList!736 call!8030))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!86621 () Bool)

(assert (=> b!86621 (= e!56426 call!8248)))

(assert (= (and d!22705 c!14186) b!86618))

(assert (= (and d!22705 (not c!14186)) b!86620))

(assert (= (and b!86620 c!14183) b!86612))

(assert (= (and b!86620 (not c!14183)) b!86613))

(assert (= (and b!86613 c!14184) b!86619))

(assert (= (and b!86613 (not c!14184)) b!86621))

(assert (= (or b!86619 b!86621) bm!8245))

(assert (= (or b!86612 bm!8245) bm!8244))

(assert (= (or b!86618 bm!8244) bm!8243))

(assert (= (and bm!8243 c!14185) b!86616))

(assert (= (and bm!8243 (not c!14185)) b!86617))

(assert (= (and d!22705 res!44492) b!86615))

(assert (= (and b!86615 res!44491) b!86614))

(declare-fun m!91783 () Bool)

(assert (=> b!86614 m!91783))

(declare-fun m!91785 () Bool)

(assert (=> b!86615 m!91785))

(declare-fun m!91787 () Bool)

(assert (=> bm!8243 m!91787))

(declare-fun m!91789 () Bool)

(assert (=> d!22705 m!91789))

(declare-fun m!91791 () Bool)

(assert (=> d!22705 m!91791))

(declare-fun m!91793 () Bool)

(assert (=> b!86616 m!91793))

(assert (=> d!22305 d!22705))

(declare-fun d!22707 () Bool)

(assert (=> d!22707 (= (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40423)) (v!2654 (getValueByKey!141 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40423)))))

(assert (=> d!22201 d!22707))

(declare-fun b!86625 () Bool)

(declare-fun e!56432 () Option!147)

(assert (=> b!86625 (= e!56432 None!145)))

(declare-fun d!22709 () Bool)

(declare-fun c!14187 () Bool)

(assert (=> d!22709 (= c!14187 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40423)))))

(declare-fun e!56431 () Option!147)

(assert (=> d!22709 (= (getValueByKey!141 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40423) e!56431)))

(declare-fun b!86623 () Bool)

(assert (=> b!86623 (= e!56431 e!56432)))

(declare-fun c!14188 () Bool)

(assert (=> b!86623 (= c!14188 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (not (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40423))))))

(declare-fun b!86624 () Bool)

(assert (=> b!86624 (= e!56432 (getValueByKey!141 (t!5222 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!40423))))

(declare-fun b!86622 () Bool)

(assert (=> b!86622 (= e!56431 (Some!146 (_2!1105 (h!2096 (toList!736 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(assert (= (and d!22709 c!14187) b!86622))

(assert (= (and d!22709 (not c!14187)) b!86623))

(assert (= (and b!86623 c!14188) b!86624))

(assert (= (and b!86623 (not c!14188)) b!86625))

(declare-fun m!91795 () Bool)

(assert (=> b!86624 m!91795))

(assert (=> d!22201 d!22709))

(declare-fun d!22711 () Bool)

(assert (=> d!22711 (= ($colon$colon!71 e!56070 (ite c!14006 (h!2096 (toList!736 lt!40188)) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192)))) (Cons!1505 (ite c!14006 (h!2096 (toList!736 lt!40188)) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))) e!56070))))

(assert (=> bm!8164 d!22711))

(declare-fun d!22713 () Bool)

(declare-fun res!44493 () Bool)

(declare-fun e!56433 () Bool)

(assert (=> d!22713 (=> res!44493 e!56433)))

(assert (=> d!22713 (= res!44493 (and ((_ is Cons!1505) lt!40754) (= (_1!1105 (h!2096 lt!40754)) (_1!1105 lt!40192))))))

(assert (=> d!22713 (= (containsKey!144 lt!40754 (_1!1105 lt!40192)) e!56433)))

(declare-fun b!86626 () Bool)

(declare-fun e!56434 () Bool)

(assert (=> b!86626 (= e!56433 e!56434)))

(declare-fun res!44494 () Bool)

(assert (=> b!86626 (=> (not res!44494) (not e!56434))))

(assert (=> b!86626 (= res!44494 (and (or (not ((_ is Cons!1505) lt!40754)) (bvsle (_1!1105 (h!2096 lt!40754)) (_1!1105 lt!40192))) ((_ is Cons!1505) lt!40754) (bvslt (_1!1105 (h!2096 lt!40754)) (_1!1105 lt!40192))))))

(declare-fun b!86627 () Bool)

(assert (=> b!86627 (= e!56434 (containsKey!144 (t!5222 lt!40754) (_1!1105 lt!40192)))))

(assert (= (and d!22713 (not res!44493)) b!86626))

(assert (= (and b!86626 res!44494) b!86627))

(declare-fun m!91797 () Bool)

(assert (=> b!86627 m!91797))

(assert (=> b!86042 d!22713))

(declare-fun d!22715 () Bool)

(declare-fun lt!41137 () Bool)

(assert (=> d!22715 (= lt!41137 (select (content!90 (t!5222 (toList!736 lt!40372))) lt!40182))))

(declare-fun e!56436 () Bool)

(assert (=> d!22715 (= lt!41137 e!56436)))

(declare-fun res!44496 () Bool)

(assert (=> d!22715 (=> (not res!44496) (not e!56436))))

(assert (=> d!22715 (= res!44496 ((_ is Cons!1505) (t!5222 (toList!736 lt!40372))))))

(assert (=> d!22715 (= (contains!749 (t!5222 (toList!736 lt!40372)) lt!40182) lt!41137)))

(declare-fun b!86628 () Bool)

(declare-fun e!56435 () Bool)

(assert (=> b!86628 (= e!56436 e!56435)))

(declare-fun res!44495 () Bool)

(assert (=> b!86628 (=> res!44495 e!56435)))

(assert (=> b!86628 (= res!44495 (= (h!2096 (t!5222 (toList!736 lt!40372))) lt!40182))))

(declare-fun b!86629 () Bool)

(assert (=> b!86629 (= e!56435 (contains!749 (t!5222 (t!5222 (toList!736 lt!40372))) lt!40182))))

(assert (= (and d!22715 res!44496) b!86628))

(assert (= (and b!86628 (not res!44495)) b!86629))

(declare-fun m!91799 () Bool)

(assert (=> d!22715 m!91799))

(declare-fun m!91801 () Bool)

(assert (=> d!22715 m!91801))

(declare-fun m!91803 () Bool)

(assert (=> b!86629 m!91803))

(assert (=> b!85929 d!22715))

(declare-fun d!22717 () Bool)

(declare-fun res!44497 () Bool)

(declare-fun e!56437 () Bool)

(assert (=> d!22717 (=> res!44497 e!56437)))

(assert (=> d!22717 (= res!44497 (and ((_ is Cons!1505) (toList!736 lt!40439)) (= (_1!1105 (h!2096 (toList!736 lt!40439))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22717 (= (containsKey!144 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56437)))

(declare-fun b!86630 () Bool)

(declare-fun e!56438 () Bool)

(assert (=> b!86630 (= e!56437 e!56438)))

(declare-fun res!44498 () Bool)

(assert (=> b!86630 (=> (not res!44498) (not e!56438))))

(assert (=> b!86630 (= res!44498 (and (or (not ((_ is Cons!1505) (toList!736 lt!40439))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40439))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1505) (toList!736 lt!40439)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40439))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!86631 () Bool)

(assert (=> b!86631 (= e!56438 (containsKey!144 (t!5222 (toList!736 lt!40439)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22717 (not res!44497)) b!86630))

(assert (= (and b!86630 res!44498) b!86631))

(assert (=> b!86631 m!89759))

(declare-fun m!91805 () Bool)

(assert (=> b!86631 m!91805))

(assert (=> d!22361 d!22717))

(declare-fun d!22719 () Bool)

(declare-fun lt!41138 () Bool)

(assert (=> d!22719 (= lt!41138 (select (content!90 lt!40326) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun e!56440 () Bool)

(assert (=> d!22719 (= lt!41138 e!56440)))

(declare-fun res!44500 () Bool)

(assert (=> d!22719 (=> (not res!44500) (not e!56440))))

(assert (=> d!22719 (= res!44500 ((_ is Cons!1505) lt!40326))))

(assert (=> d!22719 (= (contains!749 lt!40326 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) lt!41138)))

(declare-fun b!86632 () Bool)

(declare-fun e!56439 () Bool)

(assert (=> b!86632 (= e!56440 e!56439)))

(declare-fun res!44499 () Bool)

(assert (=> b!86632 (=> res!44499 e!56439)))

(assert (=> b!86632 (= res!44499 (= (h!2096 lt!40326) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!86633 () Bool)

(assert (=> b!86633 (= e!56439 (contains!749 (t!5222 lt!40326) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22719 res!44500) b!86632))

(assert (= (and b!86632 (not res!44499)) b!86633))

(declare-fun m!91807 () Bool)

(assert (=> d!22719 m!91807))

(declare-fun m!91809 () Bool)

(assert (=> d!22719 m!91809))

(declare-fun m!91811 () Bool)

(assert (=> b!86633 m!91811))

(assert (=> b!85833 d!22719))

(declare-fun d!22721 () Bool)

(declare-fun lt!41139 () Bool)

(assert (=> d!22721 (= lt!41139 (select (content!90 (toList!736 lt!40710)) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56442 () Bool)

(assert (=> d!22721 (= lt!41139 e!56442)))

(declare-fun res!44502 () Bool)

(assert (=> d!22721 (=> (not res!44502) (not e!56442))))

(assert (=> d!22721 (= res!44502 ((_ is Cons!1505) (toList!736 lt!40710)))))

(assert (=> d!22721 (= (contains!749 (toList!736 lt!40710) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41139)))

(declare-fun b!86634 () Bool)

(declare-fun e!56441 () Bool)

(assert (=> b!86634 (= e!56442 e!56441)))

(declare-fun res!44501 () Bool)

(assert (=> b!86634 (=> res!44501 e!56441)))

(assert (=> b!86634 (= res!44501 (= (h!2096 (toList!736 lt!40710)) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86635 () Bool)

(assert (=> b!86635 (= e!56441 (contains!749 (t!5222 (toList!736 lt!40710)) (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (= (and d!22721 res!44502) b!86634))

(assert (= (and b!86634 (not res!44501)) b!86635))

(declare-fun m!91813 () Bool)

(assert (=> d!22721 m!91813))

(declare-fun m!91815 () Bool)

(assert (=> d!22721 m!91815))

(declare-fun m!91817 () Bool)

(assert (=> b!86635 m!91817))

(assert (=> b!85982 d!22721))

(declare-fun d!22723 () Bool)

(declare-fun res!44503 () Bool)

(declare-fun e!56443 () Bool)

(assert (=> d!22723 (=> res!44503 e!56443)))

(assert (=> d!22723 (= res!44503 (or ((_ is Nil!1506) lt!40736) ((_ is Nil!1506) (t!5222 lt!40736))))))

(assert (=> d!22723 (= (isStrictlySorted!285 lt!40736) e!56443)))

(declare-fun b!86636 () Bool)

(declare-fun e!56444 () Bool)

(assert (=> b!86636 (= e!56443 e!56444)))

(declare-fun res!44504 () Bool)

(assert (=> b!86636 (=> (not res!44504) (not e!56444))))

(assert (=> b!86636 (= res!44504 (bvslt (_1!1105 (h!2096 lt!40736)) (_1!1105 (h!2096 (t!5222 lt!40736)))))))

(declare-fun b!86637 () Bool)

(assert (=> b!86637 (= e!56444 (isStrictlySorted!285 (t!5222 lt!40736)))))

(assert (= (and d!22723 (not res!44503)) b!86636))

(assert (= (and b!86636 res!44504) b!86637))

(declare-fun m!91819 () Bool)

(assert (=> b!86637 m!91819))

(assert (=> d!22359 d!22723))

(declare-fun d!22725 () Bool)

(declare-fun res!44505 () Bool)

(declare-fun e!56445 () Bool)

(assert (=> d!22725 (=> res!44505 e!56445)))

(assert (=> d!22725 (= res!44505 (or ((_ is Nil!1506) (toList!736 lt!40188)) ((_ is Nil!1506) (t!5222 (toList!736 lt!40188)))))))

(assert (=> d!22725 (= (isStrictlySorted!285 (toList!736 lt!40188)) e!56445)))

(declare-fun b!86638 () Bool)

(declare-fun e!56446 () Bool)

(assert (=> b!86638 (= e!56445 e!56446)))

(declare-fun res!44506 () Bool)

(assert (=> b!86638 (=> (not res!44506) (not e!56446))))

(assert (=> b!86638 (= res!44506 (bvslt (_1!1105 (h!2096 (toList!736 lt!40188))) (_1!1105 (h!2096 (t!5222 (toList!736 lt!40188))))))))

(declare-fun b!86639 () Bool)

(assert (=> b!86639 (= e!56446 (isStrictlySorted!285 (t!5222 (toList!736 lt!40188))))))

(assert (= (and d!22725 (not res!44505)) b!86638))

(assert (= (and b!86638 res!44506) b!86639))

(declare-fun m!91821 () Bool)

(assert (=> b!86639 m!91821))

(assert (=> d!22359 d!22725))

(declare-fun b!86640 () Bool)

(declare-fun e!56450 () ListLongMap!1441)

(assert (=> b!86640 (= e!56450 (ListLongMap!1442 Nil!1506))))

(declare-fun b!86641 () Bool)

(assert (=> b!86641 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> b!86641 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522))))))

(declare-fun lt!41146 () ListLongMap!1441)

(declare-fun e!56449 () Bool)

(assert (=> b!86641 (= e!56449 (= (apply!82 lt!41146 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86642 () Bool)

(declare-fun e!56453 () Bool)

(assert (=> b!86642 (= e!56453 (= lt!41146 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16))))))

(declare-fun b!86643 () Bool)

(declare-fun res!44509 () Bool)

(declare-fun e!56448 () Bool)

(assert (=> b!86643 (=> (not res!44509) (not e!56448))))

(assert (=> b!86643 (= res!44509 (not (contains!747 lt!41146 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86644 () Bool)

(declare-fun e!56452 () Bool)

(assert (=> b!86644 (= e!56452 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86644 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86645 () Bool)

(declare-fun e!56451 () ListLongMap!1441)

(assert (=> b!86645 (= e!56450 e!56451)))

(declare-fun c!14192 () Bool)

(assert (=> b!86645 (= c!14192 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86646 () Bool)

(declare-fun lt!41140 () Unit!2498)

(declare-fun lt!41145 () Unit!2498)

(assert (=> b!86646 (= lt!41140 lt!41145)))

(declare-fun lt!41141 () ListLongMap!1441)

(declare-fun lt!41144 () (_ BitVec 64))

(declare-fun lt!41143 () V!3025)

(declare-fun lt!41142 () (_ BitVec 64))

(assert (=> b!86646 (not (contains!747 (+!107 lt!41141 (tuple2!2189 lt!41144 lt!41143)) lt!41142))))

(assert (=> b!86646 (= lt!41145 (addStillNotContains!33 lt!41141 lt!41144 lt!41143 lt!41142))))

(assert (=> b!86646 (= lt!41142 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86646 (= lt!41143 (get!1204 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86646 (= lt!41144 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!8249 () ListLongMap!1441)

(assert (=> b!86646 (= lt!41141 call!8249)))

(assert (=> b!86646 (= e!56451 (+!107 call!8249 (tuple2!2189 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (get!1204 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!8246 () Bool)

(assert (=> bm!8246 (= call!8249 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16)))))

(declare-fun b!86647 () Bool)

(assert (=> b!86647 (= e!56453 (isEmpty!341 lt!41146))))

(declare-fun d!22727 () Bool)

(assert (=> d!22727 e!56448))

(declare-fun res!44508 () Bool)

(assert (=> d!22727 (=> (not res!44508) (not e!56448))))

(assert (=> d!22727 (= res!44508 (not (contains!747 lt!41146 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22727 (= lt!41146 e!56450)))

(declare-fun c!14189 () Bool)

(assert (=> d!22727 (= c!14189 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22727 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22727 (= (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522) (mask!6365 newMap!16) (ite c!13888 (ite c!13892 lt!40514 lt!40530) (extraKeys!2176 newMap!16)) (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41146)))

(declare-fun b!86648 () Bool)

(declare-fun e!56447 () Bool)

(assert (=> b!86648 (= e!56447 e!56453)))

(declare-fun c!14191 () Bool)

(assert (=> b!86648 (= c!14191 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86649 () Bool)

(assert (=> b!86649 (= e!56448 e!56447)))

(declare-fun c!14190 () Bool)

(assert (=> b!86649 (= c!14190 e!56452)))

(declare-fun res!44507 () Bool)

(assert (=> b!86649 (=> (not res!44507) (not e!56452))))

(assert (=> b!86649 (= res!44507 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86650 () Bool)

(assert (=> b!86650 (= e!56451 call!8249)))

(declare-fun b!86651 () Bool)

(assert (=> b!86651 (= e!56447 e!56449)))

(assert (=> b!86651 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun res!44510 () Bool)

(assert (=> b!86651 (= res!44510 (contains!747 lt!41146 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86651 (=> (not res!44510) (not e!56449))))

(assert (= (and d!22727 c!14189) b!86640))

(assert (= (and d!22727 (not c!14189)) b!86645))

(assert (= (and b!86645 c!14192) b!86646))

(assert (= (and b!86645 (not c!14192)) b!86650))

(assert (= (or b!86646 b!86650) bm!8246))

(assert (= (and d!22727 res!44508) b!86643))

(assert (= (and b!86643 res!44509) b!86649))

(assert (= (and b!86649 res!44507) b!86644))

(assert (= (and b!86649 c!14190) b!86651))

(assert (= (and b!86649 (not c!14190)) b!86648))

(assert (= (and b!86651 res!44510) b!86641))

(assert (= (and b!86648 c!14191) b!86642))

(assert (= (and b!86648 (not c!14191)) b!86647))

(declare-fun b_lambda!3843 () Bool)

(assert (=> (not b_lambda!3843) (not b!86641)))

(assert (=> b!86641 t!5233))

(declare-fun b_and!5237 () Bool)

(assert (= b_and!5233 (and (=> t!5233 result!2923) b_and!5237)))

(assert (=> b!86641 t!5235))

(declare-fun b_and!5239 () Bool)

(assert (= b_and!5235 (and (=> t!5235 result!2925) b_and!5239)))

(declare-fun b_lambda!3845 () Bool)

(assert (=> (not b_lambda!3845) (not b!86646)))

(assert (=> b!86646 t!5233))

(declare-fun b_and!5241 () Bool)

(assert (= b_and!5237 (and (=> t!5233 result!2923) b_and!5241)))

(assert (=> b!86646 t!5235))

(declare-fun b_and!5243 () Bool)

(assert (= b_and!5239 (and (=> t!5235 result!2925) b_and!5243)))

(declare-fun m!91823 () Bool)

(assert (=> b!86642 m!91823))

(declare-fun m!91825 () Bool)

(assert (=> b!86643 m!91825))

(declare-fun m!91827 () Bool)

(assert (=> b!86647 m!91827))

(assert (=> b!86651 m!90065))

(assert (=> b!86651 m!90065))

(declare-fun m!91829 () Bool)

(assert (=> b!86651 m!91829))

(declare-fun m!91831 () Bool)

(assert (=> d!22727 m!91831))

(assert (=> d!22727 m!90203))

(assert (=> bm!8246 m!91823))

(assert (=> b!86641 m!90065))

(assert (=> b!86641 m!90065))

(declare-fun m!91833 () Bool)

(assert (=> b!86641 m!91833))

(assert (=> b!86641 m!90871))

(assert (=> b!86641 m!90319))

(assert (=> b!86641 m!90873))

(assert (=> b!86641 m!90871))

(assert (=> b!86641 m!90319))

(declare-fun m!91835 () Bool)

(assert (=> b!86646 m!91835))

(assert (=> b!86646 m!90065))

(declare-fun m!91837 () Bool)

(assert (=> b!86646 m!91837))

(assert (=> b!86646 m!90871))

(assert (=> b!86646 m!90319))

(assert (=> b!86646 m!90873))

(assert (=> b!86646 m!91837))

(declare-fun m!91839 () Bool)

(assert (=> b!86646 m!91839))

(assert (=> b!86646 m!90319))

(declare-fun m!91841 () Bool)

(assert (=> b!86646 m!91841))

(assert (=> b!86646 m!90871))

(assert (=> b!86644 m!90065))

(assert (=> b!86644 m!90065))

(assert (=> b!86644 m!90073))

(assert (=> b!86645 m!90065))

(assert (=> b!86645 m!90065))

(assert (=> b!86645 m!90073))

(assert (=> bm!8193 d!22727))

(assert (=> d!22323 d!22321))

(declare-fun d!22729 () Bool)

(assert (=> d!22729 (= (getValueByKey!141 lt!40351 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(assert (=> d!22729 true))

(declare-fun _$22!419 () Unit!2498)

(assert (=> d!22729 (= (choose!511 lt!40351 (_1!1105 lt!40197) (_2!1105 lt!40197)) _$22!419)))

(declare-fun bs!3669 () Bool)

(assert (= bs!3669 d!22729))

(assert (=> bs!3669 m!89811))

(assert (=> d!22323 d!22729))

(declare-fun d!22731 () Bool)

(declare-fun res!44511 () Bool)

(declare-fun e!56454 () Bool)

(assert (=> d!22731 (=> res!44511 e!56454)))

(assert (=> d!22731 (= res!44511 (or ((_ is Nil!1506) lt!40351) ((_ is Nil!1506) (t!5222 lt!40351))))))

(assert (=> d!22731 (= (isStrictlySorted!285 lt!40351) e!56454)))

(declare-fun b!86652 () Bool)

(declare-fun e!56455 () Bool)

(assert (=> b!86652 (= e!56454 e!56455)))

(declare-fun res!44512 () Bool)

(assert (=> b!86652 (=> (not res!44512) (not e!56455))))

(assert (=> b!86652 (= res!44512 (bvslt (_1!1105 (h!2096 lt!40351)) (_1!1105 (h!2096 (t!5222 lt!40351)))))))

(declare-fun b!86653 () Bool)

(assert (=> b!86653 (= e!56455 (isStrictlySorted!285 (t!5222 lt!40351)))))

(assert (= (and d!22731 (not res!44511)) b!86652))

(assert (= (and b!86652 res!44512) b!86653))

(declare-fun m!91843 () Bool)

(assert (=> b!86653 m!91843))

(assert (=> d!22323 d!22731))

(declare-fun d!22733 () Bool)

(declare-fun e!56456 () Bool)

(assert (=> d!22733 e!56456))

(declare-fun res!44513 () Bool)

(assert (=> d!22733 (=> (not res!44513) (not e!56456))))

(declare-fun lt!41150 () ListLongMap!1441)

(assert (=> d!22733 (= res!44513 (contains!747 lt!41150 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun lt!41148 () List!1509)

(assert (=> d!22733 (= lt!41150 (ListLongMap!1442 lt!41148))))

(declare-fun lt!41147 () Unit!2498)

(declare-fun lt!41149 () Unit!2498)

(assert (=> d!22733 (= lt!41147 lt!41149)))

(assert (=> d!22733 (= (getValueByKey!141 lt!41148 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22733 (= lt!41149 (lemmaContainsTupThenGetReturnValue!58 lt!41148 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22733 (= lt!41148 (insertStrictlySorted!61 (toList!736 call!8148) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22733 (= (+!107 call!8148 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) lt!41150)))

(declare-fun b!86654 () Bool)

(declare-fun res!44514 () Bool)

(assert (=> b!86654 (=> (not res!44514) (not e!56456))))

(assert (=> b!86654 (= res!44514 (= (getValueByKey!141 (toList!736 lt!41150) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun b!86655 () Bool)

(assert (=> b!86655 (= e!56456 (contains!749 (toList!736 lt!41150) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(assert (= (and d!22733 res!44513) b!86654))

(assert (= (and b!86654 res!44514) b!86655))

(declare-fun m!91845 () Bool)

(assert (=> d!22733 m!91845))

(declare-fun m!91847 () Bool)

(assert (=> d!22733 m!91847))

(declare-fun m!91849 () Bool)

(assert (=> d!22733 m!91849))

(declare-fun m!91851 () Bool)

(assert (=> d!22733 m!91851))

(declare-fun m!91853 () Bool)

(assert (=> b!86654 m!91853))

(declare-fun m!91855 () Bool)

(assert (=> b!86655 m!91855))

(assert (=> b!85813 d!22733))

(declare-fun d!22735 () Bool)

(declare-fun e!56458 () Bool)

(assert (=> d!22735 e!56458))

(declare-fun res!44515 () Bool)

(assert (=> d!22735 (=> res!44515 e!56458)))

(declare-fun lt!41152 () Bool)

(assert (=> d!22735 (= res!44515 (not lt!41152))))

(declare-fun lt!41154 () Bool)

(assert (=> d!22735 (= lt!41152 lt!41154)))

(declare-fun lt!41151 () Unit!2498)

(declare-fun e!56457 () Unit!2498)

(assert (=> d!22735 (= lt!41151 e!56457)))

(declare-fun c!14193 () Bool)

(assert (=> d!22735 (= c!14193 lt!41154)))

(assert (=> d!22735 (= lt!41154 (containsKey!144 (toList!736 lt!40574) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22735 (= (contains!747 lt!40574 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41152)))

(declare-fun b!86656 () Bool)

(declare-fun lt!41153 () Unit!2498)

(assert (=> b!86656 (= e!56457 lt!41153)))

(assert (=> b!86656 (= lt!41153 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40574) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86656 (isDefined!93 (getValueByKey!141 (toList!736 lt!40574) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86657 () Bool)

(declare-fun Unit!2551 () Unit!2498)

(assert (=> b!86657 (= e!56457 Unit!2551)))

(declare-fun b!86658 () Bool)

(assert (=> b!86658 (= e!56458 (isDefined!93 (getValueByKey!141 (toList!736 lt!40574) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22735 c!14193) b!86656))

(assert (= (and d!22735 (not c!14193)) b!86657))

(assert (= (and d!22735 (not res!44515)) b!86658))

(declare-fun m!91857 () Bool)

(assert (=> d!22735 m!91857))

(declare-fun m!91859 () Bool)

(assert (=> b!86656 m!91859))

(assert (=> b!86656 m!90127))

(assert (=> b!86656 m!90127))

(declare-fun m!91861 () Bool)

(assert (=> b!86656 m!91861))

(assert (=> b!86658 m!90127))

(assert (=> b!86658 m!90127))

(assert (=> b!86658 m!91861))

(assert (=> d!22191 d!22735))

(declare-fun b!86662 () Bool)

(declare-fun e!56460 () Option!147)

(assert (=> b!86662 (= e!56460 None!145)))

(declare-fun c!14194 () Bool)

(declare-fun d!22737 () Bool)

(assert (=> d!22737 (= c!14194 (and ((_ is Cons!1505) lt!40572) (= (_1!1105 (h!2096 lt!40572)) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56459 () Option!147)

(assert (=> d!22737 (= (getValueByKey!141 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56459)))

(declare-fun b!86660 () Bool)

(assert (=> b!86660 (= e!56459 e!56460)))

(declare-fun c!14195 () Bool)

(assert (=> b!86660 (= c!14195 (and ((_ is Cons!1505) lt!40572) (not (= (_1!1105 (h!2096 lt!40572)) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86661 () Bool)

(assert (=> b!86661 (= e!56460 (getValueByKey!141 (t!5222 lt!40572) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86659 () Bool)

(assert (=> b!86659 (= e!56459 (Some!146 (_2!1105 (h!2096 lt!40572))))))

(assert (= (and d!22737 c!14194) b!86659))

(assert (= (and d!22737 (not c!14194)) b!86660))

(assert (= (and b!86660 c!14195) b!86661))

(assert (= (and b!86660 (not c!14195)) b!86662))

(declare-fun m!91863 () Bool)

(assert (=> b!86661 m!91863))

(assert (=> d!22191 d!22737))

(declare-fun d!22739 () Bool)

(assert (=> d!22739 (= (getValueByKey!141 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41155 () Unit!2498)

(assert (=> d!22739 (= lt!41155 (choose!511 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56461 () Bool)

(assert (=> d!22739 e!56461))

(declare-fun res!44516 () Bool)

(assert (=> d!22739 (=> (not res!44516) (not e!56461))))

(assert (=> d!22739 (= res!44516 (isStrictlySorted!285 lt!40572))))

(assert (=> d!22739 (= (lemmaContainsTupThenGetReturnValue!58 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41155)))

(declare-fun b!86663 () Bool)

(declare-fun res!44517 () Bool)

(assert (=> b!86663 (=> (not res!44517) (not e!56461))))

(assert (=> b!86663 (= res!44517 (containsKey!144 lt!40572 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86664 () Bool)

(assert (=> b!86664 (= e!56461 (contains!749 lt!40572 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22739 res!44516) b!86663))

(assert (= (and b!86663 res!44517) b!86664))

(assert (=> d!22739 m!90121))

(declare-fun m!91865 () Bool)

(assert (=> d!22739 m!91865))

(declare-fun m!91867 () Bool)

(assert (=> d!22739 m!91867))

(declare-fun m!91869 () Bool)

(assert (=> b!86663 m!91869))

(declare-fun m!91871 () Bool)

(assert (=> b!86664 m!91871))

(assert (=> d!22191 d!22739))

(declare-fun b!86665 () Bool)

(declare-fun e!56465 () List!1509)

(declare-fun call!8250 () List!1509)

(assert (=> b!86665 (= e!56465 call!8250)))

(declare-fun bm!8247 () Bool)

(declare-fun e!56464 () List!1509)

(declare-fun c!14199 () Bool)

(declare-fun call!8251 () List!1509)

(assert (=> bm!8247 (= call!8251 ($colon$colon!71 e!56464 (ite c!14199 (h!2096 (toList!736 lt!40437)) (tuple2!2189 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14198 () Bool)

(assert (=> bm!8247 (= c!14198 c!14199)))

(declare-fun c!14197 () Bool)

(declare-fun b!86666 () Bool)

(assert (=> b!86666 (= c!14197 (and ((_ is Cons!1505) (toList!736 lt!40437)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40437))) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56462 () List!1509)

(assert (=> b!86666 (= e!56465 e!56462)))

(declare-fun lt!41156 () List!1509)

(declare-fun b!86667 () Bool)

(declare-fun e!56466 () Bool)

(assert (=> b!86667 (= e!56466 (contains!749 lt!41156 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86668 () Bool)

(declare-fun res!44518 () Bool)

(assert (=> b!86668 (=> (not res!44518) (not e!56466))))

(assert (=> b!86668 (= res!44518 (containsKey!144 lt!41156 (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8248 () Bool)

(assert (=> bm!8248 (= call!8250 call!8251)))

(declare-fun b!86669 () Bool)

(assert (=> b!86669 (= e!56464 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40437)) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun c!14196 () Bool)

(declare-fun b!86670 () Bool)

(assert (=> b!86670 (= e!56464 (ite c!14196 (t!5222 (toList!736 lt!40437)) (ite c!14197 (Cons!1505 (h!2096 (toList!736 lt!40437)) (t!5222 (toList!736 lt!40437))) Nil!1506)))))

(declare-fun b!86671 () Bool)

(declare-fun e!56463 () List!1509)

(assert (=> b!86671 (= e!56463 call!8251)))

(declare-fun bm!8249 () Bool)

(declare-fun call!8252 () List!1509)

(assert (=> bm!8249 (= call!8252 call!8250)))

(declare-fun d!22741 () Bool)

(assert (=> d!22741 e!56466))

(declare-fun res!44519 () Bool)

(assert (=> d!22741 (=> (not res!44519) (not e!56466))))

(assert (=> d!22741 (= res!44519 (isStrictlySorted!285 lt!41156))))

(assert (=> d!22741 (= lt!41156 e!56463)))

(assert (=> d!22741 (= c!14199 (and ((_ is Cons!1505) (toList!736 lt!40437)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40437))) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22741 (isStrictlySorted!285 (toList!736 lt!40437))))

(assert (=> d!22741 (= (insertStrictlySorted!61 (toList!736 lt!40437) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41156)))

(declare-fun b!86672 () Bool)

(assert (=> b!86672 (= e!56462 call!8252)))

(declare-fun b!86673 () Bool)

(assert (=> b!86673 (= e!56463 e!56465)))

(assert (=> b!86673 (= c!14196 (and ((_ is Cons!1505) (toList!736 lt!40437)) (= (_1!1105 (h!2096 (toList!736 lt!40437))) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86674 () Bool)

(assert (=> b!86674 (= e!56462 call!8252)))

(assert (= (and d!22741 c!14199) b!86671))

(assert (= (and d!22741 (not c!14199)) b!86673))

(assert (= (and b!86673 c!14196) b!86665))

(assert (= (and b!86673 (not c!14196)) b!86666))

(assert (= (and b!86666 c!14197) b!86672))

(assert (= (and b!86666 (not c!14197)) b!86674))

(assert (= (or b!86672 b!86674) bm!8249))

(assert (= (or b!86665 bm!8249) bm!8248))

(assert (= (or b!86671 bm!8248) bm!8247))

(assert (= (and bm!8247 c!14198) b!86669))

(assert (= (and bm!8247 (not c!14198)) b!86670))

(assert (= (and d!22741 res!44519) b!86668))

(assert (= (and b!86668 res!44518) b!86667))

(declare-fun m!91873 () Bool)

(assert (=> b!86667 m!91873))

(declare-fun m!91875 () Bool)

(assert (=> b!86668 m!91875))

(declare-fun m!91877 () Bool)

(assert (=> bm!8247 m!91877))

(declare-fun m!91879 () Bool)

(assert (=> d!22741 m!91879))

(declare-fun m!91881 () Bool)

(assert (=> d!22741 m!91881))

(declare-fun m!91883 () Bool)

(assert (=> b!86669 m!91883))

(assert (=> d!22191 d!22741))

(declare-fun d!22743 () Bool)

(declare-fun e!56468 () Bool)

(assert (=> d!22743 e!56468))

(declare-fun res!44520 () Bool)

(assert (=> d!22743 (=> res!44520 e!56468)))

(declare-fun lt!41158 () Bool)

(assert (=> d!22743 (= res!44520 (not lt!41158))))

(declare-fun lt!41160 () Bool)

(assert (=> d!22743 (= lt!41158 lt!41160)))

(declare-fun lt!41157 () Unit!2498)

(declare-fun e!56467 () Unit!2498)

(assert (=> d!22743 (= lt!41157 e!56467)))

(declare-fun c!14200 () Bool)

(assert (=> d!22743 (= c!14200 lt!41160)))

(assert (=> d!22743 (= lt!41160 (containsKey!144 (toList!736 lt!40923) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22743 (= (contains!747 lt!40923 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41158)))

(declare-fun b!86675 () Bool)

(declare-fun lt!41159 () Unit!2498)

(assert (=> b!86675 (= e!56467 lt!41159)))

(assert (=> b!86675 (= lt!41159 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40923) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86675 (isDefined!93 (getValueByKey!141 (toList!736 lt!40923) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86676 () Bool)

(declare-fun Unit!2552 () Unit!2498)

(assert (=> b!86676 (= e!56467 Unit!2552)))

(declare-fun b!86677 () Bool)

(assert (=> b!86677 (= e!56468 (isDefined!93 (getValueByKey!141 (toList!736 lt!40923) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22743 c!14200) b!86675))

(assert (= (and d!22743 (not c!14200)) b!86676))

(assert (= (and d!22743 (not res!44520)) b!86677))

(declare-fun m!91885 () Bool)

(assert (=> d!22743 m!91885))

(declare-fun m!91887 () Bool)

(assert (=> b!86675 m!91887))

(assert (=> b!86675 m!90965))

(assert (=> b!86675 m!90965))

(declare-fun m!91889 () Bool)

(assert (=> b!86675 m!91889))

(assert (=> b!86677 m!90965))

(assert (=> b!86677 m!90965))

(assert (=> b!86677 m!91889))

(assert (=> d!22407 d!22743))

(declare-fun b!86681 () Bool)

(declare-fun e!56470 () Option!147)

(assert (=> b!86681 (= e!56470 None!145)))

(declare-fun d!22745 () Bool)

(declare-fun c!14201 () Bool)

(assert (=> d!22745 (= c!14201 (and ((_ is Cons!1505) lt!40921) (= (_1!1105 (h!2096 lt!40921)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56469 () Option!147)

(assert (=> d!22745 (= (getValueByKey!141 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56469)))

(declare-fun b!86679 () Bool)

(assert (=> b!86679 (= e!56469 e!56470)))

(declare-fun c!14202 () Bool)

(assert (=> b!86679 (= c!14202 (and ((_ is Cons!1505) lt!40921) (not (= (_1!1105 (h!2096 lt!40921)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86680 () Bool)

(assert (=> b!86680 (= e!56470 (getValueByKey!141 (t!5222 lt!40921) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86678 () Bool)

(assert (=> b!86678 (= e!56469 (Some!146 (_2!1105 (h!2096 lt!40921))))))

(assert (= (and d!22745 c!14201) b!86678))

(assert (= (and d!22745 (not c!14201)) b!86679))

(assert (= (and b!86679 c!14202) b!86680))

(assert (= (and b!86679 (not c!14202)) b!86681))

(declare-fun m!91891 () Bool)

(assert (=> b!86680 m!91891))

(assert (=> d!22407 d!22745))

(declare-fun d!22747 () Bool)

(assert (=> d!22747 (= (getValueByKey!141 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41161 () Unit!2498)

(assert (=> d!22747 (= lt!41161 (choose!511 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56471 () Bool)

(assert (=> d!22747 e!56471))

(declare-fun res!44521 () Bool)

(assert (=> d!22747 (=> (not res!44521) (not e!56471))))

(assert (=> d!22747 (= res!44521 (isStrictlySorted!285 lt!40921))))

(assert (=> d!22747 (= (lemmaContainsTupThenGetReturnValue!58 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41161)))

(declare-fun b!86682 () Bool)

(declare-fun res!44522 () Bool)

(assert (=> b!86682 (=> (not res!44522) (not e!56471))))

(assert (=> b!86682 (= res!44522 (containsKey!144 lt!40921 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86683 () Bool)

(assert (=> b!86683 (= e!56471 (contains!749 lt!40921 (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22747 res!44521) b!86682))

(assert (= (and b!86682 res!44522) b!86683))

(assert (=> d!22747 m!90959))

(declare-fun m!91893 () Bool)

(assert (=> d!22747 m!91893))

(declare-fun m!91895 () Bool)

(assert (=> d!22747 m!91895))

(declare-fun m!91897 () Bool)

(assert (=> b!86682 m!91897))

(declare-fun m!91899 () Bool)

(assert (=> b!86683 m!91899))

(assert (=> d!22407 d!22747))

(declare-fun b!86684 () Bool)

(declare-fun e!56475 () List!1509)

(declare-fun call!8253 () List!1509)

(assert (=> b!86684 (= e!56475 call!8253)))

(declare-fun bm!8250 () Bool)

(declare-fun e!56474 () List!1509)

(declare-fun call!8254 () List!1509)

(declare-fun c!14206 () Bool)

(assert (=> bm!8250 (= call!8254 ($colon$colon!71 e!56474 (ite c!14206 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14205 () Bool)

(assert (=> bm!8250 (= c!14205 c!14206)))

(declare-fun b!86685 () Bool)

(declare-fun c!14204 () Bool)

(assert (=> b!86685 (= c!14204 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56472 () List!1509)

(assert (=> b!86685 (= e!56475 e!56472)))

(declare-fun b!86686 () Bool)

(declare-fun e!56476 () Bool)

(declare-fun lt!41162 () List!1509)

(assert (=> b!86686 (= e!56476 (contains!749 lt!41162 (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86687 () Bool)

(declare-fun res!44523 () Bool)

(assert (=> b!86687 (=> (not res!44523) (not e!56476))))

(assert (=> b!86687 (= res!44523 (containsKey!144 lt!41162 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8251 () Bool)

(assert (=> bm!8251 (= call!8253 call!8254)))

(declare-fun b!86688 () Bool)

(assert (=> b!86688 (= e!56474 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40193)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun c!14203 () Bool)

(declare-fun b!86689 () Bool)

(assert (=> b!86689 (= e!56474 (ite c!14203 (t!5222 (toList!736 lt!40193)) (ite c!14204 (Cons!1505 (h!2096 (toList!736 lt!40193)) (t!5222 (toList!736 lt!40193))) Nil!1506)))))

(declare-fun b!86690 () Bool)

(declare-fun e!56473 () List!1509)

(assert (=> b!86690 (= e!56473 call!8254)))

(declare-fun bm!8252 () Bool)

(declare-fun call!8255 () List!1509)

(assert (=> bm!8252 (= call!8255 call!8253)))

(declare-fun d!22749 () Bool)

(assert (=> d!22749 e!56476))

(declare-fun res!44524 () Bool)

(assert (=> d!22749 (=> (not res!44524) (not e!56476))))

(assert (=> d!22749 (= res!44524 (isStrictlySorted!285 lt!41162))))

(assert (=> d!22749 (= lt!41162 e!56473)))

(assert (=> d!22749 (= c!14206 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22749 (isStrictlySorted!285 (toList!736 lt!40193))))

(assert (=> d!22749 (= (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41162)))

(declare-fun b!86691 () Bool)

(assert (=> b!86691 (= e!56472 call!8255)))

(declare-fun b!86692 () Bool)

(assert (=> b!86692 (= e!56473 e!56475)))

(assert (=> b!86692 (= c!14203 (and ((_ is Cons!1505) (toList!736 lt!40193)) (= (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86693 () Bool)

(assert (=> b!86693 (= e!56472 call!8255)))

(assert (= (and d!22749 c!14206) b!86690))

(assert (= (and d!22749 (not c!14206)) b!86692))

(assert (= (and b!86692 c!14203) b!86684))

(assert (= (and b!86692 (not c!14203)) b!86685))

(assert (= (and b!86685 c!14204) b!86691))

(assert (= (and b!86685 (not c!14204)) b!86693))

(assert (= (or b!86691 b!86693) bm!8252))

(assert (= (or b!86684 bm!8252) bm!8251))

(assert (= (or b!86690 bm!8251) bm!8250))

(assert (= (and bm!8250 c!14205) b!86688))

(assert (= (and bm!8250 (not c!14205)) b!86689))

(assert (= (and d!22749 res!44524) b!86687))

(assert (= (and b!86687 res!44523) b!86686))

(declare-fun m!91901 () Bool)

(assert (=> b!86686 m!91901))

(declare-fun m!91903 () Bool)

(assert (=> b!86687 m!91903))

(declare-fun m!91905 () Bool)

(assert (=> bm!8250 m!91905))

(declare-fun m!91907 () Bool)

(assert (=> d!22749 m!91907))

(assert (=> d!22749 m!90531))

(declare-fun m!91909 () Bool)

(assert (=> b!86688 m!91909))

(assert (=> d!22407 d!22749))

(declare-fun d!22751 () Bool)

(declare-fun lt!41163 () Bool)

(assert (=> d!22751 (= lt!41163 (select (content!90 (t!5222 (toList!736 lt!40353))) lt!40197))))

(declare-fun e!56478 () Bool)

(assert (=> d!22751 (= lt!41163 e!56478)))

(declare-fun res!44526 () Bool)

(assert (=> d!22751 (=> (not res!44526) (not e!56478))))

(assert (=> d!22751 (= res!44526 ((_ is Cons!1505) (t!5222 (toList!736 lt!40353))))))

(assert (=> d!22751 (= (contains!749 (t!5222 (toList!736 lt!40353)) lt!40197) lt!41163)))

(declare-fun b!86694 () Bool)

(declare-fun e!56477 () Bool)

(assert (=> b!86694 (= e!56478 e!56477)))

(declare-fun res!44525 () Bool)

(assert (=> b!86694 (=> res!44525 e!56477)))

(assert (=> b!86694 (= res!44525 (= (h!2096 (t!5222 (toList!736 lt!40353))) lt!40197))))

(declare-fun b!86695 () Bool)

(assert (=> b!86695 (= e!56477 (contains!749 (t!5222 (t!5222 (toList!736 lt!40353))) lt!40197))))

(assert (= (and d!22751 res!44526) b!86694))

(assert (= (and b!86694 (not res!44525)) b!86695))

(declare-fun m!91911 () Bool)

(assert (=> d!22751 m!91911))

(declare-fun m!91913 () Bool)

(assert (=> d!22751 m!91913))

(declare-fun m!91915 () Bool)

(assert (=> b!86695 m!91915))

(assert (=> b!86151 d!22751))

(assert (=> d!22357 d!22355))

(declare-fun d!22753 () Bool)

(assert (=> d!22753 (= (getValueByKey!141 lt!40355 (_1!1105 lt!40192)) (Some!146 (_2!1105 lt!40192)))))

(assert (=> d!22753 true))

(declare-fun _$22!420 () Unit!2498)

(assert (=> d!22753 (= (choose!511 lt!40355 (_1!1105 lt!40192) (_2!1105 lt!40192)) _$22!420)))

(declare-fun bs!3670 () Bool)

(assert (= bs!3670 d!22753))

(assert (=> bs!3670 m!89823))

(assert (=> d!22357 d!22753))

(declare-fun d!22755 () Bool)

(declare-fun res!44527 () Bool)

(declare-fun e!56479 () Bool)

(assert (=> d!22755 (=> res!44527 e!56479)))

(assert (=> d!22755 (= res!44527 (or ((_ is Nil!1506) lt!40355) ((_ is Nil!1506) (t!5222 lt!40355))))))

(assert (=> d!22755 (= (isStrictlySorted!285 lt!40355) e!56479)))

(declare-fun b!86696 () Bool)

(declare-fun e!56480 () Bool)

(assert (=> b!86696 (= e!56479 e!56480)))

(declare-fun res!44528 () Bool)

(assert (=> b!86696 (=> (not res!44528) (not e!56480))))

(assert (=> b!86696 (= res!44528 (bvslt (_1!1105 (h!2096 lt!40355)) (_1!1105 (h!2096 (t!5222 lt!40355)))))))

(declare-fun b!86697 () Bool)

(assert (=> b!86697 (= e!56480 (isStrictlySorted!285 (t!5222 lt!40355)))))

(assert (= (and d!22755 (not res!44527)) b!86696))

(assert (= (and b!86696 res!44528) b!86697))

(declare-fun m!91917 () Bool)

(assert (=> b!86697 m!91917))

(assert (=> d!22357 d!22755))

(declare-fun d!22757 () Bool)

(assert (=> d!22757 (isDefined!93 (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192)))))

(declare-fun lt!41164 () Unit!2498)

(assert (=> d!22757 (= lt!41164 (choose!517 (toList!736 lt!40364) (_1!1105 lt!40192)))))

(declare-fun e!56481 () Bool)

(assert (=> d!22757 e!56481))

(declare-fun res!44529 () Bool)

(assert (=> d!22757 (=> (not res!44529) (not e!56481))))

(assert (=> d!22757 (= res!44529 (isStrictlySorted!285 (toList!736 lt!40364)))))

(assert (=> d!22757 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40364) (_1!1105 lt!40192)) lt!41164)))

(declare-fun b!86698 () Bool)

(assert (=> b!86698 (= e!56481 (containsKey!144 (toList!736 lt!40364) (_1!1105 lt!40192)))))

(assert (= (and d!22757 res!44529) b!86698))

(assert (=> d!22757 m!89851))

(assert (=> d!22757 m!89851))

(assert (=> d!22757 m!90691))

(declare-fun m!91919 () Bool)

(assert (=> d!22757 m!91919))

(declare-fun m!91921 () Bool)

(assert (=> d!22757 m!91921))

(assert (=> b!86698 m!90687))

(assert (=> b!86030 d!22757))

(declare-fun d!22759 () Bool)

(assert (=> d!22759 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40364) (_1!1105 lt!40192)))))))

(declare-fun bs!3671 () Bool)

(assert (= bs!3671 d!22759))

(assert (=> bs!3671 m!89851))

(declare-fun m!91923 () Bool)

(assert (=> bs!3671 m!91923))

(assert (=> b!86030 d!22759))

(assert (=> b!86030 d!22277))

(declare-fun d!22761 () Bool)

(declare-fun lt!41165 () Bool)

(assert (=> d!22761 (= lt!41165 (select (content!91 Nil!1505) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56482 () Bool)

(assert (=> d!22761 (= lt!41165 e!56482)))

(declare-fun res!44530 () Bool)

(assert (=> d!22761 (=> (not res!44530) (not e!56482))))

(assert (=> d!22761 (= res!44530 ((_ is Cons!1504) Nil!1505))))

(assert (=> d!22761 (= (contains!748 Nil!1505 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) lt!41165)))

(declare-fun b!86699 () Bool)

(declare-fun e!56483 () Bool)

(assert (=> b!86699 (= e!56482 e!56483)))

(declare-fun res!44531 () Bool)

(assert (=> b!86699 (=> res!44531 e!56483)))

(assert (=> b!86699 (= res!44531 (= (h!2095 Nil!1505) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86700 () Bool)

(assert (=> b!86700 (= e!56483 (contains!748 (t!5221 Nil!1505) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22761 res!44530) b!86699))

(assert (= (and b!86699 (not res!44531)) b!86700))

(assert (=> d!22761 m!90077))

(assert (=> d!22761 m!90065))

(declare-fun m!91925 () Bool)

(assert (=> d!22761 m!91925))

(assert (=> b!86700 m!90065))

(declare-fun m!91927 () Bool)

(assert (=> b!86700 m!91927))

(assert (=> b!85911 d!22761))

(assert (=> b!86029 d!22523))

(assert (=> b!86029 d!22525))

(assert (=> bm!8179 d!22385))

(declare-fun b!86701 () Bool)

(declare-fun e!56487 () List!1509)

(declare-fun call!8256 () List!1509)

(assert (=> b!86701 (= e!56487 call!8256)))

(declare-fun bm!8253 () Bool)

(declare-fun c!14210 () Bool)

(declare-fun call!8257 () List!1509)

(declare-fun e!56486 () List!1509)

(assert (=> bm!8253 (= call!8257 ($colon$colon!71 e!56486 (ite c!14210 (h!2096 (t!5222 (toList!736 lt!40187))) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))))))

(declare-fun c!14209 () Bool)

(assert (=> bm!8253 (= c!14209 c!14210)))

(declare-fun b!86702 () Bool)

(declare-fun c!14208 () Bool)

(assert (=> b!86702 (= c!14208 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40187))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187)))) (_1!1105 lt!40197))))))

(declare-fun e!56484 () List!1509)

(assert (=> b!86702 (= e!56487 e!56484)))

(declare-fun b!86703 () Bool)

(declare-fun e!56488 () Bool)

(declare-fun lt!41166 () List!1509)

(assert (=> b!86703 (= e!56488 (contains!749 lt!41166 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!86704 () Bool)

(declare-fun res!44532 () Bool)

(assert (=> b!86704 (=> (not res!44532) (not e!56488))))

(assert (=> b!86704 (= res!44532 (containsKey!144 lt!41166 (_1!1105 lt!40197)))))

(declare-fun bm!8254 () Bool)

(assert (=> bm!8254 (= call!8256 call!8257)))

(declare-fun b!86705 () Bool)

(assert (=> b!86705 (= e!56486 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 lt!40187))) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun c!14207 () Bool)

(declare-fun b!86706 () Bool)

(assert (=> b!86706 (= e!56486 (ite c!14207 (t!5222 (t!5222 (toList!736 lt!40187))) (ite c!14208 (Cons!1505 (h!2096 (t!5222 (toList!736 lt!40187))) (t!5222 (t!5222 (toList!736 lt!40187)))) Nil!1506)))))

(declare-fun b!86707 () Bool)

(declare-fun e!56485 () List!1509)

(assert (=> b!86707 (= e!56485 call!8257)))

(declare-fun bm!8255 () Bool)

(declare-fun call!8258 () List!1509)

(assert (=> bm!8255 (= call!8258 call!8256)))

(declare-fun d!22763 () Bool)

(assert (=> d!22763 e!56488))

(declare-fun res!44533 () Bool)

(assert (=> d!22763 (=> (not res!44533) (not e!56488))))

(assert (=> d!22763 (= res!44533 (isStrictlySorted!285 lt!41166))))

(assert (=> d!22763 (= lt!41166 e!56485)))

(assert (=> d!22763 (= c!14210 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40187))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187)))) (_1!1105 lt!40197))))))

(assert (=> d!22763 (isStrictlySorted!285 (t!5222 (toList!736 lt!40187)))))

(assert (=> d!22763 (= (insertStrictlySorted!61 (t!5222 (toList!736 lt!40187)) (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!41166)))

(declare-fun b!86708 () Bool)

(assert (=> b!86708 (= e!56484 call!8258)))

(declare-fun b!86709 () Bool)

(assert (=> b!86709 (= e!56485 e!56487)))

(assert (=> b!86709 (= c!14207 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40187))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187)))) (_1!1105 lt!40197))))))

(declare-fun b!86710 () Bool)

(assert (=> b!86710 (= e!56484 call!8258)))

(assert (= (and d!22763 c!14210) b!86707))

(assert (= (and d!22763 (not c!14210)) b!86709))

(assert (= (and b!86709 c!14207) b!86701))

(assert (= (and b!86709 (not c!14207)) b!86702))

(assert (= (and b!86702 c!14208) b!86708))

(assert (= (and b!86702 (not c!14208)) b!86710))

(assert (= (or b!86708 b!86710) bm!8255))

(assert (= (or b!86701 bm!8255) bm!8254))

(assert (= (or b!86707 bm!8254) bm!8253))

(assert (= (and bm!8253 c!14209) b!86705))

(assert (= (and bm!8253 (not c!14209)) b!86706))

(assert (= (and d!22763 res!44533) b!86704))

(assert (= (and b!86704 res!44532) b!86703))

(declare-fun m!91929 () Bool)

(assert (=> b!86703 m!91929))

(declare-fun m!91931 () Bool)

(assert (=> b!86704 m!91931))

(declare-fun m!91933 () Bool)

(assert (=> bm!8253 m!91933))

(declare-fun m!91935 () Bool)

(assert (=> d!22763 m!91935))

(assert (=> d!22763 m!91757))

(declare-fun m!91937 () Bool)

(assert (=> b!86705 m!91937))

(assert (=> b!85794 d!22763))

(declare-fun d!22765 () Bool)

(assert (=> d!22765 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41167 () Unit!2498)

(assert (=> d!22765 (= lt!41167 (choose!517 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56489 () Bool)

(assert (=> d!22765 e!56489))

(declare-fun res!44534 () Bool)

(assert (=> d!22765 (=> (not res!44534) (not e!56489))))

(assert (=> d!22765 (= res!44534 (isStrictlySorted!285 (toList!736 lt!40439)))))

(assert (=> d!22765 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41167)))

(declare-fun b!86711 () Bool)

(assert (=> b!86711 (= e!56489 (containsKey!144 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22765 res!44534) b!86711))

(assert (=> d!22765 m!89759))

(assert (=> d!22765 m!90211))

(assert (=> d!22765 m!90211))

(assert (=> d!22765 m!90671))

(assert (=> d!22765 m!89759))

(declare-fun m!91939 () Bool)

(assert (=> d!22765 m!91939))

(assert (=> d!22765 m!91357))

(assert (=> b!86711 m!89759))

(assert (=> b!86711 m!90667))

(assert (=> b!86021 d!22765))

(declare-fun d!22767 () Bool)

(assert (=> d!22767 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3672 () Bool)

(assert (= bs!3672 d!22767))

(assert (=> bs!3672 m!90211))

(declare-fun m!91941 () Bool)

(assert (=> bs!3672 m!91941))

(assert (=> b!86021 d!22767))

(declare-fun b!86715 () Bool)

(declare-fun e!56491 () Option!147)

(assert (=> b!86715 (= e!56491 None!145)))

(declare-fun d!22769 () Bool)

(declare-fun c!14211 () Bool)

(assert (=> d!22769 (= c!14211 (and ((_ is Cons!1505) (toList!736 lt!40439)) (= (_1!1105 (h!2096 (toList!736 lt!40439))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!56490 () Option!147)

(assert (=> d!22769 (= (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56490)))

(declare-fun b!86713 () Bool)

(assert (=> b!86713 (= e!56490 e!56491)))

(declare-fun c!14212 () Bool)

(assert (=> b!86713 (= c!14212 (and ((_ is Cons!1505) (toList!736 lt!40439)) (not (= (_1!1105 (h!2096 (toList!736 lt!40439))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!86714 () Bool)

(assert (=> b!86714 (= e!56491 (getValueByKey!141 (t!5222 (toList!736 lt!40439)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86712 () Bool)

(assert (=> b!86712 (= e!56490 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40439)))))))

(assert (= (and d!22769 c!14211) b!86712))

(assert (= (and d!22769 (not c!14211)) b!86713))

(assert (= (and b!86713 c!14212) b!86714))

(assert (= (and b!86713 (not c!14212)) b!86715))

(assert (=> b!86714 m!89759))

(declare-fun m!91943 () Bool)

(assert (=> b!86714 m!91943))

(assert (=> b!86021 d!22769))

(declare-fun b!86719 () Bool)

(declare-fun e!56493 () Option!147)

(assert (=> b!86719 (= e!56493 None!145)))

(declare-fun d!22771 () Bool)

(declare-fun c!14213 () Bool)

(assert (=> d!22771 (= c!14213 (and ((_ is Cons!1505) (toList!736 lt!40911)) (= (_1!1105 (h!2096 (toList!736 lt!40911))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56492 () Option!147)

(assert (=> d!22771 (= (getValueByKey!141 (toList!736 lt!40911) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56492)))

(declare-fun b!86717 () Bool)

(assert (=> b!86717 (= e!56492 e!56493)))

(declare-fun c!14214 () Bool)

(assert (=> b!86717 (= c!14214 (and ((_ is Cons!1505) (toList!736 lt!40911)) (not (= (_1!1105 (h!2096 (toList!736 lt!40911))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86718 () Bool)

(assert (=> b!86718 (= e!56493 (getValueByKey!141 (t!5222 (toList!736 lt!40911)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86716 () Bool)

(assert (=> b!86716 (= e!56492 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40911)))))))

(assert (= (and d!22771 c!14213) b!86716))

(assert (= (and d!22771 (not c!14213)) b!86717))

(assert (= (and b!86717 c!14214) b!86718))

(assert (= (and b!86717 (not c!14214)) b!86719))

(declare-fun m!91945 () Bool)

(assert (=> b!86718 m!91945))

(assert (=> b!86175 d!22771))

(assert (=> b!85638 d!22581))

(declare-fun lt!41168 () Bool)

(declare-fun d!22773 () Bool)

(assert (=> d!22773 (= lt!41168 (select (content!90 (toList!736 lt!40676)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!56495 () Bool)

(assert (=> d!22773 (= lt!41168 e!56495)))

(declare-fun res!44536 () Bool)

(assert (=> d!22773 (=> (not res!44536) (not e!56495))))

(assert (=> d!22773 (= res!44536 ((_ is Cons!1505) (toList!736 lt!40676)))))

(assert (=> d!22773 (= (contains!749 (toList!736 lt!40676) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41168)))

(declare-fun b!86720 () Bool)

(declare-fun e!56494 () Bool)

(assert (=> b!86720 (= e!56495 e!56494)))

(declare-fun res!44535 () Bool)

(assert (=> b!86720 (=> res!44535 e!56494)))

(assert (=> b!86720 (= res!44535 (= (h!2096 (toList!736 lt!40676)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86721 () Bool)

(assert (=> b!86721 (= e!56494 (contains!749 (t!5222 (toList!736 lt!40676)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22773 res!44536) b!86720))

(assert (= (and b!86720 (not res!44535)) b!86721))

(declare-fun m!91947 () Bool)

(assert (=> d!22773 m!91947))

(declare-fun m!91949 () Bool)

(assert (=> d!22773 m!91949))

(declare-fun m!91951 () Bool)

(assert (=> b!86721 m!91951))

(assert (=> b!85923 d!22773))

(declare-fun d!22775 () Bool)

(declare-fun e!56497 () Bool)

(assert (=> d!22775 e!56497))

(declare-fun res!44537 () Bool)

(assert (=> d!22775 (=> res!44537 e!56497)))

(declare-fun lt!41170 () Bool)

(assert (=> d!22775 (= res!44537 (not lt!41170))))

(declare-fun lt!41172 () Bool)

(assert (=> d!22775 (= lt!41170 lt!41172)))

(declare-fun lt!41169 () Unit!2498)

(declare-fun e!56496 () Unit!2498)

(assert (=> d!22775 (= lt!41169 e!56496)))

(declare-fun c!14215 () Bool)

(assert (=> d!22775 (= c!14215 lt!41172)))

(assert (=> d!22775 (= lt!41172 (containsKey!144 (toList!736 lt!40931) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22775 (= (contains!747 lt!40931 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41170)))

(declare-fun b!86722 () Bool)

(declare-fun lt!41171 () Unit!2498)

(assert (=> b!86722 (= e!56496 lt!41171)))

(assert (=> b!86722 (= lt!41171 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40931) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86722 (isDefined!93 (getValueByKey!141 (toList!736 lt!40931) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86723 () Bool)

(declare-fun Unit!2553 () Unit!2498)

(assert (=> b!86723 (= e!56496 Unit!2553)))

(declare-fun b!86724 () Bool)

(assert (=> b!86724 (= e!56497 (isDefined!93 (getValueByKey!141 (toList!736 lt!40931) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22775 c!14215) b!86722))

(assert (= (and d!22775 (not c!14215)) b!86723))

(assert (= (and d!22775 (not res!44537)) b!86724))

(declare-fun m!91953 () Bool)

(assert (=> d!22775 m!91953))

(declare-fun m!91955 () Bool)

(assert (=> b!86722 m!91955))

(assert (=> b!86722 m!90989))

(assert (=> b!86722 m!90989))

(declare-fun m!91957 () Bool)

(assert (=> b!86722 m!91957))

(assert (=> b!86724 m!90989))

(assert (=> b!86724 m!90989))

(assert (=> b!86724 m!91957))

(assert (=> d!22413 d!22775))

(declare-fun b!86728 () Bool)

(declare-fun e!56499 () Option!147)

(assert (=> b!86728 (= e!56499 None!145)))

(declare-fun d!22777 () Bool)

(declare-fun c!14216 () Bool)

(assert (=> d!22777 (= c!14216 (and ((_ is Cons!1505) lt!40929) (= (_1!1105 (h!2096 lt!40929)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56498 () Option!147)

(assert (=> d!22777 (= (getValueByKey!141 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56498)))

(declare-fun b!86726 () Bool)

(assert (=> b!86726 (= e!56498 e!56499)))

(declare-fun c!14217 () Bool)

(assert (=> b!86726 (= c!14217 (and ((_ is Cons!1505) lt!40929) (not (= (_1!1105 (h!2096 lt!40929)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86727 () Bool)

(assert (=> b!86727 (= e!56499 (getValueByKey!141 (t!5222 lt!40929) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86725 () Bool)

(assert (=> b!86725 (= e!56498 (Some!146 (_2!1105 (h!2096 lt!40929))))))

(assert (= (and d!22777 c!14216) b!86725))

(assert (= (and d!22777 (not c!14216)) b!86726))

(assert (= (and b!86726 c!14217) b!86727))

(assert (= (and b!86726 (not c!14217)) b!86728))

(declare-fun m!91959 () Bool)

(assert (=> b!86727 m!91959))

(assert (=> d!22413 d!22777))

(declare-fun d!22779 () Bool)

(assert (=> d!22779 (= (getValueByKey!141 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41173 () Unit!2498)

(assert (=> d!22779 (= lt!41173 (choose!511 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56500 () Bool)

(assert (=> d!22779 e!56500))

(declare-fun res!44538 () Bool)

(assert (=> d!22779 (=> (not res!44538) (not e!56500))))

(assert (=> d!22779 (= res!44538 (isStrictlySorted!285 lt!40929))))

(assert (=> d!22779 (= (lemmaContainsTupThenGetReturnValue!58 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41173)))

(declare-fun b!86729 () Bool)

(declare-fun res!44539 () Bool)

(assert (=> b!86729 (=> (not res!44539) (not e!56500))))

(assert (=> b!86729 (= res!44539 (containsKey!144 lt!40929 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86730 () Bool)

(assert (=> b!86730 (= e!56500 (contains!749 lt!40929 (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22779 res!44538) b!86729))

(assert (= (and b!86729 res!44539) b!86730))

(assert (=> d!22779 m!90983))

(declare-fun m!91961 () Bool)

(assert (=> d!22779 m!91961))

(declare-fun m!91963 () Bool)

(assert (=> d!22779 m!91963))

(declare-fun m!91965 () Bool)

(assert (=> b!86729 m!91965))

(declare-fun m!91967 () Bool)

(assert (=> b!86730 m!91967))

(assert (=> d!22413 d!22779))

(declare-fun b!86731 () Bool)

(declare-fun e!56504 () List!1509)

(declare-fun call!8259 () List!1509)

(assert (=> b!86731 (= e!56504 call!8259)))

(declare-fun bm!8256 () Bool)

(declare-fun e!56503 () List!1509)

(declare-fun c!14221 () Bool)

(declare-fun call!8260 () List!1509)

(assert (=> bm!8256 (= call!8260 ($colon$colon!71 e!56503 (ite c!14221 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14220 () Bool)

(assert (=> bm!8256 (= c!14220 c!14221)))

(declare-fun b!86732 () Bool)

(declare-fun c!14219 () Bool)

(assert (=> b!86732 (= c!14219 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (bvsgt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56501 () List!1509)

(assert (=> b!86732 (= e!56504 e!56501)))

(declare-fun b!86733 () Bool)

(declare-fun e!56505 () Bool)

(declare-fun lt!41174 () List!1509)

(assert (=> b!86733 (= e!56505 (contains!749 lt!41174 (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86734 () Bool)

(declare-fun res!44540 () Bool)

(assert (=> b!86734 (=> (not res!44540) (not e!56505))))

(assert (=> b!86734 (= res!44540 (containsKey!144 lt!41174 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8257 () Bool)

(assert (=> bm!8257 (= call!8259 call!8260)))

(declare-fun b!86735 () Bool)

(assert (=> b!86735 (= e!56503 (insertStrictlySorted!61 (t!5222 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86736 () Bool)

(declare-fun c!14218 () Bool)

(assert (=> b!86736 (= e!56503 (ite c!14218 (t!5222 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (ite c!14219 (Cons!1505 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (t!5222 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) Nil!1506)))))

(declare-fun b!86737 () Bool)

(declare-fun e!56502 () List!1509)

(assert (=> b!86737 (= e!56502 call!8260)))

(declare-fun bm!8258 () Bool)

(declare-fun call!8261 () List!1509)

(assert (=> bm!8258 (= call!8261 call!8259)))

(declare-fun d!22781 () Bool)

(assert (=> d!22781 e!56505))

(declare-fun res!44541 () Bool)

(assert (=> d!22781 (=> (not res!44541) (not e!56505))))

(assert (=> d!22781 (= res!44541 (isStrictlySorted!285 lt!41174))))

(assert (=> d!22781 (= lt!41174 e!56502)))

(assert (=> d!22781 (= c!14221 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22781 (isStrictlySorted!285 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!22781 (= (insertStrictlySorted!61 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41174)))

(declare-fun b!86738 () Bool)

(assert (=> b!86738 (= e!56501 call!8261)))

(declare-fun b!86739 () Bool)

(assert (=> b!86739 (= e!56502 e!56504)))

(assert (=> b!86739 (= c!14218 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86740 () Bool)

(assert (=> b!86740 (= e!56501 call!8261)))

(assert (= (and d!22781 c!14221) b!86737))

(assert (= (and d!22781 (not c!14221)) b!86739))

(assert (= (and b!86739 c!14218) b!86731))

(assert (= (and b!86739 (not c!14218)) b!86732))

(assert (= (and b!86732 c!14219) b!86738))

(assert (= (and b!86732 (not c!14219)) b!86740))

(assert (= (or b!86738 b!86740) bm!8258))

(assert (= (or b!86731 bm!8258) bm!8257))

(assert (= (or b!86737 bm!8257) bm!8256))

(assert (= (and bm!8256 c!14220) b!86735))

(assert (= (and bm!8256 (not c!14220)) b!86736))

(assert (= (and d!22781 res!44541) b!86734))

(assert (= (and b!86734 res!44540) b!86733))

(declare-fun m!91969 () Bool)

(assert (=> b!86733 m!91969))

(declare-fun m!91971 () Bool)

(assert (=> b!86734 m!91971))

(declare-fun m!91973 () Bool)

(assert (=> bm!8256 m!91973))

(declare-fun m!91975 () Bool)

(assert (=> d!22781 m!91975))

(declare-fun m!91977 () Bool)

(assert (=> d!22781 m!91977))

(declare-fun m!91979 () Bool)

(assert (=> b!86735 m!91979))

(assert (=> d!22413 d!22781))

(declare-fun d!22783 () Bool)

(assert (=> d!22783 (= (apply!82 lt!40902 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1207 (getValueByKey!141 (toList!736 lt!40902) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3673 () Bool)

(assert (= bs!3673 d!22783))

(assert (=> bs!3673 m!90065))

(declare-fun m!91981 () Bool)

(assert (=> bs!3673 m!91981))

(assert (=> bs!3673 m!91981))

(declare-fun m!91983 () Bool)

(assert (=> bs!3673 m!91983))

(assert (=> b!86172 d!22783))

(declare-fun c!14222 () Bool)

(declare-fun d!22785 () Bool)

(assert (=> d!22785 (= c!14222 ((_ is ValueCellFull!923) (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000)))))

(declare-fun e!56506 () V!3025)

(assert (=> d!22785 (= (get!1204 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56506)))

(declare-fun b!86741 () Bool)

(assert (=> b!86741 (= e!56506 (get!1205 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86742 () Bool)

(assert (=> b!86742 (= e!56506 (get!1206 (select (arr!1911 (ite (or c!13888 c!13893) (_values!2320 newMap!16) lt!40522)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22785 c!14222) b!86741))

(assert (= (and d!22785 (not c!14222)) b!86742))

(assert (=> b!86741 m!90871))

(assert (=> b!86741 m!90319))

(declare-fun m!91985 () Bool)

(assert (=> b!86741 m!91985))

(assert (=> b!86742 m!90871))

(assert (=> b!86742 m!90319))

(declare-fun m!91987 () Bool)

(assert (=> b!86742 m!91987))

(assert (=> b!86172 d!22785))

(declare-fun d!22787 () Bool)

(declare-fun lt!41175 () Bool)

(assert (=> d!22787 (= lt!41175 (select (content!90 lt!40612) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun e!56508 () Bool)

(assert (=> d!22787 (= lt!41175 e!56508)))

(declare-fun res!44543 () Bool)

(assert (=> d!22787 (=> (not res!44543) (not e!56508))))

(assert (=> d!22787 (= res!44543 ((_ is Cons!1505) lt!40612))))

(assert (=> d!22787 (= (contains!749 lt!40612 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))) lt!41175)))

(declare-fun b!86743 () Bool)

(declare-fun e!56507 () Bool)

(assert (=> b!86743 (= e!56508 e!56507)))

(declare-fun res!44542 () Bool)

(assert (=> b!86743 (=> res!44542 e!56507)))

(assert (=> b!86743 (= res!44542 (= (h!2096 lt!40612) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!86744 () Bool)

(assert (=> b!86744 (= e!56507 (contains!749 (t!5222 lt!40612) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(assert (= (and d!22787 res!44543) b!86743))

(assert (= (and b!86743 (not res!44542)) b!86744))

(declare-fun m!91989 () Bool)

(assert (=> d!22787 m!91989))

(declare-fun m!91991 () Bool)

(assert (=> d!22787 m!91991))

(declare-fun m!91993 () Bool)

(assert (=> b!86744 m!91993))

(assert (=> b!85767 d!22787))

(declare-fun b!86748 () Bool)

(declare-fun e!56510 () Option!147)

(assert (=> b!86748 (= e!56510 None!145)))

(declare-fun d!22789 () Bool)

(declare-fun c!14223 () Bool)

(assert (=> d!22789 (= c!14223 (and ((_ is Cons!1505) (toList!736 lt!40574)) (= (_1!1105 (h!2096 (toList!736 lt!40574))) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56509 () Option!147)

(assert (=> d!22789 (= (getValueByKey!141 (toList!736 lt!40574) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56509)))

(declare-fun b!86746 () Bool)

(assert (=> b!86746 (= e!56509 e!56510)))

(declare-fun c!14224 () Bool)

(assert (=> b!86746 (= c!14224 (and ((_ is Cons!1505) (toList!736 lt!40574)) (not (= (_1!1105 (h!2096 (toList!736 lt!40574))) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86747 () Bool)

(assert (=> b!86747 (= e!56510 (getValueByKey!141 (t!5222 (toList!736 lt!40574)) (_1!1105 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86745 () Bool)

(assert (=> b!86745 (= e!56509 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40574)))))))

(assert (= (and d!22789 c!14223) b!86745))

(assert (= (and d!22789 (not c!14223)) b!86746))

(assert (= (and b!86746 c!14224) b!86747))

(assert (= (and b!86746 (not c!14224)) b!86748))

(declare-fun m!91995 () Bool)

(assert (=> b!86747 m!91995))

(assert (=> b!85691 d!22789))

(declare-fun b!86752 () Bool)

(declare-fun e!56512 () Option!147)

(assert (=> b!86752 (= e!56512 None!145)))

(declare-fun d!22791 () Bool)

(declare-fun c!14225 () Bool)

(assert (=> d!22791 (= c!14225 (and ((_ is Cons!1505) (toList!736 lt!40923)) (= (_1!1105 (h!2096 (toList!736 lt!40923))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56511 () Option!147)

(assert (=> d!22791 (= (getValueByKey!141 (toList!736 lt!40923) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56511)))

(declare-fun b!86750 () Bool)

(assert (=> b!86750 (= e!56511 e!56512)))

(declare-fun c!14226 () Bool)

(assert (=> b!86750 (= c!14226 (and ((_ is Cons!1505) (toList!736 lt!40923)) (not (= (_1!1105 (h!2096 (toList!736 lt!40923))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86751 () Bool)

(assert (=> b!86751 (= e!56512 (getValueByKey!141 (t!5222 (toList!736 lt!40923)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86749 () Bool)

(assert (=> b!86749 (= e!56511 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40923)))))))

(assert (= (and d!22791 c!14225) b!86749))

(assert (= (and d!22791 (not c!14225)) b!86750))

(assert (= (and b!86750 c!14226) b!86751))

(assert (= (and b!86750 (not c!14226)) b!86752))

(declare-fun m!91997 () Bool)

(assert (=> b!86751 m!91997))

(assert (=> b!86182 d!22791))

(assert (=> d!22397 d!22427))

(declare-fun d!22793 () Bool)

(assert (=> d!22793 (= (apply!82 lt!40640 lt!40620) (get!1207 (getValueByKey!141 (toList!736 lt!40640) lt!40620)))))

(declare-fun bs!3674 () Bool)

(assert (= bs!3674 d!22793))

(declare-fun m!91999 () Bool)

(assert (=> bs!3674 m!91999))

(assert (=> bs!3674 m!91999))

(declare-fun m!92001 () Bool)

(assert (=> bs!3674 m!92001))

(assert (=> b!85805 d!22793))

(declare-fun d!22795 () Bool)

(assert (=> d!22795 (= (apply!82 (+!107 lt!40634 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))) lt!40631) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40634 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))) lt!40631)))))

(declare-fun bs!3675 () Bool)

(assert (= bs!3675 d!22795))

(declare-fun m!92003 () Bool)

(assert (=> bs!3675 m!92003))

(assert (=> bs!3675 m!92003))

(declare-fun m!92005 () Bool)

(assert (=> bs!3675 m!92005))

(assert (=> b!85805 d!22795))

(declare-fun d!22797 () Bool)

(declare-fun e!56513 () Bool)

(assert (=> d!22797 e!56513))

(declare-fun res!44544 () Bool)

(assert (=> d!22797 (=> (not res!44544) (not e!56513))))

(declare-fun lt!41179 () ListLongMap!1441)

(assert (=> d!22797 (= res!44544 (contains!747 lt!41179 (_1!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))))))

(declare-fun lt!41177 () List!1509)

(assert (=> d!22797 (= lt!41179 (ListLongMap!1442 lt!41177))))

(declare-fun lt!41176 () Unit!2498)

(declare-fun lt!41178 () Unit!2498)

(assert (=> d!22797 (= lt!41176 lt!41178)))

(assert (=> d!22797 (= (getValueByKey!141 lt!41177 (_1!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))))))

(assert (=> d!22797 (= lt!41178 (lemmaContainsTupThenGetReturnValue!58 lt!41177 (_1!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))))))

(assert (=> d!22797 (= lt!41177 (insertStrictlySorted!61 (toList!736 lt!40640) (_1!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))))))

(assert (=> d!22797 (= (+!107 lt!40640 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))) lt!41179)))

(declare-fun b!86753 () Bool)

(declare-fun res!44545 () Bool)

(assert (=> b!86753 (=> (not res!44545) (not e!56513))))

(assert (=> b!86753 (= res!44545 (= (getValueByKey!141 (toList!736 lt!41179) (_1!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))))))))

(declare-fun b!86754 () Bool)

(assert (=> b!86754 (= e!56513 (contains!749 (toList!736 lt!41179) (tuple2!2189 lt!40623 (minValue!2229 newMap!16))))))

(assert (= (and d!22797 res!44544) b!86753))

(assert (= (and b!86753 res!44545) b!86754))

(declare-fun m!92007 () Bool)

(assert (=> d!22797 m!92007))

(declare-fun m!92009 () Bool)

(assert (=> d!22797 m!92009))

(declare-fun m!92011 () Bool)

(assert (=> d!22797 m!92011))

(declare-fun m!92013 () Bool)

(assert (=> d!22797 m!92013))

(declare-fun m!92015 () Bool)

(assert (=> b!86753 m!92015))

(declare-fun m!92017 () Bool)

(assert (=> b!86754 m!92017))

(assert (=> b!85805 d!22797))

(declare-fun d!22799 () Bool)

(assert (=> d!22799 (= (apply!82 lt!40634 lt!40631) (get!1207 (getValueByKey!141 (toList!736 lt!40634) lt!40631)))))

(declare-fun bs!3676 () Bool)

(assert (= bs!3676 d!22799))

(declare-fun m!92019 () Bool)

(assert (=> bs!3676 m!92019))

(assert (=> bs!3676 m!92019))

(declare-fun m!92021 () Bool)

(assert (=> bs!3676 m!92021))

(assert (=> b!85805 d!22799))

(declare-fun d!22801 () Bool)

(assert (=> d!22801 (= (apply!82 (+!107 lt!40635 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))) lt!40630) (apply!82 lt!40635 lt!40630))))

(declare-fun lt!41180 () Unit!2498)

(assert (=> d!22801 (= lt!41180 (choose!507 lt!40635 lt!40626 (minValue!2229 newMap!16) lt!40630))))

(declare-fun e!56514 () Bool)

(assert (=> d!22801 e!56514))

(declare-fun res!44546 () Bool)

(assert (=> d!22801 (=> (not res!44546) (not e!56514))))

(assert (=> d!22801 (= res!44546 (contains!747 lt!40635 lt!40630))))

(assert (=> d!22801 (= (addApplyDifferent!58 lt!40635 lt!40626 (minValue!2229 newMap!16) lt!40630) lt!41180)))

(declare-fun b!86755 () Bool)

(assert (=> b!86755 (= e!56514 (not (= lt!40630 lt!40626)))))

(assert (= (and d!22801 res!44546) b!86755))

(declare-fun m!92023 () Bool)

(assert (=> d!22801 m!92023))

(declare-fun m!92025 () Bool)

(assert (=> d!22801 m!92025))

(assert (=> d!22801 m!90349))

(assert (=> d!22801 m!90351))

(assert (=> d!22801 m!90349))

(assert (=> d!22801 m!90343))

(assert (=> b!85805 d!22801))

(declare-fun d!22803 () Bool)

(assert (=> d!22803 (= (apply!82 (+!107 lt!40640 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))) lt!40620) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40640 (tuple2!2189 lt!40623 (minValue!2229 newMap!16)))) lt!40620)))))

(declare-fun bs!3677 () Bool)

(assert (= bs!3677 d!22803))

(declare-fun m!92027 () Bool)

(assert (=> bs!3677 m!92027))

(assert (=> bs!3677 m!92027))

(declare-fun m!92029 () Bool)

(assert (=> bs!3677 m!92029))

(assert (=> b!85805 d!22803))

(declare-fun d!22805 () Bool)

(assert (=> d!22805 (= (apply!82 lt!40635 lt!40630) (get!1207 (getValueByKey!141 (toList!736 lt!40635) lt!40630)))))

(declare-fun bs!3678 () Bool)

(assert (= bs!3678 d!22805))

(declare-fun m!92031 () Bool)

(assert (=> bs!3678 m!92031))

(assert (=> bs!3678 m!92031))

(declare-fun m!92033 () Bool)

(assert (=> bs!3678 m!92033))

(assert (=> b!85805 d!22805))

(declare-fun d!22807 () Bool)

(declare-fun e!56515 () Bool)

(assert (=> d!22807 e!56515))

(declare-fun res!44547 () Bool)

(assert (=> d!22807 (=> (not res!44547) (not e!56515))))

(declare-fun lt!41184 () ListLongMap!1441)

(assert (=> d!22807 (= res!44547 (contains!747 lt!41184 (_1!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!41182 () List!1509)

(assert (=> d!22807 (= lt!41184 (ListLongMap!1442 lt!41182))))

(declare-fun lt!41181 () Unit!2498)

(declare-fun lt!41183 () Unit!2498)

(assert (=> d!22807 (= lt!41181 lt!41183)))

(assert (=> d!22807 (= (getValueByKey!141 lt!41182 (_1!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22807 (= lt!41183 (lemmaContainsTupThenGetReturnValue!58 lt!41182 (_1!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22807 (= lt!41182 (insertStrictlySorted!61 (toList!736 lt!40634) (_1!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22807 (= (+!107 lt!40634 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))) lt!41184)))

(declare-fun b!86756 () Bool)

(declare-fun res!44548 () Bool)

(assert (=> b!86756 (=> (not res!44548) (not e!56515))))

(assert (=> b!86756 (= res!44548 (= (getValueByKey!141 (toList!736 lt!41184) (_1!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86757 () Bool)

(assert (=> b!86757 (= e!56515 (contains!749 (toList!736 lt!41184) (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22807 res!44547) b!86756))

(assert (= (and b!86756 res!44548) b!86757))

(declare-fun m!92035 () Bool)

(assert (=> d!22807 m!92035))

(declare-fun m!92037 () Bool)

(assert (=> d!22807 m!92037))

(declare-fun m!92039 () Bool)

(assert (=> d!22807 m!92039))

(declare-fun m!92041 () Bool)

(assert (=> d!22807 m!92041))

(declare-fun m!92043 () Bool)

(assert (=> b!86756 m!92043))

(declare-fun m!92045 () Bool)

(assert (=> b!86757 m!92045))

(assert (=> b!85805 d!22807))

(declare-fun d!22809 () Bool)

(assert (=> d!22809 (contains!747 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))) lt!40632)))

(declare-fun lt!41185 () Unit!2498)

(assert (=> d!22809 (= lt!41185 (choose!508 lt!40628 lt!40624 (zeroValue!2229 newMap!16) lt!40632))))

(assert (=> d!22809 (contains!747 lt!40628 lt!40632)))

(assert (=> d!22809 (= (addStillContains!58 lt!40628 lt!40624 (zeroValue!2229 newMap!16) lt!40632) lt!41185)))

(declare-fun bs!3679 () Bool)

(assert (= bs!3679 d!22809))

(assert (=> bs!3679 m!90331))

(assert (=> bs!3679 m!90331))

(assert (=> bs!3679 m!90333))

(declare-fun m!92047 () Bool)

(assert (=> bs!3679 m!92047))

(declare-fun m!92049 () Bool)

(assert (=> bs!3679 m!92049))

(assert (=> b!85805 d!22809))

(declare-fun d!22811 () Bool)

(assert (=> d!22811 (= (apply!82 (+!107 lt!40640 (tuple2!2189 lt!40623 (minValue!2229 newMap!16))) lt!40620) (apply!82 lt!40640 lt!40620))))

(declare-fun lt!41186 () Unit!2498)

(assert (=> d!22811 (= lt!41186 (choose!507 lt!40640 lt!40623 (minValue!2229 newMap!16) lt!40620))))

(declare-fun e!56516 () Bool)

(assert (=> d!22811 e!56516))

(declare-fun res!44549 () Bool)

(assert (=> d!22811 (=> (not res!44549) (not e!56516))))

(assert (=> d!22811 (= res!44549 (contains!747 lt!40640 lt!40620))))

(assert (=> d!22811 (= (addApplyDifferent!58 lt!40640 lt!40623 (minValue!2229 newMap!16) lt!40620) lt!41186)))

(declare-fun b!86758 () Bool)

(assert (=> b!86758 (= e!56516 (not (= lt!40620 lt!40623)))))

(assert (= (and d!22811 res!44549) b!86758))

(declare-fun m!92051 () Bool)

(assert (=> d!22811 m!92051))

(declare-fun m!92053 () Bool)

(assert (=> d!22811 m!92053))

(assert (=> d!22811 m!90339))

(assert (=> d!22811 m!90357))

(assert (=> d!22811 m!90339))

(assert (=> d!22811 m!90355))

(assert (=> b!85805 d!22811))

(declare-fun d!22813 () Bool)

(declare-fun e!56517 () Bool)

(assert (=> d!22813 e!56517))

(declare-fun res!44550 () Bool)

(assert (=> d!22813 (=> (not res!44550) (not e!56517))))

(declare-fun lt!41190 () ListLongMap!1441)

(assert (=> d!22813 (= res!44550 (contains!747 lt!41190 (_1!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))))))

(declare-fun lt!41188 () List!1509)

(assert (=> d!22813 (= lt!41190 (ListLongMap!1442 lt!41188))))

(declare-fun lt!41187 () Unit!2498)

(declare-fun lt!41189 () Unit!2498)

(assert (=> d!22813 (= lt!41187 lt!41189)))

(assert (=> d!22813 (= (getValueByKey!141 lt!41188 (_1!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))))))

(assert (=> d!22813 (= lt!41189 (lemmaContainsTupThenGetReturnValue!58 lt!41188 (_1!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))))))

(assert (=> d!22813 (= lt!41188 (insertStrictlySorted!61 (toList!736 lt!40635) (_1!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))))))

(assert (=> d!22813 (= (+!107 lt!40635 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))) lt!41190)))

(declare-fun b!86759 () Bool)

(declare-fun res!44551 () Bool)

(assert (=> b!86759 (=> (not res!44551) (not e!56517))))

(assert (=> b!86759 (= res!44551 (= (getValueByKey!141 (toList!736 lt!41190) (_1!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))))))))

(declare-fun b!86760 () Bool)

(assert (=> b!86760 (= e!56517 (contains!749 (toList!736 lt!41190) (tuple2!2189 lt!40626 (minValue!2229 newMap!16))))))

(assert (= (and d!22813 res!44550) b!86759))

(assert (= (and b!86759 res!44551) b!86760))

(declare-fun m!92055 () Bool)

(assert (=> d!22813 m!92055))

(declare-fun m!92057 () Bool)

(assert (=> d!22813 m!92057))

(declare-fun m!92059 () Bool)

(assert (=> d!22813 m!92059))

(declare-fun m!92061 () Bool)

(assert (=> d!22813 m!92061))

(declare-fun m!92063 () Bool)

(assert (=> b!86759 m!92063))

(declare-fun m!92065 () Bool)

(assert (=> b!86760 m!92065))

(assert (=> b!85805 d!22813))

(declare-fun d!22815 () Bool)

(declare-fun e!56518 () Bool)

(assert (=> d!22815 e!56518))

(declare-fun res!44552 () Bool)

(assert (=> d!22815 (=> (not res!44552) (not e!56518))))

(declare-fun lt!41194 () ListLongMap!1441)

(assert (=> d!22815 (= res!44552 (contains!747 lt!41194 (_1!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!41192 () List!1509)

(assert (=> d!22815 (= lt!41194 (ListLongMap!1442 lt!41192))))

(declare-fun lt!41191 () Unit!2498)

(declare-fun lt!41193 () Unit!2498)

(assert (=> d!22815 (= lt!41191 lt!41193)))

(assert (=> d!22815 (= (getValueByKey!141 lt!41192 (_1!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22815 (= lt!41193 (lemmaContainsTupThenGetReturnValue!58 lt!41192 (_1!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22815 (= lt!41192 (insertStrictlySorted!61 (toList!736 lt!40628) (_1!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))) (_2!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22815 (= (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))) lt!41194)))

(declare-fun b!86761 () Bool)

(declare-fun res!44553 () Bool)

(assert (=> b!86761 (=> (not res!44553) (not e!56518))))

(assert (=> b!86761 (= res!44553 (= (getValueByKey!141 (toList!736 lt!41194) (_1!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86762 () Bool)

(assert (=> b!86762 (= e!56518 (contains!749 (toList!736 lt!41194) (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22815 res!44552) b!86761))

(assert (= (and b!86761 res!44553) b!86762))

(declare-fun m!92067 () Bool)

(assert (=> d!22815 m!92067))

(declare-fun m!92069 () Bool)

(assert (=> d!22815 m!92069))

(declare-fun m!92071 () Bool)

(assert (=> d!22815 m!92071))

(declare-fun m!92073 () Bool)

(assert (=> d!22815 m!92073))

(declare-fun m!92075 () Bool)

(assert (=> b!86761 m!92075))

(declare-fun m!92077 () Bool)

(assert (=> b!86762 m!92077))

(assert (=> b!85805 d!22815))

(declare-fun d!22817 () Bool)

(assert (=> d!22817 (= (apply!82 (+!107 lt!40634 (tuple2!2189 lt!40625 (zeroValue!2229 newMap!16))) lt!40631) (apply!82 lt!40634 lt!40631))))

(declare-fun lt!41195 () Unit!2498)

(assert (=> d!22817 (= lt!41195 (choose!507 lt!40634 lt!40625 (zeroValue!2229 newMap!16) lt!40631))))

(declare-fun e!56519 () Bool)

(assert (=> d!22817 e!56519))

(declare-fun res!44554 () Bool)

(assert (=> d!22817 (=> (not res!44554) (not e!56519))))

(assert (=> d!22817 (= res!44554 (contains!747 lt!40634 lt!40631))))

(assert (=> d!22817 (= (addApplyDifferent!58 lt!40634 lt!40625 (zeroValue!2229 newMap!16) lt!40631) lt!41195)))

(declare-fun b!86763 () Bool)

(assert (=> b!86763 (= e!56519 (not (= lt!40631 lt!40625)))))

(assert (= (and d!22817 res!44554) b!86763))

(declare-fun m!92079 () Bool)

(assert (=> d!22817 m!92079))

(declare-fun m!92081 () Bool)

(assert (=> d!22817 m!92081))

(assert (=> d!22817 m!90345))

(assert (=> d!22817 m!90347))

(assert (=> d!22817 m!90345))

(assert (=> d!22817 m!90353))

(assert (=> b!85805 d!22817))

(declare-fun d!22819 () Bool)

(assert (=> d!22819 (= (apply!82 (+!107 lt!40635 (tuple2!2189 lt!40626 (minValue!2229 newMap!16))) lt!40630) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40635 (tuple2!2189 lt!40626 (minValue!2229 newMap!16)))) lt!40630)))))

(declare-fun bs!3680 () Bool)

(assert (= bs!3680 d!22819))

(declare-fun m!92083 () Bool)

(assert (=> bs!3680 m!92083))

(assert (=> bs!3680 m!92083))

(declare-fun m!92085 () Bool)

(assert (=> bs!3680 m!92085))

(assert (=> b!85805 d!22819))

(declare-fun d!22821 () Bool)

(declare-fun e!56521 () Bool)

(assert (=> d!22821 e!56521))

(declare-fun res!44555 () Bool)

(assert (=> d!22821 (=> res!44555 e!56521)))

(declare-fun lt!41197 () Bool)

(assert (=> d!22821 (= res!44555 (not lt!41197))))

(declare-fun lt!41199 () Bool)

(assert (=> d!22821 (= lt!41197 lt!41199)))

(declare-fun lt!41196 () Unit!2498)

(declare-fun e!56520 () Unit!2498)

(assert (=> d!22821 (= lt!41196 e!56520)))

(declare-fun c!14227 () Bool)

(assert (=> d!22821 (= c!14227 lt!41199)))

(assert (=> d!22821 (= lt!41199 (containsKey!144 (toList!736 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))) lt!40632))))

(assert (=> d!22821 (= (contains!747 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16))) lt!40632) lt!41197)))

(declare-fun b!86764 () Bool)

(declare-fun lt!41198 () Unit!2498)

(assert (=> b!86764 (= e!56520 lt!41198)))

(assert (=> b!86764 (= lt!41198 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))) lt!40632))))

(assert (=> b!86764 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))) lt!40632))))

(declare-fun b!86765 () Bool)

(declare-fun Unit!2554 () Unit!2498)

(assert (=> b!86765 (= e!56520 Unit!2554)))

(declare-fun b!86766 () Bool)

(assert (=> b!86766 (= e!56521 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40628 (tuple2!2189 lt!40624 (zeroValue!2229 newMap!16)))) lt!40632)))))

(assert (= (and d!22821 c!14227) b!86764))

(assert (= (and d!22821 (not c!14227)) b!86765))

(assert (= (and d!22821 (not res!44555)) b!86766))

(declare-fun m!92087 () Bool)

(assert (=> d!22821 m!92087))

(declare-fun m!92089 () Bool)

(assert (=> b!86764 m!92089))

(declare-fun m!92091 () Bool)

(assert (=> b!86764 m!92091))

(assert (=> b!86764 m!92091))

(declare-fun m!92093 () Bool)

(assert (=> b!86764 m!92093))

(assert (=> b!86766 m!92091))

(assert (=> b!86766 m!92091))

(assert (=> b!86766 m!92093))

(assert (=> b!85805 d!22821))

(declare-fun b!86767 () Bool)

(declare-fun e!56525 () ListLongMap!1441)

(assert (=> b!86767 (= e!56525 (ListLongMap!1442 Nil!1506))))

(declare-fun b!86768 () Bool)

(assert (=> b!86768 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> b!86768 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (_values!2320 newMap!16))))))

(declare-fun e!56524 () Bool)

(declare-fun lt!41206 () ListLongMap!1441)

(assert (=> b!86768 (= e!56524 (= (apply!82 lt!41206 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86769 () Bool)

(declare-fun e!56528 () Bool)

(assert (=> b!86769 (= e!56528 (= lt!41206 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16))))))

(declare-fun b!86770 () Bool)

(declare-fun res!44558 () Bool)

(declare-fun e!56523 () Bool)

(assert (=> b!86770 (=> (not res!44558) (not e!56523))))

(assert (=> b!86770 (= res!44558 (not (contains!747 lt!41206 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86771 () Bool)

(declare-fun e!56527 () Bool)

(assert (=> b!86771 (= e!56527 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86771 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86772 () Bool)

(declare-fun e!56526 () ListLongMap!1441)

(assert (=> b!86772 (= e!56525 e!56526)))

(declare-fun c!14231 () Bool)

(assert (=> b!86772 (= c!14231 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86773 () Bool)

(declare-fun lt!41200 () Unit!2498)

(declare-fun lt!41205 () Unit!2498)

(assert (=> b!86773 (= lt!41200 lt!41205)))

(declare-fun lt!41202 () (_ BitVec 64))

(declare-fun lt!41204 () (_ BitVec 64))

(declare-fun lt!41201 () ListLongMap!1441)

(declare-fun lt!41203 () V!3025)

(assert (=> b!86773 (not (contains!747 (+!107 lt!41201 (tuple2!2189 lt!41204 lt!41203)) lt!41202))))

(assert (=> b!86773 (= lt!41205 (addStillNotContains!33 lt!41201 lt!41204 lt!41203 lt!41202))))

(assert (=> b!86773 (= lt!41202 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86773 (= lt!41203 (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86773 (= lt!41204 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!8262 () ListLongMap!1441)

(assert (=> b!86773 (= lt!41201 call!8262)))

(assert (=> b!86773 (= e!56526 (+!107 call!8262 (tuple2!2189 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) (get!1204 (select (arr!1911 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!8259 () Bool)

(assert (=> bm!8259 (= call!8262 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16)))))

(declare-fun b!86774 () Bool)

(assert (=> b!86774 (= e!56528 (isEmpty!341 lt!41206))))

(declare-fun d!22823 () Bool)

(assert (=> d!22823 e!56523))

(declare-fun res!44557 () Bool)

(assert (=> d!22823 (=> (not res!44557) (not e!56523))))

(assert (=> d!22823 (= res!44557 (not (contains!747 lt!41206 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22823 (= lt!41206 e!56525)))

(declare-fun c!14228 () Bool)

(assert (=> d!22823 (= c!14228 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22823 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!22823 (= (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41206)))

(declare-fun b!86775 () Bool)

(declare-fun e!56522 () Bool)

(assert (=> b!86775 (= e!56522 e!56528)))

(declare-fun c!14230 () Bool)

(assert (=> b!86775 (= c!14230 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86776 () Bool)

(assert (=> b!86776 (= e!56523 e!56522)))

(declare-fun c!14229 () Bool)

(assert (=> b!86776 (= c!14229 e!56527)))

(declare-fun res!44556 () Bool)

(assert (=> b!86776 (=> (not res!44556) (not e!56527))))

(assert (=> b!86776 (= res!44556 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86777 () Bool)

(assert (=> b!86777 (= e!56526 call!8262)))

(declare-fun b!86778 () Bool)

(assert (=> b!86778 (= e!56522 e!56524)))

(assert (=> b!86778 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun res!44559 () Bool)

(assert (=> b!86778 (= res!44559 (contains!747 lt!41206 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86778 (=> (not res!44559) (not e!56524))))

(assert (= (and d!22823 c!14228) b!86767))

(assert (= (and d!22823 (not c!14228)) b!86772))

(assert (= (and b!86772 c!14231) b!86773))

(assert (= (and b!86772 (not c!14231)) b!86777))

(assert (= (or b!86773 b!86777) bm!8259))

(assert (= (and d!22823 res!44557) b!86770))

(assert (= (and b!86770 res!44558) b!86776))

(assert (= (and b!86776 res!44556) b!86771))

(assert (= (and b!86776 c!14229) b!86778))

(assert (= (and b!86776 (not c!14229)) b!86775))

(assert (= (and b!86778 res!44559) b!86768))

(assert (= (and b!86775 c!14230) b!86769))

(assert (= (and b!86775 (not c!14230)) b!86774))

(declare-fun b_lambda!3847 () Bool)

(assert (=> (not b_lambda!3847) (not b!86768)))

(assert (=> b!86768 t!5233))

(declare-fun b_and!5245 () Bool)

(assert (= b_and!5241 (and (=> t!5233 result!2923) b_and!5245)))

(assert (=> b!86768 t!5235))

(declare-fun b_and!5247 () Bool)

(assert (= b_and!5243 (and (=> t!5235 result!2925) b_and!5247)))

(declare-fun b_lambda!3849 () Bool)

(assert (=> (not b_lambda!3849) (not b!86773)))

(assert (=> b!86773 t!5233))

(declare-fun b_and!5249 () Bool)

(assert (= b_and!5245 (and (=> t!5233 result!2923) b_and!5249)))

(assert (=> b!86773 t!5235))

(declare-fun b_and!5251 () Bool)

(assert (= b_and!5247 (and (=> t!5235 result!2925) b_and!5251)))

(declare-fun m!92095 () Bool)

(assert (=> b!86769 m!92095))

(declare-fun m!92097 () Bool)

(assert (=> b!86770 m!92097))

(declare-fun m!92099 () Bool)

(assert (=> b!86774 m!92099))

(assert (=> b!86778 m!90065))

(assert (=> b!86778 m!90065))

(declare-fun m!92101 () Bool)

(assert (=> b!86778 m!92101))

(declare-fun m!92103 () Bool)

(assert (=> d!22823 m!92103))

(assert (=> d!22823 m!90203))

(assert (=> bm!8259 m!92095))

(assert (=> b!86768 m!90065))

(assert (=> b!86768 m!90065))

(declare-fun m!92105 () Bool)

(assert (=> b!86768 m!92105))

(assert (=> b!86768 m!90317))

(assert (=> b!86768 m!90319))

(assert (=> b!86768 m!90321))

(assert (=> b!86768 m!90317))

(assert (=> b!86768 m!90319))

(declare-fun m!92107 () Bool)

(assert (=> b!86773 m!92107))

(assert (=> b!86773 m!90065))

(declare-fun m!92109 () Bool)

(assert (=> b!86773 m!92109))

(assert (=> b!86773 m!90317))

(assert (=> b!86773 m!90319))

(assert (=> b!86773 m!90321))

(assert (=> b!86773 m!92109))

(declare-fun m!92111 () Bool)

(assert (=> b!86773 m!92111))

(assert (=> b!86773 m!90319))

(declare-fun m!92113 () Bool)

(assert (=> b!86773 m!92113))

(assert (=> b!86773 m!90317))

(assert (=> b!86771 m!90065))

(assert (=> b!86771 m!90065))

(assert (=> b!86771 m!90073))

(assert (=> b!86772 m!90065))

(assert (=> b!86772 m!90065))

(assert (=> b!86772 m!90073))

(assert (=> b!85805 d!22823))

(declare-fun d!22825 () Bool)

(assert (=> d!22825 (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))

(assert (=> d!22825 true))

(declare-fun _$16!108 () Unit!2498)

(assert (=> d!22825 (= (choose!515 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (defaultEntry!2337 newMap!16)) _$16!108)))

(declare-fun bs!3681 () Bool)

(assert (= bs!3681 d!22825))

(assert (=> bs!3681 m!90537))

(assert (=> bs!3681 m!89961))

(assert (=> bs!3681 m!90537))

(assert (=> bs!3681 m!89961))

(assert (=> bs!3681 m!90539))

(assert (=> d!22327 d!22825))

(assert (=> d!22327 d!22427))

(assert (=> b!85690 d!22577))

(assert (=> b!85690 d!22579))

(declare-fun d!22827 () Bool)

(declare-fun e!56530 () Bool)

(assert (=> d!22827 e!56530))

(declare-fun res!44560 () Bool)

(assert (=> d!22827 (=> res!44560 e!56530)))

(declare-fun lt!41208 () Bool)

(assert (=> d!22827 (= res!44560 (not lt!41208))))

(declare-fun lt!41210 () Bool)

(assert (=> d!22827 (= lt!41208 lt!41210)))

(declare-fun lt!41207 () Unit!2498)

(declare-fun e!56529 () Unit!2498)

(assert (=> d!22827 (= lt!41207 e!56529)))

(declare-fun c!14232 () Bool)

(assert (=> d!22827 (= c!14232 lt!41210)))

(assert (=> d!22827 (= lt!41210 (containsKey!144 (toList!736 lt!40710) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22827 (= (contains!747 lt!40710 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!41208)))

(declare-fun b!86779 () Bool)

(declare-fun lt!41209 () Unit!2498)

(assert (=> b!86779 (= e!56529 lt!41209)))

(assert (=> b!86779 (= lt!41209 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40710) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> b!86779 (isDefined!93 (getValueByKey!141 (toList!736 lt!40710) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86780 () Bool)

(declare-fun Unit!2555 () Unit!2498)

(assert (=> b!86780 (= e!56529 Unit!2555)))

(declare-fun b!86781 () Bool)

(assert (=> b!86781 (= e!56530 (isDefined!93 (getValueByKey!141 (toList!736 lt!40710) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(assert (= (and d!22827 c!14232) b!86779))

(assert (= (and d!22827 (not c!14232)) b!86780))

(assert (= (and d!22827 (not res!44560)) b!86781))

(declare-fun m!92115 () Bool)

(assert (=> d!22827 m!92115))

(declare-fun m!92117 () Bool)

(assert (=> b!86779 m!92117))

(assert (=> b!86779 m!90563))

(assert (=> b!86779 m!90563))

(declare-fun m!92119 () Bool)

(assert (=> b!86779 m!92119))

(assert (=> b!86781 m!90563))

(assert (=> b!86781 m!90563))

(assert (=> b!86781 m!92119))

(assert (=> d!22333 d!22827))

(declare-fun b!86785 () Bool)

(declare-fun e!56532 () Option!147)

(assert (=> b!86785 (= e!56532 None!145)))

(declare-fun c!14233 () Bool)

(declare-fun d!22829 () Bool)

(assert (=> d!22829 (= c!14233 (and ((_ is Cons!1505) lt!40708) (= (_1!1105 (h!2096 lt!40708)) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun e!56531 () Option!147)

(assert (=> d!22829 (= (getValueByKey!141 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) e!56531)))

(declare-fun b!86783 () Bool)

(assert (=> b!86783 (= e!56531 e!56532)))

(declare-fun c!14234 () Bool)

(assert (=> b!86783 (= c!14234 (and ((_ is Cons!1505) lt!40708) (not (= (_1!1105 (h!2096 lt!40708)) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(declare-fun b!86784 () Bool)

(assert (=> b!86784 (= e!56532 (getValueByKey!141 (t!5222 lt!40708) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86782 () Bool)

(assert (=> b!86782 (= e!56531 (Some!146 (_2!1105 (h!2096 lt!40708))))))

(assert (= (and d!22829 c!14233) b!86782))

(assert (= (and d!22829 (not c!14233)) b!86783))

(assert (= (and b!86783 c!14234) b!86784))

(assert (= (and b!86783 (not c!14234)) b!86785))

(declare-fun m!92121 () Bool)

(assert (=> b!86784 m!92121))

(assert (=> d!22333 d!22829))

(declare-fun d!22831 () Bool)

(assert (=> d!22831 (= (getValueByKey!141 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (Some!146 (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun lt!41211 () Unit!2498)

(assert (=> d!22831 (= lt!41211 (choose!511 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56533 () Bool)

(assert (=> d!22831 e!56533))

(declare-fun res!44561 () Bool)

(assert (=> d!22831 (=> (not res!44561) (not e!56533))))

(assert (=> d!22831 (= res!44561 (isStrictlySorted!285 lt!40708))))

(assert (=> d!22831 (= (lemmaContainsTupThenGetReturnValue!58 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!41211)))

(declare-fun b!86786 () Bool)

(declare-fun res!44562 () Bool)

(assert (=> b!86786 (=> (not res!44562) (not e!56533))))

(assert (=> b!86786 (= res!44562 (containsKey!144 lt!40708 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86787 () Bool)

(assert (=> b!86787 (= e!56533 (contains!749 lt!40708 (tuple2!2189 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(assert (= (and d!22831 res!44561) b!86786))

(assert (= (and b!86786 res!44562) b!86787))

(assert (=> d!22831 m!90557))

(declare-fun m!92123 () Bool)

(assert (=> d!22831 m!92123))

(declare-fun m!92125 () Bool)

(assert (=> d!22831 m!92125))

(declare-fun m!92127 () Bool)

(assert (=> b!86786 m!92127))

(declare-fun m!92129 () Bool)

(assert (=> b!86787 m!92129))

(assert (=> d!22333 d!22831))

(declare-fun b!86788 () Bool)

(declare-fun e!56537 () List!1509)

(declare-fun call!8263 () List!1509)

(assert (=> b!86788 (= e!56537 call!8263)))

(declare-fun c!14238 () Bool)

(declare-fun bm!8260 () Bool)

(declare-fun call!8264 () List!1509)

(declare-fun e!56536 () List!1509)

(assert (=> bm!8260 (= call!8264 ($colon$colon!71 e!56536 (ite c!14238 (h!2096 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (tuple2!2189 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(declare-fun c!14237 () Bool)

(assert (=> bm!8260 (= c!14237 c!14238)))

(declare-fun b!86789 () Bool)

(declare-fun c!14236 () Bool)

(assert (=> b!86789 (= c!14236 (and ((_ is Cons!1505) (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (bvsgt (_1!1105 (h!2096 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun e!56534 () List!1509)

(assert (=> b!86789 (= e!56537 e!56534)))

(declare-fun lt!41212 () List!1509)

(declare-fun b!86790 () Bool)

(declare-fun e!56538 () Bool)

(assert (=> b!86790 (= e!56538 (contains!749 lt!41212 (tuple2!2189 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86791 () Bool)

(declare-fun res!44563 () Bool)

(assert (=> b!86791 (=> (not res!44563) (not e!56538))))

(assert (=> b!86791 (= res!44563 (containsKey!144 lt!41212 (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun bm!8261 () Bool)

(assert (=> bm!8261 (= call!8263 call!8264)))

(declare-fun b!86792 () Bool)

(assert (=> b!86792 (= e!56536 (insertStrictlySorted!61 (t!5222 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86793 () Bool)

(declare-fun c!14235 () Bool)

(assert (=> b!86793 (= e!56536 (ite c!14235 (t!5222 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (ite c!14236 (Cons!1505 (h!2096 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (t!5222 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))))) Nil!1506)))))

(declare-fun b!86794 () Bool)

(declare-fun e!56535 () List!1509)

(assert (=> b!86794 (= e!56535 call!8264)))

(declare-fun bm!8262 () Bool)

(declare-fun call!8265 () List!1509)

(assert (=> bm!8262 (= call!8265 call!8263)))

(declare-fun d!22833 () Bool)

(assert (=> d!22833 e!56538))

(declare-fun res!44564 () Bool)

(assert (=> d!22833 (=> (not res!44564) (not e!56538))))

(assert (=> d!22833 (= res!44564 (isStrictlySorted!285 lt!41212))))

(assert (=> d!22833 (= lt!41212 e!56535)))

(assert (=> d!22833 (= c!14238 (and ((_ is Cons!1505) (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (bvslt (_1!1105 (h!2096 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(assert (=> d!22833 (isStrictlySorted!285 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))))))

(assert (=> d!22833 (= (insertStrictlySorted!61 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_2!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!41212)))

(declare-fun b!86795 () Bool)

(assert (=> b!86795 (= e!56534 call!8265)))

(declare-fun b!86796 () Bool)

(assert (=> b!86796 (= e!56535 e!56537)))

(assert (=> b!86796 (= c!14235 (and ((_ is Cons!1505) (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048)))) (= (_1!1105 (h!2096 (toList!736 (ite c!13853 call!8051 (ite c!13852 call!8046 call!8048))))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86797 () Bool)

(assert (=> b!86797 (= e!56534 call!8265)))

(assert (= (and d!22833 c!14238) b!86794))

(assert (= (and d!22833 (not c!14238)) b!86796))

(assert (= (and b!86796 c!14235) b!86788))

(assert (= (and b!86796 (not c!14235)) b!86789))

(assert (= (and b!86789 c!14236) b!86795))

(assert (= (and b!86789 (not c!14236)) b!86797))

(assert (= (or b!86795 b!86797) bm!8262))

(assert (= (or b!86788 bm!8262) bm!8261))

(assert (= (or b!86794 bm!8261) bm!8260))

(assert (= (and bm!8260 c!14237) b!86792))

(assert (= (and bm!8260 (not c!14237)) b!86793))

(assert (= (and d!22833 res!44564) b!86791))

(assert (= (and b!86791 res!44563) b!86790))

(declare-fun m!92131 () Bool)

(assert (=> b!86790 m!92131))

(declare-fun m!92133 () Bool)

(assert (=> b!86791 m!92133))

(declare-fun m!92135 () Bool)

(assert (=> bm!8260 m!92135))

(declare-fun m!92137 () Bool)

(assert (=> d!22833 m!92137))

(declare-fun m!92139 () Bool)

(assert (=> d!22833 m!92139))

(declare-fun m!92141 () Bool)

(assert (=> b!86792 m!92141))

(assert (=> d!22333 d!22833))

(declare-fun d!22835 () Bool)

(assert (=> d!22835 (isDefined!93 (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197)))))

(declare-fun lt!41213 () Unit!2498)

(assert (=> d!22835 (= lt!41213 (choose!517 (toList!736 lt!40376) (_1!1105 lt!40197)))))

(declare-fun e!56539 () Bool)

(assert (=> d!22835 e!56539))

(declare-fun res!44565 () Bool)

(assert (=> d!22835 (=> (not res!44565) (not e!56539))))

(assert (=> d!22835 (= res!44565 (isStrictlySorted!285 (toList!736 lt!40376)))))

(assert (=> d!22835 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40376) (_1!1105 lt!40197)) lt!41213)))

(declare-fun b!86798 () Bool)

(assert (=> b!86798 (= e!56539 (containsKey!144 (toList!736 lt!40376) (_1!1105 lt!40197)))))

(assert (= (and d!22835 res!44565) b!86798))

(assert (=> d!22835 m!89887))

(assert (=> d!22835 m!89887))

(assert (=> d!22835 m!90289))

(declare-fun m!92143 () Bool)

(assert (=> d!22835 m!92143))

(declare-fun m!92145 () Bool)

(assert (=> d!22835 m!92145))

(assert (=> b!86798 m!90285))

(assert (=> b!85781 d!22835))

(declare-fun d!22837 () Bool)

(assert (=> d!22837 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40376) (_1!1105 lt!40197)))))))

(declare-fun bs!3682 () Bool)

(assert (= bs!3682 d!22837))

(assert (=> bs!3682 m!89887))

(declare-fun m!92147 () Bool)

(assert (=> bs!3682 m!92147))

(assert (=> b!85781 d!22837))

(assert (=> b!85781 d!22177))

(assert (=> b!85827 d!22597))

(assert (=> b!85827 d!22307))

(declare-fun d!22839 () Bool)

(declare-fun res!44566 () Bool)

(declare-fun e!56540 () Bool)

(assert (=> d!22839 (=> res!44566 e!56540)))

(assert (=> d!22839 (= res!44566 (or ((_ is Nil!1506) lt!40696) ((_ is Nil!1506) (t!5222 lt!40696))))))

(assert (=> d!22839 (= (isStrictlySorted!285 lt!40696) e!56540)))

(declare-fun b!86799 () Bool)

(declare-fun e!56541 () Bool)

(assert (=> b!86799 (= e!56540 e!56541)))

(declare-fun res!44567 () Bool)

(assert (=> b!86799 (=> (not res!44567) (not e!56541))))

(assert (=> b!86799 (= res!44567 (bvslt (_1!1105 (h!2096 lt!40696)) (_1!1105 (h!2096 (t!5222 lt!40696)))))))

(declare-fun b!86800 () Bool)

(assert (=> b!86800 (= e!56541 (isStrictlySorted!285 (t!5222 lt!40696)))))

(assert (= (and d!22839 (not res!44566)) b!86799))

(assert (= (and b!86799 res!44567) b!86800))

(declare-fun m!92149 () Bool)

(assert (=> b!86800 m!92149))

(assert (=> d!22325 d!22839))

(assert (=> d!22325 d!22625))

(declare-fun d!22841 () Bool)

(declare-fun e!56543 () Bool)

(assert (=> d!22841 e!56543))

(declare-fun res!44568 () Bool)

(assert (=> d!22841 (=> res!44568 e!56543)))

(declare-fun lt!41215 () Bool)

(assert (=> d!22841 (= res!44568 (not lt!41215))))

(declare-fun lt!41217 () Bool)

(assert (=> d!22841 (= lt!41215 lt!41217)))

(declare-fun lt!41214 () Unit!2498)

(declare-fun e!56542 () Unit!2498)

(assert (=> d!22841 (= lt!41214 e!56542)))

(declare-fun c!14239 () Bool)

(assert (=> d!22841 (= c!14239 lt!41217)))

(assert (=> d!22841 (= lt!41217 (containsKey!144 (toList!736 lt!40718) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22841 (= (contains!747 lt!40718 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41215)))

(declare-fun b!86801 () Bool)

(declare-fun lt!41216 () Unit!2498)

(assert (=> b!86801 (= e!56542 lt!41216)))

(assert (=> b!86801 (= lt!41216 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40718) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86801 (isDefined!93 (getValueByKey!141 (toList!736 lt!40718) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86802 () Bool)

(declare-fun Unit!2556 () Unit!2498)

(assert (=> b!86802 (= e!56542 Unit!2556)))

(declare-fun b!86803 () Bool)

(assert (=> b!86803 (= e!56543 (isDefined!93 (getValueByKey!141 (toList!736 lt!40718) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22841 c!14239) b!86801))

(assert (= (and d!22841 (not c!14239)) b!86802))

(assert (= (and d!22841 (not res!44568)) b!86803))

(declare-fun m!92151 () Bool)

(assert (=> d!22841 m!92151))

(declare-fun m!92153 () Bool)

(assert (=> b!86801 m!92153))

(assert (=> b!86801 m!90605))

(assert (=> b!86801 m!90605))

(declare-fun m!92155 () Bool)

(assert (=> b!86801 m!92155))

(assert (=> b!86803 m!90605))

(assert (=> b!86803 m!90605))

(assert (=> b!86803 m!92155))

(assert (=> d!22345 d!22841))

(declare-fun b!86807 () Bool)

(declare-fun e!56545 () Option!147)

(assert (=> b!86807 (= e!56545 None!145)))

(declare-fun d!22843 () Bool)

(declare-fun c!14240 () Bool)

(assert (=> d!22843 (= c!14240 (and ((_ is Cons!1505) lt!40716) (= (_1!1105 (h!2096 lt!40716)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56544 () Option!147)

(assert (=> d!22843 (= (getValueByKey!141 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56544)))

(declare-fun b!86805 () Bool)

(assert (=> b!86805 (= e!56544 e!56545)))

(declare-fun c!14241 () Bool)

(assert (=> b!86805 (= c!14241 (and ((_ is Cons!1505) lt!40716) (not (= (_1!1105 (h!2096 lt!40716)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86806 () Bool)

(assert (=> b!86806 (= e!56545 (getValueByKey!141 (t!5222 lt!40716) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86804 () Bool)

(assert (=> b!86804 (= e!56544 (Some!146 (_2!1105 (h!2096 lt!40716))))))

(assert (= (and d!22843 c!14240) b!86804))

(assert (= (and d!22843 (not c!14240)) b!86805))

(assert (= (and b!86805 c!14241) b!86806))

(assert (= (and b!86805 (not c!14241)) b!86807))

(declare-fun m!92157 () Bool)

(assert (=> b!86806 m!92157))

(assert (=> d!22345 d!22843))

(declare-fun d!22845 () Bool)

(assert (=> d!22845 (= (getValueByKey!141 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41218 () Unit!2498)

(assert (=> d!22845 (= lt!41218 (choose!511 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56546 () Bool)

(assert (=> d!22845 e!56546))

(declare-fun res!44569 () Bool)

(assert (=> d!22845 (=> (not res!44569) (not e!56546))))

(assert (=> d!22845 (= res!44569 (isStrictlySorted!285 lt!40716))))

(assert (=> d!22845 (= (lemmaContainsTupThenGetReturnValue!58 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41218)))

(declare-fun b!86808 () Bool)

(declare-fun res!44570 () Bool)

(assert (=> b!86808 (=> (not res!44570) (not e!56546))))

(assert (=> b!86808 (= res!44570 (containsKey!144 lt!40716 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86809 () Bool)

(assert (=> b!86809 (= e!56546 (contains!749 lt!40716 (tuple2!2189 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22845 res!44569) b!86808))

(assert (= (and b!86808 res!44570) b!86809))

(assert (=> d!22845 m!90599))

(declare-fun m!92159 () Bool)

(assert (=> d!22845 m!92159))

(declare-fun m!92161 () Bool)

(assert (=> d!22845 m!92161))

(declare-fun m!92163 () Bool)

(assert (=> b!86808 m!92163))

(declare-fun m!92165 () Bool)

(assert (=> b!86809 m!92165))

(assert (=> d!22345 d!22845))

(declare-fun b!86810 () Bool)

(declare-fun e!56550 () List!1509)

(declare-fun call!8266 () List!1509)

(assert (=> b!86810 (= e!56550 call!8266)))

(declare-fun e!56549 () List!1509)

(declare-fun c!14245 () Bool)

(declare-fun call!8267 () List!1509)

(declare-fun bm!8263 () Bool)

(assert (=> bm!8263 (= call!8267 ($colon$colon!71 e!56549 (ite c!14245 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14244 () Bool)

(assert (=> bm!8263 (= c!14244 c!14245)))

(declare-fun b!86811 () Bool)

(declare-fun c!14243 () Bool)

(assert (=> b!86811 (= c!14243 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56547 () List!1509)

(assert (=> b!86811 (= e!56550 e!56547)))

(declare-fun b!86812 () Bool)

(declare-fun e!56551 () Bool)

(declare-fun lt!41219 () List!1509)

(assert (=> b!86812 (= e!56551 (contains!749 lt!41219 (tuple2!2189 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86813 () Bool)

(declare-fun res!44571 () Bool)

(assert (=> b!86813 (=> (not res!44571) (not e!56551))))

(assert (=> b!86813 (= res!44571 (containsKey!144 lt!41219 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8264 () Bool)

(assert (=> bm!8264 (= call!8266 call!8267)))

(declare-fun b!86814 () Bool)

(assert (=> b!86814 (= e!56549 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40187)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun c!14242 () Bool)

(declare-fun b!86815 () Bool)

(assert (=> b!86815 (= e!56549 (ite c!14242 (t!5222 (toList!736 lt!40187)) (ite c!14243 (Cons!1505 (h!2096 (toList!736 lt!40187)) (t!5222 (toList!736 lt!40187))) Nil!1506)))))

(declare-fun b!86816 () Bool)

(declare-fun e!56548 () List!1509)

(assert (=> b!86816 (= e!56548 call!8267)))

(declare-fun bm!8265 () Bool)

(declare-fun call!8268 () List!1509)

(assert (=> bm!8265 (= call!8268 call!8266)))

(declare-fun d!22847 () Bool)

(assert (=> d!22847 e!56551))

(declare-fun res!44572 () Bool)

(assert (=> d!22847 (=> (not res!44572) (not e!56551))))

(assert (=> d!22847 (= res!44572 (isStrictlySorted!285 lt!41219))))

(assert (=> d!22847 (= lt!41219 e!56548)))

(assert (=> d!22847 (= c!14245 (and ((_ is Cons!1505) (toList!736 lt!40187)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22847 (isStrictlySorted!285 (toList!736 lt!40187))))

(assert (=> d!22847 (= (insertStrictlySorted!61 (toList!736 lt!40187) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41219)))

(declare-fun b!86817 () Bool)

(assert (=> b!86817 (= e!56547 call!8268)))

(declare-fun b!86818 () Bool)

(assert (=> b!86818 (= e!56548 e!56550)))

(assert (=> b!86818 (= c!14242 (and ((_ is Cons!1505) (toList!736 lt!40187)) (= (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86819 () Bool)

(assert (=> b!86819 (= e!56547 call!8268)))

(assert (= (and d!22847 c!14245) b!86816))

(assert (= (and d!22847 (not c!14245)) b!86818))

(assert (= (and b!86818 c!14242) b!86810))

(assert (= (and b!86818 (not c!14242)) b!86811))

(assert (= (and b!86811 c!14243) b!86817))

(assert (= (and b!86811 (not c!14243)) b!86819))

(assert (= (or b!86817 b!86819) bm!8265))

(assert (= (or b!86810 bm!8265) bm!8264))

(assert (= (or b!86816 bm!8264) bm!8263))

(assert (= (and bm!8263 c!14244) b!86814))

(assert (= (and bm!8263 (not c!14244)) b!86815))

(assert (= (and d!22847 res!44572) b!86813))

(assert (= (and b!86813 res!44571) b!86812))

(declare-fun m!92167 () Bool)

(assert (=> b!86812 m!92167))

(declare-fun m!92169 () Bool)

(assert (=> b!86813 m!92169))

(declare-fun m!92171 () Bool)

(assert (=> bm!8263 m!92171))

(declare-fun m!92173 () Bool)

(assert (=> d!22847 m!92173))

(assert (=> d!22847 m!90243))

(declare-fun m!92175 () Bool)

(assert (=> b!86814 m!92175))

(assert (=> d!22345 d!22847))

(declare-fun d!22849 () Bool)

(declare-fun res!44573 () Bool)

(declare-fun e!56552 () Bool)

(assert (=> d!22849 (=> res!44573 e!56552)))

(assert (=> d!22849 (= res!44573 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))))) lt!40345)))))

(assert (=> d!22849 (= (containsKey!144 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345) e!56552)))

(declare-fun b!86820 () Bool)

(declare-fun e!56553 () Bool)

(assert (=> b!86820 (= e!56552 e!56553)))

(declare-fun res!44574 () Bool)

(assert (=> b!86820 (=> (not res!44574) (not e!56553))))

(assert (=> b!86820 (= res!44574 (and (or (not ((_ is Cons!1505) (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))))) (bvsle (_1!1105 (h!2096 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))))) lt!40345)) ((_ is Cons!1505) (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))))) lt!40345)))))

(declare-fun b!86821 () Bool)

(assert (=> b!86821 (= e!56553 (containsKey!144 (t!5222 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))) lt!40345))))

(assert (= (and d!22849 (not res!44573)) b!86820))

(assert (= (and b!86820 res!44574) b!86821))

(declare-fun m!92177 () Bool)

(assert (=> b!86821 m!92177))

(assert (=> d!22299 d!22849))

(declare-fun d!22851 () Bool)

(declare-fun res!44575 () Bool)

(declare-fun e!56554 () Bool)

(assert (=> d!22851 (=> res!44575 e!56554)))

(assert (=> d!22851 (= res!44575 (= (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!22851 (= (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!56554)))

(declare-fun b!86822 () Bool)

(declare-fun e!56555 () Bool)

(assert (=> b!86822 (= e!56554 e!56555)))

(declare-fun res!44576 () Bool)

(assert (=> b!86822 (=> (not res!44576) (not e!56555))))

(assert (=> b!86822 (= res!44576 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!86823 () Bool)

(assert (=> b!86823 (= e!56555 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22851 (not res!44575)) b!86822))

(assert (= (and b!86822 res!44576) b!86823))

(assert (=> d!22851 m!91605))

(assert (=> b!86823 m!89569))

(declare-fun m!92179 () Bool)

(assert (=> b!86823 m!92179))

(assert (=> b!85845 d!22851))

(assert (=> d!22241 d!22123))

(declare-fun d!22853 () Bool)

(declare-fun lt!41220 () Bool)

(assert (=> d!22853 (= lt!41220 (select (content!90 (toList!736 lt!40562)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun e!56557 () Bool)

(assert (=> d!22853 (= lt!41220 e!56557)))

(declare-fun res!44578 () Bool)

(assert (=> d!22853 (=> (not res!44578) (not e!56557))))

(assert (=> d!22853 (= res!44578 ((_ is Cons!1505) (toList!736 lt!40562)))))

(assert (=> d!22853 (= (contains!749 (toList!736 lt!40562) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41220)))

(declare-fun b!86824 () Bool)

(declare-fun e!56556 () Bool)

(assert (=> b!86824 (= e!56557 e!56556)))

(declare-fun res!44577 () Bool)

(assert (=> b!86824 (=> res!44577 e!56556)))

(assert (=> b!86824 (= res!44577 (= (h!2096 (toList!736 lt!40562)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun b!86825 () Bool)

(assert (=> b!86825 (= e!56556 (contains!749 (t!5222 (toList!736 lt!40562)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22853 res!44578) b!86824))

(assert (= (and b!86824 (not res!44577)) b!86825))

(declare-fun m!92181 () Bool)

(assert (=> d!22853 m!92181))

(declare-fun m!92183 () Bool)

(assert (=> d!22853 m!92183))

(declare-fun m!92185 () Bool)

(assert (=> b!86825 m!92185))

(assert (=> b!85685 d!22853))

(declare-fun d!22855 () Bool)

(declare-fun lt!41221 () Bool)

(assert (=> d!22855 (= lt!41221 (select (content!90 lt!40754) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun e!56559 () Bool)

(assert (=> d!22855 (= lt!41221 e!56559)))

(declare-fun res!44580 () Bool)

(assert (=> d!22855 (=> (not res!44580) (not e!56559))))

(assert (=> d!22855 (= res!44580 ((_ is Cons!1505) lt!40754))))

(assert (=> d!22855 (= (contains!749 lt!40754 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))) lt!41221)))

(declare-fun b!86826 () Bool)

(declare-fun e!56558 () Bool)

(assert (=> b!86826 (= e!56559 e!56558)))

(declare-fun res!44579 () Bool)

(assert (=> b!86826 (=> res!44579 e!56558)))

(assert (=> b!86826 (= res!44579 (= (h!2096 lt!40754) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!86827 () Bool)

(assert (=> b!86827 (= e!56558 (contains!749 (t!5222 lt!40754) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(assert (= (and d!22855 res!44580) b!86826))

(assert (= (and b!86826 (not res!44579)) b!86827))

(declare-fun m!92187 () Bool)

(assert (=> d!22855 m!92187))

(declare-fun m!92189 () Bool)

(assert (=> d!22855 m!92189))

(declare-fun m!92191 () Bool)

(assert (=> b!86827 m!92191))

(assert (=> b!86041 d!22855))

(declare-fun d!22857 () Bool)

(assert (=> d!22857 (= (content!91 Nil!1505) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!22181 d!22857))

(assert (=> b!86164 d!22419))

(assert (=> d!22247 d!22245))

(declare-fun d!22859 () Bool)

(assert (=> d!22859 (= (getValueByKey!141 lt!40366 (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182)))))

(assert (=> d!22859 true))

(declare-fun _$22!421 () Unit!2498)

(assert (=> d!22859 (= (choose!511 lt!40366 (_1!1105 lt!40182) (_2!1105 lt!40182)) _$22!421)))

(declare-fun bs!3683 () Bool)

(assert (= bs!3683 d!22859))

(assert (=> bs!3683 m!89857))

(assert (=> d!22247 d!22859))

(declare-fun d!22861 () Bool)

(declare-fun res!44581 () Bool)

(declare-fun e!56560 () Bool)

(assert (=> d!22861 (=> res!44581 e!56560)))

(assert (=> d!22861 (= res!44581 (or ((_ is Nil!1506) lt!40366) ((_ is Nil!1506) (t!5222 lt!40366))))))

(assert (=> d!22861 (= (isStrictlySorted!285 lt!40366) e!56560)))

(declare-fun b!86828 () Bool)

(declare-fun e!56561 () Bool)

(assert (=> b!86828 (= e!56560 e!56561)))

(declare-fun res!44582 () Bool)

(assert (=> b!86828 (=> (not res!44582) (not e!56561))))

(assert (=> b!86828 (= res!44582 (bvslt (_1!1105 (h!2096 lt!40366)) (_1!1105 (h!2096 (t!5222 lt!40366)))))))

(declare-fun b!86829 () Bool)

(assert (=> b!86829 (= e!56561 (isStrictlySorted!285 (t!5222 lt!40366)))))

(assert (= (and d!22861 (not res!44581)) b!86828))

(assert (= (and b!86828 res!44582) b!86829))

(declare-fun m!92193 () Bool)

(assert (=> b!86829 m!92193))

(assert (=> d!22247 d!22861))

(declare-fun d!22863 () Bool)

(declare-fun res!44583 () Bool)

(declare-fun e!56562 () Bool)

(assert (=> d!22863 (=> res!44583 e!56562)))

(assert (=> d!22863 (= res!44583 (and ((_ is Cons!1505) lt!40326) (= (_1!1105 (h!2096 lt!40326)) (_1!1105 lt!40197))))))

(assert (=> d!22863 (= (containsKey!144 lt!40326 (_1!1105 lt!40197)) e!56562)))

(declare-fun b!86830 () Bool)

(declare-fun e!56563 () Bool)

(assert (=> b!86830 (= e!56562 e!56563)))

(declare-fun res!44584 () Bool)

(assert (=> b!86830 (=> (not res!44584) (not e!56563))))

(assert (=> b!86830 (= res!44584 (and (or (not ((_ is Cons!1505) lt!40326)) (bvsle (_1!1105 (h!2096 lt!40326)) (_1!1105 lt!40197))) ((_ is Cons!1505) lt!40326) (bvslt (_1!1105 (h!2096 lt!40326)) (_1!1105 lt!40197))))))

(declare-fun b!86831 () Bool)

(assert (=> b!86831 (= e!56563 (containsKey!144 (t!5222 lt!40326) (_1!1105 lt!40197)))))

(assert (= (and d!22863 (not res!44583)) b!86830))

(assert (= (and b!86830 res!44584) b!86831))

(declare-fun m!92195 () Bool)

(assert (=> b!86831 m!92195))

(assert (=> b!85832 d!22863))

(declare-fun d!22865 () Bool)

(assert (=> d!22865 (= (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40433)) (v!2654 (getValueByKey!141 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40433)))))

(assert (=> d!22207 d!22865))

(declare-fun b!86835 () Bool)

(declare-fun e!56565 () Option!147)

(assert (=> b!86835 (= e!56565 None!145)))

(declare-fun d!22867 () Bool)

(declare-fun c!14246 () Bool)

(assert (=> d!22867 (= c!14246 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40433)))))

(declare-fun e!56564 () Option!147)

(assert (=> d!22867 (= (getValueByKey!141 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40433) e!56564)))

(declare-fun b!86833 () Bool)

(assert (=> b!86833 (= e!56564 e!56565)))

(declare-fun c!14247 () Bool)

(assert (=> b!86833 (= c!14247 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (not (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40433))))))

(declare-fun b!86834 () Bool)

(assert (=> b!86834 (= e!56565 (getValueByKey!141 (t!5222 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!40433))))

(declare-fun b!86832 () Bool)

(assert (=> b!86832 (= e!56564 (Some!146 (_2!1105 (h!2096 (toList!736 (+!107 lt!40438 (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(assert (= (and d!22867 c!14246) b!86832))

(assert (= (and d!22867 (not c!14246)) b!86833))

(assert (= (and b!86833 c!14247) b!86834))

(assert (= (and b!86833 (not c!14247)) b!86835))

(declare-fun m!92197 () Bool)

(assert (=> b!86834 m!92197))

(assert (=> d!22207 d!22867))

(assert (=> b!85943 d!22419))

(declare-fun b!86839 () Bool)

(declare-fun e!56567 () Option!147)

(assert (=> b!86839 (= e!56567 None!145)))

(declare-fun d!22869 () Bool)

(declare-fun c!14248 () Bool)

(assert (=> d!22869 (= c!14248 (and ((_ is Cons!1505) (toList!736 lt!40710)) (= (_1!1105 (h!2096 (toList!736 lt!40710))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun e!56566 () Option!147)

(assert (=> d!22869 (= (getValueByKey!141 (toList!736 lt!40710) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) e!56566)))

(declare-fun b!86837 () Bool)

(assert (=> b!86837 (= e!56566 e!56567)))

(declare-fun c!14249 () Bool)

(assert (=> b!86837 (= c!14249 (and ((_ is Cons!1505) (toList!736 lt!40710)) (not (= (_1!1105 (h!2096 (toList!736 lt!40710))) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))))

(declare-fun b!86838 () Bool)

(assert (=> b!86838 (= e!56567 (getValueByKey!141 (t!5222 (toList!736 lt!40710)) (_1!1105 (ite (or c!13853 c!13852) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86836 () Bool)

(assert (=> b!86836 (= e!56566 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40710)))))))

(assert (= (and d!22869 c!14248) b!86836))

(assert (= (and d!22869 (not c!14248)) b!86837))

(assert (= (and b!86837 c!14249) b!86838))

(assert (= (and b!86837 (not c!14249)) b!86839))

(declare-fun m!92199 () Bool)

(assert (=> b!86838 m!92199))

(assert (=> b!85981 d!22869))

(declare-fun d!22871 () Bool)

(declare-fun res!44585 () Bool)

(declare-fun e!56568 () Bool)

(assert (=> d!22871 (=> res!44585 e!56568)))

(assert (=> d!22871 (= res!44585 (and ((_ is Cons!1505) (toList!736 lt!40349)) (= (_1!1105 (h!2096 (toList!736 lt!40349))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22871 (= (containsKey!144 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000) e!56568)))

(declare-fun b!86840 () Bool)

(declare-fun e!56569 () Bool)

(assert (=> b!86840 (= e!56568 e!56569)))

(declare-fun res!44586 () Bool)

(assert (=> b!86840 (=> (not res!44586) (not e!56569))))

(assert (=> b!86840 (= res!44586 (and (or (not ((_ is Cons!1505) (toList!736 lt!40349))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40349))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1505) (toList!736 lt!40349)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40349))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86841 () Bool)

(assert (=> b!86841 (= e!56569 (containsKey!144 (t!5222 (toList!736 lt!40349)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22871 (not res!44585)) b!86840))

(assert (= (and b!86840 res!44586) b!86841))

(declare-fun m!92201 () Bool)

(assert (=> b!86841 m!92201))

(assert (=> d!22403 d!22871))

(declare-fun d!22873 () Bool)

(declare-fun lt!41222 () Bool)

(assert (=> d!22873 (= lt!41222 (select (content!90 (toList!736 lt!40718)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56571 () Bool)

(assert (=> d!22873 (= lt!41222 e!56571)))

(declare-fun res!44588 () Bool)

(assert (=> d!22873 (=> (not res!44588) (not e!56571))))

(assert (=> d!22873 (= res!44588 ((_ is Cons!1505) (toList!736 lt!40718)))))

(assert (=> d!22873 (= (contains!749 (toList!736 lt!40718) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41222)))

(declare-fun b!86842 () Bool)

(declare-fun e!56570 () Bool)

(assert (=> b!86842 (= e!56571 e!56570)))

(declare-fun res!44587 () Bool)

(assert (=> b!86842 (=> res!44587 e!56570)))

(assert (=> b!86842 (= res!44587 (= (h!2096 (toList!736 lt!40718)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86843 () Bool)

(assert (=> b!86843 (= e!56570 (contains!749 (t!5222 (toList!736 lt!40718)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22873 res!44588) b!86842))

(assert (= (and b!86842 (not res!44587)) b!86843))

(declare-fun m!92203 () Bool)

(assert (=> d!22873 m!92203))

(declare-fun m!92205 () Bool)

(assert (=> d!22873 m!92205))

(declare-fun m!92207 () Bool)

(assert (=> b!86843 m!92207))

(assert (=> b!85994 d!22873))

(declare-fun d!22875 () Bool)

(assert (=> d!22875 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))

(declare-fun lt!41223 () Unit!2498)

(assert (=> d!22875 (= lt!41223 (choose!517 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))

(declare-fun e!56572 () Bool)

(assert (=> d!22875 e!56572))

(declare-fun res!44589 () Bool)

(assert (=> d!22875 (=> (not res!44589) (not e!56572))))

(assert (=> d!22875 (= res!44589 (isStrictlySorted!285 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))))))

(assert (=> d!22875 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345) lt!41223)))

(declare-fun b!86844 () Bool)

(assert (=> b!86844 (= e!56572 (containsKey!144 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))

(assert (= (and d!22875 res!44589) b!86844))

(assert (=> d!22875 m!90449))

(assert (=> d!22875 m!90449))

(assert (=> d!22875 m!90451))

(declare-fun m!92209 () Bool)

(assert (=> d!22875 m!92209))

(declare-fun m!92211 () Bool)

(assert (=> d!22875 m!92211))

(assert (=> b!86844 m!90445))

(assert (=> b!85913 d!22875))

(declare-fun d!22877 () Bool)

(assert (=> d!22877 (= (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345)) (not (isEmpty!343 (getValueByKey!141 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345))))))

(declare-fun bs!3684 () Bool)

(assert (= bs!3684 d!22877))

(assert (=> bs!3684 m!90449))

(declare-fun m!92213 () Bool)

(assert (=> bs!3684 m!92213))

(assert (=> b!85913 d!22877))

(declare-fun b!86848 () Bool)

(declare-fun e!56574 () Option!147)

(assert (=> b!86848 (= e!56574 None!145)))

(declare-fun c!14250 () Bool)

(declare-fun d!22879 () Bool)

(assert (=> d!22879 (= c!14250 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))))) lt!40345)))))

(declare-fun e!56573 () Option!147)

(assert (=> d!22879 (= (getValueByKey!141 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))) lt!40345) e!56573)))

(declare-fun b!86846 () Bool)

(assert (=> b!86846 (= e!56573 e!56574)))

(declare-fun c!14251 () Bool)

(assert (=> b!86846 (= c!14251 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))) (not (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346))))) lt!40345))))))

(declare-fun b!86847 () Bool)

(assert (=> b!86847 (= e!56574 (getValueByKey!141 (t!5222 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))) lt!40345))))

(declare-fun b!86845 () Bool)

(assert (=> b!86845 (= e!56573 (Some!146 (_2!1105 (h!2096 (toList!736 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)))))))))

(assert (= (and d!22879 c!14250) b!86845))

(assert (= (and d!22879 (not c!14250)) b!86846))

(assert (= (and b!86846 c!14251) b!86847))

(assert (= (and b!86846 (not c!14251)) b!86848))

(declare-fun m!92215 () Bool)

(assert (=> b!86847 m!92215))

(assert (=> b!85913 d!22879))

(declare-fun d!22881 () Bool)

(declare-fun e!56576 () Bool)

(assert (=> d!22881 e!56576))

(declare-fun res!44590 () Bool)

(assert (=> d!22881 (=> res!44590 e!56576)))

(declare-fun lt!41225 () Bool)

(assert (=> d!22881 (= res!44590 (not lt!41225))))

(declare-fun lt!41227 () Bool)

(assert (=> d!22881 (= lt!41225 lt!41227)))

(declare-fun lt!41224 () Unit!2498)

(declare-fun e!56575 () Unit!2498)

(assert (=> d!22881 (= lt!41224 e!56575)))

(declare-fun c!14252 () Bool)

(assert (=> d!22881 (= c!14252 lt!41227)))

(assert (=> d!22881 (= lt!41227 (containsKey!144 (toList!736 lt!40543) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22881 (= (contains!747 lt!40543 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41225)))

(declare-fun b!86849 () Bool)

(declare-fun lt!41226 () Unit!2498)

(assert (=> b!86849 (= e!56575 lt!41226)))

(assert (=> b!86849 (= lt!41226 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40543) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86849 (isDefined!93 (getValueByKey!141 (toList!736 lt!40543) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86850 () Bool)

(declare-fun Unit!2557 () Unit!2498)

(assert (=> b!86850 (= e!56575 Unit!2557)))

(declare-fun b!86851 () Bool)

(assert (=> b!86851 (= e!56576 (isDefined!93 (getValueByKey!141 (toList!736 lt!40543) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22881 c!14252) b!86849))

(assert (= (and d!22881 (not c!14252)) b!86850))

(assert (= (and d!22881 (not res!44590)) b!86851))

(declare-fun m!92217 () Bool)

(assert (=> d!22881 m!92217))

(declare-fun m!92219 () Bool)

(assert (=> b!86849 m!92219))

(declare-fun m!92221 () Bool)

(assert (=> b!86849 m!92221))

(assert (=> b!86849 m!92221))

(declare-fun m!92223 () Bool)

(assert (=> b!86849 m!92223))

(assert (=> b!86851 m!92221))

(assert (=> b!86851 m!92221))

(assert (=> b!86851 m!92223))

(assert (=> d!22171 d!22881))

(assert (=> d!22171 d!22143))

(declare-fun d!22883 () Bool)

(declare-fun e!56577 () Bool)

(assert (=> d!22883 e!56577))

(declare-fun res!44591 () Bool)

(assert (=> d!22883 (=> (not res!44591) (not e!56577))))

(declare-fun lt!41231 () ListLongMap!1441)

(assert (=> d!22883 (= res!44591 (contains!747 lt!41231 (_1!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(declare-fun lt!41229 () List!1509)

(assert (=> d!22883 (= lt!41231 (ListLongMap!1442 lt!41229))))

(declare-fun lt!41228 () Unit!2498)

(declare-fun lt!41230 () Unit!2498)

(assert (=> d!22883 (= lt!41228 lt!41230)))

(assert (=> d!22883 (= (getValueByKey!141 lt!41229 (_1!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))) (Some!146 (_2!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(assert (=> d!22883 (= lt!41230 (lemmaContainsTupThenGetReturnValue!58 lt!41229 (_1!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (_2!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(assert (=> d!22883 (= lt!41229 (insertStrictlySorted!61 (toList!736 (ite c!14049 call!8198 (ite c!14048 call!8193 call!8195))) (_1!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (_2!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(assert (=> d!22883 (= (+!107 (ite c!14049 call!8198 (ite c!14048 call!8193 call!8195)) (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) lt!41231)))

(declare-fun b!86852 () Bool)

(declare-fun res!44592 () Bool)

(assert (=> b!86852 (=> (not res!44592) (not e!56577))))

(assert (=> b!86852 (= res!44592 (= (getValueByKey!141 (toList!736 lt!41231) (_1!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))) (Some!146 (_2!1105 (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))))

(declare-fun b!86853 () Bool)

(assert (=> b!86853 (= e!56577 (contains!749 (toList!736 lt!41231) (ite (or c!14049 c!14048) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (= (and d!22883 res!44591) b!86852))

(assert (= (and b!86852 res!44592) b!86853))

(declare-fun m!92225 () Bool)

(assert (=> d!22883 m!92225))

(declare-fun m!92227 () Bool)

(assert (=> d!22883 m!92227))

(declare-fun m!92229 () Bool)

(assert (=> d!22883 m!92229))

(declare-fun m!92231 () Bool)

(assert (=> d!22883 m!92231))

(declare-fun m!92233 () Bool)

(assert (=> b!86852 m!92233))

(declare-fun m!92235 () Bool)

(assert (=> b!86853 m!92235))

(assert (=> bm!8189 d!22883))

(declare-fun d!22885 () Bool)

(assert (=> d!22885 (= (apply!82 lt!40543 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1207 (getValueByKey!141 (toList!736 lt!40543) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3685 () Bool)

(assert (= bs!3685 d!22885))

(assert (=> bs!3685 m!90035))

(declare-fun m!92237 () Bool)

(assert (=> bs!3685 m!92237))

(assert (=> bs!3685 m!92237))

(declare-fun m!92239 () Bool)

(assert (=> bs!3685 m!92239))

(assert (=> b!85637 d!22885))

(declare-fun d!22887 () Bool)

(declare-fun c!14253 () Bool)

(assert (=> d!22887 (= c!14253 ((_ is ValueCellFull!923) (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56578 () V!3025)

(assert (=> d!22887 (= (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56578)))

(declare-fun b!86854 () Bool)

(assert (=> b!86854 (= e!56578 (get!1205 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86855 () Bool)

(assert (=> b!86855 (= e!56578 (get!1206 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22887 c!14253) b!86854))

(assert (= (and d!22887 (not c!14253)) b!86855))

(assert (=> b!86854 m!90043))

(assert (=> b!86854 m!89621))

(declare-fun m!92241 () Bool)

(assert (=> b!86854 m!92241))

(assert (=> b!86855 m!90043))

(assert (=> b!86855 m!89621))

(declare-fun m!92243 () Bool)

(assert (=> b!86855 m!92243))

(assert (=> b!85637 d!22887))

(declare-fun b!86859 () Bool)

(declare-fun e!56580 () Option!147)

(assert (=> b!86859 (= e!56580 None!145)))

(declare-fun c!14254 () Bool)

(declare-fun d!22889 () Bool)

(assert (=> d!22889 (= c!14254 (and ((_ is Cons!1505) (toList!736 lt!40676)) (= (_1!1105 (h!2096 (toList!736 lt!40676))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!56579 () Option!147)

(assert (=> d!22889 (= (getValueByKey!141 (toList!736 lt!40676) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56579)))

(declare-fun b!86857 () Bool)

(assert (=> b!86857 (= e!56579 e!56580)))

(declare-fun c!14255 () Bool)

(assert (=> b!86857 (= c!14255 (and ((_ is Cons!1505) (toList!736 lt!40676)) (not (= (_1!1105 (h!2096 (toList!736 lt!40676))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!86858 () Bool)

(assert (=> b!86858 (= e!56580 (getValueByKey!141 (t!5222 (toList!736 lt!40676)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86856 () Bool)

(assert (=> b!86856 (= e!56579 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40676)))))))

(assert (= (and d!22889 c!14254) b!86856))

(assert (= (and d!22889 (not c!14254)) b!86857))

(assert (= (and b!86857 c!14255) b!86858))

(assert (= (and b!86857 (not c!14255)) b!86859))

(declare-fun m!92245 () Bool)

(assert (=> b!86858 m!92245))

(assert (=> b!85922 d!22889))

(assert (=> b!86091 d!22285))

(declare-fun d!22891 () Bool)

(declare-fun e!56581 () Bool)

(assert (=> d!22891 e!56581))

(declare-fun res!44593 () Bool)

(assert (=> d!22891 (=> (not res!44593) (not e!56581))))

(declare-fun lt!41235 () ListLongMap!1441)

(assert (=> d!22891 (= res!44593 (contains!747 lt!41235 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun lt!41233 () List!1509)

(assert (=> d!22891 (= lt!41235 (ListLongMap!1442 lt!41233))))

(declare-fun lt!41232 () Unit!2498)

(declare-fun lt!41234 () Unit!2498)

(assert (=> d!22891 (= lt!41232 lt!41234)))

(assert (=> d!22891 (= (getValueByKey!141 lt!41233 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22891 (= lt!41234 (lemmaContainsTupThenGetReturnValue!58 lt!41233 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22891 (= lt!41233 (insertStrictlySorted!61 (toList!736 call!8190) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22891 (= (+!107 call!8190 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) lt!41235)))

(declare-fun b!86860 () Bool)

(declare-fun res!44594 () Bool)

(assert (=> b!86860 (=> (not res!44594) (not e!56581))))

(assert (=> b!86860 (= res!44594 (= (getValueByKey!141 (toList!736 lt!41235) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun b!86861 () Bool)

(assert (=> b!86861 (= e!56581 (contains!749 (toList!736 lt!41235) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(assert (= (and d!22891 res!44593) b!86860))

(assert (= (and b!86860 res!44594) b!86861))

(declare-fun m!92247 () Bool)

(assert (=> d!22891 m!92247))

(declare-fun m!92249 () Bool)

(assert (=> d!22891 m!92249))

(declare-fun m!92251 () Bool)

(assert (=> d!22891 m!92251))

(declare-fun m!92253 () Bool)

(assert (=> d!22891 m!92253))

(declare-fun m!92255 () Bool)

(assert (=> b!86860 m!92255))

(declare-fun m!92257 () Bool)

(assert (=> b!86861 m!92257))

(assert (=> b!86136 d!22891))

(declare-fun d!22893 () Bool)

(declare-fun lt!41236 () Bool)

(assert (=> d!22893 (= lt!41236 (select (content!90 lt!40370) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun e!56583 () Bool)

(assert (=> d!22893 (= lt!41236 e!56583)))

(declare-fun res!44596 () Bool)

(assert (=> d!22893 (=> (not res!44596) (not e!56583))))

(assert (=> d!22893 (= res!44596 ((_ is Cons!1505) lt!40370))))

(assert (=> d!22893 (= (contains!749 lt!40370 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))) lt!41236)))

(declare-fun b!86862 () Bool)

(declare-fun e!56582 () Bool)

(assert (=> b!86862 (= e!56583 e!56582)))

(declare-fun res!44595 () Bool)

(assert (=> b!86862 (=> res!44595 e!56582)))

(assert (=> b!86862 (= res!44595 (= (h!2096 lt!40370) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!86863 () Bool)

(assert (=> b!86863 (= e!56582 (contains!749 (t!5222 lt!40370) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(assert (= (and d!22893 res!44596) b!86862))

(assert (= (and b!86862 (not res!44595)) b!86863))

(declare-fun m!92259 () Bool)

(assert (=> d!22893 m!92259))

(declare-fun m!92261 () Bool)

(assert (=> d!22893 m!92261))

(declare-fun m!92263 () Bool)

(assert (=> b!86863 m!92263))

(assert (=> b!85718 d!22893))

(declare-fun d!22895 () Bool)

(declare-fun res!44597 () Bool)

(declare-fun e!56584 () Bool)

(assert (=> d!22895 (=> res!44597 e!56584)))

(assert (=> d!22895 (= res!44597 (and ((_ is Cons!1505) (toList!736 call!8105)) (= (_1!1105 (h!2096 (toList!736 call!8105))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (=> d!22895 (= (containsKey!144 (toList!736 call!8105) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56584)))

(declare-fun b!86864 () Bool)

(declare-fun e!56585 () Bool)

(assert (=> b!86864 (= e!56584 e!56585)))

(declare-fun res!44598 () Bool)

(assert (=> b!86864 (=> (not res!44598) (not e!56585))))

(assert (=> b!86864 (= res!44598 (and (or (not ((_ is Cons!1505) (toList!736 call!8105))) (bvsle (_1!1105 (h!2096 (toList!736 call!8105))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) ((_ is Cons!1505) (toList!736 call!8105)) (bvslt (_1!1105 (h!2096 (toList!736 call!8105))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun b!86865 () Bool)

(assert (=> b!86865 (= e!56585 (containsKey!144 (t!5222 (toList!736 call!8105)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22895 (not res!44597)) b!86864))

(assert (= (and b!86864 res!44598) b!86865))

(assert (=> b!86865 m!89569))

(declare-fun m!92265 () Bool)

(assert (=> b!86865 m!92265))

(assert (=> d!22311 d!22895))

(declare-fun b!86869 () Bool)

(declare-fun e!56587 () Option!147)

(assert (=> b!86869 (= e!56587 None!145)))

(declare-fun d!22897 () Bool)

(declare-fun c!14256 () Bool)

(assert (=> d!22897 (= c!14256 (and ((_ is Cons!1505) (t!5222 lt!40374)) (= (_1!1105 (h!2096 (t!5222 lt!40374))) (_1!1105 lt!40197))))))

(declare-fun e!56586 () Option!147)

(assert (=> d!22897 (= (getValueByKey!141 (t!5222 lt!40374) (_1!1105 lt!40197)) e!56586)))

(declare-fun b!86867 () Bool)

(assert (=> b!86867 (= e!56586 e!56587)))

(declare-fun c!14257 () Bool)

(assert (=> b!86867 (= c!14257 (and ((_ is Cons!1505) (t!5222 lt!40374)) (not (= (_1!1105 (h!2096 (t!5222 lt!40374))) (_1!1105 lt!40197)))))))

(declare-fun b!86868 () Bool)

(assert (=> b!86868 (= e!56587 (getValueByKey!141 (t!5222 (t!5222 lt!40374)) (_1!1105 lt!40197)))))

(declare-fun b!86866 () Bool)

(assert (=> b!86866 (= e!56586 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40374)))))))

(assert (= (and d!22897 c!14256) b!86866))

(assert (= (and d!22897 (not c!14256)) b!86867))

(assert (= (and b!86867 c!14257) b!86868))

(assert (= (and b!86867 (not c!14257)) b!86869))

(declare-fun m!92267 () Bool)

(assert (=> b!86868 m!92267))

(assert (=> b!85786 d!22897))

(declare-fun b!86870 () Bool)

(declare-fun e!56591 () Bool)

(declare-fun e!56590 () Bool)

(assert (=> b!86870 (= e!56591 e!56590)))

(declare-fun c!14258 () Bool)

(assert (=> b!86870 (= c!14258 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86872 () Bool)

(declare-fun call!8269 () Bool)

(assert (=> b!86872 (= e!56590 call!8269)))

(declare-fun bm!8266 () Bool)

(assert (=> bm!8266 (= call!8269 (arrayNoDuplicates!0 (_keys!4009 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14258 (Cons!1504 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!13979 (Cons!1504 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)) (ite c!13979 (Cons!1504 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505))))))

(declare-fun b!86873 () Bool)

(declare-fun e!56589 () Bool)

(assert (=> b!86873 (= e!56589 (contains!748 (ite c!13979 (Cons!1504 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505) (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86874 () Bool)

(declare-fun e!56588 () Bool)

(assert (=> b!86874 (= e!56588 e!56591)))

(declare-fun res!44599 () Bool)

(assert (=> b!86874 (=> (not res!44599) (not e!56591))))

(assert (=> b!86874 (= res!44599 (not e!56589))))

(declare-fun res!44600 () Bool)

(assert (=> b!86874 (=> (not res!44600) (not e!56589))))

(assert (=> b!86874 (= res!44600 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!22899 () Bool)

(declare-fun res!44601 () Bool)

(assert (=> d!22899 (=> res!44601 e!56588)))

(assert (=> d!22899 (= res!44601 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!22899 (= (arrayNoDuplicates!0 (_keys!4009 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!13979 (Cons!1504 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000) Nil!1505) Nil!1505)) e!56588)))

(declare-fun b!86871 () Bool)

(assert (=> b!86871 (= e!56590 call!8269)))

(assert (= (and d!22899 (not res!44601)) b!86874))

(assert (= (and b!86874 res!44600) b!86873))

(assert (= (and b!86874 res!44599) b!86870))

(assert (= (and b!86870 c!14258) b!86872))

(assert (= (and b!86870 (not c!14258)) b!86871))

(assert (= (or b!86872 b!86871) bm!8266))

(assert (=> b!86870 m!91605))

(assert (=> b!86870 m!91605))

(assert (=> b!86870 m!91607))

(assert (=> bm!8266 m!91605))

(declare-fun m!92269 () Bool)

(assert (=> bm!8266 m!92269))

(assert (=> b!86873 m!91605))

(assert (=> b!86873 m!91605))

(declare-fun m!92271 () Bool)

(assert (=> b!86873 m!92271))

(assert (=> b!86874 m!91605))

(assert (=> b!86874 m!91605))

(assert (=> b!86874 m!91607))

(assert (=> bm!8156 d!22899))

(declare-fun b!86878 () Bool)

(declare-fun e!56593 () Option!147)

(assert (=> b!86878 (= e!56593 None!145)))

(declare-fun c!14259 () Bool)

(declare-fun d!22901 () Bool)

(assert (=> d!22901 (= c!14259 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40195))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40195)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun e!56592 () Option!147)

(assert (=> d!22901 (= (getValueByKey!141 (t!5222 (toList!736 lt!40195)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56592)))

(declare-fun b!86876 () Bool)

(assert (=> b!86876 (= e!56592 e!56593)))

(declare-fun c!14260 () Bool)

(assert (=> b!86876 (= c!14260 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40195))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40195)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(declare-fun b!86877 () Bool)

(assert (=> b!86877 (= e!56593 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!86875 () Bool)

(assert (=> b!86875 (= e!56592 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40195))))))))

(assert (= (and d!22901 c!14259) b!86875))

(assert (= (and d!22901 (not c!14259)) b!86876))

(assert (= (and b!86876 c!14260) b!86877))

(assert (= (and b!86876 (not c!14260)) b!86878))

(assert (=> b!86877 m!89569))

(declare-fun m!92273 () Bool)

(assert (=> b!86877 m!92273))

(assert (=> b!86105 d!22901))

(declare-fun d!22903 () Bool)

(assert (=> d!22903 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41237 () Unit!2498)

(assert (=> d!22903 (= lt!41237 (choose!517 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56594 () Bool)

(assert (=> d!22903 e!56594))

(declare-fun res!44602 () Bool)

(assert (=> d!22903 (=> (not res!44602) (not e!56594))))

(assert (=> d!22903 (= res!44602 (isStrictlySorted!285 (toList!736 lt!40349)))))

(assert (=> d!22903 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41237)))

(declare-fun b!86879 () Bool)

(assert (=> b!86879 (= e!56594 (containsKey!144 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22903 res!44602) b!86879))

(assert (=> d!22903 m!90941))

(assert (=> d!22903 m!90941))

(assert (=> d!22903 m!90943))

(declare-fun m!92275 () Bool)

(assert (=> d!22903 m!92275))

(declare-fun m!92277 () Bool)

(assert (=> d!22903 m!92277))

(assert (=> b!86879 m!90937))

(assert (=> b!86177 d!22903))

(declare-fun d!22905 () Bool)

(assert (=> d!22905 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3686 () Bool)

(assert (= bs!3686 d!22905))

(assert (=> bs!3686 m!90941))

(declare-fun m!92279 () Bool)

(assert (=> bs!3686 m!92279))

(assert (=> b!86177 d!22905))

(declare-fun b!86883 () Bool)

(declare-fun e!56596 () Option!147)

(assert (=> b!86883 (= e!56596 None!145)))

(declare-fun d!22907 () Bool)

(declare-fun c!14261 () Bool)

(assert (=> d!22907 (= c!14261 (and ((_ is Cons!1505) (toList!736 lt!40349)) (= (_1!1105 (h!2096 (toList!736 lt!40349))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56595 () Option!147)

(assert (=> d!22907 (= (getValueByKey!141 (toList!736 lt!40349) #b0000000000000000000000000000000000000000000000000000000000000000) e!56595)))

(declare-fun b!86881 () Bool)

(assert (=> b!86881 (= e!56595 e!56596)))

(declare-fun c!14262 () Bool)

(assert (=> b!86881 (= c!14262 (and ((_ is Cons!1505) (toList!736 lt!40349)) (not (= (_1!1105 (h!2096 (toList!736 lt!40349))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86882 () Bool)

(assert (=> b!86882 (= e!56596 (getValueByKey!141 (t!5222 (toList!736 lt!40349)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86880 () Bool)

(assert (=> b!86880 (= e!56595 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40349)))))))

(assert (= (and d!22907 c!14261) b!86880))

(assert (= (and d!22907 (not c!14261)) b!86881))

(assert (= (and b!86881 c!14262) b!86882))

(assert (= (and b!86881 (not c!14262)) b!86883))

(declare-fun m!92281 () Bool)

(assert (=> b!86882 m!92281))

(assert (=> b!86177 d!22907))

(declare-fun d!22909 () Bool)

(assert (=> d!22909 (= (get!1207 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2654 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22377 d!22909))

(declare-fun b!86887 () Bool)

(declare-fun e!56598 () Option!147)

(assert (=> b!86887 (= e!56598 None!145)))

(declare-fun d!22911 () Bool)

(declare-fun c!14263 () Bool)

(assert (=> d!22911 (= c!14263 (and ((_ is Cons!1505) (toList!736 lt!40439)) (= (_1!1105 (h!2096 (toList!736 lt!40439))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56597 () Option!147)

(assert (=> d!22911 (= (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000) e!56597)))

(declare-fun b!86885 () Bool)

(assert (=> b!86885 (= e!56597 e!56598)))

(declare-fun c!14264 () Bool)

(assert (=> b!86885 (= c!14264 (and ((_ is Cons!1505) (toList!736 lt!40439)) (not (= (_1!1105 (h!2096 (toList!736 lt!40439))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86886 () Bool)

(assert (=> b!86886 (= e!56598 (getValueByKey!141 (t!5222 (toList!736 lt!40439)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86884 () Bool)

(assert (=> b!86884 (= e!56597 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40439)))))))

(assert (= (and d!22911 c!14263) b!86884))

(assert (= (and d!22911 (not c!14263)) b!86885))

(assert (= (and b!86885 c!14264) b!86886))

(assert (= (and b!86885 (not c!14264)) b!86887))

(declare-fun m!92283 () Bool)

(assert (=> b!86886 m!92283))

(assert (=> d!22377 d!22911))

(declare-fun lt!41238 () Bool)

(declare-fun d!22913 () Bool)

(assert (=> d!22913 (= lt!41238 (select (content!90 (toList!736 lt!40566)) (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56600 () Bool)

(assert (=> d!22913 (= lt!41238 e!56600)))

(declare-fun res!44604 () Bool)

(assert (=> d!22913 (=> (not res!44604) (not e!56600))))

(assert (=> d!22913 (= res!44604 ((_ is Cons!1505) (toList!736 lt!40566)))))

(assert (=> d!22913 (= (contains!749 (toList!736 lt!40566) (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41238)))

(declare-fun b!86888 () Bool)

(declare-fun e!56599 () Bool)

(assert (=> b!86888 (= e!56600 e!56599)))

(declare-fun res!44603 () Bool)

(assert (=> b!86888 (=> res!44603 e!56599)))

(assert (=> b!86888 (= res!44603 (= (h!2096 (toList!736 lt!40566)) (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86889 () Bool)

(assert (=> b!86889 (= e!56599 (contains!749 (t!5222 (toList!736 lt!40566)) (tuple2!2189 lt!40429 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22913 res!44604) b!86888))

(assert (= (and b!86888 (not res!44603)) b!86889))

(declare-fun m!92285 () Bool)

(assert (=> d!22913 m!92285))

(declare-fun m!92287 () Bool)

(assert (=> d!22913 m!92287))

(declare-fun m!92289 () Bool)

(assert (=> b!86889 m!92289))

(assert (=> b!85687 d!22913))

(assert (=> b!85819 d!22419))

(declare-fun d!22915 () Bool)

(assert (=> d!22915 (= ($colon$colon!71 e!56040 (ite c!13996 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))) (Cons!1505 (ite c!13996 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) e!56040))))

(assert (=> bm!8160 d!22915))

(declare-fun d!22917 () Bool)

(declare-fun res!44605 () Bool)

(declare-fun e!56601 () Bool)

(assert (=> d!22917 (=> res!44605 e!56601)))

(assert (=> d!22917 (= res!44605 (and ((_ is Cons!1505) lt!40696) (= (_1!1105 (h!2096 lt!40696)) (_1!1105 lt!40197))))))

(assert (=> d!22917 (= (containsKey!144 lt!40696 (_1!1105 lt!40197)) e!56601)))

(declare-fun b!86890 () Bool)

(declare-fun e!56602 () Bool)

(assert (=> b!86890 (= e!56601 e!56602)))

(declare-fun res!44606 () Bool)

(assert (=> b!86890 (=> (not res!44606) (not e!56602))))

(assert (=> b!86890 (= res!44606 (and (or (not ((_ is Cons!1505) lt!40696)) (bvsle (_1!1105 (h!2096 lt!40696)) (_1!1105 lt!40197))) ((_ is Cons!1505) lt!40696) (bvslt (_1!1105 (h!2096 lt!40696)) (_1!1105 lt!40197))))))

(declare-fun b!86891 () Bool)

(assert (=> b!86891 (= e!56602 (containsKey!144 (t!5222 lt!40696) (_1!1105 lt!40197)))))

(assert (= (and d!22917 (not res!44605)) b!86890))

(assert (= (and b!86890 res!44606) b!86891))

(declare-fun m!92291 () Bool)

(assert (=> b!86891 m!92291))

(assert (=> b!85965 d!22917))

(declare-fun b!86895 () Bool)

(declare-fun e!56604 () Option!147)

(assert (=> b!86895 (= e!56604 None!145)))

(declare-fun d!22919 () Bool)

(declare-fun c!14265 () Bool)

(assert (=> d!22919 (= c!14265 (and ((_ is Cons!1505) (t!5222 lt!40366)) (= (_1!1105 (h!2096 (t!5222 lt!40366))) (_1!1105 lt!40182))))))

(declare-fun e!56603 () Option!147)

(assert (=> d!22919 (= (getValueByKey!141 (t!5222 lt!40366) (_1!1105 lt!40182)) e!56603)))

(declare-fun b!86893 () Bool)

(assert (=> b!86893 (= e!56603 e!56604)))

(declare-fun c!14266 () Bool)

(assert (=> b!86893 (= c!14266 (and ((_ is Cons!1505) (t!5222 lt!40366)) (not (= (_1!1105 (h!2096 (t!5222 lt!40366))) (_1!1105 lt!40182)))))))

(declare-fun b!86894 () Bool)

(assert (=> b!86894 (= e!56604 (getValueByKey!141 (t!5222 (t!5222 lt!40366)) (_1!1105 lt!40182)))))

(declare-fun b!86892 () Bool)

(assert (=> b!86892 (= e!56603 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40366)))))))

(assert (= (and d!22919 c!14265) b!86892))

(assert (= (and d!22919 (not c!14265)) b!86893))

(assert (= (and b!86893 c!14266) b!86894))

(assert (= (and b!86893 (not c!14266)) b!86895))

(declare-fun m!92293 () Bool)

(assert (=> b!86894 m!92293))

(assert (=> b!85761 d!22919))

(declare-fun d!22921 () Bool)

(declare-fun e!56606 () Bool)

(assert (=> d!22921 e!56606))

(declare-fun res!44607 () Bool)

(assert (=> d!22921 (=> res!44607 e!56606)))

(declare-fun lt!41240 () Bool)

(assert (=> d!22921 (= res!44607 (not lt!41240))))

(declare-fun lt!41242 () Bool)

(assert (=> d!22921 (= lt!41240 lt!41242)))

(declare-fun lt!41239 () Unit!2498)

(declare-fun e!56605 () Unit!2498)

(assert (=> d!22921 (= lt!41239 e!56605)))

(declare-fun c!14267 () Bool)

(assert (=> d!22921 (= c!14267 lt!41242)))

(assert (=> d!22921 (= lt!41242 (containsKey!144 (toList!736 lt!40636) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22921 (= (contains!747 lt!40636 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41240)))

(declare-fun b!86896 () Bool)

(declare-fun lt!41241 () Unit!2498)

(assert (=> b!86896 (= e!56605 lt!41241)))

(assert (=> b!86896 (= lt!41241 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40636) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86896 (isDefined!93 (getValueByKey!141 (toList!736 lt!40636) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86897 () Bool)

(declare-fun Unit!2558 () Unit!2498)

(assert (=> b!86897 (= e!56605 Unit!2558)))

(declare-fun b!86898 () Bool)

(assert (=> b!86898 (= e!56606 (isDefined!93 (getValueByKey!141 (toList!736 lt!40636) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22921 c!14267) b!86896))

(assert (= (and d!22921 (not c!14267)) b!86897))

(assert (= (and d!22921 (not res!44607)) b!86898))

(declare-fun m!92295 () Bool)

(assert (=> d!22921 m!92295))

(declare-fun m!92297 () Bool)

(assert (=> b!86896 m!92297))

(assert (=> b!86896 m!91629))

(assert (=> b!86896 m!91629))

(declare-fun m!92299 () Bool)

(assert (=> b!86896 m!92299))

(assert (=> b!86898 m!91629))

(assert (=> b!86898 m!91629))

(assert (=> b!86898 m!92299))

(assert (=> bm!8145 d!22921))

(declare-fun d!22923 () Bool)

(declare-fun c!14268 () Bool)

(assert (=> d!22923 (= c!14268 ((_ is Nil!1506) (toList!736 lt!40328)))))

(declare-fun e!56607 () (InoxSet tuple2!2188))

(assert (=> d!22923 (= (content!90 (toList!736 lt!40328)) e!56607)))

(declare-fun b!86899 () Bool)

(assert (=> b!86899 (= e!56607 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!86900 () Bool)

(assert (=> b!86900 (= e!56607 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40328)) true) (content!90 (t!5222 (toList!736 lt!40328)))))))

(assert (= (and d!22923 c!14268) b!86899))

(assert (= (and d!22923 (not c!14268)) b!86900))

(declare-fun m!92301 () Bool)

(assert (=> b!86900 m!92301))

(declare-fun m!92303 () Bool)

(assert (=> b!86900 m!92303))

(assert (=> d!22173 d!22923))

(assert (=> b!85932 d!22681))

(assert (=> b!85932 d!22683))

(declare-fun d!22925 () Bool)

(declare-fun c!14269 () Bool)

(assert (=> d!22925 (= c!14269 ((_ is Nil!1506) (toList!736 lt!40353)))))

(declare-fun e!56608 () (InoxSet tuple2!2188))

(assert (=> d!22925 (= (content!90 (toList!736 lt!40353)) e!56608)))

(declare-fun b!86901 () Bool)

(assert (=> b!86901 (= e!56608 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!86902 () Bool)

(assert (=> b!86902 (= e!56608 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40353)) true) (content!90 (t!5222 (toList!736 lt!40353)))))))

(assert (= (and d!22925 c!14269) b!86901))

(assert (= (and d!22925 (not c!14269)) b!86902))

(declare-fun m!92305 () Bool)

(assert (=> b!86902 m!92305))

(assert (=> b!86902 m!91911))

(assert (=> d!22395 d!22925))

(declare-fun b!86906 () Bool)

(declare-fun e!56610 () Option!147)

(assert (=> b!86906 (= e!56610 None!145)))

(declare-fun c!14270 () Bool)

(declare-fun d!22927 () Bool)

(assert (=> d!22927 (= c!14270 (and ((_ is Cons!1505) (toList!736 lt!40927)) (= (_1!1105 (h!2096 (toList!736 lt!40927))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56609 () Option!147)

(assert (=> d!22927 (= (getValueByKey!141 (toList!736 lt!40927) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56609)))

(declare-fun b!86904 () Bool)

(assert (=> b!86904 (= e!56609 e!56610)))

(declare-fun c!14271 () Bool)

(assert (=> b!86904 (= c!14271 (and ((_ is Cons!1505) (toList!736 lt!40927)) (not (= (_1!1105 (h!2096 (toList!736 lt!40927))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86905 () Bool)

(assert (=> b!86905 (= e!56610 (getValueByKey!141 (t!5222 (toList!736 lt!40927)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86903 () Bool)

(assert (=> b!86903 (= e!56609 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40927)))))))

(assert (= (and d!22927 c!14270) b!86903))

(assert (= (and d!22927 (not c!14270)) b!86904))

(assert (= (and b!86904 c!14271) b!86905))

(assert (= (and b!86904 (not c!14271)) b!86906))

(declare-fun m!92307 () Bool)

(assert (=> b!86905 m!92307))

(assert (=> b!86184 d!22927))

(declare-fun d!22929 () Bool)

(assert (=> d!22929 (= (apply!82 lt!40878 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40878) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3687 () Bool)

(assert (= bs!3687 d!22929))

(assert (=> bs!3687 m!91625))

(assert (=> bs!3687 m!91625))

(declare-fun m!92309 () Bool)

(assert (=> bs!3687 m!92309))

(assert (=> b!86145 d!22929))

(declare-fun d!22931 () Bool)

(declare-fun e!56612 () Bool)

(assert (=> d!22931 e!56612))

(declare-fun res!44608 () Bool)

(assert (=> d!22931 (=> res!44608 e!56612)))

(declare-fun lt!41244 () Bool)

(assert (=> d!22931 (= res!44608 (not lt!41244))))

(declare-fun lt!41246 () Bool)

(assert (=> d!22931 (= lt!41244 lt!41246)))

(declare-fun lt!41243 () Unit!2498)

(declare-fun e!56611 () Unit!2498)

(assert (=> d!22931 (= lt!41243 e!56611)))

(declare-fun c!14272 () Bool)

(assert (=> d!22931 (= c!14272 lt!41246)))

(assert (=> d!22931 (= lt!41246 (containsKey!144 (toList!736 lt!40585) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!22931 (= (contains!747 lt!40585 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41244)))

(declare-fun b!86907 () Bool)

(declare-fun lt!41245 () Unit!2498)

(assert (=> b!86907 (= e!56611 lt!41245)))

(assert (=> b!86907 (= lt!41245 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40585) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!86907 (isDefined!93 (getValueByKey!141 (toList!736 lt!40585) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86908 () Bool)

(declare-fun Unit!2559 () Unit!2498)

(assert (=> b!86908 (= e!56611 Unit!2559)))

(declare-fun b!86909 () Bool)

(assert (=> b!86909 (= e!56612 (isDefined!93 (getValueByKey!141 (toList!736 lt!40585) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22931 c!14272) b!86907))

(assert (= (and d!22931 (not c!14272)) b!86908))

(assert (= (and d!22931 (not res!44608)) b!86909))

(declare-fun m!92311 () Bool)

(assert (=> d!22931 m!92311))

(declare-fun m!92313 () Bool)

(assert (=> b!86907 m!92313))

(assert (=> b!86907 m!90159))

(assert (=> b!86907 m!90159))

(declare-fun m!92315 () Bool)

(assert (=> b!86907 m!92315))

(assert (=> b!86909 m!90159))

(assert (=> b!86909 m!90159))

(assert (=> b!86909 m!92315))

(assert (=> d!22199 d!22931))

(declare-fun b!86913 () Bool)

(declare-fun e!56614 () Option!147)

(assert (=> b!86913 (= e!56614 None!145)))

(declare-fun d!22933 () Bool)

(declare-fun c!14273 () Bool)

(assert (=> d!22933 (= c!14273 (and ((_ is Cons!1505) lt!40583) (= (_1!1105 (h!2096 lt!40583)) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56613 () Option!147)

(assert (=> d!22933 (= (getValueByKey!141 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56613)))

(declare-fun b!86911 () Bool)

(assert (=> b!86911 (= e!56613 e!56614)))

(declare-fun c!14274 () Bool)

(assert (=> b!86911 (= c!14274 (and ((_ is Cons!1505) lt!40583) (not (= (_1!1105 (h!2096 lt!40583)) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86912 () Bool)

(assert (=> b!86912 (= e!56614 (getValueByKey!141 (t!5222 lt!40583) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86910 () Bool)

(assert (=> b!86910 (= e!56613 (Some!146 (_2!1105 (h!2096 lt!40583))))))

(assert (= (and d!22933 c!14273) b!86910))

(assert (= (and d!22933 (not c!14273)) b!86911))

(assert (= (and b!86911 c!14274) b!86912))

(assert (= (and b!86911 (not c!14274)) b!86913))

(declare-fun m!92317 () Bool)

(assert (=> b!86912 m!92317))

(assert (=> d!22199 d!22933))

(declare-fun d!22935 () Bool)

(assert (=> d!22935 (= (getValueByKey!141 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41247 () Unit!2498)

(assert (=> d!22935 (= lt!41247 (choose!511 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56615 () Bool)

(assert (=> d!22935 e!56615))

(declare-fun res!44609 () Bool)

(assert (=> d!22935 (=> (not res!44609) (not e!56615))))

(assert (=> d!22935 (= res!44609 (isStrictlySorted!285 lt!40583))))

(assert (=> d!22935 (= (lemmaContainsTupThenGetReturnValue!58 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41247)))

(declare-fun b!86914 () Bool)

(declare-fun res!44610 () Bool)

(assert (=> b!86914 (=> (not res!44610) (not e!56615))))

(assert (=> b!86914 (= res!44610 (containsKey!144 lt!40583 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86915 () Bool)

(assert (=> b!86915 (= e!56615 (contains!749 lt!40583 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!22935 res!44609) b!86914))

(assert (= (and b!86914 res!44610) b!86915))

(assert (=> d!22935 m!90153))

(declare-fun m!92319 () Bool)

(assert (=> d!22935 m!92319))

(declare-fun m!92321 () Bool)

(assert (=> d!22935 m!92321))

(declare-fun m!92323 () Bool)

(assert (=> b!86914 m!92323))

(declare-fun m!92325 () Bool)

(assert (=> b!86915 m!92325))

(assert (=> d!22199 d!22935))

(declare-fun b!86916 () Bool)

(declare-fun e!56619 () List!1509)

(declare-fun call!8270 () List!1509)

(assert (=> b!86916 (= e!56619 call!8270)))

(declare-fun e!56618 () List!1509)

(declare-fun c!14278 () Bool)

(declare-fun bm!8267 () Bool)

(declare-fun call!8271 () List!1509)

(assert (=> bm!8267 (= call!8271 ($colon$colon!71 e!56618 (ite c!14278 (h!2096 (toList!736 lt!40431)) (tuple2!2189 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14277 () Bool)

(assert (=> bm!8267 (= c!14277 c!14278)))

(declare-fun c!14276 () Bool)

(declare-fun b!86917 () Bool)

(assert (=> b!86917 (= c!14276 (and ((_ is Cons!1505) (toList!736 lt!40431)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40431))) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56616 () List!1509)

(assert (=> b!86917 (= e!56619 e!56616)))

(declare-fun b!86918 () Bool)

(declare-fun e!56620 () Bool)

(declare-fun lt!41248 () List!1509)

(assert (=> b!86918 (= e!56620 (contains!749 lt!41248 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86919 () Bool)

(declare-fun res!44611 () Bool)

(assert (=> b!86919 (=> (not res!44611) (not e!56620))))

(assert (=> b!86919 (= res!44611 (containsKey!144 lt!41248 (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8268 () Bool)

(assert (=> bm!8268 (= call!8270 call!8271)))

(declare-fun b!86920 () Bool)

(assert (=> b!86920 (= e!56618 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40431)) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86921 () Bool)

(declare-fun c!14275 () Bool)

(assert (=> b!86921 (= e!56618 (ite c!14275 (t!5222 (toList!736 lt!40431)) (ite c!14276 (Cons!1505 (h!2096 (toList!736 lt!40431)) (t!5222 (toList!736 lt!40431))) Nil!1506)))))

(declare-fun b!86922 () Bool)

(declare-fun e!56617 () List!1509)

(assert (=> b!86922 (= e!56617 call!8271)))

(declare-fun bm!8269 () Bool)

(declare-fun call!8272 () List!1509)

(assert (=> bm!8269 (= call!8272 call!8270)))

(declare-fun d!22937 () Bool)

(assert (=> d!22937 e!56620))

(declare-fun res!44612 () Bool)

(assert (=> d!22937 (=> (not res!44612) (not e!56620))))

(assert (=> d!22937 (= res!44612 (isStrictlySorted!285 lt!41248))))

(assert (=> d!22937 (= lt!41248 e!56617)))

(assert (=> d!22937 (= c!14278 (and ((_ is Cons!1505) (toList!736 lt!40431)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40431))) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!22937 (isStrictlySorted!285 (toList!736 lt!40431))))

(assert (=> d!22937 (= (insertStrictlySorted!61 (toList!736 lt!40431) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41248)))

(declare-fun b!86923 () Bool)

(assert (=> b!86923 (= e!56616 call!8272)))

(declare-fun b!86924 () Bool)

(assert (=> b!86924 (= e!56617 e!56619)))

(assert (=> b!86924 (= c!14275 (and ((_ is Cons!1505) (toList!736 lt!40431)) (= (_1!1105 (h!2096 (toList!736 lt!40431))) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!86925 () Bool)

(assert (=> b!86925 (= e!56616 call!8272)))

(assert (= (and d!22937 c!14278) b!86922))

(assert (= (and d!22937 (not c!14278)) b!86924))

(assert (= (and b!86924 c!14275) b!86916))

(assert (= (and b!86924 (not c!14275)) b!86917))

(assert (= (and b!86917 c!14276) b!86923))

(assert (= (and b!86917 (not c!14276)) b!86925))

(assert (= (or b!86923 b!86925) bm!8269))

(assert (= (or b!86916 bm!8269) bm!8268))

(assert (= (or b!86922 bm!8268) bm!8267))

(assert (= (and bm!8267 c!14277) b!86920))

(assert (= (and bm!8267 (not c!14277)) b!86921))

(assert (= (and d!22937 res!44612) b!86919))

(assert (= (and b!86919 res!44611) b!86918))

(declare-fun m!92327 () Bool)

(assert (=> b!86918 m!92327))

(declare-fun m!92329 () Bool)

(assert (=> b!86919 m!92329))

(declare-fun m!92331 () Bool)

(assert (=> bm!8267 m!92331))

(declare-fun m!92333 () Bool)

(assert (=> d!22937 m!92333))

(declare-fun m!92335 () Bool)

(assert (=> d!22937 m!92335))

(declare-fun m!92337 () Bool)

(assert (=> b!86920 m!92337))

(assert (=> d!22199 d!22937))

(assert (=> d!22271 d!22269))

(declare-fun d!22939 () Bool)

(assert (=> d!22939 (= (getValueByKey!141 lt!40326 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(assert (=> d!22939 true))

(declare-fun _$22!422 () Unit!2498)

(assert (=> d!22939 (= (choose!511 lt!40326 (_1!1105 lt!40197) (_2!1105 lt!40197)) _$22!422)))

(declare-fun bs!3688 () Bool)

(assert (= bs!3688 d!22939))

(assert (=> bs!3688 m!89773))

(assert (=> d!22271 d!22939))

(declare-fun d!22941 () Bool)

(declare-fun res!44613 () Bool)

(declare-fun e!56621 () Bool)

(assert (=> d!22941 (=> res!44613 e!56621)))

(assert (=> d!22941 (= res!44613 (or ((_ is Nil!1506) lt!40326) ((_ is Nil!1506) (t!5222 lt!40326))))))

(assert (=> d!22941 (= (isStrictlySorted!285 lt!40326) e!56621)))

(declare-fun b!86926 () Bool)

(declare-fun e!56622 () Bool)

(assert (=> b!86926 (= e!56621 e!56622)))

(declare-fun res!44614 () Bool)

(assert (=> b!86926 (=> (not res!44614) (not e!56622))))

(assert (=> b!86926 (= res!44614 (bvslt (_1!1105 (h!2096 lt!40326)) (_1!1105 (h!2096 (t!5222 lt!40326)))))))

(declare-fun b!86927 () Bool)

(assert (=> b!86927 (= e!56622 (isStrictlySorted!285 (t!5222 lt!40326)))))

(assert (= (and d!22941 (not res!44613)) b!86926))

(assert (= (and b!86926 res!44614) b!86927))

(declare-fun m!92339 () Bool)

(assert (=> b!86927 m!92339))

(assert (=> d!22271 d!22941))

(declare-fun d!22943 () Bool)

(declare-fun res!44615 () Bool)

(declare-fun e!56623 () Bool)

(assert (=> d!22943 (=> res!44615 e!56623)))

(assert (=> d!22943 (= res!44615 (and ((_ is Cons!1505) (toList!736 lt!40439)) (= (_1!1105 (h!2096 (toList!736 lt!40439))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22943 (= (containsKey!144 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000) e!56623)))

(declare-fun b!86928 () Bool)

(declare-fun e!56624 () Bool)

(assert (=> b!86928 (= e!56623 e!56624)))

(declare-fun res!44616 () Bool)

(assert (=> b!86928 (=> (not res!44616) (not e!56624))))

(assert (=> b!86928 (= res!44616 (and (or (not ((_ is Cons!1505) (toList!736 lt!40439))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40439))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1505) (toList!736 lt!40439)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40439))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86929 () Bool)

(assert (=> b!86929 (= e!56624 (containsKey!144 (t!5222 (toList!736 lt!40439)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22943 (not res!44615)) b!86928))

(assert (= (and b!86928 res!44616) b!86929))

(declare-fun m!92341 () Bool)

(assert (=> b!86929 m!92341))

(assert (=> d!22363 d!22943))

(declare-fun d!22945 () Bool)

(assert (=> d!22945 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41249 () Unit!2498)

(assert (=> d!22945 (= lt!41249 (choose!517 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56625 () Bool)

(assert (=> d!22945 e!56625))

(declare-fun res!44617 () Bool)

(assert (=> d!22945 (=> (not res!44617) (not e!56625))))

(assert (=> d!22945 (= res!44617 (isStrictlySorted!285 (toList!736 lt!40349)))))

(assert (=> d!22945 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41249)))

(declare-fun b!86930 () Bool)

(assert (=> b!86930 (= e!56625 (containsKey!144 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22945 res!44617) b!86930))

(assert (=> d!22945 m!90421))

(assert (=> d!22945 m!90421))

(assert (=> d!22945 m!90423))

(declare-fun m!92343 () Bool)

(assert (=> d!22945 m!92343))

(assert (=> d!22945 m!92277))

(assert (=> b!86930 m!90417))

(assert (=> b!85896 d!22945))

(declare-fun d!22947 () Bool)

(assert (=> d!22947 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3689 () Bool)

(assert (= bs!3689 d!22947))

(assert (=> bs!3689 m!90421))

(declare-fun m!92345 () Bool)

(assert (=> bs!3689 m!92345))

(assert (=> b!85896 d!22947))

(declare-fun b!86934 () Bool)

(declare-fun e!56627 () Option!147)

(assert (=> b!86934 (= e!56627 None!145)))

(declare-fun d!22949 () Bool)

(declare-fun c!14279 () Bool)

(assert (=> d!22949 (= c!14279 (and ((_ is Cons!1505) (toList!736 lt!40349)) (= (_1!1105 (h!2096 (toList!736 lt!40349))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56626 () Option!147)

(assert (=> d!22949 (= (getValueByKey!141 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000) e!56626)))

(declare-fun b!86932 () Bool)

(assert (=> b!86932 (= e!56626 e!56627)))

(declare-fun c!14280 () Bool)

(assert (=> b!86932 (= c!14280 (and ((_ is Cons!1505) (toList!736 lt!40349)) (not (= (_1!1105 (h!2096 (toList!736 lt!40349))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86933 () Bool)

(assert (=> b!86933 (= e!56627 (getValueByKey!141 (t!5222 (toList!736 lt!40349)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86931 () Bool)

(assert (=> b!86931 (= e!56626 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40349)))))))

(assert (= (and d!22949 c!14279) b!86931))

(assert (= (and d!22949 (not c!14279)) b!86932))

(assert (= (and b!86932 c!14280) b!86933))

(assert (= (and b!86932 (not c!14280)) b!86934))

(declare-fun m!92347 () Bool)

(assert (=> b!86933 m!92347))

(assert (=> b!85896 d!22949))

(declare-fun d!22951 () Bool)

(declare-fun lt!41250 () Bool)

(assert (=> d!22951 (= lt!41250 (select (content!90 lt!40374) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun e!56629 () Bool)

(assert (=> d!22951 (= lt!41250 e!56629)))

(declare-fun res!44619 () Bool)

(assert (=> d!22951 (=> (not res!44619) (not e!56629))))

(assert (=> d!22951 (= res!44619 ((_ is Cons!1505) lt!40374))))

(assert (=> d!22951 (= (contains!749 lt!40374 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) lt!41250)))

(declare-fun b!86935 () Bool)

(declare-fun e!56628 () Bool)

(assert (=> b!86935 (= e!56629 e!56628)))

(declare-fun res!44618 () Bool)

(assert (=> b!86935 (=> res!44618 e!56628)))

(assert (=> b!86935 (= res!44618 (= (h!2096 lt!40374) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!86936 () Bool)

(assert (=> b!86936 (= e!56628 (contains!749 (t!5222 lt!40374) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!22951 res!44619) b!86935))

(assert (= (and b!86935 (not res!44618)) b!86936))

(declare-fun m!92349 () Bool)

(assert (=> d!22951 m!92349))

(declare-fun m!92351 () Bool)

(assert (=> d!22951 m!92351))

(declare-fun m!92353 () Bool)

(assert (=> b!86936 m!92353))

(assert (=> b!85789 d!22951))

(declare-fun d!22953 () Bool)

(declare-fun lt!41251 () Bool)

(assert (=> d!22953 (= lt!41251 (select (content!90 lt!40736) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun e!56631 () Bool)

(assert (=> d!22953 (= lt!41251 e!56631)))

(declare-fun res!44621 () Bool)

(assert (=> d!22953 (=> (not res!44621) (not e!56631))))

(assert (=> d!22953 (= res!44621 ((_ is Cons!1505) lt!40736))))

(assert (=> d!22953 (= (contains!749 lt!40736 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))) lt!41251)))

(declare-fun b!86937 () Bool)

(declare-fun e!56630 () Bool)

(assert (=> b!86937 (= e!56631 e!56630)))

(declare-fun res!44620 () Bool)

(assert (=> b!86937 (=> res!44620 e!56630)))

(assert (=> b!86937 (= res!44620 (= (h!2096 lt!40736) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!86938 () Bool)

(assert (=> b!86938 (= e!56630 (contains!749 (t!5222 lt!40736) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(assert (= (and d!22953 res!44621) b!86937))

(assert (= (and b!86937 (not res!44620)) b!86938))

(declare-fun m!92355 () Bool)

(assert (=> d!22953 m!92355))

(declare-fun m!92357 () Bool)

(assert (=> d!22953 m!92357))

(declare-fun m!92359 () Bool)

(assert (=> b!86938 m!92359))

(assert (=> b!86013 d!22953))

(declare-fun d!22955 () Bool)

(assert (=> d!22955 (= (inRange!0 (ite c!14025 (index!3086 lt!40836) (ite c!14028 (index!3085 lt!40819) (index!3088 lt!40819))) (mask!6365 newMap!16)) (and (bvsge (ite c!14025 (index!3086 lt!40836) (ite c!14028 (index!3085 lt!40819) (index!3088 lt!40819))) #b00000000000000000000000000000000) (bvslt (ite c!14025 (index!3086 lt!40836) (ite c!14028 (index!3085 lt!40819) (index!3088 lt!40819))) (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8181 d!22955))

(declare-fun d!22957 () Bool)

(assert (=> d!22957 (isDefined!93 (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182)))))

(declare-fun lt!41252 () Unit!2498)

(assert (=> d!22957 (= lt!41252 (choose!517 (toList!736 lt!40368) (_1!1105 lt!40182)))))

(declare-fun e!56632 () Bool)

(assert (=> d!22957 e!56632))

(declare-fun res!44622 () Bool)

(assert (=> d!22957 (=> (not res!44622) (not e!56632))))

(assert (=> d!22957 (= res!44622 (isStrictlySorted!285 (toList!736 lt!40368)))))

(assert (=> d!22957 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40368) (_1!1105 lt!40182)) lt!41252)))

(declare-fun b!86939 () Bool)

(assert (=> b!86939 (= e!56632 (containsKey!144 (toList!736 lt!40368) (_1!1105 lt!40182)))))

(assert (= (and d!22957 res!44622) b!86939))

(assert (=> d!22957 m!89863))

(assert (=> d!22957 m!89863))

(assert (=> d!22957 m!90261))

(declare-fun m!92361 () Bool)

(assert (=> d!22957 m!92361))

(declare-fun m!92363 () Bool)

(assert (=> d!22957 m!92363))

(assert (=> b!86939 m!90257))

(assert (=> b!85756 d!22957))

(declare-fun d!22959 () Bool)

(assert (=> d!22959 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40368) (_1!1105 lt!40182)))))))

(declare-fun bs!3690 () Bool)

(assert (= bs!3690 d!22959))

(assert (=> bs!3690 m!89863))

(declare-fun m!92365 () Bool)

(assert (=> bs!3690 m!92365))

(assert (=> b!85756 d!22959))

(assert (=> b!85756 d!22291))

(declare-fun d!22961 () Bool)

(declare-fun res!44623 () Bool)

(declare-fun e!56633 () Bool)

(assert (=> d!22961 (=> res!44623 e!56633)))

(assert (=> d!22961 (= res!44623 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40195))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40195)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (=> d!22961 (= (containsKey!144 (t!5222 (toList!736 lt!40195)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56633)))

(declare-fun b!86940 () Bool)

(declare-fun e!56634 () Bool)

(assert (=> b!86940 (= e!56633 e!56634)))

(declare-fun res!44624 () Bool)

(assert (=> b!86940 (=> (not res!44624) (not e!56634))))

(assert (=> b!86940 (= res!44624 (and (or (not ((_ is Cons!1505) (t!5222 (toList!736 lt!40195)))) (bvsle (_1!1105 (h!2096 (t!5222 (toList!736 lt!40195)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) ((_ is Cons!1505) (t!5222 (toList!736 lt!40195))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40195)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun b!86941 () Bool)

(assert (=> b!86941 (= e!56634 (containsKey!144 (t!5222 (t!5222 (toList!736 lt!40195))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!22961 (not res!44623)) b!86940))

(assert (= (and b!86940 res!44624) b!86941))

(assert (=> b!86941 m!89569))

(declare-fun m!92367 () Bool)

(assert (=> b!86941 m!92367))

(assert (=> b!85855 d!22961))

(declare-fun d!22963 () Bool)

(declare-fun e!56636 () Bool)

(assert (=> d!22963 e!56636))

(declare-fun res!44625 () Bool)

(assert (=> d!22963 (=> res!44625 e!56636)))

(declare-fun lt!41254 () Bool)

(assert (=> d!22963 (= res!44625 (not lt!41254))))

(declare-fun lt!41256 () Bool)

(assert (=> d!22963 (= lt!41254 lt!41256)))

(declare-fun lt!41253 () Unit!2498)

(declare-fun e!56635 () Unit!2498)

(assert (=> d!22963 (= lt!41253 e!56635)))

(declare-fun c!14281 () Bool)

(assert (=> d!22963 (= c!14281 lt!41256)))

(assert (=> d!22963 (= lt!41256 (containsKey!144 (toList!736 lt!40543) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!22963 (= (contains!747 lt!40543 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!41254)))

(declare-fun b!86942 () Bool)

(declare-fun lt!41255 () Unit!2498)

(assert (=> b!86942 (= e!56635 lt!41255)))

(assert (=> b!86942 (= lt!41255 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40543) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!86942 (isDefined!93 (getValueByKey!141 (toList!736 lt!40543) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!86943 () Bool)

(declare-fun Unit!2560 () Unit!2498)

(assert (=> b!86943 (= e!56635 Unit!2560)))

(declare-fun b!86944 () Bool)

(assert (=> b!86944 (= e!56636 (isDefined!93 (getValueByKey!141 (toList!736 lt!40543) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!22963 c!14281) b!86942))

(assert (= (and d!22963 (not c!14281)) b!86943))

(assert (= (and d!22963 (not res!44625)) b!86944))

(assert (=> d!22963 m!90035))

(declare-fun m!92369 () Bool)

(assert (=> d!22963 m!92369))

(assert (=> b!86942 m!90035))

(declare-fun m!92371 () Bool)

(assert (=> b!86942 m!92371))

(assert (=> b!86942 m!90035))

(assert (=> b!86942 m!92237))

(assert (=> b!86942 m!92237))

(declare-fun m!92373 () Bool)

(assert (=> b!86942 m!92373))

(assert (=> b!86944 m!90035))

(assert (=> b!86944 m!92237))

(assert (=> b!86944 m!92237))

(assert (=> b!86944 m!92373))

(assert (=> b!85647 d!22963))

(declare-fun b!86948 () Bool)

(declare-fun e!56638 () Option!147)

(assert (=> b!86948 (= e!56638 None!145)))

(declare-fun d!22965 () Bool)

(declare-fun c!14282 () Bool)

(assert (=> d!22965 (= c!14282 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40353))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40353)))) (_1!1105 lt!40197))))))

(declare-fun e!56637 () Option!147)

(assert (=> d!22965 (= (getValueByKey!141 (t!5222 (toList!736 lt!40353)) (_1!1105 lt!40197)) e!56637)))

(declare-fun b!86946 () Bool)

(assert (=> b!86946 (= e!56637 e!56638)))

(declare-fun c!14283 () Bool)

(assert (=> b!86946 (= c!14283 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40353))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40353)))) (_1!1105 lt!40197)))))))

(declare-fun b!86947 () Bool)

(assert (=> b!86947 (= e!56638 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40353))) (_1!1105 lt!40197)))))

(declare-fun b!86945 () Bool)

(assert (=> b!86945 (= e!56637 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40353))))))))

(assert (= (and d!22965 c!14282) b!86945))

(assert (= (and d!22965 (not c!14282)) b!86946))

(assert (= (and b!86946 c!14283) b!86947))

(assert (= (and b!86946 (not c!14283)) b!86948))

(declare-fun m!92375 () Bool)

(assert (=> b!86947 m!92375))

(assert (=> b!85751 d!22965))

(declare-fun d!22967 () Bool)

(assert (=> d!22967 (= (get!1207 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2654 (getValueByKey!141 (toList!736 lt!40439) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22217 d!22967))

(assert (=> d!22217 d!22525))

(declare-fun lt!41257 () Bool)

(declare-fun d!22969 () Bool)

(assert (=> d!22969 (= lt!41257 (select (content!90 (toList!736 lt!40714)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun e!56640 () Bool)

(assert (=> d!22969 (= lt!41257 e!56640)))

(declare-fun res!44627 () Bool)

(assert (=> d!22969 (=> (not res!44627) (not e!56640))))

(assert (=> d!22969 (= res!44627 ((_ is Cons!1505) (toList!736 lt!40714)))))

(assert (=> d!22969 (= (contains!749 (toList!736 lt!40714) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41257)))

(declare-fun b!86949 () Bool)

(declare-fun e!56639 () Bool)

(assert (=> b!86949 (= e!56640 e!56639)))

(declare-fun res!44626 () Bool)

(assert (=> b!86949 (=> res!44626 e!56639)))

(assert (=> b!86949 (= res!44626 (= (h!2096 (toList!736 lt!40714)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun b!86950 () Bool)

(assert (=> b!86950 (= e!56639 (contains!749 (t!5222 (toList!736 lt!40714)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!22969 res!44627) b!86949))

(assert (= (and b!86949 (not res!44626)) b!86950))

(declare-fun m!92377 () Bool)

(assert (=> d!22969 m!92377))

(declare-fun m!92379 () Bool)

(assert (=> d!22969 m!92379))

(declare-fun m!92381 () Bool)

(assert (=> b!86950 m!92381))

(assert (=> b!85992 d!22969))

(declare-fun d!22971 () Bool)

(declare-fun lt!41258 () Bool)

(assert (=> d!22971 (= lt!41258 (select (content!90 (t!5222 (toList!736 lt!40328))) lt!40197))))

(declare-fun e!56642 () Bool)

(assert (=> d!22971 (= lt!41258 e!56642)))

(declare-fun res!44629 () Bool)

(assert (=> d!22971 (=> (not res!44629) (not e!56642))))

(assert (=> d!22971 (= res!44629 ((_ is Cons!1505) (t!5222 (toList!736 lt!40328))))))

(assert (=> d!22971 (= (contains!749 (t!5222 (toList!736 lt!40328)) lt!40197) lt!41258)))

(declare-fun b!86951 () Bool)

(declare-fun e!56641 () Bool)

(assert (=> b!86951 (= e!56642 e!56641)))

(declare-fun res!44628 () Bool)

(assert (=> b!86951 (=> res!44628 e!56641)))

(assert (=> b!86951 (= res!44628 (= (h!2096 (t!5222 (toList!736 lt!40328))) lt!40197))))

(declare-fun b!86952 () Bool)

(assert (=> b!86952 (= e!56641 (contains!749 (t!5222 (t!5222 (toList!736 lt!40328))) lt!40197))))

(assert (= (and d!22971 res!44629) b!86951))

(assert (= (and b!86951 (not res!44628)) b!86952))

(assert (=> d!22971 m!92303))

(declare-fun m!92383 () Bool)

(assert (=> d!22971 m!92383))

(declare-fun m!92385 () Bool)

(assert (=> b!86952 m!92385))

(assert (=> b!85653 d!22971))

(declare-fun b!86953 () Bool)

(declare-fun e!56646 () List!1509)

(declare-fun call!8273 () List!1509)

(assert (=> b!86953 (= e!56646 call!8273)))

(declare-fun e!56645 () List!1509)

(declare-fun bm!8270 () Bool)

(declare-fun call!8274 () List!1509)

(declare-fun c!14287 () Bool)

(assert (=> bm!8270 (= call!8274 ($colon$colon!71 e!56645 (ite c!14287 (h!2096 (t!5222 (toList!736 lt!40193))) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192)))))))

(declare-fun c!14286 () Bool)

(assert (=> bm!8270 (= c!14286 c!14287)))

(declare-fun b!86954 () Bool)

(declare-fun c!14285 () Bool)

(assert (=> b!86954 (= c!14285 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40193))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193)))) (_1!1105 lt!40192))))))

(declare-fun e!56643 () List!1509)

(assert (=> b!86954 (= e!56646 e!56643)))

(declare-fun b!86955 () Bool)

(declare-fun e!56647 () Bool)

(declare-fun lt!41259 () List!1509)

(assert (=> b!86955 (= e!56647 (contains!749 lt!41259 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!86956 () Bool)

(declare-fun res!44630 () Bool)

(assert (=> b!86956 (=> (not res!44630) (not e!56647))))

(assert (=> b!86956 (= res!44630 (containsKey!144 lt!41259 (_1!1105 lt!40192)))))

(declare-fun bm!8271 () Bool)

(assert (=> bm!8271 (= call!8273 call!8274)))

(declare-fun b!86957 () Bool)

(assert (=> b!86957 (= e!56645 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 lt!40193))) (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(declare-fun c!14284 () Bool)

(declare-fun b!86958 () Bool)

(assert (=> b!86958 (= e!56645 (ite c!14284 (t!5222 (t!5222 (toList!736 lt!40193))) (ite c!14285 (Cons!1505 (h!2096 (t!5222 (toList!736 lt!40193))) (t!5222 (t!5222 (toList!736 lt!40193)))) Nil!1506)))))

(declare-fun b!86959 () Bool)

(declare-fun e!56644 () List!1509)

(assert (=> b!86959 (= e!56644 call!8274)))

(declare-fun bm!8272 () Bool)

(declare-fun call!8275 () List!1509)

(assert (=> bm!8272 (= call!8275 call!8273)))

(declare-fun d!22973 () Bool)

(assert (=> d!22973 e!56647))

(declare-fun res!44631 () Bool)

(assert (=> d!22973 (=> (not res!44631) (not e!56647))))

(assert (=> d!22973 (= res!44631 (isStrictlySorted!285 lt!41259))))

(assert (=> d!22973 (= lt!41259 e!56644)))

(assert (=> d!22973 (= c!14287 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40193))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193)))) (_1!1105 lt!40192))))))

(assert (=> d!22973 (isStrictlySorted!285 (t!5222 (toList!736 lt!40193)))))

(assert (=> d!22973 (= (insertStrictlySorted!61 (t!5222 (toList!736 lt!40193)) (_1!1105 lt!40192) (_2!1105 lt!40192)) lt!41259)))

(declare-fun b!86960 () Bool)

(assert (=> b!86960 (= e!56643 call!8275)))

(declare-fun b!86961 () Bool)

(assert (=> b!86961 (= e!56644 e!56646)))

(assert (=> b!86961 (= c!14284 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40193))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193)))) (_1!1105 lt!40192))))))

(declare-fun b!86962 () Bool)

(assert (=> b!86962 (= e!56643 call!8275)))

(assert (= (and d!22973 c!14287) b!86959))

(assert (= (and d!22973 (not c!14287)) b!86961))

(assert (= (and b!86961 c!14284) b!86953))

(assert (= (and b!86961 (not c!14284)) b!86954))

(assert (= (and b!86954 c!14285) b!86960))

(assert (= (and b!86954 (not c!14285)) b!86962))

(assert (= (or b!86960 b!86962) bm!8272))

(assert (= (or b!86953 bm!8272) bm!8271))

(assert (= (or b!86959 bm!8271) bm!8270))

(assert (= (and bm!8270 c!14286) b!86957))

(assert (= (and bm!8270 (not c!14286)) b!86958))

(assert (= (and d!22973 res!44631) b!86956))

(assert (= (and b!86956 res!44630) b!86955))

(declare-fun m!92387 () Bool)

(assert (=> b!86955 m!92387))

(declare-fun m!92389 () Bool)

(assert (=> b!86956 m!92389))

(declare-fun m!92391 () Bool)

(assert (=> bm!8270 m!92391))

(declare-fun m!92393 () Bool)

(assert (=> d!22973 m!92393))

(assert (=> d!22973 m!91619))

(declare-fun m!92395 () Bool)

(assert (=> b!86957 m!92395))

(assert (=> b!86043 d!22973))

(declare-fun bm!8273 () Bool)

(declare-fun call!8276 () Bool)

(assert (=> bm!8273 (= call!8276 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4009 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512))))))

(declare-fun b!86963 () Bool)

(declare-fun e!56649 () Bool)

(declare-fun e!56648 () Bool)

(assert (=> b!86963 (= e!56649 e!56648)))

(declare-fun lt!41262 () (_ BitVec 64))

(assert (=> b!86963 (= lt!41262 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000))))

(declare-fun lt!41260 () Unit!2498)

(assert (=> b!86963 (= lt!41260 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4009 (_2!1104 lt!40512)) lt!41262 #b00000000000000000000000000000000))))

(assert (=> b!86963 (arrayContainsKey!0 (_keys!4009 (_2!1104 lt!40512)) lt!41262 #b00000000000000000000000000000000)))

(declare-fun lt!41261 () Unit!2498)

(assert (=> b!86963 (= lt!41261 lt!41260)))

(declare-fun res!44632 () Bool)

(assert (=> b!86963 (= res!44632 (= (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000) (_keys!4009 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512))) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!86963 (=> (not res!44632) (not e!56648))))

(declare-fun b!86964 () Bool)

(assert (=> b!86964 (= e!56648 call!8276)))

(declare-fun b!86965 () Bool)

(assert (=> b!86965 (= e!56649 call!8276)))

(declare-fun b!86966 () Bool)

(declare-fun e!56650 () Bool)

(assert (=> b!86966 (= e!56650 e!56649)))

(declare-fun c!14288 () Bool)

(assert (=> b!86966 (= c!14288 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun d!22975 () Bool)

(declare-fun res!44633 () Bool)

(assert (=> d!22975 (=> res!44633 e!56650)))

(assert (=> d!22975 (= res!44633 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(assert (=> d!22975 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 (_2!1104 lt!40512)) (mask!6365 (_2!1104 lt!40512))) e!56650)))

(assert (= (and d!22975 (not res!44633)) b!86966))

(assert (= (and b!86966 c!14288) b!86963))

(assert (= (and b!86966 (not c!14288)) b!86965))

(assert (= (and b!86963 res!44632) b!86964))

(assert (= (or b!86964 b!86965) bm!8273))

(declare-fun m!92397 () Bool)

(assert (=> bm!8273 m!92397))

(assert (=> b!86963 m!91551))

(declare-fun m!92399 () Bool)

(assert (=> b!86963 m!92399))

(declare-fun m!92401 () Bool)

(assert (=> b!86963 m!92401))

(assert (=> b!86963 m!91551))

(declare-fun m!92403 () Bool)

(assert (=> b!86963 m!92403))

(assert (=> b!86966 m!91551))

(assert (=> b!86966 m!91551))

(assert (=> b!86966 m!91557))

(assert (=> b!85989 d!22975))

(assert (=> b!86167 d!22419))

(declare-fun d!22977 () Bool)

(declare-fun lt!41263 () Bool)

(assert (=> d!22977 (= lt!41263 (select (content!90 (toList!736 lt!40585)) (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56652 () Bool)

(assert (=> d!22977 (= lt!41263 e!56652)))

(declare-fun res!44635 () Bool)

(assert (=> d!22977 (=> (not res!44635) (not e!56652))))

(assert (=> d!22977 (= res!44635 ((_ is Cons!1505) (toList!736 lt!40585)))))

(assert (=> d!22977 (= (contains!749 (toList!736 lt!40585) (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41263)))

(declare-fun b!86967 () Bool)

(declare-fun e!56651 () Bool)

(assert (=> b!86967 (= e!56652 e!56651)))

(declare-fun res!44634 () Bool)

(assert (=> b!86967 (=> res!44634 e!56651)))

(assert (=> b!86967 (= res!44634 (= (h!2096 (toList!736 lt!40585)) (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!86968 () Bool)

(assert (=> b!86968 (= e!56651 (contains!749 (t!5222 (toList!736 lt!40585)) (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!22977 res!44635) b!86967))

(assert (= (and b!86967 (not res!44634)) b!86968))

(declare-fun m!92405 () Bool)

(assert (=> d!22977 m!92405))

(declare-fun m!92407 () Bool)

(assert (=> d!22977 m!92407))

(declare-fun m!92409 () Bool)

(assert (=> b!86968 m!92409))

(assert (=> b!85700 d!22977))

(assert (=> b!86086 d!22315))

(declare-fun b!86972 () Bool)

(declare-fun e!56654 () Option!147)

(assert (=> b!86972 (= e!56654 None!145)))

(declare-fun d!22979 () Bool)

(declare-fun c!14289 () Bool)

(assert (=> d!22979 (= c!14289 (and ((_ is Cons!1505) (toList!736 lt!40669)) (= (_1!1105 (h!2096 (toList!736 lt!40669))) (_1!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(declare-fun e!56653 () Option!147)

(assert (=> d!22979 (= (getValueByKey!141 (toList!736 lt!40669) (_1!1105 (tuple2!2189 lt!40347 lt!40346))) e!56653)))

(declare-fun b!86970 () Bool)

(assert (=> b!86970 (= e!56653 e!56654)))

(declare-fun c!14290 () Bool)

(assert (=> b!86970 (= c!14290 (and ((_ is Cons!1505) (toList!736 lt!40669)) (not (= (_1!1105 (h!2096 (toList!736 lt!40669))) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))))

(declare-fun b!86971 () Bool)

(assert (=> b!86971 (= e!56654 (getValueByKey!141 (t!5222 (toList!736 lt!40669)) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun b!86969 () Bool)

(assert (=> b!86969 (= e!56653 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40669)))))))

(assert (= (and d!22979 c!14289) b!86969))

(assert (= (and d!22979 (not c!14289)) b!86970))

(assert (= (and b!86970 c!14290) b!86971))

(assert (= (and b!86970 (not c!14290)) b!86972))

(declare-fun m!92411 () Bool)

(assert (=> b!86971 m!92411))

(assert (=> b!85916 d!22979))

(declare-fun d!22981 () Bool)

(declare-fun c!14291 () Bool)

(assert (=> d!22981 (= c!14291 ((_ is Nil!1506) (toList!736 lt!40364)))))

(declare-fun e!56655 () (InoxSet tuple2!2188))

(assert (=> d!22981 (= (content!90 (toList!736 lt!40364)) e!56655)))

(declare-fun b!86973 () Bool)

(assert (=> b!86973 (= e!56655 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!86974 () Bool)

(assert (=> b!86974 (= e!56655 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40364)) true) (content!90 (t!5222 (toList!736 lt!40364)))))))

(assert (= (and d!22981 c!14291) b!86973))

(assert (= (and d!22981 (not c!14291)) b!86974))

(declare-fun m!92413 () Bool)

(assert (=> b!86974 m!92413))

(declare-fun m!92415 () Bool)

(assert (=> b!86974 m!92415))

(assert (=> d!22399 d!22981))

(assert (=> b!86032 d!22759))

(assert (=> b!86032 d!22277))

(assert (=> bm!8154 d!22275))

(declare-fun d!22983 () Bool)

(assert (=> d!22983 (= (apply!82 (+!107 lt!40906 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!40886) (apply!82 lt!40906 lt!40886))))

(declare-fun lt!41264 () Unit!2498)

(assert (=> d!22983 (= lt!41264 (choose!507 lt!40906 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) lt!40886))))

(declare-fun e!56656 () Bool)

(assert (=> d!22983 e!56656))

(declare-fun res!44636 () Bool)

(assert (=> d!22983 (=> (not res!44636) (not e!56656))))

(assert (=> d!22983 (= res!44636 (contains!747 lt!40906 lt!40886))))

(assert (=> d!22983 (= (addApplyDifferent!58 lt!40906 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) lt!40886) lt!41264)))

(declare-fun b!86975 () Bool)

(assert (=> b!86975 (= e!56656 (not (= lt!40886 lt!40889)))))

(assert (= (and d!22983 res!44636) b!86975))

(declare-fun m!92417 () Bool)

(assert (=> d!22983 m!92417))

(declare-fun m!92419 () Bool)

(assert (=> d!22983 m!92419))

(assert (=> d!22983 m!90891))

(assert (=> d!22983 m!90909))

(assert (=> d!22983 m!90891))

(assert (=> d!22983 m!90907))

(assert (=> b!86153 d!22983))

(declare-fun d!22985 () Bool)

(assert (=> d!22985 (contains!747 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!40898)))

(declare-fun lt!41265 () Unit!2498)

(assert (=> d!22985 (= lt!41265 (choose!508 lt!40894 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) lt!40898))))

(assert (=> d!22985 (contains!747 lt!40894 lt!40898)))

(assert (=> d!22985 (= (addStillContains!58 lt!40894 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) lt!40898) lt!41265)))

(declare-fun bs!3691 () Bool)

(assert (= bs!3691 d!22985))

(assert (=> bs!3691 m!90883))

(assert (=> bs!3691 m!90883))

(assert (=> bs!3691 m!90885))

(declare-fun m!92421 () Bool)

(assert (=> bs!3691 m!92421))

(declare-fun m!92423 () Bool)

(assert (=> bs!3691 m!92423))

(assert (=> b!86153 d!22985))

(declare-fun d!22987 () Bool)

(assert (=> d!22987 (= (apply!82 lt!40900 lt!40897) (get!1207 (getValueByKey!141 (toList!736 lt!40900) lt!40897)))))

(declare-fun bs!3692 () Bool)

(assert (= bs!3692 d!22987))

(declare-fun m!92425 () Bool)

(assert (=> bs!3692 m!92425))

(assert (=> bs!3692 m!92425))

(declare-fun m!92427 () Bool)

(assert (=> bs!3692 m!92427))

(assert (=> b!86153 d!22987))

(assert (=> b!86153 d!22727))

(declare-fun d!22989 () Bool)

(assert (=> d!22989 (= (apply!82 lt!40906 lt!40886) (get!1207 (getValueByKey!141 (toList!736 lt!40906) lt!40886)))))

(declare-fun bs!3693 () Bool)

(assert (= bs!3693 d!22989))

(declare-fun m!92429 () Bool)

(assert (=> bs!3693 m!92429))

(assert (=> bs!3693 m!92429))

(declare-fun m!92431 () Bool)

(assert (=> bs!3693 m!92431))

(assert (=> b!86153 d!22989))

(declare-fun d!22991 () Bool)

(declare-fun e!56657 () Bool)

(assert (=> d!22991 e!56657))

(declare-fun res!44637 () Bool)

(assert (=> d!22991 (=> (not res!44637) (not e!56657))))

(declare-fun lt!41269 () ListLongMap!1441)

(assert (=> d!22991 (= res!44637 (contains!747 lt!41269 (_1!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(declare-fun lt!41267 () List!1509)

(assert (=> d!22991 (= lt!41269 (ListLongMap!1442 lt!41267))))

(declare-fun lt!41266 () Unit!2498)

(declare-fun lt!41268 () Unit!2498)

(assert (=> d!22991 (= lt!41266 lt!41268)))

(assert (=> d!22991 (= (getValueByKey!141 lt!41267 (_1!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!22991 (= lt!41268 (lemmaContainsTupThenGetReturnValue!58 lt!41267 (_1!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!22991 (= lt!41267 (insertStrictlySorted!61 (toList!736 lt!40901) (_1!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!22991 (= (+!107 lt!40901 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!41269)))

(declare-fun b!86976 () Bool)

(declare-fun res!44638 () Bool)

(assert (=> b!86976 (=> (not res!44638) (not e!56657))))

(assert (=> b!86976 (= res!44638 (= (getValueByKey!141 (toList!736 lt!41269) (_1!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(declare-fun b!86977 () Bool)

(assert (=> b!86977 (= e!56657 (contains!749 (toList!736 lt!41269) (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))

(assert (= (and d!22991 res!44637) b!86976))

(assert (= (and b!86976 res!44638) b!86977))

(declare-fun m!92433 () Bool)

(assert (=> d!22991 m!92433))

(declare-fun m!92435 () Bool)

(assert (=> d!22991 m!92435))

(declare-fun m!92437 () Bool)

(assert (=> d!22991 m!92437))

(declare-fun m!92439 () Bool)

(assert (=> d!22991 m!92439))

(declare-fun m!92441 () Bool)

(assert (=> b!86976 m!92441))

(declare-fun m!92443 () Bool)

(assert (=> b!86977 m!92443))

(assert (=> b!86153 d!22991))

(declare-fun d!22993 () Bool)

(assert (=> d!22993 (= (apply!82 (+!107 lt!40906 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!40886) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40906 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) lt!40886)))))

(declare-fun bs!3694 () Bool)

(assert (= bs!3694 d!22993))

(declare-fun m!92445 () Bool)

(assert (=> bs!3694 m!92445))

(assert (=> bs!3694 m!92445))

(declare-fun m!92447 () Bool)

(assert (=> bs!3694 m!92447))

(assert (=> b!86153 d!22993))

(declare-fun d!22995 () Bool)

(assert (=> d!22995 (= (apply!82 (+!107 lt!40901 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!40896) (apply!82 lt!40901 lt!40896))))

(declare-fun lt!41270 () Unit!2498)

(assert (=> d!22995 (= lt!41270 (choose!507 lt!40901 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) lt!40896))))

(declare-fun e!56658 () Bool)

(assert (=> d!22995 e!56658))

(declare-fun res!44639 () Bool)

(assert (=> d!22995 (=> (not res!44639) (not e!56658))))

(assert (=> d!22995 (= res!44639 (contains!747 lt!40901 lt!40896))))

(assert (=> d!22995 (= (addApplyDifferent!58 lt!40901 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)) lt!40896) lt!41270)))

(declare-fun b!86978 () Bool)

(assert (=> b!86978 (= e!56658 (not (= lt!40896 lt!40892)))))

(assert (= (and d!22995 res!44639) b!86978))

(declare-fun m!92449 () Bool)

(assert (=> d!22995 m!92449))

(declare-fun m!92451 () Bool)

(assert (=> d!22995 m!92451))

(assert (=> d!22995 m!90901))

(assert (=> d!22995 m!90903))

(assert (=> d!22995 m!90901))

(assert (=> d!22995 m!90895))

(assert (=> b!86153 d!22995))

(declare-fun d!22997 () Bool)

(assert (=> d!22997 (= (apply!82 (+!107 lt!40901 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!40896) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40901 (tuple2!2189 lt!40892 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) lt!40896)))))

(declare-fun bs!3695 () Bool)

(assert (= bs!3695 d!22997))

(declare-fun m!92453 () Bool)

(assert (=> bs!3695 m!92453))

(assert (=> bs!3695 m!92453))

(declare-fun m!92455 () Bool)

(assert (=> bs!3695 m!92455))

(assert (=> b!86153 d!22997))

(declare-fun d!22999 () Bool)

(assert (=> d!22999 (= (apply!82 lt!40901 lt!40896) (get!1207 (getValueByKey!141 (toList!736 lt!40901) lt!40896)))))

(declare-fun bs!3696 () Bool)

(assert (= bs!3696 d!22999))

(declare-fun m!92457 () Bool)

(assert (=> bs!3696 m!92457))

(assert (=> bs!3696 m!92457))

(declare-fun m!92459 () Bool)

(assert (=> bs!3696 m!92459))

(assert (=> b!86153 d!22999))

(declare-fun d!23001 () Bool)

(declare-fun e!56660 () Bool)

(assert (=> d!23001 e!56660))

(declare-fun res!44640 () Bool)

(assert (=> d!23001 (=> res!44640 e!56660)))

(declare-fun lt!41272 () Bool)

(assert (=> d!23001 (= res!44640 (not lt!41272))))

(declare-fun lt!41274 () Bool)

(assert (=> d!23001 (= lt!41272 lt!41274)))

(declare-fun lt!41271 () Unit!2498)

(declare-fun e!56659 () Unit!2498)

(assert (=> d!23001 (= lt!41271 e!56659)))

(declare-fun c!14292 () Bool)

(assert (=> d!23001 (= c!14292 lt!41274)))

(assert (=> d!23001 (= lt!41274 (containsKey!144 (toList!736 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) lt!40898))))

(assert (=> d!23001 (= (contains!747 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!40898) lt!41272)))

(declare-fun b!86979 () Bool)

(declare-fun lt!41273 () Unit!2498)

(assert (=> b!86979 (= e!56659 lt!41273)))

(assert (=> b!86979 (= lt!41273 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) lt!40898))))

(assert (=> b!86979 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) lt!40898))))

(declare-fun b!86980 () Bool)

(declare-fun Unit!2561 () Unit!2498)

(assert (=> b!86980 (= e!56659 Unit!2561)))

(declare-fun b!86981 () Bool)

(assert (=> b!86981 (= e!56660 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) lt!40898)))))

(assert (= (and d!23001 c!14292) b!86979))

(assert (= (and d!23001 (not c!14292)) b!86980))

(assert (= (and d!23001 (not res!44640)) b!86981))

(declare-fun m!92461 () Bool)

(assert (=> d!23001 m!92461))

(declare-fun m!92463 () Bool)

(assert (=> b!86979 m!92463))

(declare-fun m!92465 () Bool)

(assert (=> b!86979 m!92465))

(assert (=> b!86979 m!92465))

(declare-fun m!92467 () Bool)

(assert (=> b!86979 m!92467))

(assert (=> b!86981 m!92465))

(assert (=> b!86981 m!92465))

(assert (=> b!86981 m!92467))

(assert (=> b!86153 d!23001))

(declare-fun d!23003 () Bool)

(declare-fun e!56661 () Bool)

(assert (=> d!23003 e!56661))

(declare-fun res!44641 () Bool)

(assert (=> d!23003 (=> (not res!44641) (not e!56661))))

(declare-fun lt!41278 () ListLongMap!1441)

(assert (=> d!23003 (= res!44641 (contains!747 lt!41278 (_1!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(declare-fun lt!41276 () List!1509)

(assert (=> d!23003 (= lt!41278 (ListLongMap!1442 lt!41276))))

(declare-fun lt!41275 () Unit!2498)

(declare-fun lt!41277 () Unit!2498)

(assert (=> d!23003 (= lt!41275 lt!41277)))

(assert (=> d!23003 (= (getValueByKey!141 lt!41276 (_1!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(assert (=> d!23003 (= lt!41277 (lemmaContainsTupThenGetReturnValue!58 lt!41276 (_1!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(assert (=> d!23003 (= lt!41276 (insertStrictlySorted!61 (toList!736 lt!40894) (_1!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(assert (=> d!23003 (= (+!107 lt!40894 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!41278)))

(declare-fun b!86982 () Bool)

(declare-fun res!44642 () Bool)

(assert (=> b!86982 (=> (not res!44642) (not e!56661))))

(assert (=> b!86982 (= res!44642 (= (getValueByKey!141 (toList!736 lt!41278) (_1!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))))))))

(declare-fun b!86983 () Bool)

(assert (=> b!86983 (= e!56661 (contains!749 (toList!736 lt!41278) (tuple2!2189 lt!40890 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))))))

(assert (= (and d!23003 res!44641) b!86982))

(assert (= (and b!86982 res!44642) b!86983))

(declare-fun m!92469 () Bool)

(assert (=> d!23003 m!92469))

(declare-fun m!92471 () Bool)

(assert (=> d!23003 m!92471))

(declare-fun m!92473 () Bool)

(assert (=> d!23003 m!92473))

(declare-fun m!92475 () Bool)

(assert (=> d!23003 m!92475))

(declare-fun m!92477 () Bool)

(assert (=> b!86982 m!92477))

(declare-fun m!92479 () Bool)

(assert (=> b!86983 m!92479))

(assert (=> b!86153 d!23003))

(declare-fun d!23005 () Bool)

(declare-fun e!56662 () Bool)

(assert (=> d!23005 e!56662))

(declare-fun res!44643 () Bool)

(assert (=> d!23005 (=> (not res!44643) (not e!56662))))

(declare-fun lt!41282 () ListLongMap!1441)

(assert (=> d!23005 (= res!44643 (contains!747 lt!41282 (_1!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(declare-fun lt!41280 () List!1509)

(assert (=> d!23005 (= lt!41282 (ListLongMap!1442 lt!41280))))

(declare-fun lt!41279 () Unit!2498)

(declare-fun lt!41281 () Unit!2498)

(assert (=> d!23005 (= lt!41279 lt!41281)))

(assert (=> d!23005 (= (getValueByKey!141 lt!41280 (_1!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!23005 (= lt!41281 (lemmaContainsTupThenGetReturnValue!58 lt!41280 (_1!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!23005 (= lt!41280 (insertStrictlySorted!61 (toList!736 lt!40906) (_1!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!23005 (= (+!107 lt!40906 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!41282)))

(declare-fun b!86984 () Bool)

(declare-fun res!44644 () Bool)

(assert (=> b!86984 (=> (not res!44644) (not e!56662))))

(assert (=> b!86984 (= res!44644 (= (getValueByKey!141 (toList!736 lt!41282) (_1!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(declare-fun b!86985 () Bool)

(assert (=> b!86985 (= e!56662 (contains!749 (toList!736 lt!41282) (tuple2!2189 lt!40889 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))

(assert (= (and d!23005 res!44643) b!86984))

(assert (= (and b!86984 res!44644) b!86985))

(declare-fun m!92481 () Bool)

(assert (=> d!23005 m!92481))

(declare-fun m!92483 () Bool)

(assert (=> d!23005 m!92483))

(declare-fun m!92485 () Bool)

(assert (=> d!23005 m!92485))

(declare-fun m!92487 () Bool)

(assert (=> d!23005 m!92487))

(declare-fun m!92489 () Bool)

(assert (=> b!86984 m!92489))

(declare-fun m!92491 () Bool)

(assert (=> b!86985 m!92491))

(assert (=> b!86153 d!23005))

(declare-fun d!23007 () Bool)

(assert (=> d!23007 (= (apply!82 (+!107 lt!40900 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!40897) (get!1207 (getValueByKey!141 (toList!736 (+!107 lt!40900 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) lt!40897)))))

(declare-fun bs!3697 () Bool)

(assert (= bs!3697 d!23007))

(declare-fun m!92493 () Bool)

(assert (=> bs!3697 m!92493))

(assert (=> bs!3697 m!92493))

(declare-fun m!92495 () Bool)

(assert (=> bs!3697 m!92495))

(assert (=> b!86153 d!23007))

(declare-fun d!23009 () Bool)

(assert (=> d!23009 (= (apply!82 (+!107 lt!40900 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!40897) (apply!82 lt!40900 lt!40897))))

(declare-fun lt!41283 () Unit!2498)

(assert (=> d!23009 (= lt!41283 (choose!507 lt!40900 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) lt!40897))))

(declare-fun e!56663 () Bool)

(assert (=> d!23009 e!56663))

(declare-fun res!44645 () Bool)

(assert (=> d!23009 (=> (not res!44645) (not e!56663))))

(assert (=> d!23009 (= res!44645 (contains!747 lt!40900 lt!40897))))

(assert (=> d!23009 (= (addApplyDifferent!58 lt!40900 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)) lt!40897) lt!41283)))

(declare-fun b!86986 () Bool)

(assert (=> b!86986 (= e!56663 (not (= lt!40897 lt!40891)))))

(assert (= (and d!23009 res!44645) b!86986))

(declare-fun m!92497 () Bool)

(assert (=> d!23009 m!92497))

(declare-fun m!92499 () Bool)

(assert (=> d!23009 m!92499))

(assert (=> d!23009 m!90897))

(assert (=> d!23009 m!90899))

(assert (=> d!23009 m!90897))

(assert (=> d!23009 m!90905))

(assert (=> b!86153 d!23009))

(declare-fun d!23011 () Bool)

(declare-fun e!56664 () Bool)

(assert (=> d!23011 e!56664))

(declare-fun res!44646 () Bool)

(assert (=> d!23011 (=> (not res!44646) (not e!56664))))

(declare-fun lt!41287 () ListLongMap!1441)

(assert (=> d!23011 (= res!44646 (contains!747 lt!41287 (_1!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(declare-fun lt!41285 () List!1509)

(assert (=> d!23011 (= lt!41287 (ListLongMap!1442 lt!41285))))

(declare-fun lt!41284 () Unit!2498)

(declare-fun lt!41286 () Unit!2498)

(assert (=> d!23011 (= lt!41284 lt!41286)))

(assert (=> d!23011 (= (getValueByKey!141 lt!41285 (_1!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(assert (=> d!23011 (= lt!41286 (lemmaContainsTupThenGetReturnValue!58 lt!41285 (_1!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(assert (=> d!23011 (= lt!41285 (insertStrictlySorted!61 (toList!736 lt!40900) (_1!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))))))

(assert (=> d!23011 (= (+!107 lt!40900 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))) lt!41287)))

(declare-fun b!86987 () Bool)

(declare-fun res!44647 () Bool)

(assert (=> b!86987 (=> (not res!44647) (not e!56664))))

(assert (=> b!86987 (= res!44647 (= (getValueByKey!141 (toList!736 lt!41287) (_1!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))))))))

(declare-fun b!86988 () Bool)

(assert (=> b!86988 (= e!56664 (contains!749 (toList!736 lt!41287) (tuple2!2189 lt!40891 (ite (and c!13888 c!13892) lt!40194 (zeroValue!2229 newMap!16)))))))

(assert (= (and d!23011 res!44646) b!86987))

(assert (= (and b!86987 res!44647) b!86988))

(declare-fun m!92501 () Bool)

(assert (=> d!23011 m!92501))

(declare-fun m!92503 () Bool)

(assert (=> d!23011 m!92503))

(declare-fun m!92505 () Bool)

(assert (=> d!23011 m!92505))

(declare-fun m!92507 () Bool)

(assert (=> d!23011 m!92507))

(declare-fun m!92509 () Bool)

(assert (=> b!86987 m!92509))

(declare-fun m!92511 () Bool)

(assert (=> b!86988 m!92511))

(assert (=> b!86153 d!23011))

(declare-fun b!86992 () Bool)

(declare-fun e!56666 () Option!147)

(assert (=> b!86992 (= e!56666 None!145)))

(declare-fun d!23013 () Bool)

(declare-fun c!14293 () Bool)

(assert (=> d!23013 (= c!14293 (and ((_ is Cons!1505) (toList!736 lt!40726)) (= (_1!1105 (h!2096 (toList!736 lt!40726))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56665 () Option!147)

(assert (=> d!23013 (= (getValueByKey!141 (toList!736 lt!40726) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56665)))

(declare-fun b!86990 () Bool)

(assert (=> b!86990 (= e!56665 e!56666)))

(declare-fun c!14294 () Bool)

(assert (=> b!86990 (= c!14294 (and ((_ is Cons!1505) (toList!736 lt!40726)) (not (= (_1!1105 (h!2096 (toList!736 lt!40726))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!86991 () Bool)

(assert (=> b!86991 (= e!56666 (getValueByKey!141 (t!5222 (toList!736 lt!40726)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!86989 () Bool)

(assert (=> b!86989 (= e!56665 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40726)))))))

(assert (= (and d!23013 c!14293) b!86989))

(assert (= (and d!23013 (not c!14293)) b!86990))

(assert (= (and b!86990 c!14294) b!86991))

(assert (= (and b!86990 (not c!14294)) b!86992))

(declare-fun m!92513 () Bool)

(assert (=> b!86991 m!92513))

(assert (=> b!85997 d!23013))

(declare-fun d!23015 () Bool)

(declare-fun e!56668 () Bool)

(assert (=> d!23015 e!56668))

(declare-fun res!44648 () Bool)

(assert (=> d!23015 (=> res!44648 e!56668)))

(declare-fun lt!41289 () Bool)

(assert (=> d!23015 (= res!44648 (not lt!41289))))

(declare-fun lt!41291 () Bool)

(assert (=> d!23015 (= lt!41289 lt!41291)))

(declare-fun lt!41288 () Unit!2498)

(declare-fun e!56667 () Unit!2498)

(assert (=> d!23015 (= lt!41288 e!56667)))

(declare-fun c!14295 () Bool)

(assert (=> d!23015 (= c!14295 lt!41291)))

(assert (=> d!23015 (= lt!41291 (containsKey!144 (toList!736 lt!40927) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23015 (= (contains!747 lt!40927 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41289)))

(declare-fun b!86993 () Bool)

(declare-fun lt!41290 () Unit!2498)

(assert (=> b!86993 (= e!56667 lt!41290)))

(assert (=> b!86993 (= lt!41290 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40927) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> b!86993 (isDefined!93 (getValueByKey!141 (toList!736 lt!40927) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86994 () Bool)

(declare-fun Unit!2562 () Unit!2498)

(assert (=> b!86994 (= e!56667 Unit!2562)))

(declare-fun b!86995 () Bool)

(assert (=> b!86995 (= e!56668 (isDefined!93 (getValueByKey!141 (toList!736 lt!40927) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!23015 c!14295) b!86993))

(assert (= (and d!23015 (not c!14295)) b!86994))

(assert (= (and d!23015 (not res!44648)) b!86995))

(declare-fun m!92515 () Bool)

(assert (=> d!23015 m!92515))

(declare-fun m!92517 () Bool)

(assert (=> b!86993 m!92517))

(assert (=> b!86993 m!90977))

(assert (=> b!86993 m!90977))

(declare-fun m!92519 () Bool)

(assert (=> b!86993 m!92519))

(assert (=> b!86995 m!90977))

(assert (=> b!86995 m!90977))

(assert (=> b!86995 m!92519))

(assert (=> d!22411 d!23015))

(declare-fun b!86999 () Bool)

(declare-fun e!56670 () Option!147)

(assert (=> b!86999 (= e!56670 None!145)))

(declare-fun d!23017 () Bool)

(declare-fun c!14296 () Bool)

(assert (=> d!23017 (= c!14296 (and ((_ is Cons!1505) lt!40925) (= (_1!1105 (h!2096 lt!40925)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56669 () Option!147)

(assert (=> d!23017 (= (getValueByKey!141 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56669)))

(declare-fun b!86997 () Bool)

(assert (=> b!86997 (= e!56669 e!56670)))

(declare-fun c!14297 () Bool)

(assert (=> b!86997 (= c!14297 (and ((_ is Cons!1505) lt!40925) (not (= (_1!1105 (h!2096 lt!40925)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!86998 () Bool)

(assert (=> b!86998 (= e!56670 (getValueByKey!141 (t!5222 lt!40925) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!86996 () Bool)

(assert (=> b!86996 (= e!56669 (Some!146 (_2!1105 (h!2096 lt!40925))))))

(assert (= (and d!23017 c!14296) b!86996))

(assert (= (and d!23017 (not c!14296)) b!86997))

(assert (= (and b!86997 c!14297) b!86998))

(assert (= (and b!86997 (not c!14297)) b!86999))

(declare-fun m!92521 () Bool)

(assert (=> b!86998 m!92521))

(assert (=> d!22411 d!23017))

(declare-fun d!23019 () Bool)

(assert (=> d!23019 (= (getValueByKey!141 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41292 () Unit!2498)

(assert (=> d!23019 (= lt!41292 (choose!511 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun e!56671 () Bool)

(assert (=> d!23019 e!56671))

(declare-fun res!44649 () Bool)

(assert (=> d!23019 (=> (not res!44649) (not e!56671))))

(assert (=> d!23019 (= res!44649 (isStrictlySorted!285 lt!40925))))

(assert (=> d!23019 (= (lemmaContainsTupThenGetReturnValue!58 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41292)))

(declare-fun b!87000 () Bool)

(declare-fun res!44650 () Bool)

(assert (=> b!87000 (=> (not res!44650) (not e!56671))))

(assert (=> b!87000 (= res!44650 (containsKey!144 lt!40925 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87001 () Bool)

(assert (=> b!87001 (= e!56671 (contains!749 lt!40925 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!23019 res!44649) b!87000))

(assert (= (and b!87000 res!44650) b!87001))

(assert (=> d!23019 m!90971))

(declare-fun m!92523 () Bool)

(assert (=> d!23019 m!92523))

(declare-fun m!92525 () Bool)

(assert (=> d!23019 m!92525))

(declare-fun m!92527 () Bool)

(assert (=> b!87000 m!92527))

(declare-fun m!92529 () Bool)

(assert (=> b!87001 m!92529))

(assert (=> d!22411 d!23019))

(declare-fun b!87002 () Bool)

(declare-fun e!56675 () List!1509)

(declare-fun call!8277 () List!1509)

(assert (=> b!87002 (= e!56675 call!8277)))

(declare-fun c!14301 () Bool)

(declare-fun bm!8274 () Bool)

(declare-fun e!56674 () List!1509)

(declare-fun call!8278 () List!1509)

(assert (=> bm!8274 (= call!8278 ($colon$colon!71 e!56674 (ite c!14301 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun c!14300 () Bool)

(assert (=> bm!8274 (= c!14300 c!14301)))

(declare-fun c!14299 () Bool)

(declare-fun b!87003 () Bool)

(assert (=> b!87003 (= c!14299 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (bvsgt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56672 () List!1509)

(assert (=> b!87003 (= e!56675 e!56672)))

(declare-fun lt!41293 () List!1509)

(declare-fun b!87004 () Bool)

(declare-fun e!56676 () Bool)

(assert (=> b!87004 (= e!56676 (contains!749 lt!41293 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87005 () Bool)

(declare-fun res!44651 () Bool)

(assert (=> b!87005 (=> (not res!44651) (not e!56676))))

(assert (=> b!87005 (= res!44651 (containsKey!144 lt!41293 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun bm!8275 () Bool)

(assert (=> bm!8275 (= call!8277 call!8278)))

(declare-fun b!87006 () Bool)

(assert (=> b!87006 (= e!56674 (insertStrictlySorted!61 (t!5222 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun c!14298 () Bool)

(declare-fun b!87007 () Bool)

(assert (=> b!87007 (= e!56674 (ite c!14298 (t!5222 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (ite c!14299 (Cons!1505 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (t!5222 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) Nil!1506)))))

(declare-fun b!87008 () Bool)

(declare-fun e!56673 () List!1509)

(assert (=> b!87008 (= e!56673 call!8278)))

(declare-fun bm!8276 () Bool)

(declare-fun call!8279 () List!1509)

(assert (=> bm!8276 (= call!8279 call!8277)))

(declare-fun d!23021 () Bool)

(assert (=> d!23021 e!56676))

(declare-fun res!44652 () Bool)

(assert (=> d!23021 (=> (not res!44652) (not e!56676))))

(assert (=> d!23021 (= res!44652 (isStrictlySorted!285 lt!41293))))

(assert (=> d!23021 (= lt!41293 e!56673)))

(assert (=> d!23021 (= c!14301 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!23021 (isStrictlySorted!285 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!23021 (= (insertStrictlySorted!61 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41293)))

(declare-fun b!87009 () Bool)

(assert (=> b!87009 (= e!56672 call!8279)))

(declare-fun b!87010 () Bool)

(assert (=> b!87010 (= e!56673 e!56675)))

(assert (=> b!87010 (= c!14298 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87011 () Bool)

(assert (=> b!87011 (= e!56672 call!8279)))

(assert (= (and d!23021 c!14301) b!87008))

(assert (= (and d!23021 (not c!14301)) b!87010))

(assert (= (and b!87010 c!14298) b!87002))

(assert (= (and b!87010 (not c!14298)) b!87003))

(assert (= (and b!87003 c!14299) b!87009))

(assert (= (and b!87003 (not c!14299)) b!87011))

(assert (= (or b!87009 b!87011) bm!8276))

(assert (= (or b!87002 bm!8276) bm!8275))

(assert (= (or b!87008 bm!8275) bm!8274))

(assert (= (and bm!8274 c!14300) b!87006))

(assert (= (and bm!8274 (not c!14300)) b!87007))

(assert (= (and d!23021 res!44652) b!87005))

(assert (= (and b!87005 res!44651) b!87004))

(declare-fun m!92531 () Bool)

(assert (=> b!87004 m!92531))

(declare-fun m!92533 () Bool)

(assert (=> b!87005 m!92533))

(declare-fun m!92535 () Bool)

(assert (=> bm!8274 m!92535))

(declare-fun m!92537 () Bool)

(assert (=> d!23021 m!92537))

(declare-fun m!92539 () Bool)

(assert (=> d!23021 m!92539))

(declare-fun m!92541 () Bool)

(assert (=> b!87006 m!92541))

(assert (=> d!22411 d!23021))

(declare-fun d!23023 () Bool)

(assert (=> d!23023 (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41294 () Unit!2498)

(assert (=> d!23023 (= lt!41294 (choose!517 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56677 () Bool)

(assert (=> d!23023 e!56677))

(declare-fun res!44653 () Bool)

(assert (=> d!23023 (=> (not res!44653) (not e!56677))))

(assert (=> d!23023 (= res!44653 (isStrictlySorted!285 (toList!736 lt!40439)))))

(assert (=> d!23023 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41294)))

(declare-fun b!87012 () Bool)

(assert (=> b!87012 (= e!56677 (containsKey!144 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23023 res!44653) b!87012))

(assert (=> d!23023 m!90677))

(assert (=> d!23023 m!90677))

(assert (=> d!23023 m!90679))

(declare-fun m!92543 () Bool)

(assert (=> d!23023 m!92543))

(assert (=> d!23023 m!91357))

(assert (=> b!87012 m!90673))

(assert (=> b!86024 d!23023))

(declare-fun d!23025 () Bool)

(assert (=> d!23025 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40439) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3698 () Bool)

(assert (= bs!3698 d!23025))

(assert (=> bs!3698 m!90677))

(declare-fun m!92545 () Bool)

(assert (=> bs!3698 m!92545))

(assert (=> b!86024 d!23025))

(assert (=> b!86024 d!22911))

(assert (=> b!86139 d!22419))

(declare-fun d!23027 () Bool)

(declare-fun lt!41295 () Bool)

(assert (=> d!23027 (= lt!41295 (select (content!91 (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56678 () Bool)

(assert (=> d!23027 (= lt!41295 e!56678)))

(declare-fun res!44654 () Bool)

(assert (=> d!23027 (=> (not res!44654) (not e!56678))))

(assert (=> d!23027 (= res!44654 ((_ is Cons!1504) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)))))

(assert (=> d!23027 (= (contains!748 (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!41295)))

(declare-fun b!87013 () Bool)

(declare-fun e!56679 () Bool)

(assert (=> b!87013 (= e!56678 e!56679)))

(declare-fun res!44655 () Bool)

(assert (=> b!87013 (=> res!44655 e!56679)))

(assert (=> b!87013 (= res!44655 (= (h!2095 (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!87014 () Bool)

(assert (=> b!87014 (= e!56679 (contains!748 (t!5221 (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!23027 res!44654) b!87013))

(assert (= (and b!87013 (not res!44655)) b!87014))

(declare-fun m!92547 () Bool)

(assert (=> d!23027 m!92547))

(assert (=> d!23027 m!90567))

(declare-fun m!92549 () Bool)

(assert (=> d!23027 m!92549))

(assert (=> b!87014 m!90567))

(declare-fun m!92551 () Bool)

(assert (=> b!87014 m!92551))

(assert (=> b!85986 d!23027))

(declare-fun b!87018 () Bool)

(declare-fun e!56681 () Option!147)

(assert (=> b!87018 (= e!56681 None!145)))

(declare-fun d!23029 () Bool)

(declare-fun c!14302 () Bool)

(assert (=> d!23029 (= c!14302 (and ((_ is Cons!1505) (toList!736 lt!40919)) (= (_1!1105 (h!2096 (toList!736 lt!40919))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56680 () Option!147)

(assert (=> d!23029 (= (getValueByKey!141 (toList!736 lt!40919) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56680)))

(declare-fun b!87016 () Bool)

(assert (=> b!87016 (= e!56680 e!56681)))

(declare-fun c!14303 () Bool)

(assert (=> b!87016 (= c!14303 (and ((_ is Cons!1505) (toList!736 lt!40919)) (not (= (_1!1105 (h!2096 (toList!736 lt!40919))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!87017 () Bool)

(assert (=> b!87017 (= e!56681 (getValueByKey!141 (t!5222 (toList!736 lt!40919)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87015 () Bool)

(assert (=> b!87015 (= e!56680 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40919)))))))

(assert (= (and d!23029 c!14302) b!87015))

(assert (= (and d!23029 (not c!14302)) b!87016))

(assert (= (and b!87016 c!14303) b!87017))

(assert (= (and b!87016 (not c!14303)) b!87018))

(declare-fun m!92553 () Bool)

(assert (=> b!87017 m!92553))

(assert (=> b!86180 d!23029))

(assert (=> b!86023 d!22767))

(assert (=> b!86023 d!22769))

(declare-fun d!23031 () Bool)

(declare-fun res!44656 () Bool)

(declare-fun e!56682 () Bool)

(assert (=> d!23031 (=> res!44656 e!56682)))

(assert (=> d!23031 (= res!44656 (and ((_ is Cons!1505) lt!40362) (= (_1!1105 (h!2096 lt!40362)) (_1!1105 lt!40192))))))

(assert (=> d!23031 (= (containsKey!144 lt!40362 (_1!1105 lt!40192)) e!56682)))

(declare-fun b!87019 () Bool)

(declare-fun e!56683 () Bool)

(assert (=> b!87019 (= e!56682 e!56683)))

(declare-fun res!44657 () Bool)

(assert (=> b!87019 (=> (not res!44657) (not e!56683))))

(assert (=> b!87019 (= res!44657 (and (or (not ((_ is Cons!1505) lt!40362)) (bvsle (_1!1105 (h!2096 lt!40362)) (_1!1105 lt!40192))) ((_ is Cons!1505) lt!40362) (bvslt (_1!1105 (h!2096 lt!40362)) (_1!1105 lt!40192))))))

(declare-fun b!87020 () Bool)

(assert (=> b!87020 (= e!56683 (containsKey!144 (t!5222 lt!40362) (_1!1105 lt!40192)))))

(assert (= (and d!23031 (not res!44656)) b!87019))

(assert (= (and b!87019 res!44657) b!87020))

(declare-fun m!92555 () Bool)

(assert (=> b!87020 m!92555))

(assert (=> b!86037 d!23031))

(assert (=> b!86093 d!22441))

(declare-fun d!23033 () Bool)

(declare-fun e!56684 () Bool)

(assert (=> d!23033 e!56684))

(declare-fun res!44658 () Bool)

(assert (=> d!23033 (=> (not res!44658) (not e!56684))))

(declare-fun lt!41299 () ListLongMap!1441)

(assert (=> d!23033 (= res!44658 (contains!747 lt!41299 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41297 () List!1509)

(assert (=> d!23033 (= lt!41299 (ListLongMap!1442 lt!41297))))

(declare-fun lt!41296 () Unit!2498)

(declare-fun lt!41298 () Unit!2498)

(assert (=> d!23033 (= lt!41296 lt!41298)))

(assert (=> d!23033 (= (getValueByKey!141 lt!41297 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23033 (= lt!41298 (lemmaContainsTupThenGetReturnValue!58 lt!41297 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23033 (= lt!41297 (insertStrictlySorted!61 (toList!736 (map!1196 newMap!16)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23033 (= (+!107 (map!1196 newMap!16) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41299)))

(declare-fun b!87021 () Bool)

(declare-fun res!44659 () Bool)

(assert (=> b!87021 (=> (not res!44659) (not e!56684))))

(assert (=> b!87021 (= res!44659 (= (getValueByKey!141 (toList!736 lt!41299) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87022 () Bool)

(assert (=> b!87022 (= e!56684 (contains!749 (toList!736 lt!41299) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!23033 res!44658) b!87021))

(assert (= (and b!87021 res!44659) b!87022))

(declare-fun m!92557 () Bool)

(assert (=> d!23033 m!92557))

(declare-fun m!92559 () Bool)

(assert (=> d!23033 m!92559))

(declare-fun m!92561 () Bool)

(assert (=> d!23033 m!92561))

(declare-fun m!92563 () Bool)

(assert (=> d!23033 m!92563))

(declare-fun m!92565 () Bool)

(assert (=> b!87021 m!92565))

(declare-fun m!92567 () Bool)

(assert (=> b!87022 m!92567))

(assert (=> b!86093 d!23033))

(assert (=> b!86093 d!22147))

(declare-fun d!23035 () Bool)

(assert (=> d!23035 (= (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85640 d!23035))

(declare-fun d!23037 () Bool)

(declare-fun res!44660 () Bool)

(declare-fun e!56685 () Bool)

(assert (=> d!23037 (=> res!44660 e!56685)))

(assert (=> d!23037 (= res!44660 (and ((_ is Cons!1505) (toList!736 lt!40353)) (= (_1!1105 (h!2096 (toList!736 lt!40353))) (_1!1105 lt!40197))))))

(assert (=> d!23037 (= (containsKey!144 (toList!736 lt!40353) (_1!1105 lt!40197)) e!56685)))

(declare-fun b!87023 () Bool)

(declare-fun e!56686 () Bool)

(assert (=> b!87023 (= e!56685 e!56686)))

(declare-fun res!44661 () Bool)

(assert (=> b!87023 (=> (not res!44661) (not e!56686))))

(assert (=> b!87023 (= res!44661 (and (or (not ((_ is Cons!1505) (toList!736 lt!40353))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40353))) (_1!1105 lt!40197))) ((_ is Cons!1505) (toList!736 lt!40353)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40353))) (_1!1105 lt!40197))))))

(declare-fun b!87024 () Bool)

(assert (=> b!87024 (= e!56686 (containsKey!144 (t!5222 (toList!736 lt!40353)) (_1!1105 lt!40197)))))

(assert (= (and d!23037 (not res!44660)) b!87023))

(assert (= (and b!87023 res!44661) b!87024))

(declare-fun m!92569 () Bool)

(assert (=> b!87024 m!92569))

(assert (=> d!22319 d!23037))

(declare-fun d!23039 () Bool)

(declare-fun e!56688 () Bool)

(assert (=> d!23039 e!56688))

(declare-fun res!44662 () Bool)

(assert (=> d!23039 (=> res!44662 e!56688)))

(declare-fun lt!41301 () Bool)

(assert (=> d!23039 (= res!44662 (not lt!41301))))

(declare-fun lt!41303 () Bool)

(assert (=> d!23039 (= lt!41301 lt!41303)))

(declare-fun lt!41300 () Unit!2498)

(declare-fun e!56687 () Unit!2498)

(assert (=> d!23039 (= lt!41300 e!56687)))

(declare-fun c!14304 () Bool)

(assert (=> d!23039 (= c!14304 lt!41303)))

(assert (=> d!23039 (= lt!41303 (containsKey!144 (toList!736 lt!40714) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23039 (= (contains!747 lt!40714 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41301)))

(declare-fun b!87025 () Bool)

(declare-fun lt!41302 () Unit!2498)

(assert (=> b!87025 (= e!56687 lt!41302)))

(assert (=> b!87025 (= lt!41302 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40714) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> b!87025 (isDefined!93 (getValueByKey!141 (toList!736 lt!40714) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87026 () Bool)

(declare-fun Unit!2563 () Unit!2498)

(assert (=> b!87026 (= e!56687 Unit!2563)))

(declare-fun b!87027 () Bool)

(assert (=> b!87027 (= e!56688 (isDefined!93 (getValueByKey!141 (toList!736 lt!40714) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!23039 c!14304) b!87025))

(assert (= (and d!23039 (not c!14304)) b!87026))

(assert (= (and d!23039 (not res!44662)) b!87027))

(declare-fun m!92571 () Bool)

(assert (=> d!23039 m!92571))

(declare-fun m!92573 () Bool)

(assert (=> b!87025 m!92573))

(assert (=> b!87025 m!90593))

(assert (=> b!87025 m!90593))

(declare-fun m!92575 () Bool)

(assert (=> b!87025 m!92575))

(assert (=> b!87027 m!90593))

(assert (=> b!87027 m!90593))

(assert (=> b!87027 m!92575))

(assert (=> d!22343 d!23039))

(declare-fun b!87031 () Bool)

(declare-fun e!56690 () Option!147)

(assert (=> b!87031 (= e!56690 None!145)))

(declare-fun d!23041 () Bool)

(declare-fun c!14305 () Bool)

(assert (=> d!23041 (= c!14305 (and ((_ is Cons!1505) lt!40712) (= (_1!1105 (h!2096 lt!40712)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56689 () Option!147)

(assert (=> d!23041 (= (getValueByKey!141 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56689)))

(declare-fun b!87029 () Bool)

(assert (=> b!87029 (= e!56689 e!56690)))

(declare-fun c!14306 () Bool)

(assert (=> b!87029 (= c!14306 (and ((_ is Cons!1505) lt!40712) (not (= (_1!1105 (h!2096 lt!40712)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!87030 () Bool)

(assert (=> b!87030 (= e!56690 (getValueByKey!141 (t!5222 lt!40712) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87028 () Bool)

(assert (=> b!87028 (= e!56689 (Some!146 (_2!1105 (h!2096 lt!40712))))))

(assert (= (and d!23041 c!14305) b!87028))

(assert (= (and d!23041 (not c!14305)) b!87029))

(assert (= (and b!87029 c!14306) b!87030))

(assert (= (and b!87029 (not c!14306)) b!87031))

(declare-fun m!92577 () Bool)

(assert (=> b!87030 m!92577))

(assert (=> d!22343 d!23041))

(declare-fun d!23043 () Bool)

(assert (=> d!23043 (= (getValueByKey!141 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41304 () Unit!2498)

(assert (=> d!23043 (= lt!41304 (choose!511 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun e!56691 () Bool)

(assert (=> d!23043 e!56691))

(declare-fun res!44663 () Bool)

(assert (=> d!23043 (=> (not res!44663) (not e!56691))))

(assert (=> d!23043 (= res!44663 (isStrictlySorted!285 lt!40712))))

(assert (=> d!23043 (= (lemmaContainsTupThenGetReturnValue!58 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41304)))

(declare-fun b!87032 () Bool)

(declare-fun res!44664 () Bool)

(assert (=> b!87032 (=> (not res!44664) (not e!56691))))

(assert (=> b!87032 (= res!44664 (containsKey!144 lt!40712 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87033 () Bool)

(assert (=> b!87033 (= e!56691 (contains!749 lt!40712 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!23043 res!44663) b!87032))

(assert (= (and b!87032 res!44664) b!87033))

(assert (=> d!23043 m!90587))

(declare-fun m!92579 () Bool)

(assert (=> d!23043 m!92579))

(declare-fun m!92581 () Bool)

(assert (=> d!23043 m!92581))

(declare-fun m!92583 () Bool)

(assert (=> b!87032 m!92583))

(declare-fun m!92585 () Bool)

(assert (=> b!87033 m!92585))

(assert (=> d!22343 d!23043))

(declare-fun b!87034 () Bool)

(declare-fun e!56695 () List!1509)

(declare-fun call!8280 () List!1509)

(assert (=> b!87034 (= e!56695 call!8280)))

(declare-fun e!56694 () List!1509)

(declare-fun call!8281 () List!1509)

(declare-fun c!14310 () Bool)

(declare-fun bm!8277 () Bool)

(assert (=> bm!8277 (= call!8281 ($colon$colon!71 e!56694 (ite c!14310 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun c!14309 () Bool)

(assert (=> bm!8277 (= c!14309 c!14310)))

(declare-fun b!87035 () Bool)

(declare-fun c!14308 () Bool)

(assert (=> b!87035 (= c!14308 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (bvsgt (_1!1105 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56692 () List!1509)

(assert (=> b!87035 (= e!56695 e!56692)))

(declare-fun lt!41305 () List!1509)

(declare-fun e!56696 () Bool)

(declare-fun b!87036 () Bool)

(assert (=> b!87036 (= e!56696 (contains!749 lt!41305 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87037 () Bool)

(declare-fun res!44665 () Bool)

(assert (=> b!87037 (=> (not res!44665) (not e!56696))))

(assert (=> b!87037 (= res!44665 (containsKey!144 lt!41305 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun bm!8278 () Bool)

(assert (=> bm!8278 (= call!8280 call!8281)))

(declare-fun b!87038 () Bool)

(assert (=> b!87038 (= e!56694 (insertStrictlySorted!61 (t!5222 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun c!14307 () Bool)

(declare-fun b!87039 () Bool)

(assert (=> b!87039 (= e!56694 (ite c!14307 (t!5222 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (ite c!14308 (Cons!1505 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (t!5222 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) Nil!1506)))))

(declare-fun b!87040 () Bool)

(declare-fun e!56693 () List!1509)

(assert (=> b!87040 (= e!56693 call!8281)))

(declare-fun bm!8279 () Bool)

(declare-fun call!8282 () List!1509)

(assert (=> bm!8279 (= call!8282 call!8280)))

(declare-fun d!23045 () Bool)

(assert (=> d!23045 e!56696))

(declare-fun res!44666 () Bool)

(assert (=> d!23045 (=> (not res!44666) (not e!56696))))

(assert (=> d!23045 (= res!44666 (isStrictlySorted!285 lt!41305))))

(assert (=> d!23045 (= lt!41305 e!56693)))

(assert (=> d!23045 (= c!14310 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!23045 (isStrictlySorted!285 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!23045 (= (insertStrictlySorted!61 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41305)))

(declare-fun b!87041 () Bool)

(assert (=> b!87041 (= e!56692 call!8282)))

(declare-fun b!87042 () Bool)

(assert (=> b!87042 (= e!56693 e!56695)))

(assert (=> b!87042 (= c!14307 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87043 () Bool)

(assert (=> b!87043 (= e!56692 call!8282)))

(assert (= (and d!23045 c!14310) b!87040))

(assert (= (and d!23045 (not c!14310)) b!87042))

(assert (= (and b!87042 c!14307) b!87034))

(assert (= (and b!87042 (not c!14307)) b!87035))

(assert (= (and b!87035 c!14308) b!87041))

(assert (= (and b!87035 (not c!14308)) b!87043))

(assert (= (or b!87041 b!87043) bm!8279))

(assert (= (or b!87034 bm!8279) bm!8278))

(assert (= (or b!87040 bm!8278) bm!8277))

(assert (= (and bm!8277 c!14309) b!87038))

(assert (= (and bm!8277 (not c!14309)) b!87039))

(assert (= (and d!23045 res!44666) b!87037))

(assert (= (and b!87037 res!44665) b!87036))

(declare-fun m!92587 () Bool)

(assert (=> b!87036 m!92587))

(declare-fun m!92589 () Bool)

(assert (=> b!87037 m!92589))

(declare-fun m!92591 () Bool)

(assert (=> bm!8277 m!92591))

(declare-fun m!92593 () Bool)

(assert (=> d!23045 m!92593))

(declare-fun m!92595 () Bool)

(assert (=> d!23045 m!92595))

(declare-fun m!92597 () Bool)

(assert (=> b!87038 m!92597))

(assert (=> d!22343 d!23045))

(assert (=> b!85665 d!22419))

(declare-fun d!23047 () Bool)

(declare-fun lt!41306 () Bool)

(assert (=> d!23047 (= lt!41306 (select (content!90 (t!5222 (toList!736 lt!40364))) lt!40192))))

(declare-fun e!56698 () Bool)

(assert (=> d!23047 (= lt!41306 e!56698)))

(declare-fun res!44668 () Bool)

(assert (=> d!23047 (=> (not res!44668) (not e!56698))))

(assert (=> d!23047 (= res!44668 ((_ is Cons!1505) (t!5222 (toList!736 lt!40364))))))

(assert (=> d!23047 (= (contains!749 (t!5222 (toList!736 lt!40364)) lt!40192) lt!41306)))

(declare-fun b!87044 () Bool)

(declare-fun e!56697 () Bool)

(assert (=> b!87044 (= e!56698 e!56697)))

(declare-fun res!44667 () Bool)

(assert (=> b!87044 (=> res!44667 e!56697)))

(assert (=> b!87044 (= res!44667 (= (h!2096 (t!5222 (toList!736 lt!40364))) lt!40192))))

(declare-fun b!87045 () Bool)

(assert (=> b!87045 (= e!56697 (contains!749 (t!5222 (t!5222 (toList!736 lt!40364))) lt!40192))))

(assert (= (and d!23047 res!44668) b!87044))

(assert (= (and b!87044 (not res!44667)) b!87045))

(assert (=> d!23047 m!92415))

(declare-fun m!92599 () Bool)

(assert (=> d!23047 m!92599))

(declare-fun m!92601 () Bool)

(assert (=> b!87045 m!92601))

(assert (=> b!86174 d!23047))

(declare-fun d!23049 () Bool)

(declare-fun lt!41307 () Bool)

(assert (=> d!23049 (= lt!41307 (select (content!90 lt!40696) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun e!56700 () Bool)

(assert (=> d!23049 (= lt!41307 e!56700)))

(declare-fun res!44670 () Bool)

(assert (=> d!23049 (=> (not res!44670) (not e!56700))))

(assert (=> d!23049 (= res!44670 ((_ is Cons!1505) lt!40696))))

(assert (=> d!23049 (= (contains!749 lt!40696 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) lt!41307)))

(declare-fun b!87046 () Bool)

(declare-fun e!56699 () Bool)

(assert (=> b!87046 (= e!56700 e!56699)))

(declare-fun res!44669 () Bool)

(assert (=> b!87046 (=> res!44669 e!56699)))

(assert (=> b!87046 (= res!44669 (= (h!2096 lt!40696) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!87047 () Bool)

(assert (=> b!87047 (= e!56699 (contains!749 (t!5222 lt!40696) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!23049 res!44670) b!87046))

(assert (= (and b!87046 (not res!44669)) b!87047))

(declare-fun m!92603 () Bool)

(assert (=> d!23049 m!92603))

(declare-fun m!92605 () Bool)

(assert (=> d!23049 m!92605))

(declare-fun m!92607 () Bool)

(assert (=> b!87047 m!92607))

(assert (=> b!85964 d!23049))

(assert (=> d!22285 d!22385))

(declare-fun call!8287 () Bool)

(declare-fun bm!8284 () Bool)

(assert (=> bm!8284 (= call!8287 (arrayContainsKey!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun call!8288 () Bool)

(declare-fun c!14315 () Bool)

(declare-fun lt!41310 () SeekEntryResult!237)

(declare-fun bm!8285 () Bool)

(assert (=> bm!8285 (= call!8288 (inRange!0 (ite c!14315 (index!3085 lt!41310) (index!3088 lt!41310)) (mask!6365 newMap!16)))))

(declare-fun b!87064 () Bool)

(declare-fun e!56711 () Bool)

(declare-fun e!56710 () Bool)

(assert (=> b!87064 (= e!56711 e!56710)))

(declare-fun c!14316 () Bool)

(assert (=> b!87064 (= c!14316 ((_ is MissingVacant!237) lt!41310))))

(declare-fun b!87065 () Bool)

(declare-fun e!56712 () Bool)

(assert (=> b!87065 (= e!56712 (not call!8287))))

(declare-fun b!87066 () Bool)

(declare-fun res!44682 () Bool)

(assert (=> b!87066 (= res!44682 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3085 lt!41310)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87066 (=> (not res!44682) (not e!56712))))

(declare-fun b!87067 () Bool)

(assert (=> b!87067 (= e!56711 e!56712)))

(declare-fun res!44680 () Bool)

(assert (=> b!87067 (= res!44680 call!8288)))

(assert (=> b!87067 (=> (not res!44680) (not e!56712))))

(declare-fun b!87068 () Bool)

(declare-fun e!56709 () Bool)

(assert (=> b!87068 (= e!56709 (not call!8287))))

(declare-fun b!87069 () Bool)

(assert (=> b!87069 (= e!56710 ((_ is Undefined!237) lt!41310))))

(declare-fun b!87070 () Bool)

(declare-fun res!44681 () Bool)

(assert (=> b!87070 (=> (not res!44681) (not e!56709))))

(assert (=> b!87070 (= res!44681 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!41310)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87071 () Bool)

(declare-fun res!44679 () Bool)

(assert (=> b!87071 (=> (not res!44679) (not e!56709))))

(assert (=> b!87071 (= res!44679 call!8288)))

(assert (=> b!87071 (= e!56710 e!56709)))

(declare-fun d!23051 () Bool)

(assert (=> d!23051 e!56711))

(assert (=> d!23051 (= c!14315 ((_ is MissingZero!237) lt!41310))))

(assert (=> d!23051 (= lt!41310 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(assert (=> d!23051 true))

(declare-fun _$34!842 () Unit!2498)

(assert (=> d!23051 (= (choose!512 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) _$34!842)))

(assert (= (and d!23051 c!14315) b!87067))

(assert (= (and d!23051 (not c!14315)) b!87064))

(assert (= (and b!87067 res!44680) b!87066))

(assert (= (and b!87066 res!44682) b!87065))

(assert (= (and b!87064 c!14316) b!87071))

(assert (= (and b!87064 (not c!14316)) b!87069))

(assert (= (and b!87071 res!44679) b!87070))

(assert (= (and b!87070 res!44681) b!87068))

(assert (= (or b!87067 b!87071) bm!8285))

(assert (= (or b!87065 b!87068) bm!8284))

(declare-fun m!92609 () Bool)

(assert (=> b!87066 m!92609))

(declare-fun m!92611 () Bool)

(assert (=> bm!8285 m!92611))

(assert (=> d!23051 m!89569))

(assert (=> d!23051 m!89957))

(declare-fun m!92613 () Bool)

(assert (=> b!87070 m!92613))

(assert (=> bm!8284 m!89569))

(assert (=> bm!8284 m!90003))

(assert (=> d!22285 d!23051))

(assert (=> d!22285 d!22427))

(assert (=> d!22303 d!22299))

(assert (=> d!22303 d!22301))

(declare-fun d!23053 () Bool)

(assert (=> d!23053 (not (contains!747 (+!107 lt!40344 (tuple2!2189 lt!40347 lt!40346)) lt!40345))))

(assert (=> d!23053 true))

(declare-fun _$36!313 () Unit!2498)

(assert (=> d!23053 (= (choose!513 lt!40344 lt!40347 lt!40346 lt!40345) _$36!313)))

(declare-fun bs!3699 () Bool)

(assert (= bs!3699 d!23053))

(assert (=> bs!3699 m!89801))

(assert (=> bs!3699 m!89801))

(assert (=> bs!3699 m!89803))

(assert (=> d!22303 d!23053))

(declare-fun d!23055 () Bool)

(declare-fun e!56714 () Bool)

(assert (=> d!23055 e!56714))

(declare-fun res!44683 () Bool)

(assert (=> d!23055 (=> res!44683 e!56714)))

(declare-fun lt!41312 () Bool)

(assert (=> d!23055 (= res!44683 (not lt!41312))))

(declare-fun lt!41314 () Bool)

(assert (=> d!23055 (= lt!41312 lt!41314)))

(declare-fun lt!41311 () Unit!2498)

(declare-fun e!56713 () Unit!2498)

(assert (=> d!23055 (= lt!41311 e!56713)))

(declare-fun c!14317 () Bool)

(assert (=> d!23055 (= c!14317 lt!41314)))

(assert (=> d!23055 (= lt!41314 (containsKey!144 (toList!736 lt!40344) lt!40345))))

(assert (=> d!23055 (= (contains!747 lt!40344 lt!40345) lt!41312)))

(declare-fun b!87073 () Bool)

(declare-fun lt!41313 () Unit!2498)

(assert (=> b!87073 (= e!56713 lt!41313)))

(assert (=> b!87073 (= lt!41313 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40344) lt!40345))))

(assert (=> b!87073 (isDefined!93 (getValueByKey!141 (toList!736 lt!40344) lt!40345))))

(declare-fun b!87074 () Bool)

(declare-fun Unit!2564 () Unit!2498)

(assert (=> b!87074 (= e!56713 Unit!2564)))

(declare-fun b!87075 () Bool)

(assert (=> b!87075 (= e!56714 (isDefined!93 (getValueByKey!141 (toList!736 lt!40344) lt!40345)))))

(assert (= (and d!23055 c!14317) b!87073))

(assert (= (and d!23055 (not c!14317)) b!87074))

(assert (= (and d!23055 (not res!44683)) b!87075))

(declare-fun m!92615 () Bool)

(assert (=> d!23055 m!92615))

(declare-fun m!92617 () Bool)

(assert (=> b!87073 m!92617))

(declare-fun m!92619 () Bool)

(assert (=> b!87073 m!92619))

(assert (=> b!87073 m!92619))

(declare-fun m!92621 () Bool)

(assert (=> b!87073 m!92621))

(assert (=> b!87075 m!92619))

(assert (=> b!87075 m!92619))

(assert (=> b!87075 m!92621))

(assert (=> d!22303 d!23055))

(declare-fun d!23057 () Bool)

(assert (=> d!23057 (= (isEmpty!343 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) (not ((_ is Some!146) (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))))

(assert (=> d!22381 d!23057))

(declare-fun d!23059 () Bool)

(declare-fun res!44684 () Bool)

(declare-fun e!56715 () Bool)

(assert (=> d!23059 (=> res!44684 e!56715)))

(assert (=> d!23059 (= res!44684 (or ((_ is Nil!1506) lt!40606) ((_ is Nil!1506) (t!5222 lt!40606))))))

(assert (=> d!23059 (= (isStrictlySorted!285 lt!40606) e!56715)))

(declare-fun b!87076 () Bool)

(declare-fun e!56716 () Bool)

(assert (=> b!87076 (= e!56715 e!56716)))

(declare-fun res!44685 () Bool)

(assert (=> b!87076 (=> (not res!44685) (not e!56716))))

(assert (=> b!87076 (= res!44685 (bvslt (_1!1105 (h!2096 lt!40606)) (_1!1105 (h!2096 (t!5222 lt!40606)))))))

(declare-fun b!87077 () Bool)

(assert (=> b!87077 (= e!56716 (isStrictlySorted!285 (t!5222 lt!40606)))))

(assert (= (and d!23059 (not res!44684)) b!87076))

(assert (= (and b!87076 res!44685) b!87077))

(declare-fun m!92623 () Bool)

(assert (=> b!87077 m!92623))

(assert (=> d!22235 d!23059))

(declare-fun d!23061 () Bool)

(declare-fun res!44686 () Bool)

(declare-fun e!56717 () Bool)

(assert (=> d!23061 (=> res!44686 e!56717)))

(assert (=> d!23061 (= res!44686 (or ((_ is Nil!1506) (toList!736 lt!40187)) ((_ is Nil!1506) (t!5222 (toList!736 lt!40187)))))))

(assert (=> d!23061 (= (isStrictlySorted!285 (toList!736 lt!40187)) e!56717)))

(declare-fun b!87078 () Bool)

(declare-fun e!56718 () Bool)

(assert (=> b!87078 (= e!56717 e!56718)))

(declare-fun res!44687 () Bool)

(assert (=> b!87078 (=> (not res!44687) (not e!56718))))

(assert (=> b!87078 (= res!44687 (bvslt (_1!1105 (h!2096 (toList!736 lt!40187))) (_1!1105 (h!2096 (t!5222 (toList!736 lt!40187))))))))

(declare-fun b!87079 () Bool)

(assert (=> b!87079 (= e!56718 (isStrictlySorted!285 (t!5222 (toList!736 lt!40187))))))

(assert (= (and d!23061 (not res!44686)) b!87078))

(assert (= (and b!87078 res!44687) b!87079))

(assert (=> b!87079 m!91757))

(assert (=> d!22235 d!23061))

(assert (=> b!85783 d!22837))

(assert (=> b!85783 d!22177))

(declare-fun d!23063 () Bool)

(declare-fun res!44688 () Bool)

(declare-fun e!56719 () Bool)

(assert (=> d!23063 (=> (not res!44688) (not e!56719))))

(assert (=> d!23063 (= res!44688 (simpleValid!58 (_2!1104 lt!40840)))))

(assert (=> d!23063 (= (valid!335 (_2!1104 lt!40840)) e!56719)))

(declare-fun b!87080 () Bool)

(declare-fun res!44689 () Bool)

(assert (=> b!87080 (=> (not res!44689) (not e!56719))))

(assert (=> b!87080 (= res!44689 (= (arrayCountValidKeys!0 (_keys!4009 (_2!1104 lt!40840)) #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40840)))) (_size!426 (_2!1104 lt!40840))))))

(declare-fun b!87081 () Bool)

(declare-fun res!44690 () Bool)

(assert (=> b!87081 (=> (not res!44690) (not e!56719))))

(assert (=> b!87081 (= res!44690 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 (_2!1104 lt!40840)) (mask!6365 (_2!1104 lt!40840))))))

(declare-fun b!87082 () Bool)

(assert (=> b!87082 (= e!56719 (arrayNoDuplicates!0 (_keys!4009 (_2!1104 lt!40840)) #b00000000000000000000000000000000 Nil!1505))))

(assert (= (and d!23063 res!44688) b!87080))

(assert (= (and b!87080 res!44689) b!87081))

(assert (= (and b!87081 res!44690) b!87082))

(declare-fun m!92625 () Bool)

(assert (=> d!23063 m!92625))

(declare-fun m!92627 () Bool)

(assert (=> b!87080 m!92627))

(declare-fun m!92629 () Bool)

(assert (=> b!87081 m!92629))

(declare-fun m!92631 () Bool)

(assert (=> b!87082 m!92631))

(assert (=> b!86099 d!23063))

(declare-fun d!23065 () Bool)

(declare-fun e!56721 () Bool)

(assert (=> d!23065 e!56721))

(declare-fun res!44691 () Bool)

(assert (=> d!23065 (=> res!44691 e!56721)))

(declare-fun lt!41316 () Bool)

(assert (=> d!23065 (= res!44691 (not lt!41316))))

(declare-fun lt!41318 () Bool)

(assert (=> d!23065 (= lt!41316 lt!41318)))

(declare-fun lt!41315 () Unit!2498)

(declare-fun e!56720 () Unit!2498)

(assert (=> d!23065 (= lt!41315 e!56720)))

(declare-fun c!14318 () Bool)

(assert (=> d!23065 (= c!14318 lt!41318)))

(assert (=> d!23065 (= lt!41318 (containsKey!144 (toList!736 lt!40878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23065 (= (contains!747 lt!40878 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41316)))

(declare-fun b!87083 () Bool)

(declare-fun lt!41317 () Unit!2498)

(assert (=> b!87083 (= e!56720 lt!41317)))

(assert (=> b!87083 (= lt!41317 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87083 (isDefined!93 (getValueByKey!141 (toList!736 lt!40878) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87084 () Bool)

(declare-fun Unit!2565 () Unit!2498)

(assert (=> b!87084 (= e!56720 Unit!2565)))

(declare-fun b!87085 () Bool)

(assert (=> b!87085 (= e!56721 (isDefined!93 (getValueByKey!141 (toList!736 lt!40878) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23065 c!14318) b!87083))

(assert (= (and d!23065 (not c!14318)) b!87084))

(assert (= (and d!23065 (not res!44691)) b!87085))

(declare-fun m!92633 () Bool)

(assert (=> d!23065 m!92633))

(declare-fun m!92635 () Bool)

(assert (=> b!87083 m!92635))

(declare-fun m!92637 () Bool)

(assert (=> b!87083 m!92637))

(assert (=> b!87083 m!92637))

(declare-fun m!92639 () Bool)

(assert (=> b!87083 m!92639))

(assert (=> b!87085 m!92637))

(assert (=> b!87085 m!92637))

(assert (=> b!87085 m!92639))

(assert (=> bm!8187 d!23065))

(assert (=> d!22287 d!22427))

(declare-fun d!23067 () Bool)

(declare-fun lt!41319 () Bool)

(assert (=> d!23067 (= lt!41319 (select (content!90 (toList!736 lt!40931)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56723 () Bool)

(assert (=> d!23067 (= lt!41319 e!56723)))

(declare-fun res!44693 () Bool)

(assert (=> d!23067 (=> (not res!44693) (not e!56723))))

(assert (=> d!23067 (= res!44693 ((_ is Cons!1505) (toList!736 lt!40931)))))

(assert (=> d!23067 (= (contains!749 (toList!736 lt!40931) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41319)))

(declare-fun b!87086 () Bool)

(declare-fun e!56722 () Bool)

(assert (=> b!87086 (= e!56723 e!56722)))

(declare-fun res!44692 () Bool)

(assert (=> b!87086 (=> res!44692 e!56722)))

(assert (=> b!87086 (= res!44692 (= (h!2096 (toList!736 lt!40931)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!87087 () Bool)

(assert (=> b!87087 (= e!56722 (contains!749 (t!5222 (toList!736 lt!40931)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!23067 res!44693) b!87086))

(assert (= (and b!87086 (not res!44692)) b!87087))

(declare-fun m!92641 () Bool)

(assert (=> d!23067 m!92641))

(declare-fun m!92643 () Bool)

(assert (=> d!23067 m!92643))

(declare-fun m!92645 () Bool)

(assert (=> b!87087 m!92645))

(assert (=> b!86187 d!23067))

(declare-fun d!23069 () Bool)

(declare-fun res!44694 () Bool)

(declare-fun e!56724 () Bool)

(assert (=> d!23069 (=> res!44694 e!56724)))

(assert (=> d!23069 (= res!44694 (and ((_ is Cons!1505) lt!40374) (= (_1!1105 (h!2096 lt!40374)) (_1!1105 lt!40197))))))

(assert (=> d!23069 (= (containsKey!144 lt!40374 (_1!1105 lt!40197)) e!56724)))

(declare-fun b!87088 () Bool)

(declare-fun e!56725 () Bool)

(assert (=> b!87088 (= e!56724 e!56725)))

(declare-fun res!44695 () Bool)

(assert (=> b!87088 (=> (not res!44695) (not e!56725))))

(assert (=> b!87088 (= res!44695 (and (or (not ((_ is Cons!1505) lt!40374)) (bvsle (_1!1105 (h!2096 lt!40374)) (_1!1105 lt!40197))) ((_ is Cons!1505) lt!40374) (bvslt (_1!1105 (h!2096 lt!40374)) (_1!1105 lt!40197))))))

(declare-fun b!87089 () Bool)

(assert (=> b!87089 (= e!56725 (containsKey!144 (t!5222 lt!40374) (_1!1105 lt!40197)))))

(assert (= (and d!23069 (not res!44694)) b!87088))

(assert (= (and b!87088 res!44695) b!87089))

(declare-fun m!92647 () Bool)

(assert (=> b!87089 m!92647))

(assert (=> b!85788 d!23069))

(declare-fun b!87093 () Bool)

(declare-fun e!56727 () Option!147)

(assert (=> b!87093 (= e!56727 None!145)))

(declare-fun d!23071 () Bool)

(declare-fun c!14319 () Bool)

(assert (=> d!23071 (= c!14319 (and ((_ is Cons!1505) (toList!736 lt!40714)) (= (_1!1105 (h!2096 (toList!736 lt!40714))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56726 () Option!147)

(assert (=> d!23071 (= (getValueByKey!141 (toList!736 lt!40714) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56726)))

(declare-fun b!87091 () Bool)

(assert (=> b!87091 (= e!56726 e!56727)))

(declare-fun c!14320 () Bool)

(assert (=> b!87091 (= c!14320 (and ((_ is Cons!1505) (toList!736 lt!40714)) (not (= (_1!1105 (h!2096 (toList!736 lt!40714))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!87092 () Bool)

(assert (=> b!87092 (= e!56727 (getValueByKey!141 (t!5222 (toList!736 lt!40714)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87090 () Bool)

(assert (=> b!87090 (= e!56726 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40714)))))))

(assert (= (and d!23071 c!14319) b!87090))

(assert (= (and d!23071 (not c!14319)) b!87091))

(assert (= (and b!87091 c!14320) b!87092))

(assert (= (and b!87091 (not c!14320)) b!87093))

(declare-fun m!92649 () Bool)

(assert (=> b!87092 m!92649))

(assert (=> b!85991 d!23071))

(declare-fun d!23073 () Bool)

(declare-fun res!44696 () Bool)

(declare-fun e!56728 () Bool)

(assert (=> d!23073 (=> res!44696 e!56728)))

(assert (=> d!23073 (= res!44696 (and ((_ is Cons!1505) (toList!736 call!8116)) (= (_1!1105 (h!2096 (toList!736 call!8116))) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))))

(assert (=> d!23073 (= (containsKey!144 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))) e!56728)))

(declare-fun b!87094 () Bool)

(declare-fun e!56729 () Bool)

(assert (=> b!87094 (= e!56728 e!56729)))

(declare-fun res!44697 () Bool)

(assert (=> b!87094 (=> (not res!44697) (not e!56729))))

(assert (=> b!87094 (= res!44697 (and (or (not ((_ is Cons!1505) (toList!736 call!8116))) (bvsle (_1!1105 (h!2096 (toList!736 call!8116))) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))) ((_ is Cons!1505) (toList!736 call!8116)) (bvslt (_1!1105 (h!2096 (toList!736 call!8116))) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))))

(declare-fun b!87095 () Bool)

(assert (=> b!87095 (= e!56729 (containsKey!144 (t!5222 (toList!736 call!8116)) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(assert (= (and d!23073 (not res!44696)) b!87094))

(assert (= (and b!87094 res!44697) b!87095))

(declare-fun m!92651 () Bool)

(assert (=> b!87095 m!92651))

(assert (=> d!22293 d!23073))

(declare-fun d!23075 () Bool)

(declare-fun e!56731 () Bool)

(assert (=> d!23075 e!56731))

(declare-fun res!44698 () Bool)

(assert (=> d!23075 (=> res!44698 e!56731)))

(declare-fun lt!41321 () Bool)

(assert (=> d!23075 (= res!44698 (not lt!41321))))

(declare-fun lt!41323 () Bool)

(assert (=> d!23075 (= lt!41321 lt!41323)))

(declare-fun lt!41320 () Unit!2498)

(declare-fun e!56730 () Unit!2498)

(assert (=> d!23075 (= lt!41320 e!56730)))

(declare-fun c!14321 () Bool)

(assert (=> d!23075 (= c!14321 lt!41323)))

(assert (=> d!23075 (= lt!41323 (containsKey!144 (toList!736 lt!40911) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!23075 (= (contains!747 lt!40911 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41321)))

(declare-fun b!87096 () Bool)

(declare-fun lt!41322 () Unit!2498)

(assert (=> b!87096 (= e!56730 lt!41322)))

(assert (=> b!87096 (= lt!41322 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40911) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!87096 (isDefined!93 (getValueByKey!141 (toList!736 lt!40911) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87097 () Bool)

(declare-fun Unit!2566 () Unit!2498)

(assert (=> b!87097 (= e!56730 Unit!2566)))

(declare-fun b!87098 () Bool)

(assert (=> b!87098 (= e!56731 (isDefined!93 (getValueByKey!141 (toList!736 lt!40911) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!23075 c!14321) b!87096))

(assert (= (and d!23075 (not c!14321)) b!87097))

(assert (= (and d!23075 (not res!44698)) b!87098))

(declare-fun m!92653 () Bool)

(assert (=> d!23075 m!92653))

(declare-fun m!92655 () Bool)

(assert (=> b!87096 m!92655))

(assert (=> b!87096 m!90933))

(assert (=> b!87096 m!90933))

(declare-fun m!92657 () Bool)

(assert (=> b!87096 m!92657))

(assert (=> b!87098 m!90933))

(assert (=> b!87098 m!90933))

(assert (=> b!87098 m!92657))

(assert (=> d!22401 d!23075))

(declare-fun b!87102 () Bool)

(declare-fun e!56733 () Option!147)

(assert (=> b!87102 (= e!56733 None!145)))

(declare-fun d!23077 () Bool)

(declare-fun c!14322 () Bool)

(assert (=> d!23077 (= c!14322 (and ((_ is Cons!1505) lt!40909) (= (_1!1105 (h!2096 lt!40909)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56732 () Option!147)

(assert (=> d!23077 (= (getValueByKey!141 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56732)))

(declare-fun b!87100 () Bool)

(assert (=> b!87100 (= e!56732 e!56733)))

(declare-fun c!14323 () Bool)

(assert (=> b!87100 (= c!14323 (and ((_ is Cons!1505) lt!40909) (not (= (_1!1105 (h!2096 lt!40909)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!87101 () Bool)

(assert (=> b!87101 (= e!56733 (getValueByKey!141 (t!5222 lt!40909) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87099 () Bool)

(assert (=> b!87099 (= e!56732 (Some!146 (_2!1105 (h!2096 lt!40909))))))

(assert (= (and d!23077 c!14322) b!87099))

(assert (= (and d!23077 (not c!14322)) b!87100))

(assert (= (and b!87100 c!14323) b!87101))

(assert (= (and b!87100 (not c!14323)) b!87102))

(declare-fun m!92659 () Bool)

(assert (=> b!87101 m!92659))

(assert (=> d!22401 d!23077))

(declare-fun d!23079 () Bool)

(assert (=> d!23079 (= (getValueByKey!141 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41324 () Unit!2498)

(assert (=> d!23079 (= lt!41324 (choose!511 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56734 () Bool)

(assert (=> d!23079 e!56734))

(declare-fun res!44699 () Bool)

(assert (=> d!23079 (=> (not res!44699) (not e!56734))))

(assert (=> d!23079 (= res!44699 (isStrictlySorted!285 lt!40909))))

(assert (=> d!23079 (= (lemmaContainsTupThenGetReturnValue!58 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41324)))

(declare-fun b!87103 () Bool)

(declare-fun res!44700 () Bool)

(assert (=> b!87103 (=> (not res!44700) (not e!56734))))

(assert (=> b!87103 (= res!44700 (containsKey!144 lt!40909 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87104 () Bool)

(assert (=> b!87104 (= e!56734 (contains!749 lt!40909 (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!23079 res!44699) b!87103))

(assert (= (and b!87103 res!44700) b!87104))

(assert (=> d!23079 m!90927))

(declare-fun m!92661 () Bool)

(assert (=> d!23079 m!92661))

(declare-fun m!92663 () Bool)

(assert (=> d!23079 m!92663))

(declare-fun m!92665 () Bool)

(assert (=> b!87103 m!92665))

(declare-fun m!92667 () Bool)

(assert (=> b!87104 m!92667))

(assert (=> d!22401 d!23079))

(declare-fun b!87105 () Bool)

(declare-fun e!56738 () List!1509)

(declare-fun call!8289 () List!1509)

(assert (=> b!87105 (= e!56738 call!8289)))

(declare-fun bm!8286 () Bool)

(declare-fun c!14327 () Bool)

(declare-fun e!56737 () List!1509)

(declare-fun call!8290 () List!1509)

(assert (=> bm!8286 (= call!8290 ($colon$colon!71 e!56737 (ite c!14327 (h!2096 (toList!736 call!8050)) (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14326 () Bool)

(assert (=> bm!8286 (= c!14326 c!14327)))

(declare-fun b!87106 () Bool)

(declare-fun c!14325 () Bool)

(assert (=> b!87106 (= c!14325 (and ((_ is Cons!1505) (toList!736 call!8050)) (bvsgt (_1!1105 (h!2096 (toList!736 call!8050))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56735 () List!1509)

(assert (=> b!87106 (= e!56738 e!56735)))

(declare-fun b!87107 () Bool)

(declare-fun e!56739 () Bool)

(declare-fun lt!41325 () List!1509)

(assert (=> b!87107 (= e!56739 (contains!749 lt!41325 (tuple2!2189 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!87108 () Bool)

(declare-fun res!44701 () Bool)

(assert (=> b!87108 (=> (not res!44701) (not e!56739))))

(assert (=> b!87108 (= res!44701 (containsKey!144 lt!41325 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8287 () Bool)

(assert (=> bm!8287 (= call!8289 call!8290)))

(declare-fun b!87109 () Bool)

(assert (=> b!87109 (= e!56737 (insertStrictlySorted!61 (t!5222 (toList!736 call!8050)) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87110 () Bool)

(declare-fun c!14324 () Bool)

(assert (=> b!87110 (= e!56737 (ite c!14324 (t!5222 (toList!736 call!8050)) (ite c!14325 (Cons!1505 (h!2096 (toList!736 call!8050)) (t!5222 (toList!736 call!8050))) Nil!1506)))))

(declare-fun b!87111 () Bool)

(declare-fun e!56736 () List!1509)

(assert (=> b!87111 (= e!56736 call!8290)))

(declare-fun bm!8288 () Bool)

(declare-fun call!8291 () List!1509)

(assert (=> bm!8288 (= call!8291 call!8289)))

(declare-fun d!23081 () Bool)

(assert (=> d!23081 e!56739))

(declare-fun res!44702 () Bool)

(assert (=> d!23081 (=> (not res!44702) (not e!56739))))

(assert (=> d!23081 (= res!44702 (isStrictlySorted!285 lt!41325))))

(assert (=> d!23081 (= lt!41325 e!56736)))

(assert (=> d!23081 (= c!14327 (and ((_ is Cons!1505) (toList!736 call!8050)) (bvslt (_1!1105 (h!2096 (toList!736 call!8050))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!23081 (isStrictlySorted!285 (toList!736 call!8050))))

(assert (=> d!23081 (= (insertStrictlySorted!61 (toList!736 call!8050) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41325)))

(declare-fun b!87112 () Bool)

(assert (=> b!87112 (= e!56735 call!8291)))

(declare-fun b!87113 () Bool)

(assert (=> b!87113 (= e!56736 e!56738)))

(assert (=> b!87113 (= c!14324 (and ((_ is Cons!1505) (toList!736 call!8050)) (= (_1!1105 (h!2096 (toList!736 call!8050))) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!87114 () Bool)

(assert (=> b!87114 (= e!56735 call!8291)))

(assert (= (and d!23081 c!14327) b!87111))

(assert (= (and d!23081 (not c!14327)) b!87113))

(assert (= (and b!87113 c!14324) b!87105))

(assert (= (and b!87113 (not c!14324)) b!87106))

(assert (= (and b!87106 c!14325) b!87112))

(assert (= (and b!87106 (not c!14325)) b!87114))

(assert (= (or b!87112 b!87114) bm!8288))

(assert (= (or b!87105 bm!8288) bm!8287))

(assert (= (or b!87111 bm!8287) bm!8286))

(assert (= (and bm!8286 c!14326) b!87109))

(assert (= (and bm!8286 (not c!14326)) b!87110))

(assert (= (and d!23081 res!44702) b!87108))

(assert (= (and b!87108 res!44701) b!87107))

(declare-fun m!92669 () Bool)

(assert (=> b!87107 m!92669))

(declare-fun m!92671 () Bool)

(assert (=> b!87108 m!92671))

(declare-fun m!92673 () Bool)

(assert (=> bm!8286 m!92673))

(declare-fun m!92675 () Bool)

(assert (=> d!23081 m!92675))

(declare-fun m!92677 () Bool)

(assert (=> d!23081 m!92677))

(declare-fun m!92679 () Bool)

(assert (=> b!87109 m!92679))

(assert (=> d!22401 d!23081))

(declare-fun d!23083 () Bool)

(declare-fun res!44703 () Bool)

(declare-fun e!56740 () Bool)

(assert (=> d!23083 (=> res!44703 e!56740)))

(assert (=> d!23083 (= res!44703 (and ((_ is Cons!1505) (toList!736 lt!40349)) (= (_1!1105 (h!2096 (toList!736 lt!40349))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!23083 (= (containsKey!144 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56740)))

(declare-fun b!87115 () Bool)

(declare-fun e!56741 () Bool)

(assert (=> b!87115 (= e!56740 e!56741)))

(declare-fun res!44704 () Bool)

(assert (=> b!87115 (=> (not res!44704) (not e!56741))))

(assert (=> b!87115 (= res!44704 (and (or (not ((_ is Cons!1505) (toList!736 lt!40349))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40349))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1505) (toList!736 lt!40349)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40349))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!87116 () Bool)

(assert (=> b!87116 (= e!56741 (containsKey!144 (t!5222 (toList!736 lt!40349)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!23083 (not res!44703)) b!87115))

(assert (= (and b!87115 res!44704) b!87116))

(assert (=> b!87116 m!89759))

(declare-fun m!92681 () Bool)

(assert (=> b!87116 m!92681))

(assert (=> d!22351 d!23083))

(declare-fun b!87120 () Bool)

(declare-fun e!56743 () Option!147)

(assert (=> b!87120 (= e!56743 None!145)))

(declare-fun d!23085 () Bool)

(declare-fun c!14328 () Bool)

(assert (=> d!23085 (= c!14328 (and ((_ is Cons!1505) (t!5222 lt!40362)) (= (_1!1105 (h!2096 (t!5222 lt!40362))) (_1!1105 lt!40192))))))

(declare-fun e!56742 () Option!147)

(assert (=> d!23085 (= (getValueByKey!141 (t!5222 lt!40362) (_1!1105 lt!40192)) e!56742)))

(declare-fun b!87118 () Bool)

(assert (=> b!87118 (= e!56742 e!56743)))

(declare-fun c!14329 () Bool)

(assert (=> b!87118 (= c!14329 (and ((_ is Cons!1505) (t!5222 lt!40362)) (not (= (_1!1105 (h!2096 (t!5222 lt!40362))) (_1!1105 lt!40192)))))))

(declare-fun b!87119 () Bool)

(assert (=> b!87119 (= e!56743 (getValueByKey!141 (t!5222 (t!5222 lt!40362)) (_1!1105 lt!40192)))))

(declare-fun b!87117 () Bool)

(assert (=> b!87117 (= e!56742 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40362)))))))

(assert (= (and d!23085 c!14328) b!87117))

(assert (= (and d!23085 (not c!14328)) b!87118))

(assert (= (and b!87118 c!14329) b!87119))

(assert (= (and b!87118 (not c!14329)) b!87120))

(declare-fun m!92683 () Bool)

(assert (=> b!87119 m!92683))

(assert (=> b!86035 d!23085))

(assert (=> d!22233 d!22231))

(declare-fun d!23087 () Bool)

(assert (=> d!23087 (= (getValueByKey!141 lt!40370 (_1!1105 lt!40182)) (Some!146 (_2!1105 lt!40182)))))

(assert (=> d!23087 true))

(declare-fun _$22!423 () Unit!2498)

(assert (=> d!23087 (= (choose!511 lt!40370 (_1!1105 lt!40182) (_2!1105 lt!40182)) _$22!423)))

(declare-fun bs!3700 () Bool)

(assert (= bs!3700 d!23087))

(assert (=> bs!3700 m!89869))

(assert (=> d!22233 d!23087))

(declare-fun d!23089 () Bool)

(declare-fun res!44705 () Bool)

(declare-fun e!56744 () Bool)

(assert (=> d!23089 (=> res!44705 e!56744)))

(assert (=> d!23089 (= res!44705 (or ((_ is Nil!1506) lt!40370) ((_ is Nil!1506) (t!5222 lt!40370))))))

(assert (=> d!23089 (= (isStrictlySorted!285 lt!40370) e!56744)))

(declare-fun b!87121 () Bool)

(declare-fun e!56745 () Bool)

(assert (=> b!87121 (= e!56744 e!56745)))

(declare-fun res!44706 () Bool)

(assert (=> b!87121 (=> (not res!44706) (not e!56745))))

(assert (=> b!87121 (= res!44706 (bvslt (_1!1105 (h!2096 lt!40370)) (_1!1105 (h!2096 (t!5222 lt!40370)))))))

(declare-fun b!87122 () Bool)

(assert (=> b!87122 (= e!56745 (isStrictlySorted!285 (t!5222 lt!40370)))))

(assert (= (and d!23089 (not res!44705)) b!87121))

(assert (= (and b!87121 res!44706) b!87122))

(declare-fun m!92685 () Bool)

(assert (=> b!87122 m!92685))

(assert (=> d!22233 d!23089))

(declare-fun b!87123 () Bool)

(declare-fun e!56747 () (_ BitVec 32))

(assert (=> b!87123 (= e!56747 #b00000000000000000000000000000000)))

(declare-fun bm!8289 () Bool)

(declare-fun call!8292 () (_ BitVec 32))

(assert (=> bm!8289 (= call!8292 (arrayCountValidKeys!0 (_keys!4009 (_2!1104 lt!40512)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(declare-fun d!23091 () Bool)

(declare-fun lt!41326 () (_ BitVec 32))

(assert (=> d!23091 (and (bvsge lt!41326 #b00000000000000000000000000000000) (bvsle lt!41326 (bvsub (size!2154 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(assert (=> d!23091 (= lt!41326 e!56747)))

(declare-fun c!14331 () Bool)

(assert (=> d!23091 (= c!14331 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(assert (=> d!23091 (and (bvsle #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2154 (_keys!4009 (_2!1104 lt!40512))) (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(assert (=> d!23091 (= (arrayCountValidKeys!0 (_keys!4009 (_2!1104 lt!40512)) #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))) lt!41326)))

(declare-fun b!87124 () Bool)

(declare-fun e!56746 () (_ BitVec 32))

(assert (=> b!87124 (= e!56746 (bvadd #b00000000000000000000000000000001 call!8292))))

(declare-fun b!87125 () Bool)

(assert (=> b!87125 (= e!56747 e!56746)))

(declare-fun c!14330 () Bool)

(assert (=> b!87125 (= c!14330 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun b!87126 () Bool)

(assert (=> b!87126 (= e!56746 call!8292)))

(assert (= (and d!23091 c!14331) b!87123))

(assert (= (and d!23091 (not c!14331)) b!87125))

(assert (= (and b!87125 c!14330) b!87124))

(assert (= (and b!87125 (not c!14330)) b!87126))

(assert (= (or b!87124 b!87126) bm!8289))

(declare-fun m!92687 () Bool)

(assert (=> bm!8289 m!92687))

(assert (=> b!87125 m!91551))

(assert (=> b!87125 m!91551))

(assert (=> b!87125 m!91557))

(assert (=> b!85988 d!23091))

(declare-fun b!87130 () Bool)

(declare-fun e!56749 () Option!147)

(assert (=> b!87130 (= e!56749 None!145)))

(declare-fun d!23093 () Bool)

(declare-fun c!14332 () Bool)

(assert (=> d!23093 (= c!14332 (and ((_ is Cons!1505) (toList!736 lt!40585)) (= (_1!1105 (h!2096 (toList!736 lt!40585))) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56748 () Option!147)

(assert (=> d!23093 (= (getValueByKey!141 (toList!736 lt!40585) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56748)))

(declare-fun b!87128 () Bool)

(assert (=> b!87128 (= e!56748 e!56749)))

(declare-fun c!14333 () Bool)

(assert (=> b!87128 (= c!14333 (and ((_ is Cons!1505) (toList!736 lt!40585)) (not (= (_1!1105 (h!2096 (toList!736 lt!40585))) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!87129 () Bool)

(assert (=> b!87129 (= e!56749 (getValueByKey!141 (t!5222 (toList!736 lt!40585)) (_1!1105 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87127 () Bool)

(assert (=> b!87127 (= e!56748 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40585)))))))

(assert (= (and d!23093 c!14332) b!87127))

(assert (= (and d!23093 (not c!14332)) b!87128))

(assert (= (and b!87128 c!14333) b!87129))

(assert (= (and b!87128 (not c!14333)) b!87130))

(declare-fun m!92689 () Bool)

(assert (=> b!87129 m!92689))

(assert (=> b!85699 d!23093))

(declare-fun d!23095 () Bool)

(assert (=> d!23095 (= ($colon$colon!71 e!55967 (ite c!13964 (h!2096 (toList!736 (+!107 lt!40193 lt!40192))) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))) (Cons!1505 (ite c!13964 (h!2096 (toList!736 (+!107 lt!40193 lt!40192))) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) e!55967))))

(assert (=> bm!8147 d!23095))

(declare-fun b!87131 () Bool)

(declare-fun e!56753 () Bool)

(declare-fun e!56752 () Bool)

(assert (=> b!87131 (= e!56753 e!56752)))

(declare-fun c!14334 () Bool)

(assert (=> b!87131 (= c!14334 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87133 () Bool)

(declare-fun call!8293 () Bool)

(assert (=> b!87133 (= e!56752 call!8293)))

(declare-fun bm!8290 () Bool)

(assert (=> bm!8290 (= call!8293 (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14334 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!13998 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505))) (ite c!13998 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)))))))

(declare-fun e!56751 () Bool)

(declare-fun b!87134 () Bool)

(assert (=> b!87134 (= e!56751 (contains!748 (ite c!13998 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87135 () Bool)

(declare-fun e!56750 () Bool)

(assert (=> b!87135 (= e!56750 e!56753)))

(declare-fun res!44707 () Bool)

(assert (=> b!87135 (=> (not res!44707) (not e!56753))))

(assert (=> b!87135 (= res!44707 (not e!56751))))

(declare-fun res!44708 () Bool)

(assert (=> b!87135 (=> (not res!44708) (not e!56751))))

(assert (=> b!87135 (= res!44708 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!23097 () Bool)

(declare-fun res!44709 () Bool)

(assert (=> d!23097 (=> res!44709 e!56750)))

(assert (=> d!23097 (= res!44709 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!23097 (= (arrayNoDuplicates!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13998 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505)) (ite c!13825 (Cons!1504 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) Nil!1505) Nil!1505))) e!56750)))

(declare-fun b!87132 () Bool)

(assert (=> b!87132 (= e!56752 call!8293)))

(assert (= (and d!23097 (not res!44709)) b!87135))

(assert (= (and b!87135 res!44708) b!87134))

(assert (= (and b!87135 res!44707) b!87131))

(assert (= (and b!87131 c!14334) b!87133))

(assert (= (and b!87131 (not c!14334)) b!87132))

(assert (= (or b!87133 b!87132) bm!8290))

(declare-fun m!92691 () Bool)

(assert (=> b!87131 m!92691))

(assert (=> b!87131 m!92691))

(declare-fun m!92693 () Bool)

(assert (=> b!87131 m!92693))

(assert (=> bm!8290 m!92691))

(declare-fun m!92695 () Bool)

(assert (=> bm!8290 m!92695))

(assert (=> b!87134 m!92691))

(assert (=> b!87134 m!92691))

(declare-fun m!92697 () Bool)

(assert (=> b!87134 m!92697))

(assert (=> b!87135 m!92691))

(assert (=> b!87135 m!92691))

(assert (=> b!87135 m!92693))

(assert (=> bm!8163 d!23097))

(assert (=> b!85915 d!22877))

(assert (=> b!85915 d!22879))

(declare-fun b!87139 () Bool)

(declare-fun e!56755 () Option!147)

(assert (=> b!87139 (= e!56755 None!145)))

(declare-fun d!23099 () Bool)

(declare-fun c!14335 () Bool)

(assert (=> d!23099 (= c!14335 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40364))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40364)))) (_1!1105 lt!40192))))))

(declare-fun e!56754 () Option!147)

(assert (=> d!23099 (= (getValueByKey!141 (t!5222 (toList!736 lt!40364)) (_1!1105 lt!40192)) e!56754)))

(declare-fun b!87137 () Bool)

(assert (=> b!87137 (= e!56754 e!56755)))

(declare-fun c!14336 () Bool)

(assert (=> b!87137 (= c!14336 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40364))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40364)))) (_1!1105 lt!40192)))))))

(declare-fun b!87138 () Bool)

(assert (=> b!87138 (= e!56755 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40364))) (_1!1105 lt!40192)))))

(declare-fun b!87136 () Bool)

(assert (=> b!87136 (= e!56754 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40364))))))))

(assert (= (and d!23099 c!14335) b!87136))

(assert (= (and d!23099 (not c!14335)) b!87137))

(assert (= (and b!87137 c!14336) b!87138))

(assert (= (and b!87137 (not c!14336)) b!87139))

(declare-fun m!92699 () Bool)

(assert (=> b!87138 m!92699))

(assert (=> b!85848 d!23099))

(declare-fun d!23101 () Bool)

(declare-fun e!56757 () Bool)

(assert (=> d!23101 e!56757))

(declare-fun res!44710 () Bool)

(assert (=> d!23101 (=> res!44710 e!56757)))

(declare-fun lt!41328 () Bool)

(assert (=> d!23101 (= res!44710 (not lt!41328))))

(declare-fun lt!41330 () Bool)

(assert (=> d!23101 (= lt!41328 lt!41330)))

(declare-fun lt!41327 () Unit!2498)

(declare-fun e!56756 () Unit!2498)

(assert (=> d!23101 (= lt!41327 e!56756)))

(declare-fun c!14337 () Bool)

(assert (=> d!23101 (= c!14337 lt!41330)))

(assert (=> d!23101 (= lt!41330 (containsKey!144 (toList!736 lt!40902) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!23101 (= (contains!747 lt!40902 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) lt!41328)))

(declare-fun b!87140 () Bool)

(declare-fun lt!41329 () Unit!2498)

(assert (=> b!87140 (= e!56756 lt!41329)))

(assert (=> b!87140 (= lt!41329 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40902) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87140 (isDefined!93 (getValueByKey!141 (toList!736 lt!40902) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87141 () Bool)

(declare-fun Unit!2567 () Unit!2498)

(assert (=> b!87141 (= e!56756 Unit!2567)))

(declare-fun b!87142 () Bool)

(assert (=> b!87142 (= e!56757 (isDefined!93 (getValueByKey!141 (toList!736 lt!40902) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!23101 c!14337) b!87140))

(assert (= (and d!23101 (not c!14337)) b!87141))

(assert (= (and d!23101 (not res!44710)) b!87142))

(assert (=> d!23101 m!90065))

(declare-fun m!92701 () Bool)

(assert (=> d!23101 m!92701))

(assert (=> b!87140 m!90065))

(declare-fun m!92703 () Bool)

(assert (=> b!87140 m!92703))

(assert (=> b!87140 m!90065))

(assert (=> b!87140 m!91981))

(assert (=> b!87140 m!91981))

(declare-fun m!92705 () Bool)

(assert (=> b!87140 m!92705))

(assert (=> b!87142 m!90065))

(assert (=> b!87142 m!91981))

(assert (=> b!87142 m!91981))

(assert (=> b!87142 m!92705))

(assert (=> b!86152 d!23101))

(declare-fun d!23103 () Bool)

(declare-fun lt!41331 () Bool)

(assert (=> d!23103 (= lt!41331 (select (content!90 (toList!736 lt!40911)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56759 () Bool)

(assert (=> d!23103 (= lt!41331 e!56759)))

(declare-fun res!44712 () Bool)

(assert (=> d!23103 (=> (not res!44712) (not e!56759))))

(assert (=> d!23103 (= res!44712 ((_ is Cons!1505) (toList!736 lt!40911)))))

(assert (=> d!23103 (= (contains!749 (toList!736 lt!40911) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41331)))

(declare-fun b!87143 () Bool)

(declare-fun e!56758 () Bool)

(assert (=> b!87143 (= e!56759 e!56758)))

(declare-fun res!44711 () Bool)

(assert (=> b!87143 (=> res!44711 e!56758)))

(assert (=> b!87143 (= res!44711 (= (h!2096 (toList!736 lt!40911)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!87144 () Bool)

(assert (=> b!87144 (= e!56758 (contains!749 (t!5222 (toList!736 lt!40911)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!23103 res!44712) b!87143))

(assert (= (and b!87143 (not res!44711)) b!87144))

(declare-fun m!92707 () Bool)

(assert (=> d!23103 m!92707))

(declare-fun m!92709 () Bool)

(assert (=> d!23103 m!92709))

(declare-fun m!92711 () Bool)

(assert (=> b!87144 m!92711))

(assert (=> b!86176 d!23103))

(declare-fun d!23105 () Bool)

(declare-fun e!56761 () Bool)

(assert (=> d!23105 e!56761))

(declare-fun res!44713 () Bool)

(assert (=> d!23105 (=> res!44713 e!56761)))

(declare-fun lt!41333 () Bool)

(assert (=> d!23105 (= res!44713 (not lt!41333))))

(declare-fun lt!41335 () Bool)

(assert (=> d!23105 (= lt!41333 lt!41335)))

(declare-fun lt!41332 () Unit!2498)

(declare-fun e!56760 () Unit!2498)

(assert (=> d!23105 (= lt!41332 e!56760)))

(declare-fun c!14338 () Bool)

(assert (=> d!23105 (= c!14338 lt!41335)))

(assert (=> d!23105 (= lt!41335 (containsKey!144 (toList!736 lt!40543) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23105 (= (contains!747 lt!40543 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41333)))

(declare-fun b!87145 () Bool)

(declare-fun lt!41334 () Unit!2498)

(assert (=> b!87145 (= e!56760 lt!41334)))

(assert (=> b!87145 (= lt!41334 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40543) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87145 (isDefined!93 (getValueByKey!141 (toList!736 lt!40543) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87146 () Bool)

(declare-fun Unit!2568 () Unit!2498)

(assert (=> b!87146 (= e!56760 Unit!2568)))

(declare-fun b!87147 () Bool)

(assert (=> b!87147 (= e!56761 (isDefined!93 (getValueByKey!141 (toList!736 lt!40543) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23105 c!14338) b!87145))

(assert (= (and d!23105 (not c!14338)) b!87146))

(assert (= (and d!23105 (not res!44713)) b!87147))

(declare-fun m!92713 () Bool)

(assert (=> d!23105 m!92713))

(declare-fun m!92715 () Bool)

(assert (=> b!87145 m!92715))

(declare-fun m!92717 () Bool)

(assert (=> b!87145 m!92717))

(assert (=> b!87145 m!92717))

(declare-fun m!92719 () Bool)

(assert (=> b!87145 m!92719))

(assert (=> b!87147 m!92717))

(assert (=> b!87147 m!92717))

(assert (=> b!87147 m!92719))

(assert (=> b!85639 d!23105))

(declare-fun d!23107 () Bool)

(declare-fun res!44714 () Bool)

(declare-fun e!56762 () Bool)

(assert (=> d!23107 (=> res!44714 e!56762)))

(assert (=> d!23107 (= res!44714 (and ((_ is Cons!1505) (toList!736 lt!40368)) (= (_1!1105 (h!2096 (toList!736 lt!40368))) (_1!1105 lt!40182))))))

(assert (=> d!23107 (= (containsKey!144 (toList!736 lt!40368) (_1!1105 lt!40182)) e!56762)))

(declare-fun b!87148 () Bool)

(declare-fun e!56763 () Bool)

(assert (=> b!87148 (= e!56762 e!56763)))

(declare-fun res!44715 () Bool)

(assert (=> b!87148 (=> (not res!44715) (not e!56763))))

(assert (=> b!87148 (= res!44715 (and (or (not ((_ is Cons!1505) (toList!736 lt!40368))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40368))) (_1!1105 lt!40182))) ((_ is Cons!1505) (toList!736 lt!40368)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40368))) (_1!1105 lt!40182))))))

(declare-fun b!87149 () Bool)

(assert (=> b!87149 (= e!56763 (containsKey!144 (t!5222 (toList!736 lt!40368)) (_1!1105 lt!40182)))))

(assert (= (and d!23107 (not res!44714)) b!87148))

(assert (= (and b!87148 res!44715) b!87149))

(declare-fun m!92721 () Bool)

(assert (=> b!87149 m!92721))

(assert (=> d!22243 d!23107))

(assert (=> b!85912 d!22419))

(declare-fun d!23109 () Bool)

(declare-fun e!56765 () Bool)

(assert (=> d!23109 e!56765))

(declare-fun res!44716 () Bool)

(assert (=> d!23109 (=> res!44716 e!56765)))

(declare-fun lt!41337 () Bool)

(assert (=> d!23109 (= res!44716 (not lt!41337))))

(declare-fun lt!41339 () Bool)

(assert (=> d!23109 (= lt!41337 lt!41339)))

(declare-fun lt!41336 () Unit!2498)

(declare-fun e!56764 () Unit!2498)

(assert (=> d!23109 (= lt!41336 e!56764)))

(declare-fun c!14339 () Bool)

(assert (=> d!23109 (= c!14339 lt!41339)))

(assert (=> d!23109 (= lt!41339 (containsKey!144 (toList!736 lt!40902) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23109 (= (contains!747 lt!40902 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41337)))

(declare-fun b!87150 () Bool)

(declare-fun lt!41338 () Unit!2498)

(assert (=> b!87150 (= e!56764 lt!41338)))

(assert (=> b!87150 (= lt!41338 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40902) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87150 (isDefined!93 (getValueByKey!141 (toList!736 lt!40902) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87151 () Bool)

(declare-fun Unit!2569 () Unit!2498)

(assert (=> b!87151 (= e!56764 Unit!2569)))

(declare-fun b!87152 () Bool)

(assert (=> b!87152 (= e!56765 (isDefined!93 (getValueByKey!141 (toList!736 lt!40902) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23109 c!14339) b!87150))

(assert (= (and d!23109 (not c!14339)) b!87151))

(assert (= (and d!23109 (not res!44716)) b!87152))

(declare-fun m!92723 () Bool)

(assert (=> d!23109 m!92723))

(declare-fun m!92725 () Bool)

(assert (=> b!87150 m!92725))

(assert (=> b!87150 m!91377))

(assert (=> b!87150 m!91377))

(declare-fun m!92727 () Bool)

(assert (=> b!87150 m!92727))

(assert (=> b!87152 m!91377))

(assert (=> b!87152 m!91377))

(assert (=> b!87152 m!92727))

(assert (=> bm!8195 d!23109))

(declare-fun d!23111 () Bool)

(assert (=> d!23111 (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41340 () Unit!2498)

(assert (=> d!23111 (= lt!41340 (choose!517 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56766 () Bool)

(assert (=> d!23111 e!56766))

(declare-fun res!44717 () Bool)

(assert (=> d!23111 (=> (not res!44717) (not e!56766))))

(assert (=> d!23111 (= res!44717 (isStrictlySorted!285 (toList!736 lt!40349)))))

(assert (=> d!23111 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41340)))

(declare-fun b!87153 () Bool)

(assert (=> b!87153 (= e!56766 (containsKey!144 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!23111 res!44717) b!87153))

(assert (=> d!23111 m!89759))

(assert (=> d!23111 m!90399))

(assert (=> d!23111 m!90399))

(assert (=> d!23111 m!90637))

(assert (=> d!23111 m!89759))

(declare-fun m!92729 () Bool)

(assert (=> d!23111 m!92729))

(assert (=> d!23111 m!92277))

(assert (=> b!87153 m!89759))

(assert (=> b!87153 m!90633))

(assert (=> b!85999 d!23111))

(declare-fun d!23113 () Bool)

(assert (=> d!23113 (= (isDefined!93 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!343 (getValueByKey!141 (toList!736 lt!40349) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3701 () Bool)

(assert (= bs!3701 d!23113))

(assert (=> bs!3701 m!90399))

(declare-fun m!92731 () Bool)

(assert (=> bs!3701 m!92731))

(assert (=> b!85999 d!23113))

(assert (=> b!85999 d!22561))

(declare-fun d!23115 () Bool)

(declare-fun res!44718 () Bool)

(declare-fun e!56767 () Bool)

(assert (=> d!23115 (=> res!44718 e!56767)))

(assert (=> d!23115 (= res!44718 (and ((_ is Cons!1505) lt!40612) (= (_1!1105 (h!2096 lt!40612)) (_1!1105 lt!40182))))))

(assert (=> d!23115 (= (containsKey!144 lt!40612 (_1!1105 lt!40182)) e!56767)))

(declare-fun b!87154 () Bool)

(declare-fun e!56768 () Bool)

(assert (=> b!87154 (= e!56767 e!56768)))

(declare-fun res!44719 () Bool)

(assert (=> b!87154 (=> (not res!44719) (not e!56768))))

(assert (=> b!87154 (= res!44719 (and (or (not ((_ is Cons!1505) lt!40612)) (bvsle (_1!1105 (h!2096 lt!40612)) (_1!1105 lt!40182))) ((_ is Cons!1505) lt!40612) (bvslt (_1!1105 (h!2096 lt!40612)) (_1!1105 lt!40182))))))

(declare-fun b!87155 () Bool)

(assert (=> b!87155 (= e!56768 (containsKey!144 (t!5222 lt!40612) (_1!1105 lt!40182)))))

(assert (= (and d!23115 (not res!44718)) b!87154))

(assert (= (and b!87154 res!44719) b!87155))

(declare-fun m!92733 () Bool)

(assert (=> b!87155 m!92733))

(assert (=> b!85768 d!23115))

(declare-fun lt!41341 () Bool)

(declare-fun d!23117 () Bool)

(assert (=> d!23117 (= lt!41341 (select (content!90 (toList!736 lt!40574)) (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56770 () Bool)

(assert (=> d!23117 (= lt!41341 e!56770)))

(declare-fun res!44721 () Bool)

(assert (=> d!23117 (=> (not res!44721) (not e!56770))))

(assert (=> d!23117 (= res!44721 ((_ is Cons!1505) (toList!736 lt!40574)))))

(assert (=> d!23117 (= (contains!749 (toList!736 lt!40574) (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41341)))

(declare-fun b!87156 () Bool)

(declare-fun e!56769 () Bool)

(assert (=> b!87156 (= e!56770 e!56769)))

(declare-fun res!44720 () Bool)

(assert (=> b!87156 (=> res!44720 e!56769)))

(assert (=> b!87156 (= res!44720 (= (h!2096 (toList!736 lt!40574)) (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!87157 () Bool)

(assert (=> b!87157 (= e!56769 (contains!749 (t!5222 (toList!736 lt!40574)) (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!23117 res!44721) b!87156))

(assert (= (and b!87156 (not res!44720)) b!87157))

(declare-fun m!92735 () Bool)

(assert (=> d!23117 m!92735))

(declare-fun m!92737 () Bool)

(assert (=> d!23117 m!92737))

(declare-fun m!92739 () Bool)

(assert (=> b!87157 m!92739))

(assert (=> b!85692 d!23117))

(declare-fun d!23119 () Bool)

(declare-fun c!14340 () Bool)

(assert (=> d!23119 (= c!14340 ((_ is Nil!1506) (toList!736 lt!40372)))))

(declare-fun e!56771 () (InoxSet tuple2!2188))

(assert (=> d!23119 (= (content!90 (toList!736 lt!40372)) e!56771)))

(declare-fun b!87158 () Bool)

(assert (=> b!87158 (= e!56771 ((as const (Array tuple2!2188 Bool)) false))))

(declare-fun b!87159 () Bool)

(assert (=> b!87159 (= e!56771 ((_ map or) (store ((as const (Array tuple2!2188 Bool)) false) (h!2096 (toList!736 lt!40372)) true) (content!90 (t!5222 (toList!736 lt!40372)))))))

(assert (= (and d!23119 c!14340) b!87158))

(assert (= (and d!23119 (not c!14340)) b!87159))

(declare-fun m!92741 () Bool)

(assert (=> b!87159 m!92741))

(assert (=> b!87159 m!91799))

(assert (=> d!22309 d!23119))

(declare-fun d!23121 () Bool)

(assert (=> d!23121 (isDefined!93 (getValueByKey!141 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(declare-fun lt!41342 () Unit!2498)

(assert (=> d!23121 (= lt!41342 (choose!517 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(declare-fun e!56772 () Bool)

(assert (=> d!23121 e!56772))

(declare-fun res!44722 () Bool)

(assert (=> d!23121 (=> (not res!44722) (not e!56772))))

(assert (=> d!23121 (= res!44722 (isStrictlySorted!285 (toList!736 call!8116)))))

(assert (=> d!23121 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))) lt!41342)))

(declare-fun b!87160 () Bool)

(assert (=> b!87160 (= e!56772 (containsKey!144 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(assert (= (and d!23121 res!44722) b!87160))

(assert (=> d!23121 m!90431))

(assert (=> d!23121 m!90431))

(assert (=> d!23121 m!90433))

(declare-fun m!92743 () Bool)

(assert (=> d!23121 m!92743))

(declare-fun m!92745 () Bool)

(assert (=> d!23121 m!92745))

(assert (=> b!87160 m!90427))

(assert (=> b!85903 d!23121))

(declare-fun d!23123 () Bool)

(assert (=> d!23123 (= (isDefined!93 (getValueByKey!141 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))) (not (isEmpty!343 (getValueByKey!141 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))))

(declare-fun bs!3702 () Bool)

(assert (= bs!3702 d!23123))

(assert (=> bs!3702 m!90431))

(declare-fun m!92747 () Bool)

(assert (=> bs!3702 m!92747))

(assert (=> b!85903 d!23123))

(declare-fun b!87164 () Bool)

(declare-fun e!56774 () Option!147)

(assert (=> b!87164 (= e!56774 None!145)))

(declare-fun c!14341 () Bool)

(declare-fun d!23125 () Bool)

(assert (=> d!23125 (= c!14341 (and ((_ is Cons!1505) (toList!736 call!8116)) (= (_1!1105 (h!2096 (toList!736 call!8116))) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))))

(declare-fun e!56773 () Option!147)

(assert (=> d!23125 (= (getValueByKey!141 (toList!736 call!8116) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))) e!56773)))

(declare-fun b!87162 () Bool)

(assert (=> b!87162 (= e!56773 e!56774)))

(declare-fun c!14342 () Bool)

(assert (=> b!87162 (= c!14342 (and ((_ is Cons!1505) (toList!736 call!8116)) (not (= (_1!1105 (h!2096 (toList!736 call!8116))) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))))

(declare-fun b!87163 () Bool)

(assert (=> b!87163 (= e!56774 (getValueByKey!141 (t!5222 (toList!736 call!8116)) (ite c!13893 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(declare-fun b!87161 () Bool)

(assert (=> b!87161 (= e!56773 (Some!146 (_2!1105 (h!2096 (toList!736 call!8116)))))))

(assert (= (and d!23125 c!14341) b!87161))

(assert (= (and d!23125 (not c!14341)) b!87162))

(assert (= (and b!87162 c!14342) b!87163))

(assert (= (and b!87162 (not c!14342)) b!87164))

(declare-fun m!92749 () Bool)

(assert (=> b!87163 m!92749))

(assert (=> b!85903 d!23125))

(assert (=> b!86179 d!22905))

(assert (=> b!86179 d!22907))

(declare-fun d!23127 () Bool)

(declare-fun res!44723 () Bool)

(declare-fun e!56775 () Bool)

(assert (=> d!23127 (=> res!44723 e!56775)))

(assert (=> d!23127 (= res!44723 (or ((_ is Nil!1506) lt!40646) ((_ is Nil!1506) (t!5222 lt!40646))))))

(assert (=> d!23127 (= (isStrictlySorted!285 lt!40646) e!56775)))

(declare-fun b!87165 () Bool)

(declare-fun e!56776 () Bool)

(assert (=> b!87165 (= e!56775 e!56776)))

(declare-fun res!44724 () Bool)

(assert (=> b!87165 (=> (not res!44724) (not e!56776))))

(assert (=> b!87165 (= res!44724 (bvslt (_1!1105 (h!2096 lt!40646)) (_1!1105 (h!2096 (t!5222 lt!40646)))))))

(declare-fun b!87166 () Bool)

(assert (=> b!87166 (= e!56776 (isStrictlySorted!285 (t!5222 lt!40646)))))

(assert (= (and d!23127 (not res!44723)) b!87165))

(assert (= (and b!87165 res!44724) b!87166))

(declare-fun m!92751 () Bool)

(assert (=> b!87166 m!92751))

(assert (=> d!22273 d!23127))

(declare-fun d!23129 () Bool)

(declare-fun res!44725 () Bool)

(declare-fun e!56777 () Bool)

(assert (=> d!23129 (=> res!44725 e!56777)))

(assert (=> d!23129 (= res!44725 (or ((_ is Nil!1506) (toList!736 (+!107 lt!40193 lt!40192))) ((_ is Nil!1506) (t!5222 (toList!736 (+!107 lt!40193 lt!40192))))))))

(assert (=> d!23129 (= (isStrictlySorted!285 (toList!736 (+!107 lt!40193 lt!40192))) e!56777)))

(declare-fun b!87167 () Bool)

(declare-fun e!56778 () Bool)

(assert (=> b!87167 (= e!56777 e!56778)))

(declare-fun res!44726 () Bool)

(assert (=> b!87167 (=> (not res!44726) (not e!56778))))

(assert (=> b!87167 (= res!44726 (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40193 lt!40192)))) (_1!1105 (h!2096 (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))))))))

(declare-fun b!87168 () Bool)

(assert (=> b!87168 (= e!56778 (isStrictlySorted!285 (t!5222 (toList!736 (+!107 lt!40193 lt!40192)))))))

(assert (= (and d!23129 (not res!44725)) b!87167))

(assert (= (and b!87167 res!44726) b!87168))

(assert (=> b!87168 m!91393))

(assert (=> d!22273 d!23129))

(declare-fun d!23131 () Bool)

(declare-fun res!44727 () Bool)

(declare-fun e!56779 () Bool)

(assert (=> d!23131 (=> res!44727 e!56779)))

(assert (=> d!23131 (= res!44727 (and ((_ is Cons!1505) (toList!736 lt!40349)) (= (_1!1105 (h!2096 (toList!736 lt!40349))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23131 (= (containsKey!144 (toList!736 lt!40349) #b1000000000000000000000000000000000000000000000000000000000000000) e!56779)))

(declare-fun b!87169 () Bool)

(declare-fun e!56780 () Bool)

(assert (=> b!87169 (= e!56779 e!56780)))

(declare-fun res!44728 () Bool)

(assert (=> b!87169 (=> (not res!44728) (not e!56780))))

(assert (=> b!87169 (= res!44728 (and (or (not ((_ is Cons!1505) (toList!736 lt!40349))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40349))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1505) (toList!736 lt!40349)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40349))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87170 () Bool)

(assert (=> b!87170 (= e!56780 (containsKey!144 (t!5222 (toList!736 lt!40349)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23131 (not res!44727)) b!87169))

(assert (= (and b!87169 res!44728) b!87170))

(declare-fun m!92753 () Bool)

(assert (=> b!87170 m!92753))

(assert (=> d!22289 d!23131))

(declare-fun d!23133 () Bool)

(declare-fun lt!41343 () Bool)

(assert (=> d!23133 (= lt!41343 (select (content!90 (toList!736 lt!40923)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56782 () Bool)

(assert (=> d!23133 (= lt!41343 e!56782)))

(declare-fun res!44730 () Bool)

(assert (=> d!23133 (=> (not res!44730) (not e!56782))))

(assert (=> d!23133 (= res!44730 ((_ is Cons!1505) (toList!736 lt!40923)))))

(assert (=> d!23133 (= (contains!749 (toList!736 lt!40923) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41343)))

(declare-fun b!87171 () Bool)

(declare-fun e!56781 () Bool)

(assert (=> b!87171 (= e!56782 e!56781)))

(declare-fun res!44729 () Bool)

(assert (=> b!87171 (=> res!44729 e!56781)))

(assert (=> b!87171 (= res!44729 (= (h!2096 (toList!736 lt!40923)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!87172 () Bool)

(assert (=> b!87172 (= e!56781 (contains!749 (t!5222 (toList!736 lt!40923)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!23133 res!44730) b!87171))

(assert (= (and b!87171 (not res!44729)) b!87172))

(declare-fun m!92755 () Bool)

(assert (=> d!23133 m!92755))

(declare-fun m!92757 () Bool)

(assert (=> d!23133 m!92757))

(declare-fun m!92759 () Bool)

(assert (=> b!87172 m!92759))

(assert (=> b!86183 d!23133))

(assert (=> d!22259 d!22257))

(declare-fun d!23135 () Bool)

(assert (=> d!23135 (= (getValueByKey!141 lt!40374 (_1!1105 lt!40197)) (Some!146 (_2!1105 lt!40197)))))

(assert (=> d!23135 true))

(declare-fun _$22!424 () Unit!2498)

(assert (=> d!23135 (= (choose!511 lt!40374 (_1!1105 lt!40197) (_2!1105 lt!40197)) _$22!424)))

(declare-fun bs!3703 () Bool)

(assert (= bs!3703 d!23135))

(assert (=> bs!3703 m!89881))

(assert (=> d!22259 d!23135))

(declare-fun d!23137 () Bool)

(declare-fun res!44731 () Bool)

(declare-fun e!56783 () Bool)

(assert (=> d!23137 (=> res!44731 e!56783)))

(assert (=> d!23137 (= res!44731 (or ((_ is Nil!1506) lt!40374) ((_ is Nil!1506) (t!5222 lt!40374))))))

(assert (=> d!23137 (= (isStrictlySorted!285 lt!40374) e!56783)))

(declare-fun b!87173 () Bool)

(declare-fun e!56784 () Bool)

(assert (=> b!87173 (= e!56783 e!56784)))

(declare-fun res!44732 () Bool)

(assert (=> b!87173 (=> (not res!44732) (not e!56784))))

(assert (=> b!87173 (= res!44732 (bvslt (_1!1105 (h!2096 lt!40374)) (_1!1105 (h!2096 (t!5222 lt!40374)))))))

(declare-fun b!87174 () Bool)

(assert (=> b!87174 (= e!56784 (isStrictlySorted!285 (t!5222 lt!40374)))))

(assert (= (and d!23137 (not res!44731)) b!87173))

(assert (= (and b!87173 res!44732) b!87174))

(declare-fun m!92761 () Bool)

(assert (=> b!87174 m!92761))

(assert (=> d!22259 d!23137))

(assert (=> d!22379 d!22381))

(assert (=> d!22379 d!22383))

(declare-fun d!23139 () Bool)

(assert (=> d!23139 (isDefined!93 (getValueByKey!141 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!23139 true))

(declare-fun _$12!335 () Unit!2498)

(assert (=> d!23139 (= (choose!517 (toList!736 lt!40195) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) _$12!335)))

(declare-fun bs!3704 () Bool)

(assert (= bs!3704 d!23139))

(assert (=> bs!3704 m!89569))

(assert (=> bs!3704 m!89953))

(assert (=> bs!3704 m!89953))

(assert (=> bs!3704 m!89955))

(assert (=> d!22379 d!23139))

(declare-fun d!23141 () Bool)

(declare-fun res!44733 () Bool)

(declare-fun e!56785 () Bool)

(assert (=> d!23141 (=> res!44733 e!56785)))

(assert (=> d!23141 (= res!44733 (or ((_ is Nil!1506) (toList!736 lt!40195)) ((_ is Nil!1506) (t!5222 (toList!736 lt!40195)))))))

(assert (=> d!23141 (= (isStrictlySorted!285 (toList!736 lt!40195)) e!56785)))

(declare-fun b!87175 () Bool)

(declare-fun e!56786 () Bool)

(assert (=> b!87175 (= e!56785 e!56786)))

(declare-fun res!44734 () Bool)

(assert (=> b!87175 (=> (not res!44734) (not e!56786))))

(assert (=> b!87175 (= res!44734 (bvslt (_1!1105 (h!2096 (toList!736 lt!40195))) (_1!1105 (h!2096 (t!5222 (toList!736 lt!40195))))))))

(declare-fun b!87176 () Bool)

(assert (=> b!87176 (= e!56786 (isStrictlySorted!285 (t!5222 (toList!736 lt!40195))))))

(assert (= (and d!23141 (not res!44733)) b!87175))

(assert (= (and b!87175 res!44734) b!87176))

(declare-fun m!92763 () Bool)

(assert (=> b!87176 m!92763))

(assert (=> d!22379 d!23141))

(declare-fun b!87195 () Bool)

(declare-fun lt!41349 () SeekEntryResult!237)

(assert (=> b!87195 (and (bvsge (index!3087 lt!41349) #b00000000000000000000000000000000) (bvslt (index!3087 lt!41349) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun res!44742 () Bool)

(assert (=> b!87195 (= res!44742 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3087 lt!41349)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun e!56801 () Bool)

(assert (=> b!87195 (=> res!44742 e!56801)))

(declare-fun e!56798 () Bool)

(assert (=> b!87195 (= e!56798 e!56801)))

(declare-fun b!87197 () Bool)

(declare-fun e!56800 () Bool)

(assert (=> b!87197 (= e!56800 e!56798)))

(declare-fun res!44741 () Bool)

(assert (=> b!87197 (= res!44741 (and ((_ is Intermediate!237) lt!41349) (not (undefined!1049 lt!41349)) (bvslt (x!11990 lt!41349) #b01111111111111111111111111111110) (bvsge (x!11990 lt!41349) #b00000000000000000000000000000000) (bvsge (x!11990 lt!41349) #b00000000000000000000000000000000)))))

(assert (=> b!87197 (=> (not res!44741) (not e!56798))))

(declare-fun e!56799 () SeekEntryResult!237)

(declare-fun b!87198 () Bool)

(assert (=> b!87198 (= e!56799 (Intermediate!237 false (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!87199 () Bool)

(assert (=> b!87199 (and (bvsge (index!3087 lt!41349) #b00000000000000000000000000000000) (bvslt (index!3087 lt!41349) (size!2154 (_keys!4009 newMap!16))))))

(assert (=> b!87199 (= e!56801 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3087 lt!41349)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!23143 () Bool)

(assert (=> d!23143 e!56800))

(declare-fun c!14350 () Bool)

(assert (=> d!23143 (= c!14350 (and ((_ is Intermediate!237) lt!41349) (undefined!1049 lt!41349)))))

(declare-fun e!56797 () SeekEntryResult!237)

(assert (=> d!23143 (= lt!41349 e!56797)))

(declare-fun c!14349 () Bool)

(assert (=> d!23143 (= c!14349 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!41348 () (_ BitVec 64))

(assert (=> d!23143 (= lt!41348 (select (arr!1910 (_keys!4009 newMap!16)) (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16))))))

(assert (=> d!23143 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23143 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)) lt!41349)))

(declare-fun b!87196 () Bool)

(assert (=> b!87196 (= e!56797 (Intermediate!237 true (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!87200 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!87200 (= e!56799 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6365 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(declare-fun b!87201 () Bool)

(assert (=> b!87201 (= e!56800 (bvsge (x!11990 lt!41349) #b01111111111111111111111111111110))))

(declare-fun b!87202 () Bool)

(assert (=> b!87202 (and (bvsge (index!3087 lt!41349) #b00000000000000000000000000000000) (bvslt (index!3087 lt!41349) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun res!44743 () Bool)

(assert (=> b!87202 (= res!44743 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3087 lt!41349)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87202 (=> res!44743 e!56801)))

(declare-fun b!87203 () Bool)

(assert (=> b!87203 (= e!56797 e!56799)))

(declare-fun c!14351 () Bool)

(assert (=> b!87203 (= c!14351 (or (= lt!41348 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (= (bvadd lt!41348 lt!41348) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23143 c!14349) b!87196))

(assert (= (and d!23143 (not c!14349)) b!87203))

(assert (= (and b!87203 c!14351) b!87198))

(assert (= (and b!87203 (not c!14351)) b!87200))

(assert (= (and d!23143 c!14350) b!87201))

(assert (= (and d!23143 (not c!14350)) b!87197))

(assert (= (and b!87197 res!44741) b!87195))

(assert (= (and b!87195 (not res!44742)) b!87202))

(assert (= (and b!87202 (not res!44743)) b!87199))

(assert (=> d!23143 m!90783))

(declare-fun m!92765 () Bool)

(assert (=> d!23143 m!92765))

(assert (=> d!23143 m!90203))

(declare-fun m!92767 () Bool)

(assert (=> b!87199 m!92767))

(assert (=> b!87195 m!92767))

(assert (=> b!87202 m!92767))

(assert (=> b!87200 m!90783))

(declare-fun m!92769 () Bool)

(assert (=> b!87200 m!92769))

(assert (=> b!87200 m!92769))

(assert (=> b!87200 m!89569))

(declare-fun m!92771 () Bool)

(assert (=> b!87200 m!92771))

(assert (=> d!22385 d!23143))

(declare-fun d!23145 () Bool)

(declare-fun lt!41355 () (_ BitVec 32))

(declare-fun lt!41354 () (_ BitVec 32))

(assert (=> d!23145 (= lt!41355 (bvmul (bvxor lt!41354 (bvlshr lt!41354 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!23145 (= lt!41354 ((_ extract 31 0) (bvand (bvxor (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvlshr (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!23145 (and (bvsge (mask!6365 newMap!16) #b00000000000000000000000000000000) (let ((res!44744 (let ((h!2098 ((_ extract 31 0) (bvand (bvxor (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvlshr (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12092 (bvmul (bvxor h!2098 (bvlshr h!2098 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12092 (bvlshr x!12092 #b00000000000000000000000000001101)) (mask!6365 newMap!16)))))) (and (bvslt res!44744 (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001)) (bvsge res!44744 #b00000000000000000000000000000000))))))

(assert (=> d!23145 (= (toIndex!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (mask!6365 newMap!16)) (bvand (bvxor lt!41355 (bvlshr lt!41355 #b00000000000000000000000000001101)) (mask!6365 newMap!16)))))

(assert (=> d!22385 d!23145))

(assert (=> d!22385 d!22427))

(declare-fun b!87207 () Bool)

(declare-fun e!56803 () Option!147)

(assert (=> b!87207 (= e!56803 None!145)))

(declare-fun d!23147 () Bool)

(declare-fun c!14352 () Bool)

(assert (=> d!23147 (= c!14352 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40368))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40368)))) (_1!1105 lt!40182))))))

(declare-fun e!56802 () Option!147)

(assert (=> d!23147 (= (getValueByKey!141 (t!5222 (toList!736 lt!40368)) (_1!1105 lt!40182)) e!56802)))

(declare-fun b!87205 () Bool)

(assert (=> b!87205 (= e!56802 e!56803)))

(declare-fun c!14353 () Bool)

(assert (=> b!87205 (= c!14353 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40368))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40368)))) (_1!1105 lt!40182)))))))

(declare-fun b!87206 () Bool)

(assert (=> b!87206 (= e!56803 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40368))) (_1!1105 lt!40182)))))

(declare-fun b!87204 () Bool)

(assert (=> b!87204 (= e!56802 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40368))))))))

(assert (= (and d!23147 c!14352) b!87204))

(assert (= (and d!23147 (not c!14352)) b!87205))

(assert (= (and b!87205 c!14353) b!87206))

(assert (= (and b!87205 (not c!14353)) b!87207))

(declare-fun m!92773 () Bool)

(assert (=> b!87206 m!92773))

(assert (=> b!85901 d!23147))

(declare-fun d!23149 () Bool)

(declare-fun res!44745 () Bool)

(declare-fun e!56804 () Bool)

(assert (=> d!23149 (=> res!44745 e!56804)))

(assert (=> d!23149 (= res!44745 (and ((_ is Cons!1505) (toList!736 lt!40372)) (= (_1!1105 (h!2096 (toList!736 lt!40372))) (_1!1105 lt!40182))))))

(assert (=> d!23149 (= (containsKey!144 (toList!736 lt!40372) (_1!1105 lt!40182)) e!56804)))

(declare-fun b!87208 () Bool)

(declare-fun e!56805 () Bool)

(assert (=> b!87208 (= e!56804 e!56805)))

(declare-fun res!44746 () Bool)

(assert (=> b!87208 (=> (not res!44746) (not e!56805))))

(assert (=> b!87208 (= res!44746 (and (or (not ((_ is Cons!1505) (toList!736 lt!40372))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40372))) (_1!1105 lt!40182))) ((_ is Cons!1505) (toList!736 lt!40372)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40372))) (_1!1105 lt!40182))))))

(declare-fun b!87209 () Bool)

(assert (=> b!87209 (= e!56805 (containsKey!144 (t!5222 (toList!736 lt!40372)) (_1!1105 lt!40182)))))

(assert (= (and d!23149 (not res!44745)) b!87208))

(assert (= (and b!87208 res!44746) b!87209))

(declare-fun m!92775 () Bool)

(assert (=> b!87209 m!92775))

(assert (=> d!22229 d!23149))

(declare-fun d!23151 () Bool)

(declare-fun e!56807 () Bool)

(assert (=> d!23151 e!56807))

(declare-fun res!44747 () Bool)

(assert (=> d!23151 (=> res!44747 e!56807)))

(declare-fun lt!41357 () Bool)

(assert (=> d!23151 (= res!44747 (not lt!41357))))

(declare-fun lt!41359 () Bool)

(assert (=> d!23151 (= lt!41357 lt!41359)))

(declare-fun lt!41356 () Unit!2498)

(declare-fun e!56806 () Unit!2498)

(assert (=> d!23151 (= lt!41356 e!56806)))

(declare-fun c!14354 () Bool)

(assert (=> d!23151 (= c!14354 lt!41359)))

(assert (=> d!23151 (= lt!41359 (containsKey!144 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))

(assert (=> d!23151 (= (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))) lt!41357)))

(declare-fun b!87210 () Bool)

(declare-fun lt!41358 () Unit!2498)

(assert (=> b!87210 (= e!56806 lt!41358)))

(assert (=> b!87210 (= lt!41358 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))

(assert (=> b!87210 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518))))))

(declare-fun b!87211 () Bool)

(declare-fun Unit!2570 () Unit!2498)

(assert (=> b!87211 (= e!56806 Unit!2570)))

(declare-fun b!87212 () Bool)

(assert (=> b!87212 (= e!56807 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!40518)))))))

(assert (= (and d!23151 c!14354) b!87210))

(assert (= (and d!23151 (not c!14354)) b!87211))

(assert (= (and d!23151 (not res!44747)) b!87212))

(assert (=> d!23151 m!89961))

(declare-fun m!92777 () Bool)

(assert (=> d!23151 m!92777))

(assert (=> b!87210 m!89961))

(declare-fun m!92779 () Bool)

(assert (=> b!87210 m!92779))

(assert (=> b!87210 m!89961))

(declare-fun m!92781 () Bool)

(assert (=> b!87210 m!92781))

(assert (=> b!87210 m!92781))

(declare-fun m!92783 () Bool)

(assert (=> b!87210 m!92783))

(assert (=> b!87212 m!89961))

(assert (=> b!87212 m!92781))

(assert (=> b!87212 m!92781))

(assert (=> b!87212 m!92783))

(assert (=> b!85974 d!23151))

(declare-fun bm!8291 () Bool)

(declare-fun call!8299 () ListLongMap!1441)

(declare-fun call!8300 () ListLongMap!1441)

(declare-fun c!14357 () Bool)

(declare-fun c!14358 () Bool)

(declare-fun call!8297 () ListLongMap!1441)

(declare-fun call!8295 () ListLongMap!1441)

(assert (=> bm!8291 (= call!8299 (+!107 (ite c!14358 call!8300 (ite c!14357 call!8295 call!8297)) (ite (or c!14358 c!14357) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!23153 () Bool)

(declare-fun e!56808 () Bool)

(assert (=> d!23153 e!56808))

(declare-fun res!44748 () Bool)

(assert (=> d!23153 (=> (not res!44748) (not e!56808))))

(assert (=> d!23153 (= res!44748 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!41377 () ListLongMap!1441)

(declare-fun lt!41360 () ListLongMap!1441)

(assert (=> d!23153 (= lt!41377 lt!41360)))

(declare-fun lt!41374 () Unit!2498)

(declare-fun e!56812 () Unit!2498)

(assert (=> d!23153 (= lt!41374 e!56812)))

(declare-fun c!14355 () Bool)

(declare-fun e!56813 () Bool)

(assert (=> d!23153 (= c!14355 e!56813)))

(declare-fun res!44755 () Bool)

(assert (=> d!23153 (=> (not res!44755) (not e!56813))))

(assert (=> d!23153 (= res!44755 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!56820 () ListLongMap!1441)

(assert (=> d!23153 (= lt!41360 e!56820)))

(assert (=> d!23153 (= c!14358 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23153 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23153 (= (getCurrentListMap!430 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41377)))

(declare-fun bm!8292 () Bool)

(assert (=> bm!8292 (= call!8297 call!8295)))

(declare-fun b!87213 () Bool)

(declare-fun e!56810 () Bool)

(declare-fun e!56819 () Bool)

(assert (=> b!87213 (= e!56810 e!56819)))

(declare-fun res!44753 () Bool)

(assert (=> b!87213 (=> (not res!44753) (not e!56819))))

(assert (=> b!87213 (= res!44753 (contains!747 lt!41377 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87213 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!87214 () Bool)

(declare-fun lt!41363 () Unit!2498)

(assert (=> b!87214 (= e!56812 lt!41363)))

(declare-fun lt!41369 () ListLongMap!1441)

(assert (=> b!87214 (= lt!41369 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41365 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41365 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41373 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41373 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41368 () Unit!2498)

(assert (=> b!87214 (= lt!41368 (addStillContains!58 lt!41369 lt!41365 (zeroValue!2229 newMap!16) lt!41373))))

(assert (=> b!87214 (contains!747 (+!107 lt!41369 (tuple2!2189 lt!41365 (zeroValue!2229 newMap!16))) lt!41373)))

(declare-fun lt!41370 () Unit!2498)

(assert (=> b!87214 (= lt!41370 lt!41368)))

(declare-fun lt!41381 () ListLongMap!1441)

(assert (=> b!87214 (= lt!41381 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41364 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41364 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41361 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41361 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41380 () Unit!2498)

(assert (=> b!87214 (= lt!41380 (addApplyDifferent!58 lt!41381 lt!41364 (minValue!2229 newMap!16) lt!41361))))

(assert (=> b!87214 (= (apply!82 (+!107 lt!41381 (tuple2!2189 lt!41364 (minValue!2229 newMap!16))) lt!41361) (apply!82 lt!41381 lt!41361))))

(declare-fun lt!41362 () Unit!2498)

(assert (=> b!87214 (= lt!41362 lt!41380)))

(declare-fun lt!41375 () ListLongMap!1441)

(assert (=> b!87214 (= lt!41375 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41366 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41366 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41372 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41372 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41378 () Unit!2498)

(assert (=> b!87214 (= lt!41378 (addApplyDifferent!58 lt!41375 lt!41366 (zeroValue!2229 newMap!16) lt!41372))))

(assert (=> b!87214 (= (apply!82 (+!107 lt!41375 (tuple2!2189 lt!41366 (zeroValue!2229 newMap!16))) lt!41372) (apply!82 lt!41375 lt!41372))))

(declare-fun lt!41379 () Unit!2498)

(assert (=> b!87214 (= lt!41379 lt!41378)))

(declare-fun lt!41376 () ListLongMap!1441)

(assert (=> b!87214 (= lt!41376 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41367 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41367 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41371 () (_ BitVec 64))

(assert (=> b!87214 (= lt!41371 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87214 (= lt!41363 (addApplyDifferent!58 lt!41376 lt!41367 (minValue!2229 newMap!16) lt!41371))))

(assert (=> b!87214 (= (apply!82 (+!107 lt!41376 (tuple2!2189 lt!41367 (minValue!2229 newMap!16))) lt!41371) (apply!82 lt!41376 lt!41371))))

(declare-fun bm!8293 () Bool)

(assert (=> bm!8293 (= call!8295 call!8300)))

(declare-fun b!87215 () Bool)

(declare-fun res!44751 () Bool)

(assert (=> b!87215 (=> (not res!44751) (not e!56808))))

(assert (=> b!87215 (= res!44751 e!56810)))

(declare-fun res!44750 () Bool)

(assert (=> b!87215 (=> res!44750 e!56810)))

(declare-fun e!56817 () Bool)

(assert (=> b!87215 (= res!44750 (not e!56817))))

(declare-fun res!44752 () Bool)

(assert (=> b!87215 (=> (not res!44752) (not e!56817))))

(assert (=> b!87215 (= res!44752 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!87216 () Bool)

(declare-fun e!56811 () Bool)

(declare-fun call!8294 () Bool)

(assert (=> b!87216 (= e!56811 (not call!8294))))

(declare-fun b!87217 () Bool)

(declare-fun e!56818 () ListLongMap!1441)

(assert (=> b!87217 (= e!56820 e!56818)))

(assert (=> b!87217 (= c!14357 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87218 () Bool)

(declare-fun e!56816 () Bool)

(declare-fun call!8296 () Bool)

(assert (=> b!87218 (= e!56816 (not call!8296))))

(declare-fun b!87219 () Bool)

(declare-fun e!56809 () Bool)

(assert (=> b!87219 (= e!56809 (= (apply!82 lt!41377 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8294 () Bool)

(declare-fun call!8298 () ListLongMap!1441)

(assert (=> bm!8294 (= call!8298 call!8299)))

(declare-fun b!87220 () Bool)

(declare-fun e!56815 () Bool)

(assert (=> b!87220 (= e!56816 e!56815)))

(declare-fun res!44749 () Bool)

(assert (=> b!87220 (= res!44749 call!8296)))

(assert (=> b!87220 (=> (not res!44749) (not e!56815))))

(declare-fun b!87221 () Bool)

(assert (=> b!87221 (= e!56808 e!56811)))

(declare-fun c!14356 () Bool)

(assert (=> b!87221 (= c!14356 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87222 () Bool)

(assert (=> b!87222 (= e!56820 (+!107 call!8299 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87223 () Bool)

(assert (=> b!87223 (= e!56811 e!56809)))

(declare-fun res!44754 () Bool)

(assert (=> b!87223 (= res!44754 call!8294)))

(assert (=> b!87223 (=> (not res!44754) (not e!56809))))

(declare-fun b!87224 () Bool)

(declare-fun Unit!2571 () Unit!2498)

(assert (=> b!87224 (= e!56812 Unit!2571)))

(declare-fun b!87225 () Bool)

(assert (=> b!87225 (= e!56813 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8295 () Bool)

(assert (=> bm!8295 (= call!8300 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) lt!40522 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87226 () Bool)

(declare-fun res!44756 () Bool)

(assert (=> b!87226 (=> (not res!44756) (not e!56808))))

(assert (=> b!87226 (= res!44756 e!56816)))

(declare-fun c!14360 () Bool)

(assert (=> b!87226 (= c!14360 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87227 () Bool)

(declare-fun e!56814 () ListLongMap!1441)

(assert (=> b!87227 (= e!56814 call!8298)))

(declare-fun b!87228 () Bool)

(assert (=> b!87228 (= e!56817 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87229 () Bool)

(assert (=> b!87229 (= e!56814 call!8297)))

(declare-fun b!87230 () Bool)

(assert (=> b!87230 (= e!56818 call!8298)))

(declare-fun bm!8296 () Bool)

(assert (=> bm!8296 (= call!8294 (contains!747 lt!41377 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87231 () Bool)

(assert (=> b!87231 (= e!56815 (= (apply!82 lt!41377 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87232 () Bool)

(declare-fun c!14359 () Bool)

(assert (=> b!87232 (= c!14359 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87232 (= e!56818 e!56814)))

(declare-fun b!87233 () Bool)

(assert (=> b!87233 (= e!56819 (= (apply!82 lt!41377 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 lt!40522) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87233 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 lt!40522)))))

(assert (=> b!87233 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8297 () Bool)

(assert (=> bm!8297 (= call!8296 (contains!747 lt!41377 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23153 c!14358) b!87222))

(assert (= (and d!23153 (not c!14358)) b!87217))

(assert (= (and b!87217 c!14357) b!87230))

(assert (= (and b!87217 (not c!14357)) b!87232))

(assert (= (and b!87232 c!14359) b!87227))

(assert (= (and b!87232 (not c!14359)) b!87229))

(assert (= (or b!87227 b!87229) bm!8292))

(assert (= (or b!87230 bm!8292) bm!8293))

(assert (= (or b!87230 b!87227) bm!8294))

(assert (= (or b!87222 bm!8293) bm!8295))

(assert (= (or b!87222 bm!8294) bm!8291))

(assert (= (and d!23153 res!44755) b!87225))

(assert (= (and d!23153 c!14355) b!87214))

(assert (= (and d!23153 (not c!14355)) b!87224))

(assert (= (and d!23153 res!44748) b!87215))

(assert (= (and b!87215 res!44752) b!87228))

(assert (= (and b!87215 (not res!44750)) b!87213))

(assert (= (and b!87213 res!44753) b!87233))

(assert (= (and b!87215 res!44751) b!87226))

(assert (= (and b!87226 c!14360) b!87220))

(assert (= (and b!87226 (not c!14360)) b!87218))

(assert (= (and b!87220 res!44749) b!87231))

(assert (= (or b!87220 b!87218) bm!8297))

(assert (= (and b!87226 res!44756) b!87221))

(assert (= (and b!87221 c!14356) b!87223))

(assert (= (and b!87221 (not c!14356)) b!87216))

(assert (= (and b!87223 res!44754) b!87219))

(assert (= (or b!87223 b!87216) bm!8296))

(declare-fun b_lambda!3851 () Bool)

(assert (=> (not b_lambda!3851) (not b!87233)))

(assert (=> b!87233 t!5233))

(declare-fun b_and!5253 () Bool)

(assert (= b_and!5249 (and (=> t!5233 result!2923) b_and!5253)))

(assert (=> b!87233 t!5235))

(declare-fun b_and!5255 () Bool)

(assert (= b_and!5251 (and (=> t!5235 result!2925) b_and!5255)))

(declare-fun m!92785 () Bool)

(assert (=> b!87222 m!92785))

(declare-fun m!92787 () Bool)

(assert (=> b!87231 m!92787))

(declare-fun m!92789 () Bool)

(assert (=> b!87233 m!92789))

(assert (=> b!87233 m!90319))

(declare-fun m!92791 () Bool)

(assert (=> b!87233 m!92791))

(assert (=> b!87233 m!92789))

(assert (=> b!87233 m!90319))

(assert (=> b!87233 m!90065))

(declare-fun m!92793 () Bool)

(assert (=> b!87233 m!92793))

(assert (=> b!87233 m!90065))

(declare-fun m!92795 () Bool)

(assert (=> bm!8295 m!92795))

(assert (=> b!87225 m!90065))

(assert (=> b!87225 m!90065))

(assert (=> b!87225 m!90073))

(declare-fun m!92797 () Bool)

(assert (=> bm!8297 m!92797))

(declare-fun m!92799 () Bool)

(assert (=> bm!8291 m!92799))

(declare-fun m!92801 () Bool)

(assert (=> b!87214 m!92801))

(declare-fun m!92803 () Bool)

(assert (=> b!87214 m!92803))

(declare-fun m!92805 () Bool)

(assert (=> b!87214 m!92805))

(declare-fun m!92807 () Bool)

(assert (=> b!87214 m!92807))

(declare-fun m!92809 () Bool)

(assert (=> b!87214 m!92809))

(assert (=> b!87214 m!92795))

(assert (=> b!87214 m!90065))

(declare-fun m!92811 () Bool)

(assert (=> b!87214 m!92811))

(declare-fun m!92813 () Bool)

(assert (=> b!87214 m!92813))

(declare-fun m!92815 () Bool)

(assert (=> b!87214 m!92815))

(declare-fun m!92817 () Bool)

(assert (=> b!87214 m!92817))

(declare-fun m!92819 () Bool)

(assert (=> b!87214 m!92819))

(declare-fun m!92821 () Bool)

(assert (=> b!87214 m!92821))

(declare-fun m!92823 () Bool)

(assert (=> b!87214 m!92823))

(declare-fun m!92825 () Bool)

(assert (=> b!87214 m!92825))

(assert (=> b!87214 m!92809))

(declare-fun m!92827 () Bool)

(assert (=> b!87214 m!92827))

(assert (=> b!87214 m!92801))

(assert (=> b!87214 m!92819))

(assert (=> b!87214 m!92815))

(declare-fun m!92829 () Bool)

(assert (=> b!87214 m!92829))

(assert (=> b!87228 m!90065))

(assert (=> b!87228 m!90065))

(assert (=> b!87228 m!90073))

(declare-fun m!92831 () Bool)

(assert (=> bm!8296 m!92831))

(assert (=> d!23153 m!90203))

(declare-fun m!92833 () Bool)

(assert (=> b!87219 m!92833))

(assert (=> b!87213 m!90065))

(assert (=> b!87213 m!90065))

(declare-fun m!92835 () Bool)

(assert (=> b!87213 m!92835))

(assert (=> b!85974 d!23153))

(declare-fun b!87234 () Bool)

(declare-fun e!56824 () List!1509)

(declare-fun call!8301 () List!1509)

(assert (=> b!87234 (= e!56824 call!8301)))

(declare-fun bm!8298 () Bool)

(declare-fun e!56823 () List!1509)

(declare-fun call!8302 () List!1509)

(declare-fun c!14364 () Bool)

(assert (=> bm!8298 (= call!8302 ($colon$colon!71 e!56823 (ite c!14364 (h!2096 (t!5222 (toList!736 lt!40193))) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))))))

(declare-fun c!14363 () Bool)

(assert (=> bm!8298 (= c!14363 c!14364)))

(declare-fun b!87235 () Bool)

(declare-fun c!14362 () Bool)

(assert (=> b!87235 (= c!14362 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40193))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193)))) (_1!1105 lt!40197))))))

(declare-fun e!56821 () List!1509)

(assert (=> b!87235 (= e!56824 e!56821)))

(declare-fun b!87236 () Bool)

(declare-fun e!56825 () Bool)

(declare-fun lt!41382 () List!1509)

(assert (=> b!87236 (= e!56825 (contains!749 lt!41382 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!87237 () Bool)

(declare-fun res!44757 () Bool)

(assert (=> b!87237 (=> (not res!44757) (not e!56825))))

(assert (=> b!87237 (= res!44757 (containsKey!144 lt!41382 (_1!1105 lt!40197)))))

(declare-fun bm!8299 () Bool)

(assert (=> bm!8299 (= call!8301 call!8302)))

(declare-fun b!87238 () Bool)

(assert (=> b!87238 (= e!56823 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 lt!40193))) (_1!1105 lt!40197) (_2!1105 lt!40197)))))

(declare-fun b!87239 () Bool)

(declare-fun c!14361 () Bool)

(assert (=> b!87239 (= e!56823 (ite c!14361 (t!5222 (t!5222 (toList!736 lt!40193))) (ite c!14362 (Cons!1505 (h!2096 (t!5222 (toList!736 lt!40193))) (t!5222 (t!5222 (toList!736 lt!40193)))) Nil!1506)))))

(declare-fun b!87240 () Bool)

(declare-fun e!56822 () List!1509)

(assert (=> b!87240 (= e!56822 call!8302)))

(declare-fun bm!8300 () Bool)

(declare-fun call!8303 () List!1509)

(assert (=> bm!8300 (= call!8303 call!8301)))

(declare-fun d!23155 () Bool)

(assert (=> d!23155 e!56825))

(declare-fun res!44758 () Bool)

(assert (=> d!23155 (=> (not res!44758) (not e!56825))))

(assert (=> d!23155 (= res!44758 (isStrictlySorted!285 lt!41382))))

(assert (=> d!23155 (= lt!41382 e!56822)))

(assert (=> d!23155 (= c!14364 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40193))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193)))) (_1!1105 lt!40197))))))

(assert (=> d!23155 (isStrictlySorted!285 (t!5222 (toList!736 lt!40193)))))

(assert (=> d!23155 (= (insertStrictlySorted!61 (t!5222 (toList!736 lt!40193)) (_1!1105 lt!40197) (_2!1105 lt!40197)) lt!41382)))

(declare-fun b!87241 () Bool)

(assert (=> b!87241 (= e!56821 call!8303)))

(declare-fun b!87242 () Bool)

(assert (=> b!87242 (= e!56822 e!56824)))

(assert (=> b!87242 (= c!14361 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40193))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40193)))) (_1!1105 lt!40197))))))

(declare-fun b!87243 () Bool)

(assert (=> b!87243 (= e!56821 call!8303)))

(assert (= (and d!23155 c!14364) b!87240))

(assert (= (and d!23155 (not c!14364)) b!87242))

(assert (= (and b!87242 c!14361) b!87234))

(assert (= (and b!87242 (not c!14361)) b!87235))

(assert (= (and b!87235 c!14362) b!87241))

(assert (= (and b!87235 (not c!14362)) b!87243))

(assert (= (or b!87241 b!87243) bm!8300))

(assert (= (or b!87234 bm!8300) bm!8299))

(assert (= (or b!87240 bm!8299) bm!8298))

(assert (= (and bm!8298 c!14363) b!87238))

(assert (= (and bm!8298 (not c!14363)) b!87239))

(assert (= (and d!23155 res!44758) b!87237))

(assert (= (and b!87237 res!44757) b!87236))

(declare-fun m!92837 () Bool)

(assert (=> b!87236 m!92837))

(declare-fun m!92839 () Bool)

(assert (=> b!87237 m!92839))

(declare-fun m!92841 () Bool)

(assert (=> bm!8298 m!92841))

(declare-fun m!92843 () Bool)

(assert (=> d!23155 m!92843))

(assert (=> d!23155 m!91619))

(declare-fun m!92845 () Bool)

(assert (=> b!87238 m!92845))

(assert (=> b!85966 d!23155))

(declare-fun d!23157 () Bool)

(declare-fun e!56826 () Bool)

(assert (=> d!23157 e!56826))

(declare-fun res!44759 () Bool)

(assert (=> d!23157 (=> (not res!44759) (not e!56826))))

(declare-fun lt!41386 () ListLongMap!1441)

(assert (=> d!23157 (= res!44759 (contains!747 lt!41386 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(declare-fun lt!41384 () List!1509)

(assert (=> d!23157 (= lt!41386 (ListLongMap!1442 lt!41384))))

(declare-fun lt!41383 () Unit!2498)

(declare-fun lt!41385 () Unit!2498)

(assert (=> d!23157 (= lt!41383 lt!41385)))

(assert (=> d!23157 (= (getValueByKey!141 lt!41384 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!23157 (= lt!41385 (lemmaContainsTupThenGetReturnValue!58 lt!41384 (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!23157 (= lt!41384 (insertStrictlySorted!61 (toList!736 call!8197) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))))))

(assert (=> d!23157 (= (+!107 call!8197 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))) lt!41386)))

(declare-fun b!87244 () Bool)

(declare-fun res!44760 () Bool)

(assert (=> b!87244 (=> (not res!44760) (not e!56826))))

(assert (=> b!87244 (= res!44760 (= (getValueByKey!141 (toList!736 lt!41386) (_1!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))))

(declare-fun b!87245 () Bool)

(assert (=> b!87245 (= e!56826 (contains!749 (toList!736 lt!41386) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13888 (ite c!13892 (minValue!2229 newMap!16) lt!40194) (minValue!2229 newMap!16)))))))

(assert (= (and d!23157 res!44759) b!87244))

(assert (= (and b!87244 res!44760) b!87245))

(declare-fun m!92847 () Bool)

(assert (=> d!23157 m!92847))

(declare-fun m!92849 () Bool)

(assert (=> d!23157 m!92849))

(declare-fun m!92851 () Bool)

(assert (=> d!23157 m!92851))

(declare-fun m!92853 () Bool)

(assert (=> d!23157 m!92853))

(declare-fun m!92855 () Bool)

(assert (=> b!87244 m!92855))

(declare-fun m!92857 () Bool)

(assert (=> b!87245 m!92857))

(assert (=> b!86161 d!23157))

(assert (=> b!85758 d!22959))

(assert (=> b!85758 d!22291))

(declare-fun d!23159 () Bool)

(assert (=> d!23159 (= (get!1207 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2654 (getValueByKey!141 (toList!736 lt!40439) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22225 d!23159))

(assert (=> d!22225 d!22769))

(declare-fun d!23161 () Bool)

(assert (=> d!23161 (= (apply!82 lt!40878 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1207 (getValueByKey!141 (toList!736 lt!40878) (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3705 () Bool)

(assert (= bs!3705 d!23161))

(assert (=> bs!3705 m!90065))

(assert (=> bs!3705 m!91529))

(assert (=> bs!3705 m!91529))

(declare-fun m!92859 () Bool)

(assert (=> bs!3705 m!92859))

(assert (=> b!86147 d!23161))

(declare-fun c!14365 () Bool)

(declare-fun d!23163 () Bool)

(assert (=> d!23163 (= c!14365 ((_ is ValueCellFull!923) (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!56827 () V!3025)

(assert (=> d!23163 (= (get!1204 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56827)))

(declare-fun b!87246 () Bool)

(assert (=> b!87246 (= e!56827 (get!1205 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87247 () Bool)

(assert (=> b!87247 (= e!56827 (get!1206 (select (arr!1911 (ite c!13888 (_values!2320 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23163 c!14365) b!87246))

(assert (= (and d!23163 (not c!14365)) b!87247))

(assert (=> b!87246 m!90807))

(assert (=> b!87246 m!90319))

(declare-fun m!92861 () Bool)

(assert (=> b!87246 m!92861))

(assert (=> b!87247 m!90807))

(assert (=> b!87247 m!90319))

(declare-fun m!92863 () Bool)

(assert (=> b!87247 m!92863))

(assert (=> b!86147 d!23163))

(assert (=> b!85898 d!22947))

(assert (=> b!85898 d!22949))

(declare-fun d!23165 () Bool)

(assert (=> d!23165 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun lt!41387 () Unit!2498)

(assert (=> d!23165 (= lt!41387 (choose!517 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun e!56828 () Bool)

(assert (=> d!23165 e!56828))

(declare-fun res!44761 () Bool)

(assert (=> d!23165 (=> (not res!44761) (not e!56828))))

(assert (=> d!23165 (= res!44761 (isStrictlySorted!285 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))))

(assert (=> d!23165 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!41387)))

(declare-fun b!87248 () Bool)

(assert (=> b!87248 (= e!56828 (containsKey!144 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!23165 res!44761) b!87248))

(assert (=> d!23165 m!89569))

(assert (=> d!23165 m!90551))

(assert (=> d!23165 m!90551))

(assert (=> d!23165 m!90553))

(assert (=> d!23165 m!89569))

(declare-fun m!92865 () Bool)

(assert (=> d!23165 m!92865))

(declare-fun m!92867 () Bool)

(assert (=> d!23165 m!92867))

(assert (=> b!87248 m!89569))

(assert (=> b!87248 m!90547))

(assert (=> b!85978 d!23165))

(assert (=> b!85978 d!22631))

(assert (=> b!85978 d!22633))

(assert (=> d!22389 d!22427))

(declare-fun b!87252 () Bool)

(declare-fun e!56830 () Option!147)

(assert (=> b!87252 (= e!56830 None!145)))

(declare-fun d!23167 () Bool)

(declare-fun c!14366 () Bool)

(assert (=> d!23167 (= c!14366 (and ((_ is Cons!1505) (t!5222 lt!40355)) (= (_1!1105 (h!2096 (t!5222 lt!40355))) (_1!1105 lt!40192))))))

(declare-fun e!56829 () Option!147)

(assert (=> d!23167 (= (getValueByKey!141 (t!5222 lt!40355) (_1!1105 lt!40192)) e!56829)))

(declare-fun b!87250 () Bool)

(assert (=> b!87250 (= e!56829 e!56830)))

(declare-fun c!14367 () Bool)

(assert (=> b!87250 (= c!14367 (and ((_ is Cons!1505) (t!5222 lt!40355)) (not (= (_1!1105 (h!2096 (t!5222 lt!40355))) (_1!1105 lt!40192)))))))

(declare-fun b!87251 () Bool)

(assert (=> b!87251 (= e!56830 (getValueByKey!141 (t!5222 (t!5222 lt!40355)) (_1!1105 lt!40192)))))

(declare-fun b!87249 () Bool)

(assert (=> b!87249 (= e!56829 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40355)))))))

(assert (= (and d!23167 c!14366) b!87249))

(assert (= (and d!23167 (not c!14366)) b!87250))

(assert (= (and b!87250 c!14367) b!87251))

(assert (= (and b!87250 (not c!14367)) b!87252))

(declare-fun m!92869 () Bool)

(assert (=> b!87251 m!92869))

(assert (=> b!86007 d!23167))

(declare-fun d!23169 () Bool)

(declare-fun lt!41388 () Bool)

(assert (=> d!23169 (= lt!41388 (select (content!90 lt!40366) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun e!56832 () Bool)

(assert (=> d!23169 (= lt!41388 e!56832)))

(declare-fun res!44763 () Bool)

(assert (=> d!23169 (=> (not res!44763) (not e!56832))))

(assert (=> d!23169 (= res!44763 ((_ is Cons!1505) lt!40366))))

(assert (=> d!23169 (= (contains!749 lt!40366 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))) lt!41388)))

(declare-fun b!87253 () Bool)

(declare-fun e!56831 () Bool)

(assert (=> b!87253 (= e!56832 e!56831)))

(declare-fun res!44762 () Bool)

(assert (=> b!87253 (=> res!44762 e!56831)))

(assert (=> b!87253 (= res!44762 (= (h!2096 lt!40366) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!87254 () Bool)

(assert (=> b!87254 (= e!56831 (contains!749 (t!5222 lt!40366) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(assert (= (and d!23169 res!44763) b!87253))

(assert (= (and b!87253 (not res!44762)) b!87254))

(declare-fun m!92871 () Bool)

(assert (=> d!23169 m!92871))

(declare-fun m!92873 () Bool)

(assert (=> d!23169 m!92873))

(declare-fun m!92875 () Bool)

(assert (=> b!87254 m!92875))

(assert (=> b!85764 d!23169))

(declare-fun d!23171 () Bool)

(declare-fun res!44764 () Bool)

(declare-fun e!56833 () Bool)

(assert (=> d!23171 (=> res!44764 e!56833)))

(assert (=> d!23171 (= res!44764 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40435)))))

(assert (=> d!23171 (= (containsKey!144 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!40435) e!56833)))

(declare-fun b!87255 () Bool)

(declare-fun e!56834 () Bool)

(assert (=> b!87255 (= e!56833 e!56834)))

(declare-fun res!44765 () Bool)

(assert (=> b!87255 (=> (not res!44765) (not e!56834))))

(assert (=> b!87255 (= res!44765 (and (or (not ((_ is Cons!1505) (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) (bvsle (_1!1105 (h!2096 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40435)) ((_ is Cons!1505) (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))) lt!40435)))))

(declare-fun b!87256 () Bool)

(assert (=> b!87256 (= e!56834 (containsKey!144 (t!5222 (toList!736 (+!107 lt!40431 (tuple2!2189 lt!40427 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))) lt!40435))))

(assert (= (and d!23171 (not res!44764)) b!87255))

(assert (= (and b!87255 res!44765) b!87256))

(declare-fun m!92877 () Bool)

(assert (=> b!87256 m!92877))

(assert (=> d!22189 d!23171))

(declare-fun d!23173 () Bool)

(assert (=> d!23173 (isDefined!93 (getValueByKey!141 (toList!736 lt!40372) (_1!1105 lt!40182)))))

(declare-fun lt!41389 () Unit!2498)

(assert (=> d!23173 (= lt!41389 (choose!517 (toList!736 lt!40372) (_1!1105 lt!40182)))))

(declare-fun e!56835 () Bool)

(assert (=> d!23173 e!56835))

(declare-fun res!44766 () Bool)

(assert (=> d!23173 (=> (not res!44766) (not e!56835))))

(assert (=> d!23173 (= res!44766 (isStrictlySorted!285 (toList!736 lt!40372)))))

(assert (=> d!23173 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40372) (_1!1105 lt!40182)) lt!41389)))

(declare-fun b!87257 () Bool)

(assert (=> b!87257 (= e!56835 (containsKey!144 (toList!736 lt!40372) (_1!1105 lt!40182)))))

(assert (= (and d!23173 res!44766) b!87257))

(assert (=> d!23173 m!89875))

(assert (=> d!23173 m!89875))

(assert (=> d!23173 m!90223))

(declare-fun m!92879 () Bool)

(assert (=> d!23173 m!92879))

(declare-fun m!92881 () Bool)

(assert (=> d!23173 m!92881))

(assert (=> b!87257 m!90219))

(assert (=> b!85706 d!23173))

(assert (=> b!85706 d!22539))

(assert (=> b!85706 d!22283))

(declare-fun b!87261 () Bool)

(declare-fun e!56837 () Option!147)

(assert (=> b!87261 (= e!56837 None!145)))

(declare-fun c!14368 () Bool)

(declare-fun d!23175 () Bool)

(assert (=> d!23175 (= c!14368 (and ((_ is Cons!1505) (toList!736 lt!40722)) (= (_1!1105 (h!2096 (toList!736 lt!40722))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56836 () Option!147)

(assert (=> d!23175 (= (getValueByKey!141 (toList!736 lt!40722) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56836)))

(declare-fun b!87259 () Bool)

(assert (=> b!87259 (= e!56836 e!56837)))

(declare-fun c!14369 () Bool)

(assert (=> b!87259 (= c!14369 (and ((_ is Cons!1505) (toList!736 lt!40722)) (not (= (_1!1105 (h!2096 (toList!736 lt!40722))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!87260 () Bool)

(assert (=> b!87260 (= e!56837 (getValueByKey!141 (t!5222 (toList!736 lt!40722)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87258 () Bool)

(assert (=> b!87258 (= e!56836 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40722)))))))

(assert (= (and d!23175 c!14368) b!87258))

(assert (= (and d!23175 (not c!14368)) b!87259))

(assert (= (and b!87259 c!14369) b!87260))

(assert (= (and b!87259 (not c!14369)) b!87261))

(declare-fun m!92883 () Bool)

(assert (=> b!87260 m!92883))

(assert (=> b!85995 d!23175))

(declare-fun d!23177 () Bool)

(declare-fun lt!41390 () Bool)

(assert (=> d!23177 (= lt!41390 (select (content!90 (t!5222 (toList!736 lt!40357))) lt!40192))))

(declare-fun e!56839 () Bool)

(assert (=> d!23177 (= lt!41390 e!56839)))

(declare-fun res!44768 () Bool)

(assert (=> d!23177 (=> (not res!44768) (not e!56839))))

(assert (=> d!23177 (= res!44768 ((_ is Cons!1505) (t!5222 (toList!736 lt!40357))))))

(assert (=> d!23177 (= (contains!749 (t!5222 (toList!736 lt!40357)) lt!40192) lt!41390)))

(declare-fun b!87262 () Bool)

(declare-fun e!56838 () Bool)

(assert (=> b!87262 (= e!56839 e!56838)))

(declare-fun res!44767 () Bool)

(assert (=> b!87262 (=> res!44767 e!56838)))

(assert (=> b!87262 (= res!44767 (= (h!2096 (t!5222 (toList!736 lt!40357))) lt!40192))))

(declare-fun b!87263 () Bool)

(assert (=> b!87263 (= e!56838 (contains!749 (t!5222 (t!5222 (toList!736 lt!40357))) lt!40192))))

(assert (= (and d!23177 res!44768) b!87262))

(assert (= (and b!87262 (not res!44767)) b!87263))

(assert (=> d!23177 m!91103))

(declare-fun m!92885 () Bool)

(assert (=> d!23177 m!92885))

(declare-fun m!92887 () Bool)

(assert (=> b!87263 m!92887))

(assert (=> b!86149 d!23177))

(declare-fun d!23179 () Bool)

(declare-fun res!44769 () Bool)

(declare-fun e!56840 () Bool)

(assert (=> d!23179 (=> res!44769 e!56840)))

(assert (=> d!23179 (= res!44769 (and ((_ is Cons!1505) lt!40351) (= (_1!1105 (h!2096 lt!40351)) (_1!1105 lt!40197))))))

(assert (=> d!23179 (= (containsKey!144 lt!40351 (_1!1105 lt!40197)) e!56840)))

(declare-fun b!87264 () Bool)

(declare-fun e!56841 () Bool)

(assert (=> b!87264 (= e!56840 e!56841)))

(declare-fun res!44770 () Bool)

(assert (=> b!87264 (=> (not res!44770) (not e!56841))))

(assert (=> b!87264 (= res!44770 (and (or (not ((_ is Cons!1505) lt!40351)) (bvsle (_1!1105 (h!2096 lt!40351)) (_1!1105 lt!40197))) ((_ is Cons!1505) lt!40351) (bvslt (_1!1105 (h!2096 lt!40351)) (_1!1105 lt!40197))))))

(declare-fun b!87265 () Bool)

(assert (=> b!87265 (= e!56841 (containsKey!144 (t!5222 lt!40351) (_1!1105 lt!40197)))))

(assert (= (and d!23179 (not res!44769)) b!87264))

(assert (= (and b!87264 res!44770) b!87265))

(declare-fun m!92889 () Bool)

(assert (=> b!87265 m!92889))

(assert (=> b!85960 d!23179))

(declare-fun b!87266 () Bool)

(declare-fun e!56845 () List!1509)

(declare-fun call!8304 () List!1509)

(assert (=> b!87266 (= e!56845 call!8304)))

(declare-fun bm!8301 () Bool)

(declare-fun c!14373 () Bool)

(declare-fun e!56844 () List!1509)

(declare-fun call!8305 () List!1509)

(assert (=> bm!8301 (= call!8305 ($colon$colon!71 e!56844 (ite c!14373 (h!2096 (t!5222 (toList!736 lt!40188))) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192)))))))

(declare-fun c!14372 () Bool)

(assert (=> bm!8301 (= c!14372 c!14373)))

(declare-fun b!87267 () Bool)

(declare-fun c!14371 () Bool)

(assert (=> b!87267 (= c!14371 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40188))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40188)))) (_1!1105 lt!40192))))))

(declare-fun e!56842 () List!1509)

(assert (=> b!87267 (= e!56845 e!56842)))

(declare-fun b!87268 () Bool)

(declare-fun e!56846 () Bool)

(declare-fun lt!41391 () List!1509)

(assert (=> b!87268 (= e!56846 (contains!749 lt!41391 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!87269 () Bool)

(declare-fun res!44771 () Bool)

(assert (=> b!87269 (=> (not res!44771) (not e!56846))))

(assert (=> b!87269 (= res!44771 (containsKey!144 lt!41391 (_1!1105 lt!40192)))))

(declare-fun bm!8302 () Bool)

(assert (=> bm!8302 (= call!8304 call!8305)))

(declare-fun b!87270 () Bool)

(assert (=> b!87270 (= e!56844 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 lt!40188))) (_1!1105 lt!40192) (_2!1105 lt!40192)))))

(declare-fun b!87271 () Bool)

(declare-fun c!14370 () Bool)

(assert (=> b!87271 (= e!56844 (ite c!14370 (t!5222 (t!5222 (toList!736 lt!40188))) (ite c!14371 (Cons!1505 (h!2096 (t!5222 (toList!736 lt!40188))) (t!5222 (t!5222 (toList!736 lt!40188)))) Nil!1506)))))

(declare-fun b!87272 () Bool)

(declare-fun e!56843 () List!1509)

(assert (=> b!87272 (= e!56843 call!8305)))

(declare-fun bm!8303 () Bool)

(declare-fun call!8306 () List!1509)

(assert (=> bm!8303 (= call!8306 call!8304)))

(declare-fun d!23181 () Bool)

(assert (=> d!23181 e!56846))

(declare-fun res!44772 () Bool)

(assert (=> d!23181 (=> (not res!44772) (not e!56846))))

(assert (=> d!23181 (= res!44772 (isStrictlySorted!285 lt!41391))))

(assert (=> d!23181 (= lt!41391 e!56843)))

(assert (=> d!23181 (= c!14373 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40188))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40188)))) (_1!1105 lt!40192))))))

(assert (=> d!23181 (isStrictlySorted!285 (t!5222 (toList!736 lt!40188)))))

(assert (=> d!23181 (= (insertStrictlySorted!61 (t!5222 (toList!736 lt!40188)) (_1!1105 lt!40192) (_2!1105 lt!40192)) lt!41391)))

(declare-fun b!87273 () Bool)

(assert (=> b!87273 (= e!56842 call!8306)))

(declare-fun b!87274 () Bool)

(assert (=> b!87274 (= e!56843 e!56845)))

(assert (=> b!87274 (= c!14370 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40188))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40188)))) (_1!1105 lt!40192))))))

(declare-fun b!87275 () Bool)

(assert (=> b!87275 (= e!56842 call!8306)))

(assert (= (and d!23181 c!14373) b!87272))

(assert (= (and d!23181 (not c!14373)) b!87274))

(assert (= (and b!87274 c!14370) b!87266))

(assert (= (and b!87274 (not c!14370)) b!87267))

(assert (= (and b!87267 c!14371) b!87273))

(assert (= (and b!87267 (not c!14371)) b!87275))

(assert (= (or b!87273 b!87275) bm!8303))

(assert (= (or b!87266 bm!8303) bm!8302))

(assert (= (or b!87272 bm!8302) bm!8301))

(assert (= (and bm!8301 c!14372) b!87270))

(assert (= (and bm!8301 (not c!14372)) b!87271))

(assert (= (and d!23181 res!44772) b!87269))

(assert (= (and b!87269 res!44771) b!87268))

(declare-fun m!92891 () Bool)

(assert (=> b!87268 m!92891))

(declare-fun m!92893 () Bool)

(assert (=> b!87269 m!92893))

(declare-fun m!92895 () Bool)

(assert (=> bm!8301 m!92895))

(declare-fun m!92897 () Bool)

(assert (=> d!23181 m!92897))

(assert (=> d!23181 m!91821))

(declare-fun m!92899 () Bool)

(assert (=> b!87270 m!92899))

(assert (=> b!86015 d!23181))

(declare-fun d!23183 () Bool)

(declare-fun res!44773 () Bool)

(declare-fun e!56847 () Bool)

(assert (=> d!23183 (=> res!44773 e!56847)))

(assert (=> d!23183 (= res!44773 (and ((_ is Cons!1505) (toList!736 lt!40328)) (= (_1!1105 (h!2096 (toList!736 lt!40328))) (_1!1105 lt!40197))))))

(assert (=> d!23183 (= (containsKey!144 (toList!736 lt!40328) (_1!1105 lt!40197)) e!56847)))

(declare-fun b!87276 () Bool)

(declare-fun e!56848 () Bool)

(assert (=> b!87276 (= e!56847 e!56848)))

(declare-fun res!44774 () Bool)

(assert (=> b!87276 (=> (not res!44774) (not e!56848))))

(assert (=> b!87276 (= res!44774 (and (or (not ((_ is Cons!1505) (toList!736 lt!40328))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40328))) (_1!1105 lt!40197))) ((_ is Cons!1505) (toList!736 lt!40328)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40328))) (_1!1105 lt!40197))))))

(declare-fun b!87277 () Bool)

(assert (=> b!87277 (= e!56848 (containsKey!144 (t!5222 (toList!736 lt!40328)) (_1!1105 lt!40197)))))

(assert (= (and d!23183 (not res!44773)) b!87276))

(assert (= (and b!87276 res!44774) b!87277))

(declare-fun m!92901 () Bool)

(assert (=> b!87277 m!92901))

(assert (=> d!22267 d!23183))

(declare-fun d!23185 () Bool)

(assert (=> d!23185 (= (size!2160 newMap!16) (bvadd (_size!426 newMap!16) (bvsdiv (bvadd (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!85894 d!23185))

(assert (=> d!22417 d!22119))

(declare-fun b!87281 () Bool)

(declare-fun e!56850 () Option!147)

(assert (=> b!87281 (= e!56850 None!145)))

(declare-fun d!23187 () Bool)

(declare-fun c!14374 () Bool)

(assert (=> d!23187 (= c!14374 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40328))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40328)))) (_1!1105 lt!40197))))))

(declare-fun e!56849 () Option!147)

(assert (=> d!23187 (= (getValueByKey!141 (t!5222 (toList!736 lt!40328)) (_1!1105 lt!40197)) e!56849)))

(declare-fun b!87279 () Bool)

(assert (=> b!87279 (= e!56849 e!56850)))

(declare-fun c!14375 () Bool)

(assert (=> b!87279 (= c!14375 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40328))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40328)))) (_1!1105 lt!40197)))))))

(declare-fun b!87280 () Bool)

(assert (=> b!87280 (= e!56850 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40328))) (_1!1105 lt!40197)))))

(declare-fun b!87278 () Bool)

(assert (=> b!87278 (= e!56849 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40328))))))))

(assert (= (and d!23187 c!14374) b!87278))

(assert (= (and d!23187 (not c!14374)) b!87279))

(assert (= (and b!87279 c!14375) b!87280))

(assert (= (and b!87279 (not c!14375)) b!87281))

(declare-fun m!92903 () Bool)

(assert (=> b!87280 m!92903))

(assert (=> b!85926 d!23187))

(assert (=> b!85908 d!22419))

(declare-fun bm!8304 () Bool)

(declare-fun call!8307 () Bool)

(assert (=> bm!8304 (= call!8307 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4009 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992)))))))

(declare-fun b!87282 () Bool)

(declare-fun e!56852 () Bool)

(declare-fun e!56851 () Bool)

(assert (=> b!87282 (= e!56852 e!56851)))

(declare-fun lt!41394 () (_ BitVec 64))

(assert (=> b!87282 (= lt!41394 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!41392 () Unit!2498)

(assert (=> b!87282 (= lt!41392 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) lt!41394 #b00000000000000000000000000000000))))

(assert (=> b!87282 (arrayContainsKey!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) lt!41394 #b00000000000000000000000000000000)))

(declare-fun lt!41393 () Unit!2498)

(assert (=> b!87282 (= lt!41393 lt!41392)))

(declare-fun res!44775 () Bool)

(assert (=> b!87282 (= res!44775 (= (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000) (_keys!4009 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992)))) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!87282 (=> (not res!44775) (not e!56851))))

(declare-fun b!87283 () Bool)

(assert (=> b!87283 (= e!56851 call!8307)))

(declare-fun b!87284 () Bool)

(assert (=> b!87284 (= e!56852 call!8307)))

(declare-fun b!87285 () Bool)

(declare-fun e!56853 () Bool)

(assert (=> b!87285 (= e!56853 e!56852)))

(declare-fun c!14376 () Bool)

(assert (=> b!87285 (= c!14376 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!23189 () Bool)

(declare-fun res!44776 () Bool)

(assert (=> d!23189 (=> res!44776 e!56853)))

(assert (=> d!23189 (= res!44776 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!23189 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (mask!6365 (v!2648 (underlying!292 thiss!992)))) e!56853)))

(assert (= (and d!23189 (not res!44776)) b!87285))

(assert (= (and b!87285 c!14376) b!87282))

(assert (= (and b!87285 (not c!14376)) b!87284))

(assert (= (and b!87282 res!44775) b!87283))

(assert (= (or b!87283 b!87284) bm!8304))

(declare-fun m!92905 () Bool)

(assert (=> bm!8304 m!92905))

(assert (=> b!87282 m!91675))

(declare-fun m!92907 () Bool)

(assert (=> b!87282 m!92907))

(declare-fun m!92909 () Bool)

(assert (=> b!87282 m!92909))

(assert (=> b!87282 m!91675))

(declare-fun m!92911 () Bool)

(assert (=> b!87282 m!92911))

(assert (=> b!87285 m!91675))

(assert (=> b!87285 m!91675))

(assert (=> b!87285 m!91677))

(assert (=> b!85754 d!23189))

(assert (=> b!86026 d!23025))

(assert (=> b!86026 d!22911))

(declare-fun d!23191 () Bool)

(declare-fun res!44777 () Bool)

(declare-fun e!56854 () Bool)

(assert (=> d!23191 (=> res!44777 e!56854)))

(assert (=> d!23191 (= res!44777 (and ((_ is Cons!1505) lt!40646) (= (_1!1105 (h!2096 lt!40646)) (_1!1105 lt!40197))))))

(assert (=> d!23191 (= (containsKey!144 lt!40646 (_1!1105 lt!40197)) e!56854)))

(declare-fun b!87286 () Bool)

(declare-fun e!56855 () Bool)

(assert (=> b!87286 (= e!56854 e!56855)))

(declare-fun res!44778 () Bool)

(assert (=> b!87286 (=> (not res!44778) (not e!56855))))

(assert (=> b!87286 (= res!44778 (and (or (not ((_ is Cons!1505) lt!40646)) (bvsle (_1!1105 (h!2096 lt!40646)) (_1!1105 lt!40197))) ((_ is Cons!1505) lt!40646) (bvslt (_1!1105 (h!2096 lt!40646)) (_1!1105 lt!40197))))))

(declare-fun b!87287 () Bool)

(assert (=> b!87287 (= e!56855 (containsKey!144 (t!5222 lt!40646) (_1!1105 lt!40197)))))

(assert (= (and d!23191 (not res!44777)) b!87286))

(assert (= (and b!87286 res!44778) b!87287))

(declare-fun m!92913 () Bool)

(assert (=> b!87287 m!92913))

(assert (=> b!85837 d!23191))

(assert (=> bm!8144 d!22823))

(declare-fun b!87291 () Bool)

(declare-fun e!56857 () Option!147)

(assert (=> b!87291 (= e!56857 None!145)))

(declare-fun d!23193 () Bool)

(declare-fun c!14377 () Bool)

(assert (=> d!23193 (= c!14377 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40372))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40372)))) (_1!1105 lt!40182))))))

(declare-fun e!56856 () Option!147)

(assert (=> d!23193 (= (getValueByKey!141 (t!5222 (toList!736 lt!40372)) (_1!1105 lt!40182)) e!56856)))

(declare-fun b!87289 () Bool)

(assert (=> b!87289 (= e!56856 e!56857)))

(declare-fun c!14378 () Bool)

(assert (=> b!87289 (= c!14378 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40372))) (not (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40372)))) (_1!1105 lt!40182)))))))

(declare-fun b!87290 () Bool)

(assert (=> b!87290 (= e!56857 (getValueByKey!141 (t!5222 (t!5222 (toList!736 lt!40372))) (_1!1105 lt!40182)))))

(declare-fun b!87288 () Bool)

(assert (=> b!87288 (= e!56856 (Some!146 (_2!1105 (h!2096 (t!5222 (toList!736 lt!40372))))))))

(assert (= (and d!23193 c!14377) b!87288))

(assert (= (and d!23193 (not c!14377)) b!87289))

(assert (= (and b!87289 c!14378) b!87290))

(assert (= (and b!87289 (not c!14378)) b!87291))

(declare-fun m!92915 () Bool)

(assert (=> b!87290 m!92915))

(assert (=> b!85858 d!23193))

(assert (=> b!85642 d!22887))

(declare-fun d!23195 () Bool)

(assert (=> d!23195 (not (contains!747 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540)) lt!40539))))

(declare-fun lt!41395 () Unit!2498)

(assert (=> d!23195 (= lt!41395 (choose!513 lt!40538 lt!40541 lt!40540 lt!40539))))

(declare-fun e!56858 () Bool)

(assert (=> d!23195 e!56858))

(declare-fun res!44779 () Bool)

(assert (=> d!23195 (=> (not res!44779) (not e!56858))))

(assert (=> d!23195 (= res!44779 (not (contains!747 lt!40538 lt!40539)))))

(assert (=> d!23195 (= (addStillNotContains!33 lt!40538 lt!40541 lt!40540 lt!40539) lt!41395)))

(declare-fun b!87292 () Bool)

(assert (=> b!87292 (= e!56858 (not (= lt!40541 lt!40539)))))

(assert (= (and d!23195 res!44779) b!87292))

(assert (=> d!23195 m!90049))

(assert (=> d!23195 m!90049))

(assert (=> d!23195 m!90051))

(declare-fun m!92917 () Bool)

(assert (=> d!23195 m!92917))

(declare-fun m!92919 () Bool)

(assert (=> d!23195 m!92919))

(assert (=> b!85642 d!23195))

(declare-fun d!23197 () Bool)

(declare-fun e!56859 () Bool)

(assert (=> d!23197 e!56859))

(declare-fun res!44780 () Bool)

(assert (=> d!23197 (=> (not res!44780) (not e!56859))))

(declare-fun lt!41399 () ListLongMap!1441)

(assert (=> d!23197 (= res!44780 (contains!747 lt!41399 (_1!1105 (tuple2!2189 lt!40541 lt!40540))))))

(declare-fun lt!41397 () List!1509)

(assert (=> d!23197 (= lt!41399 (ListLongMap!1442 lt!41397))))

(declare-fun lt!41396 () Unit!2498)

(declare-fun lt!41398 () Unit!2498)

(assert (=> d!23197 (= lt!41396 lt!41398)))

(assert (=> d!23197 (= (getValueByKey!141 lt!41397 (_1!1105 (tuple2!2189 lt!40541 lt!40540))) (Some!146 (_2!1105 (tuple2!2189 lt!40541 lt!40540))))))

(assert (=> d!23197 (= lt!41398 (lemmaContainsTupThenGetReturnValue!58 lt!41397 (_1!1105 (tuple2!2189 lt!40541 lt!40540)) (_2!1105 (tuple2!2189 lt!40541 lt!40540))))))

(assert (=> d!23197 (= lt!41397 (insertStrictlySorted!61 (toList!736 lt!40538) (_1!1105 (tuple2!2189 lt!40541 lt!40540)) (_2!1105 (tuple2!2189 lt!40541 lt!40540))))))

(assert (=> d!23197 (= (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540)) lt!41399)))

(declare-fun b!87293 () Bool)

(declare-fun res!44781 () Bool)

(assert (=> b!87293 (=> (not res!44781) (not e!56859))))

(assert (=> b!87293 (= res!44781 (= (getValueByKey!141 (toList!736 lt!41399) (_1!1105 (tuple2!2189 lt!40541 lt!40540))) (Some!146 (_2!1105 (tuple2!2189 lt!40541 lt!40540)))))))

(declare-fun b!87294 () Bool)

(assert (=> b!87294 (= e!56859 (contains!749 (toList!736 lt!41399) (tuple2!2189 lt!40541 lt!40540)))))

(assert (= (and d!23197 res!44780) b!87293))

(assert (= (and b!87293 res!44781) b!87294))

(declare-fun m!92921 () Bool)

(assert (=> d!23197 m!92921))

(declare-fun m!92923 () Bool)

(assert (=> d!23197 m!92923))

(declare-fun m!92925 () Bool)

(assert (=> d!23197 m!92925))

(declare-fun m!92927 () Bool)

(assert (=> d!23197 m!92927))

(declare-fun m!92929 () Bool)

(assert (=> b!87293 m!92929))

(declare-fun m!92931 () Bool)

(assert (=> b!87294 m!92931))

(assert (=> b!85642 d!23197))

(declare-fun d!23199 () Bool)

(declare-fun e!56860 () Bool)

(assert (=> d!23199 e!56860))

(declare-fun res!44782 () Bool)

(assert (=> d!23199 (=> (not res!44782) (not e!56860))))

(declare-fun lt!41403 () ListLongMap!1441)

(assert (=> d!23199 (= res!44782 (contains!747 lt!41403 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41401 () List!1509)

(assert (=> d!23199 (= lt!41403 (ListLongMap!1442 lt!41401))))

(declare-fun lt!41400 () Unit!2498)

(declare-fun lt!41402 () Unit!2498)

(assert (=> d!23199 (= lt!41400 lt!41402)))

(assert (=> d!23199 (= (getValueByKey!141 lt!41401 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23199 (= lt!41402 (lemmaContainsTupThenGetReturnValue!58 lt!41401 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23199 (= lt!41401 (insertStrictlySorted!61 (toList!736 call!8124) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23199 (= (+!107 call!8124 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41403)))

(declare-fun b!87295 () Bool)

(declare-fun res!44783 () Bool)

(assert (=> b!87295 (=> (not res!44783) (not e!56860))))

(assert (=> b!87295 (= res!44783 (= (getValueByKey!141 (toList!736 lt!41403) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!87296 () Bool)

(assert (=> b!87296 (= e!56860 (contains!749 (toList!736 lt!41403) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1204 (select (arr!1911 (_values!2320 (v!2648 (underlying!292 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!344 (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!23199 res!44782) b!87295))

(assert (= (and b!87295 res!44783) b!87296))

(declare-fun m!92933 () Bool)

(assert (=> d!23199 m!92933))

(declare-fun m!92935 () Bool)

(assert (=> d!23199 m!92935))

(declare-fun m!92937 () Bool)

(assert (=> d!23199 m!92937))

(declare-fun m!92939 () Bool)

(assert (=> d!23199 m!92939))

(declare-fun m!92941 () Bool)

(assert (=> b!87295 m!92941))

(declare-fun m!92943 () Bool)

(assert (=> b!87296 m!92943))

(assert (=> b!85642 d!23199))

(declare-fun d!23201 () Bool)

(declare-fun e!56862 () Bool)

(assert (=> d!23201 e!56862))

(declare-fun res!44784 () Bool)

(assert (=> d!23201 (=> res!44784 e!56862)))

(declare-fun lt!41405 () Bool)

(assert (=> d!23201 (= res!44784 (not lt!41405))))

(declare-fun lt!41407 () Bool)

(assert (=> d!23201 (= lt!41405 lt!41407)))

(declare-fun lt!41404 () Unit!2498)

(declare-fun e!56861 () Unit!2498)

(assert (=> d!23201 (= lt!41404 e!56861)))

(declare-fun c!14379 () Bool)

(assert (=> d!23201 (= c!14379 lt!41407)))

(assert (=> d!23201 (= lt!41407 (containsKey!144 (toList!736 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540))) lt!40539))))

(assert (=> d!23201 (= (contains!747 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540)) lt!40539) lt!41405)))

(declare-fun b!87297 () Bool)

(declare-fun lt!41406 () Unit!2498)

(assert (=> b!87297 (= e!56861 lt!41406)))

(assert (=> b!87297 (= lt!41406 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540))) lt!40539))))

(assert (=> b!87297 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540))) lt!40539))))

(declare-fun b!87298 () Bool)

(declare-fun Unit!2572 () Unit!2498)

(assert (=> b!87298 (= e!56861 Unit!2572)))

(declare-fun b!87299 () Bool)

(assert (=> b!87299 (= e!56862 (isDefined!93 (getValueByKey!141 (toList!736 (+!107 lt!40538 (tuple2!2189 lt!40541 lt!40540))) lt!40539)))))

(assert (= (and d!23201 c!14379) b!87297))

(assert (= (and d!23201 (not c!14379)) b!87298))

(assert (= (and d!23201 (not res!44784)) b!87299))

(declare-fun m!92945 () Bool)

(assert (=> d!23201 m!92945))

(declare-fun m!92947 () Bool)

(assert (=> b!87297 m!92947))

(declare-fun m!92949 () Bool)

(assert (=> b!87297 m!92949))

(assert (=> b!87297 m!92949))

(declare-fun m!92951 () Bool)

(assert (=> b!87297 m!92951))

(assert (=> b!87299 m!92949))

(assert (=> b!87299 m!92949))

(assert (=> b!87299 m!92951))

(assert (=> b!85642 d!23201))

(declare-fun d!23203 () Bool)

(assert (=> d!23203 (= (get!1207 (getValueByKey!141 (toList!736 lt!40443) lt!40423)) (v!2654 (getValueByKey!141 (toList!736 lt!40443) lt!40423)))))

(assert (=> d!22185 d!23203))

(declare-fun b!87303 () Bool)

(declare-fun e!56864 () Option!147)

(assert (=> b!87303 (= e!56864 None!145)))

(declare-fun d!23205 () Bool)

(declare-fun c!14380 () Bool)

(assert (=> d!23205 (= c!14380 (and ((_ is Cons!1505) (toList!736 lt!40443)) (= (_1!1105 (h!2096 (toList!736 lt!40443))) lt!40423)))))

(declare-fun e!56863 () Option!147)

(assert (=> d!23205 (= (getValueByKey!141 (toList!736 lt!40443) lt!40423) e!56863)))

(declare-fun b!87301 () Bool)

(assert (=> b!87301 (= e!56863 e!56864)))

(declare-fun c!14381 () Bool)

(assert (=> b!87301 (= c!14381 (and ((_ is Cons!1505) (toList!736 lt!40443)) (not (= (_1!1105 (h!2096 (toList!736 lt!40443))) lt!40423))))))

(declare-fun b!87302 () Bool)

(assert (=> b!87302 (= e!56864 (getValueByKey!141 (t!5222 (toList!736 lt!40443)) lt!40423))))

(declare-fun b!87300 () Bool)

(assert (=> b!87300 (= e!56863 (Some!146 (_2!1105 (h!2096 (toList!736 lt!40443)))))))

(assert (= (and d!23205 c!14380) b!87300))

(assert (= (and d!23205 (not c!14380)) b!87301))

(assert (= (and b!87301 c!14381) b!87302))

(assert (= (and b!87301 (not c!14381)) b!87303))

(declare-fun m!92953 () Bool)

(assert (=> b!87302 m!92953))

(assert (=> d!22185 d!23205))

(declare-fun d!23207 () Bool)

(declare-fun e!56865 () Bool)

(assert (=> d!23207 e!56865))

(declare-fun res!44785 () Bool)

(assert (=> d!23207 (=> (not res!44785) (not e!56865))))

(declare-fun lt!41411 () ListLongMap!1441)

(assert (=> d!23207 (= res!44785 (contains!747 lt!41411 (_1!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun lt!41409 () List!1509)

(assert (=> d!23207 (= lt!41411 (ListLongMap!1442 lt!41409))))

(declare-fun lt!41408 () Unit!2498)

(declare-fun lt!41410 () Unit!2498)

(assert (=> d!23207 (= lt!41408 lt!41410)))

(assert (=> d!23207 (= (getValueByKey!141 lt!41409 (_1!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23207 (= lt!41410 (lemmaContainsTupThenGetReturnValue!58 lt!41409 (_1!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23207 (= lt!41409 (insertStrictlySorted!61 (toList!736 (ite c!13955 call!8149 (ite c!13954 call!8144 call!8146))) (_1!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23207 (= (+!107 (ite c!13955 call!8149 (ite c!13954 call!8144 call!8146)) (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) lt!41411)))

(declare-fun b!87304 () Bool)

(declare-fun res!44786 () Bool)

(assert (=> b!87304 (=> (not res!44786) (not e!56865))))

(assert (=> b!87304 (= res!44786 (= (getValueByKey!141 (toList!736 lt!41411) (_1!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))))

(declare-fun b!87305 () Bool)

(assert (=> b!87305 (= e!56865 (contains!749 (toList!736 lt!41411) (ite (or c!13955 c!13954) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (= (and d!23207 res!44785) b!87304))

(assert (= (and b!87304 res!44786) b!87305))

(declare-fun m!92955 () Bool)

(assert (=> d!23207 m!92955))

(declare-fun m!92957 () Bool)

(assert (=> d!23207 m!92957))

(declare-fun m!92959 () Bool)

(assert (=> d!23207 m!92959))

(declare-fun m!92961 () Bool)

(assert (=> d!23207 m!92961))

(declare-fun m!92963 () Bool)

(assert (=> b!87304 m!92963))

(declare-fun m!92965 () Bool)

(assert (=> b!87305 m!92965))

(assert (=> bm!8140 d!23207))

(assert (=> bm!8180 d!22275))

(declare-fun b!87306 () Bool)

(declare-fun e!56869 () List!1509)

(declare-fun call!8308 () List!1509)

(assert (=> b!87306 (= e!56869 call!8308)))

(declare-fun bm!8305 () Bool)

(declare-fun c!14385 () Bool)

(declare-fun call!8309 () List!1509)

(declare-fun e!56868 () List!1509)

(assert (=> bm!8305 (= call!8309 ($colon$colon!71 e!56868 (ite c!14385 (h!2096 (t!5222 (toList!736 lt!40199))) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182)))))))

(declare-fun c!14384 () Bool)

(assert (=> bm!8305 (= c!14384 c!14385)))

(declare-fun b!87307 () Bool)

(declare-fun c!14383 () Bool)

(assert (=> b!87307 (= c!14383 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40199))) (bvsgt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40199)))) (_1!1105 lt!40182))))))

(declare-fun e!56866 () List!1509)

(assert (=> b!87307 (= e!56869 e!56866)))

(declare-fun b!87308 () Bool)

(declare-fun e!56870 () Bool)

(declare-fun lt!41412 () List!1509)

(assert (=> b!87308 (= e!56870 (contains!749 lt!41412 (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))))))

(declare-fun b!87309 () Bool)

(declare-fun res!44787 () Bool)

(assert (=> b!87309 (=> (not res!44787) (not e!56870))))

(assert (=> b!87309 (= res!44787 (containsKey!144 lt!41412 (_1!1105 lt!40182)))))

(declare-fun bm!8306 () Bool)

(assert (=> bm!8306 (= call!8308 call!8309)))

(declare-fun b!87310 () Bool)

(assert (=> b!87310 (= e!56868 (insertStrictlySorted!61 (t!5222 (t!5222 (toList!736 lt!40199))) (_1!1105 lt!40182) (_2!1105 lt!40182)))))

(declare-fun c!14382 () Bool)

(declare-fun b!87311 () Bool)

(assert (=> b!87311 (= e!56868 (ite c!14382 (t!5222 (t!5222 (toList!736 lt!40199))) (ite c!14383 (Cons!1505 (h!2096 (t!5222 (toList!736 lt!40199))) (t!5222 (t!5222 (toList!736 lt!40199)))) Nil!1506)))))

(declare-fun b!87312 () Bool)

(declare-fun e!56867 () List!1509)

(assert (=> b!87312 (= e!56867 call!8309)))

(declare-fun bm!8307 () Bool)

(declare-fun call!8310 () List!1509)

(assert (=> bm!8307 (= call!8310 call!8308)))

(declare-fun d!23209 () Bool)

(assert (=> d!23209 e!56870))

(declare-fun res!44788 () Bool)

(assert (=> d!23209 (=> (not res!44788) (not e!56870))))

(assert (=> d!23209 (= res!44788 (isStrictlySorted!285 lt!41412))))

(assert (=> d!23209 (= lt!41412 e!56867)))

(assert (=> d!23209 (= c!14385 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40199))) (bvslt (_1!1105 (h!2096 (t!5222 (toList!736 lt!40199)))) (_1!1105 lt!40182))))))

(assert (=> d!23209 (isStrictlySorted!285 (t!5222 (toList!736 lt!40199)))))

(assert (=> d!23209 (= (insertStrictlySorted!61 (t!5222 (toList!736 lt!40199)) (_1!1105 lt!40182) (_2!1105 lt!40182)) lt!41412)))

(declare-fun b!87313 () Bool)

(assert (=> b!87313 (= e!56866 call!8310)))

(declare-fun b!87314 () Bool)

(assert (=> b!87314 (= e!56867 e!56869)))

(assert (=> b!87314 (= c!14382 (and ((_ is Cons!1505) (t!5222 (toList!736 lt!40199))) (= (_1!1105 (h!2096 (t!5222 (toList!736 lt!40199)))) (_1!1105 lt!40182))))))

(declare-fun b!87315 () Bool)

(assert (=> b!87315 (= e!56866 call!8310)))

(assert (= (and d!23209 c!14385) b!87312))

(assert (= (and d!23209 (not c!14385)) b!87314))

(assert (= (and b!87314 c!14382) b!87306))

(assert (= (and b!87314 (not c!14382)) b!87307))

(assert (= (and b!87307 c!14383) b!87313))

(assert (= (and b!87307 (not c!14383)) b!87315))

(assert (= (or b!87313 b!87315) bm!8307))

(assert (= (or b!87306 bm!8307) bm!8306))

(assert (= (or b!87312 bm!8306) bm!8305))

(assert (= (and bm!8305 c!14384) b!87310))

(assert (= (and bm!8305 (not c!14384)) b!87311))

(assert (= (and d!23209 res!44788) b!87309))

(assert (= (and b!87309 res!44787) b!87308))

(declare-fun m!92967 () Bool)

(assert (=> b!87308 m!92967))

(declare-fun m!92969 () Bool)

(assert (=> b!87309 m!92969))

(declare-fun m!92971 () Bool)

(assert (=> bm!8305 m!92971))

(declare-fun m!92973 () Bool)

(assert (=> d!23209 m!92973))

(assert (=> d!23209 m!91081))

(declare-fun m!92975 () Bool)

(assert (=> b!87310 m!92975))

(assert (=> b!85769 d!23209))

(declare-fun d!23211 () Bool)

(assert (=> d!23211 (= (apply!82 lt!40636 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40636) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3706 () Bool)

(assert (= bs!3706 d!23211))

(assert (=> bs!3706 m!91097))

(assert (=> bs!3706 m!91097))

(declare-fun m!92977 () Bool)

(assert (=> bs!3706 m!92977))

(assert (=> b!85822 d!23211))

(declare-fun d!23213 () Bool)

(declare-fun e!56871 () Bool)

(assert (=> d!23213 e!56871))

(declare-fun res!44789 () Bool)

(assert (=> d!23213 (=> (not res!44789) (not e!56871))))

(declare-fun lt!41416 () ListLongMap!1441)

(assert (=> d!23213 (= res!44789 (contains!747 lt!41416 (_1!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun lt!41414 () List!1509)

(assert (=> d!23213 (= lt!41416 (ListLongMap!1442 lt!41414))))

(declare-fun lt!41413 () Unit!2498)

(declare-fun lt!41415 () Unit!2498)

(assert (=> d!23213 (= lt!41413 lt!41415)))

(assert (=> d!23213 (= (getValueByKey!141 lt!41414 (_1!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23213 (= lt!41415 (lemmaContainsTupThenGetReturnValue!58 lt!41414 (_1!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23213 (= lt!41414 (insertStrictlySorted!61 (toList!736 (ite c!14043 call!8191 (ite c!14042 call!8186 call!8188))) (_1!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23213 (= (+!107 (ite c!14043 call!8191 (ite c!14042 call!8186 call!8188)) (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) lt!41416)))

(declare-fun b!87316 () Bool)

(declare-fun res!44790 () Bool)

(assert (=> b!87316 (=> (not res!44790) (not e!56871))))

(assert (=> b!87316 (= res!44790 (= (getValueByKey!141 (toList!736 lt!41416) (_1!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!146 (_2!1105 (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))))

(declare-fun b!87317 () Bool)

(assert (=> b!87317 (= e!56871 (contains!749 (toList!736 lt!41416) (ite (or c!14043 c!14042) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (= (and d!23213 res!44789) b!87316))

(assert (= (and b!87316 res!44790) b!87317))

(declare-fun m!92979 () Bool)

(assert (=> d!23213 m!92979))

(declare-fun m!92981 () Bool)

(assert (=> d!23213 m!92981))

(declare-fun m!92983 () Bool)

(assert (=> d!23213 m!92983))

(declare-fun m!92985 () Bool)

(assert (=> d!23213 m!92985))

(declare-fun m!92987 () Bool)

(assert (=> b!87316 m!92987))

(declare-fun m!92989 () Bool)

(assert (=> b!87317 m!92989))

(assert (=> bm!8182 d!23213))

(declare-fun d!23215 () Bool)

(assert (=> d!23215 (= (apply!82 (+!107 lt!40437 (tuple2!2189 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40434) (apply!82 lt!40437 lt!40434))))

(assert (=> d!23215 true))

(declare-fun _$34!843 () Unit!2498)

(assert (=> d!23215 (= (choose!507 lt!40437 lt!40428 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40434) _$34!843)))

(declare-fun bs!3707 () Bool)

(assert (= bs!3707 d!23215))

(assert (=> bs!3707 m!89927))

(assert (=> bs!3707 m!89927))

(assert (=> bs!3707 m!89929))

(assert (=> bs!3707 m!89935))

(assert (=> d!22197 d!23215))

(assert (=> d!22197 d!22203))

(assert (=> d!22197 d!22191))

(assert (=> d!22197 d!22193))

(declare-fun d!23217 () Bool)

(declare-fun e!56873 () Bool)

(assert (=> d!23217 e!56873))

(declare-fun res!44791 () Bool)

(assert (=> d!23217 (=> res!44791 e!56873)))

(declare-fun lt!41418 () Bool)

(assert (=> d!23217 (= res!44791 (not lt!41418))))

(declare-fun lt!41420 () Bool)

(assert (=> d!23217 (= lt!41418 lt!41420)))

(declare-fun lt!41417 () Unit!2498)

(declare-fun e!56872 () Unit!2498)

(assert (=> d!23217 (= lt!41417 e!56872)))

(declare-fun c!14386 () Bool)

(assert (=> d!23217 (= c!14386 lt!41420)))

(assert (=> d!23217 (= lt!41420 (containsKey!144 (toList!736 lt!40437) lt!40434))))

(assert (=> d!23217 (= (contains!747 lt!40437 lt!40434) lt!41418)))

(declare-fun b!87318 () Bool)

(declare-fun lt!41419 () Unit!2498)

(assert (=> b!87318 (= e!56872 lt!41419)))

(assert (=> b!87318 (= lt!41419 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40437) lt!40434))))

(assert (=> b!87318 (isDefined!93 (getValueByKey!141 (toList!736 lt!40437) lt!40434))))

(declare-fun b!87319 () Bool)

(declare-fun Unit!2573 () Unit!2498)

(assert (=> b!87319 (= e!56872 Unit!2573)))

(declare-fun b!87320 () Bool)

(assert (=> b!87320 (= e!56873 (isDefined!93 (getValueByKey!141 (toList!736 lt!40437) lt!40434)))))

(assert (= (and d!23217 c!14386) b!87318))

(assert (= (and d!23217 (not c!14386)) b!87319))

(assert (= (and d!23217 (not res!44791)) b!87320))

(declare-fun m!92991 () Bool)

(assert (=> d!23217 m!92991))

(declare-fun m!92993 () Bool)

(assert (=> b!87318 m!92993))

(assert (=> b!87318 m!90131))

(assert (=> b!87318 m!90131))

(declare-fun m!92995 () Bool)

(assert (=> b!87318 m!92995))

(assert (=> b!87320 m!90131))

(assert (=> b!87320 m!90131))

(assert (=> b!87320 m!92995))

(assert (=> d!22197 d!23217))

(declare-fun d!23219 () Bool)

(declare-fun res!44792 () Bool)

(declare-fun e!56874 () Bool)

(assert (=> d!23219 (=> res!44792 e!56874)))

(assert (=> d!23219 (= res!44792 (and ((_ is Cons!1505) (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (= (_1!1105 (h!2096 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(assert (=> d!23219 (= (containsKey!144 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) e!56874)))

(declare-fun b!87321 () Bool)

(declare-fun e!56875 () Bool)

(assert (=> b!87321 (= e!56874 e!56875)))

(declare-fun res!44793 () Bool)

(assert (=> b!87321 (=> (not res!44793) (not e!56875))))

(assert (=> b!87321 (= res!44793 (and (or (not ((_ is Cons!1505) (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (bvsle (_1!1105 (h!2096 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))) ((_ is Cons!1505) (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (bvslt (_1!1105 (h!2096 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))))

(declare-fun b!87322 () Bool)

(assert (=> b!87322 (= e!56875 (containsKey!144 (t!5222 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!23219 (not res!44792)) b!87321))

(assert (= (and b!87321 res!44793) b!87322))

(assert (=> b!87322 m!89569))

(declare-fun m!92997 () Bool)

(assert (=> b!87322 m!92997))

(assert (=> d!22331 d!23219))

(declare-fun d!23221 () Bool)

(declare-fun e!56877 () Bool)

(assert (=> d!23221 e!56877))

(declare-fun res!44794 () Bool)

(assert (=> d!23221 (=> res!44794 e!56877)))

(declare-fun lt!41422 () Bool)

(assert (=> d!23221 (= res!44794 (not lt!41422))))

(declare-fun lt!41424 () Bool)

(assert (=> d!23221 (= lt!41422 lt!41424)))

(declare-fun lt!41421 () Unit!2498)

(declare-fun e!56876 () Unit!2498)

(assert (=> d!23221 (= lt!41421 e!56876)))

(declare-fun c!14387 () Bool)

(assert (=> d!23221 (= c!14387 lt!41424)))

(assert (=> d!23221 (= lt!41424 (containsKey!144 (toList!736 lt!40669) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(assert (=> d!23221 (= (contains!747 lt!40669 (_1!1105 (tuple2!2189 lt!40347 lt!40346))) lt!41422)))

(declare-fun b!87323 () Bool)

(declare-fun lt!41423 () Unit!2498)

(assert (=> b!87323 (= e!56876 lt!41423)))

(assert (=> b!87323 (= lt!41423 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40669) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(assert (=> b!87323 (isDefined!93 (getValueByKey!141 (toList!736 lt!40669) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun b!87324 () Bool)

(declare-fun Unit!2574 () Unit!2498)

(assert (=> b!87324 (= e!56876 Unit!2574)))

(declare-fun b!87325 () Bool)

(assert (=> b!87325 (= e!56877 (isDefined!93 (getValueByKey!141 (toList!736 lt!40669) (_1!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(assert (= (and d!23221 c!14387) b!87323))

(assert (= (and d!23221 (not c!14387)) b!87324))

(assert (= (and d!23221 (not res!44794)) b!87325))

(declare-fun m!92999 () Bool)

(assert (=> d!23221 m!92999))

(declare-fun m!93001 () Bool)

(assert (=> b!87323 m!93001))

(assert (=> b!87323 m!90461))

(assert (=> b!87323 m!90461))

(declare-fun m!93003 () Bool)

(assert (=> b!87323 m!93003))

(assert (=> b!87325 m!90461))

(assert (=> b!87325 m!90461))

(assert (=> b!87325 m!93003))

(assert (=> d!22301 d!23221))

(declare-fun b!87329 () Bool)

(declare-fun e!56879 () Option!147)

(assert (=> b!87329 (= e!56879 None!145)))

(declare-fun c!14388 () Bool)

(declare-fun d!23223 () Bool)

(assert (=> d!23223 (= c!14388 (and ((_ is Cons!1505) lt!40667) (= (_1!1105 (h!2096 lt!40667)) (_1!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(declare-fun e!56878 () Option!147)

(assert (=> d!23223 (= (getValueByKey!141 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346))) e!56878)))

(declare-fun b!87327 () Bool)

(assert (=> b!87327 (= e!56878 e!56879)))

(declare-fun c!14389 () Bool)

(assert (=> b!87327 (= c!14389 (and ((_ is Cons!1505) lt!40667) (not (= (_1!1105 (h!2096 lt!40667)) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))))

(declare-fun b!87328 () Bool)

(assert (=> b!87328 (= e!56879 (getValueByKey!141 (t!5222 lt!40667) (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun b!87326 () Bool)

(assert (=> b!87326 (= e!56878 (Some!146 (_2!1105 (h!2096 lt!40667))))))

(assert (= (and d!23223 c!14388) b!87326))

(assert (= (and d!23223 (not c!14388)) b!87327))

(assert (= (and b!87327 c!14389) b!87328))

(assert (= (and b!87327 (not c!14389)) b!87329))

(declare-fun m!93005 () Bool)

(assert (=> b!87328 m!93005))

(assert (=> d!22301 d!23223))

(declare-fun d!23225 () Bool)

(assert (=> d!23225 (= (getValueByKey!141 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346))) (Some!146 (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun lt!41425 () Unit!2498)

(assert (=> d!23225 (= lt!41425 (choose!511 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun e!56880 () Bool)

(assert (=> d!23225 e!56880))

(declare-fun res!44795 () Bool)

(assert (=> d!23225 (=> (not res!44795) (not e!56880))))

(assert (=> d!23225 (= res!44795 (isStrictlySorted!285 lt!40667))))

(assert (=> d!23225 (= (lemmaContainsTupThenGetReturnValue!58 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))) lt!41425)))

(declare-fun b!87330 () Bool)

(declare-fun res!44796 () Bool)

(assert (=> b!87330 (=> (not res!44796) (not e!56880))))

(assert (=> b!87330 (= res!44796 (containsKey!144 lt!40667 (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun b!87331 () Bool)

(assert (=> b!87331 (= e!56880 (contains!749 lt!40667 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(assert (= (and d!23225 res!44795) b!87330))

(assert (= (and b!87330 res!44796) b!87331))

(assert (=> d!23225 m!90455))

(declare-fun m!93007 () Bool)

(assert (=> d!23225 m!93007))

(declare-fun m!93009 () Bool)

(assert (=> d!23225 m!93009))

(declare-fun m!93011 () Bool)

(assert (=> b!87330 m!93011))

(declare-fun m!93013 () Bool)

(assert (=> b!87331 m!93013))

(assert (=> d!22301 d!23225))

(declare-fun b!87332 () Bool)

(declare-fun e!56884 () List!1509)

(declare-fun call!8311 () List!1509)

(assert (=> b!87332 (= e!56884 call!8311)))

(declare-fun bm!8308 () Bool)

(declare-fun e!56883 () List!1509)

(declare-fun c!14393 () Bool)

(declare-fun call!8312 () List!1509)

(assert (=> bm!8308 (= call!8312 ($colon$colon!71 e!56883 (ite c!14393 (h!2096 (toList!736 lt!40344)) (tuple2!2189 (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))))

(declare-fun c!14392 () Bool)

(assert (=> bm!8308 (= c!14392 c!14393)))

(declare-fun c!14391 () Bool)

(declare-fun b!87333 () Bool)

(assert (=> b!87333 (= c!14391 (and ((_ is Cons!1505) (toList!736 lt!40344)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40344))) (_1!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(declare-fun e!56881 () List!1509)

(assert (=> b!87333 (= e!56884 e!56881)))

(declare-fun b!87334 () Bool)

(declare-fun lt!41426 () List!1509)

(declare-fun e!56885 () Bool)

(assert (=> b!87334 (= e!56885 (contains!749 lt!41426 (tuple2!2189 (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(declare-fun b!87335 () Bool)

(declare-fun res!44797 () Bool)

(assert (=> b!87335 (=> (not res!44797) (not e!56885))))

(assert (=> b!87335 (= res!44797 (containsKey!144 lt!41426 (_1!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun bm!8309 () Bool)

(assert (=> bm!8309 (= call!8311 call!8312)))

(declare-fun b!87336 () Bool)

(assert (=> b!87336 (= e!56883 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40344)) (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))))))

(declare-fun b!87337 () Bool)

(declare-fun c!14390 () Bool)

(assert (=> b!87337 (= e!56883 (ite c!14390 (t!5222 (toList!736 lt!40344)) (ite c!14391 (Cons!1505 (h!2096 (toList!736 lt!40344)) (t!5222 (toList!736 lt!40344))) Nil!1506)))))

(declare-fun b!87338 () Bool)

(declare-fun e!56882 () List!1509)

(assert (=> b!87338 (= e!56882 call!8312)))

(declare-fun bm!8310 () Bool)

(declare-fun call!8313 () List!1509)

(assert (=> bm!8310 (= call!8313 call!8311)))

(declare-fun d!23227 () Bool)

(assert (=> d!23227 e!56885))

(declare-fun res!44798 () Bool)

(assert (=> d!23227 (=> (not res!44798) (not e!56885))))

(assert (=> d!23227 (= res!44798 (isStrictlySorted!285 lt!41426))))

(assert (=> d!23227 (= lt!41426 e!56882)))

(assert (=> d!23227 (= c!14393 (and ((_ is Cons!1505) (toList!736 lt!40344)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40344))) (_1!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(assert (=> d!23227 (isStrictlySorted!285 (toList!736 lt!40344))))

(assert (=> d!23227 (= (insertStrictlySorted!61 (toList!736 lt!40344) (_1!1105 (tuple2!2189 lt!40347 lt!40346)) (_2!1105 (tuple2!2189 lt!40347 lt!40346))) lt!41426)))

(declare-fun b!87339 () Bool)

(assert (=> b!87339 (= e!56881 call!8313)))

(declare-fun b!87340 () Bool)

(assert (=> b!87340 (= e!56882 e!56884)))

(assert (=> b!87340 (= c!14390 (and ((_ is Cons!1505) (toList!736 lt!40344)) (= (_1!1105 (h!2096 (toList!736 lt!40344))) (_1!1105 (tuple2!2189 lt!40347 lt!40346)))))))

(declare-fun b!87341 () Bool)

(assert (=> b!87341 (= e!56881 call!8313)))

(assert (= (and d!23227 c!14393) b!87338))

(assert (= (and d!23227 (not c!14393)) b!87340))

(assert (= (and b!87340 c!14390) b!87332))

(assert (= (and b!87340 (not c!14390)) b!87333))

(assert (= (and b!87333 c!14391) b!87339))

(assert (= (and b!87333 (not c!14391)) b!87341))

(assert (= (or b!87339 b!87341) bm!8310))

(assert (= (or b!87332 bm!8310) bm!8309))

(assert (= (or b!87338 bm!8309) bm!8308))

(assert (= (and bm!8308 c!14392) b!87336))

(assert (= (and bm!8308 (not c!14392)) b!87337))

(assert (= (and d!23227 res!44798) b!87335))

(assert (= (and b!87335 res!44797) b!87334))

(declare-fun m!93015 () Bool)

(assert (=> b!87334 m!93015))

(declare-fun m!93017 () Bool)

(assert (=> b!87335 m!93017))

(declare-fun m!93019 () Bool)

(assert (=> bm!8308 m!93019))

(declare-fun m!93021 () Bool)

(assert (=> d!23227 m!93021))

(declare-fun m!93023 () Bool)

(assert (=> d!23227 m!93023))

(declare-fun m!93025 () Bool)

(assert (=> b!87336 m!93025))

(assert (=> d!22301 d!23227))

(declare-fun b!87345 () Bool)

(declare-fun e!56887 () Option!147)

(assert (=> b!87345 (= e!56887 None!145)))

(declare-fun d!23229 () Bool)

(declare-fun c!14394 () Bool)

(assert (=> d!23229 (= c!14394 (and ((_ is Cons!1505) (t!5222 lt!40351)) (= (_1!1105 (h!2096 (t!5222 lt!40351))) (_1!1105 lt!40197))))))

(declare-fun e!56886 () Option!147)

(assert (=> d!23229 (= (getValueByKey!141 (t!5222 lt!40351) (_1!1105 lt!40197)) e!56886)))

(declare-fun b!87343 () Bool)

(assert (=> b!87343 (= e!56886 e!56887)))

(declare-fun c!14395 () Bool)

(assert (=> b!87343 (= c!14395 (and ((_ is Cons!1505) (t!5222 lt!40351)) (not (= (_1!1105 (h!2096 (t!5222 lt!40351))) (_1!1105 lt!40197)))))))

(declare-fun b!87344 () Bool)

(assert (=> b!87344 (= e!56887 (getValueByKey!141 (t!5222 (t!5222 lt!40351)) (_1!1105 lt!40197)))))

(declare-fun b!87342 () Bool)

(assert (=> b!87342 (= e!56886 (Some!146 (_2!1105 (h!2096 (t!5222 lt!40351)))))))

(assert (= (and d!23229 c!14394) b!87342))

(assert (= (and d!23229 (not c!14394)) b!87343))

(assert (= (and b!87343 c!14395) b!87344))

(assert (= (and b!87343 (not c!14395)) b!87345))

(declare-fun m!93027 () Bool)

(assert (=> b!87344 m!93027))

(assert (=> b!85958 d!23229))

(declare-fun lt!41427 () Bool)

(declare-fun d!23231 () Bool)

(assert (=> d!23231 (= lt!41427 (select (content!90 (toList!736 lt!40927)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun e!56889 () Bool)

(assert (=> d!23231 (= lt!41427 e!56889)))

(declare-fun res!44800 () Bool)

(assert (=> d!23231 (=> (not res!44800) (not e!56889))))

(assert (=> d!23231 (= res!44800 ((_ is Cons!1505) (toList!736 lt!40927)))))

(assert (=> d!23231 (= (contains!749 (toList!736 lt!40927) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41427)))

(declare-fun b!87346 () Bool)

(declare-fun e!56888 () Bool)

(assert (=> b!87346 (= e!56889 e!56888)))

(declare-fun res!44799 () Bool)

(assert (=> b!87346 (=> res!44799 e!56888)))

(assert (=> b!87346 (= res!44799 (= (h!2096 (toList!736 lt!40927)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun b!87347 () Bool)

(assert (=> b!87347 (= e!56888 (contains!749 (t!5222 (toList!736 lt!40927)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!23231 res!44800) b!87346))

(assert (= (and b!87346 (not res!44799)) b!87347))

(declare-fun m!93029 () Bool)

(assert (=> d!23231 m!93029))

(declare-fun m!93031 () Bool)

(assert (=> d!23231 m!93031))

(declare-fun m!93033 () Bool)

(assert (=> b!87347 m!93033))

(assert (=> b!86185 d!23231))

(declare-fun c!14399 () Bool)

(declare-fun call!8320 () ListLongMap!1441)

(declare-fun c!14398 () Bool)

(declare-fun call!8315 () ListLongMap!1441)

(declare-fun bm!8311 () Bool)

(declare-fun call!8317 () ListLongMap!1441)

(declare-fun call!8319 () ListLongMap!1441)

(assert (=> bm!8311 (= call!8319 (+!107 (ite c!14399 call!8320 (ite c!14398 call!8315 call!8317)) (ite (or c!14399 c!14398) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!23233 () Bool)

(declare-fun e!56890 () Bool)

(assert (=> d!23233 e!56890))

(declare-fun res!44801 () Bool)

(assert (=> d!23233 (=> (not res!44801) (not e!56890))))

(assert (=> d!23233 (= res!44801 (or (bvsge #b00000000000000000000000000000000 (size!2154 lt!40844)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 lt!40844)))))))

(declare-fun lt!41445 () ListLongMap!1441)

(declare-fun lt!41428 () ListLongMap!1441)

(assert (=> d!23233 (= lt!41445 lt!41428)))

(declare-fun lt!41442 () Unit!2498)

(declare-fun e!56894 () Unit!2498)

(assert (=> d!23233 (= lt!41442 e!56894)))

(declare-fun c!14396 () Bool)

(declare-fun e!56895 () Bool)

(assert (=> d!23233 (= c!14396 e!56895)))

(declare-fun res!44808 () Bool)

(assert (=> d!23233 (=> (not res!44808) (not e!56895))))

(assert (=> d!23233 (= res!44808 (bvslt #b00000000000000000000000000000000 (size!2154 lt!40844)))))

(declare-fun e!56902 () ListLongMap!1441)

(assert (=> d!23233 (= lt!41428 e!56902)))

(assert (=> d!23233 (= c!14399 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23233 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23233 (= (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41445)))

(declare-fun bm!8312 () Bool)

(assert (=> bm!8312 (= call!8317 call!8315)))

(declare-fun b!87348 () Bool)

(declare-fun e!56892 () Bool)

(declare-fun e!56901 () Bool)

(assert (=> b!87348 (= e!56892 e!56901)))

(declare-fun res!44806 () Bool)

(assert (=> b!87348 (=> (not res!44806) (not e!56901))))

(assert (=> b!87348 (= res!44806 (contains!747 lt!41445 (select (arr!1910 lt!40844) #b00000000000000000000000000000000)))))

(assert (=> b!87348 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 lt!40844)))))

(declare-fun b!87349 () Bool)

(declare-fun lt!41431 () Unit!2498)

(assert (=> b!87349 (= e!56894 lt!41431)))

(declare-fun lt!41437 () ListLongMap!1441)

(assert (=> b!87349 (= lt!41437 (getCurrentListMapNoExtraKeys!72 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41433 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41433 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41441 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41441 (select (arr!1910 lt!40844) #b00000000000000000000000000000000))))

(declare-fun lt!41436 () Unit!2498)

(assert (=> b!87349 (= lt!41436 (addStillContains!58 lt!41437 lt!41433 (zeroValue!2229 newMap!16) lt!41441))))

(assert (=> b!87349 (contains!747 (+!107 lt!41437 (tuple2!2189 lt!41433 (zeroValue!2229 newMap!16))) lt!41441)))

(declare-fun lt!41438 () Unit!2498)

(assert (=> b!87349 (= lt!41438 lt!41436)))

(declare-fun lt!41449 () ListLongMap!1441)

(assert (=> b!87349 (= lt!41449 (getCurrentListMapNoExtraKeys!72 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41432 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41432 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41429 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41429 (select (arr!1910 lt!40844) #b00000000000000000000000000000000))))

(declare-fun lt!41448 () Unit!2498)

(assert (=> b!87349 (= lt!41448 (addApplyDifferent!58 lt!41449 lt!41432 (minValue!2229 newMap!16) lt!41429))))

(assert (=> b!87349 (= (apply!82 (+!107 lt!41449 (tuple2!2189 lt!41432 (minValue!2229 newMap!16))) lt!41429) (apply!82 lt!41449 lt!41429))))

(declare-fun lt!41430 () Unit!2498)

(assert (=> b!87349 (= lt!41430 lt!41448)))

(declare-fun lt!41443 () ListLongMap!1441)

(assert (=> b!87349 (= lt!41443 (getCurrentListMapNoExtraKeys!72 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41434 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41434 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41440 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41440 (select (arr!1910 lt!40844) #b00000000000000000000000000000000))))

(declare-fun lt!41446 () Unit!2498)

(assert (=> b!87349 (= lt!41446 (addApplyDifferent!58 lt!41443 lt!41434 (zeroValue!2229 newMap!16) lt!41440))))

(assert (=> b!87349 (= (apply!82 (+!107 lt!41443 (tuple2!2189 lt!41434 (zeroValue!2229 newMap!16))) lt!41440) (apply!82 lt!41443 lt!41440))))

(declare-fun lt!41447 () Unit!2498)

(assert (=> b!87349 (= lt!41447 lt!41446)))

(declare-fun lt!41444 () ListLongMap!1441)

(assert (=> b!87349 (= lt!41444 (getCurrentListMapNoExtraKeys!72 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41435 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41435 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41439 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41439 (select (arr!1910 lt!40844) #b00000000000000000000000000000000))))

(assert (=> b!87349 (= lt!41431 (addApplyDifferent!58 lt!41444 lt!41435 (minValue!2229 newMap!16) lt!41439))))

(assert (=> b!87349 (= (apply!82 (+!107 lt!41444 (tuple2!2189 lt!41435 (minValue!2229 newMap!16))) lt!41439) (apply!82 lt!41444 lt!41439))))

(declare-fun bm!8313 () Bool)

(assert (=> bm!8313 (= call!8315 call!8320)))

(declare-fun b!87350 () Bool)

(declare-fun res!44804 () Bool)

(assert (=> b!87350 (=> (not res!44804) (not e!56890))))

(assert (=> b!87350 (= res!44804 e!56892)))

(declare-fun res!44803 () Bool)

(assert (=> b!87350 (=> res!44803 e!56892)))

(declare-fun e!56899 () Bool)

(assert (=> b!87350 (= res!44803 (not e!56899))))

(declare-fun res!44805 () Bool)

(assert (=> b!87350 (=> (not res!44805) (not e!56899))))

(assert (=> b!87350 (= res!44805 (bvslt #b00000000000000000000000000000000 (size!2154 lt!40844)))))

(declare-fun b!87351 () Bool)

(declare-fun e!56893 () Bool)

(declare-fun call!8314 () Bool)

(assert (=> b!87351 (= e!56893 (not call!8314))))

(declare-fun b!87352 () Bool)

(declare-fun e!56900 () ListLongMap!1441)

(assert (=> b!87352 (= e!56902 e!56900)))

(assert (=> b!87352 (= c!14398 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87353 () Bool)

(declare-fun e!56898 () Bool)

(declare-fun call!8316 () Bool)

(assert (=> b!87353 (= e!56898 (not call!8316))))

(declare-fun b!87354 () Bool)

(declare-fun e!56891 () Bool)

(assert (=> b!87354 (= e!56891 (= (apply!82 lt!41445 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8314 () Bool)

(declare-fun call!8318 () ListLongMap!1441)

(assert (=> bm!8314 (= call!8318 call!8319)))

(declare-fun b!87355 () Bool)

(declare-fun e!56897 () Bool)

(assert (=> b!87355 (= e!56898 e!56897)))

(declare-fun res!44802 () Bool)

(assert (=> b!87355 (= res!44802 call!8316)))

(assert (=> b!87355 (=> (not res!44802) (not e!56897))))

(declare-fun b!87356 () Bool)

(assert (=> b!87356 (= e!56890 e!56893)))

(declare-fun c!14397 () Bool)

(assert (=> b!87356 (= c!14397 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87357 () Bool)

(assert (=> b!87357 (= e!56902 (+!107 call!8319 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87358 () Bool)

(assert (=> b!87358 (= e!56893 e!56891)))

(declare-fun res!44807 () Bool)

(assert (=> b!87358 (= res!44807 call!8314)))

(assert (=> b!87358 (=> (not res!44807) (not e!56891))))

(declare-fun b!87359 () Bool)

(declare-fun Unit!2575 () Unit!2498)

(assert (=> b!87359 (= e!56894 Unit!2575)))

(declare-fun b!87360 () Bool)

(assert (=> b!87360 (= e!56895 (validKeyInArray!0 (select (arr!1910 lt!40844) #b00000000000000000000000000000000)))))

(declare-fun bm!8315 () Bool)

(assert (=> bm!8315 (= call!8320 (getCurrentListMapNoExtraKeys!72 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87361 () Bool)

(declare-fun res!44809 () Bool)

(assert (=> b!87361 (=> (not res!44809) (not e!56890))))

(assert (=> b!87361 (= res!44809 e!56898)))

(declare-fun c!14401 () Bool)

(assert (=> b!87361 (= c!14401 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87362 () Bool)

(declare-fun e!56896 () ListLongMap!1441)

(assert (=> b!87362 (= e!56896 call!8318)))

(declare-fun b!87363 () Bool)

(assert (=> b!87363 (= e!56899 (validKeyInArray!0 (select (arr!1910 lt!40844) #b00000000000000000000000000000000)))))

(declare-fun b!87364 () Bool)

(assert (=> b!87364 (= e!56896 call!8317)))

(declare-fun b!87365 () Bool)

(assert (=> b!87365 (= e!56900 call!8318)))

(declare-fun bm!8316 () Bool)

(assert (=> bm!8316 (= call!8314 (contains!747 lt!41445 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87366 () Bool)

(assert (=> b!87366 (= e!56897 (= (apply!82 lt!41445 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87367 () Bool)

(declare-fun c!14400 () Bool)

(assert (=> b!87367 (= c!14400 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87367 (= e!56900 e!56896)))

(declare-fun b!87368 () Bool)

(assert (=> b!87368 (= e!56901 (= (apply!82 lt!41445 (select (arr!1910 lt!40844) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 lt!40821) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 lt!40821)))))

(assert (=> b!87368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 lt!40844)))))

(declare-fun bm!8317 () Bool)

(assert (=> bm!8317 (= call!8316 (contains!747 lt!41445 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23233 c!14399) b!87357))

(assert (= (and d!23233 (not c!14399)) b!87352))

(assert (= (and b!87352 c!14398) b!87365))

(assert (= (and b!87352 (not c!14398)) b!87367))

(assert (= (and b!87367 c!14400) b!87362))

(assert (= (and b!87367 (not c!14400)) b!87364))

(assert (= (or b!87362 b!87364) bm!8312))

(assert (= (or b!87365 bm!8312) bm!8313))

(assert (= (or b!87365 b!87362) bm!8314))

(assert (= (or b!87357 bm!8313) bm!8315))

(assert (= (or b!87357 bm!8314) bm!8311))

(assert (= (and d!23233 res!44808) b!87360))

(assert (= (and d!23233 c!14396) b!87349))

(assert (= (and d!23233 (not c!14396)) b!87359))

(assert (= (and d!23233 res!44801) b!87350))

(assert (= (and b!87350 res!44805) b!87363))

(assert (= (and b!87350 (not res!44803)) b!87348))

(assert (= (and b!87348 res!44806) b!87368))

(assert (= (and b!87350 res!44804) b!87361))

(assert (= (and b!87361 c!14401) b!87355))

(assert (= (and b!87361 (not c!14401)) b!87353))

(assert (= (and b!87355 res!44802) b!87366))

(assert (= (or b!87355 b!87353) bm!8317))

(assert (= (and b!87361 res!44809) b!87356))

(assert (= (and b!87356 c!14397) b!87358))

(assert (= (and b!87356 (not c!14397)) b!87351))

(assert (= (and b!87358 res!44807) b!87354))

(assert (= (or b!87358 b!87351) bm!8316))

(declare-fun b_lambda!3853 () Bool)

(assert (=> (not b_lambda!3853) (not b!87368)))

(assert (=> b!87368 t!5233))

(declare-fun b_and!5257 () Bool)

(assert (= b_and!5253 (and (=> t!5233 result!2923) b_and!5257)))

(assert (=> b!87368 t!5235))

(declare-fun b_and!5259 () Bool)

(assert (= b_and!5255 (and (=> t!5235 result!2925) b_and!5259)))

(declare-fun m!93035 () Bool)

(assert (=> b!87357 m!93035))

(declare-fun m!93037 () Bool)

(assert (=> b!87366 m!93037))

(declare-fun m!93039 () Bool)

(assert (=> b!87368 m!93039))

(assert (=> b!87368 m!90319))

(declare-fun m!93041 () Bool)

(assert (=> b!87368 m!93041))

(assert (=> b!87368 m!93039))

(assert (=> b!87368 m!90319))

(declare-fun m!93043 () Bool)

(assert (=> b!87368 m!93043))

(declare-fun m!93045 () Bool)

(assert (=> b!87368 m!93045))

(assert (=> b!87368 m!93043))

(declare-fun m!93047 () Bool)

(assert (=> bm!8315 m!93047))

(assert (=> b!87360 m!93043))

(assert (=> b!87360 m!93043))

(declare-fun m!93049 () Bool)

(assert (=> b!87360 m!93049))

(declare-fun m!93051 () Bool)

(assert (=> bm!8317 m!93051))

(declare-fun m!93053 () Bool)

(assert (=> bm!8311 m!93053))

(declare-fun m!93055 () Bool)

(assert (=> b!87349 m!93055))

(declare-fun m!93057 () Bool)

(assert (=> b!87349 m!93057))

(declare-fun m!93059 () Bool)

(assert (=> b!87349 m!93059))

(declare-fun m!93061 () Bool)

(assert (=> b!87349 m!93061))

(declare-fun m!93063 () Bool)

(assert (=> b!87349 m!93063))

(assert (=> b!87349 m!93047))

(assert (=> b!87349 m!93043))

(declare-fun m!93065 () Bool)

(assert (=> b!87349 m!93065))

(declare-fun m!93067 () Bool)

(assert (=> b!87349 m!93067))

(declare-fun m!93069 () Bool)

(assert (=> b!87349 m!93069))

(declare-fun m!93071 () Bool)

(assert (=> b!87349 m!93071))

(declare-fun m!93073 () Bool)

(assert (=> b!87349 m!93073))

(declare-fun m!93075 () Bool)

(assert (=> b!87349 m!93075))

(declare-fun m!93077 () Bool)

(assert (=> b!87349 m!93077))

(declare-fun m!93079 () Bool)

(assert (=> b!87349 m!93079))

(assert (=> b!87349 m!93063))

(declare-fun m!93081 () Bool)

(assert (=> b!87349 m!93081))

(assert (=> b!87349 m!93055))

(assert (=> b!87349 m!93073))

(assert (=> b!87349 m!93069))

(declare-fun m!93083 () Bool)

(assert (=> b!87349 m!93083))

(assert (=> b!87363 m!93043))

(assert (=> b!87363 m!93043))

(assert (=> b!87363 m!93049))

(declare-fun m!93085 () Bool)

(assert (=> bm!8316 m!93085))

(assert (=> d!23233 m!90203))

(declare-fun m!93087 () Bool)

(assert (=> b!87354 m!93087))

(assert (=> b!87348 m!93043))

(assert (=> b!87348 m!93043))

(declare-fun m!93089 () Bool)

(assert (=> b!87348 m!93089))

(assert (=> d!22375 d!23233))

(declare-fun b!87369 () Bool)

(declare-fun e!56904 () (_ BitVec 32))

(assert (=> b!87369 (= e!56904 #b00000000000000000000000000000000)))

(declare-fun call!8321 () (_ BitVec 32))

(declare-fun bm!8318 () Bool)

(assert (=> bm!8318 (= call!8321 (arrayCountValidKeys!0 lt!40842 (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001) (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001)))))

(declare-fun d!23235 () Bool)

(declare-fun lt!41450 () (_ BitVec 32))

(assert (=> d!23235 (and (bvsge lt!41450 #b00000000000000000000000000000000) (bvsle lt!41450 (bvsub (size!2154 lt!40842) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(assert (=> d!23235 (= lt!41450 e!56904)))

(declare-fun c!14403 () Bool)

(assert (=> d!23235 (= c!14403 (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001)))))

(assert (=> d!23235 (and (bvsle (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001)) (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001) (size!2154 lt!40842)))))

(assert (=> d!23235 (= (arrayCountValidKeys!0 lt!40842 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001)) lt!41450)))

(declare-fun b!87370 () Bool)

(declare-fun e!56903 () (_ BitVec 32))

(assert (=> b!87370 (= e!56903 (bvadd #b00000000000000000000000000000001 call!8321))))

(declare-fun b!87371 () Bool)

(assert (=> b!87371 (= e!56904 e!56903)))

(declare-fun c!14402 () Bool)

(assert (=> b!87371 (= c!14402 (validKeyInArray!0 (select (arr!1910 lt!40842) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(declare-fun b!87372 () Bool)

(assert (=> b!87372 (= e!56903 call!8321)))

(assert (= (and d!23235 c!14403) b!87369))

(assert (= (and d!23235 (not c!14403)) b!87371))

(assert (= (and b!87371 c!14402) b!87370))

(assert (= (and b!87371 (not c!14402)) b!87372))

(assert (= (or b!87370 b!87372) bm!8318))

(declare-fun m!93091 () Bool)

(assert (=> bm!8318 m!93091))

(declare-fun m!93093 () Bool)

(assert (=> b!87371 m!93093))

(assert (=> b!87371 m!93093))

(declare-fun m!93095 () Bool)

(assert (=> b!87371 m!93095))

(assert (=> d!22375 d!23235))

(declare-fun d!23237 () Bool)

(declare-fun e!56906 () Bool)

(assert (=> d!23237 e!56906))

(declare-fun res!44810 () Bool)

(assert (=> d!23237 (=> res!44810 e!56906)))

(declare-fun lt!41452 () Bool)

(assert (=> d!23237 (= res!44810 (not lt!41452))))

(declare-fun lt!41454 () Bool)

(assert (=> d!23237 (= lt!41452 lt!41454)))

(declare-fun lt!41451 () Unit!2498)

(declare-fun e!56905 () Unit!2498)

(assert (=> d!23237 (= lt!41451 e!56905)))

(declare-fun c!14404 () Bool)

(assert (=> d!23237 (= c!14404 lt!41454)))

(assert (=> d!23237 (= lt!41454 (containsKey!144 (toList!736 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(assert (=> d!23237 (= (contains!747 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))) lt!41452)))

(declare-fun b!87373 () Bool)

(declare-fun lt!41453 () Unit!2498)

(assert (=> b!87373 (= e!56905 lt!41453)))

(assert (=> b!87373 (= lt!41453 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(assert (=> b!87373 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(declare-fun b!87374 () Bool)

(declare-fun Unit!2576 () Unit!2498)

(assert (=> b!87374 (= e!56905 Unit!2576)))

(declare-fun b!87375 () Bool)

(assert (=> b!87375 (= e!56906 (isDefined!93 (getValueByKey!141 (toList!736 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))))

(assert (= (and d!23237 c!14404) b!87373))

(assert (= (and d!23237 (not c!14404)) b!87374))

(assert (= (and d!23237 (not res!44810)) b!87375))

(assert (=> d!23237 m!90735))

(declare-fun m!93097 () Bool)

(assert (=> d!23237 m!93097))

(assert (=> b!87373 m!90735))

(declare-fun m!93099 () Bool)

(assert (=> b!87373 m!93099))

(assert (=> b!87373 m!90735))

(declare-fun m!93101 () Bool)

(assert (=> b!87373 m!93101))

(assert (=> b!87373 m!93101))

(declare-fun m!93103 () Bool)

(assert (=> b!87373 m!93103))

(assert (=> b!87375 m!90735))

(assert (=> b!87375 m!93101))

(assert (=> b!87375 m!93101))

(assert (=> b!87375 m!93103))

(assert (=> d!22375 d!23237))

(declare-fun d!23239 () Bool)

(declare-fun e!56907 () Bool)

(assert (=> d!23239 e!56907))

(declare-fun res!44811 () Bool)

(assert (=> d!23239 (=> (not res!44811) (not e!56907))))

(assert (=> d!23239 (= res!44811 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 lt!40844))))))

(declare-fun lt!41455 () Unit!2498)

(assert (=> d!23239 (= lt!41455 (choose!515 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (defaultEntry!2337 newMap!16)))))

(assert (=> d!23239 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23239 (= (lemmaValidKeyInArrayIsInListMap!91 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (defaultEntry!2337 newMap!16)) lt!41455)))

(declare-fun b!87376 () Bool)

(assert (=> b!87376 (= e!56907 (contains!747 (getCurrentListMap!430 lt!40844 lt!40821 (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 lt!40844) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(assert (= (and d!23239 res!44811) b!87376))

(declare-fun m!93105 () Bool)

(assert (=> d!23239 m!93105))

(assert (=> d!23239 m!90203))

(assert (=> b!87376 m!90743))

(declare-fun m!93107 () Bool)

(assert (=> b!87376 m!93107))

(assert (=> b!87376 m!90743))

(assert (=> b!87376 m!93107))

(declare-fun m!93109 () Bool)

(assert (=> b!87376 m!93109))

(assert (=> d!22375 d!23239))

(assert (=> d!22375 d!22331))

(assert (=> d!22375 d!22275))

(declare-fun d!23241 () Bool)

(assert (=> d!23241 (= (arrayCountValidKeys!0 lt!40842 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (bvadd (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!41458 () Unit!2498)

(declare-fun choose!2 (array!4011 (_ BitVec 32)) Unit!2498)

(assert (=> d!23241 (= lt!41458 (choose!2 lt!40842 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))

(declare-fun e!56910 () Bool)

(assert (=> d!23241 e!56910))

(declare-fun res!44816 () Bool)

(assert (=> d!23241 (=> (not res!44816) (not e!56910))))

(assert (=> d!23241 (= res!44816 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 lt!40842))))))

(assert (=> d!23241 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40842 (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))) lt!41458)))

(declare-fun b!87381 () Bool)

(declare-fun res!44817 () Bool)

(assert (=> b!87381 (=> (not res!44817) (not e!56910))))

(assert (=> b!87381 (= res!44817 (validKeyInArray!0 (select (arr!1910 lt!40842) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)))))))

(declare-fun b!87382 () Bool)

(assert (=> b!87382 (= e!56910 (bvslt (size!2154 lt!40842) #b01111111111111111111111111111111))))

(assert (= (and d!23241 res!44816) b!87381))

(assert (= (and b!87381 res!44817) b!87382))

(assert (=> d!23241 m!90731))

(declare-fun m!93111 () Bool)

(assert (=> d!23241 m!93111))

(assert (=> b!87381 m!93093))

(assert (=> b!87381 m!93093))

(assert (=> b!87381 m!93095))

(assert (=> d!22375 d!23241))

(declare-fun d!23243 () Bool)

(declare-fun res!44818 () Bool)

(declare-fun e!56911 () Bool)

(assert (=> d!23243 (=> res!44818 e!56911)))

(assert (=> d!23243 (= res!44818 (= (select (arr!1910 lt!40822) #b00000000000000000000000000000000) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!23243 (= (arrayContainsKey!0 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000) e!56911)))

(declare-fun b!87383 () Bool)

(declare-fun e!56912 () Bool)

(assert (=> b!87383 (= e!56911 e!56912)))

(declare-fun res!44819 () Bool)

(assert (=> b!87383 (=> (not res!44819) (not e!56912))))

(assert (=> b!87383 (= res!44819 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 lt!40822)))))

(declare-fun b!87384 () Bool)

(assert (=> b!87384 (= e!56912 (arrayContainsKey!0 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!23243 (not res!44818)) b!87383))

(assert (= (and b!87383 res!44819) b!87384))

(declare-fun m!93113 () Bool)

(assert (=> d!23243 m!93113))

(assert (=> b!87384 m!89569))

(declare-fun m!93115 () Bool)

(assert (=> b!87384 m!93115))

(assert (=> d!22375 d!23243))

(declare-fun b!87385 () Bool)

(declare-fun e!56914 () (_ BitVec 32))

(assert (=> b!87385 (= e!56914 #b00000000000000000000000000000000)))

(declare-fun call!8322 () (_ BitVec 32))

(declare-fun bm!8319 () Bool)

(assert (=> bm!8319 (= call!8322 (arrayCountValidKeys!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 newMap!16))))))

(declare-fun lt!41459 () (_ BitVec 32))

(declare-fun d!23245 () Bool)

(assert (=> d!23245 (and (bvsge lt!41459 #b00000000000000000000000000000000) (bvsle lt!41459 (bvsub (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!23245 (= lt!41459 e!56914)))

(declare-fun c!14406 () Bool)

(assert (=> d!23245 (= c!14406 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(assert (=> d!23245 (and (bvsle #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2154 (_keys!4009 newMap!16)) (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(assert (=> d!23245 (= (arrayCountValidKeys!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) lt!41459)))

(declare-fun b!87386 () Bool)

(declare-fun e!56913 () (_ BitVec 32))

(assert (=> b!87386 (= e!56913 (bvadd #b00000000000000000000000000000001 call!8322))))

(declare-fun b!87387 () Bool)

(assert (=> b!87387 (= e!56914 e!56913)))

(declare-fun c!14405 () Bool)

(assert (=> b!87387 (= c!14405 (validKeyInArray!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!87388 () Bool)

(assert (=> b!87388 (= e!56913 call!8322)))

(assert (= (and d!23245 c!14406) b!87385))

(assert (= (and d!23245 (not c!14406)) b!87387))

(assert (= (and b!87387 c!14405) b!87386))

(assert (= (and b!87387 (not c!14405)) b!87388))

(assert (= (or b!87386 b!87388) bm!8319))

(declare-fun m!93117 () Bool)

(assert (=> bm!8319 m!93117))

(declare-fun m!93119 () Bool)

(assert (=> b!87387 m!93119))

(assert (=> b!87387 m!93119))

(declare-fun m!93121 () Bool)

(assert (=> b!87387 m!93121))

(assert (=> d!22375 d!23245))

(declare-fun b!87389 () Bool)

(declare-fun e!56918 () Bool)

(declare-fun e!56917 () Bool)

(assert (=> b!87389 (= e!56918 e!56917)))

(declare-fun c!14407 () Bool)

(assert (=> b!87389 (= c!14407 (validKeyInArray!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) lt!40820)))))

(declare-fun b!87391 () Bool)

(declare-fun call!8323 () Bool)

(assert (=> b!87391 (= e!56917 call!8323)))

(declare-fun bm!8320 () Bool)

(assert (=> bm!8320 (= call!8323 (arrayNoDuplicates!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (bvadd lt!40820 #b00000000000000000000000000000001) (ite c!14407 (Cons!1504 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) lt!40820) lt!40815) lt!40815)))))

(declare-fun e!56916 () Bool)

(declare-fun b!87392 () Bool)

(assert (=> b!87392 (= e!56916 (contains!748 lt!40815 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) lt!40820)))))

(declare-fun b!87393 () Bool)

(declare-fun e!56915 () Bool)

(assert (=> b!87393 (= e!56915 e!56918)))

(declare-fun res!44820 () Bool)

(assert (=> b!87393 (=> (not res!44820) (not e!56918))))

(assert (=> b!87393 (= res!44820 (not e!56916))))

(declare-fun res!44821 () Bool)

(assert (=> b!87393 (=> (not res!44821) (not e!56916))))

(assert (=> b!87393 (= res!44821 (validKeyInArray!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) lt!40820)))))

(declare-fun d!23247 () Bool)

(declare-fun res!44822 () Bool)

(assert (=> d!23247 (=> res!44822 e!56915)))

(assert (=> d!23247 (= res!44822 (bvsge lt!40820 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(assert (=> d!23247 (= (arrayNoDuplicates!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) lt!40820 lt!40815) e!56915)))

(declare-fun b!87390 () Bool)

(assert (=> b!87390 (= e!56917 call!8323)))

(assert (= (and d!23247 (not res!44822)) b!87393))

(assert (= (and b!87393 res!44821) b!87392))

(assert (= (and b!87393 res!44820) b!87389))

(assert (= (and b!87389 c!14407) b!87391))

(assert (= (and b!87389 (not c!14407)) b!87390))

(assert (= (or b!87391 b!87390) bm!8320))

(declare-fun m!93123 () Bool)

(assert (=> b!87389 m!93123))

(assert (=> b!87389 m!93123))

(declare-fun m!93125 () Bool)

(assert (=> b!87389 m!93125))

(assert (=> bm!8320 m!93123))

(declare-fun m!93127 () Bool)

(assert (=> bm!8320 m!93127))

(assert (=> b!87392 m!93123))

(assert (=> b!87392 m!93123))

(declare-fun m!93129 () Bool)

(assert (=> b!87392 m!93129))

(assert (=> b!87393 m!93123))

(assert (=> b!87393 m!93123))

(assert (=> b!87393 m!93125))

(assert (=> d!22375 d!23247))

(declare-fun b!87403 () Bool)

(declare-fun res!44833 () Bool)

(declare-fun e!56923 () Bool)

(assert (=> b!87403 (=> (not res!44833) (not e!56923))))

(assert (=> b!87403 (= res!44833 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!87404 () Bool)

(assert (=> b!87404 (= e!56923 (bvslt (size!2154 (_keys!4009 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun e!56924 () Bool)

(declare-fun b!87405 () Bool)

(assert (=> b!87405 (= e!56924 (= (arrayCountValidKeys!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4009 newMap!16) #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!87402 () Bool)

(declare-fun res!44831 () Bool)

(assert (=> b!87402 (=> (not res!44831) (not e!56923))))

(assert (=> b!87402 (= res!44831 (not (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))))

(declare-fun d!23249 () Bool)

(assert (=> d!23249 e!56924))

(declare-fun res!44834 () Bool)

(assert (=> d!23249 (=> (not res!44834) (not e!56924))))

(assert (=> d!23249 (= res!44834 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 (_keys!4009 newMap!16)))))))

(declare-fun lt!41462 () Unit!2498)

(declare-fun choose!1 (array!4011 (_ BitVec 32) (_ BitVec 64)) Unit!2498)

(assert (=> d!23249 (= lt!41462 (choose!1 (_keys!4009 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (=> d!23249 e!56923))

(declare-fun res!44832 () Bool)

(assert (=> d!23249 (=> (not res!44832) (not e!56923))))

(assert (=> d!23249 (= res!44832 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 (_keys!4009 newMap!16)))))))

(assert (=> d!23249 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4009 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) lt!41462)))

(assert (= (and d!23249 res!44832) b!87402))

(assert (= (and b!87402 res!44831) b!87403))

(assert (= (and b!87403 res!44833) b!87404))

(assert (= (and d!23249 res!44834) b!87405))

(assert (=> b!87403 m!89569))

(assert (=> b!87403 m!89765))

(assert (=> b!87405 m!90747))

(assert (=> b!87405 m!90739))

(assert (=> b!87405 m!90017))

(declare-fun m!93131 () Bool)

(assert (=> b!87402 m!93131))

(assert (=> b!87402 m!93131))

(declare-fun m!93133 () Bool)

(assert (=> b!87402 m!93133))

(assert (=> d!23249 m!89569))

(declare-fun m!93135 () Bool)

(assert (=> d!23249 m!93135))

(assert (=> d!22375 d!23249))

(declare-fun d!23251 () Bool)

(declare-fun e!56925 () Bool)

(assert (=> d!23251 e!56925))

(declare-fun res!44835 () Bool)

(assert (=> d!23251 (=> (not res!44835) (not e!56925))))

(declare-fun lt!41466 () ListLongMap!1441)

(assert (=> d!23251 (= res!44835 (contains!747 lt!41466 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41464 () List!1509)

(assert (=> d!23251 (= lt!41466 (ListLongMap!1442 lt!41464))))

(declare-fun lt!41463 () Unit!2498)

(declare-fun lt!41465 () Unit!2498)

(assert (=> d!23251 (= lt!41463 lt!41465)))

(assert (=> d!23251 (= (getValueByKey!141 lt!41464 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23251 (= lt!41465 (lemmaContainsTupThenGetReturnValue!58 lt!41464 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23251 (= lt!41464 (insertStrictlySorted!61 (toList!736 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23251 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41466)))

(declare-fun b!87406 () Bool)

(declare-fun res!44836 () Bool)

(assert (=> b!87406 (=> (not res!44836) (not e!56925))))

(assert (=> b!87406 (= res!44836 (= (getValueByKey!141 (toList!736 lt!41466) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87407 () Bool)

(assert (=> b!87407 (= e!56925 (contains!749 (toList!736 lt!41466) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!23251 res!44835) b!87406))

(assert (= (and b!87406 res!44836) b!87407))

(declare-fun m!93137 () Bool)

(assert (=> d!23251 m!93137))

(declare-fun m!93139 () Bool)

(assert (=> d!23251 m!93139))

(declare-fun m!93141 () Bool)

(assert (=> d!23251 m!93141))

(declare-fun m!93143 () Bool)

(assert (=> d!23251 m!93143))

(declare-fun m!93145 () Bool)

(assert (=> b!87406 m!93145))

(declare-fun m!93147 () Bool)

(assert (=> b!87407 m!93147))

(assert (=> d!22375 d!23251))

(declare-fun bm!8321 () Bool)

(declare-fun call!8324 () Bool)

(assert (=> bm!8321 (= call!8324 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (mask!6365 newMap!16)))))

(declare-fun b!87408 () Bool)

(declare-fun e!56927 () Bool)

(declare-fun e!56926 () Bool)

(assert (=> b!87408 (= e!56927 e!56926)))

(declare-fun lt!41469 () (_ BitVec 64))

(assert (=> b!87408 (= lt!41469 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41467 () Unit!2498)

(assert (=> b!87408 (= lt!41467 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) lt!41469 #b00000000000000000000000000000000))))

(assert (=> b!87408 (arrayContainsKey!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) lt!41469 #b00000000000000000000000000000000)))

(declare-fun lt!41468 () Unit!2498)

(assert (=> b!87408 (= lt!41468 lt!41467)))

(declare-fun res!44837 () Bool)

(assert (=> b!87408 (= res!44837 (= (seekEntryOrOpen!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000) (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (mask!6365 newMap!16)) (Found!237 #b00000000000000000000000000000000)))))

(assert (=> b!87408 (=> (not res!44837) (not e!56926))))

(declare-fun b!87409 () Bool)

(assert (=> b!87409 (= e!56926 call!8324)))

(declare-fun b!87410 () Bool)

(assert (=> b!87410 (= e!56927 call!8324)))

(declare-fun b!87411 () Bool)

(declare-fun e!56928 () Bool)

(assert (=> b!87411 (= e!56928 e!56927)))

(declare-fun c!14408 () Bool)

(assert (=> b!87411 (= c!14408 (validKeyInArray!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!23253 () Bool)

(declare-fun res!44838 () Bool)

(assert (=> d!23253 (=> res!44838 e!56928)))

(assert (=> d!23253 (= res!44838 (bvsge #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(assert (=> d!23253 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (mask!6365 newMap!16)) e!56928)))

(assert (= (and d!23253 (not res!44838)) b!87411))

(assert (= (and b!87411 c!14408) b!87408))

(assert (= (and b!87411 (not c!14408)) b!87410))

(assert (= (and b!87408 res!44837) b!87409))

(assert (= (or b!87409 b!87410) bm!8321))

(declare-fun m!93149 () Bool)

(assert (=> bm!8321 m!93149))

(assert (=> b!87408 m!93119))

(declare-fun m!93151 () Bool)

(assert (=> b!87408 m!93151))

(declare-fun m!93153 () Bool)

(assert (=> b!87408 m!93153))

(assert (=> b!87408 m!93119))

(declare-fun m!93155 () Bool)

(assert (=> b!87408 m!93155))

(assert (=> b!87411 m!93119))

(assert (=> b!87411 m!93119))

(assert (=> b!87411 m!93121))

(assert (=> d!22375 d!23253))

(assert (=> d!22375 d!22265))

(declare-fun d!23255 () Bool)

(declare-fun e!56931 () Bool)

(assert (=> d!23255 e!56931))

(declare-fun res!44841 () Bool)

(assert (=> d!23255 (=> (not res!44841) (not e!56931))))

(assert (=> d!23255 (= res!44841 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 (_keys!4009 newMap!16)))))))

(declare-fun lt!41472 () Unit!2498)

(declare-fun choose!102 ((_ BitVec 64) array!4011 (_ BitVec 32) (_ BitVec 32)) Unit!2498)

(assert (=> d!23255 (= lt!41472 (choose!102 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (mask!6365 newMap!16)))))

(assert (=> d!23255 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23255 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (mask!6365 newMap!16)) lt!41472)))

(declare-fun b!87414 () Bool)

(assert (=> b!87414 (= e!56931 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (mask!6365 newMap!16)))))

(assert (= (and d!23255 res!44841) b!87414))

(assert (=> d!23255 m!89569))

(declare-fun m!93157 () Bool)

(assert (=> d!23255 m!93157))

(assert (=> d!23255 m!90203))

(assert (=> b!87414 m!90747))

(assert (=> b!87414 m!90723))

(assert (=> d!22375 d!23255))

(declare-fun bm!8322 () Bool)

(declare-fun call!8330 () ListLongMap!1441)

(declare-fun call!8326 () ListLongMap!1441)

(declare-fun c!14412 () Bool)

(declare-fun call!8328 () ListLongMap!1441)

(declare-fun call!8331 () ListLongMap!1441)

(declare-fun c!14411 () Bool)

(assert (=> bm!8322 (= call!8330 (+!107 (ite c!14412 call!8331 (ite c!14411 call!8326 call!8328)) (ite (or c!14412 c!14411) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!23257 () Bool)

(declare-fun e!56932 () Bool)

(assert (=> d!23257 e!56932))

(declare-fun res!44842 () Bool)

(assert (=> d!23257 (=> (not res!44842) (not e!56932))))

(assert (=> d!23257 (= res!44842 (or (bvsge #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))))

(declare-fun lt!41490 () ListLongMap!1441)

(declare-fun lt!41473 () ListLongMap!1441)

(assert (=> d!23257 (= lt!41490 lt!41473)))

(declare-fun lt!41487 () Unit!2498)

(declare-fun e!56936 () Unit!2498)

(assert (=> d!23257 (= lt!41487 e!56936)))

(declare-fun c!14409 () Bool)

(declare-fun e!56937 () Bool)

(assert (=> d!23257 (= c!14409 e!56937)))

(declare-fun res!44849 () Bool)

(assert (=> d!23257 (=> (not res!44849) (not e!56937))))

(assert (=> d!23257 (= res!44849 (bvslt #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun e!56944 () ListLongMap!1441)

(assert (=> d!23257 (= lt!41473 e!56944)))

(assert (=> d!23257 (= c!14412 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23257 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23257 (= (getCurrentListMap!430 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41490)))

(declare-fun bm!8323 () Bool)

(assert (=> bm!8323 (= call!8328 call!8326)))

(declare-fun b!87415 () Bool)

(declare-fun e!56934 () Bool)

(declare-fun e!56943 () Bool)

(assert (=> b!87415 (= e!56934 e!56943)))

(declare-fun res!44847 () Bool)

(assert (=> b!87415 (=> (not res!44847) (not e!56943))))

(assert (=> b!87415 (= res!44847 (contains!747 lt!41490 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!87415 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun b!87416 () Bool)

(declare-fun lt!41476 () Unit!2498)

(assert (=> b!87416 (= e!56936 lt!41476)))

(declare-fun lt!41482 () ListLongMap!1441)

(assert (=> b!87416 (= lt!41482 (getCurrentListMapNoExtraKeys!72 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41478 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41478 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41486 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41486 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41481 () Unit!2498)

(assert (=> b!87416 (= lt!41481 (addStillContains!58 lt!41482 lt!41478 (zeroValue!2229 newMap!16) lt!41486))))

(assert (=> b!87416 (contains!747 (+!107 lt!41482 (tuple2!2189 lt!41478 (zeroValue!2229 newMap!16))) lt!41486)))

(declare-fun lt!41483 () Unit!2498)

(assert (=> b!87416 (= lt!41483 lt!41481)))

(declare-fun lt!41494 () ListLongMap!1441)

(assert (=> b!87416 (= lt!41494 (getCurrentListMapNoExtraKeys!72 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41477 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41477 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41474 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41474 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41493 () Unit!2498)

(assert (=> b!87416 (= lt!41493 (addApplyDifferent!58 lt!41494 lt!41477 (minValue!2229 newMap!16) lt!41474))))

(assert (=> b!87416 (= (apply!82 (+!107 lt!41494 (tuple2!2189 lt!41477 (minValue!2229 newMap!16))) lt!41474) (apply!82 lt!41494 lt!41474))))

(declare-fun lt!41475 () Unit!2498)

(assert (=> b!87416 (= lt!41475 lt!41493)))

(declare-fun lt!41488 () ListLongMap!1441)

(assert (=> b!87416 (= lt!41488 (getCurrentListMapNoExtraKeys!72 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41479 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41479 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41485 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41485 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41491 () Unit!2498)

(assert (=> b!87416 (= lt!41491 (addApplyDifferent!58 lt!41488 lt!41479 (zeroValue!2229 newMap!16) lt!41485))))

(assert (=> b!87416 (= (apply!82 (+!107 lt!41488 (tuple2!2189 lt!41479 (zeroValue!2229 newMap!16))) lt!41485) (apply!82 lt!41488 lt!41485))))

(declare-fun lt!41492 () Unit!2498)

(assert (=> b!87416 (= lt!41492 lt!41491)))

(declare-fun lt!41489 () ListLongMap!1441)

(assert (=> b!87416 (= lt!41489 (getCurrentListMapNoExtraKeys!72 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41480 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41480 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41484 () (_ BitVec 64))

(assert (=> b!87416 (= lt!41484 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!87416 (= lt!41476 (addApplyDifferent!58 lt!41489 lt!41480 (minValue!2229 newMap!16) lt!41484))))

(assert (=> b!87416 (= (apply!82 (+!107 lt!41489 (tuple2!2189 lt!41480 (minValue!2229 newMap!16))) lt!41484) (apply!82 lt!41489 lt!41484))))

(declare-fun bm!8324 () Bool)

(assert (=> bm!8324 (= call!8326 call!8331)))

(declare-fun b!87417 () Bool)

(declare-fun res!44845 () Bool)

(assert (=> b!87417 (=> (not res!44845) (not e!56932))))

(assert (=> b!87417 (= res!44845 e!56934)))

(declare-fun res!44844 () Bool)

(assert (=> b!87417 (=> res!44844 e!56934)))

(declare-fun e!56941 () Bool)

(assert (=> b!87417 (= res!44844 (not e!56941))))

(declare-fun res!44846 () Bool)

(assert (=> b!87417 (=> (not res!44846) (not e!56941))))

(assert (=> b!87417 (= res!44846 (bvslt #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun b!87418 () Bool)

(declare-fun e!56935 () Bool)

(declare-fun call!8325 () Bool)

(assert (=> b!87418 (= e!56935 (not call!8325))))

(declare-fun b!87419 () Bool)

(declare-fun e!56942 () ListLongMap!1441)

(assert (=> b!87419 (= e!56944 e!56942)))

(assert (=> b!87419 (= c!14411 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87420 () Bool)

(declare-fun e!56940 () Bool)

(declare-fun call!8327 () Bool)

(assert (=> b!87420 (= e!56940 (not call!8327))))

(declare-fun b!87421 () Bool)

(declare-fun e!56933 () Bool)

(assert (=> b!87421 (= e!56933 (= (apply!82 lt!41490 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8325 () Bool)

(declare-fun call!8329 () ListLongMap!1441)

(assert (=> bm!8325 (= call!8329 call!8330)))

(declare-fun b!87422 () Bool)

(declare-fun e!56939 () Bool)

(assert (=> b!87422 (= e!56940 e!56939)))

(declare-fun res!44843 () Bool)

(assert (=> b!87422 (= res!44843 call!8327)))

(assert (=> b!87422 (=> (not res!44843) (not e!56939))))

(declare-fun b!87423 () Bool)

(assert (=> b!87423 (= e!56932 e!56935)))

(declare-fun c!14410 () Bool)

(assert (=> b!87423 (= c!14410 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87424 () Bool)

(assert (=> b!87424 (= e!56944 (+!107 call!8330 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87425 () Bool)

(assert (=> b!87425 (= e!56935 e!56933)))

(declare-fun res!44848 () Bool)

(assert (=> b!87425 (= res!44848 call!8325)))

(assert (=> b!87425 (=> (not res!44848) (not e!56933))))

(declare-fun b!87426 () Bool)

(declare-fun Unit!2577 () Unit!2498)

(assert (=> b!87426 (= e!56936 Unit!2577)))

(declare-fun b!87427 () Bool)

(assert (=> b!87427 (= e!56937 (validKeyInArray!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8326 () Bool)

(assert (=> bm!8326 (= call!8331 (getCurrentListMapNoExtraKeys!72 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87428 () Bool)

(declare-fun res!44850 () Bool)

(assert (=> b!87428 (=> (not res!44850) (not e!56932))))

(assert (=> b!87428 (= res!44850 e!56940)))

(declare-fun c!14414 () Bool)

(assert (=> b!87428 (= c!14414 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87429 () Bool)

(declare-fun e!56938 () ListLongMap!1441)

(assert (=> b!87429 (= e!56938 call!8329)))

(declare-fun b!87430 () Bool)

(assert (=> b!87430 (= e!56941 (validKeyInArray!0 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!87431 () Bool)

(assert (=> b!87431 (= e!56938 call!8328)))

(declare-fun b!87432 () Bool)

(assert (=> b!87432 (= e!56942 call!8329)))

(declare-fun bm!8327 () Bool)

(assert (=> bm!8327 (= call!8325 (contains!747 lt!41490 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87433 () Bool)

(assert (=> b!87433 (= e!56939 (= (apply!82 lt!41490 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87434 () Bool)

(declare-fun c!14413 () Bool)

(assert (=> b!87434 (= c!14413 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87434 (= e!56942 e!56938)))

(declare-fun b!87435 () Bool)

(assert (=> b!87435 (= e!56943 (= (apply!82 lt!41490 (select (arr!1910 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16)))) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87435 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))))))

(assert (=> b!87435 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun bm!8328 () Bool)

(assert (=> bm!8328 (= call!8327 (contains!747 lt!41490 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23257 c!14412) b!87424))

(assert (= (and d!23257 (not c!14412)) b!87419))

(assert (= (and b!87419 c!14411) b!87432))

(assert (= (and b!87419 (not c!14411)) b!87434))

(assert (= (and b!87434 c!14413) b!87429))

(assert (= (and b!87434 (not c!14413)) b!87431))

(assert (= (or b!87429 b!87431) bm!8323))

(assert (= (or b!87432 bm!8323) bm!8324))

(assert (= (or b!87432 b!87429) bm!8325))

(assert (= (or b!87424 bm!8324) bm!8326))

(assert (= (or b!87424 bm!8325) bm!8322))

(assert (= (and d!23257 res!44849) b!87427))

(assert (= (and d!23257 c!14409) b!87416))

(assert (= (and d!23257 (not c!14409)) b!87426))

(assert (= (and d!23257 res!44842) b!87417))

(assert (= (and b!87417 res!44846) b!87430))

(assert (= (and b!87417 (not res!44844)) b!87415))

(assert (= (and b!87415 res!44847) b!87435))

(assert (= (and b!87417 res!44845) b!87428))

(assert (= (and b!87428 c!14414) b!87422))

(assert (= (and b!87428 (not c!14414)) b!87420))

(assert (= (and b!87422 res!44843) b!87433))

(assert (= (or b!87422 b!87420) bm!8328))

(assert (= (and b!87428 res!44850) b!87423))

(assert (= (and b!87423 c!14410) b!87425))

(assert (= (and b!87423 (not c!14410)) b!87418))

(assert (= (and b!87425 res!44848) b!87421))

(assert (= (or b!87425 b!87418) bm!8327))

(declare-fun b_lambda!3855 () Bool)

(assert (=> (not b_lambda!3855) (not b!87435)))

(assert (=> b!87435 t!5233))

(declare-fun b_and!5261 () Bool)

(assert (= b_and!5257 (and (=> t!5233 result!2923) b_and!5261)))

(assert (=> b!87435 t!5235))

(declare-fun b_and!5263 () Bool)

(assert (= b_and!5259 (and (=> t!5235 result!2925) b_and!5263)))

(declare-fun m!93159 () Bool)

(assert (=> b!87424 m!93159))

(declare-fun m!93161 () Bool)

(assert (=> b!87433 m!93161))

(declare-fun m!93163 () Bool)

(assert (=> b!87435 m!93163))

(assert (=> b!87435 m!90319))

(declare-fun m!93165 () Bool)

(assert (=> b!87435 m!93165))

(assert (=> b!87435 m!93163))

(assert (=> b!87435 m!90319))

(assert (=> b!87435 m!93119))

(declare-fun m!93167 () Bool)

(assert (=> b!87435 m!93167))

(assert (=> b!87435 m!93119))

(declare-fun m!93169 () Bool)

(assert (=> bm!8326 m!93169))

(assert (=> b!87427 m!93119))

(assert (=> b!87427 m!93119))

(assert (=> b!87427 m!93121))

(declare-fun m!93171 () Bool)

(assert (=> bm!8328 m!93171))

(declare-fun m!93173 () Bool)

(assert (=> bm!8322 m!93173))

(declare-fun m!93175 () Bool)

(assert (=> b!87416 m!93175))

(declare-fun m!93177 () Bool)

(assert (=> b!87416 m!93177))

(declare-fun m!93179 () Bool)

(assert (=> b!87416 m!93179))

(declare-fun m!93181 () Bool)

(assert (=> b!87416 m!93181))

(declare-fun m!93183 () Bool)

(assert (=> b!87416 m!93183))

(assert (=> b!87416 m!93169))

(assert (=> b!87416 m!93119))

(declare-fun m!93185 () Bool)

(assert (=> b!87416 m!93185))

(declare-fun m!93187 () Bool)

(assert (=> b!87416 m!93187))

(declare-fun m!93189 () Bool)

(assert (=> b!87416 m!93189))

(declare-fun m!93191 () Bool)

(assert (=> b!87416 m!93191))

(declare-fun m!93193 () Bool)

(assert (=> b!87416 m!93193))

(declare-fun m!93195 () Bool)

(assert (=> b!87416 m!93195))

(declare-fun m!93197 () Bool)

(assert (=> b!87416 m!93197))

(declare-fun m!93199 () Bool)

(assert (=> b!87416 m!93199))

(assert (=> b!87416 m!93183))

(declare-fun m!93201 () Bool)

(assert (=> b!87416 m!93201))

(assert (=> b!87416 m!93175))

(assert (=> b!87416 m!93193))

(assert (=> b!87416 m!93189))

(declare-fun m!93203 () Bool)

(assert (=> b!87416 m!93203))

(assert (=> b!87430 m!93119))

(assert (=> b!87430 m!93119))

(assert (=> b!87430 m!93121))

(declare-fun m!93205 () Bool)

(assert (=> bm!8327 m!93205))

(assert (=> d!23257 m!90203))

(declare-fun m!93207 () Bool)

(assert (=> b!87421 m!93207))

(assert (=> b!87415 m!93119))

(assert (=> b!87415 m!93119))

(declare-fun m!93209 () Bool)

(assert (=> b!87415 m!93209))

(assert (=> d!22375 d!23257))

(assert (=> d!22375 d!22157))

(declare-fun d!23259 () Bool)

(assert (=> d!23259 (arrayContainsKey!0 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!41495 () Unit!2498)

(assert (=> d!23259 (= lt!41495 (choose!13 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))))))

(assert (=> d!23259 (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000)))

(assert (=> d!23259 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40822 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518))) lt!41495)))

(declare-fun bs!3708 () Bool)

(assert (= bs!3708 d!23259))

(assert (=> bs!3708 m!89569))

(assert (=> bs!3708 m!90733))

(assert (=> bs!3708 m!89569))

(declare-fun m!93211 () Bool)

(assert (=> bs!3708 m!93211))

(assert (=> d!22375 d!23259))

(declare-fun d!23261 () Bool)

(declare-fun e!56947 () Bool)

(assert (=> d!23261 e!56947))

(declare-fun res!44853 () Bool)

(assert (=> d!23261 (=> (not res!44853) (not e!56947))))

(assert (=> d!23261 (= res!44853 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 (_keys!4009 newMap!16))) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2155 (_values!2320 newMap!16)))))))

(declare-fun lt!41498 () Unit!2498)

(declare-fun choose!518 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2498)

(assert (=> d!23261 (= lt!41498 (choose!518 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)))))

(assert (=> d!23261 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23261 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)) lt!41498)))

(declare-fun b!87438 () Bool)

(assert (=> b!87438 (= e!56947 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (getCurrentListMap!430 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))))

(assert (= (and d!23261 res!44853) b!87438))

(assert (=> d!23261 m!89569))

(declare-fun m!93213 () Bool)

(assert (=> d!23261 m!93213))

(assert (=> d!23261 m!90203))

(assert (=> b!87438 m!90751))

(assert (=> b!87438 m!90729))

(assert (=> b!87438 m!90747))

(assert (=> b!87438 m!89901))

(assert (=> b!87438 m!90543))

(assert (=> b!87438 m!89901))

(assert (=> d!22375 d!23261))

(declare-fun d!23263 () Bool)

(declare-fun e!56950 () Bool)

(assert (=> d!23263 e!56950))

(declare-fun res!44856 () Bool)

(assert (=> d!23263 (=> (not res!44856) (not e!56950))))

(assert (=> d!23263 (= res!44856 (and (bvsge (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) #b00000000000000000000000000000000) (bvslt (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (size!2154 (_keys!4009 newMap!16)))))))

(declare-fun lt!41501 () Unit!2498)

(declare-fun choose!41 (array!4011 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1508) Unit!2498)

(assert (=> d!23263 (= lt!41501 (choose!41 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) lt!40820 lt!40815))))

(assert (=> d!23263 (bvslt (size!2154 (_keys!4009 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!23263 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4009 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) lt!40820 lt!40815) lt!41501)))

(declare-fun b!87441 () Bool)

(assert (=> b!87441 (= e!56950 (arrayNoDuplicates!0 (array!4012 (store (arr!1910 (_keys!4009 newMap!16)) (ite c!13896 (index!3088 lt!40518) (index!3085 lt!40518)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (size!2154 (_keys!4009 newMap!16))) lt!40820 lt!40815))))

(assert (= (and d!23263 res!44856) b!87441))

(assert (=> d!23263 m!89569))

(declare-fun m!93215 () Bool)

(assert (=> d!23263 m!93215))

(assert (=> b!87441 m!90747))

(assert (=> b!87441 m!90721))

(assert (=> d!22375 d!23263))

(assert (=> d!22375 d!22313))

(declare-fun d!23265 () Bool)

(assert (=> d!23265 (isDefined!93 (getValueByKey!141 (toList!736 lt!40353) (_1!1105 lt!40197)))))

(declare-fun lt!41502 () Unit!2498)

(assert (=> d!23265 (= lt!41502 (choose!517 (toList!736 lt!40353) (_1!1105 lt!40197)))))

(declare-fun e!56951 () Bool)

(assert (=> d!23265 e!56951))

(declare-fun res!44857 () Bool)

(assert (=> d!23265 (=> (not res!44857) (not e!56951))))

(assert (=> d!23265 (= res!44857 (isStrictlySorted!285 (toList!736 lt!40353)))))

(assert (=> d!23265 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40353) (_1!1105 lt!40197)) lt!41502)))

(declare-fun b!87442 () Bool)

(assert (=> b!87442 (= e!56951 (containsKey!144 (toList!736 lt!40353) (_1!1105 lt!40197)))))

(assert (= (and d!23265 res!44857) b!87442))

(assert (=> d!23265 m!89817))

(assert (=> d!23265 m!89817))

(assert (=> d!23265 m!90511))

(declare-fun m!93217 () Bool)

(assert (=> d!23265 m!93217))

(declare-fun m!93219 () Bool)

(assert (=> d!23265 m!93219))

(assert (=> b!87442 m!90507))

(assert (=> b!85953 d!23265))

(assert (=> b!85953 d!22619))

(assert (=> b!85953 d!22237))

(declare-fun d!23267 () Bool)

(declare-fun res!44858 () Bool)

(declare-fun e!56952 () Bool)

(assert (=> d!23267 (=> res!44858 e!56952)))

(assert (=> d!23267 (= res!44858 (and ((_ is Cons!1505) (toList!736 lt!40357)) (= (_1!1105 (h!2096 (toList!736 lt!40357))) (_1!1105 lt!40192))))))

(assert (=> d!23267 (= (containsKey!144 (toList!736 lt!40357) (_1!1105 lt!40192)) e!56952)))

(declare-fun b!87443 () Bool)

(declare-fun e!56953 () Bool)

(assert (=> b!87443 (= e!56952 e!56953)))

(declare-fun res!44859 () Bool)

(assert (=> b!87443 (=> (not res!44859) (not e!56953))))

(assert (=> b!87443 (= res!44859 (and (or (not ((_ is Cons!1505) (toList!736 lt!40357))) (bvsle (_1!1105 (h!2096 (toList!736 lt!40357))) (_1!1105 lt!40192))) ((_ is Cons!1505) (toList!736 lt!40357)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40357))) (_1!1105 lt!40192))))))

(declare-fun b!87444 () Bool)

(assert (=> b!87444 (= e!56953 (containsKey!144 (t!5222 (toList!736 lt!40357)) (_1!1105 lt!40192)))))

(assert (= (and d!23267 (not res!44858)) b!87443))

(assert (= (and b!87443 res!44859) b!87444))

(declare-fun m!93221 () Bool)

(assert (=> b!87444 m!93221))

(assert (=> d!22353 d!23267))

(declare-fun d!23269 () Bool)

(declare-fun e!56955 () Bool)

(assert (=> d!23269 e!56955))

(declare-fun res!44860 () Bool)

(assert (=> d!23269 (=> res!44860 e!56955)))

(declare-fun lt!41504 () Bool)

(assert (=> d!23269 (= res!44860 (not lt!41504))))

(declare-fun lt!41506 () Bool)

(assert (=> d!23269 (= lt!41504 lt!41506)))

(declare-fun lt!41503 () Unit!2498)

(declare-fun e!56954 () Unit!2498)

(assert (=> d!23269 (= lt!41503 e!56954)))

(declare-fun c!14415 () Bool)

(assert (=> d!23269 (= c!14415 lt!41506)))

(assert (=> d!23269 (= lt!41506 (containsKey!144 (toList!736 lt!40726) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> d!23269 (= (contains!747 lt!40726 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41504)))

(declare-fun b!87445 () Bool)

(declare-fun lt!41505 () Unit!2498)

(assert (=> b!87445 (= e!56954 lt!41505)))

(assert (=> b!87445 (= lt!41505 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40726) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(assert (=> b!87445 (isDefined!93 (getValueByKey!141 (toList!736 lt!40726) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87446 () Bool)

(declare-fun Unit!2578 () Unit!2498)

(assert (=> b!87446 (= e!56954 Unit!2578)))

(declare-fun b!87447 () Bool)

(assert (=> b!87447 (= e!56955 (isDefined!93 (getValueByKey!141 (toList!736 lt!40726) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!23269 c!14415) b!87445))

(assert (= (and d!23269 (not c!14415)) b!87446))

(assert (= (and d!23269 (not res!44860)) b!87447))

(declare-fun m!93223 () Bool)

(assert (=> d!23269 m!93223))

(declare-fun m!93225 () Bool)

(assert (=> b!87445 m!93225))

(assert (=> b!87445 m!90629))

(assert (=> b!87445 m!90629))

(declare-fun m!93227 () Bool)

(assert (=> b!87445 m!93227))

(assert (=> b!87447 m!90629))

(assert (=> b!87447 m!90629))

(assert (=> b!87447 m!93227))

(assert (=> d!22349 d!23269))

(declare-fun b!87451 () Bool)

(declare-fun e!56957 () Option!147)

(assert (=> b!87451 (= e!56957 None!145)))

(declare-fun d!23271 () Bool)

(declare-fun c!14416 () Bool)

(assert (=> d!23271 (= c!14416 (and ((_ is Cons!1505) lt!40724) (= (_1!1105 (h!2096 lt!40724)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56956 () Option!147)

(assert (=> d!23271 (= (getValueByKey!141 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) e!56956)))

(declare-fun b!87449 () Bool)

(assert (=> b!87449 (= e!56956 e!56957)))

(declare-fun c!14417 () Bool)

(assert (=> b!87449 (= c!14417 (and ((_ is Cons!1505) lt!40724) (not (= (_1!1105 (h!2096 lt!40724)) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun b!87450 () Bool)

(assert (=> b!87450 (= e!56957 (getValueByKey!141 (t!5222 lt!40724) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87448 () Bool)

(assert (=> b!87448 (= e!56956 (Some!146 (_2!1105 (h!2096 lt!40724))))))

(assert (= (and d!23271 c!14416) b!87448))

(assert (= (and d!23271 (not c!14416)) b!87449))

(assert (= (and b!87449 c!14417) b!87450))

(assert (= (and b!87449 (not c!14417)) b!87451))

(declare-fun m!93229 () Bool)

(assert (=> b!87450 m!93229))

(assert (=> d!22349 d!23271))

(declare-fun d!23273 () Bool)

(assert (=> d!23273 (= (getValueByKey!141 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) (Some!146 (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun lt!41507 () Unit!2498)

(assert (=> d!23273 (= lt!41507 (choose!511 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun e!56958 () Bool)

(assert (=> d!23273 e!56958))

(declare-fun res!44861 () Bool)

(assert (=> d!23273 (=> (not res!44861) (not e!56958))))

(assert (=> d!23273 (= res!44861 (isStrictlySorted!285 lt!40724))))

(assert (=> d!23273 (= (lemmaContainsTupThenGetReturnValue!58 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41507)))

(declare-fun b!87452 () Bool)

(declare-fun res!44862 () Bool)

(assert (=> b!87452 (=> (not res!44862) (not e!56958))))

(assert (=> b!87452 (= res!44862 (containsKey!144 lt!40724 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87453 () Bool)

(assert (=> b!87453 (= e!56958 (contains!749 lt!40724 (tuple2!2189 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (= (and d!23273 res!44861) b!87452))

(assert (= (and b!87452 res!44862) b!87453))

(assert (=> d!23273 m!90623))

(declare-fun m!93231 () Bool)

(assert (=> d!23273 m!93231))

(declare-fun m!93233 () Bool)

(assert (=> d!23273 m!93233))

(declare-fun m!93235 () Bool)

(assert (=> b!87452 m!93235))

(declare-fun m!93237 () Bool)

(assert (=> b!87453 m!93237))

(assert (=> d!22349 d!23273))

(declare-fun b!87454 () Bool)

(declare-fun e!56962 () List!1509)

(declare-fun call!8332 () List!1509)

(assert (=> b!87454 (= e!56962 call!8332)))

(declare-fun bm!8329 () Bool)

(declare-fun c!14421 () Bool)

(declare-fun e!56961 () List!1509)

(declare-fun call!8333 () List!1509)

(assert (=> bm!8329 (= call!8333 ($colon$colon!71 e!56961 (ite c!14421 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (tuple2!2189 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))))

(declare-fun c!14420 () Bool)

(assert (=> bm!8329 (= c!14420 c!14421)))

(declare-fun c!14419 () Bool)

(declare-fun b!87455 () Bool)

(assert (=> b!87455 (= c!14419 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (bvsgt (_1!1105 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun e!56959 () List!1509)

(assert (=> b!87455 (= e!56962 e!56959)))

(declare-fun b!87456 () Bool)

(declare-fun e!56963 () Bool)

(declare-fun lt!41508 () List!1509)

(assert (=> b!87456 (= e!56963 (contains!749 lt!41508 (tuple2!2189 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!87457 () Bool)

(declare-fun res!44863 () Bool)

(assert (=> b!87457 (=> (not res!44863) (not e!56963))))

(assert (=> b!87457 (= res!44863 (containsKey!144 lt!41508 (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun bm!8330 () Bool)

(assert (=> bm!8330 (= call!8332 call!8333)))

(declare-fun b!87458 () Bool)

(assert (=> b!87458 (= e!56961 (insertStrictlySorted!61 (t!5222 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))))))

(declare-fun b!87459 () Bool)

(declare-fun c!14418 () Bool)

(assert (=> b!87459 (= e!56961 (ite c!14418 (t!5222 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (ite c!14419 (Cons!1505 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (t!5222 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) Nil!1506)))))

(declare-fun b!87460 () Bool)

(declare-fun e!56960 () List!1509)

(assert (=> b!87460 (= e!56960 call!8333)))

(declare-fun bm!8331 () Bool)

(declare-fun call!8334 () List!1509)

(assert (=> bm!8331 (= call!8334 call!8332)))

(declare-fun d!23275 () Bool)

(assert (=> d!23275 e!56963))

(declare-fun res!44864 () Bool)

(assert (=> d!23275 (=> (not res!44864) (not e!56963))))

(assert (=> d!23275 (= res!44864 (isStrictlySorted!285 lt!41508))))

(assert (=> d!23275 (= lt!41508 e!56960)))

(assert (=> d!23275 (= c!14421 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (bvslt (_1!1105 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(assert (=> d!23275 (isStrictlySorted!285 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23275 (= (insertStrictlySorted!61 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) (_2!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992)))))) lt!41508)))

(declare-fun b!87461 () Bool)

(assert (=> b!87461 (= e!56959 call!8334)))

(declare-fun b!87462 () Bool)

(assert (=> b!87462 (= e!56960 e!56962)))

(assert (=> b!87462 (= c!14418 (and ((_ is Cons!1505) (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))) (= (_1!1105 (h!2096 (toList!736 (+!107 lt!40187 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))) (_1!1105 (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))))

(declare-fun b!87463 () Bool)

(assert (=> b!87463 (= e!56959 call!8334)))

(assert (= (and d!23275 c!14421) b!87460))

(assert (= (and d!23275 (not c!14421)) b!87462))

(assert (= (and b!87462 c!14418) b!87454))

(assert (= (and b!87462 (not c!14418)) b!87455))

(assert (= (and b!87455 c!14419) b!87461))

(assert (= (and b!87455 (not c!14419)) b!87463))

(assert (= (or b!87461 b!87463) bm!8331))

(assert (= (or b!87454 bm!8331) bm!8330))

(assert (= (or b!87460 bm!8330) bm!8329))

(assert (= (and bm!8329 c!14420) b!87458))

(assert (= (and bm!8329 (not c!14420)) b!87459))

(assert (= (and d!23275 res!44864) b!87457))

(assert (= (and b!87457 res!44863) b!87456))

(declare-fun m!93239 () Bool)

(assert (=> b!87456 m!93239))

(declare-fun m!93241 () Bool)

(assert (=> b!87457 m!93241))

(declare-fun m!93243 () Bool)

(assert (=> bm!8329 m!93243))

(declare-fun m!93245 () Bool)

(assert (=> d!23275 m!93245))

(declare-fun m!93247 () Bool)

(assert (=> d!23275 m!93247))

(declare-fun m!93249 () Bool)

(assert (=> b!87458 m!93249))

(assert (=> d!22349 d!23275))

(declare-fun b!87476 () Bool)

(declare-fun e!56970 () SeekEntryResult!237)

(assert (=> b!87476 (= e!56970 Undefined!237)))

(declare-fun b!87477 () Bool)

(declare-fun e!56971 () SeekEntryResult!237)

(assert (=> b!87477 (= e!56971 (Found!237 (index!3087 lt!40855)))))

(declare-fun d!23277 () Bool)

(declare-fun lt!41513 () SeekEntryResult!237)

(assert (=> d!23277 (and (or ((_ is Undefined!237) lt!41513) (not ((_ is Found!237) lt!41513)) (and (bvsge (index!3086 lt!41513) #b00000000000000000000000000000000) (bvslt (index!3086 lt!41513) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!41513) ((_ is Found!237) lt!41513) (not ((_ is MissingVacant!237) lt!41513)) (not (= (index!3088 lt!41513) (index!3087 lt!40855))) (and (bvsge (index!3088 lt!41513) #b00000000000000000000000000000000) (bvslt (index!3088 lt!41513) (size!2154 (_keys!4009 newMap!16))))) (or ((_ is Undefined!237) lt!41513) (ite ((_ is Found!237) lt!41513) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!41513)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)) (and ((_ is MissingVacant!237) lt!41513) (= (index!3088 lt!41513) (index!3087 lt!40855)) (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3088 lt!41513)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!23277 (= lt!41513 e!56970)))

(declare-fun c!14429 () Bool)

(assert (=> d!23277 (= c!14429 (bvsge (x!11990 lt!40855) #b01111111111111111111111111111110))))

(declare-fun lt!41514 () (_ BitVec 64))

(assert (=> d!23277 (= lt!41514 (select (arr!1910 (_keys!4009 newMap!16)) (index!3087 lt!40855)))))

(assert (=> d!23277 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23277 (= (seekKeyOrZeroReturnVacant!0 (x!11990 lt!40855) (index!3087 lt!40855) (index!3087 lt!40855) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)) lt!41513)))

(declare-fun b!87478 () Bool)

(declare-fun c!14428 () Bool)

(assert (=> b!87478 (= c!14428 (= lt!41514 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56972 () SeekEntryResult!237)

(assert (=> b!87478 (= e!56971 e!56972)))

(declare-fun b!87479 () Bool)

(assert (=> b!87479 (= e!56972 (MissingVacant!237 (index!3087 lt!40855)))))

(declare-fun b!87480 () Bool)

(assert (=> b!87480 (= e!56970 e!56971)))

(declare-fun c!14430 () Bool)

(assert (=> b!87480 (= c!14430 (= lt!41514 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(declare-fun b!87481 () Bool)

(assert (=> b!87481 (= e!56972 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11990 lt!40855) #b00000000000000000000000000000001) (nextIndex!0 (index!3087 lt!40855) (bvadd (x!11990 lt!40855) #b00000000000000000000000000000001) (mask!6365 newMap!16)) (index!3087 lt!40855) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(assert (= (and d!23277 c!14429) b!87476))

(assert (= (and d!23277 (not c!14429)) b!87480))

(assert (= (and b!87480 c!14430) b!87477))

(assert (= (and b!87480 (not c!14430)) b!87478))

(assert (= (and b!87478 c!14428) b!87479))

(assert (= (and b!87478 (not c!14428)) b!87481))

(declare-fun m!93251 () Bool)

(assert (=> d!23277 m!93251))

(declare-fun m!93253 () Bool)

(assert (=> d!23277 m!93253))

(assert (=> d!23277 m!90789))

(assert (=> d!23277 m!90203))

(declare-fun m!93255 () Bool)

(assert (=> b!87481 m!93255))

(assert (=> b!87481 m!93255))

(assert (=> b!87481 m!89569))

(declare-fun m!93257 () Bool)

(assert (=> b!87481 m!93257))

(assert (=> b!86120 d!23277))

(declare-fun d!23279 () Bool)

(declare-fun res!44865 () Bool)

(declare-fun e!56973 () Bool)

(assert (=> d!23279 (=> res!44865 e!56973)))

(assert (=> d!23279 (= res!44865 (and ((_ is Cons!1505) lt!40736) (= (_1!1105 (h!2096 lt!40736)) (_1!1105 lt!40192))))))

(assert (=> d!23279 (= (containsKey!144 lt!40736 (_1!1105 lt!40192)) e!56973)))

(declare-fun b!87482 () Bool)

(declare-fun e!56974 () Bool)

(assert (=> b!87482 (= e!56973 e!56974)))

(declare-fun res!44866 () Bool)

(assert (=> b!87482 (=> (not res!44866) (not e!56974))))

(assert (=> b!87482 (= res!44866 (and (or (not ((_ is Cons!1505) lt!40736)) (bvsle (_1!1105 (h!2096 lt!40736)) (_1!1105 lt!40192))) ((_ is Cons!1505) lt!40736) (bvslt (_1!1105 (h!2096 lt!40736)) (_1!1105 lt!40192))))))

(declare-fun b!87483 () Bool)

(assert (=> b!87483 (= e!56974 (containsKey!144 (t!5222 lt!40736) (_1!1105 lt!40192)))))

(assert (= (and d!23279 (not res!44865)) b!87482))

(assert (= (and b!87482 res!44866) b!87483))

(declare-fun m!93259 () Bool)

(assert (=> b!87483 m!93259))

(assert (=> b!86014 d!23279))

(declare-fun d!23281 () Bool)

(declare-fun e!56976 () Bool)

(assert (=> d!23281 e!56976))

(declare-fun res!44867 () Bool)

(assert (=> d!23281 (=> res!44867 e!56976)))

(declare-fun lt!41516 () Bool)

(assert (=> d!23281 (= res!44867 (not lt!41516))))

(declare-fun lt!41518 () Bool)

(assert (=> d!23281 (= lt!41516 lt!41518)))

(declare-fun lt!41515 () Unit!2498)

(declare-fun e!56975 () Unit!2498)

(assert (=> d!23281 (= lt!41515 e!56975)))

(declare-fun c!14431 () Bool)

(assert (=> d!23281 (= c!14431 lt!41518)))

(assert (=> d!23281 (= lt!41518 (containsKey!144 (toList!736 lt!40919) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> d!23281 (= (contains!747 lt!40919 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41516)))

(declare-fun b!87484 () Bool)

(declare-fun lt!41517 () Unit!2498)

(assert (=> b!87484 (= e!56975 lt!41517)))

(assert (=> b!87484 (= lt!41517 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40919) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(assert (=> b!87484 (isDefined!93 (getValueByKey!141 (toList!736 lt!40919) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87485 () Bool)

(declare-fun Unit!2579 () Unit!2498)

(assert (=> b!87485 (= e!56975 Unit!2579)))

(declare-fun b!87486 () Bool)

(assert (=> b!87486 (= e!56976 (isDefined!93 (getValueByKey!141 (toList!736 lt!40919) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!23281 c!14431) b!87484))

(assert (= (and d!23281 (not c!14431)) b!87485))

(assert (= (and d!23281 (not res!44867)) b!87486))

(declare-fun m!93261 () Bool)

(assert (=> d!23281 m!93261))

(declare-fun m!93263 () Bool)

(assert (=> b!87484 m!93263))

(assert (=> b!87484 m!90953))

(assert (=> b!87484 m!90953))

(declare-fun m!93265 () Bool)

(assert (=> b!87484 m!93265))

(assert (=> b!87486 m!90953))

(assert (=> b!87486 m!90953))

(assert (=> b!87486 m!93265))

(assert (=> d!22405 d!23281))

(declare-fun b!87490 () Bool)

(declare-fun e!56978 () Option!147)

(assert (=> b!87490 (= e!56978 None!145)))

(declare-fun d!23283 () Bool)

(declare-fun c!14432 () Bool)

(assert (=> d!23283 (= c!14432 (and ((_ is Cons!1505) lt!40917) (= (_1!1105 (h!2096 lt!40917)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56977 () Option!147)

(assert (=> d!23283 (= (getValueByKey!141 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) e!56977)))

(declare-fun b!87488 () Bool)

(assert (=> b!87488 (= e!56977 e!56978)))

(declare-fun c!14433 () Bool)

(assert (=> b!87488 (= c!14433 (and ((_ is Cons!1505) lt!40917) (not (= (_1!1105 (h!2096 lt!40917)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun b!87489 () Bool)

(assert (=> b!87489 (= e!56978 (getValueByKey!141 (t!5222 lt!40917) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87487 () Bool)

(assert (=> b!87487 (= e!56977 (Some!146 (_2!1105 (h!2096 lt!40917))))))

(assert (= (and d!23283 c!14432) b!87487))

(assert (= (and d!23283 (not c!14432)) b!87488))

(assert (= (and b!87488 c!14433) b!87489))

(assert (= (and b!87488 (not c!14433)) b!87490))

(declare-fun m!93267 () Bool)

(assert (=> b!87489 m!93267))

(assert (=> d!22405 d!23283))

(declare-fun d!23285 () Bool)

(assert (=> d!23285 (= (getValueByKey!141 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) (Some!146 (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun lt!41519 () Unit!2498)

(assert (=> d!23285 (= lt!41519 (choose!511 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun e!56979 () Bool)

(assert (=> d!23285 e!56979))

(declare-fun res!44868 () Bool)

(assert (=> d!23285 (=> (not res!44868) (not e!56979))))

(assert (=> d!23285 (= res!44868 (isStrictlySorted!285 lt!40917))))

(assert (=> d!23285 (= (lemmaContainsTupThenGetReturnValue!58 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41519)))

(declare-fun b!87491 () Bool)

(declare-fun res!44869 () Bool)

(assert (=> b!87491 (=> (not res!44869) (not e!56979))))

(assert (=> b!87491 (= res!44869 (containsKey!144 lt!40917 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87492 () Bool)

(assert (=> b!87492 (= e!56979 (contains!749 lt!40917 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (= (and d!23285 res!44868) b!87491))

(assert (= (and b!87491 res!44869) b!87492))

(assert (=> d!23285 m!90947))

(declare-fun m!93269 () Bool)

(assert (=> d!23285 m!93269))

(declare-fun m!93271 () Bool)

(assert (=> d!23285 m!93271))

(declare-fun m!93273 () Bool)

(assert (=> b!87491 m!93273))

(declare-fun m!93275 () Bool)

(assert (=> b!87492 m!93275))

(assert (=> d!22405 d!23285))

(declare-fun b!87493 () Bool)

(declare-fun e!56983 () List!1509)

(declare-fun call!8335 () List!1509)

(assert (=> b!87493 (= e!56983 call!8335)))

(declare-fun c!14437 () Bool)

(declare-fun e!56982 () List!1509)

(declare-fun call!8336 () List!1509)

(declare-fun bm!8332 () Bool)

(assert (=> bm!8332 (= call!8336 ($colon$colon!71 e!56982 (ite c!14437 (h!2096 (toList!736 lt!40193)) (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))))

(declare-fun c!14436 () Bool)

(assert (=> bm!8332 (= c!14436 c!14437)))

(declare-fun c!14435 () Bool)

(declare-fun b!87494 () Bool)

(assert (=> b!87494 (= c!14435 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvsgt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun e!56980 () List!1509)

(assert (=> b!87494 (= e!56983 e!56980)))

(declare-fun e!56984 () Bool)

(declare-fun b!87495 () Bool)

(declare-fun lt!41520 () List!1509)

(assert (=> b!87495 (= e!56984 (contains!749 lt!41520 (tuple2!2189 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87496 () Bool)

(declare-fun res!44870 () Bool)

(assert (=> b!87496 (=> (not res!44870) (not e!56984))))

(assert (=> b!87496 (= res!44870 (containsKey!144 lt!41520 (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun bm!8333 () Bool)

(assert (=> bm!8333 (= call!8335 call!8336)))

(declare-fun b!87497 () Bool)

(assert (=> b!87497 (= e!56982 (insertStrictlySorted!61 (t!5222 (toList!736 lt!40193)) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))))))

(declare-fun b!87498 () Bool)

(declare-fun c!14434 () Bool)

(assert (=> b!87498 (= e!56982 (ite c!14434 (t!5222 (toList!736 lt!40193)) (ite c!14435 (Cons!1505 (h!2096 (toList!736 lt!40193)) (t!5222 (toList!736 lt!40193))) Nil!1506)))))

(declare-fun b!87499 () Bool)

(declare-fun e!56981 () List!1509)

(assert (=> b!87499 (= e!56981 call!8336)))

(declare-fun bm!8334 () Bool)

(declare-fun call!8337 () List!1509)

(assert (=> bm!8334 (= call!8337 call!8335)))

(declare-fun d!23287 () Bool)

(assert (=> d!23287 e!56984))

(declare-fun res!44871 () Bool)

(assert (=> d!23287 (=> (not res!44871) (not e!56984))))

(assert (=> d!23287 (= res!44871 (isStrictlySorted!285 lt!41520))))

(assert (=> d!23287 (= lt!41520 e!56981)))

(assert (=> d!23287 (= c!14437 (and ((_ is Cons!1505) (toList!736 lt!40193)) (bvslt (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(assert (=> d!23287 (isStrictlySorted!285 (toList!736 lt!40193))))

(assert (=> d!23287 (= (insertStrictlySorted!61 (toList!736 lt!40193) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (_2!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194))) lt!41520)))

(declare-fun b!87500 () Bool)

(assert (=> b!87500 (= e!56980 call!8337)))

(declare-fun b!87501 () Bool)

(assert (=> b!87501 (= e!56981 e!56983)))

(assert (=> b!87501 (= c!14434 (and ((_ is Cons!1505) (toList!736 lt!40193)) (= (_1!1105 (h!2096 (toList!736 lt!40193))) (_1!1105 (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))))

(declare-fun b!87502 () Bool)

(assert (=> b!87502 (= e!56980 call!8337)))

(assert (= (and d!23287 c!14437) b!87499))

(assert (= (and d!23287 (not c!14437)) b!87501))

(assert (= (and b!87501 c!14434) b!87493))

(assert (= (and b!87501 (not c!14434)) b!87494))

(assert (= (and b!87494 c!14435) b!87500))

(assert (= (and b!87494 (not c!14435)) b!87502))

(assert (= (or b!87500 b!87502) bm!8334))

(assert (= (or b!87493 bm!8334) bm!8333))

(assert (= (or b!87499 bm!8333) bm!8332))

(assert (= (and bm!8332 c!14436) b!87497))

(assert (= (and bm!8332 (not c!14436)) b!87498))

(assert (= (and d!23287 res!44871) b!87496))

(assert (= (and b!87496 res!44870) b!87495))

(declare-fun m!93277 () Bool)

(assert (=> b!87495 m!93277))

(declare-fun m!93279 () Bool)

(assert (=> b!87496 m!93279))

(declare-fun m!93281 () Bool)

(assert (=> bm!8332 m!93281))

(declare-fun m!93283 () Bool)

(assert (=> d!23287 m!93283))

(assert (=> d!23287 m!90531))

(declare-fun m!93285 () Bool)

(assert (=> b!87497 m!93285))

(assert (=> d!22405 d!23287))

(declare-fun d!23289 () Bool)

(assert (=> d!23289 (= (apply!82 lt!40878 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1207 (getValueByKey!141 (toList!736 lt!40878) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3709 () Bool)

(assert (= bs!3709 d!23289))

(assert (=> bs!3709 m!92637))

(assert (=> bs!3709 m!92637))

(declare-fun m!93287 () Bool)

(assert (=> bs!3709 m!93287))

(assert (=> b!86133 d!23289))

(declare-fun d!23291 () Bool)

(assert (=> d!23291 (= ($colon$colon!71 e!55942 (ite c!13949 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197)))) (Cons!1505 (ite c!13949 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) e!55942))))

(assert (=> bm!8137 d!23291))

(declare-fun b!87503 () Bool)

(declare-fun e!56988 () Bool)

(declare-fun e!56987 () Bool)

(assert (=> b!87503 (= e!56988 e!56987)))

(declare-fun c!14438 () Bool)

(assert (=> b!87503 (= c!14438 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun b!87505 () Bool)

(declare-fun call!8338 () Bool)

(assert (=> b!87505 (= e!56987 call!8338)))

(declare-fun bm!8335 () Bool)

(assert (=> bm!8335 (= call!8338 (arrayNoDuplicates!0 (_keys!4009 (_2!1104 lt!40512)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14438 (Cons!1504 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000) Nil!1505) Nil!1505)))))

(declare-fun b!87506 () Bool)

(declare-fun e!56986 () Bool)

(assert (=> b!87506 (= e!56986 (contains!748 Nil!1505 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun b!87507 () Bool)

(declare-fun e!56985 () Bool)

(assert (=> b!87507 (= e!56985 e!56988)))

(declare-fun res!44872 () Bool)

(assert (=> b!87507 (=> (not res!44872) (not e!56988))))

(assert (=> b!87507 (= res!44872 (not e!56986))))

(declare-fun res!44873 () Bool)

(assert (=> b!87507 (=> (not res!44873) (not e!56986))))

(assert (=> b!87507 (= res!44873 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (_2!1104 lt!40512))) #b00000000000000000000000000000000)))))

(declare-fun d!23293 () Bool)

(declare-fun res!44874 () Bool)

(assert (=> d!23293 (=> res!44874 e!56985)))

(assert (=> d!23293 (= res!44874 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (_2!1104 lt!40512)))))))

(assert (=> d!23293 (= (arrayNoDuplicates!0 (_keys!4009 (_2!1104 lt!40512)) #b00000000000000000000000000000000 Nil!1505) e!56985)))

(declare-fun b!87504 () Bool)

(assert (=> b!87504 (= e!56987 call!8338)))

(assert (= (and d!23293 (not res!44874)) b!87507))

(assert (= (and b!87507 res!44873) b!87506))

(assert (= (and b!87507 res!44872) b!87503))

(assert (= (and b!87503 c!14438) b!87505))

(assert (= (and b!87503 (not c!14438)) b!87504))

(assert (= (or b!87505 b!87504) bm!8335))

(assert (=> b!87503 m!91551))

(assert (=> b!87503 m!91551))

(assert (=> b!87503 m!91557))

(assert (=> bm!8335 m!91551))

(declare-fun m!93289 () Bool)

(assert (=> bm!8335 m!93289))

(assert (=> b!87506 m!91551))

(assert (=> b!87506 m!91551))

(declare-fun m!93291 () Bool)

(assert (=> b!87506 m!93291))

(assert (=> b!87507 m!91551))

(assert (=> b!87507 m!91551))

(assert (=> b!87507 m!91557))

(assert (=> b!85990 d!23293))

(declare-fun d!23295 () Bool)

(assert (=> d!23295 (= (+!107 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) (getCurrentListMap!430 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!23295 true))

(declare-fun _$5!92 () Unit!2498)

(assert (=> d!23295 (= (choose!516 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3086 lt!40518) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194 (defaultEntry!2337 newMap!16)) _$5!92)))

(declare-fun bs!3710 () Bool)

(assert (= bs!3710 d!23295))

(assert (=> bs!3710 m!89901))

(assert (=> bs!3710 m!89901))

(assert (=> bs!3710 m!90543))

(assert (=> bs!3710 m!89981))

(assert (=> bs!3710 m!90545))

(assert (=> d!22329 d!23295))

(assert (=> d!22329 d!22427))

(declare-fun d!23297 () Bool)

(declare-fun res!44875 () Bool)

(declare-fun e!56989 () Bool)

(assert (=> d!23297 (=> res!44875 e!56989)))

(assert (=> d!23297 (= res!44875 (and ((_ is Cons!1505) lt!40366) (= (_1!1105 (h!2096 lt!40366)) (_1!1105 lt!40182))))))

(assert (=> d!23297 (= (containsKey!144 lt!40366 (_1!1105 lt!40182)) e!56989)))

(declare-fun b!87508 () Bool)

(declare-fun e!56990 () Bool)

(assert (=> b!87508 (= e!56989 e!56990)))

(declare-fun res!44876 () Bool)

(assert (=> b!87508 (=> (not res!44876) (not e!56990))))

(assert (=> b!87508 (= res!44876 (and (or (not ((_ is Cons!1505) lt!40366)) (bvsle (_1!1105 (h!2096 lt!40366)) (_1!1105 lt!40182))) ((_ is Cons!1505) lt!40366) (bvslt (_1!1105 (h!2096 lt!40366)) (_1!1105 lt!40182))))))

(declare-fun b!87509 () Bool)

(assert (=> b!87509 (= e!56990 (containsKey!144 (t!5222 lt!40366) (_1!1105 lt!40182)))))

(assert (= (and d!23297 (not res!44875)) b!87508))

(assert (= (and b!87508 res!44876) b!87509))

(declare-fun m!93293 () Bool)

(assert (=> b!87509 m!93293))

(assert (=> b!85763 d!23297))

(declare-fun lt!41521 () Bool)

(declare-fun d!23299 () Bool)

(assert (=> d!23299 (= lt!41521 (select (content!90 (toList!736 lt!40669)) (tuple2!2189 lt!40347 lt!40346)))))

(declare-fun e!56992 () Bool)

(assert (=> d!23299 (= lt!41521 e!56992)))

(declare-fun res!44878 () Bool)

(assert (=> d!23299 (=> (not res!44878) (not e!56992))))

(assert (=> d!23299 (= res!44878 ((_ is Cons!1505) (toList!736 lt!40669)))))

(assert (=> d!23299 (= (contains!749 (toList!736 lt!40669) (tuple2!2189 lt!40347 lt!40346)) lt!41521)))

(declare-fun b!87510 () Bool)

(declare-fun e!56991 () Bool)

(assert (=> b!87510 (= e!56992 e!56991)))

(declare-fun res!44877 () Bool)

(assert (=> b!87510 (=> res!44877 e!56991)))

(assert (=> b!87510 (= res!44877 (= (h!2096 (toList!736 lt!40669)) (tuple2!2189 lt!40347 lt!40346)))))

(declare-fun b!87511 () Bool)

(assert (=> b!87511 (= e!56991 (contains!749 (t!5222 (toList!736 lt!40669)) (tuple2!2189 lt!40347 lt!40346)))))

(assert (= (and d!23299 res!44878) b!87510))

(assert (= (and b!87510 (not res!44877)) b!87511))

(declare-fun m!93295 () Bool)

(assert (=> d!23299 m!93295))

(declare-fun m!93297 () Bool)

(assert (=> d!23299 m!93297))

(declare-fun m!93299 () Bool)

(assert (=> b!87511 m!93299))

(assert (=> b!85917 d!23299))

(declare-fun d!23301 () Bool)

(assert (=> d!23301 (isDefined!93 (getValueByKey!141 (toList!736 lt!40357) (_1!1105 lt!40192)))))

(declare-fun lt!41522 () Unit!2498)

(assert (=> d!23301 (= lt!41522 (choose!517 (toList!736 lt!40357) (_1!1105 lt!40192)))))

(declare-fun e!56993 () Bool)

(assert (=> d!23301 e!56993))

(declare-fun res!44879 () Bool)

(assert (=> d!23301 (=> (not res!44879) (not e!56993))))

(assert (=> d!23301 (= res!44879 (isStrictlySorted!285 (toList!736 lt!40357)))))

(assert (=> d!23301 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40357) (_1!1105 lt!40192)) lt!41522)))

(declare-fun b!87512 () Bool)

(assert (=> b!87512 (= e!56993 (containsKey!144 (toList!736 lt!40357) (_1!1105 lt!40192)))))

(assert (= (and d!23301 res!44879) b!87512))

(assert (=> d!23301 m!89829))

(assert (=> d!23301 m!89829))

(assert (=> d!23301 m!90643))

(declare-fun m!93301 () Bool)

(assert (=> d!23301 m!93301))

(declare-fun m!93303 () Bool)

(assert (=> d!23301 m!93303))

(assert (=> b!87512 m!90639))

(assert (=> b!86002 d!23301))

(assert (=> b!86002 d!22657))

(assert (=> b!86002 d!22263))

(declare-fun d!23303 () Bool)

(declare-fun lt!41523 () Bool)

(assert (=> d!23303 (= lt!41523 (select (content!90 (toList!736 lt!40726)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun e!56995 () Bool)

(assert (=> d!23303 (= lt!41523 e!56995)))

(declare-fun res!44881 () Bool)

(assert (=> d!23303 (=> (not res!44881) (not e!56995))))

(assert (=> d!23303 (= res!44881 ((_ is Cons!1505) (toList!736 lt!40726)))))

(assert (=> d!23303 (= (contains!749 (toList!736 lt!40726) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!41523)))

(declare-fun b!87513 () Bool)

(declare-fun e!56994 () Bool)

(assert (=> b!87513 (= e!56995 e!56994)))

(declare-fun res!44880 () Bool)

(assert (=> b!87513 (=> res!44880 e!56994)))

(assert (=> b!87513 (= res!44880 (= (h!2096 (toList!736 lt!40726)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun b!87514 () Bool)

(assert (=> b!87514 (= e!56994 (contains!749 (t!5222 (toList!736 lt!40726)) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2648 (underlying!292 thiss!992))))))))

(assert (= (and d!23303 res!44881) b!87513))

(assert (= (and b!87513 (not res!44880)) b!87514))

(declare-fun m!93305 () Bool)

(assert (=> d!23303 m!93305))

(declare-fun m!93307 () Bool)

(assert (=> d!23303 m!93307))

(declare-fun m!93309 () Bool)

(assert (=> b!87514 m!93309))

(assert (=> b!85998 d!23303))

(assert (=> b!85816 d!22419))

(assert (=> d!22315 d!22385))

(declare-fun d!23305 () Bool)

(declare-fun e!56998 () Bool)

(assert (=> d!23305 e!56998))

(declare-fun res!44886 () Bool)

(assert (=> d!23305 (=> (not res!44886) (not e!56998))))

(declare-fun lt!41526 () SeekEntryResult!237)

(assert (=> d!23305 (= res!44886 ((_ is Found!237) lt!41526))))

(assert (=> d!23305 (= lt!41526 (seekEntryOrOpen!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (_keys!4009 newMap!16) (mask!6365 newMap!16)))))

(assert (=> d!23305 true))

(declare-fun _$33!72 () Unit!2498)

(assert (=> d!23305 (= (choose!514 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) _$33!72)))

(declare-fun b!87519 () Bool)

(declare-fun res!44887 () Bool)

(assert (=> b!87519 (=> (not res!44887) (not e!56998))))

(assert (=> b!87519 (= res!44887 (inRange!0 (index!3086 lt!41526) (mask!6365 newMap!16)))))

(declare-fun b!87520 () Bool)

(assert (=> b!87520 (= e!56998 (= (select (arr!1910 (_keys!4009 newMap!16)) (index!3086 lt!41526)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355)))))

(assert (= (and d!23305 res!44886) b!87519))

(assert (= (and b!87519 res!44887) b!87520))

(assert (=> d!23305 m!89569))

(assert (=> d!23305 m!89957))

(declare-fun m!93311 () Bool)

(assert (=> b!87519 m!93311))

(declare-fun m!93313 () Bool)

(assert (=> b!87520 m!93313))

(assert (=> d!22315 d!23305))

(assert (=> d!22315 d!22427))

(assert (=> b!85893 d!23185))

(assert (=> b!85977 d!23251))

(assert (=> b!85977 d!22265))

(declare-fun call!8345 () ListLongMap!1441)

(declare-fun call!8340 () ListLongMap!1441)

(declare-fun c!14442 () Bool)

(declare-fun call!8344 () ListLongMap!1441)

(declare-fun call!8342 () ListLongMap!1441)

(declare-fun bm!8336 () Bool)

(declare-fun c!14441 () Bool)

(assert (=> bm!8336 (= call!8344 (+!107 (ite c!14442 call!8345 (ite c!14441 call!8340 call!8342)) (ite (or c!14442 c!14441) (tuple2!2189 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun d!23307 () Bool)

(declare-fun e!56999 () Bool)

(assert (=> d!23307 e!56999))

(declare-fun res!44888 () Bool)

(assert (=> d!23307 (=> (not res!44888) (not e!56999))))

(assert (=> d!23307 (= res!44888 (or (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))))

(declare-fun lt!41544 () ListLongMap!1441)

(declare-fun lt!41527 () ListLongMap!1441)

(assert (=> d!23307 (= lt!41544 lt!41527)))

(declare-fun lt!41541 () Unit!2498)

(declare-fun e!57003 () Unit!2498)

(assert (=> d!23307 (= lt!41541 e!57003)))

(declare-fun c!14439 () Bool)

(declare-fun e!57004 () Bool)

(assert (=> d!23307 (= c!14439 e!57004)))

(declare-fun res!44895 () Bool)

(assert (=> d!23307 (=> (not res!44895) (not e!57004))))

(assert (=> d!23307 (= res!44895 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun e!57011 () ListLongMap!1441)

(assert (=> d!23307 (= lt!41527 e!57011)))

(assert (=> d!23307 (= c!14442 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23307 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23307 (= (getCurrentListMap!430 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41544)))

(declare-fun bm!8337 () Bool)

(assert (=> bm!8337 (= call!8342 call!8340)))

(declare-fun b!87521 () Bool)

(declare-fun e!57001 () Bool)

(declare-fun e!57010 () Bool)

(assert (=> b!87521 (= e!57001 e!57010)))

(declare-fun res!44893 () Bool)

(assert (=> b!87521 (=> (not res!44893) (not e!57010))))

(assert (=> b!87521 (= res!44893 (contains!747 lt!41544 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87521 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!87522 () Bool)

(declare-fun lt!41530 () Unit!2498)

(assert (=> b!87522 (= e!57003 lt!41530)))

(declare-fun lt!41536 () ListLongMap!1441)

(assert (=> b!87522 (= lt!41536 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41532 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41532 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41540 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41540 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41535 () Unit!2498)

(assert (=> b!87522 (= lt!41535 (addStillContains!58 lt!41536 lt!41532 (zeroValue!2229 newMap!16) lt!41540))))

(assert (=> b!87522 (contains!747 (+!107 lt!41536 (tuple2!2189 lt!41532 (zeroValue!2229 newMap!16))) lt!41540)))

(declare-fun lt!41537 () Unit!2498)

(assert (=> b!87522 (= lt!41537 lt!41535)))

(declare-fun lt!41548 () ListLongMap!1441)

(assert (=> b!87522 (= lt!41548 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41531 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41531 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41528 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41528 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41547 () Unit!2498)

(assert (=> b!87522 (= lt!41547 (addApplyDifferent!58 lt!41548 lt!41531 (minValue!2229 newMap!16) lt!41528))))

(assert (=> b!87522 (= (apply!82 (+!107 lt!41548 (tuple2!2189 lt!41531 (minValue!2229 newMap!16))) lt!41528) (apply!82 lt!41548 lt!41528))))

(declare-fun lt!41529 () Unit!2498)

(assert (=> b!87522 (= lt!41529 lt!41547)))

(declare-fun lt!41542 () ListLongMap!1441)

(assert (=> b!87522 (= lt!41542 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41533 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41533 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41539 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41539 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41545 () Unit!2498)

(assert (=> b!87522 (= lt!41545 (addApplyDifferent!58 lt!41542 lt!41533 (zeroValue!2229 newMap!16) lt!41539))))

(assert (=> b!87522 (= (apply!82 (+!107 lt!41542 (tuple2!2189 lt!41533 (zeroValue!2229 newMap!16))) lt!41539) (apply!82 lt!41542 lt!41539))))

(declare-fun lt!41546 () Unit!2498)

(assert (=> b!87522 (= lt!41546 lt!41545)))

(declare-fun lt!41543 () ListLongMap!1441)

(assert (=> b!87522 (= lt!41543 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41534 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41534 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41538 () (_ BitVec 64))

(assert (=> b!87522 (= lt!41538 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87522 (= lt!41530 (addApplyDifferent!58 lt!41543 lt!41534 (minValue!2229 newMap!16) lt!41538))))

(assert (=> b!87522 (= (apply!82 (+!107 lt!41543 (tuple2!2189 lt!41534 (minValue!2229 newMap!16))) lt!41538) (apply!82 lt!41543 lt!41538))))

(declare-fun bm!8338 () Bool)

(assert (=> bm!8338 (= call!8340 call!8345)))

(declare-fun b!87523 () Bool)

(declare-fun res!44891 () Bool)

(assert (=> b!87523 (=> (not res!44891) (not e!56999))))

(assert (=> b!87523 (= res!44891 e!57001)))

(declare-fun res!44890 () Bool)

(assert (=> b!87523 (=> res!44890 e!57001)))

(declare-fun e!57008 () Bool)

(assert (=> b!87523 (= res!44890 (not e!57008))))

(declare-fun res!44892 () Bool)

(assert (=> b!87523 (=> (not res!44892) (not e!57008))))

(assert (=> b!87523 (= res!44892 (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun b!87524 () Bool)

(declare-fun e!57002 () Bool)

(declare-fun call!8339 () Bool)

(assert (=> b!87524 (= e!57002 (not call!8339))))

(declare-fun b!87525 () Bool)

(declare-fun e!57009 () ListLongMap!1441)

(assert (=> b!87525 (= e!57011 e!57009)))

(assert (=> b!87525 (= c!14441 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87526 () Bool)

(declare-fun e!57007 () Bool)

(declare-fun call!8341 () Bool)

(assert (=> b!87526 (= e!57007 (not call!8341))))

(declare-fun b!87527 () Bool)

(declare-fun e!57000 () Bool)

(assert (=> b!87527 (= e!57000 (= (apply!82 lt!41544 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun bm!8339 () Bool)

(declare-fun call!8343 () ListLongMap!1441)

(assert (=> bm!8339 (= call!8343 call!8344)))

(declare-fun b!87528 () Bool)

(declare-fun e!57006 () Bool)

(assert (=> b!87528 (= e!57007 e!57006)))

(declare-fun res!44889 () Bool)

(assert (=> b!87528 (= res!44889 call!8341)))

(assert (=> b!87528 (=> (not res!44889) (not e!57006))))

(declare-fun b!87529 () Bool)

(assert (=> b!87529 (= e!56999 e!57002)))

(declare-fun c!14440 () Bool)

(assert (=> b!87529 (= c!14440 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87530 () Bool)

(assert (=> b!87530 (= e!57011 (+!107 call!8344 (tuple2!2189 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87531 () Bool)

(assert (=> b!87531 (= e!57002 e!57000)))

(declare-fun res!44894 () Bool)

(assert (=> b!87531 (= res!44894 call!8339)))

(assert (=> b!87531 (=> (not res!44894) (not e!57000))))

(declare-fun b!87532 () Bool)

(declare-fun Unit!2580 () Unit!2498)

(assert (=> b!87532 (= e!57003 Unit!2580)))

(declare-fun b!87533 () Bool)

(assert (=> b!87533 (= e!57004 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8340 () Bool)

(assert (=> bm!8340 (= call!8345 (getCurrentListMapNoExtraKeys!72 (_keys!4009 newMap!16) (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87534 () Bool)

(declare-fun res!44896 () Bool)

(assert (=> b!87534 (=> (not res!44896) (not e!56999))))

(assert (=> b!87534 (= res!44896 e!57007)))

(declare-fun c!14444 () Bool)

(assert (=> b!87534 (= c!14444 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87535 () Bool)

(declare-fun e!57005 () ListLongMap!1441)

(assert (=> b!87535 (= e!57005 call!8343)))

(declare-fun b!87536 () Bool)

(assert (=> b!87536 (= e!57008 (validKeyInArray!0 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87537 () Bool)

(assert (=> b!87537 (= e!57005 call!8342)))

(declare-fun b!87538 () Bool)

(assert (=> b!87538 (= e!57009 call!8343)))

(declare-fun bm!8341 () Bool)

(assert (=> bm!8341 (= call!8339 (contains!747 lt!41544 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87539 () Bool)

(assert (=> b!87539 (= e!57006 (= (apply!82 lt!41544 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87540 () Bool)

(declare-fun c!14443 () Bool)

(assert (=> b!87540 (= c!14443 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!87540 (= e!57009 e!57005)))

(declare-fun b!87541 () Bool)

(assert (=> b!87541 (= e!57010 (= (apply!82 lt!41544 (select (arr!1910 (_keys!4009 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (select (arr!1911 (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!344 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87541 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2155 (array!4014 (store (arr!1911 (_values!2320 newMap!16)) (index!3086 lt!40518) (ValueCellFull!923 lt!40194)) (size!2155 (_values!2320 newMap!16))))))))

(assert (=> b!87541 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2154 (_keys!4009 newMap!16))))))

(declare-fun bm!8342 () Bool)

(assert (=> bm!8342 (= call!8341 (contains!747 lt!41544 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23307 c!14442) b!87530))

(assert (= (and d!23307 (not c!14442)) b!87525))

(assert (= (and b!87525 c!14441) b!87538))

(assert (= (and b!87525 (not c!14441)) b!87540))

(assert (= (and b!87540 c!14443) b!87535))

(assert (= (and b!87540 (not c!14443)) b!87537))

(assert (= (or b!87535 b!87537) bm!8337))

(assert (= (or b!87538 bm!8337) bm!8338))

(assert (= (or b!87538 b!87535) bm!8339))

(assert (= (or b!87530 bm!8338) bm!8340))

(assert (= (or b!87530 bm!8339) bm!8336))

(assert (= (and d!23307 res!44895) b!87533))

(assert (= (and d!23307 c!14439) b!87522))

(assert (= (and d!23307 (not c!14439)) b!87532))

(assert (= (and d!23307 res!44888) b!87523))

(assert (= (and b!87523 res!44892) b!87536))

(assert (= (and b!87523 (not res!44890)) b!87521))

(assert (= (and b!87521 res!44893) b!87541))

(assert (= (and b!87523 res!44891) b!87534))

(assert (= (and b!87534 c!14444) b!87528))

(assert (= (and b!87534 (not c!14444)) b!87526))

(assert (= (and b!87528 res!44889) b!87539))

(assert (= (or b!87528 b!87526) bm!8342))

(assert (= (and b!87534 res!44896) b!87529))

(assert (= (and b!87529 c!14440) b!87531))

(assert (= (and b!87529 (not c!14440)) b!87524))

(assert (= (and b!87531 res!44894) b!87527))

(assert (= (or b!87531 b!87524) bm!8341))

(declare-fun b_lambda!3857 () Bool)

(assert (=> (not b_lambda!3857) (not b!87541)))

(assert (=> b!87541 t!5233))

(declare-fun b_and!5265 () Bool)

(assert (= b_and!5261 (and (=> t!5233 result!2923) b_and!5265)))

(assert (=> b!87541 t!5235))

(declare-fun b_and!5267 () Bool)

(assert (= b_and!5263 (and (=> t!5235 result!2925) b_and!5267)))

(declare-fun m!93315 () Bool)

(assert (=> b!87530 m!93315))

(declare-fun m!93317 () Bool)

(assert (=> b!87539 m!93317))

(declare-fun m!93319 () Bool)

(assert (=> b!87541 m!93319))

(assert (=> b!87541 m!90319))

(declare-fun m!93321 () Bool)

(assert (=> b!87541 m!93321))

(assert (=> b!87541 m!93319))

(assert (=> b!87541 m!90319))

(assert (=> b!87541 m!90065))

(declare-fun m!93323 () Bool)

(assert (=> b!87541 m!93323))

(assert (=> b!87541 m!90065))

(declare-fun m!93325 () Bool)

(assert (=> bm!8340 m!93325))

(assert (=> b!87533 m!90065))

(assert (=> b!87533 m!90065))

(assert (=> b!87533 m!90073))

(declare-fun m!93327 () Bool)

(assert (=> bm!8342 m!93327))

(declare-fun m!93329 () Bool)

(assert (=> bm!8336 m!93329))

(declare-fun m!93331 () Bool)

(assert (=> b!87522 m!93331))

(declare-fun m!93333 () Bool)

(assert (=> b!87522 m!93333))

(declare-fun m!93335 () Bool)

(assert (=> b!87522 m!93335))

(declare-fun m!93337 () Bool)

(assert (=> b!87522 m!93337))

(declare-fun m!93339 () Bool)

(assert (=> b!87522 m!93339))

(assert (=> b!87522 m!93325))

(assert (=> b!87522 m!90065))

(declare-fun m!93341 () Bool)

(assert (=> b!87522 m!93341))

(declare-fun m!93343 () Bool)

(assert (=> b!87522 m!93343))

(declare-fun m!93345 () Bool)

(assert (=> b!87522 m!93345))

(declare-fun m!93347 () Bool)

(assert (=> b!87522 m!93347))

(declare-fun m!93349 () Bool)

(assert (=> b!87522 m!93349))

(declare-fun m!93351 () Bool)

(assert (=> b!87522 m!93351))

(declare-fun m!93353 () Bool)

(assert (=> b!87522 m!93353))

(declare-fun m!93355 () Bool)

(assert (=> b!87522 m!93355))

(assert (=> b!87522 m!93339))

(declare-fun m!93357 () Bool)

(assert (=> b!87522 m!93357))

(assert (=> b!87522 m!93331))

(assert (=> b!87522 m!93349))

(assert (=> b!87522 m!93345))

(declare-fun m!93359 () Bool)

(assert (=> b!87522 m!93359))

(assert (=> b!87536 m!90065))

(assert (=> b!87536 m!90065))

(assert (=> b!87536 m!90073))

(declare-fun m!93361 () Bool)

(assert (=> bm!8341 m!93361))

(assert (=> d!23307 m!90203))

(declare-fun m!93363 () Bool)

(assert (=> b!87527 m!93363))

(assert (=> b!87521 m!90065))

(assert (=> b!87521 m!90065))

(declare-fun m!93365 () Bool)

(assert (=> b!87521 m!93365))

(assert (=> b!85977 d!23307))

(declare-fun d!23309 () Bool)

(assert (=> d!23309 (= (inRange!0 (ite c!13974 (index!3085 lt!40652) (index!3088 lt!40652)) (mask!6365 newMap!16)) (and (bvsge (ite c!13974 (index!3085 lt!40652) (index!3088 lt!40652)) #b00000000000000000000000000000000) (bvslt (ite c!13974 (index!3085 lt!40652) (index!3088 lt!40652)) (bvadd (mask!6365 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8155 d!23309))

(assert (=> b!85987 d!22503))

(declare-fun d!23311 () Bool)

(declare-fun res!44897 () Bool)

(declare-fun e!57012 () Bool)

(assert (=> d!23311 (=> res!44897 e!57012)))

(assert (=> d!23311 (= res!44897 (or ((_ is Nil!1506) lt!40618) ((_ is Nil!1506) (t!5222 lt!40618))))))

(assert (=> d!23311 (= (isStrictlySorted!285 lt!40618) e!57012)))

(declare-fun b!87542 () Bool)

(declare-fun e!57013 () Bool)

(assert (=> b!87542 (= e!57012 e!57013)))

(declare-fun res!44898 () Bool)

(assert (=> b!87542 (=> (not res!44898) (not e!57013))))

(assert (=> b!87542 (= res!44898 (bvslt (_1!1105 (h!2096 lt!40618)) (_1!1105 (h!2096 (t!5222 lt!40618)))))))

(declare-fun b!87543 () Bool)

(assert (=> b!87543 (= e!57013 (isStrictlySorted!285 (t!5222 lt!40618)))))

(assert (= (and d!23311 (not res!44897)) b!87542))

(assert (= (and b!87542 res!44898) b!87543))

(declare-fun m!93367 () Bool)

(assert (=> b!87543 m!93367))

(assert (=> d!22261 d!23311))

(assert (=> d!22261 d!23061))

(declare-fun b!87544 () Bool)

(declare-fun e!57015 () (_ BitVec 32))

(assert (=> b!87544 (= e!57015 #b00000000000000000000000000000000)))

(declare-fun bm!8343 () Bool)

(declare-fun call!8346 () (_ BitVec 32))

(assert (=> bm!8343 (= call!8346 (arrayCountValidKeys!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(declare-fun d!23313 () Bool)

(declare-fun lt!41549 () (_ BitVec 32))

(assert (=> d!23313 (and (bvsge lt!41549 #b00000000000000000000000000000000) (bvsle lt!41549 (bvsub (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!23313 (= lt!41549 e!57015)))

(declare-fun c!14446 () Bool)

(assert (=> d!23313 (= c!14446 (bvsge #b00000000000000000000000000000000 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!23313 (and (bvsle #b00000000000000000000000000000000 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))))))

(assert (=> d!23313 (= (arrayCountValidKeys!0 (_keys!4009 (v!2648 (underlying!292 thiss!992))) #b00000000000000000000000000000000 (size!2154 (_keys!4009 (v!2648 (underlying!292 thiss!992))))) lt!41549)))

(declare-fun b!87545 () Bool)

(declare-fun e!57014 () (_ BitVec 32))

(assert (=> b!87545 (= e!57014 (bvadd #b00000000000000000000000000000001 call!8346))))

(declare-fun b!87546 () Bool)

(assert (=> b!87546 (= e!57015 e!57014)))

(declare-fun c!14445 () Bool)

(assert (=> b!87546 (= c!14445 (validKeyInArray!0 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!87547 () Bool)

(assert (=> b!87547 (= e!57014 call!8346)))

(assert (= (and d!23313 c!14446) b!87544))

(assert (= (and d!23313 (not c!14446)) b!87546))

(assert (= (and b!87546 c!14445) b!87545))

(assert (= (and b!87546 (not c!14445)) b!87547))

(assert (= (or b!87545 b!87547) bm!8343))

(declare-fun m!93369 () Bool)

(assert (=> bm!8343 m!93369))

(assert (=> b!87546 m!91675))

(assert (=> b!87546 m!91675))

(assert (=> b!87546 m!91677))

(assert (=> b!85753 d!23313))

(declare-fun lt!41550 () Bool)

(declare-fun d!23315 () Bool)

(assert (=> d!23315 (= lt!41550 (select (content!90 (toList!736 lt!40919)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun e!57017 () Bool)

(assert (=> d!23315 (= lt!41550 e!57017)))

(declare-fun res!44900 () Bool)

(assert (=> d!23315 (=> (not res!44900) (not e!57017))))

(assert (=> d!23315 (= res!44900 ((_ is Cons!1505) (toList!736 lt!40919)))))

(assert (=> d!23315 (= (contains!749 (toList!736 lt!40919) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)) lt!41550)))

(declare-fun b!87548 () Bool)

(declare-fun e!57016 () Bool)

(assert (=> b!87548 (= e!57017 e!57016)))

(declare-fun res!44899 () Bool)

(assert (=> b!87548 (=> res!44899 e!57016)))

(assert (=> b!87548 (= res!44899 (= (h!2096 (toList!736 lt!40919)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(declare-fun b!87549 () Bool)

(assert (=> b!87549 (= e!57016 (contains!749 (t!5222 (toList!736 lt!40919)) (tuple2!2189 (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) lt!40194)))))

(assert (= (and d!23315 res!44900) b!87548))

(assert (= (and b!87548 (not res!44899)) b!87549))

(declare-fun m!93371 () Bool)

(assert (=> d!23315 m!93371))

(declare-fun m!93373 () Bool)

(assert (=> d!23315 m!93373))

(declare-fun m!93375 () Bool)

(assert (=> b!87549 m!93375))

(assert (=> b!86181 d!23315))

(assert (=> b!86102 d!22281))

(declare-fun d!23317 () Bool)

(declare-fun lt!41551 () Bool)

(assert (=> d!23317 (= lt!41551 (select (content!90 lt!40646) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun e!57019 () Bool)

(assert (=> d!23317 (= lt!41551 e!57019)))

(declare-fun res!44902 () Bool)

(assert (=> d!23317 (=> (not res!44902) (not e!57019))))

(assert (=> d!23317 (= res!44902 ((_ is Cons!1505) lt!40646))))

(assert (=> d!23317 (= (contains!749 lt!40646 (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))) lt!41551)))

(declare-fun b!87550 () Bool)

(declare-fun e!57018 () Bool)

(assert (=> b!87550 (= e!57019 e!57018)))

(declare-fun res!44901 () Bool)

(assert (=> b!87550 (=> res!44901 e!57018)))

(assert (=> b!87550 (= res!44901 (= (h!2096 lt!40646) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(declare-fun b!87551 () Bool)

(assert (=> b!87551 (= e!57018 (contains!749 (t!5222 lt!40646) (tuple2!2189 (_1!1105 lt!40197) (_2!1105 lt!40197))))))

(assert (= (and d!23317 res!44902) b!87550))

(assert (= (and b!87550 (not res!44901)) b!87551))

(declare-fun m!93377 () Bool)

(assert (=> d!23317 m!93377))

(declare-fun m!93379 () Bool)

(assert (=> d!23317 m!93379))

(declare-fun m!93381 () Bool)

(assert (=> b!87551 m!93381))

(assert (=> b!85836 d!23317))

(declare-fun d!23319 () Bool)

(assert (=> d!23319 (= ($colon$colon!71 e!55916 (ite c!13930 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182)))) (Cons!1505 (ite c!13930 (h!2096 (toList!736 lt!40187)) (tuple2!2189 (_1!1105 lt!40182) (_2!1105 lt!40182))) e!55916))))

(assert (=> bm!8131 d!23319))

(declare-fun d!23321 () Bool)

(declare-fun lt!41552 () Bool)

(assert (=> d!23321 (= lt!41552 (select (content!90 (t!5222 (toList!736 lt!40376))) lt!40197))))

(declare-fun e!57021 () Bool)

(assert (=> d!23321 (= lt!41552 e!57021)))

(declare-fun res!44904 () Bool)

(assert (=> d!23321 (=> (not res!44904) (not e!57021))))

(assert (=> d!23321 (= res!44904 ((_ is Cons!1505) (t!5222 (toList!736 lt!40376))))))

(assert (=> d!23321 (= (contains!749 (t!5222 (toList!736 lt!40376)) lt!40197) lt!41552)))

(declare-fun b!87552 () Bool)

(declare-fun e!57020 () Bool)

(assert (=> b!87552 (= e!57021 e!57020)))

(declare-fun res!44903 () Bool)

(assert (=> b!87552 (=> res!44903 e!57020)))

(assert (=> b!87552 (= res!44903 (= (h!2096 (t!5222 (toList!736 lt!40376))) lt!40197))))

(declare-fun b!87553 () Bool)

(assert (=> b!87553 (= e!57020 (contains!749 (t!5222 (t!5222 (toList!736 lt!40376))) lt!40197))))

(assert (= (and d!23321 res!44904) b!87552))

(assert (= (and b!87552 (not res!44903)) b!87553))

(assert (=> d!23321 m!91615))

(declare-fun m!93383 () Bool)

(assert (=> d!23321 m!93383))

(declare-fun m!93385 () Bool)

(assert (=> b!87553 m!93385))

(assert (=> b!85907 d!23321))

(assert (=> d!22213 d!22185))

(declare-fun d!23323 () Bool)

(declare-fun e!57023 () Bool)

(assert (=> d!23323 e!57023))

(declare-fun res!44905 () Bool)

(assert (=> d!23323 (=> res!44905 e!57023)))

(declare-fun lt!41554 () Bool)

(assert (=> d!23323 (= res!44905 (not lt!41554))))

(declare-fun lt!41556 () Bool)

(assert (=> d!23323 (= lt!41554 lt!41556)))

(declare-fun lt!41553 () Unit!2498)

(declare-fun e!57022 () Unit!2498)

(assert (=> d!23323 (= lt!41553 e!57022)))

(declare-fun c!14447 () Bool)

(assert (=> d!23323 (= c!14447 lt!41556)))

(assert (=> d!23323 (= lt!41556 (containsKey!144 (toList!736 lt!40443) lt!40423))))

(assert (=> d!23323 (= (contains!747 lt!40443 lt!40423) lt!41554)))

(declare-fun b!87554 () Bool)

(declare-fun lt!41555 () Unit!2498)

(assert (=> b!87554 (= e!57022 lt!41555)))

(assert (=> b!87554 (= lt!41555 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!736 lt!40443) lt!40423))))

(assert (=> b!87554 (isDefined!93 (getValueByKey!141 (toList!736 lt!40443) lt!40423))))

(declare-fun b!87555 () Bool)

(declare-fun Unit!2581 () Unit!2498)

(assert (=> b!87555 (= e!57022 Unit!2581)))

(declare-fun b!87556 () Bool)

(assert (=> b!87556 (= e!57023 (isDefined!93 (getValueByKey!141 (toList!736 lt!40443) lt!40423)))))

(assert (= (and d!23323 c!14447) b!87554))

(assert (= (and d!23323 (not c!14447)) b!87555))

(assert (= (and d!23323 (not res!44905)) b!87556))

(declare-fun m!93387 () Bool)

(assert (=> d!23323 m!93387))

(declare-fun m!93389 () Bool)

(assert (=> b!87554 m!93389))

(assert (=> b!87554 m!90095))

(assert (=> b!87554 m!90095))

(declare-fun m!93391 () Bool)

(assert (=> b!87554 m!93391))

(assert (=> b!87556 m!90095))

(assert (=> b!87556 m!90095))

(assert (=> b!87556 m!93391))

(assert (=> d!22213 d!23323))

(assert (=> d!22213 d!22195))

(declare-fun d!23325 () Bool)

(assert (=> d!23325 (= (apply!82 (+!107 lt!40443 (tuple2!2189 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))))) lt!40423) (apply!82 lt!40443 lt!40423))))

(assert (=> d!23325 true))

(declare-fun _$34!844 () Unit!2498)

(assert (=> d!23325 (= (choose!507 lt!40443 lt!40426 (minValue!2229 (v!2648 (underlying!292 thiss!992))) lt!40423) _$34!844)))

(declare-fun bs!3711 () Bool)

(assert (= bs!3711 d!23325))

(assert (=> bs!3711 m!89921))

(assert (=> bs!3711 m!89921))

(assert (=> bs!3711 m!89939))

(assert (=> bs!3711 m!89937))

(assert (=> d!22213 d!23325))

(assert (=> d!22213 d!22201))

(declare-fun d!23327 () Bool)

(assert (=> d!23327 (contains!747 (getCurrentListMap!430 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355))))

(declare-fun lt!41559 () Unit!2498)

(declare-fun choose!519 (array!4011 array!4013 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2498)

(assert (=> d!23327 (= lt!41559 (choose!519 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!23327 (validMask!0 (mask!6365 newMap!16))))

(assert (=> d!23327 (= (lemmaArrayContainsKeyThenInListMap!19 (_keys!4009 newMap!16) (_values!2320 newMap!16) (mask!6365 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1910 (_keys!4009 (v!2648 (underlying!292 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41559)))

(declare-fun bs!3712 () Bool)

(assert (= bs!3712 d!23327))

(assert (=> bs!3712 m!89901))

(assert (=> bs!3712 m!89901))

(assert (=> bs!3712 m!89569))

(assert (=> bs!3712 m!89991))

(assert (=> bs!3712 m!89569))

(declare-fun m!93393 () Bool)

(assert (=> bs!3712 m!93393))

(assert (=> bs!3712 m!90203))

(assert (=> b!86094 d!23327))

(assert (=> b!86094 d!22331))

(assert (=> b!86094 d!22265))

(assert (=> bm!8186 d!22469))

(assert (=> b!85905 d!23123))

(assert (=> b!85905 d!23125))

(assert (=> b!85641 d!23035))

(assert (=> b!86001 d!23113))

(assert (=> b!86001 d!22561))

(declare-fun d!23329 () Bool)

(declare-fun lt!41560 () Bool)

(assert (=> d!23329 (= lt!41560 (select (content!90 lt!40362) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun e!57025 () Bool)

(assert (=> d!23329 (= lt!41560 e!57025)))

(declare-fun res!44907 () Bool)

(assert (=> d!23329 (=> (not res!44907) (not e!57025))))

(assert (=> d!23329 (= res!44907 ((_ is Cons!1505) lt!40362))))

(assert (=> d!23329 (= (contains!749 lt!40362 (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))) lt!41560)))

(declare-fun b!87557 () Bool)

(declare-fun e!57024 () Bool)

(assert (=> b!87557 (= e!57025 e!57024)))

(declare-fun res!44906 () Bool)

(assert (=> b!87557 (=> res!44906 e!57024)))

(assert (=> b!87557 (= res!44906 (= (h!2096 lt!40362) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(declare-fun b!87558 () Bool)

(assert (=> b!87558 (= e!57024 (contains!749 (t!5222 lt!40362) (tuple2!2189 (_1!1105 lt!40192) (_2!1105 lt!40192))))))

(assert (= (and d!23329 res!44907) b!87557))

(assert (= (and b!87557 (not res!44906)) b!87558))

(declare-fun m!93395 () Bool)

(assert (=> d!23329 m!93395))

(declare-fun m!93397 () Bool)

(assert (=> d!23329 m!93397))

(declare-fun m!93399 () Bool)

(assert (=> b!87558 m!93399))

(assert (=> b!86038 d!23329))

(declare-fun mapIsEmpty!3413 () Bool)

(declare-fun mapRes!3413 () Bool)

(assert (=> mapIsEmpty!3413 mapRes!3413))

(declare-fun condMapEmpty!3413 () Bool)

(declare-fun mapDefault!3413 () ValueCell!923)

(assert (=> mapNonEmpty!3412 (= condMapEmpty!3413 (= mapRest!3412 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3413)))))

(declare-fun e!57027 () Bool)

(assert (=> mapNonEmpty!3412 (= tp!8956 (and e!57027 mapRes!3413))))

(declare-fun b!87559 () Bool)

(declare-fun e!57026 () Bool)

(assert (=> b!87559 (= e!57026 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3413 () Bool)

(declare-fun tp!8957 () Bool)

(assert (=> mapNonEmpty!3413 (= mapRes!3413 (and tp!8957 e!57026))))

(declare-fun mapRest!3413 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapKey!3413 () (_ BitVec 32))

(declare-fun mapValue!3413 () ValueCell!923)

(assert (=> mapNonEmpty!3413 (= mapRest!3412 (store mapRest!3413 mapKey!3413 mapValue!3413))))

(declare-fun b!87560 () Bool)

(assert (=> b!87560 (= e!57027 tp_is_empty!2533)))

(assert (= (and mapNonEmpty!3412 condMapEmpty!3413) mapIsEmpty!3413))

(assert (= (and mapNonEmpty!3412 (not condMapEmpty!3413)) mapNonEmpty!3413))

(assert (= (and mapNonEmpty!3413 ((_ is ValueCellFull!923) mapValue!3413)) b!87559))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!923) mapDefault!3413)) b!87560))

(declare-fun m!93401 () Bool)

(assert (=> mapNonEmpty!3413 m!93401))

(declare-fun mapIsEmpty!3414 () Bool)

(declare-fun mapRes!3414 () Bool)

(assert (=> mapIsEmpty!3414 mapRes!3414))

(declare-fun condMapEmpty!3414 () Bool)

(declare-fun mapDefault!3414 () ValueCell!923)

(assert (=> mapNonEmpty!3411 (= condMapEmpty!3414 (= mapRest!3411 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3414)))))

(declare-fun e!57029 () Bool)

(assert (=> mapNonEmpty!3411 (= tp!8955 (and e!57029 mapRes!3414))))

(declare-fun b!87561 () Bool)

(declare-fun e!57028 () Bool)

(assert (=> b!87561 (= e!57028 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3414 () Bool)

(declare-fun tp!8958 () Bool)

(assert (=> mapNonEmpty!3414 (= mapRes!3414 (and tp!8958 e!57028))))

(declare-fun mapKey!3414 () (_ BitVec 32))

(declare-fun mapValue!3414 () ValueCell!923)

(declare-fun mapRest!3414 () (Array (_ BitVec 32) ValueCell!923))

(assert (=> mapNonEmpty!3414 (= mapRest!3411 (store mapRest!3414 mapKey!3414 mapValue!3414))))

(declare-fun b!87562 () Bool)

(assert (=> b!87562 (= e!57029 tp_is_empty!2533)))

(assert (= (and mapNonEmpty!3411 condMapEmpty!3414) mapIsEmpty!3414))

(assert (= (and mapNonEmpty!3411 (not condMapEmpty!3414)) mapNonEmpty!3414))

(assert (= (and mapNonEmpty!3414 ((_ is ValueCellFull!923) mapValue!3414)) b!87561))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!923) mapDefault!3414)) b!87562))

(declare-fun m!93403 () Bool)

(assert (=> mapNonEmpty!3414 m!93403))

(declare-fun b_lambda!3859 () Bool)

(assert (= b_lambda!3835 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3859)))

(declare-fun b_lambda!3861 () Bool)

(assert (= b_lambda!3855 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3861)))

(declare-fun b_lambda!3863 () Bool)

(assert (= b_lambda!3851 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3863)))

(declare-fun b_lambda!3865 () Bool)

(assert (= b_lambda!3831 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3865)))

(declare-fun b_lambda!3867 () Bool)

(assert (= b_lambda!3845 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3867)))

(declare-fun b_lambda!3869 () Bool)

(assert (= b_lambda!3847 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3869)))

(declare-fun b_lambda!3871 () Bool)

(assert (= b_lambda!3833 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3871)))

(declare-fun b_lambda!3873 () Bool)

(assert (= b_lambda!3837 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3873)))

(declare-fun b_lambda!3875 () Bool)

(assert (= b_lambda!3853 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3875)))

(declare-fun b_lambda!3877 () Bool)

(assert (= b_lambda!3849 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3877)))

(declare-fun b_lambda!3879 () Bool)

(assert (= b_lambda!3839 (or (and b!85197 b_free!2233) (and b!85211 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))))) b_lambda!3879)))

(declare-fun b_lambda!3881 () Bool)

(assert (= b_lambda!3843 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3881)))

(declare-fun b_lambda!3883 () Bool)

(assert (= b_lambda!3829 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3883)))

(declare-fun b_lambda!3885 () Bool)

(assert (= b_lambda!3857 (or (and b!85197 b_free!2233 (= (defaultEntry!2337 (v!2648 (underlying!292 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85211 b_free!2235) b_lambda!3885)))

(check-sat (not b!87260) (not b!86587) (not d!23133) (not b!86790) (not b_lambda!3827) (not b!87145) (not b!86905) (not b!86753) (not d!23003) (not b!86254) (not b!86854) (not b!86324) (not d!22493) (not b!87392) (not b!86714) (not d!23009) (not b!87381) (not b!86326) (not d!23007) (not d!22825) (not b_lambda!3883) (not b!86345) (not b!87129) (not d!22521) (not b!87163) (not d!22461) (not d!23325) (not b!86855) (not d!22853) (not b!86541) (not b!86735) (not bm!8267) (not d!23217) (not b!87200) (not b!86760) (not b!86610) (not b!86874) (not b!86985) (not b!86853) (not b!87442) (not b!86803) (not d!22639) (not bm!8202) (not b!86489) (not b!87310) (not b_lambda!3871) (not d!23257) (not d!22947) (not b!87406) (not b!86879) (not b!86252) (not b!86982) (not b!86443) (not b!86918) (not b!86513) (not d!22905) (not bm!8273) (not b!87330) (not b!86896) (not b!87320) (not b!86877) (not d!22463) (not b!86416) (not bm!8231) (not b!87231) (not b!86320) (not d!23195) (not b!87533) (not b!86698) (not b!86800) (not b!87030) (not b!87452) (not bm!8336) (not b!86255) (not bm!8295) (not b!87492) (not d!23197) (not b!86491) (not d!22619) (not b!87131) (not b!86759) (not b!86470) (not b!86641) (not b!86598) (not b!86891) (not d!22995) (not b!86196) (not b!87433) (not b!86930) (not bm!8204) (not b!86510) (not d!22439) (not d!23153) (not b!86843) (not b!87389) (not b!86761) (not b!86792) (not d!23033) (not b!86718) (not b!86360) (not bm!8208) (not d!22581) (not b!87017) (not d!23255) (not b!86812) (not d!23043) (not b!86655) (not d!22563) (not b!86988) (not d!22783) (not bm!8209) (not b!86688) (not b!86963) (not b!86521) (not bm!8304) (not d!23067) (not b!87225) (not b!87257) (not b!87297) (not d!23211) (not d!23231) (not b!87104) (not b!86703) (not b!86507) (not d!22537) (not b!87125) (not bm!8335) (not d!22873) (not b!87036) (not bm!8227) (not b!87089) (not b!86770) (not b!87134) (not b!86276) (not b!86424) (not b!86335) (not b!87441) (not b!86651) (not bm!8211) (not b!86302) (not b!86219) (not b!86757) (not b!86259) (not b!86734) (not b!87506) (not b!86914) (not b!86365) (not b!87142) (not b!87116) (not d!22703) (not b!86781) (not b!87373) (not d!22817) (not bm!8236) (not b!86627) (not b!87247) (not b!86680) (not b!86503) (not b!86852) (not d!23241) (not b!86801) (not d!22827) (not bm!8311) (not b!86425) (not b!86831) (not bm!8253) (not b_lambda!3873) (not b!86868) (not b!86863) (not bm!8243) (not b!86438) (not b!87481) (not b!87080) (not d!22593) (not d!23273) (not b!87354) (not b!87083) (not b_lambda!3875) (not d!22451) (not d!22631) (not d!22841) (not b!86981) (not d!22807) (not b!86269) (not d!22735) (not d!22443) (not b!87444) (not b!86629) (not b!86663) (not d!22747) (not b!87489) (not b!86644) (not b!86217) (not b!87295) (not d!23227) (not b!86675) (not b!86806) (not b!87296) (not d!23047) (not b!86251) (not bm!8289) (not d!22815) (not b!86902) (not bm!8285) (not b!86455) (not b!87140) (not d!22799) (not d!22997) (not b!86299) (not b!87512) (not d!22591) (not b!86829) (not bm!8332) (not mapNonEmpty!3414) (not b!87103) (not b!86329) (not b!86257) (not bm!8266) (not b!86518) (not b!86534) (not d!23289) (not b!87038) (not b!86841) (not d!23157) (not b!87280) (not d!22547) (not b!87032) (not b!87135) (not b!87483) (not b!86865) (not b!86968) (not b!87507) (not b!86248) (not b!86332) (not d!23207) (not b!86771) (not b!86492) (not bm!8233) (not d!23317) (not bm!8210) (not d!23101) (not b!87098) (not b!87411) (not d!23259) (not b!86741) (not b!87445) (not b!87323) (not d!23075) (not d!22809) (not b!86409) (not bm!8317) (not d!23261) (not b!86936) (not b!86754) (not d!22893) (not b!86200) (not d!23329) (not b!86381) tp_is_empty!2533 (not b!87160) (not b!86290) (not d!23005) (not b!86637) (not b!86729) (not b!87541) (not d!23213) (not b!87176) (not b!87219) (not d!22765) (not d!23027) (not d!23323) (not d!22977) (not b!86791) (not b!86823) (not b!87427) (not d!23045) (not bm!8259) (not bm!8326) (not b!87294) (not b!86566) (not b!86549) (not b!87236) (not b!87012) (not mapNonEmpty!3413) (not b!87138) (not b!86245) (not b!87082) (not b!86624) (not d!22929) (not b!86198) (not b!87079) (not b!86305) (not b!86778) (not b!86608) (not b!86197) (not b!86938) (not d!22903) (not d!22805) (not b!86417) (not b!87344) (not d!23237) (not b!86682) (not b!86292) (not bm!8220) (not b!86995) (not d!22575) (not b!86546) (not b!87172) (not b!87407) (not b!86241) (not bm!8277) (not d!22423) (not b!86532) (not b!87308) (not b!87166) (not b!86977) (not b!87119) (not b!86722) (not b!86595) (not d!22767) (not d!22421) (not bm!8328) (not b!87435) (not b!86873) (not d!22523) (not b!86577) (not b_lambda!3795) (not d!22969) (not b!87000) (not b!87209) (not b!87403) (not b!86561) (not b!87109) (not d!23019) (not d!22431) (not d!22429) (not b!86929) (not d!23177) (not b!87245) (not b!86768) (not bm!8305) (not b_lambda!3861) (not b!86469) (not bm!8256) (not bm!8200) (not b!86354) (not b!86756) (not b!87251) (not b!87014) (not b!86952) (not b!86711) (not b!86548) (not d!23039) (not d!22641) (not b!86844) (not b!87447) (not bm!8296) (not b!86310) (not b!86633) (not d!22883) (not b!86256) (not b!86912) (not b!86886) (not b!86244) (not b!86199) (not b!87081) (not b!86773) (not d!22583) (not b!87363) (not d!22823) (not b!86661) (not d!22635) (not b!87238) (not d!22773) (not b!86394) (not b!86907) (not b!87277) (not d!23321) (not b!87543) (not d!23081) (not b_next!2233) (not b!86458) (not b!87424) (not b!87522) (not b!86500) (not d!22831) (not bm!8263) (not b!86933) (not bm!8321) (not b!87491) (not b!87539) (not b!86496) (not bm!8223) (not b!86538) (not bm!8290) (not d!22945) (not b!86554) (not b!86208) (not b_lambda!3807) (not bm!8196) (not b!86349) (not b!86643) (not b!86611) (not b!86379) (not b!86616) (not b!86941) (not bm!8224) (not b!86915) (not b_lambda!3881) (not b!86268) (not b_lambda!3859) (not d!22779) (not d!22609) (not d!22787) (not d!23155) (not bm!8234) (not b!86695) (not b!86814) (not b!86705) (not bm!8343) (not d!22803) (not b!87152) (not b!87331) (not b!86308) (not b!86243) (not b!86475) (not d!23087) (not d!23275) (not b!86700) (not d!22555) (not d!22951) (not b!86426) (not b!86784) (not b!86686) (not b!86976) (not b!87268) (not b!86668) (not b!86919) (not d!22749) (not b!86481) (not d!23139) (not b!86664) (not b!87263) (not d!22433) (not b!86825) (not d!22459) (not b!86540) (not d!22985) (not b!87347) (not b_lambda!3867) (not d!23023) (not b!86947) (not d!23295) (not b!86523) (not b_lambda!3841) (not b!87416) (not b!87450) (not b!86747) (not b!86464) (not d!22835) (not d!22989) (not b!87335) (not b!86979) (not d!23065) (not b!86635) (not b!86260) (not bm!8327) (not b!87047) (not b!87096) (not b!86571) (not d!22821) (not b!87408) (not b!87309) (not b!86858) (not b!86456) (not bm!8308) (not d!23143) (not b!86564) (not b_lambda!3819) (not b!86357) (not b!86543) (not b!87305) (not b!87554) (not b!87318) (not b!86654) (not b!86601) (not d!22759) (not b!86658) (not d!22567) (not b!86264) (not b!87509) (not b!86614) (not d!22705) (not d!23327) (not bm!8316) (not b!86423) (not b!86484) (not d!22729) (not d!23053) (not d!23025) (not b!87077) (not d!22587) (not b_lambda!3825) (not b!86727) (not b!87170) (not b!86434) (not b!86942) (not b!86574) (not b!86733) (not b!86232) (not b!86653) (not d!23165) (not d!22939) (not b!86233) (not b!87328) (not d!22681) (not d!22795) (not d!23201) (not d!23109) (not b!86769) (not b!87414) (not b!86227) (not bm!8320) (not b!86821) (not b!87033) (not b!86367) (not b!86939) (not b!87405) (not b!87551) (not b!87159) (not d!22685) (not b_lambda!3821) (not d!22877) (not b!87553) (not bm!8201) (not b_lambda!3863) (not d!23303) (not d!22987) (not d!23001) (not b!87556) (not b!87376) (not d!22963) (not bm!8301) (not b!86603) (not d!23105) (not d!22983) (not d!23315) (not bm!8329) (not d!23239) (not d!23305) (not b!86957) (not d!22761) (not b!87299) (not b!86849) (not b!87248) (not d!23151) (not d!23021) (not bm!8239) (not b!86998) (not bm!8322) (not bm!8250) (not b!86585) (not d!22595) (not b!86390) (not d!22469) (not b!86882) (not b!86372) (not d!22973) (not b!86309) (not b!86827) (not b!86461) (not b!87206) (not b!86851) (not b!86605) (not b!86291) (not d!22649) (not b!86984) (not d!22597) (not d!22511) (not b!86704) (not b!87558) (not b!86229) (not d!22507) (not d!22599) (not d!22667) (not b!86348) (not bm!8247) (not b!86271) (not d!22775) (not d!22453) (not b!87393) (not b!87421) (not d!22605) (not b!86950) (not d!22495) (not d!22859) b_and!5267 (not b!86667) (not d!22699) (not b!86295) (not bm!8297) (not b!86336) (not d!22891) (not bm!8246) (not bm!8260) (not bm!8270) (not b!87536) (not b!87360) (not b!86270) (not b!87334) (not bm!8315) (not b!87304) (not b!86258) (not d!22517) (not d!22847) (not b!87168) (not b!87149) (not d!22793) (not b!86396) (not b!87521) (not b!86639) (not b!86766) (not b!86404) (not b!87006) (not b!87497) (not d!22611) (not b!86860) (not d!23307) (not d!23233) (not b!87237) (not d!23123) (not d!22637) (not d!22475) (not b!86956) (not d!22741) (not d!22855) (not b!86900) (not b!87348) (not d!23215) (not b!87147) (not b!86786) (not b!87244) (not b!87366) (not d!23169) (not b!86683) (not b!86724) (not d!23121) (not b!86847) (not b!87415) (not b!87222) (not b!86808) (not d!22643) (not b!86363) (not d!23117) (not b!87095) (not b!87153) (not d!23225) (not d!22875) (not b!86993) (not b!86772) (not b!87336) (not d!22813) (not b!86230) (not b!86205) (not b!86285) (not d!23263) (not b!87021) (not d!23285) (not d!22885) (not b!86467) (not b!86552) (not d!23221) (not b!86297) (not b!86449) (not b!87325) (not d!22679) (not b!86569) (not d!22497) (not d!22629) (not b_lambda!3805) (not b!86525) (not d!22481) (not b!86403) (not b!86573) (not b!87514) (not b!86211) (not d!22477) (not bm!8291) (not b!86983) (not b!87092) (not b!86966) (not d!22473) (not b!86898) (not b!87085) (not b!86553) (not b!86742) (not b!87456) (not b!86444) (not b!87214) (not b!87384) (not b!86656) (not bm!8286) (not b!87045) (not b!86971) (not b!86861) (not d!22837) (not b!86751) (not d!23055) (not b!86647) (not b!86527) (not d!22719) (not b!86288) (not b!86987) (not b!86744) (not b!86279) (not d!22797) (not b_lambda!3823) (not d!23173) (not b!86764) (not b!86351) (not b!86697) (not b!87210) (not d!22991) (not b!87087) (not d!22833) (not b!86435) (not b!86721) (not d!23287) (not b!87387) (not b!87213) (not b!87269) (not d!22757) (not b!86889) (not d!22715) (not b!86235) (not b!87511) (not d!22647) (not b!86974) (not b!86331) (not b!86420) (not b!86762) (not b!87546) (not d!22937) (not bm!8217) (not b!86427) (not d!22935) (not b!86991) (not d!22471) (not b!86809) (not d!22953) (not d!22577) (not d!22753) (not b!87458) (not d!23015) (not b!87496) (not d!22489) (not b!87530) (not b!87357) (not b!87302) (not bm!8341) (not d!23281) (not d!23111) (not d!22739) (not b!86813) (not d!22727) (not bm!8319) (not b!86787) (not d!23299) (not b!86447) (not b!86581) (not d!23113) (not d!22691) (not b!86730) (not b!87519) (not d!22743) (not d!22551) (not b!87005) (not d!22763) (not b!86645) (not d!22751) (not b!86428) (not b!87027) (not d!23269) (not b_next!2235) b_and!5265 (not d!23103) (not b_lambda!3865) (not b!87144) (not b!86646) (not d!23181) (not d!22913) (not b!87282) (not d!23199) (not b!86282) (not b!87228) (not b!86266) (not d!23011) (not b!86433) (not d!22665) (not b!87495) (not b!87101) (not b!87349) (not d!22999) (not b!86250) (not d!22513) (not b!87453) (not b!86687) (not d!23277) (not d!22457) (not d!23135) (not b!86520) (not b!87174) (not d!22931) (not b!86615) (not b!86669) (not d!22533) (not b!86448) (not b!87233) (not b!87270) (not bm!8203) (not b!87438) (not b!86194) (not d!23161) (not d!22971) (not bm!8240) (not d!23301) (not b!86508) (not d!22465) (not b!86586) (not b!86487) (not d!22733) (not d!22801) (not b!87457) (not bm!8214) (not b!87150) (not b!86323) (not b!87293) (not b!86383) (not bm!8232) (not b!86370) (not d!22819) (not b!87022) (not d!22677) (not b!87122) (not d!22661) (not b!86317) (not d!22485) (not b_lambda!3869) (not b!87402) (not d!23051) (not b!86774) (not b!87108) (not b!87001) (not b!87075) (not d!22483) (not b!86221) (not b!86267) (not b!86401) (not b!86529) (not bm!8274) (not d!22441) (not b!87484) (not b!87265) (not d!22781) (not b!86537) (not b!87107) (not b!86436) (not d!22881) (not b!87285) (not b!86838) (not b!87004) (not b!86779) (not bm!8298) (not d!23265) (not b!86677) (not b!87287) (not d!23209) (not b_lambda!3877) (not d!22675) (not b!87316) (not b!86909) (not b!86920) (not b!86429) (not b!87368) (not bm!8340) (not d!22993) (not b!87157) (not d!23251) (not b!86441) (not d!22479) (not d!23049) (not b!86304) (not d!22721) (not b!87256) (not b!87212) (not d!23249) (not b!87246) (not b_lambda!3885) (not b!86798) (not b!87073) (not b!87486) (not b!86870) (not b!87527) (not b!86398) (not b!86505) (not d!22959) (not b!86944) (not b!86955) (not d!22455) (not b_lambda!3879) (not b!87025) (not b!87155) (not bm!8284) (not d!22425) (not b!87375) (not b!87254) (not d!22449) (not b!86927) (not bm!8235) (not d!23079) (not b!87037) (not b_lambda!3803) (not b!87503) (not b!86214) (not d!22627) (not d!22467) (not d!23063) (not b!87322) (not d!22657) (not d!22669) (not d!22957) (not b!86631) (not b!86407) (not d!22845) (not bm!8318) (not d!22921) (not b!86371) (not b!86642) (not b!86516) (not b!87549) (not b!87290) (not b!87430) (not d!22569) (not b!87020) (not b!87024) (not b!86834) (not b!86478) (not b!86894) (not d!22539) (not d!22811) (not b!87317) (not b!86337) (not b!86408) (not bm!8342) (not b!87371))
(check-sat b_and!5265 b_and!5267 (not b_next!2233) (not b_next!2235))
