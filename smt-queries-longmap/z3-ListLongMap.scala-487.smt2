; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10678 () Bool)

(assert start!10678)

(declare-fun b!85334 () Bool)

(declare-fun b_free!2237 () Bool)

(declare-fun b_next!2237 () Bool)

(assert (=> b!85334 (= b_free!2237 (not b_next!2237))))

(declare-fun tp!8937 () Bool)

(declare-fun b_and!5171 () Bool)

(assert (=> b!85334 (= tp!8937 b_and!5171)))

(declare-fun b!85323 () Bool)

(declare-fun b_free!2239 () Bool)

(declare-fun b_next!2239 () Bool)

(assert (=> b!85323 (= b_free!2239 (not b_next!2239))))

(declare-fun tp!8938 () Bool)

(declare-fun b_and!5173 () Bool)

(assert (=> b!85323 (= tp!8938 b_and!5173)))

(declare-fun mapNonEmpty!3399 () Bool)

(declare-fun mapRes!3400 () Bool)

(declare-fun tp!8936 () Bool)

(declare-fun e!55657 () Bool)

(assert (=> mapNonEmpty!3399 (= mapRes!3400 (and tp!8936 e!55657))))

(declare-fun mapKey!3400 () (_ BitVec 32))

(declare-datatypes ((V!3027 0))(
  ( (V!3028 (val!1312 Int)) )
))
(declare-datatypes ((ValueCell!924 0))(
  ( (ValueCellFull!924 (v!2644 V!3027)) (EmptyCell!924) )
))
(declare-fun mapRest!3400 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapValue!3399 () ValueCell!924)

(declare-datatypes ((array!4029 0))(
  ( (array!4030 (arr!1919 (Array (_ BitVec 32) (_ BitVec 64))) (size!2163 (_ BitVec 32))) )
))
(declare-datatypes ((array!4031 0))(
  ( (array!4032 (arr!1920 (Array (_ BitVec 32) ValueCell!924)) (size!2164 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!756 0))(
  ( (LongMapFixedSize!757 (defaultEntry!2338 Int) (mask!6366 (_ BitVec 32)) (extraKeys!2177 (_ BitVec 32)) (zeroValue!2230 V!3027) (minValue!2230 V!3027) (_size!427 (_ BitVec 32)) (_keys!4010 array!4029) (_values!2321 array!4031) (_vacant!427 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!756)

(assert (=> mapNonEmpty!3399 (= (arr!1920 (_values!2321 newMap!16)) (store mapRest!3400 mapKey!3400 mapValue!3399))))

(declare-fun mapIsEmpty!3399 () Bool)

(assert (=> mapIsEmpty!3399 mapRes!3400))

(declare-fun b!85317 () Bool)

(declare-fun e!55664 () Bool)

(declare-fun e!55660 () Bool)

(assert (=> b!85317 (= e!55664 (and e!55660 mapRes!3400))))

(declare-fun condMapEmpty!3399 () Bool)

(declare-fun mapDefault!3400 () ValueCell!924)

(assert (=> b!85317 (= condMapEmpty!3399 (= (arr!1920 (_values!2321 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3400)))))

(declare-fun b!85318 () Bool)

(declare-fun e!55665 () Bool)

(declare-fun e!55666 () Bool)

(assert (=> b!85318 (= e!55665 e!55666)))

(declare-fun res!43971 () Bool)

(assert (=> b!85318 (=> (not res!43971) (not e!55666))))

(declare-datatypes ((tuple2!2196 0))(
  ( (tuple2!2197 (_1!1109 Bool) (_2!1109 LongMapFixedSize!756)) )
))
(declare-fun lt!40330 () tuple2!2196)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!85318 (= res!43971 (and (_1!1109 lt!40330) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-datatypes ((Unit!2517 0))(
  ( (Unit!2518) )
))
(declare-fun lt!40320 () Unit!2517)

(declare-fun e!55652 () Unit!2517)

(assert (=> b!85318 (= lt!40320 e!55652)))

(declare-datatypes ((Cell!556 0))(
  ( (Cell!557 (v!2645 LongMapFixedSize!756)) )
))
(declare-datatypes ((LongMap!556 0))(
  ( (LongMap!557 (underlying!289 Cell!556)) )
))
(declare-fun thiss!992 () LongMap!556)

(declare-datatypes ((tuple2!2198 0))(
  ( (tuple2!2199 (_1!1110 (_ BitVec 64)) (_2!1110 V!3027)) )
))
(declare-datatypes ((List!1519 0))(
  ( (Nil!1516) (Cons!1515 (h!2106 tuple2!2198) (t!5240 List!1519)) )
))
(declare-datatypes ((ListLongMap!1461 0))(
  ( (ListLongMap!1462 (toList!746 List!1519)) )
))
(declare-fun lt!40315 () ListLongMap!1461)

(declare-fun c!13827 () Bool)

(declare-fun contains!753 (ListLongMap!1461 (_ BitVec 64)) Bool)

(assert (=> b!85318 (= c!13827 (contains!753 lt!40315 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!40326 () V!3027)

(declare-fun update!112 (LongMapFixedSize!756 (_ BitVec 64) V!3027) tuple2!2196)

(assert (=> b!85318 (= lt!40330 (update!112 newMap!16 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))

(declare-fun b!85319 () Bool)

(declare-fun tp_is_empty!2535 () Bool)

(assert (=> b!85319 (= e!55660 tp_is_empty!2535)))

(declare-fun b!85320 () Bool)

(declare-fun e!55658 () Bool)

(declare-fun e!55663 () Bool)

(declare-fun mapRes!3399 () Bool)

(assert (=> b!85320 (= e!55658 (and e!55663 mapRes!3399))))

(declare-fun condMapEmpty!3400 () Bool)

(declare-fun mapDefault!3399 () ValueCell!924)

(assert (=> b!85320 (= condMapEmpty!3400 (= (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3399)))))

(declare-fun b!85321 () Bool)

(declare-fun e!55650 () Bool)

(declare-fun e!55656 () Bool)

(assert (=> b!85321 (= e!55650 e!55656)))

(declare-fun b!85322 () Bool)

(declare-fun e!55655 () Bool)

(assert (=> b!85322 (= e!55655 (or (not (= (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6366 (v!2645 (underlying!289 thiss!992)))))) (not (= (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992)))))) (bvslt (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun e!55649 () Bool)

(declare-fun array_inv!1187 (array!4029) Bool)

(declare-fun array_inv!1188 (array!4031) Bool)

(assert (=> b!85323 (= e!55649 (and tp!8938 tp_is_empty!2535 (array_inv!1187 (_keys!4010 newMap!16)) (array_inv!1188 (_values!2321 newMap!16)) e!55664))))

(declare-fun mapNonEmpty!3400 () Bool)

(declare-fun tp!8935 () Bool)

(declare-fun e!55653 () Bool)

(assert (=> mapNonEmpty!3400 (= mapRes!3399 (and tp!8935 e!55653))))

(declare-fun mapValue!3400 () ValueCell!924)

(declare-fun mapRest!3399 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapKey!3399 () (_ BitVec 32))

(assert (=> mapNonEmpty!3400 (= (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (store mapRest!3399 mapKey!3399 mapValue!3400))))

(declare-fun b!85325 () Bool)

(assert (=> b!85325 (= e!55663 tp_is_empty!2535)))

(declare-fun b!85326 () Bool)

(declare-fun Unit!2519 () Unit!2517)

(assert (=> b!85326 (= e!55652 Unit!2519)))

(declare-fun b!85327 () Bool)

(assert (=> b!85327 (= e!55666 (not e!55655))))

(declare-fun res!43975 () Bool)

(assert (=> b!85327 (=> res!43975 e!55655)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!85327 (= res!43975 (not (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun lt!40331 () ListLongMap!1461)

(declare-fun lt!40318 () tuple2!2198)

(declare-fun lt!40322 () tuple2!2198)

(declare-fun lt!40319 () ListLongMap!1461)

(declare-fun +!110 (ListLongMap!1461 tuple2!2198) ListLongMap!1461)

(assert (=> b!85327 (= (+!110 lt!40319 lt!40322) (+!110 (+!110 lt!40331 lt!40322) lt!40318))))

(assert (=> b!85327 (= lt!40322 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun lt!40329 () Unit!2517)

(declare-fun addCommutativeForDiffKeys!29 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64) V!3027) Unit!2517)

(assert (=> b!85327 (= lt!40329 (addCommutativeForDiffKeys!29 lt!40331 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun lt!40327 () ListLongMap!1461)

(assert (=> b!85327 (= lt!40327 lt!40319)))

(assert (=> b!85327 (= lt!40319 (+!110 lt!40331 lt!40318))))

(declare-fun lt!40316 () ListLongMap!1461)

(declare-fun lt!40324 () tuple2!2198)

(assert (=> b!85327 (= lt!40327 (+!110 lt!40316 lt!40324))))

(declare-fun lt!40325 () ListLongMap!1461)

(assert (=> b!85327 (= lt!40331 (+!110 lt!40325 lt!40324))))

(assert (=> b!85327 (= lt!40324 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(assert (=> b!85327 (= lt!40316 (+!110 lt!40325 lt!40318))))

(assert (=> b!85327 (= lt!40318 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))

(declare-fun lt!40323 () Unit!2517)

(assert (=> b!85327 (= lt!40323 (addCommutativeForDiffKeys!29 lt!40325 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!75 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) ListLongMap!1461)

(assert (=> b!85327 (= lt!40325 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85328 () Bool)

(declare-fun e!55661 () Bool)

(declare-fun e!55651 () Bool)

(assert (=> b!85328 (= e!55661 e!55651)))

(declare-fun res!43978 () Bool)

(assert (=> b!85328 (=> (not res!43978) (not e!55651))))

(declare-fun lt!40321 () ListLongMap!1461)

(assert (=> b!85328 (= res!43978 (= lt!40321 lt!40315))))

(declare-fun map!1188 (LongMapFixedSize!756) ListLongMap!1461)

(assert (=> b!85328 (= lt!40315 (map!1188 newMap!16))))

(declare-fun getCurrentListMap!439 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) ListLongMap!1461)

(assert (=> b!85328 (= lt!40321 (getCurrentListMap!439 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85329 () Bool)

(declare-fun res!43972 () Bool)

(assert (=> b!85329 (=> (not res!43972) (not e!55661))))

(assert (=> b!85329 (= res!43972 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!85330 () Bool)

(assert (=> b!85330 (= e!55657 tp_is_empty!2535)))

(declare-fun b!85331 () Bool)

(assert (=> b!85331 (= e!55653 tp_is_empty!2535)))

(declare-fun b!85332 () Bool)

(declare-fun e!55662 () Bool)

(assert (=> b!85332 (= e!55656 e!55662)))

(declare-fun b!85333 () Bool)

(declare-fun res!43974 () Bool)

(assert (=> b!85333 (=> (not res!43974) (not e!55661))))

(declare-fun valid!323 (LongMapFixedSize!756) Bool)

(assert (=> b!85333 (= res!43974 (valid!323 newMap!16))))

(declare-fun mapIsEmpty!3400 () Bool)

(assert (=> mapIsEmpty!3400 mapRes!3399))

(assert (=> b!85334 (= e!55662 (and tp!8937 tp_is_empty!2535 (array_inv!1187 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (array_inv!1188 (_values!2321 (v!2645 (underlying!289 thiss!992)))) e!55658))))

(declare-fun b!85335 () Bool)

(declare-fun Unit!2520 () Unit!2517)

(assert (=> b!85335 (= e!55652 Unit!2520)))

(declare-fun lt!40332 () Unit!2517)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!67 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2517)

(assert (=> b!85335 (= lt!40332 (lemmaListMapContainsThenArrayContainsFrom!67 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4029 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!85335 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!40328 () Unit!2517)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4029 (_ BitVec 32) (_ BitVec 32)) Unit!2517)

(assert (=> b!85335 (= lt!40328 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1520 0))(
  ( (Nil!1517) (Cons!1516 (h!2107 (_ BitVec 64)) (t!5241 List!1520)) )
))
(declare-fun arrayNoDuplicates!0 (array!4029 (_ BitVec 32) List!1520) Bool)

(assert (=> b!85335 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) from!355 Nil!1517)))

(declare-fun lt!40317 () Unit!2517)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4029 (_ BitVec 32) (_ BitVec 64) List!1520) Unit!2517)

(assert (=> b!85335 (= lt!40317 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517)))))

(assert (=> b!85335 false))

(declare-fun b!85336 () Bool)

(assert (=> b!85336 (= e!55651 e!55665)))

(declare-fun res!43976 () Bool)

(assert (=> b!85336 (=> (not res!43976) (not e!55665))))

(assert (=> b!85336 (= res!43976 (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1195 (ValueCell!924 V!3027) V!3027)

(declare-fun dynLambda!341 (Int (_ BitVec 64)) V!3027)

(assert (=> b!85336 (= lt!40326 (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85324 () Bool)

(declare-fun res!43973 () Bool)

(assert (=> b!85324 (=> (not res!43973) (not e!55661))))

(assert (=> b!85324 (= res!43973 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6366 newMap!16)) (_size!427 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun res!43977 () Bool)

(assert (=> start!10678 (=> (not res!43977) (not e!55661))))

(declare-fun valid!324 (LongMap!556) Bool)

(assert (=> start!10678 (= res!43977 (valid!324 thiss!992))))

(assert (=> start!10678 e!55661))

(assert (=> start!10678 e!55650))

(assert (=> start!10678 true))

(assert (=> start!10678 e!55649))

(assert (= (and start!10678 res!43977) b!85329))

(assert (= (and b!85329 res!43972) b!85333))

(assert (= (and b!85333 res!43974) b!85324))

(assert (= (and b!85324 res!43973) b!85328))

(assert (= (and b!85328 res!43978) b!85336))

(assert (= (and b!85336 res!43976) b!85318))

(assert (= (and b!85318 c!13827) b!85335))

(assert (= (and b!85318 (not c!13827)) b!85326))

(assert (= (and b!85318 res!43971) b!85327))

(assert (= (and b!85327 (not res!43975)) b!85322))

(assert (= (and b!85320 condMapEmpty!3400) mapIsEmpty!3400))

(assert (= (and b!85320 (not condMapEmpty!3400)) mapNonEmpty!3400))

(get-info :version)

(assert (= (and mapNonEmpty!3400 ((_ is ValueCellFull!924) mapValue!3400)) b!85331))

(assert (= (and b!85320 ((_ is ValueCellFull!924) mapDefault!3399)) b!85325))

(assert (= b!85334 b!85320))

(assert (= b!85332 b!85334))

(assert (= b!85321 b!85332))

(assert (= start!10678 b!85321))

(assert (= (and b!85317 condMapEmpty!3399) mapIsEmpty!3399))

(assert (= (and b!85317 (not condMapEmpty!3399)) mapNonEmpty!3399))

(assert (= (and mapNonEmpty!3399 ((_ is ValueCellFull!924) mapValue!3399)) b!85330))

(assert (= (and b!85317 ((_ is ValueCellFull!924) mapDefault!3400)) b!85319))

(assert (= b!85323 b!85317))

(assert (= start!10678 b!85323))

(declare-fun b_lambda!3797 () Bool)

(assert (=> (not b_lambda!3797) (not b!85336)))

(declare-fun t!5237 () Bool)

(declare-fun tb!1689 () Bool)

(assert (=> (and b!85334 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) t!5237) tb!1689))

(declare-fun result!2913 () Bool)

(assert (=> tb!1689 (= result!2913 tp_is_empty!2535)))

(assert (=> b!85336 t!5237))

(declare-fun b_and!5175 () Bool)

(assert (= b_and!5171 (and (=> t!5237 result!2913) b_and!5175)))

(declare-fun tb!1691 () Bool)

(declare-fun t!5239 () Bool)

(assert (=> (and b!85323 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) t!5239) tb!1691))

(declare-fun result!2917 () Bool)

(assert (= result!2917 result!2913))

(assert (=> b!85336 t!5239))

(declare-fun b_and!5177 () Bool)

(assert (= b_and!5173 (and (=> t!5239 result!2917) b_and!5177)))

(declare-fun m!89853 () Bool)

(assert (=> mapNonEmpty!3400 m!89853))

(declare-fun m!89855 () Bool)

(assert (=> b!85333 m!89855))

(declare-fun m!89857 () Bool)

(assert (=> b!85336 m!89857))

(declare-fun m!89859 () Bool)

(assert (=> b!85336 m!89859))

(declare-fun m!89861 () Bool)

(assert (=> b!85336 m!89861))

(assert (=> b!85336 m!89859))

(assert (=> b!85336 m!89861))

(declare-fun m!89863 () Bool)

(assert (=> b!85336 m!89863))

(declare-fun m!89865 () Bool)

(assert (=> b!85334 m!89865))

(declare-fun m!89867 () Bool)

(assert (=> b!85334 m!89867))

(declare-fun m!89869 () Bool)

(assert (=> mapNonEmpty!3399 m!89869))

(declare-fun m!89871 () Bool)

(assert (=> b!85328 m!89871))

(declare-fun m!89873 () Bool)

(assert (=> b!85328 m!89873))

(declare-fun m!89875 () Bool)

(assert (=> b!85323 m!89875))

(declare-fun m!89877 () Bool)

(assert (=> b!85323 m!89877))

(declare-fun m!89879 () Bool)

(assert (=> b!85335 m!89879))

(declare-fun m!89881 () Bool)

(assert (=> b!85335 m!89881))

(assert (=> b!85335 m!89857))

(declare-fun m!89883 () Bool)

(assert (=> b!85335 m!89883))

(assert (=> b!85335 m!89857))

(assert (=> b!85335 m!89857))

(declare-fun m!89885 () Bool)

(assert (=> b!85335 m!89885))

(assert (=> b!85335 m!89857))

(declare-fun m!89887 () Bool)

(assert (=> b!85335 m!89887))

(declare-fun m!89889 () Bool)

(assert (=> start!10678 m!89889))

(declare-fun m!89891 () Bool)

(assert (=> b!85327 m!89891))

(declare-fun m!89893 () Bool)

(assert (=> b!85327 m!89893))

(declare-fun m!89895 () Bool)

(assert (=> b!85327 m!89895))

(declare-fun m!89897 () Bool)

(assert (=> b!85327 m!89897))

(declare-fun m!89899 () Bool)

(assert (=> b!85327 m!89899))

(assert (=> b!85327 m!89857))

(declare-fun m!89901 () Bool)

(assert (=> b!85327 m!89901))

(assert (=> b!85327 m!89895))

(declare-fun m!89903 () Bool)

(assert (=> b!85327 m!89903))

(declare-fun m!89905 () Bool)

(assert (=> b!85327 m!89905))

(assert (=> b!85327 m!89857))

(declare-fun m!89907 () Bool)

(assert (=> b!85327 m!89907))

(assert (=> b!85327 m!89857))

(declare-fun m!89909 () Bool)

(assert (=> b!85327 m!89909))

(declare-fun m!89911 () Bool)

(assert (=> b!85327 m!89911))

(assert (=> b!85318 m!89857))

(assert (=> b!85318 m!89857))

(declare-fun m!89913 () Bool)

(assert (=> b!85318 m!89913))

(assert (=> b!85318 m!89857))

(declare-fun m!89915 () Bool)

(assert (=> b!85318 m!89915))

(check-sat (not b_lambda!3797) (not mapNonEmpty!3400) (not b!85327) (not b!85336) (not b_next!2239) (not mapNonEmpty!3399) (not b!85323) b_and!5175 (not b!85318) (not b_next!2237) (not b!85334) tp_is_empty!2535 (not b!85335) b_and!5177 (not b!85328) (not start!10678) (not b!85333))
(check-sat b_and!5175 b_and!5177 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun b_lambda!3801 () Bool)

(assert (= b_lambda!3797 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3801)))

(check-sat (not mapNonEmpty!3400) (not b!85327) (not b_lambda!3801) (not b!85336) (not b_next!2239) (not mapNonEmpty!3399) (not b!85323) b_and!5175 (not b!85318) (not b_next!2237) (not b!85334) tp_is_empty!2535 (not b!85335) b_and!5177 (not b!85328) (not start!10678) (not b!85333))
(check-sat b_and!5175 b_and!5177 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun d!22131 () Bool)

(assert (=> d!22131 (= (array_inv!1187 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvsge (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85334 d!22131))

(declare-fun d!22133 () Bool)

(assert (=> d!22133 (= (array_inv!1188 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvsge (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85334 d!22133))

(declare-fun d!22135 () Bool)

(assert (=> d!22135 (= (map!1188 newMap!16) (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun bs!3617 () Bool)

(assert (= bs!3617 d!22135))

(declare-fun m!89981 () Bool)

(assert (=> bs!3617 m!89981))

(assert (=> b!85328 d!22135))

(declare-fun b!85443 () Bool)

(declare-fun c!13847 () Bool)

(assert (=> b!85443 (= c!13847 (and (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55756 () ListLongMap!1461)

(declare-fun e!55757 () ListLongMap!1461)

(assert (=> b!85443 (= e!55756 e!55757)))

(declare-fun b!85444 () Bool)

(declare-fun res!44023 () Bool)

(declare-fun e!55749 () Bool)

(assert (=> b!85444 (=> (not res!44023) (not e!55749))))

(declare-fun e!55754 () Bool)

(assert (=> b!85444 (= res!44023 e!55754)))

(declare-fun res!44021 () Bool)

(assert (=> b!85444 (=> res!44021 e!55754)))

(declare-fun e!55748 () Bool)

(assert (=> b!85444 (= res!44021 (not e!55748))))

(declare-fun res!44024 () Bool)

(assert (=> b!85444 (=> (not res!44024) (not e!55748))))

(assert (=> b!85444 (= res!44024 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun bm!8064 () Bool)

(declare-fun call!8071 () ListLongMap!1461)

(assert (=> bm!8064 (= call!8071 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85445 () Bool)

(declare-fun e!55759 () Bool)

(declare-fun lt!40450 () ListLongMap!1461)

(declare-fun apply!82 (ListLongMap!1461 (_ BitVec 64)) V!3027)

(assert (=> b!85445 (= e!55759 (= (apply!82 lt!40450 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85446 () Bool)

(declare-fun e!55752 () Bool)

(assert (=> b!85446 (= e!55754 e!55752)))

(declare-fun res!44025 () Bool)

(assert (=> b!85446 (=> (not res!44025) (not e!55752))))

(assert (=> b!85446 (= res!44025 (contains!753 lt!40450 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85446 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85447 () Bool)

(declare-fun e!55758 () Bool)

(assert (=> b!85447 (= e!55749 e!55758)))

(declare-fun c!13844 () Bool)

(assert (=> b!85447 (= c!13844 (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85448 () Bool)

(declare-fun e!55747 () Bool)

(assert (=> b!85448 (= e!55758 e!55747)))

(declare-fun res!44026 () Bool)

(declare-fun call!8070 () Bool)

(assert (=> b!85448 (= res!44026 call!8070)))

(assert (=> b!85448 (=> (not res!44026) (not e!55747))))

(declare-fun c!13848 () Bool)

(declare-fun call!8068 () ListLongMap!1461)

(declare-fun bm!8065 () Bool)

(declare-fun c!13846 () Bool)

(declare-fun call!8067 () ListLongMap!1461)

(declare-fun call!8073 () ListLongMap!1461)

(assert (=> bm!8065 (= call!8067 (+!110 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!85449 () Bool)

(declare-fun call!8072 () ListLongMap!1461)

(assert (=> b!85449 (= e!55757 call!8072)))

(declare-fun b!85450 () Bool)

(declare-fun e!55755 () Bool)

(declare-fun call!8069 () Bool)

(assert (=> b!85450 (= e!55755 (not call!8069))))

(declare-fun b!85451 () Bool)

(declare-fun e!55753 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!85451 (= e!55753 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85452 () Bool)

(declare-fun res!44029 () Bool)

(assert (=> b!85452 (=> (not res!44029) (not e!55749))))

(assert (=> b!85452 (= res!44029 e!55755)))

(declare-fun c!13843 () Bool)

(assert (=> b!85452 (= c!13843 (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85453 () Bool)

(assert (=> b!85453 (= e!55758 (not call!8070))))

(declare-fun b!85454 () Bool)

(assert (=> b!85454 (= e!55757 call!8068)))

(declare-fun b!85455 () Bool)

(assert (=> b!85455 (= e!55755 e!55759)))

(declare-fun res!44027 () Bool)

(assert (=> b!85455 (= res!44027 call!8069)))

(assert (=> b!85455 (=> (not res!44027) (not e!55759))))

(declare-fun b!85456 () Bool)

(declare-fun e!55751 () ListLongMap!1461)

(assert (=> b!85456 (= e!55751 (+!110 call!8067 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun d!22137 () Bool)

(assert (=> d!22137 e!55749))

(declare-fun res!44022 () Bool)

(assert (=> d!22137 (=> (not res!44022) (not e!55749))))

(assert (=> d!22137 (= res!44022 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun lt!40432 () ListLongMap!1461)

(assert (=> d!22137 (= lt!40450 lt!40432)))

(declare-fun lt!40442 () Unit!2517)

(declare-fun e!55750 () Unit!2517)

(assert (=> d!22137 (= lt!40442 e!55750)))

(declare-fun c!13845 () Bool)

(assert (=> d!22137 (= c!13845 e!55753)))

(declare-fun res!44028 () Bool)

(assert (=> d!22137 (=> (not res!44028) (not e!55753))))

(assert (=> d!22137 (= res!44028 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22137 (= lt!40432 e!55751)))

(assert (=> d!22137 (= c!13848 (and (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22137 (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992))))))

(assert (=> d!22137 (= (getCurrentListMap!439 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) lt!40450)))

(declare-fun b!85457 () Bool)

(assert (=> b!85457 (= e!55756 call!8072)))

(declare-fun b!85458 () Bool)

(assert (=> b!85458 (= e!55752 (= (apply!82 lt!40450 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85458 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!85458 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85459 () Bool)

(assert (=> b!85459 (= e!55751 e!55756)))

(assert (=> b!85459 (= c!13846 (and (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85460 () Bool)

(assert (=> b!85460 (= e!55748 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!8066 () Bool)

(assert (=> bm!8066 (= call!8069 (contains!753 lt!40450 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8067 () Bool)

(assert (=> bm!8067 (= call!8072 call!8067)))

(declare-fun b!85461 () Bool)

(declare-fun Unit!2523 () Unit!2517)

(assert (=> b!85461 (= e!55750 Unit!2523)))

(declare-fun bm!8068 () Bool)

(assert (=> bm!8068 (= call!8068 call!8073)))

(declare-fun bm!8069 () Bool)

(assert (=> bm!8069 (= call!8070 (contains!753 lt!40450 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8070 () Bool)

(assert (=> bm!8070 (= call!8073 call!8071)))

(declare-fun b!85462 () Bool)

(assert (=> b!85462 (= e!55747 (= (apply!82 lt!40450 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85463 () Bool)

(declare-fun lt!40435 () Unit!2517)

(assert (=> b!85463 (= e!55750 lt!40435)))

(declare-fun lt!40437 () ListLongMap!1461)

(assert (=> b!85463 (= lt!40437 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun lt!40446 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40446 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40444 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40444 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40436 () Unit!2517)

(declare-fun addStillContains!58 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2517)

(assert (=> b!85463 (= lt!40436 (addStillContains!58 lt!40437 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40444))))

(assert (=> b!85463 (contains!753 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40444)))

(declare-fun lt!40443 () Unit!2517)

(assert (=> b!85463 (= lt!40443 lt!40436)))

(declare-fun lt!40449 () ListLongMap!1461)

(assert (=> b!85463 (= lt!40449 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun lt!40448 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40448 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40447 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40447 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40452 () Unit!2517)

(declare-fun addApplyDifferent!58 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2517)

(assert (=> b!85463 (= lt!40452 (addApplyDifferent!58 lt!40449 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40447))))

(assert (=> b!85463 (= (apply!82 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40447) (apply!82 lt!40449 lt!40447))))

(declare-fun lt!40433 () Unit!2517)

(assert (=> b!85463 (= lt!40433 lt!40452)))

(declare-fun lt!40441 () ListLongMap!1461)

(assert (=> b!85463 (= lt!40441 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun lt!40431 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40431 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40439 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40439 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40434 () Unit!2517)

(assert (=> b!85463 (= lt!40434 (addApplyDifferent!58 lt!40441 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40439))))

(assert (=> b!85463 (= (apply!82 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40439) (apply!82 lt!40441 lt!40439))))

(declare-fun lt!40438 () Unit!2517)

(assert (=> b!85463 (= lt!40438 lt!40434)))

(declare-fun lt!40451 () ListLongMap!1461)

(assert (=> b!85463 (= lt!40451 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun lt!40445 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40445 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40440 () (_ BitVec 64))

(assert (=> b!85463 (= lt!40440 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!85463 (= lt!40435 (addApplyDifferent!58 lt!40451 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40440))))

(assert (=> b!85463 (= (apply!82 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40440) (apply!82 lt!40451 lt!40440))))

(assert (= (and d!22137 c!13848) b!85456))

(assert (= (and d!22137 (not c!13848)) b!85459))

(assert (= (and b!85459 c!13846) b!85457))

(assert (= (and b!85459 (not c!13846)) b!85443))

(assert (= (and b!85443 c!13847) b!85449))

(assert (= (and b!85443 (not c!13847)) b!85454))

(assert (= (or b!85449 b!85454) bm!8068))

(assert (= (or b!85457 bm!8068) bm!8070))

(assert (= (or b!85457 b!85449) bm!8067))

(assert (= (or b!85456 bm!8070) bm!8064))

(assert (= (or b!85456 bm!8067) bm!8065))

(assert (= (and d!22137 res!44028) b!85451))

(assert (= (and d!22137 c!13845) b!85463))

(assert (= (and d!22137 (not c!13845)) b!85461))

(assert (= (and d!22137 res!44022) b!85444))

(assert (= (and b!85444 res!44024) b!85460))

(assert (= (and b!85444 (not res!44021)) b!85446))

(assert (= (and b!85446 res!44025) b!85458))

(assert (= (and b!85444 res!44023) b!85452))

(assert (= (and b!85452 c!13843) b!85455))

(assert (= (and b!85452 (not c!13843)) b!85450))

(assert (= (and b!85455 res!44027) b!85445))

(assert (= (or b!85455 b!85450) bm!8066))

(assert (= (and b!85452 res!44029) b!85447))

(assert (= (and b!85447 c!13844) b!85448))

(assert (= (and b!85447 (not c!13844)) b!85453))

(assert (= (and b!85448 res!44026) b!85462))

(assert (= (or b!85448 b!85453) bm!8069))

(declare-fun b_lambda!3803 () Bool)

(assert (=> (not b_lambda!3803) (not b!85458)))

(assert (=> b!85458 t!5237))

(declare-fun b_and!5187 () Bool)

(assert (= b_and!5175 (and (=> t!5237 result!2913) b_and!5187)))

(assert (=> b!85458 t!5239))

(declare-fun b_and!5189 () Bool)

(assert (= b_and!5177 (and (=> t!5239 result!2917) b_and!5189)))

(declare-fun m!89983 () Bool)

(assert (=> b!85460 m!89983))

(assert (=> b!85460 m!89983))

(declare-fun m!89985 () Bool)

(assert (=> b!85460 m!89985))

(declare-fun m!89987 () Bool)

(assert (=> b!85462 m!89987))

(assert (=> bm!8064 m!89911))

(declare-fun m!89989 () Bool)

(assert (=> bm!8066 m!89989))

(assert (=> b!85458 m!89861))

(assert (=> b!85458 m!89983))

(declare-fun m!89991 () Bool)

(assert (=> b!85458 m!89991))

(assert (=> b!85458 m!89983))

(declare-fun m!89993 () Bool)

(assert (=> b!85458 m!89993))

(assert (=> b!85458 m!89993))

(assert (=> b!85458 m!89861))

(declare-fun m!89995 () Bool)

(assert (=> b!85458 m!89995))

(assert (=> b!85446 m!89983))

(assert (=> b!85446 m!89983))

(declare-fun m!89997 () Bool)

(assert (=> b!85446 m!89997))

(declare-fun m!89999 () Bool)

(assert (=> b!85456 m!89999))

(assert (=> d!22137 m!89899))

(declare-fun m!90001 () Bool)

(assert (=> bm!8069 m!90001))

(declare-fun m!90003 () Bool)

(assert (=> b!85463 m!90003))

(declare-fun m!90005 () Bool)

(assert (=> b!85463 m!90005))

(declare-fun m!90007 () Bool)

(assert (=> b!85463 m!90007))

(assert (=> b!85463 m!89983))

(declare-fun m!90009 () Bool)

(assert (=> b!85463 m!90009))

(declare-fun m!90011 () Bool)

(assert (=> b!85463 m!90011))

(declare-fun m!90013 () Bool)

(assert (=> b!85463 m!90013))

(declare-fun m!90015 () Bool)

(assert (=> b!85463 m!90015))

(declare-fun m!90017 () Bool)

(assert (=> b!85463 m!90017))

(declare-fun m!90019 () Bool)

(assert (=> b!85463 m!90019))

(declare-fun m!90021 () Bool)

(assert (=> b!85463 m!90021))

(assert (=> b!85463 m!90005))

(assert (=> b!85463 m!90011))

(declare-fun m!90023 () Bool)

(assert (=> b!85463 m!90023))

(declare-fun m!90025 () Bool)

(assert (=> b!85463 m!90025))

(declare-fun m!90027 () Bool)

(assert (=> b!85463 m!90027))

(assert (=> b!85463 m!90015))

(assert (=> b!85463 m!90025))

(assert (=> b!85463 m!89911))

(declare-fun m!90029 () Bool)

(assert (=> b!85463 m!90029))

(declare-fun m!90031 () Bool)

(assert (=> b!85463 m!90031))

(assert (=> b!85451 m!89983))

(assert (=> b!85451 m!89983))

(assert (=> b!85451 m!89985))

(declare-fun m!90033 () Bool)

(assert (=> b!85445 m!90033))

(declare-fun m!90035 () Bool)

(assert (=> bm!8065 m!90035))

(assert (=> b!85328 d!22137))

(declare-fun d!22139 () Bool)

(declare-fun res!44036 () Bool)

(declare-fun e!55762 () Bool)

(assert (=> d!22139 (=> (not res!44036) (not e!55762))))

(declare-fun simpleValid!58 (LongMapFixedSize!756) Bool)

(assert (=> d!22139 (= res!44036 (simpleValid!58 newMap!16))))

(assert (=> d!22139 (= (valid!323 newMap!16) e!55762)))

(declare-fun b!85470 () Bool)

(declare-fun res!44037 () Bool)

(assert (=> b!85470 (=> (not res!44037) (not e!55762))))

(declare-fun arrayCountValidKeys!0 (array!4029 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!85470 (= res!44037 (= (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (_size!427 newMap!16)))))

(declare-fun b!85471 () Bool)

(declare-fun res!44038 () Bool)

(assert (=> b!85471 (=> (not res!44038) (not e!55762))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4029 (_ BitVec 32)) Bool)

(assert (=> b!85471 (= res!44038 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85472 () Bool)

(assert (=> b!85472 (= e!55762 (arrayNoDuplicates!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 Nil!1517))))

(assert (= (and d!22139 res!44036) b!85470))

(assert (= (and b!85470 res!44037) b!85471))

(assert (= (and b!85471 res!44038) b!85472))

(declare-fun m!90037 () Bool)

(assert (=> d!22139 m!90037))

(declare-fun m!90039 () Bool)

(assert (=> b!85470 m!90039))

(declare-fun m!90041 () Bool)

(assert (=> b!85471 m!90041))

(declare-fun m!90043 () Bool)

(assert (=> b!85472 m!90043))

(assert (=> b!85333 d!22139))

(declare-fun d!22141 () Bool)

(declare-fun e!55768 () Bool)

(assert (=> d!22141 e!55768))

(declare-fun res!44041 () Bool)

(assert (=> d!22141 (=> res!44041 e!55768)))

(declare-fun lt!40461 () Bool)

(assert (=> d!22141 (= res!44041 (not lt!40461))))

(declare-fun lt!40462 () Bool)

(assert (=> d!22141 (= lt!40461 lt!40462)))

(declare-fun lt!40464 () Unit!2517)

(declare-fun e!55767 () Unit!2517)

(assert (=> d!22141 (= lt!40464 e!55767)))

(declare-fun c!13851 () Bool)

(assert (=> d!22141 (= c!13851 lt!40462)))

(declare-fun containsKey!144 (List!1519 (_ BitVec 64)) Bool)

(assert (=> d!22141 (= lt!40462 (containsKey!144 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22141 (= (contains!753 lt!40315 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!40461)))

(declare-fun b!85479 () Bool)

(declare-fun lt!40463 () Unit!2517)

(assert (=> b!85479 (= e!55767 lt!40463)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!92 (List!1519 (_ BitVec 64)) Unit!2517)

(assert (=> b!85479 (= lt!40463 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-datatypes ((Option!146 0))(
  ( (Some!145 (v!2649 V!3027)) (None!144) )
))
(declare-fun isDefined!93 (Option!146) Bool)

(declare-fun getValueByKey!140 (List!1519 (_ BitVec 64)) Option!146)

(assert (=> b!85479 (isDefined!93 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85480 () Bool)

(declare-fun Unit!2524 () Unit!2517)

(assert (=> b!85480 (= e!55767 Unit!2524)))

(declare-fun b!85481 () Bool)

(assert (=> b!85481 (= e!55768 (isDefined!93 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!22141 c!13851) b!85479))

(assert (= (and d!22141 (not c!13851)) b!85480))

(assert (= (and d!22141 (not res!44041)) b!85481))

(assert (=> d!22141 m!89857))

(declare-fun m!90045 () Bool)

(assert (=> d!22141 m!90045))

(assert (=> b!85479 m!89857))

(declare-fun m!90047 () Bool)

(assert (=> b!85479 m!90047))

(assert (=> b!85479 m!89857))

(declare-fun m!90049 () Bool)

(assert (=> b!85479 m!90049))

(assert (=> b!85479 m!90049))

(declare-fun m!90051 () Bool)

(assert (=> b!85479 m!90051))

(assert (=> b!85481 m!89857))

(assert (=> b!85481 m!90049))

(assert (=> b!85481 m!90049))

(assert (=> b!85481 m!90051))

(assert (=> b!85318 d!22141))

(declare-fun b!85566 () Bool)

(declare-fun e!55827 () Unit!2517)

(declare-fun Unit!2525 () Unit!2517)

(assert (=> b!85566 (= e!55827 Unit!2525)))

(declare-fun lt!40539 () Unit!2517)

(declare-fun call!8122 () Unit!2517)

(assert (=> b!85566 (= lt!40539 call!8122)))

(declare-datatypes ((SeekEntryResult!243 0))(
  ( (MissingZero!243 (index!3109 (_ BitVec 32))) (Found!243 (index!3110 (_ BitVec 32))) (Intermediate!243 (undefined!1055 Bool) (index!3111 (_ BitVec 32)) (x!11996 (_ BitVec 32))) (Undefined!243) (MissingVacant!243 (index!3112 (_ BitVec 32))) )
))
(declare-fun lt!40524 () SeekEntryResult!243)

(declare-fun call!8137 () SeekEntryResult!243)

(assert (=> b!85566 (= lt!40524 call!8137)))

(declare-fun c!13891 () Bool)

(assert (=> b!85566 (= c!13891 ((_ is MissingZero!243) lt!40524))))

(declare-fun e!55822 () Bool)

(assert (=> b!85566 e!55822))

(declare-fun lt!40534 () Unit!2517)

(assert (=> b!85566 (= lt!40534 lt!40539)))

(assert (=> b!85566 false))

(declare-fun b!85567 () Bool)

(declare-fun e!55824 () ListLongMap!1461)

(assert (=> b!85567 (= e!55824 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40521 () (_ BitVec 32))

(declare-fun c!13892 () Bool)

(declare-fun lt!40533 () array!4031)

(declare-fun lt!40541 () (_ BitVec 32))

(declare-fun bm!8119 () Bool)

(declare-fun c!13883 () Bool)

(declare-fun call!8132 () ListLongMap!1461)

(assert (=> bm!8119 (= call!8132 (getCurrentListMap!439 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85568 () Bool)

(declare-fun e!55813 () Bool)

(declare-fun e!55829 () Bool)

(assert (=> b!85568 (= e!55813 e!55829)))

(declare-fun c!13881 () Bool)

(declare-fun lt!40519 () tuple2!2196)

(assert (=> b!85568 (= c!13881 (_1!1109 lt!40519))))

(declare-fun bm!8120 () Bool)

(declare-fun call!8124 () ListLongMap!1461)

(assert (=> bm!8120 (= call!8124 call!8132)))

(declare-fun call!8134 () ListLongMap!1461)

(declare-fun b!85569 () Bool)

(declare-fun e!55820 () Bool)

(declare-fun call!8133 () ListLongMap!1461)

(assert (=> b!85569 (= e!55820 (= call!8134 (+!110 call!8133 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun bm!8121 () Bool)

(declare-fun call!8130 () Bool)

(declare-fun call!8138 () Bool)

(assert (=> bm!8121 (= call!8130 call!8138)))

(declare-fun b!85570 () Bool)

(declare-fun e!55828 () tuple2!2196)

(declare-fun e!55821 () tuple2!2196)

(assert (=> b!85570 (= e!55828 e!55821)))

(declare-fun c!13887 () Bool)

(declare-fun lt!40535 () SeekEntryResult!243)

(assert (=> b!85570 (= c!13887 ((_ is MissingZero!243) lt!40535))))

(declare-fun b!85571 () Bool)

(declare-fun lt!40540 () tuple2!2196)

(assert (=> b!85571 (= e!55828 (tuple2!2197 (_1!1109 lt!40540) (_2!1109 lt!40540)))))

(declare-fun call!8129 () tuple2!2196)

(assert (=> b!85571 (= lt!40540 call!8129)))

(declare-fun b!85572 () Bool)

(declare-fun e!55823 () Unit!2517)

(declare-fun lt!40538 () Unit!2517)

(assert (=> b!85572 (= e!55823 lt!40538)))

(assert (=> b!85572 (= lt!40538 call!8122)))

(declare-fun lt!40525 () SeekEntryResult!243)

(declare-fun call!8145 () SeekEntryResult!243)

(assert (=> b!85572 (= lt!40525 call!8145)))

(declare-fun c!13888 () Bool)

(assert (=> b!85572 (= c!13888 ((_ is MissingZero!243) lt!40525))))

(declare-fun e!55826 () Bool)

(assert (=> b!85572 e!55826))

(declare-fun b!85573 () Bool)

(declare-fun res!44081 () Bool)

(declare-fun e!55819 () Bool)

(assert (=> b!85573 (=> (not res!44081) (not e!55819))))

(assert (=> b!85573 (= res!44081 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!40524)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85574 () Bool)

(declare-fun e!55833 () Bool)

(assert (=> b!85574 (= e!55833 (not call!8130))))

(declare-fun bm!8122 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2517)

(assert (=> bm!8122 (= call!8122 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(declare-fun bm!8123 () Bool)

(assert (=> bm!8123 (= call!8134 (map!1188 (_2!1109 lt!40519)))))

(declare-fun b!85575 () Bool)

(declare-fun call!8141 () ListLongMap!1461)

(assert (=> b!85575 (= e!55824 call!8141)))

(declare-fun bm!8124 () Bool)

(declare-fun call!8131 () ListLongMap!1461)

(assert (=> bm!8124 (= call!8131 (+!110 e!55824 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun c!13884 () Bool)

(assert (=> bm!8124 (= c!13884 c!13892)))

(declare-fun b!85576 () Bool)

(declare-fun e!55818 () ListLongMap!1461)

(declare-fun call!8143 () ListLongMap!1461)

(assert (=> b!85576 (= e!55818 call!8143)))

(declare-fun e!55830 () Bool)

(declare-fun b!85577 () Bool)

(declare-fun lt!40527 () SeekEntryResult!243)

(assert (=> b!85577 (= e!55830 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40527)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85578 () Bool)

(declare-fun c!13886 () Bool)

(assert (=> b!85578 (= c!13886 ((_ is MissingVacant!243) lt!40524))))

(declare-fun e!55834 () Bool)

(assert (=> b!85578 (= e!55822 e!55834)))

(declare-fun b!85579 () Bool)

(declare-fun call!8125 () Bool)

(assert (=> b!85579 (= e!55819 (not call!8125))))

(declare-fun bm!8125 () Bool)

(declare-fun call!8139 () Bool)

(declare-fun call!8128 () Bool)

(assert (=> bm!8125 (= call!8139 call!8128)))

(declare-fun bm!8126 () Bool)

(declare-fun call!8127 () Bool)

(declare-fun call!8135 () Bool)

(assert (=> bm!8126 (= call!8127 call!8135)))

(declare-fun bm!8127 () Bool)

(declare-fun call!8142 () SeekEntryResult!243)

(assert (=> bm!8127 (= call!8137 call!8142)))

(declare-fun b!85580 () Bool)

(declare-fun lt!40528 () Unit!2517)

(declare-fun lt!40537 () Unit!2517)

(assert (=> b!85580 (= lt!40528 lt!40537)))

(declare-fun call!8136 () ListLongMap!1461)

(assert (=> b!85580 (= call!8136 call!8124)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2517)

(assert (=> b!85580 (= lt!40537 (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40521 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40326 (defaultEntry!2338 newMap!16)))))

(assert (=> b!85580 (= lt!40521 (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!55816 () tuple2!2196)

(assert (=> b!85580 (= e!55816 (tuple2!2197 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) (zeroValue!2230 newMap!16) lt!40326 (_size!427 newMap!16) (_keys!4010 newMap!16) (_values!2321 newMap!16) (_vacant!427 newMap!16))))))

(declare-fun b!85581 () Bool)

(declare-fun lt!40531 () tuple2!2196)

(assert (=> b!85581 (= lt!40531 call!8129)))

(assert (=> b!85581 (= e!55821 (tuple2!2197 (_1!1109 lt!40531) (_2!1109 lt!40531)))))

(declare-fun c!13882 () Bool)

(declare-fun c!13890 () Bool)

(declare-fun bm!8128 () Bool)

(declare-fun lt!40542 () SeekEntryResult!243)

(declare-fun c!13880 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!8128 (= call!8128 (inRange!0 (ite c!13882 (ite c!13880 (index!3110 lt!40542) (ite c!13888 (index!3109 lt!40525) (index!3112 lt!40525))) (ite c!13890 (index!3110 lt!40527) (ite c!13891 (index!3109 lt!40524) (index!3112 lt!40524)))) (mask!6366 newMap!16)))))

(declare-fun b!85582 () Bool)

(declare-fun e!55832 () Bool)

(assert (=> b!85582 (= e!55832 (not call!8125))))

(declare-fun bm!8129 () Bool)

(assert (=> bm!8129 (= call!8145 call!8142)))

(declare-fun b!85583 () Bool)

(declare-fun e!55831 () tuple2!2196)

(declare-fun e!55817 () tuple2!2196)

(assert (=> b!85583 (= e!55831 e!55817)))

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4029 (_ BitVec 32)) SeekEntryResult!243)

(assert (=> b!85583 (= lt!40535 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> b!85583 (= c!13882 ((_ is Undefined!243) lt!40535))))

(declare-fun bm!8130 () Bool)

(assert (=> bm!8130 (= call!8133 (map!1188 newMap!16))))

(declare-fun bm!8131 () Bool)

(assert (=> bm!8131 (= call!8138 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!85584 () Bool)

(assert (=> b!85584 (= e!55831 e!55816)))

(assert (=> b!85584 (= c!13883 (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85585 () Bool)

(declare-fun res!44079 () Bool)

(assert (=> b!85585 (= res!44079 call!8139)))

(declare-fun e!55814 () Bool)

(assert (=> b!85585 (=> (not res!44079) (not e!55814))))

(declare-fun bm!8132 () Bool)

(assert (=> bm!8132 (= call!8125 call!8138)))

(declare-fun b!85586 () Bool)

(declare-fun res!44072 () Bool)

(assert (=> b!85586 (=> (not res!44072) (not e!55819))))

(assert (=> b!85586 (= res!44072 call!8127)))

(assert (=> b!85586 (= e!55822 e!55819)))

(declare-fun b!85587 () Bool)

(assert (=> b!85587 (= e!55829 (= call!8134 call!8133))))

(declare-fun d!22143 () Bool)

(assert (=> d!22143 e!55813))

(declare-fun res!44082 () Bool)

(assert (=> d!22143 (=> (not res!44082) (not e!55813))))

(assert (=> d!22143 (= res!44082 (valid!323 (_2!1109 lt!40519)))))

(assert (=> d!22143 (= lt!40519 e!55831)))

(assert (=> d!22143 (= c!13892 (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvneg (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22143 (valid!323 newMap!16)))

(assert (=> d!22143 (= (update!112 newMap!16 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326) lt!40519)))

(declare-fun b!85588 () Bool)

(assert (=> b!85588 (= e!55814 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40542)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85589 () Bool)

(declare-fun e!55825 () Bool)

(assert (=> b!85589 (= e!55825 (not call!8130))))

(declare-fun bm!8133 () Bool)

(declare-fun call!8140 () Bool)

(assert (=> bm!8133 (= call!8140 call!8139)))

(declare-fun b!85590 () Bool)

(declare-fun res!44078 () Bool)

(assert (=> b!85590 (= res!44078 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!40524)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85590 (=> (not res!44078) (not e!55832))))

(declare-fun b!85591 () Bool)

(declare-fun lt!40529 () Unit!2517)

(declare-fun lt!40544 () Unit!2517)

(assert (=> b!85591 (= lt!40529 lt!40544)))

(declare-fun call!8123 () Bool)

(assert (=> b!85591 call!8123))

(declare-fun lemmaValidKeyInArrayIsInListMap!92 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) Unit!2517)

(assert (=> b!85591 (= lt!40544 (lemmaValidKeyInArrayIsInListMap!92 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (defaultEntry!2338 newMap!16)))))

(assert (=> b!85591 (= lt!40533 (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))))

(declare-fun lt!40530 () Unit!2517)

(declare-fun lt!40536 () Unit!2517)

(assert (=> b!85591 (= lt!40530 lt!40536)))

(assert (=> b!85591 (= call!8131 call!8143)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2517)

(assert (=> b!85591 (= lt!40536 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40520 () Unit!2517)

(assert (=> b!85591 (= lt!40520 e!55827)))

(assert (=> b!85591 (= c!13890 (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!85591 (= e!55821 (tuple2!2197 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (_size!427 newMap!16) (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (_vacant!427 newMap!16))))))

(declare-fun call!8126 () Unit!2517)

(declare-fun bm!8134 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2517)

(assert (=> bm!8134 (= call!8126 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(declare-fun b!85592 () Bool)

(assert (=> b!85592 (= e!55834 e!55832)))

(declare-fun res!44075 () Bool)

(assert (=> b!85592 (= res!44075 call!8127)))

(assert (=> b!85592 (=> (not res!44075) (not e!55832))))

(declare-fun bm!8135 () Bool)

(declare-fun c!13893 () Bool)

(assert (=> bm!8135 (= c!13893 c!13882)))

(assert (=> bm!8135 (= call!8123 (contains!753 e!55818 (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(declare-fun b!85593 () Bool)

(declare-fun lt!40532 () Unit!2517)

(assert (=> b!85593 (= e!55827 lt!40532)))

(assert (=> b!85593 (= lt!40532 call!8126)))

(assert (=> b!85593 (= lt!40527 call!8137)))

(declare-fun res!44073 () Bool)

(assert (=> b!85593 (= res!44073 ((_ is Found!243) lt!40527))))

(assert (=> b!85593 (=> (not res!44073) (not e!55830))))

(assert (=> b!85593 e!55830))

(declare-fun bm!8136 () Bool)

(declare-fun call!8144 () ListLongMap!1461)

(assert (=> bm!8136 (= call!8143 call!8144)))

(declare-fun b!85594 () Bool)

(assert (=> b!85594 (= e!55818 call!8132)))

(declare-fun bm!8137 () Bool)

(assert (=> bm!8137 (= call!8141 call!8144)))

(declare-fun b!85595 () Bool)

(assert (=> b!85595 (= e!55829 e!55820)))

(declare-fun res!44080 () Bool)

(assert (=> b!85595 (= res!44080 (contains!753 call!8134 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!85595 (=> (not res!44080) (not e!55820))))

(declare-fun b!85596 () Bool)

(declare-fun c!13885 () Bool)

(assert (=> b!85596 (= c!13885 ((_ is MissingVacant!243) lt!40525))))

(declare-fun e!55815 () Bool)

(assert (=> b!85596 (= e!55826 e!55815)))

(declare-fun b!85597 () Bool)

(declare-fun lt!40543 () Unit!2517)

(assert (=> b!85597 (= lt!40543 e!55823)))

(assert (=> b!85597 (= c!13880 call!8123)))

(assert (=> b!85597 (= e!55817 (tuple2!2197 false newMap!16))))

(declare-fun bm!8138 () Bool)

(assert (=> bm!8138 (= call!8136 call!8131)))

(declare-fun b!85598 () Bool)

(declare-fun res!44076 () Bool)

(assert (=> b!85598 (= res!44076 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!40525)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85598 (=> (not res!44076) (not e!55833))))

(declare-fun b!85599 () Bool)

(assert (=> b!85599 (= e!55815 e!55833)))

(declare-fun res!44077 () Bool)

(assert (=> b!85599 (= res!44077 call!8140)))

(assert (=> b!85599 (=> (not res!44077) (not e!55833))))

(declare-fun bm!8139 () Bool)

(assert (=> bm!8139 (= call!8144 (getCurrentListMap!439 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun bm!8140 () Bool)

(declare-fun c!13889 () Bool)

(declare-fun updateHelperNewKey!31 (LongMapFixedSize!756 (_ BitVec 64) V!3027 (_ BitVec 32)) tuple2!2196)

(assert (=> bm!8140 (= call!8129 (updateHelperNewKey!31 newMap!16 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))

(declare-fun bm!8141 () Bool)

(assert (=> bm!8141 (= call!8142 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85600 () Bool)

(declare-fun lt!40522 () Unit!2517)

(declare-fun lt!40526 () Unit!2517)

(assert (=> b!85600 (= lt!40522 lt!40526)))

(assert (=> b!85600 (= call!8136 call!8124)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!31 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2517)

(assert (=> b!85600 (= lt!40526 (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40541 (zeroValue!2230 newMap!16) lt!40326 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)))))

(assert (=> b!85600 (= lt!40541 (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!85600 (= e!55816 (tuple2!2197 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (bvor (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) lt!40326 (minValue!2230 newMap!16) (_size!427 newMap!16) (_keys!4010 newMap!16) (_values!2321 newMap!16) (_vacant!427 newMap!16))))))

(declare-fun bm!8142 () Bool)

(assert (=> bm!8142 (= call!8135 call!8128)))

(declare-fun b!85601 () Bool)

(declare-fun res!44083 () Bool)

(assert (=> b!85601 (=> (not res!44083) (not e!55825))))

(assert (=> b!85601 (= res!44083 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!40525)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85602 () Bool)

(assert (=> b!85602 (= e!55815 ((_ is Undefined!243) lt!40525))))

(declare-fun b!85603 () Bool)

(declare-fun res!44074 () Bool)

(assert (=> b!85603 (= res!44074 call!8135)))

(assert (=> b!85603 (=> (not res!44074) (not e!55830))))

(declare-fun b!85604 () Bool)

(assert (=> b!85604 (= c!13889 ((_ is MissingVacant!243) lt!40535))))

(assert (=> b!85604 (= e!55817 e!55828)))

(declare-fun b!85605 () Bool)

(declare-fun res!44071 () Bool)

(assert (=> b!85605 (=> (not res!44071) (not e!55825))))

(assert (=> b!85605 (= res!44071 call!8140)))

(assert (=> b!85605 (= e!55826 e!55825)))

(declare-fun b!85606 () Bool)

(declare-fun Unit!2526 () Unit!2517)

(assert (=> b!85606 (= e!55823 Unit!2526)))

(declare-fun lt!40523 () Unit!2517)

(assert (=> b!85606 (= lt!40523 call!8126)))

(assert (=> b!85606 (= lt!40542 call!8145)))

(declare-fun res!44070 () Bool)

(assert (=> b!85606 (= res!44070 ((_ is Found!243) lt!40542))))

(assert (=> b!85606 (=> (not res!44070) (not e!55814))))

(assert (=> b!85606 e!55814))

(declare-fun lt!40545 () Unit!2517)

(assert (=> b!85606 (= lt!40545 lt!40523)))

(assert (=> b!85606 false))

(declare-fun b!85607 () Bool)

(assert (=> b!85607 (= e!55834 ((_ is Undefined!243) lt!40524))))

(assert (= (and d!22143 c!13892) b!85584))

(assert (= (and d!22143 (not c!13892)) b!85583))

(assert (= (and b!85584 c!13883) b!85600))

(assert (= (and b!85584 (not c!13883)) b!85580))

(assert (= (or b!85600 b!85580) bm!8120))

(assert (= (or b!85600 b!85580) bm!8137))

(assert (= (or b!85600 b!85580) bm!8138))

(assert (= (and b!85583 c!13882) b!85597))

(assert (= (and b!85583 (not c!13882)) b!85604))

(assert (= (and b!85597 c!13880) b!85606))

(assert (= (and b!85597 (not c!13880)) b!85572))

(assert (= (and b!85606 res!44070) b!85585))

(assert (= (and b!85585 res!44079) b!85588))

(assert (= (and b!85572 c!13888) b!85605))

(assert (= (and b!85572 (not c!13888)) b!85596))

(assert (= (and b!85605 res!44071) b!85601))

(assert (= (and b!85601 res!44083) b!85589))

(assert (= (and b!85596 c!13885) b!85599))

(assert (= (and b!85596 (not c!13885)) b!85602))

(assert (= (and b!85599 res!44077) b!85598))

(assert (= (and b!85598 res!44076) b!85574))

(assert (= (or b!85605 b!85599) bm!8133))

(assert (= (or b!85589 b!85574) bm!8121))

(assert (= (or b!85585 bm!8133) bm!8125))

(assert (= (or b!85606 b!85572) bm!8129))

(assert (= (and b!85604 c!13889) b!85571))

(assert (= (and b!85604 (not c!13889)) b!85570))

(assert (= (and b!85570 c!13887) b!85581))

(assert (= (and b!85570 (not c!13887)) b!85591))

(assert (= (and b!85591 c!13890) b!85593))

(assert (= (and b!85591 (not c!13890)) b!85566))

(assert (= (and b!85593 res!44073) b!85603))

(assert (= (and b!85603 res!44074) b!85577))

(assert (= (and b!85566 c!13891) b!85586))

(assert (= (and b!85566 (not c!13891)) b!85578))

(assert (= (and b!85586 res!44072) b!85573))

(assert (= (and b!85573 res!44081) b!85579))

(assert (= (and b!85578 c!13886) b!85592))

(assert (= (and b!85578 (not c!13886)) b!85607))

(assert (= (and b!85592 res!44075) b!85590))

(assert (= (and b!85590 res!44078) b!85582))

(assert (= (or b!85586 b!85592) bm!8126))

(assert (= (or b!85579 b!85582) bm!8132))

(assert (= (or b!85603 bm!8126) bm!8142))

(assert (= (or b!85593 b!85566) bm!8127))

(assert (= (or b!85571 b!85581) bm!8140))

(assert (= (or bm!8125 bm!8142) bm!8128))

(assert (= (or bm!8121 bm!8132) bm!8131))

(assert (= (or b!85606 b!85593) bm!8134))

(assert (= (or bm!8129 bm!8127) bm!8141))

(assert (= (or b!85572 b!85566) bm!8122))

(assert (= (or b!85597 b!85591) bm!8136))

(assert (= (or b!85597 b!85591) bm!8135))

(assert (= (and bm!8135 c!13893) b!85576))

(assert (= (and bm!8135 (not c!13893)) b!85594))

(assert (= (or bm!8137 bm!8136) bm!8139))

(assert (= (or bm!8120 b!85594) bm!8119))

(assert (= (or bm!8138 b!85591) bm!8124))

(assert (= (and bm!8124 c!13884) b!85575))

(assert (= (and bm!8124 (not c!13884)) b!85567))

(assert (= (and d!22143 res!44082) b!85568))

(assert (= (and b!85568 c!13881) b!85595))

(assert (= (and b!85568 (not c!13881)) b!85587))

(assert (= (and b!85595 res!44080) b!85569))

(assert (= (or b!85569 b!85587) bm!8130))

(assert (= (or b!85595 b!85569 b!85587) bm!8123))

(declare-fun m!90053 () Bool)

(assert (=> bm!8123 m!90053))

(declare-fun m!90055 () Bool)

(assert (=> d!22143 m!90055))

(assert (=> d!22143 m!89855))

(assert (=> bm!8131 m!89857))

(declare-fun m!90057 () Bool)

(assert (=> bm!8131 m!90057))

(declare-fun m!90059 () Bool)

(assert (=> b!85573 m!90059))

(declare-fun m!90061 () Bool)

(assert (=> bm!8119 m!90061))

(declare-fun m!90063 () Bool)

(assert (=> bm!8128 m!90063))

(declare-fun m!90065 () Bool)

(assert (=> b!85569 m!90065))

(assert (=> bm!8141 m!89857))

(declare-fun m!90067 () Bool)

(assert (=> bm!8141 m!90067))

(declare-fun m!90069 () Bool)

(assert (=> b!85590 m!90069))

(assert (=> b!85591 m!89857))

(declare-fun m!90071 () Bool)

(assert (=> b!85591 m!90071))

(declare-fun m!90073 () Bool)

(assert (=> b!85591 m!90073))

(assert (=> b!85591 m!89981))

(declare-fun m!90075 () Bool)

(assert (=> b!85591 m!90075))

(assert (=> b!85591 m!89981))

(assert (=> b!85591 m!89857))

(declare-fun m!90077 () Bool)

(assert (=> b!85591 m!90077))

(assert (=> bm!8139 m!90075))

(declare-fun m!90079 () Bool)

(assert (=> bm!8139 m!90079))

(declare-fun m!90081 () Bool)

(assert (=> bm!8124 m!90081))

(assert (=> b!85567 m!89981))

(assert (=> bm!8140 m!89857))

(declare-fun m!90083 () Bool)

(assert (=> bm!8140 m!90083))

(assert (=> bm!8134 m!89857))

(declare-fun m!90085 () Bool)

(assert (=> bm!8134 m!90085))

(assert (=> b!85583 m!89857))

(assert (=> b!85583 m!90067))

(declare-fun m!90087 () Bool)

(assert (=> b!85601 m!90087))

(declare-fun m!90089 () Bool)

(assert (=> b!85577 m!90089))

(declare-fun m!90091 () Bool)

(assert (=> b!85598 m!90091))

(assert (=> bm!8130 m!89871))

(declare-fun m!90093 () Bool)

(assert (=> bm!8135 m!90093))

(declare-fun m!90095 () Bool)

(assert (=> bm!8135 m!90095))

(declare-fun m!90097 () Bool)

(assert (=> b!85580 m!90097))

(declare-fun m!90099 () Bool)

(assert (=> b!85588 m!90099))

(assert (=> b!85595 m!89857))

(declare-fun m!90101 () Bool)

(assert (=> b!85595 m!90101))

(assert (=> bm!8122 m!89857))

(declare-fun m!90103 () Bool)

(assert (=> bm!8122 m!90103))

(declare-fun m!90105 () Bool)

(assert (=> b!85600 m!90105))

(assert (=> b!85318 d!22143))

(declare-fun d!22145 () Bool)

(assert (=> d!22145 (= (array_inv!1187 (_keys!4010 newMap!16)) (bvsge (size!2163 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85323 d!22145))

(declare-fun d!22147 () Bool)

(assert (=> d!22147 (= (array_inv!1188 (_values!2321 newMap!16)) (bvsge (size!2164 (_values!2321 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85323 d!22147))

(declare-fun d!22149 () Bool)

(declare-fun e!55837 () Bool)

(assert (=> d!22149 e!55837))

(declare-fun res!44088 () Bool)

(assert (=> d!22149 (=> (not res!44088) (not e!55837))))

(declare-fun lt!40556 () ListLongMap!1461)

(assert (=> d!22149 (= res!44088 (contains!753 lt!40556 (_1!1110 lt!40322)))))

(declare-fun lt!40555 () List!1519)

(assert (=> d!22149 (= lt!40556 (ListLongMap!1462 lt!40555))))

(declare-fun lt!40557 () Unit!2517)

(declare-fun lt!40554 () Unit!2517)

(assert (=> d!22149 (= lt!40557 lt!40554)))

(assert (=> d!22149 (= (getValueByKey!140 lt!40555 (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322)))))

(declare-fun lemmaContainsTupThenGetReturnValue!57 (List!1519 (_ BitVec 64) V!3027) Unit!2517)

(assert (=> d!22149 (= lt!40554 (lemmaContainsTupThenGetReturnValue!57 lt!40555 (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun insertStrictlySorted!60 (List!1519 (_ BitVec 64) V!3027) List!1519)

(assert (=> d!22149 (= lt!40555 (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(assert (=> d!22149 (= (+!110 lt!40331 lt!40322) lt!40556)))

(declare-fun b!85612 () Bool)

(declare-fun res!44089 () Bool)

(assert (=> b!85612 (=> (not res!44089) (not e!55837))))

(assert (=> b!85612 (= res!44089 (= (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322))))))

(declare-fun b!85613 () Bool)

(declare-fun contains!754 (List!1519 tuple2!2198) Bool)

(assert (=> b!85613 (= e!55837 (contains!754 (toList!746 lt!40556) lt!40322))))

(assert (= (and d!22149 res!44088) b!85612))

(assert (= (and b!85612 res!44089) b!85613))

(declare-fun m!90107 () Bool)

(assert (=> d!22149 m!90107))

(declare-fun m!90109 () Bool)

(assert (=> d!22149 m!90109))

(declare-fun m!90111 () Bool)

(assert (=> d!22149 m!90111))

(declare-fun m!90113 () Bool)

(assert (=> d!22149 m!90113))

(declare-fun m!90115 () Bool)

(assert (=> b!85612 m!90115))

(declare-fun m!90117 () Bool)

(assert (=> b!85613 m!90117))

(assert (=> b!85327 d!22149))

(declare-fun d!22151 () Bool)

(declare-fun e!55838 () Bool)

(assert (=> d!22151 e!55838))

(declare-fun res!44090 () Bool)

(assert (=> d!22151 (=> (not res!44090) (not e!55838))))

(declare-fun lt!40560 () ListLongMap!1461)

(assert (=> d!22151 (= res!44090 (contains!753 lt!40560 (_1!1110 lt!40324)))))

(declare-fun lt!40559 () List!1519)

(assert (=> d!22151 (= lt!40560 (ListLongMap!1462 lt!40559))))

(declare-fun lt!40561 () Unit!2517)

(declare-fun lt!40558 () Unit!2517)

(assert (=> d!22151 (= lt!40561 lt!40558)))

(assert (=> d!22151 (= (getValueByKey!140 lt!40559 (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324)))))

(assert (=> d!22151 (= lt!40558 (lemmaContainsTupThenGetReturnValue!57 lt!40559 (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(assert (=> d!22151 (= lt!40559 (insertStrictlySorted!60 (toList!746 lt!40316) (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(assert (=> d!22151 (= (+!110 lt!40316 lt!40324) lt!40560)))

(declare-fun b!85614 () Bool)

(declare-fun res!44091 () Bool)

(assert (=> b!85614 (=> (not res!44091) (not e!55838))))

(assert (=> b!85614 (= res!44091 (= (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324))))))

(declare-fun b!85615 () Bool)

(assert (=> b!85615 (= e!55838 (contains!754 (toList!746 lt!40560) lt!40324))))

(assert (= (and d!22151 res!44090) b!85614))

(assert (= (and b!85614 res!44091) b!85615))

(declare-fun m!90119 () Bool)

(assert (=> d!22151 m!90119))

(declare-fun m!90121 () Bool)

(assert (=> d!22151 m!90121))

(declare-fun m!90123 () Bool)

(assert (=> d!22151 m!90123))

(declare-fun m!90125 () Bool)

(assert (=> d!22151 m!90125))

(declare-fun m!90127 () Bool)

(assert (=> b!85614 m!90127))

(declare-fun m!90129 () Bool)

(assert (=> b!85615 m!90129))

(assert (=> b!85327 d!22151))

(declare-fun d!22153 () Bool)

(declare-fun e!55839 () Bool)

(assert (=> d!22153 e!55839))

(declare-fun res!44092 () Bool)

(assert (=> d!22153 (=> (not res!44092) (not e!55839))))

(declare-fun lt!40564 () ListLongMap!1461)

(assert (=> d!22153 (= res!44092 (contains!753 lt!40564 (_1!1110 lt!40318)))))

(declare-fun lt!40563 () List!1519)

(assert (=> d!22153 (= lt!40564 (ListLongMap!1462 lt!40563))))

(declare-fun lt!40565 () Unit!2517)

(declare-fun lt!40562 () Unit!2517)

(assert (=> d!22153 (= lt!40565 lt!40562)))

(assert (=> d!22153 (= (getValueByKey!140 lt!40563 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(assert (=> d!22153 (= lt!40562 (lemmaContainsTupThenGetReturnValue!57 lt!40563 (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(assert (=> d!22153 (= lt!40563 (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(assert (=> d!22153 (= (+!110 lt!40331 lt!40318) lt!40564)))

(declare-fun b!85616 () Bool)

(declare-fun res!44093 () Bool)

(assert (=> b!85616 (=> (not res!44093) (not e!55839))))

(assert (=> b!85616 (= res!44093 (= (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318))))))

(declare-fun b!85617 () Bool)

(assert (=> b!85617 (= e!55839 (contains!754 (toList!746 lt!40564) lt!40318))))

(assert (= (and d!22153 res!44092) b!85616))

(assert (= (and b!85616 res!44093) b!85617))

(declare-fun m!90131 () Bool)

(assert (=> d!22153 m!90131))

(declare-fun m!90133 () Bool)

(assert (=> d!22153 m!90133))

(declare-fun m!90135 () Bool)

(assert (=> d!22153 m!90135))

(declare-fun m!90137 () Bool)

(assert (=> d!22153 m!90137))

(declare-fun m!90139 () Bool)

(assert (=> b!85616 m!90139))

(declare-fun m!90141 () Bool)

(assert (=> b!85617 m!90141))

(assert (=> b!85327 d!22153))

(declare-fun d!22155 () Bool)

(declare-fun e!55840 () Bool)

(assert (=> d!22155 e!55840))

(declare-fun res!44094 () Bool)

(assert (=> d!22155 (=> (not res!44094) (not e!55840))))

(declare-fun lt!40568 () ListLongMap!1461)

(assert (=> d!22155 (= res!44094 (contains!753 lt!40568 (_1!1110 lt!40324)))))

(declare-fun lt!40567 () List!1519)

(assert (=> d!22155 (= lt!40568 (ListLongMap!1462 lt!40567))))

(declare-fun lt!40569 () Unit!2517)

(declare-fun lt!40566 () Unit!2517)

(assert (=> d!22155 (= lt!40569 lt!40566)))

(assert (=> d!22155 (= (getValueByKey!140 lt!40567 (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324)))))

(assert (=> d!22155 (= lt!40566 (lemmaContainsTupThenGetReturnValue!57 lt!40567 (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(assert (=> d!22155 (= lt!40567 (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(assert (=> d!22155 (= (+!110 lt!40325 lt!40324) lt!40568)))

(declare-fun b!85618 () Bool)

(declare-fun res!44095 () Bool)

(assert (=> b!85618 (=> (not res!44095) (not e!55840))))

(assert (=> b!85618 (= res!44095 (= (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324))))))

(declare-fun b!85619 () Bool)

(assert (=> b!85619 (= e!55840 (contains!754 (toList!746 lt!40568) lt!40324))))

(assert (= (and d!22155 res!44094) b!85618))

(assert (= (and b!85618 res!44095) b!85619))

(declare-fun m!90143 () Bool)

(assert (=> d!22155 m!90143))

(declare-fun m!90145 () Bool)

(assert (=> d!22155 m!90145))

(declare-fun m!90147 () Bool)

(assert (=> d!22155 m!90147))

(declare-fun m!90149 () Bool)

(assert (=> d!22155 m!90149))

(declare-fun m!90151 () Bool)

(assert (=> b!85618 m!90151))

(declare-fun m!90153 () Bool)

(assert (=> b!85619 m!90153))

(assert (=> b!85327 d!22155))

(declare-fun b!85644 () Bool)

(declare-fun e!55857 () ListLongMap!1461)

(declare-fun call!8148 () ListLongMap!1461)

(assert (=> b!85644 (= e!55857 call!8148)))

(declare-fun b!85645 () Bool)

(declare-fun e!55855 () Bool)

(assert (=> b!85645 (= e!55855 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85645 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!85646 () Bool)

(declare-fun lt!40588 () Unit!2517)

(declare-fun lt!40589 () Unit!2517)

(assert (=> b!85646 (= lt!40588 lt!40589)))

(declare-fun lt!40585 () (_ BitVec 64))

(declare-fun lt!40587 () ListLongMap!1461)

(declare-fun lt!40590 () V!3027)

(declare-fun lt!40586 () (_ BitVec 64))

(assert (=> b!85646 (not (contains!753 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)) lt!40585))))

(declare-fun addStillNotContains!31 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2517)

(assert (=> b!85646 (= lt!40589 (addStillNotContains!31 lt!40587 lt!40586 lt!40590 lt!40585))))

(assert (=> b!85646 (= lt!40585 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85646 (= lt!40590 (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85646 (= lt!40586 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!85646 (= lt!40587 call!8148)))

(assert (=> b!85646 (= e!55857 (+!110 call!8148 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!22157 () Bool)

(declare-fun e!55856 () Bool)

(assert (=> d!22157 e!55856))

(declare-fun res!44104 () Bool)

(assert (=> d!22157 (=> (not res!44104) (not e!55856))))

(declare-fun lt!40584 () ListLongMap!1461)

(assert (=> d!22157 (= res!44104 (not (contains!753 lt!40584 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!55858 () ListLongMap!1461)

(assert (=> d!22157 (= lt!40584 e!55858)))

(declare-fun c!13904 () Bool)

(assert (=> d!22157 (= c!13904 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22157 (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992))))))

(assert (=> d!22157 (= (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) lt!40584)))

(declare-fun b!85647 () Bool)

(assert (=> b!85647 (= e!55858 (ListLongMap!1462 Nil!1516))))

(declare-fun b!85648 () Bool)

(declare-fun e!55860 () Bool)

(assert (=> b!85648 (= e!55860 (= lt!40584 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun bm!8145 () Bool)

(assert (=> bm!8145 (= call!8148 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85649 () Bool)

(assert (=> b!85649 (= e!55858 e!55857)))

(declare-fun c!13905 () Bool)

(assert (=> b!85649 (= c!13905 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85650 () Bool)

(declare-fun isEmpty!335 (ListLongMap!1461) Bool)

(assert (=> b!85650 (= e!55860 (isEmpty!335 lt!40584))))

(declare-fun b!85651 () Bool)

(declare-fun e!55861 () Bool)

(declare-fun e!55859 () Bool)

(assert (=> b!85651 (= e!55861 e!55859)))

(assert (=> b!85651 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun res!44107 () Bool)

(assert (=> b!85651 (= res!44107 (contains!753 lt!40584 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85651 (=> (not res!44107) (not e!55859))))

(declare-fun b!85652 () Bool)

(assert (=> b!85652 (= e!55861 e!55860)))

(declare-fun c!13902 () Bool)

(assert (=> b!85652 (= c!13902 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85653 () Bool)

(assert (=> b!85653 (= e!55856 e!55861)))

(declare-fun c!13903 () Bool)

(assert (=> b!85653 (= c!13903 e!55855)))

(declare-fun res!44105 () Bool)

(assert (=> b!85653 (=> (not res!44105) (not e!55855))))

(assert (=> b!85653 (= res!44105 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85654 () Bool)

(declare-fun res!44106 () Bool)

(assert (=> b!85654 (=> (not res!44106) (not e!55856))))

(assert (=> b!85654 (= res!44106 (not (contains!753 lt!40584 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85655 () Bool)

(assert (=> b!85655 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!85655 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!85655 (= e!55859 (= (apply!82 lt!40584 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22157 c!13904) b!85647))

(assert (= (and d!22157 (not c!13904)) b!85649))

(assert (= (and b!85649 c!13905) b!85646))

(assert (= (and b!85649 (not c!13905)) b!85644))

(assert (= (or b!85646 b!85644) bm!8145))

(assert (= (and d!22157 res!44104) b!85654))

(assert (= (and b!85654 res!44106) b!85653))

(assert (= (and b!85653 res!44105) b!85645))

(assert (= (and b!85653 c!13903) b!85651))

(assert (= (and b!85653 (not c!13903)) b!85652))

(assert (= (and b!85651 res!44107) b!85655))

(assert (= (and b!85652 c!13902) b!85648))

(assert (= (and b!85652 (not c!13902)) b!85650))

(declare-fun b_lambda!3805 () Bool)

(assert (=> (not b_lambda!3805) (not b!85646)))

(assert (=> b!85646 t!5237))

(declare-fun b_and!5191 () Bool)

(assert (= b_and!5187 (and (=> t!5237 result!2913) b_and!5191)))

(assert (=> b!85646 t!5239))

(declare-fun b_and!5193 () Bool)

(assert (= b_and!5189 (and (=> t!5239 result!2917) b_and!5193)))

(declare-fun b_lambda!3807 () Bool)

(assert (=> (not b_lambda!3807) (not b!85655)))

(assert (=> b!85655 t!5237))

(declare-fun b_and!5195 () Bool)

(assert (= b_and!5191 (and (=> t!5237 result!2913) b_and!5195)))

(assert (=> b!85655 t!5239))

(declare-fun b_and!5197 () Bool)

(assert (= b_and!5193 (and (=> t!5239 result!2917) b_and!5197)))

(assert (=> b!85645 m!89983))

(assert (=> b!85645 m!89983))

(assert (=> b!85645 m!89985))

(assert (=> b!85651 m!89983))

(assert (=> b!85651 m!89983))

(declare-fun m!90155 () Bool)

(assert (=> b!85651 m!90155))

(declare-fun m!90157 () Bool)

(assert (=> bm!8145 m!90157))

(declare-fun m!90159 () Bool)

(assert (=> d!22157 m!90159))

(assert (=> d!22157 m!89899))

(assert (=> b!85649 m!89983))

(assert (=> b!85649 m!89983))

(assert (=> b!85649 m!89985))

(declare-fun m!90161 () Bool)

(assert (=> b!85654 m!90161))

(assert (=> b!85648 m!90157))

(declare-fun m!90163 () Bool)

(assert (=> b!85650 m!90163))

(assert (=> b!85646 m!89993))

(assert (=> b!85646 m!89861))

(assert (=> b!85646 m!89995))

(declare-fun m!90165 () Bool)

(assert (=> b!85646 m!90165))

(assert (=> b!85646 m!89993))

(assert (=> b!85646 m!90165))

(declare-fun m!90167 () Bool)

(assert (=> b!85646 m!90167))

(declare-fun m!90169 () Bool)

(assert (=> b!85646 m!90169))

(assert (=> b!85646 m!89861))

(assert (=> b!85646 m!89983))

(declare-fun m!90171 () Bool)

(assert (=> b!85646 m!90171))

(assert (=> b!85655 m!89993))

(assert (=> b!85655 m!89861))

(assert (=> b!85655 m!89995))

(assert (=> b!85655 m!89993))

(assert (=> b!85655 m!89983))

(declare-fun m!90173 () Bool)

(assert (=> b!85655 m!90173))

(assert (=> b!85655 m!89861))

(assert (=> b!85655 m!89983))

(assert (=> b!85327 d!22157))

(declare-fun d!22159 () Bool)

(assert (=> d!22159 (= (+!110 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (+!110 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun lt!40593 () Unit!2517)

(declare-fun choose!498 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64) V!3027) Unit!2517)

(assert (=> d!22159 (= lt!40593 (choose!498 lt!40331 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(assert (=> d!22159 (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22159 (= (addCommutativeForDiffKeys!29 lt!40331 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))) lt!40593)))

(declare-fun bs!3618 () Bool)

(assert (= bs!3618 d!22159))

(assert (=> bs!3618 m!89857))

(declare-fun m!90175 () Bool)

(assert (=> bs!3618 m!90175))

(declare-fun m!90177 () Bool)

(assert (=> bs!3618 m!90177))

(declare-fun m!90179 () Bool)

(assert (=> bs!3618 m!90179))

(assert (=> bs!3618 m!90177))

(declare-fun m!90181 () Bool)

(assert (=> bs!3618 m!90181))

(assert (=> bs!3618 m!90181))

(declare-fun m!90183 () Bool)

(assert (=> bs!3618 m!90183))

(assert (=> b!85327 d!22159))

(declare-fun d!22161 () Bool)

(declare-fun e!55862 () Bool)

(assert (=> d!22161 e!55862))

(declare-fun res!44108 () Bool)

(assert (=> d!22161 (=> (not res!44108) (not e!55862))))

(declare-fun lt!40596 () ListLongMap!1461)

(assert (=> d!22161 (= res!44108 (contains!753 lt!40596 (_1!1110 lt!40322)))))

(declare-fun lt!40595 () List!1519)

(assert (=> d!22161 (= lt!40596 (ListLongMap!1462 lt!40595))))

(declare-fun lt!40597 () Unit!2517)

(declare-fun lt!40594 () Unit!2517)

(assert (=> d!22161 (= lt!40597 lt!40594)))

(assert (=> d!22161 (= (getValueByKey!140 lt!40595 (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322)))))

(assert (=> d!22161 (= lt!40594 (lemmaContainsTupThenGetReturnValue!57 lt!40595 (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(assert (=> d!22161 (= lt!40595 (insertStrictlySorted!60 (toList!746 lt!40319) (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(assert (=> d!22161 (= (+!110 lt!40319 lt!40322) lt!40596)))

(declare-fun b!85656 () Bool)

(declare-fun res!44109 () Bool)

(assert (=> b!85656 (=> (not res!44109) (not e!55862))))

(assert (=> b!85656 (= res!44109 (= (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322))))))

(declare-fun b!85657 () Bool)

(assert (=> b!85657 (= e!55862 (contains!754 (toList!746 lt!40596) lt!40322))))

(assert (= (and d!22161 res!44108) b!85656))

(assert (= (and b!85656 res!44109) b!85657))

(declare-fun m!90185 () Bool)

(assert (=> d!22161 m!90185))

(declare-fun m!90187 () Bool)

(assert (=> d!22161 m!90187))

(declare-fun m!90189 () Bool)

(assert (=> d!22161 m!90189))

(declare-fun m!90191 () Bool)

(assert (=> d!22161 m!90191))

(declare-fun m!90193 () Bool)

(assert (=> b!85656 m!90193))

(declare-fun m!90195 () Bool)

(assert (=> b!85657 m!90195))

(assert (=> b!85327 d!22161))

(declare-fun d!22163 () Bool)

(declare-fun e!55863 () Bool)

(assert (=> d!22163 e!55863))

(declare-fun res!44110 () Bool)

(assert (=> d!22163 (=> (not res!44110) (not e!55863))))

(declare-fun lt!40600 () ListLongMap!1461)

(assert (=> d!22163 (= res!44110 (contains!753 lt!40600 (_1!1110 lt!40318)))))

(declare-fun lt!40599 () List!1519)

(assert (=> d!22163 (= lt!40600 (ListLongMap!1462 lt!40599))))

(declare-fun lt!40601 () Unit!2517)

(declare-fun lt!40598 () Unit!2517)

(assert (=> d!22163 (= lt!40601 lt!40598)))

(assert (=> d!22163 (= (getValueByKey!140 lt!40599 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(assert (=> d!22163 (= lt!40598 (lemmaContainsTupThenGetReturnValue!57 lt!40599 (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(assert (=> d!22163 (= lt!40599 (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(assert (=> d!22163 (= (+!110 lt!40325 lt!40318) lt!40600)))

(declare-fun b!85658 () Bool)

(declare-fun res!44111 () Bool)

(assert (=> b!85658 (=> (not res!44111) (not e!55863))))

(assert (=> b!85658 (= res!44111 (= (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318))))))

(declare-fun b!85659 () Bool)

(assert (=> b!85659 (= e!55863 (contains!754 (toList!746 lt!40600) lt!40318))))

(assert (= (and d!22163 res!44110) b!85658))

(assert (= (and b!85658 res!44111) b!85659))

(declare-fun m!90197 () Bool)

(assert (=> d!22163 m!90197))

(declare-fun m!90199 () Bool)

(assert (=> d!22163 m!90199))

(declare-fun m!90201 () Bool)

(assert (=> d!22163 m!90201))

(declare-fun m!90203 () Bool)

(assert (=> d!22163 m!90203))

(declare-fun m!90205 () Bool)

(assert (=> b!85658 m!90205))

(declare-fun m!90207 () Bool)

(assert (=> b!85659 m!90207))

(assert (=> b!85327 d!22163))

(declare-fun d!22165 () Bool)

(declare-fun e!55864 () Bool)

(assert (=> d!22165 e!55864))

(declare-fun res!44112 () Bool)

(assert (=> d!22165 (=> (not res!44112) (not e!55864))))

(declare-fun lt!40604 () ListLongMap!1461)

(assert (=> d!22165 (= res!44112 (contains!753 lt!40604 (_1!1110 lt!40318)))))

(declare-fun lt!40603 () List!1519)

(assert (=> d!22165 (= lt!40604 (ListLongMap!1462 lt!40603))))

(declare-fun lt!40605 () Unit!2517)

(declare-fun lt!40602 () Unit!2517)

(assert (=> d!22165 (= lt!40605 lt!40602)))

(assert (=> d!22165 (= (getValueByKey!140 lt!40603 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(assert (=> d!22165 (= lt!40602 (lemmaContainsTupThenGetReturnValue!57 lt!40603 (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(assert (=> d!22165 (= lt!40603 (insertStrictlySorted!60 (toList!746 (+!110 lt!40331 lt!40322)) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(assert (=> d!22165 (= (+!110 (+!110 lt!40331 lt!40322) lt!40318) lt!40604)))

(declare-fun b!85660 () Bool)

(declare-fun res!44113 () Bool)

(assert (=> b!85660 (=> (not res!44113) (not e!55864))))

(assert (=> b!85660 (= res!44113 (= (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318))))))

(declare-fun b!85661 () Bool)

(assert (=> b!85661 (= e!55864 (contains!754 (toList!746 lt!40604) lt!40318))))

(assert (= (and d!22165 res!44112) b!85660))

(assert (= (and b!85660 res!44113) b!85661))

(declare-fun m!90209 () Bool)

(assert (=> d!22165 m!90209))

(declare-fun m!90211 () Bool)

(assert (=> d!22165 m!90211))

(declare-fun m!90213 () Bool)

(assert (=> d!22165 m!90213))

(declare-fun m!90215 () Bool)

(assert (=> d!22165 m!90215))

(declare-fun m!90217 () Bool)

(assert (=> b!85660 m!90217))

(declare-fun m!90219 () Bool)

(assert (=> b!85661 m!90219))

(assert (=> b!85327 d!22165))

(declare-fun d!22167 () Bool)

(assert (=> d!22167 (= (+!110 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (+!110 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun lt!40606 () Unit!2517)

(assert (=> d!22167 (= lt!40606 (choose!498 lt!40325 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))

(assert (=> d!22167 (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22167 (= (addCommutativeForDiffKeys!29 lt!40325 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) lt!40606)))

(declare-fun bs!3619 () Bool)

(assert (= bs!3619 d!22167))

(assert (=> bs!3619 m!89857))

(declare-fun m!90221 () Bool)

(assert (=> bs!3619 m!90221))

(declare-fun m!90223 () Bool)

(assert (=> bs!3619 m!90223))

(declare-fun m!90225 () Bool)

(assert (=> bs!3619 m!90225))

(assert (=> bs!3619 m!90223))

(declare-fun m!90227 () Bool)

(assert (=> bs!3619 m!90227))

(assert (=> bs!3619 m!90227))

(declare-fun m!90229 () Bool)

(assert (=> bs!3619 m!90229))

(assert (=> b!85327 d!22167))

(declare-fun d!22169 () Bool)

(assert (=> d!22169 (= (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992)))) (and (or (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000001111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000011111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000001111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000011111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000001111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000011111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000001111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000011111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000001111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000011111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000001111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000011111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000001111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000011111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000111111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000001111111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000011111111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000111111111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00001111111111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00011111111111111111111111111111) (= (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!85327 d!22169))

(declare-fun d!22171 () Bool)

(declare-fun c!13908 () Bool)

(assert (=> d!22171 (= c!13908 ((_ is ValueCellFull!924) (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!55867 () V!3027)

(assert (=> d!22171 (= (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55867)))

(declare-fun b!85666 () Bool)

(declare-fun get!1196 (ValueCell!924 V!3027) V!3027)

(assert (=> b!85666 (= e!55867 (get!1196 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85667 () Bool)

(declare-fun get!1197 (ValueCell!924 V!3027) V!3027)

(assert (=> b!85667 (= e!55867 (get!1197 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22171 c!13908) b!85666))

(assert (= (and d!22171 (not c!13908)) b!85667))

(assert (=> b!85666 m!89859))

(assert (=> b!85666 m!89861))

(declare-fun m!90231 () Bool)

(assert (=> b!85666 m!90231))

(assert (=> b!85667 m!89859))

(assert (=> b!85667 m!89861))

(declare-fun m!90233 () Bool)

(assert (=> b!85667 m!90233))

(assert (=> b!85336 d!22171))

(declare-fun d!22173 () Bool)

(assert (=> d!22173 (not (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40609 () Unit!2517)

(declare-fun choose!68 (array!4029 (_ BitVec 32) (_ BitVec 64) List!1520) Unit!2517)

(assert (=> d!22173 (= lt!40609 (choose!68 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517)))))

(assert (=> d!22173 (bvslt (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22173 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517)) lt!40609)))

(declare-fun bs!3620 () Bool)

(assert (= bs!3620 d!22173))

(assert (=> bs!3620 m!89857))

(assert (=> bs!3620 m!89885))

(assert (=> bs!3620 m!89857))

(declare-fun m!90235 () Bool)

(assert (=> bs!3620 m!90235))

(assert (=> b!85335 d!22173))

(declare-fun d!22175 () Bool)

(assert (=> d!22175 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) from!355 Nil!1517)))

(declare-fun lt!40612 () Unit!2517)

(declare-fun choose!39 (array!4029 (_ BitVec 32) (_ BitVec 32)) Unit!2517)

(assert (=> d!22175 (= lt!40612 (choose!39 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!22175 (bvslt (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22175 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355) lt!40612)))

(declare-fun bs!3621 () Bool)

(assert (= bs!3621 d!22175))

(assert (=> bs!3621 m!89881))

(declare-fun m!90237 () Bool)

(assert (=> bs!3621 m!90237))

(assert (=> b!85335 d!22175))

(declare-fun d!22177 () Bool)

(declare-fun res!44118 () Bool)

(declare-fun e!55872 () Bool)

(assert (=> d!22177 (=> res!44118 e!55872)))

(assert (=> d!22177 (= res!44118 (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22177 (= (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!55872)))

(declare-fun b!85672 () Bool)

(declare-fun e!55873 () Bool)

(assert (=> b!85672 (= e!55872 e!55873)))

(declare-fun res!44119 () Bool)

(assert (=> b!85672 (=> (not res!44119) (not e!55873))))

(assert (=> b!85672 (= res!44119 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85673 () Bool)

(assert (=> b!85673 (= e!55873 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!22177 (not res!44118)) b!85672))

(assert (= (and b!85672 res!44119) b!85673))

(assert (=> d!22177 m!89983))

(assert (=> b!85673 m!89857))

(declare-fun m!90239 () Bool)

(assert (=> b!85673 m!90239))

(assert (=> b!85335 d!22177))

(declare-fun d!22179 () Bool)

(declare-fun e!55876 () Bool)

(assert (=> d!22179 e!55876))

(declare-fun c!13911 () Bool)

(assert (=> d!22179 (= c!13911 (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!40615 () Unit!2517)

(declare-fun choose!499 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2517)

(assert (=> d!22179 (= lt!40615 (choose!499 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(assert (=> d!22179 (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992))))))

(assert (=> d!22179 (= (lemmaListMapContainsThenArrayContainsFrom!67 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) lt!40615)))

(declare-fun b!85678 () Bool)

(assert (=> b!85678 (= e!55876 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85679 () Bool)

(assert (=> b!85679 (= e!55876 (ite (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22179 c!13911) b!85678))

(assert (= (and d!22179 (not c!13911)) b!85679))

(assert (=> d!22179 m!89857))

(declare-fun m!90241 () Bool)

(assert (=> d!22179 m!90241))

(assert (=> d!22179 m!89899))

(assert (=> b!85678 m!89857))

(assert (=> b!85678 m!89885))

(assert (=> b!85335 d!22179))

(declare-fun b!85690 () Bool)

(declare-fun e!55887 () Bool)

(declare-fun call!8151 () Bool)

(assert (=> b!85690 (= e!55887 call!8151)))

(declare-fun b!85691 () Bool)

(declare-fun e!55888 () Bool)

(declare-fun contains!755 (List!1520 (_ BitVec 64)) Bool)

(assert (=> b!85691 (= e!55888 (contains!755 Nil!1517 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85692 () Bool)

(assert (=> b!85692 (= e!55887 call!8151)))

(declare-fun c!13914 () Bool)

(declare-fun bm!8148 () Bool)

(assert (=> bm!8148 (= call!8151 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)))))

(declare-fun d!22181 () Bool)

(declare-fun res!44126 () Bool)

(declare-fun e!55885 () Bool)

(assert (=> d!22181 (=> res!44126 e!55885)))

(assert (=> d!22181 (= res!44126 (bvsge from!355 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22181 (= (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) from!355 Nil!1517) e!55885)))

(declare-fun b!85693 () Bool)

(declare-fun e!55886 () Bool)

(assert (=> b!85693 (= e!55886 e!55887)))

(assert (=> b!85693 (= c!13914 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85694 () Bool)

(assert (=> b!85694 (= e!55885 e!55886)))

(declare-fun res!44127 () Bool)

(assert (=> b!85694 (=> (not res!44127) (not e!55886))))

(assert (=> b!85694 (= res!44127 (not e!55888))))

(declare-fun res!44128 () Bool)

(assert (=> b!85694 (=> (not res!44128) (not e!55888))))

(assert (=> b!85694 (= res!44128 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22181 (not res!44126)) b!85694))

(assert (= (and b!85694 res!44128) b!85691))

(assert (= (and b!85694 res!44127) b!85693))

(assert (= (and b!85693 c!13914) b!85690))

(assert (= (and b!85693 (not c!13914)) b!85692))

(assert (= (or b!85690 b!85692) bm!8148))

(assert (=> b!85691 m!89857))

(assert (=> b!85691 m!89857))

(declare-fun m!90243 () Bool)

(assert (=> b!85691 m!90243))

(assert (=> bm!8148 m!89857))

(declare-fun m!90245 () Bool)

(assert (=> bm!8148 m!90245))

(assert (=> b!85693 m!89857))

(assert (=> b!85693 m!89857))

(declare-fun m!90247 () Bool)

(assert (=> b!85693 m!90247))

(assert (=> b!85694 m!89857))

(assert (=> b!85694 m!89857))

(assert (=> b!85694 m!90247))

(assert (=> b!85335 d!22181))

(declare-fun d!22183 () Bool)

(assert (=> d!22183 (= (valid!324 thiss!992) (valid!323 (v!2645 (underlying!289 thiss!992))))))

(declare-fun bs!3622 () Bool)

(assert (= bs!3622 d!22183))

(declare-fun m!90249 () Bool)

(assert (=> bs!3622 m!90249))

(assert (=> start!10678 d!22183))

(declare-fun mapIsEmpty!3409 () Bool)

(declare-fun mapRes!3409 () Bool)

(assert (=> mapIsEmpty!3409 mapRes!3409))

(declare-fun mapNonEmpty!3409 () Bool)

(declare-fun tp!8953 () Bool)

(declare-fun e!55894 () Bool)

(assert (=> mapNonEmpty!3409 (= mapRes!3409 (and tp!8953 e!55894))))

(declare-fun mapRest!3409 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapKey!3409 () (_ BitVec 32))

(declare-fun mapValue!3409 () ValueCell!924)

(assert (=> mapNonEmpty!3409 (= mapRest!3400 (store mapRest!3409 mapKey!3409 mapValue!3409))))

(declare-fun b!85701 () Bool)

(assert (=> b!85701 (= e!55894 tp_is_empty!2535)))

(declare-fun b!85702 () Bool)

(declare-fun e!55893 () Bool)

(assert (=> b!85702 (= e!55893 tp_is_empty!2535)))

(declare-fun condMapEmpty!3409 () Bool)

(declare-fun mapDefault!3409 () ValueCell!924)

(assert (=> mapNonEmpty!3399 (= condMapEmpty!3409 (= mapRest!3400 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3409)))))

(assert (=> mapNonEmpty!3399 (= tp!8936 (and e!55893 mapRes!3409))))

(assert (= (and mapNonEmpty!3399 condMapEmpty!3409) mapIsEmpty!3409))

(assert (= (and mapNonEmpty!3399 (not condMapEmpty!3409)) mapNonEmpty!3409))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!924) mapValue!3409)) b!85701))

(assert (= (and mapNonEmpty!3399 ((_ is ValueCellFull!924) mapDefault!3409)) b!85702))

(declare-fun m!90251 () Bool)

(assert (=> mapNonEmpty!3409 m!90251))

(declare-fun mapIsEmpty!3410 () Bool)

(declare-fun mapRes!3410 () Bool)

(assert (=> mapIsEmpty!3410 mapRes!3410))

(declare-fun mapNonEmpty!3410 () Bool)

(declare-fun tp!8954 () Bool)

(declare-fun e!55896 () Bool)

(assert (=> mapNonEmpty!3410 (= mapRes!3410 (and tp!8954 e!55896))))

(declare-fun mapValue!3410 () ValueCell!924)

(declare-fun mapKey!3410 () (_ BitVec 32))

(declare-fun mapRest!3410 () (Array (_ BitVec 32) ValueCell!924))

(assert (=> mapNonEmpty!3410 (= mapRest!3399 (store mapRest!3410 mapKey!3410 mapValue!3410))))

(declare-fun b!85703 () Bool)

(assert (=> b!85703 (= e!55896 tp_is_empty!2535)))

(declare-fun b!85704 () Bool)

(declare-fun e!55895 () Bool)

(assert (=> b!85704 (= e!55895 tp_is_empty!2535)))

(declare-fun condMapEmpty!3410 () Bool)

(declare-fun mapDefault!3410 () ValueCell!924)

(assert (=> mapNonEmpty!3400 (= condMapEmpty!3410 (= mapRest!3399 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3410)))))

(assert (=> mapNonEmpty!3400 (= tp!8935 (and e!55895 mapRes!3410))))

(assert (= (and mapNonEmpty!3400 condMapEmpty!3410) mapIsEmpty!3410))

(assert (= (and mapNonEmpty!3400 (not condMapEmpty!3410)) mapNonEmpty!3410))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!924) mapValue!3410)) b!85703))

(assert (= (and mapNonEmpty!3400 ((_ is ValueCellFull!924) mapDefault!3410)) b!85704))

(declare-fun m!90253 () Bool)

(assert (=> mapNonEmpty!3410 m!90253))

(declare-fun b_lambda!3809 () Bool)

(assert (= b_lambda!3807 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3809)))

(declare-fun b_lambda!3811 () Bool)

(assert (= b_lambda!3803 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3811)))

(declare-fun b_lambda!3813 () Bool)

(assert (= b_lambda!3805 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3813)))

(check-sat (not d!22183) (not b!85456) (not d!22137) (not d!22151) (not bm!8069) (not bm!8130) (not bm!8139) (not bm!8140) (not b_lambda!3813) (not b!85646) (not b!85660) (not b!85481) (not bm!8131) (not b!85693) (not bm!8064) (not b!85651) (not bm!8065) (not b!85462) (not b!85673) (not d!22161) (not b!85614) (not b!85445) (not b!85657) (not b!85691) (not b!85446) (not b!85470) (not bm!8141) (not b!85612) (not b!85616) (not bm!8123) (not b_lambda!3811) (not mapNonEmpty!3409) (not b!85659) (not b_lambda!3801) (not b!85617) (not b!85569) (not b!85678) (not b!85650) (not bm!8122) (not b!85595) (not b!85656) (not b!85655) (not bm!8066) (not b!85591) b_and!5195 (not b_next!2239) (not b!85471) (not b_lambda!3809) (not b!85661) (not bm!8145) (not bm!8135) (not b!85645) b_and!5197 (not mapNonEmpty!3410) (not b!85463) (not d!22165) (not b!85458) (not d!22173) (not bm!8148) (not b!85460) tp_is_empty!2535 (not b!85583) (not bm!8134) (not bm!8119) (not b!85580) (not d!22157) (not b!85567) (not b!85451) (not b!85649) (not d!22175) (not d!22163) (not d!22141) (not b!85654) (not d!22143) (not bm!8128) (not b!85666) (not b!85618) (not b!85600) (not b!85479) (not b!85648) (not b_next!2237) (not b!85613) (not d!22179) (not d!22153) (not d!22135) (not b!85658) (not b!85619) (not b!85667) (not d!22155) (not d!22159) (not d!22149) (not d!22139) (not b!85694) (not bm!8124) (not b!85615) (not b!85472) (not d!22167))
(check-sat b_and!5195 b_and!5197 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun d!22185 () Bool)

(declare-fun e!55898 () Bool)

(assert (=> d!22185 e!55898))

(declare-fun res!44129 () Bool)

(assert (=> d!22185 (=> res!44129 e!55898)))

(declare-fun lt!40616 () Bool)

(assert (=> d!22185 (= res!44129 (not lt!40616))))

(declare-fun lt!40617 () Bool)

(assert (=> d!22185 (= lt!40616 lt!40617)))

(declare-fun lt!40619 () Unit!2517)

(declare-fun e!55897 () Unit!2517)

(assert (=> d!22185 (= lt!40619 e!55897)))

(declare-fun c!13915 () Bool)

(assert (=> d!22185 (= c!13915 lt!40617)))

(assert (=> d!22185 (= lt!40617 (containsKey!144 (toList!746 lt!40564) (_1!1110 lt!40318)))))

(assert (=> d!22185 (= (contains!753 lt!40564 (_1!1110 lt!40318)) lt!40616)))

(declare-fun b!85705 () Bool)

(declare-fun lt!40618 () Unit!2517)

(assert (=> b!85705 (= e!55897 lt!40618)))

(assert (=> b!85705 (= lt!40618 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40564) (_1!1110 lt!40318)))))

(assert (=> b!85705 (isDefined!93 (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318)))))

(declare-fun b!85706 () Bool)

(declare-fun Unit!2527 () Unit!2517)

(assert (=> b!85706 (= e!55897 Unit!2527)))

(declare-fun b!85707 () Bool)

(assert (=> b!85707 (= e!55898 (isDefined!93 (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318))))))

(assert (= (and d!22185 c!13915) b!85705))

(assert (= (and d!22185 (not c!13915)) b!85706))

(assert (= (and d!22185 (not res!44129)) b!85707))

(declare-fun m!90255 () Bool)

(assert (=> d!22185 m!90255))

(declare-fun m!90257 () Bool)

(assert (=> b!85705 m!90257))

(assert (=> b!85705 m!90139))

(assert (=> b!85705 m!90139))

(declare-fun m!90259 () Bool)

(assert (=> b!85705 m!90259))

(assert (=> b!85707 m!90139))

(assert (=> b!85707 m!90139))

(assert (=> b!85707 m!90259))

(assert (=> d!22153 d!22185))

(declare-fun b!85716 () Bool)

(declare-fun e!55903 () Option!146)

(assert (=> b!85716 (= e!55903 (Some!145 (_2!1110 (h!2106 lt!40563))))))

(declare-fun d!22187 () Bool)

(declare-fun c!13920 () Bool)

(assert (=> d!22187 (= c!13920 (and ((_ is Cons!1515) lt!40563) (= (_1!1110 (h!2106 lt!40563)) (_1!1110 lt!40318))))))

(assert (=> d!22187 (= (getValueByKey!140 lt!40563 (_1!1110 lt!40318)) e!55903)))

(declare-fun b!85719 () Bool)

(declare-fun e!55904 () Option!146)

(assert (=> b!85719 (= e!55904 None!144)))

(declare-fun b!85718 () Bool)

(assert (=> b!85718 (= e!55904 (getValueByKey!140 (t!5240 lt!40563) (_1!1110 lt!40318)))))

(declare-fun b!85717 () Bool)

(assert (=> b!85717 (= e!55903 e!55904)))

(declare-fun c!13921 () Bool)

(assert (=> b!85717 (= c!13921 (and ((_ is Cons!1515) lt!40563) (not (= (_1!1110 (h!2106 lt!40563)) (_1!1110 lt!40318)))))))

(assert (= (and d!22187 c!13920) b!85716))

(assert (= (and d!22187 (not c!13920)) b!85717))

(assert (= (and b!85717 c!13921) b!85718))

(assert (= (and b!85717 (not c!13921)) b!85719))

(declare-fun m!90261 () Bool)

(assert (=> b!85718 m!90261))

(assert (=> d!22153 d!22187))

(declare-fun d!22189 () Bool)

(assert (=> d!22189 (= (getValueByKey!140 lt!40563 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(declare-fun lt!40622 () Unit!2517)

(declare-fun choose!500 (List!1519 (_ BitVec 64) V!3027) Unit!2517)

(assert (=> d!22189 (= lt!40622 (choose!500 lt!40563 (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun e!55907 () Bool)

(assert (=> d!22189 e!55907))

(declare-fun res!44134 () Bool)

(assert (=> d!22189 (=> (not res!44134) (not e!55907))))

(declare-fun isStrictlySorted!298 (List!1519) Bool)

(assert (=> d!22189 (= res!44134 (isStrictlySorted!298 lt!40563))))

(assert (=> d!22189 (= (lemmaContainsTupThenGetReturnValue!57 lt!40563 (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!40622)))

(declare-fun b!85724 () Bool)

(declare-fun res!44135 () Bool)

(assert (=> b!85724 (=> (not res!44135) (not e!55907))))

(assert (=> b!85724 (= res!44135 (containsKey!144 lt!40563 (_1!1110 lt!40318)))))

(declare-fun b!85725 () Bool)

(assert (=> b!85725 (= e!55907 (contains!754 lt!40563 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22189 res!44134) b!85724))

(assert (= (and b!85724 res!44135) b!85725))

(assert (=> d!22189 m!90133))

(declare-fun m!90263 () Bool)

(assert (=> d!22189 m!90263))

(declare-fun m!90265 () Bool)

(assert (=> d!22189 m!90265))

(declare-fun m!90267 () Bool)

(assert (=> b!85724 m!90267))

(declare-fun m!90269 () Bool)

(assert (=> b!85725 m!90269))

(assert (=> d!22153 d!22189))

(declare-fun b!85746 () Bool)

(declare-fun e!55919 () List!1519)

(declare-fun call!8159 () List!1519)

(assert (=> b!85746 (= e!55919 call!8159)))

(declare-fun b!85747 () Bool)

(assert (=> b!85747 (= e!55919 call!8159)))

(declare-fun b!85748 () Bool)

(declare-fun res!44140 () Bool)

(declare-fun e!55920 () Bool)

(assert (=> b!85748 (=> (not res!44140) (not e!55920))))

(declare-fun lt!40625 () List!1519)

(assert (=> b!85748 (= res!44140 (containsKey!144 lt!40625 (_1!1110 lt!40318)))))

(declare-fun b!85749 () Bool)

(declare-fun e!55921 () List!1519)

(declare-fun e!55922 () List!1519)

(assert (=> b!85749 (= e!55921 e!55922)))

(declare-fun c!13931 () Bool)

(assert (=> b!85749 (= c!13931 (and ((_ is Cons!1515) (toList!746 lt!40331)) (= (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 lt!40318))))))

(declare-fun b!85750 () Bool)

(declare-fun call!8158 () List!1519)

(assert (=> b!85750 (= e!55921 call!8158)))

(declare-fun b!85751 () Bool)

(declare-fun c!13933 () Bool)

(assert (=> b!85751 (= c!13933 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 lt!40318))))))

(assert (=> b!85751 (= e!55922 e!55919)))

(declare-fun b!85752 () Bool)

(declare-fun e!55918 () List!1519)

(assert (=> b!85752 (= e!55918 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40331)) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun b!85753 () Bool)

(assert (=> b!85753 (= e!55918 (ite c!13931 (t!5240 (toList!746 lt!40331)) (ite c!13933 (Cons!1515 (h!2106 (toList!746 lt!40331)) (t!5240 (toList!746 lt!40331))) Nil!1516)))))

(declare-fun bm!8155 () Bool)

(declare-fun c!13930 () Bool)

(declare-fun $colon$colon!72 (List!1519 tuple2!2198) List!1519)

(assert (=> bm!8155 (= call!8158 ($colon$colon!72 e!55918 (ite c!13930 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))))))

(declare-fun c!13932 () Bool)

(assert (=> bm!8155 (= c!13932 c!13930)))

(declare-fun bm!8156 () Bool)

(declare-fun call!8160 () List!1519)

(assert (=> bm!8156 (= call!8160 call!8158)))

(declare-fun bm!8157 () Bool)

(assert (=> bm!8157 (= call!8159 call!8160)))

(declare-fun b!85755 () Bool)

(assert (=> b!85755 (= e!55922 call!8160)))

(declare-fun d!22191 () Bool)

(assert (=> d!22191 e!55920))

(declare-fun res!44141 () Bool)

(assert (=> d!22191 (=> (not res!44141) (not e!55920))))

(assert (=> d!22191 (= res!44141 (isStrictlySorted!298 lt!40625))))

(assert (=> d!22191 (= lt!40625 e!55921)))

(assert (=> d!22191 (= c!13930 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 lt!40318))))))

(assert (=> d!22191 (isStrictlySorted!298 (toList!746 lt!40331))))

(assert (=> d!22191 (= (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!40625)))

(declare-fun b!85754 () Bool)

(assert (=> b!85754 (= e!55920 (contains!754 lt!40625 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22191 c!13930) b!85750))

(assert (= (and d!22191 (not c!13930)) b!85749))

(assert (= (and b!85749 c!13931) b!85755))

(assert (= (and b!85749 (not c!13931)) b!85751))

(assert (= (and b!85751 c!13933) b!85746))

(assert (= (and b!85751 (not c!13933)) b!85747))

(assert (= (or b!85746 b!85747) bm!8157))

(assert (= (or b!85755 bm!8157) bm!8156))

(assert (= (or b!85750 bm!8156) bm!8155))

(assert (= (and bm!8155 c!13932) b!85752))

(assert (= (and bm!8155 (not c!13932)) b!85753))

(assert (= (and d!22191 res!44141) b!85748))

(assert (= (and b!85748 res!44140) b!85754))

(declare-fun m!90271 () Bool)

(assert (=> d!22191 m!90271))

(declare-fun m!90273 () Bool)

(assert (=> d!22191 m!90273))

(declare-fun m!90275 () Bool)

(assert (=> b!85748 m!90275))

(declare-fun m!90277 () Bool)

(assert (=> b!85752 m!90277))

(declare-fun m!90279 () Bool)

(assert (=> b!85754 m!90279))

(declare-fun m!90281 () Bool)

(assert (=> bm!8155 m!90281))

(assert (=> d!22153 d!22191))

(declare-fun d!22193 () Bool)

(declare-fun lt!40628 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!89 (List!1519) (InoxSet tuple2!2198))

(assert (=> d!22193 (= lt!40628 (select (content!89 (toList!746 lt!40604)) lt!40318))))

(declare-fun e!55927 () Bool)

(assert (=> d!22193 (= lt!40628 e!55927)))

(declare-fun res!44146 () Bool)

(assert (=> d!22193 (=> (not res!44146) (not e!55927))))

(assert (=> d!22193 (= res!44146 ((_ is Cons!1515) (toList!746 lt!40604)))))

(assert (=> d!22193 (= (contains!754 (toList!746 lt!40604) lt!40318) lt!40628)))

(declare-fun b!85760 () Bool)

(declare-fun e!55928 () Bool)

(assert (=> b!85760 (= e!55927 e!55928)))

(declare-fun res!44147 () Bool)

(assert (=> b!85760 (=> res!44147 e!55928)))

(assert (=> b!85760 (= res!44147 (= (h!2106 (toList!746 lt!40604)) lt!40318))))

(declare-fun b!85761 () Bool)

(assert (=> b!85761 (= e!55928 (contains!754 (t!5240 (toList!746 lt!40604)) lt!40318))))

(assert (= (and d!22193 res!44146) b!85760))

(assert (= (and b!85760 (not res!44147)) b!85761))

(declare-fun m!90283 () Bool)

(assert (=> d!22193 m!90283))

(declare-fun m!90285 () Bool)

(assert (=> d!22193 m!90285))

(declare-fun m!90287 () Bool)

(assert (=> b!85761 m!90287))

(assert (=> b!85661 d!22193))

(declare-fun d!22195 () Bool)

(declare-fun e!55930 () Bool)

(assert (=> d!22195 e!55930))

(declare-fun res!44148 () Bool)

(assert (=> d!22195 (=> res!44148 e!55930)))

(declare-fun lt!40629 () Bool)

(assert (=> d!22195 (= res!44148 (not lt!40629))))

(declare-fun lt!40630 () Bool)

(assert (=> d!22195 (= lt!40629 lt!40630)))

(declare-fun lt!40632 () Unit!2517)

(declare-fun e!55929 () Unit!2517)

(assert (=> d!22195 (= lt!40632 e!55929)))

(declare-fun c!13934 () Bool)

(assert (=> d!22195 (= c!13934 lt!40630)))

(assert (=> d!22195 (= lt!40630 (containsKey!144 (toList!746 lt!40560) (_1!1110 lt!40324)))))

(assert (=> d!22195 (= (contains!753 lt!40560 (_1!1110 lt!40324)) lt!40629)))

(declare-fun b!85762 () Bool)

(declare-fun lt!40631 () Unit!2517)

(assert (=> b!85762 (= e!55929 lt!40631)))

(assert (=> b!85762 (= lt!40631 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40560) (_1!1110 lt!40324)))))

(assert (=> b!85762 (isDefined!93 (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324)))))

(declare-fun b!85763 () Bool)

(declare-fun Unit!2528 () Unit!2517)

(assert (=> b!85763 (= e!55929 Unit!2528)))

(declare-fun b!85764 () Bool)

(assert (=> b!85764 (= e!55930 (isDefined!93 (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324))))))

(assert (= (and d!22195 c!13934) b!85762))

(assert (= (and d!22195 (not c!13934)) b!85763))

(assert (= (and d!22195 (not res!44148)) b!85764))

(declare-fun m!90289 () Bool)

(assert (=> d!22195 m!90289))

(declare-fun m!90291 () Bool)

(assert (=> b!85762 m!90291))

(assert (=> b!85762 m!90127))

(assert (=> b!85762 m!90127))

(declare-fun m!90293 () Bool)

(assert (=> b!85762 m!90293))

(assert (=> b!85764 m!90127))

(assert (=> b!85764 m!90127))

(assert (=> b!85764 m!90293))

(assert (=> d!22151 d!22195))

(declare-fun b!85765 () Bool)

(declare-fun e!55931 () Option!146)

(assert (=> b!85765 (= e!55931 (Some!145 (_2!1110 (h!2106 lt!40559))))))

(declare-fun d!22197 () Bool)

(declare-fun c!13935 () Bool)

(assert (=> d!22197 (= c!13935 (and ((_ is Cons!1515) lt!40559) (= (_1!1110 (h!2106 lt!40559)) (_1!1110 lt!40324))))))

(assert (=> d!22197 (= (getValueByKey!140 lt!40559 (_1!1110 lt!40324)) e!55931)))

(declare-fun b!85768 () Bool)

(declare-fun e!55932 () Option!146)

(assert (=> b!85768 (= e!55932 None!144)))

(declare-fun b!85767 () Bool)

(assert (=> b!85767 (= e!55932 (getValueByKey!140 (t!5240 lt!40559) (_1!1110 lt!40324)))))

(declare-fun b!85766 () Bool)

(assert (=> b!85766 (= e!55931 e!55932)))

(declare-fun c!13936 () Bool)

(assert (=> b!85766 (= c!13936 (and ((_ is Cons!1515) lt!40559) (not (= (_1!1110 (h!2106 lt!40559)) (_1!1110 lt!40324)))))))

(assert (= (and d!22197 c!13935) b!85765))

(assert (= (and d!22197 (not c!13935)) b!85766))

(assert (= (and b!85766 c!13936) b!85767))

(assert (= (and b!85766 (not c!13936)) b!85768))

(declare-fun m!90295 () Bool)

(assert (=> b!85767 m!90295))

(assert (=> d!22151 d!22197))

(declare-fun d!22199 () Bool)

(assert (=> d!22199 (= (getValueByKey!140 lt!40559 (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324)))))

(declare-fun lt!40633 () Unit!2517)

(assert (=> d!22199 (= lt!40633 (choose!500 lt!40559 (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(declare-fun e!55933 () Bool)

(assert (=> d!22199 e!55933))

(declare-fun res!44149 () Bool)

(assert (=> d!22199 (=> (not res!44149) (not e!55933))))

(assert (=> d!22199 (= res!44149 (isStrictlySorted!298 lt!40559))))

(assert (=> d!22199 (= (lemmaContainsTupThenGetReturnValue!57 lt!40559 (_1!1110 lt!40324) (_2!1110 lt!40324)) lt!40633)))

(declare-fun b!85769 () Bool)

(declare-fun res!44150 () Bool)

(assert (=> b!85769 (=> (not res!44150) (not e!55933))))

(assert (=> b!85769 (= res!44150 (containsKey!144 lt!40559 (_1!1110 lt!40324)))))

(declare-fun b!85770 () Bool)

(assert (=> b!85770 (= e!55933 (contains!754 lt!40559 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!22199 res!44149) b!85769))

(assert (= (and b!85769 res!44150) b!85770))

(assert (=> d!22199 m!90121))

(declare-fun m!90297 () Bool)

(assert (=> d!22199 m!90297))

(declare-fun m!90299 () Bool)

(assert (=> d!22199 m!90299))

(declare-fun m!90301 () Bool)

(assert (=> b!85769 m!90301))

(declare-fun m!90303 () Bool)

(assert (=> b!85770 m!90303))

(assert (=> d!22151 d!22199))

(declare-fun b!85771 () Bool)

(declare-fun e!55935 () List!1519)

(declare-fun call!8162 () List!1519)

(assert (=> b!85771 (= e!55935 call!8162)))

(declare-fun b!85772 () Bool)

(assert (=> b!85772 (= e!55935 call!8162)))

(declare-fun b!85773 () Bool)

(declare-fun res!44151 () Bool)

(declare-fun e!55936 () Bool)

(assert (=> b!85773 (=> (not res!44151) (not e!55936))))

(declare-fun lt!40634 () List!1519)

(assert (=> b!85773 (= res!44151 (containsKey!144 lt!40634 (_1!1110 lt!40324)))))

(declare-fun b!85774 () Bool)

(declare-fun e!55937 () List!1519)

(declare-fun e!55938 () List!1519)

(assert (=> b!85774 (= e!55937 e!55938)))

(declare-fun c!13938 () Bool)

(assert (=> b!85774 (= c!13938 (and ((_ is Cons!1515) (toList!746 lt!40316)) (= (_1!1110 (h!2106 (toList!746 lt!40316))) (_1!1110 lt!40324))))))

(declare-fun b!85775 () Bool)

(declare-fun call!8161 () List!1519)

(assert (=> b!85775 (= e!55937 call!8161)))

(declare-fun b!85776 () Bool)

(declare-fun c!13940 () Bool)

(assert (=> b!85776 (= c!13940 (and ((_ is Cons!1515) (toList!746 lt!40316)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40316))) (_1!1110 lt!40324))))))

(assert (=> b!85776 (= e!55938 e!55935)))

(declare-fun b!85777 () Bool)

(declare-fun e!55934 () List!1519)

(assert (=> b!85777 (= e!55934 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40316)) (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(declare-fun b!85778 () Bool)

(assert (=> b!85778 (= e!55934 (ite c!13938 (t!5240 (toList!746 lt!40316)) (ite c!13940 (Cons!1515 (h!2106 (toList!746 lt!40316)) (t!5240 (toList!746 lt!40316))) Nil!1516)))))

(declare-fun bm!8158 () Bool)

(declare-fun c!13937 () Bool)

(assert (=> bm!8158 (= call!8161 ($colon$colon!72 e!55934 (ite c!13937 (h!2106 (toList!746 lt!40316)) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324)))))))

(declare-fun c!13939 () Bool)

(assert (=> bm!8158 (= c!13939 c!13937)))

(declare-fun bm!8159 () Bool)

(declare-fun call!8163 () List!1519)

(assert (=> bm!8159 (= call!8163 call!8161)))

(declare-fun bm!8160 () Bool)

(assert (=> bm!8160 (= call!8162 call!8163)))

(declare-fun b!85780 () Bool)

(assert (=> b!85780 (= e!55938 call!8163)))

(declare-fun d!22201 () Bool)

(assert (=> d!22201 e!55936))

(declare-fun res!44152 () Bool)

(assert (=> d!22201 (=> (not res!44152) (not e!55936))))

(assert (=> d!22201 (= res!44152 (isStrictlySorted!298 lt!40634))))

(assert (=> d!22201 (= lt!40634 e!55937)))

(assert (=> d!22201 (= c!13937 (and ((_ is Cons!1515) (toList!746 lt!40316)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40316))) (_1!1110 lt!40324))))))

(assert (=> d!22201 (isStrictlySorted!298 (toList!746 lt!40316))))

(assert (=> d!22201 (= (insertStrictlySorted!60 (toList!746 lt!40316) (_1!1110 lt!40324) (_2!1110 lt!40324)) lt!40634)))

(declare-fun b!85779 () Bool)

(assert (=> b!85779 (= e!55936 (contains!754 lt!40634 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!22201 c!13937) b!85775))

(assert (= (and d!22201 (not c!13937)) b!85774))

(assert (= (and b!85774 c!13938) b!85780))

(assert (= (and b!85774 (not c!13938)) b!85776))

(assert (= (and b!85776 c!13940) b!85771))

(assert (= (and b!85776 (not c!13940)) b!85772))

(assert (= (or b!85771 b!85772) bm!8160))

(assert (= (or b!85780 bm!8160) bm!8159))

(assert (= (or b!85775 bm!8159) bm!8158))

(assert (= (and bm!8158 c!13939) b!85777))

(assert (= (and bm!8158 (not c!13939)) b!85778))

(assert (= (and d!22201 res!44152) b!85773))

(assert (= (and b!85773 res!44151) b!85779))

(declare-fun m!90305 () Bool)

(assert (=> d!22201 m!90305))

(declare-fun m!90307 () Bool)

(assert (=> d!22201 m!90307))

(declare-fun m!90309 () Bool)

(assert (=> b!85773 m!90309))

(declare-fun m!90311 () Bool)

(assert (=> b!85777 m!90311))

(declare-fun m!90313 () Bool)

(assert (=> b!85779 m!90313))

(declare-fun m!90315 () Bool)

(assert (=> bm!8158 m!90315))

(assert (=> d!22151 d!22201))

(declare-fun d!22203 () Bool)

(declare-fun res!44153 () Bool)

(declare-fun e!55939 () Bool)

(assert (=> d!22203 (=> res!44153 e!55939)))

(assert (=> d!22203 (= res!44153 (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22203 (= (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!55939)))

(declare-fun b!85781 () Bool)

(declare-fun e!55940 () Bool)

(assert (=> b!85781 (= e!55939 e!55940)))

(declare-fun res!44154 () Bool)

(assert (=> b!85781 (=> (not res!44154) (not e!55940))))

(assert (=> b!85781 (= res!44154 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85782 () Bool)

(assert (=> b!85782 (= e!55940 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22203 (not res!44153)) b!85781))

(assert (= (and b!85781 res!44154) b!85782))

(declare-fun m!90317 () Bool)

(assert (=> d!22203 m!90317))

(assert (=> b!85782 m!89857))

(declare-fun m!90319 () Bool)

(assert (=> b!85782 m!90319))

(assert (=> b!85673 d!22203))

(declare-fun d!22205 () Bool)

(declare-fun lt!40635 () Bool)

(assert (=> d!22205 (= lt!40635 (select (content!89 (toList!746 lt!40600)) lt!40318))))

(declare-fun e!55941 () Bool)

(assert (=> d!22205 (= lt!40635 e!55941)))

(declare-fun res!44155 () Bool)

(assert (=> d!22205 (=> (not res!44155) (not e!55941))))

(assert (=> d!22205 (= res!44155 ((_ is Cons!1515) (toList!746 lt!40600)))))

(assert (=> d!22205 (= (contains!754 (toList!746 lt!40600) lt!40318) lt!40635)))

(declare-fun b!85783 () Bool)

(declare-fun e!55942 () Bool)

(assert (=> b!85783 (= e!55941 e!55942)))

(declare-fun res!44156 () Bool)

(assert (=> b!85783 (=> res!44156 e!55942)))

(assert (=> b!85783 (= res!44156 (= (h!2106 (toList!746 lt!40600)) lt!40318))))

(declare-fun b!85784 () Bool)

(assert (=> b!85784 (= e!55942 (contains!754 (t!5240 (toList!746 lt!40600)) lt!40318))))

(assert (= (and d!22205 res!44155) b!85783))

(assert (= (and b!85783 (not res!44156)) b!85784))

(declare-fun m!90321 () Bool)

(assert (=> d!22205 m!90321))

(declare-fun m!90323 () Bool)

(assert (=> d!22205 m!90323))

(declare-fun m!90325 () Bool)

(assert (=> b!85784 m!90325))

(assert (=> b!85659 d!22205))

(declare-fun d!22207 () Bool)

(declare-fun get!1198 (Option!146) V!3027)

(assert (=> d!22207 (= (apply!82 lt!40450 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1198 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3623 () Bool)

(assert (= bs!3623 d!22207))

(assert (=> bs!3623 m!89983))

(declare-fun m!90327 () Bool)

(assert (=> bs!3623 m!90327))

(assert (=> bs!3623 m!90327))

(declare-fun m!90329 () Bool)

(assert (=> bs!3623 m!90329))

(assert (=> b!85458 d!22207))

(declare-fun d!22209 () Bool)

(declare-fun c!13941 () Bool)

(assert (=> d!22209 (= c!13941 ((_ is ValueCellFull!924) (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55943 () V!3027)

(assert (=> d!22209 (= (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55943)))

(declare-fun b!85785 () Bool)

(assert (=> b!85785 (= e!55943 (get!1196 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85786 () Bool)

(assert (=> b!85786 (= e!55943 (get!1197 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22209 c!13941) b!85785))

(assert (= (and d!22209 (not c!13941)) b!85786))

(assert (=> b!85785 m!89993))

(assert (=> b!85785 m!89861))

(declare-fun m!90331 () Bool)

(assert (=> b!85785 m!90331))

(assert (=> b!85786 m!89993))

(assert (=> b!85786 m!89861))

(declare-fun m!90333 () Bool)

(assert (=> b!85786 m!90333))

(assert (=> b!85458 d!22209))

(declare-fun d!22211 () Bool)

(declare-fun e!55946 () Bool)

(assert (=> d!22211 e!55946))

(declare-fun c!13944 () Bool)

(assert (=> d!22211 (= c!13944 (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!22211 true))

(declare-fun _$29!108 () Unit!2517)

(assert (=> d!22211 (= (choose!499 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) _$29!108)))

(declare-fun b!85791 () Bool)

(assert (=> b!85791 (= e!55946 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85792 () Bool)

(assert (=> b!85792 (= e!55946 (ite (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22211 c!13944) b!85791))

(assert (= (and d!22211 (not c!13944)) b!85792))

(assert (=> b!85791 m!89857))

(assert (=> b!85791 m!89885))

(assert (=> d!22179 d!22211))

(assert (=> d!22179 d!22169))

(declare-fun d!22213 () Bool)

(assert (=> d!22213 (= (inRange!0 (ite c!13882 (ite c!13880 (index!3110 lt!40542) (ite c!13888 (index!3109 lt!40525) (index!3112 lt!40525))) (ite c!13890 (index!3110 lt!40527) (ite c!13891 (index!3109 lt!40524) (index!3112 lt!40524)))) (mask!6366 newMap!16)) (and (bvsge (ite c!13882 (ite c!13880 (index!3110 lt!40542) (ite c!13888 (index!3109 lt!40525) (index!3112 lt!40525))) (ite c!13890 (index!3110 lt!40527) (ite c!13891 (index!3109 lt!40524) (index!3112 lt!40524)))) #b00000000000000000000000000000000) (bvslt (ite c!13882 (ite c!13880 (index!3110 lt!40542) (ite c!13888 (index!3109 lt!40525) (index!3112 lt!40525))) (ite c!13890 (index!3110 lt!40527) (ite c!13891 (index!3109 lt!40524) (index!3112 lt!40524)))) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8128 d!22213))

(declare-fun d!22215 () Bool)

(declare-fun e!55948 () Bool)

(assert (=> d!22215 e!55948))

(declare-fun res!44157 () Bool)

(assert (=> d!22215 (=> res!44157 e!55948)))

(declare-fun lt!40636 () Bool)

(assert (=> d!22215 (= res!44157 (not lt!40636))))

(declare-fun lt!40637 () Bool)

(assert (=> d!22215 (= lt!40636 lt!40637)))

(declare-fun lt!40639 () Unit!2517)

(declare-fun e!55947 () Unit!2517)

(assert (=> d!22215 (= lt!40639 e!55947)))

(declare-fun c!13945 () Bool)

(assert (=> d!22215 (= c!13945 lt!40637)))

(assert (=> d!22215 (= lt!40637 (containsKey!144 (toList!746 lt!40568) (_1!1110 lt!40324)))))

(assert (=> d!22215 (= (contains!753 lt!40568 (_1!1110 lt!40324)) lt!40636)))

(declare-fun b!85793 () Bool)

(declare-fun lt!40638 () Unit!2517)

(assert (=> b!85793 (= e!55947 lt!40638)))

(assert (=> b!85793 (= lt!40638 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40568) (_1!1110 lt!40324)))))

(assert (=> b!85793 (isDefined!93 (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324)))))

(declare-fun b!85794 () Bool)

(declare-fun Unit!2529 () Unit!2517)

(assert (=> b!85794 (= e!55947 Unit!2529)))

(declare-fun b!85795 () Bool)

(assert (=> b!85795 (= e!55948 (isDefined!93 (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324))))))

(assert (= (and d!22215 c!13945) b!85793))

(assert (= (and d!22215 (not c!13945)) b!85794))

(assert (= (and d!22215 (not res!44157)) b!85795))

(declare-fun m!90335 () Bool)

(assert (=> d!22215 m!90335))

(declare-fun m!90337 () Bool)

(assert (=> b!85793 m!90337))

(assert (=> b!85793 m!90151))

(assert (=> b!85793 m!90151))

(declare-fun m!90339 () Bool)

(assert (=> b!85793 m!90339))

(assert (=> b!85795 m!90151))

(assert (=> b!85795 m!90151))

(assert (=> b!85795 m!90339))

(assert (=> d!22155 d!22215))

(declare-fun b!85796 () Bool)

(declare-fun e!55949 () Option!146)

(assert (=> b!85796 (= e!55949 (Some!145 (_2!1110 (h!2106 lt!40567))))))

(declare-fun d!22217 () Bool)

(declare-fun c!13946 () Bool)

(assert (=> d!22217 (= c!13946 (and ((_ is Cons!1515) lt!40567) (= (_1!1110 (h!2106 lt!40567)) (_1!1110 lt!40324))))))

(assert (=> d!22217 (= (getValueByKey!140 lt!40567 (_1!1110 lt!40324)) e!55949)))

(declare-fun b!85799 () Bool)

(declare-fun e!55950 () Option!146)

(assert (=> b!85799 (= e!55950 None!144)))

(declare-fun b!85798 () Bool)

(assert (=> b!85798 (= e!55950 (getValueByKey!140 (t!5240 lt!40567) (_1!1110 lt!40324)))))

(declare-fun b!85797 () Bool)

(assert (=> b!85797 (= e!55949 e!55950)))

(declare-fun c!13947 () Bool)

(assert (=> b!85797 (= c!13947 (and ((_ is Cons!1515) lt!40567) (not (= (_1!1110 (h!2106 lt!40567)) (_1!1110 lt!40324)))))))

(assert (= (and d!22217 c!13946) b!85796))

(assert (= (and d!22217 (not c!13946)) b!85797))

(assert (= (and b!85797 c!13947) b!85798))

(assert (= (and b!85797 (not c!13947)) b!85799))

(declare-fun m!90341 () Bool)

(assert (=> b!85798 m!90341))

(assert (=> d!22155 d!22217))

(declare-fun d!22219 () Bool)

(assert (=> d!22219 (= (getValueByKey!140 lt!40567 (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324)))))

(declare-fun lt!40640 () Unit!2517)

(assert (=> d!22219 (= lt!40640 (choose!500 lt!40567 (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(declare-fun e!55951 () Bool)

(assert (=> d!22219 e!55951))

(declare-fun res!44158 () Bool)

(assert (=> d!22219 (=> (not res!44158) (not e!55951))))

(assert (=> d!22219 (= res!44158 (isStrictlySorted!298 lt!40567))))

(assert (=> d!22219 (= (lemmaContainsTupThenGetReturnValue!57 lt!40567 (_1!1110 lt!40324) (_2!1110 lt!40324)) lt!40640)))

(declare-fun b!85800 () Bool)

(declare-fun res!44159 () Bool)

(assert (=> b!85800 (=> (not res!44159) (not e!55951))))

(assert (=> b!85800 (= res!44159 (containsKey!144 lt!40567 (_1!1110 lt!40324)))))

(declare-fun b!85801 () Bool)

(assert (=> b!85801 (= e!55951 (contains!754 lt!40567 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!22219 res!44158) b!85800))

(assert (= (and b!85800 res!44159) b!85801))

(assert (=> d!22219 m!90145))

(declare-fun m!90343 () Bool)

(assert (=> d!22219 m!90343))

(declare-fun m!90345 () Bool)

(assert (=> d!22219 m!90345))

(declare-fun m!90347 () Bool)

(assert (=> b!85800 m!90347))

(declare-fun m!90349 () Bool)

(assert (=> b!85801 m!90349))

(assert (=> d!22155 d!22219))

(declare-fun b!85802 () Bool)

(declare-fun e!55953 () List!1519)

(declare-fun call!8165 () List!1519)

(assert (=> b!85802 (= e!55953 call!8165)))

(declare-fun b!85803 () Bool)

(assert (=> b!85803 (= e!55953 call!8165)))

(declare-fun b!85804 () Bool)

(declare-fun res!44160 () Bool)

(declare-fun e!55954 () Bool)

(assert (=> b!85804 (=> (not res!44160) (not e!55954))))

(declare-fun lt!40641 () List!1519)

(assert (=> b!85804 (= res!44160 (containsKey!144 lt!40641 (_1!1110 lt!40324)))))

(declare-fun b!85805 () Bool)

(declare-fun e!55955 () List!1519)

(declare-fun e!55956 () List!1519)

(assert (=> b!85805 (= e!55955 e!55956)))

(declare-fun c!13949 () Bool)

(assert (=> b!85805 (= c!13949 (and ((_ is Cons!1515) (toList!746 lt!40325)) (= (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 lt!40324))))))

(declare-fun b!85806 () Bool)

(declare-fun call!8164 () List!1519)

(assert (=> b!85806 (= e!55955 call!8164)))

(declare-fun b!85807 () Bool)

(declare-fun c!13951 () Bool)

(assert (=> b!85807 (= c!13951 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 lt!40324))))))

(assert (=> b!85807 (= e!55956 e!55953)))

(declare-fun b!85808 () Bool)

(declare-fun e!55952 () List!1519)

(assert (=> b!85808 (= e!55952 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40325)) (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(declare-fun b!85809 () Bool)

(assert (=> b!85809 (= e!55952 (ite c!13949 (t!5240 (toList!746 lt!40325)) (ite c!13951 (Cons!1515 (h!2106 (toList!746 lt!40325)) (t!5240 (toList!746 lt!40325))) Nil!1516)))))

(declare-fun c!13948 () Bool)

(declare-fun bm!8161 () Bool)

(assert (=> bm!8161 (= call!8164 ($colon$colon!72 e!55952 (ite c!13948 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324)))))))

(declare-fun c!13950 () Bool)

(assert (=> bm!8161 (= c!13950 c!13948)))

(declare-fun bm!8162 () Bool)

(declare-fun call!8166 () List!1519)

(assert (=> bm!8162 (= call!8166 call!8164)))

(declare-fun bm!8163 () Bool)

(assert (=> bm!8163 (= call!8165 call!8166)))

(declare-fun b!85811 () Bool)

(assert (=> b!85811 (= e!55956 call!8166)))

(declare-fun d!22221 () Bool)

(assert (=> d!22221 e!55954))

(declare-fun res!44161 () Bool)

(assert (=> d!22221 (=> (not res!44161) (not e!55954))))

(assert (=> d!22221 (= res!44161 (isStrictlySorted!298 lt!40641))))

(assert (=> d!22221 (= lt!40641 e!55955)))

(assert (=> d!22221 (= c!13948 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 lt!40324))))))

(assert (=> d!22221 (isStrictlySorted!298 (toList!746 lt!40325))))

(assert (=> d!22221 (= (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 lt!40324) (_2!1110 lt!40324)) lt!40641)))

(declare-fun b!85810 () Bool)

(assert (=> b!85810 (= e!55954 (contains!754 lt!40641 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!22221 c!13948) b!85806))

(assert (= (and d!22221 (not c!13948)) b!85805))

(assert (= (and b!85805 c!13949) b!85811))

(assert (= (and b!85805 (not c!13949)) b!85807))

(assert (= (and b!85807 c!13951) b!85802))

(assert (= (and b!85807 (not c!13951)) b!85803))

(assert (= (or b!85802 b!85803) bm!8163))

(assert (= (or b!85811 bm!8163) bm!8162))

(assert (= (or b!85806 bm!8162) bm!8161))

(assert (= (and bm!8161 c!13950) b!85808))

(assert (= (and bm!8161 (not c!13950)) b!85809))

(assert (= (and d!22221 res!44161) b!85804))

(assert (= (and b!85804 res!44160) b!85810))

(declare-fun m!90351 () Bool)

(assert (=> d!22221 m!90351))

(declare-fun m!90353 () Bool)

(assert (=> d!22221 m!90353))

(declare-fun m!90355 () Bool)

(assert (=> b!85804 m!90355))

(declare-fun m!90357 () Bool)

(assert (=> b!85808 m!90357))

(declare-fun m!90359 () Bool)

(assert (=> b!85810 m!90359))

(declare-fun m!90361 () Bool)

(assert (=> bm!8161 m!90361))

(assert (=> d!22155 d!22221))

(declare-fun c!13956 () Bool)

(declare-fun b!85812 () Bool)

(assert (=> b!85812 (= c!13956 (and (not (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55966 () ListLongMap!1461)

(declare-fun e!55967 () ListLongMap!1461)

(assert (=> b!85812 (= e!55966 e!55967)))

(declare-fun b!85813 () Bool)

(declare-fun res!44164 () Bool)

(declare-fun e!55959 () Bool)

(assert (=> b!85813 (=> (not res!44164) (not e!55959))))

(declare-fun e!55964 () Bool)

(assert (=> b!85813 (= res!44164 e!55964)))

(declare-fun res!44162 () Bool)

(assert (=> b!85813 (=> res!44162 e!55964)))

(declare-fun e!55958 () Bool)

(assert (=> b!85813 (= res!44162 (not e!55958))))

(declare-fun res!44165 () Bool)

(assert (=> b!85813 (=> (not res!44165) (not e!55958))))

(assert (=> b!85813 (= res!44165 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun bm!8164 () Bool)

(declare-fun call!8171 () ListLongMap!1461)

(assert (=> bm!8164 (= call!8171 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!85814 () Bool)

(declare-fun lt!40661 () ListLongMap!1461)

(declare-fun e!55969 () Bool)

(assert (=> b!85814 (= e!55969 (= (apply!82 lt!40661 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))

(declare-fun b!85815 () Bool)

(declare-fun e!55962 () Bool)

(assert (=> b!85815 (= e!55964 e!55962)))

(declare-fun res!44166 () Bool)

(assert (=> b!85815 (=> (not res!44166) (not e!55962))))

(assert (=> b!85815 (= res!44166 (contains!753 lt!40661 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85815 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!85816 () Bool)

(declare-fun e!55968 () Bool)

(assert (=> b!85816 (= e!55959 e!55968)))

(declare-fun c!13953 () Bool)

(assert (=> b!85816 (= c!13953 (not (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85817 () Bool)

(declare-fun e!55957 () Bool)

(assert (=> b!85817 (= e!55968 e!55957)))

(declare-fun res!44167 () Bool)

(declare-fun call!8170 () Bool)

(assert (=> b!85817 (= res!44167 call!8170)))

(assert (=> b!85817 (=> (not res!44167) (not e!55957))))

(declare-fun c!13955 () Bool)

(declare-fun call!8167 () ListLongMap!1461)

(declare-fun bm!8165 () Bool)

(declare-fun call!8173 () ListLongMap!1461)

(declare-fun c!13957 () Bool)

(declare-fun call!8168 () ListLongMap!1461)

(assert (=> bm!8165 (= call!8167 (+!110 (ite c!13957 call!8171 (ite c!13955 call!8173 call!8168)) (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(declare-fun b!85818 () Bool)

(declare-fun call!8172 () ListLongMap!1461)

(assert (=> b!85818 (= e!55967 call!8172)))

(declare-fun b!85819 () Bool)

(declare-fun e!55965 () Bool)

(declare-fun call!8169 () Bool)

(assert (=> b!85819 (= e!55965 (not call!8169))))

(declare-fun b!85820 () Bool)

(declare-fun e!55963 () Bool)

(assert (=> b!85820 (= e!55963 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85821 () Bool)

(declare-fun res!44170 () Bool)

(assert (=> b!85821 (=> (not res!44170) (not e!55959))))

(assert (=> b!85821 (= res!44170 e!55965)))

(declare-fun c!13952 () Bool)

(assert (=> b!85821 (= c!13952 (not (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!85822 () Bool)

(assert (=> b!85822 (= e!55968 (not call!8170))))

(declare-fun b!85823 () Bool)

(assert (=> b!85823 (= e!55967 call!8168)))

(declare-fun b!85824 () Bool)

(assert (=> b!85824 (= e!55965 e!55969)))

(declare-fun res!44168 () Bool)

(assert (=> b!85824 (= res!44168 call!8169)))

(assert (=> b!85824 (=> (not res!44168) (not e!55969))))

(declare-fun e!55961 () ListLongMap!1461)

(declare-fun b!85825 () Bool)

(assert (=> b!85825 (= e!55961 (+!110 call!8167 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))

(declare-fun d!22223 () Bool)

(assert (=> d!22223 e!55959))

(declare-fun res!44163 () Bool)

(assert (=> d!22223 (=> (not res!44163) (not e!55959))))

(assert (=> d!22223 (= res!44163 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!40643 () ListLongMap!1461)

(assert (=> d!22223 (= lt!40661 lt!40643)))

(declare-fun lt!40653 () Unit!2517)

(declare-fun e!55960 () Unit!2517)

(assert (=> d!22223 (= lt!40653 e!55960)))

(declare-fun c!13954 () Bool)

(assert (=> d!22223 (= c!13954 e!55963)))

(declare-fun res!44169 () Bool)

(assert (=> d!22223 (=> (not res!44169) (not e!55963))))

(assert (=> d!22223 (= res!44169 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22223 (= lt!40643 e!55961)))

(assert (=> d!22223 (= c!13957 (and (not (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22223 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22223 (= (getCurrentListMap!439 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40661)))

(declare-fun b!85826 () Bool)

(assert (=> b!85826 (= e!55966 call!8172)))

(declare-fun b!85827 () Bool)

(assert (=> b!85827 (= e!55962 (= (apply!82 lt!40661 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85827 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (ite c!13892 (_values!2321 newMap!16) lt!40533))))))

(assert (=> b!85827 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!85828 () Bool)

(assert (=> b!85828 (= e!55961 e!55966)))

(assert (=> b!85828 (= c!13955 (and (not (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85829 () Bool)

(assert (=> b!85829 (= e!55958 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8166 () Bool)

(assert (=> bm!8166 (= call!8169 (contains!753 lt!40661 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8167 () Bool)

(assert (=> bm!8167 (= call!8172 call!8167)))

(declare-fun b!85830 () Bool)

(declare-fun Unit!2530 () Unit!2517)

(assert (=> b!85830 (= e!55960 Unit!2530)))

(declare-fun bm!8168 () Bool)

(assert (=> bm!8168 (= call!8168 call!8173)))

(declare-fun bm!8169 () Bool)

(assert (=> bm!8169 (= call!8170 (contains!753 lt!40661 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8170 () Bool)

(assert (=> bm!8170 (= call!8173 call!8171)))

(declare-fun b!85831 () Bool)

(assert (=> b!85831 (= e!55957 (= (apply!82 lt!40661 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))

(declare-fun b!85832 () Bool)

(declare-fun lt!40646 () Unit!2517)

(assert (=> b!85832 (= e!55960 lt!40646)))

(declare-fun lt!40648 () ListLongMap!1461)

(assert (=> b!85832 (= lt!40648 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40657 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40657 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40655 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40655 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40647 () Unit!2517)

(assert (=> b!85832 (= lt!40647 (addStillContains!58 lt!40648 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) lt!40655))))

(assert (=> b!85832 (contains!753 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!40655)))

(declare-fun lt!40654 () Unit!2517)

(assert (=> b!85832 (= lt!40654 lt!40647)))

(declare-fun lt!40660 () ListLongMap!1461)

(assert (=> b!85832 (= lt!40660 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40659 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40659 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40658 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40658 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40663 () Unit!2517)

(assert (=> b!85832 (= lt!40663 (addApplyDifferent!58 lt!40660 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) lt!40658))))

(assert (=> b!85832 (= (apply!82 (+!110 lt!40660 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!40658) (apply!82 lt!40660 lt!40658))))

(declare-fun lt!40644 () Unit!2517)

(assert (=> b!85832 (= lt!40644 lt!40663)))

(declare-fun lt!40652 () ListLongMap!1461)

(assert (=> b!85832 (= lt!40652 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40642 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40642 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40650 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40650 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40645 () Unit!2517)

(assert (=> b!85832 (= lt!40645 (addApplyDifferent!58 lt!40652 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) lt!40650))))

(assert (=> b!85832 (= (apply!82 (+!110 lt!40652 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!40650) (apply!82 lt!40652 lt!40650))))

(declare-fun lt!40649 () Unit!2517)

(assert (=> b!85832 (= lt!40649 lt!40645)))

(declare-fun lt!40662 () ListLongMap!1461)

(assert (=> b!85832 (= lt!40662 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40656 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40656 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40651 () (_ BitVec 64))

(assert (=> b!85832 (= lt!40651 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85832 (= lt!40646 (addApplyDifferent!58 lt!40662 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) lt!40651))))

(assert (=> b!85832 (= (apply!82 (+!110 lt!40662 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!40651) (apply!82 lt!40662 lt!40651))))

(assert (= (and d!22223 c!13957) b!85825))

(assert (= (and d!22223 (not c!13957)) b!85828))

(assert (= (and b!85828 c!13955) b!85826))

(assert (= (and b!85828 (not c!13955)) b!85812))

(assert (= (and b!85812 c!13956) b!85818))

(assert (= (and b!85812 (not c!13956)) b!85823))

(assert (= (or b!85818 b!85823) bm!8168))

(assert (= (or b!85826 bm!8168) bm!8170))

(assert (= (or b!85826 b!85818) bm!8167))

(assert (= (or b!85825 bm!8170) bm!8164))

(assert (= (or b!85825 bm!8167) bm!8165))

(assert (= (and d!22223 res!44169) b!85820))

(assert (= (and d!22223 c!13954) b!85832))

(assert (= (and d!22223 (not c!13954)) b!85830))

(assert (= (and d!22223 res!44163) b!85813))

(assert (= (and b!85813 res!44165) b!85829))

(assert (= (and b!85813 (not res!44162)) b!85815))

(assert (= (and b!85815 res!44166) b!85827))

(assert (= (and b!85813 res!44164) b!85821))

(assert (= (and b!85821 c!13952) b!85824))

(assert (= (and b!85821 (not c!13952)) b!85819))

(assert (= (and b!85824 res!44168) b!85814))

(assert (= (or b!85824 b!85819) bm!8166))

(assert (= (and b!85821 res!44170) b!85816))

(assert (= (and b!85816 c!13953) b!85817))

(assert (= (and b!85816 (not c!13953)) b!85822))

(assert (= (and b!85817 res!44167) b!85831))

(assert (= (or b!85817 b!85822) bm!8169))

(declare-fun b_lambda!3815 () Bool)

(assert (=> (not b_lambda!3815) (not b!85827)))

(declare-fun t!5248 () Bool)

(declare-fun tb!1697 () Bool)

(assert (=> (and b!85334 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16)) t!5248) tb!1697))

(declare-fun result!2927 () Bool)

(assert (=> tb!1697 (= result!2927 tp_is_empty!2535)))

(assert (=> b!85827 t!5248))

(declare-fun b_and!5199 () Bool)

(assert (= b_and!5195 (and (=> t!5248 result!2927) b_and!5199)))

(declare-fun t!5250 () Bool)

(declare-fun tb!1699 () Bool)

(assert (=> (and b!85323 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 newMap!16)) t!5250) tb!1699))

(declare-fun result!2929 () Bool)

(assert (= result!2929 result!2927))

(assert (=> b!85827 t!5250))

(declare-fun b_and!5201 () Bool)

(assert (= b_and!5197 (and (=> t!5250 result!2929) b_and!5201)))

(declare-fun m!90363 () Bool)

(assert (=> b!85829 m!90363))

(assert (=> b!85829 m!90363))

(declare-fun m!90365 () Bool)

(assert (=> b!85829 m!90365))

(declare-fun m!90367 () Bool)

(assert (=> b!85831 m!90367))

(declare-fun m!90369 () Bool)

(assert (=> bm!8164 m!90369))

(declare-fun m!90371 () Bool)

(assert (=> bm!8166 m!90371))

(declare-fun m!90373 () Bool)

(assert (=> b!85827 m!90373))

(assert (=> b!85827 m!90363))

(declare-fun m!90375 () Bool)

(assert (=> b!85827 m!90375))

(assert (=> b!85827 m!90363))

(declare-fun m!90377 () Bool)

(assert (=> b!85827 m!90377))

(assert (=> b!85827 m!90377))

(assert (=> b!85827 m!90373))

(declare-fun m!90379 () Bool)

(assert (=> b!85827 m!90379))

(assert (=> b!85815 m!90363))

(assert (=> b!85815 m!90363))

(declare-fun m!90381 () Bool)

(assert (=> b!85815 m!90381))

(declare-fun m!90383 () Bool)

(assert (=> b!85825 m!90383))

(declare-fun m!90385 () Bool)

(assert (=> d!22223 m!90385))

(declare-fun m!90387 () Bool)

(assert (=> bm!8169 m!90387))

(declare-fun m!90389 () Bool)

(assert (=> b!85832 m!90389))

(declare-fun m!90391 () Bool)

(assert (=> b!85832 m!90391))

(declare-fun m!90393 () Bool)

(assert (=> b!85832 m!90393))

(assert (=> b!85832 m!90363))

(declare-fun m!90395 () Bool)

(assert (=> b!85832 m!90395))

(declare-fun m!90397 () Bool)

(assert (=> b!85832 m!90397))

(declare-fun m!90399 () Bool)

(assert (=> b!85832 m!90399))

(declare-fun m!90401 () Bool)

(assert (=> b!85832 m!90401))

(declare-fun m!90403 () Bool)

(assert (=> b!85832 m!90403))

(declare-fun m!90405 () Bool)

(assert (=> b!85832 m!90405))

(declare-fun m!90407 () Bool)

(assert (=> b!85832 m!90407))

(assert (=> b!85832 m!90391))

(assert (=> b!85832 m!90397))

(declare-fun m!90409 () Bool)

(assert (=> b!85832 m!90409))

(declare-fun m!90411 () Bool)

(assert (=> b!85832 m!90411))

(declare-fun m!90413 () Bool)

(assert (=> b!85832 m!90413))

(assert (=> b!85832 m!90401))

(assert (=> b!85832 m!90411))

(assert (=> b!85832 m!90369))

(declare-fun m!90415 () Bool)

(assert (=> b!85832 m!90415))

(declare-fun m!90417 () Bool)

(assert (=> b!85832 m!90417))

(assert (=> b!85820 m!90363))

(assert (=> b!85820 m!90363))

(assert (=> b!85820 m!90365))

(declare-fun m!90419 () Bool)

(assert (=> b!85814 m!90419))

(declare-fun m!90421 () Bool)

(assert (=> bm!8165 m!90421))

(assert (=> bm!8119 d!22223))

(declare-fun d!22225 () Bool)

(declare-fun e!55970 () Bool)

(assert (=> d!22225 e!55970))

(declare-fun res!44171 () Bool)

(assert (=> d!22225 (=> (not res!44171) (not e!55970))))

(declare-fun lt!40666 () ListLongMap!1461)

(assert (=> d!22225 (= res!44171 (contains!753 lt!40666 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40665 () List!1519)

(assert (=> d!22225 (= lt!40666 (ListLongMap!1462 lt!40665))))

(declare-fun lt!40667 () Unit!2517)

(declare-fun lt!40664 () Unit!2517)

(assert (=> d!22225 (= lt!40667 lt!40664)))

(assert (=> d!22225 (= (getValueByKey!140 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22225 (= lt!40664 (lemmaContainsTupThenGetReturnValue!57 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22225 (= lt!40665 (insertStrictlySorted!60 (toList!746 call!8067) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22225 (= (+!110 call!8067 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40666)))

(declare-fun b!85833 () Bool)

(declare-fun res!44172 () Bool)

(assert (=> b!85833 (=> (not res!44172) (not e!55970))))

(assert (=> b!85833 (= res!44172 (= (getValueByKey!140 (toList!746 lt!40666) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!85834 () Bool)

(assert (=> b!85834 (= e!55970 (contains!754 (toList!746 lt!40666) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22225 res!44171) b!85833))

(assert (= (and b!85833 res!44172) b!85834))

(declare-fun m!90423 () Bool)

(assert (=> d!22225 m!90423))

(declare-fun m!90425 () Bool)

(assert (=> d!22225 m!90425))

(declare-fun m!90427 () Bool)

(assert (=> d!22225 m!90427))

(declare-fun m!90429 () Bool)

(assert (=> d!22225 m!90429))

(declare-fun m!90431 () Bool)

(assert (=> b!85833 m!90431))

(declare-fun m!90433 () Bool)

(assert (=> b!85834 m!90433))

(assert (=> b!85456 d!22225))

(declare-fun d!22227 () Bool)

(assert (=> d!22227 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40670 () Unit!2517)

(declare-fun choose!501 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2517)

(assert (=> d!22227 (= lt!40670 (choose!501 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40521 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40326 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22227 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22227 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40521 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40326 (defaultEntry!2338 newMap!16)) lt!40670)))

(declare-fun bs!3624 () Bool)

(assert (= bs!3624 d!22227))

(declare-fun m!90435 () Bool)

(assert (=> bs!3624 m!90435))

(assert (=> bs!3624 m!89981))

(declare-fun m!90437 () Bool)

(assert (=> bs!3624 m!90437))

(assert (=> bs!3624 m!90385))

(assert (=> bs!3624 m!89981))

(declare-fun m!90439 () Bool)

(assert (=> bs!3624 m!90439))

(assert (=> b!85580 d!22227))

(declare-fun d!22229 () Bool)

(declare-fun res!44173 () Bool)

(declare-fun e!55971 () Bool)

(assert (=> d!22229 (=> (not res!44173) (not e!55971))))

(assert (=> d!22229 (= res!44173 (simpleValid!58 (v!2645 (underlying!289 thiss!992))))))

(assert (=> d!22229 (= (valid!323 (v!2645 (underlying!289 thiss!992))) e!55971)))

(declare-fun b!85835 () Bool)

(declare-fun res!44174 () Bool)

(assert (=> b!85835 (=> (not res!44174) (not e!55971))))

(assert (=> b!85835 (= res!44174 (= (arrayCountValidKeys!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))) (_size!427 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85836 () Bool)

(declare-fun res!44175 () Bool)

(assert (=> b!85836 (=> (not res!44175) (not e!55971))))

(assert (=> b!85836 (= res!44175 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85837 () Bool)

(assert (=> b!85837 (= e!55971 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 Nil!1517))))

(assert (= (and d!22229 res!44173) b!85835))

(assert (= (and b!85835 res!44174) b!85836))

(assert (= (and b!85836 res!44175) b!85837))

(declare-fun m!90441 () Bool)

(assert (=> d!22229 m!90441))

(declare-fun m!90443 () Bool)

(assert (=> b!85835 m!90443))

(declare-fun m!90445 () Bool)

(assert (=> b!85836 m!90445))

(declare-fun m!90447 () Bool)

(assert (=> b!85837 m!90447))

(assert (=> d!22183 d!22229))

(assert (=> d!22175 d!22181))

(declare-fun d!22231 () Bool)

(assert (=> d!22231 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) from!355 Nil!1517)))

(assert (=> d!22231 true))

(declare-fun _$71!114 () Unit!2517)

(assert (=> d!22231 (= (choose!39 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!114)))

(declare-fun bs!3625 () Bool)

(assert (= bs!3625 d!22231))

(assert (=> bs!3625 m!89881))

(assert (=> d!22175 d!22231))

(declare-fun d!22233 () Bool)

(declare-fun e!55973 () Bool)

(assert (=> d!22233 e!55973))

(declare-fun res!44176 () Bool)

(assert (=> d!22233 (=> res!44176 e!55973)))

(declare-fun lt!40671 () Bool)

(assert (=> d!22233 (= res!44176 (not lt!40671))))

(declare-fun lt!40672 () Bool)

(assert (=> d!22233 (= lt!40671 lt!40672)))

(declare-fun lt!40674 () Unit!2517)

(declare-fun e!55972 () Unit!2517)

(assert (=> d!22233 (= lt!40674 e!55972)))

(declare-fun c!13958 () Bool)

(assert (=> d!22233 (= c!13958 lt!40672)))

(assert (=> d!22233 (= lt!40672 (containsKey!144 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22233 (= (contains!753 call!8134 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!40671)))

(declare-fun b!85838 () Bool)

(declare-fun lt!40673 () Unit!2517)

(assert (=> b!85838 (= e!55972 lt!40673)))

(assert (=> b!85838 (= lt!40673 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!85838 (isDefined!93 (getValueByKey!140 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85839 () Bool)

(declare-fun Unit!2531 () Unit!2517)

(assert (=> b!85839 (= e!55972 Unit!2531)))

(declare-fun b!85840 () Bool)

(assert (=> b!85840 (= e!55973 (isDefined!93 (getValueByKey!140 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!22233 c!13958) b!85838))

(assert (= (and d!22233 (not c!13958)) b!85839))

(assert (= (and d!22233 (not res!44176)) b!85840))

(assert (=> d!22233 m!89857))

(declare-fun m!90449 () Bool)

(assert (=> d!22233 m!90449))

(assert (=> b!85838 m!89857))

(declare-fun m!90451 () Bool)

(assert (=> b!85838 m!90451))

(assert (=> b!85838 m!89857))

(declare-fun m!90453 () Bool)

(assert (=> b!85838 m!90453))

(assert (=> b!85838 m!90453))

(declare-fun m!90455 () Bool)

(assert (=> b!85838 m!90455))

(assert (=> b!85840 m!89857))

(assert (=> b!85840 m!90453))

(assert (=> b!85840 m!90453))

(assert (=> b!85840 m!90455))

(assert (=> b!85595 d!22233))

(declare-fun d!22235 () Bool)

(assert (=> d!22235 (= (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85460 d!22235))

(declare-fun b!85841 () Bool)

(declare-fun e!55974 () Option!146)

(assert (=> b!85841 (= e!55974 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40556)))))))

(declare-fun d!22237 () Bool)

(declare-fun c!13959 () Bool)

(assert (=> d!22237 (= c!13959 (and ((_ is Cons!1515) (toList!746 lt!40556)) (= (_1!1110 (h!2106 (toList!746 lt!40556))) (_1!1110 lt!40322))))))

(assert (=> d!22237 (= (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322)) e!55974)))

(declare-fun b!85844 () Bool)

(declare-fun e!55975 () Option!146)

(assert (=> b!85844 (= e!55975 None!144)))

(declare-fun b!85843 () Bool)

(assert (=> b!85843 (= e!55975 (getValueByKey!140 (t!5240 (toList!746 lt!40556)) (_1!1110 lt!40322)))))

(declare-fun b!85842 () Bool)

(assert (=> b!85842 (= e!55974 e!55975)))

(declare-fun c!13960 () Bool)

(assert (=> b!85842 (= c!13960 (and ((_ is Cons!1515) (toList!746 lt!40556)) (not (= (_1!1110 (h!2106 (toList!746 lt!40556))) (_1!1110 lt!40322)))))))

(assert (= (and d!22237 c!13959) b!85841))

(assert (= (and d!22237 (not c!13959)) b!85842))

(assert (= (and b!85842 c!13960) b!85843))

(assert (= (and b!85842 (not c!13960)) b!85844))

(declare-fun m!90457 () Bool)

(assert (=> b!85843 m!90457))

(assert (=> b!85612 d!22237))

(declare-fun d!22239 () Bool)

(assert (=> d!22239 (= (get!1196 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2644 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!85666 d!22239))

(declare-fun d!22241 () Bool)

(declare-fun e!55977 () Bool)

(assert (=> d!22241 e!55977))

(declare-fun res!44177 () Bool)

(assert (=> d!22241 (=> res!44177 e!55977)))

(declare-fun lt!40675 () Bool)

(assert (=> d!22241 (= res!44177 (not lt!40675))))

(declare-fun lt!40676 () Bool)

(assert (=> d!22241 (= lt!40675 lt!40676)))

(declare-fun lt!40678 () Unit!2517)

(declare-fun e!55976 () Unit!2517)

(assert (=> d!22241 (= lt!40678 e!55976)))

(declare-fun c!13961 () Bool)

(assert (=> d!22241 (= c!13961 lt!40676)))

(assert (=> d!22241 (= lt!40676 (containsKey!144 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22241 (= (contains!753 lt!40584 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40675)))

(declare-fun b!85845 () Bool)

(declare-fun lt!40677 () Unit!2517)

(assert (=> b!85845 (= e!55976 lt!40677)))

(assert (=> b!85845 (= lt!40677 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85845 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85846 () Bool)

(declare-fun Unit!2532 () Unit!2517)

(assert (=> b!85846 (= e!55976 Unit!2532)))

(declare-fun b!85847 () Bool)

(assert (=> b!85847 (= e!55977 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22241 c!13961) b!85845))

(assert (= (and d!22241 (not c!13961)) b!85846))

(assert (= (and d!22241 (not res!44177)) b!85847))

(declare-fun m!90459 () Bool)

(assert (=> d!22241 m!90459))

(declare-fun m!90461 () Bool)

(assert (=> b!85845 m!90461))

(declare-fun m!90463 () Bool)

(assert (=> b!85845 m!90463))

(assert (=> b!85845 m!90463))

(declare-fun m!90465 () Bool)

(assert (=> b!85845 m!90465))

(assert (=> b!85847 m!90463))

(assert (=> b!85847 m!90463))

(assert (=> b!85847 m!90465))

(assert (=> d!22157 d!22241))

(assert (=> d!22157 d!22169))

(declare-fun b!85848 () Bool)

(declare-fun e!55978 () Option!146)

(assert (=> b!85848 (= e!55978 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40564)))))))

(declare-fun d!22243 () Bool)

(declare-fun c!13962 () Bool)

(assert (=> d!22243 (= c!13962 (and ((_ is Cons!1515) (toList!746 lt!40564)) (= (_1!1110 (h!2106 (toList!746 lt!40564))) (_1!1110 lt!40318))))))

(assert (=> d!22243 (= (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318)) e!55978)))

(declare-fun b!85851 () Bool)

(declare-fun e!55979 () Option!146)

(assert (=> b!85851 (= e!55979 None!144)))

(declare-fun b!85850 () Bool)

(assert (=> b!85850 (= e!55979 (getValueByKey!140 (t!5240 (toList!746 lt!40564)) (_1!1110 lt!40318)))))

(declare-fun b!85849 () Bool)

(assert (=> b!85849 (= e!55978 e!55979)))

(declare-fun c!13963 () Bool)

(assert (=> b!85849 (= c!13963 (and ((_ is Cons!1515) (toList!746 lt!40564)) (not (= (_1!1110 (h!2106 (toList!746 lt!40564))) (_1!1110 lt!40318)))))))

(assert (= (and d!22243 c!13962) b!85848))

(assert (= (and d!22243 (not c!13962)) b!85849))

(assert (= (and b!85849 c!13963) b!85850))

(assert (= (and b!85849 (not c!13963)) b!85851))

(declare-fun m!90467 () Bool)

(assert (=> b!85850 m!90467))

(assert (=> b!85616 d!22243))

(declare-fun d!22245 () Bool)

(declare-fun e!55980 () Bool)

(assert (=> d!22245 e!55980))

(declare-fun res!44178 () Bool)

(assert (=> d!22245 (=> (not res!44178) (not e!55980))))

(declare-fun lt!40681 () ListLongMap!1461)

(assert (=> d!22245 (= res!44178 (contains!753 lt!40681 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40680 () List!1519)

(assert (=> d!22245 (= lt!40681 (ListLongMap!1462 lt!40680))))

(declare-fun lt!40682 () Unit!2517)

(declare-fun lt!40679 () Unit!2517)

(assert (=> d!22245 (= lt!40682 lt!40679)))

(assert (=> d!22245 (= (getValueByKey!140 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22245 (= lt!40679 (lemmaContainsTupThenGetReturnValue!57 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22245 (= lt!40680 (insertStrictlySorted!60 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22245 (= (+!110 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40681)))

(declare-fun b!85852 () Bool)

(declare-fun res!44179 () Bool)

(assert (=> b!85852 (=> (not res!44179) (not e!55980))))

(assert (=> b!85852 (= res!44179 (= (getValueByKey!140 (toList!746 lt!40681) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!85853 () Bool)

(assert (=> b!85853 (= e!55980 (contains!754 (toList!746 lt!40681) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22245 res!44178) b!85852))

(assert (= (and b!85852 res!44179) b!85853))

(declare-fun m!90469 () Bool)

(assert (=> d!22245 m!90469))

(declare-fun m!90471 () Bool)

(assert (=> d!22245 m!90471))

(declare-fun m!90473 () Bool)

(assert (=> d!22245 m!90473))

(declare-fun m!90475 () Bool)

(assert (=> d!22245 m!90475))

(declare-fun m!90477 () Bool)

(assert (=> b!85852 m!90477))

(declare-fun m!90479 () Bool)

(assert (=> b!85853 m!90479))

(assert (=> d!22159 d!22245))

(declare-fun d!22247 () Bool)

(declare-fun e!55981 () Bool)

(assert (=> d!22247 e!55981))

(declare-fun res!44180 () Bool)

(assert (=> d!22247 (=> (not res!44180) (not e!55981))))

(declare-fun lt!40685 () ListLongMap!1461)

(assert (=> d!22247 (= res!44180 (contains!753 lt!40685 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!40684 () List!1519)

(assert (=> d!22247 (= lt!40685 (ListLongMap!1462 lt!40684))))

(declare-fun lt!40686 () Unit!2517)

(declare-fun lt!40683 () Unit!2517)

(assert (=> d!22247 (= lt!40686 lt!40683)))

(assert (=> d!22247 (= (getValueByKey!140 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22247 (= lt!40683 (lemmaContainsTupThenGetReturnValue!57 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22247 (= lt!40684 (insertStrictlySorted!60 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22247 (= (+!110 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!40685)))

(declare-fun b!85854 () Bool)

(declare-fun res!44181 () Bool)

(assert (=> b!85854 (=> (not res!44181) (not e!55981))))

(assert (=> b!85854 (= res!44181 (= (getValueByKey!140 (toList!746 lt!40685) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!85855 () Bool)

(assert (=> b!85855 (= e!55981 (contains!754 (toList!746 lt!40685) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22247 res!44180) b!85854))

(assert (= (and b!85854 res!44181) b!85855))

(declare-fun m!90481 () Bool)

(assert (=> d!22247 m!90481))

(declare-fun m!90483 () Bool)

(assert (=> d!22247 m!90483))

(declare-fun m!90485 () Bool)

(assert (=> d!22247 m!90485))

(declare-fun m!90487 () Bool)

(assert (=> d!22247 m!90487))

(declare-fun m!90489 () Bool)

(assert (=> b!85854 m!90489))

(declare-fun m!90491 () Bool)

(assert (=> b!85855 m!90491))

(assert (=> d!22159 d!22247))

(declare-fun d!22249 () Bool)

(declare-fun e!55982 () Bool)

(assert (=> d!22249 e!55982))

(declare-fun res!44182 () Bool)

(assert (=> d!22249 (=> (not res!44182) (not e!55982))))

(declare-fun lt!40689 () ListLongMap!1461)

(assert (=> d!22249 (= res!44182 (contains!753 lt!40689 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!40688 () List!1519)

(assert (=> d!22249 (= lt!40689 (ListLongMap!1462 lt!40688))))

(declare-fun lt!40690 () Unit!2517)

(declare-fun lt!40687 () Unit!2517)

(assert (=> d!22249 (= lt!40690 lt!40687)))

(assert (=> d!22249 (= (getValueByKey!140 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22249 (= lt!40687 (lemmaContainsTupThenGetReturnValue!57 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22249 (= lt!40688 (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22249 (= (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!40689)))

(declare-fun b!85856 () Bool)

(declare-fun res!44183 () Bool)

(assert (=> b!85856 (=> (not res!44183) (not e!55982))))

(assert (=> b!85856 (= res!44183 (= (getValueByKey!140 (toList!746 lt!40689) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!85857 () Bool)

(assert (=> b!85857 (= e!55982 (contains!754 (toList!746 lt!40689) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22249 res!44182) b!85856))

(assert (= (and b!85856 res!44183) b!85857))

(declare-fun m!90493 () Bool)

(assert (=> d!22249 m!90493))

(declare-fun m!90495 () Bool)

(assert (=> d!22249 m!90495))

(declare-fun m!90497 () Bool)

(assert (=> d!22249 m!90497))

(declare-fun m!90499 () Bool)

(assert (=> d!22249 m!90499))

(declare-fun m!90501 () Bool)

(assert (=> b!85856 m!90501))

(declare-fun m!90503 () Bool)

(assert (=> b!85857 m!90503))

(assert (=> d!22159 d!22249))

(declare-fun d!22251 () Bool)

(assert (=> d!22251 (= (+!110 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (+!110 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (=> d!22251 true))

(declare-fun _$28!142 () Unit!2517)

(assert (=> d!22251 (= (choose!498 lt!40331 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))) _$28!142)))

(declare-fun bs!3626 () Bool)

(assert (= bs!3626 d!22251))

(assert (=> bs!3626 m!90181))

(assert (=> bs!3626 m!90181))

(assert (=> bs!3626 m!90183))

(assert (=> bs!3626 m!90177))

(assert (=> bs!3626 m!90177))

(assert (=> bs!3626 m!90179))

(assert (=> d!22159 d!22251))

(declare-fun d!22253 () Bool)

(declare-fun e!55983 () Bool)

(assert (=> d!22253 e!55983))

(declare-fun res!44184 () Bool)

(assert (=> d!22253 (=> (not res!44184) (not e!55983))))

(declare-fun lt!40693 () ListLongMap!1461)

(assert (=> d!22253 (= res!44184 (contains!753 lt!40693 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40692 () List!1519)

(assert (=> d!22253 (= lt!40693 (ListLongMap!1462 lt!40692))))

(declare-fun lt!40694 () Unit!2517)

(declare-fun lt!40691 () Unit!2517)

(assert (=> d!22253 (= lt!40694 lt!40691)))

(assert (=> d!22253 (= (getValueByKey!140 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22253 (= lt!40691 (lemmaContainsTupThenGetReturnValue!57 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22253 (= lt!40692 (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22253 (= (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40693)))

(declare-fun b!85858 () Bool)

(declare-fun res!44185 () Bool)

(assert (=> b!85858 (=> (not res!44185) (not e!55983))))

(assert (=> b!85858 (= res!44185 (= (getValueByKey!140 (toList!746 lt!40693) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!85859 () Bool)

(assert (=> b!85859 (= e!55983 (contains!754 (toList!746 lt!40693) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22253 res!44184) b!85858))

(assert (= (and b!85858 res!44185) b!85859))

(declare-fun m!90505 () Bool)

(assert (=> d!22253 m!90505))

(declare-fun m!90507 () Bool)

(assert (=> d!22253 m!90507))

(declare-fun m!90509 () Bool)

(assert (=> d!22253 m!90509))

(declare-fun m!90511 () Bool)

(assert (=> d!22253 m!90511))

(declare-fun m!90513 () Bool)

(assert (=> b!85858 m!90513))

(declare-fun m!90515 () Bool)

(assert (=> b!85859 m!90515))

(assert (=> d!22159 d!22253))

(declare-fun b!85860 () Bool)

(declare-fun e!55986 () ListLongMap!1461)

(declare-fun call!8174 () ListLongMap!1461)

(assert (=> b!85860 (= e!55986 call!8174)))

(declare-fun b!85861 () Bool)

(declare-fun e!55984 () Bool)

(assert (=> b!85861 (= e!55984 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85861 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!85862 () Bool)

(declare-fun lt!40699 () Unit!2517)

(declare-fun lt!40700 () Unit!2517)

(assert (=> b!85862 (= lt!40699 lt!40700)))

(declare-fun lt!40696 () (_ BitVec 64))

(declare-fun lt!40698 () ListLongMap!1461)

(declare-fun lt!40697 () (_ BitVec 64))

(declare-fun lt!40701 () V!3027)

(assert (=> b!85862 (not (contains!753 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701)) lt!40696))))

(assert (=> b!85862 (= lt!40700 (addStillNotContains!31 lt!40698 lt!40697 lt!40701 lt!40696))))

(assert (=> b!85862 (= lt!40696 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85862 (= lt!40701 (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85862 (= lt!40697 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!85862 (= lt!40698 call!8174)))

(assert (=> b!85862 (= e!55986 (+!110 call!8174 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!22255 () Bool)

(declare-fun e!55985 () Bool)

(assert (=> d!22255 e!55985))

(declare-fun res!44186 () Bool)

(assert (=> d!22255 (=> (not res!44186) (not e!55985))))

(declare-fun lt!40695 () ListLongMap!1461)

(assert (=> d!22255 (= res!44186 (not (contains!753 lt!40695 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!55987 () ListLongMap!1461)

(assert (=> d!22255 (= lt!40695 e!55987)))

(declare-fun c!13966 () Bool)

(assert (=> d!22255 (= c!13966 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22255 (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992))))))

(assert (=> d!22255 (= (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) lt!40695)))

(declare-fun b!85863 () Bool)

(assert (=> b!85863 (= e!55987 (ListLongMap!1462 Nil!1516))))

(declare-fun e!55989 () Bool)

(declare-fun b!85864 () Bool)

(assert (=> b!85864 (= e!55989 (= lt!40695 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun bm!8171 () Bool)

(assert (=> bm!8171 (= call!8174 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!85865 () Bool)

(assert (=> b!85865 (= e!55987 e!55986)))

(declare-fun c!13967 () Bool)

(assert (=> b!85865 (= c!13967 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85866 () Bool)

(assert (=> b!85866 (= e!55989 (isEmpty!335 lt!40695))))

(declare-fun b!85867 () Bool)

(declare-fun e!55990 () Bool)

(declare-fun e!55988 () Bool)

(assert (=> b!85867 (= e!55990 e!55988)))

(assert (=> b!85867 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun res!44189 () Bool)

(assert (=> b!85867 (= res!44189 (contains!753 lt!40695 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85867 (=> (not res!44189) (not e!55988))))

(declare-fun b!85868 () Bool)

(assert (=> b!85868 (= e!55990 e!55989)))

(declare-fun c!13964 () Bool)

(assert (=> b!85868 (= c!13964 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85869 () Bool)

(assert (=> b!85869 (= e!55985 e!55990)))

(declare-fun c!13965 () Bool)

(assert (=> b!85869 (= c!13965 e!55984)))

(declare-fun res!44187 () Bool)

(assert (=> b!85869 (=> (not res!44187) (not e!55984))))

(assert (=> b!85869 (= res!44187 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!85870 () Bool)

(declare-fun res!44188 () Bool)

(assert (=> b!85870 (=> (not res!44188) (not e!55985))))

(assert (=> b!85870 (= res!44188 (not (contains!753 lt!40695 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85871 () Bool)

(assert (=> b!85871 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!85871 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!85871 (= e!55988 (= (apply!82 lt!40695 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22255 c!13966) b!85863))

(assert (= (and d!22255 (not c!13966)) b!85865))

(assert (= (and b!85865 c!13967) b!85862))

(assert (= (and b!85865 (not c!13967)) b!85860))

(assert (= (or b!85862 b!85860) bm!8171))

(assert (= (and d!22255 res!44186) b!85870))

(assert (= (and b!85870 res!44188) b!85869))

(assert (= (and b!85869 res!44187) b!85861))

(assert (= (and b!85869 c!13965) b!85867))

(assert (= (and b!85869 (not c!13965)) b!85868))

(assert (= (and b!85867 res!44189) b!85871))

(assert (= (and b!85868 c!13964) b!85864))

(assert (= (and b!85868 (not c!13964)) b!85866))

(declare-fun b_lambda!3817 () Bool)

(assert (=> (not b_lambda!3817) (not b!85862)))

(assert (=> b!85862 t!5237))

(declare-fun b_and!5203 () Bool)

(assert (= b_and!5199 (and (=> t!5237 result!2913) b_and!5203)))

(assert (=> b!85862 t!5239))

(declare-fun b_and!5205 () Bool)

(assert (= b_and!5201 (and (=> t!5239 result!2917) b_and!5205)))

(declare-fun b_lambda!3819 () Bool)

(assert (=> (not b_lambda!3819) (not b!85871)))

(assert (=> b!85871 t!5237))

(declare-fun b_and!5207 () Bool)

(assert (= b_and!5203 (and (=> t!5237 result!2913) b_and!5207)))

(assert (=> b!85871 t!5239))

(declare-fun b_and!5209 () Bool)

(assert (= b_and!5205 (and (=> t!5239 result!2917) b_and!5209)))

(assert (=> b!85861 m!90317))

(assert (=> b!85861 m!90317))

(declare-fun m!90517 () Bool)

(assert (=> b!85861 m!90517))

(assert (=> b!85867 m!90317))

(assert (=> b!85867 m!90317))

(declare-fun m!90519 () Bool)

(assert (=> b!85867 m!90519))

(declare-fun m!90521 () Bool)

(assert (=> bm!8171 m!90521))

(declare-fun m!90523 () Bool)

(assert (=> d!22255 m!90523))

(assert (=> d!22255 m!89899))

(assert (=> b!85865 m!90317))

(assert (=> b!85865 m!90317))

(assert (=> b!85865 m!90517))

(declare-fun m!90525 () Bool)

(assert (=> b!85870 m!90525))

(assert (=> b!85864 m!90521))

(declare-fun m!90527 () Bool)

(assert (=> b!85866 m!90527))

(declare-fun m!90529 () Bool)

(assert (=> b!85862 m!90529))

(assert (=> b!85862 m!89861))

(declare-fun m!90531 () Bool)

(assert (=> b!85862 m!90531))

(declare-fun m!90533 () Bool)

(assert (=> b!85862 m!90533))

(assert (=> b!85862 m!90529))

(assert (=> b!85862 m!90533))

(declare-fun m!90535 () Bool)

(assert (=> b!85862 m!90535))

(declare-fun m!90537 () Bool)

(assert (=> b!85862 m!90537))

(assert (=> b!85862 m!89861))

(assert (=> b!85862 m!90317))

(declare-fun m!90539 () Bool)

(assert (=> b!85862 m!90539))

(assert (=> b!85871 m!90529))

(assert (=> b!85871 m!89861))

(assert (=> b!85871 m!90531))

(assert (=> b!85871 m!90529))

(assert (=> b!85871 m!90317))

(declare-fun m!90541 () Bool)

(assert (=> b!85871 m!90541))

(assert (=> b!85871 m!89861))

(assert (=> b!85871 m!90317))

(assert (=> b!85648 d!22255))

(declare-fun b!85872 () Bool)

(declare-fun e!55991 () Option!146)

(assert (=> b!85872 (= e!55991 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40560)))))))

(declare-fun d!22257 () Bool)

(declare-fun c!13968 () Bool)

(assert (=> d!22257 (= c!13968 (and ((_ is Cons!1515) (toList!746 lt!40560)) (= (_1!1110 (h!2106 (toList!746 lt!40560))) (_1!1110 lt!40324))))))

(assert (=> d!22257 (= (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324)) e!55991)))

(declare-fun b!85875 () Bool)

(declare-fun e!55992 () Option!146)

(assert (=> b!85875 (= e!55992 None!144)))

(declare-fun b!85874 () Bool)

(assert (=> b!85874 (= e!55992 (getValueByKey!140 (t!5240 (toList!746 lt!40560)) (_1!1110 lt!40324)))))

(declare-fun b!85873 () Bool)

(assert (=> b!85873 (= e!55991 e!55992)))

(declare-fun c!13969 () Bool)

(assert (=> b!85873 (= c!13969 (and ((_ is Cons!1515) (toList!746 lt!40560)) (not (= (_1!1110 (h!2106 (toList!746 lt!40560))) (_1!1110 lt!40324)))))))

(assert (= (and d!22257 c!13968) b!85872))

(assert (= (and d!22257 (not c!13968)) b!85873))

(assert (= (and b!85873 c!13969) b!85874))

(assert (= (and b!85873 (not c!13969)) b!85875))

(declare-fun m!90543 () Bool)

(assert (=> b!85874 m!90543))

(assert (=> b!85614 d!22257))

(assert (=> bm!8130 d!22135))

(assert (=> b!85678 d!22177))

(assert (=> b!85646 d!22209))

(declare-fun d!22259 () Bool)

(declare-fun e!55994 () Bool)

(assert (=> d!22259 e!55994))

(declare-fun res!44190 () Bool)

(assert (=> d!22259 (=> res!44190 e!55994)))

(declare-fun lt!40702 () Bool)

(assert (=> d!22259 (= res!44190 (not lt!40702))))

(declare-fun lt!40703 () Bool)

(assert (=> d!22259 (= lt!40702 lt!40703)))

(declare-fun lt!40705 () Unit!2517)

(declare-fun e!55993 () Unit!2517)

(assert (=> d!22259 (= lt!40705 e!55993)))

(declare-fun c!13970 () Bool)

(assert (=> d!22259 (= c!13970 lt!40703)))

(assert (=> d!22259 (= lt!40703 (containsKey!144 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))

(assert (=> d!22259 (= (contains!753 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)) lt!40585) lt!40702)))

(declare-fun b!85876 () Bool)

(declare-fun lt!40704 () Unit!2517)

(assert (=> b!85876 (= e!55993 lt!40704)))

(assert (=> b!85876 (= lt!40704 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))

(assert (=> b!85876 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))

(declare-fun b!85877 () Bool)

(declare-fun Unit!2533 () Unit!2517)

(assert (=> b!85877 (= e!55993 Unit!2533)))

(declare-fun b!85878 () Bool)

(assert (=> b!85878 (= e!55994 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585)))))

(assert (= (and d!22259 c!13970) b!85876))

(assert (= (and d!22259 (not c!13970)) b!85877))

(assert (= (and d!22259 (not res!44190)) b!85878))

(declare-fun m!90545 () Bool)

(assert (=> d!22259 m!90545))

(declare-fun m!90547 () Bool)

(assert (=> b!85876 m!90547))

(declare-fun m!90549 () Bool)

(assert (=> b!85876 m!90549))

(assert (=> b!85876 m!90549))

(declare-fun m!90551 () Bool)

(assert (=> b!85876 m!90551))

(assert (=> b!85878 m!90549))

(assert (=> b!85878 m!90549))

(assert (=> b!85878 m!90551))

(assert (=> b!85646 d!22259))

(declare-fun d!22261 () Bool)

(declare-fun e!55995 () Bool)

(assert (=> d!22261 e!55995))

(declare-fun res!44191 () Bool)

(assert (=> d!22261 (=> (not res!44191) (not e!55995))))

(declare-fun lt!40708 () ListLongMap!1461)

(assert (=> d!22261 (= res!44191 (contains!753 lt!40708 (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun lt!40707 () List!1519)

(assert (=> d!22261 (= lt!40708 (ListLongMap!1462 lt!40707))))

(declare-fun lt!40709 () Unit!2517)

(declare-fun lt!40706 () Unit!2517)

(assert (=> d!22261 (= lt!40709 lt!40706)))

(assert (=> d!22261 (= (getValueByKey!140 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590))) (Some!145 (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))

(assert (=> d!22261 (= lt!40706 (lemmaContainsTupThenGetReturnValue!57 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))

(assert (=> d!22261 (= lt!40707 (insertStrictlySorted!60 (toList!746 lt!40587) (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))

(assert (=> d!22261 (= (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)) lt!40708)))

(declare-fun b!85879 () Bool)

(declare-fun res!44192 () Bool)

(assert (=> b!85879 (=> (not res!44192) (not e!55995))))

(assert (=> b!85879 (= res!44192 (= (getValueByKey!140 (toList!746 lt!40708) (_1!1110 (tuple2!2199 lt!40586 lt!40590))) (Some!145 (_2!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(declare-fun b!85880 () Bool)

(assert (=> b!85880 (= e!55995 (contains!754 (toList!746 lt!40708) (tuple2!2199 lt!40586 lt!40590)))))

(assert (= (and d!22261 res!44191) b!85879))

(assert (= (and b!85879 res!44192) b!85880))

(declare-fun m!90553 () Bool)

(assert (=> d!22261 m!90553))

(declare-fun m!90555 () Bool)

(assert (=> d!22261 m!90555))

(declare-fun m!90557 () Bool)

(assert (=> d!22261 m!90557))

(declare-fun m!90559 () Bool)

(assert (=> d!22261 m!90559))

(declare-fun m!90561 () Bool)

(assert (=> b!85879 m!90561))

(declare-fun m!90563 () Bool)

(assert (=> b!85880 m!90563))

(assert (=> b!85646 d!22261))

(declare-fun d!22263 () Bool)

(declare-fun e!55996 () Bool)

(assert (=> d!22263 e!55996))

(declare-fun res!44193 () Bool)

(assert (=> d!22263 (=> (not res!44193) (not e!55996))))

(declare-fun lt!40712 () ListLongMap!1461)

(assert (=> d!22263 (= res!44193 (contains!753 lt!40712 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!40711 () List!1519)

(assert (=> d!22263 (= lt!40712 (ListLongMap!1462 lt!40711))))

(declare-fun lt!40713 () Unit!2517)

(declare-fun lt!40710 () Unit!2517)

(assert (=> d!22263 (= lt!40713 lt!40710)))

(assert (=> d!22263 (= (getValueByKey!140 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22263 (= lt!40710 (lemmaContainsTupThenGetReturnValue!57 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22263 (= lt!40711 (insertStrictlySorted!60 (toList!746 call!8148) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22263 (= (+!110 call!8148 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!40712)))

(declare-fun b!85881 () Bool)

(declare-fun res!44194 () Bool)

(assert (=> b!85881 (=> (not res!44194) (not e!55996))))

(assert (=> b!85881 (= res!44194 (= (getValueByKey!140 (toList!746 lt!40712) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!85882 () Bool)

(assert (=> b!85882 (= e!55996 (contains!754 (toList!746 lt!40712) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22263 res!44193) b!85881))

(assert (= (and b!85881 res!44194) b!85882))

(declare-fun m!90565 () Bool)

(assert (=> d!22263 m!90565))

(declare-fun m!90567 () Bool)

(assert (=> d!22263 m!90567))

(declare-fun m!90569 () Bool)

(assert (=> d!22263 m!90569))

(declare-fun m!90571 () Bool)

(assert (=> d!22263 m!90571))

(declare-fun m!90573 () Bool)

(assert (=> b!85881 m!90573))

(declare-fun m!90575 () Bool)

(assert (=> b!85882 m!90575))

(assert (=> b!85646 d!22263))

(declare-fun d!22265 () Bool)

(assert (=> d!22265 (not (contains!753 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)) lt!40585))))

(declare-fun lt!40716 () Unit!2517)

(declare-fun choose!502 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2517)

(assert (=> d!22265 (= lt!40716 (choose!502 lt!40587 lt!40586 lt!40590 lt!40585))))

(declare-fun e!55999 () Bool)

(assert (=> d!22265 e!55999))

(declare-fun res!44197 () Bool)

(assert (=> d!22265 (=> (not res!44197) (not e!55999))))

(assert (=> d!22265 (= res!44197 (not (contains!753 lt!40587 lt!40585)))))

(assert (=> d!22265 (= (addStillNotContains!31 lt!40587 lt!40586 lt!40590 lt!40585) lt!40716)))

(declare-fun b!85886 () Bool)

(assert (=> b!85886 (= e!55999 (not (= lt!40586 lt!40585)))))

(assert (= (and d!22265 res!44197) b!85886))

(assert (=> d!22265 m!90165))

(assert (=> d!22265 m!90165))

(assert (=> d!22265 m!90167))

(declare-fun m!90577 () Bool)

(assert (=> d!22265 m!90577))

(declare-fun m!90579 () Bool)

(assert (=> d!22265 m!90579))

(assert (=> b!85646 d!22265))

(declare-fun d!22267 () Bool)

(declare-fun res!44198 () Bool)

(declare-fun e!56000 () Bool)

(assert (=> d!22267 (=> (not res!44198) (not e!56000))))

(assert (=> d!22267 (= res!44198 (simpleValid!58 (_2!1109 lt!40519)))))

(assert (=> d!22267 (= (valid!323 (_2!1109 lt!40519)) e!56000)))

(declare-fun b!85887 () Bool)

(declare-fun res!44199 () Bool)

(assert (=> b!85887 (=> (not res!44199) (not e!56000))))

(assert (=> b!85887 (= res!44199 (= (arrayCountValidKeys!0 (_keys!4010 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))) (_size!427 (_2!1109 lt!40519))))))

(declare-fun b!85888 () Bool)

(declare-fun res!44200 () Bool)

(assert (=> b!85888 (=> (not res!44200) (not e!56000))))

(assert (=> b!85888 (= res!44200 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519))))))

(declare-fun b!85889 () Bool)

(assert (=> b!85889 (= e!56000 (arrayNoDuplicates!0 (_keys!4010 (_2!1109 lt!40519)) #b00000000000000000000000000000000 Nil!1517))))

(assert (= (and d!22267 res!44198) b!85887))

(assert (= (and b!85887 res!44199) b!85888))

(assert (= (and b!85888 res!44200) b!85889))

(declare-fun m!90581 () Bool)

(assert (=> d!22267 m!90581))

(declare-fun m!90583 () Bool)

(assert (=> b!85887 m!90583))

(declare-fun m!90585 () Bool)

(assert (=> b!85888 m!90585))

(declare-fun m!90587 () Bool)

(assert (=> b!85889 m!90587))

(assert (=> d!22143 d!22267))

(assert (=> d!22143 d!22139))

(declare-fun b!85899 () Bool)

(declare-fun res!44209 () Bool)

(declare-fun e!56003 () Bool)

(assert (=> b!85899 (=> (not res!44209) (not e!56003))))

(declare-fun size!2167 (LongMapFixedSize!756) (_ BitVec 32))

(assert (=> b!85899 (= res!44209 (bvsge (size!2167 newMap!16) (_size!427 newMap!16)))))

(declare-fun d!22269 () Bool)

(declare-fun res!44212 () Bool)

(assert (=> d!22269 (=> (not res!44212) (not e!56003))))

(assert (=> d!22269 (= res!44212 (validMask!0 (mask!6366 newMap!16)))))

(assert (=> d!22269 (= (simpleValid!58 newMap!16) e!56003)))

(declare-fun b!85900 () Bool)

(declare-fun res!44211 () Bool)

(assert (=> b!85900 (=> (not res!44211) (not e!56003))))

(assert (=> b!85900 (= res!44211 (= (size!2167 newMap!16) (bvadd (_size!427 newMap!16) (bvsdiv (bvadd (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!85898 () Bool)

(declare-fun res!44210 () Bool)

(assert (=> b!85898 (=> (not res!44210) (not e!56003))))

(assert (=> b!85898 (= res!44210 (and (= (size!2164 (_values!2321 newMap!16)) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001)) (= (size!2163 (_keys!4010 newMap!16)) (size!2164 (_values!2321 newMap!16))) (bvsge (_size!427 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!427 newMap!16) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!85901 () Bool)

(assert (=> b!85901 (= e!56003 (and (bvsge (extraKeys!2177 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!427 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!22269 res!44212) b!85898))

(assert (= (and b!85898 res!44210) b!85899))

(assert (= (and b!85899 res!44209) b!85900))

(assert (= (and b!85900 res!44211) b!85901))

(declare-fun m!90589 () Bool)

(assert (=> b!85899 m!90589))

(assert (=> d!22269 m!90385))

(assert (=> b!85900 m!90589))

(assert (=> d!22139 d!22269))

(declare-fun d!22271 () Bool)

(declare-fun lt!40717 () Bool)

(assert (=> d!22271 (= lt!40717 (select (content!89 (toList!746 lt!40568)) lt!40324))))

(declare-fun e!56004 () Bool)

(assert (=> d!22271 (= lt!40717 e!56004)))

(declare-fun res!44213 () Bool)

(assert (=> d!22271 (=> (not res!44213) (not e!56004))))

(assert (=> d!22271 (= res!44213 ((_ is Cons!1515) (toList!746 lt!40568)))))

(assert (=> d!22271 (= (contains!754 (toList!746 lt!40568) lt!40324) lt!40717)))

(declare-fun b!85902 () Bool)

(declare-fun e!56005 () Bool)

(assert (=> b!85902 (= e!56004 e!56005)))

(declare-fun res!44214 () Bool)

(assert (=> b!85902 (=> res!44214 e!56005)))

(assert (=> b!85902 (= res!44214 (= (h!2106 (toList!746 lt!40568)) lt!40324))))

(declare-fun b!85903 () Bool)

(assert (=> b!85903 (= e!56005 (contains!754 (t!5240 (toList!746 lt!40568)) lt!40324))))

(assert (= (and d!22271 res!44213) b!85902))

(assert (= (and b!85902 (not res!44214)) b!85903))

(declare-fun m!90591 () Bool)

(assert (=> d!22271 m!90591))

(declare-fun m!90593 () Bool)

(assert (=> d!22271 m!90593))

(declare-fun m!90595 () Bool)

(assert (=> b!85903 m!90595))

(assert (=> b!85619 d!22271))

(declare-fun d!22273 () Bool)

(assert (=> d!22273 (= (apply!82 lt!40450 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3627 () Bool)

(assert (= bs!3627 d!22273))

(declare-fun m!90597 () Bool)

(assert (=> bs!3627 m!90597))

(assert (=> bs!3627 m!90597))

(declare-fun m!90599 () Bool)

(assert (=> bs!3627 m!90599))

(assert (=> b!85445 d!22273))

(declare-fun d!22275 () Bool)

(declare-fun isEmpty!336 (List!1519) Bool)

(assert (=> d!22275 (= (isEmpty!335 lt!40584) (isEmpty!336 (toList!746 lt!40584)))))

(declare-fun bs!3628 () Bool)

(assert (= bs!3628 d!22275))

(declare-fun m!90601 () Bool)

(assert (=> bs!3628 m!90601))

(assert (=> b!85650 d!22275))

(declare-fun d!22277 () Bool)

(declare-fun lt!40718 () Bool)

(assert (=> d!22277 (= lt!40718 (select (content!89 (toList!746 lt!40564)) lt!40318))))

(declare-fun e!56006 () Bool)

(assert (=> d!22277 (= lt!40718 e!56006)))

(declare-fun res!44215 () Bool)

(assert (=> d!22277 (=> (not res!44215) (not e!56006))))

(assert (=> d!22277 (= res!44215 ((_ is Cons!1515) (toList!746 lt!40564)))))

(assert (=> d!22277 (= (contains!754 (toList!746 lt!40564) lt!40318) lt!40718)))

(declare-fun b!85904 () Bool)

(declare-fun e!56007 () Bool)

(assert (=> b!85904 (= e!56006 e!56007)))

(declare-fun res!44216 () Bool)

(assert (=> b!85904 (=> res!44216 e!56007)))

(assert (=> b!85904 (= res!44216 (= (h!2106 (toList!746 lt!40564)) lt!40318))))

(declare-fun b!85905 () Bool)

(assert (=> b!85905 (= e!56007 (contains!754 (t!5240 (toList!746 lt!40564)) lt!40318))))

(assert (= (and d!22277 res!44215) b!85904))

(assert (= (and b!85904 (not res!44216)) b!85905))

(declare-fun m!90603 () Bool)

(assert (=> d!22277 m!90603))

(declare-fun m!90605 () Bool)

(assert (=> d!22277 m!90605))

(declare-fun m!90607 () Bool)

(assert (=> b!85905 m!90607))

(assert (=> b!85617 d!22277))

(assert (=> bm!8145 d!22255))

(declare-fun d!22279 () Bool)

(declare-fun e!56009 () Bool)

(assert (=> d!22279 e!56009))

(declare-fun res!44217 () Bool)

(assert (=> d!22279 (=> res!44217 e!56009)))

(declare-fun lt!40719 () Bool)

(assert (=> d!22279 (= res!44217 (not lt!40719))))

(declare-fun lt!40720 () Bool)

(assert (=> d!22279 (= lt!40719 lt!40720)))

(declare-fun lt!40722 () Unit!2517)

(declare-fun e!56008 () Unit!2517)

(assert (=> d!22279 (= lt!40722 e!56008)))

(declare-fun c!13971 () Bool)

(assert (=> d!22279 (= c!13971 lt!40720)))

(assert (=> d!22279 (= lt!40720 (containsKey!144 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22279 (= (contains!753 lt!40450 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40719)))

(declare-fun b!85906 () Bool)

(declare-fun lt!40721 () Unit!2517)

(assert (=> b!85906 (= e!56008 lt!40721)))

(assert (=> b!85906 (= lt!40721 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85906 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85907 () Bool)

(declare-fun Unit!2534 () Unit!2517)

(assert (=> b!85907 (= e!56008 Unit!2534)))

(declare-fun b!85908 () Bool)

(assert (=> b!85908 (= e!56009 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22279 c!13971) b!85906))

(assert (= (and d!22279 (not c!13971)) b!85907))

(assert (= (and d!22279 (not res!44217)) b!85908))

(declare-fun m!90609 () Bool)

(assert (=> d!22279 m!90609))

(declare-fun m!90611 () Bool)

(assert (=> b!85906 m!90611))

(declare-fun m!90613 () Bool)

(assert (=> b!85906 m!90613))

(assert (=> b!85906 m!90613))

(declare-fun m!90615 () Bool)

(assert (=> b!85906 m!90615))

(assert (=> b!85908 m!90613))

(assert (=> b!85908 m!90613))

(assert (=> b!85908 m!90615))

(assert (=> bm!8069 d!22279))

(declare-fun d!22281 () Bool)

(assert (=> d!22281 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40725 () Unit!2517)

(declare-fun choose!503 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 V!3027 Int) Unit!2517)

(assert (=> d!22281 (= lt!40725 (choose!503 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40541 (zeroValue!2230 newMap!16) lt!40326 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22281 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22281 (= (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40541 (zeroValue!2230 newMap!16) lt!40326 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)) lt!40725)))

(declare-fun bs!3629 () Bool)

(assert (= bs!3629 d!22281))

(declare-fun m!90617 () Bool)

(assert (=> bs!3629 m!90617))

(assert (=> bs!3629 m!90385))

(declare-fun m!90619 () Bool)

(assert (=> bs!3629 m!90619))

(assert (=> bs!3629 m!89981))

(assert (=> bs!3629 m!89981))

(declare-fun m!90621 () Bool)

(assert (=> bs!3629 m!90621))

(assert (=> b!85600 d!22281))

(declare-fun d!22283 () Bool)

(assert (=> d!22283 (= (map!1188 (_2!1109 lt!40519)) (getCurrentListMap!439 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))))))

(declare-fun bs!3630 () Bool)

(assert (= bs!3630 d!22283))

(declare-fun m!90623 () Bool)

(assert (=> bs!3630 m!90623))

(assert (=> bm!8123 d!22283))

(declare-fun b!85917 () Bool)

(declare-fun e!56018 () Bool)

(declare-fun call!8177 () Bool)

(assert (=> b!85917 (= e!56018 call!8177)))

(declare-fun b!85918 () Bool)

(declare-fun e!56016 () Bool)

(assert (=> b!85918 (= e!56018 e!56016)))

(declare-fun lt!40734 () (_ BitVec 64))

(assert (=> b!85918 (= lt!40734 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40733 () Unit!2517)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4029 (_ BitVec 64) (_ BitVec 32)) Unit!2517)

(assert (=> b!85918 (= lt!40733 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 newMap!16) lt!40734 #b00000000000000000000000000000000))))

(assert (=> b!85918 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40734 #b00000000000000000000000000000000)))

(declare-fun lt!40732 () Unit!2517)

(assert (=> b!85918 (= lt!40732 lt!40733)))

(declare-fun res!44222 () Bool)

(assert (=> b!85918 (= res!44222 (= (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!85918 (=> (not res!44222) (not e!56016))))

(declare-fun b!85919 () Bool)

(assert (=> b!85919 (= e!56016 call!8177)))

(declare-fun d!22285 () Bool)

(declare-fun res!44223 () Bool)

(declare-fun e!56017 () Bool)

(assert (=> d!22285 (=> res!44223 e!56017)))

(assert (=> d!22285 (= res!44223 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22285 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 newMap!16) (mask!6366 newMap!16)) e!56017)))

(declare-fun bm!8174 () Bool)

(assert (=> bm!8174 (= call!8177 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85920 () Bool)

(assert (=> b!85920 (= e!56017 e!56018)))

(declare-fun c!13974 () Bool)

(assert (=> b!85920 (= c!13974 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22285 (not res!44223)) b!85920))

(assert (= (and b!85920 c!13974) b!85918))

(assert (= (and b!85920 (not c!13974)) b!85917))

(assert (= (and b!85918 res!44222) b!85919))

(assert (= (or b!85919 b!85917) bm!8174))

(assert (=> b!85918 m!90363))

(declare-fun m!90625 () Bool)

(assert (=> b!85918 m!90625))

(declare-fun m!90627 () Bool)

(assert (=> b!85918 m!90627))

(assert (=> b!85918 m!90363))

(declare-fun m!90629 () Bool)

(assert (=> b!85918 m!90629))

(declare-fun m!90631 () Bool)

(assert (=> bm!8174 m!90631))

(assert (=> b!85920 m!90363))

(assert (=> b!85920 m!90363))

(assert (=> b!85920 m!90365))

(assert (=> b!85471 d!22285))

(assert (=> d!22173 d!22177))

(declare-fun d!22287 () Bool)

(assert (=> d!22287 (not (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!22287 true))

(declare-fun _$68!73 () Unit!2517)

(assert (=> d!22287 (= (choose!68 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517)) _$68!73)))

(declare-fun bs!3631 () Bool)

(assert (= bs!3631 d!22287))

(assert (=> bs!3631 m!89857))

(assert (=> bs!3631 m!89885))

(assert (=> d!22173 d!22287))

(declare-fun call!8186 () SeekEntryResult!243)

(declare-fun bm!8183 () Bool)

(assert (=> bm!8183 (= call!8186 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!85955 () Bool)

(declare-fun e!56039 () Bool)

(declare-fun e!56041 () Bool)

(assert (=> b!85955 (= e!56039 e!56041)))

(declare-fun res!44245 () Bool)

(declare-fun call!8189 () Bool)

(assert (=> b!85955 (= res!44245 call!8189)))

(assert (=> b!85955 (=> (not res!44245) (not e!56041))))

(declare-fun b!85956 () Bool)

(declare-fun res!44249 () Bool)

(declare-fun e!56035 () Bool)

(assert (=> b!85956 (=> (not res!44249) (not e!56035))))

(assert (=> b!85956 (= res!44249 call!8189)))

(declare-fun e!56038 () Bool)

(assert (=> b!85956 (= e!56038 e!56035)))

(declare-fun b!85957 () Bool)

(declare-fun c!13984 () Bool)

(declare-fun lt!40795 () SeekEntryResult!243)

(assert (=> b!85957 (= c!13984 ((_ is MissingVacant!243) lt!40795))))

(assert (=> b!85957 (= e!56038 e!56039)))

(declare-fun d!22289 () Bool)

(declare-fun e!56040 () Bool)

(assert (=> d!22289 e!56040))

(declare-fun res!44243 () Bool)

(assert (=> d!22289 (=> (not res!44243) (not e!56040))))

(declare-fun lt!40816 () tuple2!2196)

(assert (=> d!22289 (= res!44243 (_1!1109 lt!40816))))

(assert (=> d!22289 (= lt!40816 (tuple2!2197 true (LongMapFixedSize!757 (defaultEntry!2338 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd (_size!427 newMap!16) #b00000000000000000000000000000001) (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (_vacant!427 newMap!16))))))

(declare-fun lt!40811 () Unit!2517)

(declare-fun lt!40798 () Unit!2517)

(assert (=> d!22289 (= lt!40811 lt!40798)))

(declare-fun lt!40799 () array!4029)

(declare-fun lt!40820 () array!4031)

(assert (=> d!22289 (contains!753 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))

(assert (=> d!22289 (= lt!40798 (lemmaValidKeyInArrayIsInListMap!92 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22289 (= lt!40820 (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))))

(assert (=> d!22289 (= lt!40799 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun lt!40823 () Unit!2517)

(declare-fun lt!40817 () Unit!2517)

(assert (=> d!22289 (= lt!40823 lt!40817)))

(declare-fun lt!40810 () array!4029)

(assert (=> d!22289 (= (arrayCountValidKeys!0 lt!40810 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4029 (_ BitVec 32)) Unit!2517)

(assert (=> d!22289 (= lt!40817 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40810 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))

(assert (=> d!22289 (= lt!40810 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun lt!40805 () Unit!2517)

(declare-fun lt!40796 () Unit!2517)

(assert (=> d!22289 (= lt!40805 lt!40796)))

(declare-fun lt!40824 () array!4029)

(assert (=> d!22289 (arrayContainsKey!0 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!22289 (= lt!40796 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))

(assert (=> d!22289 (= lt!40824 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun lt!40819 () Unit!2517)

(declare-fun lt!40808 () Unit!2517)

(assert (=> d!22289 (= lt!40819 lt!40808)))

(assert (=> d!22289 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (getCurrentListMap!439 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!19 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2517)

(assert (=> d!22289 (= lt!40808 (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40802 () Unit!2517)

(declare-fun lt!40801 () Unit!2517)

(assert (=> d!22289 (= lt!40802 lt!40801)))

(assert (=> d!22289 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (mask!6366 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4029 (_ BitVec 32) (_ BitVec 32)) Unit!2517)

(assert (=> d!22289 (= lt!40801 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (mask!6366 newMap!16)))))

(declare-fun lt!40809 () Unit!2517)

(declare-fun lt!40821 () Unit!2517)

(assert (=> d!22289 (= lt!40809 lt!40821)))

(assert (=> d!22289 (= (arrayCountValidKeys!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4029 (_ BitVec 32) (_ BitVec 64)) Unit!2517)

(assert (=> d!22289 (= lt!40821 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4010 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!40815 () Unit!2517)

(declare-fun lt!40803 () Unit!2517)

(assert (=> d!22289 (= lt!40815 lt!40803)))

(declare-fun lt!40797 () List!1520)

(declare-fun lt!40812 () (_ BitVec 32))

(assert (=> d!22289 (arrayNoDuplicates!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) lt!40812 lt!40797)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4029 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1520) Unit!2517)

(assert (=> d!22289 (= lt!40803 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) lt!40812 lt!40797))))

(assert (=> d!22289 (= lt!40797 Nil!1517)))

(assert (=> d!22289 (= lt!40812 #b00000000000000000000000000000000)))

(declare-fun lt!40807 () Unit!2517)

(declare-fun e!56042 () Unit!2517)

(assert (=> d!22289 (= lt!40807 e!56042)))

(declare-fun c!13985 () Bool)

(assert (=> d!22289 (= c!13985 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!40814 () Unit!2517)

(declare-fun e!56036 () Unit!2517)

(assert (=> d!22289 (= lt!40814 e!56036)))

(declare-fun c!13986 () Bool)

(assert (=> d!22289 (= c!13986 (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22289 (valid!323 newMap!16)))

(assert (=> d!22289 (= (updateHelperNewKey!31 newMap!16 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))) lt!40816)))

(declare-fun b!85958 () Bool)

(declare-fun Unit!2535 () Unit!2517)

(assert (=> b!85958 (= e!56042 Unit!2535)))

(declare-fun lt!40818 () Unit!2517)

(declare-fun lemmaArrayContainsKeyThenInListMap!19 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2517)

(assert (=> b!85958 (= lt!40818 (lemmaArrayContainsKeyThenInListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> b!85958 (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))

(declare-fun lt!40822 () Unit!2517)

(assert (=> b!85958 (= lt!40822 lt!40818)))

(assert (=> b!85958 false))

(declare-fun b!85959 () Bool)

(declare-fun res!44246 () Bool)

(assert (=> b!85959 (=> (not res!44246) (not e!56035))))

(assert (=> b!85959 (= res!44246 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!40795)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!40800 () SeekEntryResult!243)

(declare-fun e!56037 () Bool)

(declare-fun b!85960 () Bool)

(assert (=> b!85960 (= e!56037 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40800)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85961 () Bool)

(declare-fun call!8188 () Bool)

(assert (=> b!85961 (= e!56041 (not call!8188))))

(declare-fun b!85962 () Bool)

(declare-fun res!44242 () Bool)

(assert (=> b!85962 (=> (not res!44242) (not e!56040))))

(assert (=> b!85962 (= res!44242 (contains!753 (map!1188 (_2!1109 lt!40816)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85963 () Bool)

(assert (=> b!85963 (= e!56035 (not call!8188))))

(declare-fun b!85964 () Bool)

(declare-fun res!44248 () Bool)

(declare-fun call!8187 () Bool)

(assert (=> b!85964 (= res!44248 call!8187)))

(assert (=> b!85964 (=> (not res!44248) (not e!56037))))

(declare-fun bm!8184 () Bool)

(declare-fun c!13983 () Bool)

(assert (=> bm!8184 (= call!8187 (inRange!0 (ite c!13986 (index!3110 lt!40800) (ite c!13983 (index!3109 lt!40795) (index!3112 lt!40795))) (mask!6366 newMap!16)))))

(declare-fun b!85965 () Bool)

(assert (=> b!85965 (= e!56040 (= (map!1188 (_2!1109 lt!40816)) (+!110 (map!1188 newMap!16) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!85966 () Bool)

(declare-fun res!44247 () Bool)

(assert (=> b!85966 (=> (not res!44247) (not e!56040))))

(assert (=> b!85966 (= res!44247 (valid!323 (_2!1109 lt!40816)))))

(declare-fun b!85967 () Bool)

(declare-fun Unit!2536 () Unit!2517)

(assert (=> b!85967 (= e!56042 Unit!2536)))

(declare-fun b!85968 () Bool)

(declare-fun Unit!2537 () Unit!2517)

(assert (=> b!85968 (= e!56036 Unit!2537)))

(declare-fun lt!40813 () Unit!2517)

(assert (=> b!85968 (= lt!40813 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> b!85968 (= lt!40800 call!8186)))

(declare-fun res!44244 () Bool)

(assert (=> b!85968 (= res!44244 ((_ is Found!243) lt!40800))))

(assert (=> b!85968 (=> (not res!44244) (not e!56037))))

(assert (=> b!85968 e!56037))

(declare-fun lt!40804 () Unit!2517)

(assert (=> b!85968 (= lt!40804 lt!40813)))

(assert (=> b!85968 false))

(declare-fun b!85969 () Bool)

(declare-fun lt!40806 () Unit!2517)

(assert (=> b!85969 (= e!56036 lt!40806)))

(assert (=> b!85969 (= lt!40806 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> b!85969 (= lt!40795 call!8186)))

(assert (=> b!85969 (= c!13983 ((_ is MissingZero!243) lt!40795))))

(assert (=> b!85969 e!56038))

(declare-fun bm!8185 () Bool)

(assert (=> bm!8185 (= call!8189 call!8187)))

(declare-fun b!85970 () Bool)

(declare-fun res!44250 () Bool)

(assert (=> b!85970 (= res!44250 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!40795)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85970 (=> (not res!44250) (not e!56041))))

(declare-fun b!85971 () Bool)

(assert (=> b!85971 (= e!56039 ((_ is Undefined!243) lt!40795))))

(declare-fun bm!8186 () Bool)

(assert (=> bm!8186 (= call!8188 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!22289 c!13986) b!85968))

(assert (= (and d!22289 (not c!13986)) b!85969))

(assert (= (and b!85968 res!44244) b!85964))

(assert (= (and b!85964 res!44248) b!85960))

(assert (= (and b!85969 c!13983) b!85956))

(assert (= (and b!85969 (not c!13983)) b!85957))

(assert (= (and b!85956 res!44249) b!85959))

(assert (= (and b!85959 res!44246) b!85963))

(assert (= (and b!85957 c!13984) b!85955))

(assert (= (and b!85957 (not c!13984)) b!85971))

(assert (= (and b!85955 res!44245) b!85970))

(assert (= (and b!85970 res!44250) b!85961))

(assert (= (or b!85956 b!85955) bm!8185))

(assert (= (or b!85963 b!85961) bm!8186))

(assert (= (or b!85964 bm!8185) bm!8184))

(assert (= (or b!85968 b!85969) bm!8183))

(assert (= (and d!22289 c!13985) b!85958))

(assert (= (and d!22289 (not c!13985)) b!85967))

(assert (= (and d!22289 res!44243) b!85966))

(assert (= (and b!85966 res!44247) b!85962))

(assert (= (and b!85962 res!44242) b!85965))

(declare-fun m!90633 () Bool)

(assert (=> b!85959 m!90633))

(declare-fun m!90635 () Bool)

(assert (=> bm!8184 m!90635))

(declare-fun m!90637 () Bool)

(assert (=> b!85965 m!90637))

(assert (=> b!85965 m!89871))

(assert (=> b!85965 m!89871))

(declare-fun m!90639 () Bool)

(assert (=> b!85965 m!90639))

(declare-fun m!90641 () Bool)

(assert (=> b!85970 m!90641))

(assert (=> b!85969 m!89857))

(assert (=> b!85969 m!90103))

(declare-fun m!90643 () Bool)

(assert (=> d!22289 m!90643))

(declare-fun m!90645 () Bool)

(assert (=> d!22289 m!90645))

(assert (=> d!22289 m!89857))

(assert (=> d!22289 m!90057))

(declare-fun m!90647 () Bool)

(assert (=> d!22289 m!90647))

(assert (=> d!22289 m!89857))

(declare-fun m!90649 () Bool)

(assert (=> d!22289 m!90649))

(declare-fun m!90651 () Bool)

(assert (=> d!22289 m!90651))

(declare-fun m!90653 () Bool)

(assert (=> d!22289 m!90653))

(declare-fun m!90655 () Bool)

(assert (=> d!22289 m!90655))

(assert (=> d!22289 m!89857))

(declare-fun m!90657 () Bool)

(assert (=> d!22289 m!90657))

(declare-fun m!90659 () Bool)

(assert (=> d!22289 m!90659))

(assert (=> d!22289 m!89981))

(assert (=> d!22289 m!89857))

(declare-fun m!90661 () Bool)

(assert (=> d!22289 m!90661))

(declare-fun m!90663 () Bool)

(assert (=> d!22289 m!90663))

(assert (=> d!22289 m!89981))

(assert (=> d!22289 m!89857))

(assert (=> d!22289 m!90077))

(assert (=> d!22289 m!89857))

(declare-fun m!90665 () Bool)

(assert (=> d!22289 m!90665))

(assert (=> d!22289 m!89981))

(declare-fun m!90667 () Bool)

(assert (=> d!22289 m!90667))

(assert (=> d!22289 m!89857))

(declare-fun m!90669 () Bool)

(assert (=> d!22289 m!90669))

(declare-fun m!90671 () Bool)

(assert (=> d!22289 m!90671))

(assert (=> d!22289 m!90039))

(assert (=> d!22289 m!89855))

(declare-fun m!90673 () Bool)

(assert (=> d!22289 m!90673))

(declare-fun m!90675 () Bool)

(assert (=> d!22289 m!90675))

(assert (=> d!22289 m!90663))

(assert (=> d!22289 m!90647))

(declare-fun m!90677 () Bool)

(assert (=> d!22289 m!90677))

(assert (=> d!22289 m!89857))

(declare-fun m!90679 () Bool)

(assert (=> d!22289 m!90679))

(assert (=> bm!8183 m!89857))

(assert (=> bm!8183 m!90067))

(declare-fun m!90681 () Bool)

(assert (=> b!85966 m!90681))

(assert (=> b!85958 m!89857))

(declare-fun m!90683 () Bool)

(assert (=> b!85958 m!90683))

(assert (=> b!85958 m!89981))

(assert (=> b!85958 m!89981))

(assert (=> b!85958 m!89857))

(assert (=> b!85958 m!90077))

(assert (=> b!85962 m!90637))

(assert (=> b!85962 m!90637))

(assert (=> b!85962 m!89857))

(declare-fun m!90685 () Bool)

(assert (=> b!85962 m!90685))

(declare-fun m!90687 () Bool)

(assert (=> b!85960 m!90687))

(assert (=> bm!8186 m!89857))

(assert (=> bm!8186 m!90057))

(assert (=> b!85968 m!89857))

(assert (=> b!85968 m!90085))

(assert (=> bm!8140 d!22289))

(declare-fun d!22291 () Bool)

(assert (=> d!22291 (= (apply!82 lt!40450 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3632 () Bool)

(assert (= bs!3632 d!22291))

(assert (=> bs!3632 m!90613))

(assert (=> bs!3632 m!90613))

(declare-fun m!90689 () Bool)

(assert (=> bs!3632 m!90689))

(assert (=> b!85462 d!22291))

(declare-fun b!85972 () Bool)

(declare-fun e!56045 () Bool)

(declare-fun call!8190 () Bool)

(assert (=> b!85972 (= e!56045 call!8190)))

(declare-fun e!56046 () Bool)

(declare-fun b!85973 () Bool)

(assert (=> b!85973 (= e!56046 (contains!755 (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85974 () Bool)

(assert (=> b!85974 (= e!56045 call!8190)))

(declare-fun c!13987 () Bool)

(declare-fun bm!8187 () Bool)

(assert (=> bm!8187 (= call!8190 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13987 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517))))))

(declare-fun d!22293 () Bool)

(declare-fun res!44251 () Bool)

(declare-fun e!56043 () Bool)

(assert (=> d!22293 (=> res!44251 e!56043)))

(assert (=> d!22293 (= res!44251 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22293 (= (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) e!56043)))

(declare-fun b!85975 () Bool)

(declare-fun e!56044 () Bool)

(assert (=> b!85975 (= e!56044 e!56045)))

(assert (=> b!85975 (= c!13987 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85976 () Bool)

(assert (=> b!85976 (= e!56043 e!56044)))

(declare-fun res!44252 () Bool)

(assert (=> b!85976 (=> (not res!44252) (not e!56044))))

(assert (=> b!85976 (= res!44252 (not e!56046))))

(declare-fun res!44253 () Bool)

(assert (=> b!85976 (=> (not res!44253) (not e!56046))))

(assert (=> b!85976 (= res!44253 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!22293 (not res!44251)) b!85976))

(assert (= (and b!85976 res!44253) b!85973))

(assert (= (and b!85976 res!44252) b!85975))

(assert (= (and b!85975 c!13987) b!85972))

(assert (= (and b!85975 (not c!13987)) b!85974))

(assert (= (or b!85972 b!85974) bm!8187))

(declare-fun m!90691 () Bool)

(assert (=> b!85973 m!90691))

(assert (=> b!85973 m!90691))

(declare-fun m!90693 () Bool)

(assert (=> b!85973 m!90693))

(assert (=> bm!8187 m!90691))

(declare-fun m!90695 () Bool)

(assert (=> bm!8187 m!90695))

(assert (=> b!85975 m!90691))

(assert (=> b!85975 m!90691))

(declare-fun m!90697 () Bool)

(assert (=> b!85975 m!90697))

(assert (=> b!85976 m!90691))

(assert (=> b!85976 m!90691))

(assert (=> b!85976 m!90697))

(assert (=> bm!8148 d!22293))

(declare-fun d!22295 () Bool)

(assert (=> d!22295 (isDefined!93 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!40827 () Unit!2517)

(declare-fun choose!504 (List!1519 (_ BitVec 64)) Unit!2517)

(assert (=> d!22295 (= lt!40827 (choose!504 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!56049 () Bool)

(assert (=> d!22295 e!56049))

(declare-fun res!44256 () Bool)

(assert (=> d!22295 (=> (not res!44256) (not e!56049))))

(assert (=> d!22295 (= res!44256 (isStrictlySorted!298 (toList!746 lt!40315)))))

(assert (=> d!22295 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!40827)))

(declare-fun b!85979 () Bool)

(assert (=> b!85979 (= e!56049 (containsKey!144 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22295 res!44256) b!85979))

(assert (=> d!22295 m!89857))

(assert (=> d!22295 m!90049))

(assert (=> d!22295 m!90049))

(assert (=> d!22295 m!90051))

(assert (=> d!22295 m!89857))

(declare-fun m!90699 () Bool)

(assert (=> d!22295 m!90699))

(declare-fun m!90701 () Bool)

(assert (=> d!22295 m!90701))

(assert (=> b!85979 m!89857))

(assert (=> b!85979 m!90045))

(assert (=> b!85479 d!22295))

(declare-fun d!22297 () Bool)

(declare-fun isEmpty!337 (Option!146) Bool)

(assert (=> d!22297 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun bs!3633 () Bool)

(assert (= bs!3633 d!22297))

(assert (=> bs!3633 m!90049))

(declare-fun m!90703 () Bool)

(assert (=> bs!3633 m!90703))

(assert (=> b!85479 d!22297))

(declare-fun b!85980 () Bool)

(declare-fun e!56050 () Option!146)

(assert (=> b!85980 (= e!56050 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40315)))))))

(declare-fun d!22299 () Bool)

(declare-fun c!13988 () Bool)

(assert (=> d!22299 (= c!13988 (and ((_ is Cons!1515) (toList!746 lt!40315)) (= (_1!1110 (h!2106 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22299 (= (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56050)))

(declare-fun b!85983 () Bool)

(declare-fun e!56051 () Option!146)

(assert (=> b!85983 (= e!56051 None!144)))

(declare-fun b!85982 () Bool)

(assert (=> b!85982 (= e!56051 (getValueByKey!140 (t!5240 (toList!746 lt!40315)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85981 () Bool)

(assert (=> b!85981 (= e!56050 e!56051)))

(declare-fun c!13989 () Bool)

(assert (=> b!85981 (= c!13989 (and ((_ is Cons!1515) (toList!746 lt!40315)) (not (= (_1!1110 (h!2106 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(assert (= (and d!22299 c!13988) b!85980))

(assert (= (and d!22299 (not c!13988)) b!85981))

(assert (= (and b!85981 c!13989) b!85982))

(assert (= (and b!85981 (not c!13989)) b!85983))

(assert (=> b!85982 m!89857))

(declare-fun m!90705 () Bool)

(assert (=> b!85982 m!90705))

(assert (=> b!85479 d!22299))

(declare-fun d!22301 () Bool)

(declare-fun lt!40830 () Bool)

(declare-fun content!90 (List!1520) (InoxSet (_ BitVec 64)))

(assert (=> d!22301 (= lt!40830 (select (content!90 Nil!1517) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!56057 () Bool)

(assert (=> d!22301 (= lt!40830 e!56057)))

(declare-fun res!44262 () Bool)

(assert (=> d!22301 (=> (not res!44262) (not e!56057))))

(assert (=> d!22301 (= res!44262 ((_ is Cons!1516) Nil!1517))))

(assert (=> d!22301 (= (contains!755 Nil!1517 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!40830)))

(declare-fun b!85988 () Bool)

(declare-fun e!56056 () Bool)

(assert (=> b!85988 (= e!56057 e!56056)))

(declare-fun res!44261 () Bool)

(assert (=> b!85988 (=> res!44261 e!56056)))

(assert (=> b!85988 (= res!44261 (= (h!2107 Nil!1517) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!85989 () Bool)

(assert (=> b!85989 (= e!56056 (contains!755 (t!5241 Nil!1517) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22301 res!44262) b!85988))

(assert (= (and b!85988 (not res!44261)) b!85989))

(declare-fun m!90707 () Bool)

(assert (=> d!22301 m!90707))

(assert (=> d!22301 m!89857))

(declare-fun m!90709 () Bool)

(assert (=> d!22301 m!90709))

(assert (=> b!85989 m!89857))

(declare-fun m!90711 () Bool)

(assert (=> b!85989 m!90711))

(assert (=> b!85691 d!22301))

(declare-fun d!22303 () Bool)

(declare-fun e!56058 () Bool)

(assert (=> d!22303 e!56058))

(declare-fun res!44263 () Bool)

(assert (=> d!22303 (=> (not res!44263) (not e!56058))))

(declare-fun lt!40833 () ListLongMap!1461)

(assert (=> d!22303 (= res!44263 (contains!753 lt!40833 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun lt!40832 () List!1519)

(assert (=> d!22303 (= lt!40833 (ListLongMap!1462 lt!40832))))

(declare-fun lt!40834 () Unit!2517)

(declare-fun lt!40831 () Unit!2517)

(assert (=> d!22303 (= lt!40834 lt!40831)))

(assert (=> d!22303 (= (getValueByKey!140 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (Some!145 (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22303 (= lt!40831 (lemmaContainsTupThenGetReturnValue!57 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22303 (= lt!40832 (insertStrictlySorted!60 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22303 (= (+!110 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40833)))

(declare-fun b!85990 () Bool)

(declare-fun res!44264 () Bool)

(assert (=> b!85990 (=> (not res!44264) (not e!56058))))

(assert (=> b!85990 (= res!44264 (= (getValueByKey!140 (toList!746 lt!40833) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (Some!145 (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun b!85991 () Bool)

(assert (=> b!85991 (= e!56058 (contains!754 (toList!746 lt!40833) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (= (and d!22303 res!44263) b!85990))

(assert (= (and b!85990 res!44264) b!85991))

(declare-fun m!90713 () Bool)

(assert (=> d!22303 m!90713))

(declare-fun m!90715 () Bool)

(assert (=> d!22303 m!90715))

(declare-fun m!90717 () Bool)

(assert (=> d!22303 m!90717))

(declare-fun m!90719 () Bool)

(assert (=> d!22303 m!90719))

(declare-fun m!90721 () Bool)

(assert (=> b!85990 m!90721))

(declare-fun m!90723 () Bool)

(assert (=> b!85991 m!90723))

(assert (=> bm!8065 d!22303))

(declare-fun d!22305 () Bool)

(declare-fun e!56060 () Bool)

(assert (=> d!22305 e!56060))

(declare-fun res!44265 () Bool)

(assert (=> d!22305 (=> res!44265 e!56060)))

(declare-fun lt!40835 () Bool)

(assert (=> d!22305 (= res!44265 (not lt!40835))))

(declare-fun lt!40836 () Bool)

(assert (=> d!22305 (= lt!40835 lt!40836)))

(declare-fun lt!40838 () Unit!2517)

(declare-fun e!56059 () Unit!2517)

(assert (=> d!22305 (= lt!40838 e!56059)))

(declare-fun c!13990 () Bool)

(assert (=> d!22305 (= c!13990 lt!40836)))

(assert (=> d!22305 (= lt!40836 (containsKey!144 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22305 (= (contains!753 lt!40584 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40835)))

(declare-fun b!85992 () Bool)

(declare-fun lt!40837 () Unit!2517)

(assert (=> b!85992 (= e!56059 lt!40837)))

(assert (=> b!85992 (= lt!40837 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85992 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85993 () Bool)

(declare-fun Unit!2538 () Unit!2517)

(assert (=> b!85993 (= e!56059 Unit!2538)))

(declare-fun b!85994 () Bool)

(assert (=> b!85994 (= e!56060 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22305 c!13990) b!85992))

(assert (= (and d!22305 (not c!13990)) b!85993))

(assert (= (and d!22305 (not res!44265)) b!85994))

(declare-fun m!90725 () Bool)

(assert (=> d!22305 m!90725))

(declare-fun m!90727 () Bool)

(assert (=> b!85992 m!90727))

(declare-fun m!90729 () Bool)

(assert (=> b!85992 m!90729))

(assert (=> b!85992 m!90729))

(declare-fun m!90731 () Bool)

(assert (=> b!85992 m!90731))

(assert (=> b!85994 m!90729))

(assert (=> b!85994 m!90729))

(assert (=> b!85994 m!90731))

(assert (=> b!85654 d!22305))

(declare-fun d!22307 () Bool)

(declare-fun e!56061 () Bool)

(assert (=> d!22307 e!56061))

(declare-fun res!44266 () Bool)

(assert (=> d!22307 (=> (not res!44266) (not e!56061))))

(declare-fun lt!40841 () ListLongMap!1461)

(assert (=> d!22307 (= res!44266 (contains!753 lt!40841 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun lt!40840 () List!1519)

(assert (=> d!22307 (= lt!40841 (ListLongMap!1462 lt!40840))))

(declare-fun lt!40842 () Unit!2517)

(declare-fun lt!40839 () Unit!2517)

(assert (=> d!22307 (= lt!40842 lt!40839)))

(assert (=> d!22307 (= (getValueByKey!140 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (Some!145 (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22307 (= lt!40839 (lemmaContainsTupThenGetReturnValue!57 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22307 (= lt!40840 (insertStrictlySorted!60 (toList!746 e!55824) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22307 (= (+!110 e!55824 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!40841)))

(declare-fun b!85995 () Bool)

(declare-fun res!44267 () Bool)

(assert (=> b!85995 (=> (not res!44267) (not e!56061))))

(assert (=> b!85995 (= res!44267 (= (getValueByKey!140 (toList!746 lt!40841) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (Some!145 (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun b!85996 () Bool)

(assert (=> b!85996 (= e!56061 (contains!754 (toList!746 lt!40841) (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (= (and d!22307 res!44266) b!85995))

(assert (= (and b!85995 res!44267) b!85996))

(declare-fun m!90733 () Bool)

(assert (=> d!22307 m!90733))

(declare-fun m!90735 () Bool)

(assert (=> d!22307 m!90735))

(declare-fun m!90737 () Bool)

(assert (=> d!22307 m!90737))

(declare-fun m!90739 () Bool)

(assert (=> d!22307 m!90739))

(declare-fun m!90741 () Bool)

(assert (=> b!85995 m!90741))

(declare-fun m!90743 () Bool)

(assert (=> b!85996 m!90743))

(assert (=> bm!8124 d!22307))

(declare-fun d!22309 () Bool)

(assert (=> d!22309 (= (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85694 d!22309))

(declare-fun d!22311 () Bool)

(declare-fun lt!40843 () Bool)

(assert (=> d!22311 (= lt!40843 (select (content!89 (toList!746 lt!40596)) lt!40322))))

(declare-fun e!56062 () Bool)

(assert (=> d!22311 (= lt!40843 e!56062)))

(declare-fun res!44268 () Bool)

(assert (=> d!22311 (=> (not res!44268) (not e!56062))))

(assert (=> d!22311 (= res!44268 ((_ is Cons!1515) (toList!746 lt!40596)))))

(assert (=> d!22311 (= (contains!754 (toList!746 lt!40596) lt!40322) lt!40843)))

(declare-fun b!85997 () Bool)

(declare-fun e!56063 () Bool)

(assert (=> b!85997 (= e!56062 e!56063)))

(declare-fun res!44269 () Bool)

(assert (=> b!85997 (=> res!44269 e!56063)))

(assert (=> b!85997 (= res!44269 (= (h!2106 (toList!746 lt!40596)) lt!40322))))

(declare-fun b!85998 () Bool)

(assert (=> b!85998 (= e!56063 (contains!754 (t!5240 (toList!746 lt!40596)) lt!40322))))

(assert (= (and d!22311 res!44268) b!85997))

(assert (= (and b!85997 (not res!44269)) b!85998))

(declare-fun m!90745 () Bool)

(assert (=> d!22311 m!90745))

(declare-fun m!90747 () Bool)

(assert (=> d!22311 m!90747))

(declare-fun m!90749 () Bool)

(assert (=> b!85998 m!90749))

(assert (=> b!85657 d!22311))

(declare-fun d!22313 () Bool)

(declare-fun e!56066 () Bool)

(assert (=> d!22313 e!56066))

(declare-fun res!44272 () Bool)

(assert (=> d!22313 (=> (not res!44272) (not e!56066))))

(assert (=> d!22313 (= res!44272 (and (bvsge (index!3110 lt!40535) #b00000000000000000000000000000000) (bvslt (index!3110 lt!40535) (size!2163 (_keys!4010 newMap!16)))))))

(declare-fun lt!40846 () Unit!2517)

(declare-fun choose!505 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) Int) Unit!2517)

(assert (=> d!22313 (= lt!40846 (choose!505 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22313 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22313 (= (lemmaValidKeyInArrayIsInListMap!92 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (defaultEntry!2338 newMap!16)) lt!40846)))

(declare-fun b!86001 () Bool)

(assert (=> b!86001 (= e!56066 (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))

(assert (= (and d!22313 res!44272) b!86001))

(declare-fun m!90751 () Bool)

(assert (=> d!22313 m!90751))

(assert (=> d!22313 m!90385))

(declare-fun m!90753 () Bool)

(assert (=> b!86001 m!90753))

(assert (=> b!86001 m!90093))

(assert (=> b!86001 m!90753))

(assert (=> b!86001 m!90093))

(declare-fun m!90755 () Bool)

(assert (=> b!86001 m!90755))

(assert (=> b!85591 d!22313))

(declare-fun d!22315 () Bool)

(declare-fun e!56069 () Bool)

(assert (=> d!22315 e!56069))

(declare-fun res!44275 () Bool)

(assert (=> d!22315 (=> (not res!44275) (not e!56069))))

(assert (=> d!22315 (= res!44275 (and (bvsge (index!3110 lt!40535) #b00000000000000000000000000000000) (bvslt (index!3110 lt!40535) (size!2164 (_values!2321 newMap!16)))))))

(declare-fun lt!40849 () Unit!2517)

(declare-fun choose!506 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2517)

(assert (=> d!22315 (= lt!40849 (choose!506 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22315 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22315 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)) lt!40849)))

(declare-fun b!86004 () Bool)

(assert (=> b!86004 (= e!56069 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (getCurrentListMap!439 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))))

(assert (= (and d!22315 res!44275) b!86004))

(assert (=> d!22315 m!89857))

(declare-fun m!90757 () Bool)

(assert (=> d!22315 m!90757))

(assert (=> d!22315 m!90385))

(assert (=> b!86004 m!89981))

(assert (=> b!86004 m!89981))

(assert (=> b!86004 m!90667))

(assert (=> b!86004 m!90075))

(declare-fun m!90759 () Bool)

(assert (=> b!86004 m!90759))

(assert (=> b!85591 d!22315))

(declare-fun d!22317 () Bool)

(declare-fun e!56071 () Bool)

(assert (=> d!22317 e!56071))

(declare-fun res!44276 () Bool)

(assert (=> d!22317 (=> res!44276 e!56071)))

(declare-fun lt!40850 () Bool)

(assert (=> d!22317 (= res!44276 (not lt!40850))))

(declare-fun lt!40851 () Bool)

(assert (=> d!22317 (= lt!40850 lt!40851)))

(declare-fun lt!40853 () Unit!2517)

(declare-fun e!56070 () Unit!2517)

(assert (=> d!22317 (= lt!40853 e!56070)))

(declare-fun c!13991 () Bool)

(assert (=> d!22317 (= c!13991 lt!40851)))

(assert (=> d!22317 (= lt!40851 (containsKey!144 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22317 (= (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!40850)))

(declare-fun b!86005 () Bool)

(declare-fun lt!40852 () Unit!2517)

(assert (=> b!86005 (= e!56070 lt!40852)))

(assert (=> b!86005 (= lt!40852 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!86005 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!86006 () Bool)

(declare-fun Unit!2539 () Unit!2517)

(assert (=> b!86006 (= e!56070 Unit!2539)))

(declare-fun b!86007 () Bool)

(assert (=> b!86007 (= e!56071 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!22317 c!13991) b!86005))

(assert (= (and d!22317 (not c!13991)) b!86006))

(assert (= (and d!22317 (not res!44276)) b!86007))

(assert (=> d!22317 m!89857))

(declare-fun m!90761 () Bool)

(assert (=> d!22317 m!90761))

(assert (=> b!86005 m!89857))

(declare-fun m!90763 () Bool)

(assert (=> b!86005 m!90763))

(assert (=> b!86005 m!89857))

(declare-fun m!90765 () Bool)

(assert (=> b!86005 m!90765))

(assert (=> b!86005 m!90765))

(declare-fun m!90767 () Bool)

(assert (=> b!86005 m!90767))

(assert (=> b!86007 m!89857))

(assert (=> b!86007 m!90765))

(assert (=> b!86007 m!90765))

(assert (=> b!86007 m!90767))

(assert (=> b!85591 d!22317))

(declare-fun b!86008 () Bool)

(declare-fun c!13996 () Bool)

(assert (=> b!86008 (= c!13996 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56081 () ListLongMap!1461)

(declare-fun e!56082 () ListLongMap!1461)

(assert (=> b!86008 (= e!56081 e!56082)))

(declare-fun b!86009 () Bool)

(declare-fun res!44279 () Bool)

(declare-fun e!56074 () Bool)

(assert (=> b!86009 (=> (not res!44279) (not e!56074))))

(declare-fun e!56079 () Bool)

(assert (=> b!86009 (= res!44279 e!56079)))

(declare-fun res!44277 () Bool)

(assert (=> b!86009 (=> res!44277 e!56079)))

(declare-fun e!56073 () Bool)

(assert (=> b!86009 (= res!44277 (not e!56073))))

(declare-fun res!44280 () Bool)

(assert (=> b!86009 (=> (not res!44280) (not e!56073))))

(assert (=> b!86009 (= res!44280 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun bm!8188 () Bool)

(declare-fun call!8195 () ListLongMap!1461)

(assert (=> bm!8188 (= call!8195 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86010 () Bool)

(declare-fun e!56084 () Bool)

(declare-fun lt!40873 () ListLongMap!1461)

(assert (=> b!86010 (= e!56084 (= (apply!82 lt!40873 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!86011 () Bool)

(declare-fun e!56077 () Bool)

(assert (=> b!86011 (= e!56079 e!56077)))

(declare-fun res!44281 () Bool)

(assert (=> b!86011 (=> (not res!44281) (not e!56077))))

(assert (=> b!86011 (= res!44281 (contains!753 lt!40873 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86011 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86012 () Bool)

(declare-fun e!56083 () Bool)

(assert (=> b!86012 (= e!56074 e!56083)))

(declare-fun c!13993 () Bool)

(assert (=> b!86012 (= c!13993 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86013 () Bool)

(declare-fun e!56072 () Bool)

(assert (=> b!86013 (= e!56083 e!56072)))

(declare-fun res!44282 () Bool)

(declare-fun call!8194 () Bool)

(assert (=> b!86013 (= res!44282 call!8194)))

(assert (=> b!86013 (=> (not res!44282) (not e!56072))))

(declare-fun c!13997 () Bool)

(declare-fun call!8191 () ListLongMap!1461)

(declare-fun call!8197 () ListLongMap!1461)

(declare-fun call!8192 () ListLongMap!1461)

(declare-fun bm!8189 () Bool)

(declare-fun c!13995 () Bool)

(assert (=> bm!8189 (= call!8191 (+!110 (ite c!13997 call!8195 (ite c!13995 call!8197 call!8192)) (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86014 () Bool)

(declare-fun call!8196 () ListLongMap!1461)

(assert (=> b!86014 (= e!56082 call!8196)))

(declare-fun b!86015 () Bool)

(declare-fun e!56080 () Bool)

(declare-fun call!8193 () Bool)

(assert (=> b!86015 (= e!56080 (not call!8193))))

(declare-fun b!86016 () Bool)

(declare-fun e!56078 () Bool)

(assert (=> b!86016 (= e!56078 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86017 () Bool)

(declare-fun res!44285 () Bool)

(assert (=> b!86017 (=> (not res!44285) (not e!56074))))

(assert (=> b!86017 (= res!44285 e!56080)))

(declare-fun c!13992 () Bool)

(assert (=> b!86017 (= c!13992 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86018 () Bool)

(assert (=> b!86018 (= e!56083 (not call!8194))))

(declare-fun b!86019 () Bool)

(assert (=> b!86019 (= e!56082 call!8192)))

(declare-fun b!86020 () Bool)

(assert (=> b!86020 (= e!56080 e!56084)))

(declare-fun res!44283 () Bool)

(assert (=> b!86020 (= res!44283 call!8193)))

(assert (=> b!86020 (=> (not res!44283) (not e!56084))))

(declare-fun b!86021 () Bool)

(declare-fun e!56076 () ListLongMap!1461)

(assert (=> b!86021 (= e!56076 (+!110 call!8191 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!22319 () Bool)

(assert (=> d!22319 e!56074))

(declare-fun res!44278 () Bool)

(assert (=> d!22319 (=> (not res!44278) (not e!56074))))

(assert (=> d!22319 (= res!44278 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!40855 () ListLongMap!1461)

(assert (=> d!22319 (= lt!40873 lt!40855)))

(declare-fun lt!40865 () Unit!2517)

(declare-fun e!56075 () Unit!2517)

(assert (=> d!22319 (= lt!40865 e!56075)))

(declare-fun c!13994 () Bool)

(assert (=> d!22319 (= c!13994 e!56078)))

(declare-fun res!44284 () Bool)

(assert (=> d!22319 (=> (not res!44284) (not e!56078))))

(assert (=> d!22319 (= res!44284 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22319 (= lt!40855 e!56076)))

(assert (=> d!22319 (= c!13997 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22319 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22319 (= (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40873)))

(declare-fun b!86022 () Bool)

(assert (=> b!86022 (= e!56081 call!8196)))

(declare-fun b!86023 () Bool)

(assert (=> b!86023 (= e!56077 (= (apply!82 lt!40873 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86023 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (_values!2321 newMap!16))))))

(assert (=> b!86023 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86024 () Bool)

(assert (=> b!86024 (= e!56076 e!56081)))

(assert (=> b!86024 (= c!13995 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86025 () Bool)

(assert (=> b!86025 (= e!56073 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8190 () Bool)

(assert (=> bm!8190 (= call!8193 (contains!753 lt!40873 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8191 () Bool)

(assert (=> bm!8191 (= call!8196 call!8191)))

(declare-fun b!86026 () Bool)

(declare-fun Unit!2540 () Unit!2517)

(assert (=> b!86026 (= e!56075 Unit!2540)))

(declare-fun bm!8192 () Bool)

(assert (=> bm!8192 (= call!8192 call!8197)))

(declare-fun bm!8193 () Bool)

(assert (=> bm!8193 (= call!8194 (contains!753 lt!40873 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8194 () Bool)

(assert (=> bm!8194 (= call!8197 call!8195)))

(declare-fun b!86027 () Bool)

(assert (=> b!86027 (= e!56072 (= (apply!82 lt!40873 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86028 () Bool)

(declare-fun lt!40858 () Unit!2517)

(assert (=> b!86028 (= e!56075 lt!40858)))

(declare-fun lt!40860 () ListLongMap!1461)

(assert (=> b!86028 (= lt!40860 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40869 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40869 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40867 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40867 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40859 () Unit!2517)

(assert (=> b!86028 (= lt!40859 (addStillContains!58 lt!40860 lt!40869 (zeroValue!2230 newMap!16) lt!40867))))

(assert (=> b!86028 (contains!753 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))) lt!40867)))

(declare-fun lt!40866 () Unit!2517)

(assert (=> b!86028 (= lt!40866 lt!40859)))

(declare-fun lt!40872 () ListLongMap!1461)

(assert (=> b!86028 (= lt!40872 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40871 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40871 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40870 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40870 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40875 () Unit!2517)

(assert (=> b!86028 (= lt!40875 (addApplyDifferent!58 lt!40872 lt!40871 (minValue!2230 newMap!16) lt!40870))))

(assert (=> b!86028 (= (apply!82 (+!110 lt!40872 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))) lt!40870) (apply!82 lt!40872 lt!40870))))

(declare-fun lt!40856 () Unit!2517)

(assert (=> b!86028 (= lt!40856 lt!40875)))

(declare-fun lt!40864 () ListLongMap!1461)

(assert (=> b!86028 (= lt!40864 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40854 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40854 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40862 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40862 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40857 () Unit!2517)

(assert (=> b!86028 (= lt!40857 (addApplyDifferent!58 lt!40864 lt!40854 (zeroValue!2230 newMap!16) lt!40862))))

(assert (=> b!86028 (= (apply!82 (+!110 lt!40864 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))) lt!40862) (apply!82 lt!40864 lt!40862))))

(declare-fun lt!40861 () Unit!2517)

(assert (=> b!86028 (= lt!40861 lt!40857)))

(declare-fun lt!40874 () ListLongMap!1461)

(assert (=> b!86028 (= lt!40874 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40868 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40868 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40863 () (_ BitVec 64))

(assert (=> b!86028 (= lt!40863 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86028 (= lt!40858 (addApplyDifferent!58 lt!40874 lt!40868 (minValue!2230 newMap!16) lt!40863))))

(assert (=> b!86028 (= (apply!82 (+!110 lt!40874 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))) lt!40863) (apply!82 lt!40874 lt!40863))))

(assert (= (and d!22319 c!13997) b!86021))

(assert (= (and d!22319 (not c!13997)) b!86024))

(assert (= (and b!86024 c!13995) b!86022))

(assert (= (and b!86024 (not c!13995)) b!86008))

(assert (= (and b!86008 c!13996) b!86014))

(assert (= (and b!86008 (not c!13996)) b!86019))

(assert (= (or b!86014 b!86019) bm!8192))

(assert (= (or b!86022 bm!8192) bm!8194))

(assert (= (or b!86022 b!86014) bm!8191))

(assert (= (or b!86021 bm!8194) bm!8188))

(assert (= (or b!86021 bm!8191) bm!8189))

(assert (= (and d!22319 res!44284) b!86016))

(assert (= (and d!22319 c!13994) b!86028))

(assert (= (and d!22319 (not c!13994)) b!86026))

(assert (= (and d!22319 res!44278) b!86009))

(assert (= (and b!86009 res!44280) b!86025))

(assert (= (and b!86009 (not res!44277)) b!86011))

(assert (= (and b!86011 res!44281) b!86023))

(assert (= (and b!86009 res!44279) b!86017))

(assert (= (and b!86017 c!13992) b!86020))

(assert (= (and b!86017 (not c!13992)) b!86015))

(assert (= (and b!86020 res!44283) b!86010))

(assert (= (or b!86020 b!86015) bm!8190))

(assert (= (and b!86017 res!44285) b!86012))

(assert (= (and b!86012 c!13993) b!86013))

(assert (= (and b!86012 (not c!13993)) b!86018))

(assert (= (and b!86013 res!44282) b!86027))

(assert (= (or b!86013 b!86018) bm!8193))

(declare-fun b_lambda!3821 () Bool)

(assert (=> (not b_lambda!3821) (not b!86023)))

(assert (=> b!86023 t!5248))

(declare-fun b_and!5211 () Bool)

(assert (= b_and!5207 (and (=> t!5248 result!2927) b_and!5211)))

(assert (=> b!86023 t!5250))

(declare-fun b_and!5213 () Bool)

(assert (= b_and!5209 (and (=> t!5250 result!2929) b_and!5213)))

(assert (=> b!86025 m!90363))

(assert (=> b!86025 m!90363))

(assert (=> b!86025 m!90365))

(declare-fun m!90769 () Bool)

(assert (=> b!86027 m!90769))

(declare-fun m!90771 () Bool)

(assert (=> bm!8188 m!90771))

(declare-fun m!90773 () Bool)

(assert (=> bm!8190 m!90773))

(assert (=> b!86023 m!90373))

(assert (=> b!86023 m!90363))

(declare-fun m!90775 () Bool)

(assert (=> b!86023 m!90775))

(assert (=> b!86023 m!90363))

(declare-fun m!90777 () Bool)

(assert (=> b!86023 m!90777))

(assert (=> b!86023 m!90777))

(assert (=> b!86023 m!90373))

(declare-fun m!90779 () Bool)

(assert (=> b!86023 m!90779))

(assert (=> b!86011 m!90363))

(assert (=> b!86011 m!90363))

(declare-fun m!90781 () Bool)

(assert (=> b!86011 m!90781))

(declare-fun m!90783 () Bool)

(assert (=> b!86021 m!90783))

(assert (=> d!22319 m!90385))

(declare-fun m!90785 () Bool)

(assert (=> bm!8193 m!90785))

(declare-fun m!90787 () Bool)

(assert (=> b!86028 m!90787))

(declare-fun m!90789 () Bool)

(assert (=> b!86028 m!90789))

(declare-fun m!90791 () Bool)

(assert (=> b!86028 m!90791))

(assert (=> b!86028 m!90363))

(declare-fun m!90793 () Bool)

(assert (=> b!86028 m!90793))

(declare-fun m!90795 () Bool)

(assert (=> b!86028 m!90795))

(declare-fun m!90797 () Bool)

(assert (=> b!86028 m!90797))

(declare-fun m!90799 () Bool)

(assert (=> b!86028 m!90799))

(declare-fun m!90801 () Bool)

(assert (=> b!86028 m!90801))

(declare-fun m!90803 () Bool)

(assert (=> b!86028 m!90803))

(declare-fun m!90805 () Bool)

(assert (=> b!86028 m!90805))

(assert (=> b!86028 m!90789))

(assert (=> b!86028 m!90795))

(declare-fun m!90807 () Bool)

(assert (=> b!86028 m!90807))

(declare-fun m!90809 () Bool)

(assert (=> b!86028 m!90809))

(declare-fun m!90811 () Bool)

(assert (=> b!86028 m!90811))

(assert (=> b!86028 m!90799))

(assert (=> b!86028 m!90809))

(assert (=> b!86028 m!90771))

(declare-fun m!90813 () Bool)

(assert (=> b!86028 m!90813))

(declare-fun m!90815 () Bool)

(assert (=> b!86028 m!90815))

(assert (=> b!86016 m!90363))

(assert (=> b!86016 m!90363))

(assert (=> b!86016 m!90365))

(declare-fun m!90817 () Bool)

(assert (=> b!86010 m!90817))

(declare-fun m!90819 () Bool)

(assert (=> bm!8189 m!90819))

(assert (=> b!85591 d!22319))

(assert (=> b!85481 d!22297))

(assert (=> b!85481 d!22299))

(assert (=> b!85567 d!22319))

(declare-fun d!22321 () Bool)

(declare-fun e!56086 () Bool)

(assert (=> d!22321 e!56086))

(declare-fun res!44286 () Bool)

(assert (=> d!22321 (=> res!44286 e!56086)))

(declare-fun lt!40876 () Bool)

(assert (=> d!22321 (= res!44286 (not lt!40876))))

(declare-fun lt!40877 () Bool)

(assert (=> d!22321 (= lt!40876 lt!40877)))

(declare-fun lt!40879 () Unit!2517)

(declare-fun e!56085 () Unit!2517)

(assert (=> d!22321 (= lt!40879 e!56085)))

(declare-fun c!13998 () Bool)

(assert (=> d!22321 (= c!13998 lt!40877)))

(assert (=> d!22321 (= lt!40877 (containsKey!144 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(assert (=> d!22321 (= (contains!753 e!55818 (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))) lt!40876)))

(declare-fun b!86029 () Bool)

(declare-fun lt!40878 () Unit!2517)

(assert (=> b!86029 (= e!56085 lt!40878)))

(assert (=> b!86029 (= lt!40878 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(assert (=> b!86029 (isDefined!93 (getValueByKey!140 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(declare-fun b!86030 () Bool)

(declare-fun Unit!2541 () Unit!2517)

(assert (=> b!86030 (= e!56085 Unit!2541)))

(declare-fun b!86031 () Bool)

(assert (=> b!86031 (= e!56086 (isDefined!93 (getValueByKey!140 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))))

(assert (= (and d!22321 c!13998) b!86029))

(assert (= (and d!22321 (not c!13998)) b!86030))

(assert (= (and d!22321 (not res!44286)) b!86031))

(declare-fun m!90821 () Bool)

(assert (=> d!22321 m!90821))

(declare-fun m!90823 () Bool)

(assert (=> b!86029 m!90823))

(declare-fun m!90825 () Bool)

(assert (=> b!86029 m!90825))

(assert (=> b!86029 m!90825))

(declare-fun m!90827 () Bool)

(assert (=> b!86029 m!90827))

(assert (=> b!86031 m!90825))

(assert (=> b!86031 m!90825))

(assert (=> b!86031 m!90827))

(assert (=> bm!8135 d!22321))

(declare-fun b!86032 () Bool)

(declare-fun e!56087 () Option!146)

(assert (=> b!86032 (= e!56087 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40604)))))))

(declare-fun d!22323 () Bool)

(declare-fun c!13999 () Bool)

(assert (=> d!22323 (= c!13999 (and ((_ is Cons!1515) (toList!746 lt!40604)) (= (_1!1110 (h!2106 (toList!746 lt!40604))) (_1!1110 lt!40318))))))

(assert (=> d!22323 (= (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318)) e!56087)))

(declare-fun b!86035 () Bool)

(declare-fun e!56088 () Option!146)

(assert (=> b!86035 (= e!56088 None!144)))

(declare-fun b!86034 () Bool)

(assert (=> b!86034 (= e!56088 (getValueByKey!140 (t!5240 (toList!746 lt!40604)) (_1!1110 lt!40318)))))

(declare-fun b!86033 () Bool)

(assert (=> b!86033 (= e!56087 e!56088)))

(declare-fun c!14000 () Bool)

(assert (=> b!86033 (= c!14000 (and ((_ is Cons!1515) (toList!746 lt!40604)) (not (= (_1!1110 (h!2106 (toList!746 lt!40604))) (_1!1110 lt!40318)))))))

(assert (= (and d!22323 c!13999) b!86032))

(assert (= (and d!22323 (not c!13999)) b!86033))

(assert (= (and b!86033 c!14000) b!86034))

(assert (= (and b!86033 (not c!14000)) b!86035))

(declare-fun m!90829 () Bool)

(assert (=> b!86034 m!90829))

(assert (=> b!85660 d!22323))

(declare-fun d!22325 () Bool)

(declare-fun res!44291 () Bool)

(declare-fun e!56093 () Bool)

(assert (=> d!22325 (=> res!44291 e!56093)))

(assert (=> d!22325 (= res!44291 (and ((_ is Cons!1515) (toList!746 lt!40315)) (= (_1!1110 (h!2106 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22325 (= (containsKey!144 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56093)))

(declare-fun b!86040 () Bool)

(declare-fun e!56094 () Bool)

(assert (=> b!86040 (= e!56093 e!56094)))

(declare-fun res!44292 () Bool)

(assert (=> b!86040 (=> (not res!44292) (not e!56094))))

(assert (=> b!86040 (= res!44292 (and (or (not ((_ is Cons!1515) (toList!746 lt!40315))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1515) (toList!746 lt!40315)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!86041 () Bool)

(assert (=> b!86041 (= e!56094 (containsKey!144 (t!5240 (toList!746 lt!40315)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22325 (not res!44291)) b!86040))

(assert (= (and b!86040 res!44292) b!86041))

(assert (=> b!86041 m!89857))

(declare-fun m!90831 () Bool)

(assert (=> b!86041 m!90831))

(assert (=> d!22141 d!22325))

(assert (=> b!85645 d!22235))

(declare-fun d!22327 () Bool)

(declare-fun e!56096 () Bool)

(assert (=> d!22327 e!56096))

(declare-fun res!44293 () Bool)

(assert (=> d!22327 (=> res!44293 e!56096)))

(declare-fun lt!40880 () Bool)

(assert (=> d!22327 (= res!44293 (not lt!40880))))

(declare-fun lt!40881 () Bool)

(assert (=> d!22327 (= lt!40880 lt!40881)))

(declare-fun lt!40883 () Unit!2517)

(declare-fun e!56095 () Unit!2517)

(assert (=> d!22327 (= lt!40883 e!56095)))

(declare-fun c!14001 () Bool)

(assert (=> d!22327 (= c!14001 lt!40881)))

(assert (=> d!22327 (= lt!40881 (containsKey!144 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22327 (= (contains!753 lt!40450 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40880)))

(declare-fun b!86042 () Bool)

(declare-fun lt!40882 () Unit!2517)

(assert (=> b!86042 (= e!56095 lt!40882)))

(assert (=> b!86042 (= lt!40882 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86042 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86043 () Bool)

(declare-fun Unit!2542 () Unit!2517)

(assert (=> b!86043 (= e!56095 Unit!2542)))

(declare-fun b!86044 () Bool)

(assert (=> b!86044 (= e!56096 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22327 c!14001) b!86042))

(assert (= (and d!22327 (not c!14001)) b!86043))

(assert (= (and d!22327 (not res!44293)) b!86044))

(declare-fun m!90833 () Bool)

(assert (=> d!22327 m!90833))

(declare-fun m!90835 () Bool)

(assert (=> b!86042 m!90835))

(assert (=> b!86042 m!90597))

(assert (=> b!86042 m!90597))

(declare-fun m!90837 () Bool)

(assert (=> b!86042 m!90837))

(assert (=> b!86044 m!90597))

(assert (=> b!86044 m!90597))

(assert (=> b!86044 m!90837))

(assert (=> bm!8066 d!22327))

(declare-fun d!22329 () Bool)

(declare-fun e!56097 () Bool)

(assert (=> d!22329 e!56097))

(declare-fun res!44294 () Bool)

(assert (=> d!22329 (=> (not res!44294) (not e!56097))))

(declare-fun lt!40886 () ListLongMap!1461)

(assert (=> d!22329 (= res!44294 (contains!753 lt!40886 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!40885 () List!1519)

(assert (=> d!22329 (= lt!40886 (ListLongMap!1462 lt!40885))))

(declare-fun lt!40887 () Unit!2517)

(declare-fun lt!40884 () Unit!2517)

(assert (=> d!22329 (= lt!40887 lt!40884)))

(assert (=> d!22329 (= (getValueByKey!140 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22329 (= lt!40884 (lemmaContainsTupThenGetReturnValue!57 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22329 (= lt!40885 (insertStrictlySorted!60 (toList!746 call!8133) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22329 (= (+!110 call!8133 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!40886)))

(declare-fun b!86045 () Bool)

(declare-fun res!44295 () Bool)

(assert (=> b!86045 (=> (not res!44295) (not e!56097))))

(assert (=> b!86045 (= res!44295 (= (getValueByKey!140 (toList!746 lt!40886) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!86046 () Bool)

(assert (=> b!86046 (= e!56097 (contains!754 (toList!746 lt!40886) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22329 res!44294) b!86045))

(assert (= (and b!86045 res!44295) b!86046))

(declare-fun m!90839 () Bool)

(assert (=> d!22329 m!90839))

(declare-fun m!90841 () Bool)

(assert (=> d!22329 m!90841))

(declare-fun m!90843 () Bool)

(assert (=> d!22329 m!90843))

(declare-fun m!90845 () Bool)

(assert (=> d!22329 m!90845))

(declare-fun m!90847 () Bool)

(assert (=> b!86045 m!90847))

(declare-fun m!90849 () Bool)

(assert (=> b!86046 m!90849))

(assert (=> b!85569 d!22329))

(assert (=> d!22137 d!22169))

(declare-fun d!22331 () Bool)

(declare-fun res!44296 () Bool)

(declare-fun e!56098 () Bool)

(assert (=> d!22331 (=> res!44296 e!56098)))

(assert (=> d!22331 (= res!44296 (= (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22331 (= (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000) e!56098)))

(declare-fun b!86047 () Bool)

(declare-fun e!56099 () Bool)

(assert (=> b!86047 (= e!56098 e!56099)))

(declare-fun res!44297 () Bool)

(assert (=> b!86047 (=> (not res!44297) (not e!56099))))

(assert (=> b!86047 (= res!44297 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86048 () Bool)

(assert (=> b!86048 (= e!56099 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22331 (not res!44296)) b!86047))

(assert (= (and b!86047 res!44297) b!86048))

(assert (=> d!22331 m!90363))

(assert (=> b!86048 m!89857))

(declare-fun m!90851 () Bool)

(assert (=> b!86048 m!90851))

(assert (=> bm!8131 d!22331))

(declare-fun d!22333 () Bool)

(declare-fun lt!40888 () Bool)

(assert (=> d!22333 (= lt!40888 (select (content!89 (toList!746 lt!40560)) lt!40324))))

(declare-fun e!56100 () Bool)

(assert (=> d!22333 (= lt!40888 e!56100)))

(declare-fun res!44298 () Bool)

(assert (=> d!22333 (=> (not res!44298) (not e!56100))))

(assert (=> d!22333 (= res!44298 ((_ is Cons!1515) (toList!746 lt!40560)))))

(assert (=> d!22333 (= (contains!754 (toList!746 lt!40560) lt!40324) lt!40888)))

(declare-fun b!86049 () Bool)

(declare-fun e!56101 () Bool)

(assert (=> b!86049 (= e!56100 e!56101)))

(declare-fun res!44299 () Bool)

(assert (=> b!86049 (=> res!44299 e!56101)))

(assert (=> b!86049 (= res!44299 (= (h!2106 (toList!746 lt!40560)) lt!40324))))

(declare-fun b!86050 () Bool)

(assert (=> b!86050 (= e!56101 (contains!754 (t!5240 (toList!746 lt!40560)) lt!40324))))

(assert (= (and d!22333 res!44298) b!86049))

(assert (= (and b!86049 (not res!44299)) b!86050))

(declare-fun m!90853 () Bool)

(assert (=> d!22333 m!90853))

(declare-fun m!90855 () Bool)

(assert (=> d!22333 m!90855))

(declare-fun m!90857 () Bool)

(assert (=> b!86050 m!90857))

(assert (=> b!85615 d!22333))

(declare-fun d!22335 () Bool)

(assert (=> d!22335 (= (get!1197 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) from!355) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85667 d!22335))

(declare-fun d!22337 () Bool)

(declare-fun lt!40889 () Bool)

(assert (=> d!22337 (= lt!40889 (select (content!89 (toList!746 lt!40556)) lt!40322))))

(declare-fun e!56102 () Bool)

(assert (=> d!22337 (= lt!40889 e!56102)))

(declare-fun res!44300 () Bool)

(assert (=> d!22337 (=> (not res!44300) (not e!56102))))

(assert (=> d!22337 (= res!44300 ((_ is Cons!1515) (toList!746 lt!40556)))))

(assert (=> d!22337 (= (contains!754 (toList!746 lt!40556) lt!40322) lt!40889)))

(declare-fun b!86051 () Bool)

(declare-fun e!56103 () Bool)

(assert (=> b!86051 (= e!56102 e!56103)))

(declare-fun res!44301 () Bool)

(assert (=> b!86051 (=> res!44301 e!56103)))

(assert (=> b!86051 (= res!44301 (= (h!2106 (toList!746 lt!40556)) lt!40322))))

(declare-fun b!86052 () Bool)

(assert (=> b!86052 (= e!56103 (contains!754 (t!5240 (toList!746 lt!40556)) lt!40322))))

(assert (= (and d!22337 res!44300) b!86051))

(assert (= (and b!86051 (not res!44301)) b!86052))

(declare-fun m!90859 () Bool)

(assert (=> d!22337 m!90859))

(declare-fun m!90861 () Bool)

(assert (=> d!22337 m!90861))

(declare-fun m!90863 () Bool)

(assert (=> b!86052 m!90863))

(assert (=> b!85613 d!22337))

(declare-fun b!86065 () Bool)

(declare-fun e!56110 () SeekEntryResult!243)

(assert (=> b!86065 (= e!56110 Undefined!243)))

(declare-fun b!86066 () Bool)

(declare-fun e!56111 () SeekEntryResult!243)

(declare-fun lt!40898 () SeekEntryResult!243)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4029 (_ BitVec 32)) SeekEntryResult!243)

(assert (=> b!86066 (= e!56111 (seekKeyOrZeroReturnVacant!0 (x!11996 lt!40898) (index!3111 lt!40898) (index!3111 lt!40898) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86067 () Bool)

(declare-fun c!14010 () Bool)

(declare-fun lt!40897 () (_ BitVec 64))

(assert (=> b!86067 (= c!14010 (= lt!40897 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56112 () SeekEntryResult!243)

(assert (=> b!86067 (= e!56112 e!56111)))

(declare-fun b!86068 () Bool)

(assert (=> b!86068 (= e!56111 (MissingZero!243 (index!3111 lt!40898)))))

(declare-fun d!22339 () Bool)

(declare-fun lt!40896 () SeekEntryResult!243)

(assert (=> d!22339 (and (or ((_ is Undefined!243) lt!40896) (not ((_ is Found!243) lt!40896)) (and (bvsge (index!3110 lt!40896) #b00000000000000000000000000000000) (bvslt (index!3110 lt!40896) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!40896) ((_ is Found!243) lt!40896) (not ((_ is MissingZero!243) lt!40896)) (and (bvsge (index!3109 lt!40896) #b00000000000000000000000000000000) (bvslt (index!3109 lt!40896) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!40896) ((_ is Found!243) lt!40896) ((_ is MissingZero!243) lt!40896) (not ((_ is MissingVacant!243) lt!40896)) (and (bvsge (index!3112 lt!40896) #b00000000000000000000000000000000) (bvslt (index!3112 lt!40896) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!40896) (ite ((_ is Found!243) lt!40896) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40896)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite ((_ is MissingZero!243) lt!40896) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!40896)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!243) lt!40896) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!40896)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22339 (= lt!40896 e!56110)))

(declare-fun c!14009 () Bool)

(assert (=> d!22339 (= c!14009 (and ((_ is Intermediate!243) lt!40898) (undefined!1055 lt!40898)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4029 (_ BitVec 32)) SeekEntryResult!243)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!22339 (= lt!40898 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!22339 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22339 (= (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!40896)))

(declare-fun b!86069 () Bool)

(assert (=> b!86069 (= e!56110 e!56112)))

(assert (=> b!86069 (= lt!40897 (select (arr!1919 (_keys!4010 newMap!16)) (index!3111 lt!40898)))))

(declare-fun c!14008 () Bool)

(assert (=> b!86069 (= c!14008 (= lt!40897 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!86070 () Bool)

(assert (=> b!86070 (= e!56112 (Found!243 (index!3111 lt!40898)))))

(assert (= (and d!22339 c!14009) b!86065))

(assert (= (and d!22339 (not c!14009)) b!86069))

(assert (= (and b!86069 c!14008) b!86070))

(assert (= (and b!86069 (not c!14008)) b!86067))

(assert (= (and b!86067 c!14010) b!86068))

(assert (= (and b!86067 (not c!14010)) b!86066))

(assert (=> b!86066 m!89857))

(declare-fun m!90865 () Bool)

(assert (=> b!86066 m!90865))

(declare-fun m!90867 () Bool)

(assert (=> d!22339 m!90867))

(assert (=> d!22339 m!89857))

(declare-fun m!90869 () Bool)

(assert (=> d!22339 m!90869))

(assert (=> d!22339 m!90385))

(declare-fun m!90871 () Bool)

(assert (=> d!22339 m!90871))

(declare-fun m!90873 () Bool)

(assert (=> d!22339 m!90873))

(declare-fun m!90875 () Bool)

(assert (=> d!22339 m!90875))

(assert (=> d!22339 m!89857))

(assert (=> d!22339 m!90867))

(declare-fun m!90877 () Bool)

(assert (=> b!86069 m!90877))

(assert (=> b!85583 d!22339))

(declare-fun b!86071 () Bool)

(declare-fun c!14015 () Bool)

(assert (=> b!86071 (= c!14015 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56122 () ListLongMap!1461)

(declare-fun e!56123 () ListLongMap!1461)

(assert (=> b!86071 (= e!56122 e!56123)))

(declare-fun b!86072 () Bool)

(declare-fun res!44304 () Bool)

(declare-fun e!56115 () Bool)

(assert (=> b!86072 (=> (not res!44304) (not e!56115))))

(declare-fun e!56120 () Bool)

(assert (=> b!86072 (= res!44304 e!56120)))

(declare-fun res!44302 () Bool)

(assert (=> b!86072 (=> res!44302 e!56120)))

(declare-fun e!56114 () Bool)

(assert (=> b!86072 (= res!44302 (not e!56114))))

(declare-fun res!44305 () Bool)

(assert (=> b!86072 (=> (not res!44305) (not e!56114))))

(assert (=> b!86072 (= res!44305 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun bm!8195 () Bool)

(declare-fun call!8202 () ListLongMap!1461)

(assert (=> bm!8195 (= call!8202 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86073 () Bool)

(declare-fun e!56125 () Bool)

(declare-fun lt!40918 () ListLongMap!1461)

(assert (=> b!86073 (= e!56125 (= (apply!82 lt!40918 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!86074 () Bool)

(declare-fun e!56118 () Bool)

(assert (=> b!86074 (= e!56120 e!56118)))

(declare-fun res!44306 () Bool)

(assert (=> b!86074 (=> (not res!44306) (not e!56118))))

(assert (=> b!86074 (= res!44306 (contains!753 lt!40918 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86074 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86075 () Bool)

(declare-fun e!56124 () Bool)

(assert (=> b!86075 (= e!56115 e!56124)))

(declare-fun c!14012 () Bool)

(assert (=> b!86075 (= c!14012 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86076 () Bool)

(declare-fun e!56113 () Bool)

(assert (=> b!86076 (= e!56124 e!56113)))

(declare-fun res!44307 () Bool)

(declare-fun call!8201 () Bool)

(assert (=> b!86076 (= res!44307 call!8201)))

(assert (=> b!86076 (=> (not res!44307) (not e!56113))))

(declare-fun call!8204 () ListLongMap!1461)

(declare-fun c!14016 () Bool)

(declare-fun call!8198 () ListLongMap!1461)

(declare-fun call!8199 () ListLongMap!1461)

(declare-fun c!14014 () Bool)

(declare-fun bm!8196 () Bool)

(assert (=> bm!8196 (= call!8198 (+!110 (ite c!14016 call!8202 (ite c!14014 call!8204 call!8199)) (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86077 () Bool)

(declare-fun call!8203 () ListLongMap!1461)

(assert (=> b!86077 (= e!56123 call!8203)))

(declare-fun b!86078 () Bool)

(declare-fun e!56121 () Bool)

(declare-fun call!8200 () Bool)

(assert (=> b!86078 (= e!56121 (not call!8200))))

(declare-fun b!86079 () Bool)

(declare-fun e!56119 () Bool)

(assert (=> b!86079 (= e!56119 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86080 () Bool)

(declare-fun res!44310 () Bool)

(assert (=> b!86080 (=> (not res!44310) (not e!56115))))

(assert (=> b!86080 (= res!44310 e!56121)))

(declare-fun c!14011 () Bool)

(assert (=> b!86080 (= c!14011 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86081 () Bool)

(assert (=> b!86081 (= e!56124 (not call!8201))))

(declare-fun b!86082 () Bool)

(assert (=> b!86082 (= e!56123 call!8199)))

(declare-fun b!86083 () Bool)

(assert (=> b!86083 (= e!56121 e!56125)))

(declare-fun res!44308 () Bool)

(assert (=> b!86083 (= res!44308 call!8200)))

(assert (=> b!86083 (=> (not res!44308) (not e!56125))))

(declare-fun b!86084 () Bool)

(declare-fun e!56117 () ListLongMap!1461)

(assert (=> b!86084 (= e!56117 (+!110 call!8198 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!22341 () Bool)

(assert (=> d!22341 e!56115))

(declare-fun res!44303 () Bool)

(assert (=> d!22341 (=> (not res!44303) (not e!56115))))

(assert (=> d!22341 (= res!44303 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!40900 () ListLongMap!1461)

(assert (=> d!22341 (= lt!40918 lt!40900)))

(declare-fun lt!40910 () Unit!2517)

(declare-fun e!56116 () Unit!2517)

(assert (=> d!22341 (= lt!40910 e!56116)))

(declare-fun c!14013 () Bool)

(assert (=> d!22341 (= c!14013 e!56119)))

(declare-fun res!44309 () Bool)

(assert (=> d!22341 (=> (not res!44309) (not e!56119))))

(assert (=> d!22341 (= res!44309 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22341 (= lt!40900 e!56117)))

(assert (=> d!22341 (= c!14016 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22341 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22341 (= (getCurrentListMap!439 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!40918)))

(declare-fun b!86085 () Bool)

(assert (=> b!86085 (= e!56122 call!8203)))

(declare-fun b!86086 () Bool)

(assert (=> b!86086 (= e!56118 (= (apply!82 lt!40918 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86086 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))))))))

(assert (=> b!86086 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86087 () Bool)

(assert (=> b!86087 (= e!56117 e!56122)))

(assert (=> b!86087 (= c!14014 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86088 () Bool)

(assert (=> b!86088 (= e!56114 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8197 () Bool)

(assert (=> bm!8197 (= call!8200 (contains!753 lt!40918 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8198 () Bool)

(assert (=> bm!8198 (= call!8203 call!8198)))

(declare-fun b!86089 () Bool)

(declare-fun Unit!2543 () Unit!2517)

(assert (=> b!86089 (= e!56116 Unit!2543)))

(declare-fun bm!8199 () Bool)

(assert (=> bm!8199 (= call!8199 call!8204)))

(declare-fun bm!8200 () Bool)

(assert (=> bm!8200 (= call!8201 (contains!753 lt!40918 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8201 () Bool)

(assert (=> bm!8201 (= call!8204 call!8202)))

(declare-fun b!86090 () Bool)

(assert (=> b!86090 (= e!56113 (= (apply!82 lt!40918 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86091 () Bool)

(declare-fun lt!40903 () Unit!2517)

(assert (=> b!86091 (= e!56116 lt!40903)))

(declare-fun lt!40905 () ListLongMap!1461)

(assert (=> b!86091 (= lt!40905 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40914 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40914 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40912 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40912 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40904 () Unit!2517)

(assert (=> b!86091 (= lt!40904 (addStillContains!58 lt!40905 lt!40914 (zeroValue!2230 newMap!16) lt!40912))))

(assert (=> b!86091 (contains!753 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))) lt!40912)))

(declare-fun lt!40911 () Unit!2517)

(assert (=> b!86091 (= lt!40911 lt!40904)))

(declare-fun lt!40917 () ListLongMap!1461)

(assert (=> b!86091 (= lt!40917 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40916 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40916 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40915 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40915 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40920 () Unit!2517)

(assert (=> b!86091 (= lt!40920 (addApplyDifferent!58 lt!40917 lt!40916 (minValue!2230 newMap!16) lt!40915))))

(assert (=> b!86091 (= (apply!82 (+!110 lt!40917 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))) lt!40915) (apply!82 lt!40917 lt!40915))))

(declare-fun lt!40901 () Unit!2517)

(assert (=> b!86091 (= lt!40901 lt!40920)))

(declare-fun lt!40909 () ListLongMap!1461)

(assert (=> b!86091 (= lt!40909 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40899 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40899 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40907 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40907 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40902 () Unit!2517)

(assert (=> b!86091 (= lt!40902 (addApplyDifferent!58 lt!40909 lt!40899 (zeroValue!2230 newMap!16) lt!40907))))

(assert (=> b!86091 (= (apply!82 (+!110 lt!40909 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))) lt!40907) (apply!82 lt!40909 lt!40907))))

(declare-fun lt!40906 () Unit!2517)

(assert (=> b!86091 (= lt!40906 lt!40902)))

(declare-fun lt!40919 () ListLongMap!1461)

(assert (=> b!86091 (= lt!40919 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!40913 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40913 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40908 () (_ BitVec 64))

(assert (=> b!86091 (= lt!40908 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86091 (= lt!40903 (addApplyDifferent!58 lt!40919 lt!40913 (minValue!2230 newMap!16) lt!40908))))

(assert (=> b!86091 (= (apply!82 (+!110 lt!40919 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))) lt!40908) (apply!82 lt!40919 lt!40908))))

(assert (= (and d!22341 c!14016) b!86084))

(assert (= (and d!22341 (not c!14016)) b!86087))

(assert (= (and b!86087 c!14014) b!86085))

(assert (= (and b!86087 (not c!14014)) b!86071))

(assert (= (and b!86071 c!14015) b!86077))

(assert (= (and b!86071 (not c!14015)) b!86082))

(assert (= (or b!86077 b!86082) bm!8199))

(assert (= (or b!86085 bm!8199) bm!8201))

(assert (= (or b!86085 b!86077) bm!8198))

(assert (= (or b!86084 bm!8201) bm!8195))

(assert (= (or b!86084 bm!8198) bm!8196))

(assert (= (and d!22341 res!44309) b!86079))

(assert (= (and d!22341 c!14013) b!86091))

(assert (= (and d!22341 (not c!14013)) b!86089))

(assert (= (and d!22341 res!44303) b!86072))

(assert (= (and b!86072 res!44305) b!86088))

(assert (= (and b!86072 (not res!44302)) b!86074))

(assert (= (and b!86074 res!44306) b!86086))

(assert (= (and b!86072 res!44304) b!86080))

(assert (= (and b!86080 c!14011) b!86083))

(assert (= (and b!86080 (not c!14011)) b!86078))

(assert (= (and b!86083 res!44308) b!86073))

(assert (= (or b!86083 b!86078) bm!8197))

(assert (= (and b!86080 res!44310) b!86075))

(assert (= (and b!86075 c!14012) b!86076))

(assert (= (and b!86075 (not c!14012)) b!86081))

(assert (= (and b!86076 res!44307) b!86090))

(assert (= (or b!86076 b!86081) bm!8200))

(declare-fun b_lambda!3823 () Bool)

(assert (=> (not b_lambda!3823) (not b!86086)))

(assert (=> b!86086 t!5248))

(declare-fun b_and!5215 () Bool)

(assert (= b_and!5211 (and (=> t!5248 result!2927) b_and!5215)))

(assert (=> b!86086 t!5250))

(declare-fun b_and!5217 () Bool)

(assert (= b_and!5213 (and (=> t!5250 result!2929) b_and!5217)))

(assert (=> b!86088 m!90363))

(assert (=> b!86088 m!90363))

(assert (=> b!86088 m!90365))

(declare-fun m!90879 () Bool)

(assert (=> b!86090 m!90879))

(declare-fun m!90881 () Bool)

(assert (=> bm!8195 m!90881))

(declare-fun m!90883 () Bool)

(assert (=> bm!8197 m!90883))

(assert (=> b!86086 m!90373))

(assert (=> b!86086 m!90363))

(declare-fun m!90885 () Bool)

(assert (=> b!86086 m!90885))

(assert (=> b!86086 m!90363))

(declare-fun m!90887 () Bool)

(assert (=> b!86086 m!90887))

(assert (=> b!86086 m!90887))

(assert (=> b!86086 m!90373))

(declare-fun m!90889 () Bool)

(assert (=> b!86086 m!90889))

(assert (=> b!86074 m!90363))

(assert (=> b!86074 m!90363))

(declare-fun m!90891 () Bool)

(assert (=> b!86074 m!90891))

(declare-fun m!90893 () Bool)

(assert (=> b!86084 m!90893))

(assert (=> d!22341 m!90385))

(declare-fun m!90895 () Bool)

(assert (=> bm!8200 m!90895))

(declare-fun m!90897 () Bool)

(assert (=> b!86091 m!90897))

(declare-fun m!90899 () Bool)

(assert (=> b!86091 m!90899))

(declare-fun m!90901 () Bool)

(assert (=> b!86091 m!90901))

(assert (=> b!86091 m!90363))

(declare-fun m!90903 () Bool)

(assert (=> b!86091 m!90903))

(declare-fun m!90905 () Bool)

(assert (=> b!86091 m!90905))

(declare-fun m!90907 () Bool)

(assert (=> b!86091 m!90907))

(declare-fun m!90909 () Bool)

(assert (=> b!86091 m!90909))

(declare-fun m!90911 () Bool)

(assert (=> b!86091 m!90911))

(declare-fun m!90913 () Bool)

(assert (=> b!86091 m!90913))

(declare-fun m!90915 () Bool)

(assert (=> b!86091 m!90915))

(assert (=> b!86091 m!90899))

(assert (=> b!86091 m!90905))

(declare-fun m!90917 () Bool)

(assert (=> b!86091 m!90917))

(declare-fun m!90919 () Bool)

(assert (=> b!86091 m!90919))

(declare-fun m!90921 () Bool)

(assert (=> b!86091 m!90921))

(assert (=> b!86091 m!90909))

(assert (=> b!86091 m!90919))

(assert (=> b!86091 m!90881))

(declare-fun m!90923 () Bool)

(assert (=> b!86091 m!90923))

(declare-fun m!90925 () Bool)

(assert (=> b!86091 m!90925))

(assert (=> b!86079 m!90363))

(assert (=> b!86079 m!90363))

(assert (=> b!86079 m!90365))

(declare-fun m!90927 () Bool)

(assert (=> b!86073 m!90927))

(declare-fun m!90929 () Bool)

(assert (=> bm!8196 m!90929))

(assert (=> bm!8139 d!22341))

(declare-fun d!22343 () Bool)

(declare-fun e!56127 () Bool)

(assert (=> d!22343 e!56127))

(declare-fun res!44311 () Bool)

(assert (=> d!22343 (=> res!44311 e!56127)))

(declare-fun lt!40921 () Bool)

(assert (=> d!22343 (= res!44311 (not lt!40921))))

(declare-fun lt!40922 () Bool)

(assert (=> d!22343 (= lt!40921 lt!40922)))

(declare-fun lt!40924 () Unit!2517)

(declare-fun e!56126 () Unit!2517)

(assert (=> d!22343 (= lt!40924 e!56126)))

(declare-fun c!14017 () Bool)

(assert (=> d!22343 (= c!14017 lt!40922)))

(assert (=> d!22343 (= lt!40922 (containsKey!144 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22343 (= (contains!753 lt!40450 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40921)))

(declare-fun b!86092 () Bool)

(declare-fun lt!40923 () Unit!2517)

(assert (=> b!86092 (= e!56126 lt!40923)))

(assert (=> b!86092 (= lt!40923 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!86092 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86093 () Bool)

(declare-fun Unit!2544 () Unit!2517)

(assert (=> b!86093 (= e!56126 Unit!2544)))

(declare-fun b!86094 () Bool)

(assert (=> b!86094 (= e!56127 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22343 c!14017) b!86092))

(assert (= (and d!22343 (not c!14017)) b!86093))

(assert (= (and d!22343 (not res!44311)) b!86094))

(assert (=> d!22343 m!89983))

(declare-fun m!90931 () Bool)

(assert (=> d!22343 m!90931))

(assert (=> b!86092 m!89983))

(declare-fun m!90933 () Bool)

(assert (=> b!86092 m!90933))

(assert (=> b!86092 m!89983))

(assert (=> b!86092 m!90327))

(assert (=> b!86092 m!90327))

(declare-fun m!90935 () Bool)

(assert (=> b!86092 m!90935))

(assert (=> b!86094 m!89983))

(assert (=> b!86094 m!90327))

(assert (=> b!86094 m!90327))

(assert (=> b!86094 m!90935))

(assert (=> b!85446 d!22343))

(assert (=> b!85649 d!22235))

(declare-fun b!86095 () Bool)

(declare-fun e!56128 () Option!146)

(assert (=> b!86095 (= e!56128 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40568)))))))

(declare-fun d!22345 () Bool)

(declare-fun c!14018 () Bool)

(assert (=> d!22345 (= c!14018 (and ((_ is Cons!1515) (toList!746 lt!40568)) (= (_1!1110 (h!2106 (toList!746 lt!40568))) (_1!1110 lt!40324))))))

(assert (=> d!22345 (= (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324)) e!56128)))

(declare-fun b!86098 () Bool)

(declare-fun e!56129 () Option!146)

(assert (=> b!86098 (= e!56129 None!144)))

(declare-fun b!86097 () Bool)

(assert (=> b!86097 (= e!56129 (getValueByKey!140 (t!5240 (toList!746 lt!40568)) (_1!1110 lt!40324)))))

(declare-fun b!86096 () Bool)

(assert (=> b!86096 (= e!56128 e!56129)))

(declare-fun c!14019 () Bool)

(assert (=> b!86096 (= c!14019 (and ((_ is Cons!1515) (toList!746 lt!40568)) (not (= (_1!1110 (h!2106 (toList!746 lt!40568))) (_1!1110 lt!40324)))))))

(assert (= (and d!22345 c!14018) b!86095))

(assert (= (and d!22345 (not c!14018)) b!86096))

(assert (= (and b!86096 c!14019) b!86097))

(assert (= (and b!86096 (not c!14019)) b!86098))

(declare-fun m!90937 () Bool)

(assert (=> b!86097 m!90937))

(assert (=> b!85618 d!22345))

(declare-fun d!22347 () Bool)

(declare-fun e!56131 () Bool)

(assert (=> d!22347 e!56131))

(declare-fun res!44312 () Bool)

(assert (=> d!22347 (=> res!44312 e!56131)))

(declare-fun lt!40925 () Bool)

(assert (=> d!22347 (= res!44312 (not lt!40925))))

(declare-fun lt!40926 () Bool)

(assert (=> d!22347 (= lt!40925 lt!40926)))

(declare-fun lt!40928 () Unit!2517)

(declare-fun e!56130 () Unit!2517)

(assert (=> d!22347 (= lt!40928 e!56130)))

(declare-fun c!14020 () Bool)

(assert (=> d!22347 (= c!14020 lt!40926)))

(assert (=> d!22347 (= lt!40926 (containsKey!144 (toList!746 lt!40600) (_1!1110 lt!40318)))))

(assert (=> d!22347 (= (contains!753 lt!40600 (_1!1110 lt!40318)) lt!40925)))

(declare-fun b!86099 () Bool)

(declare-fun lt!40927 () Unit!2517)

(assert (=> b!86099 (= e!56130 lt!40927)))

(assert (=> b!86099 (= lt!40927 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40600) (_1!1110 lt!40318)))))

(assert (=> b!86099 (isDefined!93 (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318)))))

(declare-fun b!86100 () Bool)

(declare-fun Unit!2545 () Unit!2517)

(assert (=> b!86100 (= e!56130 Unit!2545)))

(declare-fun b!86101 () Bool)

(assert (=> b!86101 (= e!56131 (isDefined!93 (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318))))))

(assert (= (and d!22347 c!14020) b!86099))

(assert (= (and d!22347 (not c!14020)) b!86100))

(assert (= (and d!22347 (not res!44312)) b!86101))

(declare-fun m!90939 () Bool)

(assert (=> d!22347 m!90939))

(declare-fun m!90941 () Bool)

(assert (=> b!86099 m!90941))

(assert (=> b!86099 m!90205))

(assert (=> b!86099 m!90205))

(declare-fun m!90943 () Bool)

(assert (=> b!86099 m!90943))

(assert (=> b!86101 m!90205))

(assert (=> b!86101 m!90205))

(assert (=> b!86101 m!90943))

(assert (=> d!22163 d!22347))

(declare-fun b!86102 () Bool)

(declare-fun e!56132 () Option!146)

(assert (=> b!86102 (= e!56132 (Some!145 (_2!1110 (h!2106 lt!40599))))))

(declare-fun d!22349 () Bool)

(declare-fun c!14021 () Bool)

(assert (=> d!22349 (= c!14021 (and ((_ is Cons!1515) lt!40599) (= (_1!1110 (h!2106 lt!40599)) (_1!1110 lt!40318))))))

(assert (=> d!22349 (= (getValueByKey!140 lt!40599 (_1!1110 lt!40318)) e!56132)))

(declare-fun b!86105 () Bool)

(declare-fun e!56133 () Option!146)

(assert (=> b!86105 (= e!56133 None!144)))

(declare-fun b!86104 () Bool)

(assert (=> b!86104 (= e!56133 (getValueByKey!140 (t!5240 lt!40599) (_1!1110 lt!40318)))))

(declare-fun b!86103 () Bool)

(assert (=> b!86103 (= e!56132 e!56133)))

(declare-fun c!14022 () Bool)

(assert (=> b!86103 (= c!14022 (and ((_ is Cons!1515) lt!40599) (not (= (_1!1110 (h!2106 lt!40599)) (_1!1110 lt!40318)))))))

(assert (= (and d!22349 c!14021) b!86102))

(assert (= (and d!22349 (not c!14021)) b!86103))

(assert (= (and b!86103 c!14022) b!86104))

(assert (= (and b!86103 (not c!14022)) b!86105))

(declare-fun m!90945 () Bool)

(assert (=> b!86104 m!90945))

(assert (=> d!22163 d!22349))

(declare-fun d!22351 () Bool)

(assert (=> d!22351 (= (getValueByKey!140 lt!40599 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(declare-fun lt!40929 () Unit!2517)

(assert (=> d!22351 (= lt!40929 (choose!500 lt!40599 (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun e!56134 () Bool)

(assert (=> d!22351 e!56134))

(declare-fun res!44313 () Bool)

(assert (=> d!22351 (=> (not res!44313) (not e!56134))))

(assert (=> d!22351 (= res!44313 (isStrictlySorted!298 lt!40599))))

(assert (=> d!22351 (= (lemmaContainsTupThenGetReturnValue!57 lt!40599 (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!40929)))

(declare-fun b!86106 () Bool)

(declare-fun res!44314 () Bool)

(assert (=> b!86106 (=> (not res!44314) (not e!56134))))

(assert (=> b!86106 (= res!44314 (containsKey!144 lt!40599 (_1!1110 lt!40318)))))

(declare-fun b!86107 () Bool)

(assert (=> b!86107 (= e!56134 (contains!754 lt!40599 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22351 res!44313) b!86106))

(assert (= (and b!86106 res!44314) b!86107))

(assert (=> d!22351 m!90199))

(declare-fun m!90947 () Bool)

(assert (=> d!22351 m!90947))

(declare-fun m!90949 () Bool)

(assert (=> d!22351 m!90949))

(declare-fun m!90951 () Bool)

(assert (=> b!86106 m!90951))

(declare-fun m!90953 () Bool)

(assert (=> b!86107 m!90953))

(assert (=> d!22163 d!22351))

(declare-fun b!86108 () Bool)

(declare-fun e!56136 () List!1519)

(declare-fun call!8206 () List!1519)

(assert (=> b!86108 (= e!56136 call!8206)))

(declare-fun b!86109 () Bool)

(assert (=> b!86109 (= e!56136 call!8206)))

(declare-fun b!86110 () Bool)

(declare-fun res!44315 () Bool)

(declare-fun e!56137 () Bool)

(assert (=> b!86110 (=> (not res!44315) (not e!56137))))

(declare-fun lt!40930 () List!1519)

(assert (=> b!86110 (= res!44315 (containsKey!144 lt!40930 (_1!1110 lt!40318)))))

(declare-fun b!86111 () Bool)

(declare-fun e!56138 () List!1519)

(declare-fun e!56139 () List!1519)

(assert (=> b!86111 (= e!56138 e!56139)))

(declare-fun c!14024 () Bool)

(assert (=> b!86111 (= c!14024 (and ((_ is Cons!1515) (toList!746 lt!40325)) (= (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 lt!40318))))))

(declare-fun b!86112 () Bool)

(declare-fun call!8205 () List!1519)

(assert (=> b!86112 (= e!56138 call!8205)))

(declare-fun b!86113 () Bool)

(declare-fun c!14026 () Bool)

(assert (=> b!86113 (= c!14026 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 lt!40318))))))

(assert (=> b!86113 (= e!56139 e!56136)))

(declare-fun b!86114 () Bool)

(declare-fun e!56135 () List!1519)

(assert (=> b!86114 (= e!56135 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40325)) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun b!86115 () Bool)

(assert (=> b!86115 (= e!56135 (ite c!14024 (t!5240 (toList!746 lt!40325)) (ite c!14026 (Cons!1515 (h!2106 (toList!746 lt!40325)) (t!5240 (toList!746 lt!40325))) Nil!1516)))))

(declare-fun bm!8202 () Bool)

(declare-fun c!14023 () Bool)

(assert (=> bm!8202 (= call!8205 ($colon$colon!72 e!56135 (ite c!14023 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))))))

(declare-fun c!14025 () Bool)

(assert (=> bm!8202 (= c!14025 c!14023)))

(declare-fun bm!8203 () Bool)

(declare-fun call!8207 () List!1519)

(assert (=> bm!8203 (= call!8207 call!8205)))

(declare-fun bm!8204 () Bool)

(assert (=> bm!8204 (= call!8206 call!8207)))

(declare-fun b!86117 () Bool)

(assert (=> b!86117 (= e!56139 call!8207)))

(declare-fun d!22353 () Bool)

(assert (=> d!22353 e!56137))

(declare-fun res!44316 () Bool)

(assert (=> d!22353 (=> (not res!44316) (not e!56137))))

(assert (=> d!22353 (= res!44316 (isStrictlySorted!298 lt!40930))))

(assert (=> d!22353 (= lt!40930 e!56138)))

(assert (=> d!22353 (= c!14023 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 lt!40318))))))

(assert (=> d!22353 (isStrictlySorted!298 (toList!746 lt!40325))))

(assert (=> d!22353 (= (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!40930)))

(declare-fun b!86116 () Bool)

(assert (=> b!86116 (= e!56137 (contains!754 lt!40930 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22353 c!14023) b!86112))

(assert (= (and d!22353 (not c!14023)) b!86111))

(assert (= (and b!86111 c!14024) b!86117))

(assert (= (and b!86111 (not c!14024)) b!86113))

(assert (= (and b!86113 c!14026) b!86108))

(assert (= (and b!86113 (not c!14026)) b!86109))

(assert (= (or b!86108 b!86109) bm!8204))

(assert (= (or b!86117 bm!8204) bm!8203))

(assert (= (or b!86112 bm!8203) bm!8202))

(assert (= (and bm!8202 c!14025) b!86114))

(assert (= (and bm!8202 (not c!14025)) b!86115))

(assert (= (and d!22353 res!44316) b!86110))

(assert (= (and b!86110 res!44315) b!86116))

(declare-fun m!90955 () Bool)

(assert (=> d!22353 m!90955))

(assert (=> d!22353 m!90353))

(declare-fun m!90957 () Bool)

(assert (=> b!86110 m!90957))

(declare-fun m!90959 () Bool)

(assert (=> b!86114 m!90959))

(declare-fun m!90961 () Bool)

(assert (=> b!86116 m!90961))

(declare-fun m!90963 () Bool)

(assert (=> bm!8202 m!90963))

(assert (=> d!22163 d!22353))

(declare-fun d!22355 () Bool)

(declare-fun e!56141 () Bool)

(assert (=> d!22355 e!56141))

(declare-fun res!44317 () Bool)

(assert (=> d!22355 (=> res!44317 e!56141)))

(declare-fun lt!40931 () Bool)

(assert (=> d!22355 (= res!44317 (not lt!40931))))

(declare-fun lt!40932 () Bool)

(assert (=> d!22355 (= lt!40931 lt!40932)))

(declare-fun lt!40934 () Unit!2517)

(declare-fun e!56140 () Unit!2517)

(assert (=> d!22355 (= lt!40934 e!56140)))

(declare-fun c!14027 () Bool)

(assert (=> d!22355 (= c!14027 lt!40932)))

(assert (=> d!22355 (= lt!40932 (containsKey!144 (toList!746 lt!40596) (_1!1110 lt!40322)))))

(assert (=> d!22355 (= (contains!753 lt!40596 (_1!1110 lt!40322)) lt!40931)))

(declare-fun b!86118 () Bool)

(declare-fun lt!40933 () Unit!2517)

(assert (=> b!86118 (= e!56140 lt!40933)))

(assert (=> b!86118 (= lt!40933 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40596) (_1!1110 lt!40322)))))

(assert (=> b!86118 (isDefined!93 (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322)))))

(declare-fun b!86119 () Bool)

(declare-fun Unit!2546 () Unit!2517)

(assert (=> b!86119 (= e!56140 Unit!2546)))

(declare-fun b!86120 () Bool)

(assert (=> b!86120 (= e!56141 (isDefined!93 (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322))))))

(assert (= (and d!22355 c!14027) b!86118))

(assert (= (and d!22355 (not c!14027)) b!86119))

(assert (= (and d!22355 (not res!44317)) b!86120))

(declare-fun m!90965 () Bool)

(assert (=> d!22355 m!90965))

(declare-fun m!90967 () Bool)

(assert (=> b!86118 m!90967))

(assert (=> b!86118 m!90193))

(assert (=> b!86118 m!90193))

(declare-fun m!90969 () Bool)

(assert (=> b!86118 m!90969))

(assert (=> b!86120 m!90193))

(assert (=> b!86120 m!90193))

(assert (=> b!86120 m!90969))

(assert (=> d!22161 d!22355))

(declare-fun b!86121 () Bool)

(declare-fun e!56142 () Option!146)

(assert (=> b!86121 (= e!56142 (Some!145 (_2!1110 (h!2106 lt!40595))))))

(declare-fun d!22357 () Bool)

(declare-fun c!14028 () Bool)

(assert (=> d!22357 (= c!14028 (and ((_ is Cons!1515) lt!40595) (= (_1!1110 (h!2106 lt!40595)) (_1!1110 lt!40322))))))

(assert (=> d!22357 (= (getValueByKey!140 lt!40595 (_1!1110 lt!40322)) e!56142)))

(declare-fun b!86124 () Bool)

(declare-fun e!56143 () Option!146)

(assert (=> b!86124 (= e!56143 None!144)))

(declare-fun b!86123 () Bool)

(assert (=> b!86123 (= e!56143 (getValueByKey!140 (t!5240 lt!40595) (_1!1110 lt!40322)))))

(declare-fun b!86122 () Bool)

(assert (=> b!86122 (= e!56142 e!56143)))

(declare-fun c!14029 () Bool)

(assert (=> b!86122 (= c!14029 (and ((_ is Cons!1515) lt!40595) (not (= (_1!1110 (h!2106 lt!40595)) (_1!1110 lt!40322)))))))

(assert (= (and d!22357 c!14028) b!86121))

(assert (= (and d!22357 (not c!14028)) b!86122))

(assert (= (and b!86122 c!14029) b!86123))

(assert (= (and b!86122 (not c!14029)) b!86124))

(declare-fun m!90971 () Bool)

(assert (=> b!86123 m!90971))

(assert (=> d!22161 d!22357))

(declare-fun d!22359 () Bool)

(assert (=> d!22359 (= (getValueByKey!140 lt!40595 (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322)))))

(declare-fun lt!40935 () Unit!2517)

(assert (=> d!22359 (= lt!40935 (choose!500 lt!40595 (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun e!56144 () Bool)

(assert (=> d!22359 e!56144))

(declare-fun res!44318 () Bool)

(assert (=> d!22359 (=> (not res!44318) (not e!56144))))

(assert (=> d!22359 (= res!44318 (isStrictlySorted!298 lt!40595))))

(assert (=> d!22359 (= (lemmaContainsTupThenGetReturnValue!57 lt!40595 (_1!1110 lt!40322) (_2!1110 lt!40322)) lt!40935)))

(declare-fun b!86125 () Bool)

(declare-fun res!44319 () Bool)

(assert (=> b!86125 (=> (not res!44319) (not e!56144))))

(assert (=> b!86125 (= res!44319 (containsKey!144 lt!40595 (_1!1110 lt!40322)))))

(declare-fun b!86126 () Bool)

(assert (=> b!86126 (= e!56144 (contains!754 lt!40595 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22359 res!44318) b!86125))

(assert (= (and b!86125 res!44319) b!86126))

(assert (=> d!22359 m!90187))

(declare-fun m!90973 () Bool)

(assert (=> d!22359 m!90973))

(declare-fun m!90975 () Bool)

(assert (=> d!22359 m!90975))

(declare-fun m!90977 () Bool)

(assert (=> b!86125 m!90977))

(declare-fun m!90979 () Bool)

(assert (=> b!86126 m!90979))

(assert (=> d!22161 d!22359))

(declare-fun b!86127 () Bool)

(declare-fun e!56146 () List!1519)

(declare-fun call!8209 () List!1519)

(assert (=> b!86127 (= e!56146 call!8209)))

(declare-fun b!86128 () Bool)

(assert (=> b!86128 (= e!56146 call!8209)))

(declare-fun b!86129 () Bool)

(declare-fun res!44320 () Bool)

(declare-fun e!56147 () Bool)

(assert (=> b!86129 (=> (not res!44320) (not e!56147))))

(declare-fun lt!40936 () List!1519)

(assert (=> b!86129 (= res!44320 (containsKey!144 lt!40936 (_1!1110 lt!40322)))))

(declare-fun b!86130 () Bool)

(declare-fun e!56148 () List!1519)

(declare-fun e!56149 () List!1519)

(assert (=> b!86130 (= e!56148 e!56149)))

(declare-fun c!14031 () Bool)

(assert (=> b!86130 (= c!14031 (and ((_ is Cons!1515) (toList!746 lt!40319)) (= (_1!1110 (h!2106 (toList!746 lt!40319))) (_1!1110 lt!40322))))))

(declare-fun b!86131 () Bool)

(declare-fun call!8208 () List!1519)

(assert (=> b!86131 (= e!56148 call!8208)))

(declare-fun b!86132 () Bool)

(declare-fun c!14033 () Bool)

(assert (=> b!86132 (= c!14033 (and ((_ is Cons!1515) (toList!746 lt!40319)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40319))) (_1!1110 lt!40322))))))

(assert (=> b!86132 (= e!56149 e!56146)))

(declare-fun b!86133 () Bool)

(declare-fun e!56145 () List!1519)

(assert (=> b!86133 (= e!56145 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40319)) (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun b!86134 () Bool)

(assert (=> b!86134 (= e!56145 (ite c!14031 (t!5240 (toList!746 lt!40319)) (ite c!14033 (Cons!1515 (h!2106 (toList!746 lt!40319)) (t!5240 (toList!746 lt!40319))) Nil!1516)))))

(declare-fun bm!8205 () Bool)

(declare-fun c!14030 () Bool)

(assert (=> bm!8205 (= call!8208 ($colon$colon!72 e!56145 (ite c!14030 (h!2106 (toList!746 lt!40319)) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322)))))))

(declare-fun c!14032 () Bool)

(assert (=> bm!8205 (= c!14032 c!14030)))

(declare-fun bm!8206 () Bool)

(declare-fun call!8210 () List!1519)

(assert (=> bm!8206 (= call!8210 call!8208)))

(declare-fun bm!8207 () Bool)

(assert (=> bm!8207 (= call!8209 call!8210)))

(declare-fun b!86136 () Bool)

(assert (=> b!86136 (= e!56149 call!8210)))

(declare-fun d!22361 () Bool)

(assert (=> d!22361 e!56147))

(declare-fun res!44321 () Bool)

(assert (=> d!22361 (=> (not res!44321) (not e!56147))))

(assert (=> d!22361 (= res!44321 (isStrictlySorted!298 lt!40936))))

(assert (=> d!22361 (= lt!40936 e!56148)))

(assert (=> d!22361 (= c!14030 (and ((_ is Cons!1515) (toList!746 lt!40319)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40319))) (_1!1110 lt!40322))))))

(assert (=> d!22361 (isStrictlySorted!298 (toList!746 lt!40319))))

(assert (=> d!22361 (= (insertStrictlySorted!60 (toList!746 lt!40319) (_1!1110 lt!40322) (_2!1110 lt!40322)) lt!40936)))

(declare-fun b!86135 () Bool)

(assert (=> b!86135 (= e!56147 (contains!754 lt!40936 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22361 c!14030) b!86131))

(assert (= (and d!22361 (not c!14030)) b!86130))

(assert (= (and b!86130 c!14031) b!86136))

(assert (= (and b!86130 (not c!14031)) b!86132))

(assert (= (and b!86132 c!14033) b!86127))

(assert (= (and b!86132 (not c!14033)) b!86128))

(assert (= (or b!86127 b!86128) bm!8207))

(assert (= (or b!86136 bm!8207) bm!8206))

(assert (= (or b!86131 bm!8206) bm!8205))

(assert (= (and bm!8205 c!14032) b!86133))

(assert (= (and bm!8205 (not c!14032)) b!86134))

(assert (= (and d!22361 res!44321) b!86129))

(assert (= (and b!86129 res!44320) b!86135))

(declare-fun m!90981 () Bool)

(assert (=> d!22361 m!90981))

(declare-fun m!90983 () Bool)

(assert (=> d!22361 m!90983))

(declare-fun m!90985 () Bool)

(assert (=> b!86129 m!90985))

(declare-fun m!90987 () Bool)

(assert (=> b!86133 m!90987))

(declare-fun m!90989 () Bool)

(assert (=> b!86135 m!90989))

(declare-fun m!90991 () Bool)

(assert (=> bm!8205 m!90991))

(assert (=> d!22161 d!22361))

(assert (=> bm!8064 d!22157))

(declare-fun b!86137 () Bool)

(declare-fun e!56152 () Bool)

(declare-fun call!8211 () Bool)

(assert (=> b!86137 (= e!56152 call!8211)))

(declare-fun b!86138 () Bool)

(declare-fun e!56153 () Bool)

(assert (=> b!86138 (= e!56153 (contains!755 Nil!1517 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86139 () Bool)

(assert (=> b!86139 (= e!56152 call!8211)))

(declare-fun bm!8208 () Bool)

(declare-fun c!14034 () Bool)

(assert (=> bm!8208 (= call!8211 (arrayNoDuplicates!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14034 (Cons!1516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1517) Nil!1517)))))

(declare-fun d!22363 () Bool)

(declare-fun res!44322 () Bool)

(declare-fun e!56150 () Bool)

(assert (=> d!22363 (=> res!44322 e!56150)))

(assert (=> d!22363 (= res!44322 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22363 (= (arrayNoDuplicates!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 Nil!1517) e!56150)))

(declare-fun b!86140 () Bool)

(declare-fun e!56151 () Bool)

(assert (=> b!86140 (= e!56151 e!56152)))

(assert (=> b!86140 (= c!14034 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86141 () Bool)

(assert (=> b!86141 (= e!56150 e!56151)))

(declare-fun res!44323 () Bool)

(assert (=> b!86141 (=> (not res!44323) (not e!56151))))

(assert (=> b!86141 (= res!44323 (not e!56153))))

(declare-fun res!44324 () Bool)

(assert (=> b!86141 (=> (not res!44324) (not e!56153))))

(assert (=> b!86141 (= res!44324 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22363 (not res!44322)) b!86141))

(assert (= (and b!86141 res!44324) b!86138))

(assert (= (and b!86141 res!44323) b!86140))

(assert (= (and b!86140 c!14034) b!86137))

(assert (= (and b!86140 (not c!14034)) b!86139))

(assert (= (or b!86137 b!86139) bm!8208))

(assert (=> b!86138 m!90363))

(assert (=> b!86138 m!90363))

(declare-fun m!90993 () Bool)

(assert (=> b!86138 m!90993))

(assert (=> bm!8208 m!90363))

(declare-fun m!90995 () Bool)

(assert (=> bm!8208 m!90995))

(assert (=> b!86140 m!90363))

(assert (=> b!86140 m!90363))

(assert (=> b!86140 m!90365))

(assert (=> b!86141 m!90363))

(assert (=> b!86141 m!90363))

(assert (=> b!86141 m!90365))

(assert (=> b!85472 d!22363))

(assert (=> bm!8141 d!22339))

(declare-fun d!22365 () Bool)

(assert (=> d!22365 (= (apply!82 lt!40441 lt!40439) (get!1198 (getValueByKey!140 (toList!746 lt!40441) lt!40439)))))

(declare-fun bs!3634 () Bool)

(assert (= bs!3634 d!22365))

(declare-fun m!90997 () Bool)

(assert (=> bs!3634 m!90997))

(assert (=> bs!3634 m!90997))

(declare-fun m!90999 () Bool)

(assert (=> bs!3634 m!90999))

(assert (=> b!85463 d!22365))

(assert (=> b!85463 d!22157))

(declare-fun d!22367 () Bool)

(assert (=> d!22367 (contains!753 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40444)))

(declare-fun lt!40939 () Unit!2517)

(declare-fun choose!507 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2517)

(assert (=> d!22367 (= lt!40939 (choose!507 lt!40437 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40444))))

(assert (=> d!22367 (contains!753 lt!40437 lt!40444)))

(assert (=> d!22367 (= (addStillContains!58 lt!40437 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40444) lt!40939)))

(declare-fun bs!3635 () Bool)

(assert (= bs!3635 d!22367))

(assert (=> bs!3635 m!90025))

(assert (=> bs!3635 m!90025))

(assert (=> bs!3635 m!90027))

(declare-fun m!91001 () Bool)

(assert (=> bs!3635 m!91001))

(declare-fun m!91003 () Bool)

(assert (=> bs!3635 m!91003))

(assert (=> b!85463 d!22367))

(declare-fun d!22369 () Bool)

(assert (=> d!22369 (= (apply!82 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40447) (apply!82 lt!40449 lt!40447))))

(declare-fun lt!40942 () Unit!2517)

(declare-fun choose!508 (ListLongMap!1461 (_ BitVec 64) V!3027 (_ BitVec 64)) Unit!2517)

(assert (=> d!22369 (= lt!40942 (choose!508 lt!40449 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40447))))

(declare-fun e!56156 () Bool)

(assert (=> d!22369 e!56156))

(declare-fun res!44327 () Bool)

(assert (=> d!22369 (=> (not res!44327) (not e!56156))))

(assert (=> d!22369 (= res!44327 (contains!753 lt!40449 lt!40447))))

(assert (=> d!22369 (= (addApplyDifferent!58 lt!40449 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40447) lt!40942)))

(declare-fun b!86146 () Bool)

(assert (=> b!86146 (= e!56156 (not (= lt!40447 lt!40448)))))

(assert (= (and d!22369 res!44327) b!86146))

(assert (=> d!22369 m!90011))

(declare-fun m!91005 () Bool)

(assert (=> d!22369 m!91005))

(declare-fun m!91007 () Bool)

(assert (=> d!22369 m!91007))

(assert (=> d!22369 m!90003))

(assert (=> d!22369 m!90011))

(assert (=> d!22369 m!90013))

(assert (=> b!85463 d!22369))

(declare-fun d!22371 () Bool)

(assert (=> d!22371 (= (apply!82 lt!40449 lt!40447) (get!1198 (getValueByKey!140 (toList!746 lt!40449) lt!40447)))))

(declare-fun bs!3636 () Bool)

(assert (= bs!3636 d!22371))

(declare-fun m!91009 () Bool)

(assert (=> bs!3636 m!91009))

(assert (=> bs!3636 m!91009))

(declare-fun m!91011 () Bool)

(assert (=> bs!3636 m!91011))

(assert (=> b!85463 d!22371))

(declare-fun d!22373 () Bool)

(assert (=> d!22373 (= (apply!82 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40440) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40440)))))

(declare-fun bs!3637 () Bool)

(assert (= bs!3637 d!22373))

(declare-fun m!91013 () Bool)

(assert (=> bs!3637 m!91013))

(assert (=> bs!3637 m!91013))

(declare-fun m!91015 () Bool)

(assert (=> bs!3637 m!91015))

(assert (=> b!85463 d!22373))

(declare-fun d!22375 () Bool)

(declare-fun e!56157 () Bool)

(assert (=> d!22375 e!56157))

(declare-fun res!44328 () Bool)

(assert (=> d!22375 (=> (not res!44328) (not e!56157))))

(declare-fun lt!40945 () ListLongMap!1461)

(assert (=> d!22375 (= res!44328 (contains!753 lt!40945 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40944 () List!1519)

(assert (=> d!22375 (= lt!40945 (ListLongMap!1462 lt!40944))))

(declare-fun lt!40946 () Unit!2517)

(declare-fun lt!40943 () Unit!2517)

(assert (=> d!22375 (= lt!40946 lt!40943)))

(assert (=> d!22375 (= (getValueByKey!140 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22375 (= lt!40943 (lemmaContainsTupThenGetReturnValue!57 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22375 (= lt!40944 (insertStrictlySorted!60 (toList!746 lt!40441) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22375 (= (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40945)))

(declare-fun b!86147 () Bool)

(declare-fun res!44329 () Bool)

(assert (=> b!86147 (=> (not res!44329) (not e!56157))))

(assert (=> b!86147 (= res!44329 (= (getValueByKey!140 (toList!746 lt!40945) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86148 () Bool)

(assert (=> b!86148 (= e!56157 (contains!754 (toList!746 lt!40945) (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22375 res!44328) b!86147))

(assert (= (and b!86147 res!44329) b!86148))

(declare-fun m!91017 () Bool)

(assert (=> d!22375 m!91017))

(declare-fun m!91019 () Bool)

(assert (=> d!22375 m!91019))

(declare-fun m!91021 () Bool)

(assert (=> d!22375 m!91021))

(declare-fun m!91023 () Bool)

(assert (=> d!22375 m!91023))

(declare-fun m!91025 () Bool)

(assert (=> b!86147 m!91025))

(declare-fun m!91027 () Bool)

(assert (=> b!86148 m!91027))

(assert (=> b!85463 d!22375))

(declare-fun d!22377 () Bool)

(assert (=> d!22377 (= (apply!82 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40447) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40447)))))

(declare-fun bs!3638 () Bool)

(assert (= bs!3638 d!22377))

(declare-fun m!91029 () Bool)

(assert (=> bs!3638 m!91029))

(assert (=> bs!3638 m!91029))

(declare-fun m!91031 () Bool)

(assert (=> bs!3638 m!91031))

(assert (=> b!85463 d!22377))

(declare-fun d!22379 () Bool)

(declare-fun e!56158 () Bool)

(assert (=> d!22379 e!56158))

(declare-fun res!44330 () Bool)

(assert (=> d!22379 (=> (not res!44330) (not e!56158))))

(declare-fun lt!40949 () ListLongMap!1461)

(assert (=> d!22379 (= res!44330 (contains!753 lt!40949 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40948 () List!1519)

(assert (=> d!22379 (= lt!40949 (ListLongMap!1462 lt!40948))))

(declare-fun lt!40950 () Unit!2517)

(declare-fun lt!40947 () Unit!2517)

(assert (=> d!22379 (= lt!40950 lt!40947)))

(assert (=> d!22379 (= (getValueByKey!140 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22379 (= lt!40947 (lemmaContainsTupThenGetReturnValue!57 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22379 (= lt!40948 (insertStrictlySorted!60 (toList!746 lt!40437) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22379 (= (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40949)))

(declare-fun b!86149 () Bool)

(declare-fun res!44331 () Bool)

(assert (=> b!86149 (=> (not res!44331) (not e!56158))))

(assert (=> b!86149 (= res!44331 (= (getValueByKey!140 (toList!746 lt!40949) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86150 () Bool)

(assert (=> b!86150 (= e!56158 (contains!754 (toList!746 lt!40949) (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22379 res!44330) b!86149))

(assert (= (and b!86149 res!44331) b!86150))

(declare-fun m!91033 () Bool)

(assert (=> d!22379 m!91033))

(declare-fun m!91035 () Bool)

(assert (=> d!22379 m!91035))

(declare-fun m!91037 () Bool)

(assert (=> d!22379 m!91037))

(declare-fun m!91039 () Bool)

(assert (=> d!22379 m!91039))

(declare-fun m!91041 () Bool)

(assert (=> b!86149 m!91041))

(declare-fun m!91043 () Bool)

(assert (=> b!86150 m!91043))

(assert (=> b!85463 d!22379))

(declare-fun d!22381 () Bool)

(declare-fun e!56159 () Bool)

(assert (=> d!22381 e!56159))

(declare-fun res!44332 () Bool)

(assert (=> d!22381 (=> (not res!44332) (not e!56159))))

(declare-fun lt!40953 () ListLongMap!1461)

(assert (=> d!22381 (= res!44332 (contains!753 lt!40953 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40952 () List!1519)

(assert (=> d!22381 (= lt!40953 (ListLongMap!1462 lt!40952))))

(declare-fun lt!40954 () Unit!2517)

(declare-fun lt!40951 () Unit!2517)

(assert (=> d!22381 (= lt!40954 lt!40951)))

(assert (=> d!22381 (= (getValueByKey!140 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22381 (= lt!40951 (lemmaContainsTupThenGetReturnValue!57 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22381 (= lt!40952 (insertStrictlySorted!60 (toList!746 lt!40451) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22381 (= (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40953)))

(declare-fun b!86151 () Bool)

(declare-fun res!44333 () Bool)

(assert (=> b!86151 (=> (not res!44333) (not e!56159))))

(assert (=> b!86151 (= res!44333 (= (getValueByKey!140 (toList!746 lt!40953) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86152 () Bool)

(assert (=> b!86152 (= e!56159 (contains!754 (toList!746 lt!40953) (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22381 res!44332) b!86151))

(assert (= (and b!86151 res!44333) b!86152))

(declare-fun m!91045 () Bool)

(assert (=> d!22381 m!91045))

(declare-fun m!91047 () Bool)

(assert (=> d!22381 m!91047))

(declare-fun m!91049 () Bool)

(assert (=> d!22381 m!91049))

(declare-fun m!91051 () Bool)

(assert (=> d!22381 m!91051))

(declare-fun m!91053 () Bool)

(assert (=> b!86151 m!91053))

(declare-fun m!91055 () Bool)

(assert (=> b!86152 m!91055))

(assert (=> b!85463 d!22381))

(declare-fun d!22383 () Bool)

(declare-fun e!56161 () Bool)

(assert (=> d!22383 e!56161))

(declare-fun res!44334 () Bool)

(assert (=> d!22383 (=> res!44334 e!56161)))

(declare-fun lt!40955 () Bool)

(assert (=> d!22383 (= res!44334 (not lt!40955))))

(declare-fun lt!40956 () Bool)

(assert (=> d!22383 (= lt!40955 lt!40956)))

(declare-fun lt!40958 () Unit!2517)

(declare-fun e!56160 () Unit!2517)

(assert (=> d!22383 (= lt!40958 e!56160)))

(declare-fun c!14035 () Bool)

(assert (=> d!22383 (= c!14035 lt!40956)))

(assert (=> d!22383 (= lt!40956 (containsKey!144 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))

(assert (=> d!22383 (= (contains!753 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40444) lt!40955)))

(declare-fun b!86153 () Bool)

(declare-fun lt!40957 () Unit!2517)

(assert (=> b!86153 (= e!56160 lt!40957)))

(assert (=> b!86153 (= lt!40957 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))

(assert (=> b!86153 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))

(declare-fun b!86154 () Bool)

(declare-fun Unit!2547 () Unit!2517)

(assert (=> b!86154 (= e!56160 Unit!2547)))

(declare-fun b!86155 () Bool)

(assert (=> b!86155 (= e!56161 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444)))))

(assert (= (and d!22383 c!14035) b!86153))

(assert (= (and d!22383 (not c!14035)) b!86154))

(assert (= (and d!22383 (not res!44334)) b!86155))

(declare-fun m!91057 () Bool)

(assert (=> d!22383 m!91057))

(declare-fun m!91059 () Bool)

(assert (=> b!86153 m!91059))

(declare-fun m!91061 () Bool)

(assert (=> b!86153 m!91061))

(assert (=> b!86153 m!91061))

(declare-fun m!91063 () Bool)

(assert (=> b!86153 m!91063))

(assert (=> b!86155 m!91061))

(assert (=> b!86155 m!91061))

(assert (=> b!86155 m!91063))

(assert (=> b!85463 d!22383))

(declare-fun d!22385 () Bool)

(assert (=> d!22385 (= (apply!82 lt!40451 lt!40440) (get!1198 (getValueByKey!140 (toList!746 lt!40451) lt!40440)))))

(declare-fun bs!3639 () Bool)

(assert (= bs!3639 d!22385))

(declare-fun m!91065 () Bool)

(assert (=> bs!3639 m!91065))

(assert (=> bs!3639 m!91065))

(declare-fun m!91067 () Bool)

(assert (=> bs!3639 m!91067))

(assert (=> b!85463 d!22385))

(declare-fun d!22387 () Bool)

(assert (=> d!22387 (= (apply!82 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40439) (apply!82 lt!40441 lt!40439))))

(declare-fun lt!40959 () Unit!2517)

(assert (=> d!22387 (= lt!40959 (choose!508 lt!40441 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40439))))

(declare-fun e!56162 () Bool)

(assert (=> d!22387 e!56162))

(declare-fun res!44335 () Bool)

(assert (=> d!22387 (=> (not res!44335) (not e!56162))))

(assert (=> d!22387 (= res!44335 (contains!753 lt!40441 lt!40439))))

(assert (=> d!22387 (= (addApplyDifferent!58 lt!40441 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40439) lt!40959)))

(declare-fun b!86156 () Bool)

(assert (=> b!86156 (= e!56162 (not (= lt!40439 lt!40431)))))

(assert (= (and d!22387 res!44335) b!86156))

(assert (=> d!22387 m!90005))

(declare-fun m!91069 () Bool)

(assert (=> d!22387 m!91069))

(declare-fun m!91071 () Bool)

(assert (=> d!22387 m!91071))

(assert (=> d!22387 m!90023))

(assert (=> d!22387 m!90005))

(assert (=> d!22387 m!90007))

(assert (=> b!85463 d!22387))

(declare-fun d!22389 () Bool)

(assert (=> d!22389 (= (apply!82 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40440) (apply!82 lt!40451 lt!40440))))

(declare-fun lt!40960 () Unit!2517)

(assert (=> d!22389 (= lt!40960 (choose!508 lt!40451 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40440))))

(declare-fun e!56163 () Bool)

(assert (=> d!22389 e!56163))

(declare-fun res!44336 () Bool)

(assert (=> d!22389 (=> (not res!44336) (not e!56163))))

(assert (=> d!22389 (= res!44336 (contains!753 lt!40451 lt!40440))))

(assert (=> d!22389 (= (addApplyDifferent!58 lt!40451 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40440) lt!40960)))

(declare-fun b!86157 () Bool)

(assert (=> b!86157 (= e!56163 (not (= lt!40440 lt!40445)))))

(assert (= (and d!22389 res!44336) b!86157))

(assert (=> d!22389 m!90015))

(declare-fun m!91073 () Bool)

(assert (=> d!22389 m!91073))

(declare-fun m!91075 () Bool)

(assert (=> d!22389 m!91075))

(assert (=> d!22389 m!90009))

(assert (=> d!22389 m!90015))

(assert (=> d!22389 m!90017))

(assert (=> b!85463 d!22389))

(declare-fun d!22391 () Bool)

(assert (=> d!22391 (= (apply!82 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40439) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40439)))))

(declare-fun bs!3640 () Bool)

(assert (= bs!3640 d!22391))

(declare-fun m!91077 () Bool)

(assert (=> bs!3640 m!91077))

(assert (=> bs!3640 m!91077))

(declare-fun m!91079 () Bool)

(assert (=> bs!3640 m!91079))

(assert (=> b!85463 d!22391))

(declare-fun d!22393 () Bool)

(declare-fun e!56164 () Bool)

(assert (=> d!22393 e!56164))

(declare-fun res!44337 () Bool)

(assert (=> d!22393 (=> (not res!44337) (not e!56164))))

(declare-fun lt!40963 () ListLongMap!1461)

(assert (=> d!22393 (= res!44337 (contains!753 lt!40963 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40962 () List!1519)

(assert (=> d!22393 (= lt!40963 (ListLongMap!1462 lt!40962))))

(declare-fun lt!40964 () Unit!2517)

(declare-fun lt!40961 () Unit!2517)

(assert (=> d!22393 (= lt!40964 lt!40961)))

(assert (=> d!22393 (= (getValueByKey!140 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22393 (= lt!40961 (lemmaContainsTupThenGetReturnValue!57 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22393 (= lt!40962 (insertStrictlySorted!60 (toList!746 lt!40449) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22393 (= (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40963)))

(declare-fun b!86158 () Bool)

(declare-fun res!44338 () Bool)

(assert (=> b!86158 (=> (not res!44338) (not e!56164))))

(assert (=> b!86158 (= res!44338 (= (getValueByKey!140 (toList!746 lt!40963) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86159 () Bool)

(assert (=> b!86159 (= e!56164 (contains!754 (toList!746 lt!40963) (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22393 res!44337) b!86158))

(assert (= (and b!86158 res!44338) b!86159))

(declare-fun m!91081 () Bool)

(assert (=> d!22393 m!91081))

(declare-fun m!91083 () Bool)

(assert (=> d!22393 m!91083))

(declare-fun m!91085 () Bool)

(assert (=> d!22393 m!91085))

(declare-fun m!91087 () Bool)

(assert (=> d!22393 m!91087))

(declare-fun m!91089 () Bool)

(assert (=> b!86158 m!91089))

(declare-fun m!91091 () Bool)

(assert (=> b!86159 m!91091))

(assert (=> b!85463 d!22393))

(declare-fun call!8216 () Bool)

(declare-fun bm!8213 () Bool)

(assert (=> bm!8213 (= call!8216 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!86176 () Bool)

(declare-fun res!44349 () Bool)

(declare-fun e!56175 () Bool)

(assert (=> b!86176 (=> (not res!44349) (not e!56175))))

(declare-fun call!8217 () Bool)

(assert (=> b!86176 (= res!44349 call!8217)))

(declare-fun e!56174 () Bool)

(assert (=> b!86176 (= e!56174 e!56175)))

(declare-fun b!86177 () Bool)

(declare-fun lt!40970 () SeekEntryResult!243)

(assert (=> b!86177 (and (bvsge (index!3109 lt!40970) #b00000000000000000000000000000000) (bvslt (index!3109 lt!40970) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun res!44347 () Bool)

(assert (=> b!86177 (= res!44347 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!40970)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56173 () Bool)

(assert (=> b!86177 (=> (not res!44347) (not e!56173))))

(declare-fun b!86178 () Bool)

(declare-fun e!56176 () Bool)

(assert (=> b!86178 (= e!56176 e!56174)))

(declare-fun c!14041 () Bool)

(assert (=> b!86178 (= c!14041 ((_ is MissingVacant!243) lt!40970))))

(declare-fun b!86179 () Bool)

(declare-fun res!44348 () Bool)

(assert (=> b!86179 (=> (not res!44348) (not e!56175))))

(assert (=> b!86179 (= res!44348 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!40970)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86179 (and (bvsge (index!3112 lt!40970) #b00000000000000000000000000000000) (bvslt (index!3112 lt!40970) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86180 () Bool)

(assert (=> b!86180 (= e!56174 ((_ is Undefined!243) lt!40970))))

(declare-fun b!86181 () Bool)

(assert (=> b!86181 (= e!56175 (not call!8216))))

(declare-fun b!86183 () Bool)

(assert (=> b!86183 (= e!56173 (not call!8216))))

(declare-fun c!14040 () Bool)

(declare-fun bm!8214 () Bool)

(assert (=> bm!8214 (= call!8217 (inRange!0 (ite c!14040 (index!3109 lt!40970) (index!3112 lt!40970)) (mask!6366 newMap!16)))))

(declare-fun d!22395 () Bool)

(assert (=> d!22395 e!56176))

(assert (=> d!22395 (= c!14040 ((_ is MissingZero!243) lt!40970))))

(assert (=> d!22395 (= lt!40970 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun lt!40969 () Unit!2517)

(declare-fun choose!509 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2517)

(assert (=> d!22395 (= lt!40969 (choose!509 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22395 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22395 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) lt!40969)))

(declare-fun b!86182 () Bool)

(assert (=> b!86182 (= e!56176 e!56173)))

(declare-fun res!44350 () Bool)

(assert (=> b!86182 (= res!44350 call!8217)))

(assert (=> b!86182 (=> (not res!44350) (not e!56173))))

(assert (= (and d!22395 c!14040) b!86182))

(assert (= (and d!22395 (not c!14040)) b!86178))

(assert (= (and b!86182 res!44350) b!86177))

(assert (= (and b!86177 res!44347) b!86183))

(assert (= (and b!86178 c!14041) b!86176))

(assert (= (and b!86178 (not c!14041)) b!86180))

(assert (= (and b!86176 res!44349) b!86179))

(assert (= (and b!86179 res!44348) b!86181))

(assert (= (or b!86182 b!86176) bm!8214))

(assert (= (or b!86183 b!86181) bm!8213))

(assert (=> bm!8213 m!89857))

(assert (=> bm!8213 m!90057))

(assert (=> d!22395 m!89857))

(assert (=> d!22395 m!90067))

(assert (=> d!22395 m!89857))

(declare-fun m!91093 () Bool)

(assert (=> d!22395 m!91093))

(assert (=> d!22395 m!90385))

(declare-fun m!91095 () Bool)

(assert (=> b!86179 m!91095))

(declare-fun m!91097 () Bool)

(assert (=> bm!8214 m!91097))

(declare-fun m!91099 () Bool)

(assert (=> b!86177 m!91099))

(assert (=> bm!8122 d!22395))

(declare-fun bm!8217 () Bool)

(declare-fun call!8220 () (_ BitVec 32))

(assert (=> bm!8217 (= call!8220 (arrayCountValidKeys!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86192 () Bool)

(declare-fun e!56182 () (_ BitVec 32))

(assert (=> b!86192 (= e!56182 call!8220)))

(declare-fun b!86193 () Bool)

(assert (=> b!86193 (= e!56182 (bvadd #b00000000000000000000000000000001 call!8220))))

(declare-fun b!86195 () Bool)

(declare-fun e!56181 () (_ BitVec 32))

(assert (=> b!86195 (= e!56181 #b00000000000000000000000000000000)))

(declare-fun b!86194 () Bool)

(assert (=> b!86194 (= e!56181 e!56182)))

(declare-fun c!14047 () Bool)

(assert (=> b!86194 (= c!14047 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!22397 () Bool)

(declare-fun lt!40973 () (_ BitVec 32))

(assert (=> d!22397 (and (bvsge lt!40973 #b00000000000000000000000000000000) (bvsle lt!40973 (bvsub (size!2163 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22397 (= lt!40973 e!56181)))

(declare-fun c!14046 () Bool)

(assert (=> d!22397 (= c!14046 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22397 (and (bvsle #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2163 (_keys!4010 newMap!16)) (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22397 (= (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) lt!40973)))

(assert (= (and d!22397 c!14046) b!86195))

(assert (= (and d!22397 (not c!14046)) b!86194))

(assert (= (and b!86194 c!14047) b!86193))

(assert (= (and b!86194 (not c!14047)) b!86192))

(assert (= (or b!86193 b!86192) bm!8217))

(declare-fun m!91101 () Bool)

(assert (=> bm!8217 m!91101))

(assert (=> b!86194 m!90363))

(assert (=> b!86194 m!90363))

(assert (=> b!86194 m!90365))

(assert (=> b!85470 d!22397))

(declare-fun d!22399 () Bool)

(declare-fun e!56184 () Bool)

(assert (=> d!22399 e!56184))

(declare-fun res!44351 () Bool)

(assert (=> d!22399 (=> res!44351 e!56184)))

(declare-fun lt!40974 () Bool)

(assert (=> d!22399 (= res!44351 (not lt!40974))))

(declare-fun lt!40975 () Bool)

(assert (=> d!22399 (= lt!40974 lt!40975)))

(declare-fun lt!40977 () Unit!2517)

(declare-fun e!56183 () Unit!2517)

(assert (=> d!22399 (= lt!40977 e!56183)))

(declare-fun c!14048 () Bool)

(assert (=> d!22399 (= c!14048 lt!40975)))

(assert (=> d!22399 (= lt!40975 (containsKey!144 (toList!746 lt!40604) (_1!1110 lt!40318)))))

(assert (=> d!22399 (= (contains!753 lt!40604 (_1!1110 lt!40318)) lt!40974)))

(declare-fun b!86196 () Bool)

(declare-fun lt!40976 () Unit!2517)

(assert (=> b!86196 (= e!56183 lt!40976)))

(assert (=> b!86196 (= lt!40976 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40604) (_1!1110 lt!40318)))))

(assert (=> b!86196 (isDefined!93 (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318)))))

(declare-fun b!86197 () Bool)

(declare-fun Unit!2548 () Unit!2517)

(assert (=> b!86197 (= e!56183 Unit!2548)))

(declare-fun b!86198 () Bool)

(assert (=> b!86198 (= e!56184 (isDefined!93 (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318))))))

(assert (= (and d!22399 c!14048) b!86196))

(assert (= (and d!22399 (not c!14048)) b!86197))

(assert (= (and d!22399 (not res!44351)) b!86198))

(declare-fun m!91103 () Bool)

(assert (=> d!22399 m!91103))

(declare-fun m!91105 () Bool)

(assert (=> b!86196 m!91105))

(assert (=> b!86196 m!90217))

(assert (=> b!86196 m!90217))

(declare-fun m!91107 () Bool)

(assert (=> b!86196 m!91107))

(assert (=> b!86198 m!90217))

(assert (=> b!86198 m!90217))

(assert (=> b!86198 m!91107))

(assert (=> d!22165 d!22399))

(declare-fun b!86199 () Bool)

(declare-fun e!56185 () Option!146)

(assert (=> b!86199 (= e!56185 (Some!145 (_2!1110 (h!2106 lt!40603))))))

(declare-fun d!22401 () Bool)

(declare-fun c!14049 () Bool)

(assert (=> d!22401 (= c!14049 (and ((_ is Cons!1515) lt!40603) (= (_1!1110 (h!2106 lt!40603)) (_1!1110 lt!40318))))))

(assert (=> d!22401 (= (getValueByKey!140 lt!40603 (_1!1110 lt!40318)) e!56185)))

(declare-fun b!86202 () Bool)

(declare-fun e!56186 () Option!146)

(assert (=> b!86202 (= e!56186 None!144)))

(declare-fun b!86201 () Bool)

(assert (=> b!86201 (= e!56186 (getValueByKey!140 (t!5240 lt!40603) (_1!1110 lt!40318)))))

(declare-fun b!86200 () Bool)

(assert (=> b!86200 (= e!56185 e!56186)))

(declare-fun c!14050 () Bool)

(assert (=> b!86200 (= c!14050 (and ((_ is Cons!1515) lt!40603) (not (= (_1!1110 (h!2106 lt!40603)) (_1!1110 lt!40318)))))))

(assert (= (and d!22401 c!14049) b!86199))

(assert (= (and d!22401 (not c!14049)) b!86200))

(assert (= (and b!86200 c!14050) b!86201))

(assert (= (and b!86200 (not c!14050)) b!86202))

(declare-fun m!91109 () Bool)

(assert (=> b!86201 m!91109))

(assert (=> d!22165 d!22401))

(declare-fun d!22403 () Bool)

(assert (=> d!22403 (= (getValueByKey!140 lt!40603 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(declare-fun lt!40978 () Unit!2517)

(assert (=> d!22403 (= lt!40978 (choose!500 lt!40603 (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun e!56187 () Bool)

(assert (=> d!22403 e!56187))

(declare-fun res!44352 () Bool)

(assert (=> d!22403 (=> (not res!44352) (not e!56187))))

(assert (=> d!22403 (= res!44352 (isStrictlySorted!298 lt!40603))))

(assert (=> d!22403 (= (lemmaContainsTupThenGetReturnValue!57 lt!40603 (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!40978)))

(declare-fun b!86203 () Bool)

(declare-fun res!44353 () Bool)

(assert (=> b!86203 (=> (not res!44353) (not e!56187))))

(assert (=> b!86203 (= res!44353 (containsKey!144 lt!40603 (_1!1110 lt!40318)))))

(declare-fun b!86204 () Bool)

(assert (=> b!86204 (= e!56187 (contains!754 lt!40603 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22403 res!44352) b!86203))

(assert (= (and b!86203 res!44353) b!86204))

(assert (=> d!22403 m!90211))

(declare-fun m!91111 () Bool)

(assert (=> d!22403 m!91111))

(declare-fun m!91113 () Bool)

(assert (=> d!22403 m!91113))

(declare-fun m!91115 () Bool)

(assert (=> b!86203 m!91115))

(declare-fun m!91117 () Bool)

(assert (=> b!86204 m!91117))

(assert (=> d!22165 d!22403))

(declare-fun b!86205 () Bool)

(declare-fun e!56189 () List!1519)

(declare-fun call!8222 () List!1519)

(assert (=> b!86205 (= e!56189 call!8222)))

(declare-fun b!86206 () Bool)

(assert (=> b!86206 (= e!56189 call!8222)))

(declare-fun b!86207 () Bool)

(declare-fun res!44354 () Bool)

(declare-fun e!56190 () Bool)

(assert (=> b!86207 (=> (not res!44354) (not e!56190))))

(declare-fun lt!40979 () List!1519)

(assert (=> b!86207 (= res!44354 (containsKey!144 lt!40979 (_1!1110 lt!40318)))))

(declare-fun b!86208 () Bool)

(declare-fun e!56191 () List!1519)

(declare-fun e!56192 () List!1519)

(assert (=> b!86208 (= e!56191 e!56192)))

(declare-fun c!14052 () Bool)

(assert (=> b!86208 (= c!14052 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 lt!40322))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 lt!40322)))) (_1!1110 lt!40318))))))

(declare-fun b!86209 () Bool)

(declare-fun call!8221 () List!1519)

(assert (=> b!86209 (= e!56191 call!8221)))

(declare-fun c!14054 () Bool)

(declare-fun b!86210 () Bool)

(assert (=> b!86210 (= c!14054 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 lt!40322))) (bvsgt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 lt!40322)))) (_1!1110 lt!40318))))))

(assert (=> b!86210 (= e!56192 e!56189)))

(declare-fun e!56188 () List!1519)

(declare-fun b!86211 () Bool)

(assert (=> b!86211 (= e!56188 (insertStrictlySorted!60 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun b!86212 () Bool)

(assert (=> b!86212 (= e!56188 (ite c!14052 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))) (ite c!14054 (Cons!1515 (h!2106 (toList!746 (+!110 lt!40331 lt!40322))) (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) Nil!1516)))))

(declare-fun c!14051 () Bool)

(declare-fun bm!8218 () Bool)

(assert (=> bm!8218 (= call!8221 ($colon$colon!72 e!56188 (ite c!14051 (h!2106 (toList!746 (+!110 lt!40331 lt!40322))) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))))))

(declare-fun c!14053 () Bool)

(assert (=> bm!8218 (= c!14053 c!14051)))

(declare-fun bm!8219 () Bool)

(declare-fun call!8223 () List!1519)

(assert (=> bm!8219 (= call!8223 call!8221)))

(declare-fun bm!8220 () Bool)

(assert (=> bm!8220 (= call!8222 call!8223)))

(declare-fun b!86214 () Bool)

(assert (=> b!86214 (= e!56192 call!8223)))

(declare-fun d!22405 () Bool)

(assert (=> d!22405 e!56190))

(declare-fun res!44355 () Bool)

(assert (=> d!22405 (=> (not res!44355) (not e!56190))))

(assert (=> d!22405 (= res!44355 (isStrictlySorted!298 lt!40979))))

(assert (=> d!22405 (= lt!40979 e!56191)))

(assert (=> d!22405 (= c!14051 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 lt!40322))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 lt!40322)))) (_1!1110 lt!40318))))))

(assert (=> d!22405 (isStrictlySorted!298 (toList!746 (+!110 lt!40331 lt!40322)))))

(assert (=> d!22405 (= (insertStrictlySorted!60 (toList!746 (+!110 lt!40331 lt!40322)) (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!40979)))

(declare-fun b!86213 () Bool)

(assert (=> b!86213 (= e!56190 (contains!754 lt!40979 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22405 c!14051) b!86209))

(assert (= (and d!22405 (not c!14051)) b!86208))

(assert (= (and b!86208 c!14052) b!86214))

(assert (= (and b!86208 (not c!14052)) b!86210))

(assert (= (and b!86210 c!14054) b!86205))

(assert (= (and b!86210 (not c!14054)) b!86206))

(assert (= (or b!86205 b!86206) bm!8220))

(assert (= (or b!86214 bm!8220) bm!8219))

(assert (= (or b!86209 bm!8219) bm!8218))

(assert (= (and bm!8218 c!14053) b!86211))

(assert (= (and bm!8218 (not c!14053)) b!86212))

(assert (= (and d!22405 res!44355) b!86207))

(assert (= (and b!86207 res!44354) b!86213))

(declare-fun m!91119 () Bool)

(assert (=> d!22405 m!91119))

(declare-fun m!91121 () Bool)

(assert (=> d!22405 m!91121))

(declare-fun m!91123 () Bool)

(assert (=> b!86207 m!91123))

(declare-fun m!91125 () Bool)

(assert (=> b!86211 m!91125))

(declare-fun m!91127 () Bool)

(assert (=> b!86213 m!91127))

(declare-fun m!91129 () Bool)

(assert (=> bm!8218 m!91129))

(assert (=> d!22165 d!22405))

(declare-fun d!22407 () Bool)

(declare-fun e!56194 () Bool)

(assert (=> d!22407 e!56194))

(declare-fun res!44356 () Bool)

(assert (=> d!22407 (=> res!44356 e!56194)))

(declare-fun lt!40980 () Bool)

(assert (=> d!22407 (= res!44356 (not lt!40980))))

(declare-fun lt!40981 () Bool)

(assert (=> d!22407 (= lt!40980 lt!40981)))

(declare-fun lt!40983 () Unit!2517)

(declare-fun e!56193 () Unit!2517)

(assert (=> d!22407 (= lt!40983 e!56193)))

(declare-fun c!14055 () Bool)

(assert (=> d!22407 (= c!14055 lt!40981)))

(assert (=> d!22407 (= lt!40981 (containsKey!144 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22407 (= (contains!753 lt!40584 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40980)))

(declare-fun b!86215 () Bool)

(declare-fun lt!40982 () Unit!2517)

(assert (=> b!86215 (= e!56193 lt!40982)))

(assert (=> b!86215 (= lt!40982 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!86215 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86216 () Bool)

(declare-fun Unit!2549 () Unit!2517)

(assert (=> b!86216 (= e!56193 Unit!2549)))

(declare-fun b!86217 () Bool)

(assert (=> b!86217 (= e!56194 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22407 c!14055) b!86215))

(assert (= (and d!22407 (not c!14055)) b!86216))

(assert (= (and d!22407 (not res!44356)) b!86217))

(assert (=> d!22407 m!89983))

(declare-fun m!91131 () Bool)

(assert (=> d!22407 m!91131))

(assert (=> b!86215 m!89983))

(declare-fun m!91133 () Bool)

(assert (=> b!86215 m!91133))

(assert (=> b!86215 m!89983))

(declare-fun m!91135 () Bool)

(assert (=> b!86215 m!91135))

(assert (=> b!86215 m!91135))

(declare-fun m!91137 () Bool)

(assert (=> b!86215 m!91137))

(assert (=> b!86217 m!89983))

(assert (=> b!86217 m!91135))

(assert (=> b!86217 m!91135))

(assert (=> b!86217 m!91137))

(assert (=> b!85651 d!22407))

(declare-fun d!22409 () Bool)

(assert (=> d!22409 (= (apply!82 lt!40584 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1198 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3641 () Bool)

(assert (= bs!3641 d!22409))

(assert (=> bs!3641 m!89983))

(assert (=> bs!3641 m!91135))

(assert (=> bs!3641 m!91135))

(declare-fun m!91139 () Bool)

(assert (=> bs!3641 m!91139))

(assert (=> b!85655 d!22409))

(assert (=> b!85655 d!22209))

(declare-fun d!22411 () Bool)

(declare-fun e!56195 () Bool)

(assert (=> d!22411 e!56195))

(declare-fun res!44357 () Bool)

(assert (=> d!22411 (=> (not res!44357) (not e!56195))))

(declare-fun lt!40986 () ListLongMap!1461)

(assert (=> d!22411 (= res!44357 (contains!753 lt!40986 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40985 () List!1519)

(assert (=> d!22411 (= lt!40986 (ListLongMap!1462 lt!40985))))

(declare-fun lt!40987 () Unit!2517)

(declare-fun lt!40984 () Unit!2517)

(assert (=> d!22411 (= lt!40987 lt!40984)))

(assert (=> d!22411 (= (getValueByKey!140 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22411 (= lt!40984 (lemmaContainsTupThenGetReturnValue!57 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22411 (= lt!40985 (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22411 (= (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40986)))

(declare-fun b!86218 () Bool)

(declare-fun res!44358 () Bool)

(assert (=> b!86218 (=> (not res!44358) (not e!56195))))

(assert (=> b!86218 (= res!44358 (= (getValueByKey!140 (toList!746 lt!40986) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86219 () Bool)

(assert (=> b!86219 (= e!56195 (contains!754 (toList!746 lt!40986) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22411 res!44357) b!86218))

(assert (= (and b!86218 res!44358) b!86219))

(declare-fun m!91141 () Bool)

(assert (=> d!22411 m!91141))

(declare-fun m!91143 () Bool)

(assert (=> d!22411 m!91143))

(declare-fun m!91145 () Bool)

(assert (=> d!22411 m!91145))

(declare-fun m!91147 () Bool)

(assert (=> d!22411 m!91147))

(declare-fun m!91149 () Bool)

(assert (=> b!86218 m!91149))

(declare-fun m!91151 () Bool)

(assert (=> b!86219 m!91151))

(assert (=> d!22167 d!22411))

(declare-fun d!22413 () Bool)

(declare-fun e!56196 () Bool)

(assert (=> d!22413 e!56196))

(declare-fun res!44359 () Bool)

(assert (=> d!22413 (=> (not res!44359) (not e!56196))))

(declare-fun lt!40990 () ListLongMap!1461)

(assert (=> d!22413 (= res!44359 (contains!753 lt!40990 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!40989 () List!1519)

(assert (=> d!22413 (= lt!40990 (ListLongMap!1462 lt!40989))))

(declare-fun lt!40991 () Unit!2517)

(declare-fun lt!40988 () Unit!2517)

(assert (=> d!22413 (= lt!40991 lt!40988)))

(assert (=> d!22413 (= (getValueByKey!140 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22413 (= lt!40988 (lemmaContainsTupThenGetReturnValue!57 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22413 (= lt!40989 (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22413 (= (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!40990)))

(declare-fun b!86220 () Bool)

(declare-fun res!44360 () Bool)

(assert (=> b!86220 (=> (not res!44360) (not e!56196))))

(assert (=> b!86220 (= res!44360 (= (getValueByKey!140 (toList!746 lt!40990) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!86221 () Bool)

(assert (=> b!86221 (= e!56196 (contains!754 (toList!746 lt!40990) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22413 res!44359) b!86220))

(assert (= (and b!86220 res!44360) b!86221))

(declare-fun m!91153 () Bool)

(assert (=> d!22413 m!91153))

(declare-fun m!91155 () Bool)

(assert (=> d!22413 m!91155))

(declare-fun m!91157 () Bool)

(assert (=> d!22413 m!91157))

(declare-fun m!91159 () Bool)

(assert (=> d!22413 m!91159))

(declare-fun m!91161 () Bool)

(assert (=> b!86220 m!91161))

(declare-fun m!91163 () Bool)

(assert (=> b!86221 m!91163))

(assert (=> d!22167 d!22413))

(declare-fun d!22415 () Bool)

(declare-fun e!56197 () Bool)

(assert (=> d!22415 e!56197))

(declare-fun res!44361 () Bool)

(assert (=> d!22415 (=> (not res!44361) (not e!56197))))

(declare-fun lt!40994 () ListLongMap!1461)

(assert (=> d!22415 (= res!44361 (contains!753 lt!40994 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!40993 () List!1519)

(assert (=> d!22415 (= lt!40994 (ListLongMap!1462 lt!40993))))

(declare-fun lt!40995 () Unit!2517)

(declare-fun lt!40992 () Unit!2517)

(assert (=> d!22415 (= lt!40995 lt!40992)))

(assert (=> d!22415 (= (getValueByKey!140 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22415 (= lt!40992 (lemmaContainsTupThenGetReturnValue!57 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22415 (= lt!40993 (insertStrictlySorted!60 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22415 (= (+!110 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40994)))

(declare-fun b!86222 () Bool)

(declare-fun res!44362 () Bool)

(assert (=> b!86222 (=> (not res!44362) (not e!56197))))

(assert (=> b!86222 (= res!44362 (= (getValueByKey!140 (toList!746 lt!40994) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86223 () Bool)

(assert (=> b!86223 (= e!56197 (contains!754 (toList!746 lt!40994) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22415 res!44361) b!86222))

(assert (= (and b!86222 res!44362) b!86223))

(declare-fun m!91165 () Bool)

(assert (=> d!22415 m!91165))

(declare-fun m!91167 () Bool)

(assert (=> d!22415 m!91167))

(declare-fun m!91169 () Bool)

(assert (=> d!22415 m!91169))

(declare-fun m!91171 () Bool)

(assert (=> d!22415 m!91171))

(declare-fun m!91173 () Bool)

(assert (=> b!86222 m!91173))

(declare-fun m!91175 () Bool)

(assert (=> b!86223 m!91175))

(assert (=> d!22167 d!22415))

(declare-fun d!22417 () Bool)

(assert (=> d!22417 (= (+!110 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (+!110 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (=> d!22417 true))

(declare-fun _$28!143 () Unit!2517)

(assert (=> d!22417 (= (choose!498 lt!40325 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) _$28!143)))

(declare-fun bs!3642 () Bool)

(assert (= bs!3642 d!22417))

(assert (=> bs!3642 m!90227))

(assert (=> bs!3642 m!90227))

(assert (=> bs!3642 m!90229))

(assert (=> bs!3642 m!90223))

(assert (=> bs!3642 m!90223))

(assert (=> bs!3642 m!90225))

(assert (=> d!22167 d!22417))

(declare-fun d!22419 () Bool)

(declare-fun e!56198 () Bool)

(assert (=> d!22419 e!56198))

(declare-fun res!44363 () Bool)

(assert (=> d!22419 (=> (not res!44363) (not e!56198))))

(declare-fun lt!40998 () ListLongMap!1461)

(assert (=> d!22419 (= res!44363 (contains!753 lt!40998 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!40997 () List!1519)

(assert (=> d!22419 (= lt!40998 (ListLongMap!1462 lt!40997))))

(declare-fun lt!40999 () Unit!2517)

(declare-fun lt!40996 () Unit!2517)

(assert (=> d!22419 (= lt!40999 lt!40996)))

(assert (=> d!22419 (= (getValueByKey!140 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22419 (= lt!40996 (lemmaContainsTupThenGetReturnValue!57 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22419 (= lt!40997 (insertStrictlySorted!60 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22419 (= (+!110 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!40998)))

(declare-fun b!86224 () Bool)

(declare-fun res!44364 () Bool)

(assert (=> b!86224 (=> (not res!44364) (not e!56198))))

(assert (=> b!86224 (= res!44364 (= (getValueByKey!140 (toList!746 lt!40998) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!86225 () Bool)

(assert (=> b!86225 (= e!56198 (contains!754 (toList!746 lt!40998) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22419 res!44363) b!86224))

(assert (= (and b!86224 res!44364) b!86225))

(declare-fun m!91177 () Bool)

(assert (=> d!22419 m!91177))

(declare-fun m!91179 () Bool)

(assert (=> d!22419 m!91179))

(declare-fun m!91181 () Bool)

(assert (=> d!22419 m!91181))

(declare-fun m!91183 () Bool)

(assert (=> d!22419 m!91183))

(declare-fun m!91185 () Bool)

(assert (=> b!86224 m!91185))

(declare-fun m!91187 () Bool)

(assert (=> b!86225 m!91187))

(assert (=> d!22167 d!22419))

(declare-fun d!22421 () Bool)

(declare-fun e!56201 () Bool)

(assert (=> d!22421 e!56201))

(declare-fun res!44370 () Bool)

(assert (=> d!22421 (=> (not res!44370) (not e!56201))))

(declare-fun lt!41004 () SeekEntryResult!243)

(assert (=> d!22421 (= res!44370 ((_ is Found!243) lt!41004))))

(assert (=> d!22421 (= lt!41004 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun lt!41005 () Unit!2517)

(declare-fun choose!510 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) Int) Unit!2517)

(assert (=> d!22421 (= lt!41005 (choose!510 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22421 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22421 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) lt!41005)))

(declare-fun b!86230 () Bool)

(declare-fun res!44369 () Bool)

(assert (=> b!86230 (=> (not res!44369) (not e!56201))))

(assert (=> b!86230 (= res!44369 (inRange!0 (index!3110 lt!41004) (mask!6366 newMap!16)))))

(declare-fun b!86231 () Bool)

(assert (=> b!86231 (= e!56201 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!41004)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!86231 (and (bvsge (index!3110 lt!41004) #b00000000000000000000000000000000) (bvslt (index!3110 lt!41004) (size!2163 (_keys!4010 newMap!16))))))

(assert (= (and d!22421 res!44370) b!86230))

(assert (= (and b!86230 res!44369) b!86231))

(assert (=> d!22421 m!89857))

(assert (=> d!22421 m!90067))

(assert (=> d!22421 m!89857))

(declare-fun m!91189 () Bool)

(assert (=> d!22421 m!91189))

(assert (=> d!22421 m!90385))

(declare-fun m!91191 () Bool)

(assert (=> b!86230 m!91191))

(declare-fun m!91193 () Bool)

(assert (=> b!86231 m!91193))

(assert (=> bm!8134 d!22421))

(declare-fun b!86232 () Bool)

(declare-fun e!56202 () Option!146)

(assert (=> b!86232 (= e!56202 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40600)))))))

(declare-fun d!22423 () Bool)

(declare-fun c!14056 () Bool)

(assert (=> d!22423 (= c!14056 (and ((_ is Cons!1515) (toList!746 lt!40600)) (= (_1!1110 (h!2106 (toList!746 lt!40600))) (_1!1110 lt!40318))))))

(assert (=> d!22423 (= (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318)) e!56202)))

(declare-fun b!86235 () Bool)

(declare-fun e!56203 () Option!146)

(assert (=> b!86235 (= e!56203 None!144)))

(declare-fun b!86234 () Bool)

(assert (=> b!86234 (= e!56203 (getValueByKey!140 (t!5240 (toList!746 lt!40600)) (_1!1110 lt!40318)))))

(declare-fun b!86233 () Bool)

(assert (=> b!86233 (= e!56202 e!56203)))

(declare-fun c!14057 () Bool)

(assert (=> b!86233 (= c!14057 (and ((_ is Cons!1515) (toList!746 lt!40600)) (not (= (_1!1110 (h!2106 (toList!746 lt!40600))) (_1!1110 lt!40318)))))))

(assert (= (and d!22423 c!14056) b!86232))

(assert (= (and d!22423 (not c!14056)) b!86233))

(assert (= (and b!86233 c!14057) b!86234))

(assert (= (and b!86233 (not c!14057)) b!86235))

(declare-fun m!91195 () Bool)

(assert (=> b!86234 m!91195))

(assert (=> b!85658 d!22423))

(declare-fun b!86236 () Bool)

(declare-fun e!56204 () Option!146)

(assert (=> b!86236 (= e!56204 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40596)))))))

(declare-fun d!22425 () Bool)

(declare-fun c!14058 () Bool)

(assert (=> d!22425 (= c!14058 (and ((_ is Cons!1515) (toList!746 lt!40596)) (= (_1!1110 (h!2106 (toList!746 lt!40596))) (_1!1110 lt!40322))))))

(assert (=> d!22425 (= (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322)) e!56204)))

(declare-fun b!86239 () Bool)

(declare-fun e!56205 () Option!146)

(assert (=> b!86239 (= e!56205 None!144)))

(declare-fun b!86238 () Bool)

(assert (=> b!86238 (= e!56205 (getValueByKey!140 (t!5240 (toList!746 lt!40596)) (_1!1110 lt!40322)))))

(declare-fun b!86237 () Bool)

(assert (=> b!86237 (= e!56204 e!56205)))

(declare-fun c!14059 () Bool)

(assert (=> b!86237 (= c!14059 (and ((_ is Cons!1515) (toList!746 lt!40596)) (not (= (_1!1110 (h!2106 (toList!746 lt!40596))) (_1!1110 lt!40322)))))))

(assert (= (and d!22425 c!14058) b!86236))

(assert (= (and d!22425 (not c!14058)) b!86237))

(assert (= (and b!86237 c!14059) b!86238))

(assert (= (and b!86237 (not c!14059)) b!86239))

(declare-fun m!91197 () Bool)

(assert (=> b!86238 m!91197))

(assert (=> b!85656 d!22425))

(declare-fun d!22427 () Bool)

(declare-fun e!56207 () Bool)

(assert (=> d!22427 e!56207))

(declare-fun res!44371 () Bool)

(assert (=> d!22427 (=> res!44371 e!56207)))

(declare-fun lt!41006 () Bool)

(assert (=> d!22427 (= res!44371 (not lt!41006))))

(declare-fun lt!41007 () Bool)

(assert (=> d!22427 (= lt!41006 lt!41007)))

(declare-fun lt!41009 () Unit!2517)

(declare-fun e!56206 () Unit!2517)

(assert (=> d!22427 (= lt!41009 e!56206)))

(declare-fun c!14060 () Bool)

(assert (=> d!22427 (= c!14060 lt!41007)))

(assert (=> d!22427 (= lt!41007 (containsKey!144 (toList!746 lt!40556) (_1!1110 lt!40322)))))

(assert (=> d!22427 (= (contains!753 lt!40556 (_1!1110 lt!40322)) lt!41006)))

(declare-fun b!86240 () Bool)

(declare-fun lt!41008 () Unit!2517)

(assert (=> b!86240 (= e!56206 lt!41008)))

(assert (=> b!86240 (= lt!41008 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40556) (_1!1110 lt!40322)))))

(assert (=> b!86240 (isDefined!93 (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322)))))

(declare-fun b!86241 () Bool)

(declare-fun Unit!2550 () Unit!2517)

(assert (=> b!86241 (= e!56206 Unit!2550)))

(declare-fun b!86242 () Bool)

(assert (=> b!86242 (= e!56207 (isDefined!93 (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322))))))

(assert (= (and d!22427 c!14060) b!86240))

(assert (= (and d!22427 (not c!14060)) b!86241))

(assert (= (and d!22427 (not res!44371)) b!86242))

(declare-fun m!91199 () Bool)

(assert (=> d!22427 m!91199))

(declare-fun m!91201 () Bool)

(assert (=> b!86240 m!91201))

(assert (=> b!86240 m!90115))

(assert (=> b!86240 m!90115))

(declare-fun m!91203 () Bool)

(assert (=> b!86240 m!91203))

(assert (=> b!86242 m!90115))

(assert (=> b!86242 m!90115))

(assert (=> b!86242 m!91203))

(assert (=> d!22149 d!22427))

(declare-fun b!86243 () Bool)

(declare-fun e!56208 () Option!146)

(assert (=> b!86243 (= e!56208 (Some!145 (_2!1110 (h!2106 lt!40555))))))

(declare-fun d!22429 () Bool)

(declare-fun c!14061 () Bool)

(assert (=> d!22429 (= c!14061 (and ((_ is Cons!1515) lt!40555) (= (_1!1110 (h!2106 lt!40555)) (_1!1110 lt!40322))))))

(assert (=> d!22429 (= (getValueByKey!140 lt!40555 (_1!1110 lt!40322)) e!56208)))

(declare-fun b!86246 () Bool)

(declare-fun e!56209 () Option!146)

(assert (=> b!86246 (= e!56209 None!144)))

(declare-fun b!86245 () Bool)

(assert (=> b!86245 (= e!56209 (getValueByKey!140 (t!5240 lt!40555) (_1!1110 lt!40322)))))

(declare-fun b!86244 () Bool)

(assert (=> b!86244 (= e!56208 e!56209)))

(declare-fun c!14062 () Bool)

(assert (=> b!86244 (= c!14062 (and ((_ is Cons!1515) lt!40555) (not (= (_1!1110 (h!2106 lt!40555)) (_1!1110 lt!40322)))))))

(assert (= (and d!22429 c!14061) b!86243))

(assert (= (and d!22429 (not c!14061)) b!86244))

(assert (= (and b!86244 c!14062) b!86245))

(assert (= (and b!86244 (not c!14062)) b!86246))

(declare-fun m!91205 () Bool)

(assert (=> b!86245 m!91205))

(assert (=> d!22149 d!22429))

(declare-fun d!22431 () Bool)

(assert (=> d!22431 (= (getValueByKey!140 lt!40555 (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322)))))

(declare-fun lt!41010 () Unit!2517)

(assert (=> d!22431 (= lt!41010 (choose!500 lt!40555 (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun e!56210 () Bool)

(assert (=> d!22431 e!56210))

(declare-fun res!44372 () Bool)

(assert (=> d!22431 (=> (not res!44372) (not e!56210))))

(assert (=> d!22431 (= res!44372 (isStrictlySorted!298 lt!40555))))

(assert (=> d!22431 (= (lemmaContainsTupThenGetReturnValue!57 lt!40555 (_1!1110 lt!40322) (_2!1110 lt!40322)) lt!41010)))

(declare-fun b!86247 () Bool)

(declare-fun res!44373 () Bool)

(assert (=> b!86247 (=> (not res!44373) (not e!56210))))

(assert (=> b!86247 (= res!44373 (containsKey!144 lt!40555 (_1!1110 lt!40322)))))

(declare-fun b!86248 () Bool)

(assert (=> b!86248 (= e!56210 (contains!754 lt!40555 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22431 res!44372) b!86247))

(assert (= (and b!86247 res!44373) b!86248))

(assert (=> d!22431 m!90109))

(declare-fun m!91207 () Bool)

(assert (=> d!22431 m!91207))

(declare-fun m!91209 () Bool)

(assert (=> d!22431 m!91209))

(declare-fun m!91211 () Bool)

(assert (=> b!86247 m!91211))

(declare-fun m!91213 () Bool)

(assert (=> b!86248 m!91213))

(assert (=> d!22149 d!22431))

(declare-fun b!86249 () Bool)

(declare-fun e!56212 () List!1519)

(declare-fun call!8225 () List!1519)

(assert (=> b!86249 (= e!56212 call!8225)))

(declare-fun b!86250 () Bool)

(assert (=> b!86250 (= e!56212 call!8225)))

(declare-fun b!86251 () Bool)

(declare-fun res!44374 () Bool)

(declare-fun e!56213 () Bool)

(assert (=> b!86251 (=> (not res!44374) (not e!56213))))

(declare-fun lt!41011 () List!1519)

(assert (=> b!86251 (= res!44374 (containsKey!144 lt!41011 (_1!1110 lt!40322)))))

(declare-fun b!86252 () Bool)

(declare-fun e!56214 () List!1519)

(declare-fun e!56215 () List!1519)

(assert (=> b!86252 (= e!56214 e!56215)))

(declare-fun c!14064 () Bool)

(assert (=> b!86252 (= c!14064 (and ((_ is Cons!1515) (toList!746 lt!40331)) (= (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 lt!40322))))))

(declare-fun b!86253 () Bool)

(declare-fun call!8224 () List!1519)

(assert (=> b!86253 (= e!56214 call!8224)))

(declare-fun b!86254 () Bool)

(declare-fun c!14066 () Bool)

(assert (=> b!86254 (= c!14066 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 lt!40322))))))

(assert (=> b!86254 (= e!56215 e!56212)))

(declare-fun b!86255 () Bool)

(declare-fun e!56211 () List!1519)

(assert (=> b!86255 (= e!56211 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40331)) (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun b!86256 () Bool)

(assert (=> b!86256 (= e!56211 (ite c!14064 (t!5240 (toList!746 lt!40331)) (ite c!14066 (Cons!1515 (h!2106 (toList!746 lt!40331)) (t!5240 (toList!746 lt!40331))) Nil!1516)))))

(declare-fun c!14063 () Bool)

(declare-fun bm!8221 () Bool)

(assert (=> bm!8221 (= call!8224 ($colon$colon!72 e!56211 (ite c!14063 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322)))))))

(declare-fun c!14065 () Bool)

(assert (=> bm!8221 (= c!14065 c!14063)))

(declare-fun bm!8222 () Bool)

(declare-fun call!8226 () List!1519)

(assert (=> bm!8222 (= call!8226 call!8224)))

(declare-fun bm!8223 () Bool)

(assert (=> bm!8223 (= call!8225 call!8226)))

(declare-fun b!86258 () Bool)

(assert (=> b!86258 (= e!56215 call!8226)))

(declare-fun d!22433 () Bool)

(assert (=> d!22433 e!56213))

(declare-fun res!44375 () Bool)

(assert (=> d!22433 (=> (not res!44375) (not e!56213))))

(assert (=> d!22433 (= res!44375 (isStrictlySorted!298 lt!41011))))

(assert (=> d!22433 (= lt!41011 e!56214)))

(assert (=> d!22433 (= c!14063 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 lt!40322))))))

(assert (=> d!22433 (isStrictlySorted!298 (toList!746 lt!40331))))

(assert (=> d!22433 (= (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 lt!40322) (_2!1110 lt!40322)) lt!41011)))

(declare-fun b!86257 () Bool)

(assert (=> b!86257 (= e!56213 (contains!754 lt!41011 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22433 c!14063) b!86253))

(assert (= (and d!22433 (not c!14063)) b!86252))

(assert (= (and b!86252 c!14064) b!86258))

(assert (= (and b!86252 (not c!14064)) b!86254))

(assert (= (and b!86254 c!14066) b!86249))

(assert (= (and b!86254 (not c!14066)) b!86250))

(assert (= (or b!86249 b!86250) bm!8223))

(assert (= (or b!86258 bm!8223) bm!8222))

(assert (= (or b!86253 bm!8222) bm!8221))

(assert (= (and bm!8221 c!14065) b!86255))

(assert (= (and bm!8221 (not c!14065)) b!86256))

(assert (= (and d!22433 res!44375) b!86251))

(assert (= (and b!86251 res!44374) b!86257))

(declare-fun m!91215 () Bool)

(assert (=> d!22433 m!91215))

(assert (=> d!22433 m!90273))

(declare-fun m!91217 () Bool)

(assert (=> b!86251 m!91217))

(declare-fun m!91219 () Bool)

(assert (=> b!86255 m!91219))

(declare-fun m!91221 () Bool)

(assert (=> b!86257 m!91221))

(declare-fun m!91223 () Bool)

(assert (=> bm!8221 m!91223))

(assert (=> d!22149 d!22433))

(assert (=> d!22135 d!22319))

(assert (=> b!85451 d!22235))

(assert (=> b!85693 d!22309))

(declare-fun mapIsEmpty!3411 () Bool)

(declare-fun mapRes!3411 () Bool)

(assert (=> mapIsEmpty!3411 mapRes!3411))

(declare-fun mapNonEmpty!3411 () Bool)

(declare-fun tp!8955 () Bool)

(declare-fun e!56217 () Bool)

(assert (=> mapNonEmpty!3411 (= mapRes!3411 (and tp!8955 e!56217))))

(declare-fun mapValue!3411 () ValueCell!924)

(declare-fun mapKey!3411 () (_ BitVec 32))

(declare-fun mapRest!3411 () (Array (_ BitVec 32) ValueCell!924))

(assert (=> mapNonEmpty!3411 (= mapRest!3410 (store mapRest!3411 mapKey!3411 mapValue!3411))))

(declare-fun b!86259 () Bool)

(assert (=> b!86259 (= e!56217 tp_is_empty!2535)))

(declare-fun b!86260 () Bool)

(declare-fun e!56216 () Bool)

(assert (=> b!86260 (= e!56216 tp_is_empty!2535)))

(declare-fun condMapEmpty!3411 () Bool)

(declare-fun mapDefault!3411 () ValueCell!924)

(assert (=> mapNonEmpty!3410 (= condMapEmpty!3411 (= mapRest!3410 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3411)))))

(assert (=> mapNonEmpty!3410 (= tp!8954 (and e!56216 mapRes!3411))))

(assert (= (and mapNonEmpty!3410 condMapEmpty!3411) mapIsEmpty!3411))

(assert (= (and mapNonEmpty!3410 (not condMapEmpty!3411)) mapNonEmpty!3411))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!924) mapValue!3411)) b!86259))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!924) mapDefault!3411)) b!86260))

(declare-fun m!91225 () Bool)

(assert (=> mapNonEmpty!3411 m!91225))

(declare-fun mapIsEmpty!3412 () Bool)

(declare-fun mapRes!3412 () Bool)

(assert (=> mapIsEmpty!3412 mapRes!3412))

(declare-fun mapNonEmpty!3412 () Bool)

(declare-fun tp!8956 () Bool)

(declare-fun e!56219 () Bool)

(assert (=> mapNonEmpty!3412 (= mapRes!3412 (and tp!8956 e!56219))))

(declare-fun mapRest!3412 () (Array (_ BitVec 32) ValueCell!924))

(declare-fun mapValue!3412 () ValueCell!924)

(declare-fun mapKey!3412 () (_ BitVec 32))

(assert (=> mapNonEmpty!3412 (= mapRest!3409 (store mapRest!3412 mapKey!3412 mapValue!3412))))

(declare-fun b!86261 () Bool)

(assert (=> b!86261 (= e!56219 tp_is_empty!2535)))

(declare-fun b!86262 () Bool)

(declare-fun e!56218 () Bool)

(assert (=> b!86262 (= e!56218 tp_is_empty!2535)))

(declare-fun condMapEmpty!3412 () Bool)

(declare-fun mapDefault!3412 () ValueCell!924)

(assert (=> mapNonEmpty!3409 (= condMapEmpty!3412 (= mapRest!3409 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3412)))))

(assert (=> mapNonEmpty!3409 (= tp!8953 (and e!56218 mapRes!3412))))

(assert (= (and mapNonEmpty!3409 condMapEmpty!3412) mapIsEmpty!3412))

(assert (= (and mapNonEmpty!3409 (not condMapEmpty!3412)) mapNonEmpty!3412))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!924) mapValue!3412)) b!86261))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!924) mapDefault!3412)) b!86262))

(declare-fun m!91227 () Bool)

(assert (=> mapNonEmpty!3412 m!91227))

(declare-fun b_lambda!3825 () Bool)

(assert (= b_lambda!3819 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3825)))

(declare-fun b_lambda!3827 () Bool)

(assert (= b_lambda!3817 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3827)))

(declare-fun b_lambda!3829 () Bool)

(assert (= b_lambda!3823 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3829)))

(declare-fun b_lambda!3831 () Bool)

(assert (= b_lambda!3815 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3831)))

(declare-fun b_lambda!3833 () Bool)

(assert (= b_lambda!3821 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3833)))

(check-sat (not b!86116) (not d!22315) (not b!85840) (not b!85962) (not b!86004) b_and!5217 (not b!86021) (not d!22339) (not bm!8200) (not b!85854) (not d!22417) (not b!86217) (not bm!8197) (not b!85786) (not bm!8184) (not b!85752) (not d!22367) (not d!22273) (not b!86251) (not b!86141) (not b!86158) (not b!85707) (not b!85847) (not b_lambda!3813) (not b!85900) (not d!22297) b_and!5215 (not b!85845) (not b!85798) (not d!22225) (not b!86153) (not b!86196) (not b!85888) (not b!85833) (not b!85820) (not b!85998) (not b!85918) (not bm!8183) (not d!22395) (not d!22393) (not b!86204) (not b!85994) (not b!85857) (not d!22391) (not b!85762) (not b!85767) (not b!86234) (not b!86240) (not b!85862) (not b!85843) (not b!86123) (not b!86074) (not d!22355) (not d!22413) (not b_lambda!3829) (not b!86106) (not bm!8202) (not d!22223) (not d!22333) (not b!85858) (not b!86016) (not d!22229) (not b!86224) (not b!86248) (not b!86079) (not d!22343) (not d!22369) (not b!86114) (not d!22253) (not d!22255) (not b!86001) (not b!85853) (not b!85785) (not b!86220) (not b!86029) (not b!85831) (not d!22373) (not b!85887) (not b!86242) (not b_lambda!3825) (not b!86084) (not b!85836) (not b!86052) (not d!22189) (not d!22185) (not b!86110) (not b!86101) (not b_lambda!3811) (not d!22375) (not bm!8188) (not b!86215) (not d!22305) (not d!22221) (not d!22329) (not bm!8213) (not d!22259) (not b!85965) (not b_lambda!3801) (not b!86126) (not bm!8205) (not d!22265) (not b!86148) (not b!85861) (not b!86094) (not b!85814) (not d!22307) (not d!22385) (not bm!8169) (not d!22409) (not b!85976) (not b!86159) (not bm!8190) (not b!85825) (not b!85870) (not d!22337) (not d!22415) (not b!86011) (not b!85881) (not b!86149) (not b!85920) (not b!85725) (not bm!8221) (not b!85889) (not b!85982) (not bm!8218) (not d!22427) (not b!86050) (not b!86147) (not d!22249) (not d!22191) (not b!85850) (not b!85764) (not b!86025) (not b!85906) (not d!22383) (not b!86238) (not bm!8158) (not d!22405) (not b!85866) (not b!85835) (not d!22205) (not d!22295) (not b!86031) (not b!85859) (not d!22411) (not b_lambda!3827) (not d!22251) (not b!86041) (not b!85773) (not b!85748) (not b_next!2239) (not bm!8214) (not b!85899) (not b!85705) (not b!85808) (not b!85878) (not b!86045) (not b!86218) (not b!86211) (not b_lambda!3809) (not d!22353) (not d!22275) (not b!85754) (not d!22291) (not b!86066) (not d!22201) (not b!86225) (not bm!8208) (not b!86042) (not b_lambda!3833) (not b!86152) (not b!86230) (not b!85973) (not b!85995) (not bm!8164) (not d!22271) (not d!22433) (not b!86125) (not b!86198) (not d!22193) (not bm!8166) (not b!86118) (not b!86140) (not b!85784) (not b!85968) (not b!86120) (not b!86027) (not b!86223) (not b!86155) (not b!85874) (not d!22245) (not d!22289) (not b!86107) (not b!86090) (not b!86194) (not b!85782) (not d!22399) (not d!22303) (not d!22311) (not d!22351) (not d!22365) (not b!86135) (not b!86151) (not b!85905) (not d!22341) tp_is_empty!2535 (not b!85903) (not b!86138) (not bm!8189) (not b!86129) (not b!86028) (not d!22219) (not d!22231) (not b!85871) (not mapNonEmpty!3411) (not b!85882) (not b!86207) (not b!86221) (not d!22381) (not b!86091) (not b!86201) (not b!85832) (not b!85804) (not d!22347) (not b!85991) (not d!22281) (not b!86222) (not d!22371) (not b!86097) (not b!85880) (not b!86257) (not b!86099) (not b!85958) (not d!22361) (not bm!8217) (not d!22313) (not d!22377) (not b!85834) (not d!22379) (not b!86245) (not b!85864) (not d!22287) (not d!22421) (not d!22387) (not bm!8195) (not b!85867) (not b!86046) (not bm!8155) (not b!85829) (not b!85966) (not b!85795) (not d!22215) (not d!22359) (not b!85979) (not d!22279) (not d!22319) (not b!86133) (not b!85810) (not bm!8187) (not b!86203) (not b!85793) (not b_lambda!3831) (not b!85856) (not b!85791) (not b!85779) (not d!22241) (not b!85908) (not b_next!2237) (not d!22227) (not b!86255) (not d!22195) (not mapNonEmpty!3412) (not b!85777) (not bm!8165) (not b!86048) (not d!22267) (not bm!8193) (not b!85801) (not b!85724) (not b!85827) (not b!85761) (not b!86005) (not b!86104) (not b!86034) (not b!86007) (not d!22419) (not d!22317) (not b!85769) (not bm!8196) (not bm!8186) (not b!85770) (not b!86088) (not d!22283) (not b!85879) (not b!86010) (not d!22277) (not d!22207) (not b!85837) (not b!86073) (not b!85815) (not d!22407) (not d!22321) (not d!22247) (not b!85865) (not b!85969) (not d!22403) (not b!85852) (not b!85838) (not b!85989) (not bm!8161) (not d!22389) (not d!22261) (not b!85992) (not d!22327) (not b!85855) (not b!86213) (not b!85996) (not d!22263) (not b!86044) (not b!85800) (not d!22431) (not b!86023) (not bm!8174) (not d!22269) (not b!85990) (not b!85718) (not b!86086) (not d!22301) (not b!85876) (not d!22233) (not b!86219) (not b!86150) (not bm!8171) (not b!86092) (not d!22199) (not b!85975) (not b!86247))
(check-sat b_and!5215 b_and!5217 (not b_next!2237) (not b_next!2239))
(get-model)

(declare-fun d!22435 () Bool)

(assert (=> d!22435 (= ($colon$colon!72 e!55934 (ite c!13937 (h!2106 (toList!746 lt!40316)) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324)))) (Cons!1515 (ite c!13937 (h!2106 (toList!746 lt!40316)) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))) e!55934))))

(assert (=> bm!8158 d!22435))

(declare-fun bm!8224 () Bool)

(declare-fun call!8227 () (_ BitVec 32))

(assert (=> bm!8224 (= call!8227 (arrayCountValidKeys!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86263 () Bool)

(declare-fun e!56221 () (_ BitVec 32))

(assert (=> b!86263 (= e!56221 call!8227)))

(declare-fun b!86264 () Bool)

(assert (=> b!86264 (= e!56221 (bvadd #b00000000000000000000000000000001 call!8227))))

(declare-fun b!86266 () Bool)

(declare-fun e!56220 () (_ BitVec 32))

(assert (=> b!86266 (= e!56220 #b00000000000000000000000000000000)))

(declare-fun b!86265 () Bool)

(assert (=> b!86265 (= e!56220 e!56221)))

(declare-fun c!14068 () Bool)

(assert (=> b!86265 (= c!14068 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!22437 () Bool)

(declare-fun lt!41012 () (_ BitVec 32))

(assert (=> d!22437 (and (bvsge lt!41012 #b00000000000000000000000000000000) (bvsle lt!41012 (bvsub (size!2163 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!22437 (= lt!41012 e!56220)))

(declare-fun c!14067 () Bool)

(assert (=> d!22437 (= c!14067 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22437 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2163 (_keys!4010 newMap!16)) (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22437 (= (arrayCountValidKeys!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))) lt!41012)))

(assert (= (and d!22437 c!14067) b!86266))

(assert (= (and d!22437 (not c!14067)) b!86265))

(assert (= (and b!86265 c!14068) b!86264))

(assert (= (and b!86265 (not c!14068)) b!86263))

(assert (= (or b!86264 b!86263) bm!8224))

(declare-fun m!91229 () Bool)

(assert (=> bm!8224 m!91229))

(declare-fun m!91231 () Bool)

(assert (=> b!86265 m!91231))

(assert (=> b!86265 m!91231))

(declare-fun m!91233 () Bool)

(assert (=> b!86265 m!91233))

(assert (=> bm!8217 d!22437))

(declare-fun b!86267 () Bool)

(declare-fun e!56222 () Option!146)

(assert (=> b!86267 (= e!56222 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40599)))))))

(declare-fun d!22439 () Bool)

(declare-fun c!14069 () Bool)

(assert (=> d!22439 (= c!14069 (and ((_ is Cons!1515) (t!5240 lt!40599)) (= (_1!1110 (h!2106 (t!5240 lt!40599))) (_1!1110 lt!40318))))))

(assert (=> d!22439 (= (getValueByKey!140 (t!5240 lt!40599) (_1!1110 lt!40318)) e!56222)))

(declare-fun b!86270 () Bool)

(declare-fun e!56223 () Option!146)

(assert (=> b!86270 (= e!56223 None!144)))

(declare-fun b!86269 () Bool)

(assert (=> b!86269 (= e!56223 (getValueByKey!140 (t!5240 (t!5240 lt!40599)) (_1!1110 lt!40318)))))

(declare-fun b!86268 () Bool)

(assert (=> b!86268 (= e!56222 e!56223)))

(declare-fun c!14070 () Bool)

(assert (=> b!86268 (= c!14070 (and ((_ is Cons!1515) (t!5240 lt!40599)) (not (= (_1!1110 (h!2106 (t!5240 lt!40599))) (_1!1110 lt!40318)))))))

(assert (= (and d!22439 c!14069) b!86267))

(assert (= (and d!22439 (not c!14069)) b!86268))

(assert (= (and b!86268 c!14070) b!86269))

(assert (= (and b!86268 (not c!14070)) b!86270))

(declare-fun m!91235 () Bool)

(assert (=> b!86269 m!91235))

(assert (=> b!86104 d!22439))

(declare-fun d!22441 () Bool)

(declare-fun lt!41013 () Bool)

(assert (=> d!22441 (= lt!41013 (select (content!89 (toList!746 lt!40693)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56224 () Bool)

(assert (=> d!22441 (= lt!41013 e!56224)))

(declare-fun res!44376 () Bool)

(assert (=> d!22441 (=> (not res!44376) (not e!56224))))

(assert (=> d!22441 (= res!44376 ((_ is Cons!1515) (toList!746 lt!40693)))))

(assert (=> d!22441 (= (contains!754 (toList!746 lt!40693) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41013)))

(declare-fun b!86271 () Bool)

(declare-fun e!56225 () Bool)

(assert (=> b!86271 (= e!56224 e!56225)))

(declare-fun res!44377 () Bool)

(assert (=> b!86271 (=> res!44377 e!56225)))

(assert (=> b!86271 (= res!44377 (= (h!2106 (toList!746 lt!40693)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86272 () Bool)

(assert (=> b!86272 (= e!56225 (contains!754 (t!5240 (toList!746 lt!40693)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22441 res!44376) b!86271))

(assert (= (and b!86271 (not res!44377)) b!86272))

(declare-fun m!91237 () Bool)

(assert (=> d!22441 m!91237))

(declare-fun m!91239 () Bool)

(assert (=> d!22441 m!91239))

(declare-fun m!91241 () Bool)

(assert (=> b!86272 m!91241))

(assert (=> b!85859 d!22441))

(assert (=> d!22395 d!22339))

(declare-fun call!8233 () Bool)

(declare-fun bm!8229 () Bool)

(assert (=> bm!8229 (= call!8233 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!86289 () Bool)

(declare-fun res!44386 () Bool)

(declare-fun lt!41016 () SeekEntryResult!243)

(assert (=> b!86289 (= res!44386 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!41016)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56236 () Bool)

(assert (=> b!86289 (=> (not res!44386) (not e!56236))))

(declare-fun b!86290 () Bool)

(declare-fun e!56237 () Bool)

(declare-fun e!56234 () Bool)

(assert (=> b!86290 (= e!56237 e!56234)))

(declare-fun c!14076 () Bool)

(assert (=> b!86290 (= c!14076 ((_ is MissingVacant!243) lt!41016))))

(declare-fun b!86292 () Bool)

(assert (=> b!86292 (= e!56237 e!56236)))

(declare-fun res!44388 () Bool)

(declare-fun call!8232 () Bool)

(assert (=> b!86292 (= res!44388 call!8232)))

(assert (=> b!86292 (=> (not res!44388) (not e!56236))))

(declare-fun b!86293 () Bool)

(declare-fun res!44387 () Bool)

(declare-fun e!56235 () Bool)

(assert (=> b!86293 (=> (not res!44387) (not e!56235))))

(assert (=> b!86293 (= res!44387 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!41016)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun c!14075 () Bool)

(declare-fun bm!8230 () Bool)

(assert (=> bm!8230 (= call!8232 (inRange!0 (ite c!14075 (index!3109 lt!41016) (index!3112 lt!41016)) (mask!6366 newMap!16)))))

(declare-fun b!86294 () Bool)

(declare-fun res!44389 () Bool)

(assert (=> b!86294 (=> (not res!44389) (not e!56235))))

(assert (=> b!86294 (= res!44389 call!8232)))

(assert (=> b!86294 (= e!56234 e!56235)))

(declare-fun b!86295 () Bool)

(assert (=> b!86295 (= e!56235 (not call!8233))))

(declare-fun b!86296 () Bool)

(assert (=> b!86296 (= e!56234 ((_ is Undefined!243) lt!41016))))

(declare-fun b!86291 () Bool)

(assert (=> b!86291 (= e!56236 (not call!8233))))

(declare-fun d!22443 () Bool)

(assert (=> d!22443 e!56237))

(assert (=> d!22443 (= c!14075 ((_ is MissingZero!243) lt!41016))))

(assert (=> d!22443 (= lt!41016 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!22443 true))

(declare-fun _$34!839 () Unit!2517)

(assert (=> d!22443 (= (choose!509 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) _$34!839)))

(assert (= (and d!22443 c!14075) b!86292))

(assert (= (and d!22443 (not c!14075)) b!86290))

(assert (= (and b!86292 res!44388) b!86289))

(assert (= (and b!86289 res!44386) b!86291))

(assert (= (and b!86290 c!14076) b!86294))

(assert (= (and b!86290 (not c!14076)) b!86296))

(assert (= (and b!86294 res!44389) b!86293))

(assert (= (and b!86293 res!44387) b!86295))

(assert (= (or b!86292 b!86294) bm!8230))

(assert (= (or b!86291 b!86295) bm!8229))

(declare-fun m!91243 () Bool)

(assert (=> bm!8230 m!91243))

(declare-fun m!91245 () Bool)

(assert (=> b!86293 m!91245))

(assert (=> d!22443 m!89857))

(assert (=> d!22443 m!90067))

(declare-fun m!91247 () Bool)

(assert (=> b!86289 m!91247))

(assert (=> bm!8229 m!89857))

(assert (=> bm!8229 m!90057))

(assert (=> d!22395 d!22443))

(declare-fun d!22445 () Bool)

(assert (=> d!22445 (= (validMask!0 (mask!6366 newMap!16)) (and (or (= (mask!6366 newMap!16) #b00000000000000000000000000000111) (= (mask!6366 newMap!16) #b00000000000000000000000000001111) (= (mask!6366 newMap!16) #b00000000000000000000000000011111) (= (mask!6366 newMap!16) #b00000000000000000000000000111111) (= (mask!6366 newMap!16) #b00000000000000000000000001111111) (= (mask!6366 newMap!16) #b00000000000000000000000011111111) (= (mask!6366 newMap!16) #b00000000000000000000000111111111) (= (mask!6366 newMap!16) #b00000000000000000000001111111111) (= (mask!6366 newMap!16) #b00000000000000000000011111111111) (= (mask!6366 newMap!16) #b00000000000000000000111111111111) (= (mask!6366 newMap!16) #b00000000000000000001111111111111) (= (mask!6366 newMap!16) #b00000000000000000011111111111111) (= (mask!6366 newMap!16) #b00000000000000000111111111111111) (= (mask!6366 newMap!16) #b00000000000000001111111111111111) (= (mask!6366 newMap!16) #b00000000000000011111111111111111) (= (mask!6366 newMap!16) #b00000000000000111111111111111111) (= (mask!6366 newMap!16) #b00000000000001111111111111111111) (= (mask!6366 newMap!16) #b00000000000011111111111111111111) (= (mask!6366 newMap!16) #b00000000000111111111111111111111) (= (mask!6366 newMap!16) #b00000000001111111111111111111111) (= (mask!6366 newMap!16) #b00000000011111111111111111111111) (= (mask!6366 newMap!16) #b00000000111111111111111111111111) (= (mask!6366 newMap!16) #b00000001111111111111111111111111) (= (mask!6366 newMap!16) #b00000011111111111111111111111111) (= (mask!6366 newMap!16) #b00000111111111111111111111111111) (= (mask!6366 newMap!16) #b00001111111111111111111111111111) (= (mask!6366 newMap!16) #b00011111111111111111111111111111) (= (mask!6366 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6366 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!22395 d!22445))

(declare-fun b!86298 () Bool)

(declare-fun res!44390 () Bool)

(declare-fun e!56238 () Bool)

(assert (=> b!86298 (=> (not res!44390) (not e!56238))))

(assert (=> b!86298 (= res!44390 (bvsge (size!2167 (_2!1109 lt!40519)) (_size!427 (_2!1109 lt!40519))))))

(declare-fun d!22447 () Bool)

(declare-fun res!44393 () Bool)

(assert (=> d!22447 (=> (not res!44393) (not e!56238))))

(assert (=> d!22447 (= res!44393 (validMask!0 (mask!6366 (_2!1109 lt!40519))))))

(assert (=> d!22447 (= (simpleValid!58 (_2!1109 lt!40519)) e!56238)))

(declare-fun b!86299 () Bool)

(declare-fun res!44392 () Bool)

(assert (=> b!86299 (=> (not res!44392) (not e!56238))))

(assert (=> b!86299 (= res!44392 (= (size!2167 (_2!1109 lt!40519)) (bvadd (_size!427 (_2!1109 lt!40519)) (bvsdiv (bvadd (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86297 () Bool)

(declare-fun res!44391 () Bool)

(assert (=> b!86297 (=> (not res!44391) (not e!56238))))

(assert (=> b!86297 (= res!44391 (and (= (size!2164 (_values!2321 (_2!1109 lt!40519))) (bvadd (mask!6366 (_2!1109 lt!40519)) #b00000000000000000000000000000001)) (= (size!2163 (_keys!4010 (_2!1109 lt!40519))) (size!2164 (_values!2321 (_2!1109 lt!40519)))) (bvsge (_size!427 (_2!1109 lt!40519)) #b00000000000000000000000000000000) (bvsle (_size!427 (_2!1109 lt!40519)) (bvadd (mask!6366 (_2!1109 lt!40519)) #b00000000000000000000000000000001))))))

(declare-fun b!86300 () Bool)

(assert (=> b!86300 (= e!56238 (and (bvsge (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000011) (bvsge (_vacant!427 (_2!1109 lt!40519)) #b00000000000000000000000000000000)))))

(assert (= (and d!22447 res!44393) b!86297))

(assert (= (and b!86297 res!44391) b!86298))

(assert (= (and b!86298 res!44390) b!86299))

(assert (= (and b!86299 res!44392) b!86300))

(declare-fun m!91249 () Bool)

(assert (=> b!86298 m!91249))

(declare-fun m!91251 () Bool)

(assert (=> d!22447 m!91251))

(assert (=> b!86299 m!91249))

(assert (=> d!22267 d!22447))

(declare-fun d!22449 () Bool)

(declare-fun lt!41017 () Bool)

(assert (=> d!22449 (= lt!41017 (select (content!89 (toList!746 lt!40685)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun e!56239 () Bool)

(assert (=> d!22449 (= lt!41017 e!56239)))

(declare-fun res!44394 () Bool)

(assert (=> d!22449 (=> (not res!44394) (not e!56239))))

(assert (=> d!22449 (= res!44394 ((_ is Cons!1515) (toList!746 lt!40685)))))

(assert (=> d!22449 (= (contains!754 (toList!746 lt!40685) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41017)))

(declare-fun b!86301 () Bool)

(declare-fun e!56240 () Bool)

(assert (=> b!86301 (= e!56239 e!56240)))

(declare-fun res!44395 () Bool)

(assert (=> b!86301 (=> res!44395 e!56240)))

(assert (=> b!86301 (= res!44395 (= (h!2106 (toList!746 lt!40685)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun b!86302 () Bool)

(assert (=> b!86302 (= e!56240 (contains!754 (t!5240 (toList!746 lt!40685)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22449 res!44394) b!86301))

(assert (= (and b!86301 (not res!44395)) b!86302))

(declare-fun m!91253 () Bool)

(assert (=> d!22449 m!91253))

(declare-fun m!91255 () Bool)

(assert (=> d!22449 m!91255))

(declare-fun m!91257 () Bool)

(assert (=> b!86302 m!91257))

(assert (=> b!85855 d!22449))

(declare-fun d!22451 () Bool)

(declare-fun res!44396 () Bool)

(declare-fun e!56241 () Bool)

(assert (=> d!22451 (=> res!44396 e!56241)))

(assert (=> d!22451 (= res!44396 (and ((_ is Cons!1515) (toList!746 call!8134)) (= (_1!1110 (h!2106 (toList!746 call!8134))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22451 (= (containsKey!144 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56241)))

(declare-fun b!86303 () Bool)

(declare-fun e!56242 () Bool)

(assert (=> b!86303 (= e!56241 e!56242)))

(declare-fun res!44397 () Bool)

(assert (=> b!86303 (=> (not res!44397) (not e!56242))))

(assert (=> b!86303 (= res!44397 (and (or (not ((_ is Cons!1515) (toList!746 call!8134))) (bvsle (_1!1110 (h!2106 (toList!746 call!8134))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1515) (toList!746 call!8134)) (bvslt (_1!1110 (h!2106 (toList!746 call!8134))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!86304 () Bool)

(assert (=> b!86304 (= e!56242 (containsKey!144 (t!5240 (toList!746 call!8134)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22451 (not res!44396)) b!86303))

(assert (= (and b!86303 res!44397) b!86304))

(assert (=> b!86304 m!89857))

(declare-fun m!91259 () Bool)

(assert (=> b!86304 m!91259))

(assert (=> d!22233 d!22451))

(declare-fun d!22453 () Bool)

(assert (=> d!22453 (= (get!1198 (getValueByKey!140 (toList!746 lt!40449) lt!40447)) (v!2649 (getValueByKey!140 (toList!746 lt!40449) lt!40447)))))

(assert (=> d!22371 d!22453))

(declare-fun b!86305 () Bool)

(declare-fun e!56243 () Option!146)

(assert (=> b!86305 (= e!56243 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40449)))))))

(declare-fun d!22455 () Bool)

(declare-fun c!14077 () Bool)

(assert (=> d!22455 (= c!14077 (and ((_ is Cons!1515) (toList!746 lt!40449)) (= (_1!1110 (h!2106 (toList!746 lt!40449))) lt!40447)))))

(assert (=> d!22455 (= (getValueByKey!140 (toList!746 lt!40449) lt!40447) e!56243)))

(declare-fun b!86308 () Bool)

(declare-fun e!56244 () Option!146)

(assert (=> b!86308 (= e!56244 None!144)))

(declare-fun b!86307 () Bool)

(assert (=> b!86307 (= e!56244 (getValueByKey!140 (t!5240 (toList!746 lt!40449)) lt!40447))))

(declare-fun b!86306 () Bool)

(assert (=> b!86306 (= e!56243 e!56244)))

(declare-fun c!14078 () Bool)

(assert (=> b!86306 (= c!14078 (and ((_ is Cons!1515) (toList!746 lt!40449)) (not (= (_1!1110 (h!2106 (toList!746 lt!40449))) lt!40447))))))

(assert (= (and d!22455 c!14077) b!86305))

(assert (= (and d!22455 (not c!14077)) b!86306))

(assert (= (and b!86306 c!14078) b!86307))

(assert (= (and b!86306 (not c!14078)) b!86308))

(declare-fun m!91261 () Bool)

(assert (=> b!86307 m!91261))

(assert (=> d!22371 d!22455))

(declare-fun d!22457 () Bool)

(assert (=> d!22457 (isDefined!93 (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324)))))

(declare-fun lt!41018 () Unit!2517)

(assert (=> d!22457 (= lt!41018 (choose!504 (toList!746 lt!40568) (_1!1110 lt!40324)))))

(declare-fun e!56245 () Bool)

(assert (=> d!22457 e!56245))

(declare-fun res!44398 () Bool)

(assert (=> d!22457 (=> (not res!44398) (not e!56245))))

(assert (=> d!22457 (= res!44398 (isStrictlySorted!298 (toList!746 lt!40568)))))

(assert (=> d!22457 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40568) (_1!1110 lt!40324)) lt!41018)))

(declare-fun b!86309 () Bool)

(assert (=> b!86309 (= e!56245 (containsKey!144 (toList!746 lt!40568) (_1!1110 lt!40324)))))

(assert (= (and d!22457 res!44398) b!86309))

(assert (=> d!22457 m!90151))

(assert (=> d!22457 m!90151))

(assert (=> d!22457 m!90339))

(declare-fun m!91263 () Bool)

(assert (=> d!22457 m!91263))

(declare-fun m!91265 () Bool)

(assert (=> d!22457 m!91265))

(assert (=> b!86309 m!90335))

(assert (=> b!85793 d!22457))

(declare-fun d!22459 () Bool)

(assert (=> d!22459 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40568) (_1!1110 lt!40324)))))))

(declare-fun bs!3643 () Bool)

(assert (= bs!3643 d!22459))

(assert (=> bs!3643 m!90151))

(declare-fun m!91267 () Bool)

(assert (=> bs!3643 m!91267))

(assert (=> b!85793 d!22459))

(assert (=> b!85793 d!22345))

(declare-fun d!22461 () Bool)

(assert (=> d!22461 (isDefined!93 (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318)))))

(declare-fun lt!41019 () Unit!2517)

(assert (=> d!22461 (= lt!41019 (choose!504 (toList!746 lt!40600) (_1!1110 lt!40318)))))

(declare-fun e!56246 () Bool)

(assert (=> d!22461 e!56246))

(declare-fun res!44399 () Bool)

(assert (=> d!22461 (=> (not res!44399) (not e!56246))))

(assert (=> d!22461 (= res!44399 (isStrictlySorted!298 (toList!746 lt!40600)))))

(assert (=> d!22461 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40600) (_1!1110 lt!40318)) lt!41019)))

(declare-fun b!86310 () Bool)

(assert (=> b!86310 (= e!56246 (containsKey!144 (toList!746 lt!40600) (_1!1110 lt!40318)))))

(assert (= (and d!22461 res!44399) b!86310))

(assert (=> d!22461 m!90205))

(assert (=> d!22461 m!90205))

(assert (=> d!22461 m!90943))

(declare-fun m!91269 () Bool)

(assert (=> d!22461 m!91269))

(declare-fun m!91271 () Bool)

(assert (=> d!22461 m!91271))

(assert (=> b!86310 m!90939))

(assert (=> b!86099 d!22461))

(declare-fun d!22463 () Bool)

(assert (=> d!22463 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40600) (_1!1110 lt!40318)))))))

(declare-fun bs!3644 () Bool)

(assert (= bs!3644 d!22463))

(assert (=> bs!3644 m!90205))

(declare-fun m!91273 () Bool)

(assert (=> bs!3644 m!91273))

(assert (=> b!86099 d!22463))

(assert (=> b!86099 d!22423))

(declare-fun d!22465 () Bool)

(assert (=> d!22465 (= (apply!82 lt!40695 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1198 (getValueByKey!140 (toList!746 lt!40695) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3645 () Bool)

(assert (= bs!3645 d!22465))

(assert (=> bs!3645 m!90317))

(declare-fun m!91275 () Bool)

(assert (=> bs!3645 m!91275))

(assert (=> bs!3645 m!91275))

(declare-fun m!91277 () Bool)

(assert (=> bs!3645 m!91277))

(assert (=> b!85871 d!22465))

(declare-fun d!22467 () Bool)

(declare-fun c!14079 () Bool)

(assert (=> d!22467 (= c!14079 ((_ is ValueCellFull!924) (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56247 () V!3027)

(assert (=> d!22467 (= (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56247)))

(declare-fun b!86311 () Bool)

(assert (=> b!86311 (= e!56247 (get!1196 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86312 () Bool)

(assert (=> b!86312 (= e!56247 (get!1197 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22467 c!14079) b!86311))

(assert (= (and d!22467 (not c!14079)) b!86312))

(assert (=> b!86311 m!90529))

(assert (=> b!86311 m!89861))

(declare-fun m!91279 () Bool)

(assert (=> b!86311 m!91279))

(assert (=> b!86312 m!90529))

(assert (=> b!86312 m!89861))

(declare-fun m!91281 () Bool)

(assert (=> b!86312 m!91281))

(assert (=> b!85871 d!22467))

(declare-fun d!22469 () Bool)

(declare-fun e!56249 () Bool)

(assert (=> d!22469 e!56249))

(declare-fun res!44400 () Bool)

(assert (=> d!22469 (=> res!44400 e!56249)))

(declare-fun lt!41020 () Bool)

(assert (=> d!22469 (= res!44400 (not lt!41020))))

(declare-fun lt!41021 () Bool)

(assert (=> d!22469 (= lt!41020 lt!41021)))

(declare-fun lt!41023 () Unit!2517)

(declare-fun e!56248 () Unit!2517)

(assert (=> d!22469 (= lt!41023 e!56248)))

(declare-fun c!14080 () Bool)

(assert (=> d!22469 (= c!14080 lt!41021)))

(assert (=> d!22469 (= lt!41021 (containsKey!144 (toList!746 lt!40953) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22469 (= (contains!753 lt!40953 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41020)))

(declare-fun b!86313 () Bool)

(declare-fun lt!41022 () Unit!2517)

(assert (=> b!86313 (= e!56248 lt!41022)))

(assert (=> b!86313 (= lt!41022 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40953) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86313 (isDefined!93 (getValueByKey!140 (toList!746 lt!40953) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86314 () Bool)

(declare-fun Unit!2551 () Unit!2517)

(assert (=> b!86314 (= e!56248 Unit!2551)))

(declare-fun b!86315 () Bool)

(assert (=> b!86315 (= e!56249 (isDefined!93 (getValueByKey!140 (toList!746 lt!40953) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22469 c!14080) b!86313))

(assert (= (and d!22469 (not c!14080)) b!86314))

(assert (= (and d!22469 (not res!44400)) b!86315))

(declare-fun m!91283 () Bool)

(assert (=> d!22469 m!91283))

(declare-fun m!91285 () Bool)

(assert (=> b!86313 m!91285))

(assert (=> b!86313 m!91053))

(assert (=> b!86313 m!91053))

(declare-fun m!91287 () Bool)

(assert (=> b!86313 m!91287))

(assert (=> b!86315 m!91053))

(assert (=> b!86315 m!91053))

(assert (=> b!86315 m!91287))

(assert (=> d!22381 d!22469))

(declare-fun b!86316 () Bool)

(declare-fun e!56250 () Option!146)

(assert (=> b!86316 (= e!56250 (Some!145 (_2!1110 (h!2106 lt!40952))))))

(declare-fun d!22471 () Bool)

(declare-fun c!14081 () Bool)

(assert (=> d!22471 (= c!14081 (and ((_ is Cons!1515) lt!40952) (= (_1!1110 (h!2106 lt!40952)) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22471 (= (getValueByKey!140 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56250)))

(declare-fun b!86319 () Bool)

(declare-fun e!56251 () Option!146)

(assert (=> b!86319 (= e!56251 None!144)))

(declare-fun b!86318 () Bool)

(assert (=> b!86318 (= e!56251 (getValueByKey!140 (t!5240 lt!40952) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86317 () Bool)

(assert (=> b!86317 (= e!56250 e!56251)))

(declare-fun c!14082 () Bool)

(assert (=> b!86317 (= c!14082 (and ((_ is Cons!1515) lt!40952) (not (= (_1!1110 (h!2106 lt!40952)) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22471 c!14081) b!86316))

(assert (= (and d!22471 (not c!14081)) b!86317))

(assert (= (and b!86317 c!14082) b!86318))

(assert (= (and b!86317 (not c!14082)) b!86319))

(declare-fun m!91289 () Bool)

(assert (=> b!86318 m!91289))

(assert (=> d!22381 d!22471))

(declare-fun d!22473 () Bool)

(assert (=> d!22473 (= (getValueByKey!140 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41024 () Unit!2517)

(assert (=> d!22473 (= lt!41024 (choose!500 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56252 () Bool)

(assert (=> d!22473 e!56252))

(declare-fun res!44401 () Bool)

(assert (=> d!22473 (=> (not res!44401) (not e!56252))))

(assert (=> d!22473 (= res!44401 (isStrictlySorted!298 lt!40952))))

(assert (=> d!22473 (= (lemmaContainsTupThenGetReturnValue!57 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41024)))

(declare-fun b!86320 () Bool)

(declare-fun res!44402 () Bool)

(assert (=> b!86320 (=> (not res!44402) (not e!56252))))

(assert (=> b!86320 (= res!44402 (containsKey!144 lt!40952 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86321 () Bool)

(assert (=> b!86321 (= e!56252 (contains!754 lt!40952 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22473 res!44401) b!86320))

(assert (= (and b!86320 res!44402) b!86321))

(assert (=> d!22473 m!91047))

(declare-fun m!91291 () Bool)

(assert (=> d!22473 m!91291))

(declare-fun m!91293 () Bool)

(assert (=> d!22473 m!91293))

(declare-fun m!91295 () Bool)

(assert (=> b!86320 m!91295))

(declare-fun m!91297 () Bool)

(assert (=> b!86321 m!91297))

(assert (=> d!22381 d!22473))

(declare-fun b!86322 () Bool)

(declare-fun e!56254 () List!1519)

(declare-fun call!8235 () List!1519)

(assert (=> b!86322 (= e!56254 call!8235)))

(declare-fun b!86323 () Bool)

(assert (=> b!86323 (= e!56254 call!8235)))

(declare-fun b!86324 () Bool)

(declare-fun res!44403 () Bool)

(declare-fun e!56255 () Bool)

(assert (=> b!86324 (=> (not res!44403) (not e!56255))))

(declare-fun lt!41025 () List!1519)

(assert (=> b!86324 (= res!44403 (containsKey!144 lt!41025 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86325 () Bool)

(declare-fun e!56256 () List!1519)

(declare-fun e!56257 () List!1519)

(assert (=> b!86325 (= e!56256 e!56257)))

(declare-fun c!14084 () Bool)

(assert (=> b!86325 (= c!14084 (and ((_ is Cons!1515) (toList!746 lt!40451)) (= (_1!1110 (h!2106 (toList!746 lt!40451))) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86326 () Bool)

(declare-fun call!8234 () List!1519)

(assert (=> b!86326 (= e!56256 call!8234)))

(declare-fun b!86327 () Bool)

(declare-fun c!14086 () Bool)

(assert (=> b!86327 (= c!14086 (and ((_ is Cons!1515) (toList!746 lt!40451)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40451))) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86327 (= e!56257 e!56254)))

(declare-fun e!56253 () List!1519)

(declare-fun b!86328 () Bool)

(assert (=> b!86328 (= e!56253 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40451)) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86329 () Bool)

(assert (=> b!86329 (= e!56253 (ite c!14084 (t!5240 (toList!746 lt!40451)) (ite c!14086 (Cons!1515 (h!2106 (toList!746 lt!40451)) (t!5240 (toList!746 lt!40451))) Nil!1516)))))

(declare-fun c!14083 () Bool)

(declare-fun bm!8231 () Bool)

(assert (=> bm!8231 (= call!8234 ($colon$colon!72 e!56253 (ite c!14083 (h!2106 (toList!746 lt!40451)) (tuple2!2199 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14085 () Bool)

(assert (=> bm!8231 (= c!14085 c!14083)))

(declare-fun bm!8232 () Bool)

(declare-fun call!8236 () List!1519)

(assert (=> bm!8232 (= call!8236 call!8234)))

(declare-fun bm!8233 () Bool)

(assert (=> bm!8233 (= call!8235 call!8236)))

(declare-fun b!86331 () Bool)

(assert (=> b!86331 (= e!56257 call!8236)))

(declare-fun d!22475 () Bool)

(assert (=> d!22475 e!56255))

(declare-fun res!44404 () Bool)

(assert (=> d!22475 (=> (not res!44404) (not e!56255))))

(assert (=> d!22475 (= res!44404 (isStrictlySorted!298 lt!41025))))

(assert (=> d!22475 (= lt!41025 e!56256)))

(assert (=> d!22475 (= c!14083 (and ((_ is Cons!1515) (toList!746 lt!40451)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40451))) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22475 (isStrictlySorted!298 (toList!746 lt!40451))))

(assert (=> d!22475 (= (insertStrictlySorted!60 (toList!746 lt!40451) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41025)))

(declare-fun b!86330 () Bool)

(assert (=> b!86330 (= e!56255 (contains!754 lt!41025 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22475 c!14083) b!86326))

(assert (= (and d!22475 (not c!14083)) b!86325))

(assert (= (and b!86325 c!14084) b!86331))

(assert (= (and b!86325 (not c!14084)) b!86327))

(assert (= (and b!86327 c!14086) b!86322))

(assert (= (and b!86327 (not c!14086)) b!86323))

(assert (= (or b!86322 b!86323) bm!8233))

(assert (= (or b!86331 bm!8233) bm!8232))

(assert (= (or b!86326 bm!8232) bm!8231))

(assert (= (and bm!8231 c!14085) b!86328))

(assert (= (and bm!8231 (not c!14085)) b!86329))

(assert (= (and d!22475 res!44404) b!86324))

(assert (= (and b!86324 res!44403) b!86330))

(declare-fun m!91299 () Bool)

(assert (=> d!22475 m!91299))

(declare-fun m!91301 () Bool)

(assert (=> d!22475 m!91301))

(declare-fun m!91303 () Bool)

(assert (=> b!86324 m!91303))

(declare-fun m!91305 () Bool)

(assert (=> b!86328 m!91305))

(declare-fun m!91307 () Bool)

(assert (=> b!86330 m!91307))

(declare-fun m!91309 () Bool)

(assert (=> bm!8231 m!91309))

(assert (=> d!22381 d!22475))

(declare-fun d!22477 () Bool)

(assert (=> d!22477 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41026 () Unit!2517)

(assert (=> d!22477 (= lt!41026 (choose!504 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56258 () Bool)

(assert (=> d!22477 e!56258))

(declare-fun res!44405 () Bool)

(assert (=> d!22477 (=> (not res!44405) (not e!56258))))

(assert (=> d!22477 (= res!44405 (isStrictlySorted!298 (toList!746 lt!40584)))))

(assert (=> d!22477 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41026)))

(declare-fun b!86332 () Bool)

(assert (=> b!86332 (= e!56258 (containsKey!144 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22477 res!44405) b!86332))

(assert (=> d!22477 m!90729))

(assert (=> d!22477 m!90729))

(assert (=> d!22477 m!90731))

(declare-fun m!91311 () Bool)

(assert (=> d!22477 m!91311))

(declare-fun m!91313 () Bool)

(assert (=> d!22477 m!91313))

(assert (=> b!86332 m!90725))

(assert (=> b!85992 d!22477))

(declare-fun d!22479 () Bool)

(assert (=> d!22479 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3646 () Bool)

(assert (= bs!3646 d!22479))

(assert (=> bs!3646 m!90729))

(declare-fun m!91315 () Bool)

(assert (=> bs!3646 m!91315))

(assert (=> b!85992 d!22479))

(declare-fun b!86333 () Bool)

(declare-fun e!56259 () Option!146)

(assert (=> b!86333 (= e!56259 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40584)))))))

(declare-fun d!22481 () Bool)

(declare-fun c!14087 () Bool)

(assert (=> d!22481 (= c!14087 (and ((_ is Cons!1515) (toList!746 lt!40584)) (= (_1!1110 (h!2106 (toList!746 lt!40584))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22481 (= (getValueByKey!140 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000) e!56259)))

(declare-fun b!86336 () Bool)

(declare-fun e!56260 () Option!146)

(assert (=> b!86336 (= e!56260 None!144)))

(declare-fun b!86335 () Bool)

(assert (=> b!86335 (= e!56260 (getValueByKey!140 (t!5240 (toList!746 lt!40584)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86334 () Bool)

(assert (=> b!86334 (= e!56259 e!56260)))

(declare-fun c!14088 () Bool)

(assert (=> b!86334 (= c!14088 (and ((_ is Cons!1515) (toList!746 lt!40584)) (not (= (_1!1110 (h!2106 (toList!746 lt!40584))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22481 c!14087) b!86333))

(assert (= (and d!22481 (not c!14087)) b!86334))

(assert (= (and b!86334 c!14088) b!86335))

(assert (= (and b!86334 (not c!14088)) b!86336))

(declare-fun m!91317 () Bool)

(assert (=> b!86335 m!91317))

(assert (=> b!85992 d!22481))

(assert (=> d!22359 d!22357))

(declare-fun d!22483 () Bool)

(assert (=> d!22483 (= (getValueByKey!140 lt!40595 (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322)))))

(assert (=> d!22483 true))

(declare-fun _$22!418 () Unit!2517)

(assert (=> d!22483 (= (choose!500 lt!40595 (_1!1110 lt!40322) (_2!1110 lt!40322)) _$22!418)))

(declare-fun bs!3647 () Bool)

(assert (= bs!3647 d!22483))

(assert (=> bs!3647 m!90187))

(assert (=> d!22359 d!22483))

(declare-fun d!22485 () Bool)

(declare-fun res!44410 () Bool)

(declare-fun e!56265 () Bool)

(assert (=> d!22485 (=> res!44410 e!56265)))

(assert (=> d!22485 (= res!44410 (or ((_ is Nil!1516) lt!40595) ((_ is Nil!1516) (t!5240 lt!40595))))))

(assert (=> d!22485 (= (isStrictlySorted!298 lt!40595) e!56265)))

(declare-fun b!86341 () Bool)

(declare-fun e!56266 () Bool)

(assert (=> b!86341 (= e!56265 e!56266)))

(declare-fun res!44411 () Bool)

(assert (=> b!86341 (=> (not res!44411) (not e!56266))))

(assert (=> b!86341 (= res!44411 (bvslt (_1!1110 (h!2106 lt!40595)) (_1!1110 (h!2106 (t!5240 lt!40595)))))))

(declare-fun b!86342 () Bool)

(assert (=> b!86342 (= e!56266 (isStrictlySorted!298 (t!5240 lt!40595)))))

(assert (= (and d!22485 (not res!44410)) b!86341))

(assert (= (and b!86341 res!44411) b!86342))

(declare-fun m!91319 () Bool)

(assert (=> b!86342 m!91319))

(assert (=> d!22359 d!22485))

(declare-fun d!22487 () Bool)

(declare-fun res!44412 () Bool)

(declare-fun e!56267 () Bool)

(assert (=> d!22487 (=> res!44412 e!56267)))

(assert (=> d!22487 (= res!44412 (= (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22487 (= (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!56267)))

(declare-fun b!86343 () Bool)

(declare-fun e!56268 () Bool)

(assert (=> b!86343 (= e!56267 e!56268)))

(declare-fun res!44413 () Bool)

(assert (=> b!86343 (=> (not res!44413) (not e!56268))))

(assert (=> b!86343 (= res!44413 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86344 () Bool)

(assert (=> b!86344 (= e!56268 (arrayContainsKey!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22487 (not res!44412)) b!86343))

(assert (= (and b!86343 res!44413) b!86344))

(assert (=> d!22487 m!91231))

(assert (=> b!86344 m!89857))

(declare-fun m!91321 () Bool)

(assert (=> b!86344 m!91321))

(assert (=> b!86048 d!22487))

(declare-fun d!22489 () Bool)

(declare-fun res!44414 () Bool)

(declare-fun e!56269 () Bool)

(assert (=> d!22489 (=> res!44414 e!56269)))

(assert (=> d!22489 (= res!44414 (and ((_ is Cons!1515) (toList!746 lt!40604)) (= (_1!1110 (h!2106 (toList!746 lt!40604))) (_1!1110 lt!40318))))))

(assert (=> d!22489 (= (containsKey!144 (toList!746 lt!40604) (_1!1110 lt!40318)) e!56269)))

(declare-fun b!86345 () Bool)

(declare-fun e!56270 () Bool)

(assert (=> b!86345 (= e!56269 e!56270)))

(declare-fun res!44415 () Bool)

(assert (=> b!86345 (=> (not res!44415) (not e!56270))))

(assert (=> b!86345 (= res!44415 (and (or (not ((_ is Cons!1515) (toList!746 lt!40604))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40604))) (_1!1110 lt!40318))) ((_ is Cons!1515) (toList!746 lt!40604)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40604))) (_1!1110 lt!40318))))))

(declare-fun b!86346 () Bool)

(assert (=> b!86346 (= e!56270 (containsKey!144 (t!5240 (toList!746 lt!40604)) (_1!1110 lt!40318)))))

(assert (= (and d!22489 (not res!44414)) b!86345))

(assert (= (and b!86345 res!44415) b!86346))

(declare-fun m!91323 () Bool)

(assert (=> b!86346 m!91323))

(assert (=> d!22399 d!22489))

(declare-fun d!22491 () Bool)

(declare-fun lt!41027 () Bool)

(assert (=> d!22491 (= lt!41027 (select (content!89 lt!40559) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun e!56271 () Bool)

(assert (=> d!22491 (= lt!41027 e!56271)))

(declare-fun res!44416 () Bool)

(assert (=> d!22491 (=> (not res!44416) (not e!56271))))

(assert (=> d!22491 (= res!44416 ((_ is Cons!1515) lt!40559))))

(assert (=> d!22491 (= (contains!754 lt!40559 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))) lt!41027)))

(declare-fun b!86347 () Bool)

(declare-fun e!56272 () Bool)

(assert (=> b!86347 (= e!56271 e!56272)))

(declare-fun res!44417 () Bool)

(assert (=> b!86347 (=> res!44417 e!56272)))

(assert (=> b!86347 (= res!44417 (= (h!2106 lt!40559) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun b!86348 () Bool)

(assert (=> b!86348 (= e!56272 (contains!754 (t!5240 lt!40559) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!22491 res!44416) b!86347))

(assert (= (and b!86347 (not res!44417)) b!86348))

(declare-fun m!91325 () Bool)

(assert (=> d!22491 m!91325))

(declare-fun m!91327 () Bool)

(assert (=> d!22491 m!91327))

(declare-fun m!91329 () Bool)

(assert (=> b!86348 m!91329))

(assert (=> b!85770 d!22491))

(declare-fun d!22493 () Bool)

(assert (=> d!22493 (= (apply!82 lt!40918 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40918) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3648 () Bool)

(assert (= bs!3648 d!22493))

(declare-fun m!91331 () Bool)

(assert (=> bs!3648 m!91331))

(assert (=> bs!3648 m!91331))

(declare-fun m!91333 () Bool)

(assert (=> bs!3648 m!91333))

(assert (=> b!86090 d!22493))

(declare-fun d!22495 () Bool)

(assert (=> d!22495 (= (get!1198 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2649 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22409 d!22495))

(declare-fun b!86349 () Bool)

(declare-fun e!56273 () Option!146)

(assert (=> b!86349 (= e!56273 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40584)))))))

(declare-fun d!22497 () Bool)

(declare-fun c!14089 () Bool)

(assert (=> d!22497 (= c!14089 (and ((_ is Cons!1515) (toList!746 lt!40584)) (= (_1!1110 (h!2106 (toList!746 lt!40584))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22497 (= (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56273)))

(declare-fun b!86352 () Bool)

(declare-fun e!56274 () Option!146)

(assert (=> b!86352 (= e!56274 None!144)))

(declare-fun b!86351 () Bool)

(assert (=> b!86351 (= e!56274 (getValueByKey!140 (t!5240 (toList!746 lt!40584)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86350 () Bool)

(assert (=> b!86350 (= e!56273 e!56274)))

(declare-fun c!14090 () Bool)

(assert (=> b!86350 (= c!14090 (and ((_ is Cons!1515) (toList!746 lt!40584)) (not (= (_1!1110 (h!2106 (toList!746 lt!40584))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!22497 c!14089) b!86349))

(assert (= (and d!22497 (not c!14089)) b!86350))

(assert (= (and b!86350 c!14090) b!86351))

(assert (= (and b!86350 (not c!14090)) b!86352))

(assert (=> b!86351 m!89983))

(declare-fun m!91335 () Bool)

(assert (=> b!86351 m!91335))

(assert (=> d!22409 d!22497))

(declare-fun d!22499 () Bool)

(assert (=> d!22499 (= ($colon$colon!72 e!56211 (ite c!14063 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322)))) (Cons!1515 (ite c!14063 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))) e!56211))))

(assert (=> bm!8221 d!22499))

(declare-fun d!22501 () Bool)

(assert (=> d!22501 (= (apply!82 (+!110 lt!40909 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))) lt!40907) (apply!82 lt!40909 lt!40907))))

(declare-fun lt!41028 () Unit!2517)

(assert (=> d!22501 (= lt!41028 (choose!508 lt!40909 lt!40899 (zeroValue!2230 newMap!16) lt!40907))))

(declare-fun e!56275 () Bool)

(assert (=> d!22501 e!56275))

(declare-fun res!44418 () Bool)

(assert (=> d!22501 (=> (not res!44418) (not e!56275))))

(assert (=> d!22501 (= res!44418 (contains!753 lt!40909 lt!40907))))

(assert (=> d!22501 (= (addApplyDifferent!58 lt!40909 lt!40899 (zeroValue!2230 newMap!16) lt!40907) lt!41028)))

(declare-fun b!86353 () Bool)

(assert (=> b!86353 (= e!56275 (not (= lt!40907 lt!40899)))))

(assert (= (and d!22501 res!44418) b!86353))

(assert (=> d!22501 m!90899))

(declare-fun m!91337 () Bool)

(assert (=> d!22501 m!91337))

(declare-fun m!91339 () Bool)

(assert (=> d!22501 m!91339))

(assert (=> d!22501 m!90917))

(assert (=> d!22501 m!90899))

(assert (=> d!22501 m!90901))

(assert (=> b!86091 d!22501))

(declare-fun d!22503 () Bool)

(declare-fun e!56276 () Bool)

(assert (=> d!22503 e!56276))

(declare-fun res!44419 () Bool)

(assert (=> d!22503 (=> (not res!44419) (not e!56276))))

(declare-fun lt!41031 () ListLongMap!1461)

(assert (=> d!22503 (= res!44419 (contains!753 lt!41031 (_1!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))))))

(declare-fun lt!41030 () List!1519)

(assert (=> d!22503 (= lt!41031 (ListLongMap!1462 lt!41030))))

(declare-fun lt!41032 () Unit!2517)

(declare-fun lt!41029 () Unit!2517)

(assert (=> d!22503 (= lt!41032 lt!41029)))

(assert (=> d!22503 (= (getValueByKey!140 lt!41030 (_1!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))))))

(assert (=> d!22503 (= lt!41029 (lemmaContainsTupThenGetReturnValue!57 lt!41030 (_1!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))))))

(assert (=> d!22503 (= lt!41030 (insertStrictlySorted!60 (toList!746 lt!40919) (_1!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))))))

(assert (=> d!22503 (= (+!110 lt!40919 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))) lt!41031)))

(declare-fun b!86354 () Bool)

(declare-fun res!44420 () Bool)

(assert (=> b!86354 (=> (not res!44420) (not e!56276))))

(assert (=> b!86354 (= res!44420 (= (getValueByKey!140 (toList!746 lt!41031) (_1!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))))))))

(declare-fun b!86355 () Bool)

(assert (=> b!86355 (= e!56276 (contains!754 (toList!746 lt!41031) (tuple2!2199 lt!40913 (minValue!2230 newMap!16))))))

(assert (= (and d!22503 res!44419) b!86354))

(assert (= (and b!86354 res!44420) b!86355))

(declare-fun m!91341 () Bool)

(assert (=> d!22503 m!91341))

(declare-fun m!91343 () Bool)

(assert (=> d!22503 m!91343))

(declare-fun m!91345 () Bool)

(assert (=> d!22503 m!91345))

(declare-fun m!91347 () Bool)

(assert (=> d!22503 m!91347))

(declare-fun m!91349 () Bool)

(assert (=> b!86354 m!91349))

(declare-fun m!91351 () Bool)

(assert (=> b!86355 m!91351))

(assert (=> b!86091 d!22503))

(declare-fun d!22505 () Bool)

(assert (=> d!22505 (= (apply!82 (+!110 lt!40919 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))) lt!40908) (apply!82 lt!40919 lt!40908))))

(declare-fun lt!41033 () Unit!2517)

(assert (=> d!22505 (= lt!41033 (choose!508 lt!40919 lt!40913 (minValue!2230 newMap!16) lt!40908))))

(declare-fun e!56277 () Bool)

(assert (=> d!22505 e!56277))

(declare-fun res!44421 () Bool)

(assert (=> d!22505 (=> (not res!44421) (not e!56277))))

(assert (=> d!22505 (= res!44421 (contains!753 lt!40919 lt!40908))))

(assert (=> d!22505 (= (addApplyDifferent!58 lt!40919 lt!40913 (minValue!2230 newMap!16) lt!40908) lt!41033)))

(declare-fun b!86356 () Bool)

(assert (=> b!86356 (= e!56277 (not (= lt!40908 lt!40913)))))

(assert (= (and d!22505 res!44421) b!86356))

(assert (=> d!22505 m!90909))

(declare-fun m!91353 () Bool)

(assert (=> d!22505 m!91353))

(declare-fun m!91355 () Bool)

(assert (=> d!22505 m!91355))

(assert (=> d!22505 m!90903))

(assert (=> d!22505 m!90909))

(assert (=> d!22505 m!90911))

(assert (=> b!86091 d!22505))

(declare-fun d!22507 () Bool)

(assert (=> d!22507 (= (apply!82 (+!110 lt!40909 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))) lt!40907) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40909 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))) lt!40907)))))

(declare-fun bs!3649 () Bool)

(assert (= bs!3649 d!22507))

(declare-fun m!91357 () Bool)

(assert (=> bs!3649 m!91357))

(assert (=> bs!3649 m!91357))

(declare-fun m!91359 () Bool)

(assert (=> bs!3649 m!91359))

(assert (=> b!86091 d!22507))

(declare-fun b!86357 () Bool)

(declare-fun e!56280 () ListLongMap!1461)

(declare-fun call!8237 () ListLongMap!1461)

(assert (=> b!86357 (= e!56280 call!8237)))

(declare-fun b!86358 () Bool)

(declare-fun e!56278 () Bool)

(assert (=> b!86358 (= e!56278 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86358 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86359 () Bool)

(declare-fun lt!41038 () Unit!2517)

(declare-fun lt!41039 () Unit!2517)

(assert (=> b!86359 (= lt!41038 lt!41039)))

(declare-fun lt!41036 () (_ BitVec 64))

(declare-fun lt!41037 () ListLongMap!1461)

(declare-fun lt!41035 () (_ BitVec 64))

(declare-fun lt!41040 () V!3027)

(assert (=> b!86359 (not (contains!753 (+!110 lt!41037 (tuple2!2199 lt!41036 lt!41040)) lt!41035))))

(assert (=> b!86359 (= lt!41039 (addStillNotContains!31 lt!41037 lt!41036 lt!41040 lt!41035))))

(assert (=> b!86359 (= lt!41035 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86359 (= lt!41040 (get!1195 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86359 (= lt!41036 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86359 (= lt!41037 call!8237)))

(assert (=> b!86359 (= e!56280 (+!110 call!8237 (tuple2!2199 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (get!1195 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!22509 () Bool)

(declare-fun e!56279 () Bool)

(assert (=> d!22509 e!56279))

(declare-fun res!44422 () Bool)

(assert (=> d!22509 (=> (not res!44422) (not e!56279))))

(declare-fun lt!41034 () ListLongMap!1461)

(assert (=> d!22509 (= res!44422 (not (contains!753 lt!41034 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56281 () ListLongMap!1461)

(assert (=> d!22509 (= lt!41034 e!56281)))

(declare-fun c!14093 () Bool)

(assert (=> d!22509 (= c!14093 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22509 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22509 (= (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41034)))

(declare-fun b!86360 () Bool)

(assert (=> b!86360 (= e!56281 (ListLongMap!1462 Nil!1516))))

(declare-fun b!86361 () Bool)

(declare-fun e!56283 () Bool)

(assert (=> b!86361 (= e!56283 (= lt!41034 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16))))))

(declare-fun bm!8234 () Bool)

(assert (=> bm!8234 (= call!8237 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16)))))

(declare-fun b!86362 () Bool)

(assert (=> b!86362 (= e!56281 e!56280)))

(declare-fun c!14094 () Bool)

(assert (=> b!86362 (= c!14094 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86363 () Bool)

(assert (=> b!86363 (= e!56283 (isEmpty!335 lt!41034))))

(declare-fun b!86364 () Bool)

(declare-fun e!56284 () Bool)

(declare-fun e!56282 () Bool)

(assert (=> b!86364 (= e!56284 e!56282)))

(assert (=> b!86364 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun res!44425 () Bool)

(assert (=> b!86364 (= res!44425 (contains!753 lt!41034 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86364 (=> (not res!44425) (not e!56282))))

(declare-fun b!86365 () Bool)

(assert (=> b!86365 (= e!56284 e!56283)))

(declare-fun c!14091 () Bool)

(assert (=> b!86365 (= c!14091 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86366 () Bool)

(assert (=> b!86366 (= e!56279 e!56284)))

(declare-fun c!14092 () Bool)

(assert (=> b!86366 (= c!14092 e!56278)))

(declare-fun res!44423 () Bool)

(assert (=> b!86366 (=> (not res!44423) (not e!56278))))

(assert (=> b!86366 (= res!44423 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86367 () Bool)

(declare-fun res!44424 () Bool)

(assert (=> b!86367 (=> (not res!44424) (not e!56279))))

(assert (=> b!86367 (= res!44424 (not (contains!753 lt!41034 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86368 () Bool)

(assert (=> b!86368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> b!86368 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))))))))

(assert (=> b!86368 (= e!56282 (= (apply!82 lt!41034 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22509 c!14093) b!86360))

(assert (= (and d!22509 (not c!14093)) b!86362))

(assert (= (and b!86362 c!14094) b!86359))

(assert (= (and b!86362 (not c!14094)) b!86357))

(assert (= (or b!86359 b!86357) bm!8234))

(assert (= (and d!22509 res!44422) b!86367))

(assert (= (and b!86367 res!44424) b!86366))

(assert (= (and b!86366 res!44423) b!86358))

(assert (= (and b!86366 c!14092) b!86364))

(assert (= (and b!86366 (not c!14092)) b!86365))

(assert (= (and b!86364 res!44425) b!86368))

(assert (= (and b!86365 c!14091) b!86361))

(assert (= (and b!86365 (not c!14091)) b!86363))

(declare-fun b_lambda!3835 () Bool)

(assert (=> (not b_lambda!3835) (not b!86359)))

(assert (=> b!86359 t!5248))

(declare-fun b_and!5219 () Bool)

(assert (= b_and!5215 (and (=> t!5248 result!2927) b_and!5219)))

(assert (=> b!86359 t!5250))

(declare-fun b_and!5221 () Bool)

(assert (= b_and!5217 (and (=> t!5250 result!2929) b_and!5221)))

(declare-fun b_lambda!3837 () Bool)

(assert (=> (not b_lambda!3837) (not b!86368)))

(assert (=> b!86368 t!5248))

(declare-fun b_and!5223 () Bool)

(assert (= b_and!5219 (and (=> t!5248 result!2927) b_and!5223)))

(assert (=> b!86368 t!5250))

(declare-fun b_and!5225 () Bool)

(assert (= b_and!5221 (and (=> t!5250 result!2929) b_and!5225)))

(assert (=> b!86358 m!90363))

(assert (=> b!86358 m!90363))

(assert (=> b!86358 m!90365))

(assert (=> b!86364 m!90363))

(assert (=> b!86364 m!90363))

(declare-fun m!91361 () Bool)

(assert (=> b!86364 m!91361))

(declare-fun m!91363 () Bool)

(assert (=> bm!8234 m!91363))

(declare-fun m!91365 () Bool)

(assert (=> d!22509 m!91365))

(assert (=> d!22509 m!90385))

(assert (=> b!86362 m!90363))

(assert (=> b!86362 m!90363))

(assert (=> b!86362 m!90365))

(declare-fun m!91367 () Bool)

(assert (=> b!86367 m!91367))

(assert (=> b!86361 m!91363))

(declare-fun m!91369 () Bool)

(assert (=> b!86363 m!91369))

(assert (=> b!86359 m!90887))

(assert (=> b!86359 m!90373))

(assert (=> b!86359 m!90889))

(declare-fun m!91371 () Bool)

(assert (=> b!86359 m!91371))

(assert (=> b!86359 m!90887))

(assert (=> b!86359 m!91371))

(declare-fun m!91373 () Bool)

(assert (=> b!86359 m!91373))

(declare-fun m!91375 () Bool)

(assert (=> b!86359 m!91375))

(assert (=> b!86359 m!90373))

(assert (=> b!86359 m!90363))

(declare-fun m!91377 () Bool)

(assert (=> b!86359 m!91377))

(assert (=> b!86368 m!90887))

(assert (=> b!86368 m!90373))

(assert (=> b!86368 m!90889))

(assert (=> b!86368 m!90887))

(assert (=> b!86368 m!90363))

(declare-fun m!91379 () Bool)

(assert (=> b!86368 m!91379))

(assert (=> b!86368 m!90373))

(assert (=> b!86368 m!90363))

(assert (=> b!86091 d!22509))

(declare-fun d!22511 () Bool)

(assert (=> d!22511 (contains!753 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))) lt!40912)))

(declare-fun lt!41041 () Unit!2517)

(assert (=> d!22511 (= lt!41041 (choose!507 lt!40905 lt!40914 (zeroValue!2230 newMap!16) lt!40912))))

(assert (=> d!22511 (contains!753 lt!40905 lt!40912)))

(assert (=> d!22511 (= (addStillContains!58 lt!40905 lt!40914 (zeroValue!2230 newMap!16) lt!40912) lt!41041)))

(declare-fun bs!3650 () Bool)

(assert (= bs!3650 d!22511))

(assert (=> bs!3650 m!90919))

(assert (=> bs!3650 m!90919))

(assert (=> bs!3650 m!90921))

(declare-fun m!91381 () Bool)

(assert (=> bs!3650 m!91381))

(declare-fun m!91383 () Bool)

(assert (=> bs!3650 m!91383))

(assert (=> b!86091 d!22511))

(declare-fun d!22513 () Bool)

(assert (=> d!22513 (= (apply!82 (+!110 lt!40917 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))) lt!40915) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40917 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))) lt!40915)))))

(declare-fun bs!3651 () Bool)

(assert (= bs!3651 d!22513))

(declare-fun m!91385 () Bool)

(assert (=> bs!3651 m!91385))

(assert (=> bs!3651 m!91385))

(declare-fun m!91387 () Bool)

(assert (=> bs!3651 m!91387))

(assert (=> b!86091 d!22513))

(declare-fun d!22515 () Bool)

(declare-fun e!56285 () Bool)

(assert (=> d!22515 e!56285))

(declare-fun res!44426 () Bool)

(assert (=> d!22515 (=> (not res!44426) (not e!56285))))

(declare-fun lt!41044 () ListLongMap!1461)

(assert (=> d!22515 (= res!44426 (contains!753 lt!41044 (_1!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!41043 () List!1519)

(assert (=> d!22515 (= lt!41044 (ListLongMap!1462 lt!41043))))

(declare-fun lt!41045 () Unit!2517)

(declare-fun lt!41042 () Unit!2517)

(assert (=> d!22515 (= lt!41045 lt!41042)))

(assert (=> d!22515 (= (getValueByKey!140 lt!41043 (_1!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22515 (= lt!41042 (lemmaContainsTupThenGetReturnValue!57 lt!41043 (_1!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22515 (= lt!41043 (insertStrictlySorted!60 (toList!746 lt!40905) (_1!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22515 (= (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))) lt!41044)))

(declare-fun b!86369 () Bool)

(declare-fun res!44427 () Bool)

(assert (=> b!86369 (=> (not res!44427) (not e!56285))))

(assert (=> b!86369 (= res!44427 (= (getValueByKey!140 (toList!746 lt!41044) (_1!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))))))))

(declare-fun b!86370 () Bool)

(assert (=> b!86370 (= e!56285 (contains!754 (toList!746 lt!41044) (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22515 res!44426) b!86369))

(assert (= (and b!86369 res!44427) b!86370))

(declare-fun m!91389 () Bool)

(assert (=> d!22515 m!91389))

(declare-fun m!91391 () Bool)

(assert (=> d!22515 m!91391))

(declare-fun m!91393 () Bool)

(assert (=> d!22515 m!91393))

(declare-fun m!91395 () Bool)

(assert (=> d!22515 m!91395))

(declare-fun m!91397 () Bool)

(assert (=> b!86369 m!91397))

(declare-fun m!91399 () Bool)

(assert (=> b!86370 m!91399))

(assert (=> b!86091 d!22515))

(declare-fun d!22517 () Bool)

(assert (=> d!22517 (= (apply!82 (+!110 lt!40917 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))) lt!40915) (apply!82 lt!40917 lt!40915))))

(declare-fun lt!41046 () Unit!2517)

(assert (=> d!22517 (= lt!41046 (choose!508 lt!40917 lt!40916 (minValue!2230 newMap!16) lt!40915))))

(declare-fun e!56286 () Bool)

(assert (=> d!22517 e!56286))

(declare-fun res!44428 () Bool)

(assert (=> d!22517 (=> (not res!44428) (not e!56286))))

(assert (=> d!22517 (= res!44428 (contains!753 lt!40917 lt!40915))))

(assert (=> d!22517 (= (addApplyDifferent!58 lt!40917 lt!40916 (minValue!2230 newMap!16) lt!40915) lt!41046)))

(declare-fun b!86371 () Bool)

(assert (=> b!86371 (= e!56286 (not (= lt!40915 lt!40916)))))

(assert (= (and d!22517 res!44428) b!86371))

(assert (=> d!22517 m!90905))

(declare-fun m!91401 () Bool)

(assert (=> d!22517 m!91401))

(declare-fun m!91403 () Bool)

(assert (=> d!22517 m!91403))

(assert (=> d!22517 m!90897))

(assert (=> d!22517 m!90905))

(assert (=> d!22517 m!90907))

(assert (=> b!86091 d!22517))

(declare-fun d!22519 () Bool)

(declare-fun e!56287 () Bool)

(assert (=> d!22519 e!56287))

(declare-fun res!44429 () Bool)

(assert (=> d!22519 (=> (not res!44429) (not e!56287))))

(declare-fun lt!41049 () ListLongMap!1461)

(assert (=> d!22519 (= res!44429 (contains!753 lt!41049 (_1!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))))))

(declare-fun lt!41048 () List!1519)

(assert (=> d!22519 (= lt!41049 (ListLongMap!1462 lt!41048))))

(declare-fun lt!41050 () Unit!2517)

(declare-fun lt!41047 () Unit!2517)

(assert (=> d!22519 (= lt!41050 lt!41047)))

(assert (=> d!22519 (= (getValueByKey!140 lt!41048 (_1!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))))))

(assert (=> d!22519 (= lt!41047 (lemmaContainsTupThenGetReturnValue!57 lt!41048 (_1!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))))))

(assert (=> d!22519 (= lt!41048 (insertStrictlySorted!60 (toList!746 lt!40917) (_1!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))))))

(assert (=> d!22519 (= (+!110 lt!40917 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))) lt!41049)))

(declare-fun b!86372 () Bool)

(declare-fun res!44430 () Bool)

(assert (=> b!86372 (=> (not res!44430) (not e!56287))))

(assert (=> b!86372 (= res!44430 (= (getValueByKey!140 (toList!746 lt!41049) (_1!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40916 (minValue!2230 newMap!16))))))))

(declare-fun b!86373 () Bool)

(assert (=> b!86373 (= e!56287 (contains!754 (toList!746 lt!41049) (tuple2!2199 lt!40916 (minValue!2230 newMap!16))))))

(assert (= (and d!22519 res!44429) b!86372))

(assert (= (and b!86372 res!44430) b!86373))

(declare-fun m!91405 () Bool)

(assert (=> d!22519 m!91405))

(declare-fun m!91407 () Bool)

(assert (=> d!22519 m!91407))

(declare-fun m!91409 () Bool)

(assert (=> d!22519 m!91409))

(declare-fun m!91411 () Bool)

(assert (=> d!22519 m!91411))

(declare-fun m!91413 () Bool)

(assert (=> b!86372 m!91413))

(declare-fun m!91415 () Bool)

(assert (=> b!86373 m!91415))

(assert (=> b!86091 d!22519))

(declare-fun d!22521 () Bool)

(assert (=> d!22521 (= (apply!82 lt!40909 lt!40907) (get!1198 (getValueByKey!140 (toList!746 lt!40909) lt!40907)))))

(declare-fun bs!3652 () Bool)

(assert (= bs!3652 d!22521))

(declare-fun m!91417 () Bool)

(assert (=> bs!3652 m!91417))

(assert (=> bs!3652 m!91417))

(declare-fun m!91419 () Bool)

(assert (=> bs!3652 m!91419))

(assert (=> b!86091 d!22521))

(declare-fun d!22523 () Bool)

(assert (=> d!22523 (= (apply!82 lt!40917 lt!40915) (get!1198 (getValueByKey!140 (toList!746 lt!40917) lt!40915)))))

(declare-fun bs!3653 () Bool)

(assert (= bs!3653 d!22523))

(declare-fun m!91421 () Bool)

(assert (=> bs!3653 m!91421))

(assert (=> bs!3653 m!91421))

(declare-fun m!91423 () Bool)

(assert (=> bs!3653 m!91423))

(assert (=> b!86091 d!22523))

(declare-fun d!22525 () Bool)

(declare-fun e!56289 () Bool)

(assert (=> d!22525 e!56289))

(declare-fun res!44431 () Bool)

(assert (=> d!22525 (=> res!44431 e!56289)))

(declare-fun lt!41051 () Bool)

(assert (=> d!22525 (= res!44431 (not lt!41051))))

(declare-fun lt!41052 () Bool)

(assert (=> d!22525 (= lt!41051 lt!41052)))

(declare-fun lt!41054 () Unit!2517)

(declare-fun e!56288 () Unit!2517)

(assert (=> d!22525 (= lt!41054 e!56288)))

(declare-fun c!14095 () Bool)

(assert (=> d!22525 (= c!14095 lt!41052)))

(assert (=> d!22525 (= lt!41052 (containsKey!144 (toList!746 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))) lt!40912))))

(assert (=> d!22525 (= (contains!753 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16))) lt!40912) lt!41051)))

(declare-fun b!86374 () Bool)

(declare-fun lt!41053 () Unit!2517)

(assert (=> b!86374 (= e!56288 lt!41053)))

(assert (=> b!86374 (= lt!41053 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))) lt!40912))))

(assert (=> b!86374 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))) lt!40912))))

(declare-fun b!86375 () Bool)

(declare-fun Unit!2552 () Unit!2517)

(assert (=> b!86375 (= e!56288 Unit!2552)))

(declare-fun b!86376 () Bool)

(assert (=> b!86376 (= e!56289 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40905 (tuple2!2199 lt!40914 (zeroValue!2230 newMap!16)))) lt!40912)))))

(assert (= (and d!22525 c!14095) b!86374))

(assert (= (and d!22525 (not c!14095)) b!86375))

(assert (= (and d!22525 (not res!44431)) b!86376))

(declare-fun m!91425 () Bool)

(assert (=> d!22525 m!91425))

(declare-fun m!91427 () Bool)

(assert (=> b!86374 m!91427))

(declare-fun m!91429 () Bool)

(assert (=> b!86374 m!91429))

(assert (=> b!86374 m!91429))

(declare-fun m!91431 () Bool)

(assert (=> b!86374 m!91431))

(assert (=> b!86376 m!91429))

(assert (=> b!86376 m!91429))

(assert (=> b!86376 m!91431))

(assert (=> b!86091 d!22525))

(declare-fun d!22527 () Bool)

(assert (=> d!22527 (= (apply!82 lt!40919 lt!40908) (get!1198 (getValueByKey!140 (toList!746 lt!40919) lt!40908)))))

(declare-fun bs!3654 () Bool)

(assert (= bs!3654 d!22527))

(declare-fun m!91433 () Bool)

(assert (=> bs!3654 m!91433))

(assert (=> bs!3654 m!91433))

(declare-fun m!91435 () Bool)

(assert (=> bs!3654 m!91435))

(assert (=> b!86091 d!22527))

(declare-fun d!22529 () Bool)

(assert (=> d!22529 (= (apply!82 (+!110 lt!40919 (tuple2!2199 lt!40913 (minValue!2230 newMap!16))) lt!40908) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40919 (tuple2!2199 lt!40913 (minValue!2230 newMap!16)))) lt!40908)))))

(declare-fun bs!3655 () Bool)

(assert (= bs!3655 d!22529))

(declare-fun m!91437 () Bool)

(assert (=> bs!3655 m!91437))

(assert (=> bs!3655 m!91437))

(declare-fun m!91439 () Bool)

(assert (=> bs!3655 m!91439))

(assert (=> b!86091 d!22529))

(declare-fun d!22531 () Bool)

(declare-fun e!56290 () Bool)

(assert (=> d!22531 e!56290))

(declare-fun res!44432 () Bool)

(assert (=> d!22531 (=> (not res!44432) (not e!56290))))

(declare-fun lt!41057 () ListLongMap!1461)

(assert (=> d!22531 (= res!44432 (contains!753 lt!41057 (_1!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!41056 () List!1519)

(assert (=> d!22531 (= lt!41057 (ListLongMap!1462 lt!41056))))

(declare-fun lt!41058 () Unit!2517)

(declare-fun lt!41055 () Unit!2517)

(assert (=> d!22531 (= lt!41058 lt!41055)))

(assert (=> d!22531 (= (getValueByKey!140 lt!41056 (_1!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22531 (= lt!41055 (lemmaContainsTupThenGetReturnValue!57 lt!41056 (_1!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22531 (= lt!41056 (insertStrictlySorted!60 (toList!746 lt!40909) (_1!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22531 (= (+!110 lt!40909 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))) lt!41057)))

(declare-fun b!86377 () Bool)

(declare-fun res!44433 () Bool)

(assert (=> b!86377 (=> (not res!44433) (not e!56290))))

(assert (=> b!86377 (= res!44433 (= (getValueByKey!140 (toList!746 lt!41057) (_1!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))))))))

(declare-fun b!86378 () Bool)

(assert (=> b!86378 (= e!56290 (contains!754 (toList!746 lt!41057) (tuple2!2199 lt!40899 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22531 res!44432) b!86377))

(assert (= (and b!86377 res!44433) b!86378))

(declare-fun m!91441 () Bool)

(assert (=> d!22531 m!91441))

(declare-fun m!91443 () Bool)

(assert (=> d!22531 m!91443))

(declare-fun m!91445 () Bool)

(assert (=> d!22531 m!91445))

(declare-fun m!91447 () Bool)

(assert (=> d!22531 m!91447))

(declare-fun m!91449 () Bool)

(assert (=> b!86377 m!91449))

(declare-fun m!91451 () Bool)

(assert (=> b!86378 m!91451))

(assert (=> b!86091 d!22531))

(declare-fun b!86379 () Bool)

(declare-fun e!56291 () Option!146)

(assert (=> b!86379 (= e!56291 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40603)))))))

(declare-fun d!22533 () Bool)

(declare-fun c!14096 () Bool)

(assert (=> d!22533 (= c!14096 (and ((_ is Cons!1515) (t!5240 lt!40603)) (= (_1!1110 (h!2106 (t!5240 lt!40603))) (_1!1110 lt!40318))))))

(assert (=> d!22533 (= (getValueByKey!140 (t!5240 lt!40603) (_1!1110 lt!40318)) e!56291)))

(declare-fun b!86382 () Bool)

(declare-fun e!56292 () Option!146)

(assert (=> b!86382 (= e!56292 None!144)))

(declare-fun b!86381 () Bool)

(assert (=> b!86381 (= e!56292 (getValueByKey!140 (t!5240 (t!5240 lt!40603)) (_1!1110 lt!40318)))))

(declare-fun b!86380 () Bool)

(assert (=> b!86380 (= e!56291 e!56292)))

(declare-fun c!14097 () Bool)

(assert (=> b!86380 (= c!14097 (and ((_ is Cons!1515) (t!5240 lt!40603)) (not (= (_1!1110 (h!2106 (t!5240 lt!40603))) (_1!1110 lt!40318)))))))

(assert (= (and d!22533 c!14096) b!86379))

(assert (= (and d!22533 (not c!14096)) b!86380))

(assert (= (and b!86380 c!14097) b!86381))

(assert (= (and b!86380 (not c!14097)) b!86382))

(declare-fun m!91453 () Bool)

(assert (=> b!86381 m!91453))

(assert (=> b!86201 d!22533))

(declare-fun d!22535 () Bool)

(declare-fun e!56293 () Bool)

(assert (=> d!22535 e!56293))

(declare-fun res!44434 () Bool)

(assert (=> d!22535 (=> (not res!44434) (not e!56293))))

(declare-fun lt!41061 () ListLongMap!1461)

(assert (=> d!22535 (= res!44434 (contains!753 lt!41061 (_1!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))))))

(declare-fun lt!41060 () List!1519)

(assert (=> d!22535 (= lt!41061 (ListLongMap!1462 lt!41060))))

(declare-fun lt!41062 () Unit!2517)

(declare-fun lt!41059 () Unit!2517)

(assert (=> d!22535 (= lt!41062 lt!41059)))

(assert (=> d!22535 (= (getValueByKey!140 lt!41060 (_1!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))))))

(assert (=> d!22535 (= lt!41059 (lemmaContainsTupThenGetReturnValue!57 lt!41060 (_1!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))))))

(assert (=> d!22535 (= lt!41060 (insertStrictlySorted!60 (toList!746 lt!40874) (_1!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))))))

(assert (=> d!22535 (= (+!110 lt!40874 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))) lt!41061)))

(declare-fun b!86383 () Bool)

(declare-fun res!44435 () Bool)

(assert (=> b!86383 (=> (not res!44435) (not e!56293))))

(assert (=> b!86383 (= res!44435 (= (getValueByKey!140 (toList!746 lt!41061) (_1!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))))))))

(declare-fun b!86384 () Bool)

(assert (=> b!86384 (= e!56293 (contains!754 (toList!746 lt!41061) (tuple2!2199 lt!40868 (minValue!2230 newMap!16))))))

(assert (= (and d!22535 res!44434) b!86383))

(assert (= (and b!86383 res!44435) b!86384))

(declare-fun m!91455 () Bool)

(assert (=> d!22535 m!91455))

(declare-fun m!91457 () Bool)

(assert (=> d!22535 m!91457))

(declare-fun m!91459 () Bool)

(assert (=> d!22535 m!91459))

(declare-fun m!91461 () Bool)

(assert (=> d!22535 m!91461))

(declare-fun m!91463 () Bool)

(assert (=> b!86383 m!91463))

(declare-fun m!91465 () Bool)

(assert (=> b!86384 m!91465))

(assert (=> b!86028 d!22535))

(declare-fun d!22537 () Bool)

(declare-fun e!56294 () Bool)

(assert (=> d!22537 e!56294))

(declare-fun res!44436 () Bool)

(assert (=> d!22537 (=> (not res!44436) (not e!56294))))

(declare-fun lt!41065 () ListLongMap!1461)

(assert (=> d!22537 (= res!44436 (contains!753 lt!41065 (_1!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!41064 () List!1519)

(assert (=> d!22537 (= lt!41065 (ListLongMap!1462 lt!41064))))

(declare-fun lt!41066 () Unit!2517)

(declare-fun lt!41063 () Unit!2517)

(assert (=> d!22537 (= lt!41066 lt!41063)))

(assert (=> d!22537 (= (getValueByKey!140 lt!41064 (_1!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22537 (= lt!41063 (lemmaContainsTupThenGetReturnValue!57 lt!41064 (_1!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22537 (= lt!41064 (insertStrictlySorted!60 (toList!746 lt!40860) (_1!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22537 (= (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))) lt!41065)))

(declare-fun b!86385 () Bool)

(declare-fun res!44437 () Bool)

(assert (=> b!86385 (=> (not res!44437) (not e!56294))))

(assert (=> b!86385 (= res!44437 (= (getValueByKey!140 (toList!746 lt!41065) (_1!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))))))))

(declare-fun b!86386 () Bool)

(assert (=> b!86386 (= e!56294 (contains!754 (toList!746 lt!41065) (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22537 res!44436) b!86385))

(assert (= (and b!86385 res!44437) b!86386))

(declare-fun m!91467 () Bool)

(assert (=> d!22537 m!91467))

(declare-fun m!91469 () Bool)

(assert (=> d!22537 m!91469))

(declare-fun m!91471 () Bool)

(assert (=> d!22537 m!91471))

(declare-fun m!91473 () Bool)

(assert (=> d!22537 m!91473))

(declare-fun m!91475 () Bool)

(assert (=> b!86385 m!91475))

(declare-fun m!91477 () Bool)

(assert (=> b!86386 m!91477))

(assert (=> b!86028 d!22537))

(declare-fun d!22539 () Bool)

(assert (=> d!22539 (= (apply!82 (+!110 lt!40864 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))) lt!40862) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40864 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))) lt!40862)))))

(declare-fun bs!3656 () Bool)

(assert (= bs!3656 d!22539))

(declare-fun m!91479 () Bool)

(assert (=> bs!3656 m!91479))

(assert (=> bs!3656 m!91479))

(declare-fun m!91481 () Bool)

(assert (=> bs!3656 m!91481))

(assert (=> b!86028 d!22539))

(declare-fun d!22541 () Bool)

(assert (=> d!22541 (= (apply!82 lt!40864 lt!40862) (get!1198 (getValueByKey!140 (toList!746 lt!40864) lt!40862)))))

(declare-fun bs!3657 () Bool)

(assert (= bs!3657 d!22541))

(declare-fun m!91483 () Bool)

(assert (=> bs!3657 m!91483))

(assert (=> bs!3657 m!91483))

(declare-fun m!91485 () Bool)

(assert (=> bs!3657 m!91485))

(assert (=> b!86028 d!22541))

(declare-fun d!22543 () Bool)

(assert (=> d!22543 (= (apply!82 (+!110 lt!40874 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))) lt!40863) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40874 (tuple2!2199 lt!40868 (minValue!2230 newMap!16)))) lt!40863)))))

(declare-fun bs!3658 () Bool)

(assert (= bs!3658 d!22543))

(declare-fun m!91487 () Bool)

(assert (=> bs!3658 m!91487))

(assert (=> bs!3658 m!91487))

(declare-fun m!91489 () Bool)

(assert (=> bs!3658 m!91489))

(assert (=> b!86028 d!22543))

(declare-fun d!22545 () Bool)

(assert (=> d!22545 (= (apply!82 (+!110 lt!40864 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))) lt!40862) (apply!82 lt!40864 lt!40862))))

(declare-fun lt!41067 () Unit!2517)

(assert (=> d!22545 (= lt!41067 (choose!508 lt!40864 lt!40854 (zeroValue!2230 newMap!16) lt!40862))))

(declare-fun e!56295 () Bool)

(assert (=> d!22545 e!56295))

(declare-fun res!44438 () Bool)

(assert (=> d!22545 (=> (not res!44438) (not e!56295))))

(assert (=> d!22545 (= res!44438 (contains!753 lt!40864 lt!40862))))

(assert (=> d!22545 (= (addApplyDifferent!58 lt!40864 lt!40854 (zeroValue!2230 newMap!16) lt!40862) lt!41067)))

(declare-fun b!86387 () Bool)

(assert (=> b!86387 (= e!56295 (not (= lt!40862 lt!40854)))))

(assert (= (and d!22545 res!44438) b!86387))

(assert (=> d!22545 m!90789))

(declare-fun m!91491 () Bool)

(assert (=> d!22545 m!91491))

(declare-fun m!91493 () Bool)

(assert (=> d!22545 m!91493))

(assert (=> d!22545 m!90807))

(assert (=> d!22545 m!90789))

(assert (=> d!22545 m!90791))

(assert (=> b!86028 d!22545))

(declare-fun d!22547 () Bool)

(assert (=> d!22547 (= (apply!82 lt!40874 lt!40863) (get!1198 (getValueByKey!140 (toList!746 lt!40874) lt!40863)))))

(declare-fun bs!3659 () Bool)

(assert (= bs!3659 d!22547))

(declare-fun m!91495 () Bool)

(assert (=> bs!3659 m!91495))

(assert (=> bs!3659 m!91495))

(declare-fun m!91497 () Bool)

(assert (=> bs!3659 m!91497))

(assert (=> b!86028 d!22547))

(declare-fun b!86388 () Bool)

(declare-fun e!56298 () ListLongMap!1461)

(declare-fun call!8238 () ListLongMap!1461)

(assert (=> b!86388 (= e!56298 call!8238)))

(declare-fun b!86389 () Bool)

(declare-fun e!56296 () Bool)

(assert (=> b!86389 (= e!56296 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86389 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!86390 () Bool)

(declare-fun lt!41072 () Unit!2517)

(declare-fun lt!41073 () Unit!2517)

(assert (=> b!86390 (= lt!41072 lt!41073)))

(declare-fun lt!41071 () ListLongMap!1461)

(declare-fun lt!41069 () (_ BitVec 64))

(declare-fun lt!41074 () V!3027)

(declare-fun lt!41070 () (_ BitVec 64))

(assert (=> b!86390 (not (contains!753 (+!110 lt!41071 (tuple2!2199 lt!41070 lt!41074)) lt!41069))))

(assert (=> b!86390 (= lt!41073 (addStillNotContains!31 lt!41071 lt!41070 lt!41074 lt!41069))))

(assert (=> b!86390 (= lt!41069 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86390 (= lt!41074 (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86390 (= lt!41070 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86390 (= lt!41071 call!8238)))

(assert (=> b!86390 (= e!56298 (+!110 call!8238 (tuple2!2199 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!22549 () Bool)

(declare-fun e!56297 () Bool)

(assert (=> d!22549 e!56297))

(declare-fun res!44439 () Bool)

(assert (=> d!22549 (=> (not res!44439) (not e!56297))))

(declare-fun lt!41068 () ListLongMap!1461)

(assert (=> d!22549 (= res!44439 (not (contains!753 lt!41068 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56299 () ListLongMap!1461)

(assert (=> d!22549 (= lt!41068 e!56299)))

(declare-fun c!14100 () Bool)

(assert (=> d!22549 (= c!14100 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22549 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22549 (= (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41068)))

(declare-fun b!86391 () Bool)

(assert (=> b!86391 (= e!56299 (ListLongMap!1462 Nil!1516))))

(declare-fun b!86392 () Bool)

(declare-fun e!56301 () Bool)

(assert (=> b!86392 (= e!56301 (= lt!41068 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16))))))

(declare-fun bm!8235 () Bool)

(assert (=> bm!8235 (= call!8238 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16)))))

(declare-fun b!86393 () Bool)

(assert (=> b!86393 (= e!56299 e!56298)))

(declare-fun c!14101 () Bool)

(assert (=> b!86393 (= c!14101 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86394 () Bool)

(assert (=> b!86394 (= e!56301 (isEmpty!335 lt!41068))))

(declare-fun b!86395 () Bool)

(declare-fun e!56302 () Bool)

(declare-fun e!56300 () Bool)

(assert (=> b!86395 (= e!56302 e!56300)))

(assert (=> b!86395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun res!44442 () Bool)

(assert (=> b!86395 (= res!44442 (contains!753 lt!41068 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86395 (=> (not res!44442) (not e!56300))))

(declare-fun b!86396 () Bool)

(assert (=> b!86396 (= e!56302 e!56301)))

(declare-fun c!14098 () Bool)

(assert (=> b!86396 (= c!14098 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86397 () Bool)

(assert (=> b!86397 (= e!56297 e!56302)))

(declare-fun c!14099 () Bool)

(assert (=> b!86397 (= c!14099 e!56296)))

(declare-fun res!44440 () Bool)

(assert (=> b!86397 (=> (not res!44440) (not e!56296))))

(assert (=> b!86397 (= res!44440 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86398 () Bool)

(declare-fun res!44441 () Bool)

(assert (=> b!86398 (=> (not res!44441) (not e!56297))))

(assert (=> b!86398 (= res!44441 (not (contains!753 lt!41068 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86399 () Bool)

(assert (=> b!86399 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> b!86399 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (_values!2321 newMap!16))))))

(assert (=> b!86399 (= e!56300 (= (apply!82 lt!41068 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22549 c!14100) b!86391))

(assert (= (and d!22549 (not c!14100)) b!86393))

(assert (= (and b!86393 c!14101) b!86390))

(assert (= (and b!86393 (not c!14101)) b!86388))

(assert (= (or b!86390 b!86388) bm!8235))

(assert (= (and d!22549 res!44439) b!86398))

(assert (= (and b!86398 res!44441) b!86397))

(assert (= (and b!86397 res!44440) b!86389))

(assert (= (and b!86397 c!14099) b!86395))

(assert (= (and b!86397 (not c!14099)) b!86396))

(assert (= (and b!86395 res!44442) b!86399))

(assert (= (and b!86396 c!14098) b!86392))

(assert (= (and b!86396 (not c!14098)) b!86394))

(declare-fun b_lambda!3839 () Bool)

(assert (=> (not b_lambda!3839) (not b!86390)))

(assert (=> b!86390 t!5248))

(declare-fun b_and!5227 () Bool)

(assert (= b_and!5223 (and (=> t!5248 result!2927) b_and!5227)))

(assert (=> b!86390 t!5250))

(declare-fun b_and!5229 () Bool)

(assert (= b_and!5225 (and (=> t!5250 result!2929) b_and!5229)))

(declare-fun b_lambda!3841 () Bool)

(assert (=> (not b_lambda!3841) (not b!86399)))

(assert (=> b!86399 t!5248))

(declare-fun b_and!5231 () Bool)

(assert (= b_and!5227 (and (=> t!5248 result!2927) b_and!5231)))

(assert (=> b!86399 t!5250))

(declare-fun b_and!5233 () Bool)

(assert (= b_and!5229 (and (=> t!5250 result!2929) b_and!5233)))

(assert (=> b!86389 m!90363))

(assert (=> b!86389 m!90363))

(assert (=> b!86389 m!90365))

(assert (=> b!86395 m!90363))

(assert (=> b!86395 m!90363))

(declare-fun m!91499 () Bool)

(assert (=> b!86395 m!91499))

(declare-fun m!91501 () Bool)

(assert (=> bm!8235 m!91501))

(declare-fun m!91503 () Bool)

(assert (=> d!22549 m!91503))

(assert (=> d!22549 m!90385))

(assert (=> b!86393 m!90363))

(assert (=> b!86393 m!90363))

(assert (=> b!86393 m!90365))

(declare-fun m!91505 () Bool)

(assert (=> b!86398 m!91505))

(assert (=> b!86392 m!91501))

(declare-fun m!91507 () Bool)

(assert (=> b!86394 m!91507))

(assert (=> b!86390 m!90777))

(assert (=> b!86390 m!90373))

(assert (=> b!86390 m!90779))

(declare-fun m!91509 () Bool)

(assert (=> b!86390 m!91509))

(assert (=> b!86390 m!90777))

(assert (=> b!86390 m!91509))

(declare-fun m!91511 () Bool)

(assert (=> b!86390 m!91511))

(declare-fun m!91513 () Bool)

(assert (=> b!86390 m!91513))

(assert (=> b!86390 m!90373))

(assert (=> b!86390 m!90363))

(declare-fun m!91515 () Bool)

(assert (=> b!86390 m!91515))

(assert (=> b!86399 m!90777))

(assert (=> b!86399 m!90373))

(assert (=> b!86399 m!90779))

(assert (=> b!86399 m!90777))

(assert (=> b!86399 m!90363))

(declare-fun m!91517 () Bool)

(assert (=> b!86399 m!91517))

(assert (=> b!86399 m!90373))

(assert (=> b!86399 m!90363))

(assert (=> b!86028 d!22549))

(declare-fun d!22551 () Bool)

(assert (=> d!22551 (contains!753 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))) lt!40867)))

(declare-fun lt!41075 () Unit!2517)

(assert (=> d!22551 (= lt!41075 (choose!507 lt!40860 lt!40869 (zeroValue!2230 newMap!16) lt!40867))))

(assert (=> d!22551 (contains!753 lt!40860 lt!40867)))

(assert (=> d!22551 (= (addStillContains!58 lt!40860 lt!40869 (zeroValue!2230 newMap!16) lt!40867) lt!41075)))

(declare-fun bs!3660 () Bool)

(assert (= bs!3660 d!22551))

(assert (=> bs!3660 m!90809))

(assert (=> bs!3660 m!90809))

(assert (=> bs!3660 m!90811))

(declare-fun m!91519 () Bool)

(assert (=> bs!3660 m!91519))

(declare-fun m!91521 () Bool)

(assert (=> bs!3660 m!91521))

(assert (=> b!86028 d!22551))

(declare-fun d!22553 () Bool)

(assert (=> d!22553 (= (apply!82 (+!110 lt!40874 (tuple2!2199 lt!40868 (minValue!2230 newMap!16))) lt!40863) (apply!82 lt!40874 lt!40863))))

(declare-fun lt!41076 () Unit!2517)

(assert (=> d!22553 (= lt!41076 (choose!508 lt!40874 lt!40868 (minValue!2230 newMap!16) lt!40863))))

(declare-fun e!56303 () Bool)

(assert (=> d!22553 e!56303))

(declare-fun res!44443 () Bool)

(assert (=> d!22553 (=> (not res!44443) (not e!56303))))

(assert (=> d!22553 (= res!44443 (contains!753 lt!40874 lt!40863))))

(assert (=> d!22553 (= (addApplyDifferent!58 lt!40874 lt!40868 (minValue!2230 newMap!16) lt!40863) lt!41076)))

(declare-fun b!86400 () Bool)

(assert (=> b!86400 (= e!56303 (not (= lt!40863 lt!40868)))))

(assert (= (and d!22553 res!44443) b!86400))

(assert (=> d!22553 m!90799))

(declare-fun m!91523 () Bool)

(assert (=> d!22553 m!91523))

(declare-fun m!91525 () Bool)

(assert (=> d!22553 m!91525))

(assert (=> d!22553 m!90793))

(assert (=> d!22553 m!90799))

(assert (=> d!22553 m!90801))

(assert (=> b!86028 d!22553))

(declare-fun d!22555 () Bool)

(assert (=> d!22555 (= (apply!82 (+!110 lt!40872 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))) lt!40870) (apply!82 lt!40872 lt!40870))))

(declare-fun lt!41077 () Unit!2517)

(assert (=> d!22555 (= lt!41077 (choose!508 lt!40872 lt!40871 (minValue!2230 newMap!16) lt!40870))))

(declare-fun e!56304 () Bool)

(assert (=> d!22555 e!56304))

(declare-fun res!44444 () Bool)

(assert (=> d!22555 (=> (not res!44444) (not e!56304))))

(assert (=> d!22555 (= res!44444 (contains!753 lt!40872 lt!40870))))

(assert (=> d!22555 (= (addApplyDifferent!58 lt!40872 lt!40871 (minValue!2230 newMap!16) lt!40870) lt!41077)))

(declare-fun b!86401 () Bool)

(assert (=> b!86401 (= e!56304 (not (= lt!40870 lt!40871)))))

(assert (= (and d!22555 res!44444) b!86401))

(assert (=> d!22555 m!90795))

(declare-fun m!91527 () Bool)

(assert (=> d!22555 m!91527))

(declare-fun m!91529 () Bool)

(assert (=> d!22555 m!91529))

(assert (=> d!22555 m!90787))

(assert (=> d!22555 m!90795))

(assert (=> d!22555 m!90797))

(assert (=> b!86028 d!22555))

(declare-fun d!22557 () Bool)

(declare-fun e!56305 () Bool)

(assert (=> d!22557 e!56305))

(declare-fun res!44445 () Bool)

(assert (=> d!22557 (=> (not res!44445) (not e!56305))))

(declare-fun lt!41080 () ListLongMap!1461)

(assert (=> d!22557 (= res!44445 (contains!753 lt!41080 (_1!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))))))

(declare-fun lt!41079 () List!1519)

(assert (=> d!22557 (= lt!41080 (ListLongMap!1462 lt!41079))))

(declare-fun lt!41081 () Unit!2517)

(declare-fun lt!41078 () Unit!2517)

(assert (=> d!22557 (= lt!41081 lt!41078)))

(assert (=> d!22557 (= (getValueByKey!140 lt!41079 (_1!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))))))

(assert (=> d!22557 (= lt!41078 (lemmaContainsTupThenGetReturnValue!57 lt!41079 (_1!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))))))

(assert (=> d!22557 (= lt!41079 (insertStrictlySorted!60 (toList!746 lt!40872) (_1!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))))))

(assert (=> d!22557 (= (+!110 lt!40872 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))) lt!41080)))

(declare-fun b!86402 () Bool)

(declare-fun res!44446 () Bool)

(assert (=> b!86402 (=> (not res!44446) (not e!56305))))

(assert (=> b!86402 (= res!44446 (= (getValueByKey!140 (toList!746 lt!41080) (_1!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))))))))

(declare-fun b!86403 () Bool)

(assert (=> b!86403 (= e!56305 (contains!754 (toList!746 lt!41080) (tuple2!2199 lt!40871 (minValue!2230 newMap!16))))))

(assert (= (and d!22557 res!44445) b!86402))

(assert (= (and b!86402 res!44446) b!86403))

(declare-fun m!91531 () Bool)

(assert (=> d!22557 m!91531))

(declare-fun m!91533 () Bool)

(assert (=> d!22557 m!91533))

(declare-fun m!91535 () Bool)

(assert (=> d!22557 m!91535))

(declare-fun m!91537 () Bool)

(assert (=> d!22557 m!91537))

(declare-fun m!91539 () Bool)

(assert (=> b!86402 m!91539))

(declare-fun m!91541 () Bool)

(assert (=> b!86403 m!91541))

(assert (=> b!86028 d!22557))

(declare-fun d!22559 () Bool)

(assert (=> d!22559 (= (apply!82 (+!110 lt!40872 (tuple2!2199 lt!40871 (minValue!2230 newMap!16))) lt!40870) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40872 (tuple2!2199 lt!40871 (minValue!2230 newMap!16)))) lt!40870)))))

(declare-fun bs!3661 () Bool)

(assert (= bs!3661 d!22559))

(declare-fun m!91543 () Bool)

(assert (=> bs!3661 m!91543))

(assert (=> bs!3661 m!91543))

(declare-fun m!91545 () Bool)

(assert (=> bs!3661 m!91545))

(assert (=> b!86028 d!22559))

(declare-fun d!22561 () Bool)

(declare-fun e!56306 () Bool)

(assert (=> d!22561 e!56306))

(declare-fun res!44447 () Bool)

(assert (=> d!22561 (=> (not res!44447) (not e!56306))))

(declare-fun lt!41084 () ListLongMap!1461)

(assert (=> d!22561 (= res!44447 (contains!753 lt!41084 (_1!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))))))

(declare-fun lt!41083 () List!1519)

(assert (=> d!22561 (= lt!41084 (ListLongMap!1462 lt!41083))))

(declare-fun lt!41085 () Unit!2517)

(declare-fun lt!41082 () Unit!2517)

(assert (=> d!22561 (= lt!41085 lt!41082)))

(assert (=> d!22561 (= (getValueByKey!140 lt!41083 (_1!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22561 (= lt!41082 (lemmaContainsTupThenGetReturnValue!57 lt!41083 (_1!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22561 (= lt!41083 (insertStrictlySorted!60 (toList!746 lt!40864) (_1!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))) (_2!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))))))

(assert (=> d!22561 (= (+!110 lt!40864 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))) lt!41084)))

(declare-fun b!86404 () Bool)

(declare-fun res!44448 () Bool)

(assert (=> b!86404 (=> (not res!44448) (not e!56306))))

(assert (=> b!86404 (= res!44448 (= (getValueByKey!140 (toList!746 lt!41084) (_1!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))))))))

(declare-fun b!86405 () Bool)

(assert (=> b!86405 (= e!56306 (contains!754 (toList!746 lt!41084) (tuple2!2199 lt!40854 (zeroValue!2230 newMap!16))))))

(assert (= (and d!22561 res!44447) b!86404))

(assert (= (and b!86404 res!44448) b!86405))

(declare-fun m!91547 () Bool)

(assert (=> d!22561 m!91547))

(declare-fun m!91549 () Bool)

(assert (=> d!22561 m!91549))

(declare-fun m!91551 () Bool)

(assert (=> d!22561 m!91551))

(declare-fun m!91553 () Bool)

(assert (=> d!22561 m!91553))

(declare-fun m!91555 () Bool)

(assert (=> b!86404 m!91555))

(declare-fun m!91557 () Bool)

(assert (=> b!86405 m!91557))

(assert (=> b!86028 d!22561))

(declare-fun d!22563 () Bool)

(declare-fun e!56308 () Bool)

(assert (=> d!22563 e!56308))

(declare-fun res!44449 () Bool)

(assert (=> d!22563 (=> res!44449 e!56308)))

(declare-fun lt!41086 () Bool)

(assert (=> d!22563 (= res!44449 (not lt!41086))))

(declare-fun lt!41087 () Bool)

(assert (=> d!22563 (= lt!41086 lt!41087)))

(declare-fun lt!41089 () Unit!2517)

(declare-fun e!56307 () Unit!2517)

(assert (=> d!22563 (= lt!41089 e!56307)))

(declare-fun c!14102 () Bool)

(assert (=> d!22563 (= c!14102 lt!41087)))

(assert (=> d!22563 (= lt!41087 (containsKey!144 (toList!746 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))) lt!40867))))

(assert (=> d!22563 (= (contains!753 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16))) lt!40867) lt!41086)))

(declare-fun b!86406 () Bool)

(declare-fun lt!41088 () Unit!2517)

(assert (=> b!86406 (= e!56307 lt!41088)))

(assert (=> b!86406 (= lt!41088 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))) lt!40867))))

(assert (=> b!86406 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))) lt!40867))))

(declare-fun b!86407 () Bool)

(declare-fun Unit!2553 () Unit!2517)

(assert (=> b!86407 (= e!56307 Unit!2553)))

(declare-fun b!86408 () Bool)

(assert (=> b!86408 (= e!56308 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40860 (tuple2!2199 lt!40869 (zeroValue!2230 newMap!16)))) lt!40867)))))

(assert (= (and d!22563 c!14102) b!86406))

(assert (= (and d!22563 (not c!14102)) b!86407))

(assert (= (and d!22563 (not res!44449)) b!86408))

(declare-fun m!91559 () Bool)

(assert (=> d!22563 m!91559))

(declare-fun m!91561 () Bool)

(assert (=> b!86406 m!91561))

(declare-fun m!91563 () Bool)

(assert (=> b!86406 m!91563))

(assert (=> b!86406 m!91563))

(declare-fun m!91565 () Bool)

(assert (=> b!86406 m!91565))

(assert (=> b!86408 m!91563))

(assert (=> b!86408 m!91563))

(assert (=> b!86408 m!91565))

(assert (=> b!86028 d!22563))

(declare-fun d!22565 () Bool)

(assert (=> d!22565 (= (apply!82 lt!40872 lt!40870) (get!1198 (getValueByKey!140 (toList!746 lt!40872) lt!40870)))))

(declare-fun bs!3662 () Bool)

(assert (= bs!3662 d!22565))

(declare-fun m!91567 () Bool)

(assert (=> bs!3662 m!91567))

(assert (=> bs!3662 m!91567))

(declare-fun m!91569 () Bool)

(assert (=> bs!3662 m!91569))

(assert (=> b!86028 d!22565))

(declare-fun d!22567 () Bool)

(assert (=> d!22567 (isDefined!93 (getValueByKey!140 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!41090 () Unit!2517)

(assert (=> d!22567 (= lt!41090 (choose!504 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!56309 () Bool)

(assert (=> d!22567 e!56309))

(declare-fun res!44450 () Bool)

(assert (=> d!22567 (=> (not res!44450) (not e!56309))))

(assert (=> d!22567 (= res!44450 (isStrictlySorted!298 (toList!746 call!8134)))))

(assert (=> d!22567 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!41090)))

(declare-fun b!86409 () Bool)

(assert (=> b!86409 (= e!56309 (containsKey!144 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22567 res!44450) b!86409))

(assert (=> d!22567 m!89857))

(assert (=> d!22567 m!90453))

(assert (=> d!22567 m!90453))

(assert (=> d!22567 m!90455))

(assert (=> d!22567 m!89857))

(declare-fun m!91571 () Bool)

(assert (=> d!22567 m!91571))

(declare-fun m!91573 () Bool)

(assert (=> d!22567 m!91573))

(assert (=> b!86409 m!89857))

(assert (=> b!86409 m!90449))

(assert (=> b!85838 d!22567))

(declare-fun d!22569 () Bool)

(assert (=> d!22569 (= (isDefined!93 (getValueByKey!140 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) (not (isEmpty!337 (getValueByKey!140 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun bs!3663 () Bool)

(assert (= bs!3663 d!22569))

(assert (=> bs!3663 m!90453))

(declare-fun m!91575 () Bool)

(assert (=> bs!3663 m!91575))

(assert (=> b!85838 d!22569))

(declare-fun b!86410 () Bool)

(declare-fun e!56310 () Option!146)

(assert (=> b!86410 (= e!56310 (Some!145 (_2!1110 (h!2106 (toList!746 call!8134)))))))

(declare-fun c!14103 () Bool)

(declare-fun d!22571 () Bool)

(assert (=> d!22571 (= c!14103 (and ((_ is Cons!1515) (toList!746 call!8134)) (= (_1!1110 (h!2106 (toList!746 call!8134))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22571 (= (getValueByKey!140 (toList!746 call!8134) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56310)))

(declare-fun b!86413 () Bool)

(declare-fun e!56311 () Option!146)

(assert (=> b!86413 (= e!56311 None!144)))

(declare-fun b!86412 () Bool)

(assert (=> b!86412 (= e!56311 (getValueByKey!140 (t!5240 (toList!746 call!8134)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!86411 () Bool)

(assert (=> b!86411 (= e!56310 e!56311)))

(declare-fun c!14104 () Bool)

(assert (=> b!86411 (= c!14104 (and ((_ is Cons!1515) (toList!746 call!8134)) (not (= (_1!1110 (h!2106 (toList!746 call!8134))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(assert (= (and d!22571 c!14103) b!86410))

(assert (= (and d!22571 (not c!14103)) b!86411))

(assert (= (and b!86411 c!14104) b!86412))

(assert (= (and b!86411 (not c!14104)) b!86413))

(assert (=> b!86412 m!89857))

(declare-fun m!91577 () Bool)

(assert (=> b!86412 m!91577))

(assert (=> b!85838 d!22571))

(declare-fun d!22573 () Bool)

(assert (=> d!22573 (= (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86079 d!22573))

(declare-fun d!22575 () Bool)

(assert (=> d!22575 (= (get!1196 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2644 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85785 d!22575))

(assert (=> b!86016 d!22573))

(declare-fun d!22577 () Bool)

(declare-fun lt!41091 () Bool)

(assert (=> d!22577 (= lt!41091 (select (content!89 (toList!746 lt!40953)) (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56312 () Bool)

(assert (=> d!22577 (= lt!41091 e!56312)))

(declare-fun res!44451 () Bool)

(assert (=> d!22577 (=> (not res!44451) (not e!56312))))

(assert (=> d!22577 (= res!44451 ((_ is Cons!1515) (toList!746 lt!40953)))))

(assert (=> d!22577 (= (contains!754 (toList!746 lt!40953) (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41091)))

(declare-fun b!86414 () Bool)

(declare-fun e!56313 () Bool)

(assert (=> b!86414 (= e!56312 e!56313)))

(declare-fun res!44452 () Bool)

(assert (=> b!86414 (=> res!44452 e!56313)))

(assert (=> b!86414 (= res!44452 (= (h!2106 (toList!746 lt!40953)) (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86415 () Bool)

(assert (=> b!86415 (= e!56313 (contains!754 (t!5240 (toList!746 lt!40953)) (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22577 res!44451) b!86414))

(assert (= (and b!86414 (not res!44452)) b!86415))

(declare-fun m!91579 () Bool)

(assert (=> d!22577 m!91579))

(declare-fun m!91581 () Bool)

(assert (=> d!22577 m!91581))

(declare-fun m!91583 () Bool)

(assert (=> b!86415 m!91583))

(assert (=> b!86152 d!22577))

(declare-fun d!22579 () Bool)

(assert (=> d!22579 (isDefined!93 (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318)))))

(declare-fun lt!41092 () Unit!2517)

(assert (=> d!22579 (= lt!41092 (choose!504 (toList!746 lt!40604) (_1!1110 lt!40318)))))

(declare-fun e!56314 () Bool)

(assert (=> d!22579 e!56314))

(declare-fun res!44453 () Bool)

(assert (=> d!22579 (=> (not res!44453) (not e!56314))))

(assert (=> d!22579 (= res!44453 (isStrictlySorted!298 (toList!746 lt!40604)))))

(assert (=> d!22579 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40604) (_1!1110 lt!40318)) lt!41092)))

(declare-fun b!86416 () Bool)

(assert (=> b!86416 (= e!56314 (containsKey!144 (toList!746 lt!40604) (_1!1110 lt!40318)))))

(assert (= (and d!22579 res!44453) b!86416))

(assert (=> d!22579 m!90217))

(assert (=> d!22579 m!90217))

(assert (=> d!22579 m!91107))

(declare-fun m!91585 () Bool)

(assert (=> d!22579 m!91585))

(declare-fun m!91587 () Bool)

(assert (=> d!22579 m!91587))

(assert (=> b!86416 m!91103))

(assert (=> b!86196 d!22579))

(declare-fun d!22581 () Bool)

(assert (=> d!22581 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40604) (_1!1110 lt!40318)))))))

(declare-fun bs!3664 () Bool)

(assert (= bs!3664 d!22581))

(assert (=> bs!3664 m!90217))

(declare-fun m!91589 () Bool)

(assert (=> bs!3664 m!91589))

(assert (=> b!86196 d!22581))

(assert (=> b!86196 d!22323))

(assert (=> d!22269 d!22445))

(declare-fun d!22583 () Bool)

(declare-fun e!56316 () Bool)

(assert (=> d!22583 e!56316))

(declare-fun res!44454 () Bool)

(assert (=> d!22583 (=> res!44454 e!56316)))

(declare-fun lt!41093 () Bool)

(assert (=> d!22583 (= res!44454 (not lt!41093))))

(declare-fun lt!41094 () Bool)

(assert (=> d!22583 (= lt!41093 lt!41094)))

(declare-fun lt!41096 () Unit!2517)

(declare-fun e!56315 () Unit!2517)

(assert (=> d!22583 (= lt!41096 e!56315)))

(declare-fun c!14105 () Bool)

(assert (=> d!22583 (= c!14105 lt!41094)))

(assert (=> d!22583 (= lt!41094 (containsKey!144 (toList!746 lt!40441) lt!40439))))

(assert (=> d!22583 (= (contains!753 lt!40441 lt!40439) lt!41093)))

(declare-fun b!86417 () Bool)

(declare-fun lt!41095 () Unit!2517)

(assert (=> b!86417 (= e!56315 lt!41095)))

(assert (=> b!86417 (= lt!41095 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40441) lt!40439))))

(assert (=> b!86417 (isDefined!93 (getValueByKey!140 (toList!746 lt!40441) lt!40439))))

(declare-fun b!86418 () Bool)

(declare-fun Unit!2554 () Unit!2517)

(assert (=> b!86418 (= e!56315 Unit!2554)))

(declare-fun b!86419 () Bool)

(assert (=> b!86419 (= e!56316 (isDefined!93 (getValueByKey!140 (toList!746 lt!40441) lt!40439)))))

(assert (= (and d!22583 c!14105) b!86417))

(assert (= (and d!22583 (not c!14105)) b!86418))

(assert (= (and d!22583 (not res!44454)) b!86419))

(declare-fun m!91591 () Bool)

(assert (=> d!22583 m!91591))

(declare-fun m!91593 () Bool)

(assert (=> b!86417 m!91593))

(assert (=> b!86417 m!90997))

(assert (=> b!86417 m!90997))

(declare-fun m!91595 () Bool)

(assert (=> b!86417 m!91595))

(assert (=> b!86419 m!90997))

(assert (=> b!86419 m!90997))

(assert (=> b!86419 m!91595))

(assert (=> d!22387 d!22583))

(declare-fun d!22585 () Bool)

(assert (=> d!22585 (= (apply!82 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40439) (apply!82 lt!40441 lt!40439))))

(assert (=> d!22585 true))

(declare-fun _$34!842 () Unit!2517)

(assert (=> d!22585 (= (choose!508 lt!40441 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40439) _$34!842)))

(declare-fun bs!3665 () Bool)

(assert (= bs!3665 d!22585))

(assert (=> bs!3665 m!90005))

(assert (=> bs!3665 m!90005))

(assert (=> bs!3665 m!90007))

(assert (=> bs!3665 m!90023))

(assert (=> d!22387 d!22585))

(assert (=> d!22387 d!22365))

(assert (=> d!22387 d!22375))

(assert (=> d!22387 d!22391))

(declare-fun d!22587 () Bool)

(declare-fun res!44455 () Bool)

(declare-fun e!56317 () Bool)

(assert (=> d!22587 (=> res!44455 e!56317)))

(assert (=> d!22587 (= res!44455 (and ((_ is Cons!1515) lt!40563) (= (_1!1110 (h!2106 lt!40563)) (_1!1110 lt!40318))))))

(assert (=> d!22587 (= (containsKey!144 lt!40563 (_1!1110 lt!40318)) e!56317)))

(declare-fun b!86421 () Bool)

(declare-fun e!56318 () Bool)

(assert (=> b!86421 (= e!56317 e!56318)))

(declare-fun res!44456 () Bool)

(assert (=> b!86421 (=> (not res!44456) (not e!56318))))

(assert (=> b!86421 (= res!44456 (and (or (not ((_ is Cons!1515) lt!40563)) (bvsle (_1!1110 (h!2106 lt!40563)) (_1!1110 lt!40318))) ((_ is Cons!1515) lt!40563) (bvslt (_1!1110 (h!2106 lt!40563)) (_1!1110 lt!40318))))))

(declare-fun b!86422 () Bool)

(assert (=> b!86422 (= e!56318 (containsKey!144 (t!5240 lt!40563) (_1!1110 lt!40318)))))

(assert (= (and d!22587 (not res!44455)) b!86421))

(assert (= (and b!86421 res!44456) b!86422))

(declare-fun m!91597 () Bool)

(assert (=> b!86422 m!91597))

(assert (=> b!85724 d!22587))

(declare-fun d!22589 () Bool)

(assert (=> d!22589 (= (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85976 d!22589))

(declare-fun d!22591 () Bool)

(declare-fun res!44457 () Bool)

(declare-fun e!56319 () Bool)

(assert (=> d!22591 (=> res!44457 e!56319)))

(assert (=> d!22591 (= res!44457 (and ((_ is Cons!1515) lt!40936) (= (_1!1110 (h!2106 lt!40936)) (_1!1110 lt!40322))))))

(assert (=> d!22591 (= (containsKey!144 lt!40936 (_1!1110 lt!40322)) e!56319)))

(declare-fun b!86423 () Bool)

(declare-fun e!56320 () Bool)

(assert (=> b!86423 (= e!56319 e!56320)))

(declare-fun res!44458 () Bool)

(assert (=> b!86423 (=> (not res!44458) (not e!56320))))

(assert (=> b!86423 (= res!44458 (and (or (not ((_ is Cons!1515) lt!40936)) (bvsle (_1!1110 (h!2106 lt!40936)) (_1!1110 lt!40322))) ((_ is Cons!1515) lt!40936) (bvslt (_1!1110 (h!2106 lt!40936)) (_1!1110 lt!40322))))))

(declare-fun b!86424 () Bool)

(assert (=> b!86424 (= e!56320 (containsKey!144 (t!5240 lt!40936) (_1!1110 lt!40322)))))

(assert (= (and d!22591 (not res!44457)) b!86423))

(assert (= (and b!86423 res!44458) b!86424))

(declare-fun m!91599 () Bool)

(assert (=> b!86424 m!91599))

(assert (=> b!86129 d!22591))

(declare-fun b!86425 () Bool)

(declare-fun e!56323 () ListLongMap!1461)

(declare-fun call!8239 () ListLongMap!1461)

(assert (=> b!86425 (= e!56323 call!8239)))

(declare-fun b!86426 () Bool)

(declare-fun e!56321 () Bool)

(assert (=> b!86426 (= e!56321 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!86426 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!86427 () Bool)

(declare-fun lt!41101 () Unit!2517)

(declare-fun lt!41102 () Unit!2517)

(assert (=> b!86427 (= lt!41101 lt!41102)))

(declare-fun lt!41099 () (_ BitVec 64))

(declare-fun lt!41098 () (_ BitVec 64))

(declare-fun lt!41103 () V!3027)

(declare-fun lt!41100 () ListLongMap!1461)

(assert (=> b!86427 (not (contains!753 (+!110 lt!41100 (tuple2!2199 lt!41099 lt!41103)) lt!41098))))

(assert (=> b!86427 (= lt!41102 (addStillNotContains!31 lt!41100 lt!41099 lt!41103 lt!41098))))

(assert (=> b!86427 (= lt!41098 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86427 (= lt!41103 (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86427 (= lt!41099 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!86427 (= lt!41100 call!8239)))

(assert (=> b!86427 (= e!56323 (+!110 call!8239 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!22593 () Bool)

(declare-fun e!56322 () Bool)

(assert (=> d!22593 e!56322))

(declare-fun res!44459 () Bool)

(assert (=> d!22593 (=> (not res!44459) (not e!56322))))

(declare-fun lt!41097 () ListLongMap!1461)

(assert (=> d!22593 (= res!44459 (not (contains!753 lt!41097 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56324 () ListLongMap!1461)

(assert (=> d!22593 (= lt!41097 e!56324)))

(declare-fun c!14108 () Bool)

(assert (=> d!22593 (= c!14108 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22593 (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992))))))

(assert (=> d!22593 (= (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))) lt!41097)))

(declare-fun b!86428 () Bool)

(assert (=> b!86428 (= e!56324 (ListLongMap!1462 Nil!1516))))

(declare-fun b!86429 () Bool)

(declare-fun e!56326 () Bool)

(assert (=> b!86429 (= e!56326 (= lt!41097 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun bm!8236 () Bool)

(assert (=> bm!8236 (= call!8239 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (_values!2321 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992))) (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) (minValue!2230 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!86430 () Bool)

(assert (=> b!86430 (= e!56324 e!56323)))

(declare-fun c!14109 () Bool)

(assert (=> b!86430 (= c!14109 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!86431 () Bool)

(assert (=> b!86431 (= e!56326 (isEmpty!335 lt!41097))))

(declare-fun b!86432 () Bool)

(declare-fun e!56327 () Bool)

(declare-fun e!56325 () Bool)

(assert (=> b!86432 (= e!56327 e!56325)))

(assert (=> b!86432 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun res!44462 () Bool)

(assert (=> b!86432 (= res!44462 (contains!753 lt!41097 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!86432 (=> (not res!44462) (not e!56325))))

(declare-fun b!86433 () Bool)

(assert (=> b!86433 (= e!56327 e!56326)))

(declare-fun c!14106 () Bool)

(assert (=> b!86433 (= c!14106 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86434 () Bool)

(assert (=> b!86434 (= e!56322 e!56327)))

(declare-fun c!14107 () Bool)

(assert (=> b!86434 (= c!14107 e!56321)))

(declare-fun res!44460 () Bool)

(assert (=> b!86434 (=> (not res!44460) (not e!56321))))

(assert (=> b!86434 (= res!44460 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86435 () Bool)

(declare-fun res!44461 () Bool)

(assert (=> b!86435 (=> (not res!44461) (not e!56322))))

(assert (=> b!86435 (= res!44461 (not (contains!753 lt!41097 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86436 () Bool)

(assert (=> b!86436 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!86436 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> b!86436 (= e!56325 (= (apply!82 lt!41097 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22593 c!14108) b!86428))

(assert (= (and d!22593 (not c!14108)) b!86430))

(assert (= (and b!86430 c!14109) b!86427))

(assert (= (and b!86430 (not c!14109)) b!86425))

(assert (= (or b!86427 b!86425) bm!8236))

(assert (= (and d!22593 res!44459) b!86435))

(assert (= (and b!86435 res!44461) b!86434))

(assert (= (and b!86434 res!44460) b!86426))

(assert (= (and b!86434 c!14107) b!86432))

(assert (= (and b!86434 (not c!14107)) b!86433))

(assert (= (and b!86432 res!44462) b!86436))

(assert (= (and b!86433 c!14106) b!86429))

(assert (= (and b!86433 (not c!14106)) b!86431))

(declare-fun b_lambda!3843 () Bool)

(assert (=> (not b_lambda!3843) (not b!86427)))

(assert (=> b!86427 t!5237))

(declare-fun b_and!5235 () Bool)

(assert (= b_and!5231 (and (=> t!5237 result!2913) b_and!5235)))

(assert (=> b!86427 t!5239))

(declare-fun b_and!5237 () Bool)

(assert (= b_and!5233 (and (=> t!5239 result!2917) b_and!5237)))

(declare-fun b_lambda!3845 () Bool)

(assert (=> (not b_lambda!3845) (not b!86436)))

(assert (=> b!86436 t!5237))

(declare-fun b_and!5239 () Bool)

(assert (= b_and!5235 (and (=> t!5237 result!2913) b_and!5239)))

(assert (=> b!86436 t!5239))

(declare-fun b_and!5241 () Bool)

(assert (= b_and!5237 (and (=> t!5239 result!2917) b_and!5241)))

(declare-fun m!91601 () Bool)

(assert (=> b!86426 m!91601))

(assert (=> b!86426 m!91601))

(declare-fun m!91603 () Bool)

(assert (=> b!86426 m!91603))

(assert (=> b!86432 m!91601))

(assert (=> b!86432 m!91601))

(declare-fun m!91605 () Bool)

(assert (=> b!86432 m!91605))

(declare-fun m!91607 () Bool)

(assert (=> bm!8236 m!91607))

(declare-fun m!91609 () Bool)

(assert (=> d!22593 m!91609))

(assert (=> d!22593 m!89899))

(assert (=> b!86430 m!91601))

(assert (=> b!86430 m!91601))

(assert (=> b!86430 m!91603))

(declare-fun m!91611 () Bool)

(assert (=> b!86435 m!91611))

(assert (=> b!86429 m!91607))

(declare-fun m!91613 () Bool)

(assert (=> b!86431 m!91613))

(declare-fun m!91615 () Bool)

(assert (=> b!86427 m!91615))

(assert (=> b!86427 m!89861))

(declare-fun m!91617 () Bool)

(assert (=> b!86427 m!91617))

(declare-fun m!91619 () Bool)

(assert (=> b!86427 m!91619))

(assert (=> b!86427 m!91615))

(assert (=> b!86427 m!91619))

(declare-fun m!91621 () Bool)

(assert (=> b!86427 m!91621))

(declare-fun m!91623 () Bool)

(assert (=> b!86427 m!91623))

(assert (=> b!86427 m!89861))

(assert (=> b!86427 m!91601))

(declare-fun m!91625 () Bool)

(assert (=> b!86427 m!91625))

(assert (=> b!86436 m!91615))

(assert (=> b!86436 m!89861))

(assert (=> b!86436 m!91617))

(assert (=> b!86436 m!91615))

(assert (=> b!86436 m!91601))

(declare-fun m!91627 () Bool)

(assert (=> b!86436 m!91627))

(assert (=> b!86436 m!89861))

(assert (=> b!86436 m!91601))

(assert (=> b!85864 d!22593))

(declare-fun b!86437 () Bool)

(declare-fun e!56328 () Option!146)

(assert (=> b!86437 (= e!56328 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40567)))))))

(declare-fun d!22595 () Bool)

(declare-fun c!14110 () Bool)

(assert (=> d!22595 (= c!14110 (and ((_ is Cons!1515) (t!5240 lt!40567)) (= (_1!1110 (h!2106 (t!5240 lt!40567))) (_1!1110 lt!40324))))))

(assert (=> d!22595 (= (getValueByKey!140 (t!5240 lt!40567) (_1!1110 lt!40324)) e!56328)))

(declare-fun b!86440 () Bool)

(declare-fun e!56329 () Option!146)

(assert (=> b!86440 (= e!56329 None!144)))

(declare-fun b!86439 () Bool)

(assert (=> b!86439 (= e!56329 (getValueByKey!140 (t!5240 (t!5240 lt!40567)) (_1!1110 lt!40324)))))

(declare-fun b!86438 () Bool)

(assert (=> b!86438 (= e!56328 e!56329)))

(declare-fun c!14111 () Bool)

(assert (=> b!86438 (= c!14111 (and ((_ is Cons!1515) (t!5240 lt!40567)) (not (= (_1!1110 (h!2106 (t!5240 lt!40567))) (_1!1110 lt!40324)))))))

(assert (= (and d!22595 c!14110) b!86437))

(assert (= (and d!22595 (not c!14110)) b!86438))

(assert (= (and b!86438 c!14111) b!86439))

(assert (= (and b!86438 (not c!14111)) b!86440))

(declare-fun m!91629 () Bool)

(assert (=> b!86439 m!91629))

(assert (=> b!85798 d!22595))

(declare-fun b!86441 () Bool)

(declare-fun e!56330 () Option!146)

(assert (=> b!86441 (= e!56330 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40596))))))))

(declare-fun d!22597 () Bool)

(declare-fun c!14112 () Bool)

(assert (=> d!22597 (= c!14112 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40596))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40596)))) (_1!1110 lt!40322))))))

(assert (=> d!22597 (= (getValueByKey!140 (t!5240 (toList!746 lt!40596)) (_1!1110 lt!40322)) e!56330)))

(declare-fun b!86444 () Bool)

(declare-fun e!56331 () Option!146)

(assert (=> b!86444 (= e!56331 None!144)))

(declare-fun b!86443 () Bool)

(assert (=> b!86443 (= e!56331 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40596))) (_1!1110 lt!40322)))))

(declare-fun b!86442 () Bool)

(assert (=> b!86442 (= e!56330 e!56331)))

(declare-fun c!14113 () Bool)

(assert (=> b!86442 (= c!14113 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40596))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40596)))) (_1!1110 lt!40322)))))))

(assert (= (and d!22597 c!14112) b!86441))

(assert (= (and d!22597 (not c!14112)) b!86442))

(assert (= (and b!86442 c!14113) b!86443))

(assert (= (and b!86442 (not c!14113)) b!86444))

(declare-fun m!91631 () Bool)

(assert (=> b!86443 m!91631))

(assert (=> b!86238 d!22597))

(declare-fun d!22599 () Bool)

(declare-fun lt!41104 () Bool)

(assert (=> d!22599 (= lt!41104 (select (content!89 lt!40555) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun e!56332 () Bool)

(assert (=> d!22599 (= lt!41104 e!56332)))

(declare-fun res!44463 () Bool)

(assert (=> d!22599 (=> (not res!44463) (not e!56332))))

(assert (=> d!22599 (= res!44463 ((_ is Cons!1515) lt!40555))))

(assert (=> d!22599 (= (contains!754 lt!40555 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))) lt!41104)))

(declare-fun b!86445 () Bool)

(declare-fun e!56333 () Bool)

(assert (=> b!86445 (= e!56332 e!56333)))

(declare-fun res!44464 () Bool)

(assert (=> b!86445 (=> res!44464 e!56333)))

(assert (=> b!86445 (= res!44464 (= (h!2106 lt!40555) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun b!86446 () Bool)

(assert (=> b!86446 (= e!56333 (contains!754 (t!5240 lt!40555) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22599 res!44463) b!86445))

(assert (= (and b!86445 (not res!44464)) b!86446))

(declare-fun m!91633 () Bool)

(assert (=> d!22599 m!91633))

(declare-fun m!91635 () Bool)

(assert (=> d!22599 m!91635))

(declare-fun m!91637 () Bool)

(assert (=> b!86446 m!91637))

(assert (=> b!86248 d!22599))

(declare-fun d!22601 () Bool)

(assert (=> d!22601 (= (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444)) (not (isEmpty!337 (getValueByKey!140 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))))

(declare-fun bs!3666 () Bool)

(assert (= bs!3666 d!22601))

(assert (=> bs!3666 m!91061))

(declare-fun m!91639 () Bool)

(assert (=> bs!3666 m!91639))

(assert (=> b!86155 d!22601))

(declare-fun b!86447 () Bool)

(declare-fun e!56334 () Option!146)

(assert (=> b!86447 (= e!56334 (Some!145 (_2!1110 (h!2106 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(declare-fun c!14114 () Bool)

(declare-fun d!22603 () Bool)

(assert (=> d!22603 (= c!14114 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40444)))))

(assert (=> d!22603 (= (getValueByKey!140 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444) e!56334)))

(declare-fun b!86450 () Bool)

(declare-fun e!56335 () Option!146)

(assert (=> b!86450 (= e!56335 None!144)))

(declare-fun b!86449 () Bool)

(assert (=> b!86449 (= e!56335 (getValueByKey!140 (t!5240 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!40444))))

(declare-fun b!86448 () Bool)

(assert (=> b!86448 (= e!56334 e!56335)))

(declare-fun c!14115 () Bool)

(assert (=> b!86448 (= c!14115 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (not (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40444))))))

(assert (= (and d!22603 c!14114) b!86447))

(assert (= (and d!22603 (not c!14114)) b!86448))

(assert (= (and b!86448 c!14115) b!86449))

(assert (= (and b!86448 (not c!14115)) b!86450))

(declare-fun m!91641 () Bool)

(assert (=> b!86449 m!91641))

(assert (=> b!86155 d!22603))

(declare-fun d!22605 () Bool)

(assert (=> d!22605 (= (apply!82 lt!40918 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (getValueByKey!140 (toList!746 lt!40918) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3667 () Bool)

(assert (= bs!3667 d!22605))

(assert (=> bs!3667 m!90363))

(declare-fun m!91643 () Bool)

(assert (=> bs!3667 m!91643))

(assert (=> bs!3667 m!91643))

(declare-fun m!91645 () Bool)

(assert (=> bs!3667 m!91645))

(assert (=> b!86086 d!22605))

(declare-fun c!14116 () Bool)

(declare-fun d!22607 () Bool)

(assert (=> d!22607 (= c!14116 ((_ is ValueCellFull!924) (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!56336 () V!3027)

(assert (=> d!22607 (= (get!1195 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56336)))

(declare-fun b!86451 () Bool)

(assert (=> b!86451 (= e!56336 (get!1196 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86452 () Bool)

(assert (=> b!86452 (= e!56336 (get!1197 (select (arr!1920 (ite (or c!13892 c!13882) (_values!2321 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22607 c!14116) b!86451))

(assert (= (and d!22607 (not c!14116)) b!86452))

(assert (=> b!86451 m!90887))

(assert (=> b!86451 m!90373))

(declare-fun m!91647 () Bool)

(assert (=> b!86451 m!91647))

(assert (=> b!86452 m!90887))

(assert (=> b!86452 m!90373))

(declare-fun m!91649 () Bool)

(assert (=> b!86452 m!91649))

(assert (=> b!86086 d!22607))

(assert (=> d!22417 d!22415))

(assert (=> d!22417 d!22413))

(assert (=> d!22417 d!22419))

(assert (=> d!22417 d!22411))

(declare-fun d!22609 () Bool)

(assert (=> d!22609 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3668 () Bool)

(assert (= bs!3668 d!22609))

(assert (=> bs!3668 m!91135))

(declare-fun m!91651 () Bool)

(assert (=> bs!3668 m!91651))

(assert (=> b!86217 d!22609))

(assert (=> b!86217 d!22497))

(declare-fun d!22611 () Bool)

(assert (=> d!22611 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40734 #b00000000000000000000000000000000)))

(declare-fun lt!41107 () Unit!2517)

(declare-fun choose!13 (array!4029 (_ BitVec 64) (_ BitVec 32)) Unit!2517)

(assert (=> d!22611 (= lt!41107 (choose!13 (_keys!4010 newMap!16) lt!40734 #b00000000000000000000000000000000))))

(assert (=> d!22611 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!22611 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 newMap!16) lt!40734 #b00000000000000000000000000000000) lt!41107)))

(declare-fun bs!3669 () Bool)

(assert (= bs!3669 d!22611))

(assert (=> bs!3669 m!90627))

(declare-fun m!91653 () Bool)

(assert (=> bs!3669 m!91653))

(assert (=> b!85918 d!22611))

(declare-fun d!22613 () Bool)

(declare-fun res!44465 () Bool)

(declare-fun e!56337 () Bool)

(assert (=> d!22613 (=> res!44465 e!56337)))

(assert (=> d!22613 (= res!44465 (= (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) lt!40734))))

(assert (=> d!22613 (= (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40734 #b00000000000000000000000000000000) e!56337)))

(declare-fun b!86453 () Bool)

(declare-fun e!56338 () Bool)

(assert (=> b!86453 (= e!56337 e!56338)))

(declare-fun res!44466 () Bool)

(assert (=> b!86453 (=> (not res!44466) (not e!56338))))

(assert (=> b!86453 (= res!44466 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86454 () Bool)

(assert (=> b!86454 (= e!56338 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!40734 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22613 (not res!44465)) b!86453))

(assert (= (and b!86453 res!44466) b!86454))

(assert (=> d!22613 m!90363))

(declare-fun m!91655 () Bool)

(assert (=> b!86454 m!91655))

(assert (=> b!85918 d!22613))

(declare-fun b!86455 () Bool)

(declare-fun e!56339 () SeekEntryResult!243)

(assert (=> b!86455 (= e!56339 Undefined!243)))

(declare-fun b!86456 () Bool)

(declare-fun e!56340 () SeekEntryResult!243)

(declare-fun lt!41110 () SeekEntryResult!243)

(assert (=> b!86456 (= e!56340 (seekKeyOrZeroReturnVacant!0 (x!11996 lt!41110) (index!3111 lt!41110) (index!3111 lt!41110) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86457 () Bool)

(declare-fun c!14119 () Bool)

(declare-fun lt!41109 () (_ BitVec 64))

(assert (=> b!86457 (= c!14119 (= lt!41109 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56341 () SeekEntryResult!243)

(assert (=> b!86457 (= e!56341 e!56340)))

(declare-fun b!86458 () Bool)

(assert (=> b!86458 (= e!56340 (MissingZero!243 (index!3111 lt!41110)))))

(declare-fun d!22615 () Bool)

(declare-fun lt!41108 () SeekEntryResult!243)

(assert (=> d!22615 (and (or ((_ is Undefined!243) lt!41108) (not ((_ is Found!243) lt!41108)) (and (bvsge (index!3110 lt!41108) #b00000000000000000000000000000000) (bvslt (index!3110 lt!41108) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!41108) ((_ is Found!243) lt!41108) (not ((_ is MissingZero!243) lt!41108)) (and (bvsge (index!3109 lt!41108) #b00000000000000000000000000000000) (bvslt (index!3109 lt!41108) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!41108) ((_ is Found!243) lt!41108) ((_ is MissingZero!243) lt!41108) (not ((_ is MissingVacant!243) lt!41108)) (and (bvsge (index!3112 lt!41108) #b00000000000000000000000000000000) (bvslt (index!3112 lt!41108) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!41108) (ite ((_ is Found!243) lt!41108) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!41108)) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!243) lt!41108) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3109 lt!41108)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!243) lt!41108) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!41108)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22615 (= lt!41108 e!56339)))

(declare-fun c!14118 () Bool)

(assert (=> d!22615 (= c!14118 (and ((_ is Intermediate!243) lt!41110) (undefined!1055 lt!41110)))))

(assert (=> d!22615 (= lt!41110 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (mask!6366 newMap!16)) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!22615 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22615 (= (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!41108)))

(declare-fun b!86459 () Bool)

(assert (=> b!86459 (= e!56339 e!56341)))

(assert (=> b!86459 (= lt!41109 (select (arr!1919 (_keys!4010 newMap!16)) (index!3111 lt!41110)))))

(declare-fun c!14117 () Bool)

(assert (=> b!86459 (= c!14117 (= lt!41109 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86460 () Bool)

(assert (=> b!86460 (= e!56341 (Found!243 (index!3111 lt!41110)))))

(assert (= (and d!22615 c!14118) b!86455))

(assert (= (and d!22615 (not c!14118)) b!86459))

(assert (= (and b!86459 c!14117) b!86460))

(assert (= (and b!86459 (not c!14117)) b!86457))

(assert (= (and b!86457 c!14119) b!86458))

(assert (= (and b!86457 (not c!14119)) b!86456))

(assert (=> b!86456 m!90363))

(declare-fun m!91657 () Bool)

(assert (=> b!86456 m!91657))

(declare-fun m!91659 () Bool)

(assert (=> d!22615 m!91659))

(assert (=> d!22615 m!90363))

(declare-fun m!91661 () Bool)

(assert (=> d!22615 m!91661))

(assert (=> d!22615 m!90385))

(declare-fun m!91663 () Bool)

(assert (=> d!22615 m!91663))

(declare-fun m!91665 () Bool)

(assert (=> d!22615 m!91665))

(declare-fun m!91667 () Bool)

(assert (=> d!22615 m!91667))

(assert (=> d!22615 m!90363))

(assert (=> d!22615 m!91659))

(declare-fun m!91669 () Bool)

(assert (=> b!86459 m!91669))

(assert (=> b!85918 d!22615))

(declare-fun d!22617 () Bool)

(declare-fun res!44467 () Bool)

(declare-fun e!56342 () Bool)

(assert (=> d!22617 (=> res!44467 e!56342)))

(assert (=> d!22617 (= res!44467 (or ((_ is Nil!1516) lt!40936) ((_ is Nil!1516) (t!5240 lt!40936))))))

(assert (=> d!22617 (= (isStrictlySorted!298 lt!40936) e!56342)))

(declare-fun b!86461 () Bool)

(declare-fun e!56343 () Bool)

(assert (=> b!86461 (= e!56342 e!56343)))

(declare-fun res!44468 () Bool)

(assert (=> b!86461 (=> (not res!44468) (not e!56343))))

(assert (=> b!86461 (= res!44468 (bvslt (_1!1110 (h!2106 lt!40936)) (_1!1110 (h!2106 (t!5240 lt!40936)))))))

(declare-fun b!86462 () Bool)

(assert (=> b!86462 (= e!56343 (isStrictlySorted!298 (t!5240 lt!40936)))))

(assert (= (and d!22617 (not res!44467)) b!86461))

(assert (= (and b!86461 res!44468) b!86462))

(declare-fun m!91671 () Bool)

(assert (=> b!86462 m!91671))

(assert (=> d!22361 d!22617))

(declare-fun d!22619 () Bool)

(declare-fun res!44469 () Bool)

(declare-fun e!56344 () Bool)

(assert (=> d!22619 (=> res!44469 e!56344)))

(assert (=> d!22619 (= res!44469 (or ((_ is Nil!1516) (toList!746 lt!40319)) ((_ is Nil!1516) (t!5240 (toList!746 lt!40319)))))))

(assert (=> d!22619 (= (isStrictlySorted!298 (toList!746 lt!40319)) e!56344)))

(declare-fun b!86463 () Bool)

(declare-fun e!56345 () Bool)

(assert (=> b!86463 (= e!56344 e!56345)))

(declare-fun res!44470 () Bool)

(assert (=> b!86463 (=> (not res!44470) (not e!56345))))

(assert (=> b!86463 (= res!44470 (bvslt (_1!1110 (h!2106 (toList!746 lt!40319))) (_1!1110 (h!2106 (t!5240 (toList!746 lt!40319))))))))

(declare-fun b!86464 () Bool)

(assert (=> b!86464 (= e!56345 (isStrictlySorted!298 (t!5240 (toList!746 lt!40319))))))

(assert (= (and d!22619 (not res!44469)) b!86463))

(assert (= (and b!86463 res!44470) b!86464))

(declare-fun m!91673 () Bool)

(assert (=> b!86464 m!91673))

(assert (=> d!22361 d!22619))

(declare-fun b!86465 () Bool)

(declare-fun e!56346 () Option!146)

(assert (=> b!86465 (= e!56346 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40685)))))))

(declare-fun c!14120 () Bool)

(declare-fun d!22621 () Bool)

(assert (=> d!22621 (= c!14120 (and ((_ is Cons!1515) (toList!746 lt!40685)) (= (_1!1110 (h!2106 (toList!746 lt!40685))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22621 (= (getValueByKey!140 (toList!746 lt!40685) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56346)))

(declare-fun b!86468 () Bool)

(declare-fun e!56347 () Option!146)

(assert (=> b!86468 (= e!56347 None!144)))

(declare-fun b!86467 () Bool)

(assert (=> b!86467 (= e!56347 (getValueByKey!140 (t!5240 (toList!746 lt!40685)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86466 () Bool)

(assert (=> b!86466 (= e!56346 e!56347)))

(declare-fun c!14121 () Bool)

(assert (=> b!86466 (= c!14121 (and ((_ is Cons!1515) (toList!746 lt!40685)) (not (= (_1!1110 (h!2106 (toList!746 lt!40685))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!22621 c!14120) b!86465))

(assert (= (and d!22621 (not c!14120)) b!86466))

(assert (= (and b!86466 c!14121) b!86467))

(assert (= (and b!86466 (not c!14121)) b!86468))

(declare-fun m!91675 () Bool)

(assert (=> b!86467 m!91675))

(assert (=> b!85854 d!22621))

(declare-fun d!22623 () Bool)

(declare-fun res!44471 () Bool)

(declare-fun e!56348 () Bool)

(assert (=> d!22623 (=> res!44471 e!56348)))

(assert (=> d!22623 (= res!44471 (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22623 (= (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!56348)))

(declare-fun b!86469 () Bool)

(declare-fun e!56349 () Bool)

(assert (=> b!86469 (= e!56348 e!56349)))

(declare-fun res!44472 () Bool)

(assert (=> b!86469 (=> (not res!44472) (not e!56349))))

(assert (=> b!86469 (= res!44472 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86470 () Bool)

(assert (=> b!86470 (= e!56349 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22623 (not res!44471)) b!86469))

(assert (= (and b!86469 res!44472) b!86470))

(assert (=> d!22623 m!91601))

(assert (=> b!86470 m!89857))

(declare-fun m!91677 () Bool)

(assert (=> b!86470 m!91677))

(assert (=> b!85782 d!22623))

(declare-fun call!8240 () (_ BitVec 32))

(declare-fun bm!8237 () Bool)

(assert (=> bm!8237 (= call!8240 (arrayCountValidKeys!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86471 () Bool)

(declare-fun e!56351 () (_ BitVec 32))

(assert (=> b!86471 (= e!56351 call!8240)))

(declare-fun b!86472 () Bool)

(assert (=> b!86472 (= e!56351 (bvadd #b00000000000000000000000000000001 call!8240))))

(declare-fun b!86474 () Bool)

(declare-fun e!56350 () (_ BitVec 32))

(assert (=> b!86474 (= e!56350 #b00000000000000000000000000000000)))

(declare-fun b!86473 () Bool)

(assert (=> b!86473 (= e!56350 e!56351)))

(declare-fun c!14123 () Bool)

(assert (=> b!86473 (= c!14123 (validKeyInArray!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun lt!41111 () (_ BitVec 32))

(declare-fun d!22625 () Bool)

(assert (=> d!22625 (and (bvsge lt!41111 #b00000000000000000000000000000000) (bvsle lt!41111 (bvsub (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!22625 (= lt!41111 e!56350)))

(declare-fun c!14122 () Bool)

(assert (=> d!22625 (= c!14122 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22625 (and (bvsle #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2163 (_keys!4010 newMap!16)) (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(assert (=> d!22625 (= (arrayCountValidKeys!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) lt!41111)))

(assert (= (and d!22625 c!14122) b!86474))

(assert (= (and d!22625 (not c!14122)) b!86473))

(assert (= (and b!86473 c!14123) b!86472))

(assert (= (and b!86473 (not c!14123)) b!86471))

(assert (= (or b!86472 b!86471) bm!8237))

(declare-fun m!91679 () Bool)

(assert (=> bm!8237 m!91679))

(declare-fun m!91681 () Bool)

(assert (=> b!86473 m!91681))

(assert (=> b!86473 m!91681))

(declare-fun m!91683 () Bool)

(assert (=> b!86473 m!91683))

(assert (=> d!22289 d!22625))

(declare-fun d!22627 () Bool)

(declare-fun e!56352 () Bool)

(assert (=> d!22627 e!56352))

(declare-fun res!44473 () Bool)

(assert (=> d!22627 (=> (not res!44473) (not e!56352))))

(declare-fun lt!41114 () ListLongMap!1461)

(assert (=> d!22627 (= res!44473 (contains!753 lt!41114 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41113 () List!1519)

(assert (=> d!22627 (= lt!41114 (ListLongMap!1462 lt!41113))))

(declare-fun lt!41115 () Unit!2517)

(declare-fun lt!41112 () Unit!2517)

(assert (=> d!22627 (= lt!41115 lt!41112)))

(assert (=> d!22627 (= (getValueByKey!140 lt!41113 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22627 (= lt!41112 (lemmaContainsTupThenGetReturnValue!57 lt!41113 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22627 (= lt!41113 (insertStrictlySorted!60 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22627 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41114)))

(declare-fun b!86475 () Bool)

(declare-fun res!44474 () Bool)

(assert (=> b!86475 (=> (not res!44474) (not e!56352))))

(assert (=> b!86475 (= res!44474 (= (getValueByKey!140 (toList!746 lt!41114) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!86476 () Bool)

(assert (=> b!86476 (= e!56352 (contains!754 (toList!746 lt!41114) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22627 res!44473) b!86475))

(assert (= (and b!86475 res!44474) b!86476))

(declare-fun m!91685 () Bool)

(assert (=> d!22627 m!91685))

(declare-fun m!91687 () Bool)

(assert (=> d!22627 m!91687))

(declare-fun m!91689 () Bool)

(assert (=> d!22627 m!91689))

(declare-fun m!91691 () Bool)

(assert (=> d!22627 m!91691))

(declare-fun m!91693 () Bool)

(assert (=> b!86475 m!91693))

(declare-fun m!91695 () Bool)

(assert (=> b!86476 m!91695))

(assert (=> d!22289 d!22627))

(declare-fun d!22629 () Bool)

(declare-fun e!56355 () Bool)

(assert (=> d!22629 e!56355))

(declare-fun res!44477 () Bool)

(assert (=> d!22629 (=> (not res!44477) (not e!56355))))

(assert (=> d!22629 (= res!44477 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 (_keys!4010 newMap!16)))))))

(declare-fun lt!41118 () Unit!2517)

(declare-fun choose!102 ((_ BitVec 64) array!4029 (_ BitVec 32) (_ BitVec 32)) Unit!2517)

(assert (=> d!22629 (= lt!41118 (choose!102 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (mask!6366 newMap!16)))))

(assert (=> d!22629 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22629 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (mask!6366 newMap!16)) lt!41118)))

(declare-fun b!86479 () Bool)

(assert (=> b!86479 (= e!56355 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (mask!6366 newMap!16)))))

(assert (= (and d!22629 res!44477) b!86479))

(assert (=> d!22629 m!89857))

(declare-fun m!91697 () Bool)

(assert (=> d!22629 m!91697))

(assert (=> d!22629 m!90385))

(assert (=> b!86479 m!90673))

(assert (=> b!86479 m!90645))

(assert (=> d!22289 d!22629))

(declare-fun d!22631 () Bool)

(declare-fun e!56357 () Bool)

(assert (=> d!22631 e!56357))

(declare-fun res!44478 () Bool)

(assert (=> d!22631 (=> res!44478 e!56357)))

(declare-fun lt!41119 () Bool)

(assert (=> d!22631 (= res!44478 (not lt!41119))))

(declare-fun lt!41120 () Bool)

(assert (=> d!22631 (= lt!41119 lt!41120)))

(declare-fun lt!41122 () Unit!2517)

(declare-fun e!56356 () Unit!2517)

(assert (=> d!22631 (= lt!41122 e!56356)))

(declare-fun c!14124 () Bool)

(assert (=> d!22631 (= c!14124 lt!41120)))

(assert (=> d!22631 (= lt!41120 (containsKey!144 (toList!746 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(assert (=> d!22631 (= (contains!753 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))) lt!41119)))

(declare-fun b!86480 () Bool)

(declare-fun lt!41121 () Unit!2517)

(assert (=> b!86480 (= e!56356 lt!41121)))

(assert (=> b!86480 (= lt!41121 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(assert (=> b!86480 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(declare-fun b!86481 () Bool)

(declare-fun Unit!2555 () Unit!2517)

(assert (=> b!86481 (= e!56356 Unit!2555)))

(declare-fun b!86482 () Bool)

(assert (=> b!86482 (= e!56357 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))))

(assert (= (and d!22631 c!14124) b!86480))

(assert (= (and d!22631 (not c!14124)) b!86481))

(assert (= (and d!22631 (not res!44478)) b!86482))

(assert (=> d!22631 m!90647))

(declare-fun m!91699 () Bool)

(assert (=> d!22631 m!91699))

(assert (=> b!86480 m!90647))

(declare-fun m!91701 () Bool)

(assert (=> b!86480 m!91701))

(assert (=> b!86480 m!90647))

(declare-fun m!91703 () Bool)

(assert (=> b!86480 m!91703))

(assert (=> b!86480 m!91703))

(declare-fun m!91705 () Bool)

(assert (=> b!86480 m!91705))

(assert (=> b!86482 m!90647))

(assert (=> b!86482 m!91703))

(assert (=> b!86482 m!91703))

(assert (=> b!86482 m!91705))

(assert (=> d!22289 d!22631))

(assert (=> d!22289 d!22317))

(declare-fun b!86483 () Bool)

(declare-fun c!14129 () Bool)

(assert (=> b!86483 (= c!14129 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56367 () ListLongMap!1461)

(declare-fun e!56368 () ListLongMap!1461)

(assert (=> b!86483 (= e!56367 e!56368)))

(declare-fun b!86484 () Bool)

(declare-fun res!44481 () Bool)

(declare-fun e!56360 () Bool)

(assert (=> b!86484 (=> (not res!44481) (not e!56360))))

(declare-fun e!56365 () Bool)

(assert (=> b!86484 (= res!44481 e!56365)))

(declare-fun res!44479 () Bool)

(assert (=> b!86484 (=> res!44479 e!56365)))

(declare-fun e!56359 () Bool)

(assert (=> b!86484 (= res!44479 (not e!56359))))

(declare-fun res!44482 () Bool)

(assert (=> b!86484 (=> (not res!44482) (not e!56359))))

(assert (=> b!86484 (= res!44482 (bvslt #b00000000000000000000000000000000 (size!2163 lt!40799)))))

(declare-fun call!8245 () ListLongMap!1461)

(declare-fun bm!8238 () Bool)

(assert (=> bm!8238 (= call!8245 (getCurrentListMapNoExtraKeys!75 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86485 () Bool)

(declare-fun e!56370 () Bool)

(declare-fun lt!41142 () ListLongMap!1461)

(assert (=> b!86485 (= e!56370 (= (apply!82 lt!41142 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!86486 () Bool)

(declare-fun e!56363 () Bool)

(assert (=> b!86486 (= e!56365 e!56363)))

(declare-fun res!44483 () Bool)

(assert (=> b!86486 (=> (not res!44483) (not e!56363))))

(assert (=> b!86486 (= res!44483 (contains!753 lt!41142 (select (arr!1919 lt!40799) #b00000000000000000000000000000000)))))

(assert (=> b!86486 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 lt!40799)))))

(declare-fun b!86487 () Bool)

(declare-fun e!56369 () Bool)

(assert (=> b!86487 (= e!56360 e!56369)))

(declare-fun c!14126 () Bool)

(assert (=> b!86487 (= c!14126 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86488 () Bool)

(declare-fun e!56358 () Bool)

(assert (=> b!86488 (= e!56369 e!56358)))

(declare-fun res!44484 () Bool)

(declare-fun call!8244 () Bool)

(assert (=> b!86488 (= res!44484 call!8244)))

(assert (=> b!86488 (=> (not res!44484) (not e!56358))))

(declare-fun c!14130 () Bool)

(declare-fun call!8242 () ListLongMap!1461)

(declare-fun c!14128 () Bool)

(declare-fun call!8247 () ListLongMap!1461)

(declare-fun bm!8239 () Bool)

(declare-fun call!8241 () ListLongMap!1461)

(assert (=> bm!8239 (= call!8241 (+!110 (ite c!14130 call!8245 (ite c!14128 call!8247 call!8242)) (ite (or c!14130 c!14128) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86489 () Bool)

(declare-fun call!8246 () ListLongMap!1461)

(assert (=> b!86489 (= e!56368 call!8246)))

(declare-fun b!86490 () Bool)

(declare-fun e!56366 () Bool)

(declare-fun call!8243 () Bool)

(assert (=> b!86490 (= e!56366 (not call!8243))))

(declare-fun b!86491 () Bool)

(declare-fun e!56364 () Bool)

(assert (=> b!86491 (= e!56364 (validKeyInArray!0 (select (arr!1919 lt!40799) #b00000000000000000000000000000000)))))

(declare-fun b!86492 () Bool)

(declare-fun res!44487 () Bool)

(assert (=> b!86492 (=> (not res!44487) (not e!56360))))

(assert (=> b!86492 (= res!44487 e!56366)))

(declare-fun c!14125 () Bool)

(assert (=> b!86492 (= c!14125 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86493 () Bool)

(assert (=> b!86493 (= e!56369 (not call!8244))))

(declare-fun b!86494 () Bool)

(assert (=> b!86494 (= e!56368 call!8242)))

(declare-fun b!86495 () Bool)

(assert (=> b!86495 (= e!56366 e!56370)))

(declare-fun res!44485 () Bool)

(assert (=> b!86495 (= res!44485 call!8243)))

(assert (=> b!86495 (=> (not res!44485) (not e!56370))))

(declare-fun b!86496 () Bool)

(declare-fun e!56362 () ListLongMap!1461)

(assert (=> b!86496 (= e!56362 (+!110 call!8241 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!22633 () Bool)

(assert (=> d!22633 e!56360))

(declare-fun res!44480 () Bool)

(assert (=> d!22633 (=> (not res!44480) (not e!56360))))

(assert (=> d!22633 (= res!44480 (or (bvsge #b00000000000000000000000000000000 (size!2163 lt!40799)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 lt!40799)))))))

(declare-fun lt!41124 () ListLongMap!1461)

(assert (=> d!22633 (= lt!41142 lt!41124)))

(declare-fun lt!41134 () Unit!2517)

(declare-fun e!56361 () Unit!2517)

(assert (=> d!22633 (= lt!41134 e!56361)))

(declare-fun c!14127 () Bool)

(assert (=> d!22633 (= c!14127 e!56364)))

(declare-fun res!44486 () Bool)

(assert (=> d!22633 (=> (not res!44486) (not e!56364))))

(assert (=> d!22633 (= res!44486 (bvslt #b00000000000000000000000000000000 (size!2163 lt!40799)))))

(assert (=> d!22633 (= lt!41124 e!56362)))

(assert (=> d!22633 (= c!14130 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22633 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22633 (= (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41142)))

(declare-fun b!86497 () Bool)

(assert (=> b!86497 (= e!56367 call!8246)))

(declare-fun b!86498 () Bool)

(assert (=> b!86498 (= e!56363 (= (apply!82 lt!41142 (select (arr!1919 lt!40799) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 lt!40820) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86498 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 lt!40820)))))

(assert (=> b!86498 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 lt!40799)))))

(declare-fun b!86499 () Bool)

(assert (=> b!86499 (= e!56362 e!56367)))

(assert (=> b!86499 (= c!14128 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86500 () Bool)

(assert (=> b!86500 (= e!56359 (validKeyInArray!0 (select (arr!1919 lt!40799) #b00000000000000000000000000000000)))))

(declare-fun bm!8240 () Bool)

(assert (=> bm!8240 (= call!8243 (contains!753 lt!41142 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8241 () Bool)

(assert (=> bm!8241 (= call!8246 call!8241)))

(declare-fun b!86501 () Bool)

(declare-fun Unit!2556 () Unit!2517)

(assert (=> b!86501 (= e!56361 Unit!2556)))

(declare-fun bm!8242 () Bool)

(assert (=> bm!8242 (= call!8242 call!8247)))

(declare-fun bm!8243 () Bool)

(assert (=> bm!8243 (= call!8244 (contains!753 lt!41142 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8244 () Bool)

(assert (=> bm!8244 (= call!8247 call!8245)))

(declare-fun b!86502 () Bool)

(assert (=> b!86502 (= e!56358 (= (apply!82 lt!41142 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86503 () Bool)

(declare-fun lt!41127 () Unit!2517)

(assert (=> b!86503 (= e!56361 lt!41127)))

(declare-fun lt!41129 () ListLongMap!1461)

(assert (=> b!86503 (= lt!41129 (getCurrentListMapNoExtraKeys!75 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41138 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41138 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41136 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41136 (select (arr!1919 lt!40799) #b00000000000000000000000000000000))))

(declare-fun lt!41128 () Unit!2517)

(assert (=> b!86503 (= lt!41128 (addStillContains!58 lt!41129 lt!41138 (zeroValue!2230 newMap!16) lt!41136))))

(assert (=> b!86503 (contains!753 (+!110 lt!41129 (tuple2!2199 lt!41138 (zeroValue!2230 newMap!16))) lt!41136)))

(declare-fun lt!41135 () Unit!2517)

(assert (=> b!86503 (= lt!41135 lt!41128)))

(declare-fun lt!41141 () ListLongMap!1461)

(assert (=> b!86503 (= lt!41141 (getCurrentListMapNoExtraKeys!75 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41140 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41140 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41139 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41139 (select (arr!1919 lt!40799) #b00000000000000000000000000000000))))

(declare-fun lt!41144 () Unit!2517)

(assert (=> b!86503 (= lt!41144 (addApplyDifferent!58 lt!41141 lt!41140 (minValue!2230 newMap!16) lt!41139))))

(assert (=> b!86503 (= (apply!82 (+!110 lt!41141 (tuple2!2199 lt!41140 (minValue!2230 newMap!16))) lt!41139) (apply!82 lt!41141 lt!41139))))

(declare-fun lt!41125 () Unit!2517)

(assert (=> b!86503 (= lt!41125 lt!41144)))

(declare-fun lt!41133 () ListLongMap!1461)

(assert (=> b!86503 (= lt!41133 (getCurrentListMapNoExtraKeys!75 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41123 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41123 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41131 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41131 (select (arr!1919 lt!40799) #b00000000000000000000000000000000))))

(declare-fun lt!41126 () Unit!2517)

(assert (=> b!86503 (= lt!41126 (addApplyDifferent!58 lt!41133 lt!41123 (zeroValue!2230 newMap!16) lt!41131))))

(assert (=> b!86503 (= (apply!82 (+!110 lt!41133 (tuple2!2199 lt!41123 (zeroValue!2230 newMap!16))) lt!41131) (apply!82 lt!41133 lt!41131))))

(declare-fun lt!41130 () Unit!2517)

(assert (=> b!86503 (= lt!41130 lt!41126)))

(declare-fun lt!41143 () ListLongMap!1461)

(assert (=> b!86503 (= lt!41143 (getCurrentListMapNoExtraKeys!75 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41137 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41137 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41132 () (_ BitVec 64))

(assert (=> b!86503 (= lt!41132 (select (arr!1919 lt!40799) #b00000000000000000000000000000000))))

(assert (=> b!86503 (= lt!41127 (addApplyDifferent!58 lt!41143 lt!41137 (minValue!2230 newMap!16) lt!41132))))

(assert (=> b!86503 (= (apply!82 (+!110 lt!41143 (tuple2!2199 lt!41137 (minValue!2230 newMap!16))) lt!41132) (apply!82 lt!41143 lt!41132))))

(assert (= (and d!22633 c!14130) b!86496))

(assert (= (and d!22633 (not c!14130)) b!86499))

(assert (= (and b!86499 c!14128) b!86497))

(assert (= (and b!86499 (not c!14128)) b!86483))

(assert (= (and b!86483 c!14129) b!86489))

(assert (= (and b!86483 (not c!14129)) b!86494))

(assert (= (or b!86489 b!86494) bm!8242))

(assert (= (or b!86497 bm!8242) bm!8244))

(assert (= (or b!86497 b!86489) bm!8241))

(assert (= (or b!86496 bm!8244) bm!8238))

(assert (= (or b!86496 bm!8241) bm!8239))

(assert (= (and d!22633 res!44486) b!86491))

(assert (= (and d!22633 c!14127) b!86503))

(assert (= (and d!22633 (not c!14127)) b!86501))

(assert (= (and d!22633 res!44480) b!86484))

(assert (= (and b!86484 res!44482) b!86500))

(assert (= (and b!86484 (not res!44479)) b!86486))

(assert (= (and b!86486 res!44483) b!86498))

(assert (= (and b!86484 res!44481) b!86492))

(assert (= (and b!86492 c!14125) b!86495))

(assert (= (and b!86492 (not c!14125)) b!86490))

(assert (= (and b!86495 res!44485) b!86485))

(assert (= (or b!86495 b!86490) bm!8240))

(assert (= (and b!86492 res!44487) b!86487))

(assert (= (and b!86487 c!14126) b!86488))

(assert (= (and b!86487 (not c!14126)) b!86493))

(assert (= (and b!86488 res!44484) b!86502))

(assert (= (or b!86488 b!86493) bm!8243))

(declare-fun b_lambda!3847 () Bool)

(assert (=> (not b_lambda!3847) (not b!86498)))

(assert (=> b!86498 t!5248))

(declare-fun b_and!5243 () Bool)

(assert (= b_and!5239 (and (=> t!5248 result!2927) b_and!5243)))

(assert (=> b!86498 t!5250))

(declare-fun b_and!5245 () Bool)

(assert (= b_and!5241 (and (=> t!5250 result!2929) b_and!5245)))

(declare-fun m!91707 () Bool)

(assert (=> b!86500 m!91707))

(assert (=> b!86500 m!91707))

(declare-fun m!91709 () Bool)

(assert (=> b!86500 m!91709))

(declare-fun m!91711 () Bool)

(assert (=> b!86502 m!91711))

(declare-fun m!91713 () Bool)

(assert (=> bm!8238 m!91713))

(declare-fun m!91715 () Bool)

(assert (=> bm!8240 m!91715))

(assert (=> b!86498 m!90373))

(assert (=> b!86498 m!91707))

(declare-fun m!91717 () Bool)

(assert (=> b!86498 m!91717))

(assert (=> b!86498 m!91707))

(declare-fun m!91719 () Bool)

(assert (=> b!86498 m!91719))

(assert (=> b!86498 m!91719))

(assert (=> b!86498 m!90373))

(declare-fun m!91721 () Bool)

(assert (=> b!86498 m!91721))

(assert (=> b!86486 m!91707))

(assert (=> b!86486 m!91707))

(declare-fun m!91723 () Bool)

(assert (=> b!86486 m!91723))

(declare-fun m!91725 () Bool)

(assert (=> b!86496 m!91725))

(assert (=> d!22633 m!90385))

(declare-fun m!91727 () Bool)

(assert (=> bm!8243 m!91727))

(declare-fun m!91729 () Bool)

(assert (=> b!86503 m!91729))

(declare-fun m!91731 () Bool)

(assert (=> b!86503 m!91731))

(declare-fun m!91733 () Bool)

(assert (=> b!86503 m!91733))

(assert (=> b!86503 m!91707))

(declare-fun m!91735 () Bool)

(assert (=> b!86503 m!91735))

(declare-fun m!91737 () Bool)

(assert (=> b!86503 m!91737))

(declare-fun m!91739 () Bool)

(assert (=> b!86503 m!91739))

(declare-fun m!91741 () Bool)

(assert (=> b!86503 m!91741))

(declare-fun m!91743 () Bool)

(assert (=> b!86503 m!91743))

(declare-fun m!91745 () Bool)

(assert (=> b!86503 m!91745))

(declare-fun m!91747 () Bool)

(assert (=> b!86503 m!91747))

(assert (=> b!86503 m!91731))

(assert (=> b!86503 m!91737))

(declare-fun m!91749 () Bool)

(assert (=> b!86503 m!91749))

(declare-fun m!91751 () Bool)

(assert (=> b!86503 m!91751))

(declare-fun m!91753 () Bool)

(assert (=> b!86503 m!91753))

(assert (=> b!86503 m!91741))

(assert (=> b!86503 m!91751))

(assert (=> b!86503 m!91713))

(declare-fun m!91755 () Bool)

(assert (=> b!86503 m!91755))

(declare-fun m!91757 () Bool)

(assert (=> b!86503 m!91757))

(assert (=> b!86491 m!91707))

(assert (=> b!86491 m!91707))

(assert (=> b!86491 m!91709))

(declare-fun m!91759 () Bool)

(assert (=> b!86485 m!91759))

(declare-fun m!91761 () Bool)

(assert (=> bm!8239 m!91761))

(assert (=> d!22289 d!22633))

(assert (=> d!22289 d!22331))

(declare-fun d!22635 () Bool)

(assert (=> d!22635 (= (arrayCountValidKeys!0 lt!40810 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!41147 () Unit!2517)

(declare-fun choose!2 (array!4029 (_ BitVec 32)) Unit!2517)

(assert (=> d!22635 (= lt!41147 (choose!2 lt!40810 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))

(declare-fun e!56373 () Bool)

(assert (=> d!22635 e!56373))

(declare-fun res!44492 () Bool)

(assert (=> d!22635 (=> (not res!44492) (not e!56373))))

(assert (=> d!22635 (= res!44492 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 lt!40810))))))

(assert (=> d!22635 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40810 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))) lt!41147)))

(declare-fun b!86508 () Bool)

(declare-fun res!44493 () Bool)

(assert (=> b!86508 (=> (not res!44493) (not e!56373))))

(assert (=> b!86508 (= res!44493 (validKeyInArray!0 (select (arr!1919 lt!40810) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(declare-fun b!86509 () Bool)

(assert (=> b!86509 (= e!56373 (bvslt (size!2163 lt!40810) #b01111111111111111111111111111111))))

(assert (= (and d!22635 res!44492) b!86508))

(assert (= (and b!86508 res!44493) b!86509))

(assert (=> d!22635 m!90653))

(declare-fun m!91763 () Bool)

(assert (=> d!22635 m!91763))

(declare-fun m!91765 () Bool)

(assert (=> b!86508 m!91765))

(assert (=> b!86508 m!91765))

(declare-fun m!91767 () Bool)

(assert (=> b!86508 m!91767))

(assert (=> d!22289 d!22635))

(assert (=> d!22289 d!22397))

(declare-fun b!86510 () Bool)

(declare-fun e!56376 () Bool)

(declare-fun call!8248 () Bool)

(assert (=> b!86510 (= e!56376 call!8248)))

(declare-fun b!86511 () Bool)

(declare-fun e!56374 () Bool)

(assert (=> b!86511 (= e!56376 e!56374)))

(declare-fun lt!41150 () (_ BitVec 64))

(assert (=> b!86511 (= lt!41150 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41149 () Unit!2517)

(assert (=> b!86511 (= lt!41149 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) lt!41150 #b00000000000000000000000000000000))))

(assert (=> b!86511 (arrayContainsKey!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) lt!41150 #b00000000000000000000000000000000)))

(declare-fun lt!41148 () Unit!2517)

(assert (=> b!86511 (= lt!41148 lt!41149)))

(declare-fun res!44494 () Bool)

(assert (=> b!86511 (= res!44494 (= (seekEntryOrOpen!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000) (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (mask!6366 newMap!16)) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!86511 (=> (not res!44494) (not e!56374))))

(declare-fun b!86512 () Bool)

(assert (=> b!86512 (= e!56374 call!8248)))

(declare-fun d!22637 () Bool)

(declare-fun res!44495 () Bool)

(declare-fun e!56375 () Bool)

(assert (=> d!22637 (=> res!44495 e!56375)))

(assert (=> d!22637 (= res!44495 (bvsge #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(assert (=> d!22637 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (mask!6366 newMap!16)) e!56375)))

(declare-fun bm!8245 () Bool)

(assert (=> bm!8245 (= call!8248 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (mask!6366 newMap!16)))))

(declare-fun b!86513 () Bool)

(assert (=> b!86513 (= e!56375 e!56376)))

(declare-fun c!14131 () Bool)

(assert (=> b!86513 (= c!14131 (validKeyInArray!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!22637 (not res!44495)) b!86513))

(assert (= (and b!86513 c!14131) b!86511))

(assert (= (and b!86513 (not c!14131)) b!86510))

(assert (= (and b!86511 res!44494) b!86512))

(assert (= (or b!86512 b!86510) bm!8245))

(assert (=> b!86511 m!91681))

(declare-fun m!91769 () Bool)

(assert (=> b!86511 m!91769))

(declare-fun m!91771 () Bool)

(assert (=> b!86511 m!91771))

(assert (=> b!86511 m!91681))

(declare-fun m!91773 () Bool)

(assert (=> b!86511 m!91773))

(declare-fun m!91775 () Bool)

(assert (=> bm!8245 m!91775))

(assert (=> b!86513 m!91681))

(assert (=> b!86513 m!91681))

(assert (=> b!86513 m!91683))

(assert (=> d!22289 d!22637))

(declare-fun d!22639 () Bool)

(declare-fun e!56379 () Bool)

(assert (=> d!22639 e!56379))

(declare-fun res!44498 () Bool)

(assert (=> d!22639 (=> (not res!44498) (not e!56379))))

(assert (=> d!22639 (= res!44498 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 (_keys!4010 newMap!16)))))))

(declare-fun lt!41153 () Unit!2517)

(declare-fun choose!41 (array!4029 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1520) Unit!2517)

(assert (=> d!22639 (= lt!41153 (choose!41 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) lt!40812 lt!40797))))

(assert (=> d!22639 (bvslt (size!2163 (_keys!4010 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!22639 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4010 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) lt!40812 lt!40797) lt!41153)))

(declare-fun b!86516 () Bool)

(assert (=> b!86516 (= e!56379 (arrayNoDuplicates!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) lt!40812 lt!40797))))

(assert (= (and d!22639 res!44498) b!86516))

(assert (=> d!22639 m!89857))

(declare-fun m!91777 () Bool)

(assert (=> d!22639 m!91777))

(assert (=> b!86516 m!90673))

(assert (=> b!86516 m!90671))

(assert (=> d!22289 d!22639))

(declare-fun d!22641 () Bool)

(declare-fun e!56382 () Bool)

(assert (=> d!22641 e!56382))

(declare-fun res!44501 () Bool)

(assert (=> d!22641 (=> (not res!44501) (not e!56382))))

(assert (=> d!22641 (= res!44501 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 (_keys!4010 newMap!16))) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2164 (_values!2321 newMap!16)))))))

(declare-fun lt!41156 () Unit!2517)

(declare-fun choose!511 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 32) (_ BitVec 64) V!3027 Int) Unit!2517)

(assert (=> d!22641 (= lt!41156 (choose!511 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22641 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22641 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)) lt!41156)))

(declare-fun b!86519 () Bool)

(assert (=> b!86519 (= e!56382 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (getCurrentListMap!439 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))))

(assert (= (and d!22641 res!44501) b!86519))

(assert (=> d!22641 m!89857))

(declare-fun m!91779 () Bool)

(assert (=> d!22641 m!91779))

(assert (=> d!22641 m!90385))

(assert (=> b!86519 m!89981))

(assert (=> b!86519 m!90651))

(assert (=> b!86519 m!90643))

(assert (=> b!86519 m!90673))

(assert (=> b!86519 m!89981))

(assert (=> b!86519 m!90667))

(assert (=> d!22289 d!22641))

(declare-fun d!22643 () Bool)

(declare-fun e!56383 () Bool)

(assert (=> d!22643 e!56383))

(declare-fun res!44502 () Bool)

(assert (=> d!22643 (=> (not res!44502) (not e!56383))))

(assert (=> d!22643 (= res!44502 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 lt!40799))))))

(declare-fun lt!41157 () Unit!2517)

(assert (=> d!22643 (= lt!41157 (choose!505 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (defaultEntry!2338 newMap!16)))))

(assert (=> d!22643 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22643 (= (lemmaValidKeyInArrayIsInListMap!92 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (defaultEntry!2338 newMap!16)) lt!41157)))

(declare-fun b!86520 () Bool)

(assert (=> b!86520 (= e!56383 (contains!753 (getCurrentListMap!439 lt!40799 lt!40820 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 lt!40799) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(assert (= (and d!22643 res!44502) b!86520))

(declare-fun m!91781 () Bool)

(assert (=> d!22643 m!91781))

(assert (=> d!22643 m!90385))

(assert (=> b!86520 m!90663))

(declare-fun m!91783 () Bool)

(assert (=> b!86520 m!91783))

(assert (=> b!86520 m!90663))

(assert (=> b!86520 m!91783))

(declare-fun m!91785 () Bool)

(assert (=> b!86520 m!91785))

(assert (=> d!22289 d!22643))

(declare-fun d!22645 () Bool)

(assert (=> d!22645 (arrayContainsKey!0 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!41158 () Unit!2517)

(assert (=> d!22645 (= lt!41158 (choose!13 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))

(assert (=> d!22645 (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000)))

(assert (=> d!22645 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))) lt!41158)))

(declare-fun bs!3670 () Bool)

(assert (= bs!3670 d!22645))

(assert (=> bs!3670 m!89857))

(assert (=> bs!3670 m!90649))

(assert (=> bs!3670 m!89857))

(declare-fun m!91787 () Bool)

(assert (=> bs!3670 m!91787))

(assert (=> d!22289 d!22645))

(assert (=> d!22289 d!22319))

(declare-fun e!56389 () Bool)

(declare-fun b!86532 () Bool)

(assert (=> b!86532 (= e!56389 (= (arrayCountValidKeys!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4010 newMap!16) #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!86530 () Bool)

(declare-fun res!44512 () Bool)

(declare-fun e!56388 () Bool)

(assert (=> b!86530 (=> (not res!44512) (not e!56388))))

(assert (=> b!86530 (= res!44512 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun d!22647 () Bool)

(assert (=> d!22647 e!56389))

(declare-fun res!44511 () Bool)

(assert (=> d!22647 (=> (not res!44511) (not e!56389))))

(assert (=> d!22647 (= res!44511 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 (_keys!4010 newMap!16)))))))

(declare-fun lt!41161 () Unit!2517)

(declare-fun choose!1 (array!4029 (_ BitVec 32) (_ BitVec 64)) Unit!2517)

(assert (=> d!22647 (= lt!41161 (choose!1 (_keys!4010 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22647 e!56388))

(declare-fun res!44513 () Bool)

(assert (=> d!22647 (=> (not res!44513) (not e!56388))))

(assert (=> d!22647 (= res!44513 (and (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvslt (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (size!2163 (_keys!4010 newMap!16)))))))

(assert (=> d!22647 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4010 newMap!16) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!41161)))

(declare-fun b!86531 () Bool)

(assert (=> b!86531 (= e!56388 (bvslt (size!2163 (_keys!4010 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!86529 () Bool)

(declare-fun res!44514 () Bool)

(assert (=> b!86529 (=> (not res!44514) (not e!56388))))

(assert (=> b!86529 (= res!44514 (not (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535))))))))

(assert (= (and d!22647 res!44513) b!86529))

(assert (= (and b!86529 res!44514) b!86530))

(assert (= (and b!86530 res!44512) b!86531))

(assert (= (and d!22647 res!44511) b!86532))

(assert (=> b!86532 m!90673))

(assert (=> b!86532 m!90675))

(assert (=> b!86532 m!90039))

(assert (=> b!86530 m!89857))

(assert (=> b!86530 m!90247))

(assert (=> d!22647 m!89857))

(declare-fun m!91789 () Bool)

(assert (=> d!22647 m!91789))

(declare-fun m!91791 () Bool)

(assert (=> b!86529 m!91791))

(assert (=> b!86529 m!91791))

(declare-fun m!91793 () Bool)

(assert (=> b!86529 m!91793))

(assert (=> d!22289 d!22647))

(declare-fun b!86533 () Bool)

(declare-fun c!14136 () Bool)

(assert (=> b!86533 (= c!14136 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56399 () ListLongMap!1461)

(declare-fun e!56400 () ListLongMap!1461)

(assert (=> b!86533 (= e!56399 e!56400)))

(declare-fun b!86534 () Bool)

(declare-fun res!44517 () Bool)

(declare-fun e!56392 () Bool)

(assert (=> b!86534 (=> (not res!44517) (not e!56392))))

(declare-fun e!56397 () Bool)

(assert (=> b!86534 (= res!44517 e!56397)))

(declare-fun res!44515 () Bool)

(assert (=> b!86534 (=> res!44515 e!56397)))

(declare-fun e!56391 () Bool)

(assert (=> b!86534 (= res!44515 (not e!56391))))

(declare-fun res!44518 () Bool)

(assert (=> b!86534 (=> (not res!44518) (not e!56391))))

(assert (=> b!86534 (= res!44518 (bvslt #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun bm!8246 () Bool)

(declare-fun call!8253 () ListLongMap!1461)

(assert (=> bm!8246 (= call!8253 (getCurrentListMapNoExtraKeys!75 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86535 () Bool)

(declare-fun e!56402 () Bool)

(declare-fun lt!41181 () ListLongMap!1461)

(assert (=> b!86535 (= e!56402 (= (apply!82 lt!41181 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!86536 () Bool)

(declare-fun e!56395 () Bool)

(assert (=> b!86536 (= e!56397 e!56395)))

(declare-fun res!44519 () Bool)

(assert (=> b!86536 (=> (not res!44519) (not e!56395))))

(assert (=> b!86536 (= res!44519 (contains!753 lt!41181 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!86536 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun b!86537 () Bool)

(declare-fun e!56401 () Bool)

(assert (=> b!86537 (= e!56392 e!56401)))

(declare-fun c!14133 () Bool)

(assert (=> b!86537 (= c!14133 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86538 () Bool)

(declare-fun e!56390 () Bool)

(assert (=> b!86538 (= e!56401 e!56390)))

(declare-fun res!44520 () Bool)

(declare-fun call!8252 () Bool)

(assert (=> b!86538 (= res!44520 call!8252)))

(assert (=> b!86538 (=> (not res!44520) (not e!56390))))

(declare-fun c!14137 () Bool)

(declare-fun bm!8247 () Bool)

(declare-fun call!8250 () ListLongMap!1461)

(declare-fun c!14135 () Bool)

(declare-fun call!8255 () ListLongMap!1461)

(declare-fun call!8249 () ListLongMap!1461)

(assert (=> bm!8247 (= call!8249 (+!110 (ite c!14137 call!8253 (ite c!14135 call!8255 call!8250)) (ite (or c!14137 c!14135) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86539 () Bool)

(declare-fun call!8254 () ListLongMap!1461)

(assert (=> b!86539 (= e!56400 call!8254)))

(declare-fun b!86540 () Bool)

(declare-fun e!56398 () Bool)

(declare-fun call!8251 () Bool)

(assert (=> b!86540 (= e!56398 (not call!8251))))

(declare-fun e!56396 () Bool)

(declare-fun b!86541 () Bool)

(assert (=> b!86541 (= e!56396 (validKeyInArray!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!86542 () Bool)

(declare-fun res!44523 () Bool)

(assert (=> b!86542 (=> (not res!44523) (not e!56392))))

(assert (=> b!86542 (= res!44523 e!56398)))

(declare-fun c!14132 () Bool)

(assert (=> b!86542 (= c!14132 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86543 () Bool)

(assert (=> b!86543 (= e!56401 (not call!8252))))

(declare-fun b!86544 () Bool)

(assert (=> b!86544 (= e!56400 call!8250)))

(declare-fun b!86545 () Bool)

(assert (=> b!86545 (= e!56398 e!56402)))

(declare-fun res!44521 () Bool)

(assert (=> b!86545 (= res!44521 call!8251)))

(assert (=> b!86545 (=> (not res!44521) (not e!56402))))

(declare-fun b!86546 () Bool)

(declare-fun e!56394 () ListLongMap!1461)

(assert (=> b!86546 (= e!56394 (+!110 call!8249 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!22649 () Bool)

(assert (=> d!22649 e!56392))

(declare-fun res!44516 () Bool)

(assert (=> d!22649 (=> (not res!44516) (not e!56392))))

(assert (=> d!22649 (= res!44516 (or (bvsge #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))))

(declare-fun lt!41163 () ListLongMap!1461)

(assert (=> d!22649 (= lt!41181 lt!41163)))

(declare-fun lt!41173 () Unit!2517)

(declare-fun e!56393 () Unit!2517)

(assert (=> d!22649 (= lt!41173 e!56393)))

(declare-fun c!14134 () Bool)

(assert (=> d!22649 (= c!14134 e!56396)))

(declare-fun res!44522 () Bool)

(assert (=> d!22649 (=> (not res!44522) (not e!56396))))

(assert (=> d!22649 (= res!44522 (bvslt #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(assert (=> d!22649 (= lt!41163 e!56394)))

(assert (=> d!22649 (= c!14137 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22649 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22649 (= (getCurrentListMap!439 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41181)))

(declare-fun b!86547 () Bool)

(assert (=> b!86547 (= e!56399 call!8254)))

(declare-fun b!86548 () Bool)

(assert (=> b!86548 (= e!56395 (= (apply!82 lt!41181 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86548 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))))))

(assert (=> b!86548 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun b!86549 () Bool)

(assert (=> b!86549 (= e!56394 e!56399)))

(assert (=> b!86549 (= c!14135 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86550 () Bool)

(assert (=> b!86550 (= e!56391 (validKeyInArray!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8248 () Bool)

(assert (=> bm!8248 (= call!8251 (contains!753 lt!41181 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8249 () Bool)

(assert (=> bm!8249 (= call!8254 call!8249)))

(declare-fun b!86551 () Bool)

(declare-fun Unit!2557 () Unit!2517)

(assert (=> b!86551 (= e!56393 Unit!2557)))

(declare-fun bm!8250 () Bool)

(assert (=> bm!8250 (= call!8250 call!8255)))

(declare-fun bm!8251 () Bool)

(assert (=> bm!8251 (= call!8252 (contains!753 lt!41181 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8252 () Bool)

(assert (=> bm!8252 (= call!8255 call!8253)))

(declare-fun b!86552 () Bool)

(assert (=> b!86552 (= e!56390 (= (apply!82 lt!41181 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86553 () Bool)

(declare-fun lt!41166 () Unit!2517)

(assert (=> b!86553 (= e!56393 lt!41166)))

(declare-fun lt!41168 () ListLongMap!1461)

(assert (=> b!86553 (= lt!41168 (getCurrentListMapNoExtraKeys!75 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41177 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41177 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41175 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41175 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41167 () Unit!2517)

(assert (=> b!86553 (= lt!41167 (addStillContains!58 lt!41168 lt!41177 (zeroValue!2230 newMap!16) lt!41175))))

(assert (=> b!86553 (contains!753 (+!110 lt!41168 (tuple2!2199 lt!41177 (zeroValue!2230 newMap!16))) lt!41175)))

(declare-fun lt!41174 () Unit!2517)

(assert (=> b!86553 (= lt!41174 lt!41167)))

(declare-fun lt!41180 () ListLongMap!1461)

(assert (=> b!86553 (= lt!41180 (getCurrentListMapNoExtraKeys!75 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41179 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41179 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41178 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41178 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41183 () Unit!2517)

(assert (=> b!86553 (= lt!41183 (addApplyDifferent!58 lt!41180 lt!41179 (minValue!2230 newMap!16) lt!41178))))

(assert (=> b!86553 (= (apply!82 (+!110 lt!41180 (tuple2!2199 lt!41179 (minValue!2230 newMap!16))) lt!41178) (apply!82 lt!41180 lt!41178))))

(declare-fun lt!41164 () Unit!2517)

(assert (=> b!86553 (= lt!41164 lt!41183)))

(declare-fun lt!41172 () ListLongMap!1461)

(assert (=> b!86553 (= lt!41172 (getCurrentListMapNoExtraKeys!75 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41162 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41162 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41170 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41170 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41165 () Unit!2517)

(assert (=> b!86553 (= lt!41165 (addApplyDifferent!58 lt!41172 lt!41162 (zeroValue!2230 newMap!16) lt!41170))))

(assert (=> b!86553 (= (apply!82 (+!110 lt!41172 (tuple2!2199 lt!41162 (zeroValue!2230 newMap!16))) lt!41170) (apply!82 lt!41172 lt!41170))))

(declare-fun lt!41169 () Unit!2517)

(assert (=> b!86553 (= lt!41169 lt!41165)))

(declare-fun lt!41182 () ListLongMap!1461)

(assert (=> b!86553 (= lt!41182 (getCurrentListMapNoExtraKeys!75 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41176 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41176 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41171 () (_ BitVec 64))

(assert (=> b!86553 (= lt!41171 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!86553 (= lt!41166 (addApplyDifferent!58 lt!41182 lt!41176 (minValue!2230 newMap!16) lt!41171))))

(assert (=> b!86553 (= (apply!82 (+!110 lt!41182 (tuple2!2199 lt!41176 (minValue!2230 newMap!16))) lt!41171) (apply!82 lt!41182 lt!41171))))

(assert (= (and d!22649 c!14137) b!86546))

(assert (= (and d!22649 (not c!14137)) b!86549))

(assert (= (and b!86549 c!14135) b!86547))

(assert (= (and b!86549 (not c!14135)) b!86533))

(assert (= (and b!86533 c!14136) b!86539))

(assert (= (and b!86533 (not c!14136)) b!86544))

(assert (= (or b!86539 b!86544) bm!8250))

(assert (= (or b!86547 bm!8250) bm!8252))

(assert (= (or b!86547 b!86539) bm!8249))

(assert (= (or b!86546 bm!8252) bm!8246))

(assert (= (or b!86546 bm!8249) bm!8247))

(assert (= (and d!22649 res!44522) b!86541))

(assert (= (and d!22649 c!14134) b!86553))

(assert (= (and d!22649 (not c!14134)) b!86551))

(assert (= (and d!22649 res!44516) b!86534))

(assert (= (and b!86534 res!44518) b!86550))

(assert (= (and b!86534 (not res!44515)) b!86536))

(assert (= (and b!86536 res!44519) b!86548))

(assert (= (and b!86534 res!44517) b!86542))

(assert (= (and b!86542 c!14132) b!86545))

(assert (= (and b!86542 (not c!14132)) b!86540))

(assert (= (and b!86545 res!44521) b!86535))

(assert (= (or b!86545 b!86540) bm!8248))

(assert (= (and b!86542 res!44523) b!86537))

(assert (= (and b!86537 c!14133) b!86538))

(assert (= (and b!86537 (not c!14133)) b!86543))

(assert (= (and b!86538 res!44520) b!86552))

(assert (= (or b!86538 b!86543) bm!8251))

(declare-fun b_lambda!3849 () Bool)

(assert (=> (not b_lambda!3849) (not b!86548)))

(assert (=> b!86548 t!5248))

(declare-fun b_and!5247 () Bool)

(assert (= b_and!5243 (and (=> t!5248 result!2927) b_and!5247)))

(assert (=> b!86548 t!5250))

(declare-fun b_and!5249 () Bool)

(assert (= b_and!5245 (and (=> t!5250 result!2929) b_and!5249)))

(assert (=> b!86550 m!91681))

(assert (=> b!86550 m!91681))

(assert (=> b!86550 m!91683))

(declare-fun m!91795 () Bool)

(assert (=> b!86552 m!91795))

(declare-fun m!91797 () Bool)

(assert (=> bm!8246 m!91797))

(declare-fun m!91799 () Bool)

(assert (=> bm!8248 m!91799))

(assert (=> b!86548 m!90373))

(assert (=> b!86548 m!91681))

(declare-fun m!91801 () Bool)

(assert (=> b!86548 m!91801))

(assert (=> b!86548 m!91681))

(declare-fun m!91803 () Bool)

(assert (=> b!86548 m!91803))

(assert (=> b!86548 m!91803))

(assert (=> b!86548 m!90373))

(declare-fun m!91805 () Bool)

(assert (=> b!86548 m!91805))

(assert (=> b!86536 m!91681))

(assert (=> b!86536 m!91681))

(declare-fun m!91807 () Bool)

(assert (=> b!86536 m!91807))

(declare-fun m!91809 () Bool)

(assert (=> b!86546 m!91809))

(assert (=> d!22649 m!90385))

(declare-fun m!91811 () Bool)

(assert (=> bm!8251 m!91811))

(declare-fun m!91813 () Bool)

(assert (=> b!86553 m!91813))

(declare-fun m!91815 () Bool)

(assert (=> b!86553 m!91815))

(declare-fun m!91817 () Bool)

(assert (=> b!86553 m!91817))

(assert (=> b!86553 m!91681))

(declare-fun m!91819 () Bool)

(assert (=> b!86553 m!91819))

(declare-fun m!91821 () Bool)

(assert (=> b!86553 m!91821))

(declare-fun m!91823 () Bool)

(assert (=> b!86553 m!91823))

(declare-fun m!91825 () Bool)

(assert (=> b!86553 m!91825))

(declare-fun m!91827 () Bool)

(assert (=> b!86553 m!91827))

(declare-fun m!91829 () Bool)

(assert (=> b!86553 m!91829))

(declare-fun m!91831 () Bool)

(assert (=> b!86553 m!91831))

(assert (=> b!86553 m!91815))

(assert (=> b!86553 m!91821))

(declare-fun m!91833 () Bool)

(assert (=> b!86553 m!91833))

(declare-fun m!91835 () Bool)

(assert (=> b!86553 m!91835))

(declare-fun m!91837 () Bool)

(assert (=> b!86553 m!91837))

(assert (=> b!86553 m!91825))

(assert (=> b!86553 m!91835))

(assert (=> b!86553 m!91797))

(declare-fun m!91839 () Bool)

(assert (=> b!86553 m!91839))

(declare-fun m!91841 () Bool)

(assert (=> b!86553 m!91841))

(assert (=> b!86541 m!91681))

(assert (=> b!86541 m!91681))

(assert (=> b!86541 m!91683))

(declare-fun m!91843 () Bool)

(assert (=> b!86535 m!91843))

(declare-fun m!91845 () Bool)

(assert (=> bm!8247 m!91845))

(assert (=> d!22289 d!22649))

(declare-fun call!8256 () (_ BitVec 32))

(declare-fun bm!8253 () Bool)

(assert (=> bm!8253 (= call!8256 (arrayCountValidKeys!0 lt!40810 (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001) (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001)))))

(declare-fun b!86554 () Bool)

(declare-fun e!56404 () (_ BitVec 32))

(assert (=> b!86554 (= e!56404 call!8256)))

(declare-fun b!86555 () Bool)

(assert (=> b!86555 (= e!56404 (bvadd #b00000000000000000000000000000001 call!8256))))

(declare-fun b!86557 () Bool)

(declare-fun e!56403 () (_ BitVec 32))

(assert (=> b!86557 (= e!56403 #b00000000000000000000000000000000)))

(declare-fun b!86556 () Bool)

(assert (=> b!86556 (= e!56403 e!56404)))

(declare-fun c!14139 () Bool)

(assert (=> b!86556 (= c!14139 (validKeyInArray!0 (select (arr!1919 lt!40810) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(declare-fun d!22651 () Bool)

(declare-fun lt!41184 () (_ BitVec 32))

(assert (=> d!22651 (and (bvsge lt!41184 #b00000000000000000000000000000000) (bvsle lt!41184 (bvsub (size!2163 lt!40810) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)))))))

(assert (=> d!22651 (= lt!41184 e!56403)))

(declare-fun c!14138 () Bool)

(assert (=> d!22651 (= c!14138 (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001)))))

(assert (=> d!22651 (and (bvsle (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001)) (bvsge (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001) (size!2163 lt!40810)))))

(assert (=> d!22651 (= (arrayCountValidKeys!0 lt!40810 (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (bvadd (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) #b00000000000000000000000000000001)) lt!41184)))

(assert (= (and d!22651 c!14138) b!86557))

(assert (= (and d!22651 (not c!14138)) b!86556))

(assert (= (and b!86556 c!14139) b!86555))

(assert (= (and b!86556 (not c!14139)) b!86554))

(assert (= (or b!86555 b!86554) bm!8253))

(declare-fun m!91847 () Bool)

(assert (=> bm!8253 m!91847))

(assert (=> b!86556 m!91765))

(assert (=> b!86556 m!91765))

(assert (=> b!86556 m!91767))

(assert (=> d!22289 d!22651))

(assert (=> d!22289 d!22139))

(declare-fun d!22653 () Bool)

(declare-fun res!44524 () Bool)

(declare-fun e!56405 () Bool)

(assert (=> d!22653 (=> res!44524 e!56405)))

(assert (=> d!22653 (= res!44524 (= (select (arr!1919 lt!40824) #b00000000000000000000000000000000) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22653 (= (arrayContainsKey!0 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000) e!56405)))

(declare-fun b!86558 () Bool)

(declare-fun e!56406 () Bool)

(assert (=> b!86558 (= e!56405 e!56406)))

(declare-fun res!44525 () Bool)

(assert (=> b!86558 (=> (not res!44525) (not e!56406))))

(assert (=> b!86558 (= res!44525 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 lt!40824)))))

(declare-fun b!86559 () Bool)

(assert (=> b!86559 (= e!56406 (arrayContainsKey!0 lt!40824 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22653 (not res!44524)) b!86558))

(assert (= (and b!86558 res!44525) b!86559))

(declare-fun m!91849 () Bool)

(assert (=> d!22653 m!91849))

(assert (=> b!86559 m!89857))

(declare-fun m!91851 () Bool)

(assert (=> b!86559 m!91851))

(assert (=> d!22289 d!22653))

(declare-fun b!86560 () Bool)

(declare-fun e!56409 () Bool)

(declare-fun call!8257 () Bool)

(assert (=> b!86560 (= e!56409 call!8257)))

(declare-fun e!56410 () Bool)

(declare-fun b!86561 () Bool)

(assert (=> b!86561 (= e!56410 (contains!755 lt!40797 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) lt!40812)))))

(declare-fun b!86562 () Bool)

(assert (=> b!86562 (= e!56409 call!8257)))

(declare-fun c!14140 () Bool)

(declare-fun bm!8254 () Bool)

(assert (=> bm!8254 (= call!8257 (arrayNoDuplicates!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) (bvadd lt!40812 #b00000000000000000000000000000001) (ite c!14140 (Cons!1516 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) lt!40812) lt!40797) lt!40797)))))

(declare-fun d!22655 () Bool)

(declare-fun res!44526 () Bool)

(declare-fun e!56407 () Bool)

(assert (=> d!22655 (=> res!44526 e!56407)))

(assert (=> d!22655 (= res!44526 (bvsge lt!40812 (size!2163 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))))))))

(assert (=> d!22655 (= (arrayNoDuplicates!0 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16))) lt!40812 lt!40797) e!56407)))

(declare-fun b!86563 () Bool)

(declare-fun e!56408 () Bool)

(assert (=> b!86563 (= e!56408 e!56409)))

(assert (=> b!86563 (= c!14140 (validKeyInArray!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) lt!40812)))))

(declare-fun b!86564 () Bool)

(assert (=> b!86564 (= e!56407 e!56408)))

(declare-fun res!44527 () Bool)

(assert (=> b!86564 (=> (not res!44527) (not e!56408))))

(assert (=> b!86564 (= res!44527 (not e!56410))))

(declare-fun res!44528 () Bool)

(assert (=> b!86564 (=> (not res!44528) (not e!56410))))

(assert (=> b!86564 (= res!44528 (validKeyInArray!0 (select (arr!1919 (array!4030 (store (arr!1919 (_keys!4010 newMap!16)) (ite c!13889 (index!3112 lt!40535) (index!3109 lt!40535)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (size!2163 (_keys!4010 newMap!16)))) lt!40812)))))

(assert (= (and d!22655 (not res!44526)) b!86564))

(assert (= (and b!86564 res!44528) b!86561))

(assert (= (and b!86564 res!44527) b!86563))

(assert (= (and b!86563 c!14140) b!86560))

(assert (= (and b!86563 (not c!14140)) b!86562))

(assert (= (or b!86560 b!86562) bm!8254))

(declare-fun m!91853 () Bool)

(assert (=> b!86561 m!91853))

(assert (=> b!86561 m!91853))

(declare-fun m!91855 () Bool)

(assert (=> b!86561 m!91855))

(assert (=> bm!8254 m!91853))

(declare-fun m!91857 () Bool)

(assert (=> bm!8254 m!91857))

(assert (=> b!86563 m!91853))

(assert (=> b!86563 m!91853))

(declare-fun m!91859 () Bool)

(assert (=> b!86563 m!91859))

(assert (=> b!86564 m!91853))

(assert (=> b!86564 m!91853))

(assert (=> b!86564 m!91859))

(assert (=> d!22289 d!22655))

(declare-fun d!22657 () Bool)

(assert (=> d!22657 (= (apply!82 lt!40873 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (getValueByKey!140 (toList!746 lt!40873) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3671 () Bool)

(assert (= bs!3671 d!22657))

(assert (=> bs!3671 m!90363))

(declare-fun m!91861 () Bool)

(assert (=> bs!3671 m!91861))

(assert (=> bs!3671 m!91861))

(declare-fun m!91863 () Bool)

(assert (=> bs!3671 m!91863))

(assert (=> b!86023 d!22657))

(declare-fun d!22659 () Bool)

(declare-fun c!14141 () Bool)

(assert (=> d!22659 (= c!14141 ((_ is ValueCellFull!924) (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56411 () V!3027)

(assert (=> d!22659 (= (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56411)))

(declare-fun b!86565 () Bool)

(assert (=> b!86565 (= e!56411 (get!1196 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86566 () Bool)

(assert (=> b!86566 (= e!56411 (get!1197 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22659 c!14141) b!86565))

(assert (= (and d!22659 (not c!14141)) b!86566))

(assert (=> b!86565 m!90777))

(assert (=> b!86565 m!90373))

(declare-fun m!91865 () Bool)

(assert (=> b!86565 m!91865))

(assert (=> b!86566 m!90777))

(assert (=> b!86566 m!90373))

(declare-fun m!91867 () Bool)

(assert (=> b!86566 m!91867))

(assert (=> b!86023 d!22659))

(declare-fun d!22661 () Bool)

(assert (=> d!22661 (= (get!1198 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2649 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22273 d!22661))

(declare-fun b!86567 () Bool)

(declare-fun e!56412 () Option!146)

(assert (=> b!86567 (= e!56412 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40450)))))))

(declare-fun d!22663 () Bool)

(declare-fun c!14142 () Bool)

(assert (=> d!22663 (= c!14142 (and ((_ is Cons!1515) (toList!746 lt!40450)) (= (_1!1110 (h!2106 (toList!746 lt!40450))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22663 (= (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000) e!56412)))

(declare-fun b!86570 () Bool)

(declare-fun e!56413 () Option!146)

(assert (=> b!86570 (= e!56413 None!144)))

(declare-fun b!86569 () Bool)

(assert (=> b!86569 (= e!56413 (getValueByKey!140 (t!5240 (toList!746 lt!40450)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86568 () Bool)

(assert (=> b!86568 (= e!56412 e!56413)))

(declare-fun c!14143 () Bool)

(assert (=> b!86568 (= c!14143 (and ((_ is Cons!1515) (toList!746 lt!40450)) (not (= (_1!1110 (h!2106 (toList!746 lt!40450))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22663 c!14142) b!86567))

(assert (= (and d!22663 (not c!14142)) b!86568))

(assert (= (and b!86568 c!14143) b!86569))

(assert (= (and b!86568 (not c!14143)) b!86570))

(declare-fun m!91869 () Bool)

(assert (=> b!86569 m!91869))

(assert (=> d!22273 d!22663))

(assert (=> b!85791 d!22177))

(declare-fun d!22665 () Bool)

(assert (=> d!22665 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324)))))))

(declare-fun bs!3672 () Bool)

(assert (= bs!3672 d!22665))

(assert (=> bs!3672 m!90127))

(declare-fun m!91871 () Bool)

(assert (=> bs!3672 m!91871))

(assert (=> b!85764 d!22665))

(assert (=> b!85764 d!22257))

(declare-fun d!22667 () Bool)

(assert (=> d!22667 (= (isEmpty!337 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) (not ((_ is Some!145) (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(assert (=> d!22297 d!22667))

(declare-fun d!22669 () Bool)

(declare-fun e!56415 () Bool)

(assert (=> d!22669 e!56415))

(declare-fun res!44529 () Bool)

(assert (=> d!22669 (=> res!44529 e!56415)))

(declare-fun lt!41185 () Bool)

(assert (=> d!22669 (= res!44529 (not lt!41185))))

(declare-fun lt!41186 () Bool)

(assert (=> d!22669 (= lt!41185 lt!41186)))

(declare-fun lt!41188 () Unit!2517)

(declare-fun e!56414 () Unit!2517)

(assert (=> d!22669 (= lt!41188 e!56414)))

(declare-fun c!14144 () Bool)

(assert (=> d!22669 (= c!14144 lt!41186)))

(assert (=> d!22669 (= lt!41186 (containsKey!144 (toList!746 lt!40695) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22669 (= (contains!753 lt!40695 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41185)))

(declare-fun b!86571 () Bool)

(declare-fun lt!41187 () Unit!2517)

(assert (=> b!86571 (= e!56414 lt!41187)))

(assert (=> b!86571 (= lt!41187 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40695) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86571 (isDefined!93 (getValueByKey!140 (toList!746 lt!40695) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86572 () Bool)

(declare-fun Unit!2558 () Unit!2517)

(assert (=> b!86572 (= e!56414 Unit!2558)))

(declare-fun b!86573 () Bool)

(assert (=> b!86573 (= e!56415 (isDefined!93 (getValueByKey!140 (toList!746 lt!40695) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22669 c!14144) b!86571))

(assert (= (and d!22669 (not c!14144)) b!86572))

(assert (= (and d!22669 (not res!44529)) b!86573))

(declare-fun m!91873 () Bool)

(assert (=> d!22669 m!91873))

(declare-fun m!91875 () Bool)

(assert (=> b!86571 m!91875))

(declare-fun m!91877 () Bool)

(assert (=> b!86571 m!91877))

(assert (=> b!86571 m!91877))

(declare-fun m!91879 () Bool)

(assert (=> b!86571 m!91879))

(assert (=> b!86573 m!91877))

(assert (=> b!86573 m!91877))

(assert (=> b!86573 m!91879))

(assert (=> b!85870 d!22669))

(declare-fun d!22671 () Bool)

(assert (=> d!22671 (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))

(declare-fun lt!41191 () Unit!2517)

(declare-fun choose!512 (array!4029 array!4031 (_ BitVec 32) (_ BitVec 32) V!3027 V!3027 (_ BitVec 64) (_ BitVec 32) Int) Unit!2517)

(assert (=> d!22671 (= lt!41191 (choose!512 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22671 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22671 (= (lemmaArrayContainsKeyThenInListMap!19 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41191)))

(declare-fun bs!3673 () Bool)

(assert (= bs!3673 d!22671))

(assert (=> bs!3673 m!89981))

(assert (=> bs!3673 m!89981))

(assert (=> bs!3673 m!89857))

(assert (=> bs!3673 m!90077))

(assert (=> bs!3673 m!89857))

(declare-fun m!91881 () Bool)

(assert (=> bs!3673 m!91881))

(assert (=> bs!3673 m!90385))

(assert (=> b!85958 d!22671))

(assert (=> b!85958 d!22317))

(assert (=> b!85958 d!22319))

(declare-fun d!22673 () Bool)

(declare-fun lt!41192 () Bool)

(assert (=> d!22673 (= lt!41192 (select (content!89 lt!40625) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun e!56416 () Bool)

(assert (=> d!22673 (= lt!41192 e!56416)))

(declare-fun res!44530 () Bool)

(assert (=> d!22673 (=> (not res!44530) (not e!56416))))

(assert (=> d!22673 (= res!44530 ((_ is Cons!1515) lt!40625))))

(assert (=> d!22673 (= (contains!754 lt!40625 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) lt!41192)))

(declare-fun b!86574 () Bool)

(declare-fun e!56417 () Bool)

(assert (=> b!86574 (= e!56416 e!56417)))

(declare-fun res!44531 () Bool)

(assert (=> b!86574 (=> res!44531 e!56417)))

(assert (=> b!86574 (= res!44531 (= (h!2106 lt!40625) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun b!86575 () Bool)

(assert (=> b!86575 (= e!56417 (contains!754 (t!5240 lt!40625) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22673 res!44530) b!86574))

(assert (= (and b!86574 (not res!44531)) b!86575))

(declare-fun m!91883 () Bool)

(assert (=> d!22673 m!91883))

(declare-fun m!91885 () Bool)

(assert (=> d!22673 m!91885))

(declare-fun m!91887 () Bool)

(assert (=> b!86575 m!91887))

(assert (=> b!85754 d!22673))

(declare-fun b!86576 () Bool)

(declare-fun e!56420 () Bool)

(declare-fun call!8258 () Bool)

(assert (=> b!86576 (= e!56420 call!8258)))

(declare-fun b!86577 () Bool)

(declare-fun e!56421 () Bool)

(assert (=> b!86577 (= e!56421 (contains!755 Nil!1517 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(declare-fun b!86578 () Bool)

(assert (=> b!86578 (= e!56420 call!8258)))

(declare-fun bm!8255 () Bool)

(declare-fun c!14145 () Bool)

(assert (=> bm!8255 (= call!8258 (arrayNoDuplicates!0 (_keys!4010 (_2!1109 lt!40519)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14145 (Cons!1516 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000) Nil!1517) Nil!1517)))))

(declare-fun d!22675 () Bool)

(declare-fun res!44532 () Bool)

(declare-fun e!56418 () Bool)

(assert (=> d!22675 (=> res!44532 e!56418)))

(assert (=> d!22675 (= res!44532 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(assert (=> d!22675 (= (arrayNoDuplicates!0 (_keys!4010 (_2!1109 lt!40519)) #b00000000000000000000000000000000 Nil!1517) e!56418)))

(declare-fun b!86579 () Bool)

(declare-fun e!56419 () Bool)

(assert (=> b!86579 (= e!56419 e!56420)))

(assert (=> b!86579 (= c!14145 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(declare-fun b!86580 () Bool)

(assert (=> b!86580 (= e!56418 e!56419)))

(declare-fun res!44533 () Bool)

(assert (=> b!86580 (=> (not res!44533) (not e!56419))))

(assert (=> b!86580 (= res!44533 (not e!56421))))

(declare-fun res!44534 () Bool)

(assert (=> b!86580 (=> (not res!44534) (not e!56421))))

(assert (=> b!86580 (= res!44534 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(assert (= (and d!22675 (not res!44532)) b!86580))

(assert (= (and b!86580 res!44534) b!86577))

(assert (= (and b!86580 res!44533) b!86579))

(assert (= (and b!86579 c!14145) b!86576))

(assert (= (and b!86579 (not c!14145)) b!86578))

(assert (= (or b!86576 b!86578) bm!8255))

(declare-fun m!91889 () Bool)

(assert (=> b!86577 m!91889))

(assert (=> b!86577 m!91889))

(declare-fun m!91891 () Bool)

(assert (=> b!86577 m!91891))

(assert (=> bm!8255 m!91889))

(declare-fun m!91893 () Bool)

(assert (=> bm!8255 m!91893))

(assert (=> b!86579 m!91889))

(assert (=> b!86579 m!91889))

(declare-fun m!91895 () Bool)

(assert (=> b!86579 m!91895))

(assert (=> b!86580 m!91889))

(assert (=> b!86580 m!91889))

(assert (=> b!86580 m!91895))

(assert (=> b!85889 d!22675))

(declare-fun d!22677 () Bool)

(declare-fun res!44535 () Bool)

(declare-fun e!56422 () Bool)

(assert (=> d!22677 (=> res!44535 e!56422)))

(assert (=> d!22677 (= res!44535 (and ((_ is Cons!1515) lt!40559) (= (_1!1110 (h!2106 lt!40559)) (_1!1110 lt!40324))))))

(assert (=> d!22677 (= (containsKey!144 lt!40559 (_1!1110 lt!40324)) e!56422)))

(declare-fun b!86581 () Bool)

(declare-fun e!56423 () Bool)

(assert (=> b!86581 (= e!56422 e!56423)))

(declare-fun res!44536 () Bool)

(assert (=> b!86581 (=> (not res!44536) (not e!56423))))

(assert (=> b!86581 (= res!44536 (and (or (not ((_ is Cons!1515) lt!40559)) (bvsle (_1!1110 (h!2106 lt!40559)) (_1!1110 lt!40324))) ((_ is Cons!1515) lt!40559) (bvslt (_1!1110 (h!2106 lt!40559)) (_1!1110 lt!40324))))))

(declare-fun b!86582 () Bool)

(assert (=> b!86582 (= e!56423 (containsKey!144 (t!5240 lt!40559) (_1!1110 lt!40324)))))

(assert (= (and d!22677 (not res!44535)) b!86581))

(assert (= (and b!86581 res!44536) b!86582))

(declare-fun m!91897 () Bool)

(assert (=> b!86582 m!91897))

(assert (=> b!85769 d!22677))

(declare-fun b!86583 () Bool)

(declare-fun e!56425 () List!1519)

(declare-fun call!8260 () List!1519)

(assert (=> b!86583 (= e!56425 call!8260)))

(declare-fun b!86584 () Bool)

(assert (=> b!86584 (= e!56425 call!8260)))

(declare-fun b!86585 () Bool)

(declare-fun res!44537 () Bool)

(declare-fun e!56426 () Bool)

(assert (=> b!86585 (=> (not res!44537) (not e!56426))))

(declare-fun lt!41193 () List!1519)

(assert (=> b!86585 (= res!44537 (containsKey!144 lt!41193 (_1!1110 lt!40322)))))

(declare-fun b!86586 () Bool)

(declare-fun e!56427 () List!1519)

(declare-fun e!56428 () List!1519)

(assert (=> b!86586 (= e!56427 e!56428)))

(declare-fun c!14147 () Bool)

(assert (=> b!86586 (= c!14147 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40331))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331)))) (_1!1110 lt!40322))))))

(declare-fun b!86587 () Bool)

(declare-fun call!8259 () List!1519)

(assert (=> b!86587 (= e!56427 call!8259)))

(declare-fun b!86588 () Bool)

(declare-fun c!14149 () Bool)

(assert (=> b!86588 (= c!14149 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40331))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331)))) (_1!1110 lt!40322))))))

(assert (=> b!86588 (= e!56428 e!56425)))

(declare-fun b!86589 () Bool)

(declare-fun e!56424 () List!1519)

(assert (=> b!86589 (= e!56424 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 lt!40331))) (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun b!86590 () Bool)

(assert (=> b!86590 (= e!56424 (ite c!14147 (t!5240 (t!5240 (toList!746 lt!40331))) (ite c!14149 (Cons!1515 (h!2106 (t!5240 (toList!746 lt!40331))) (t!5240 (t!5240 (toList!746 lt!40331)))) Nil!1516)))))

(declare-fun bm!8256 () Bool)

(declare-fun c!14146 () Bool)

(assert (=> bm!8256 (= call!8259 ($colon$colon!72 e!56424 (ite c!14146 (h!2106 (t!5240 (toList!746 lt!40331))) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322)))))))

(declare-fun c!14148 () Bool)

(assert (=> bm!8256 (= c!14148 c!14146)))

(declare-fun bm!8257 () Bool)

(declare-fun call!8261 () List!1519)

(assert (=> bm!8257 (= call!8261 call!8259)))

(declare-fun bm!8258 () Bool)

(assert (=> bm!8258 (= call!8260 call!8261)))

(declare-fun b!86592 () Bool)

(assert (=> b!86592 (= e!56428 call!8261)))

(declare-fun d!22679 () Bool)

(assert (=> d!22679 e!56426))

(declare-fun res!44538 () Bool)

(assert (=> d!22679 (=> (not res!44538) (not e!56426))))

(assert (=> d!22679 (= res!44538 (isStrictlySorted!298 lt!41193))))

(assert (=> d!22679 (= lt!41193 e!56427)))

(assert (=> d!22679 (= c!14146 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40331))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331)))) (_1!1110 lt!40322))))))

(assert (=> d!22679 (isStrictlySorted!298 (t!5240 (toList!746 lt!40331)))))

(assert (=> d!22679 (= (insertStrictlySorted!60 (t!5240 (toList!746 lt!40331)) (_1!1110 lt!40322) (_2!1110 lt!40322)) lt!41193)))

(declare-fun b!86591 () Bool)

(assert (=> b!86591 (= e!56426 (contains!754 lt!41193 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22679 c!14146) b!86587))

(assert (= (and d!22679 (not c!14146)) b!86586))

(assert (= (and b!86586 c!14147) b!86592))

(assert (= (and b!86586 (not c!14147)) b!86588))

(assert (= (and b!86588 c!14149) b!86583))

(assert (= (and b!86588 (not c!14149)) b!86584))

(assert (= (or b!86583 b!86584) bm!8258))

(assert (= (or b!86592 bm!8258) bm!8257))

(assert (= (or b!86587 bm!8257) bm!8256))

(assert (= (and bm!8256 c!14148) b!86589))

(assert (= (and bm!8256 (not c!14148)) b!86590))

(assert (= (and d!22679 res!44538) b!86585))

(assert (= (and b!86585 res!44537) b!86591))

(declare-fun m!91899 () Bool)

(assert (=> d!22679 m!91899))

(declare-fun m!91901 () Bool)

(assert (=> d!22679 m!91901))

(declare-fun m!91903 () Bool)

(assert (=> b!86585 m!91903))

(declare-fun m!91905 () Bool)

(assert (=> b!86589 m!91905))

(declare-fun m!91907 () Bool)

(assert (=> b!86591 m!91907))

(declare-fun m!91909 () Bool)

(assert (=> bm!8256 m!91909))

(assert (=> b!86255 d!22679))

(declare-fun d!22681 () Bool)

(assert (=> d!22681 (= (apply!82 lt!40873 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40873) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3674 () Bool)

(assert (= bs!3674 d!22681))

(declare-fun m!91911 () Bool)

(assert (=> bs!3674 m!91911))

(assert (=> bs!3674 m!91911))

(declare-fun m!91913 () Bool)

(assert (=> bs!3674 m!91913))

(assert (=> b!86027 d!22681))

(declare-fun d!22683 () Bool)

(declare-fun e!56430 () Bool)

(assert (=> d!22683 e!56430))

(declare-fun res!44539 () Bool)

(assert (=> d!22683 (=> res!44539 e!56430)))

(declare-fun lt!41194 () Bool)

(assert (=> d!22683 (= res!44539 (not lt!41194))))

(declare-fun lt!41195 () Bool)

(assert (=> d!22683 (= lt!41194 lt!41195)))

(declare-fun lt!41197 () Unit!2517)

(declare-fun e!56429 () Unit!2517)

(assert (=> d!22683 (= lt!41197 e!56429)))

(declare-fun c!14150 () Bool)

(assert (=> d!22683 (= c!14150 lt!41195)))

(assert (=> d!22683 (= lt!41195 (containsKey!144 (toList!746 lt!40693) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22683 (= (contains!753 lt!40693 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41194)))

(declare-fun b!86593 () Bool)

(declare-fun lt!41196 () Unit!2517)

(assert (=> b!86593 (= e!56429 lt!41196)))

(assert (=> b!86593 (= lt!41196 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40693) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86593 (isDefined!93 (getValueByKey!140 (toList!746 lt!40693) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86594 () Bool)

(declare-fun Unit!2559 () Unit!2517)

(assert (=> b!86594 (= e!56429 Unit!2559)))

(declare-fun b!86595 () Bool)

(assert (=> b!86595 (= e!56430 (isDefined!93 (getValueByKey!140 (toList!746 lt!40693) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22683 c!14150) b!86593))

(assert (= (and d!22683 (not c!14150)) b!86594))

(assert (= (and d!22683 (not res!44539)) b!86595))

(declare-fun m!91915 () Bool)

(assert (=> d!22683 m!91915))

(declare-fun m!91917 () Bool)

(assert (=> b!86593 m!91917))

(assert (=> b!86593 m!90513))

(assert (=> b!86593 m!90513))

(declare-fun m!91919 () Bool)

(assert (=> b!86593 m!91919))

(assert (=> b!86595 m!90513))

(assert (=> b!86595 m!90513))

(assert (=> b!86595 m!91919))

(assert (=> d!22253 d!22683))

(declare-fun b!86596 () Bool)

(declare-fun e!56431 () Option!146)

(assert (=> b!86596 (= e!56431 (Some!145 (_2!1110 (h!2106 lt!40692))))))

(declare-fun d!22685 () Bool)

(declare-fun c!14151 () Bool)

(assert (=> d!22685 (= c!14151 (and ((_ is Cons!1515) lt!40692) (= (_1!1110 (h!2106 lt!40692)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22685 (= (getValueByKey!140 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56431)))

(declare-fun b!86599 () Bool)

(declare-fun e!56432 () Option!146)

(assert (=> b!86599 (= e!56432 None!144)))

(declare-fun b!86598 () Bool)

(assert (=> b!86598 (= e!56432 (getValueByKey!140 (t!5240 lt!40692) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86597 () Bool)

(assert (=> b!86597 (= e!56431 e!56432)))

(declare-fun c!14152 () Bool)

(assert (=> b!86597 (= c!14152 (and ((_ is Cons!1515) lt!40692) (not (= (_1!1110 (h!2106 lt!40692)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22685 c!14151) b!86596))

(assert (= (and d!22685 (not c!14151)) b!86597))

(assert (= (and b!86597 c!14152) b!86598))

(assert (= (and b!86597 (not c!14152)) b!86599))

(declare-fun m!91921 () Bool)

(assert (=> b!86598 m!91921))

(assert (=> d!22253 d!22685))

(declare-fun d!22687 () Bool)

(assert (=> d!22687 (= (getValueByKey!140 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41198 () Unit!2517)

(assert (=> d!22687 (= lt!41198 (choose!500 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56433 () Bool)

(assert (=> d!22687 e!56433))

(declare-fun res!44540 () Bool)

(assert (=> d!22687 (=> (not res!44540) (not e!56433))))

(assert (=> d!22687 (= res!44540 (isStrictlySorted!298 lt!40692))))

(assert (=> d!22687 (= (lemmaContainsTupThenGetReturnValue!57 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41198)))

(declare-fun b!86600 () Bool)

(declare-fun res!44541 () Bool)

(assert (=> b!86600 (=> (not res!44541) (not e!56433))))

(assert (=> b!86600 (= res!44541 (containsKey!144 lt!40692 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86601 () Bool)

(assert (=> b!86601 (= e!56433 (contains!754 lt!40692 (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22687 res!44540) b!86600))

(assert (= (and b!86600 res!44541) b!86601))

(assert (=> d!22687 m!90507))

(declare-fun m!91923 () Bool)

(assert (=> d!22687 m!91923))

(declare-fun m!91925 () Bool)

(assert (=> d!22687 m!91925))

(declare-fun m!91927 () Bool)

(assert (=> b!86600 m!91927))

(declare-fun m!91929 () Bool)

(assert (=> b!86601 m!91929))

(assert (=> d!22253 d!22687))

(declare-fun b!86602 () Bool)

(declare-fun e!56435 () List!1519)

(declare-fun call!8263 () List!1519)

(assert (=> b!86602 (= e!56435 call!8263)))

(declare-fun b!86603 () Bool)

(assert (=> b!86603 (= e!56435 call!8263)))

(declare-fun b!86604 () Bool)

(declare-fun res!44542 () Bool)

(declare-fun e!56436 () Bool)

(assert (=> b!86604 (=> (not res!44542) (not e!56436))))

(declare-fun lt!41199 () List!1519)

(assert (=> b!86604 (= res!44542 (containsKey!144 lt!41199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86605 () Bool)

(declare-fun e!56437 () List!1519)

(declare-fun e!56438 () List!1519)

(assert (=> b!86605 (= e!56437 e!56438)))

(declare-fun c!14154 () Bool)

(assert (=> b!86605 (= c!14154 (and ((_ is Cons!1515) (toList!746 lt!40331)) (= (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86606 () Bool)

(declare-fun call!8262 () List!1519)

(assert (=> b!86606 (= e!56437 call!8262)))

(declare-fun b!86607 () Bool)

(declare-fun c!14156 () Bool)

(assert (=> b!86607 (= c!14156 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86607 (= e!56438 e!56435)))

(declare-fun b!86608 () Bool)

(declare-fun e!56434 () List!1519)

(assert (=> b!86608 (= e!56434 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40331)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86609 () Bool)

(assert (=> b!86609 (= e!56434 (ite c!14154 (t!5240 (toList!746 lt!40331)) (ite c!14156 (Cons!1515 (h!2106 (toList!746 lt!40331)) (t!5240 (toList!746 lt!40331))) Nil!1516)))))

(declare-fun bm!8259 () Bool)

(declare-fun c!14153 () Bool)

(assert (=> bm!8259 (= call!8262 ($colon$colon!72 e!56434 (ite c!14153 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14155 () Bool)

(assert (=> bm!8259 (= c!14155 c!14153)))

(declare-fun bm!8260 () Bool)

(declare-fun call!8264 () List!1519)

(assert (=> bm!8260 (= call!8264 call!8262)))

(declare-fun bm!8261 () Bool)

(assert (=> bm!8261 (= call!8263 call!8264)))

(declare-fun b!86611 () Bool)

(assert (=> b!86611 (= e!56438 call!8264)))

(declare-fun d!22689 () Bool)

(assert (=> d!22689 e!56436))

(declare-fun res!44543 () Bool)

(assert (=> d!22689 (=> (not res!44543) (not e!56436))))

(assert (=> d!22689 (= res!44543 (isStrictlySorted!298 lt!41199))))

(assert (=> d!22689 (= lt!41199 e!56437)))

(assert (=> d!22689 (= c!14153 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22689 (isStrictlySorted!298 (toList!746 lt!40331))))

(assert (=> d!22689 (= (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41199)))

(declare-fun b!86610 () Bool)

(assert (=> b!86610 (= e!56436 (contains!754 lt!41199 (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22689 c!14153) b!86606))

(assert (= (and d!22689 (not c!14153)) b!86605))

(assert (= (and b!86605 c!14154) b!86611))

(assert (= (and b!86605 (not c!14154)) b!86607))

(assert (= (and b!86607 c!14156) b!86602))

(assert (= (and b!86607 (not c!14156)) b!86603))

(assert (= (or b!86602 b!86603) bm!8261))

(assert (= (or b!86611 bm!8261) bm!8260))

(assert (= (or b!86606 bm!8260) bm!8259))

(assert (= (and bm!8259 c!14155) b!86608))

(assert (= (and bm!8259 (not c!14155)) b!86609))

(assert (= (and d!22689 res!44543) b!86604))

(assert (= (and b!86604 res!44542) b!86610))

(declare-fun m!91931 () Bool)

(assert (=> d!22689 m!91931))

(assert (=> d!22689 m!90273))

(declare-fun m!91933 () Bool)

(assert (=> b!86604 m!91933))

(declare-fun m!91935 () Bool)

(assert (=> b!86608 m!91935))

(declare-fun m!91937 () Bool)

(assert (=> b!86610 m!91937))

(declare-fun m!91939 () Bool)

(assert (=> bm!8259 m!91939))

(assert (=> d!22253 d!22689))

(assert (=> d!22341 d!22445))

(assert (=> d!22319 d!22445))

(declare-fun d!22691 () Bool)

(declare-fun c!14159 () Bool)

(assert (=> d!22691 (= c!14159 ((_ is Nil!1516) (toList!746 lt!40556)))))

(declare-fun e!56441 () (InoxSet tuple2!2198))

(assert (=> d!22691 (= (content!89 (toList!746 lt!40556)) e!56441)))

(declare-fun b!86616 () Bool)

(assert (=> b!86616 (= e!56441 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!86617 () Bool)

(assert (=> b!86617 (= e!56441 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40556)) true) (content!89 (t!5240 (toList!746 lt!40556)))))))

(assert (= (and d!22691 c!14159) b!86616))

(assert (= (and d!22691 (not c!14159)) b!86617))

(declare-fun m!91941 () Bool)

(assert (=> b!86617 m!91941))

(declare-fun m!91943 () Bool)

(assert (=> b!86617 m!91943))

(assert (=> d!22337 d!22691))

(declare-fun d!22693 () Bool)

(assert (=> d!22693 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22693 true))

(declare-fun _$7!74 () Unit!2517)

(assert (=> d!22693 (= (choose!503 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40541 (zeroValue!2230 newMap!16) lt!40326 (minValue!2230 newMap!16) (defaultEntry!2338 newMap!16)) _$7!74)))

(declare-fun bs!3675 () Bool)

(assert (= bs!3675 d!22693))

(assert (=> bs!3675 m!89981))

(assert (=> bs!3675 m!89981))

(assert (=> bs!3675 m!90621))

(assert (=> bs!3675 m!90617))

(assert (=> d!22281 d!22693))

(assert (=> d!22281 d!22319))

(declare-fun b!86618 () Bool)

(declare-fun c!14164 () Bool)

(assert (=> b!86618 (= c!14164 (and (not (= (bvand lt!40541 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40541 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56451 () ListLongMap!1461)

(declare-fun e!56452 () ListLongMap!1461)

(assert (=> b!86618 (= e!56451 e!56452)))

(declare-fun b!86619 () Bool)

(declare-fun res!44546 () Bool)

(declare-fun e!56444 () Bool)

(assert (=> b!86619 (=> (not res!44546) (not e!56444))))

(declare-fun e!56449 () Bool)

(assert (=> b!86619 (= res!44546 e!56449)))

(declare-fun res!44544 () Bool)

(assert (=> b!86619 (=> res!44544 e!56449)))

(declare-fun e!56443 () Bool)

(assert (=> b!86619 (= res!44544 (not e!56443))))

(declare-fun res!44547 () Bool)

(assert (=> b!86619 (=> (not res!44547) (not e!56443))))

(assert (=> b!86619 (= res!44547 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun call!8269 () ListLongMap!1461)

(declare-fun bm!8262 () Bool)

(assert (=> bm!8262 (= call!8269 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86620 () Bool)

(declare-fun e!56454 () Bool)

(declare-fun lt!41219 () ListLongMap!1461)

(assert (=> b!86620 (= e!56454 (= (apply!82 lt!41219 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40326))))

(declare-fun b!86621 () Bool)

(declare-fun e!56447 () Bool)

(assert (=> b!86621 (= e!56449 e!56447)))

(declare-fun res!44548 () Bool)

(assert (=> b!86621 (=> (not res!44548) (not e!56447))))

(assert (=> b!86621 (= res!44548 (contains!753 lt!41219 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86621 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86622 () Bool)

(declare-fun e!56453 () Bool)

(assert (=> b!86622 (= e!56444 e!56453)))

(declare-fun c!14161 () Bool)

(assert (=> b!86622 (= c!14161 (not (= (bvand lt!40541 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86623 () Bool)

(declare-fun e!56442 () Bool)

(assert (=> b!86623 (= e!56453 e!56442)))

(declare-fun res!44549 () Bool)

(declare-fun call!8268 () Bool)

(assert (=> b!86623 (= res!44549 call!8268)))

(assert (=> b!86623 (=> (not res!44549) (not e!56442))))

(declare-fun call!8271 () ListLongMap!1461)

(declare-fun call!8266 () ListLongMap!1461)

(declare-fun c!14163 () Bool)

(declare-fun c!14165 () Bool)

(declare-fun call!8265 () ListLongMap!1461)

(declare-fun bm!8263 () Bool)

(assert (=> bm!8263 (= call!8265 (+!110 (ite c!14165 call!8269 (ite c!14163 call!8271 call!8266)) (ite (or c!14165 c!14163) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!86624 () Bool)

(declare-fun call!8270 () ListLongMap!1461)

(assert (=> b!86624 (= e!56452 call!8270)))

(declare-fun b!86625 () Bool)

(declare-fun e!56450 () Bool)

(declare-fun call!8267 () Bool)

(assert (=> b!86625 (= e!56450 (not call!8267))))

(declare-fun b!86626 () Bool)

(declare-fun e!56448 () Bool)

(assert (=> b!86626 (= e!56448 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86627 () Bool)

(declare-fun res!44552 () Bool)

(assert (=> b!86627 (=> (not res!44552) (not e!56444))))

(assert (=> b!86627 (= res!44552 e!56450)))

(declare-fun c!14160 () Bool)

(assert (=> b!86627 (= c!14160 (not (= (bvand lt!40541 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86628 () Bool)

(assert (=> b!86628 (= e!56453 (not call!8268))))

(declare-fun b!86629 () Bool)

(assert (=> b!86629 (= e!56452 call!8266)))

(declare-fun b!86630 () Bool)

(assert (=> b!86630 (= e!56450 e!56454)))

(declare-fun res!44550 () Bool)

(assert (=> b!86630 (= res!44550 call!8267)))

(assert (=> b!86630 (=> (not res!44550) (not e!56454))))

(declare-fun b!86631 () Bool)

(declare-fun e!56446 () ListLongMap!1461)

(assert (=> b!86631 (= e!56446 (+!110 call!8265 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!22695 () Bool)

(assert (=> d!22695 e!56444))

(declare-fun res!44545 () Bool)

(assert (=> d!22695 (=> (not res!44545) (not e!56444))))

(assert (=> d!22695 (= res!44545 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!41201 () ListLongMap!1461)

(assert (=> d!22695 (= lt!41219 lt!41201)))

(declare-fun lt!41211 () Unit!2517)

(declare-fun e!56445 () Unit!2517)

(assert (=> d!22695 (= lt!41211 e!56445)))

(declare-fun c!14162 () Bool)

(assert (=> d!22695 (= c!14162 e!56448)))

(declare-fun res!44551 () Bool)

(assert (=> d!22695 (=> (not res!44551) (not e!56448))))

(assert (=> d!22695 (= res!44551 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22695 (= lt!41201 e!56446)))

(assert (=> d!22695 (= c!14165 (and (not (= (bvand lt!40541 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40541 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22695 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22695 (= (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41219)))

(declare-fun b!86632 () Bool)

(assert (=> b!86632 (= e!56451 call!8270)))

(declare-fun b!86633 () Bool)

(assert (=> b!86633 (= e!56447 (= (apply!82 lt!41219 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (_values!2321 newMap!16))))))

(assert (=> b!86633 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86634 () Bool)

(assert (=> b!86634 (= e!56446 e!56451)))

(assert (=> b!86634 (= c!14163 (and (not (= (bvand lt!40541 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40541 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86635 () Bool)

(assert (=> b!86635 (= e!56443 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8264 () Bool)

(assert (=> bm!8264 (= call!8267 (contains!753 lt!41219 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8265 () Bool)

(assert (=> bm!8265 (= call!8270 call!8265)))

(declare-fun b!86636 () Bool)

(declare-fun Unit!2560 () Unit!2517)

(assert (=> b!86636 (= e!56445 Unit!2560)))

(declare-fun bm!8266 () Bool)

(assert (=> bm!8266 (= call!8266 call!8271)))

(declare-fun bm!8267 () Bool)

(assert (=> bm!8267 (= call!8268 (contains!753 lt!41219 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8268 () Bool)

(assert (=> bm!8268 (= call!8271 call!8269)))

(declare-fun b!86637 () Bool)

(assert (=> b!86637 (= e!56442 (= (apply!82 lt!41219 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!86638 () Bool)

(declare-fun lt!41204 () Unit!2517)

(assert (=> b!86638 (= e!56445 lt!41204)))

(declare-fun lt!41206 () ListLongMap!1461)

(assert (=> b!86638 (= lt!41206 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41215 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41215 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41213 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41213 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41205 () Unit!2517)

(assert (=> b!86638 (= lt!41205 (addStillContains!58 lt!41206 lt!41215 lt!40326 lt!41213))))

(assert (=> b!86638 (contains!753 (+!110 lt!41206 (tuple2!2199 lt!41215 lt!40326)) lt!41213)))

(declare-fun lt!41212 () Unit!2517)

(assert (=> b!86638 (= lt!41212 lt!41205)))

(declare-fun lt!41218 () ListLongMap!1461)

(assert (=> b!86638 (= lt!41218 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41217 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41217 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41216 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41216 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41221 () Unit!2517)

(assert (=> b!86638 (= lt!41221 (addApplyDifferent!58 lt!41218 lt!41217 (minValue!2230 newMap!16) lt!41216))))

(assert (=> b!86638 (= (apply!82 (+!110 lt!41218 (tuple2!2199 lt!41217 (minValue!2230 newMap!16))) lt!41216) (apply!82 lt!41218 lt!41216))))

(declare-fun lt!41202 () Unit!2517)

(assert (=> b!86638 (= lt!41202 lt!41221)))

(declare-fun lt!41210 () ListLongMap!1461)

(assert (=> b!86638 (= lt!41210 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41200 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41200 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41208 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41208 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41203 () Unit!2517)

(assert (=> b!86638 (= lt!41203 (addApplyDifferent!58 lt!41210 lt!41200 lt!40326 lt!41208))))

(assert (=> b!86638 (= (apply!82 (+!110 lt!41210 (tuple2!2199 lt!41200 lt!40326)) lt!41208) (apply!82 lt!41210 lt!41208))))

(declare-fun lt!41207 () Unit!2517)

(assert (=> b!86638 (= lt!41207 lt!41203)))

(declare-fun lt!41220 () ListLongMap!1461)

(assert (=> b!86638 (= lt!41220 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40541 lt!40326 (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41214 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41214 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41209 () (_ BitVec 64))

(assert (=> b!86638 (= lt!41209 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86638 (= lt!41204 (addApplyDifferent!58 lt!41220 lt!41214 (minValue!2230 newMap!16) lt!41209))))

(assert (=> b!86638 (= (apply!82 (+!110 lt!41220 (tuple2!2199 lt!41214 (minValue!2230 newMap!16))) lt!41209) (apply!82 lt!41220 lt!41209))))

(assert (= (and d!22695 c!14165) b!86631))

(assert (= (and d!22695 (not c!14165)) b!86634))

(assert (= (and b!86634 c!14163) b!86632))

(assert (= (and b!86634 (not c!14163)) b!86618))

(assert (= (and b!86618 c!14164) b!86624))

(assert (= (and b!86618 (not c!14164)) b!86629))

(assert (= (or b!86624 b!86629) bm!8266))

(assert (= (or b!86632 bm!8266) bm!8268))

(assert (= (or b!86632 b!86624) bm!8265))

(assert (= (or b!86631 bm!8268) bm!8262))

(assert (= (or b!86631 bm!8265) bm!8263))

(assert (= (and d!22695 res!44551) b!86626))

(assert (= (and d!22695 c!14162) b!86638))

(assert (= (and d!22695 (not c!14162)) b!86636))

(assert (= (and d!22695 res!44545) b!86619))

(assert (= (and b!86619 res!44547) b!86635))

(assert (= (and b!86619 (not res!44544)) b!86621))

(assert (= (and b!86621 res!44548) b!86633))

(assert (= (and b!86619 res!44546) b!86627))

(assert (= (and b!86627 c!14160) b!86630))

(assert (= (and b!86627 (not c!14160)) b!86625))

(assert (= (and b!86630 res!44550) b!86620))

(assert (= (or b!86630 b!86625) bm!8264))

(assert (= (and b!86627 res!44552) b!86622))

(assert (= (and b!86622 c!14161) b!86623))

(assert (= (and b!86622 (not c!14161)) b!86628))

(assert (= (and b!86623 res!44549) b!86637))

(assert (= (or b!86623 b!86628) bm!8267))

(declare-fun b_lambda!3851 () Bool)

(assert (=> (not b_lambda!3851) (not b!86633)))

(assert (=> b!86633 t!5248))

(declare-fun b_and!5251 () Bool)

(assert (= b_and!5247 (and (=> t!5248 result!2927) b_and!5251)))

(assert (=> b!86633 t!5250))

(declare-fun b_and!5253 () Bool)

(assert (= b_and!5249 (and (=> t!5250 result!2929) b_and!5253)))

(assert (=> b!86635 m!90363))

(assert (=> b!86635 m!90363))

(assert (=> b!86635 m!90365))

(declare-fun m!91945 () Bool)

(assert (=> b!86637 m!91945))

(declare-fun m!91947 () Bool)

(assert (=> bm!8262 m!91947))

(declare-fun m!91949 () Bool)

(assert (=> bm!8264 m!91949))

(assert (=> b!86633 m!90373))

(assert (=> b!86633 m!90363))

(declare-fun m!91951 () Bool)

(assert (=> b!86633 m!91951))

(assert (=> b!86633 m!90363))

(assert (=> b!86633 m!90777))

(assert (=> b!86633 m!90777))

(assert (=> b!86633 m!90373))

(assert (=> b!86633 m!90779))

(assert (=> b!86621 m!90363))

(assert (=> b!86621 m!90363))

(declare-fun m!91953 () Bool)

(assert (=> b!86621 m!91953))

(declare-fun m!91955 () Bool)

(assert (=> b!86631 m!91955))

(assert (=> d!22695 m!90385))

(declare-fun m!91957 () Bool)

(assert (=> bm!8267 m!91957))

(declare-fun m!91959 () Bool)

(assert (=> b!86638 m!91959))

(declare-fun m!91961 () Bool)

(assert (=> b!86638 m!91961))

(declare-fun m!91963 () Bool)

(assert (=> b!86638 m!91963))

(assert (=> b!86638 m!90363))

(declare-fun m!91965 () Bool)

(assert (=> b!86638 m!91965))

(declare-fun m!91967 () Bool)

(assert (=> b!86638 m!91967))

(declare-fun m!91969 () Bool)

(assert (=> b!86638 m!91969))

(declare-fun m!91971 () Bool)

(assert (=> b!86638 m!91971))

(declare-fun m!91973 () Bool)

(assert (=> b!86638 m!91973))

(declare-fun m!91975 () Bool)

(assert (=> b!86638 m!91975))

(declare-fun m!91977 () Bool)

(assert (=> b!86638 m!91977))

(assert (=> b!86638 m!91961))

(assert (=> b!86638 m!91967))

(declare-fun m!91979 () Bool)

(assert (=> b!86638 m!91979))

(declare-fun m!91981 () Bool)

(assert (=> b!86638 m!91981))

(declare-fun m!91983 () Bool)

(assert (=> b!86638 m!91983))

(assert (=> b!86638 m!91971))

(assert (=> b!86638 m!91981))

(assert (=> b!86638 m!91947))

(declare-fun m!91985 () Bool)

(assert (=> b!86638 m!91985))

(declare-fun m!91987 () Bool)

(assert (=> b!86638 m!91987))

(assert (=> b!86626 m!90363))

(assert (=> b!86626 m!90363))

(assert (=> b!86626 m!90365))

(declare-fun m!91989 () Bool)

(assert (=> b!86620 m!91989))

(declare-fun m!91991 () Bool)

(assert (=> bm!8263 m!91991))

(assert (=> d!22281 d!22695))

(assert (=> d!22281 d!22445))

(declare-fun d!22697 () Bool)

(declare-fun e!56455 () Bool)

(assert (=> d!22697 e!56455))

(declare-fun res!44553 () Bool)

(assert (=> d!22697 (=> (not res!44553) (not e!56455))))

(declare-fun lt!41224 () ListLongMap!1461)

(assert (=> d!22697 (= res!44553 (contains!753 lt!41224 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(declare-fun lt!41223 () List!1519)

(assert (=> d!22697 (= lt!41224 (ListLongMap!1462 lt!41223))))

(declare-fun lt!41225 () Unit!2517)

(declare-fun lt!41222 () Unit!2517)

(assert (=> d!22697 (= lt!41225 lt!41222)))

(assert (=> d!22697 (= (getValueByKey!140 lt!41223 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(assert (=> d!22697 (= lt!41222 (lemmaContainsTupThenGetReturnValue!57 lt!41223 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(assert (=> d!22697 (= lt!41223 (insertStrictlySorted!60 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(assert (=> d!22697 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)) lt!41224)))

(declare-fun b!86639 () Bool)

(declare-fun res!44554 () Bool)

(assert (=> b!86639 (=> (not res!44554) (not e!56455))))

(assert (=> b!86639 (= res!44554 (= (getValueByKey!140 (toList!746 lt!41224) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)))))))

(declare-fun b!86640 () Bool)

(assert (=> b!86640 (= e!56455 (contains!754 (toList!746 lt!41224) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326)))))

(assert (= (and d!22697 res!44553) b!86639))

(assert (= (and b!86639 res!44554) b!86640))

(declare-fun m!91993 () Bool)

(assert (=> d!22697 m!91993))

(declare-fun m!91995 () Bool)

(assert (=> d!22697 m!91995))

(declare-fun m!91997 () Bool)

(assert (=> d!22697 m!91997))

(declare-fun m!91999 () Bool)

(assert (=> d!22697 m!91999))

(declare-fun m!92001 () Bool)

(assert (=> b!86639 m!92001))

(declare-fun m!92003 () Bool)

(assert (=> b!86640 m!92003))

(assert (=> d!22281 d!22697))

(declare-fun b!86641 () Bool)

(declare-fun c!14170 () Bool)

(assert (=> b!86641 (= c!14170 (and (not (= (bvand lt!40521 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40521 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56465 () ListLongMap!1461)

(declare-fun e!56466 () ListLongMap!1461)

(assert (=> b!86641 (= e!56465 e!56466)))

(declare-fun b!86642 () Bool)

(declare-fun res!44557 () Bool)

(declare-fun e!56458 () Bool)

(assert (=> b!86642 (=> (not res!44557) (not e!56458))))

(declare-fun e!56463 () Bool)

(assert (=> b!86642 (= res!44557 e!56463)))

(declare-fun res!44555 () Bool)

(assert (=> b!86642 (=> res!44555 e!56463)))

(declare-fun e!56457 () Bool)

(assert (=> b!86642 (= res!44555 (not e!56457))))

(declare-fun res!44558 () Bool)

(assert (=> b!86642 (=> (not res!44558) (not e!56457))))

(assert (=> b!86642 (= res!44558 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun bm!8269 () Bool)

(declare-fun call!8276 () ListLongMap!1461)

(assert (=> bm!8269 (= call!8276 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!86643 () Bool)

(declare-fun e!56468 () Bool)

(declare-fun lt!41245 () ListLongMap!1461)

(assert (=> b!86643 (= e!56468 (= (apply!82 lt!41245 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!86644 () Bool)

(declare-fun e!56461 () Bool)

(assert (=> b!86644 (= e!56463 e!56461)))

(declare-fun res!44559 () Bool)

(assert (=> b!86644 (=> (not res!44559) (not e!56461))))

(assert (=> b!86644 (= res!44559 (contains!753 lt!41245 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86644 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86645 () Bool)

(declare-fun e!56467 () Bool)

(assert (=> b!86645 (= e!56458 e!56467)))

(declare-fun c!14167 () Bool)

(assert (=> b!86645 (= c!14167 (not (= (bvand lt!40521 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86646 () Bool)

(declare-fun e!56456 () Bool)

(assert (=> b!86646 (= e!56467 e!56456)))

(declare-fun res!44560 () Bool)

(declare-fun call!8275 () Bool)

(assert (=> b!86646 (= res!44560 call!8275)))

(assert (=> b!86646 (=> (not res!44560) (not e!56456))))

(declare-fun call!8272 () ListLongMap!1461)

(declare-fun c!14171 () Bool)

(declare-fun c!14169 () Bool)

(declare-fun call!8278 () ListLongMap!1461)

(declare-fun call!8273 () ListLongMap!1461)

(declare-fun bm!8270 () Bool)

(assert (=> bm!8270 (= call!8272 (+!110 (ite c!14171 call!8276 (ite c!14169 call!8278 call!8273)) (ite (or c!14171 c!14169) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(declare-fun b!86647 () Bool)

(declare-fun call!8277 () ListLongMap!1461)

(assert (=> b!86647 (= e!56466 call!8277)))

(declare-fun b!86648 () Bool)

(declare-fun e!56464 () Bool)

(declare-fun call!8274 () Bool)

(assert (=> b!86648 (= e!56464 (not call!8274))))

(declare-fun b!86649 () Bool)

(declare-fun e!56462 () Bool)

(assert (=> b!86649 (= e!56462 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86650 () Bool)

(declare-fun res!44563 () Bool)

(assert (=> b!86650 (=> (not res!44563) (not e!56458))))

(assert (=> b!86650 (= res!44563 e!56464)))

(declare-fun c!14166 () Bool)

(assert (=> b!86650 (= c!14166 (not (= (bvand lt!40521 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!86651 () Bool)

(assert (=> b!86651 (= e!56467 (not call!8275))))

(declare-fun b!86652 () Bool)

(assert (=> b!86652 (= e!56466 call!8273)))

(declare-fun b!86653 () Bool)

(assert (=> b!86653 (= e!56464 e!56468)))

(declare-fun res!44561 () Bool)

(assert (=> b!86653 (= res!44561 call!8274)))

(assert (=> b!86653 (=> (not res!44561) (not e!56468))))

(declare-fun b!86654 () Bool)

(declare-fun e!56460 () ListLongMap!1461)

(assert (=> b!86654 (= e!56460 (+!110 call!8272 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)))))

(declare-fun d!22699 () Bool)

(assert (=> d!22699 e!56458))

(declare-fun res!44556 () Bool)

(assert (=> d!22699 (=> (not res!44556) (not e!56458))))

(assert (=> d!22699 (= res!44556 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!41227 () ListLongMap!1461)

(assert (=> d!22699 (= lt!41245 lt!41227)))

(declare-fun lt!41237 () Unit!2517)

(declare-fun e!56459 () Unit!2517)

(assert (=> d!22699 (= lt!41237 e!56459)))

(declare-fun c!14168 () Bool)

(assert (=> d!22699 (= c!14168 e!56462)))

(declare-fun res!44562 () Bool)

(assert (=> d!22699 (=> (not res!44562) (not e!56462))))

(assert (=> d!22699 (= res!44562 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22699 (= lt!41227 e!56460)))

(assert (=> d!22699 (= c!14171 (and (not (= (bvand lt!40521 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40521 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22699 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22699 (= (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41245)))

(declare-fun b!86655 () Bool)

(assert (=> b!86655 (= e!56465 call!8277)))

(declare-fun b!86656 () Bool)

(assert (=> b!86656 (= e!56461 (= (apply!82 lt!41245 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (_values!2321 newMap!16)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86656 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (_values!2321 newMap!16))))))

(assert (=> b!86656 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!86657 () Bool)

(assert (=> b!86657 (= e!56460 e!56465)))

(assert (=> b!86657 (= c!14169 (and (not (= (bvand lt!40521 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40521 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86658 () Bool)

(assert (=> b!86658 (= e!56457 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8271 () Bool)

(assert (=> bm!8271 (= call!8274 (contains!753 lt!41245 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8272 () Bool)

(assert (=> bm!8272 (= call!8277 call!8272)))

(declare-fun b!86659 () Bool)

(declare-fun Unit!2561 () Unit!2517)

(assert (=> b!86659 (= e!56459 Unit!2561)))

(declare-fun bm!8273 () Bool)

(assert (=> bm!8273 (= call!8273 call!8278)))

(declare-fun bm!8274 () Bool)

(assert (=> bm!8274 (= call!8275 (contains!753 lt!41245 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8275 () Bool)

(assert (=> bm!8275 (= call!8278 call!8276)))

(declare-fun b!86660 () Bool)

(assert (=> b!86660 (= e!56456 (= (apply!82 lt!41245 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40326))))

(declare-fun b!86661 () Bool)

(declare-fun lt!41230 () Unit!2517)

(assert (=> b!86661 (= e!56459 lt!41230)))

(declare-fun lt!41232 () ListLongMap!1461)

(assert (=> b!86661 (= lt!41232 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41241 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41241 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41239 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41239 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41231 () Unit!2517)

(assert (=> b!86661 (= lt!41231 (addStillContains!58 lt!41232 lt!41241 (zeroValue!2230 newMap!16) lt!41239))))

(assert (=> b!86661 (contains!753 (+!110 lt!41232 (tuple2!2199 lt!41241 (zeroValue!2230 newMap!16))) lt!41239)))

(declare-fun lt!41238 () Unit!2517)

(assert (=> b!86661 (= lt!41238 lt!41231)))

(declare-fun lt!41244 () ListLongMap!1461)

(assert (=> b!86661 (= lt!41244 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41243 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41243 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41242 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41242 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41247 () Unit!2517)

(assert (=> b!86661 (= lt!41247 (addApplyDifferent!58 lt!41244 lt!41243 lt!40326 lt!41242))))

(assert (=> b!86661 (= (apply!82 (+!110 lt!41244 (tuple2!2199 lt!41243 lt!40326)) lt!41242) (apply!82 lt!41244 lt!41242))))

(declare-fun lt!41228 () Unit!2517)

(assert (=> b!86661 (= lt!41228 lt!41247)))

(declare-fun lt!41236 () ListLongMap!1461)

(assert (=> b!86661 (= lt!41236 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41226 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41226 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41234 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41234 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41229 () Unit!2517)

(assert (=> b!86661 (= lt!41229 (addApplyDifferent!58 lt!41236 lt!41226 (zeroValue!2230 newMap!16) lt!41234))))

(assert (=> b!86661 (= (apply!82 (+!110 lt!41236 (tuple2!2199 lt!41226 (zeroValue!2230 newMap!16))) lt!41234) (apply!82 lt!41236 lt!41234))))

(declare-fun lt!41233 () Unit!2517)

(assert (=> b!86661 (= lt!41233 lt!41229)))

(declare-fun lt!41246 () ListLongMap!1461)

(assert (=> b!86661 (= lt!41246 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41240 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41240 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41235 () (_ BitVec 64))

(assert (=> b!86661 (= lt!41235 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86661 (= lt!41230 (addApplyDifferent!58 lt!41246 lt!41240 lt!40326 lt!41235))))

(assert (=> b!86661 (= (apply!82 (+!110 lt!41246 (tuple2!2199 lt!41240 lt!40326)) lt!41235) (apply!82 lt!41246 lt!41235))))

(assert (= (and d!22699 c!14171) b!86654))

(assert (= (and d!22699 (not c!14171)) b!86657))

(assert (= (and b!86657 c!14169) b!86655))

(assert (= (and b!86657 (not c!14169)) b!86641))

(assert (= (and b!86641 c!14170) b!86647))

(assert (= (and b!86641 (not c!14170)) b!86652))

(assert (= (or b!86647 b!86652) bm!8273))

(assert (= (or b!86655 bm!8273) bm!8275))

(assert (= (or b!86655 b!86647) bm!8272))

(assert (= (or b!86654 bm!8275) bm!8269))

(assert (= (or b!86654 bm!8272) bm!8270))

(assert (= (and d!22699 res!44562) b!86649))

(assert (= (and d!22699 c!14168) b!86661))

(assert (= (and d!22699 (not c!14168)) b!86659))

(assert (= (and d!22699 res!44556) b!86642))

(assert (= (and b!86642 res!44558) b!86658))

(assert (= (and b!86642 (not res!44555)) b!86644))

(assert (= (and b!86644 res!44559) b!86656))

(assert (= (and b!86642 res!44557) b!86650))

(assert (= (and b!86650 c!14166) b!86653))

(assert (= (and b!86650 (not c!14166)) b!86648))

(assert (= (and b!86653 res!44561) b!86643))

(assert (= (or b!86653 b!86648) bm!8271))

(assert (= (and b!86650 res!44563) b!86645))

(assert (= (and b!86645 c!14167) b!86646))

(assert (= (and b!86645 (not c!14167)) b!86651))

(assert (= (and b!86646 res!44560) b!86660))

(assert (= (or b!86646 b!86651) bm!8274))

(declare-fun b_lambda!3853 () Bool)

(assert (=> (not b_lambda!3853) (not b!86656)))

(assert (=> b!86656 t!5248))

(declare-fun b_and!5255 () Bool)

(assert (= b_and!5251 (and (=> t!5248 result!2927) b_and!5255)))

(assert (=> b!86656 t!5250))

(declare-fun b_and!5257 () Bool)

(assert (= b_and!5253 (and (=> t!5250 result!2929) b_and!5257)))

(assert (=> b!86658 m!90363))

(assert (=> b!86658 m!90363))

(assert (=> b!86658 m!90365))

(declare-fun m!92005 () Bool)

(assert (=> b!86660 m!92005))

(declare-fun m!92007 () Bool)

(assert (=> bm!8269 m!92007))

(declare-fun m!92009 () Bool)

(assert (=> bm!8271 m!92009))

(assert (=> b!86656 m!90373))

(assert (=> b!86656 m!90363))

(declare-fun m!92011 () Bool)

(assert (=> b!86656 m!92011))

(assert (=> b!86656 m!90363))

(assert (=> b!86656 m!90777))

(assert (=> b!86656 m!90777))

(assert (=> b!86656 m!90373))

(assert (=> b!86656 m!90779))

(assert (=> b!86644 m!90363))

(assert (=> b!86644 m!90363))

(declare-fun m!92013 () Bool)

(assert (=> b!86644 m!92013))

(declare-fun m!92015 () Bool)

(assert (=> b!86654 m!92015))

(assert (=> d!22699 m!90385))

(declare-fun m!92017 () Bool)

(assert (=> bm!8274 m!92017))

(declare-fun m!92019 () Bool)

(assert (=> b!86661 m!92019))

(declare-fun m!92021 () Bool)

(assert (=> b!86661 m!92021))

(declare-fun m!92023 () Bool)

(assert (=> b!86661 m!92023))

(assert (=> b!86661 m!90363))

(declare-fun m!92025 () Bool)

(assert (=> b!86661 m!92025))

(declare-fun m!92027 () Bool)

(assert (=> b!86661 m!92027))

(declare-fun m!92029 () Bool)

(assert (=> b!86661 m!92029))

(declare-fun m!92031 () Bool)

(assert (=> b!86661 m!92031))

(declare-fun m!92033 () Bool)

(assert (=> b!86661 m!92033))

(declare-fun m!92035 () Bool)

(assert (=> b!86661 m!92035))

(declare-fun m!92037 () Bool)

(assert (=> b!86661 m!92037))

(assert (=> b!86661 m!92021))

(assert (=> b!86661 m!92027))

(declare-fun m!92039 () Bool)

(assert (=> b!86661 m!92039))

(declare-fun m!92041 () Bool)

(assert (=> b!86661 m!92041))

(declare-fun m!92043 () Bool)

(assert (=> b!86661 m!92043))

(assert (=> b!86661 m!92031))

(assert (=> b!86661 m!92041))

(assert (=> b!86661 m!92007))

(declare-fun m!92045 () Bool)

(assert (=> b!86661 m!92045))

(declare-fun m!92047 () Bool)

(assert (=> b!86661 m!92047))

(assert (=> b!86649 m!90363))

(assert (=> b!86649 m!90363))

(assert (=> b!86649 m!90365))

(declare-fun m!92049 () Bool)

(assert (=> b!86643 m!92049))

(declare-fun m!92051 () Bool)

(assert (=> bm!8270 m!92051))

(assert (=> d!22227 d!22699))

(declare-fun d!22701 () Bool)

(declare-fun e!56469 () Bool)

(assert (=> d!22701 e!56469))

(declare-fun res!44564 () Bool)

(assert (=> d!22701 (=> (not res!44564) (not e!56469))))

(declare-fun lt!41250 () ListLongMap!1461)

(assert (=> d!22701 (= res!44564 (contains!753 lt!41250 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(declare-fun lt!41249 () List!1519)

(assert (=> d!22701 (= lt!41250 (ListLongMap!1462 lt!41249))))

(declare-fun lt!41251 () Unit!2517)

(declare-fun lt!41248 () Unit!2517)

(assert (=> d!22701 (= lt!41251 lt!41248)))

(assert (=> d!22701 (= (getValueByKey!140 lt!41249 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(assert (=> d!22701 (= lt!41248 (lemmaContainsTupThenGetReturnValue!57 lt!41249 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(assert (=> d!22701 (= lt!41249 (insertStrictlySorted!60 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))))))

(assert (=> d!22701 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) lt!41250)))

(declare-fun b!86662 () Bool)

(declare-fun res!44565 () Bool)

(assert (=> b!86662 (=> (not res!44565) (not e!56469))))

(assert (=> b!86662 (= res!44565 (= (getValueByKey!140 (toList!746 lt!41250) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)))))))

(declare-fun b!86663 () Bool)

(assert (=> b!86663 (= e!56469 (contains!754 (toList!746 lt!41250) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)))))

(assert (= (and d!22701 res!44564) b!86662))

(assert (= (and b!86662 res!44565) b!86663))

(declare-fun m!92053 () Bool)

(assert (=> d!22701 m!92053))

(declare-fun m!92055 () Bool)

(assert (=> d!22701 m!92055))

(declare-fun m!92057 () Bool)

(assert (=> d!22701 m!92057))

(declare-fun m!92059 () Bool)

(assert (=> d!22701 m!92059))

(declare-fun m!92061 () Bool)

(assert (=> b!86662 m!92061))

(declare-fun m!92063 () Bool)

(assert (=> b!86663 m!92063))

(assert (=> d!22227 d!22701))

(assert (=> d!22227 d!22319))

(declare-fun d!22703 () Bool)

(assert (=> d!22703 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) lt!40521 (zeroValue!2230 newMap!16) lt!40326 #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!22703 true))

(declare-fun _$8!76 () Unit!2517)

(assert (=> d!22703 (= (choose!501 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) lt!40521 (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) lt!40326 (defaultEntry!2338 newMap!16)) _$8!76)))

(declare-fun bs!3676 () Bool)

(assert (= bs!3676 d!22703))

(assert (=> bs!3676 m!89981))

(assert (=> bs!3676 m!89981))

(assert (=> bs!3676 m!90439))

(assert (=> bs!3676 m!90437))

(assert (=> d!22227 d!22703))

(assert (=> d!22227 d!22445))

(declare-fun d!22705 () Bool)

(assert (=> d!22705 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322)))))))

(declare-fun bs!3677 () Bool)

(assert (= bs!3677 d!22705))

(assert (=> bs!3677 m!90115))

(declare-fun m!92065 () Bool)

(assert (=> bs!3677 m!92065))

(assert (=> b!86242 d!22705))

(assert (=> b!86242 d!22237))

(declare-fun b!86664 () Bool)

(declare-fun e!56470 () Option!146)

(assert (=> b!86664 (= e!56470 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40953)))))))

(declare-fun c!14172 () Bool)

(declare-fun d!22707 () Bool)

(assert (=> d!22707 (= c!14172 (and ((_ is Cons!1515) (toList!746 lt!40953)) (= (_1!1110 (h!2106 (toList!746 lt!40953))) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22707 (= (getValueByKey!140 (toList!746 lt!40953) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56470)))

(declare-fun b!86667 () Bool)

(declare-fun e!56471 () Option!146)

(assert (=> b!86667 (= e!56471 None!144)))

(declare-fun b!86666 () Bool)

(assert (=> b!86666 (= e!56471 (getValueByKey!140 (t!5240 (toList!746 lt!40953)) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86665 () Bool)

(assert (=> b!86665 (= e!56470 e!56471)))

(declare-fun c!14173 () Bool)

(assert (=> b!86665 (= c!14173 (and ((_ is Cons!1515) (toList!746 lt!40953)) (not (= (_1!1110 (h!2106 (toList!746 lt!40953))) (_1!1110 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22707 c!14172) b!86664))

(assert (= (and d!22707 (not c!14172)) b!86665))

(assert (= (and b!86665 c!14173) b!86666))

(assert (= (and b!86665 (not c!14173)) b!86667))

(declare-fun m!92067 () Bool)

(assert (=> b!86666 m!92067))

(assert (=> b!86151 d!22707))

(declare-fun b!86668 () Bool)

(declare-fun e!56472 () Option!146)

(assert (=> b!86668 (= e!56472 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40556))))))))

(declare-fun d!22709 () Bool)

(declare-fun c!14174 () Bool)

(assert (=> d!22709 (= c!14174 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40556))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40556)))) (_1!1110 lt!40322))))))

(assert (=> d!22709 (= (getValueByKey!140 (t!5240 (toList!746 lt!40556)) (_1!1110 lt!40322)) e!56472)))

(declare-fun b!86671 () Bool)

(declare-fun e!56473 () Option!146)

(assert (=> b!86671 (= e!56473 None!144)))

(declare-fun b!86670 () Bool)

(assert (=> b!86670 (= e!56473 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40556))) (_1!1110 lt!40322)))))

(declare-fun b!86669 () Bool)

(assert (=> b!86669 (= e!56472 e!56473)))

(declare-fun c!14175 () Bool)

(assert (=> b!86669 (= c!14175 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40556))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40556)))) (_1!1110 lt!40322)))))))

(assert (= (and d!22709 c!14174) b!86668))

(assert (= (and d!22709 (not c!14174)) b!86669))

(assert (= (and b!86669 c!14175) b!86670))

(assert (= (and b!86669 (not c!14175)) b!86671))

(declare-fun m!92069 () Bool)

(assert (=> b!86670 m!92069))

(assert (=> b!85843 d!22709))

(declare-fun d!22711 () Bool)

(declare-fun e!56475 () Bool)

(assert (=> d!22711 e!56475))

(declare-fun res!44566 () Bool)

(assert (=> d!22711 (=> res!44566 e!56475)))

(declare-fun lt!41252 () Bool)

(assert (=> d!22711 (= res!44566 (not lt!41252))))

(declare-fun lt!41253 () Bool)

(assert (=> d!22711 (= lt!41252 lt!41253)))

(declare-fun lt!41255 () Unit!2517)

(declare-fun e!56474 () Unit!2517)

(assert (=> d!22711 (= lt!41255 e!56474)))

(declare-fun c!14176 () Bool)

(assert (=> d!22711 (= c!14176 lt!41253)))

(assert (=> d!22711 (= lt!41253 (containsKey!144 (toList!746 lt!40685) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22711 (= (contains!753 lt!40685 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41252)))

(declare-fun b!86672 () Bool)

(declare-fun lt!41254 () Unit!2517)

(assert (=> b!86672 (= e!56474 lt!41254)))

(assert (=> b!86672 (= lt!41254 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40685) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> b!86672 (isDefined!93 (getValueByKey!140 (toList!746 lt!40685) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86673 () Bool)

(declare-fun Unit!2562 () Unit!2517)

(assert (=> b!86673 (= e!56474 Unit!2562)))

(declare-fun b!86674 () Bool)

(assert (=> b!86674 (= e!56475 (isDefined!93 (getValueByKey!140 (toList!746 lt!40685) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!22711 c!14176) b!86672))

(assert (= (and d!22711 (not c!14176)) b!86673))

(assert (= (and d!22711 (not res!44566)) b!86674))

(declare-fun m!92071 () Bool)

(assert (=> d!22711 m!92071))

(declare-fun m!92073 () Bool)

(assert (=> b!86672 m!92073))

(assert (=> b!86672 m!90489))

(assert (=> b!86672 m!90489))

(declare-fun m!92075 () Bool)

(assert (=> b!86672 m!92075))

(assert (=> b!86674 m!90489))

(assert (=> b!86674 m!90489))

(assert (=> b!86674 m!92075))

(assert (=> d!22247 d!22711))

(declare-fun b!86675 () Bool)

(declare-fun e!56476 () Option!146)

(assert (=> b!86675 (= e!56476 (Some!145 (_2!1110 (h!2106 lt!40684))))))

(declare-fun c!14177 () Bool)

(declare-fun d!22713 () Bool)

(assert (=> d!22713 (= c!14177 (and ((_ is Cons!1515) lt!40684) (= (_1!1110 (h!2106 lt!40684)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22713 (= (getValueByKey!140 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56476)))

(declare-fun b!86678 () Bool)

(declare-fun e!56477 () Option!146)

(assert (=> b!86678 (= e!56477 None!144)))

(declare-fun b!86677 () Bool)

(assert (=> b!86677 (= e!56477 (getValueByKey!140 (t!5240 lt!40684) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86676 () Bool)

(assert (=> b!86676 (= e!56476 e!56477)))

(declare-fun c!14178 () Bool)

(assert (=> b!86676 (= c!14178 (and ((_ is Cons!1515) lt!40684) (not (= (_1!1110 (h!2106 lt!40684)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!22713 c!14177) b!86675))

(assert (= (and d!22713 (not c!14177)) b!86676))

(assert (= (and b!86676 c!14178) b!86677))

(assert (= (and b!86676 (not c!14178)) b!86678))

(declare-fun m!92077 () Bool)

(assert (=> b!86677 m!92077))

(assert (=> d!22247 d!22713))

(declare-fun d!22715 () Bool)

(assert (=> d!22715 (= (getValueByKey!140 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41256 () Unit!2517)

(assert (=> d!22715 (= lt!41256 (choose!500 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun e!56478 () Bool)

(assert (=> d!22715 e!56478))

(declare-fun res!44567 () Bool)

(assert (=> d!22715 (=> (not res!44567) (not e!56478))))

(assert (=> d!22715 (= res!44567 (isStrictlySorted!298 lt!40684))))

(assert (=> d!22715 (= (lemmaContainsTupThenGetReturnValue!57 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41256)))

(declare-fun b!86679 () Bool)

(declare-fun res!44568 () Bool)

(assert (=> b!86679 (=> (not res!44568) (not e!56478))))

(assert (=> b!86679 (= res!44568 (containsKey!144 lt!40684 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86680 () Bool)

(assert (=> b!86680 (= e!56478 (contains!754 lt!40684 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!22715 res!44567) b!86679))

(assert (= (and b!86679 res!44568) b!86680))

(assert (=> d!22715 m!90483))

(declare-fun m!92079 () Bool)

(assert (=> d!22715 m!92079))

(declare-fun m!92081 () Bool)

(assert (=> d!22715 m!92081))

(declare-fun m!92083 () Bool)

(assert (=> b!86679 m!92083))

(declare-fun m!92085 () Bool)

(assert (=> b!86680 m!92085))

(assert (=> d!22247 d!22715))

(declare-fun b!86681 () Bool)

(declare-fun e!56480 () List!1519)

(declare-fun call!8280 () List!1519)

(assert (=> b!86681 (= e!56480 call!8280)))

(declare-fun b!86682 () Bool)

(assert (=> b!86682 (= e!56480 call!8280)))

(declare-fun b!86683 () Bool)

(declare-fun res!44569 () Bool)

(declare-fun e!56481 () Bool)

(assert (=> b!86683 (=> (not res!44569) (not e!56481))))

(declare-fun lt!41257 () List!1519)

(assert (=> b!86683 (= res!44569 (containsKey!144 lt!41257 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86684 () Bool)

(declare-fun e!56482 () List!1519)

(declare-fun e!56483 () List!1519)

(assert (=> b!86684 (= e!56482 e!56483)))

(declare-fun c!14180 () Bool)

(assert (=> b!86684 (= c!14180 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!86685 () Bool)

(declare-fun call!8279 () List!1519)

(assert (=> b!86685 (= e!56482 call!8279)))

(declare-fun b!86686 () Bool)

(declare-fun c!14182 () Bool)

(assert (=> b!86686 (= c!14182 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (bvsgt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> b!86686 (= e!56483 e!56480)))

(declare-fun e!56479 () List!1519)

(declare-fun b!86687 () Bool)

(assert (=> b!86687 (= e!56479 (insertStrictlySorted!60 (t!5240 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86688 () Bool)

(assert (=> b!86688 (= e!56479 (ite c!14180 (t!5240 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (ite c!14182 (Cons!1515 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (t!5240 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) Nil!1516)))))

(declare-fun bm!8276 () Bool)

(declare-fun c!14179 () Bool)

(assert (=> bm!8276 (= call!8279 ($colon$colon!72 e!56479 (ite c!14179 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun c!14181 () Bool)

(assert (=> bm!8276 (= c!14181 c!14179)))

(declare-fun bm!8277 () Bool)

(declare-fun call!8281 () List!1519)

(assert (=> bm!8277 (= call!8281 call!8279)))

(declare-fun bm!8278 () Bool)

(assert (=> bm!8278 (= call!8280 call!8281)))

(declare-fun b!86690 () Bool)

(assert (=> b!86690 (= e!56483 call!8281)))

(declare-fun d!22717 () Bool)

(assert (=> d!22717 e!56481))

(declare-fun res!44570 () Bool)

(assert (=> d!22717 (=> (not res!44570) (not e!56481))))

(assert (=> d!22717 (= res!44570 (isStrictlySorted!298 lt!41257))))

(assert (=> d!22717 (= lt!41257 e!56482)))

(assert (=> d!22717 (= c!14179 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22717 (isStrictlySorted!298 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22717 (= (insertStrictlySorted!60 (toList!746 (+!110 lt!40331 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41257)))

(declare-fun b!86689 () Bool)

(assert (=> b!86689 (= e!56481 (contains!754 lt!41257 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!22717 c!14179) b!86685))

(assert (= (and d!22717 (not c!14179)) b!86684))

(assert (= (and b!86684 c!14180) b!86690))

(assert (= (and b!86684 (not c!14180)) b!86686))

(assert (= (and b!86686 c!14182) b!86681))

(assert (= (and b!86686 (not c!14182)) b!86682))

(assert (= (or b!86681 b!86682) bm!8278))

(assert (= (or b!86690 bm!8278) bm!8277))

(assert (= (or b!86685 bm!8277) bm!8276))

(assert (= (and bm!8276 c!14181) b!86687))

(assert (= (and bm!8276 (not c!14181)) b!86688))

(assert (= (and d!22717 res!44570) b!86683))

(assert (= (and b!86683 res!44569) b!86689))

(declare-fun m!92087 () Bool)

(assert (=> d!22717 m!92087))

(declare-fun m!92089 () Bool)

(assert (=> d!22717 m!92089))

(declare-fun m!92091 () Bool)

(assert (=> b!86683 m!92091))

(declare-fun m!92093 () Bool)

(assert (=> b!86687 m!92093))

(declare-fun m!92095 () Bool)

(assert (=> b!86689 m!92095))

(declare-fun m!92097 () Bool)

(assert (=> bm!8276 m!92097))

(assert (=> d!22247 d!22717))

(assert (=> b!85975 d!22589))

(declare-fun d!22719 () Bool)

(declare-fun e!56485 () Bool)

(assert (=> d!22719 e!56485))

(declare-fun res!44571 () Bool)

(assert (=> d!22719 (=> res!44571 e!56485)))

(declare-fun lt!41258 () Bool)

(assert (=> d!22719 (= res!44571 (not lt!41258))))

(declare-fun lt!41259 () Bool)

(assert (=> d!22719 (= lt!41258 lt!41259)))

(declare-fun lt!41261 () Unit!2517)

(declare-fun e!56484 () Unit!2517)

(assert (=> d!22719 (= lt!41261 e!56484)))

(declare-fun c!14183 () Bool)

(assert (=> d!22719 (= c!14183 lt!41259)))

(assert (=> d!22719 (= lt!41259 (containsKey!144 (toList!746 lt!40661) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22719 (= (contains!753 lt!40661 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41258)))

(declare-fun b!86691 () Bool)

(declare-fun lt!41260 () Unit!2517)

(assert (=> b!86691 (= e!56484 lt!41260)))

(assert (=> b!86691 (= lt!41260 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40661) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86691 (isDefined!93 (getValueByKey!140 (toList!746 lt!40661) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86692 () Bool)

(declare-fun Unit!2563 () Unit!2517)

(assert (=> b!86692 (= e!56484 Unit!2563)))

(declare-fun b!86693 () Bool)

(assert (=> b!86693 (= e!56485 (isDefined!93 (getValueByKey!140 (toList!746 lt!40661) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22719 c!14183) b!86691))

(assert (= (and d!22719 (not c!14183)) b!86692))

(assert (= (and d!22719 (not res!44571)) b!86693))

(assert (=> d!22719 m!90363))

(declare-fun m!92099 () Bool)

(assert (=> d!22719 m!92099))

(assert (=> b!86691 m!90363))

(declare-fun m!92101 () Bool)

(assert (=> b!86691 m!92101))

(assert (=> b!86691 m!90363))

(declare-fun m!92103 () Bool)

(assert (=> b!86691 m!92103))

(assert (=> b!86691 m!92103))

(declare-fun m!92105 () Bool)

(assert (=> b!86691 m!92105))

(assert (=> b!86693 m!90363))

(assert (=> b!86693 m!92103))

(assert (=> b!86693 m!92103))

(assert (=> b!86693 m!92105))

(assert (=> b!85815 d!22719))

(declare-fun d!22721 () Bool)

(declare-fun res!44572 () Bool)

(declare-fun e!56486 () Bool)

(assert (=> d!22721 (=> res!44572 e!56486)))

(assert (=> d!22721 (= res!44572 (and ((_ is Cons!1515) (toList!746 lt!40600)) (= (_1!1110 (h!2106 (toList!746 lt!40600))) (_1!1110 lt!40318))))))

(assert (=> d!22721 (= (containsKey!144 (toList!746 lt!40600) (_1!1110 lt!40318)) e!56486)))

(declare-fun b!86694 () Bool)

(declare-fun e!56487 () Bool)

(assert (=> b!86694 (= e!56486 e!56487)))

(declare-fun res!44573 () Bool)

(assert (=> b!86694 (=> (not res!44573) (not e!56487))))

(assert (=> b!86694 (= res!44573 (and (or (not ((_ is Cons!1515) (toList!746 lt!40600))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40600))) (_1!1110 lt!40318))) ((_ is Cons!1515) (toList!746 lt!40600)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40600))) (_1!1110 lt!40318))))))

(declare-fun b!86695 () Bool)

(assert (=> b!86695 (= e!56487 (containsKey!144 (t!5240 (toList!746 lt!40600)) (_1!1110 lt!40318)))))

(assert (= (and d!22721 (not res!44572)) b!86694))

(assert (= (and b!86694 res!44573) b!86695))

(declare-fun m!92107 () Bool)

(assert (=> b!86695 m!92107))

(assert (=> d!22347 d!22721))

(declare-fun d!22723 () Bool)

(declare-fun res!44574 () Bool)

(declare-fun e!56488 () Bool)

(assert (=> d!22723 (=> (not res!44574) (not e!56488))))

(assert (=> d!22723 (= res!44574 (simpleValid!58 (_2!1109 lt!40816)))))

(assert (=> d!22723 (= (valid!323 (_2!1109 lt!40816)) e!56488)))

(declare-fun b!86696 () Bool)

(declare-fun res!44575 () Bool)

(assert (=> b!86696 (=> (not res!44575) (not e!56488))))

(assert (=> b!86696 (= res!44575 (= (arrayCountValidKeys!0 (_keys!4010 (_2!1109 lt!40816)) #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40816)))) (_size!427 (_2!1109 lt!40816))))))

(declare-fun b!86697 () Bool)

(declare-fun res!44576 () Bool)

(assert (=> b!86697 (=> (not res!44576) (not e!56488))))

(assert (=> b!86697 (= res!44576 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (_2!1109 lt!40816)) (mask!6366 (_2!1109 lt!40816))))))

(declare-fun b!86698 () Bool)

(assert (=> b!86698 (= e!56488 (arrayNoDuplicates!0 (_keys!4010 (_2!1109 lt!40816)) #b00000000000000000000000000000000 Nil!1517))))

(assert (= (and d!22723 res!44574) b!86696))

(assert (= (and b!86696 res!44575) b!86697))

(assert (= (and b!86697 res!44576) b!86698))

(declare-fun m!92109 () Bool)

(assert (=> d!22723 m!92109))

(declare-fun m!92111 () Bool)

(assert (=> b!86696 m!92111))

(declare-fun m!92113 () Bool)

(assert (=> b!86697 m!92113))

(declare-fun m!92115 () Bool)

(assert (=> b!86698 m!92115))

(assert (=> b!85966 d!22723))

(declare-fun d!22725 () Bool)

(declare-fun res!44577 () Bool)

(declare-fun e!56489 () Bool)

(assert (=> d!22725 (=> res!44577 e!56489)))

(assert (=> d!22725 (= res!44577 (and ((_ is Cons!1515) (toList!746 lt!40568)) (= (_1!1110 (h!2106 (toList!746 lt!40568))) (_1!1110 lt!40324))))))

(assert (=> d!22725 (= (containsKey!144 (toList!746 lt!40568) (_1!1110 lt!40324)) e!56489)))

(declare-fun b!86699 () Bool)

(declare-fun e!56490 () Bool)

(assert (=> b!86699 (= e!56489 e!56490)))

(declare-fun res!44578 () Bool)

(assert (=> b!86699 (=> (not res!44578) (not e!56490))))

(assert (=> b!86699 (= res!44578 (and (or (not ((_ is Cons!1515) (toList!746 lt!40568))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40568))) (_1!1110 lt!40324))) ((_ is Cons!1515) (toList!746 lt!40568)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40568))) (_1!1110 lt!40324))))))

(declare-fun b!86700 () Bool)

(assert (=> b!86700 (= e!56490 (containsKey!144 (t!5240 (toList!746 lt!40568)) (_1!1110 lt!40324)))))

(assert (= (and d!22725 (not res!44577)) b!86699))

(assert (= (and b!86699 res!44578) b!86700))

(declare-fun m!92117 () Bool)

(assert (=> b!86700 m!92117))

(assert (=> d!22215 d!22725))

(declare-fun d!22727 () Bool)

(declare-fun lt!41262 () Bool)

(assert (=> d!22727 (= lt!41262 (select (content!89 (t!5240 (toList!746 lt!40568))) lt!40324))))

(declare-fun e!56491 () Bool)

(assert (=> d!22727 (= lt!41262 e!56491)))

(declare-fun res!44579 () Bool)

(assert (=> d!22727 (=> (not res!44579) (not e!56491))))

(assert (=> d!22727 (= res!44579 ((_ is Cons!1515) (t!5240 (toList!746 lt!40568))))))

(assert (=> d!22727 (= (contains!754 (t!5240 (toList!746 lt!40568)) lt!40324) lt!41262)))

(declare-fun b!86701 () Bool)

(declare-fun e!56492 () Bool)

(assert (=> b!86701 (= e!56491 e!56492)))

(declare-fun res!44580 () Bool)

(assert (=> b!86701 (=> res!44580 e!56492)))

(assert (=> b!86701 (= res!44580 (= (h!2106 (t!5240 (toList!746 lt!40568))) lt!40324))))

(declare-fun b!86702 () Bool)

(assert (=> b!86702 (= e!56492 (contains!754 (t!5240 (t!5240 (toList!746 lt!40568))) lt!40324))))

(assert (= (and d!22727 res!44579) b!86701))

(assert (= (and b!86701 (not res!44580)) b!86702))

(declare-fun m!92119 () Bool)

(assert (=> d!22727 m!92119))

(declare-fun m!92121 () Bool)

(assert (=> d!22727 m!92121))

(declare-fun m!92123 () Bool)

(assert (=> b!86702 m!92123))

(assert (=> b!85903 d!22727))

(declare-fun d!22729 () Bool)

(declare-fun res!44581 () Bool)

(declare-fun e!56493 () Bool)

(assert (=> d!22729 (=> res!44581 e!56493)))

(assert (=> d!22729 (= res!44581 (and ((_ is Cons!1515) lt!40555) (= (_1!1110 (h!2106 lt!40555)) (_1!1110 lt!40322))))))

(assert (=> d!22729 (= (containsKey!144 lt!40555 (_1!1110 lt!40322)) e!56493)))

(declare-fun b!86703 () Bool)

(declare-fun e!56494 () Bool)

(assert (=> b!86703 (= e!56493 e!56494)))

(declare-fun res!44582 () Bool)

(assert (=> b!86703 (=> (not res!44582) (not e!56494))))

(assert (=> b!86703 (= res!44582 (and (or (not ((_ is Cons!1515) lt!40555)) (bvsle (_1!1110 (h!2106 lt!40555)) (_1!1110 lt!40322))) ((_ is Cons!1515) lt!40555) (bvslt (_1!1110 (h!2106 lt!40555)) (_1!1110 lt!40322))))))

(declare-fun b!86704 () Bool)

(assert (=> b!86704 (= e!56494 (containsKey!144 (t!5240 lt!40555) (_1!1110 lt!40322)))))

(assert (= (and d!22729 (not res!44581)) b!86703))

(assert (= (and b!86703 res!44582) b!86704))

(declare-fun m!92125 () Bool)

(assert (=> b!86704 m!92125))

(assert (=> b!86247 d!22729))

(declare-fun b!86705 () Bool)

(declare-fun e!56495 () Option!146)

(assert (=> b!86705 (= e!56495 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40693)))))))

(declare-fun d!22731 () Bool)

(declare-fun c!14184 () Bool)

(assert (=> d!22731 (= c!14184 (and ((_ is Cons!1515) (toList!746 lt!40693)) (= (_1!1110 (h!2106 (toList!746 lt!40693))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22731 (= (getValueByKey!140 (toList!746 lt!40693) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56495)))

(declare-fun b!86708 () Bool)

(declare-fun e!56496 () Option!146)

(assert (=> b!86708 (= e!56496 None!144)))

(declare-fun b!86707 () Bool)

(assert (=> b!86707 (= e!56496 (getValueByKey!140 (t!5240 (toList!746 lt!40693)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86706 () Bool)

(assert (=> b!86706 (= e!56495 e!56496)))

(declare-fun c!14185 () Bool)

(assert (=> b!86706 (= c!14185 (and ((_ is Cons!1515) (toList!746 lt!40693)) (not (= (_1!1110 (h!2106 (toList!746 lt!40693))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22731 c!14184) b!86705))

(assert (= (and d!22731 (not c!14184)) b!86706))

(assert (= (and b!86706 c!14185) b!86707))

(assert (= (and b!86706 (not c!14185)) b!86708))

(declare-fun m!92127 () Bool)

(assert (=> b!86707 m!92127))

(assert (=> b!85858 d!22731))

(declare-fun d!22733 () Bool)

(declare-fun res!44583 () Bool)

(declare-fun e!56497 () Bool)

(assert (=> d!22733 (=> res!44583 e!56497)))

(assert (=> d!22733 (= res!44583 (and ((_ is Cons!1515) (toList!746 lt!40584)) (= (_1!1110 (h!2106 (toList!746 lt!40584))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22733 (= (containsKey!144 (toList!746 lt!40584) #b1000000000000000000000000000000000000000000000000000000000000000) e!56497)))

(declare-fun b!86709 () Bool)

(declare-fun e!56498 () Bool)

(assert (=> b!86709 (= e!56497 e!56498)))

(declare-fun res!44584 () Bool)

(assert (=> b!86709 (=> (not res!44584) (not e!56498))))

(assert (=> b!86709 (= res!44584 (and (or (not ((_ is Cons!1515) (toList!746 lt!40584))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40584))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1515) (toList!746 lt!40584)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40584))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86710 () Bool)

(assert (=> b!86710 (= e!56498 (containsKey!144 (t!5240 (toList!746 lt!40584)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22733 (not res!44583)) b!86709))

(assert (= (and b!86709 res!44584) b!86710))

(declare-fun m!92129 () Bool)

(assert (=> b!86710 m!92129))

(assert (=> d!22305 d!22733))

(declare-fun d!22735 () Bool)

(assert (=> d!22735 (= (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85865 d!22735))

(declare-fun d!22737 () Bool)

(declare-fun lt!41263 () Bool)

(assert (=> d!22737 (= lt!41263 (select (content!89 (toList!746 lt!40666)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56499 () Bool)

(assert (=> d!22737 (= lt!41263 e!56499)))

(declare-fun res!44585 () Bool)

(assert (=> d!22737 (=> (not res!44585) (not e!56499))))

(assert (=> d!22737 (= res!44585 ((_ is Cons!1515) (toList!746 lt!40666)))))

(assert (=> d!22737 (= (contains!754 (toList!746 lt!40666) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41263)))

(declare-fun b!86711 () Bool)

(declare-fun e!56500 () Bool)

(assert (=> b!86711 (= e!56499 e!56500)))

(declare-fun res!44586 () Bool)

(assert (=> b!86711 (=> res!44586 e!56500)))

(assert (=> b!86711 (= res!44586 (= (h!2106 (toList!746 lt!40666)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86712 () Bool)

(assert (=> b!86712 (= e!56500 (contains!754 (t!5240 (toList!746 lt!40666)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22737 res!44585) b!86711))

(assert (= (and b!86711 (not res!44586)) b!86712))

(declare-fun m!92131 () Bool)

(assert (=> d!22737 m!92131))

(declare-fun m!92133 () Bool)

(assert (=> d!22737 m!92133))

(declare-fun m!92135 () Bool)

(assert (=> b!86712 m!92135))

(assert (=> b!85834 d!22737))

(declare-fun d!22739 () Bool)

(declare-fun e!56502 () Bool)

(assert (=> d!22739 e!56502))

(declare-fun res!44587 () Bool)

(assert (=> d!22739 (=> res!44587 e!56502)))

(declare-fun lt!41264 () Bool)

(assert (=> d!22739 (= res!44587 (not lt!41264))))

(declare-fun lt!41265 () Bool)

(assert (=> d!22739 (= lt!41264 lt!41265)))

(declare-fun lt!41267 () Unit!2517)

(declare-fun e!56501 () Unit!2517)

(assert (=> d!22739 (= lt!41267 e!56501)))

(declare-fun c!14186 () Bool)

(assert (=> d!22739 (= c!14186 lt!41265)))

(assert (=> d!22739 (= lt!41265 (containsKey!144 (toList!746 lt!40963) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22739 (= (contains!753 lt!40963 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41264)))

(declare-fun b!86713 () Bool)

(declare-fun lt!41266 () Unit!2517)

(assert (=> b!86713 (= e!56501 lt!41266)))

(assert (=> b!86713 (= lt!41266 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40963) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86713 (isDefined!93 (getValueByKey!140 (toList!746 lt!40963) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86714 () Bool)

(declare-fun Unit!2564 () Unit!2517)

(assert (=> b!86714 (= e!56501 Unit!2564)))

(declare-fun b!86715 () Bool)

(assert (=> b!86715 (= e!56502 (isDefined!93 (getValueByKey!140 (toList!746 lt!40963) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22739 c!14186) b!86713))

(assert (= (and d!22739 (not c!14186)) b!86714))

(assert (= (and d!22739 (not res!44587)) b!86715))

(declare-fun m!92137 () Bool)

(assert (=> d!22739 m!92137))

(declare-fun m!92139 () Bool)

(assert (=> b!86713 m!92139))

(assert (=> b!86713 m!91089))

(assert (=> b!86713 m!91089))

(declare-fun m!92141 () Bool)

(assert (=> b!86713 m!92141))

(assert (=> b!86715 m!91089))

(assert (=> b!86715 m!91089))

(assert (=> b!86715 m!92141))

(assert (=> d!22393 d!22739))

(declare-fun b!86716 () Bool)

(declare-fun e!56503 () Option!146)

(assert (=> b!86716 (= e!56503 (Some!145 (_2!1110 (h!2106 lt!40962))))))

(declare-fun d!22741 () Bool)

(declare-fun c!14187 () Bool)

(assert (=> d!22741 (= c!14187 (and ((_ is Cons!1515) lt!40962) (= (_1!1110 (h!2106 lt!40962)) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22741 (= (getValueByKey!140 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56503)))

(declare-fun b!86719 () Bool)

(declare-fun e!56504 () Option!146)

(assert (=> b!86719 (= e!56504 None!144)))

(declare-fun b!86718 () Bool)

(assert (=> b!86718 (= e!56504 (getValueByKey!140 (t!5240 lt!40962) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86717 () Bool)

(assert (=> b!86717 (= e!56503 e!56504)))

(declare-fun c!14188 () Bool)

(assert (=> b!86717 (= c!14188 (and ((_ is Cons!1515) lt!40962) (not (= (_1!1110 (h!2106 lt!40962)) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22741 c!14187) b!86716))

(assert (= (and d!22741 (not c!14187)) b!86717))

(assert (= (and b!86717 c!14188) b!86718))

(assert (= (and b!86717 (not c!14188)) b!86719))

(declare-fun m!92143 () Bool)

(assert (=> b!86718 m!92143))

(assert (=> d!22393 d!22741))

(declare-fun d!22743 () Bool)

(assert (=> d!22743 (= (getValueByKey!140 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41268 () Unit!2517)

(assert (=> d!22743 (= lt!41268 (choose!500 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56505 () Bool)

(assert (=> d!22743 e!56505))

(declare-fun res!44588 () Bool)

(assert (=> d!22743 (=> (not res!44588) (not e!56505))))

(assert (=> d!22743 (= res!44588 (isStrictlySorted!298 lt!40962))))

(assert (=> d!22743 (= (lemmaContainsTupThenGetReturnValue!57 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41268)))

(declare-fun b!86720 () Bool)

(declare-fun res!44589 () Bool)

(assert (=> b!86720 (=> (not res!44589) (not e!56505))))

(assert (=> b!86720 (= res!44589 (containsKey!144 lt!40962 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86721 () Bool)

(assert (=> b!86721 (= e!56505 (contains!754 lt!40962 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22743 res!44588) b!86720))

(assert (= (and b!86720 res!44589) b!86721))

(assert (=> d!22743 m!91083))

(declare-fun m!92145 () Bool)

(assert (=> d!22743 m!92145))

(declare-fun m!92147 () Bool)

(assert (=> d!22743 m!92147))

(declare-fun m!92149 () Bool)

(assert (=> b!86720 m!92149))

(declare-fun m!92151 () Bool)

(assert (=> b!86721 m!92151))

(assert (=> d!22393 d!22743))

(declare-fun b!86722 () Bool)

(declare-fun e!56507 () List!1519)

(declare-fun call!8283 () List!1519)

(assert (=> b!86722 (= e!56507 call!8283)))

(declare-fun b!86723 () Bool)

(assert (=> b!86723 (= e!56507 call!8283)))

(declare-fun b!86724 () Bool)

(declare-fun res!44590 () Bool)

(declare-fun e!56508 () Bool)

(assert (=> b!86724 (=> (not res!44590) (not e!56508))))

(declare-fun lt!41269 () List!1519)

(assert (=> b!86724 (= res!44590 (containsKey!144 lt!41269 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86725 () Bool)

(declare-fun e!56509 () List!1519)

(declare-fun e!56510 () List!1519)

(assert (=> b!86725 (= e!56509 e!56510)))

(declare-fun c!14190 () Bool)

(assert (=> b!86725 (= c!14190 (and ((_ is Cons!1515) (toList!746 lt!40449)) (= (_1!1110 (h!2106 (toList!746 lt!40449))) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86726 () Bool)

(declare-fun call!8282 () List!1519)

(assert (=> b!86726 (= e!56509 call!8282)))

(declare-fun b!86727 () Bool)

(declare-fun c!14192 () Bool)

(assert (=> b!86727 (= c!14192 (and ((_ is Cons!1515) (toList!746 lt!40449)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40449))) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86727 (= e!56510 e!56507)))

(declare-fun e!56506 () List!1519)

(declare-fun b!86728 () Bool)

(assert (=> b!86728 (= e!56506 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40449)) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86729 () Bool)

(assert (=> b!86729 (= e!56506 (ite c!14190 (t!5240 (toList!746 lt!40449)) (ite c!14192 (Cons!1515 (h!2106 (toList!746 lt!40449)) (t!5240 (toList!746 lt!40449))) Nil!1516)))))

(declare-fun c!14189 () Bool)

(declare-fun bm!8279 () Bool)

(assert (=> bm!8279 (= call!8282 ($colon$colon!72 e!56506 (ite c!14189 (h!2106 (toList!746 lt!40449)) (tuple2!2199 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14191 () Bool)

(assert (=> bm!8279 (= c!14191 c!14189)))

(declare-fun bm!8280 () Bool)

(declare-fun call!8284 () List!1519)

(assert (=> bm!8280 (= call!8284 call!8282)))

(declare-fun bm!8281 () Bool)

(assert (=> bm!8281 (= call!8283 call!8284)))

(declare-fun b!86731 () Bool)

(assert (=> b!86731 (= e!56510 call!8284)))

(declare-fun d!22745 () Bool)

(assert (=> d!22745 e!56508))

(declare-fun res!44591 () Bool)

(assert (=> d!22745 (=> (not res!44591) (not e!56508))))

(assert (=> d!22745 (= res!44591 (isStrictlySorted!298 lt!41269))))

(assert (=> d!22745 (= lt!41269 e!56509)))

(assert (=> d!22745 (= c!14189 (and ((_ is Cons!1515) (toList!746 lt!40449)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40449))) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22745 (isStrictlySorted!298 (toList!746 lt!40449))))

(assert (=> d!22745 (= (insertStrictlySorted!60 (toList!746 lt!40449) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41269)))

(declare-fun b!86730 () Bool)

(assert (=> b!86730 (= e!56508 (contains!754 lt!41269 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22745 c!14189) b!86726))

(assert (= (and d!22745 (not c!14189)) b!86725))

(assert (= (and b!86725 c!14190) b!86731))

(assert (= (and b!86725 (not c!14190)) b!86727))

(assert (= (and b!86727 c!14192) b!86722))

(assert (= (and b!86727 (not c!14192)) b!86723))

(assert (= (or b!86722 b!86723) bm!8281))

(assert (= (or b!86731 bm!8281) bm!8280))

(assert (= (or b!86726 bm!8280) bm!8279))

(assert (= (and bm!8279 c!14191) b!86728))

(assert (= (and bm!8279 (not c!14191)) b!86729))

(assert (= (and d!22745 res!44591) b!86724))

(assert (= (and b!86724 res!44590) b!86730))

(declare-fun m!92153 () Bool)

(assert (=> d!22745 m!92153))

(declare-fun m!92155 () Bool)

(assert (=> d!22745 m!92155))

(declare-fun m!92157 () Bool)

(assert (=> b!86724 m!92157))

(declare-fun m!92159 () Bool)

(assert (=> b!86728 m!92159))

(declare-fun m!92161 () Bool)

(assert (=> b!86730 m!92161))

(declare-fun m!92163 () Bool)

(assert (=> bm!8279 m!92163))

(assert (=> d!22393 d!22745))

(assert (=> b!85969 d!22395))

(declare-fun d!22747 () Bool)

(declare-fun res!44592 () Bool)

(declare-fun e!56511 () Bool)

(assert (=> d!22747 (=> res!44592 e!56511)))

(assert (=> d!22747 (= res!44592 (and ((_ is Cons!1515) lt!40603) (= (_1!1110 (h!2106 lt!40603)) (_1!1110 lt!40318))))))

(assert (=> d!22747 (= (containsKey!144 lt!40603 (_1!1110 lt!40318)) e!56511)))

(declare-fun b!86732 () Bool)

(declare-fun e!56512 () Bool)

(assert (=> b!86732 (= e!56511 e!56512)))

(declare-fun res!44593 () Bool)

(assert (=> b!86732 (=> (not res!44593) (not e!56512))))

(assert (=> b!86732 (= res!44593 (and (or (not ((_ is Cons!1515) lt!40603)) (bvsle (_1!1110 (h!2106 lt!40603)) (_1!1110 lt!40318))) ((_ is Cons!1515) lt!40603) (bvslt (_1!1110 (h!2106 lt!40603)) (_1!1110 lt!40318))))))

(declare-fun b!86733 () Bool)

(assert (=> b!86733 (= e!56512 (containsKey!144 (t!5240 lt!40603) (_1!1110 lt!40318)))))

(assert (= (and d!22747 (not res!44592)) b!86732))

(assert (= (and b!86732 res!44593) b!86733))

(declare-fun m!92165 () Bool)

(assert (=> b!86733 m!92165))

(assert (=> b!86203 d!22747))

(declare-fun bm!8282 () Bool)

(declare-fun call!8285 () (_ BitVec 32))

(assert (=> bm!8282 (= call!8285 (arrayCountValidKeys!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86734 () Bool)

(declare-fun e!56514 () (_ BitVec 32))

(assert (=> b!86734 (= e!56514 call!8285)))

(declare-fun b!86735 () Bool)

(assert (=> b!86735 (= e!56514 (bvadd #b00000000000000000000000000000001 call!8285))))

(declare-fun b!86737 () Bool)

(declare-fun e!56513 () (_ BitVec 32))

(assert (=> b!86737 (= e!56513 #b00000000000000000000000000000000)))

(declare-fun b!86736 () Bool)

(assert (=> b!86736 (= e!56513 e!56514)))

(declare-fun c!14194 () Bool)

(assert (=> b!86736 (= c!14194 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!22749 () Bool)

(declare-fun lt!41270 () (_ BitVec 32))

(assert (=> d!22749 (and (bvsge lt!41270 #b00000000000000000000000000000000) (bvsle lt!41270 (bvsub (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!22749 (= lt!41270 e!56513)))

(declare-fun c!14193 () Bool)

(assert (=> d!22749 (= c!14193 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22749 (and (bvsle #b00000000000000000000000000000000 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22749 (= (arrayCountValidKeys!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))) lt!41270)))

(assert (= (and d!22749 c!14193) b!86737))

(assert (= (and d!22749 (not c!14193)) b!86736))

(assert (= (and b!86736 c!14194) b!86735))

(assert (= (and b!86736 (not c!14194)) b!86734))

(assert (= (or b!86735 b!86734) bm!8282))

(declare-fun m!92167 () Bool)

(assert (=> bm!8282 m!92167))

(declare-fun m!92169 () Bool)

(assert (=> b!86736 m!92169))

(assert (=> b!86736 m!92169))

(declare-fun m!92171 () Bool)

(assert (=> b!86736 m!92171))

(assert (=> b!85835 d!22749))

(assert (=> b!85920 d!22573))

(declare-fun d!22751 () Bool)

(declare-fun res!44594 () Bool)

(declare-fun e!56515 () Bool)

(assert (=> d!22751 (=> res!44594 e!56515)))

(assert (=> d!22751 (= res!44594 (and ((_ is Cons!1515) (toList!746 lt!40584)) (= (_1!1110 (h!2106 (toList!746 lt!40584))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22751 (= (containsKey!144 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000) e!56515)))

(declare-fun b!86738 () Bool)

(declare-fun e!56516 () Bool)

(assert (=> b!86738 (= e!56515 e!56516)))

(declare-fun res!44595 () Bool)

(assert (=> b!86738 (=> (not res!44595) (not e!56516))))

(assert (=> b!86738 (= res!44595 (and (or (not ((_ is Cons!1515) (toList!746 lt!40584))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40584))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1515) (toList!746 lt!40584)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40584))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86739 () Bool)

(assert (=> b!86739 (= e!56516 (containsKey!144 (t!5240 (toList!746 lt!40584)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22751 (not res!44594)) b!86738))

(assert (= (and b!86738 res!44595) b!86739))

(declare-fun m!92173 () Bool)

(assert (=> b!86739 m!92173))

(assert (=> d!22241 d!22751))

(declare-fun d!22753 () Bool)

(declare-fun res!44596 () Bool)

(declare-fun e!56517 () Bool)

(assert (=> d!22753 (=> res!44596 e!56517)))

(assert (=> d!22753 (= res!44596 (and ((_ is Cons!1515) (toList!746 lt!40450)) (= (_1!1110 (h!2106 (toList!746 lt!40450))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22753 (= (containsKey!144 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000) e!56517)))

(declare-fun b!86740 () Bool)

(declare-fun e!56518 () Bool)

(assert (=> b!86740 (= e!56517 e!56518)))

(declare-fun res!44597 () Bool)

(assert (=> b!86740 (=> (not res!44597) (not e!56518))))

(assert (=> b!86740 (= res!44597 (and (or (not ((_ is Cons!1515) (toList!746 lt!40450))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40450))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1515) (toList!746 lt!40450)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40450))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86741 () Bool)

(assert (=> b!86741 (= e!56518 (containsKey!144 (t!5240 (toList!746 lt!40450)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22753 (not res!44596)) b!86740))

(assert (= (and b!86740 res!44597) b!86741))

(declare-fun m!92175 () Bool)

(assert (=> b!86741 m!92175))

(assert (=> d!22327 d!22753))

(assert (=> d!22199 d!22197))

(declare-fun d!22755 () Bool)

(assert (=> d!22755 (= (getValueByKey!140 lt!40559 (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324)))))

(assert (=> d!22755 true))

(declare-fun _$22!419 () Unit!2517)

(assert (=> d!22755 (= (choose!500 lt!40559 (_1!1110 lt!40324) (_2!1110 lt!40324)) _$22!419)))

(declare-fun bs!3678 () Bool)

(assert (= bs!3678 d!22755))

(assert (=> bs!3678 m!90121))

(assert (=> d!22199 d!22755))

(declare-fun d!22757 () Bool)

(declare-fun res!44598 () Bool)

(declare-fun e!56519 () Bool)

(assert (=> d!22757 (=> res!44598 e!56519)))

(assert (=> d!22757 (= res!44598 (or ((_ is Nil!1516) lt!40559) ((_ is Nil!1516) (t!5240 lt!40559))))))

(assert (=> d!22757 (= (isStrictlySorted!298 lt!40559) e!56519)))

(declare-fun b!86742 () Bool)

(declare-fun e!56520 () Bool)

(assert (=> b!86742 (= e!56519 e!56520)))

(declare-fun res!44599 () Bool)

(assert (=> b!86742 (=> (not res!44599) (not e!56520))))

(assert (=> b!86742 (= res!44599 (bvslt (_1!1110 (h!2106 lt!40559)) (_1!1110 (h!2106 (t!5240 lt!40559)))))))

(declare-fun b!86743 () Bool)

(assert (=> b!86743 (= e!56520 (isStrictlySorted!298 (t!5240 lt!40559)))))

(assert (= (and d!22757 (not res!44598)) b!86742))

(assert (= (and b!86742 res!44599) b!86743))

(declare-fun m!92177 () Bool)

(assert (=> b!86743 m!92177))

(assert (=> d!22199 d!22757))

(declare-fun d!22759 () Bool)

(assert (=> d!22759 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))

(declare-fun lt!41271 () Unit!2517)

(assert (=> d!22759 (= lt!41271 (choose!504 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))

(declare-fun e!56521 () Bool)

(assert (=> d!22759 e!56521))

(declare-fun res!44600 () Bool)

(assert (=> d!22759 (=> (not res!44600) (not e!56521))))

(assert (=> d!22759 (= res!44600 (isStrictlySorted!298 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (=> d!22759 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585) lt!41271)))

(declare-fun b!86744 () Bool)

(assert (=> b!86744 (= e!56521 (containsKey!144 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))

(assert (= (and d!22759 res!44600) b!86744))

(assert (=> d!22759 m!90549))

(assert (=> d!22759 m!90549))

(assert (=> d!22759 m!90551))

(declare-fun m!92179 () Bool)

(assert (=> d!22759 m!92179))

(declare-fun m!92181 () Bool)

(assert (=> d!22759 m!92181))

(assert (=> b!86744 m!90545))

(assert (=> b!85876 d!22759))

(declare-fun d!22761 () Bool)

(assert (=> d!22761 (= (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585)) (not (isEmpty!337 (getValueByKey!140 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585))))))

(declare-fun bs!3679 () Bool)

(assert (= bs!3679 d!22761))

(assert (=> bs!3679 m!90549))

(declare-fun m!92183 () Bool)

(assert (=> bs!3679 m!92183))

(assert (=> b!85876 d!22761))

(declare-fun e!56522 () Option!146)

(declare-fun b!86745 () Bool)

(assert (=> b!86745 (= e!56522 (Some!145 (_2!1110 (h!2106 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))))))))

(declare-fun c!14195 () Bool)

(declare-fun d!22763 () Bool)

(assert (=> d!22763 (= c!14195 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))))) lt!40585)))))

(assert (=> d!22763 (= (getValueByKey!140 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585) e!56522)))

(declare-fun b!86748 () Bool)

(declare-fun e!56523 () Option!146)

(assert (=> b!86748 (= e!56523 None!144)))

(declare-fun b!86747 () Bool)

(assert (=> b!86747 (= e!56523 (getValueByKey!140 (t!5240 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))) lt!40585))))

(declare-fun b!86746 () Bool)

(assert (=> b!86746 (= e!56522 e!56523)))

(declare-fun c!14196 () Bool)

(assert (=> b!86746 (= c!14196 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))) (not (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))))) lt!40585))))))

(assert (= (and d!22763 c!14195) b!86745))

(assert (= (and d!22763 (not c!14195)) b!86746))

(assert (= (and b!86746 c!14196) b!86747))

(assert (= (and b!86746 (not c!14196)) b!86748))

(declare-fun m!92185 () Bool)

(assert (=> b!86747 m!92185))

(assert (=> b!85876 d!22763))

(assert (=> d!22389 d!22381))

(declare-fun d!22765 () Bool)

(declare-fun e!56525 () Bool)

(assert (=> d!22765 e!56525))

(declare-fun res!44601 () Bool)

(assert (=> d!22765 (=> res!44601 e!56525)))

(declare-fun lt!41272 () Bool)

(assert (=> d!22765 (= res!44601 (not lt!41272))))

(declare-fun lt!41273 () Bool)

(assert (=> d!22765 (= lt!41272 lt!41273)))

(declare-fun lt!41275 () Unit!2517)

(declare-fun e!56524 () Unit!2517)

(assert (=> d!22765 (= lt!41275 e!56524)))

(declare-fun c!14197 () Bool)

(assert (=> d!22765 (= c!14197 lt!41273)))

(assert (=> d!22765 (= lt!41273 (containsKey!144 (toList!746 lt!40451) lt!40440))))

(assert (=> d!22765 (= (contains!753 lt!40451 lt!40440) lt!41272)))

(declare-fun b!86749 () Bool)

(declare-fun lt!41274 () Unit!2517)

(assert (=> b!86749 (= e!56524 lt!41274)))

(assert (=> b!86749 (= lt!41274 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40451) lt!40440))))

(assert (=> b!86749 (isDefined!93 (getValueByKey!140 (toList!746 lt!40451) lt!40440))))

(declare-fun b!86750 () Bool)

(declare-fun Unit!2565 () Unit!2517)

(assert (=> b!86750 (= e!56524 Unit!2565)))

(declare-fun b!86751 () Bool)

(assert (=> b!86751 (= e!56525 (isDefined!93 (getValueByKey!140 (toList!746 lt!40451) lt!40440)))))

(assert (= (and d!22765 c!14197) b!86749))

(assert (= (and d!22765 (not c!14197)) b!86750))

(assert (= (and d!22765 (not res!44601)) b!86751))

(declare-fun m!92187 () Bool)

(assert (=> d!22765 m!92187))

(declare-fun m!92189 () Bool)

(assert (=> b!86749 m!92189))

(assert (=> b!86749 m!91065))

(assert (=> b!86749 m!91065))

(declare-fun m!92191 () Bool)

(assert (=> b!86749 m!92191))

(assert (=> b!86751 m!91065))

(assert (=> b!86751 m!91065))

(assert (=> b!86751 m!92191))

(assert (=> d!22389 d!22765))

(assert (=> d!22389 d!22385))

(assert (=> d!22389 d!22373))

(declare-fun d!22767 () Bool)

(assert (=> d!22767 (= (apply!82 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40440) (apply!82 lt!40451 lt!40440))))

(assert (=> d!22767 true))

(declare-fun _$34!843 () Unit!2517)

(assert (=> d!22767 (= (choose!508 lt!40451 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40440) _$34!843)))

(declare-fun bs!3680 () Bool)

(assert (= bs!3680 d!22767))

(assert (=> bs!3680 m!90015))

(assert (=> bs!3680 m!90015))

(assert (=> bs!3680 m!90017))

(assert (=> bs!3680 m!90009))

(assert (=> d!22389 d!22767))

(declare-fun d!22769 () Bool)

(declare-fun lt!41276 () Bool)

(assert (=> d!22769 (= lt!41276 (select (content!89 (toList!746 lt!40681)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56526 () Bool)

(assert (=> d!22769 (= lt!41276 e!56526)))

(declare-fun res!44602 () Bool)

(assert (=> d!22769 (=> (not res!44602) (not e!56526))))

(assert (=> d!22769 (= res!44602 ((_ is Cons!1515) (toList!746 lt!40681)))))

(assert (=> d!22769 (= (contains!754 (toList!746 lt!40681) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41276)))

(declare-fun b!86752 () Bool)

(declare-fun e!56527 () Bool)

(assert (=> b!86752 (= e!56526 e!56527)))

(declare-fun res!44603 () Bool)

(assert (=> b!86752 (=> res!44603 e!56527)))

(assert (=> b!86752 (= res!44603 (= (h!2106 (toList!746 lt!40681)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86753 () Bool)

(assert (=> b!86753 (= e!56527 (contains!754 (t!5240 (toList!746 lt!40681)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22769 res!44602) b!86752))

(assert (= (and b!86752 (not res!44603)) b!86753))

(declare-fun m!92193 () Bool)

(assert (=> d!22769 m!92193))

(declare-fun m!92195 () Bool)

(assert (=> d!22769 m!92195))

(declare-fun m!92197 () Bool)

(assert (=> b!86753 m!92197))

(assert (=> b!85853 d!22769))

(declare-fun d!22771 () Bool)

(declare-fun e!56529 () Bool)

(assert (=> d!22771 e!56529))

(declare-fun res!44604 () Bool)

(assert (=> d!22771 (=> res!44604 e!56529)))

(declare-fun lt!41277 () Bool)

(assert (=> d!22771 (= res!44604 (not lt!41277))))

(declare-fun lt!41278 () Bool)

(assert (=> d!22771 (= lt!41277 lt!41278)))

(declare-fun lt!41280 () Unit!2517)

(declare-fun e!56528 () Unit!2517)

(assert (=> d!22771 (= lt!41280 e!56528)))

(declare-fun c!14198 () Bool)

(assert (=> d!22771 (= c!14198 lt!41278)))

(assert (=> d!22771 (= lt!41278 (containsKey!144 (toList!746 lt!40918) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22771 (= (contains!753 lt!40918 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41277)))

(declare-fun b!86754 () Bool)

(declare-fun lt!41279 () Unit!2517)

(assert (=> b!86754 (= e!56528 lt!41279)))

(assert (=> b!86754 (= lt!41279 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40918) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86754 (isDefined!93 (getValueByKey!140 (toList!746 lt!40918) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86755 () Bool)

(declare-fun Unit!2566 () Unit!2517)

(assert (=> b!86755 (= e!56528 Unit!2566)))

(declare-fun b!86756 () Bool)

(assert (=> b!86756 (= e!56529 (isDefined!93 (getValueByKey!140 (toList!746 lt!40918) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22771 c!14198) b!86754))

(assert (= (and d!22771 (not c!14198)) b!86755))

(assert (= (and d!22771 (not res!44604)) b!86756))

(declare-fun m!92199 () Bool)

(assert (=> d!22771 m!92199))

(declare-fun m!92201 () Bool)

(assert (=> b!86754 m!92201))

(declare-fun m!92203 () Bool)

(assert (=> b!86754 m!92203))

(assert (=> b!86754 m!92203))

(declare-fun m!92205 () Bool)

(assert (=> b!86754 m!92205))

(assert (=> b!86756 m!92203))

(assert (=> b!86756 m!92203))

(assert (=> b!86756 m!92205))

(assert (=> bm!8197 d!22771))

(assert (=> b!86101 d!22463))

(assert (=> b!86101 d!22423))

(declare-fun d!22773 () Bool)

(declare-fun e!56531 () Bool)

(assert (=> d!22773 e!56531))

(declare-fun res!44605 () Bool)

(assert (=> d!22773 (=> res!44605 e!56531)))

(declare-fun lt!41281 () Bool)

(assert (=> d!22773 (= res!44605 (not lt!41281))))

(declare-fun lt!41282 () Bool)

(assert (=> d!22773 (= lt!41281 lt!41282)))

(declare-fun lt!41284 () Unit!2517)

(declare-fun e!56530 () Unit!2517)

(assert (=> d!22773 (= lt!41284 e!56530)))

(declare-fun c!14199 () Bool)

(assert (=> d!22773 (= c!14199 lt!41282)))

(assert (=> d!22773 (= lt!41282 (containsKey!144 (toList!746 lt!40949) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22773 (= (contains!753 lt!40949 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41281)))

(declare-fun b!86757 () Bool)

(declare-fun lt!41283 () Unit!2517)

(assert (=> b!86757 (= e!56530 lt!41283)))

(assert (=> b!86757 (= lt!41283 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40949) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86757 (isDefined!93 (getValueByKey!140 (toList!746 lt!40949) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86758 () Bool)

(declare-fun Unit!2567 () Unit!2517)

(assert (=> b!86758 (= e!56530 Unit!2567)))

(declare-fun b!86759 () Bool)

(assert (=> b!86759 (= e!56531 (isDefined!93 (getValueByKey!140 (toList!746 lt!40949) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22773 c!14199) b!86757))

(assert (= (and d!22773 (not c!14199)) b!86758))

(assert (= (and d!22773 (not res!44605)) b!86759))

(declare-fun m!92207 () Bool)

(assert (=> d!22773 m!92207))

(declare-fun m!92209 () Bool)

(assert (=> b!86757 m!92209))

(assert (=> b!86757 m!91041))

(assert (=> b!86757 m!91041))

(declare-fun m!92211 () Bool)

(assert (=> b!86757 m!92211))

(assert (=> b!86759 m!91041))

(assert (=> b!86759 m!91041))

(assert (=> b!86759 m!92211))

(assert (=> d!22379 d!22773))

(declare-fun b!86760 () Bool)

(declare-fun e!56532 () Option!146)

(assert (=> b!86760 (= e!56532 (Some!145 (_2!1110 (h!2106 lt!40948))))))

(declare-fun c!14200 () Bool)

(declare-fun d!22775 () Bool)

(assert (=> d!22775 (= c!14200 (and ((_ is Cons!1515) lt!40948) (= (_1!1110 (h!2106 lt!40948)) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22775 (= (getValueByKey!140 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56532)))

(declare-fun b!86763 () Bool)

(declare-fun e!56533 () Option!146)

(assert (=> b!86763 (= e!56533 None!144)))

(declare-fun b!86762 () Bool)

(assert (=> b!86762 (= e!56533 (getValueByKey!140 (t!5240 lt!40948) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86761 () Bool)

(assert (=> b!86761 (= e!56532 e!56533)))

(declare-fun c!14201 () Bool)

(assert (=> b!86761 (= c!14201 (and ((_ is Cons!1515) lt!40948) (not (= (_1!1110 (h!2106 lt!40948)) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22775 c!14200) b!86760))

(assert (= (and d!22775 (not c!14200)) b!86761))

(assert (= (and b!86761 c!14201) b!86762))

(assert (= (and b!86761 (not c!14201)) b!86763))

(declare-fun m!92213 () Bool)

(assert (=> b!86762 m!92213))

(assert (=> d!22379 d!22775))

(declare-fun d!22777 () Bool)

(assert (=> d!22777 (= (getValueByKey!140 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41285 () Unit!2517)

(assert (=> d!22777 (= lt!41285 (choose!500 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56534 () Bool)

(assert (=> d!22777 e!56534))

(declare-fun res!44606 () Bool)

(assert (=> d!22777 (=> (not res!44606) (not e!56534))))

(assert (=> d!22777 (= res!44606 (isStrictlySorted!298 lt!40948))))

(assert (=> d!22777 (= (lemmaContainsTupThenGetReturnValue!57 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41285)))

(declare-fun b!86764 () Bool)

(declare-fun res!44607 () Bool)

(assert (=> b!86764 (=> (not res!44607) (not e!56534))))

(assert (=> b!86764 (= res!44607 (containsKey!144 lt!40948 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86765 () Bool)

(assert (=> b!86765 (= e!56534 (contains!754 lt!40948 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22777 res!44606) b!86764))

(assert (= (and b!86764 res!44607) b!86765))

(assert (=> d!22777 m!91035))

(declare-fun m!92215 () Bool)

(assert (=> d!22777 m!92215))

(declare-fun m!92217 () Bool)

(assert (=> d!22777 m!92217))

(declare-fun m!92219 () Bool)

(assert (=> b!86764 m!92219))

(declare-fun m!92221 () Bool)

(assert (=> b!86765 m!92221))

(assert (=> d!22379 d!22777))

(declare-fun b!86766 () Bool)

(declare-fun e!56536 () List!1519)

(declare-fun call!8287 () List!1519)

(assert (=> b!86766 (= e!56536 call!8287)))

(declare-fun b!86767 () Bool)

(assert (=> b!86767 (= e!56536 call!8287)))

(declare-fun b!86768 () Bool)

(declare-fun res!44608 () Bool)

(declare-fun e!56537 () Bool)

(assert (=> b!86768 (=> (not res!44608) (not e!56537))))

(declare-fun lt!41286 () List!1519)

(assert (=> b!86768 (= res!44608 (containsKey!144 lt!41286 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86769 () Bool)

(declare-fun e!56538 () List!1519)

(declare-fun e!56539 () List!1519)

(assert (=> b!86769 (= e!56538 e!56539)))

(declare-fun c!14203 () Bool)

(assert (=> b!86769 (= c!14203 (and ((_ is Cons!1515) (toList!746 lt!40437)) (= (_1!1110 (h!2106 (toList!746 lt!40437))) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86770 () Bool)

(declare-fun call!8286 () List!1519)

(assert (=> b!86770 (= e!56538 call!8286)))

(declare-fun b!86771 () Bool)

(declare-fun c!14205 () Bool)

(assert (=> b!86771 (= c!14205 (and ((_ is Cons!1515) (toList!746 lt!40437)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40437))) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86771 (= e!56539 e!56536)))

(declare-fun e!56535 () List!1519)

(declare-fun b!86772 () Bool)

(assert (=> b!86772 (= e!56535 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40437)) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86773 () Bool)

(assert (=> b!86773 (= e!56535 (ite c!14203 (t!5240 (toList!746 lt!40437)) (ite c!14205 (Cons!1515 (h!2106 (toList!746 lt!40437)) (t!5240 (toList!746 lt!40437))) Nil!1516)))))

(declare-fun bm!8283 () Bool)

(declare-fun c!14202 () Bool)

(assert (=> bm!8283 (= call!8286 ($colon$colon!72 e!56535 (ite c!14202 (h!2106 (toList!746 lt!40437)) (tuple2!2199 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14204 () Bool)

(assert (=> bm!8283 (= c!14204 c!14202)))

(declare-fun bm!8284 () Bool)

(declare-fun call!8288 () List!1519)

(assert (=> bm!8284 (= call!8288 call!8286)))

(declare-fun bm!8285 () Bool)

(assert (=> bm!8285 (= call!8287 call!8288)))

(declare-fun b!86775 () Bool)

(assert (=> b!86775 (= e!56539 call!8288)))

(declare-fun d!22779 () Bool)

(assert (=> d!22779 e!56537))

(declare-fun res!44609 () Bool)

(assert (=> d!22779 (=> (not res!44609) (not e!56537))))

(assert (=> d!22779 (= res!44609 (isStrictlySorted!298 lt!41286))))

(assert (=> d!22779 (= lt!41286 e!56538)))

(assert (=> d!22779 (= c!14202 (and ((_ is Cons!1515) (toList!746 lt!40437)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40437))) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22779 (isStrictlySorted!298 (toList!746 lt!40437))))

(assert (=> d!22779 (= (insertStrictlySorted!60 (toList!746 lt!40437) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41286)))

(declare-fun b!86774 () Bool)

(assert (=> b!86774 (= e!56537 (contains!754 lt!41286 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22779 c!14202) b!86770))

(assert (= (and d!22779 (not c!14202)) b!86769))

(assert (= (and b!86769 c!14203) b!86775))

(assert (= (and b!86769 (not c!14203)) b!86771))

(assert (= (and b!86771 c!14205) b!86766))

(assert (= (and b!86771 (not c!14205)) b!86767))

(assert (= (or b!86766 b!86767) bm!8285))

(assert (= (or b!86775 bm!8285) bm!8284))

(assert (= (or b!86770 bm!8284) bm!8283))

(assert (= (and bm!8283 c!14204) b!86772))

(assert (= (and bm!8283 (not c!14204)) b!86773))

(assert (= (and d!22779 res!44609) b!86768))

(assert (= (and b!86768 res!44608) b!86774))

(declare-fun m!92223 () Bool)

(assert (=> d!22779 m!92223))

(declare-fun m!92225 () Bool)

(assert (=> d!22779 m!92225))

(declare-fun m!92227 () Bool)

(assert (=> b!86768 m!92227))

(declare-fun m!92229 () Bool)

(assert (=> b!86772 m!92229))

(declare-fun m!92231 () Bool)

(assert (=> b!86774 m!92231))

(declare-fun m!92233 () Bool)

(assert (=> bm!8283 m!92233))

(assert (=> d!22379 d!22779))

(declare-fun d!22781 () Bool)

(assert (=> d!22781 (= (content!90 Nil!1517) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!22301 d!22781))

(declare-fun d!22783 () Bool)

(declare-fun e!56540 () Bool)

(assert (=> d!22783 e!56540))

(declare-fun res!44610 () Bool)

(assert (=> d!22783 (=> (not res!44610) (not e!56540))))

(declare-fun lt!41289 () ListLongMap!1461)

(assert (=> d!22783 (= res!44610 (contains!753 lt!41289 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(declare-fun lt!41288 () List!1519)

(assert (=> d!22783 (= lt!41289 (ListLongMap!1462 lt!41288))))

(declare-fun lt!41290 () Unit!2517)

(declare-fun lt!41287 () Unit!2517)

(assert (=> d!22783 (= lt!41290 lt!41287)))

(assert (=> d!22783 (= (getValueByKey!140 lt!41288 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!22783 (= lt!41287 (lemmaContainsTupThenGetReturnValue!57 lt!41288 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!22783 (= lt!41288 (insertStrictlySorted!60 (toList!746 call!8167) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!22783 (= (+!110 call!8167 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!41289)))

(declare-fun b!86776 () Bool)

(declare-fun res!44611 () Bool)

(assert (=> b!86776 (=> (not res!44611) (not e!56540))))

(assert (=> b!86776 (= res!44611 (= (getValueByKey!140 (toList!746 lt!41289) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(declare-fun b!86777 () Bool)

(assert (=> b!86777 (= e!56540 (contains!754 (toList!746 lt!41289) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))

(assert (= (and d!22783 res!44610) b!86776))

(assert (= (and b!86776 res!44611) b!86777))

(declare-fun m!92235 () Bool)

(assert (=> d!22783 m!92235))

(declare-fun m!92237 () Bool)

(assert (=> d!22783 m!92237))

(declare-fun m!92239 () Bool)

(assert (=> d!22783 m!92239))

(declare-fun m!92241 () Bool)

(assert (=> d!22783 m!92241))

(declare-fun m!92243 () Bool)

(assert (=> b!86776 m!92243))

(declare-fun m!92245 () Bool)

(assert (=> b!86777 m!92245))

(assert (=> b!85825 d!22783))

(declare-fun d!22785 () Bool)

(declare-fun e!56542 () Bool)

(assert (=> d!22785 e!56542))

(declare-fun res!44612 () Bool)

(assert (=> d!22785 (=> res!44612 e!56542)))

(declare-fun lt!41291 () Bool)

(assert (=> d!22785 (= res!44612 (not lt!41291))))

(declare-fun lt!41292 () Bool)

(assert (=> d!22785 (= lt!41291 lt!41292)))

(declare-fun lt!41294 () Unit!2517)

(declare-fun e!56541 () Unit!2517)

(assert (=> d!22785 (= lt!41294 e!56541)))

(declare-fun c!14206 () Bool)

(assert (=> d!22785 (= c!14206 lt!41292)))

(assert (=> d!22785 (= lt!41292 (containsKey!144 (toList!746 lt!40873) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22785 (= (contains!753 lt!40873 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41291)))

(declare-fun b!86778 () Bool)

(declare-fun lt!41293 () Unit!2517)

(assert (=> b!86778 (= e!56541 lt!41293)))

(assert (=> b!86778 (= lt!41293 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40873) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86778 (isDefined!93 (getValueByKey!140 (toList!746 lt!40873) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86779 () Bool)

(declare-fun Unit!2568 () Unit!2517)

(assert (=> b!86779 (= e!56541 Unit!2568)))

(declare-fun b!86780 () Bool)

(assert (=> b!86780 (= e!56542 (isDefined!93 (getValueByKey!140 (toList!746 lt!40873) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22785 c!14206) b!86778))

(assert (= (and d!22785 (not c!14206)) b!86779))

(assert (= (and d!22785 (not res!44612)) b!86780))

(declare-fun m!92247 () Bool)

(assert (=> d!22785 m!92247))

(declare-fun m!92249 () Bool)

(assert (=> b!86778 m!92249))

(declare-fun m!92251 () Bool)

(assert (=> b!86778 m!92251))

(assert (=> b!86778 m!92251))

(declare-fun m!92253 () Bool)

(assert (=> b!86778 m!92253))

(assert (=> b!86780 m!92251))

(assert (=> b!86780 m!92251))

(assert (=> b!86780 m!92253))

(assert (=> bm!8190 d!22785))

(declare-fun lt!41295 () Bool)

(declare-fun d!22787 () Bool)

(assert (=> d!22787 (= lt!41295 (select (content!89 (toList!746 lt!40833)) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56543 () Bool)

(assert (=> d!22787 (= lt!41295 e!56543)))

(declare-fun res!44613 () Bool)

(assert (=> d!22787 (=> (not res!44613) (not e!56543))))

(assert (=> d!22787 (= res!44613 ((_ is Cons!1515) (toList!746 lt!40833)))))

(assert (=> d!22787 (= (contains!754 (toList!746 lt!40833) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41295)))

(declare-fun b!86781 () Bool)

(declare-fun e!56544 () Bool)

(assert (=> b!86781 (= e!56543 e!56544)))

(declare-fun res!44614 () Bool)

(assert (=> b!86781 (=> res!44614 e!56544)))

(assert (=> b!86781 (= res!44614 (= (h!2106 (toList!746 lt!40833)) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86782 () Bool)

(assert (=> b!86782 (= e!56544 (contains!754 (t!5240 (toList!746 lt!40833)) (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (= (and d!22787 res!44613) b!86781))

(assert (= (and b!86781 (not res!44614)) b!86782))

(declare-fun m!92255 () Bool)

(assert (=> d!22787 m!92255))

(declare-fun m!92257 () Bool)

(assert (=> d!22787 m!92257))

(declare-fun m!92259 () Bool)

(assert (=> b!86782 m!92259))

(assert (=> b!85991 d!22787))

(assert (=> b!85795 d!22459))

(assert (=> b!85795 d!22345))

(declare-fun d!22789 () Bool)

(declare-fun lt!41296 () Bool)

(assert (=> d!22789 (= lt!41296 (select (content!89 (toList!746 lt!40994)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56545 () Bool)

(assert (=> d!22789 (= lt!41296 e!56545)))

(declare-fun res!44615 () Bool)

(assert (=> d!22789 (=> (not res!44615) (not e!56545))))

(assert (=> d!22789 (= res!44615 ((_ is Cons!1515) (toList!746 lt!40994)))))

(assert (=> d!22789 (= (contains!754 (toList!746 lt!40994) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41296)))

(declare-fun b!86783 () Bool)

(declare-fun e!56546 () Bool)

(assert (=> b!86783 (= e!56545 e!56546)))

(declare-fun res!44616 () Bool)

(assert (=> b!86783 (=> res!44616 e!56546)))

(assert (=> b!86783 (= res!44616 (= (h!2106 (toList!746 lt!40994)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86784 () Bool)

(assert (=> b!86784 (= e!56546 (contains!754 (t!5240 (toList!746 lt!40994)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22789 res!44615) b!86783))

(assert (= (and b!86783 (not res!44616)) b!86784))

(declare-fun m!92261 () Bool)

(assert (=> d!22789 m!92261))

(declare-fun m!92263 () Bool)

(assert (=> d!22789 m!92263))

(declare-fun m!92265 () Bool)

(assert (=> b!86784 m!92265))

(assert (=> b!86223 d!22789))

(declare-fun b!86785 () Bool)

(declare-fun e!56548 () List!1519)

(declare-fun call!8290 () List!1519)

(assert (=> b!86785 (= e!56548 call!8290)))

(declare-fun b!86786 () Bool)

(assert (=> b!86786 (= e!56548 call!8290)))

(declare-fun b!86787 () Bool)

(declare-fun res!44617 () Bool)

(declare-fun e!56549 () Bool)

(assert (=> b!86787 (=> (not res!44617) (not e!56549))))

(declare-fun lt!41297 () List!1519)

(assert (=> b!86787 (= res!44617 (containsKey!144 lt!41297 (_1!1110 lt!40318)))))

(declare-fun b!86788 () Bool)

(declare-fun e!56550 () List!1519)

(declare-fun e!56551 () List!1519)

(assert (=> b!86788 (= e!56550 e!56551)))

(declare-fun c!14208 () Bool)

(assert (=> b!86788 (= c!14208 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40331))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331)))) (_1!1110 lt!40318))))))

(declare-fun b!86789 () Bool)

(declare-fun call!8289 () List!1519)

(assert (=> b!86789 (= e!56550 call!8289)))

(declare-fun b!86790 () Bool)

(declare-fun c!14210 () Bool)

(assert (=> b!86790 (= c!14210 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40331))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331)))) (_1!1110 lt!40318))))))

(assert (=> b!86790 (= e!56551 e!56548)))

(declare-fun b!86791 () Bool)

(declare-fun e!56547 () List!1519)

(assert (=> b!86791 (= e!56547 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 lt!40331))) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun b!86792 () Bool)

(assert (=> b!86792 (= e!56547 (ite c!14208 (t!5240 (t!5240 (toList!746 lt!40331))) (ite c!14210 (Cons!1515 (h!2106 (t!5240 (toList!746 lt!40331))) (t!5240 (t!5240 (toList!746 lt!40331)))) Nil!1516)))))

(declare-fun bm!8286 () Bool)

(declare-fun c!14207 () Bool)

(assert (=> bm!8286 (= call!8289 ($colon$colon!72 e!56547 (ite c!14207 (h!2106 (t!5240 (toList!746 lt!40331))) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))))))

(declare-fun c!14209 () Bool)

(assert (=> bm!8286 (= c!14209 c!14207)))

(declare-fun bm!8287 () Bool)

(declare-fun call!8291 () List!1519)

(assert (=> bm!8287 (= call!8291 call!8289)))

(declare-fun bm!8288 () Bool)

(assert (=> bm!8288 (= call!8290 call!8291)))

(declare-fun b!86794 () Bool)

(assert (=> b!86794 (= e!56551 call!8291)))

(declare-fun d!22791 () Bool)

(assert (=> d!22791 e!56549))

(declare-fun res!44618 () Bool)

(assert (=> d!22791 (=> (not res!44618) (not e!56549))))

(assert (=> d!22791 (= res!44618 (isStrictlySorted!298 lt!41297))))

(assert (=> d!22791 (= lt!41297 e!56550)))

(assert (=> d!22791 (= c!14207 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40331))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331)))) (_1!1110 lt!40318))))))

(assert (=> d!22791 (isStrictlySorted!298 (t!5240 (toList!746 lt!40331)))))

(assert (=> d!22791 (= (insertStrictlySorted!60 (t!5240 (toList!746 lt!40331)) (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!41297)))

(declare-fun b!86793 () Bool)

(assert (=> b!86793 (= e!56549 (contains!754 lt!41297 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22791 c!14207) b!86789))

(assert (= (and d!22791 (not c!14207)) b!86788))

(assert (= (and b!86788 c!14208) b!86794))

(assert (= (and b!86788 (not c!14208)) b!86790))

(assert (= (and b!86790 c!14210) b!86785))

(assert (= (and b!86790 (not c!14210)) b!86786))

(assert (= (or b!86785 b!86786) bm!8288))

(assert (= (or b!86794 bm!8288) bm!8287))

(assert (= (or b!86789 bm!8287) bm!8286))

(assert (= (and bm!8286 c!14209) b!86791))

(assert (= (and bm!8286 (not c!14209)) b!86792))

(assert (= (and d!22791 res!44618) b!86787))

(assert (= (and b!86787 res!44617) b!86793))

(declare-fun m!92267 () Bool)

(assert (=> d!22791 m!92267))

(assert (=> d!22791 m!91901))

(declare-fun m!92269 () Bool)

(assert (=> b!86787 m!92269))

(declare-fun m!92271 () Bool)

(assert (=> b!86791 m!92271))

(declare-fun m!92273 () Bool)

(assert (=> b!86793 m!92273))

(declare-fun m!92275 () Bool)

(assert (=> bm!8286 m!92275))

(assert (=> b!85752 d!22791))

(assert (=> d!22367 d!22383))

(assert (=> d!22367 d!22379))

(declare-fun d!22793 () Bool)

(assert (=> d!22793 (contains!753 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40444)))

(assert (=> d!22793 true))

(declare-fun _$35!330 () Unit!2517)

(assert (=> d!22793 (= (choose!507 lt!40437 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40444) _$35!330)))

(declare-fun bs!3681 () Bool)

(assert (= bs!3681 d!22793))

(assert (=> bs!3681 m!90025))

(assert (=> bs!3681 m!90025))

(assert (=> bs!3681 m!90027))

(assert (=> d!22367 d!22793))

(declare-fun d!22795 () Bool)

(declare-fun e!56553 () Bool)

(assert (=> d!22795 e!56553))

(declare-fun res!44619 () Bool)

(assert (=> d!22795 (=> res!44619 e!56553)))

(declare-fun lt!41298 () Bool)

(assert (=> d!22795 (= res!44619 (not lt!41298))))

(declare-fun lt!41299 () Bool)

(assert (=> d!22795 (= lt!41298 lt!41299)))

(declare-fun lt!41301 () Unit!2517)

(declare-fun e!56552 () Unit!2517)

(assert (=> d!22795 (= lt!41301 e!56552)))

(declare-fun c!14211 () Bool)

(assert (=> d!22795 (= c!14211 lt!41299)))

(assert (=> d!22795 (= lt!41299 (containsKey!144 (toList!746 lt!40437) lt!40444))))

(assert (=> d!22795 (= (contains!753 lt!40437 lt!40444) lt!41298)))

(declare-fun b!86796 () Bool)

(declare-fun lt!41300 () Unit!2517)

(assert (=> b!86796 (= e!56552 lt!41300)))

(assert (=> b!86796 (= lt!41300 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40437) lt!40444))))

(assert (=> b!86796 (isDefined!93 (getValueByKey!140 (toList!746 lt!40437) lt!40444))))

(declare-fun b!86797 () Bool)

(declare-fun Unit!2569 () Unit!2517)

(assert (=> b!86797 (= e!56552 Unit!2569)))

(declare-fun b!86798 () Bool)

(assert (=> b!86798 (= e!56553 (isDefined!93 (getValueByKey!140 (toList!746 lt!40437) lt!40444)))))

(assert (= (and d!22795 c!14211) b!86796))

(assert (= (and d!22795 (not c!14211)) b!86797))

(assert (= (and d!22795 (not res!44619)) b!86798))

(declare-fun m!92277 () Bool)

(assert (=> d!22795 m!92277))

(declare-fun m!92279 () Bool)

(assert (=> b!86796 m!92279))

(declare-fun m!92281 () Bool)

(assert (=> b!86796 m!92281))

(assert (=> b!86796 m!92281))

(declare-fun m!92283 () Bool)

(assert (=> b!86796 m!92283))

(assert (=> b!86798 m!92281))

(assert (=> b!86798 m!92281))

(assert (=> b!86798 m!92283))

(assert (=> d!22367 d!22795))

(declare-fun d!22797 () Bool)

(declare-fun res!44620 () Bool)

(declare-fun e!56554 () Bool)

(assert (=> d!22797 (=> res!44620 e!56554)))

(assert (=> d!22797 (= res!44620 (and ((_ is Cons!1515) (toList!746 lt!40450)) (= (_1!1110 (h!2106 (toList!746 lt!40450))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22797 (= (containsKey!144 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56554)))

(declare-fun b!86799 () Bool)

(declare-fun e!56555 () Bool)

(assert (=> b!86799 (= e!56554 e!56555)))

(declare-fun res!44621 () Bool)

(assert (=> b!86799 (=> (not res!44621) (not e!56555))))

(assert (=> b!86799 (= res!44621 (and (or (not ((_ is Cons!1515) (toList!746 lt!40450))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40450))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1515) (toList!746 lt!40450)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40450))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!86800 () Bool)

(assert (=> b!86800 (= e!56555 (containsKey!144 (t!5240 (toList!746 lt!40450)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22797 (not res!44620)) b!86799))

(assert (= (and b!86799 res!44621) b!86800))

(assert (=> b!86800 m!89983))

(declare-fun m!92285 () Bool)

(assert (=> b!86800 m!92285))

(assert (=> d!22343 d!22797))

(assert (=> d!22295 d!22297))

(assert (=> d!22295 d!22299))

(declare-fun d!22799 () Bool)

(assert (=> d!22799 (isDefined!93 (getValueByKey!140 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22799 true))

(declare-fun _$12!335 () Unit!2517)

(assert (=> d!22799 (= (choose!504 (toList!746 lt!40315) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) _$12!335)))

(declare-fun bs!3682 () Bool)

(assert (= bs!3682 d!22799))

(assert (=> bs!3682 m!89857))

(assert (=> bs!3682 m!90049))

(assert (=> bs!3682 m!90049))

(assert (=> bs!3682 m!90051))

(assert (=> d!22295 d!22799))

(declare-fun d!22801 () Bool)

(declare-fun res!44622 () Bool)

(declare-fun e!56556 () Bool)

(assert (=> d!22801 (=> res!44622 e!56556)))

(assert (=> d!22801 (= res!44622 (or ((_ is Nil!1516) (toList!746 lt!40315)) ((_ is Nil!1516) (t!5240 (toList!746 lt!40315)))))))

(assert (=> d!22801 (= (isStrictlySorted!298 (toList!746 lt!40315)) e!56556)))

(declare-fun b!86801 () Bool)

(declare-fun e!56557 () Bool)

(assert (=> b!86801 (= e!56556 e!56557)))

(declare-fun res!44623 () Bool)

(assert (=> b!86801 (=> (not res!44623) (not e!56557))))

(assert (=> b!86801 (= res!44623 (bvslt (_1!1110 (h!2106 (toList!746 lt!40315))) (_1!1110 (h!2106 (t!5240 (toList!746 lt!40315))))))))

(declare-fun b!86802 () Bool)

(assert (=> b!86802 (= e!56557 (isStrictlySorted!298 (t!5240 (toList!746 lt!40315))))))

(assert (= (and d!22801 (not res!44622)) b!86801))

(assert (= (and b!86801 res!44623) b!86802))

(declare-fun m!92287 () Bool)

(assert (=> b!86802 m!92287))

(assert (=> d!22295 d!22801))

(assert (=> b!85994 d!22479))

(assert (=> b!85994 d!22481))

(declare-fun d!22803 () Bool)

(declare-fun res!44624 () Bool)

(declare-fun e!56558 () Bool)

(assert (=> d!22803 (=> res!44624 e!56558)))

(assert (=> d!22803 (= res!44624 (and ((_ is Cons!1515) lt!40567) (= (_1!1110 (h!2106 lt!40567)) (_1!1110 lt!40324))))))

(assert (=> d!22803 (= (containsKey!144 lt!40567 (_1!1110 lt!40324)) e!56558)))

(declare-fun b!86803 () Bool)

(declare-fun e!56559 () Bool)

(assert (=> b!86803 (= e!56558 e!56559)))

(declare-fun res!44625 () Bool)

(assert (=> b!86803 (=> (not res!44625) (not e!56559))))

(assert (=> b!86803 (= res!44625 (and (or (not ((_ is Cons!1515) lt!40567)) (bvsle (_1!1110 (h!2106 lt!40567)) (_1!1110 lt!40324))) ((_ is Cons!1515) lt!40567) (bvslt (_1!1110 (h!2106 lt!40567)) (_1!1110 lt!40324))))))

(declare-fun b!86804 () Bool)

(assert (=> b!86804 (= e!56559 (containsKey!144 (t!5240 lt!40567) (_1!1110 lt!40324)))))

(assert (= (and d!22803 (not res!44624)) b!86803))

(assert (= (and b!86803 res!44625) b!86804))

(declare-fun m!92289 () Bool)

(assert (=> b!86804 m!92289))

(assert (=> b!85800 d!22803))

(declare-fun d!22805 () Bool)

(declare-fun res!44626 () Bool)

(declare-fun e!56560 () Bool)

(assert (=> d!22805 (=> res!44626 e!56560)))

(assert (=> d!22805 (= res!44626 (and ((_ is Cons!1515) (toList!746 e!55818)) (= (_1!1110 (h!2106 (toList!746 e!55818))) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))))

(assert (=> d!22805 (= (containsKey!144 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))) e!56560)))

(declare-fun b!86805 () Bool)

(declare-fun e!56561 () Bool)

(assert (=> b!86805 (= e!56560 e!56561)))

(declare-fun res!44627 () Bool)

(assert (=> b!86805 (=> (not res!44627) (not e!56561))))

(assert (=> b!86805 (= res!44627 (and (or (not ((_ is Cons!1515) (toList!746 e!55818))) (bvsle (_1!1110 (h!2106 (toList!746 e!55818))) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))) ((_ is Cons!1515) (toList!746 e!55818)) (bvslt (_1!1110 (h!2106 (toList!746 e!55818))) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))))

(declare-fun b!86806 () Bool)

(assert (=> b!86806 (= e!56561 (containsKey!144 (t!5240 (toList!746 e!55818)) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(assert (= (and d!22805 (not res!44626)) b!86805))

(assert (= (and b!86805 res!44627) b!86806))

(declare-fun m!92291 () Bool)

(assert (=> b!86806 m!92291))

(assert (=> d!22321 d!22805))

(declare-fun d!22807 () Bool)

(declare-fun res!44628 () Bool)

(declare-fun e!56562 () Bool)

(assert (=> d!22807 (=> res!44628 e!56562)))

(assert (=> d!22807 (= res!44628 (or ((_ is Nil!1516) lt!41011) ((_ is Nil!1516) (t!5240 lt!41011))))))

(assert (=> d!22807 (= (isStrictlySorted!298 lt!41011) e!56562)))

(declare-fun b!86807 () Bool)

(declare-fun e!56563 () Bool)

(assert (=> b!86807 (= e!56562 e!56563)))

(declare-fun res!44629 () Bool)

(assert (=> b!86807 (=> (not res!44629) (not e!56563))))

(assert (=> b!86807 (= res!44629 (bvslt (_1!1110 (h!2106 lt!41011)) (_1!1110 (h!2106 (t!5240 lt!41011)))))))

(declare-fun b!86808 () Bool)

(assert (=> b!86808 (= e!56563 (isStrictlySorted!298 (t!5240 lt!41011)))))

(assert (= (and d!22807 (not res!44628)) b!86807))

(assert (= (and b!86807 res!44629) b!86808))

(declare-fun m!92293 () Bool)

(assert (=> b!86808 m!92293))

(assert (=> d!22433 d!22807))

(declare-fun d!22809 () Bool)

(declare-fun res!44630 () Bool)

(declare-fun e!56564 () Bool)

(assert (=> d!22809 (=> res!44630 e!56564)))

(assert (=> d!22809 (= res!44630 (or ((_ is Nil!1516) (toList!746 lt!40331)) ((_ is Nil!1516) (t!5240 (toList!746 lt!40331)))))))

(assert (=> d!22809 (= (isStrictlySorted!298 (toList!746 lt!40331)) e!56564)))

(declare-fun b!86809 () Bool)

(declare-fun e!56565 () Bool)

(assert (=> b!86809 (= e!56564 e!56565)))

(declare-fun res!44631 () Bool)

(assert (=> b!86809 (=> (not res!44631) (not e!56565))))

(assert (=> b!86809 (= res!44631 (bvslt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (h!2106 (t!5240 (toList!746 lt!40331))))))))

(declare-fun b!86810 () Bool)

(assert (=> b!86810 (= e!56565 (isStrictlySorted!298 (t!5240 (toList!746 lt!40331))))))

(assert (= (and d!22809 (not res!44630)) b!86809))

(assert (= (and b!86809 res!44631) b!86810))

(assert (=> b!86810 m!91901))

(assert (=> d!22433 d!22809))

(declare-fun d!22811 () Bool)

(assert (=> d!22811 (= (get!1198 (getValueByKey!140 (toList!746 lt!40451) lt!40440)) (v!2649 (getValueByKey!140 (toList!746 lt!40451) lt!40440)))))

(assert (=> d!22385 d!22811))

(declare-fun b!86811 () Bool)

(declare-fun e!56566 () Option!146)

(assert (=> b!86811 (= e!56566 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40451)))))))

(declare-fun d!22813 () Bool)

(declare-fun c!14212 () Bool)

(assert (=> d!22813 (= c!14212 (and ((_ is Cons!1515) (toList!746 lt!40451)) (= (_1!1110 (h!2106 (toList!746 lt!40451))) lt!40440)))))

(assert (=> d!22813 (= (getValueByKey!140 (toList!746 lt!40451) lt!40440) e!56566)))

(declare-fun b!86814 () Bool)

(declare-fun e!56567 () Option!146)

(assert (=> b!86814 (= e!56567 None!144)))

(declare-fun b!86813 () Bool)

(assert (=> b!86813 (= e!56567 (getValueByKey!140 (t!5240 (toList!746 lt!40451)) lt!40440))))

(declare-fun b!86812 () Bool)

(assert (=> b!86812 (= e!56566 e!56567)))

(declare-fun c!14213 () Bool)

(assert (=> b!86812 (= c!14213 (and ((_ is Cons!1515) (toList!746 lt!40451)) (not (= (_1!1110 (h!2106 (toList!746 lt!40451))) lt!40440))))))

(assert (= (and d!22813 c!14212) b!86811))

(assert (= (and d!22813 (not c!14212)) b!86812))

(assert (= (and b!86812 c!14213) b!86813))

(assert (= (and b!86812 (not c!14213)) b!86814))

(declare-fun m!92295 () Bool)

(assert (=> b!86813 m!92295))

(assert (=> d!22385 d!22813))

(declare-fun d!22815 () Bool)

(assert (=> d!22815 (= (apply!82 lt!40918 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40918) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3683 () Bool)

(assert (= bs!3683 d!22815))

(assert (=> bs!3683 m!92203))

(assert (=> bs!3683 m!92203))

(declare-fun m!92297 () Bool)

(assert (=> bs!3683 m!92297))

(assert (=> b!86073 d!22815))

(declare-fun d!22817 () Bool)

(declare-fun lt!41302 () Bool)

(assert (=> d!22817 (= lt!41302 (select (content!89 (t!5240 (toList!746 lt!40596))) lt!40322))))

(declare-fun e!56568 () Bool)

(assert (=> d!22817 (= lt!41302 e!56568)))

(declare-fun res!44632 () Bool)

(assert (=> d!22817 (=> (not res!44632) (not e!56568))))

(assert (=> d!22817 (= res!44632 ((_ is Cons!1515) (t!5240 (toList!746 lt!40596))))))

(assert (=> d!22817 (= (contains!754 (t!5240 (toList!746 lt!40596)) lt!40322) lt!41302)))

(declare-fun b!86815 () Bool)

(declare-fun e!56569 () Bool)

(assert (=> b!86815 (= e!56568 e!56569)))

(declare-fun res!44633 () Bool)

(assert (=> b!86815 (=> res!44633 e!56569)))

(assert (=> b!86815 (= res!44633 (= (h!2106 (t!5240 (toList!746 lt!40596))) lt!40322))))

(declare-fun b!86816 () Bool)

(assert (=> b!86816 (= e!56569 (contains!754 (t!5240 (t!5240 (toList!746 lt!40596))) lt!40322))))

(assert (= (and d!22817 res!44632) b!86815))

(assert (= (and b!86815 (not res!44633)) b!86816))

(declare-fun m!92299 () Bool)

(assert (=> d!22817 m!92299))

(declare-fun m!92301 () Bool)

(assert (=> d!22817 m!92301))

(declare-fun m!92303 () Bool)

(assert (=> b!86816 m!92303))

(assert (=> b!85998 d!22817))

(declare-fun b!86817 () Bool)

(declare-fun e!56570 () Option!146)

(assert (=> b!86817 (= e!56570 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40963)))))))

(declare-fun c!14214 () Bool)

(declare-fun d!22819 () Bool)

(assert (=> d!22819 (= c!14214 (and ((_ is Cons!1515) (toList!746 lt!40963)) (= (_1!1110 (h!2106 (toList!746 lt!40963))) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22819 (= (getValueByKey!140 (toList!746 lt!40963) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56570)))

(declare-fun b!86820 () Bool)

(declare-fun e!56571 () Option!146)

(assert (=> b!86820 (= e!56571 None!144)))

(declare-fun b!86819 () Bool)

(assert (=> b!86819 (= e!56571 (getValueByKey!140 (t!5240 (toList!746 lt!40963)) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86818 () Bool)

(assert (=> b!86818 (= e!56570 e!56571)))

(declare-fun c!14215 () Bool)

(assert (=> b!86818 (= c!14215 (and ((_ is Cons!1515) (toList!746 lt!40963)) (not (= (_1!1110 (h!2106 (toList!746 lt!40963))) (_1!1110 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22819 c!14214) b!86817))

(assert (= (and d!22819 (not c!14214)) b!86818))

(assert (= (and b!86818 c!14215) b!86819))

(assert (= (and b!86818 (not c!14215)) b!86820))

(declare-fun m!92305 () Bool)

(assert (=> b!86819 m!92305))

(assert (=> b!86158 d!22819))

(declare-fun d!22821 () Bool)

(declare-fun res!44634 () Bool)

(declare-fun e!56572 () Bool)

(assert (=> d!22821 (=> res!44634 e!56572)))

(assert (=> d!22821 (= res!44634 (and ((_ is Cons!1515) lt!40599) (= (_1!1110 (h!2106 lt!40599)) (_1!1110 lt!40318))))))

(assert (=> d!22821 (= (containsKey!144 lt!40599 (_1!1110 lt!40318)) e!56572)))

(declare-fun b!86821 () Bool)

(declare-fun e!56573 () Bool)

(assert (=> b!86821 (= e!56572 e!56573)))

(declare-fun res!44635 () Bool)

(assert (=> b!86821 (=> (not res!44635) (not e!56573))))

(assert (=> b!86821 (= res!44635 (and (or (not ((_ is Cons!1515) lt!40599)) (bvsle (_1!1110 (h!2106 lt!40599)) (_1!1110 lt!40318))) ((_ is Cons!1515) lt!40599) (bvslt (_1!1110 (h!2106 lt!40599)) (_1!1110 lt!40318))))))

(declare-fun b!86822 () Bool)

(assert (=> b!86822 (= e!56573 (containsKey!144 (t!5240 lt!40599) (_1!1110 lt!40318)))))

(assert (= (and d!22821 (not res!44634)) b!86821))

(assert (= (and b!86821 res!44635) b!86822))

(declare-fun m!92307 () Bool)

(assert (=> b!86822 m!92307))

(assert (=> b!86106 d!22821))

(declare-fun d!22823 () Bool)

(assert (=> d!22823 (= (apply!82 lt!40873 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40873) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3684 () Bool)

(assert (= bs!3684 d!22823))

(assert (=> bs!3684 m!92251))

(assert (=> bs!3684 m!92251))

(declare-fun m!92309 () Bool)

(assert (=> bs!3684 m!92309))

(assert (=> b!86010 d!22823))

(declare-fun d!22825 () Bool)

(assert (not d!22825))

(assert (=> b!85989 d!22825))

(declare-fun b!86823 () Bool)

(declare-fun e!56574 () Option!146)

(assert (=> b!86823 (= e!56574 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40568))))))))

(declare-fun d!22827 () Bool)

(declare-fun c!14216 () Bool)

(assert (=> d!22827 (= c!14216 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40568))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40568)))) (_1!1110 lt!40324))))))

(assert (=> d!22827 (= (getValueByKey!140 (t!5240 (toList!746 lt!40568)) (_1!1110 lt!40324)) e!56574)))

(declare-fun b!86826 () Bool)

(declare-fun e!56575 () Option!146)

(assert (=> b!86826 (= e!56575 None!144)))

(declare-fun b!86825 () Bool)

(assert (=> b!86825 (= e!56575 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40568))) (_1!1110 lt!40324)))))

(declare-fun b!86824 () Bool)

(assert (=> b!86824 (= e!56574 e!56575)))

(declare-fun c!14217 () Bool)

(assert (=> b!86824 (= c!14217 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40568))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40568)))) (_1!1110 lt!40324)))))))

(assert (= (and d!22827 c!14216) b!86823))

(assert (= (and d!22827 (not c!14216)) b!86824))

(assert (= (and b!86824 c!14217) b!86825))

(assert (= (and b!86824 (not c!14217)) b!86826))

(declare-fun m!92311 () Bool)

(assert (=> b!86825 m!92311))

(assert (=> b!86097 d!22827))

(declare-fun d!22829 () Bool)

(declare-fun lt!41303 () Bool)

(assert (=> d!22829 (= lt!41303 (select (content!89 lt!40599) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun e!56576 () Bool)

(assert (=> d!22829 (= lt!41303 e!56576)))

(declare-fun res!44636 () Bool)

(assert (=> d!22829 (=> (not res!44636) (not e!56576))))

(assert (=> d!22829 (= res!44636 ((_ is Cons!1515) lt!40599))))

(assert (=> d!22829 (= (contains!754 lt!40599 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) lt!41303)))

(declare-fun b!86827 () Bool)

(declare-fun e!56577 () Bool)

(assert (=> b!86827 (= e!56576 e!56577)))

(declare-fun res!44637 () Bool)

(assert (=> b!86827 (=> res!44637 e!56577)))

(assert (=> b!86827 (= res!44637 (= (h!2106 lt!40599) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun b!86828 () Bool)

(assert (=> b!86828 (= e!56577 (contains!754 (t!5240 lt!40599) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22829 res!44636) b!86827))

(assert (= (and b!86827 (not res!44637)) b!86828))

(declare-fun m!92313 () Bool)

(assert (=> d!22829 m!92313))

(declare-fun m!92315 () Bool)

(assert (=> d!22829 m!92315))

(declare-fun m!92317 () Bool)

(assert (=> b!86828 m!92317))

(assert (=> b!86107 d!22829))

(declare-fun d!22831 () Bool)

(declare-fun e!56579 () Bool)

(assert (=> d!22831 e!56579))

(declare-fun res!44638 () Bool)

(assert (=> d!22831 (=> res!44638 e!56579)))

(declare-fun lt!41304 () Bool)

(assert (=> d!22831 (= res!44638 (not lt!41304))))

(declare-fun lt!41305 () Bool)

(assert (=> d!22831 (= lt!41304 lt!41305)))

(declare-fun lt!41307 () Unit!2517)

(declare-fun e!56578 () Unit!2517)

(assert (=> d!22831 (= lt!41307 e!56578)))

(declare-fun c!14218 () Bool)

(assert (=> d!22831 (= c!14218 lt!41305)))

(assert (=> d!22831 (= lt!41305 (containsKey!144 (toList!746 lt!40873) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22831 (= (contains!753 lt!40873 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41304)))

(declare-fun b!86829 () Bool)

(declare-fun lt!41306 () Unit!2517)

(assert (=> b!86829 (= e!56578 lt!41306)))

(assert (=> b!86829 (= lt!41306 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40873) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86829 (isDefined!93 (getValueByKey!140 (toList!746 lt!40873) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86830 () Bool)

(declare-fun Unit!2570 () Unit!2517)

(assert (=> b!86830 (= e!56578 Unit!2570)))

(declare-fun b!86831 () Bool)

(assert (=> b!86831 (= e!56579 (isDefined!93 (getValueByKey!140 (toList!746 lt!40873) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22831 c!14218) b!86829))

(assert (= (and d!22831 (not c!14218)) b!86830))

(assert (= (and d!22831 (not res!44638)) b!86831))

(assert (=> d!22831 m!90363))

(declare-fun m!92319 () Bool)

(assert (=> d!22831 m!92319))

(assert (=> b!86829 m!90363))

(declare-fun m!92321 () Bool)

(assert (=> b!86829 m!92321))

(assert (=> b!86829 m!90363))

(assert (=> b!86829 m!91861))

(assert (=> b!86829 m!91861))

(declare-fun m!92323 () Bool)

(assert (=> b!86829 m!92323))

(assert (=> b!86831 m!90363))

(assert (=> b!86831 m!91861))

(assert (=> b!86831 m!91861))

(assert (=> b!86831 m!92323))

(assert (=> b!86011 d!22831))

(declare-fun d!22833 () Bool)

(assert (=> d!22833 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41308 () Unit!2517)

(assert (=> d!22833 (= lt!41308 (choose!504 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56580 () Bool)

(assert (=> d!22833 e!56580))

(declare-fun res!44639 () Bool)

(assert (=> d!22833 (=> (not res!44639) (not e!56580))))

(assert (=> d!22833 (= res!44639 (isStrictlySorted!298 (toList!746 lt!40584)))))

(assert (=> d!22833 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41308)))

(declare-fun b!86832 () Bool)

(assert (=> b!86832 (= e!56580 (containsKey!144 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22833 res!44639) b!86832))

(assert (=> d!22833 m!90463))

(assert (=> d!22833 m!90463))

(assert (=> d!22833 m!90465))

(declare-fun m!92325 () Bool)

(assert (=> d!22833 m!92325))

(assert (=> d!22833 m!91313))

(assert (=> b!86832 m!90459))

(assert (=> b!85845 d!22833))

(declare-fun d!22835 () Bool)

(assert (=> d!22835 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3685 () Bool)

(assert (= bs!3685 d!22835))

(assert (=> bs!3685 m!90463))

(declare-fun m!92327 () Bool)

(assert (=> bs!3685 m!92327))

(assert (=> b!85845 d!22835))

(declare-fun b!86833 () Bool)

(declare-fun e!56581 () Option!146)

(assert (=> b!86833 (= e!56581 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40584)))))))

(declare-fun d!22837 () Bool)

(declare-fun c!14219 () Bool)

(assert (=> d!22837 (= c!14219 (and ((_ is Cons!1515) (toList!746 lt!40584)) (= (_1!1110 (h!2106 (toList!746 lt!40584))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22837 (= (getValueByKey!140 (toList!746 lt!40584) #b0000000000000000000000000000000000000000000000000000000000000000) e!56581)))

(declare-fun b!86836 () Bool)

(declare-fun e!56582 () Option!146)

(assert (=> b!86836 (= e!56582 None!144)))

(declare-fun b!86835 () Bool)

(assert (=> b!86835 (= e!56582 (getValueByKey!140 (t!5240 (toList!746 lt!40584)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86834 () Bool)

(assert (=> b!86834 (= e!56581 e!56582)))

(declare-fun c!14220 () Bool)

(assert (=> b!86834 (= c!14220 (and ((_ is Cons!1515) (toList!746 lt!40584)) (not (= (_1!1110 (h!2106 (toList!746 lt!40584))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22837 c!14219) b!86833))

(assert (= (and d!22837 (not c!14219)) b!86834))

(assert (= (and b!86834 c!14220) b!86835))

(assert (= (and b!86834 (not c!14220)) b!86836))

(declare-fun m!92329 () Bool)

(assert (=> b!86835 m!92329))

(assert (=> b!85845 d!22837))

(declare-fun d!22839 () Bool)

(assert (=> d!22839 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41309 () Unit!2517)

(assert (=> d!22839 (= lt!41309 (choose!504 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56583 () Bool)

(assert (=> d!22839 e!56583))

(declare-fun res!44640 () Bool)

(assert (=> d!22839 (=> (not res!44640) (not e!56583))))

(assert (=> d!22839 (= res!44640 (isStrictlySorted!298 (toList!746 lt!40450)))))

(assert (=> d!22839 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41309)))

(declare-fun b!86837 () Bool)

(assert (=> b!86837 (= e!56583 (containsKey!144 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22839 res!44640) b!86837))

(assert (=> d!22839 m!90597))

(assert (=> d!22839 m!90597))

(assert (=> d!22839 m!90837))

(declare-fun m!92331 () Bool)

(assert (=> d!22839 m!92331))

(declare-fun m!92333 () Bool)

(assert (=> d!22839 m!92333))

(assert (=> b!86837 m!90833))

(assert (=> b!86042 d!22839))

(declare-fun d!22841 () Bool)

(assert (=> d!22841 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40450) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3686 () Bool)

(assert (= bs!3686 d!22841))

(assert (=> bs!3686 m!90597))

(declare-fun m!92335 () Bool)

(assert (=> bs!3686 m!92335))

(assert (=> b!86042 d!22841))

(assert (=> b!86042 d!22663))

(declare-fun b!86838 () Bool)

(declare-fun e!56584 () Option!146)

(assert (=> b!86838 (= e!56584 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40998)))))))

(declare-fun d!22843 () Bool)

(declare-fun c!14221 () Bool)

(assert (=> d!22843 (= c!14221 (and ((_ is Cons!1515) (toList!746 lt!40998)) (= (_1!1110 (h!2106 (toList!746 lt!40998))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22843 (= (getValueByKey!140 (toList!746 lt!40998) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56584)))

(declare-fun b!86841 () Bool)

(declare-fun e!56585 () Option!146)

(assert (=> b!86841 (= e!56585 None!144)))

(declare-fun b!86840 () Bool)

(assert (=> b!86840 (= e!56585 (getValueByKey!140 (t!5240 (toList!746 lt!40998)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!86839 () Bool)

(assert (=> b!86839 (= e!56584 e!56585)))

(declare-fun c!14222 () Bool)

(assert (=> b!86839 (= c!14222 (and ((_ is Cons!1515) (toList!746 lt!40998)) (not (= (_1!1110 (h!2106 (toList!746 lt!40998))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!22843 c!14221) b!86838))

(assert (= (and d!22843 (not c!14221)) b!86839))

(assert (= (and b!86839 c!14222) b!86840))

(assert (= (and b!86839 (not c!14222)) b!86841))

(declare-fun m!92337 () Bool)

(assert (=> b!86840 m!92337))

(assert (=> b!86224 d!22843))

(assert (=> d!22431 d!22429))

(declare-fun d!22845 () Bool)

(assert (=> d!22845 (= (getValueByKey!140 lt!40555 (_1!1110 lt!40322)) (Some!145 (_2!1110 lt!40322)))))

(assert (=> d!22845 true))

(declare-fun _$22!420 () Unit!2517)

(assert (=> d!22845 (= (choose!500 lt!40555 (_1!1110 lt!40322) (_2!1110 lt!40322)) _$22!420)))

(declare-fun bs!3687 () Bool)

(assert (= bs!3687 d!22845))

(assert (=> bs!3687 m!90109))

(assert (=> d!22431 d!22845))

(declare-fun d!22847 () Bool)

(declare-fun res!44641 () Bool)

(declare-fun e!56586 () Bool)

(assert (=> d!22847 (=> res!44641 e!56586)))

(assert (=> d!22847 (= res!44641 (or ((_ is Nil!1516) lt!40555) ((_ is Nil!1516) (t!5240 lt!40555))))))

(assert (=> d!22847 (= (isStrictlySorted!298 lt!40555) e!56586)))

(declare-fun b!86842 () Bool)

(declare-fun e!56587 () Bool)

(assert (=> b!86842 (= e!56586 e!56587)))

(declare-fun res!44642 () Bool)

(assert (=> b!86842 (=> (not res!44642) (not e!56587))))

(assert (=> b!86842 (= res!44642 (bvslt (_1!1110 (h!2106 lt!40555)) (_1!1110 (h!2106 (t!5240 lt!40555)))))))

(declare-fun b!86843 () Bool)

(assert (=> b!86843 (= e!56587 (isStrictlySorted!298 (t!5240 lt!40555)))))

(assert (= (and d!22847 (not res!44641)) b!86842))

(assert (= (and b!86842 res!44642) b!86843))

(declare-fun m!92339 () Bool)

(assert (=> b!86843 m!92339))

(assert (=> d!22431 d!22847))

(declare-fun d!22849 () Bool)

(declare-fun e!56589 () Bool)

(assert (=> d!22849 e!56589))

(declare-fun res!44643 () Bool)

(assert (=> d!22849 (=> res!44643 e!56589)))

(declare-fun lt!41310 () Bool)

(assert (=> d!22849 (= res!44643 (not lt!41310))))

(declare-fun lt!41311 () Bool)

(assert (=> d!22849 (= lt!41310 lt!41311)))

(declare-fun lt!41313 () Unit!2517)

(declare-fun e!56588 () Unit!2517)

(assert (=> d!22849 (= lt!41313 e!56588)))

(declare-fun c!14223 () Bool)

(assert (=> d!22849 (= c!14223 lt!41311)))

(assert (=> d!22849 (= lt!41311 (containsKey!144 (toList!746 (map!1188 (_2!1109 lt!40816))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> d!22849 (= (contains!753 (map!1188 (_2!1109 lt!40816)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!41310)))

(declare-fun b!86844 () Bool)

(declare-fun lt!41312 () Unit!2517)

(assert (=> b!86844 (= e!56588 lt!41312)))

(assert (=> b!86844 (= lt!41312 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (map!1188 (_2!1109 lt!40816))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!86844 (isDefined!93 (getValueByKey!140 (toList!746 (map!1188 (_2!1109 lt!40816))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!86845 () Bool)

(declare-fun Unit!2571 () Unit!2517)

(assert (=> b!86845 (= e!56588 Unit!2571)))

(declare-fun b!86846 () Bool)

(assert (=> b!86846 (= e!56589 (isDefined!93 (getValueByKey!140 (toList!746 (map!1188 (_2!1109 lt!40816))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (= (and d!22849 c!14223) b!86844))

(assert (= (and d!22849 (not c!14223)) b!86845))

(assert (= (and d!22849 (not res!44643)) b!86846))

(assert (=> d!22849 m!89857))

(declare-fun m!92341 () Bool)

(assert (=> d!22849 m!92341))

(assert (=> b!86844 m!89857))

(declare-fun m!92343 () Bool)

(assert (=> b!86844 m!92343))

(assert (=> b!86844 m!89857))

(declare-fun m!92345 () Bool)

(assert (=> b!86844 m!92345))

(assert (=> b!86844 m!92345))

(declare-fun m!92347 () Bool)

(assert (=> b!86844 m!92347))

(assert (=> b!86846 m!89857))

(assert (=> b!86846 m!92345))

(assert (=> b!86846 m!92345))

(assert (=> b!86846 m!92347))

(assert (=> b!85962 d!22849))

(declare-fun d!22851 () Bool)

(assert (=> d!22851 (= (map!1188 (_2!1109 lt!40816)) (getCurrentListMap!439 (_keys!4010 (_2!1109 lt!40816)) (_values!2321 (_2!1109 lt!40816)) (mask!6366 (_2!1109 lt!40816)) (extraKeys!2177 (_2!1109 lt!40816)) (zeroValue!2230 (_2!1109 lt!40816)) (minValue!2230 (_2!1109 lt!40816)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40816))))))

(declare-fun bs!3688 () Bool)

(assert (= bs!3688 d!22851))

(declare-fun m!92349 () Bool)

(assert (=> bs!3688 m!92349))

(assert (=> b!85962 d!22851))

(assert (=> b!85840 d!22569))

(assert (=> b!85840 d!22571))

(declare-fun lt!41314 () Bool)

(declare-fun d!22853 () Bool)

(assert (=> d!22853 (= lt!41314 (select (content!89 (toList!746 lt!40949)) (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56590 () Bool)

(assert (=> d!22853 (= lt!41314 e!56590)))

(declare-fun res!44644 () Bool)

(assert (=> d!22853 (=> (not res!44644) (not e!56590))))

(assert (=> d!22853 (= res!44644 ((_ is Cons!1515) (toList!746 lt!40949)))))

(assert (=> d!22853 (= (contains!754 (toList!746 lt!40949) (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41314)))

(declare-fun b!86847 () Bool)

(declare-fun e!56591 () Bool)

(assert (=> b!86847 (= e!56590 e!56591)))

(declare-fun res!44645 () Bool)

(assert (=> b!86847 (=> res!44645 e!56591)))

(assert (=> b!86847 (= res!44645 (= (h!2106 (toList!746 lt!40949)) (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!86848 () Bool)

(assert (=> b!86848 (= e!56591 (contains!754 (t!5240 (toList!746 lt!40949)) (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!22853 res!44644) b!86847))

(assert (= (and b!86847 (not res!44645)) b!86848))

(declare-fun m!92351 () Bool)

(assert (=> d!22853 m!92351))

(declare-fun m!92353 () Bool)

(assert (=> d!22853 m!92353))

(declare-fun m!92355 () Bool)

(assert (=> b!86848 m!92355))

(assert (=> b!86150 d!22853))

(declare-fun d!22855 () Bool)

(assert (=> d!22855 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41315 () Unit!2517)

(assert (=> d!22855 (= lt!41315 (choose!504 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56592 () Bool)

(assert (=> d!22855 e!56592))

(declare-fun res!44646 () Bool)

(assert (=> d!22855 (=> (not res!44646) (not e!56592))))

(assert (=> d!22855 (= res!44646 (isStrictlySorted!298 (toList!746 lt!40450)))))

(assert (=> d!22855 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41315)))

(declare-fun b!86849 () Bool)

(assert (=> b!86849 (= e!56592 (containsKey!144 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22855 res!44646) b!86849))

(assert (=> d!22855 m!89983))

(assert (=> d!22855 m!90327))

(assert (=> d!22855 m!90327))

(assert (=> d!22855 m!90935))

(assert (=> d!22855 m!89983))

(declare-fun m!92357 () Bool)

(assert (=> d!22855 m!92357))

(assert (=> d!22855 m!92333))

(assert (=> b!86849 m!89983))

(assert (=> b!86849 m!90931))

(assert (=> b!86092 d!22855))

(declare-fun d!22857 () Bool)

(assert (=> d!22857 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3689 () Bool)

(assert (= bs!3689 d!22857))

(assert (=> bs!3689 m!90327))

(declare-fun m!92359 () Bool)

(assert (=> bs!3689 m!92359))

(assert (=> b!86092 d!22857))

(declare-fun b!86850 () Bool)

(declare-fun e!56593 () Option!146)

(assert (=> b!86850 (= e!56593 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40450)))))))

(declare-fun d!22859 () Bool)

(declare-fun c!14224 () Bool)

(assert (=> d!22859 (= c!14224 (and ((_ is Cons!1515) (toList!746 lt!40450)) (= (_1!1110 (h!2106 (toList!746 lt!40450))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22859 (= (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56593)))

(declare-fun b!86853 () Bool)

(declare-fun e!56594 () Option!146)

(assert (=> b!86853 (= e!56594 None!144)))

(declare-fun b!86852 () Bool)

(assert (=> b!86852 (= e!56594 (getValueByKey!140 (t!5240 (toList!746 lt!40450)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86851 () Bool)

(assert (=> b!86851 (= e!56593 e!56594)))

(declare-fun c!14225 () Bool)

(assert (=> b!86851 (= c!14225 (and ((_ is Cons!1515) (toList!746 lt!40450)) (not (= (_1!1110 (h!2106 (toList!746 lt!40450))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!22859 c!14224) b!86850))

(assert (= (and d!22859 (not c!14224)) b!86851))

(assert (= (and b!86851 c!14225) b!86852))

(assert (= (and b!86851 (not c!14225)) b!86853))

(assert (=> b!86852 m!89983))

(declare-fun m!92361 () Bool)

(assert (=> b!86852 m!92361))

(assert (=> b!86092 d!22859))

(declare-fun d!22861 () Bool)

(declare-fun res!44647 () Bool)

(declare-fun e!56595 () Bool)

(assert (=> d!22861 (=> res!44647 e!56595)))

(assert (=> d!22861 (= res!44647 (and ((_ is Cons!1515) (toList!746 lt!40596)) (= (_1!1110 (h!2106 (toList!746 lt!40596))) (_1!1110 lt!40322))))))

(assert (=> d!22861 (= (containsKey!144 (toList!746 lt!40596) (_1!1110 lt!40322)) e!56595)))

(declare-fun b!86854 () Bool)

(declare-fun e!56596 () Bool)

(assert (=> b!86854 (= e!56595 e!56596)))

(declare-fun res!44648 () Bool)

(assert (=> b!86854 (=> (not res!44648) (not e!56596))))

(assert (=> b!86854 (= res!44648 (and (or (not ((_ is Cons!1515) (toList!746 lt!40596))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40596))) (_1!1110 lt!40322))) ((_ is Cons!1515) (toList!746 lt!40596)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40596))) (_1!1110 lt!40322))))))

(declare-fun b!86855 () Bool)

(assert (=> b!86855 (= e!56596 (containsKey!144 (t!5240 (toList!746 lt!40596)) (_1!1110 lt!40322)))))

(assert (= (and d!22861 (not res!44647)) b!86854))

(assert (= (and b!86854 res!44648) b!86855))

(declare-fun m!92363 () Bool)

(assert (=> b!86855 m!92363))

(assert (=> d!22355 d!22861))

(declare-fun d!22863 () Bool)

(declare-fun e!56598 () Bool)

(assert (=> d!22863 e!56598))

(declare-fun res!44649 () Bool)

(assert (=> d!22863 (=> res!44649 e!56598)))

(declare-fun lt!41316 () Bool)

(assert (=> d!22863 (= res!44649 (not lt!41316))))

(declare-fun lt!41317 () Bool)

(assert (=> d!22863 (= lt!41316 lt!41317)))

(declare-fun lt!41319 () Unit!2517)

(declare-fun e!56597 () Unit!2517)

(assert (=> d!22863 (= lt!41319 e!56597)))

(declare-fun c!14226 () Bool)

(assert (=> d!22863 (= c!14226 lt!41317)))

(assert (=> d!22863 (= lt!41317 (containsKey!144 (toList!746 lt!40661) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22863 (= (contains!753 lt!40661 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41316)))

(declare-fun b!86856 () Bool)

(declare-fun lt!41318 () Unit!2517)

(assert (=> b!86856 (= e!56597 lt!41318)))

(assert (=> b!86856 (= lt!41318 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40661) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86856 (isDefined!93 (getValueByKey!140 (toList!746 lt!40661) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86857 () Bool)

(declare-fun Unit!2572 () Unit!2517)

(assert (=> b!86857 (= e!56597 Unit!2572)))

(declare-fun b!86858 () Bool)

(assert (=> b!86858 (= e!56598 (isDefined!93 (getValueByKey!140 (toList!746 lt!40661) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22863 c!14226) b!86856))

(assert (= (and d!22863 (not c!14226)) b!86857))

(assert (= (and d!22863 (not res!44649)) b!86858))

(declare-fun m!92365 () Bool)

(assert (=> d!22863 m!92365))

(declare-fun m!92367 () Bool)

(assert (=> b!86856 m!92367))

(declare-fun m!92369 () Bool)

(assert (=> b!86856 m!92369))

(assert (=> b!86856 m!92369))

(declare-fun m!92371 () Bool)

(assert (=> b!86856 m!92371))

(assert (=> b!86858 m!92369))

(assert (=> b!86858 m!92369))

(assert (=> b!86858 m!92371))

(assert (=> bm!8169 d!22863))

(declare-fun d!22865 () Bool)

(assert (=> d!22865 (isDefined!93 (getValueByKey!140 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(declare-fun lt!41320 () Unit!2517)

(assert (=> d!22865 (= lt!41320 (choose!504 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(declare-fun e!56599 () Bool)

(assert (=> d!22865 e!56599))

(declare-fun res!44650 () Bool)

(assert (=> d!22865 (=> (not res!44650) (not e!56599))))

(assert (=> d!22865 (= res!44650 (isStrictlySorted!298 (toList!746 e!55818)))))

(assert (=> d!22865 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))) lt!41320)))

(declare-fun b!86859 () Bool)

(assert (=> b!86859 (= e!56599 (containsKey!144 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(assert (= (and d!22865 res!44650) b!86859))

(assert (=> d!22865 m!90825))

(assert (=> d!22865 m!90825))

(assert (=> d!22865 m!90827))

(declare-fun m!92373 () Bool)

(assert (=> d!22865 m!92373))

(declare-fun m!92375 () Bool)

(assert (=> d!22865 m!92375))

(assert (=> b!86859 m!90821))

(assert (=> b!86029 d!22865))

(declare-fun d!22867 () Bool)

(assert (=> d!22867 (= (isDefined!93 (getValueByKey!140 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))) (not (isEmpty!337 (getValueByKey!140 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))))

(declare-fun bs!3690 () Bool)

(assert (= bs!3690 d!22867))

(assert (=> bs!3690 m!90825))

(declare-fun m!92377 () Bool)

(assert (=> bs!3690 m!92377))

(assert (=> b!86029 d!22867))

(declare-fun b!86860 () Bool)

(declare-fun e!56600 () Option!146)

(assert (=> b!86860 (= e!56600 (Some!145 (_2!1110 (h!2106 (toList!746 e!55818)))))))

(declare-fun c!14227 () Bool)

(declare-fun d!22869 () Bool)

(assert (=> d!22869 (= c!14227 (and ((_ is Cons!1515) (toList!746 e!55818)) (= (_1!1110 (h!2106 (toList!746 e!55818))) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))))

(assert (=> d!22869 (= (getValueByKey!140 (toList!746 e!55818) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))) e!56600)))

(declare-fun b!86863 () Bool)

(declare-fun e!56601 () Option!146)

(assert (=> b!86863 (= e!56601 None!144)))

(declare-fun b!86862 () Bool)

(assert (=> b!86862 (= e!56601 (getValueByKey!140 (t!5240 (toList!746 e!55818)) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(declare-fun b!86861 () Bool)

(assert (=> b!86861 (= e!56600 e!56601)))

(declare-fun c!14228 () Bool)

(assert (=> b!86861 (= c!14228 (and ((_ is Cons!1515) (toList!746 e!55818)) (not (= (_1!1110 (h!2106 (toList!746 e!55818))) (ite c!13882 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))))

(assert (= (and d!22869 c!14227) b!86860))

(assert (= (and d!22869 (not c!14227)) b!86861))

(assert (= (and b!86861 c!14228) b!86862))

(assert (= (and b!86861 (not c!14228)) b!86863))

(declare-fun m!92379 () Bool)

(assert (=> b!86862 m!92379))

(assert (=> b!86029 d!22869))

(declare-fun d!22871 () Bool)

(declare-fun res!44651 () Bool)

(declare-fun e!56602 () Bool)

(assert (=> d!22871 (=> res!44651 e!56602)))

(assert (=> d!22871 (= res!44651 (and ((_ is Cons!1515) lt!40634) (= (_1!1110 (h!2106 lt!40634)) (_1!1110 lt!40324))))))

(assert (=> d!22871 (= (containsKey!144 lt!40634 (_1!1110 lt!40324)) e!56602)))

(declare-fun b!86864 () Bool)

(declare-fun e!56603 () Bool)

(assert (=> b!86864 (= e!56602 e!56603)))

(declare-fun res!44652 () Bool)

(assert (=> b!86864 (=> (not res!44652) (not e!56603))))

(assert (=> b!86864 (= res!44652 (and (or (not ((_ is Cons!1515) lt!40634)) (bvsle (_1!1110 (h!2106 lt!40634)) (_1!1110 lt!40324))) ((_ is Cons!1515) lt!40634) (bvslt (_1!1110 (h!2106 lt!40634)) (_1!1110 lt!40324))))))

(declare-fun b!86865 () Bool)

(assert (=> b!86865 (= e!56603 (containsKey!144 (t!5240 lt!40634) (_1!1110 lt!40324)))))

(assert (= (and d!22871 (not res!44651)) b!86864))

(assert (= (and b!86864 res!44652) b!86865))

(declare-fun m!92381 () Bool)

(assert (=> b!86865 m!92381))

(assert (=> b!85773 d!22871))

(declare-fun d!22873 () Bool)

(declare-fun e!56604 () Bool)

(assert (=> d!22873 e!56604))

(declare-fun res!44653 () Bool)

(assert (=> d!22873 (=> (not res!44653) (not e!56604))))

(declare-fun lt!41323 () ListLongMap!1461)

(assert (=> d!22873 (= res!44653 (contains!753 lt!41323 (_1!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(declare-fun lt!41322 () List!1519)

(assert (=> d!22873 (= lt!41323 (ListLongMap!1462 lt!41322))))

(declare-fun lt!41324 () Unit!2517)

(declare-fun lt!41321 () Unit!2517)

(assert (=> d!22873 (= lt!41324 lt!41321)))

(assert (=> d!22873 (= (getValueByKey!140 lt!41322 (_1!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))) (Some!145 (_2!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(assert (=> d!22873 (= lt!41321 (lemmaContainsTupThenGetReturnValue!57 lt!41322 (_1!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (_2!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(assert (=> d!22873 (= lt!41322 (insertStrictlySorted!60 (toList!746 (ite c!13957 call!8171 (ite c!13955 call!8173 call!8168))) (_1!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (_2!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(assert (=> d!22873 (= (+!110 (ite c!13957 call!8171 (ite c!13955 call!8173 call!8168)) (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) lt!41323)))

(declare-fun b!86866 () Bool)

(declare-fun res!44654 () Bool)

(assert (=> b!86866 (=> (not res!44654) (not e!56604))))

(assert (=> b!86866 (= res!44654 (= (getValueByKey!140 (toList!746 lt!41323) (_1!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))) (Some!145 (_2!1110 (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))))

(declare-fun b!86867 () Bool)

(assert (=> b!86867 (= e!56604 (contains!754 (toList!746 lt!41323) (ite (or c!13957 c!13955) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (= (and d!22873 res!44653) b!86866))

(assert (= (and b!86866 res!44654) b!86867))

(declare-fun m!92383 () Bool)

(assert (=> d!22873 m!92383))

(declare-fun m!92385 () Bool)

(assert (=> d!22873 m!92385))

(declare-fun m!92387 () Bool)

(assert (=> d!22873 m!92387))

(declare-fun m!92389 () Bool)

(assert (=> d!22873 m!92389))

(declare-fun m!92391 () Bool)

(assert (=> b!86866 m!92391))

(declare-fun m!92393 () Bool)

(assert (=> b!86867 m!92393))

(assert (=> bm!8165 d!22873))

(assert (=> b!86198 d!22581))

(assert (=> b!86198 d!22323))

(declare-fun d!22875 () Bool)

(declare-fun lt!41325 () Bool)

(assert (=> d!22875 (= lt!41325 (select (content!89 (t!5240 (toList!746 lt!40560))) lt!40324))))

(declare-fun e!56605 () Bool)

(assert (=> d!22875 (= lt!41325 e!56605)))

(declare-fun res!44655 () Bool)

(assert (=> d!22875 (=> (not res!44655) (not e!56605))))

(assert (=> d!22875 (= res!44655 ((_ is Cons!1515) (t!5240 (toList!746 lt!40560))))))

(assert (=> d!22875 (= (contains!754 (t!5240 (toList!746 lt!40560)) lt!40324) lt!41325)))

(declare-fun b!86868 () Bool)

(declare-fun e!56606 () Bool)

(assert (=> b!86868 (= e!56605 e!56606)))

(declare-fun res!44656 () Bool)

(assert (=> b!86868 (=> res!44656 e!56606)))

(assert (=> b!86868 (= res!44656 (= (h!2106 (t!5240 (toList!746 lt!40560))) lt!40324))))

(declare-fun b!86869 () Bool)

(assert (=> b!86869 (= e!56606 (contains!754 (t!5240 (t!5240 (toList!746 lt!40560))) lt!40324))))

(assert (= (and d!22875 res!44655) b!86868))

(assert (= (and b!86868 (not res!44656)) b!86869))

(declare-fun m!92395 () Bool)

(assert (=> d!22875 m!92395))

(declare-fun m!92397 () Bool)

(assert (=> d!22875 m!92397))

(declare-fun m!92399 () Bool)

(assert (=> b!86869 m!92399))

(assert (=> b!86050 d!22875))

(declare-fun b!86870 () Bool)

(declare-fun e!56608 () List!1519)

(declare-fun call!8293 () List!1519)

(assert (=> b!86870 (= e!56608 call!8293)))

(declare-fun b!86871 () Bool)

(assert (=> b!86871 (= e!56608 call!8293)))

(declare-fun b!86872 () Bool)

(declare-fun res!44657 () Bool)

(declare-fun e!56609 () Bool)

(assert (=> b!86872 (=> (not res!44657) (not e!56609))))

(declare-fun lt!41326 () List!1519)

(assert (=> b!86872 (= res!44657 (containsKey!144 lt!41326 (_1!1110 lt!40318)))))

(declare-fun b!86873 () Bool)

(declare-fun e!56610 () List!1519)

(declare-fun e!56611 () List!1519)

(assert (=> b!86873 (= e!56610 e!56611)))

(declare-fun c!14230 () Bool)

(assert (=> b!86873 (= c!14230 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40325))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325)))) (_1!1110 lt!40318))))))

(declare-fun b!86874 () Bool)

(declare-fun call!8292 () List!1519)

(assert (=> b!86874 (= e!56610 call!8292)))

(declare-fun b!86875 () Bool)

(declare-fun c!14232 () Bool)

(assert (=> b!86875 (= c!14232 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40325))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325)))) (_1!1110 lt!40318))))))

(assert (=> b!86875 (= e!56611 e!56608)))

(declare-fun b!86876 () Bool)

(declare-fun e!56607 () List!1519)

(assert (=> b!86876 (= e!56607 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 lt!40325))) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun b!86877 () Bool)

(assert (=> b!86877 (= e!56607 (ite c!14230 (t!5240 (t!5240 (toList!746 lt!40325))) (ite c!14232 (Cons!1515 (h!2106 (t!5240 (toList!746 lt!40325))) (t!5240 (t!5240 (toList!746 lt!40325)))) Nil!1516)))))

(declare-fun bm!8289 () Bool)

(declare-fun c!14229 () Bool)

(assert (=> bm!8289 (= call!8292 ($colon$colon!72 e!56607 (ite c!14229 (h!2106 (t!5240 (toList!746 lt!40325))) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))))))

(declare-fun c!14231 () Bool)

(assert (=> bm!8289 (= c!14231 c!14229)))

(declare-fun bm!8290 () Bool)

(declare-fun call!8294 () List!1519)

(assert (=> bm!8290 (= call!8294 call!8292)))

(declare-fun bm!8291 () Bool)

(assert (=> bm!8291 (= call!8293 call!8294)))

(declare-fun b!86879 () Bool)

(assert (=> b!86879 (= e!56611 call!8294)))

(declare-fun d!22877 () Bool)

(assert (=> d!22877 e!56609))

(declare-fun res!44658 () Bool)

(assert (=> d!22877 (=> (not res!44658) (not e!56609))))

(assert (=> d!22877 (= res!44658 (isStrictlySorted!298 lt!41326))))

(assert (=> d!22877 (= lt!41326 e!56610)))

(assert (=> d!22877 (= c!14229 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40325))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325)))) (_1!1110 lt!40318))))))

(assert (=> d!22877 (isStrictlySorted!298 (t!5240 (toList!746 lt!40325)))))

(assert (=> d!22877 (= (insertStrictlySorted!60 (t!5240 (toList!746 lt!40325)) (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!41326)))

(declare-fun b!86878 () Bool)

(assert (=> b!86878 (= e!56609 (contains!754 lt!41326 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22877 c!14229) b!86874))

(assert (= (and d!22877 (not c!14229)) b!86873))

(assert (= (and b!86873 c!14230) b!86879))

(assert (= (and b!86873 (not c!14230)) b!86875))

(assert (= (and b!86875 c!14232) b!86870))

(assert (= (and b!86875 (not c!14232)) b!86871))

(assert (= (or b!86870 b!86871) bm!8291))

(assert (= (or b!86879 bm!8291) bm!8290))

(assert (= (or b!86874 bm!8290) bm!8289))

(assert (= (and bm!8289 c!14231) b!86876))

(assert (= (and bm!8289 (not c!14231)) b!86877))

(assert (= (and d!22877 res!44658) b!86872))

(assert (= (and b!86872 res!44657) b!86878))

(declare-fun m!92401 () Bool)

(assert (=> d!22877 m!92401))

(declare-fun m!92403 () Bool)

(assert (=> d!22877 m!92403))

(declare-fun m!92405 () Bool)

(assert (=> b!86872 m!92405))

(declare-fun m!92407 () Bool)

(assert (=> b!86876 m!92407))

(declare-fun m!92409 () Bool)

(assert (=> b!86878 m!92409))

(declare-fun m!92411 () Bool)

(assert (=> bm!8289 m!92411))

(assert (=> b!86114 d!22877))

(declare-fun b!86880 () Bool)

(declare-fun e!56612 () Option!146)

(assert (=> b!86880 (= e!56612 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40681)))))))

(declare-fun d!22879 () Bool)

(declare-fun c!14233 () Bool)

(assert (=> d!22879 (= c!14233 (and ((_ is Cons!1515) (toList!746 lt!40681)) (= (_1!1110 (h!2106 (toList!746 lt!40681))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22879 (= (getValueByKey!140 (toList!746 lt!40681) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56612)))

(declare-fun b!86883 () Bool)

(declare-fun e!56613 () Option!146)

(assert (=> b!86883 (= e!56613 None!144)))

(declare-fun b!86882 () Bool)

(assert (=> b!86882 (= e!56613 (getValueByKey!140 (t!5240 (toList!746 lt!40681)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86881 () Bool)

(assert (=> b!86881 (= e!56612 e!56613)))

(declare-fun c!14234 () Bool)

(assert (=> b!86881 (= c!14234 (and ((_ is Cons!1515) (toList!746 lt!40681)) (not (= (_1!1110 (h!2106 (toList!746 lt!40681))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22879 c!14233) b!86880))

(assert (= (and d!22879 (not c!14233)) b!86881))

(assert (= (and b!86881 c!14234) b!86882))

(assert (= (and b!86881 (not c!14234)) b!86883))

(declare-fun m!92413 () Bool)

(assert (=> b!86882 m!92413))

(assert (=> b!85852 d!22879))

(declare-fun d!22881 () Bool)

(declare-fun e!56615 () Bool)

(assert (=> d!22881 e!56615))

(declare-fun res!44659 () Bool)

(assert (=> d!22881 (=> res!44659 e!56615)))

(declare-fun lt!41327 () Bool)

(assert (=> d!22881 (= res!44659 (not lt!41327))))

(declare-fun lt!41328 () Bool)

(assert (=> d!22881 (= lt!41327 lt!41328)))

(declare-fun lt!41330 () Unit!2517)

(declare-fun e!56614 () Unit!2517)

(assert (=> d!22881 (= lt!41330 e!56614)))

(declare-fun c!14235 () Bool)

(assert (=> d!22881 (= c!14235 lt!41328)))

(assert (=> d!22881 (= lt!41328 (containsKey!144 (toList!746 lt!40449) lt!40447))))

(assert (=> d!22881 (= (contains!753 lt!40449 lt!40447) lt!41327)))

(declare-fun b!86884 () Bool)

(declare-fun lt!41329 () Unit!2517)

(assert (=> b!86884 (= e!56614 lt!41329)))

(assert (=> b!86884 (= lt!41329 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40449) lt!40447))))

(assert (=> b!86884 (isDefined!93 (getValueByKey!140 (toList!746 lt!40449) lt!40447))))

(declare-fun b!86885 () Bool)

(declare-fun Unit!2573 () Unit!2517)

(assert (=> b!86885 (= e!56614 Unit!2573)))

(declare-fun b!86886 () Bool)

(assert (=> b!86886 (= e!56615 (isDefined!93 (getValueByKey!140 (toList!746 lt!40449) lt!40447)))))

(assert (= (and d!22881 c!14235) b!86884))

(assert (= (and d!22881 (not c!14235)) b!86885))

(assert (= (and d!22881 (not res!44659)) b!86886))

(declare-fun m!92415 () Bool)

(assert (=> d!22881 m!92415))

(declare-fun m!92417 () Bool)

(assert (=> b!86884 m!92417))

(assert (=> b!86884 m!91009))

(assert (=> b!86884 m!91009))

(declare-fun m!92419 () Bool)

(assert (=> b!86884 m!92419))

(assert (=> b!86886 m!91009))

(assert (=> b!86886 m!91009))

(assert (=> b!86886 m!92419))

(assert (=> d!22369 d!22881))

(assert (=> d!22369 d!22371))

(assert (=> d!22369 d!22377))

(declare-fun d!22883 () Bool)

(assert (=> d!22883 (= (apply!82 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!40447) (apply!82 lt!40449 lt!40447))))

(assert (=> d!22883 true))

(declare-fun _$34!844 () Unit!2517)

(assert (=> d!22883 (= (choose!508 lt!40449 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))) lt!40447) _$34!844)))

(declare-fun bs!3691 () Bool)

(assert (= bs!3691 d!22883))

(assert (=> bs!3691 m!90011))

(assert (=> bs!3691 m!90011))

(assert (=> bs!3691 m!90013))

(assert (=> bs!3691 m!90003))

(assert (=> d!22369 d!22883))

(assert (=> d!22369 d!22393))

(assert (=> bm!8171 d!22593))

(declare-fun b!86887 () Bool)

(declare-fun e!56616 () Option!146)

(assert (=> b!86887 (= e!56616 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40666)))))))

(declare-fun d!22885 () Bool)

(declare-fun c!14236 () Bool)

(assert (=> d!22885 (= c!14236 (and ((_ is Cons!1515) (toList!746 lt!40666)) (= (_1!1110 (h!2106 (toList!746 lt!40666))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22885 (= (getValueByKey!140 (toList!746 lt!40666) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56616)))

(declare-fun b!86890 () Bool)

(declare-fun e!56617 () Option!146)

(assert (=> b!86890 (= e!56617 None!144)))

(declare-fun b!86889 () Bool)

(assert (=> b!86889 (= e!56617 (getValueByKey!140 (t!5240 (toList!746 lt!40666)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86888 () Bool)

(assert (=> b!86888 (= e!56616 e!56617)))

(declare-fun c!14237 () Bool)

(assert (=> b!86888 (= c!14237 (and ((_ is Cons!1515) (toList!746 lt!40666)) (not (= (_1!1110 (h!2106 (toList!746 lt!40666))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22885 c!14236) b!86887))

(assert (= (and d!22885 (not c!14236)) b!86888))

(assert (= (and b!86888 c!14237) b!86889))

(assert (= (and b!86888 (not c!14237)) b!86890))

(declare-fun m!92421 () Bool)

(assert (=> b!86889 m!92421))

(assert (=> b!85833 d!22885))

(assert (=> b!85979 d!22325))

(assert (=> b!86088 d!22573))

(declare-fun b!86891 () Bool)

(declare-fun e!56620 () Bool)

(declare-fun call!8295 () Bool)

(assert (=> b!86891 (= e!56620 call!8295)))

(declare-fun b!86892 () Bool)

(declare-fun e!56618 () Bool)

(assert (=> b!86892 (= e!56620 e!56618)))

(declare-fun lt!41333 () (_ BitVec 64))

(assert (=> b!86892 (= lt!41333 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!41332 () Unit!2517)

(assert (=> b!86892 (= lt!41332 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 newMap!16) lt!41333 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!86892 (arrayContainsKey!0 (_keys!4010 newMap!16) lt!41333 #b00000000000000000000000000000000)))

(declare-fun lt!41331 () Unit!2517)

(assert (=> b!86892 (= lt!41331 lt!41332)))

(declare-fun res!44660 () Bool)

(assert (=> b!86892 (= res!44660 (= (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4010 newMap!16) (mask!6366 newMap!16)) (Found!243 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!86892 (=> (not res!44660) (not e!56618))))

(declare-fun b!86893 () Bool)

(assert (=> b!86893 (= e!56618 call!8295)))

(declare-fun d!22887 () Bool)

(declare-fun res!44661 () Bool)

(declare-fun e!56619 () Bool)

(assert (=> d!22887 (=> res!44661 e!56619)))

(assert (=> d!22887 (= res!44661 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!22887 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 newMap!16) (mask!6366 newMap!16)) e!56619)))

(declare-fun bm!8292 () Bool)

(assert (=> bm!8292 (= call!8295 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!86894 () Bool)

(assert (=> b!86894 (= e!56619 e!56620)))

(declare-fun c!14238 () Bool)

(assert (=> b!86894 (= c!14238 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!22887 (not res!44661)) b!86894))

(assert (= (and b!86894 c!14238) b!86892))

(assert (= (and b!86894 (not c!14238)) b!86891))

(assert (= (and b!86892 res!44660) b!86893))

(assert (= (or b!86893 b!86891) bm!8292))

(assert (=> b!86892 m!91231))

(declare-fun m!92423 () Bool)

(assert (=> b!86892 m!92423))

(declare-fun m!92425 () Bool)

(assert (=> b!86892 m!92425))

(assert (=> b!86892 m!91231))

(declare-fun m!92427 () Bool)

(assert (=> b!86892 m!92427))

(declare-fun m!92429 () Bool)

(assert (=> bm!8292 m!92429))

(assert (=> b!86894 m!91231))

(assert (=> b!86894 m!91231))

(assert (=> b!86894 m!91233))

(assert (=> bm!8174 d!22887))

(assert (=> b!86025 d!22573))

(declare-fun b!86895 () Bool)

(declare-fun e!56621 () Option!146)

(assert (=> b!86895 (= e!56621 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40833)))))))

(declare-fun d!22889 () Bool)

(declare-fun c!14239 () Bool)

(assert (=> d!22889 (= c!14239 (and ((_ is Cons!1515) (toList!746 lt!40833)) (= (_1!1110 (h!2106 (toList!746 lt!40833))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (=> d!22889 (= (getValueByKey!140 (toList!746 lt!40833) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) e!56621)))

(declare-fun b!86898 () Bool)

(declare-fun e!56622 () Option!146)

(assert (=> b!86898 (= e!56622 None!144)))

(declare-fun b!86897 () Bool)

(assert (=> b!86897 (= e!56622 (getValueByKey!140 (t!5240 (toList!746 lt!40833)) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86896 () Bool)

(assert (=> b!86896 (= e!56621 e!56622)))

(declare-fun c!14240 () Bool)

(assert (=> b!86896 (= c!14240 (and ((_ is Cons!1515) (toList!746 lt!40833)) (not (= (_1!1110 (h!2106 (toList!746 lt!40833))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(assert (= (and d!22889 c!14239) b!86895))

(assert (= (and d!22889 (not c!14239)) b!86896))

(assert (= (and b!86896 c!14240) b!86897))

(assert (= (and b!86896 (not c!14240)) b!86898))

(declare-fun m!92431 () Bool)

(assert (=> b!86897 m!92431))

(assert (=> b!85990 d!22889))

(declare-fun b!86899 () Bool)

(declare-fun e!56623 () Option!146)

(assert (=> b!86899 (= e!56623 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40994)))))))

(declare-fun d!22891 () Bool)

(declare-fun c!14241 () Bool)

(assert (=> d!22891 (= c!14241 (and ((_ is Cons!1515) (toList!746 lt!40994)) (= (_1!1110 (h!2106 (toList!746 lt!40994))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22891 (= (getValueByKey!140 (toList!746 lt!40994) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56623)))

(declare-fun b!86902 () Bool)

(declare-fun e!56624 () Option!146)

(assert (=> b!86902 (= e!56624 None!144)))

(declare-fun b!86901 () Bool)

(assert (=> b!86901 (= e!56624 (getValueByKey!140 (t!5240 (toList!746 lt!40994)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86900 () Bool)

(assert (=> b!86900 (= e!56623 e!56624)))

(declare-fun c!14242 () Bool)

(assert (=> b!86900 (= c!14242 (and ((_ is Cons!1515) (toList!746 lt!40994)) (not (= (_1!1110 (h!2106 (toList!746 lt!40994))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22891 c!14241) b!86899))

(assert (= (and d!22891 (not c!14241)) b!86900))

(assert (= (and b!86900 c!14242) b!86901))

(assert (= (and b!86900 (not c!14242)) b!86902))

(declare-fun m!92433 () Bool)

(assert (=> b!86901 m!92433))

(assert (=> b!86222 d!22891))

(assert (=> d!22421 d!22339))

(declare-fun d!22893 () Bool)

(declare-fun e!56627 () Bool)

(assert (=> d!22893 e!56627))

(declare-fun res!44666 () Bool)

(assert (=> d!22893 (=> (not res!44666) (not e!56627))))

(declare-fun lt!41336 () SeekEntryResult!243)

(assert (=> d!22893 (= res!44666 ((_ is Found!243) lt!41336))))

(assert (=> d!22893 (= lt!41336 (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(assert (=> d!22893 true))

(declare-fun _$33!72 () Unit!2517)

(assert (=> d!22893 (= (choose!510 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (defaultEntry!2338 newMap!16)) _$33!72)))

(declare-fun b!86907 () Bool)

(declare-fun res!44667 () Bool)

(assert (=> b!86907 (=> (not res!44667) (not e!56627))))

(assert (=> b!86907 (= res!44667 (inRange!0 (index!3110 lt!41336) (mask!6366 newMap!16)))))

(declare-fun b!86908 () Bool)

(assert (=> b!86908 (= e!56627 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!41336)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22893 res!44666) b!86907))

(assert (= (and b!86907 res!44667) b!86908))

(assert (=> d!22893 m!89857))

(assert (=> d!22893 m!90067))

(declare-fun m!92435 () Bool)

(assert (=> b!86907 m!92435))

(declare-fun m!92437 () Bool)

(assert (=> b!86908 m!92437))

(assert (=> d!22421 d!22893))

(assert (=> d!22421 d!22445))

(assert (=> bm!8195 d!22509))

(declare-fun d!22895 () Bool)

(declare-fun lt!41337 () Bool)

(assert (=> d!22895 (= lt!41337 (select (content!89 lt!40936) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun e!56628 () Bool)

(assert (=> d!22895 (= lt!41337 e!56628)))

(declare-fun res!44668 () Bool)

(assert (=> d!22895 (=> (not res!44668) (not e!56628))))

(assert (=> d!22895 (= res!44668 ((_ is Cons!1515) lt!40936))))

(assert (=> d!22895 (= (contains!754 lt!40936 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))) lt!41337)))

(declare-fun b!86909 () Bool)

(declare-fun e!56629 () Bool)

(assert (=> b!86909 (= e!56628 e!56629)))

(declare-fun res!44669 () Bool)

(assert (=> b!86909 (=> res!44669 e!56629)))

(assert (=> b!86909 (= res!44669 (= (h!2106 lt!40936) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun b!86910 () Bool)

(assert (=> b!86910 (= e!56629 (contains!754 (t!5240 lt!40936) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22895 res!44668) b!86909))

(assert (= (and b!86909 (not res!44669)) b!86910))

(declare-fun m!92439 () Bool)

(assert (=> d!22895 m!92439))

(declare-fun m!92441 () Bool)

(assert (=> d!22895 m!92441))

(declare-fun m!92443 () Bool)

(assert (=> b!86910 m!92443))

(assert (=> b!86135 d!22895))

(declare-fun d!22897 () Bool)

(declare-fun c!14243 () Bool)

(assert (=> d!22897 (= c!14243 ((_ is Nil!1516) (toList!746 lt!40568)))))

(declare-fun e!56630 () (InoxSet tuple2!2198))

(assert (=> d!22897 (= (content!89 (toList!746 lt!40568)) e!56630)))

(declare-fun b!86911 () Bool)

(assert (=> b!86911 (= e!56630 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!86912 () Bool)

(assert (=> b!86912 (= e!56630 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40568)) true) (content!89 (t!5240 (toList!746 lt!40568)))))))

(assert (= (and d!22897 c!14243) b!86911))

(assert (= (and d!22897 (not c!14243)) b!86912))

(declare-fun m!92445 () Bool)

(assert (=> b!86912 m!92445))

(assert (=> b!86912 m!92119))

(assert (=> d!22271 d!22897))

(assert (=> bm!8188 d!22549))

(declare-fun d!22899 () Bool)

(declare-fun lt!41338 () Bool)

(assert (=> d!22899 (= lt!41338 (select (content!90 Nil!1517) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56632 () Bool)

(assert (=> d!22899 (= lt!41338 e!56632)))

(declare-fun res!44671 () Bool)

(assert (=> d!22899 (=> (not res!44671) (not e!56632))))

(assert (=> d!22899 (= res!44671 ((_ is Cons!1516) Nil!1517))))

(assert (=> d!22899 (= (contains!755 Nil!1517 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41338)))

(declare-fun b!86913 () Bool)

(declare-fun e!56631 () Bool)

(assert (=> b!86913 (= e!56632 e!56631)))

(declare-fun res!44670 () Bool)

(assert (=> b!86913 (=> res!44670 e!56631)))

(assert (=> b!86913 (= res!44670 (= (h!2107 Nil!1517) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86914 () Bool)

(assert (=> b!86914 (= e!56631 (contains!755 (t!5241 Nil!1517) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22899 res!44671) b!86913))

(assert (= (and b!86913 (not res!44670)) b!86914))

(assert (=> d!22899 m!90707))

(assert (=> d!22899 m!90363))

(declare-fun m!92447 () Bool)

(assert (=> d!22899 m!92447))

(assert (=> b!86914 m!90363))

(declare-fun m!92449 () Bool)

(assert (=> b!86914 m!92449))

(assert (=> b!86138 d!22899))

(declare-fun b!86915 () Bool)

(declare-fun e!56634 () List!1519)

(declare-fun call!8297 () List!1519)

(assert (=> b!86915 (= e!56634 call!8297)))

(declare-fun b!86916 () Bool)

(assert (=> b!86916 (= e!56634 call!8297)))

(declare-fun b!86917 () Bool)

(declare-fun res!44672 () Bool)

(declare-fun e!56635 () Bool)

(assert (=> b!86917 (=> (not res!44672) (not e!56635))))

(declare-fun lt!41339 () List!1519)

(assert (=> b!86917 (= res!44672 (containsKey!144 lt!41339 (_1!1110 lt!40318)))))

(declare-fun b!86918 () Bool)

(declare-fun e!56636 () List!1519)

(declare-fun e!56637 () List!1519)

(assert (=> b!86918 (= e!56636 e!56637)))

(declare-fun c!14245 () Bool)

(assert (=> b!86918 (= c!14245 (and ((_ is Cons!1515) (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (= (_1!1110 (h!2106 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))))) (_1!1110 lt!40318))))))

(declare-fun b!86919 () Bool)

(declare-fun call!8296 () List!1519)

(assert (=> b!86919 (= e!56636 call!8296)))

(declare-fun c!14247 () Bool)

(declare-fun b!86920 () Bool)

(assert (=> b!86920 (= c!14247 (and ((_ is Cons!1515) (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))))) (_1!1110 lt!40318))))))

(assert (=> b!86920 (= e!56637 e!56634)))

(declare-fun e!56633 () List!1519)

(declare-fun b!86921 () Bool)

(assert (=> b!86921 (= e!56633 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (_1!1110 lt!40318) (_2!1110 lt!40318)))))

(declare-fun b!86922 () Bool)

(assert (=> b!86922 (= e!56633 (ite c!14245 (t!5240 (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (ite c!14247 (Cons!1515 (h!2106 (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (t!5240 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))))) Nil!1516)))))

(declare-fun bm!8293 () Bool)

(declare-fun c!14244 () Bool)

(assert (=> bm!8293 (= call!8296 ($colon$colon!72 e!56633 (ite c!14244 (h!2106 (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))))))

(declare-fun c!14246 () Bool)

(assert (=> bm!8293 (= c!14246 c!14244)))

(declare-fun bm!8294 () Bool)

(declare-fun call!8298 () List!1519)

(assert (=> bm!8294 (= call!8298 call!8296)))

(declare-fun bm!8295 () Bool)

(assert (=> bm!8295 (= call!8297 call!8298)))

(declare-fun b!86924 () Bool)

(assert (=> b!86924 (= e!56637 call!8298)))

(declare-fun d!22901 () Bool)

(assert (=> d!22901 e!56635))

(declare-fun res!44673 () Bool)

(assert (=> d!22901 (=> (not res!44673) (not e!56635))))

(assert (=> d!22901 (= res!44673 (isStrictlySorted!298 lt!41339))))

(assert (=> d!22901 (= lt!41339 e!56636)))

(assert (=> d!22901 (= c!14244 (and ((_ is Cons!1515) (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))))) (_1!1110 lt!40318))))))

(assert (=> d!22901 (isStrictlySorted!298 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))))))

(assert (=> d!22901 (= (insertStrictlySorted!60 (t!5240 (toList!746 (+!110 lt!40331 lt!40322))) (_1!1110 lt!40318) (_2!1110 lt!40318)) lt!41339)))

(declare-fun b!86923 () Bool)

(assert (=> b!86923 (= e!56635 (contains!754 lt!41339 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22901 c!14244) b!86919))

(assert (= (and d!22901 (not c!14244)) b!86918))

(assert (= (and b!86918 c!14245) b!86924))

(assert (= (and b!86918 (not c!14245)) b!86920))

(assert (= (and b!86920 c!14247) b!86915))

(assert (= (and b!86920 (not c!14247)) b!86916))

(assert (= (or b!86915 b!86916) bm!8295))

(assert (= (or b!86924 bm!8295) bm!8294))

(assert (= (or b!86919 bm!8294) bm!8293))

(assert (= (and bm!8293 c!14246) b!86921))

(assert (= (and bm!8293 (not c!14246)) b!86922))

(assert (= (and d!22901 res!44673) b!86917))

(assert (= (and b!86917 res!44672) b!86923))

(declare-fun m!92451 () Bool)

(assert (=> d!22901 m!92451))

(declare-fun m!92453 () Bool)

(assert (=> d!22901 m!92453))

(declare-fun m!92455 () Bool)

(assert (=> b!86917 m!92455))

(declare-fun m!92457 () Bool)

(assert (=> b!86921 m!92457))

(declare-fun m!92459 () Bool)

(assert (=> b!86923 m!92459))

(declare-fun m!92461 () Bool)

(assert (=> bm!8293 m!92461))

(assert (=> b!86211 d!22901))

(declare-fun b!86925 () Bool)

(declare-fun e!56638 () Option!146)

(assert (=> b!86925 (= e!56638 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40949)))))))

(declare-fun c!14248 () Bool)

(declare-fun d!22903 () Bool)

(assert (=> d!22903 (= c!14248 (and ((_ is Cons!1515) (toList!746 lt!40949)) (= (_1!1110 (h!2106 (toList!746 lt!40949))) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22903 (= (getValueByKey!140 (toList!746 lt!40949) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56638)))

(declare-fun b!86928 () Bool)

(declare-fun e!56639 () Option!146)

(assert (=> b!86928 (= e!56639 None!144)))

(declare-fun b!86927 () Bool)

(assert (=> b!86927 (= e!56639 (getValueByKey!140 (t!5240 (toList!746 lt!40949)) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86926 () Bool)

(assert (=> b!86926 (= e!56638 e!56639)))

(declare-fun c!14249 () Bool)

(assert (=> b!86926 (= c!14249 (and ((_ is Cons!1515) (toList!746 lt!40949)) (not (= (_1!1110 (h!2106 (toList!746 lt!40949))) (_1!1110 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22903 c!14248) b!86925))

(assert (= (and d!22903 (not c!14248)) b!86926))

(assert (= (and b!86926 c!14249) b!86927))

(assert (= (and b!86926 (not c!14249)) b!86928))

(declare-fun m!92463 () Bool)

(assert (=> b!86927 m!92463))

(assert (=> b!86149 d!22903))

(declare-fun d!22905 () Bool)

(declare-fun e!56641 () Bool)

(assert (=> d!22905 e!56641))

(declare-fun res!44674 () Bool)

(assert (=> d!22905 (=> res!44674 e!56641)))

(declare-fun lt!41340 () Bool)

(assert (=> d!22905 (= res!44674 (not lt!41340))))

(declare-fun lt!41341 () Bool)

(assert (=> d!22905 (= lt!41340 lt!41341)))

(declare-fun lt!41343 () Unit!2517)

(declare-fun e!56640 () Unit!2517)

(assert (=> d!22905 (= lt!41343 e!56640)))

(declare-fun c!14250 () Bool)

(assert (=> d!22905 (= c!14250 lt!41341)))

(assert (=> d!22905 (= lt!41341 (containsKey!144 (toList!746 lt!40681) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22905 (= (contains!753 lt!40681 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41340)))

(declare-fun b!86929 () Bool)

(declare-fun lt!41342 () Unit!2517)

(assert (=> b!86929 (= e!56640 lt!41342)))

(assert (=> b!86929 (= lt!41342 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40681) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86929 (isDefined!93 (getValueByKey!140 (toList!746 lt!40681) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86930 () Bool)

(declare-fun Unit!2574 () Unit!2517)

(assert (=> b!86930 (= e!56640 Unit!2574)))

(declare-fun b!86931 () Bool)

(assert (=> b!86931 (= e!56641 (isDefined!93 (getValueByKey!140 (toList!746 lt!40681) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22905 c!14250) b!86929))

(assert (= (and d!22905 (not c!14250)) b!86930))

(assert (= (and d!22905 (not res!44674)) b!86931))

(declare-fun m!92465 () Bool)

(assert (=> d!22905 m!92465))

(declare-fun m!92467 () Bool)

(assert (=> b!86929 m!92467))

(assert (=> b!86929 m!90477))

(assert (=> b!86929 m!90477))

(declare-fun m!92469 () Bool)

(assert (=> b!86929 m!92469))

(assert (=> b!86931 m!90477))

(assert (=> b!86931 m!90477))

(assert (=> b!86931 m!92469))

(assert (=> d!22245 d!22905))

(declare-fun b!86932 () Bool)

(declare-fun e!56642 () Option!146)

(assert (=> b!86932 (= e!56642 (Some!145 (_2!1110 (h!2106 lt!40680))))))

(declare-fun d!22907 () Bool)

(declare-fun c!14251 () Bool)

(assert (=> d!22907 (= c!14251 (and ((_ is Cons!1515) lt!40680) (= (_1!1110 (h!2106 lt!40680)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22907 (= (getValueByKey!140 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56642)))

(declare-fun b!86935 () Bool)

(declare-fun e!56643 () Option!146)

(assert (=> b!86935 (= e!56643 None!144)))

(declare-fun b!86934 () Bool)

(assert (=> b!86934 (= e!56643 (getValueByKey!140 (t!5240 lt!40680) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86933 () Bool)

(assert (=> b!86933 (= e!56642 e!56643)))

(declare-fun c!14252 () Bool)

(assert (=> b!86933 (= c!14252 (and ((_ is Cons!1515) lt!40680) (not (= (_1!1110 (h!2106 lt!40680)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22907 c!14251) b!86932))

(assert (= (and d!22907 (not c!14251)) b!86933))

(assert (= (and b!86933 c!14252) b!86934))

(assert (= (and b!86933 (not c!14252)) b!86935))

(declare-fun m!92471 () Bool)

(assert (=> b!86934 m!92471))

(assert (=> d!22245 d!22907))

(declare-fun d!22909 () Bool)

(assert (=> d!22909 (= (getValueByKey!140 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41344 () Unit!2517)

(assert (=> d!22909 (= lt!41344 (choose!500 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56644 () Bool)

(assert (=> d!22909 e!56644))

(declare-fun res!44675 () Bool)

(assert (=> d!22909 (=> (not res!44675) (not e!56644))))

(assert (=> d!22909 (= res!44675 (isStrictlySorted!298 lt!40680))))

(assert (=> d!22909 (= (lemmaContainsTupThenGetReturnValue!57 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41344)))

(declare-fun b!86936 () Bool)

(declare-fun res!44676 () Bool)

(assert (=> b!86936 (=> (not res!44676) (not e!56644))))

(assert (=> b!86936 (= res!44676 (containsKey!144 lt!40680 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86937 () Bool)

(assert (=> b!86937 (= e!56644 (contains!754 lt!40680 (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22909 res!44675) b!86936))

(assert (= (and b!86936 res!44676) b!86937))

(assert (=> d!22909 m!90471))

(declare-fun m!92473 () Bool)

(assert (=> d!22909 m!92473))

(declare-fun m!92475 () Bool)

(assert (=> d!22909 m!92475))

(declare-fun m!92477 () Bool)

(assert (=> b!86936 m!92477))

(declare-fun m!92479 () Bool)

(assert (=> b!86937 m!92479))

(assert (=> d!22245 d!22909))

(declare-fun b!86938 () Bool)

(declare-fun e!56646 () List!1519)

(declare-fun call!8300 () List!1519)

(assert (=> b!86938 (= e!56646 call!8300)))

(declare-fun b!86939 () Bool)

(assert (=> b!86939 (= e!56646 call!8300)))

(declare-fun b!86940 () Bool)

(declare-fun res!44677 () Bool)

(declare-fun e!56647 () Bool)

(assert (=> b!86940 (=> (not res!44677) (not e!56647))))

(declare-fun lt!41345 () List!1519)

(assert (=> b!86940 (= res!44677 (containsKey!144 lt!41345 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86941 () Bool)

(declare-fun e!56648 () List!1519)

(declare-fun e!56649 () List!1519)

(assert (=> b!86941 (= e!56648 e!56649)))

(declare-fun c!14254 () Bool)

(assert (=> b!86941 (= c!14254 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86942 () Bool)

(declare-fun call!8299 () List!1519)

(assert (=> b!86942 (= e!56648 call!8299)))

(declare-fun b!86943 () Bool)

(declare-fun c!14256 () Bool)

(assert (=> b!86943 (= c!14256 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (bvsgt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86943 (= e!56649 e!56646)))

(declare-fun e!56645 () List!1519)

(declare-fun b!86944 () Bool)

(assert (=> b!86944 (= e!56645 (insertStrictlySorted!60 (t!5240 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86945 () Bool)

(assert (=> b!86945 (= e!56645 (ite c!14254 (t!5240 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (ite c!14256 (Cons!1515 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (t!5240 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) Nil!1516)))))

(declare-fun bm!8296 () Bool)

(declare-fun c!14253 () Bool)

(assert (=> bm!8296 (= call!8299 ($colon$colon!72 e!56645 (ite c!14253 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14255 () Bool)

(assert (=> bm!8296 (= c!14255 c!14253)))

(declare-fun bm!8297 () Bool)

(declare-fun call!8301 () List!1519)

(assert (=> bm!8297 (= call!8301 call!8299)))

(declare-fun bm!8298 () Bool)

(assert (=> bm!8298 (= call!8300 call!8301)))

(declare-fun b!86947 () Bool)

(assert (=> b!86947 (= e!56649 call!8301)))

(declare-fun d!22911 () Bool)

(assert (=> d!22911 e!56647))

(declare-fun res!44678 () Bool)

(assert (=> d!22911 (=> (not res!44678) (not e!56647))))

(assert (=> d!22911 (= res!44678 (isStrictlySorted!298 lt!41345))))

(assert (=> d!22911 (= lt!41345 e!56648)))

(assert (=> d!22911 (= c!14253 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22911 (isStrictlySorted!298 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22911 (= (insertStrictlySorted!60 (toList!746 (+!110 lt!40331 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41345)))

(declare-fun b!86946 () Bool)

(assert (=> b!86946 (= e!56647 (contains!754 lt!41345 (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22911 c!14253) b!86942))

(assert (= (and d!22911 (not c!14253)) b!86941))

(assert (= (and b!86941 c!14254) b!86947))

(assert (= (and b!86941 (not c!14254)) b!86943))

(assert (= (and b!86943 c!14256) b!86938))

(assert (= (and b!86943 (not c!14256)) b!86939))

(assert (= (or b!86938 b!86939) bm!8298))

(assert (= (or b!86947 bm!8298) bm!8297))

(assert (= (or b!86942 bm!8297) bm!8296))

(assert (= (and bm!8296 c!14255) b!86944))

(assert (= (and bm!8296 (not c!14255)) b!86945))

(assert (= (and d!22911 res!44678) b!86940))

(assert (= (and b!86940 res!44677) b!86946))

(declare-fun m!92481 () Bool)

(assert (=> d!22911 m!92481))

(declare-fun m!92483 () Bool)

(assert (=> d!22911 m!92483))

(declare-fun m!92485 () Bool)

(assert (=> b!86940 m!92485))

(declare-fun m!92487 () Bool)

(assert (=> b!86944 m!92487))

(declare-fun m!92489 () Bool)

(assert (=> b!86946 m!92489))

(declare-fun m!92491 () Bool)

(assert (=> bm!8296 m!92491))

(assert (=> d!22245 d!22911))

(declare-fun d!22913 () Bool)

(declare-fun e!56651 () Bool)

(assert (=> d!22913 e!56651))

(declare-fun res!44679 () Bool)

(assert (=> d!22913 (=> res!44679 e!56651)))

(declare-fun lt!41346 () Bool)

(assert (=> d!22913 (= res!44679 (not lt!41346))))

(declare-fun lt!41347 () Bool)

(assert (=> d!22913 (= lt!41346 lt!41347)))

(declare-fun lt!41349 () Unit!2517)

(declare-fun e!56650 () Unit!2517)

(assert (=> d!22913 (= lt!41349 e!56650)))

(declare-fun c!14257 () Bool)

(assert (=> d!22913 (= c!14257 lt!41347)))

(assert (=> d!22913 (= lt!41347 (containsKey!144 (toList!746 lt!40666) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22913 (= (contains!753 lt!40666 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41346)))

(declare-fun b!86948 () Bool)

(declare-fun lt!41348 () Unit!2517)

(assert (=> b!86948 (= e!56650 lt!41348)))

(assert (=> b!86948 (= lt!41348 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40666) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86948 (isDefined!93 (getValueByKey!140 (toList!746 lt!40666) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86949 () Bool)

(declare-fun Unit!2575 () Unit!2517)

(assert (=> b!86949 (= e!56650 Unit!2575)))

(declare-fun b!86950 () Bool)

(assert (=> b!86950 (= e!56651 (isDefined!93 (getValueByKey!140 (toList!746 lt!40666) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22913 c!14257) b!86948))

(assert (= (and d!22913 (not c!14257)) b!86949))

(assert (= (and d!22913 (not res!44679)) b!86950))

(declare-fun m!92493 () Bool)

(assert (=> d!22913 m!92493))

(declare-fun m!92495 () Bool)

(assert (=> b!86948 m!92495))

(assert (=> b!86948 m!90431))

(assert (=> b!86948 m!90431))

(declare-fun m!92497 () Bool)

(assert (=> b!86948 m!92497))

(assert (=> b!86950 m!90431))

(assert (=> b!86950 m!90431))

(assert (=> b!86950 m!92497))

(assert (=> d!22225 d!22913))

(declare-fun b!86951 () Bool)

(declare-fun e!56652 () Option!146)

(assert (=> b!86951 (= e!56652 (Some!145 (_2!1110 (h!2106 lt!40665))))))

(declare-fun d!22915 () Bool)

(declare-fun c!14258 () Bool)

(assert (=> d!22915 (= c!14258 (and ((_ is Cons!1515) lt!40665) (= (_1!1110 (h!2106 lt!40665)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22915 (= (getValueByKey!140 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56652)))

(declare-fun b!86954 () Bool)

(declare-fun e!56653 () Option!146)

(assert (=> b!86954 (= e!56653 None!144)))

(declare-fun b!86953 () Bool)

(assert (=> b!86953 (= e!56653 (getValueByKey!140 (t!5240 lt!40665) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86952 () Bool)

(assert (=> b!86952 (= e!56652 e!56653)))

(declare-fun c!14259 () Bool)

(assert (=> b!86952 (= c!14259 (and ((_ is Cons!1515) lt!40665) (not (= (_1!1110 (h!2106 lt!40665)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22915 c!14258) b!86951))

(assert (= (and d!22915 (not c!14258)) b!86952))

(assert (= (and b!86952 c!14259) b!86953))

(assert (= (and b!86952 (not c!14259)) b!86954))

(declare-fun m!92499 () Bool)

(assert (=> b!86953 m!92499))

(assert (=> d!22225 d!22915))

(declare-fun d!22917 () Bool)

(assert (=> d!22917 (= (getValueByKey!140 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41350 () Unit!2517)

(assert (=> d!22917 (= lt!41350 (choose!500 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56654 () Bool)

(assert (=> d!22917 e!56654))

(declare-fun res!44680 () Bool)

(assert (=> d!22917 (=> (not res!44680) (not e!56654))))

(assert (=> d!22917 (= res!44680 (isStrictlySorted!298 lt!40665))))

(assert (=> d!22917 (= (lemmaContainsTupThenGetReturnValue!57 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41350)))

(declare-fun b!86955 () Bool)

(declare-fun res!44681 () Bool)

(assert (=> b!86955 (=> (not res!44681) (not e!56654))))

(assert (=> b!86955 (= res!44681 (containsKey!144 lt!40665 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86956 () Bool)

(assert (=> b!86956 (= e!56654 (contains!754 lt!40665 (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22917 res!44680) b!86955))

(assert (= (and b!86955 res!44681) b!86956))

(assert (=> d!22917 m!90425))

(declare-fun m!92501 () Bool)

(assert (=> d!22917 m!92501))

(declare-fun m!92503 () Bool)

(assert (=> d!22917 m!92503))

(declare-fun m!92505 () Bool)

(assert (=> b!86955 m!92505))

(declare-fun m!92507 () Bool)

(assert (=> b!86956 m!92507))

(assert (=> d!22225 d!22917))

(declare-fun b!86957 () Bool)

(declare-fun e!56656 () List!1519)

(declare-fun call!8303 () List!1519)

(assert (=> b!86957 (= e!56656 call!8303)))

(declare-fun b!86958 () Bool)

(assert (=> b!86958 (= e!56656 call!8303)))

(declare-fun b!86959 () Bool)

(declare-fun res!44682 () Bool)

(declare-fun e!56657 () Bool)

(assert (=> b!86959 (=> (not res!44682) (not e!56657))))

(declare-fun lt!41351 () List!1519)

(assert (=> b!86959 (= res!44682 (containsKey!144 lt!41351 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86960 () Bool)

(declare-fun e!56658 () List!1519)

(declare-fun e!56659 () List!1519)

(assert (=> b!86960 (= e!56658 e!56659)))

(declare-fun c!14261 () Bool)

(assert (=> b!86960 (= c!14261 (and ((_ is Cons!1515) (toList!746 call!8067)) (= (_1!1110 (h!2106 (toList!746 call!8067))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86961 () Bool)

(declare-fun call!8302 () List!1519)

(assert (=> b!86961 (= e!56658 call!8302)))

(declare-fun b!86962 () Bool)

(declare-fun c!14263 () Bool)

(assert (=> b!86962 (= c!14263 (and ((_ is Cons!1515) (toList!746 call!8067)) (bvsgt (_1!1110 (h!2106 (toList!746 call!8067))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86962 (= e!56659 e!56656)))

(declare-fun b!86963 () Bool)

(declare-fun e!56655 () List!1519)

(assert (=> b!86963 (= e!56655 (insertStrictlySorted!60 (t!5240 (toList!746 call!8067)) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86964 () Bool)

(assert (=> b!86964 (= e!56655 (ite c!14261 (t!5240 (toList!746 call!8067)) (ite c!14263 (Cons!1515 (h!2106 (toList!746 call!8067)) (t!5240 (toList!746 call!8067))) Nil!1516)))))

(declare-fun c!14260 () Bool)

(declare-fun bm!8299 () Bool)

(assert (=> bm!8299 (= call!8302 ($colon$colon!72 e!56655 (ite c!14260 (h!2106 (toList!746 call!8067)) (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14262 () Bool)

(assert (=> bm!8299 (= c!14262 c!14260)))

(declare-fun bm!8300 () Bool)

(declare-fun call!8304 () List!1519)

(assert (=> bm!8300 (= call!8304 call!8302)))

(declare-fun bm!8301 () Bool)

(assert (=> bm!8301 (= call!8303 call!8304)))

(declare-fun b!86966 () Bool)

(assert (=> b!86966 (= e!56659 call!8304)))

(declare-fun d!22919 () Bool)

(assert (=> d!22919 e!56657))

(declare-fun res!44683 () Bool)

(assert (=> d!22919 (=> (not res!44683) (not e!56657))))

(assert (=> d!22919 (= res!44683 (isStrictlySorted!298 lt!41351))))

(assert (=> d!22919 (= lt!41351 e!56658)))

(assert (=> d!22919 (= c!14260 (and ((_ is Cons!1515) (toList!746 call!8067)) (bvslt (_1!1110 (h!2106 (toList!746 call!8067))) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22919 (isStrictlySorted!298 (toList!746 call!8067))))

(assert (=> d!22919 (= (insertStrictlySorted!60 (toList!746 call!8067) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41351)))

(declare-fun b!86965 () Bool)

(assert (=> b!86965 (= e!56657 (contains!754 lt!41351 (tuple2!2199 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22919 c!14260) b!86961))

(assert (= (and d!22919 (not c!14260)) b!86960))

(assert (= (and b!86960 c!14261) b!86966))

(assert (= (and b!86960 (not c!14261)) b!86962))

(assert (= (and b!86962 c!14263) b!86957))

(assert (= (and b!86962 (not c!14263)) b!86958))

(assert (= (or b!86957 b!86958) bm!8301))

(assert (= (or b!86966 bm!8301) bm!8300))

(assert (= (or b!86961 bm!8300) bm!8299))

(assert (= (and bm!8299 c!14262) b!86963))

(assert (= (and bm!8299 (not c!14262)) b!86964))

(assert (= (and d!22919 res!44683) b!86959))

(assert (= (and b!86959 res!44682) b!86965))

(declare-fun m!92509 () Bool)

(assert (=> d!22919 m!92509))

(declare-fun m!92511 () Bool)

(assert (=> d!22919 m!92511))

(declare-fun m!92513 () Bool)

(assert (=> b!86959 m!92513))

(declare-fun m!92515 () Bool)

(assert (=> b!86963 m!92515))

(declare-fun m!92517 () Bool)

(assert (=> b!86965 m!92517))

(declare-fun m!92519 () Bool)

(assert (=> bm!8299 m!92519))

(assert (=> d!22225 d!22919))

(declare-fun d!22921 () Bool)

(assert (=> d!22921 (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))

(assert (=> d!22921 true))

(declare-fun _$16!108 () Unit!2517)

(assert (=> d!22921 (= (choose!505 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (defaultEntry!2338 newMap!16)) _$16!108)))

(declare-fun bs!3692 () Bool)

(assert (= bs!3692 d!22921))

(assert (=> bs!3692 m!90753))

(assert (=> bs!3692 m!90093))

(assert (=> bs!3692 m!90753))

(assert (=> bs!3692 m!90093))

(assert (=> bs!3692 m!90755))

(assert (=> d!22313 d!22921))

(assert (=> d!22313 d!22445))

(declare-fun d!22923 () Bool)

(declare-fun res!44684 () Bool)

(declare-fun e!56660 () Bool)

(assert (=> d!22923 (=> res!44684 e!56660)))

(assert (=> d!22923 (= res!44684 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))))) lt!40585)))))

(assert (=> d!22923 (= (containsKey!144 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))) lt!40585) e!56660)))

(declare-fun b!86967 () Bool)

(declare-fun e!56661 () Bool)

(assert (=> b!86967 (= e!56660 e!56661)))

(declare-fun res!44685 () Bool)

(assert (=> b!86967 (=> (not res!44685) (not e!56661))))

(assert (=> b!86967 (= res!44685 (and (or (not ((_ is Cons!1515) (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))))) (bvsle (_1!1110 (h!2106 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))))) lt!40585)) ((_ is Cons!1515) (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590))))) lt!40585)))))

(declare-fun b!86968 () Bool)

(assert (=> b!86968 (= e!56661 (containsKey!144 (t!5240 (toList!746 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)))) lt!40585))))

(assert (= (and d!22923 (not res!44684)) b!86967))

(assert (= (and b!86967 res!44685) b!86968))

(declare-fun m!92521 () Bool)

(assert (=> b!86968 m!92521))

(assert (=> d!22259 d!22923))

(declare-fun d!22925 () Bool)

(declare-fun e!56663 () Bool)

(assert (=> d!22925 e!56663))

(declare-fun res!44686 () Bool)

(assert (=> d!22925 (=> res!44686 e!56663)))

(declare-fun lt!41352 () Bool)

(assert (=> d!22925 (= res!44686 (not lt!41352))))

(declare-fun lt!41353 () Bool)

(assert (=> d!22925 (= lt!41352 lt!41353)))

(declare-fun lt!41355 () Unit!2517)

(declare-fun e!56662 () Unit!2517)

(assert (=> d!22925 (= lt!41355 e!56662)))

(declare-fun c!14264 () Bool)

(assert (=> d!22925 (= c!14264 lt!41353)))

(assert (=> d!22925 (= lt!41353 (containsKey!144 (toList!746 lt!40833) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22925 (= (contains!753 lt!40833 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!41352)))

(declare-fun b!86969 () Bool)

(declare-fun lt!41354 () Unit!2517)

(assert (=> b!86969 (= e!56662 lt!41354)))

(assert (=> b!86969 (= lt!41354 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40833) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!86969 (isDefined!93 (getValueByKey!140 (toList!746 lt!40833) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86970 () Bool)

(declare-fun Unit!2576 () Unit!2517)

(assert (=> b!86970 (= e!56662 Unit!2576)))

(declare-fun b!86971 () Bool)

(assert (=> b!86971 (= e!56663 (isDefined!93 (getValueByKey!140 (toList!746 lt!40833) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22925 c!14264) b!86969))

(assert (= (and d!22925 (not c!14264)) b!86970))

(assert (= (and d!22925 (not res!44686)) b!86971))

(declare-fun m!92523 () Bool)

(assert (=> d!22925 m!92523))

(declare-fun m!92525 () Bool)

(assert (=> b!86969 m!92525))

(assert (=> b!86969 m!90721))

(assert (=> b!86969 m!90721))

(declare-fun m!92527 () Bool)

(assert (=> b!86969 m!92527))

(assert (=> b!86971 m!90721))

(assert (=> b!86971 m!90721))

(assert (=> b!86971 m!92527))

(assert (=> d!22303 d!22925))

(declare-fun b!86972 () Bool)

(declare-fun e!56664 () Option!146)

(assert (=> b!86972 (= e!56664 (Some!145 (_2!1110 (h!2106 lt!40832))))))

(declare-fun d!22927 () Bool)

(declare-fun c!14265 () Bool)

(assert (=> d!22927 (= c!14265 (and ((_ is Cons!1515) lt!40832) (= (_1!1110 (h!2106 lt!40832)) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (=> d!22927 (= (getValueByKey!140 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) e!56664)))

(declare-fun b!86975 () Bool)

(declare-fun e!56665 () Option!146)

(assert (=> b!86975 (= e!56665 None!144)))

(declare-fun b!86974 () Bool)

(assert (=> b!86974 (= e!56665 (getValueByKey!140 (t!5240 lt!40832) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86973 () Bool)

(assert (=> b!86973 (= e!56664 e!56665)))

(declare-fun c!14266 () Bool)

(assert (=> b!86973 (= c!14266 (and ((_ is Cons!1515) lt!40832) (not (= (_1!1110 (h!2106 lt!40832)) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(assert (= (and d!22927 c!14265) b!86972))

(assert (= (and d!22927 (not c!14265)) b!86973))

(assert (= (and b!86973 c!14266) b!86974))

(assert (= (and b!86973 (not c!14266)) b!86975))

(declare-fun m!92529 () Bool)

(assert (=> b!86974 m!92529))

(assert (=> d!22303 d!22927))

(declare-fun d!22929 () Bool)

(assert (=> d!22929 (= (getValueByKey!140 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (Some!145 (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun lt!41356 () Unit!2517)

(assert (=> d!22929 (= lt!41356 (choose!500 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun e!56666 () Bool)

(assert (=> d!22929 e!56666))

(declare-fun res!44687 () Bool)

(assert (=> d!22929 (=> (not res!44687) (not e!56666))))

(assert (=> d!22929 (= res!44687 (isStrictlySorted!298 lt!40832))))

(assert (=> d!22929 (= (lemmaContainsTupThenGetReturnValue!57 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!41356)))

(declare-fun b!86976 () Bool)

(declare-fun res!44688 () Bool)

(assert (=> b!86976 (=> (not res!44688) (not e!56666))))

(assert (=> b!86976 (= res!44688 (containsKey!144 lt!40832 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86977 () Bool)

(assert (=> b!86977 (= e!56666 (contains!754 lt!40832 (tuple2!2199 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22929 res!44687) b!86976))

(assert (= (and b!86976 res!44688) b!86977))

(assert (=> d!22929 m!90715))

(declare-fun m!92531 () Bool)

(assert (=> d!22929 m!92531))

(declare-fun m!92533 () Bool)

(assert (=> d!22929 m!92533))

(declare-fun m!92535 () Bool)

(assert (=> b!86976 m!92535))

(declare-fun m!92537 () Bool)

(assert (=> b!86977 m!92537))

(assert (=> d!22303 d!22929))

(declare-fun b!86978 () Bool)

(declare-fun e!56668 () List!1519)

(declare-fun call!8306 () List!1519)

(assert (=> b!86978 (= e!56668 call!8306)))

(declare-fun b!86979 () Bool)

(assert (=> b!86979 (= e!56668 call!8306)))

(declare-fun b!86980 () Bool)

(declare-fun res!44689 () Bool)

(declare-fun e!56669 () Bool)

(assert (=> b!86980 (=> (not res!44689) (not e!56669))))

(declare-fun lt!41357 () List!1519)

(assert (=> b!86980 (= res!44689 (containsKey!144 lt!41357 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86981 () Bool)

(declare-fun e!56670 () List!1519)

(declare-fun e!56671 () List!1519)

(assert (=> b!86981 (= e!56670 e!56671)))

(declare-fun c!14268 () Bool)

(assert (=> b!86981 (= c!14268 (and ((_ is Cons!1515) (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (= (_1!1110 (h!2106 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun b!86982 () Bool)

(declare-fun call!8305 () List!1519)

(assert (=> b!86982 (= e!56670 call!8305)))

(declare-fun c!14270 () Bool)

(declare-fun b!86983 () Bool)

(assert (=> b!86983 (= c!14270 (and ((_ is Cons!1515) (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (bvsgt (_1!1110 (h!2106 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (=> b!86983 (= e!56671 e!56668)))

(declare-fun e!56667 () List!1519)

(declare-fun b!86984 () Bool)

(assert (=> b!86984 (= e!56667 (insertStrictlySorted!60 (t!5240 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!86985 () Bool)

(assert (=> b!86985 (= e!56667 (ite c!14268 (t!5240 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (ite c!14270 (Cons!1515 (h!2106 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (t!5240 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))))) Nil!1516)))))

(declare-fun c!14267 () Bool)

(declare-fun bm!8302 () Bool)

(assert (=> bm!8302 (= call!8305 ($colon$colon!72 e!56667 (ite c!14267 (h!2106 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (tuple2!2199 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(declare-fun c!14269 () Bool)

(assert (=> bm!8302 (= c!14269 c!14267)))

(declare-fun bm!8303 () Bool)

(declare-fun call!8307 () List!1519)

(assert (=> bm!8303 (= call!8307 call!8305)))

(declare-fun bm!8304 () Bool)

(assert (=> bm!8304 (= call!8306 call!8307)))

(declare-fun b!86987 () Bool)

(assert (=> b!86987 (= e!56671 call!8307)))

(declare-fun d!22931 () Bool)

(assert (=> d!22931 e!56669))

(declare-fun res!44690 () Bool)

(assert (=> d!22931 (=> (not res!44690) (not e!56669))))

(assert (=> d!22931 (= res!44690 (isStrictlySorted!298 lt!41357))))

(assert (=> d!22931 (= lt!41357 e!56670)))

(assert (=> d!22931 (= c!14267 (and ((_ is Cons!1515) (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068)))) (bvslt (_1!1110 (h!2106 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (=> d!22931 (isStrictlySorted!298 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))))))

(assert (=> d!22931 (= (insertStrictlySorted!60 (toList!746 (ite c!13848 call!8071 (ite c!13846 call!8073 call!8068))) (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!41357)))

(declare-fun b!86986 () Bool)

(assert (=> b!86986 (= e!56669 (contains!754 lt!41357 (tuple2!2199 (_1!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_2!1110 (ite (or c!13848 c!13846) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22931 c!14267) b!86982))

(assert (= (and d!22931 (not c!14267)) b!86981))

(assert (= (and b!86981 c!14268) b!86987))

(assert (= (and b!86981 (not c!14268)) b!86983))

(assert (= (and b!86983 c!14270) b!86978))

(assert (= (and b!86983 (not c!14270)) b!86979))

(assert (= (or b!86978 b!86979) bm!8304))

(assert (= (or b!86987 bm!8304) bm!8303))

(assert (= (or b!86982 bm!8303) bm!8302))

(assert (= (and bm!8302 c!14269) b!86984))

(assert (= (and bm!8302 (not c!14269)) b!86985))

(assert (= (and d!22931 res!44690) b!86980))

(assert (= (and b!86980 res!44689) b!86986))

(declare-fun m!92539 () Bool)

(assert (=> d!22931 m!92539))

(declare-fun m!92541 () Bool)

(assert (=> d!22931 m!92541))

(declare-fun m!92543 () Bool)

(assert (=> b!86980 m!92543))

(declare-fun m!92545 () Bool)

(assert (=> b!86984 m!92545))

(declare-fun m!92547 () Bool)

(assert (=> b!86986 m!92547))

(declare-fun m!92549 () Bool)

(assert (=> bm!8302 m!92549))

(assert (=> d!22303 d!22931))

(declare-fun d!22933 () Bool)

(declare-fun res!44691 () Bool)

(declare-fun e!56672 () Bool)

(assert (=> d!22933 (=> res!44691 e!56672)))

(assert (=> d!22933 (= res!44691 (or ((_ is Nil!1516) lt!40634) ((_ is Nil!1516) (t!5240 lt!40634))))))

(assert (=> d!22933 (= (isStrictlySorted!298 lt!40634) e!56672)))

(declare-fun b!86988 () Bool)

(declare-fun e!56673 () Bool)

(assert (=> b!86988 (= e!56672 e!56673)))

(declare-fun res!44692 () Bool)

(assert (=> b!86988 (=> (not res!44692) (not e!56673))))

(assert (=> b!86988 (= res!44692 (bvslt (_1!1110 (h!2106 lt!40634)) (_1!1110 (h!2106 (t!5240 lt!40634)))))))

(declare-fun b!86989 () Bool)

(assert (=> b!86989 (= e!56673 (isStrictlySorted!298 (t!5240 lt!40634)))))

(assert (= (and d!22933 (not res!44691)) b!86988))

(assert (= (and b!86988 res!44692) b!86989))

(declare-fun m!92551 () Bool)

(assert (=> b!86989 m!92551))

(assert (=> d!22201 d!22933))

(declare-fun d!22935 () Bool)

(declare-fun res!44693 () Bool)

(declare-fun e!56674 () Bool)

(assert (=> d!22935 (=> res!44693 e!56674)))

(assert (=> d!22935 (= res!44693 (or ((_ is Nil!1516) (toList!746 lt!40316)) ((_ is Nil!1516) (t!5240 (toList!746 lt!40316)))))))

(assert (=> d!22935 (= (isStrictlySorted!298 (toList!746 lt!40316)) e!56674)))

(declare-fun b!86990 () Bool)

(declare-fun e!56675 () Bool)

(assert (=> b!86990 (= e!56674 e!56675)))

(declare-fun res!44694 () Bool)

(assert (=> b!86990 (=> (not res!44694) (not e!56675))))

(assert (=> b!86990 (= res!44694 (bvslt (_1!1110 (h!2106 (toList!746 lt!40316))) (_1!1110 (h!2106 (t!5240 (toList!746 lt!40316))))))))

(declare-fun b!86991 () Bool)

(assert (=> b!86991 (= e!56675 (isStrictlySorted!298 (t!5240 (toList!746 lt!40316))))))

(assert (= (and d!22935 (not res!44693)) b!86990))

(assert (= (and b!86990 res!44694) b!86991))

(declare-fun m!92553 () Bool)

(assert (=> b!86991 m!92553))

(assert (=> d!22201 d!22935))

(assert (=> b!85968 d!22421))

(declare-fun d!22937 () Bool)

(declare-fun e!56677 () Bool)

(assert (=> d!22937 e!56677))

(declare-fun res!44695 () Bool)

(assert (=> d!22937 (=> res!44695 e!56677)))

(declare-fun lt!41358 () Bool)

(assert (=> d!22937 (= res!44695 (not lt!41358))))

(declare-fun lt!41359 () Bool)

(assert (=> d!22937 (= lt!41358 lt!41359)))

(declare-fun lt!41361 () Unit!2517)

(declare-fun e!56676 () Unit!2517)

(assert (=> d!22937 (= lt!41361 e!56676)))

(declare-fun c!14271 () Bool)

(assert (=> d!22937 (= c!14271 lt!41359)))

(assert (=> d!22937 (= lt!41359 (containsKey!144 (toList!746 lt!40994) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!22937 (= (contains!753 lt!40994 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41358)))

(declare-fun b!86992 () Bool)

(declare-fun lt!41360 () Unit!2517)

(assert (=> b!86992 (= e!56676 lt!41360)))

(assert (=> b!86992 (= lt!41360 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40994) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!86992 (isDefined!93 (getValueByKey!140 (toList!746 lt!40994) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86993 () Bool)

(declare-fun Unit!2577 () Unit!2517)

(assert (=> b!86993 (= e!56676 Unit!2577)))

(declare-fun b!86994 () Bool)

(assert (=> b!86994 (= e!56677 (isDefined!93 (getValueByKey!140 (toList!746 lt!40994) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22937 c!14271) b!86992))

(assert (= (and d!22937 (not c!14271)) b!86993))

(assert (= (and d!22937 (not res!44695)) b!86994))

(declare-fun m!92555 () Bool)

(assert (=> d!22937 m!92555))

(declare-fun m!92557 () Bool)

(assert (=> b!86992 m!92557))

(assert (=> b!86992 m!91173))

(assert (=> b!86992 m!91173))

(declare-fun m!92559 () Bool)

(assert (=> b!86992 m!92559))

(assert (=> b!86994 m!91173))

(assert (=> b!86994 m!91173))

(assert (=> b!86994 m!92559))

(assert (=> d!22415 d!22937))

(declare-fun b!86995 () Bool)

(declare-fun e!56678 () Option!146)

(assert (=> b!86995 (= e!56678 (Some!145 (_2!1110 (h!2106 lt!40993))))))

(declare-fun d!22939 () Bool)

(declare-fun c!14272 () Bool)

(assert (=> d!22939 (= c!14272 (and ((_ is Cons!1515) lt!40993) (= (_1!1110 (h!2106 lt!40993)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22939 (= (getValueByKey!140 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56678)))

(declare-fun b!86998 () Bool)

(declare-fun e!56679 () Option!146)

(assert (=> b!86998 (= e!56679 None!144)))

(declare-fun b!86997 () Bool)

(assert (=> b!86997 (= e!56679 (getValueByKey!140 (t!5240 lt!40993) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!86996 () Bool)

(assert (=> b!86996 (= e!56678 e!56679)))

(declare-fun c!14273 () Bool)

(assert (=> b!86996 (= c!14273 (and ((_ is Cons!1515) lt!40993) (not (= (_1!1110 (h!2106 lt!40993)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!22939 c!14272) b!86995))

(assert (= (and d!22939 (not c!14272)) b!86996))

(assert (= (and b!86996 c!14273) b!86997))

(assert (= (and b!86996 (not c!14273)) b!86998))

(declare-fun m!92561 () Bool)

(assert (=> b!86997 m!92561))

(assert (=> d!22415 d!22939))

(declare-fun d!22941 () Bool)

(assert (=> d!22941 (= (getValueByKey!140 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41362 () Unit!2517)

(assert (=> d!22941 (= lt!41362 (choose!500 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!56680 () Bool)

(assert (=> d!22941 e!56680))

(declare-fun res!44696 () Bool)

(assert (=> d!22941 (=> (not res!44696) (not e!56680))))

(assert (=> d!22941 (= res!44696 (isStrictlySorted!298 lt!40993))))

(assert (=> d!22941 (= (lemmaContainsTupThenGetReturnValue!57 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41362)))

(declare-fun b!86999 () Bool)

(declare-fun res!44697 () Bool)

(assert (=> b!86999 (=> (not res!44697) (not e!56680))))

(assert (=> b!86999 (= res!44697 (containsKey!144 lt!40993 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87000 () Bool)

(assert (=> b!87000 (= e!56680 (contains!754 lt!40993 (tuple2!2199 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22941 res!44696) b!86999))

(assert (= (and b!86999 res!44697) b!87000))

(assert (=> d!22941 m!91167))

(declare-fun m!92563 () Bool)

(assert (=> d!22941 m!92563))

(declare-fun m!92565 () Bool)

(assert (=> d!22941 m!92565))

(declare-fun m!92567 () Bool)

(assert (=> b!86999 m!92567))

(declare-fun m!92569 () Bool)

(assert (=> b!87000 m!92569))

(assert (=> d!22415 d!22941))

(declare-fun b!87001 () Bool)

(declare-fun e!56682 () List!1519)

(declare-fun call!8309 () List!1519)

(assert (=> b!87001 (= e!56682 call!8309)))

(declare-fun b!87002 () Bool)

(assert (=> b!87002 (= e!56682 call!8309)))

(declare-fun b!87003 () Bool)

(declare-fun res!44698 () Bool)

(declare-fun e!56683 () Bool)

(assert (=> b!87003 (=> (not res!44698) (not e!56683))))

(declare-fun lt!41363 () List!1519)

(assert (=> b!87003 (= res!44698 (containsKey!144 lt!41363 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87004 () Bool)

(declare-fun e!56684 () List!1519)

(declare-fun e!56685 () List!1519)

(assert (=> b!87004 (= e!56684 e!56685)))

(declare-fun c!14275 () Bool)

(assert (=> b!87004 (= c!14275 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!87005 () Bool)

(declare-fun call!8308 () List!1519)

(assert (=> b!87005 (= e!56684 call!8308)))

(declare-fun c!14277 () Bool)

(declare-fun b!87006 () Bool)

(assert (=> b!87006 (= c!14277 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (bvsgt (_1!1110 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!87006 (= e!56685 e!56682)))

(declare-fun b!87007 () Bool)

(declare-fun e!56681 () List!1519)

(assert (=> b!87007 (= e!56681 (insertStrictlySorted!60 (t!5240 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87008 () Bool)

(assert (=> b!87008 (= e!56681 (ite c!14275 (t!5240 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (ite c!14277 (Cons!1515 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (t!5240 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) Nil!1516)))))

(declare-fun c!14274 () Bool)

(declare-fun bm!8305 () Bool)

(assert (=> bm!8305 (= call!8308 ($colon$colon!72 e!56681 (ite c!14274 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (tuple2!2199 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14276 () Bool)

(assert (=> bm!8305 (= c!14276 c!14274)))

(declare-fun bm!8306 () Bool)

(declare-fun call!8310 () List!1519)

(assert (=> bm!8306 (= call!8310 call!8308)))

(declare-fun bm!8307 () Bool)

(assert (=> bm!8307 (= call!8309 call!8310)))

(declare-fun b!87010 () Bool)

(assert (=> b!87010 (= e!56685 call!8310)))

(declare-fun d!22943 () Bool)

(assert (=> d!22943 e!56683))

(declare-fun res!44699 () Bool)

(assert (=> d!22943 (=> (not res!44699) (not e!56683))))

(assert (=> d!22943 (= res!44699 (isStrictlySorted!298 lt!41363))))

(assert (=> d!22943 (= lt!41363 e!56684)))

(assert (=> d!22943 (= c!14274 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!22943 (isStrictlySorted!298 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22943 (= (insertStrictlySorted!60 (toList!746 (+!110 lt!40325 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41363)))

(declare-fun b!87009 () Bool)

(assert (=> b!87009 (= e!56683 (contains!754 lt!41363 (tuple2!2199 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!22943 c!14274) b!87005))

(assert (= (and d!22943 (not c!14274)) b!87004))

(assert (= (and b!87004 c!14275) b!87010))

(assert (= (and b!87004 (not c!14275)) b!87006))

(assert (= (and b!87006 c!14277) b!87001))

(assert (= (and b!87006 (not c!14277)) b!87002))

(assert (= (or b!87001 b!87002) bm!8307))

(assert (= (or b!87010 bm!8307) bm!8306))

(assert (= (or b!87005 bm!8306) bm!8305))

(assert (= (and bm!8305 c!14276) b!87007))

(assert (= (and bm!8305 (not c!14276)) b!87008))

(assert (= (and d!22943 res!44699) b!87003))

(assert (= (and b!87003 res!44698) b!87009))

(declare-fun m!92571 () Bool)

(assert (=> d!22943 m!92571))

(declare-fun m!92573 () Bool)

(assert (=> d!22943 m!92573))

(declare-fun m!92575 () Bool)

(assert (=> b!87003 m!92575))

(declare-fun m!92577 () Bool)

(assert (=> b!87007 m!92577))

(declare-fun m!92579 () Bool)

(assert (=> b!87009 m!92579))

(declare-fun m!92581 () Bool)

(assert (=> bm!8305 m!92581))

(assert (=> d!22415 d!22943))

(declare-fun b!87011 () Bool)

(declare-fun e!56687 () List!1519)

(declare-fun call!8312 () List!1519)

(assert (=> b!87011 (= e!56687 call!8312)))

(declare-fun b!87012 () Bool)

(assert (=> b!87012 (= e!56687 call!8312)))

(declare-fun b!87013 () Bool)

(declare-fun res!44700 () Bool)

(declare-fun e!56688 () Bool)

(assert (=> b!87013 (=> (not res!44700) (not e!56688))))

(declare-fun lt!41364 () List!1519)

(assert (=> b!87013 (= res!44700 (containsKey!144 lt!41364 (_1!1110 lt!40324)))))

(declare-fun b!87014 () Bool)

(declare-fun e!56689 () List!1519)

(declare-fun e!56690 () List!1519)

(assert (=> b!87014 (= e!56689 e!56690)))

(declare-fun c!14279 () Bool)

(assert (=> b!87014 (= c!14279 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40325))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325)))) (_1!1110 lt!40324))))))

(declare-fun b!87015 () Bool)

(declare-fun call!8311 () List!1519)

(assert (=> b!87015 (= e!56689 call!8311)))

(declare-fun b!87016 () Bool)

(declare-fun c!14281 () Bool)

(assert (=> b!87016 (= c!14281 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40325))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325)))) (_1!1110 lt!40324))))))

(assert (=> b!87016 (= e!56690 e!56687)))

(declare-fun b!87017 () Bool)

(declare-fun e!56686 () List!1519)

(assert (=> b!87017 (= e!56686 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 lt!40325))) (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(declare-fun b!87018 () Bool)

(assert (=> b!87018 (= e!56686 (ite c!14279 (t!5240 (t!5240 (toList!746 lt!40325))) (ite c!14281 (Cons!1515 (h!2106 (t!5240 (toList!746 lt!40325))) (t!5240 (t!5240 (toList!746 lt!40325)))) Nil!1516)))))

(declare-fun c!14278 () Bool)

(declare-fun bm!8308 () Bool)

(assert (=> bm!8308 (= call!8311 ($colon$colon!72 e!56686 (ite c!14278 (h!2106 (t!5240 (toList!746 lt!40325))) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324)))))))

(declare-fun c!14280 () Bool)

(assert (=> bm!8308 (= c!14280 c!14278)))

(declare-fun bm!8309 () Bool)

(declare-fun call!8313 () List!1519)

(assert (=> bm!8309 (= call!8313 call!8311)))

(declare-fun bm!8310 () Bool)

(assert (=> bm!8310 (= call!8312 call!8313)))

(declare-fun b!87020 () Bool)

(assert (=> b!87020 (= e!56690 call!8313)))

(declare-fun d!22945 () Bool)

(assert (=> d!22945 e!56688))

(declare-fun res!44701 () Bool)

(assert (=> d!22945 (=> (not res!44701) (not e!56688))))

(assert (=> d!22945 (= res!44701 (isStrictlySorted!298 lt!41364))))

(assert (=> d!22945 (= lt!41364 e!56689)))

(assert (=> d!22945 (= c!14278 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40325))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325)))) (_1!1110 lt!40324))))))

(assert (=> d!22945 (isStrictlySorted!298 (t!5240 (toList!746 lt!40325)))))

(assert (=> d!22945 (= (insertStrictlySorted!60 (t!5240 (toList!746 lt!40325)) (_1!1110 lt!40324) (_2!1110 lt!40324)) lt!41364)))

(declare-fun b!87019 () Bool)

(assert (=> b!87019 (= e!56688 (contains!754 lt!41364 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!22945 c!14278) b!87015))

(assert (= (and d!22945 (not c!14278)) b!87014))

(assert (= (and b!87014 c!14279) b!87020))

(assert (= (and b!87014 (not c!14279)) b!87016))

(assert (= (and b!87016 c!14281) b!87011))

(assert (= (and b!87016 (not c!14281)) b!87012))

(assert (= (or b!87011 b!87012) bm!8310))

(assert (= (or b!87020 bm!8310) bm!8309))

(assert (= (or b!87015 bm!8309) bm!8308))

(assert (= (and bm!8308 c!14280) b!87017))

(assert (= (and bm!8308 (not c!14280)) b!87018))

(assert (= (and d!22945 res!44701) b!87013))

(assert (= (and b!87013 res!44700) b!87019))

(declare-fun m!92583 () Bool)

(assert (=> d!22945 m!92583))

(assert (=> d!22945 m!92403))

(declare-fun m!92585 () Bool)

(assert (=> b!87013 m!92585))

(declare-fun m!92587 () Bool)

(assert (=> b!87017 m!92587))

(declare-fun m!92589 () Bool)

(assert (=> b!87019 m!92589))

(declare-fun m!92591 () Bool)

(assert (=> bm!8308 m!92591))

(assert (=> b!85808 d!22945))

(declare-fun d!22947 () Bool)

(declare-fun lt!41365 () Bool)

(assert (=> d!22947 (= lt!41365 (select (content!89 lt!40563) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun e!56691 () Bool)

(assert (=> d!22947 (= lt!41365 e!56691)))

(declare-fun res!44702 () Bool)

(assert (=> d!22947 (=> (not res!44702) (not e!56691))))

(assert (=> d!22947 (= res!44702 ((_ is Cons!1515) lt!40563))))

(assert (=> d!22947 (= (contains!754 lt!40563 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) lt!41365)))

(declare-fun b!87021 () Bool)

(declare-fun e!56692 () Bool)

(assert (=> b!87021 (= e!56691 e!56692)))

(declare-fun res!44703 () Bool)

(assert (=> b!87021 (=> res!44703 e!56692)))

(assert (=> b!87021 (= res!44703 (= (h!2106 lt!40563) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun b!87022 () Bool)

(assert (=> b!87022 (= e!56692 (contains!754 (t!5240 lt!40563) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!22947 res!44702) b!87021))

(assert (= (and b!87021 (not res!44703)) b!87022))

(declare-fun m!92593 () Bool)

(assert (=> d!22947 m!92593))

(declare-fun m!92595 () Bool)

(assert (=> d!22947 m!92595))

(declare-fun m!92597 () Bool)

(assert (=> b!87022 m!92597))

(assert (=> b!85725 d!22947))

(declare-fun d!22949 () Bool)

(assert (=> d!22949 (= (get!1197 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85786 d!22949))

(assert (=> d!22265 d!22259))

(assert (=> d!22265 d!22261))

(declare-fun d!22951 () Bool)

(assert (=> d!22951 (not (contains!753 (+!110 lt!40587 (tuple2!2199 lt!40586 lt!40590)) lt!40585))))

(assert (=> d!22951 true))

(declare-fun _$36!313 () Unit!2517)

(assert (=> d!22951 (= (choose!502 lt!40587 lt!40586 lt!40590 lt!40585) _$36!313)))

(declare-fun bs!3693 () Bool)

(assert (= bs!3693 d!22951))

(assert (=> bs!3693 m!90165))

(assert (=> bs!3693 m!90165))

(assert (=> bs!3693 m!90167))

(assert (=> d!22265 d!22951))

(declare-fun d!22953 () Bool)

(declare-fun e!56694 () Bool)

(assert (=> d!22953 e!56694))

(declare-fun res!44704 () Bool)

(assert (=> d!22953 (=> res!44704 e!56694)))

(declare-fun lt!41366 () Bool)

(assert (=> d!22953 (= res!44704 (not lt!41366))))

(declare-fun lt!41367 () Bool)

(assert (=> d!22953 (= lt!41366 lt!41367)))

(declare-fun lt!41369 () Unit!2517)

(declare-fun e!56693 () Unit!2517)

(assert (=> d!22953 (= lt!41369 e!56693)))

(declare-fun c!14282 () Bool)

(assert (=> d!22953 (= c!14282 lt!41367)))

(assert (=> d!22953 (= lt!41367 (containsKey!144 (toList!746 lt!40587) lt!40585))))

(assert (=> d!22953 (= (contains!753 lt!40587 lt!40585) lt!41366)))

(declare-fun b!87024 () Bool)

(declare-fun lt!41368 () Unit!2517)

(assert (=> b!87024 (= e!56693 lt!41368)))

(assert (=> b!87024 (= lt!41368 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40587) lt!40585))))

(assert (=> b!87024 (isDefined!93 (getValueByKey!140 (toList!746 lt!40587) lt!40585))))

(declare-fun b!87025 () Bool)

(declare-fun Unit!2578 () Unit!2517)

(assert (=> b!87025 (= e!56693 Unit!2578)))

(declare-fun b!87026 () Bool)

(assert (=> b!87026 (= e!56694 (isDefined!93 (getValueByKey!140 (toList!746 lt!40587) lt!40585)))))

(assert (= (and d!22953 c!14282) b!87024))

(assert (= (and d!22953 (not c!14282)) b!87025))

(assert (= (and d!22953 (not res!44704)) b!87026))

(declare-fun m!92599 () Bool)

(assert (=> d!22953 m!92599))

(declare-fun m!92601 () Bool)

(assert (=> b!87024 m!92601))

(declare-fun m!92603 () Bool)

(assert (=> b!87024 m!92603))

(assert (=> b!87024 m!92603))

(declare-fun m!92605 () Bool)

(assert (=> b!87024 m!92605))

(assert (=> b!87026 m!92603))

(assert (=> b!87026 m!92603))

(assert (=> b!87026 m!92605))

(assert (=> d!22265 d!22953))

(declare-fun d!22955 () Bool)

(assert (=> d!22955 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun lt!41370 () Unit!2517)

(assert (=> d!22955 (= lt!41370 (choose!504 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun e!56695 () Bool)

(assert (=> d!22955 e!56695))

(declare-fun res!44705 () Bool)

(assert (=> d!22955 (=> (not res!44705) (not e!56695))))

(assert (=> d!22955 (= res!44705 (isStrictlySorted!298 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))))

(assert (=> d!22955 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) lt!41370)))

(declare-fun b!87027 () Bool)

(assert (=> b!87027 (= e!56695 (containsKey!144 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22955 res!44705) b!87027))

(assert (=> d!22955 m!89857))

(assert (=> d!22955 m!90765))

(assert (=> d!22955 m!90765))

(assert (=> d!22955 m!90767))

(assert (=> d!22955 m!89857))

(declare-fun m!92607 () Bool)

(assert (=> d!22955 m!92607))

(declare-fun m!92609 () Bool)

(assert (=> d!22955 m!92609))

(assert (=> b!87027 m!89857))

(assert (=> b!87027 m!90761))

(assert (=> b!86005 d!22955))

(declare-fun d!22957 () Bool)

(assert (=> d!22957 (= (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) (not (isEmpty!337 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(declare-fun bs!3694 () Bool)

(assert (= bs!3694 d!22957))

(assert (=> bs!3694 m!90765))

(declare-fun m!92611 () Bool)

(assert (=> bs!3694 m!92611))

(assert (=> b!86005 d!22957))

(declare-fun b!87028 () Bool)

(declare-fun e!56696 () Option!146)

(assert (=> b!87028 (= e!56696 (Some!145 (_2!1110 (h!2106 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))))))

(declare-fun c!14283 () Bool)

(declare-fun d!22959 () Bool)

(assert (=> d!22959 (= c!14283 (and ((_ is Cons!1515) (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (= (_1!1110 (h!2106 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!22959 (= (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56696)))

(declare-fun b!87031 () Bool)

(declare-fun e!56697 () Option!146)

(assert (=> b!87031 (= e!56697 None!144)))

(declare-fun b!87030 () Bool)

(assert (=> b!87030 (= e!56697 (getValueByKey!140 (t!5240 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!87029 () Bool)

(assert (=> b!87029 (= e!56696 e!56697)))

(declare-fun c!14284 () Bool)

(assert (=> b!87029 (= c!14284 (and ((_ is Cons!1515) (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (not (= (_1!1110 (h!2106 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(assert (= (and d!22959 c!14283) b!87028))

(assert (= (and d!22959 (not c!14283)) b!87029))

(assert (= (and b!87029 c!14284) b!87030))

(assert (= (and b!87029 (not c!14284)) b!87031))

(assert (=> b!87030 m!89857))

(declare-fun m!92613 () Bool)

(assert (=> b!87030 m!92613))

(assert (=> b!86005 d!22959))

(declare-fun b!87032 () Bool)

(declare-fun e!56699 () List!1519)

(declare-fun call!8315 () List!1519)

(assert (=> b!87032 (= e!56699 call!8315)))

(declare-fun b!87033 () Bool)

(assert (=> b!87033 (= e!56699 call!8315)))

(declare-fun b!87034 () Bool)

(declare-fun res!44706 () Bool)

(declare-fun e!56700 () Bool)

(assert (=> b!87034 (=> (not res!44706) (not e!56700))))

(declare-fun lt!41371 () List!1519)

(assert (=> b!87034 (= res!44706 (containsKey!144 lt!41371 (_1!1110 lt!40322)))))

(declare-fun b!87035 () Bool)

(declare-fun e!56701 () List!1519)

(declare-fun e!56702 () List!1519)

(assert (=> b!87035 (= e!56701 e!56702)))

(declare-fun c!14286 () Bool)

(assert (=> b!87035 (= c!14286 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40319))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40319)))) (_1!1110 lt!40322))))))

(declare-fun b!87036 () Bool)

(declare-fun call!8314 () List!1519)

(assert (=> b!87036 (= e!56701 call!8314)))

(declare-fun b!87037 () Bool)

(declare-fun c!14288 () Bool)

(assert (=> b!87037 (= c!14288 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40319))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40319)))) (_1!1110 lt!40322))))))

(assert (=> b!87037 (= e!56702 e!56699)))

(declare-fun b!87038 () Bool)

(declare-fun e!56698 () List!1519)

(assert (=> b!87038 (= e!56698 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 lt!40319))) (_1!1110 lt!40322) (_2!1110 lt!40322)))))

(declare-fun b!87039 () Bool)

(assert (=> b!87039 (= e!56698 (ite c!14286 (t!5240 (t!5240 (toList!746 lt!40319))) (ite c!14288 (Cons!1515 (h!2106 (t!5240 (toList!746 lt!40319))) (t!5240 (t!5240 (toList!746 lt!40319)))) Nil!1516)))))

(declare-fun bm!8311 () Bool)

(declare-fun c!14285 () Bool)

(assert (=> bm!8311 (= call!8314 ($colon$colon!72 e!56698 (ite c!14285 (h!2106 (t!5240 (toList!746 lt!40319))) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322)))))))

(declare-fun c!14287 () Bool)

(assert (=> bm!8311 (= c!14287 c!14285)))

(declare-fun bm!8312 () Bool)

(declare-fun call!8316 () List!1519)

(assert (=> bm!8312 (= call!8316 call!8314)))

(declare-fun bm!8313 () Bool)

(assert (=> bm!8313 (= call!8315 call!8316)))

(declare-fun b!87041 () Bool)

(assert (=> b!87041 (= e!56702 call!8316)))

(declare-fun d!22961 () Bool)

(assert (=> d!22961 e!56700))

(declare-fun res!44707 () Bool)

(assert (=> d!22961 (=> (not res!44707) (not e!56700))))

(assert (=> d!22961 (= res!44707 (isStrictlySorted!298 lt!41371))))

(assert (=> d!22961 (= lt!41371 e!56701)))

(assert (=> d!22961 (= c!14285 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40319))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40319)))) (_1!1110 lt!40322))))))

(assert (=> d!22961 (isStrictlySorted!298 (t!5240 (toList!746 lt!40319)))))

(assert (=> d!22961 (= (insertStrictlySorted!60 (t!5240 (toList!746 lt!40319)) (_1!1110 lt!40322) (_2!1110 lt!40322)) lt!41371)))

(declare-fun b!87040 () Bool)

(assert (=> b!87040 (= e!56700 (contains!754 lt!41371 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!22961 c!14285) b!87036))

(assert (= (and d!22961 (not c!14285)) b!87035))

(assert (= (and b!87035 c!14286) b!87041))

(assert (= (and b!87035 (not c!14286)) b!87037))

(assert (= (and b!87037 c!14288) b!87032))

(assert (= (and b!87037 (not c!14288)) b!87033))

(assert (= (or b!87032 b!87033) bm!8313))

(assert (= (or b!87041 bm!8313) bm!8312))

(assert (= (or b!87036 bm!8312) bm!8311))

(assert (= (and bm!8311 c!14287) b!87038))

(assert (= (and bm!8311 (not c!14287)) b!87039))

(assert (= (and d!22961 res!44707) b!87034))

(assert (= (and b!87034 res!44706) b!87040))

(declare-fun m!92615 () Bool)

(assert (=> d!22961 m!92615))

(assert (=> d!22961 m!91673))

(declare-fun m!92617 () Bool)

(assert (=> b!87034 m!92617))

(declare-fun m!92619 () Bool)

(assert (=> b!87038 m!92619))

(declare-fun m!92621 () Bool)

(assert (=> b!87040 m!92621))

(declare-fun m!92623 () Bool)

(assert (=> bm!8311 m!92623))

(assert (=> b!86133 d!22961))

(declare-fun d!22963 () Bool)

(declare-fun e!56704 () Bool)

(assert (=> d!22963 e!56704))

(declare-fun res!44708 () Bool)

(assert (=> d!22963 (=> res!44708 e!56704)))

(declare-fun lt!41372 () Bool)

(assert (=> d!22963 (= res!44708 (not lt!41372))))

(declare-fun lt!41373 () Bool)

(assert (=> d!22963 (= lt!41372 lt!41373)))

(declare-fun lt!41375 () Unit!2517)

(declare-fun e!56703 () Unit!2517)

(assert (=> d!22963 (= lt!41375 e!56703)))

(declare-fun c!14289 () Bool)

(assert (=> d!22963 (= c!14289 lt!41373)))

(assert (=> d!22963 (= lt!41373 (containsKey!144 (toList!746 lt!40886) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!22963 (= (contains!753 lt!40886 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41372)))

(declare-fun b!87042 () Bool)

(declare-fun lt!41374 () Unit!2517)

(assert (=> b!87042 (= e!56703 lt!41374)))

(assert (=> b!87042 (= lt!41374 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40886) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> b!87042 (isDefined!93 (getValueByKey!140 (toList!746 lt!40886) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87043 () Bool)

(declare-fun Unit!2579 () Unit!2517)

(assert (=> b!87043 (= e!56703 Unit!2579)))

(declare-fun b!87044 () Bool)

(assert (=> b!87044 (= e!56704 (isDefined!93 (getValueByKey!140 (toList!746 lt!40886) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!22963 c!14289) b!87042))

(assert (= (and d!22963 (not c!14289)) b!87043))

(assert (= (and d!22963 (not res!44708)) b!87044))

(declare-fun m!92625 () Bool)

(assert (=> d!22963 m!92625))

(declare-fun m!92627 () Bool)

(assert (=> b!87042 m!92627))

(assert (=> b!87042 m!90847))

(assert (=> b!87042 m!90847))

(declare-fun m!92629 () Bool)

(assert (=> b!87042 m!92629))

(assert (=> b!87044 m!90847))

(assert (=> b!87044 m!90847))

(assert (=> b!87044 m!92629))

(assert (=> d!22329 d!22963))

(declare-fun b!87045 () Bool)

(declare-fun e!56705 () Option!146)

(assert (=> b!87045 (= e!56705 (Some!145 (_2!1110 (h!2106 lt!40885))))))

(declare-fun d!22965 () Bool)

(declare-fun c!14290 () Bool)

(assert (=> d!22965 (= c!14290 (and ((_ is Cons!1515) lt!40885) (= (_1!1110 (h!2106 lt!40885)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22965 (= (getValueByKey!140 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56705)))

(declare-fun b!87048 () Bool)

(declare-fun e!56706 () Option!146)

(assert (=> b!87048 (= e!56706 None!144)))

(declare-fun b!87047 () Bool)

(assert (=> b!87047 (= e!56706 (getValueByKey!140 (t!5240 lt!40885) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87046 () Bool)

(assert (=> b!87046 (= e!56705 e!56706)))

(declare-fun c!14291 () Bool)

(assert (=> b!87046 (= c!14291 (and ((_ is Cons!1515) lt!40885) (not (= (_1!1110 (h!2106 lt!40885)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!22965 c!14290) b!87045))

(assert (= (and d!22965 (not c!14290)) b!87046))

(assert (= (and b!87046 c!14291) b!87047))

(assert (= (and b!87046 (not c!14291)) b!87048))

(declare-fun m!92631 () Bool)

(assert (=> b!87047 m!92631))

(assert (=> d!22329 d!22965))

(declare-fun d!22967 () Bool)

(assert (=> d!22967 (= (getValueByKey!140 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41376 () Unit!2517)

(assert (=> d!22967 (= lt!41376 (choose!500 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun e!56707 () Bool)

(assert (=> d!22967 e!56707))

(declare-fun res!44709 () Bool)

(assert (=> d!22967 (=> (not res!44709) (not e!56707))))

(assert (=> d!22967 (= res!44709 (isStrictlySorted!298 lt!40885))))

(assert (=> d!22967 (= (lemmaContainsTupThenGetReturnValue!57 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41376)))

(declare-fun b!87049 () Bool)

(declare-fun res!44710 () Bool)

(assert (=> b!87049 (=> (not res!44710) (not e!56707))))

(assert (=> b!87049 (= res!44710 (containsKey!144 lt!40885 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87050 () Bool)

(assert (=> b!87050 (= e!56707 (contains!754 lt!40885 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!22967 res!44709) b!87049))

(assert (= (and b!87049 res!44710) b!87050))

(assert (=> d!22967 m!90841))

(declare-fun m!92633 () Bool)

(assert (=> d!22967 m!92633))

(declare-fun m!92635 () Bool)

(assert (=> d!22967 m!92635))

(declare-fun m!92637 () Bool)

(assert (=> b!87049 m!92637))

(declare-fun m!92639 () Bool)

(assert (=> b!87050 m!92639))

(assert (=> d!22329 d!22967))

(declare-fun b!87051 () Bool)

(declare-fun e!56709 () List!1519)

(declare-fun call!8318 () List!1519)

(assert (=> b!87051 (= e!56709 call!8318)))

(declare-fun b!87052 () Bool)

(assert (=> b!87052 (= e!56709 call!8318)))

(declare-fun b!87053 () Bool)

(declare-fun res!44711 () Bool)

(declare-fun e!56710 () Bool)

(assert (=> b!87053 (=> (not res!44711) (not e!56710))))

(declare-fun lt!41377 () List!1519)

(assert (=> b!87053 (= res!44711 (containsKey!144 lt!41377 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87054 () Bool)

(declare-fun e!56711 () List!1519)

(declare-fun e!56712 () List!1519)

(assert (=> b!87054 (= e!56711 e!56712)))

(declare-fun c!14293 () Bool)

(assert (=> b!87054 (= c!14293 (and ((_ is Cons!1515) (toList!746 call!8133)) (= (_1!1110 (h!2106 (toList!746 call!8133))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87055 () Bool)

(declare-fun call!8317 () List!1519)

(assert (=> b!87055 (= e!56711 call!8317)))

(declare-fun b!87056 () Bool)

(declare-fun c!14295 () Bool)

(assert (=> b!87056 (= c!14295 (and ((_ is Cons!1515) (toList!746 call!8133)) (bvsgt (_1!1110 (h!2106 (toList!746 call!8133))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> b!87056 (= e!56712 e!56709)))

(declare-fun e!56708 () List!1519)

(declare-fun b!87057 () Bool)

(assert (=> b!87057 (= e!56708 (insertStrictlySorted!60 (t!5240 (toList!746 call!8133)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87058 () Bool)

(assert (=> b!87058 (= e!56708 (ite c!14293 (t!5240 (toList!746 call!8133)) (ite c!14295 (Cons!1515 (h!2106 (toList!746 call!8133)) (t!5240 (toList!746 call!8133))) Nil!1516)))))

(declare-fun bm!8314 () Bool)

(declare-fun c!14292 () Bool)

(assert (=> bm!8314 (= call!8317 ($colon$colon!72 e!56708 (ite c!14292 (h!2106 (toList!746 call!8133)) (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun c!14294 () Bool)

(assert (=> bm!8314 (= c!14294 c!14292)))

(declare-fun bm!8315 () Bool)

(declare-fun call!8319 () List!1519)

(assert (=> bm!8315 (= call!8319 call!8317)))

(declare-fun bm!8316 () Bool)

(assert (=> bm!8316 (= call!8318 call!8319)))

(declare-fun b!87060 () Bool)

(assert (=> b!87060 (= e!56712 call!8319)))

(declare-fun d!22969 () Bool)

(assert (=> d!22969 e!56710))

(declare-fun res!44712 () Bool)

(assert (=> d!22969 (=> (not res!44712) (not e!56710))))

(assert (=> d!22969 (= res!44712 (isStrictlySorted!298 lt!41377))))

(assert (=> d!22969 (= lt!41377 e!56711)))

(assert (=> d!22969 (= c!14292 (and ((_ is Cons!1515) (toList!746 call!8133)) (bvslt (_1!1110 (h!2106 (toList!746 call!8133))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22969 (isStrictlySorted!298 (toList!746 call!8133))))

(assert (=> d!22969 (= (insertStrictlySorted!60 (toList!746 call!8133) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41377)))

(declare-fun b!87059 () Bool)

(assert (=> b!87059 (= e!56710 (contains!754 lt!41377 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!22969 c!14292) b!87055))

(assert (= (and d!22969 (not c!14292)) b!87054))

(assert (= (and b!87054 c!14293) b!87060))

(assert (= (and b!87054 (not c!14293)) b!87056))

(assert (= (and b!87056 c!14295) b!87051))

(assert (= (and b!87056 (not c!14295)) b!87052))

(assert (= (or b!87051 b!87052) bm!8316))

(assert (= (or b!87060 bm!8316) bm!8315))

(assert (= (or b!87055 bm!8315) bm!8314))

(assert (= (and bm!8314 c!14294) b!87057))

(assert (= (and bm!8314 (not c!14294)) b!87058))

(assert (= (and d!22969 res!44712) b!87053))

(assert (= (and b!87053 res!44711) b!87059))

(declare-fun m!92641 () Bool)

(assert (=> d!22969 m!92641))

(declare-fun m!92643 () Bool)

(assert (=> d!22969 m!92643))

(declare-fun m!92645 () Bool)

(assert (=> b!87053 m!92645))

(declare-fun m!92647 () Bool)

(assert (=> b!87057 m!92647))

(declare-fun m!92649 () Bool)

(assert (=> b!87059 m!92649))

(declare-fun m!92651 () Bool)

(assert (=> bm!8314 m!92651))

(assert (=> d!22329 d!22969))

(declare-fun d!22971 () Bool)

(assert (=> d!22971 (= (size!2167 newMap!16) (bvadd (_size!427 newMap!16) (bvsdiv (bvadd (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!85900 d!22971))

(declare-fun b!87061 () Bool)

(declare-fun e!56715 () Bool)

(declare-fun call!8320 () Bool)

(assert (=> b!87061 (= e!56715 call!8320)))

(declare-fun b!87062 () Bool)

(declare-fun e!56716 () Bool)

(assert (=> b!87062 (= e!56716 (contains!755 Nil!1517 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!87063 () Bool)

(assert (=> b!87063 (= e!56715 call!8320)))

(declare-fun bm!8317 () Bool)

(declare-fun c!14296 () Bool)

(assert (=> bm!8317 (= call!8320 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14296 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000) Nil!1517) Nil!1517)))))

(declare-fun d!22973 () Bool)

(declare-fun res!44713 () Bool)

(declare-fun e!56713 () Bool)

(assert (=> d!22973 (=> res!44713 e!56713)))

(assert (=> d!22973 (= res!44713 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!22973 (= (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000 Nil!1517) e!56713)))

(declare-fun b!87064 () Bool)

(declare-fun e!56714 () Bool)

(assert (=> b!87064 (= e!56714 e!56715)))

(assert (=> b!87064 (= c!14296 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!87065 () Bool)

(assert (=> b!87065 (= e!56713 e!56714)))

(declare-fun res!44714 () Bool)

(assert (=> b!87065 (=> (not res!44714) (not e!56714))))

(assert (=> b!87065 (= res!44714 (not e!56716))))

(declare-fun res!44715 () Bool)

(assert (=> b!87065 (=> (not res!44715) (not e!56716))))

(assert (=> b!87065 (= res!44715 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!22973 (not res!44713)) b!87065))

(assert (= (and b!87065 res!44715) b!87062))

(assert (= (and b!87065 res!44714) b!87064))

(assert (= (and b!87064 c!14296) b!87061))

(assert (= (and b!87064 (not c!14296)) b!87063))

(assert (= (or b!87061 b!87063) bm!8317))

(assert (=> b!87062 m!92169))

(assert (=> b!87062 m!92169))

(declare-fun m!92653 () Bool)

(assert (=> b!87062 m!92653))

(assert (=> bm!8317 m!92169))

(declare-fun m!92655 () Bool)

(assert (=> bm!8317 m!92655))

(assert (=> b!87064 m!92169))

(assert (=> b!87064 m!92169))

(assert (=> b!87064 m!92171))

(assert (=> b!87065 m!92169))

(assert (=> b!87065 m!92169))

(assert (=> b!87065 m!92171))

(assert (=> b!85837 d!22973))

(declare-fun d!22975 () Bool)

(declare-fun e!56718 () Bool)

(assert (=> d!22975 e!56718))

(declare-fun res!44716 () Bool)

(assert (=> d!22975 (=> res!44716 e!56718)))

(declare-fun lt!41378 () Bool)

(assert (=> d!22975 (= res!44716 (not lt!41378))))

(declare-fun lt!41379 () Bool)

(assert (=> d!22975 (= lt!41378 lt!41379)))

(declare-fun lt!41381 () Unit!2517)

(declare-fun e!56717 () Unit!2517)

(assert (=> d!22975 (= lt!41381 e!56717)))

(declare-fun c!14297 () Bool)

(assert (=> d!22975 (= c!14297 lt!41379)))

(assert (=> d!22975 (= lt!41379 (containsKey!144 (toList!746 lt!40695) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!22975 (= (contains!753 lt!40695 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!41378)))

(declare-fun b!87066 () Bool)

(declare-fun lt!41380 () Unit!2517)

(assert (=> b!87066 (= e!56717 lt!41380)))

(assert (=> b!87066 (= lt!41380 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40695) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!87066 (isDefined!93 (getValueByKey!140 (toList!746 lt!40695) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!87067 () Bool)

(declare-fun Unit!2580 () Unit!2517)

(assert (=> b!87067 (= e!56717 Unit!2580)))

(declare-fun b!87068 () Bool)

(assert (=> b!87068 (= e!56718 (isDefined!93 (getValueByKey!140 (toList!746 lt!40695) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!22975 c!14297) b!87066))

(assert (= (and d!22975 (not c!14297)) b!87067))

(assert (= (and d!22975 (not res!44716)) b!87068))

(assert (=> d!22975 m!90317))

(declare-fun m!92657 () Bool)

(assert (=> d!22975 m!92657))

(assert (=> b!87066 m!90317))

(declare-fun m!92659 () Bool)

(assert (=> b!87066 m!92659))

(assert (=> b!87066 m!90317))

(assert (=> b!87066 m!91275))

(assert (=> b!87066 m!91275))

(declare-fun m!92661 () Bool)

(assert (=> b!87066 m!92661))

(assert (=> b!87068 m!90317))

(assert (=> b!87068 m!91275))

(assert (=> b!87068 m!91275))

(assert (=> b!87068 m!92661))

(assert (=> b!85867 d!22975))

(declare-fun d!22977 () Bool)

(declare-fun lt!41382 () Bool)

(assert (=> d!22977 (= lt!41382 (select (content!89 (t!5240 (toList!746 lt!40564))) lt!40318))))

(declare-fun e!56719 () Bool)

(assert (=> d!22977 (= lt!41382 e!56719)))

(declare-fun res!44717 () Bool)

(assert (=> d!22977 (=> (not res!44717) (not e!56719))))

(assert (=> d!22977 (= res!44717 ((_ is Cons!1515) (t!5240 (toList!746 lt!40564))))))

(assert (=> d!22977 (= (contains!754 (t!5240 (toList!746 lt!40564)) lt!40318) lt!41382)))

(declare-fun b!87069 () Bool)

(declare-fun e!56720 () Bool)

(assert (=> b!87069 (= e!56719 e!56720)))

(declare-fun res!44718 () Bool)

(assert (=> b!87069 (=> res!44718 e!56720)))

(assert (=> b!87069 (= res!44718 (= (h!2106 (t!5240 (toList!746 lt!40564))) lt!40318))))

(declare-fun b!87070 () Bool)

(assert (=> b!87070 (= e!56720 (contains!754 (t!5240 (t!5240 (toList!746 lt!40564))) lt!40318))))

(assert (= (and d!22977 res!44717) b!87069))

(assert (= (and b!87069 (not res!44718)) b!87070))

(declare-fun m!92663 () Bool)

(assert (=> d!22977 m!92663))

(declare-fun m!92665 () Bool)

(assert (=> d!22977 m!92665))

(declare-fun m!92667 () Bool)

(assert (=> b!87070 m!92667))

(assert (=> b!85905 d!22977))

(declare-fun d!22979 () Bool)

(assert (=> d!22979 (= ($colon$colon!72 e!55918 (ite c!13930 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))) (Cons!1515 (ite c!13930 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) e!55918))))

(assert (=> bm!8155 d!22979))

(declare-fun lt!41383 () Bool)

(declare-fun d!22981 () Bool)

(assert (=> d!22981 (= lt!41383 (select (content!89 (toList!746 lt!40990)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun e!56721 () Bool)

(assert (=> d!22981 (= lt!41383 e!56721)))

(declare-fun res!44719 () Bool)

(assert (=> d!22981 (=> (not res!44719) (not e!56721))))

(assert (=> d!22981 (= res!44719 ((_ is Cons!1515) (toList!746 lt!40990)))))

(assert (=> d!22981 (= (contains!754 (toList!746 lt!40990) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41383)))

(declare-fun b!87071 () Bool)

(declare-fun e!56722 () Bool)

(assert (=> b!87071 (= e!56721 e!56722)))

(declare-fun res!44720 () Bool)

(assert (=> b!87071 (=> res!44720 e!56722)))

(assert (=> b!87071 (= res!44720 (= (h!2106 (toList!746 lt!40990)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun b!87072 () Bool)

(assert (=> b!87072 (= e!56722 (contains!754 (t!5240 (toList!746 lt!40990)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!22981 res!44719) b!87071))

(assert (= (and b!87071 (not res!44720)) b!87072))

(declare-fun m!92669 () Bool)

(assert (=> d!22981 m!92669))

(declare-fun m!92671 () Bool)

(assert (=> d!22981 m!92671))

(declare-fun m!92673 () Bool)

(assert (=> b!87072 m!92673))

(assert (=> b!86221 d!22981))

(declare-fun d!22983 () Bool)

(declare-fun lt!41384 () Bool)

(assert (=> d!22983 (= lt!41384 (select (content!89 (toList!746 lt!40712)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!56723 () Bool)

(assert (=> d!22983 (= lt!41384 e!56723)))

(declare-fun res!44721 () Bool)

(assert (=> d!22983 (=> (not res!44721) (not e!56723))))

(assert (=> d!22983 (= res!44721 ((_ is Cons!1515) (toList!746 lt!40712)))))

(assert (=> d!22983 (= (contains!754 (toList!746 lt!40712) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41384)))

(declare-fun b!87073 () Bool)

(declare-fun e!56724 () Bool)

(assert (=> b!87073 (= e!56723 e!56724)))

(declare-fun res!44722 () Bool)

(assert (=> b!87073 (=> res!44722 e!56724)))

(assert (=> b!87073 (= res!44722 (= (h!2106 (toList!746 lt!40712)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!87074 () Bool)

(assert (=> b!87074 (= e!56724 (contains!754 (t!5240 (toList!746 lt!40712)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22983 res!44721) b!87073))

(assert (= (and b!87073 (not res!44722)) b!87074))

(declare-fun m!92675 () Bool)

(assert (=> d!22983 m!92675))

(declare-fun m!92677 () Bool)

(assert (=> d!22983 m!92677))

(declare-fun m!92679 () Bool)

(assert (=> b!87074 m!92679))

(assert (=> b!85882 d!22983))

(assert (=> b!85878 d!22761))

(assert (=> b!85878 d!22763))

(declare-fun d!22985 () Bool)

(declare-fun lt!41385 () Bool)

(assert (=> d!22985 (= lt!41385 (select (content!89 (toList!746 lt!40841)) (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun e!56725 () Bool)

(assert (=> d!22985 (= lt!41385 e!56725)))

(declare-fun res!44723 () Bool)

(assert (=> d!22985 (=> (not res!44723) (not e!56725))))

(assert (=> d!22985 (= res!44723 ((_ is Cons!1515) (toList!746 lt!40841)))))

(assert (=> d!22985 (= (contains!754 (toList!746 lt!40841) (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41385)))

(declare-fun b!87075 () Bool)

(declare-fun e!56726 () Bool)

(assert (=> b!87075 (= e!56725 e!56726)))

(declare-fun res!44724 () Bool)

(assert (=> b!87075 (=> res!44724 e!56726)))

(assert (=> b!87075 (= res!44724 (= (h!2106 (toList!746 lt!40841)) (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87076 () Bool)

(assert (=> b!87076 (= e!56726 (contains!754 (t!5240 (toList!746 lt!40841)) (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (= (and d!22985 res!44723) b!87075))

(assert (= (and b!87075 (not res!44724)) b!87076))

(declare-fun m!92681 () Bool)

(assert (=> d!22985 m!92681))

(declare-fun m!92683 () Bool)

(assert (=> d!22985 m!92683))

(declare-fun m!92685 () Bool)

(assert (=> b!87076 m!92685))

(assert (=> b!85996 d!22985))

(declare-fun d!22987 () Bool)

(assert (=> d!22987 (= (apply!82 lt!40661 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1198 (getValueByKey!140 (toList!746 lt!40661) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3695 () Bool)

(assert (= bs!3695 d!22987))

(assert (=> bs!3695 m!90363))

(assert (=> bs!3695 m!92103))

(assert (=> bs!3695 m!92103))

(declare-fun m!92687 () Bool)

(assert (=> bs!3695 m!92687))

(assert (=> b!85827 d!22987))

(declare-fun d!22989 () Bool)

(declare-fun c!14298 () Bool)

(assert (=> d!22989 (= c!14298 ((_ is ValueCellFull!924) (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000)))))

(declare-fun e!56727 () V!3027)

(assert (=> d!22989 (= (get!1195 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56727)))

(declare-fun b!87077 () Bool)

(assert (=> b!87077 (= e!56727 (get!1196 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87078 () Bool)

(assert (=> b!87078 (= e!56727 (get!1197 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22989 c!14298) b!87077))

(assert (= (and d!22989 (not c!14298)) b!87078))

(assert (=> b!87077 m!90377))

(assert (=> b!87077 m!90373))

(declare-fun m!92689 () Bool)

(assert (=> b!87077 m!92689))

(assert (=> b!87078 m!90377))

(assert (=> b!87078 m!90373))

(declare-fun m!92691 () Bool)

(assert (=> b!87078 m!92691))

(assert (=> b!85827 d!22989))

(declare-fun b!87079 () Bool)

(declare-fun e!56728 () Option!146)

(assert (=> b!87079 (= e!56728 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40886)))))))

(declare-fun c!14299 () Bool)

(declare-fun d!22991 () Bool)

(assert (=> d!22991 (= c!14299 (and ((_ is Cons!1515) (toList!746 lt!40886)) (= (_1!1110 (h!2106 (toList!746 lt!40886))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!22991 (= (getValueByKey!140 (toList!746 lt!40886) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56728)))

(declare-fun b!87082 () Bool)

(declare-fun e!56729 () Option!146)

(assert (=> b!87082 (= e!56729 None!144)))

(declare-fun b!87081 () Bool)

(assert (=> b!87081 (= e!56729 (getValueByKey!140 (t!5240 (toList!746 lt!40886)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87080 () Bool)

(assert (=> b!87080 (= e!56728 e!56729)))

(declare-fun c!14300 () Bool)

(assert (=> b!87080 (= c!14300 (and ((_ is Cons!1515) (toList!746 lt!40886)) (not (= (_1!1110 (h!2106 (toList!746 lt!40886))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!22991 c!14299) b!87079))

(assert (= (and d!22991 (not c!14299)) b!87080))

(assert (= (and b!87080 c!14300) b!87081))

(assert (= (and b!87080 (not c!14300)) b!87082))

(declare-fun m!92693 () Bool)

(assert (=> b!87081 m!92693))

(assert (=> b!86045 d!22991))

(declare-fun d!22993 () Bool)

(declare-fun res!44725 () Bool)

(declare-fun e!56730 () Bool)

(assert (=> d!22993 (=> res!44725 e!56730)))

(assert (=> d!22993 (= res!44725 (and ((_ is Cons!1515) lt!40595) (= (_1!1110 (h!2106 lt!40595)) (_1!1110 lt!40322))))))

(assert (=> d!22993 (= (containsKey!144 lt!40595 (_1!1110 lt!40322)) e!56730)))

(declare-fun b!87083 () Bool)

(declare-fun e!56731 () Bool)

(assert (=> b!87083 (= e!56730 e!56731)))

(declare-fun res!44726 () Bool)

(assert (=> b!87083 (=> (not res!44726) (not e!56731))))

(assert (=> b!87083 (= res!44726 (and (or (not ((_ is Cons!1515) lt!40595)) (bvsle (_1!1110 (h!2106 lt!40595)) (_1!1110 lt!40322))) ((_ is Cons!1515) lt!40595) (bvslt (_1!1110 (h!2106 lt!40595)) (_1!1110 lt!40322))))))

(declare-fun b!87084 () Bool)

(assert (=> b!87084 (= e!56731 (containsKey!144 (t!5240 lt!40595) (_1!1110 lt!40322)))))

(assert (= (and d!22993 (not res!44725)) b!87083))

(assert (= (and b!87083 res!44726) b!87084))

(declare-fun m!92695 () Bool)

(assert (=> b!87084 m!92695))

(assert (=> b!86125 d!22993))

(declare-fun d!22995 () Bool)

(declare-fun res!44727 () Bool)

(declare-fun e!56732 () Bool)

(assert (=> d!22995 (=> res!44727 e!56732)))

(assert (=> d!22995 (= res!44727 (and ((_ is Cons!1515) (toList!746 lt!40584)) (= (_1!1110 (h!2106 (toList!746 lt!40584))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22995 (= (containsKey!144 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56732)))

(declare-fun b!87085 () Bool)

(declare-fun e!56733 () Bool)

(assert (=> b!87085 (= e!56732 e!56733)))

(declare-fun res!44728 () Bool)

(assert (=> b!87085 (=> (not res!44728) (not e!56733))))

(assert (=> b!87085 (= res!44728 (and (or (not ((_ is Cons!1515) (toList!746 lt!40584))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40584))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1515) (toList!746 lt!40584)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40584))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!87086 () Bool)

(assert (=> b!87086 (= e!56733 (containsKey!144 (t!5240 (toList!746 lt!40584)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22995 (not res!44727)) b!87085))

(assert (= (and b!87085 res!44728) b!87086))

(assert (=> b!87086 m!89983))

(declare-fun m!92697 () Bool)

(assert (=> b!87086 m!92697))

(assert (=> d!22407 d!22995))

(declare-fun b!87087 () Bool)

(declare-fun e!56734 () Option!146)

(assert (=> b!87087 (= e!56734 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40564))))))))

(declare-fun d!22997 () Bool)

(declare-fun c!14301 () Bool)

(assert (=> d!22997 (= c!14301 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40564))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40564)))) (_1!1110 lt!40318))))))

(assert (=> d!22997 (= (getValueByKey!140 (t!5240 (toList!746 lt!40564)) (_1!1110 lt!40318)) e!56734)))

(declare-fun b!87090 () Bool)

(declare-fun e!56735 () Option!146)

(assert (=> b!87090 (= e!56735 None!144)))

(declare-fun b!87089 () Bool)

(assert (=> b!87089 (= e!56735 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40564))) (_1!1110 lt!40318)))))

(declare-fun b!87088 () Bool)

(assert (=> b!87088 (= e!56734 e!56735)))

(declare-fun c!14302 () Bool)

(assert (=> b!87088 (= c!14302 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40564))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40564)))) (_1!1110 lt!40318)))))))

(assert (= (and d!22997 c!14301) b!87087))

(assert (= (and d!22997 (not c!14301)) b!87088))

(assert (= (and b!87088 c!14302) b!87089))

(assert (= (and b!87088 (not c!14302)) b!87090))

(declare-fun m!92699 () Bool)

(assert (=> b!87089 m!92699))

(assert (=> b!85850 d!22997))

(declare-fun d!22999 () Bool)

(declare-fun lt!41390 () SeekEntryResult!243)

(assert (=> d!22999 (and (or ((_ is Undefined!243) lt!41390) (not ((_ is Found!243) lt!41390)) (and (bvsge (index!3110 lt!41390) #b00000000000000000000000000000000) (bvslt (index!3110 lt!41390) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!41390) ((_ is Found!243) lt!41390) (not ((_ is MissingVacant!243) lt!41390)) (not (= (index!3112 lt!41390) (index!3111 lt!40898))) (and (bvsge (index!3112 lt!41390) #b00000000000000000000000000000000) (bvslt (index!3112 lt!41390) (size!2163 (_keys!4010 newMap!16))))) (or ((_ is Undefined!243) lt!41390) (ite ((_ is Found!243) lt!41390) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!41390)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (and ((_ is MissingVacant!243) lt!41390) (= (index!3112 lt!41390) (index!3111 lt!40898)) (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3112 lt!41390)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!56744 () SeekEntryResult!243)

(assert (=> d!22999 (= lt!41390 e!56744)))

(declare-fun c!14309 () Bool)

(assert (=> d!22999 (= c!14309 (bvsge (x!11996 lt!40898) #b01111111111111111111111111111110))))

(declare-fun lt!41391 () (_ BitVec 64))

(assert (=> d!22999 (= lt!41391 (select (arr!1919 (_keys!4010 newMap!16)) (index!3111 lt!40898)))))

(assert (=> d!22999 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!22999 (= (seekKeyOrZeroReturnVacant!0 (x!11996 lt!40898) (index!3111 lt!40898) (index!3111 lt!40898) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!41390)))

(declare-fun b!87103 () Bool)

(assert (=> b!87103 (= e!56744 Undefined!243)))

(declare-fun b!87104 () Bool)

(declare-fun c!14310 () Bool)

(assert (=> b!87104 (= c!14310 (= lt!41391 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56743 () SeekEntryResult!243)

(declare-fun e!56742 () SeekEntryResult!243)

(assert (=> b!87104 (= e!56743 e!56742)))

(declare-fun b!87105 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!87105 (= e!56742 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11996 lt!40898) #b00000000000000000000000000000001) (nextIndex!0 (index!3111 lt!40898) (x!11996 lt!40898) (mask!6366 newMap!16)) (index!3111 lt!40898) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!87106 () Bool)

(assert (=> b!87106 (= e!56743 (Found!243 (index!3111 lt!40898)))))

(declare-fun b!87107 () Bool)

(assert (=> b!87107 (= e!56742 (MissingVacant!243 (index!3111 lt!40898)))))

(declare-fun b!87108 () Bool)

(assert (=> b!87108 (= e!56744 e!56743)))

(declare-fun c!14311 () Bool)

(assert (=> b!87108 (= c!14311 (= lt!41391 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!22999 c!14309) b!87103))

(assert (= (and d!22999 (not c!14309)) b!87108))

(assert (= (and b!87108 c!14311) b!87106))

(assert (= (and b!87108 (not c!14311)) b!87104))

(assert (= (and b!87104 c!14310) b!87107))

(assert (= (and b!87104 (not c!14310)) b!87105))

(declare-fun m!92701 () Bool)

(assert (=> d!22999 m!92701))

(declare-fun m!92703 () Bool)

(assert (=> d!22999 m!92703))

(assert (=> d!22999 m!90877))

(assert (=> d!22999 m!90385))

(declare-fun m!92705 () Bool)

(assert (=> b!87105 m!92705))

(assert (=> b!87105 m!92705))

(assert (=> b!87105 m!89857))

(declare-fun m!92707 () Bool)

(assert (=> b!87105 m!92707))

(assert (=> b!86066 d!22999))

(declare-fun b!87109 () Bool)

(declare-fun e!56745 () Option!146)

(assert (=> b!87109 (= e!56745 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40560))))))))

(declare-fun d!23001 () Bool)

(declare-fun c!14312 () Bool)

(assert (=> d!23001 (= c!14312 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40560))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40560)))) (_1!1110 lt!40324))))))

(assert (=> d!23001 (= (getValueByKey!140 (t!5240 (toList!746 lt!40560)) (_1!1110 lt!40324)) e!56745)))

(declare-fun b!87112 () Bool)

(declare-fun e!56746 () Option!146)

(assert (=> b!87112 (= e!56746 None!144)))

(declare-fun b!87111 () Bool)

(assert (=> b!87111 (= e!56746 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40560))) (_1!1110 lt!40324)))))

(declare-fun b!87110 () Bool)

(assert (=> b!87110 (= e!56745 e!56746)))

(declare-fun c!14313 () Bool)

(assert (=> b!87110 (= c!14313 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40560))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40560)))) (_1!1110 lt!40324)))))))

(assert (= (and d!23001 c!14312) b!87109))

(assert (= (and d!23001 (not c!14312)) b!87110))

(assert (= (and b!87110 c!14313) b!87111))

(assert (= (and b!87110 (not c!14313)) b!87112))

(declare-fun m!92709 () Bool)

(assert (=> b!87111 m!92709))

(assert (=> b!85874 d!23001))

(declare-fun d!23003 () Bool)

(declare-fun res!44729 () Bool)

(declare-fun e!56747 () Bool)

(assert (=> d!23003 (=> res!44729 e!56747)))

(assert (=> d!23003 (= res!44729 (or ((_ is Nil!1516) lt!40979) ((_ is Nil!1516) (t!5240 lt!40979))))))

(assert (=> d!23003 (= (isStrictlySorted!298 lt!40979) e!56747)))

(declare-fun b!87113 () Bool)

(declare-fun e!56748 () Bool)

(assert (=> b!87113 (= e!56747 e!56748)))

(declare-fun res!44730 () Bool)

(assert (=> b!87113 (=> (not res!44730) (not e!56748))))

(assert (=> b!87113 (= res!44730 (bvslt (_1!1110 (h!2106 lt!40979)) (_1!1110 (h!2106 (t!5240 lt!40979)))))))

(declare-fun b!87114 () Bool)

(assert (=> b!87114 (= e!56748 (isStrictlySorted!298 (t!5240 lt!40979)))))

(assert (= (and d!23003 (not res!44729)) b!87113))

(assert (= (and b!87113 res!44730) b!87114))

(declare-fun m!92711 () Bool)

(assert (=> b!87114 m!92711))

(assert (=> d!22405 d!23003))

(declare-fun d!23005 () Bool)

(declare-fun res!44731 () Bool)

(declare-fun e!56749 () Bool)

(assert (=> d!23005 (=> res!44731 e!56749)))

(assert (=> d!23005 (= res!44731 (or ((_ is Nil!1516) (toList!746 (+!110 lt!40331 lt!40322))) ((_ is Nil!1516) (t!5240 (toList!746 (+!110 lt!40331 lt!40322))))))))

(assert (=> d!23005 (= (isStrictlySorted!298 (toList!746 (+!110 lt!40331 lt!40322))) e!56749)))

(declare-fun b!87115 () Bool)

(declare-fun e!56750 () Bool)

(assert (=> b!87115 (= e!56749 e!56750)))

(declare-fun res!44732 () Bool)

(assert (=> b!87115 (=> (not res!44732) (not e!56750))))

(assert (=> b!87115 (= res!44732 (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40331 lt!40322)))) (_1!1110 (h!2106 (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))))))))

(declare-fun b!87116 () Bool)

(assert (=> b!87116 (= e!56750 (isStrictlySorted!298 (t!5240 (toList!746 (+!110 lt!40331 lt!40322)))))))

(assert (= (and d!23005 (not res!44731)) b!87115))

(assert (= (and b!87115 res!44732) b!87116))

(assert (=> b!87116 m!92453))

(assert (=> d!22405 d!23005))

(assert (=> b!85847 d!22835))

(assert (=> b!85847 d!22837))

(declare-fun d!23007 () Bool)

(declare-fun lt!41392 () Bool)

(assert (=> d!23007 (= lt!41392 (select (content!90 (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56752 () Bool)

(assert (=> d!23007 (= lt!41392 e!56752)))

(declare-fun res!44734 () Bool)

(assert (=> d!23007 (=> (not res!44734) (not e!56752))))

(assert (=> d!23007 (= res!44734 ((_ is Cons!1516) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)))))

(assert (=> d!23007 (= (contains!755 (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!41392)))

(declare-fun b!87117 () Bool)

(declare-fun e!56751 () Bool)

(assert (=> b!87117 (= e!56752 e!56751)))

(declare-fun res!44733 () Bool)

(assert (=> b!87117 (=> res!44733 e!56751)))

(assert (=> b!87117 (= res!44733 (= (h!2107 (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!87118 () Bool)

(assert (=> b!87118 (= e!56751 (contains!755 (t!5241 (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!23007 res!44734) b!87117))

(assert (= (and b!87117 (not res!44733)) b!87118))

(declare-fun m!92713 () Bool)

(assert (=> d!23007 m!92713))

(assert (=> d!23007 m!90691))

(declare-fun m!92715 () Bool)

(assert (=> d!23007 m!92715))

(assert (=> b!87118 m!90691))

(declare-fun m!92717 () Bool)

(assert (=> b!87118 m!92717))

(assert (=> b!85973 d!23007))

(declare-fun d!23009 () Bool)

(declare-fun res!44735 () Bool)

(declare-fun e!56753 () Bool)

(assert (=> d!23009 (=> res!44735 e!56753)))

(assert (=> d!23009 (= res!44735 (and ((_ is Cons!1515) (toList!746 lt!40560)) (= (_1!1110 (h!2106 (toList!746 lt!40560))) (_1!1110 lt!40324))))))

(assert (=> d!23009 (= (containsKey!144 (toList!746 lt!40560) (_1!1110 lt!40324)) e!56753)))

(declare-fun b!87119 () Bool)

(declare-fun e!56754 () Bool)

(assert (=> b!87119 (= e!56753 e!56754)))

(declare-fun res!44736 () Bool)

(assert (=> b!87119 (=> (not res!44736) (not e!56754))))

(assert (=> b!87119 (= res!44736 (and (or (not ((_ is Cons!1515) (toList!746 lt!40560))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40560))) (_1!1110 lt!40324))) ((_ is Cons!1515) (toList!746 lt!40560)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40560))) (_1!1110 lt!40324))))))

(declare-fun b!87120 () Bool)

(assert (=> b!87120 (= e!56754 (containsKey!144 (t!5240 (toList!746 lt!40560)) (_1!1110 lt!40324)))))

(assert (= (and d!23009 (not res!44735)) b!87119))

(assert (= (and b!87119 res!44736) b!87120))

(declare-fun m!92719 () Bool)

(assert (=> b!87120 m!92719))

(assert (=> d!22195 d!23009))

(declare-fun b!87121 () Bool)

(declare-fun e!56755 () Option!146)

(assert (=> b!87121 (= e!56755 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40604))))))))

(declare-fun d!23011 () Bool)

(declare-fun c!14314 () Bool)

(assert (=> d!23011 (= c!14314 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40604))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40604)))) (_1!1110 lt!40318))))))

(assert (=> d!23011 (= (getValueByKey!140 (t!5240 (toList!746 lt!40604)) (_1!1110 lt!40318)) e!56755)))

(declare-fun b!87124 () Bool)

(declare-fun e!56756 () Option!146)

(assert (=> b!87124 (= e!56756 None!144)))

(declare-fun b!87123 () Bool)

(assert (=> b!87123 (= e!56756 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40604))) (_1!1110 lt!40318)))))

(declare-fun b!87122 () Bool)

(assert (=> b!87122 (= e!56755 e!56756)))

(declare-fun c!14315 () Bool)

(assert (=> b!87122 (= c!14315 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40604))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40604)))) (_1!1110 lt!40318)))))))

(assert (= (and d!23011 c!14314) b!87121))

(assert (= (and d!23011 (not c!14314)) b!87122))

(assert (= (and b!87122 c!14315) b!87123))

(assert (= (and b!87122 (not c!14315)) b!87124))

(declare-fun m!92721 () Bool)

(assert (=> b!87123 m!92721))

(assert (=> b!86034 d!23011))

(assert (=> b!86140 d!22573))

(assert (=> b!86044 d!22841))

(assert (=> b!86044 d!22663))

(declare-fun d!23013 () Bool)

(assert (=> d!23013 (= (apply!82 lt!40661 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40661) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3696 () Bool)

(assert (= bs!3696 d!23013))

(assert (=> bs!3696 m!92369))

(assert (=> bs!3696 m!92369))

(declare-fun m!92723 () Bool)

(assert (=> bs!3696 m!92723))

(assert (=> b!85831 d!23013))

(assert (=> b!86094 d!22857))

(assert (=> b!86094 d!22859))

(declare-fun d!23015 () Bool)

(declare-fun res!44737 () Bool)

(declare-fun e!56757 () Bool)

(assert (=> d!23015 (=> res!44737 e!56757)))

(assert (=> d!23015 (= res!44737 (or ((_ is Nil!1516) lt!40641) ((_ is Nil!1516) (t!5240 lt!40641))))))

(assert (=> d!23015 (= (isStrictlySorted!298 lt!40641) e!56757)))

(declare-fun b!87125 () Bool)

(declare-fun e!56758 () Bool)

(assert (=> b!87125 (= e!56757 e!56758)))

(declare-fun res!44738 () Bool)

(assert (=> b!87125 (=> (not res!44738) (not e!56758))))

(assert (=> b!87125 (= res!44738 (bvslt (_1!1110 (h!2106 lt!40641)) (_1!1110 (h!2106 (t!5240 lt!40641)))))))

(declare-fun b!87126 () Bool)

(assert (=> b!87126 (= e!56758 (isStrictlySorted!298 (t!5240 lt!40641)))))

(assert (= (and d!23015 (not res!44737)) b!87125))

(assert (= (and b!87125 res!44738) b!87126))

(declare-fun m!92725 () Bool)

(assert (=> b!87126 m!92725))

(assert (=> d!22221 d!23015))

(declare-fun d!23017 () Bool)

(declare-fun res!44739 () Bool)

(declare-fun e!56759 () Bool)

(assert (=> d!23017 (=> res!44739 e!56759)))

(assert (=> d!23017 (= res!44739 (or ((_ is Nil!1516) (toList!746 lt!40325)) ((_ is Nil!1516) (t!5240 (toList!746 lt!40325)))))))

(assert (=> d!23017 (= (isStrictlySorted!298 (toList!746 lt!40325)) e!56759)))

(declare-fun b!87127 () Bool)

(declare-fun e!56760 () Bool)

(assert (=> b!87127 (= e!56759 e!56760)))

(declare-fun res!44740 () Bool)

(assert (=> b!87127 (=> (not res!44740) (not e!56760))))

(assert (=> b!87127 (= res!44740 (bvslt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (h!2106 (t!5240 (toList!746 lt!40325))))))))

(declare-fun b!87128 () Bool)

(assert (=> b!87128 (= e!56760 (isStrictlySorted!298 (t!5240 (toList!746 lt!40325))))))

(assert (= (and d!23017 (not res!44739)) b!87127))

(assert (= (and b!87127 res!44740) b!87128))

(assert (=> b!87128 m!92403))

(assert (=> d!22221 d!23017))

(assert (=> b!86031 d!22867))

(assert (=> b!86031 d!22869))

(declare-fun d!23019 () Bool)

(assert (=> d!23019 (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41393 () Unit!2517)

(assert (=> d!23019 (= lt!41393 (choose!504 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56761 () Bool)

(assert (=> d!23019 e!56761))

(declare-fun res!44741 () Bool)

(assert (=> d!23019 (=> (not res!44741) (not e!56761))))

(assert (=> d!23019 (= res!44741 (isStrictlySorted!298 (toList!746 lt!40450)))))

(assert (=> d!23019 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41393)))

(declare-fun b!87129 () Bool)

(assert (=> b!87129 (= e!56761 (containsKey!144 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23019 res!44741) b!87129))

(assert (=> d!23019 m!90613))

(assert (=> d!23019 m!90613))

(assert (=> d!23019 m!90615))

(declare-fun m!92727 () Bool)

(assert (=> d!23019 m!92727))

(assert (=> d!23019 m!92333))

(assert (=> b!87129 m!90609))

(assert (=> b!85906 d!23019))

(declare-fun d!23021 () Bool)

(assert (=> d!23021 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3697 () Bool)

(assert (= bs!3697 d!23021))

(assert (=> bs!3697 m!90613))

(declare-fun m!92729 () Bool)

(assert (=> bs!3697 m!92729))

(assert (=> b!85906 d!23021))

(declare-fun b!87130 () Bool)

(declare-fun e!56762 () Option!146)

(assert (=> b!87130 (= e!56762 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40450)))))))

(declare-fun d!23023 () Bool)

(declare-fun c!14316 () Bool)

(assert (=> d!23023 (= c!14316 (and ((_ is Cons!1515) (toList!746 lt!40450)) (= (_1!1110 (h!2106 (toList!746 lt!40450))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23023 (= (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000) e!56762)))

(declare-fun b!87133 () Bool)

(declare-fun e!56763 () Option!146)

(assert (=> b!87133 (= e!56763 None!144)))

(declare-fun b!87132 () Bool)

(assert (=> b!87132 (= e!56763 (getValueByKey!140 (t!5240 (toList!746 lt!40450)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87131 () Bool)

(assert (=> b!87131 (= e!56762 e!56763)))

(declare-fun c!14317 () Bool)

(assert (=> b!87131 (= c!14317 (and ((_ is Cons!1515) (toList!746 lt!40450)) (not (= (_1!1110 (h!2106 (toList!746 lt!40450))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!23023 c!14316) b!87130))

(assert (= (and d!23023 (not c!14316)) b!87131))

(assert (= (and b!87131 c!14317) b!87132))

(assert (= (and b!87131 (not c!14317)) b!87133))

(declare-fun m!92731 () Bool)

(assert (=> b!87132 m!92731))

(assert (=> b!85906 d!23023))

(declare-fun d!23025 () Bool)

(declare-fun res!44742 () Bool)

(declare-fun e!56764 () Bool)

(assert (=> d!23025 (=> res!44742 e!56764)))

(assert (=> d!23025 (= res!44742 (or ((_ is Nil!1516) lt!40930) ((_ is Nil!1516) (t!5240 lt!40930))))))

(assert (=> d!23025 (= (isStrictlySorted!298 lt!40930) e!56764)))

(declare-fun b!87134 () Bool)

(declare-fun e!56765 () Bool)

(assert (=> b!87134 (= e!56764 e!56765)))

(declare-fun res!44743 () Bool)

(assert (=> b!87134 (=> (not res!44743) (not e!56765))))

(assert (=> b!87134 (= res!44743 (bvslt (_1!1110 (h!2106 lt!40930)) (_1!1110 (h!2106 (t!5240 lt!40930)))))))

(declare-fun b!87135 () Bool)

(assert (=> b!87135 (= e!56765 (isStrictlySorted!298 (t!5240 lt!40930)))))

(assert (= (and d!23025 (not res!44742)) b!87134))

(assert (= (and b!87134 res!44743) b!87135))

(declare-fun m!92733 () Bool)

(assert (=> b!87135 m!92733))

(assert (=> d!22353 d!23025))

(assert (=> d!22353 d!23017))

(assert (=> d!22223 d!22445))

(declare-fun d!23027 () Bool)

(assert (=> d!23027 (= ($colon$colon!72 e!55952 (ite c!13948 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324)))) (Cons!1515 (ite c!13948 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))) e!55952))))

(assert (=> bm!8161 d!23027))

(declare-fun b!87136 () Bool)

(declare-fun e!56768 () Bool)

(declare-fun call!8321 () Bool)

(assert (=> b!87136 (= e!56768 call!8321)))

(declare-fun b!87137 () Bool)

(declare-fun e!56766 () Bool)

(assert (=> b!87137 (= e!56768 e!56766)))

(declare-fun lt!41396 () (_ BitVec 64))

(assert (=> b!87137 (= lt!41396 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!41395 () Unit!2517)

(assert (=> b!87137 (= lt!41395 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) lt!41396 #b00000000000000000000000000000000))))

(assert (=> b!87137 (arrayContainsKey!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) lt!41396 #b00000000000000000000000000000000)))

(declare-fun lt!41394 () Unit!2517)

(assert (=> b!87137 (= lt!41394 lt!41395)))

(declare-fun res!44744 () Bool)

(assert (=> b!87137 (= res!44744 (= (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000) (_keys!4010 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992)))) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!87137 (=> (not res!44744) (not e!56766))))

(declare-fun b!87138 () Bool)

(assert (=> b!87138 (= e!56766 call!8321)))

(declare-fun d!23029 () Bool)

(declare-fun res!44745 () Bool)

(declare-fun e!56767 () Bool)

(assert (=> d!23029 (=> res!44745 e!56767)))

(assert (=> d!23029 (= res!44745 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!23029 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992)))) e!56767)))

(declare-fun bm!8318 () Bool)

(assert (=> bm!8318 (= call!8321 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 (v!2645 (underlying!289 thiss!992))) (mask!6366 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun b!87139 () Bool)

(assert (=> b!87139 (= e!56767 e!56768)))

(declare-fun c!14318 () Bool)

(assert (=> b!87139 (= c!14318 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!23029 (not res!44745)) b!87139))

(assert (= (and b!87139 c!14318) b!87137))

(assert (= (and b!87139 (not c!14318)) b!87136))

(assert (= (and b!87137 res!44744) b!87138))

(assert (= (or b!87138 b!87136) bm!8318))

(assert (=> b!87137 m!92169))

(declare-fun m!92735 () Bool)

(assert (=> b!87137 m!92735))

(declare-fun m!92737 () Bool)

(assert (=> b!87137 m!92737))

(assert (=> b!87137 m!92169))

(declare-fun m!92739 () Bool)

(assert (=> b!87137 m!92739))

(declare-fun m!92741 () Bool)

(assert (=> bm!8318 m!92741))

(assert (=> b!87139 m!92169))

(assert (=> b!87139 m!92169))

(assert (=> b!87139 m!92171))

(assert (=> b!85836 d!23029))

(declare-fun d!23031 () Bool)

(assert (=> d!23031 (= (get!1198 (getValueByKey!140 (toList!746 lt!40441) lt!40439)) (v!2649 (getValueByKey!140 (toList!746 lt!40441) lt!40439)))))

(assert (=> d!22365 d!23031))

(declare-fun b!87140 () Bool)

(declare-fun e!56769 () Option!146)

(assert (=> b!87140 (= e!56769 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40441)))))))

(declare-fun d!23033 () Bool)

(declare-fun c!14319 () Bool)

(assert (=> d!23033 (= c!14319 (and ((_ is Cons!1515) (toList!746 lt!40441)) (= (_1!1110 (h!2106 (toList!746 lt!40441))) lt!40439)))))

(assert (=> d!23033 (= (getValueByKey!140 (toList!746 lt!40441) lt!40439) e!56769)))

(declare-fun b!87143 () Bool)

(declare-fun e!56770 () Option!146)

(assert (=> b!87143 (= e!56770 None!144)))

(declare-fun b!87142 () Bool)

(assert (=> b!87142 (= e!56770 (getValueByKey!140 (t!5240 (toList!746 lt!40441)) lt!40439))))

(declare-fun b!87141 () Bool)

(assert (=> b!87141 (= e!56769 e!56770)))

(declare-fun c!14320 () Bool)

(assert (=> b!87141 (= c!14320 (and ((_ is Cons!1515) (toList!746 lt!40441)) (not (= (_1!1110 (h!2106 (toList!746 lt!40441))) lt!40439))))))

(assert (= (and d!23033 c!14319) b!87140))

(assert (= (and d!23033 (not c!14319)) b!87141))

(assert (= (and b!87141 c!14320) b!87142))

(assert (= (and b!87141 (not c!14320)) b!87143))

(declare-fun m!92743 () Bool)

(assert (=> b!87142 m!92743))

(assert (=> d!22365 d!23033))

(declare-fun d!23035 () Bool)

(assert (=> d!23035 (= (isEmpty!335 lt!40695) (isEmpty!336 (toList!746 lt!40695)))))

(declare-fun bs!3698 () Bool)

(assert (= bs!3698 d!23035))

(declare-fun m!92745 () Bool)

(assert (=> bs!3698 m!92745))

(assert (=> b!85866 d!23035))

(declare-fun d!23037 () Bool)

(assert (=> d!23037 (= ($colon$colon!72 e!56135 (ite c!14023 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))) (Cons!1515 (ite c!14023 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) e!56135))))

(assert (=> bm!8202 d!23037))

(declare-fun d!23039 () Bool)

(declare-fun lt!41397 () Bool)

(assert (=> d!23039 (= lt!41397 (select (content!89 lt!40603) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun e!56771 () Bool)

(assert (=> d!23039 (= lt!41397 e!56771)))

(declare-fun res!44746 () Bool)

(assert (=> d!23039 (=> (not res!44746) (not e!56771))))

(assert (=> d!23039 (= res!44746 ((_ is Cons!1515) lt!40603))))

(assert (=> d!23039 (= (contains!754 lt!40603 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) lt!41397)))

(declare-fun b!87144 () Bool)

(declare-fun e!56772 () Bool)

(assert (=> b!87144 (= e!56771 e!56772)))

(declare-fun res!44747 () Bool)

(assert (=> b!87144 (=> res!44747 e!56772)))

(assert (=> b!87144 (= res!44747 (= (h!2106 lt!40603) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun b!87145 () Bool)

(assert (=> b!87145 (= e!56772 (contains!754 (t!5240 lt!40603) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!23039 res!44746) b!87144))

(assert (= (and b!87144 (not res!44747)) b!87145))

(declare-fun m!92747 () Bool)

(assert (=> d!23039 m!92747))

(declare-fun m!92749 () Bool)

(assert (=> d!23039 m!92749))

(declare-fun m!92751 () Bool)

(assert (=> b!87145 m!92751))

(assert (=> b!86204 d!23039))

(declare-fun b!87146 () Bool)

(declare-fun e!56773 () Option!146)

(assert (=> b!87146 (= e!56773 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40595)))))))

(declare-fun d!23041 () Bool)

(declare-fun c!14321 () Bool)

(assert (=> d!23041 (= c!14321 (and ((_ is Cons!1515) (t!5240 lt!40595)) (= (_1!1110 (h!2106 (t!5240 lt!40595))) (_1!1110 lt!40322))))))

(assert (=> d!23041 (= (getValueByKey!140 (t!5240 lt!40595) (_1!1110 lt!40322)) e!56773)))

(declare-fun b!87149 () Bool)

(declare-fun e!56774 () Option!146)

(assert (=> b!87149 (= e!56774 None!144)))

(declare-fun b!87148 () Bool)

(assert (=> b!87148 (= e!56774 (getValueByKey!140 (t!5240 (t!5240 lt!40595)) (_1!1110 lt!40322)))))

(declare-fun b!87147 () Bool)

(assert (=> b!87147 (= e!56773 e!56774)))

(declare-fun c!14322 () Bool)

(assert (=> b!87147 (= c!14322 (and ((_ is Cons!1515) (t!5240 lt!40595)) (not (= (_1!1110 (h!2106 (t!5240 lt!40595))) (_1!1110 lt!40322)))))))

(assert (= (and d!23041 c!14321) b!87146))

(assert (= (and d!23041 (not c!14321)) b!87147))

(assert (= (and b!87147 c!14322) b!87148))

(assert (= (and b!87147 (not c!14322)) b!87149))

(declare-fun m!92753 () Bool)

(assert (=> b!87148 m!92753))

(assert (=> b!86123 d!23041))

(declare-fun d!23043 () Bool)

(declare-fun c!14323 () Bool)

(assert (=> d!23043 (= c!14323 ((_ is Nil!1516) (toList!746 lt!40596)))))

(declare-fun e!56775 () (InoxSet tuple2!2198))

(assert (=> d!23043 (= (content!89 (toList!746 lt!40596)) e!56775)))

(declare-fun b!87150 () Bool)

(assert (=> b!87150 (= e!56775 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!87151 () Bool)

(assert (=> b!87151 (= e!56775 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40596)) true) (content!89 (t!5240 (toList!746 lt!40596)))))))

(assert (= (and d!23043 c!14323) b!87150))

(assert (= (and d!23043 (not c!14323)) b!87151))

(declare-fun m!92755 () Bool)

(assert (=> b!87151 m!92755))

(assert (=> b!87151 m!92299))

(assert (=> d!22311 d!23043))

(declare-fun d!23045 () Bool)

(declare-fun lt!41398 () Bool)

(assert (=> d!23045 (= lt!41398 (select (content!89 lt!40634) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun e!56776 () Bool)

(assert (=> d!23045 (= lt!41398 e!56776)))

(declare-fun res!44748 () Bool)

(assert (=> d!23045 (=> (not res!44748) (not e!56776))))

(assert (=> d!23045 (= res!44748 ((_ is Cons!1515) lt!40634))))

(assert (=> d!23045 (= (contains!754 lt!40634 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))) lt!41398)))

(declare-fun b!87152 () Bool)

(declare-fun e!56777 () Bool)

(assert (=> b!87152 (= e!56776 e!56777)))

(declare-fun res!44749 () Bool)

(assert (=> b!87152 (=> res!44749 e!56777)))

(assert (=> b!87152 (= res!44749 (= (h!2106 lt!40634) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun b!87153 () Bool)

(assert (=> b!87153 (= e!56777 (contains!754 (t!5240 lt!40634) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!23045 res!44748) b!87152))

(assert (= (and b!87152 (not res!44749)) b!87153))

(declare-fun m!92757 () Bool)

(assert (=> d!23045 m!92757))

(declare-fun m!92759 () Bool)

(assert (=> d!23045 m!92759))

(declare-fun m!92761 () Bool)

(assert (=> b!87153 m!92761))

(assert (=> b!85779 d!23045))

(declare-fun b!87154 () Bool)

(declare-fun e!56778 () Option!146)

(assert (=> b!87154 (= e!56778 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40712)))))))

(declare-fun d!23047 () Bool)

(declare-fun c!14324 () Bool)

(assert (=> d!23047 (= c!14324 (and ((_ is Cons!1515) (toList!746 lt!40712)) (= (_1!1110 (h!2106 (toList!746 lt!40712))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!23047 (= (getValueByKey!140 (toList!746 lt!40712) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56778)))

(declare-fun b!87157 () Bool)

(declare-fun e!56779 () Option!146)

(assert (=> b!87157 (= e!56779 None!144)))

(declare-fun b!87156 () Bool)

(assert (=> b!87156 (= e!56779 (getValueByKey!140 (t!5240 (toList!746 lt!40712)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87155 () Bool)

(assert (=> b!87155 (= e!56778 e!56779)))

(declare-fun c!14325 () Bool)

(assert (=> b!87155 (= c!14325 (and ((_ is Cons!1515) (toList!746 lt!40712)) (not (= (_1!1110 (h!2106 (toList!746 lt!40712))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!23047 c!14324) b!87154))

(assert (= (and d!23047 (not c!14324)) b!87155))

(assert (= (and b!87155 c!14325) b!87156))

(assert (= (and b!87155 (not c!14325)) b!87157))

(declare-fun m!92763 () Bool)

(assert (=> b!87156 m!92763))

(assert (=> b!85881 d!23047))

(assert (=> b!86194 d!22573))

(declare-fun b!87158 () Bool)

(declare-fun e!56780 () Option!146)

(assert (=> b!87158 (= e!56780 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40990)))))))

(declare-fun d!23049 () Bool)

(declare-fun c!14326 () Bool)

(assert (=> d!23049 (= c!14326 (and ((_ is Cons!1515) (toList!746 lt!40990)) (= (_1!1110 (h!2106 (toList!746 lt!40990))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23049 (= (getValueByKey!140 (toList!746 lt!40990) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56780)))

(declare-fun b!87161 () Bool)

(declare-fun e!56781 () Option!146)

(assert (=> b!87161 (= e!56781 None!144)))

(declare-fun b!87160 () Bool)

(assert (=> b!87160 (= e!56781 (getValueByKey!140 (t!5240 (toList!746 lt!40990)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87159 () Bool)

(assert (=> b!87159 (= e!56780 e!56781)))

(declare-fun c!14327 () Bool)

(assert (=> b!87159 (= c!14327 (and ((_ is Cons!1515) (toList!746 lt!40990)) (not (= (_1!1110 (h!2106 (toList!746 lt!40990))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23049 c!14326) b!87158))

(assert (= (and d!23049 (not c!14326)) b!87159))

(assert (= (and b!87159 c!14327) b!87160))

(assert (= (and b!87159 (not c!14327)) b!87161))

(declare-fun m!92765 () Bool)

(assert (=> b!87160 m!92765))

(assert (=> b!86220 d!23049))

(declare-fun d!23051 () Bool)

(assert (=> d!23051 (= (get!1198 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2649 (getValueByKey!140 (toList!746 lt!40450) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22207 d!23051))

(assert (=> d!22207 d!22859))

(assert (=> b!85899 d!22971))

(declare-fun d!23053 () Bool)

(declare-fun e!56783 () Bool)

(assert (=> d!23053 e!56783))

(declare-fun res!44750 () Bool)

(assert (=> d!23053 (=> res!44750 e!56783)))

(declare-fun lt!41399 () Bool)

(assert (=> d!23053 (= res!44750 (not lt!41399))))

(declare-fun lt!41400 () Bool)

(assert (=> d!23053 (= lt!41399 lt!41400)))

(declare-fun lt!41402 () Unit!2517)

(declare-fun e!56782 () Unit!2517)

(assert (=> d!23053 (= lt!41402 e!56782)))

(declare-fun c!14328 () Bool)

(assert (=> d!23053 (= c!14328 lt!41400)))

(assert (=> d!23053 (= lt!41400 (containsKey!144 (toList!746 lt!40998) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!23053 (= (contains!753 lt!40998 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41399)))

(declare-fun b!87162 () Bool)

(declare-fun lt!41401 () Unit!2517)

(assert (=> b!87162 (= e!56782 lt!41401)))

(assert (=> b!87162 (= lt!41401 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40998) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> b!87162 (isDefined!93 (getValueByKey!140 (toList!746 lt!40998) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87163 () Bool)

(declare-fun Unit!2581 () Unit!2517)

(assert (=> b!87163 (= e!56782 Unit!2581)))

(declare-fun b!87164 () Bool)

(assert (=> b!87164 (= e!56783 (isDefined!93 (getValueByKey!140 (toList!746 lt!40998) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23053 c!14328) b!87162))

(assert (= (and d!23053 (not c!14328)) b!87163))

(assert (= (and d!23053 (not res!44750)) b!87164))

(declare-fun m!92767 () Bool)

(assert (=> d!23053 m!92767))

(declare-fun m!92769 () Bool)

(assert (=> b!87162 m!92769))

(assert (=> b!87162 m!91185))

(assert (=> b!87162 m!91185))

(declare-fun m!92771 () Bool)

(assert (=> b!87162 m!92771))

(assert (=> b!87164 m!91185))

(assert (=> b!87164 m!91185))

(assert (=> b!87164 m!92771))

(assert (=> d!22419 d!23053))

(declare-fun b!87165 () Bool)

(declare-fun e!56784 () Option!146)

(assert (=> b!87165 (= e!56784 (Some!145 (_2!1110 (h!2106 lt!40997))))))

(declare-fun c!14329 () Bool)

(declare-fun d!23055 () Bool)

(assert (=> d!23055 (= c!14329 (and ((_ is Cons!1515) lt!40997) (= (_1!1110 (h!2106 lt!40997)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23055 (= (getValueByKey!140 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56784)))

(declare-fun b!87168 () Bool)

(declare-fun e!56785 () Option!146)

(assert (=> b!87168 (= e!56785 None!144)))

(declare-fun b!87167 () Bool)

(assert (=> b!87167 (= e!56785 (getValueByKey!140 (t!5240 lt!40997) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87166 () Bool)

(assert (=> b!87166 (= e!56784 e!56785)))

(declare-fun c!14330 () Bool)

(assert (=> b!87166 (= c!14330 (and ((_ is Cons!1515) lt!40997) (not (= (_1!1110 (h!2106 lt!40997)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23055 c!14329) b!87165))

(assert (= (and d!23055 (not c!14329)) b!87166))

(assert (= (and b!87166 c!14330) b!87167))

(assert (= (and b!87166 (not c!14330)) b!87168))

(declare-fun m!92773 () Bool)

(assert (=> b!87167 m!92773))

(assert (=> d!22419 d!23055))

(declare-fun d!23057 () Bool)

(assert (=> d!23057 (= (getValueByKey!140 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41403 () Unit!2517)

(assert (=> d!23057 (= lt!41403 (choose!500 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun e!56786 () Bool)

(assert (=> d!23057 e!56786))

(declare-fun res!44751 () Bool)

(assert (=> d!23057 (=> (not res!44751) (not e!56786))))

(assert (=> d!23057 (= res!44751 (isStrictlySorted!298 lt!40997))))

(assert (=> d!23057 (= (lemmaContainsTupThenGetReturnValue!57 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41403)))

(declare-fun b!87169 () Bool)

(declare-fun res!44752 () Bool)

(assert (=> b!87169 (=> (not res!44752) (not e!56786))))

(assert (=> b!87169 (= res!44752 (containsKey!144 lt!40997 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87170 () Bool)

(assert (=> b!87170 (= e!56786 (contains!754 lt!40997 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23057 res!44751) b!87169))

(assert (= (and b!87169 res!44752) b!87170))

(assert (=> d!23057 m!91179))

(declare-fun m!92775 () Bool)

(assert (=> d!23057 m!92775))

(declare-fun m!92777 () Bool)

(assert (=> d!23057 m!92777))

(declare-fun m!92779 () Bool)

(assert (=> b!87169 m!92779))

(declare-fun m!92781 () Bool)

(assert (=> b!87170 m!92781))

(assert (=> d!22419 d!23057))

(declare-fun b!87171 () Bool)

(declare-fun e!56788 () List!1519)

(declare-fun call!8323 () List!1519)

(assert (=> b!87171 (= e!56788 call!8323)))

(declare-fun b!87172 () Bool)

(assert (=> b!87172 (= e!56788 call!8323)))

(declare-fun b!87173 () Bool)

(declare-fun res!44753 () Bool)

(declare-fun e!56789 () Bool)

(assert (=> b!87173 (=> (not res!44753) (not e!56789))))

(declare-fun lt!41404 () List!1519)

(assert (=> b!87173 (= res!44753 (containsKey!144 lt!41404 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87174 () Bool)

(declare-fun e!56790 () List!1519)

(declare-fun e!56791 () List!1519)

(assert (=> b!87174 (= e!56790 e!56791)))

(declare-fun c!14332 () Bool)

(assert (=> b!87174 (= c!14332 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87175 () Bool)

(declare-fun call!8322 () List!1519)

(assert (=> b!87175 (= e!56790 call!8322)))

(declare-fun c!14334 () Bool)

(declare-fun b!87176 () Bool)

(assert (=> b!87176 (= c!14334 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (bvsgt (_1!1110 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> b!87176 (= e!56791 e!56788)))

(declare-fun b!87177 () Bool)

(declare-fun e!56787 () List!1519)

(assert (=> b!87177 (= e!56787 (insertStrictlySorted!60 (t!5240 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87178 () Bool)

(assert (=> b!87178 (= e!56787 (ite c!14332 (t!5240 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (ite c!14334 (Cons!1515 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (t!5240 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) Nil!1516)))))

(declare-fun c!14331 () Bool)

(declare-fun bm!8319 () Bool)

(assert (=> bm!8319 (= call!8322 ($colon$colon!72 e!56787 (ite c!14331 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun c!14333 () Bool)

(assert (=> bm!8319 (= c!14333 c!14331)))

(declare-fun bm!8320 () Bool)

(declare-fun call!8324 () List!1519)

(assert (=> bm!8320 (= call!8324 call!8322)))

(declare-fun bm!8321 () Bool)

(assert (=> bm!8321 (= call!8323 call!8324)))

(declare-fun b!87180 () Bool)

(assert (=> b!87180 (= e!56791 call!8324)))

(declare-fun d!23059 () Bool)

(assert (=> d!23059 e!56789))

(declare-fun res!44754 () Bool)

(assert (=> d!23059 (=> (not res!44754) (not e!56789))))

(assert (=> d!23059 (= res!44754 (isStrictlySorted!298 lt!41404))))

(assert (=> d!23059 (= lt!41404 e!56790)))

(assert (=> d!23059 (= c!14331 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23059 (isStrictlySorted!298 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!23059 (= (insertStrictlySorted!60 (toList!746 (+!110 lt!40325 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41404)))

(declare-fun b!87179 () Bool)

(assert (=> b!87179 (= e!56789 (contains!754 lt!41404 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23059 c!14331) b!87175))

(assert (= (and d!23059 (not c!14331)) b!87174))

(assert (= (and b!87174 c!14332) b!87180))

(assert (= (and b!87174 (not c!14332)) b!87176))

(assert (= (and b!87176 c!14334) b!87171))

(assert (= (and b!87176 (not c!14334)) b!87172))

(assert (= (or b!87171 b!87172) bm!8321))

(assert (= (or b!87180 bm!8321) bm!8320))

(assert (= (or b!87175 bm!8320) bm!8319))

(assert (= (and bm!8319 c!14333) b!87177))

(assert (= (and bm!8319 (not c!14333)) b!87178))

(assert (= (and d!23059 res!44754) b!87173))

(assert (= (and b!87173 res!44753) b!87179))

(declare-fun m!92783 () Bool)

(assert (=> d!23059 m!92783))

(declare-fun m!92785 () Bool)

(assert (=> d!23059 m!92785))

(declare-fun m!92787 () Bool)

(assert (=> b!87173 m!92787))

(declare-fun m!92789 () Bool)

(assert (=> b!87177 m!92789))

(declare-fun m!92791 () Bool)

(assert (=> b!87179 m!92791))

(declare-fun m!92793 () Bool)

(assert (=> bm!8319 m!92793))

(assert (=> d!22419 d!23059))

(declare-fun d!23061 () Bool)

(assert (=> d!23061 (isDefined!93 (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322)))))

(declare-fun lt!41405 () Unit!2517)

(assert (=> d!23061 (= lt!41405 (choose!504 (toList!746 lt!40596) (_1!1110 lt!40322)))))

(declare-fun e!56792 () Bool)

(assert (=> d!23061 e!56792))

(declare-fun res!44755 () Bool)

(assert (=> d!23061 (=> (not res!44755) (not e!56792))))

(assert (=> d!23061 (= res!44755 (isStrictlySorted!298 (toList!746 lt!40596)))))

(assert (=> d!23061 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40596) (_1!1110 lt!40322)) lt!41405)))

(declare-fun b!87181 () Bool)

(assert (=> b!87181 (= e!56792 (containsKey!144 (toList!746 lt!40596) (_1!1110 lt!40322)))))

(assert (= (and d!23061 res!44755) b!87181))

(assert (=> d!23061 m!90193))

(assert (=> d!23061 m!90193))

(assert (=> d!23061 m!90969))

(declare-fun m!92795 () Bool)

(assert (=> d!23061 m!92795))

(declare-fun m!92797 () Bool)

(assert (=> d!23061 m!92797))

(assert (=> b!87181 m!90965))

(assert (=> b!86118 d!23061))

(declare-fun d!23063 () Bool)

(assert (=> d!23063 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40596) (_1!1110 lt!40322)))))))

(declare-fun bs!3699 () Bool)

(assert (= bs!3699 d!23063))

(assert (=> bs!3699 m!90193))

(declare-fun m!92799 () Bool)

(assert (=> bs!3699 m!92799))

(assert (=> b!86118 d!23063))

(assert (=> b!86118 d!22425))

(declare-fun d!23065 () Bool)

(declare-fun res!44756 () Bool)

(declare-fun e!56793 () Bool)

(assert (=> d!23065 (=> res!44756 e!56793)))

(assert (=> d!23065 (= res!44756 (or ((_ is Nil!1516) lt!40625) ((_ is Nil!1516) (t!5240 lt!40625))))))

(assert (=> d!23065 (= (isStrictlySorted!298 lt!40625) e!56793)))

(declare-fun b!87182 () Bool)

(declare-fun e!56794 () Bool)

(assert (=> b!87182 (= e!56793 e!56794)))

(declare-fun res!44757 () Bool)

(assert (=> b!87182 (=> (not res!44757) (not e!56794))))

(assert (=> b!87182 (= res!44757 (bvslt (_1!1110 (h!2106 lt!40625)) (_1!1110 (h!2106 (t!5240 lt!40625)))))))

(declare-fun b!87183 () Bool)

(assert (=> b!87183 (= e!56794 (isStrictlySorted!298 (t!5240 lt!40625)))))

(assert (= (and d!23065 (not res!44756)) b!87182))

(assert (= (and b!87182 res!44757) b!87183))

(declare-fun m!92801 () Bool)

(assert (=> b!87183 m!92801))

(assert (=> d!22191 d!23065))

(assert (=> d!22191 d!22809))

(declare-fun b!87184 () Bool)

(declare-fun e!56795 () Option!146)

(assert (=> b!87184 (= e!56795 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40841)))))))

(declare-fun c!14335 () Bool)

(declare-fun d!23067 () Bool)

(assert (=> d!23067 (= c!14335 (and ((_ is Cons!1515) (toList!746 lt!40841)) (= (_1!1110 (h!2106 (toList!746 lt!40841))) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (=> d!23067 (= (getValueByKey!140 (toList!746 lt!40841) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) e!56795)))

(declare-fun b!87187 () Bool)

(declare-fun e!56796 () Option!146)

(assert (=> b!87187 (= e!56796 None!144)))

(declare-fun b!87186 () Bool)

(assert (=> b!87186 (= e!56796 (getValueByKey!140 (t!5240 (toList!746 lt!40841)) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87185 () Bool)

(assert (=> b!87185 (= e!56795 e!56796)))

(declare-fun c!14336 () Bool)

(assert (=> b!87185 (= c!14336 (and ((_ is Cons!1515) (toList!746 lt!40841)) (not (= (_1!1110 (h!2106 (toList!746 lt!40841))) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))))

(assert (= (and d!23067 c!14335) b!87184))

(assert (= (and d!23067 (not c!14335)) b!87185))

(assert (= (and b!87185 c!14336) b!87186))

(assert (= (and b!87185 (not c!14336)) b!87187))

(declare-fun m!92803 () Bool)

(assert (=> b!87186 m!92803))

(assert (=> b!85995 d!23067))

(declare-fun d!23069 () Bool)

(declare-fun res!44758 () Bool)

(declare-fun e!56797 () Bool)

(assert (=> d!23069 (=> res!44758 e!56797)))

(assert (=> d!23069 (= res!44758 (and ((_ is Cons!1515) lt!41011) (= (_1!1110 (h!2106 lt!41011)) (_1!1110 lt!40322))))))

(assert (=> d!23069 (= (containsKey!144 lt!41011 (_1!1110 lt!40322)) e!56797)))

(declare-fun b!87188 () Bool)

(declare-fun e!56798 () Bool)

(assert (=> b!87188 (= e!56797 e!56798)))

(declare-fun res!44759 () Bool)

(assert (=> b!87188 (=> (not res!44759) (not e!56798))))

(assert (=> b!87188 (= res!44759 (and (or (not ((_ is Cons!1515) lt!41011)) (bvsle (_1!1110 (h!2106 lt!41011)) (_1!1110 lt!40322))) ((_ is Cons!1515) lt!41011) (bvslt (_1!1110 (h!2106 lt!41011)) (_1!1110 lt!40322))))))

(declare-fun b!87189 () Bool)

(assert (=> b!87189 (= e!56798 (containsKey!144 (t!5240 lt!41011) (_1!1110 lt!40322)))))

(assert (= (and d!23069 (not res!44758)) b!87188))

(assert (= (and b!87188 res!44759) b!87189))

(declare-fun m!92805 () Bool)

(assert (=> b!87189 m!92805))

(assert (=> b!86251 d!23069))

(assert (=> bm!8183 d!22339))

(declare-fun d!23071 () Bool)

(declare-fun lt!41406 () Bool)

(assert (=> d!23071 (= lt!41406 (select (content!89 lt!40567) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun e!56799 () Bool)

(assert (=> d!23071 (= lt!41406 e!56799)))

(declare-fun res!44760 () Bool)

(assert (=> d!23071 (=> (not res!44760) (not e!56799))))

(assert (=> d!23071 (= res!44760 ((_ is Cons!1515) lt!40567))))

(assert (=> d!23071 (= (contains!754 lt!40567 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))) lt!41406)))

(declare-fun b!87190 () Bool)

(declare-fun e!56800 () Bool)

(assert (=> b!87190 (= e!56799 e!56800)))

(declare-fun res!44761 () Bool)

(assert (=> b!87190 (=> res!44761 e!56800)))

(assert (=> b!87190 (= res!44761 (= (h!2106 lt!40567) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun b!87191 () Bool)

(assert (=> b!87191 (= e!56800 (contains!754 (t!5240 lt!40567) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!23071 res!44760) b!87190))

(assert (= (and b!87190 (not res!44761)) b!87191))

(declare-fun m!92807 () Bool)

(assert (=> d!23071 m!92807))

(declare-fun m!92809 () Bool)

(assert (=> d!23071 m!92809))

(declare-fun m!92811 () Bool)

(assert (=> b!87191 m!92811))

(assert (=> b!85801 d!23071))

(declare-fun d!23073 () Bool)

(declare-fun res!44762 () Bool)

(declare-fun e!56801 () Bool)

(assert (=> d!23073 (=> res!44762 e!56801)))

(assert (=> d!23073 (= res!44762 (and ((_ is Cons!1515) (toList!746 lt!40564)) (= (_1!1110 (h!2106 (toList!746 lt!40564))) (_1!1110 lt!40318))))))

(assert (=> d!23073 (= (containsKey!144 (toList!746 lt!40564) (_1!1110 lt!40318)) e!56801)))

(declare-fun b!87192 () Bool)

(declare-fun e!56802 () Bool)

(assert (=> b!87192 (= e!56801 e!56802)))

(declare-fun res!44763 () Bool)

(assert (=> b!87192 (=> (not res!44763) (not e!56802))))

(assert (=> b!87192 (= res!44763 (and (or (not ((_ is Cons!1515) (toList!746 lt!40564))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40564))) (_1!1110 lt!40318))) ((_ is Cons!1515) (toList!746 lt!40564)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40564))) (_1!1110 lt!40318))))))

(declare-fun b!87193 () Bool)

(assert (=> b!87193 (= e!56802 (containsKey!144 (t!5240 (toList!746 lt!40564)) (_1!1110 lt!40318)))))

(assert (= (and d!23073 (not res!44762)) b!87192))

(assert (= (and b!87192 res!44763) b!87193))

(declare-fun m!92813 () Bool)

(assert (=> b!87193 m!92813))

(assert (=> d!22185 d!23073))

(declare-fun d!23075 () Bool)

(declare-fun lt!41407 () Bool)

(assert (=> d!23075 (= lt!41407 (select (content!89 (toList!746 lt!40963)) (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56803 () Bool)

(assert (=> d!23075 (= lt!41407 e!56803)))

(declare-fun res!44764 () Bool)

(assert (=> d!23075 (=> (not res!44764) (not e!56803))))

(assert (=> d!23075 (= res!44764 ((_ is Cons!1515) (toList!746 lt!40963)))))

(assert (=> d!23075 (= (contains!754 (toList!746 lt!40963) (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41407)))

(declare-fun b!87194 () Bool)

(declare-fun e!56804 () Bool)

(assert (=> b!87194 (= e!56803 e!56804)))

(declare-fun res!44765 () Bool)

(assert (=> b!87194 (=> res!44765 e!56804)))

(assert (=> b!87194 (= res!44765 (= (h!2106 (toList!746 lt!40963)) (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!87195 () Bool)

(assert (=> b!87195 (= e!56804 (contains!754 (t!5240 (toList!746 lt!40963)) (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!23075 res!44764) b!87194))

(assert (= (and b!87194 (not res!44765)) b!87195))

(declare-fun m!92815 () Bool)

(assert (=> d!23075 m!92815))

(declare-fun m!92817 () Bool)

(assert (=> d!23075 m!92817))

(declare-fun m!92819 () Bool)

(assert (=> b!87195 m!92819))

(assert (=> b!86159 d!23075))

(declare-fun d!23077 () Bool)

(declare-fun e!56806 () Bool)

(assert (=> d!23077 e!56806))

(declare-fun res!44766 () Bool)

(assert (=> d!23077 (=> res!44766 e!56806)))

(declare-fun lt!41408 () Bool)

(assert (=> d!23077 (= res!44766 (not lt!41408))))

(declare-fun lt!41409 () Bool)

(assert (=> d!23077 (= lt!41408 lt!41409)))

(declare-fun lt!41411 () Unit!2517)

(declare-fun e!56805 () Unit!2517)

(assert (=> d!23077 (= lt!41411 e!56805)))

(declare-fun c!14337 () Bool)

(assert (=> d!23077 (= c!14337 lt!41409)))

(assert (=> d!23077 (= lt!41409 (containsKey!144 (toList!746 lt!40918) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!23077 (= (contains!753 lt!40918 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) lt!41408)))

(declare-fun b!87196 () Bool)

(declare-fun lt!41410 () Unit!2517)

(assert (=> b!87196 (= e!56805 lt!41410)))

(assert (=> b!87196 (= lt!41410 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40918) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87196 (isDefined!93 (getValueByKey!140 (toList!746 lt!40918) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87197 () Bool)

(declare-fun Unit!2582 () Unit!2517)

(assert (=> b!87197 (= e!56805 Unit!2582)))

(declare-fun b!87198 () Bool)

(assert (=> b!87198 (= e!56806 (isDefined!93 (getValueByKey!140 (toList!746 lt!40918) (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!23077 c!14337) b!87196))

(assert (= (and d!23077 (not c!14337)) b!87197))

(assert (= (and d!23077 (not res!44766)) b!87198))

(assert (=> d!23077 m!90363))

(declare-fun m!92821 () Bool)

(assert (=> d!23077 m!92821))

(assert (=> b!87196 m!90363))

(declare-fun m!92823 () Bool)

(assert (=> b!87196 m!92823))

(assert (=> b!87196 m!90363))

(assert (=> b!87196 m!91643))

(assert (=> b!87196 m!91643))

(declare-fun m!92825 () Bool)

(assert (=> b!87196 m!92825))

(assert (=> b!87198 m!90363))

(assert (=> b!87198 m!91643))

(assert (=> b!87198 m!91643))

(assert (=> b!87198 m!92825))

(assert (=> b!86074 d!23077))

(declare-fun d!23079 () Bool)

(declare-fun c!14338 () Bool)

(assert (=> d!23079 (= c!14338 ((_ is Nil!1516) (toList!746 lt!40560)))))

(declare-fun e!56807 () (InoxSet tuple2!2198))

(assert (=> d!23079 (= (content!89 (toList!746 lt!40560)) e!56807)))

(declare-fun b!87199 () Bool)

(assert (=> b!87199 (= e!56807 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!87200 () Bool)

(assert (=> b!87200 (= e!56807 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40560)) true) (content!89 (t!5240 (toList!746 lt!40560)))))))

(assert (= (and d!23079 c!14338) b!87199))

(assert (= (and d!23079 (not c!14338)) b!87200))

(declare-fun m!92827 () Bool)

(assert (=> b!87200 m!92827))

(assert (=> b!87200 m!92395))

(assert (=> d!22333 d!23079))

(declare-fun lt!41412 () Bool)

(declare-fun d!23081 () Bool)

(assert (=> d!23081 (= lt!41412 (select (content!89 (toList!746 lt!40998)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun e!56808 () Bool)

(assert (=> d!23081 (= lt!41412 e!56808)))

(declare-fun res!44767 () Bool)

(assert (=> d!23081 (=> (not res!44767) (not e!56808))))

(assert (=> d!23081 (= res!44767 ((_ is Cons!1515) (toList!746 lt!40998)))))

(assert (=> d!23081 (= (contains!754 (toList!746 lt!40998) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41412)))

(declare-fun b!87201 () Bool)

(declare-fun e!56809 () Bool)

(assert (=> b!87201 (= e!56808 e!56809)))

(declare-fun res!44768 () Bool)

(assert (=> b!87201 (=> res!44768 e!56809)))

(assert (=> b!87201 (= res!44768 (= (h!2106 (toList!746 lt!40998)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun b!87202 () Bool)

(assert (=> b!87202 (= e!56809 (contains!754 (t!5240 (toList!746 lt!40998)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!23081 res!44767) b!87201))

(assert (= (and b!87201 (not res!44768)) b!87202))

(declare-fun m!92829 () Bool)

(assert (=> d!23081 m!92829))

(declare-fun m!92831 () Bool)

(assert (=> d!23081 m!92831))

(declare-fun m!92833 () Bool)

(assert (=> b!87202 m!92833))

(assert (=> b!86225 d!23081))

(declare-fun d!23083 () Bool)

(declare-fun res!44769 () Bool)

(declare-fun e!56810 () Bool)

(assert (=> d!23083 (=> res!44769 e!56810)))

(assert (=> d!23083 (= res!44769 (and ((_ is Cons!1515) (toList!746 lt!40450)) (= (_1!1110 (h!2106 (toList!746 lt!40450))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23083 (= (containsKey!144 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000) e!56810)))

(declare-fun b!87203 () Bool)

(declare-fun e!56811 () Bool)

(assert (=> b!87203 (= e!56810 e!56811)))

(declare-fun res!44770 () Bool)

(assert (=> b!87203 (=> (not res!44770) (not e!56811))))

(assert (=> b!87203 (= res!44770 (and (or (not ((_ is Cons!1515) (toList!746 lt!40450))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40450))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1515) (toList!746 lt!40450)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40450))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87204 () Bool)

(assert (=> b!87204 (= e!56811 (containsKey!144 (t!5240 (toList!746 lt!40450)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23083 (not res!44769)) b!87203))

(assert (= (and b!87203 res!44770) b!87204))

(declare-fun m!92835 () Bool)

(assert (=> b!87204 m!92835))

(assert (=> d!22279 d!23083))

(declare-fun b!87205 () Bool)

(declare-fun e!56814 () Bool)

(declare-fun call!8325 () Bool)

(assert (=> b!87205 (= e!56814 call!8325)))

(declare-fun b!87206 () Bool)

(declare-fun e!56815 () Bool)

(assert (=> b!87206 (= e!56815 (contains!755 (ite c!14034 (Cons!1516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1517) Nil!1517) (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!87207 () Bool)

(assert (=> b!87207 (= e!56814 call!8325)))

(declare-fun c!14339 () Bool)

(declare-fun bm!8322 () Bool)

(assert (=> bm!8322 (= call!8325 (arrayNoDuplicates!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14339 (Cons!1516 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!14034 (Cons!1516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1517) Nil!1517)) (ite c!14034 (Cons!1516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1517) Nil!1517))))))

(declare-fun d!23085 () Bool)

(declare-fun res!44771 () Bool)

(declare-fun e!56812 () Bool)

(assert (=> d!23085 (=> res!44771 e!56812)))

(assert (=> d!23085 (= res!44771 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!23085 (= (arrayNoDuplicates!0 (_keys!4010 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14034 (Cons!1516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) Nil!1517) Nil!1517)) e!56812)))

(declare-fun b!87208 () Bool)

(declare-fun e!56813 () Bool)

(assert (=> b!87208 (= e!56813 e!56814)))

(assert (=> b!87208 (= c!14339 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!87209 () Bool)

(assert (=> b!87209 (= e!56812 e!56813)))

(declare-fun res!44772 () Bool)

(assert (=> b!87209 (=> (not res!44772) (not e!56813))))

(assert (=> b!87209 (= res!44772 (not e!56815))))

(declare-fun res!44773 () Bool)

(assert (=> b!87209 (=> (not res!44773) (not e!56815))))

(assert (=> b!87209 (= res!44773 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!23085 (not res!44771)) b!87209))

(assert (= (and b!87209 res!44773) b!87206))

(assert (= (and b!87209 res!44772) b!87208))

(assert (= (and b!87208 c!14339) b!87205))

(assert (= (and b!87208 (not c!14339)) b!87207))

(assert (= (or b!87205 b!87207) bm!8322))

(assert (=> b!87206 m!91231))

(assert (=> b!87206 m!91231))

(declare-fun m!92837 () Bool)

(assert (=> b!87206 m!92837))

(assert (=> bm!8322 m!91231))

(declare-fun m!92839 () Bool)

(assert (=> bm!8322 m!92839))

(assert (=> b!87208 m!91231))

(assert (=> b!87208 m!91231))

(assert (=> b!87208 m!91233))

(assert (=> b!87209 m!91231))

(assert (=> b!87209 m!91231))

(assert (=> b!87209 m!91233))

(assert (=> bm!8208 d!23085))

(declare-fun d!23087 () Bool)

(declare-fun res!44774 () Bool)

(declare-fun e!56816 () Bool)

(assert (=> d!23087 (=> res!44774 e!56816)))

(assert (=> d!23087 (= res!44774 (and ((_ is Cons!1515) (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (= (_1!1110 (h!2106 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!23087 (= (containsKey!144 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56816)))

(declare-fun b!87210 () Bool)

(declare-fun e!56817 () Bool)

(assert (=> b!87210 (= e!56816 e!56817)))

(declare-fun res!44775 () Bool)

(assert (=> b!87210 (=> (not res!44775) (not e!56817))))

(assert (=> b!87210 (= res!44775 (and (or (not ((_ is Cons!1515) (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (bvsle (_1!1110 (h!2106 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1515) (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (bvslt (_1!1110 (h!2106 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!87211 () Bool)

(assert (=> b!87211 (= e!56817 (containsKey!144 (t!5240 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!23087 (not res!44774)) b!87210))

(assert (= (and b!87210 res!44775) b!87211))

(assert (=> b!87211 m!89857))

(declare-fun m!92841 () Bool)

(assert (=> b!87211 m!92841))

(assert (=> d!22317 d!23087))

(assert (=> d!22287 d!22177))

(declare-fun d!23089 () Bool)

(declare-fun lt!41413 () Bool)

(assert (=> d!23089 (= lt!41413 (select (content!89 lt!41011) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun e!56818 () Bool)

(assert (=> d!23089 (= lt!41413 e!56818)))

(declare-fun res!44776 () Bool)

(assert (=> d!23089 (=> (not res!44776) (not e!56818))))

(assert (=> d!23089 (= res!44776 ((_ is Cons!1515) lt!41011))))

(assert (=> d!23089 (= (contains!754 lt!41011 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))) lt!41413)))

(declare-fun b!87212 () Bool)

(declare-fun e!56819 () Bool)

(assert (=> b!87212 (= e!56818 e!56819)))

(declare-fun res!44777 () Bool)

(assert (=> b!87212 (=> res!44777 e!56819)))

(assert (=> b!87212 (= res!44777 (= (h!2106 lt!41011) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun b!87213 () Bool)

(assert (=> b!87213 (= e!56819 (contains!754 (t!5240 lt!41011) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!23089 res!44776) b!87212))

(assert (= (and b!87212 (not res!44777)) b!87213))

(declare-fun m!92843 () Bool)

(assert (=> d!23089 m!92843))

(declare-fun m!92845 () Bool)

(assert (=> d!23089 m!92845))

(declare-fun m!92847 () Bool)

(assert (=> b!87213 m!92847))

(assert (=> b!86257 d!23089))

(declare-fun d!23091 () Bool)

(assert (=> d!23091 (= (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40439)) (v!2649 (getValueByKey!140 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40439)))))

(assert (=> d!22391 d!23091))

(declare-fun b!87214 () Bool)

(declare-fun e!56820 () Option!146)

(assert (=> b!87214 (= e!56820 (Some!145 (_2!1110 (h!2106 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(declare-fun d!23093 () Bool)

(declare-fun c!14340 () Bool)

(assert (=> d!23093 (= c!14340 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40439)))))

(assert (=> d!23093 (= (getValueByKey!140 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40439) e!56820)))

(declare-fun b!87217 () Bool)

(declare-fun e!56821 () Option!146)

(assert (=> b!87217 (= e!56821 None!144)))

(declare-fun b!87216 () Bool)

(assert (=> b!87216 (= e!56821 (getValueByKey!140 (t!5240 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!40439))))

(declare-fun b!87215 () Bool)

(assert (=> b!87215 (= e!56820 e!56821)))

(declare-fun c!14341 () Bool)

(assert (=> b!87215 (= c!14341 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (not (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40441 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40439))))))

(assert (= (and d!23093 c!14340) b!87214))

(assert (= (and d!23093 (not c!14340)) b!87215))

(assert (= (and b!87215 c!14341) b!87216))

(assert (= (and b!87215 (not c!14341)) b!87217))

(declare-fun m!92849 () Bool)

(assert (=> b!87216 m!92849))

(assert (=> d!22391 d!23093))

(declare-fun d!23095 () Bool)

(assert (=> d!23095 (= ($colon$colon!72 e!56188 (ite c!14051 (h!2106 (toList!746 (+!110 lt!40331 lt!40322))) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318)))) (Cons!1515 (ite c!14051 (h!2106 (toList!746 (+!110 lt!40331 lt!40322))) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) e!56188))))

(assert (=> bm!8218 d!23095))

(assert (=> d!22189 d!22187))

(declare-fun d!23097 () Bool)

(assert (=> d!23097 (= (getValueByKey!140 lt!40563 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(assert (=> d!23097 true))

(declare-fun _$22!421 () Unit!2517)

(assert (=> d!23097 (= (choose!500 lt!40563 (_1!1110 lt!40318) (_2!1110 lt!40318)) _$22!421)))

(declare-fun bs!3700 () Bool)

(assert (= bs!3700 d!23097))

(assert (=> bs!3700 m!90133))

(assert (=> d!22189 d!23097))

(declare-fun d!23099 () Bool)

(declare-fun res!44778 () Bool)

(declare-fun e!56822 () Bool)

(assert (=> d!23099 (=> res!44778 e!56822)))

(assert (=> d!23099 (= res!44778 (or ((_ is Nil!1516) lt!40563) ((_ is Nil!1516) (t!5240 lt!40563))))))

(assert (=> d!23099 (= (isStrictlySorted!298 lt!40563) e!56822)))

(declare-fun b!87218 () Bool)

(declare-fun e!56823 () Bool)

(assert (=> b!87218 (= e!56822 e!56823)))

(declare-fun res!44779 () Bool)

(assert (=> b!87218 (=> (not res!44779) (not e!56823))))

(assert (=> b!87218 (= res!44779 (bvslt (_1!1110 (h!2106 lt!40563)) (_1!1110 (h!2106 (t!5240 lt!40563)))))))

(declare-fun b!87219 () Bool)

(assert (=> b!87219 (= e!56823 (isStrictlySorted!298 (t!5240 lt!40563)))))

(assert (= (and d!23099 (not res!44778)) b!87218))

(assert (= (and b!87218 res!44779) b!87219))

(declare-fun m!92851 () Bool)

(assert (=> b!87219 m!92851))

(assert (=> d!22189 d!23099))

(declare-fun d!23101 () Bool)

(declare-fun e!56825 () Bool)

(assert (=> d!23101 e!56825))

(declare-fun res!44780 () Bool)

(assert (=> d!23101 (=> res!44780 e!56825)))

(declare-fun lt!41414 () Bool)

(assert (=> d!23101 (= res!44780 (not lt!41414))))

(declare-fun lt!41415 () Bool)

(assert (=> d!23101 (= lt!41414 lt!41415)))

(declare-fun lt!41417 () Unit!2517)

(declare-fun e!56824 () Unit!2517)

(assert (=> d!23101 (= lt!41417 e!56824)))

(declare-fun c!14342 () Bool)

(assert (=> d!23101 (= c!14342 lt!41415)))

(assert (=> d!23101 (= lt!41415 (containsKey!144 (toList!746 lt!40712) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23101 (= (contains!753 lt!40712 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41414)))

(declare-fun b!87220 () Bool)

(declare-fun lt!41416 () Unit!2517)

(assert (=> b!87220 (= e!56824 lt!41416)))

(assert (=> b!87220 (= lt!41416 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40712) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!87220 (isDefined!93 (getValueByKey!140 (toList!746 lt!40712) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87221 () Bool)

(declare-fun Unit!2583 () Unit!2517)

(assert (=> b!87221 (= e!56824 Unit!2583)))

(declare-fun b!87222 () Bool)

(assert (=> b!87222 (= e!56825 (isDefined!93 (getValueByKey!140 (toList!746 lt!40712) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!23101 c!14342) b!87220))

(assert (= (and d!23101 (not c!14342)) b!87221))

(assert (= (and d!23101 (not res!44780)) b!87222))

(declare-fun m!92853 () Bool)

(assert (=> d!23101 m!92853))

(declare-fun m!92855 () Bool)

(assert (=> b!87220 m!92855))

(assert (=> b!87220 m!90573))

(assert (=> b!87220 m!90573))

(declare-fun m!92857 () Bool)

(assert (=> b!87220 m!92857))

(assert (=> b!87222 m!90573))

(assert (=> b!87222 m!90573))

(assert (=> b!87222 m!92857))

(assert (=> d!22263 d!23101))

(declare-fun b!87223 () Bool)

(declare-fun e!56826 () Option!146)

(assert (=> b!87223 (= e!56826 (Some!145 (_2!1110 (h!2106 lt!40711))))))

(declare-fun d!23103 () Bool)

(declare-fun c!14343 () Bool)

(assert (=> d!23103 (= c!14343 (and ((_ is Cons!1515) lt!40711) (= (_1!1110 (h!2106 lt!40711)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!23103 (= (getValueByKey!140 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56826)))

(declare-fun b!87226 () Bool)

(declare-fun e!56827 () Option!146)

(assert (=> b!87226 (= e!56827 None!144)))

(declare-fun b!87225 () Bool)

(assert (=> b!87225 (= e!56827 (getValueByKey!140 (t!5240 lt!40711) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87224 () Bool)

(assert (=> b!87224 (= e!56826 e!56827)))

(declare-fun c!14344 () Bool)

(assert (=> b!87224 (= c!14344 (and ((_ is Cons!1515) lt!40711) (not (= (_1!1110 (h!2106 lt!40711)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!23103 c!14343) b!87223))

(assert (= (and d!23103 (not c!14343)) b!87224))

(assert (= (and b!87224 c!14344) b!87225))

(assert (= (and b!87224 (not c!14344)) b!87226))

(declare-fun m!92859 () Bool)

(assert (=> b!87225 m!92859))

(assert (=> d!22263 d!23103))

(declare-fun d!23105 () Bool)

(assert (=> d!23105 (= (getValueByKey!140 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41418 () Unit!2517)

(assert (=> d!23105 (= lt!41418 (choose!500 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56828 () Bool)

(assert (=> d!23105 e!56828))

(declare-fun res!44781 () Bool)

(assert (=> d!23105 (=> (not res!44781) (not e!56828))))

(assert (=> d!23105 (= res!44781 (isStrictlySorted!298 lt!40711))))

(assert (=> d!23105 (= (lemmaContainsTupThenGetReturnValue!57 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41418)))

(declare-fun b!87227 () Bool)

(declare-fun res!44782 () Bool)

(assert (=> b!87227 (=> (not res!44782) (not e!56828))))

(assert (=> b!87227 (= res!44782 (containsKey!144 lt!40711 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87228 () Bool)

(assert (=> b!87228 (= e!56828 (contains!754 lt!40711 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!23105 res!44781) b!87227))

(assert (= (and b!87227 res!44782) b!87228))

(assert (=> d!23105 m!90567))

(declare-fun m!92861 () Bool)

(assert (=> d!23105 m!92861))

(declare-fun m!92863 () Bool)

(assert (=> d!23105 m!92863))

(declare-fun m!92865 () Bool)

(assert (=> b!87227 m!92865))

(declare-fun m!92867 () Bool)

(assert (=> b!87228 m!92867))

(assert (=> d!22263 d!23105))

(declare-fun b!87229 () Bool)

(declare-fun e!56830 () List!1519)

(declare-fun call!8327 () List!1519)

(assert (=> b!87229 (= e!56830 call!8327)))

(declare-fun b!87230 () Bool)

(assert (=> b!87230 (= e!56830 call!8327)))

(declare-fun b!87231 () Bool)

(declare-fun res!44783 () Bool)

(declare-fun e!56831 () Bool)

(assert (=> b!87231 (=> (not res!44783) (not e!56831))))

(declare-fun lt!41419 () List!1519)

(assert (=> b!87231 (= res!44783 (containsKey!144 lt!41419 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87232 () Bool)

(declare-fun e!56832 () List!1519)

(declare-fun e!56833 () List!1519)

(assert (=> b!87232 (= e!56832 e!56833)))

(declare-fun c!14346 () Bool)

(assert (=> b!87232 (= c!14346 (and ((_ is Cons!1515) (toList!746 call!8148)) (= (_1!1110 (h!2106 (toList!746 call!8148))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!87233 () Bool)

(declare-fun call!8326 () List!1519)

(assert (=> b!87233 (= e!56832 call!8326)))

(declare-fun c!14348 () Bool)

(declare-fun b!87234 () Bool)

(assert (=> b!87234 (= c!14348 (and ((_ is Cons!1515) (toList!746 call!8148)) (bvsgt (_1!1110 (h!2106 (toList!746 call!8148))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!87234 (= e!56833 e!56830)))

(declare-fun e!56829 () List!1519)

(declare-fun b!87235 () Bool)

(assert (=> b!87235 (= e!56829 (insertStrictlySorted!60 (t!5240 (toList!746 call!8148)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87236 () Bool)

(assert (=> b!87236 (= e!56829 (ite c!14346 (t!5240 (toList!746 call!8148)) (ite c!14348 (Cons!1515 (h!2106 (toList!746 call!8148)) (t!5240 (toList!746 call!8148))) Nil!1516)))))

(declare-fun c!14345 () Bool)

(declare-fun bm!8323 () Bool)

(assert (=> bm!8323 (= call!8326 ($colon$colon!72 e!56829 (ite c!14345 (h!2106 (toList!746 call!8148)) (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!14347 () Bool)

(assert (=> bm!8323 (= c!14347 c!14345)))

(declare-fun bm!8324 () Bool)

(declare-fun call!8328 () List!1519)

(assert (=> bm!8324 (= call!8328 call!8326)))

(declare-fun bm!8325 () Bool)

(assert (=> bm!8325 (= call!8327 call!8328)))

(declare-fun b!87238 () Bool)

(assert (=> b!87238 (= e!56833 call!8328)))

(declare-fun d!23107 () Bool)

(assert (=> d!23107 e!56831))

(declare-fun res!44784 () Bool)

(assert (=> d!23107 (=> (not res!44784) (not e!56831))))

(assert (=> d!23107 (= res!44784 (isStrictlySorted!298 lt!41419))))

(assert (=> d!23107 (= lt!41419 e!56832)))

(assert (=> d!23107 (= c!14345 (and ((_ is Cons!1515) (toList!746 call!8148)) (bvslt (_1!1110 (h!2106 (toList!746 call!8148))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!23107 (isStrictlySorted!298 (toList!746 call!8148))))

(assert (=> d!23107 (= (insertStrictlySorted!60 (toList!746 call!8148) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41419)))

(declare-fun b!87237 () Bool)

(assert (=> b!87237 (= e!56831 (contains!754 lt!41419 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!23107 c!14345) b!87233))

(assert (= (and d!23107 (not c!14345)) b!87232))

(assert (= (and b!87232 c!14346) b!87238))

(assert (= (and b!87232 (not c!14346)) b!87234))

(assert (= (and b!87234 c!14348) b!87229))

(assert (= (and b!87234 (not c!14348)) b!87230))

(assert (= (or b!87229 b!87230) bm!8325))

(assert (= (or b!87238 bm!8325) bm!8324))

(assert (= (or b!87233 bm!8324) bm!8323))

(assert (= (and bm!8323 c!14347) b!87235))

(assert (= (and bm!8323 (not c!14347)) b!87236))

(assert (= (and d!23107 res!44784) b!87231))

(assert (= (and b!87231 res!44783) b!87237))

(declare-fun m!92869 () Bool)

(assert (=> d!23107 m!92869))

(declare-fun m!92871 () Bool)

(assert (=> d!23107 m!92871))

(declare-fun m!92873 () Bool)

(assert (=> b!87231 m!92873))

(declare-fun m!92875 () Bool)

(assert (=> b!87235 m!92875))

(declare-fun m!92877 () Bool)

(assert (=> b!87237 m!92877))

(declare-fun m!92879 () Bool)

(assert (=> bm!8323 m!92879))

(assert (=> d!22263 d!23107))

(declare-fun d!23109 () Bool)

(assert (=> d!23109 (isDefined!93 (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318)))))

(declare-fun lt!41420 () Unit!2517)

(assert (=> d!23109 (= lt!41420 (choose!504 (toList!746 lt!40564) (_1!1110 lt!40318)))))

(declare-fun e!56834 () Bool)

(assert (=> d!23109 e!56834))

(declare-fun res!44785 () Bool)

(assert (=> d!23109 (=> (not res!44785) (not e!56834))))

(assert (=> d!23109 (= res!44785 (isStrictlySorted!298 (toList!746 lt!40564)))))

(assert (=> d!23109 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40564) (_1!1110 lt!40318)) lt!41420)))

(declare-fun b!87239 () Bool)

(assert (=> b!87239 (= e!56834 (containsKey!144 (toList!746 lt!40564) (_1!1110 lt!40318)))))

(assert (= (and d!23109 res!44785) b!87239))

(assert (=> d!23109 m!90139))

(assert (=> d!23109 m!90139))

(assert (=> d!23109 m!90259))

(declare-fun m!92881 () Bool)

(assert (=> d!23109 m!92881))

(declare-fun m!92883 () Bool)

(assert (=> d!23109 m!92883))

(assert (=> b!87239 m!90255))

(assert (=> b!85705 d!23109))

(declare-fun d!23111 () Bool)

(assert (=> d!23111 (= (isDefined!93 (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318))) (not (isEmpty!337 (getValueByKey!140 (toList!746 lt!40564) (_1!1110 lt!40318)))))))

(declare-fun bs!3701 () Bool)

(assert (= bs!3701 d!23111))

(assert (=> bs!3701 m!90139))

(declare-fun m!92885 () Bool)

(assert (=> bs!3701 m!92885))

(assert (=> b!85705 d!23111))

(assert (=> b!85705 d!22243))

(declare-fun d!23113 () Bool)

(declare-fun e!56836 () Bool)

(assert (=> d!23113 e!56836))

(declare-fun res!44786 () Bool)

(assert (=> d!23113 (=> res!44786 e!56836)))

(declare-fun lt!41421 () Bool)

(assert (=> d!23113 (= res!44786 (not lt!41421))))

(declare-fun lt!41422 () Bool)

(assert (=> d!23113 (= lt!41421 lt!41422)))

(declare-fun lt!41424 () Unit!2517)

(declare-fun e!56835 () Unit!2517)

(assert (=> d!23113 (= lt!41424 e!56835)))

(declare-fun c!14349 () Bool)

(assert (=> d!23113 (= c!14349 lt!41422)))

(assert (=> d!23113 (= lt!41422 (containsKey!144 (toList!746 lt!40990) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!23113 (= (contains!753 lt!40990 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41421)))

(declare-fun b!87240 () Bool)

(declare-fun lt!41423 () Unit!2517)

(assert (=> b!87240 (= e!56835 lt!41423)))

(assert (=> b!87240 (= lt!41423 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40990) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> b!87240 (isDefined!93 (getValueByKey!140 (toList!746 lt!40990) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87241 () Bool)

(declare-fun Unit!2584 () Unit!2517)

(assert (=> b!87241 (= e!56835 Unit!2584)))

(declare-fun b!87242 () Bool)

(assert (=> b!87242 (= e!56836 (isDefined!93 (getValueByKey!140 (toList!746 lt!40990) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23113 c!14349) b!87240))

(assert (= (and d!23113 (not c!14349)) b!87241))

(assert (= (and d!23113 (not res!44786)) b!87242))

(declare-fun m!92887 () Bool)

(assert (=> d!23113 m!92887))

(declare-fun m!92889 () Bool)

(assert (=> b!87240 m!92889))

(assert (=> b!87240 m!91161))

(assert (=> b!87240 m!91161))

(declare-fun m!92891 () Bool)

(assert (=> b!87240 m!92891))

(assert (=> b!87242 m!91161))

(assert (=> b!87242 m!91161))

(assert (=> b!87242 m!92891))

(assert (=> d!22413 d!23113))

(declare-fun b!87243 () Bool)

(declare-fun e!56837 () Option!146)

(assert (=> b!87243 (= e!56837 (Some!145 (_2!1110 (h!2106 lt!40989))))))

(declare-fun d!23115 () Bool)

(declare-fun c!14350 () Bool)

(assert (=> d!23115 (= c!14350 (and ((_ is Cons!1515) lt!40989) (= (_1!1110 (h!2106 lt!40989)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23115 (= (getValueByKey!140 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56837)))

(declare-fun b!87246 () Bool)

(declare-fun e!56838 () Option!146)

(assert (=> b!87246 (= e!56838 None!144)))

(declare-fun b!87245 () Bool)

(assert (=> b!87245 (= e!56838 (getValueByKey!140 (t!5240 lt!40989) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87244 () Bool)

(assert (=> b!87244 (= e!56837 e!56838)))

(declare-fun c!14351 () Bool)

(assert (=> b!87244 (= c!14351 (and ((_ is Cons!1515) lt!40989) (not (= (_1!1110 (h!2106 lt!40989)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23115 c!14350) b!87243))

(assert (= (and d!23115 (not c!14350)) b!87244))

(assert (= (and b!87244 c!14351) b!87245))

(assert (= (and b!87244 (not c!14351)) b!87246))

(declare-fun m!92893 () Bool)

(assert (=> b!87245 m!92893))

(assert (=> d!22413 d!23115))

(declare-fun d!23117 () Bool)

(assert (=> d!23117 (= (getValueByKey!140 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41425 () Unit!2517)

(assert (=> d!23117 (= lt!41425 (choose!500 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun e!56839 () Bool)

(assert (=> d!23117 e!56839))

(declare-fun res!44787 () Bool)

(assert (=> d!23117 (=> (not res!44787) (not e!56839))))

(assert (=> d!23117 (= res!44787 (isStrictlySorted!298 lt!40989))))

(assert (=> d!23117 (= (lemmaContainsTupThenGetReturnValue!57 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41425)))

(declare-fun b!87247 () Bool)

(declare-fun res!44788 () Bool)

(assert (=> b!87247 (=> (not res!44788) (not e!56839))))

(assert (=> b!87247 (= res!44788 (containsKey!144 lt!40989 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87248 () Bool)

(assert (=> b!87248 (= e!56839 (contains!754 lt!40989 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23117 res!44787) b!87247))

(assert (= (and b!87247 res!44788) b!87248))

(assert (=> d!23117 m!91155))

(declare-fun m!92895 () Bool)

(assert (=> d!23117 m!92895))

(declare-fun m!92897 () Bool)

(assert (=> d!23117 m!92897))

(declare-fun m!92899 () Bool)

(assert (=> b!87247 m!92899))

(declare-fun m!92901 () Bool)

(assert (=> b!87248 m!92901))

(assert (=> d!22413 d!23117))

(declare-fun b!87249 () Bool)

(declare-fun e!56841 () List!1519)

(declare-fun call!8330 () List!1519)

(assert (=> b!87249 (= e!56841 call!8330)))

(declare-fun b!87250 () Bool)

(assert (=> b!87250 (= e!56841 call!8330)))

(declare-fun b!87251 () Bool)

(declare-fun res!44789 () Bool)

(declare-fun e!56842 () Bool)

(assert (=> b!87251 (=> (not res!44789) (not e!56842))))

(declare-fun lt!41426 () List!1519)

(assert (=> b!87251 (= res!44789 (containsKey!144 lt!41426 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87252 () Bool)

(declare-fun e!56843 () List!1519)

(declare-fun e!56844 () List!1519)

(assert (=> b!87252 (= e!56843 e!56844)))

(declare-fun c!14353 () Bool)

(assert (=> b!87252 (= c!14353 (and ((_ is Cons!1515) (toList!746 lt!40325)) (= (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87253 () Bool)

(declare-fun call!8329 () List!1519)

(assert (=> b!87253 (= e!56843 call!8329)))

(declare-fun c!14355 () Bool)

(declare-fun b!87254 () Bool)

(assert (=> b!87254 (= c!14355 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> b!87254 (= e!56844 e!56841)))

(declare-fun b!87255 () Bool)

(declare-fun e!56840 () List!1519)

(assert (=> b!87255 (= e!56840 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40325)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87256 () Bool)

(assert (=> b!87256 (= e!56840 (ite c!14353 (t!5240 (toList!746 lt!40325)) (ite c!14355 (Cons!1515 (h!2106 (toList!746 lt!40325)) (t!5240 (toList!746 lt!40325))) Nil!1516)))))

(declare-fun bm!8326 () Bool)

(declare-fun c!14352 () Bool)

(assert (=> bm!8326 (= call!8329 ($colon$colon!72 e!56840 (ite c!14352 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun c!14354 () Bool)

(assert (=> bm!8326 (= c!14354 c!14352)))

(declare-fun bm!8327 () Bool)

(declare-fun call!8331 () List!1519)

(assert (=> bm!8327 (= call!8331 call!8329)))

(declare-fun bm!8328 () Bool)

(assert (=> bm!8328 (= call!8330 call!8331)))

(declare-fun b!87258 () Bool)

(assert (=> b!87258 (= e!56844 call!8331)))

(declare-fun d!23119 () Bool)

(assert (=> d!23119 e!56842))

(declare-fun res!44790 () Bool)

(assert (=> d!23119 (=> (not res!44790) (not e!56842))))

(assert (=> d!23119 (= res!44790 (isStrictlySorted!298 lt!41426))))

(assert (=> d!23119 (= lt!41426 e!56843)))

(assert (=> d!23119 (= c!14352 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23119 (isStrictlySorted!298 (toList!746 lt!40325))))

(assert (=> d!23119 (= (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41426)))

(declare-fun b!87257 () Bool)

(assert (=> b!87257 (= e!56842 (contains!754 lt!41426 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23119 c!14352) b!87253))

(assert (= (and d!23119 (not c!14352)) b!87252))

(assert (= (and b!87252 c!14353) b!87258))

(assert (= (and b!87252 (not c!14353)) b!87254))

(assert (= (and b!87254 c!14355) b!87249))

(assert (= (and b!87254 (not c!14355)) b!87250))

(assert (= (or b!87249 b!87250) bm!8328))

(assert (= (or b!87258 bm!8328) bm!8327))

(assert (= (or b!87253 bm!8327) bm!8326))

(assert (= (and bm!8326 c!14354) b!87255))

(assert (= (and bm!8326 (not c!14354)) b!87256))

(assert (= (and d!23119 res!44790) b!87251))

(assert (= (and b!87251 res!44789) b!87257))

(declare-fun m!92903 () Bool)

(assert (=> d!23119 m!92903))

(assert (=> d!23119 m!90353))

(declare-fun m!92905 () Bool)

(assert (=> b!87251 m!92905))

(declare-fun m!92907 () Bool)

(assert (=> b!87255 m!92907))

(declare-fun m!92909 () Bool)

(assert (=> b!87257 m!92909))

(declare-fun m!92911 () Bool)

(assert (=> bm!8326 m!92911))

(assert (=> d!22413 d!23119))

(declare-fun d!23121 () Bool)

(declare-fun lt!41427 () Bool)

(assert (=> d!23121 (= lt!41427 (select (content!89 (t!5240 (toList!746 lt!40600))) lt!40318))))

(declare-fun e!56845 () Bool)

(assert (=> d!23121 (= lt!41427 e!56845)))

(declare-fun res!44791 () Bool)

(assert (=> d!23121 (=> (not res!44791) (not e!56845))))

(assert (=> d!23121 (= res!44791 ((_ is Cons!1515) (t!5240 (toList!746 lt!40600))))))

(assert (=> d!23121 (= (contains!754 (t!5240 (toList!746 lt!40600)) lt!40318) lt!41427)))

(declare-fun b!87259 () Bool)

(declare-fun e!56846 () Bool)

(assert (=> b!87259 (= e!56845 e!56846)))

(declare-fun res!44792 () Bool)

(assert (=> b!87259 (=> res!44792 e!56846)))

(assert (=> b!87259 (= res!44792 (= (h!2106 (t!5240 (toList!746 lt!40600))) lt!40318))))

(declare-fun b!87260 () Bool)

(assert (=> b!87260 (= e!56846 (contains!754 (t!5240 (t!5240 (toList!746 lt!40600))) lt!40318))))

(assert (= (and d!23121 res!44791) b!87259))

(assert (= (and b!87259 (not res!44792)) b!87260))

(declare-fun m!92913 () Bool)

(assert (=> d!23121 m!92913))

(declare-fun m!92915 () Bool)

(assert (=> d!23121 m!92915))

(declare-fun m!92917 () Bool)

(assert (=> b!87260 m!92917))

(assert (=> b!85784 d!23121))

(assert (=> d!22251 d!22245))

(assert (=> d!22251 d!22249))

(assert (=> d!22251 d!22247))

(assert (=> d!22251 d!22253))

(declare-fun d!23123 () Bool)

(declare-fun e!56848 () Bool)

(assert (=> d!23123 e!56848))

(declare-fun res!44793 () Bool)

(assert (=> d!23123 (=> res!44793 e!56848)))

(declare-fun lt!41428 () Bool)

(assert (=> d!23123 (= res!44793 (not lt!41428))))

(declare-fun lt!41429 () Bool)

(assert (=> d!23123 (= lt!41428 lt!41429)))

(declare-fun lt!41431 () Unit!2517)

(declare-fun e!56847 () Unit!2517)

(assert (=> d!23123 (= lt!41431 e!56847)))

(declare-fun c!14356 () Bool)

(assert (=> d!23123 (= c!14356 lt!41429)))

(assert (=> d!23123 (= lt!41429 (containsKey!144 (toList!746 lt!40841) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23123 (= (contains!753 lt!40841 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) lt!41428)))

(declare-fun b!87261 () Bool)

(declare-fun lt!41430 () Unit!2517)

(assert (=> b!87261 (= e!56847 lt!41430)))

(assert (=> b!87261 (= lt!41430 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40841) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> b!87261 (isDefined!93 (getValueByKey!140 (toList!746 lt!40841) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87262 () Bool)

(declare-fun Unit!2585 () Unit!2517)

(assert (=> b!87262 (= e!56847 Unit!2585)))

(declare-fun b!87263 () Bool)

(assert (=> b!87263 (= e!56848 (isDefined!93 (getValueByKey!140 (toList!746 lt!40841) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23123 c!14356) b!87261))

(assert (= (and d!23123 (not c!14356)) b!87262))

(assert (= (and d!23123 (not res!44793)) b!87263))

(declare-fun m!92919 () Bool)

(assert (=> d!23123 m!92919))

(declare-fun m!92921 () Bool)

(assert (=> b!87261 m!92921))

(assert (=> b!87261 m!90741))

(assert (=> b!87261 m!90741))

(declare-fun m!92923 () Bool)

(assert (=> b!87261 m!92923))

(assert (=> b!87263 m!90741))

(assert (=> b!87263 m!90741))

(assert (=> b!87263 m!92923))

(assert (=> d!22307 d!23123))

(declare-fun b!87264 () Bool)

(declare-fun e!56849 () Option!146)

(assert (=> b!87264 (= e!56849 (Some!145 (_2!1110 (h!2106 lt!40840))))))

(declare-fun c!14357 () Bool)

(declare-fun d!23125 () Bool)

(assert (=> d!23125 (= c!14357 (and ((_ is Cons!1515) lt!40840) (= (_1!1110 (h!2106 lt!40840)) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (=> d!23125 (= (getValueByKey!140 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) e!56849)))

(declare-fun b!87267 () Bool)

(declare-fun e!56850 () Option!146)

(assert (=> b!87267 (= e!56850 None!144)))

(declare-fun b!87266 () Bool)

(assert (=> b!87266 (= e!56850 (getValueByKey!140 (t!5240 lt!40840) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87265 () Bool)

(assert (=> b!87265 (= e!56849 e!56850)))

(declare-fun c!14358 () Bool)

(assert (=> b!87265 (= c!14358 (and ((_ is Cons!1515) lt!40840) (not (= (_1!1110 (h!2106 lt!40840)) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))))

(assert (= (and d!23125 c!14357) b!87264))

(assert (= (and d!23125 (not c!14357)) b!87265))

(assert (= (and b!87265 c!14358) b!87266))

(assert (= (and b!87265 (not c!14358)) b!87267))

(declare-fun m!92925 () Bool)

(assert (=> b!87266 m!92925))

(assert (=> d!22307 d!23125))

(declare-fun d!23127 () Bool)

(assert (=> d!23127 (= (getValueByKey!140 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) (Some!145 (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun lt!41432 () Unit!2517)

(assert (=> d!23127 (= lt!41432 (choose!500 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun e!56851 () Bool)

(assert (=> d!23127 e!56851))

(declare-fun res!44794 () Bool)

(assert (=> d!23127 (=> (not res!44794) (not e!56851))))

(assert (=> d!23127 (= res!44794 (isStrictlySorted!298 lt!40840))))

(assert (=> d!23127 (= (lemmaContainsTupThenGetReturnValue!57 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) lt!41432)))

(declare-fun b!87268 () Bool)

(declare-fun res!44795 () Bool)

(assert (=> b!87268 (=> (not res!44795) (not e!56851))))

(assert (=> b!87268 (= res!44795 (containsKey!144 lt!40840 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87269 () Bool)

(assert (=> b!87269 (= e!56851 (contains!754 lt!40840 (tuple2!2199 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23127 res!44794) b!87268))

(assert (= (and b!87268 res!44795) b!87269))

(assert (=> d!23127 m!90735))

(declare-fun m!92927 () Bool)

(assert (=> d!23127 m!92927))

(declare-fun m!92929 () Bool)

(assert (=> d!23127 m!92929))

(declare-fun m!92931 () Bool)

(assert (=> b!87268 m!92931))

(declare-fun m!92933 () Bool)

(assert (=> b!87269 m!92933))

(assert (=> d!22307 d!23127))

(declare-fun b!87270 () Bool)

(declare-fun e!56853 () List!1519)

(declare-fun call!8333 () List!1519)

(assert (=> b!87270 (= e!56853 call!8333)))

(declare-fun b!87271 () Bool)

(assert (=> b!87271 (= e!56853 call!8333)))

(declare-fun b!87272 () Bool)

(declare-fun res!44796 () Bool)

(declare-fun e!56854 () Bool)

(assert (=> b!87272 (=> (not res!44796) (not e!56854))))

(declare-fun lt!41433 () List!1519)

(assert (=> b!87272 (= res!44796 (containsKey!144 lt!41433 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87273 () Bool)

(declare-fun e!56855 () List!1519)

(declare-fun e!56856 () List!1519)

(assert (=> b!87273 (= e!56855 e!56856)))

(declare-fun c!14360 () Bool)

(assert (=> b!87273 (= c!14360 (and ((_ is Cons!1515) (toList!746 e!55824)) (= (_1!1110 (h!2106 (toList!746 e!55824))) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun b!87274 () Bool)

(declare-fun call!8332 () List!1519)

(assert (=> b!87274 (= e!56855 call!8332)))

(declare-fun c!14362 () Bool)

(declare-fun b!87275 () Bool)

(assert (=> b!87275 (= c!14362 (and ((_ is Cons!1515) (toList!746 e!55824)) (bvsgt (_1!1110 (h!2106 (toList!746 e!55824))) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (=> b!87275 (= e!56856 e!56853)))

(declare-fun b!87276 () Bool)

(declare-fun e!56852 () List!1519)

(assert (=> b!87276 (= e!56852 (insertStrictlySorted!60 (t!5240 (toList!746 e!55824)) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87277 () Bool)

(assert (=> b!87277 (= e!56852 (ite c!14360 (t!5240 (toList!746 e!55824)) (ite c!14362 (Cons!1515 (h!2106 (toList!746 e!55824)) (t!5240 (toList!746 e!55824))) Nil!1516)))))

(declare-fun c!14359 () Bool)

(declare-fun bm!8329 () Bool)

(assert (=> bm!8329 (= call!8332 ($colon$colon!72 e!56852 (ite c!14359 (h!2106 (toList!746 e!55824)) (tuple2!2199 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))))

(declare-fun c!14361 () Bool)

(assert (=> bm!8329 (= c!14361 c!14359)))

(declare-fun bm!8330 () Bool)

(declare-fun call!8334 () List!1519)

(assert (=> bm!8330 (= call!8334 call!8332)))

(declare-fun bm!8331 () Bool)

(assert (=> bm!8331 (= call!8333 call!8334)))

(declare-fun b!87279 () Bool)

(assert (=> b!87279 (= e!56856 call!8334)))

(declare-fun d!23129 () Bool)

(assert (=> d!23129 e!56854))

(declare-fun res!44797 () Bool)

(assert (=> d!23129 (=> (not res!44797) (not e!56854))))

(assert (=> d!23129 (= res!44797 (isStrictlySorted!298 lt!41433))))

(assert (=> d!23129 (= lt!41433 e!56855)))

(assert (=> d!23129 (= c!14359 (and ((_ is Cons!1515) (toList!746 e!55824)) (bvslt (_1!1110 (h!2106 (toList!746 e!55824))) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (=> d!23129 (isStrictlySorted!298 (toList!746 e!55824))))

(assert (=> d!23129 (= (insertStrictlySorted!60 (toList!746 e!55824) (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))) lt!41433)))

(declare-fun b!87278 () Bool)

(assert (=> b!87278 (= e!56854 (contains!754 lt!41433 (tuple2!2199 (_1!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (_2!1110 (ite c!13892 (ite c!13883 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40326) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40326)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23129 c!14359) b!87274))

(assert (= (and d!23129 (not c!14359)) b!87273))

(assert (= (and b!87273 c!14360) b!87279))

(assert (= (and b!87273 (not c!14360)) b!87275))

(assert (= (and b!87275 c!14362) b!87270))

(assert (= (and b!87275 (not c!14362)) b!87271))

(assert (= (or b!87270 b!87271) bm!8331))

(assert (= (or b!87279 bm!8331) bm!8330))

(assert (= (or b!87274 bm!8330) bm!8329))

(assert (= (and bm!8329 c!14361) b!87276))

(assert (= (and bm!8329 (not c!14361)) b!87277))

(assert (= (and d!23129 res!44797) b!87272))

(assert (= (and b!87272 res!44796) b!87278))

(declare-fun m!92935 () Bool)

(assert (=> d!23129 m!92935))

(declare-fun m!92937 () Bool)

(assert (=> d!23129 m!92937))

(declare-fun m!92939 () Bool)

(assert (=> b!87272 m!92939))

(declare-fun m!92941 () Bool)

(assert (=> b!87276 m!92941))

(declare-fun m!92943 () Bool)

(assert (=> b!87278 m!92943))

(declare-fun m!92945 () Bool)

(assert (=> bm!8329 m!92945))

(assert (=> d!22307 d!23129))

(declare-fun d!23131 () Bool)

(assert (=> d!23131 (= (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40447)) (v!2649 (getValueByKey!140 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40447)))))

(assert (=> d!22377 d!23131))

(declare-fun b!87280 () Bool)

(declare-fun e!56857 () Option!146)

(assert (=> b!87280 (= e!56857 (Some!145 (_2!1110 (h!2106 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(declare-fun d!23133 () Bool)

(declare-fun c!14363 () Bool)

(assert (=> d!23133 (= c!14363 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40447)))))

(assert (=> d!23133 (= (getValueByKey!140 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40447) e!56857)))

(declare-fun b!87283 () Bool)

(declare-fun e!56858 () Option!146)

(assert (=> b!87283 (= e!56858 None!144)))

(declare-fun b!87282 () Bool)

(assert (=> b!87282 (= e!56858 (getValueByKey!140 (t!5240 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!40447))))

(declare-fun b!87281 () Bool)

(assert (=> b!87281 (= e!56857 e!56858)))

(declare-fun c!14364 () Bool)

(assert (=> b!87281 (= c!14364 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (not (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40449 (tuple2!2199 lt!40448 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40447))))))

(assert (= (and d!23133 c!14363) b!87280))

(assert (= (and d!23133 (not c!14363)) b!87281))

(assert (= (and b!87281 c!14364) b!87282))

(assert (= (and b!87281 (not c!14364)) b!87283))

(declare-fun m!92947 () Bool)

(assert (=> b!87282 m!92947))

(assert (=> d!22377 d!23133))

(assert (=> b!85908 d!23021))

(assert (=> b!85908 d!23023))

(declare-fun d!23135 () Bool)

(declare-fun res!44798 () Bool)

(declare-fun e!56859 () Bool)

(assert (=> d!23135 (=> res!44798 e!56859)))

(assert (=> d!23135 (= res!44798 (and ((_ is Cons!1515) lt!40625) (= (_1!1110 (h!2106 lt!40625)) (_1!1110 lt!40318))))))

(assert (=> d!23135 (= (containsKey!144 lt!40625 (_1!1110 lt!40318)) e!56859)))

(declare-fun b!87284 () Bool)

(declare-fun e!56860 () Bool)

(assert (=> b!87284 (= e!56859 e!56860)))

(declare-fun res!44799 () Bool)

(assert (=> b!87284 (=> (not res!44799) (not e!56860))))

(assert (=> b!87284 (= res!44799 (and (or (not ((_ is Cons!1515) lt!40625)) (bvsle (_1!1110 (h!2106 lt!40625)) (_1!1110 lt!40318))) ((_ is Cons!1515) lt!40625) (bvslt (_1!1110 (h!2106 lt!40625)) (_1!1110 lt!40318))))))

(declare-fun b!87285 () Bool)

(assert (=> b!87285 (= e!56860 (containsKey!144 (t!5240 lt!40625) (_1!1110 lt!40318)))))

(assert (= (and d!23135 (not res!44798)) b!87284))

(assert (= (and b!87284 res!44799) b!87285))

(declare-fun m!92949 () Bool)

(assert (=> b!87285 m!92949))

(assert (=> b!85748 d!23135))

(assert (=> bm!8186 d!22331))

(declare-fun lt!41434 () Bool)

(declare-fun d!23137 () Bool)

(assert (=> d!23137 (= lt!41434 (select (content!89 (toList!746 lt!40708)) (tuple2!2199 lt!40586 lt!40590)))))

(declare-fun e!56861 () Bool)

(assert (=> d!23137 (= lt!41434 e!56861)))

(declare-fun res!44800 () Bool)

(assert (=> d!23137 (=> (not res!44800) (not e!56861))))

(assert (=> d!23137 (= res!44800 ((_ is Cons!1515) (toList!746 lt!40708)))))

(assert (=> d!23137 (= (contains!754 (toList!746 lt!40708) (tuple2!2199 lt!40586 lt!40590)) lt!41434)))

(declare-fun b!87286 () Bool)

(declare-fun e!56862 () Bool)

(assert (=> b!87286 (= e!56861 e!56862)))

(declare-fun res!44801 () Bool)

(assert (=> b!87286 (=> res!44801 e!56862)))

(assert (=> b!87286 (= res!44801 (= (h!2106 (toList!746 lt!40708)) (tuple2!2199 lt!40586 lt!40590)))))

(declare-fun b!87287 () Bool)

(assert (=> b!87287 (= e!56862 (contains!754 (t!5240 (toList!746 lt!40708)) (tuple2!2199 lt!40586 lt!40590)))))

(assert (= (and d!23137 res!44800) b!87286))

(assert (= (and b!87286 (not res!44801)) b!87287))

(declare-fun m!92951 () Bool)

(assert (=> d!23137 m!92951))

(declare-fun m!92953 () Bool)

(assert (=> d!23137 m!92953))

(declare-fun m!92955 () Bool)

(assert (=> b!87287 m!92955))

(assert (=> b!85880 d!23137))

(declare-fun d!23139 () Bool)

(assert (=> d!23139 (= (+!110 (getCurrentListMap!439 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (getCurrentListMap!439 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(assert (=> d!23139 true))

(declare-fun _$5!92 () Unit!2517)

(assert (=> d!23139 (= (choose!506 (_keys!4010 newMap!16) (_values!2321 newMap!16) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) (index!3110 lt!40535) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326 (defaultEntry!2338 newMap!16)) _$5!92)))

(declare-fun bs!3702 () Bool)

(assert (= bs!3702 d!23139))

(assert (=> bs!3702 m!89981))

(assert (=> bs!3702 m!89981))

(assert (=> bs!3702 m!90667))

(assert (=> bs!3702 m!90075))

(assert (=> bs!3702 m!90759))

(assert (=> d!22315 d!23139))

(assert (=> d!22315 d!22445))

(assert (=> b!86007 d!22957))

(assert (=> b!86007 d!22959))

(declare-fun d!23141 () Bool)

(declare-fun lt!41435 () Bool)

(assert (=> d!23141 (= lt!41435 (select (content!89 lt!40641) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun e!56863 () Bool)

(assert (=> d!23141 (= lt!41435 e!56863)))

(declare-fun res!44802 () Bool)

(assert (=> d!23141 (=> (not res!44802) (not e!56863))))

(assert (=> d!23141 (= res!44802 ((_ is Cons!1515) lt!40641))))

(assert (=> d!23141 (= (contains!754 lt!40641 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))) lt!41435)))

(declare-fun b!87288 () Bool)

(declare-fun e!56864 () Bool)

(assert (=> b!87288 (= e!56863 e!56864)))

(declare-fun res!44803 () Bool)

(assert (=> b!87288 (=> res!44803 e!56864)))

(assert (=> b!87288 (= res!44803 (= (h!2106 lt!40641) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(declare-fun b!87289 () Bool)

(assert (=> b!87289 (= e!56864 (contains!754 (t!5240 lt!40641) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!23141 res!44802) b!87288))

(assert (= (and b!87288 (not res!44803)) b!87289))

(declare-fun m!92957 () Bool)

(assert (=> d!23141 m!92957))

(declare-fun m!92959 () Bool)

(assert (=> d!23141 m!92959))

(declare-fun m!92961 () Bool)

(assert (=> b!87289 m!92961))

(assert (=> b!85810 d!23141))

(declare-fun d!23143 () Bool)

(declare-fun lt!41436 () Bool)

(assert (=> d!23143 (= lt!41436 (select (content!89 (toList!746 lt!40986)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56865 () Bool)

(assert (=> d!23143 (= lt!41436 e!56865)))

(declare-fun res!44804 () Bool)

(assert (=> d!23143 (=> (not res!44804) (not e!56865))))

(assert (=> d!23143 (= res!44804 ((_ is Cons!1515) (toList!746 lt!40986)))))

(assert (=> d!23143 (= (contains!754 (toList!746 lt!40986) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41436)))

(declare-fun b!87290 () Bool)

(declare-fun e!56866 () Bool)

(assert (=> b!87290 (= e!56865 e!56866)))

(declare-fun res!44805 () Bool)

(assert (=> b!87290 (=> res!44805 e!56866)))

(assert (=> b!87290 (= res!44805 (= (h!2106 (toList!746 lt!40986)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!87291 () Bool)

(assert (=> b!87291 (= e!56866 (contains!754 (t!5240 (toList!746 lt!40986)) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!23143 res!44804) b!87290))

(assert (= (and b!87290 (not res!44805)) b!87291))

(declare-fun m!92963 () Bool)

(assert (=> d!23143 m!92963))

(declare-fun m!92965 () Bool)

(assert (=> d!23143 m!92965))

(declare-fun m!92967 () Bool)

(assert (=> b!87291 m!92967))

(assert (=> b!86219 d!23143))

(declare-fun d!23145 () Bool)

(assert (=> d!23145 (= ($colon$colon!72 e!56145 (ite c!14030 (h!2106 (toList!746 lt!40319)) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322)))) (Cons!1515 (ite c!14030 (h!2106 (toList!746 lt!40319)) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))) e!56145))))

(assert (=> bm!8205 d!23145))

(declare-fun d!23147 () Bool)

(declare-fun lt!41437 () Bool)

(assert (=> d!23147 (= lt!41437 (select (content!89 (toList!746 lt!40689)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun e!56867 () Bool)

(assert (=> d!23147 (= lt!41437 e!56867)))

(declare-fun res!44806 () Bool)

(assert (=> d!23147 (=> (not res!44806) (not e!56867))))

(assert (=> d!23147 (= res!44806 ((_ is Cons!1515) (toList!746 lt!40689)))))

(assert (=> d!23147 (= (contains!754 (toList!746 lt!40689) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41437)))

(declare-fun b!87292 () Bool)

(declare-fun e!56868 () Bool)

(assert (=> b!87292 (= e!56867 e!56868)))

(declare-fun res!44807 () Bool)

(assert (=> b!87292 (=> res!44807 e!56868)))

(assert (=> b!87292 (= res!44807 (= (h!2106 (toList!746 lt!40689)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun b!87293 () Bool)

(assert (=> b!87293 (= e!56868 (contains!754 (t!5240 (toList!746 lt!40689)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!23147 res!44806) b!87292))

(assert (= (and b!87292 (not res!44807)) b!87293))

(declare-fun m!92969 () Bool)

(assert (=> d!23147 m!92969))

(declare-fun m!92971 () Bool)

(assert (=> d!23147 m!92971))

(declare-fun m!92973 () Bool)

(assert (=> b!87293 m!92973))

(assert (=> b!85857 d!23147))

(declare-fun b!87312 () Bool)

(declare-fun e!56882 () SeekEntryResult!243)

(assert (=> b!87312 (= e!56882 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16)) #b00000000000000000000000000000000 (mask!6366 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)))))

(declare-fun b!87313 () Bool)

(declare-fun e!56879 () SeekEntryResult!243)

(assert (=> b!87313 (= e!56879 e!56882)))

(declare-fun lt!41442 () (_ BitVec 64))

(declare-fun c!14371 () Bool)

(assert (=> b!87313 (= c!14371 (or (= lt!41442 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) (= (bvadd lt!41442 lt!41442) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87314 () Bool)

(declare-fun e!56881 () Bool)

(declare-fun lt!41443 () SeekEntryResult!243)

(assert (=> b!87314 (= e!56881 (bvsge (x!11996 lt!41443) #b01111111111111111111111111111110))))

(declare-fun d!23149 () Bool)

(assert (=> d!23149 e!56881))

(declare-fun c!14373 () Bool)

(assert (=> d!23149 (= c!14373 (and ((_ is Intermediate!243) lt!41443) (undefined!1055 lt!41443)))))

(assert (=> d!23149 (= lt!41443 e!56879)))

(declare-fun c!14372 () Bool)

(assert (=> d!23149 (= c!14372 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!23149 (= lt!41442 (select (arr!1919 (_keys!4010 newMap!16)) (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16))))))

(assert (=> d!23149 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!23149 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (_keys!4010 newMap!16) (mask!6366 newMap!16)) lt!41443)))

(declare-fun b!87315 () Bool)

(assert (=> b!87315 (and (bvsge (index!3111 lt!41443) #b00000000000000000000000000000000) (bvslt (index!3111 lt!41443) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun e!56880 () Bool)

(assert (=> b!87315 (= e!56880 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3111 lt!41443)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87316 () Bool)

(declare-fun e!56883 () Bool)

(assert (=> b!87316 (= e!56881 e!56883)))

(declare-fun res!44816 () Bool)

(assert (=> b!87316 (= res!44816 (and ((_ is Intermediate!243) lt!41443) (not (undefined!1055 lt!41443)) (bvslt (x!11996 lt!41443) #b01111111111111111111111111111110) (bvsge (x!11996 lt!41443) #b00000000000000000000000000000000) (bvsge (x!11996 lt!41443) #b00000000000000000000000000000000)))))

(assert (=> b!87316 (=> (not res!44816) (not e!56883))))

(declare-fun b!87317 () Bool)

(assert (=> b!87317 (= e!56882 (Intermediate!243 false (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!87318 () Bool)

(assert (=> b!87318 (= e!56879 (Intermediate!243 true (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!87319 () Bool)

(assert (=> b!87319 (and (bvsge (index!3111 lt!41443) #b00000000000000000000000000000000) (bvslt (index!3111 lt!41443) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun res!44815 () Bool)

(assert (=> b!87319 (= res!44815 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3111 lt!41443)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (=> b!87319 (=> res!44815 e!56880)))

(assert (=> b!87319 (= e!56883 e!56880)))

(declare-fun b!87320 () Bool)

(assert (=> b!87320 (and (bvsge (index!3111 lt!41443) #b00000000000000000000000000000000) (bvslt (index!3111 lt!41443) (size!2163 (_keys!4010 newMap!16))))))

(declare-fun res!44814 () Bool)

(assert (=> b!87320 (= res!44814 (= (select (arr!1919 (_keys!4010 newMap!16)) (index!3111 lt!41443)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87320 (=> res!44814 e!56880)))

(assert (= (and d!23149 c!14372) b!87318))

(assert (= (and d!23149 (not c!14372)) b!87313))

(assert (= (and b!87313 c!14371) b!87317))

(assert (= (and b!87313 (not c!14371)) b!87312))

(assert (= (and d!23149 c!14373) b!87314))

(assert (= (and d!23149 (not c!14373)) b!87316))

(assert (= (and b!87316 res!44816) b!87319))

(assert (= (and b!87319 (not res!44815)) b!87320))

(assert (= (and b!87320 (not res!44814)) b!87315))

(declare-fun m!92975 () Bool)

(assert (=> b!87319 m!92975))

(assert (=> b!87312 m!90867))

(declare-fun m!92977 () Bool)

(assert (=> b!87312 m!92977))

(assert (=> b!87312 m!92977))

(assert (=> b!87312 m!89857))

(declare-fun m!92979 () Bool)

(assert (=> b!87312 m!92979))

(assert (=> b!87320 m!92975))

(assert (=> d!23149 m!90867))

(declare-fun m!92981 () Bool)

(assert (=> d!23149 m!92981))

(assert (=> d!23149 m!90385))

(assert (=> b!87315 m!92975))

(assert (=> d!22339 d!23149))

(declare-fun d!23151 () Bool)

(declare-fun lt!41449 () (_ BitVec 32))

(declare-fun lt!41448 () (_ BitVec 32))

(assert (=> d!23151 (= lt!41449 (bvmul (bvxor lt!41448 (bvlshr lt!41448 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!23151 (= lt!41448 ((_ extract 31 0) (bvand (bvxor (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvlshr (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!23151 (and (bvsge (mask!6366 newMap!16) #b00000000000000000000000000000000) (let ((res!44817 (let ((h!2109 ((_ extract 31 0) (bvand (bvxor (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (bvlshr (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12099 (bvmul (bvxor h!2109 (bvlshr h!2109 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12099 (bvlshr x!12099 #b00000000000000000000000000001101)) (mask!6366 newMap!16)))))) (and (bvslt res!44817 (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001)) (bvsge res!44817 #b00000000000000000000000000000000))))))

(assert (=> d!23151 (= (toIndex!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) (mask!6366 newMap!16)) (bvand (bvxor lt!41449 (bvlshr lt!41449 #b00000000000000000000000000001101)) (mask!6366 newMap!16)))))

(assert (=> d!22339 d!23151))

(assert (=> d!22339 d!22445))

(declare-fun b!87321 () Bool)

(declare-fun e!56886 () Bool)

(declare-fun call!8335 () Bool)

(assert (=> b!87321 (= e!56886 call!8335)))

(declare-fun b!87322 () Bool)

(declare-fun e!56884 () Bool)

(assert (=> b!87322 (= e!56886 e!56884)))

(declare-fun lt!41452 () (_ BitVec 64))

(assert (=> b!87322 (= lt!41452 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000))))

(declare-fun lt!41451 () Unit!2517)

(assert (=> b!87322 (= lt!41451 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4010 (_2!1109 lt!40519)) lt!41452 #b00000000000000000000000000000000))))

(assert (=> b!87322 (arrayContainsKey!0 (_keys!4010 (_2!1109 lt!40519)) lt!41452 #b00000000000000000000000000000000)))

(declare-fun lt!41450 () Unit!2517)

(assert (=> b!87322 (= lt!41450 lt!41451)))

(declare-fun res!44818 () Bool)

(assert (=> b!87322 (= res!44818 (= (seekEntryOrOpen!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000) (_keys!4010 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519))) (Found!243 #b00000000000000000000000000000000)))))

(assert (=> b!87322 (=> (not res!44818) (not e!56884))))

(declare-fun b!87323 () Bool)

(assert (=> b!87323 (= e!56884 call!8335)))

(declare-fun d!23153 () Bool)

(declare-fun res!44819 () Bool)

(declare-fun e!56885 () Bool)

(assert (=> d!23153 (=> res!44819 e!56885)))

(assert (=> d!23153 (= res!44819 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(assert (=> d!23153 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4010 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519))) e!56885)))

(declare-fun bm!8332 () Bool)

(assert (=> bm!8332 (= call!8335 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4010 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519))))))

(declare-fun b!87324 () Bool)

(assert (=> b!87324 (= e!56885 e!56886)))

(declare-fun c!14374 () Bool)

(assert (=> b!87324 (= c!14374 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(assert (= (and d!23153 (not res!44819)) b!87324))

(assert (= (and b!87324 c!14374) b!87322))

(assert (= (and b!87324 (not c!14374)) b!87321))

(assert (= (and b!87322 res!44818) b!87323))

(assert (= (or b!87323 b!87321) bm!8332))

(assert (=> b!87322 m!91889))

(declare-fun m!92983 () Bool)

(assert (=> b!87322 m!92983))

(declare-fun m!92985 () Bool)

(assert (=> b!87322 m!92985))

(assert (=> b!87322 m!91889))

(declare-fun m!92987 () Bool)

(assert (=> b!87322 m!92987))

(declare-fun m!92989 () Bool)

(assert (=> bm!8332 m!92989))

(assert (=> b!87324 m!91889))

(assert (=> b!87324 m!91889))

(assert (=> b!87324 m!91895))

(assert (=> b!85888 d!23153))

(declare-fun lt!41453 () Bool)

(declare-fun d!23155 () Bool)

(assert (=> d!23155 (= lt!41453 (select (content!89 (toList!746 lt!40945)) (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun e!56887 () Bool)

(assert (=> d!23155 (= lt!41453 e!56887)))

(declare-fun res!44820 () Bool)

(assert (=> d!23155 (=> (not res!44820) (not e!56887))))

(assert (=> d!23155 (= res!44820 ((_ is Cons!1515) (toList!746 lt!40945)))))

(assert (=> d!23155 (= (contains!754 (toList!746 lt!40945) (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) lt!41453)))

(declare-fun b!87325 () Bool)

(declare-fun e!56888 () Bool)

(assert (=> b!87325 (= e!56887 e!56888)))

(declare-fun res!44821 () Bool)

(assert (=> b!87325 (=> res!44821 e!56888)))

(assert (=> b!87325 (= res!44821 (= (h!2106 (toList!746 lt!40945)) (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(declare-fun b!87326 () Bool)

(assert (=> b!87326 (= e!56888 (contains!754 (t!5240 (toList!746 lt!40945)) (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))

(assert (= (and d!23155 res!44820) b!87325))

(assert (= (and b!87325 (not res!44821)) b!87326))

(declare-fun m!92991 () Bool)

(assert (=> d!23155 m!92991))

(declare-fun m!92993 () Bool)

(assert (=> d!23155 m!92993))

(declare-fun m!92995 () Bool)

(assert (=> b!87326 m!92995))

(assert (=> b!86148 d!23155))

(declare-fun d!23157 () Bool)

(declare-fun lt!41454 () Bool)

(assert (=> d!23157 (= lt!41454 (select (content!89 lt!40930) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun e!56889 () Bool)

(assert (=> d!23157 (= lt!41454 e!56889)))

(declare-fun res!44822 () Bool)

(assert (=> d!23157 (=> (not res!44822) (not e!56889))))

(assert (=> d!23157 (= res!44822 ((_ is Cons!1515) lt!40930))))

(assert (=> d!23157 (= (contains!754 lt!40930 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) lt!41454)))

(declare-fun b!87327 () Bool)

(declare-fun e!56890 () Bool)

(assert (=> b!87327 (= e!56889 e!56890)))

(declare-fun res!44823 () Bool)

(assert (=> b!87327 (=> res!44823 e!56890)))

(assert (=> b!87327 (= res!44823 (= (h!2106 lt!40930) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun b!87328 () Bool)

(assert (=> b!87328 (= e!56890 (contains!754 (t!5240 lt!40930) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!23157 res!44822) b!87327))

(assert (= (and b!87327 (not res!44823)) b!87328))

(declare-fun m!92997 () Bool)

(assert (=> d!23157 m!92997))

(declare-fun m!92999 () Bool)

(assert (=> d!23157 m!92999))

(declare-fun m!93001 () Bool)

(assert (=> b!87328 m!93001))

(assert (=> b!86116 d!23157))

(assert (=> b!86004 d!22627))

(assert (=> b!86004 d!22319))

(declare-fun b!87329 () Bool)

(declare-fun c!14379 () Bool)

(assert (=> b!87329 (= c!14379 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56900 () ListLongMap!1461)

(declare-fun e!56901 () ListLongMap!1461)

(assert (=> b!87329 (= e!56900 e!56901)))

(declare-fun b!87330 () Bool)

(declare-fun res!44826 () Bool)

(declare-fun e!56893 () Bool)

(assert (=> b!87330 (=> (not res!44826) (not e!56893))))

(declare-fun e!56898 () Bool)

(assert (=> b!87330 (= res!44826 e!56898)))

(declare-fun res!44824 () Bool)

(assert (=> b!87330 (=> res!44824 e!56898)))

(declare-fun e!56892 () Bool)

(assert (=> b!87330 (= res!44824 (not e!56892))))

(declare-fun res!44827 () Bool)

(assert (=> b!87330 (=> (not res!44827) (not e!56892))))

(assert (=> b!87330 (= res!44827 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun bm!8333 () Bool)

(declare-fun call!8340 () ListLongMap!1461)

(assert (=> bm!8333 (= call!8340 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!87331 () Bool)

(declare-fun e!56903 () Bool)

(declare-fun lt!41474 () ListLongMap!1461)

(assert (=> b!87331 (= e!56903 (= (apply!82 lt!41474 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!87332 () Bool)

(declare-fun e!56896 () Bool)

(assert (=> b!87332 (= e!56898 e!56896)))

(declare-fun res!44828 () Bool)

(assert (=> b!87332 (=> (not res!44828) (not e!56896))))

(assert (=> b!87332 (= res!44828 (contains!753 lt!41474 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87332 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!87333 () Bool)

(declare-fun e!56902 () Bool)

(assert (=> b!87333 (= e!56893 e!56902)))

(declare-fun c!14376 () Bool)

(assert (=> b!87333 (= c!14376 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87334 () Bool)

(declare-fun e!56891 () Bool)

(assert (=> b!87334 (= e!56902 e!56891)))

(declare-fun res!44829 () Bool)

(declare-fun call!8339 () Bool)

(assert (=> b!87334 (= res!44829 call!8339)))

(assert (=> b!87334 (=> (not res!44829) (not e!56891))))

(declare-fun call!8337 () ListLongMap!1461)

(declare-fun bm!8334 () Bool)

(declare-fun c!14378 () Bool)

(declare-fun call!8336 () ListLongMap!1461)

(declare-fun call!8342 () ListLongMap!1461)

(declare-fun c!14380 () Bool)

(assert (=> bm!8334 (= call!8336 (+!110 (ite c!14380 call!8340 (ite c!14378 call!8342 call!8337)) (ite (or c!14380 c!14378) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!87335 () Bool)

(declare-fun call!8341 () ListLongMap!1461)

(assert (=> b!87335 (= e!56901 call!8341)))

(declare-fun b!87336 () Bool)

(declare-fun e!56899 () Bool)

(declare-fun call!8338 () Bool)

(assert (=> b!87336 (= e!56899 (not call!8338))))

(declare-fun b!87337 () Bool)

(declare-fun e!56897 () Bool)

(assert (=> b!87337 (= e!56897 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87338 () Bool)

(declare-fun res!44832 () Bool)

(assert (=> b!87338 (=> (not res!44832) (not e!56893))))

(assert (=> b!87338 (= res!44832 e!56899)))

(declare-fun c!14375 () Bool)

(assert (=> b!87338 (= c!14375 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87339 () Bool)

(assert (=> b!87339 (= e!56902 (not call!8339))))

(declare-fun b!87340 () Bool)

(assert (=> b!87340 (= e!56901 call!8337)))

(declare-fun b!87341 () Bool)

(assert (=> b!87341 (= e!56899 e!56903)))

(declare-fun res!44830 () Bool)

(assert (=> b!87341 (= res!44830 call!8338)))

(assert (=> b!87341 (=> (not res!44830) (not e!56903))))

(declare-fun b!87342 () Bool)

(declare-fun e!56895 () ListLongMap!1461)

(assert (=> b!87342 (= e!56895 (+!110 call!8336 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!23159 () Bool)

(assert (=> d!23159 e!56893))

(declare-fun res!44825 () Bool)

(assert (=> d!23159 (=> (not res!44825) (not e!56893))))

(assert (=> d!23159 (= res!44825 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!41456 () ListLongMap!1461)

(assert (=> d!23159 (= lt!41474 lt!41456)))

(declare-fun lt!41466 () Unit!2517)

(declare-fun e!56894 () Unit!2517)

(assert (=> d!23159 (= lt!41466 e!56894)))

(declare-fun c!14377 () Bool)

(assert (=> d!23159 (= c!14377 e!56897)))

(declare-fun res!44831 () Bool)

(assert (=> d!23159 (=> (not res!44831) (not e!56897))))

(assert (=> d!23159 (= res!44831 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!23159 (= lt!41456 e!56895)))

(assert (=> d!23159 (= c!14380 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23159 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!23159 (= (getCurrentListMap!439 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41474)))

(declare-fun b!87343 () Bool)

(assert (=> b!87343 (= e!56900 call!8341)))

(declare-fun b!87344 () Bool)

(assert (=> b!87344 (= e!56896 (= (apply!82 lt!41474 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87344 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))))))))

(assert (=> b!87344 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!87345 () Bool)

(assert (=> b!87345 (= e!56895 e!56900)))

(assert (=> b!87345 (= c!14378 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87346 () Bool)

(assert (=> b!87346 (= e!56892 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8335 () Bool)

(assert (=> bm!8335 (= call!8338 (contains!753 lt!41474 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8336 () Bool)

(assert (=> bm!8336 (= call!8341 call!8336)))

(declare-fun b!87347 () Bool)

(declare-fun Unit!2586 () Unit!2517)

(assert (=> b!87347 (= e!56894 Unit!2586)))

(declare-fun bm!8337 () Bool)

(assert (=> bm!8337 (= call!8337 call!8342)))

(declare-fun bm!8338 () Bool)

(assert (=> bm!8338 (= call!8339 (contains!753 lt!41474 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8339 () Bool)

(assert (=> bm!8339 (= call!8342 call!8340)))

(declare-fun b!87348 () Bool)

(assert (=> b!87348 (= e!56891 (= (apply!82 lt!41474 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!87349 () Bool)

(declare-fun lt!41459 () Unit!2517)

(assert (=> b!87349 (= e!56894 lt!41459)))

(declare-fun lt!41461 () ListLongMap!1461)

(assert (=> b!87349 (= lt!41461 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41470 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41470 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41468 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41468 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41460 () Unit!2517)

(assert (=> b!87349 (= lt!41460 (addStillContains!58 lt!41461 lt!41470 (zeroValue!2230 newMap!16) lt!41468))))

(assert (=> b!87349 (contains!753 (+!110 lt!41461 (tuple2!2199 lt!41470 (zeroValue!2230 newMap!16))) lt!41468)))

(declare-fun lt!41467 () Unit!2517)

(assert (=> b!87349 (= lt!41467 lt!41460)))

(declare-fun lt!41473 () ListLongMap!1461)

(assert (=> b!87349 (= lt!41473 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41472 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41472 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41471 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41471 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41476 () Unit!2517)

(assert (=> b!87349 (= lt!41476 (addApplyDifferent!58 lt!41473 lt!41472 (minValue!2230 newMap!16) lt!41471))))

(assert (=> b!87349 (= (apply!82 (+!110 lt!41473 (tuple2!2199 lt!41472 (minValue!2230 newMap!16))) lt!41471) (apply!82 lt!41473 lt!41471))))

(declare-fun lt!41457 () Unit!2517)

(assert (=> b!87349 (= lt!41457 lt!41476)))

(declare-fun lt!41465 () ListLongMap!1461)

(assert (=> b!87349 (= lt!41465 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41455 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41455 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41463 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41463 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41458 () Unit!2517)

(assert (=> b!87349 (= lt!41458 (addApplyDifferent!58 lt!41465 lt!41455 (zeroValue!2230 newMap!16) lt!41463))))

(assert (=> b!87349 (= (apply!82 (+!110 lt!41465 (tuple2!2199 lt!41455 (zeroValue!2230 newMap!16))) lt!41463) (apply!82 lt!41465 lt!41463))))

(declare-fun lt!41462 () Unit!2517)

(assert (=> b!87349 (= lt!41462 lt!41458)))

(declare-fun lt!41475 () ListLongMap!1461)

(assert (=> b!87349 (= lt!41475 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (array!4032 (store (arr!1920 (_values!2321 newMap!16)) (index!3110 lt!40535) (ValueCellFull!924 lt!40326)) (size!2164 (_values!2321 newMap!16))) (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41469 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41469 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41464 () (_ BitVec 64))

(assert (=> b!87349 (= lt!41464 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87349 (= lt!41459 (addApplyDifferent!58 lt!41475 lt!41469 (minValue!2230 newMap!16) lt!41464))))

(assert (=> b!87349 (= (apply!82 (+!110 lt!41475 (tuple2!2199 lt!41469 (minValue!2230 newMap!16))) lt!41464) (apply!82 lt!41475 lt!41464))))

(assert (= (and d!23159 c!14380) b!87342))

(assert (= (and d!23159 (not c!14380)) b!87345))

(assert (= (and b!87345 c!14378) b!87343))

(assert (= (and b!87345 (not c!14378)) b!87329))

(assert (= (and b!87329 c!14379) b!87335))

(assert (= (and b!87329 (not c!14379)) b!87340))

(assert (= (or b!87335 b!87340) bm!8337))

(assert (= (or b!87343 bm!8337) bm!8339))

(assert (= (or b!87343 b!87335) bm!8336))

(assert (= (or b!87342 bm!8339) bm!8333))

(assert (= (or b!87342 bm!8336) bm!8334))

(assert (= (and d!23159 res!44831) b!87337))

(assert (= (and d!23159 c!14377) b!87349))

(assert (= (and d!23159 (not c!14377)) b!87347))

(assert (= (and d!23159 res!44825) b!87330))

(assert (= (and b!87330 res!44827) b!87346))

(assert (= (and b!87330 (not res!44824)) b!87332))

(assert (= (and b!87332 res!44828) b!87344))

(assert (= (and b!87330 res!44826) b!87338))

(assert (= (and b!87338 c!14375) b!87341))

(assert (= (and b!87338 (not c!14375)) b!87336))

(assert (= (and b!87341 res!44830) b!87331))

(assert (= (or b!87341 b!87336) bm!8335))

(assert (= (and b!87338 res!44832) b!87333))

(assert (= (and b!87333 c!14376) b!87334))

(assert (= (and b!87333 (not c!14376)) b!87339))

(assert (= (and b!87334 res!44829) b!87348))

(assert (= (or b!87334 b!87339) bm!8338))

(declare-fun b_lambda!3855 () Bool)

(assert (=> (not b_lambda!3855) (not b!87344)))

(assert (=> b!87344 t!5248))

(declare-fun b_and!5259 () Bool)

(assert (= b_and!5255 (and (=> t!5248 result!2927) b_and!5259)))

(assert (=> b!87344 t!5250))

(declare-fun b_and!5261 () Bool)

(assert (= b_and!5257 (and (=> t!5250 result!2929) b_and!5261)))

(assert (=> b!87346 m!90363))

(assert (=> b!87346 m!90363))

(assert (=> b!87346 m!90365))

(declare-fun m!93003 () Bool)

(assert (=> b!87348 m!93003))

(declare-fun m!93005 () Bool)

(assert (=> bm!8333 m!93005))

(declare-fun m!93007 () Bool)

(assert (=> bm!8335 m!93007))

(assert (=> b!87344 m!90373))

(assert (=> b!87344 m!90363))

(declare-fun m!93009 () Bool)

(assert (=> b!87344 m!93009))

(assert (=> b!87344 m!90363))

(declare-fun m!93011 () Bool)

(assert (=> b!87344 m!93011))

(assert (=> b!87344 m!93011))

(assert (=> b!87344 m!90373))

(declare-fun m!93013 () Bool)

(assert (=> b!87344 m!93013))

(assert (=> b!87332 m!90363))

(assert (=> b!87332 m!90363))

(declare-fun m!93015 () Bool)

(assert (=> b!87332 m!93015))

(declare-fun m!93017 () Bool)

(assert (=> b!87342 m!93017))

(assert (=> d!23159 m!90385))

(declare-fun m!93019 () Bool)

(assert (=> bm!8338 m!93019))

(declare-fun m!93021 () Bool)

(assert (=> b!87349 m!93021))

(declare-fun m!93023 () Bool)

(assert (=> b!87349 m!93023))

(declare-fun m!93025 () Bool)

(assert (=> b!87349 m!93025))

(assert (=> b!87349 m!90363))

(declare-fun m!93027 () Bool)

(assert (=> b!87349 m!93027))

(declare-fun m!93029 () Bool)

(assert (=> b!87349 m!93029))

(declare-fun m!93031 () Bool)

(assert (=> b!87349 m!93031))

(declare-fun m!93033 () Bool)

(assert (=> b!87349 m!93033))

(declare-fun m!93035 () Bool)

(assert (=> b!87349 m!93035))

(declare-fun m!93037 () Bool)

(assert (=> b!87349 m!93037))

(declare-fun m!93039 () Bool)

(assert (=> b!87349 m!93039))

(assert (=> b!87349 m!93023))

(assert (=> b!87349 m!93029))

(declare-fun m!93041 () Bool)

(assert (=> b!87349 m!93041))

(declare-fun m!93043 () Bool)

(assert (=> b!87349 m!93043))

(declare-fun m!93045 () Bool)

(assert (=> b!87349 m!93045))

(assert (=> b!87349 m!93033))

(assert (=> b!87349 m!93043))

(assert (=> b!87349 m!93005))

(declare-fun m!93047 () Bool)

(assert (=> b!87349 m!93047))

(declare-fun m!93049 () Bool)

(assert (=> b!87349 m!93049))

(assert (=> b!87337 m!90363))

(assert (=> b!87337 m!90363))

(assert (=> b!87337 m!90365))

(declare-fun m!93051 () Bool)

(assert (=> b!87331 m!93051))

(declare-fun m!93053 () Bool)

(assert (=> bm!8334 m!93053))

(assert (=> b!86004 d!23159))

(declare-fun d!23161 () Bool)

(declare-fun res!44833 () Bool)

(declare-fun e!56904 () Bool)

(assert (=> d!23161 (=> res!44833 e!56904)))

(assert (=> d!23161 (= res!44833 (and ((_ is Cons!1515) lt!40979) (= (_1!1110 (h!2106 lt!40979)) (_1!1110 lt!40318))))))

(assert (=> d!23161 (= (containsKey!144 lt!40979 (_1!1110 lt!40318)) e!56904)))

(declare-fun b!87350 () Bool)

(declare-fun e!56905 () Bool)

(assert (=> b!87350 (= e!56904 e!56905)))

(declare-fun res!44834 () Bool)

(assert (=> b!87350 (=> (not res!44834) (not e!56905))))

(assert (=> b!87350 (= res!44834 (and (or (not ((_ is Cons!1515) lt!40979)) (bvsle (_1!1110 (h!2106 lt!40979)) (_1!1110 lt!40318))) ((_ is Cons!1515) lt!40979) (bvslt (_1!1110 (h!2106 lt!40979)) (_1!1110 lt!40318))))))

(declare-fun b!87351 () Bool)

(assert (=> b!87351 (= e!56905 (containsKey!144 (t!5240 lt!40979) (_1!1110 lt!40318)))))

(assert (= (and d!23161 (not res!44833)) b!87350))

(assert (= (and b!87350 res!44834) b!87351))

(declare-fun m!93055 () Bool)

(assert (=> b!87351 m!93055))

(assert (=> b!86207 d!23161))

(declare-fun d!23163 () Bool)

(assert (=> d!23163 (= (isEmpty!336 (toList!746 lt!40584)) ((_ is Nil!1516) (toList!746 lt!40584)))))

(assert (=> d!22275 d!23163))

(declare-fun d!23165 () Bool)

(declare-fun e!56907 () Bool)

(assert (=> d!23165 e!56907))

(declare-fun res!44835 () Bool)

(assert (=> d!23165 (=> res!44835 e!56907)))

(declare-fun lt!41477 () Bool)

(assert (=> d!23165 (= res!44835 (not lt!41477))))

(declare-fun lt!41478 () Bool)

(assert (=> d!23165 (= lt!41477 lt!41478)))

(declare-fun lt!41480 () Unit!2517)

(declare-fun e!56906 () Unit!2517)

(assert (=> d!23165 (= lt!41480 e!56906)))

(declare-fun c!14381 () Bool)

(assert (=> d!23165 (= c!14381 lt!41478)))

(assert (=> d!23165 (= lt!41478 (containsKey!144 (toList!746 lt!40918) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23165 (= (contains!753 lt!40918 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41477)))

(declare-fun b!87352 () Bool)

(declare-fun lt!41479 () Unit!2517)

(assert (=> b!87352 (= e!56906 lt!41479)))

(assert (=> b!87352 (= lt!41479 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40918) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87352 (isDefined!93 (getValueByKey!140 (toList!746 lt!40918) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87353 () Bool)

(declare-fun Unit!2587 () Unit!2517)

(assert (=> b!87353 (= e!56906 Unit!2587)))

(declare-fun b!87354 () Bool)

(assert (=> b!87354 (= e!56907 (isDefined!93 (getValueByKey!140 (toList!746 lt!40918) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23165 c!14381) b!87352))

(assert (= (and d!23165 (not c!14381)) b!87353))

(assert (= (and d!23165 (not res!44835)) b!87354))

(declare-fun m!93057 () Bool)

(assert (=> d!23165 m!93057))

(declare-fun m!93059 () Bool)

(assert (=> b!87352 m!93059))

(assert (=> b!87352 m!91331))

(assert (=> b!87352 m!91331))

(declare-fun m!93061 () Bool)

(assert (=> b!87352 m!93061))

(assert (=> b!87354 m!91331))

(assert (=> b!87354 m!91331))

(assert (=> b!87354 m!93061))

(assert (=> bm!8200 d!23165))

(declare-fun d!23167 () Bool)

(declare-fun e!56909 () Bool)

(assert (=> d!23167 e!56909))

(declare-fun res!44836 () Bool)

(assert (=> d!23167 (=> res!44836 e!56909)))

(declare-fun lt!41481 () Bool)

(assert (=> d!23167 (= res!44836 (not lt!41481))))

(declare-fun lt!41482 () Bool)

(assert (=> d!23167 (= lt!41481 lt!41482)))

(declare-fun lt!41484 () Unit!2517)

(declare-fun e!56908 () Unit!2517)

(assert (=> d!23167 (= lt!41484 e!56908)))

(declare-fun c!14382 () Bool)

(assert (=> d!23167 (= c!14382 lt!41482)))

(assert (=> d!23167 (= lt!41482 (containsKey!144 (toList!746 lt!40873) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23167 (= (contains!753 lt!40873 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41481)))

(declare-fun b!87355 () Bool)

(declare-fun lt!41483 () Unit!2517)

(assert (=> b!87355 (= e!56908 lt!41483)))

(assert (=> b!87355 (= lt!41483 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40873) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87355 (isDefined!93 (getValueByKey!140 (toList!746 lt!40873) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87356 () Bool)

(declare-fun Unit!2588 () Unit!2517)

(assert (=> b!87356 (= e!56908 Unit!2588)))

(declare-fun b!87357 () Bool)

(assert (=> b!87357 (= e!56909 (isDefined!93 (getValueByKey!140 (toList!746 lt!40873) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23167 c!14382) b!87355))

(assert (= (and d!23167 (not c!14382)) b!87356))

(assert (= (and d!23167 (not res!44836)) b!87357))

(declare-fun m!93063 () Bool)

(assert (=> d!23167 m!93063))

(declare-fun m!93065 () Bool)

(assert (=> b!87355 m!93065))

(assert (=> b!87355 m!91911))

(assert (=> b!87355 m!91911))

(declare-fun m!93067 () Bool)

(assert (=> b!87355 m!93067))

(assert (=> b!87357 m!91911))

(assert (=> b!87357 m!91911))

(assert (=> b!87357 m!93067))

(assert (=> bm!8193 d!23167))

(declare-fun b!87358 () Bool)

(declare-fun e!56910 () Option!146)

(assert (=> b!87358 (= e!56910 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40555)))))))

(declare-fun d!23169 () Bool)

(declare-fun c!14383 () Bool)

(assert (=> d!23169 (= c!14383 (and ((_ is Cons!1515) (t!5240 lt!40555)) (= (_1!1110 (h!2106 (t!5240 lt!40555))) (_1!1110 lt!40322))))))

(assert (=> d!23169 (= (getValueByKey!140 (t!5240 lt!40555) (_1!1110 lt!40322)) e!56910)))

(declare-fun b!87361 () Bool)

(declare-fun e!56911 () Option!146)

(assert (=> b!87361 (= e!56911 None!144)))

(declare-fun b!87360 () Bool)

(assert (=> b!87360 (= e!56911 (getValueByKey!140 (t!5240 (t!5240 lt!40555)) (_1!1110 lt!40322)))))

(declare-fun b!87359 () Bool)

(assert (=> b!87359 (= e!56910 e!56911)))

(declare-fun c!14384 () Bool)

(assert (=> b!87359 (= c!14384 (and ((_ is Cons!1515) (t!5240 lt!40555)) (not (= (_1!1110 (h!2106 (t!5240 lt!40555))) (_1!1110 lt!40322)))))))

(assert (= (and d!23169 c!14383) b!87358))

(assert (= (and d!23169 (not c!14383)) b!87359))

(assert (= (and b!87359 c!14384) b!87360))

(assert (= (and b!87359 (not c!14384)) b!87361))

(declare-fun m!93069 () Bool)

(assert (=> b!87360 m!93069))

(assert (=> b!86245 d!23169))

(declare-fun d!23171 () Bool)

(declare-fun res!44837 () Bool)

(declare-fun e!56912 () Bool)

(assert (=> d!23171 (=> res!44837 e!56912)))

(assert (=> d!23171 (= res!44837 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40444)))))

(assert (=> d!23171 (= (containsKey!144 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444) e!56912)))

(declare-fun b!87362 () Bool)

(declare-fun e!56913 () Bool)

(assert (=> b!87362 (= e!56912 e!56913)))

(declare-fun res!44838 () Bool)

(assert (=> b!87362 (=> (not res!44838) (not e!56913))))

(assert (=> b!87362 (= res!44838 (and (or (not ((_ is Cons!1515) (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) (bvsle (_1!1110 (h!2106 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40444)) ((_ is Cons!1515) (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) (bvslt (_1!1110 (h!2106 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40444)))))

(declare-fun b!87363 () Bool)

(assert (=> b!87363 (= e!56913 (containsKey!144 (t!5240 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!40444))))

(assert (= (and d!23171 (not res!44837)) b!87362))

(assert (= (and b!87362 res!44838) b!87363))

(declare-fun m!93071 () Bool)

(assert (=> b!87363 m!93071))

(assert (=> d!22383 d!23171))

(declare-fun b!87364 () Bool)

(declare-fun e!56914 () Option!146)

(assert (=> b!87364 (= e!56914 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40563)))))))

(declare-fun d!23173 () Bool)

(declare-fun c!14385 () Bool)

(assert (=> d!23173 (= c!14385 (and ((_ is Cons!1515) (t!5240 lt!40563)) (= (_1!1110 (h!2106 (t!5240 lt!40563))) (_1!1110 lt!40318))))))

(assert (=> d!23173 (= (getValueByKey!140 (t!5240 lt!40563) (_1!1110 lt!40318)) e!56914)))

(declare-fun b!87367 () Bool)

(declare-fun e!56915 () Option!146)

(assert (=> b!87367 (= e!56915 None!144)))

(declare-fun b!87366 () Bool)

(assert (=> b!87366 (= e!56915 (getValueByKey!140 (t!5240 (t!5240 lt!40563)) (_1!1110 lt!40318)))))

(declare-fun b!87365 () Bool)

(assert (=> b!87365 (= e!56914 e!56915)))

(declare-fun c!14386 () Bool)

(assert (=> b!87365 (= c!14386 (and ((_ is Cons!1515) (t!5240 lt!40563)) (not (= (_1!1110 (h!2106 (t!5240 lt!40563))) (_1!1110 lt!40318)))))))

(assert (= (and d!23173 c!14385) b!87364))

(assert (= (and d!23173 (not c!14385)) b!87365))

(assert (= (and b!87365 c!14386) b!87366))

(assert (= (and b!87365 (not c!14386)) b!87367))

(declare-fun m!93073 () Bool)

(assert (=> b!87366 m!93073))

(assert (=> b!85718 d!23173))

(declare-fun d!23175 () Bool)

(declare-fun e!56917 () Bool)

(assert (=> d!23175 e!56917))

(declare-fun res!44839 () Bool)

(assert (=> d!23175 (=> res!44839 e!56917)))

(declare-fun lt!41485 () Bool)

(assert (=> d!23175 (= res!44839 (not lt!41485))))

(declare-fun lt!41486 () Bool)

(assert (=> d!23175 (= lt!41485 lt!41486)))

(declare-fun lt!41488 () Unit!2517)

(declare-fun e!56916 () Unit!2517)

(assert (=> d!23175 (= lt!41488 e!56916)))

(declare-fun c!14387 () Bool)

(assert (=> d!23175 (= c!14387 lt!41486)))

(assert (=> d!23175 (= lt!41486 (containsKey!144 (toList!746 lt!40661) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23175 (= (contains!753 lt!40661 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41485)))

(declare-fun b!87368 () Bool)

(declare-fun lt!41487 () Unit!2517)

(assert (=> b!87368 (= e!56916 lt!41487)))

(assert (=> b!87368 (= lt!41487 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40661) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87368 (isDefined!93 (getValueByKey!140 (toList!746 lt!40661) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87369 () Bool)

(declare-fun Unit!2589 () Unit!2517)

(assert (=> b!87369 (= e!56916 Unit!2589)))

(declare-fun b!87370 () Bool)

(assert (=> b!87370 (= e!56917 (isDefined!93 (getValueByKey!140 (toList!746 lt!40661) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23175 c!14387) b!87368))

(assert (= (and d!23175 (not c!14387)) b!87369))

(assert (= (and d!23175 (not res!44839)) b!87370))

(declare-fun m!93075 () Bool)

(assert (=> d!23175 m!93075))

(declare-fun m!93077 () Bool)

(assert (=> b!87368 m!93077))

(declare-fun m!93079 () Bool)

(assert (=> b!87368 m!93079))

(assert (=> b!87368 m!93079))

(declare-fun m!93081 () Bool)

(assert (=> b!87368 m!93081))

(assert (=> b!87370 m!93079))

(assert (=> b!87370 m!93079))

(assert (=> b!87370 m!93081))

(assert (=> bm!8166 d!23175))

(declare-fun d!23177 () Bool)

(assert (=> d!23177 (= (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40440)) (v!2649 (getValueByKey!140 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40440)))))

(assert (=> d!22373 d!23177))

(declare-fun b!87371 () Bool)

(declare-fun e!56918 () Option!146)

(assert (=> b!87371 (= e!56918 (Some!145 (_2!1110 (h!2106 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))))))))

(declare-fun c!14388 () Bool)

(declare-fun d!23179 () Bool)

(assert (=> d!23179 (= c!14388 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40440)))))

(assert (=> d!23179 (= (getValueByKey!140 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40440) e!56918)))

(declare-fun b!87374 () Bool)

(declare-fun e!56919 () Option!146)

(assert (=> b!87374 (= e!56919 None!144)))

(declare-fun b!87373 () Bool)

(assert (=> b!87373 (= e!56919 (getValueByKey!140 (t!5240 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) lt!40440))))

(declare-fun b!87372 () Bool)

(assert (=> b!87372 (= e!56918 e!56919)))

(declare-fun c!14389 () Bool)

(assert (=> b!87372 (= c!14389 (and ((_ is Cons!1515) (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992))))))) (not (= (_1!1110 (h!2106 (toList!746 (+!110 lt!40451 (tuple2!2199 lt!40445 (minValue!2230 (v!2645 (underlying!289 thiss!992)))))))) lt!40440))))))

(assert (= (and d!23179 c!14388) b!87371))

(assert (= (and d!23179 (not c!14388)) b!87372))

(assert (= (and b!87372 c!14389) b!87373))

(assert (= (and b!87372 (not c!14389)) b!87374))

(declare-fun m!93083 () Bool)

(assert (=> b!87373 m!93083))

(assert (=> d!22373 d!23179))

(assert (=> b!85965 d!22851))

(declare-fun d!23181 () Bool)

(declare-fun e!56920 () Bool)

(assert (=> d!23181 e!56920))

(declare-fun res!44840 () Bool)

(assert (=> d!23181 (=> (not res!44840) (not e!56920))))

(declare-fun lt!41491 () ListLongMap!1461)

(assert (=> d!23181 (= res!44840 (contains!753 lt!41491 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41490 () List!1519)

(assert (=> d!23181 (= lt!41491 (ListLongMap!1462 lt!41490))))

(declare-fun lt!41492 () Unit!2517)

(declare-fun lt!41489 () Unit!2517)

(assert (=> d!23181 (= lt!41492 lt!41489)))

(assert (=> d!23181 (= (getValueByKey!140 lt!41490 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!23181 (= lt!41489 (lemmaContainsTupThenGetReturnValue!57 lt!41490 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!23181 (= lt!41490 (insertStrictlySorted!60 (toList!746 (map!1188 newMap!16)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!23181 (= (+!110 (map!1188 newMap!16) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41491)))

(declare-fun b!87375 () Bool)

(declare-fun res!44841 () Bool)

(assert (=> b!87375 (=> (not res!44841) (not e!56920))))

(assert (=> b!87375 (= res!44841 (= (getValueByKey!140 (toList!746 lt!41491) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87376 () Bool)

(assert (=> b!87376 (= e!56920 (contains!754 (toList!746 lt!41491) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!23181 res!44840) b!87375))

(assert (= (and b!87375 res!44841) b!87376))

(declare-fun m!93085 () Bool)

(assert (=> d!23181 m!93085))

(declare-fun m!93087 () Bool)

(assert (=> d!23181 m!93087))

(declare-fun m!93089 () Bool)

(assert (=> d!23181 m!93089))

(declare-fun m!93091 () Bool)

(assert (=> d!23181 m!93091))

(declare-fun m!93093 () Bool)

(assert (=> b!87375 m!93093))

(declare-fun m!93095 () Bool)

(assert (=> b!87376 m!93095))

(assert (=> b!85965 d!23181))

(assert (=> b!85965 d!22135))

(declare-fun d!23183 () Bool)

(declare-fun e!56922 () Bool)

(assert (=> d!23183 e!56922))

(declare-fun res!44842 () Bool)

(assert (=> d!23183 (=> res!44842 e!56922)))

(declare-fun lt!41493 () Bool)

(assert (=> d!23183 (= res!44842 (not lt!41493))))

(declare-fun lt!41494 () Bool)

(assert (=> d!23183 (= lt!41493 lt!41494)))

(declare-fun lt!41496 () Unit!2517)

(declare-fun e!56921 () Unit!2517)

(assert (=> d!23183 (= lt!41496 e!56921)))

(declare-fun c!14390 () Bool)

(assert (=> d!23183 (= c!14390 lt!41494)))

(assert (=> d!23183 (= lt!41494 (containsKey!144 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))

(assert (=> d!23183 (= (contains!753 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))) lt!41493)))

(declare-fun b!87377 () Bool)

(declare-fun lt!41495 () Unit!2517)

(assert (=> b!87377 (= e!56921 lt!41495)))

(assert (=> b!87377 (= lt!41495 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))

(assert (=> b!87377 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535))))))

(declare-fun b!87378 () Bool)

(declare-fun Unit!2590 () Unit!2517)

(assert (=> b!87378 (= e!56921 Unit!2590)))

(declare-fun b!87379 () Bool)

(assert (=> b!87379 (= e!56922 (isDefined!93 (getValueByKey!140 (toList!746 (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16))) (select (arr!1919 (_keys!4010 newMap!16)) (index!3110 lt!40535)))))))

(assert (= (and d!23183 c!14390) b!87377))

(assert (= (and d!23183 (not c!14390)) b!87378))

(assert (= (and d!23183 (not res!44842)) b!87379))

(assert (=> d!23183 m!90093))

(declare-fun m!93097 () Bool)

(assert (=> d!23183 m!93097))

(assert (=> b!87377 m!90093))

(declare-fun m!93099 () Bool)

(assert (=> b!87377 m!93099))

(assert (=> b!87377 m!90093))

(declare-fun m!93101 () Bool)

(assert (=> b!87377 m!93101))

(assert (=> b!87377 m!93101))

(declare-fun m!93103 () Bool)

(assert (=> b!87377 m!93103))

(assert (=> b!87379 m!90093))

(assert (=> b!87379 m!93101))

(assert (=> b!87379 m!93101))

(assert (=> b!87379 m!93103))

(assert (=> b!86001 d!23183))

(declare-fun b!87380 () Bool)

(declare-fun c!14395 () Bool)

(assert (=> b!87380 (= c!14395 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56932 () ListLongMap!1461)

(declare-fun e!56933 () ListLongMap!1461)

(assert (=> b!87380 (= e!56932 e!56933)))

(declare-fun b!87381 () Bool)

(declare-fun res!44845 () Bool)

(declare-fun e!56925 () Bool)

(assert (=> b!87381 (=> (not res!44845) (not e!56925))))

(declare-fun e!56930 () Bool)

(assert (=> b!87381 (= res!44845 e!56930)))

(declare-fun res!44843 () Bool)

(assert (=> b!87381 (=> res!44843 e!56930)))

(declare-fun e!56924 () Bool)

(assert (=> b!87381 (= res!44843 (not e!56924))))

(declare-fun res!44846 () Bool)

(assert (=> b!87381 (=> (not res!44846) (not e!56924))))

(assert (=> b!87381 (= res!44846 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun bm!8340 () Bool)

(declare-fun call!8347 () ListLongMap!1461)

(assert (=> bm!8340 (= call!8347 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun b!87382 () Bool)

(declare-fun e!56935 () Bool)

(declare-fun lt!41516 () ListLongMap!1461)

(assert (=> b!87382 (= e!56935 (= (apply!82 lt!41516 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 newMap!16)))))

(declare-fun b!87383 () Bool)

(declare-fun e!56928 () Bool)

(assert (=> b!87383 (= e!56930 e!56928)))

(declare-fun res!44847 () Bool)

(assert (=> b!87383 (=> (not res!44847) (not e!56928))))

(assert (=> b!87383 (= res!44847 (contains!753 lt!41516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87383 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!87384 () Bool)

(declare-fun e!56934 () Bool)

(assert (=> b!87384 (= e!56925 e!56934)))

(declare-fun c!14392 () Bool)

(assert (=> b!87384 (= c!14392 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87385 () Bool)

(declare-fun e!56923 () Bool)

(assert (=> b!87385 (= e!56934 e!56923)))

(declare-fun res!44848 () Bool)

(declare-fun call!8346 () Bool)

(assert (=> b!87385 (= res!44848 call!8346)))

(assert (=> b!87385 (=> (not res!44848) (not e!56923))))

(declare-fun c!14396 () Bool)

(declare-fun call!8344 () ListLongMap!1461)

(declare-fun call!8349 () ListLongMap!1461)

(declare-fun c!14394 () Bool)

(declare-fun call!8343 () ListLongMap!1461)

(declare-fun bm!8341 () Bool)

(assert (=> bm!8341 (= call!8343 (+!110 (ite c!14396 call!8347 (ite c!14394 call!8349 call!8344)) (ite (or c!14396 c!14394) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun b!87386 () Bool)

(declare-fun call!8348 () ListLongMap!1461)

(assert (=> b!87386 (= e!56933 call!8348)))

(declare-fun b!87387 () Bool)

(declare-fun e!56931 () Bool)

(declare-fun call!8345 () Bool)

(assert (=> b!87387 (= e!56931 (not call!8345))))

(declare-fun b!87388 () Bool)

(declare-fun e!56929 () Bool)

(assert (=> b!87388 (= e!56929 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87389 () Bool)

(declare-fun res!44851 () Bool)

(assert (=> b!87389 (=> (not res!44851) (not e!56925))))

(assert (=> b!87389 (= res!44851 e!56931)))

(declare-fun c!14391 () Bool)

(assert (=> b!87389 (= c!14391 (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87390 () Bool)

(assert (=> b!87390 (= e!56934 (not call!8346))))

(declare-fun b!87391 () Bool)

(assert (=> b!87391 (= e!56933 call!8344)))

(declare-fun b!87392 () Bool)

(assert (=> b!87392 (= e!56931 e!56935)))

(declare-fun res!44849 () Bool)

(assert (=> b!87392 (= res!44849 call!8345)))

(assert (=> b!87392 (=> (not res!44849) (not e!56935))))

(declare-fun b!87393 () Bool)

(declare-fun e!56927 () ListLongMap!1461)

(assert (=> b!87393 (= e!56927 (+!110 call!8343 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(declare-fun d!23185 () Bool)

(assert (=> d!23185 e!56925))

(declare-fun res!44844 () Bool)

(assert (=> d!23185 (=> (not res!44844) (not e!56925))))

(assert (=> d!23185 (= res!44844 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))))

(declare-fun lt!41498 () ListLongMap!1461)

(assert (=> d!23185 (= lt!41516 lt!41498)))

(declare-fun lt!41508 () Unit!2517)

(declare-fun e!56926 () Unit!2517)

(assert (=> d!23185 (= lt!41508 e!56926)))

(declare-fun c!14393 () Bool)

(assert (=> d!23185 (= c!14393 e!56929)))

(declare-fun res!44850 () Bool)

(assert (=> d!23185 (=> (not res!44850) (not e!56929))))

(assert (=> d!23185 (= res!44850 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!23185 (= lt!41498 e!56927)))

(assert (=> d!23185 (= c!14396 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23185 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!23185 (= (getCurrentListMap!439 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41516)))

(declare-fun b!87394 () Bool)

(assert (=> b!87394 (= e!56932 call!8348)))

(declare-fun b!87395 () Bool)

(assert (=> b!87395 (= e!56928 (= (apply!82 lt!41516 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 lt!40533) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 lt!40533)))))

(assert (=> b!87395 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!87396 () Bool)

(assert (=> b!87396 (= e!56927 e!56932)))

(assert (=> b!87396 (= c!14394 (and (not (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87397 () Bool)

(assert (=> b!87397 (= e!56924 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8342 () Bool)

(assert (=> bm!8342 (= call!8345 (contains!753 lt!41516 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8343 () Bool)

(assert (=> bm!8343 (= call!8348 call!8343)))

(declare-fun b!87398 () Bool)

(declare-fun Unit!2591 () Unit!2517)

(assert (=> b!87398 (= e!56926 Unit!2591)))

(declare-fun bm!8344 () Bool)

(assert (=> bm!8344 (= call!8344 call!8349)))

(declare-fun bm!8345 () Bool)

(assert (=> bm!8345 (= call!8346 (contains!753 lt!41516 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8346 () Bool)

(assert (=> bm!8346 (= call!8349 call!8347)))

(declare-fun b!87399 () Bool)

(assert (=> b!87399 (= e!56923 (= (apply!82 lt!41516 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 newMap!16)))))

(declare-fun b!87400 () Bool)

(declare-fun lt!41501 () Unit!2517)

(assert (=> b!87400 (= e!56926 lt!41501)))

(declare-fun lt!41503 () ListLongMap!1461)

(assert (=> b!87400 (= lt!41503 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41512 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41512 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41510 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41510 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41502 () Unit!2517)

(assert (=> b!87400 (= lt!41502 (addStillContains!58 lt!41503 lt!41512 (zeroValue!2230 newMap!16) lt!41510))))

(assert (=> b!87400 (contains!753 (+!110 lt!41503 (tuple2!2199 lt!41512 (zeroValue!2230 newMap!16))) lt!41510)))

(declare-fun lt!41509 () Unit!2517)

(assert (=> b!87400 (= lt!41509 lt!41502)))

(declare-fun lt!41515 () ListLongMap!1461)

(assert (=> b!87400 (= lt!41515 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41514 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41513 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41513 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41518 () Unit!2517)

(assert (=> b!87400 (= lt!41518 (addApplyDifferent!58 lt!41515 lt!41514 (minValue!2230 newMap!16) lt!41513))))

(assert (=> b!87400 (= (apply!82 (+!110 lt!41515 (tuple2!2199 lt!41514 (minValue!2230 newMap!16))) lt!41513) (apply!82 lt!41515 lt!41513))))

(declare-fun lt!41499 () Unit!2517)

(assert (=> b!87400 (= lt!41499 lt!41518)))

(declare-fun lt!41507 () ListLongMap!1461)

(assert (=> b!87400 (= lt!41507 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41497 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41497 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41505 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41505 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41500 () Unit!2517)

(assert (=> b!87400 (= lt!41500 (addApplyDifferent!58 lt!41507 lt!41497 (zeroValue!2230 newMap!16) lt!41505))))

(assert (=> b!87400 (= (apply!82 (+!110 lt!41507 (tuple2!2199 lt!41497 (zeroValue!2230 newMap!16))) lt!41505) (apply!82 lt!41507 lt!41505))))

(declare-fun lt!41504 () Unit!2517)

(assert (=> b!87400 (= lt!41504 lt!41500)))

(declare-fun lt!41517 () ListLongMap!1461)

(assert (=> b!87400 (= lt!41517 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) lt!40533 (mask!6366 newMap!16) (extraKeys!2177 newMap!16) (zeroValue!2230 newMap!16) (minValue!2230 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)))))

(declare-fun lt!41511 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41511 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41506 () (_ BitVec 64))

(assert (=> b!87400 (= lt!41506 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87400 (= lt!41501 (addApplyDifferent!58 lt!41517 lt!41511 (minValue!2230 newMap!16) lt!41506))))

(assert (=> b!87400 (= (apply!82 (+!110 lt!41517 (tuple2!2199 lt!41511 (minValue!2230 newMap!16))) lt!41506) (apply!82 lt!41517 lt!41506))))

(assert (= (and d!23185 c!14396) b!87393))

(assert (= (and d!23185 (not c!14396)) b!87396))

(assert (= (and b!87396 c!14394) b!87394))

(assert (= (and b!87396 (not c!14394)) b!87380))

(assert (= (and b!87380 c!14395) b!87386))

(assert (= (and b!87380 (not c!14395)) b!87391))

(assert (= (or b!87386 b!87391) bm!8344))

(assert (= (or b!87394 bm!8344) bm!8346))

(assert (= (or b!87394 b!87386) bm!8343))

(assert (= (or b!87393 bm!8346) bm!8340))

(assert (= (or b!87393 bm!8343) bm!8341))

(assert (= (and d!23185 res!44850) b!87388))

(assert (= (and d!23185 c!14393) b!87400))

(assert (= (and d!23185 (not c!14393)) b!87398))

(assert (= (and d!23185 res!44844) b!87381))

(assert (= (and b!87381 res!44846) b!87397))

(assert (= (and b!87381 (not res!44843)) b!87383))

(assert (= (and b!87383 res!44847) b!87395))

(assert (= (and b!87381 res!44845) b!87389))

(assert (= (and b!87389 c!14391) b!87392))

(assert (= (and b!87389 (not c!14391)) b!87387))

(assert (= (and b!87392 res!44849) b!87382))

(assert (= (or b!87392 b!87387) bm!8342))

(assert (= (and b!87389 res!44851) b!87384))

(assert (= (and b!87384 c!14392) b!87385))

(assert (= (and b!87384 (not c!14392)) b!87390))

(assert (= (and b!87385 res!44848) b!87399))

(assert (= (or b!87385 b!87390) bm!8345))

(declare-fun b_lambda!3857 () Bool)

(assert (=> (not b_lambda!3857) (not b!87395)))

(assert (=> b!87395 t!5248))

(declare-fun b_and!5263 () Bool)

(assert (= b_and!5259 (and (=> t!5248 result!2927) b_and!5263)))

(assert (=> b!87395 t!5250))

(declare-fun b_and!5265 () Bool)

(assert (= b_and!5261 (and (=> t!5250 result!2929) b_and!5265)))

(assert (=> b!87397 m!90363))

(assert (=> b!87397 m!90363))

(assert (=> b!87397 m!90365))

(declare-fun m!93105 () Bool)

(assert (=> b!87399 m!93105))

(declare-fun m!93107 () Bool)

(assert (=> bm!8340 m!93107))

(declare-fun m!93109 () Bool)

(assert (=> bm!8342 m!93109))

(assert (=> b!87395 m!90373))

(assert (=> b!87395 m!90363))

(declare-fun m!93111 () Bool)

(assert (=> b!87395 m!93111))

(assert (=> b!87395 m!90363))

(declare-fun m!93113 () Bool)

(assert (=> b!87395 m!93113))

(assert (=> b!87395 m!93113))

(assert (=> b!87395 m!90373))

(declare-fun m!93115 () Bool)

(assert (=> b!87395 m!93115))

(assert (=> b!87383 m!90363))

(assert (=> b!87383 m!90363))

(declare-fun m!93117 () Bool)

(assert (=> b!87383 m!93117))

(declare-fun m!93119 () Bool)

(assert (=> b!87393 m!93119))

(assert (=> d!23185 m!90385))

(declare-fun m!93121 () Bool)

(assert (=> bm!8345 m!93121))

(declare-fun m!93123 () Bool)

(assert (=> b!87400 m!93123))

(declare-fun m!93125 () Bool)

(assert (=> b!87400 m!93125))

(declare-fun m!93127 () Bool)

(assert (=> b!87400 m!93127))

(assert (=> b!87400 m!90363))

(declare-fun m!93129 () Bool)

(assert (=> b!87400 m!93129))

(declare-fun m!93131 () Bool)

(assert (=> b!87400 m!93131))

(declare-fun m!93133 () Bool)

(assert (=> b!87400 m!93133))

(declare-fun m!93135 () Bool)

(assert (=> b!87400 m!93135))

(declare-fun m!93137 () Bool)

(assert (=> b!87400 m!93137))

(declare-fun m!93139 () Bool)

(assert (=> b!87400 m!93139))

(declare-fun m!93141 () Bool)

(assert (=> b!87400 m!93141))

(assert (=> b!87400 m!93125))

(assert (=> b!87400 m!93131))

(declare-fun m!93143 () Bool)

(assert (=> b!87400 m!93143))

(declare-fun m!93145 () Bool)

(assert (=> b!87400 m!93145))

(declare-fun m!93147 () Bool)

(assert (=> b!87400 m!93147))

(assert (=> b!87400 m!93135))

(assert (=> b!87400 m!93145))

(assert (=> b!87400 m!93107))

(declare-fun m!93149 () Bool)

(assert (=> b!87400 m!93149))

(declare-fun m!93151 () Bool)

(assert (=> b!87400 m!93151))

(assert (=> b!87388 m!90363))

(assert (=> b!87388 m!90363))

(assert (=> b!87388 m!90365))

(declare-fun m!93153 () Bool)

(assert (=> b!87382 m!93153))

(declare-fun m!93155 () Bool)

(assert (=> bm!8341 m!93155))

(assert (=> b!86001 d!23185))

(declare-fun b!87401 () Bool)

(declare-fun e!56938 () Bool)

(declare-fun call!8350 () Bool)

(assert (=> b!87401 (= e!56938 call!8350)))

(declare-fun e!56939 () Bool)

(declare-fun b!87402 () Bool)

(assert (=> b!87402 (= e!56939 (contains!755 (ite c!13987 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87403 () Bool)

(assert (=> b!87403 (= e!56938 call!8350)))

(declare-fun bm!8347 () Bool)

(declare-fun c!14397 () Bool)

(assert (=> bm!8347 (= call!8350 (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14397 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!13987 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517))) (ite c!13987 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)))))))

(declare-fun d!23187 () Bool)

(declare-fun res!44852 () Bool)

(declare-fun e!56936 () Bool)

(assert (=> d!23187 (=> res!44852 e!56936)))

(assert (=> d!23187 (= res!44852 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992))))))))

(assert (=> d!23187 (= (arrayNoDuplicates!0 (_keys!4010 (v!2645 (underlying!289 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13987 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517)) (ite c!13914 (Cons!1516 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) Nil!1517) Nil!1517))) e!56936)))

(declare-fun b!87404 () Bool)

(declare-fun e!56937 () Bool)

(assert (=> b!87404 (= e!56937 e!56938)))

(assert (=> b!87404 (= c!14397 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87405 () Bool)

(assert (=> b!87405 (= e!56936 e!56937)))

(declare-fun res!44853 () Bool)

(assert (=> b!87405 (=> (not res!44853) (not e!56937))))

(assert (=> b!87405 (= res!44853 (not e!56939))))

(declare-fun res!44854 () Bool)

(assert (=> b!87405 (=> (not res!44854) (not e!56939))))

(assert (=> b!87405 (= res!44854 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!23187 (not res!44852)) b!87405))

(assert (= (and b!87405 res!44854) b!87402))

(assert (= (and b!87405 res!44853) b!87404))

(assert (= (and b!87404 c!14397) b!87401))

(assert (= (and b!87404 (not c!14397)) b!87403))

(assert (= (or b!87401 b!87403) bm!8347))

(declare-fun m!93157 () Bool)

(assert (=> b!87402 m!93157))

(assert (=> b!87402 m!93157))

(declare-fun m!93159 () Bool)

(assert (=> b!87402 m!93159))

(assert (=> bm!8347 m!93157))

(declare-fun m!93161 () Bool)

(assert (=> bm!8347 m!93161))

(assert (=> b!87404 m!93157))

(assert (=> b!87404 m!93157))

(declare-fun m!93163 () Bool)

(assert (=> b!87404 m!93163))

(assert (=> b!87405 m!93157))

(assert (=> b!87405 m!93157))

(assert (=> b!87405 m!93163))

(assert (=> bm!8187 d!23187))

(declare-fun d!23189 () Bool)

(declare-fun lt!41519 () Bool)

(assert (=> d!23189 (= lt!41519 (select (content!89 lt!40979) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun e!56940 () Bool)

(assert (=> d!23189 (= lt!41519 e!56940)))

(declare-fun res!44855 () Bool)

(assert (=> d!23189 (=> (not res!44855) (not e!56940))))

(assert (=> d!23189 (= res!44855 ((_ is Cons!1515) lt!40979))))

(assert (=> d!23189 (= (contains!754 lt!40979 (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))) lt!41519)))

(declare-fun b!87406 () Bool)

(declare-fun e!56941 () Bool)

(assert (=> b!87406 (= e!56940 e!56941)))

(declare-fun res!44856 () Bool)

(assert (=> b!87406 (=> res!44856 e!56941)))

(assert (=> b!87406 (= res!44856 (= (h!2106 lt!40979) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(declare-fun b!87407 () Bool)

(assert (=> b!87407 (= e!56941 (contains!754 (t!5240 lt!40979) (tuple2!2199 (_1!1110 lt!40318) (_2!1110 lt!40318))))))

(assert (= (and d!23189 res!44855) b!87406))

(assert (= (and b!87406 (not res!44856)) b!87407))

(declare-fun m!93165 () Bool)

(assert (=> d!23189 m!93165))

(declare-fun m!93167 () Bool)

(assert (=> d!23189 m!93167))

(declare-fun m!93169 () Bool)

(assert (=> b!87407 m!93169))

(assert (=> b!86213 d!23189))

(declare-fun d!23191 () Bool)

(assert (=> d!23191 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))

(declare-fun lt!41520 () Unit!2517)

(assert (=> d!23191 (= lt!41520 (choose!504 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))

(declare-fun e!56942 () Bool)

(assert (=> d!23191 e!56942))

(declare-fun res!44857 () Bool)

(assert (=> d!23191 (=> (not res!44857) (not e!56942))))

(assert (=> d!23191 (= res!44857 (isStrictlySorted!298 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23191 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444) lt!41520)))

(declare-fun b!87408 () Bool)

(assert (=> b!87408 (= e!56942 (containsKey!144 (toList!746 (+!110 lt!40437 (tuple2!2199 lt!40446 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!40444))))

(assert (= (and d!23191 res!44857) b!87408))

(assert (=> d!23191 m!91061))

(assert (=> d!23191 m!91061))

(assert (=> d!23191 m!91063))

(declare-fun m!93171 () Bool)

(assert (=> d!23191 m!93171))

(declare-fun m!93173 () Bool)

(assert (=> d!23191 m!93173))

(assert (=> b!87408 m!91057))

(assert (=> b!86153 d!23191))

(assert (=> b!86153 d!22601))

(assert (=> b!86153 d!22603))

(declare-fun d!23193 () Bool)

(assert (=> d!23193 (= (apply!82 lt!40661 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1198 (getValueByKey!140 (toList!746 lt!40661) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3703 () Bool)

(assert (= bs!3703 d!23193))

(assert (=> bs!3703 m!93079))

(assert (=> bs!3703 m!93079))

(declare-fun m!93175 () Bool)

(assert (=> bs!3703 m!93175))

(assert (=> b!85814 d!23193))

(declare-fun d!23195 () Bool)

(declare-fun lt!41521 () Bool)

(assert (=> d!23195 (= lt!41521 (select (content!89 (t!5240 (toList!746 lt!40556))) lt!40322))))

(declare-fun e!56943 () Bool)

(assert (=> d!23195 (= lt!41521 e!56943)))

(declare-fun res!44858 () Bool)

(assert (=> d!23195 (=> (not res!44858) (not e!56943))))

(assert (=> d!23195 (= res!44858 ((_ is Cons!1515) (t!5240 (toList!746 lt!40556))))))

(assert (=> d!23195 (= (contains!754 (t!5240 (toList!746 lt!40556)) lt!40322) lt!41521)))

(declare-fun b!87409 () Bool)

(declare-fun e!56944 () Bool)

(assert (=> b!87409 (= e!56943 e!56944)))

(declare-fun res!44859 () Bool)

(assert (=> b!87409 (=> res!44859 e!56944)))

(assert (=> b!87409 (= res!44859 (= (h!2106 (t!5240 (toList!746 lt!40556))) lt!40322))))

(declare-fun b!87410 () Bool)

(assert (=> b!87410 (= e!56944 (contains!754 (t!5240 (t!5240 (toList!746 lt!40556))) lt!40322))))

(assert (= (and d!23195 res!44858) b!87409))

(assert (= (and b!87409 (not res!44859)) b!87410))

(assert (=> d!23195 m!91943))

(declare-fun m!93177 () Bool)

(assert (=> d!23195 m!93177))

(declare-fun m!93179 () Bool)

(assert (=> b!87410 m!93179))

(assert (=> b!86052 d!23195))

(declare-fun b!87411 () Bool)

(declare-fun e!56946 () List!1519)

(declare-fun call!8352 () List!1519)

(assert (=> b!87411 (= e!56946 call!8352)))

(declare-fun b!87412 () Bool)

(assert (=> b!87412 (= e!56946 call!8352)))

(declare-fun b!87413 () Bool)

(declare-fun res!44860 () Bool)

(declare-fun e!56947 () Bool)

(assert (=> b!87413 (=> (not res!44860) (not e!56947))))

(declare-fun lt!41522 () List!1519)

(assert (=> b!87413 (= res!44860 (containsKey!144 lt!41522 (_1!1110 lt!40324)))))

(declare-fun b!87414 () Bool)

(declare-fun e!56948 () List!1519)

(declare-fun e!56949 () List!1519)

(assert (=> b!87414 (= e!56948 e!56949)))

(declare-fun c!14399 () Bool)

(assert (=> b!87414 (= c!14399 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40316))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40316)))) (_1!1110 lt!40324))))))

(declare-fun b!87415 () Bool)

(declare-fun call!8351 () List!1519)

(assert (=> b!87415 (= e!56948 call!8351)))

(declare-fun b!87416 () Bool)

(declare-fun c!14401 () Bool)

(assert (=> b!87416 (= c!14401 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40316))) (bvsgt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40316)))) (_1!1110 lt!40324))))))

(assert (=> b!87416 (= e!56949 e!56946)))

(declare-fun b!87417 () Bool)

(declare-fun e!56945 () List!1519)

(assert (=> b!87417 (= e!56945 (insertStrictlySorted!60 (t!5240 (t!5240 (toList!746 lt!40316))) (_1!1110 lt!40324) (_2!1110 lt!40324)))))

(declare-fun b!87418 () Bool)

(assert (=> b!87418 (= e!56945 (ite c!14399 (t!5240 (t!5240 (toList!746 lt!40316))) (ite c!14401 (Cons!1515 (h!2106 (t!5240 (toList!746 lt!40316))) (t!5240 (t!5240 (toList!746 lt!40316)))) Nil!1516)))))

(declare-fun bm!8348 () Bool)

(declare-fun c!14398 () Bool)

(assert (=> bm!8348 (= call!8351 ($colon$colon!72 e!56945 (ite c!14398 (h!2106 (t!5240 (toList!746 lt!40316))) (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324)))))))

(declare-fun c!14400 () Bool)

(assert (=> bm!8348 (= c!14400 c!14398)))

(declare-fun bm!8349 () Bool)

(declare-fun call!8353 () List!1519)

(assert (=> bm!8349 (= call!8353 call!8351)))

(declare-fun bm!8350 () Bool)

(assert (=> bm!8350 (= call!8352 call!8353)))

(declare-fun b!87420 () Bool)

(assert (=> b!87420 (= e!56949 call!8353)))

(declare-fun d!23197 () Bool)

(assert (=> d!23197 e!56947))

(declare-fun res!44861 () Bool)

(assert (=> d!23197 (=> (not res!44861) (not e!56947))))

(assert (=> d!23197 (= res!44861 (isStrictlySorted!298 lt!41522))))

(assert (=> d!23197 (= lt!41522 e!56948)))

(assert (=> d!23197 (= c!14398 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40316))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40316)))) (_1!1110 lt!40324))))))

(assert (=> d!23197 (isStrictlySorted!298 (t!5240 (toList!746 lt!40316)))))

(assert (=> d!23197 (= (insertStrictlySorted!60 (t!5240 (toList!746 lt!40316)) (_1!1110 lt!40324) (_2!1110 lt!40324)) lt!41522)))

(declare-fun b!87419 () Bool)

(assert (=> b!87419 (= e!56947 (contains!754 lt!41522 (tuple2!2199 (_1!1110 lt!40324) (_2!1110 lt!40324))))))

(assert (= (and d!23197 c!14398) b!87415))

(assert (= (and d!23197 (not c!14398)) b!87414))

(assert (= (and b!87414 c!14399) b!87420))

(assert (= (and b!87414 (not c!14399)) b!87416))

(assert (= (and b!87416 c!14401) b!87411))

(assert (= (and b!87416 (not c!14401)) b!87412))

(assert (= (or b!87411 b!87412) bm!8350))

(assert (= (or b!87420 bm!8350) bm!8349))

(assert (= (or b!87415 bm!8349) bm!8348))

(assert (= (and bm!8348 c!14400) b!87417))

(assert (= (and bm!8348 (not c!14400)) b!87418))

(assert (= (and d!23197 res!44861) b!87413))

(assert (= (and b!87413 res!44860) b!87419))

(declare-fun m!93181 () Bool)

(assert (=> d!23197 m!93181))

(assert (=> d!23197 m!92553))

(declare-fun m!93183 () Bool)

(assert (=> b!87413 m!93183))

(declare-fun m!93185 () Bool)

(assert (=> b!87417 m!93185))

(declare-fun m!93187 () Bool)

(assert (=> b!87419 m!93187))

(declare-fun m!93189 () Bool)

(assert (=> bm!8348 m!93189))

(assert (=> b!85777 d!23197))

(declare-fun d!23199 () Bool)

(declare-fun e!56950 () Bool)

(assert (=> d!23199 e!56950))

(declare-fun res!44862 () Bool)

(assert (=> d!23199 (=> (not res!44862) (not e!56950))))

(declare-fun lt!41525 () ListLongMap!1461)

(assert (=> d!23199 (= res!44862 (contains!753 lt!41525 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41524 () List!1519)

(assert (=> d!23199 (= lt!41525 (ListLongMap!1462 lt!41524))))

(declare-fun lt!41526 () Unit!2517)

(declare-fun lt!41523 () Unit!2517)

(assert (=> d!23199 (= lt!41526 lt!41523)))

(assert (=> d!23199 (= (getValueByKey!140 lt!41524 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23199 (= lt!41523 (lemmaContainsTupThenGetReturnValue!57 lt!41524 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23199 (= lt!41524 (insertStrictlySorted!60 (toList!746 call!8174) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23199 (= (+!110 call!8174 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41525)))

(declare-fun b!87421 () Bool)

(declare-fun res!44863 () Bool)

(assert (=> b!87421 (=> (not res!44863) (not e!56950))))

(assert (=> b!87421 (= res!44863 (= (getValueByKey!140 (toList!746 lt!41525) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!87422 () Bool)

(assert (=> b!87422 (= e!56950 (contains!754 (toList!746 lt!41525) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1195 (select (arr!1920 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!341 (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!23199 res!44862) b!87421))

(assert (= (and b!87421 res!44863) b!87422))

(declare-fun m!93191 () Bool)

(assert (=> d!23199 m!93191))

(declare-fun m!93193 () Bool)

(assert (=> d!23199 m!93193))

(declare-fun m!93195 () Bool)

(assert (=> d!23199 m!93195))

(declare-fun m!93197 () Bool)

(assert (=> d!23199 m!93197))

(declare-fun m!93199 () Bool)

(assert (=> b!87421 m!93199))

(declare-fun m!93201 () Bool)

(assert (=> b!87422 m!93201))

(assert (=> b!85862 d!23199))

(assert (=> b!85862 d!22467))

(declare-fun d!23201 () Bool)

(assert (=> d!23201 (not (contains!753 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701)) lt!40696))))

(declare-fun lt!41527 () Unit!2517)

(assert (=> d!23201 (= lt!41527 (choose!502 lt!40698 lt!40697 lt!40701 lt!40696))))

(declare-fun e!56951 () Bool)

(assert (=> d!23201 e!56951))

(declare-fun res!44864 () Bool)

(assert (=> d!23201 (=> (not res!44864) (not e!56951))))

(assert (=> d!23201 (= res!44864 (not (contains!753 lt!40698 lt!40696)))))

(assert (=> d!23201 (= (addStillNotContains!31 lt!40698 lt!40697 lt!40701 lt!40696) lt!41527)))

(declare-fun b!87423 () Bool)

(assert (=> b!87423 (= e!56951 (not (= lt!40697 lt!40696)))))

(assert (= (and d!23201 res!44864) b!87423))

(assert (=> d!23201 m!90533))

(assert (=> d!23201 m!90533))

(assert (=> d!23201 m!90535))

(declare-fun m!93203 () Bool)

(assert (=> d!23201 m!93203))

(declare-fun m!93205 () Bool)

(assert (=> d!23201 m!93205))

(assert (=> b!85862 d!23201))

(declare-fun d!23203 () Bool)

(declare-fun e!56953 () Bool)

(assert (=> d!23203 e!56953))

(declare-fun res!44865 () Bool)

(assert (=> d!23203 (=> res!44865 e!56953)))

(declare-fun lt!41528 () Bool)

(assert (=> d!23203 (= res!44865 (not lt!41528))))

(declare-fun lt!41529 () Bool)

(assert (=> d!23203 (= lt!41528 lt!41529)))

(declare-fun lt!41531 () Unit!2517)

(declare-fun e!56952 () Unit!2517)

(assert (=> d!23203 (= lt!41531 e!56952)))

(declare-fun c!14402 () Bool)

(assert (=> d!23203 (= c!14402 lt!41529)))

(assert (=> d!23203 (= lt!41529 (containsKey!144 (toList!746 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701))) lt!40696))))

(assert (=> d!23203 (= (contains!753 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701)) lt!40696) lt!41528)))

(declare-fun b!87424 () Bool)

(declare-fun lt!41530 () Unit!2517)

(assert (=> b!87424 (= e!56952 lt!41530)))

(assert (=> b!87424 (= lt!41530 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701))) lt!40696))))

(assert (=> b!87424 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701))) lt!40696))))

(declare-fun b!87425 () Bool)

(declare-fun Unit!2592 () Unit!2517)

(assert (=> b!87425 (= e!56952 Unit!2592)))

(declare-fun b!87426 () Bool)

(assert (=> b!87426 (= e!56953 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701))) lt!40696)))))

(assert (= (and d!23203 c!14402) b!87424))

(assert (= (and d!23203 (not c!14402)) b!87425))

(assert (= (and d!23203 (not res!44865)) b!87426))

(declare-fun m!93207 () Bool)

(assert (=> d!23203 m!93207))

(declare-fun m!93209 () Bool)

(assert (=> b!87424 m!93209))

(declare-fun m!93211 () Bool)

(assert (=> b!87424 m!93211))

(assert (=> b!87424 m!93211))

(declare-fun m!93213 () Bool)

(assert (=> b!87424 m!93213))

(assert (=> b!87426 m!93211))

(assert (=> b!87426 m!93211))

(assert (=> b!87426 m!93213))

(assert (=> b!85862 d!23203))

(declare-fun d!23205 () Bool)

(declare-fun e!56954 () Bool)

(assert (=> d!23205 e!56954))

(declare-fun res!44866 () Bool)

(assert (=> d!23205 (=> (not res!44866) (not e!56954))))

(declare-fun lt!41534 () ListLongMap!1461)

(assert (=> d!23205 (= res!44866 (contains!753 lt!41534 (_1!1110 (tuple2!2199 lt!40697 lt!40701))))))

(declare-fun lt!41533 () List!1519)

(assert (=> d!23205 (= lt!41534 (ListLongMap!1462 lt!41533))))

(declare-fun lt!41535 () Unit!2517)

(declare-fun lt!41532 () Unit!2517)

(assert (=> d!23205 (= lt!41535 lt!41532)))

(assert (=> d!23205 (= (getValueByKey!140 lt!41533 (_1!1110 (tuple2!2199 lt!40697 lt!40701))) (Some!145 (_2!1110 (tuple2!2199 lt!40697 lt!40701))))))

(assert (=> d!23205 (= lt!41532 (lemmaContainsTupThenGetReturnValue!57 lt!41533 (_1!1110 (tuple2!2199 lt!40697 lt!40701)) (_2!1110 (tuple2!2199 lt!40697 lt!40701))))))

(assert (=> d!23205 (= lt!41533 (insertStrictlySorted!60 (toList!746 lt!40698) (_1!1110 (tuple2!2199 lt!40697 lt!40701)) (_2!1110 (tuple2!2199 lt!40697 lt!40701))))))

(assert (=> d!23205 (= (+!110 lt!40698 (tuple2!2199 lt!40697 lt!40701)) lt!41534)))

(declare-fun b!87427 () Bool)

(declare-fun res!44867 () Bool)

(assert (=> b!87427 (=> (not res!44867) (not e!56954))))

(assert (=> b!87427 (= res!44867 (= (getValueByKey!140 (toList!746 lt!41534) (_1!1110 (tuple2!2199 lt!40697 lt!40701))) (Some!145 (_2!1110 (tuple2!2199 lt!40697 lt!40701)))))))

(declare-fun b!87428 () Bool)

(assert (=> b!87428 (= e!56954 (contains!754 (toList!746 lt!41534) (tuple2!2199 lt!40697 lt!40701)))))

(assert (= (and d!23205 res!44866) b!87427))

(assert (= (and b!87427 res!44867) b!87428))

(declare-fun m!93215 () Bool)

(assert (=> d!23205 m!93215))

(declare-fun m!93217 () Bool)

(assert (=> d!23205 m!93217))

(declare-fun m!93219 () Bool)

(assert (=> d!23205 m!93219))

(declare-fun m!93221 () Bool)

(assert (=> d!23205 m!93221))

(declare-fun m!93223 () Bool)

(assert (=> b!87427 m!93223))

(declare-fun m!93225 () Bool)

(assert (=> b!87428 m!93225))

(assert (=> b!85862 d!23205))

(declare-fun d!23207 () Bool)

(declare-fun res!44868 () Bool)

(declare-fun e!56955 () Bool)

(assert (=> d!23207 (=> res!44868 e!56955)))

(assert (=> d!23207 (= res!44868 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40315))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40315)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!23207 (= (containsKey!144 (t!5240 (toList!746 lt!40315)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56955)))

(declare-fun b!87429 () Bool)

(declare-fun e!56956 () Bool)

(assert (=> b!87429 (= e!56955 e!56956)))

(declare-fun res!44869 () Bool)

(assert (=> b!87429 (=> (not res!44869) (not e!56956))))

(assert (=> b!87429 (= res!44869 (and (or (not ((_ is Cons!1515) (t!5240 (toList!746 lt!40315)))) (bvsle (_1!1110 (h!2106 (t!5240 (toList!746 lt!40315)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))) ((_ is Cons!1515) (t!5240 (toList!746 lt!40315))) (bvslt (_1!1110 (h!2106 (t!5240 (toList!746 lt!40315)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(declare-fun b!87430 () Bool)

(assert (=> b!87430 (= e!56956 (containsKey!144 (t!5240 (t!5240 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(assert (= (and d!23207 (not res!44868)) b!87429))

(assert (= (and b!87429 res!44869) b!87430))

(assert (=> b!87430 m!89857))

(declare-fun m!93227 () Bool)

(assert (=> b!87430 m!93227))

(assert (=> b!86041 d!23207))

(declare-fun d!23209 () Bool)

(assert (=> d!23209 (= (inRange!0 (ite c!14040 (index!3109 lt!40970) (index!3112 lt!40970)) (mask!6366 newMap!16)) (and (bvsge (ite c!14040 (index!3109 lt!40970) (index!3112 lt!40970)) #b00000000000000000000000000000000) (bvslt (ite c!14040 (index!3109 lt!40970) (index!3112 lt!40970)) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8214 d!23209))

(declare-fun b!87431 () Bool)

(declare-fun e!56957 () Option!146)

(assert (=> b!87431 (= e!56957 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40315))))))))

(declare-fun d!23211 () Bool)

(declare-fun c!14403 () Bool)

(assert (=> d!23211 (= c!14403 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40315))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40315)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355))))))

(assert (=> d!23211 (= (getValueByKey!140 (t!5240 (toList!746 lt!40315)) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)) e!56957)))

(declare-fun b!87434 () Bool)

(declare-fun e!56958 () Option!146)

(assert (=> b!87434 (= e!56958 None!144)))

(declare-fun b!87433 () Bool)

(assert (=> b!87433 (= e!56958 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40315))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))

(declare-fun b!87432 () Bool)

(assert (=> b!87432 (= e!56957 e!56958)))

(declare-fun c!14404 () Bool)

(assert (=> b!87432 (= c!14404 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40315))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40315)))) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355)))))))

(assert (= (and d!23211 c!14403) b!87431))

(assert (= (and d!23211 (not c!14403)) b!87432))

(assert (= (and b!87432 c!14404) b!87433))

(assert (= (and b!87432 (not c!14404)) b!87434))

(assert (=> b!87433 m!89857))

(declare-fun m!93229 () Bool)

(assert (=> b!87433 m!93229))

(assert (=> b!85982 d!23211))

(declare-fun d!23213 () Bool)

(declare-fun e!56959 () Bool)

(assert (=> d!23213 e!56959))

(declare-fun res!44870 () Bool)

(assert (=> d!23213 (=> (not res!44870) (not e!56959))))

(declare-fun lt!41538 () ListLongMap!1461)

(assert (=> d!23213 (= res!44870 (contains!753 lt!41538 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun lt!41537 () List!1519)

(assert (=> d!23213 (= lt!41538 (ListLongMap!1462 lt!41537))))

(declare-fun lt!41539 () Unit!2517)

(declare-fun lt!41536 () Unit!2517)

(assert (=> d!23213 (= lt!41539 lt!41536)))

(assert (=> d!23213 (= (getValueByKey!140 lt!41537 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23213 (= lt!41536 (lemmaContainsTupThenGetReturnValue!57 lt!41537 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23213 (= lt!41537 (insertStrictlySorted!60 (toList!746 call!8191) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23213 (= (+!110 call!8191 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) lt!41538)))

(declare-fun b!87435 () Bool)

(declare-fun res!44871 () Bool)

(assert (=> b!87435 (=> (not res!44871) (not e!56959))))

(assert (=> b!87435 (= res!44871 (= (getValueByKey!140 (toList!746 lt!41538) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun b!87436 () Bool)

(assert (=> b!87436 (= e!56959 (contains!754 (toList!746 lt!41538) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(assert (= (and d!23213 res!44870) b!87435))

(assert (= (and b!87435 res!44871) b!87436))

(declare-fun m!93231 () Bool)

(assert (=> d!23213 m!93231))

(declare-fun m!93233 () Bool)

(assert (=> d!23213 m!93233))

(declare-fun m!93235 () Bool)

(assert (=> d!23213 m!93235))

(declare-fun m!93237 () Bool)

(assert (=> d!23213 m!93237))

(declare-fun m!93239 () Bool)

(assert (=> b!87435 m!93239))

(declare-fun m!93241 () Bool)

(assert (=> b!87436 m!93241))

(assert (=> b!86021 d!23213))

(assert (=> b!85820 d!22573))

(assert (=> d!22219 d!22217))

(declare-fun d!23215 () Bool)

(assert (=> d!23215 (= (getValueByKey!140 lt!40567 (_1!1110 lt!40324)) (Some!145 (_2!1110 lt!40324)))))

(assert (=> d!23215 true))

(declare-fun _$22!422 () Unit!2517)

(assert (=> d!23215 (= (choose!500 lt!40567 (_1!1110 lt!40324) (_2!1110 lt!40324)) _$22!422)))

(declare-fun bs!3704 () Bool)

(assert (= bs!3704 d!23215))

(assert (=> bs!3704 m!90145))

(assert (=> d!22219 d!23215))

(declare-fun d!23217 () Bool)

(declare-fun res!44872 () Bool)

(declare-fun e!56960 () Bool)

(assert (=> d!23217 (=> res!44872 e!56960)))

(assert (=> d!23217 (= res!44872 (or ((_ is Nil!1516) lt!40567) ((_ is Nil!1516) (t!5240 lt!40567))))))

(assert (=> d!23217 (= (isStrictlySorted!298 lt!40567) e!56960)))

(declare-fun b!87437 () Bool)

(declare-fun e!56961 () Bool)

(assert (=> b!87437 (= e!56960 e!56961)))

(declare-fun res!44873 () Bool)

(assert (=> b!87437 (=> (not res!44873) (not e!56961))))

(assert (=> b!87437 (= res!44873 (bvslt (_1!1110 (h!2106 lt!40567)) (_1!1110 (h!2106 (t!5240 lt!40567)))))))

(declare-fun b!87438 () Bool)

(assert (=> b!87438 (= e!56961 (isStrictlySorted!298 (t!5240 lt!40567)))))

(assert (= (and d!23217 (not res!44872)) b!87437))

(assert (= (and b!87437 res!44873) b!87438))

(declare-fun m!93243 () Bool)

(assert (=> b!87438 m!93243))

(assert (=> d!22219 d!23217))

(declare-fun d!23219 () Bool)

(declare-fun c!14405 () Bool)

(assert (=> d!23219 (= c!14405 ((_ is Nil!1516) (toList!746 lt!40604)))))

(declare-fun e!56962 () (InoxSet tuple2!2198))

(assert (=> d!23219 (= (content!89 (toList!746 lt!40604)) e!56962)))

(declare-fun b!87439 () Bool)

(assert (=> b!87439 (= e!56962 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!87440 () Bool)

(assert (=> b!87440 (= e!56962 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40604)) true) (content!89 (t!5240 (toList!746 lt!40604)))))))

(assert (= (and d!23219 c!14405) b!87439))

(assert (= (and d!23219 (not c!14405)) b!87440))

(declare-fun m!93245 () Bool)

(assert (=> b!87440 m!93245))

(declare-fun m!93247 () Bool)

(assert (=> b!87440 m!93247))

(assert (=> d!22193 d!23219))

(declare-fun b!87441 () Bool)

(declare-fun e!56963 () Option!146)

(assert (=> b!87441 (= e!56963 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40986)))))))

(declare-fun d!23221 () Bool)

(declare-fun c!14406 () Bool)

(assert (=> d!23221 (= c!14406 (and ((_ is Cons!1515) (toList!746 lt!40986)) (= (_1!1110 (h!2106 (toList!746 lt!40986))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23221 (= (getValueByKey!140 (toList!746 lt!40986) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56963)))

(declare-fun b!87444 () Bool)

(declare-fun e!56964 () Option!146)

(assert (=> b!87444 (= e!56964 None!144)))

(declare-fun b!87443 () Bool)

(assert (=> b!87443 (= e!56964 (getValueByKey!140 (t!5240 (toList!746 lt!40986)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87442 () Bool)

(assert (=> b!87442 (= e!56963 e!56964)))

(declare-fun c!14407 () Bool)

(assert (=> b!87442 (= c!14407 (and ((_ is Cons!1515) (toList!746 lt!40986)) (not (= (_1!1110 (h!2106 (toList!746 lt!40986))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!23221 c!14406) b!87441))

(assert (= (and d!23221 (not c!14406)) b!87442))

(assert (= (and b!87442 c!14407) b!87443))

(assert (= (and b!87442 (not c!14407)) b!87444))

(declare-fun m!93249 () Bool)

(assert (=> b!87443 m!93249))

(assert (=> b!86218 d!23221))

(assert (=> d!22351 d!22349))

(declare-fun d!23223 () Bool)

(assert (=> d!23223 (= (getValueByKey!140 lt!40599 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(assert (=> d!23223 true))

(declare-fun _$22!423 () Unit!2517)

(assert (=> d!23223 (= (choose!500 lt!40599 (_1!1110 lt!40318) (_2!1110 lt!40318)) _$22!423)))

(declare-fun bs!3705 () Bool)

(assert (= bs!3705 d!23223))

(assert (=> bs!3705 m!90199))

(assert (=> d!22351 d!23223))

(declare-fun d!23225 () Bool)

(declare-fun res!44874 () Bool)

(declare-fun e!56965 () Bool)

(assert (=> d!23225 (=> res!44874 e!56965)))

(assert (=> d!23225 (= res!44874 (or ((_ is Nil!1516) lt!40599) ((_ is Nil!1516) (t!5240 lt!40599))))))

(assert (=> d!23225 (= (isStrictlySorted!298 lt!40599) e!56965)))

(declare-fun b!87445 () Bool)

(declare-fun e!56966 () Bool)

(assert (=> b!87445 (= e!56965 e!56966)))

(declare-fun res!44875 () Bool)

(assert (=> b!87445 (=> (not res!44875) (not e!56966))))

(assert (=> b!87445 (= res!44875 (bvslt (_1!1110 (h!2106 lt!40599)) (_1!1110 (h!2106 (t!5240 lt!40599)))))))

(declare-fun b!87446 () Bool)

(assert (=> b!87446 (= e!56966 (isStrictlySorted!298 (t!5240 lt!40599)))))

(assert (= (and d!23225 (not res!44874)) b!87445))

(assert (= (and b!87445 res!44875) b!87446))

(declare-fun m!93251 () Bool)

(assert (=> b!87446 m!93251))

(assert (=> d!22351 d!23225))

(declare-fun d!23227 () Bool)

(declare-fun res!44876 () Bool)

(declare-fun e!56967 () Bool)

(assert (=> d!23227 (=> res!44876 e!56967)))

(assert (=> d!23227 (= res!44876 (and ((_ is Cons!1515) (toList!746 lt!40556)) (= (_1!1110 (h!2106 (toList!746 lt!40556))) (_1!1110 lt!40322))))))

(assert (=> d!23227 (= (containsKey!144 (toList!746 lt!40556) (_1!1110 lt!40322)) e!56967)))

(declare-fun b!87447 () Bool)

(declare-fun e!56968 () Bool)

(assert (=> b!87447 (= e!56967 e!56968)))

(declare-fun res!44877 () Bool)

(assert (=> b!87447 (=> (not res!44877) (not e!56968))))

(assert (=> b!87447 (= res!44877 (and (or (not ((_ is Cons!1515) (toList!746 lt!40556))) (bvsle (_1!1110 (h!2106 (toList!746 lt!40556))) (_1!1110 lt!40322))) ((_ is Cons!1515) (toList!746 lt!40556)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40556))) (_1!1110 lt!40322))))))

(declare-fun b!87448 () Bool)

(assert (=> b!87448 (= e!56968 (containsKey!144 (t!5240 (toList!746 lt!40556)) (_1!1110 lt!40322)))))

(assert (= (and d!23227 (not res!44876)) b!87447))

(assert (= (and b!87447 res!44877) b!87448))

(declare-fun m!93253 () Bool)

(assert (=> b!87448 m!93253))

(assert (=> d!22427 d!23227))

(declare-fun b!87449 () Bool)

(declare-fun e!56969 () Option!146)

(assert (=> b!87449 (= e!56969 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40708)))))))

(declare-fun c!14408 () Bool)

(declare-fun d!23229 () Bool)

(assert (=> d!23229 (= c!14408 (and ((_ is Cons!1515) (toList!746 lt!40708)) (= (_1!1110 (h!2106 (toList!746 lt!40708))) (_1!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (=> d!23229 (= (getValueByKey!140 (toList!746 lt!40708) (_1!1110 (tuple2!2199 lt!40586 lt!40590))) e!56969)))

(declare-fun b!87452 () Bool)

(declare-fun e!56970 () Option!146)

(assert (=> b!87452 (= e!56970 None!144)))

(declare-fun b!87451 () Bool)

(assert (=> b!87451 (= e!56970 (getValueByKey!140 (t!5240 (toList!746 lt!40708)) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun b!87450 () Bool)

(assert (=> b!87450 (= e!56969 e!56970)))

(declare-fun c!14409 () Bool)

(assert (=> b!87450 (= c!14409 (and ((_ is Cons!1515) (toList!746 lt!40708)) (not (= (_1!1110 (h!2106 (toList!746 lt!40708))) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))))

(assert (= (and d!23229 c!14408) b!87449))

(assert (= (and d!23229 (not c!14408)) b!87450))

(assert (= (and b!87450 c!14409) b!87451))

(assert (= (and b!87450 (not c!14409)) b!87452))

(declare-fun m!93255 () Bool)

(assert (=> b!87451 m!93255))

(assert (=> b!85879 d!23229))

(declare-fun d!23231 () Bool)

(assert (=> d!23231 (isDefined!93 (getValueByKey!140 (toList!746 lt!40560) (_1!1110 lt!40324)))))

(declare-fun lt!41540 () Unit!2517)

(assert (=> d!23231 (= lt!41540 (choose!504 (toList!746 lt!40560) (_1!1110 lt!40324)))))

(declare-fun e!56971 () Bool)

(assert (=> d!23231 e!56971))

(declare-fun res!44878 () Bool)

(assert (=> d!23231 (=> (not res!44878) (not e!56971))))

(assert (=> d!23231 (= res!44878 (isStrictlySorted!298 (toList!746 lt!40560)))))

(assert (=> d!23231 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40560) (_1!1110 lt!40324)) lt!41540)))

(declare-fun b!87453 () Bool)

(assert (=> b!87453 (= e!56971 (containsKey!144 (toList!746 lt!40560) (_1!1110 lt!40324)))))

(assert (= (and d!23231 res!44878) b!87453))

(assert (=> d!23231 m!90127))

(assert (=> d!23231 m!90127))

(assert (=> d!23231 m!90293))

(declare-fun m!93257 () Bool)

(assert (=> d!23231 m!93257))

(declare-fun m!93259 () Bool)

(assert (=> d!23231 m!93259))

(assert (=> b!87453 m!90289))

(assert (=> b!85762 d!23231))

(assert (=> b!85762 d!22665))

(assert (=> b!85762 d!22257))

(declare-fun d!23233 () Bool)

(declare-fun lt!41541 () Bool)

(assert (=> d!23233 (= lt!41541 (select (content!89 (t!5240 (toList!746 lt!40604))) lt!40318))))

(declare-fun e!56972 () Bool)

(assert (=> d!23233 (= lt!41541 e!56972)))

(declare-fun res!44879 () Bool)

(assert (=> d!23233 (=> (not res!44879) (not e!56972))))

(assert (=> d!23233 (= res!44879 ((_ is Cons!1515) (t!5240 (toList!746 lt!40604))))))

(assert (=> d!23233 (= (contains!754 (t!5240 (toList!746 lt!40604)) lt!40318) lt!41541)))

(declare-fun b!87454 () Bool)

(declare-fun e!56973 () Bool)

(assert (=> b!87454 (= e!56972 e!56973)))

(declare-fun res!44880 () Bool)

(assert (=> b!87454 (=> res!44880 e!56973)))

(assert (=> b!87454 (= res!44880 (= (h!2106 (t!5240 (toList!746 lt!40604))) lt!40318))))

(declare-fun b!87455 () Bool)

(assert (=> b!87455 (= e!56973 (contains!754 (t!5240 (t!5240 (toList!746 lt!40604))) lt!40318))))

(assert (= (and d!23233 res!44879) b!87454))

(assert (= (and b!87454 (not res!44880)) b!87455))

(assert (=> d!23233 m!93247))

(declare-fun m!93261 () Bool)

(assert (=> d!23233 m!93261))

(declare-fun m!93263 () Bool)

(assert (=> b!87455 m!93263))

(assert (=> b!85761 d!23233))

(declare-fun b!87456 () Bool)

(declare-fun e!56974 () Option!146)

(assert (=> b!87456 (= e!56974 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40945)))))))

(declare-fun c!14410 () Bool)

(declare-fun d!23235 () Bool)

(assert (=> d!23235 (= c!14410 (and ((_ is Cons!1515) (toList!746 lt!40945)) (= (_1!1110 (h!2106 (toList!746 lt!40945))) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23235 (= (getValueByKey!140 (toList!746 lt!40945) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!56974)))

(declare-fun b!87459 () Bool)

(declare-fun e!56975 () Option!146)

(assert (=> b!87459 (= e!56975 None!144)))

(declare-fun b!87458 () Bool)

(assert (=> b!87458 (= e!56975 (getValueByKey!140 (t!5240 (toList!746 lt!40945)) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87457 () Bool)

(assert (=> b!87457 (= e!56974 e!56975)))

(declare-fun c!14411 () Bool)

(assert (=> b!87457 (= c!14411 (and ((_ is Cons!1515) (toList!746 lt!40945)) (not (= (_1!1110 (h!2106 (toList!746 lt!40945))) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!23235 c!14410) b!87456))

(assert (= (and d!23235 (not c!14410)) b!87457))

(assert (= (and b!87457 c!14411) b!87458))

(assert (= (and b!87457 (not c!14411)) b!87459))

(declare-fun m!93265 () Bool)

(assert (=> b!87458 m!93265))

(assert (=> b!86147 d!23235))

(declare-fun b!87460 () Bool)

(declare-fun e!56976 () Option!146)

(assert (=> b!87460 (= e!56976 (Some!145 (_2!1110 (h!2106 (toList!746 lt!40689)))))))

(declare-fun c!14412 () Bool)

(declare-fun d!23237 () Bool)

(assert (=> d!23237 (= c!14412 (and ((_ is Cons!1515) (toList!746 lt!40689)) (= (_1!1110 (h!2106 (toList!746 lt!40689))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23237 (= (getValueByKey!140 (toList!746 lt!40689) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!56976)))

(declare-fun b!87463 () Bool)

(declare-fun e!56977 () Option!146)

(assert (=> b!87463 (= e!56977 None!144)))

(declare-fun b!87462 () Bool)

(assert (=> b!87462 (= e!56977 (getValueByKey!140 (t!5240 (toList!746 lt!40689)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87461 () Bool)

(assert (=> b!87461 (= e!56976 e!56977)))

(declare-fun c!14413 () Bool)

(assert (=> b!87461 (= c!14413 (and ((_ is Cons!1515) (toList!746 lt!40689)) (not (= (_1!1110 (h!2106 (toList!746 lt!40689))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23237 c!14412) b!87460))

(assert (= (and d!23237 (not c!14412)) b!87461))

(assert (= (and b!87461 c!14413) b!87462))

(assert (= (and b!87461 (not c!14413)) b!87463))

(declare-fun m!93267 () Bool)

(assert (=> b!87462 m!93267))

(assert (=> b!85856 d!23237))

(declare-fun bm!8351 () Bool)

(declare-fun call!8354 () (_ BitVec 32))

(assert (=> bm!8351 (= call!8354 (arrayCountValidKeys!0 (_keys!4010 (_2!1109 lt!40519)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(declare-fun b!87464 () Bool)

(declare-fun e!56979 () (_ BitVec 32))

(assert (=> b!87464 (= e!56979 call!8354)))

(declare-fun b!87465 () Bool)

(assert (=> b!87465 (= e!56979 (bvadd #b00000000000000000000000000000001 call!8354))))

(declare-fun b!87467 () Bool)

(declare-fun e!56978 () (_ BitVec 32))

(assert (=> b!87467 (= e!56978 #b00000000000000000000000000000000)))

(declare-fun b!87466 () Bool)

(assert (=> b!87466 (= e!56978 e!56979)))

(declare-fun c!14415 () Bool)

(assert (=> b!87466 (= c!14415 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(declare-fun d!23239 () Bool)

(declare-fun lt!41542 () (_ BitVec 32))

(assert (=> d!23239 (and (bvsge lt!41542 #b00000000000000000000000000000000) (bvsle lt!41542 (bvsub (size!2163 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(assert (=> d!23239 (= lt!41542 e!56978)))

(declare-fun c!14414 () Bool)

(assert (=> d!23239 (= c!14414 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(assert (=> d!23239 (and (bvsle #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2163 (_keys!4010 (_2!1109 lt!40519))) (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(assert (=> d!23239 (= (arrayCountValidKeys!0 (_keys!4010 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))) lt!41542)))

(assert (= (and d!23239 c!14414) b!87467))

(assert (= (and d!23239 (not c!14414)) b!87466))

(assert (= (and b!87466 c!14415) b!87465))

(assert (= (and b!87466 (not c!14415)) b!87464))

(assert (= (or b!87465 b!87464) bm!8351))

(declare-fun m!93269 () Bool)

(assert (=> bm!8351 m!93269))

(assert (=> b!87466 m!91889))

(assert (=> b!87466 m!91889))

(assert (=> b!87466 m!91895))

(assert (=> b!85887 d!23239))

(declare-fun b!87468 () Bool)

(declare-fun e!56980 () Option!146)

(assert (=> b!87468 (= e!56980 (Some!145 (_2!1110 (h!2106 (t!5240 (toList!746 lt!40600))))))))

(declare-fun d!23241 () Bool)

(declare-fun c!14416 () Bool)

(assert (=> d!23241 (= c!14416 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40600))) (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40600)))) (_1!1110 lt!40318))))))

(assert (=> d!23241 (= (getValueByKey!140 (t!5240 (toList!746 lt!40600)) (_1!1110 lt!40318)) e!56980)))

(declare-fun b!87471 () Bool)

(declare-fun e!56981 () Option!146)

(assert (=> b!87471 (= e!56981 None!144)))

(declare-fun b!87470 () Bool)

(assert (=> b!87470 (= e!56981 (getValueByKey!140 (t!5240 (t!5240 (toList!746 lt!40600))) (_1!1110 lt!40318)))))

(declare-fun b!87469 () Bool)

(assert (=> b!87469 (= e!56980 e!56981)))

(declare-fun c!14417 () Bool)

(assert (=> b!87469 (= c!14417 (and ((_ is Cons!1515) (t!5240 (toList!746 lt!40600))) (not (= (_1!1110 (h!2106 (t!5240 (toList!746 lt!40600)))) (_1!1110 lt!40318)))))))

(assert (= (and d!23241 c!14416) b!87468))

(assert (= (and d!23241 (not c!14416)) b!87469))

(assert (= (and b!87469 c!14417) b!87470))

(assert (= (and b!87469 (not c!14417)) b!87471))

(declare-fun m!93271 () Bool)

(assert (=> b!87470 m!93271))

(assert (=> b!86234 d!23241))

(declare-fun d!23243 () Bool)

(declare-fun c!14418 () Bool)

(assert (=> d!23243 (= c!14418 ((_ is Nil!1516) (toList!746 lt!40600)))))

(declare-fun e!56982 () (InoxSet tuple2!2198))

(assert (=> d!23243 (= (content!89 (toList!746 lt!40600)) e!56982)))

(declare-fun b!87472 () Bool)

(assert (=> b!87472 (= e!56982 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!87473 () Bool)

(assert (=> b!87473 (= e!56982 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40600)) true) (content!89 (t!5240 (toList!746 lt!40600)))))))

(assert (= (and d!23243 c!14418) b!87472))

(assert (= (and d!23243 (not c!14418)) b!87473))

(declare-fun m!93273 () Bool)

(assert (=> b!87473 m!93273))

(assert (=> b!87473 m!92913))

(assert (=> d!22205 d!23243))

(assert (=> b!86120 d!23063))

(assert (=> b!86120 d!22425))

(declare-fun d!23245 () Bool)

(declare-fun lt!41543 () Bool)

(assert (=> d!23245 (= lt!41543 (select (content!89 (toList!746 lt!40886)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun e!56983 () Bool)

(assert (=> d!23245 (= lt!41543 e!56983)))

(declare-fun res!44881 () Bool)

(assert (=> d!23245 (=> (not res!44881) (not e!56983))))

(assert (=> d!23245 (= res!44881 ((_ is Cons!1515) (toList!746 lt!40886)))))

(assert (=> d!23245 (= (contains!754 (toList!746 lt!40886) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) lt!41543)))

(declare-fun b!87474 () Bool)

(declare-fun e!56984 () Bool)

(assert (=> b!87474 (= e!56983 e!56984)))

(declare-fun res!44882 () Bool)

(assert (=> b!87474 (=> res!44882 e!56984)))

(assert (=> b!87474 (= res!44882 (= (h!2106 (toList!746 lt!40886)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(declare-fun b!87475 () Bool)

(assert (=> b!87475 (= e!56984 (contains!754 (t!5240 (toList!746 lt!40886)) (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))

(assert (= (and d!23245 res!44881) b!87474))

(assert (= (and b!87474 (not res!44882)) b!87475))

(declare-fun m!93275 () Bool)

(assert (=> d!23245 m!93275))

(declare-fun m!93277 () Bool)

(assert (=> d!23245 m!93277))

(declare-fun m!93279 () Bool)

(assert (=> b!87475 m!93279))

(assert (=> b!86046 d!23245))

(declare-fun b!87476 () Bool)

(declare-fun c!14423 () Bool)

(assert (=> b!87476 (= c!14423 (and (not (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56994 () ListLongMap!1461)

(declare-fun e!56995 () ListLongMap!1461)

(assert (=> b!87476 (= e!56994 e!56995)))

(declare-fun b!87477 () Bool)

(declare-fun res!44885 () Bool)

(declare-fun e!56987 () Bool)

(assert (=> b!87477 (=> (not res!44885) (not e!56987))))

(declare-fun e!56992 () Bool)

(assert (=> b!87477 (= res!44885 e!56992)))

(declare-fun res!44883 () Bool)

(assert (=> b!87477 (=> res!44883 e!56992)))

(declare-fun e!56986 () Bool)

(assert (=> b!87477 (= res!44883 (not e!56986))))

(declare-fun res!44886 () Bool)

(assert (=> b!87477 (=> (not res!44886) (not e!56986))))

(assert (=> b!87477 (= res!44886 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(declare-fun bm!8352 () Bool)

(declare-fun call!8359 () ListLongMap!1461)

(assert (=> bm!8352 (= call!8359 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))))))

(declare-fun b!87478 () Bool)

(declare-fun e!56997 () Bool)

(declare-fun lt!41563 () ListLongMap!1461)

(assert (=> b!87478 (= e!56997 (= (apply!82 lt!41563 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2230 (_2!1109 lt!40519))))))

(declare-fun b!87479 () Bool)

(declare-fun e!56990 () Bool)

(assert (=> b!87479 (= e!56992 e!56990)))

(declare-fun res!44887 () Bool)

(assert (=> b!87479 (=> (not res!44887) (not e!56990))))

(assert (=> b!87479 (= res!44887 (contains!753 lt!41563 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(assert (=> b!87479 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(declare-fun b!87480 () Bool)

(declare-fun e!56996 () Bool)

(assert (=> b!87480 (= e!56987 e!56996)))

(declare-fun c!14420 () Bool)

(assert (=> b!87480 (= c!14420 (not (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87481 () Bool)

(declare-fun e!56985 () Bool)

(assert (=> b!87481 (= e!56996 e!56985)))

(declare-fun res!44888 () Bool)

(declare-fun call!8358 () Bool)

(assert (=> b!87481 (= res!44888 call!8358)))

(assert (=> b!87481 (=> (not res!44888) (not e!56985))))

(declare-fun c!14424 () Bool)

(declare-fun call!8355 () ListLongMap!1461)

(declare-fun call!8361 () ListLongMap!1461)

(declare-fun bm!8353 () Bool)

(declare-fun call!8356 () ListLongMap!1461)

(declare-fun c!14422 () Bool)

(assert (=> bm!8353 (= call!8355 (+!110 (ite c!14424 call!8359 (ite c!14422 call!8361 call!8356)) (ite (or c!14424 c!14422) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (_2!1109 lt!40519))) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (_2!1109 lt!40519))))))))

(declare-fun b!87482 () Bool)

(declare-fun call!8360 () ListLongMap!1461)

(assert (=> b!87482 (= e!56995 call!8360)))

(declare-fun b!87483 () Bool)

(declare-fun e!56993 () Bool)

(declare-fun call!8357 () Bool)

(assert (=> b!87483 (= e!56993 (not call!8357))))

(declare-fun b!87484 () Bool)

(declare-fun e!56991 () Bool)

(assert (=> b!87484 (= e!56991 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(declare-fun b!87485 () Bool)

(declare-fun res!44891 () Bool)

(assert (=> b!87485 (=> (not res!44891) (not e!56987))))

(assert (=> b!87485 (= res!44891 e!56993)))

(declare-fun c!14419 () Bool)

(assert (=> b!87485 (= c!14419 (not (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!87486 () Bool)

(assert (=> b!87486 (= e!56996 (not call!8358))))

(declare-fun b!87487 () Bool)

(assert (=> b!87487 (= e!56995 call!8356)))

(declare-fun b!87488 () Bool)

(assert (=> b!87488 (= e!56993 e!56997)))

(declare-fun res!44889 () Bool)

(assert (=> b!87488 (= res!44889 call!8357)))

(assert (=> b!87488 (=> (not res!44889) (not e!56997))))

(declare-fun b!87489 () Bool)

(declare-fun e!56989 () ListLongMap!1461)

(assert (=> b!87489 (= e!56989 (+!110 call!8355 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 (_2!1109 lt!40519)))))))

(declare-fun d!23247 () Bool)

(assert (=> d!23247 e!56987))

(declare-fun res!44884 () Bool)

(assert (=> d!23247 (=> (not res!44884) (not e!56987))))

(assert (=> d!23247 (= res!44884 (or (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))))

(declare-fun lt!41545 () ListLongMap!1461)

(assert (=> d!23247 (= lt!41563 lt!41545)))

(declare-fun lt!41555 () Unit!2517)

(declare-fun e!56988 () Unit!2517)

(assert (=> d!23247 (= lt!41555 e!56988)))

(declare-fun c!14421 () Bool)

(assert (=> d!23247 (= c!14421 e!56991)))

(declare-fun res!44890 () Bool)

(assert (=> d!23247 (=> (not res!44890) (not e!56991))))

(assert (=> d!23247 (= res!44890 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(assert (=> d!23247 (= lt!41545 e!56989)))

(assert (=> d!23247 (= c!14424 (and (not (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23247 (validMask!0 (mask!6366 (_2!1109 lt!40519)))))

(assert (=> d!23247 (= (getCurrentListMap!439 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))) lt!41563)))

(declare-fun b!87490 () Bool)

(assert (=> b!87490 (= e!56994 call!8360)))

(declare-fun b!87491 () Bool)

(assert (=> b!87491 (= e!56990 (= (apply!82 lt!41563 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (_values!2321 (_2!1109 lt!40519))) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 (_2!1109 lt!40519)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87491 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (_values!2321 (_2!1109 lt!40519)))))))

(assert (=> b!87491 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 (_2!1109 lt!40519)))))))

(declare-fun b!87492 () Bool)

(assert (=> b!87492 (= e!56989 e!56994)))

(assert (=> b!87492 (= c!14422 (and (not (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2177 (_2!1109 lt!40519)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87493 () Bool)

(assert (=> b!87493 (= e!56986 (validKeyInArray!0 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000)))))

(declare-fun bm!8354 () Bool)

(assert (=> bm!8354 (= call!8357 (contains!753 lt!41563 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8355 () Bool)

(assert (=> bm!8355 (= call!8360 call!8355)))

(declare-fun b!87494 () Bool)

(declare-fun Unit!2593 () Unit!2517)

(assert (=> b!87494 (= e!56988 Unit!2593)))

(declare-fun bm!8356 () Bool)

(assert (=> bm!8356 (= call!8356 call!8361)))

(declare-fun bm!8357 () Bool)

(assert (=> bm!8357 (= call!8358 (contains!753 lt!41563 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!8358 () Bool)

(assert (=> bm!8358 (= call!8361 call!8359)))

(declare-fun b!87495 () Bool)

(assert (=> b!87495 (= e!56985 (= (apply!82 lt!41563 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2230 (_2!1109 lt!40519))))))

(declare-fun b!87496 () Bool)

(declare-fun lt!41548 () Unit!2517)

(assert (=> b!87496 (= e!56988 lt!41548)))

(declare-fun lt!41550 () ListLongMap!1461)

(assert (=> b!87496 (= lt!41550 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))))))

(declare-fun lt!41559 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41559 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41557 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41557 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000))))

(declare-fun lt!41549 () Unit!2517)

(assert (=> b!87496 (= lt!41549 (addStillContains!58 lt!41550 lt!41559 (zeroValue!2230 (_2!1109 lt!40519)) lt!41557))))

(assert (=> b!87496 (contains!753 (+!110 lt!41550 (tuple2!2199 lt!41559 (zeroValue!2230 (_2!1109 lt!40519)))) lt!41557)))

(declare-fun lt!41556 () Unit!2517)

(assert (=> b!87496 (= lt!41556 lt!41549)))

(declare-fun lt!41562 () ListLongMap!1461)

(assert (=> b!87496 (= lt!41562 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))))))

(declare-fun lt!41561 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41561 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41560 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41560 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000))))

(declare-fun lt!41565 () Unit!2517)

(assert (=> b!87496 (= lt!41565 (addApplyDifferent!58 lt!41562 lt!41561 (minValue!2230 (_2!1109 lt!40519)) lt!41560))))

(assert (=> b!87496 (= (apply!82 (+!110 lt!41562 (tuple2!2199 lt!41561 (minValue!2230 (_2!1109 lt!40519)))) lt!41560) (apply!82 lt!41562 lt!41560))))

(declare-fun lt!41546 () Unit!2517)

(assert (=> b!87496 (= lt!41546 lt!41565)))

(declare-fun lt!41554 () ListLongMap!1461)

(assert (=> b!87496 (= lt!41554 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))))))

(declare-fun lt!41544 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41544 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41552 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41552 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000))))

(declare-fun lt!41547 () Unit!2517)

(assert (=> b!87496 (= lt!41547 (addApplyDifferent!58 lt!41554 lt!41544 (zeroValue!2230 (_2!1109 lt!40519)) lt!41552))))

(assert (=> b!87496 (= (apply!82 (+!110 lt!41554 (tuple2!2199 lt!41544 (zeroValue!2230 (_2!1109 lt!40519)))) lt!41552) (apply!82 lt!41554 lt!41552))))

(declare-fun lt!41551 () Unit!2517)

(assert (=> b!87496 (= lt!41551 lt!41547)))

(declare-fun lt!41564 () ListLongMap!1461)

(assert (=> b!87496 (= lt!41564 (getCurrentListMapNoExtraKeys!75 (_keys!4010 (_2!1109 lt!40519)) (_values!2321 (_2!1109 lt!40519)) (mask!6366 (_2!1109 lt!40519)) (extraKeys!2177 (_2!1109 lt!40519)) (zeroValue!2230 (_2!1109 lt!40519)) (minValue!2230 (_2!1109 lt!40519)) #b00000000000000000000000000000000 (defaultEntry!2338 (_2!1109 lt!40519))))))

(declare-fun lt!41558 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41558 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41553 () (_ BitVec 64))

(assert (=> b!87496 (= lt!41553 (select (arr!1919 (_keys!4010 (_2!1109 lt!40519))) #b00000000000000000000000000000000))))

(assert (=> b!87496 (= lt!41548 (addApplyDifferent!58 lt!41564 lt!41558 (minValue!2230 (_2!1109 lt!40519)) lt!41553))))

(assert (=> b!87496 (= (apply!82 (+!110 lt!41564 (tuple2!2199 lt!41558 (minValue!2230 (_2!1109 lt!40519)))) lt!41553) (apply!82 lt!41564 lt!41553))))

(assert (= (and d!23247 c!14424) b!87489))

(assert (= (and d!23247 (not c!14424)) b!87492))

(assert (= (and b!87492 c!14422) b!87490))

(assert (= (and b!87492 (not c!14422)) b!87476))

(assert (= (and b!87476 c!14423) b!87482))

(assert (= (and b!87476 (not c!14423)) b!87487))

(assert (= (or b!87482 b!87487) bm!8356))

(assert (= (or b!87490 bm!8356) bm!8358))

(assert (= (or b!87490 b!87482) bm!8355))

(assert (= (or b!87489 bm!8358) bm!8352))

(assert (= (or b!87489 bm!8355) bm!8353))

(assert (= (and d!23247 res!44890) b!87484))

(assert (= (and d!23247 c!14421) b!87496))

(assert (= (and d!23247 (not c!14421)) b!87494))

(assert (= (and d!23247 res!44884) b!87477))

(assert (= (and b!87477 res!44886) b!87493))

(assert (= (and b!87477 (not res!44883)) b!87479))

(assert (= (and b!87479 res!44887) b!87491))

(assert (= (and b!87477 res!44885) b!87485))

(assert (= (and b!87485 c!14419) b!87488))

(assert (= (and b!87485 (not c!14419)) b!87483))

(assert (= (and b!87488 res!44889) b!87478))

(assert (= (or b!87488 b!87483) bm!8354))

(assert (= (and b!87485 res!44891) b!87480))

(assert (= (and b!87480 c!14420) b!87481))

(assert (= (and b!87480 (not c!14420)) b!87486))

(assert (= (and b!87481 res!44888) b!87495))

(assert (= (or b!87481 b!87486) bm!8357))

(declare-fun b_lambda!3859 () Bool)

(assert (=> (not b_lambda!3859) (not b!87491)))

(declare-fun tb!1701 () Bool)

(declare-fun t!5253 () Bool)

(assert (=> (and b!85334 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 (_2!1109 lt!40519))) t!5253) tb!1701))

(declare-fun result!2931 () Bool)

(assert (=> tb!1701 (= result!2931 tp_is_empty!2535)))

(assert (=> b!87491 t!5253))

(declare-fun b_and!5267 () Bool)

(assert (= b_and!5263 (and (=> t!5253 result!2931) b_and!5267)))

(declare-fun tb!1703 () Bool)

(declare-fun t!5255 () Bool)

(assert (=> (and b!85323 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (_2!1109 lt!40519))) t!5255) tb!1703))

(declare-fun result!2933 () Bool)

(assert (= result!2933 result!2931))

(assert (=> b!87491 t!5255))

(declare-fun b_and!5269 () Bool)

(assert (= b_and!5265 (and (=> t!5255 result!2933) b_and!5269)))

(assert (=> b!87493 m!91889))

(assert (=> b!87493 m!91889))

(assert (=> b!87493 m!91895))

(declare-fun m!93281 () Bool)

(assert (=> b!87495 m!93281))

(declare-fun m!93283 () Bool)

(assert (=> bm!8352 m!93283))

(declare-fun m!93285 () Bool)

(assert (=> bm!8354 m!93285))

(declare-fun m!93287 () Bool)

(assert (=> b!87491 m!93287))

(assert (=> b!87491 m!91889))

(declare-fun m!93289 () Bool)

(assert (=> b!87491 m!93289))

(assert (=> b!87491 m!91889))

(declare-fun m!93291 () Bool)

(assert (=> b!87491 m!93291))

(assert (=> b!87491 m!93291))

(assert (=> b!87491 m!93287))

(declare-fun m!93293 () Bool)

(assert (=> b!87491 m!93293))

(assert (=> b!87479 m!91889))

(assert (=> b!87479 m!91889))

(declare-fun m!93295 () Bool)

(assert (=> b!87479 m!93295))

(declare-fun m!93297 () Bool)

(assert (=> b!87489 m!93297))

(assert (=> d!23247 m!91251))

(declare-fun m!93299 () Bool)

(assert (=> bm!8357 m!93299))

(declare-fun m!93301 () Bool)

(assert (=> b!87496 m!93301))

(declare-fun m!93303 () Bool)

(assert (=> b!87496 m!93303))

(declare-fun m!93305 () Bool)

(assert (=> b!87496 m!93305))

(assert (=> b!87496 m!91889))

(declare-fun m!93307 () Bool)

(assert (=> b!87496 m!93307))

(declare-fun m!93309 () Bool)

(assert (=> b!87496 m!93309))

(declare-fun m!93311 () Bool)

(assert (=> b!87496 m!93311))

(declare-fun m!93313 () Bool)

(assert (=> b!87496 m!93313))

(declare-fun m!93315 () Bool)

(assert (=> b!87496 m!93315))

(declare-fun m!93317 () Bool)

(assert (=> b!87496 m!93317))

(declare-fun m!93319 () Bool)

(assert (=> b!87496 m!93319))

(assert (=> b!87496 m!93303))

(assert (=> b!87496 m!93309))

(declare-fun m!93321 () Bool)

(assert (=> b!87496 m!93321))

(declare-fun m!93323 () Bool)

(assert (=> b!87496 m!93323))

(declare-fun m!93325 () Bool)

(assert (=> b!87496 m!93325))

(assert (=> b!87496 m!93313))

(assert (=> b!87496 m!93323))

(assert (=> b!87496 m!93283))

(declare-fun m!93327 () Bool)

(assert (=> b!87496 m!93327))

(declare-fun m!93329 () Bool)

(assert (=> b!87496 m!93329))

(assert (=> b!87484 m!91889))

(assert (=> b!87484 m!91889))

(assert (=> b!87484 m!91895))

(declare-fun m!93331 () Bool)

(assert (=> b!87478 m!93331))

(declare-fun m!93333 () Bool)

(assert (=> bm!8353 m!93333))

(assert (=> d!22283 d!23247))

(assert (=> d!22231 d!22181))

(assert (=> bm!8213 d!22331))

(declare-fun d!23249 () Bool)

(declare-fun lt!41566 () Bool)

(assert (=> d!23249 (= lt!41566 (select (content!89 lt!40595) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun e!56998 () Bool)

(assert (=> d!23249 (= lt!41566 e!56998)))

(declare-fun res!44892 () Bool)

(assert (=> d!23249 (=> (not res!44892) (not e!56998))))

(assert (=> d!23249 (= res!44892 ((_ is Cons!1515) lt!40595))))

(assert (=> d!23249 (= (contains!754 lt!40595 (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))) lt!41566)))

(declare-fun b!87497 () Bool)

(declare-fun e!56999 () Bool)

(assert (=> b!87497 (= e!56998 e!56999)))

(declare-fun res!44893 () Bool)

(assert (=> b!87497 (=> res!44893 e!56999)))

(assert (=> b!87497 (= res!44893 (= (h!2106 lt!40595) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(declare-fun b!87498 () Bool)

(assert (=> b!87498 (= e!56999 (contains!754 (t!5240 lt!40595) (tuple2!2199 (_1!1110 lt!40322) (_2!1110 lt!40322))))))

(assert (= (and d!23249 res!44892) b!87497))

(assert (= (and b!87497 (not res!44893)) b!87498))

(declare-fun m!93335 () Bool)

(assert (=> d!23249 m!93335))

(declare-fun m!93337 () Bool)

(assert (=> d!23249 m!93337))

(declare-fun m!93339 () Bool)

(assert (=> b!87498 m!93339))

(assert (=> b!86126 d!23249))

(assert (=> b!85829 d!22573))

(declare-fun d!23251 () Bool)

(declare-fun e!57000 () Bool)

(assert (=> d!23251 e!57000))

(declare-fun res!44894 () Bool)

(assert (=> d!23251 (=> (not res!44894) (not e!57000))))

(declare-fun lt!41569 () ListLongMap!1461)

(assert (=> d!23251 (= res!44894 (contains!753 lt!41569 (_1!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun lt!41568 () List!1519)

(assert (=> d!23251 (= lt!41569 (ListLongMap!1462 lt!41568))))

(declare-fun lt!41570 () Unit!2517)

(declare-fun lt!41567 () Unit!2517)

(assert (=> d!23251 (= lt!41570 lt!41567)))

(assert (=> d!23251 (= (getValueByKey!140 lt!41568 (_1!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23251 (= lt!41567 (lemmaContainsTupThenGetReturnValue!57 lt!41568 (_1!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23251 (= lt!41568 (insertStrictlySorted!60 (toList!746 (ite c!14016 call!8202 (ite c!14014 call!8204 call!8199))) (_1!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23251 (= (+!110 (ite c!14016 call!8202 (ite c!14014 call!8204 call!8199)) (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) lt!41569)))

(declare-fun b!87499 () Bool)

(declare-fun res!44895 () Bool)

(assert (=> b!87499 (=> (not res!44895) (not e!57000))))

(assert (=> b!87499 (= res!44895 (= (getValueByKey!140 (toList!746 lt!41569) (_1!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))))

(declare-fun b!87500 () Bool)

(assert (=> b!87500 (= e!57000 (contains!754 (toList!746 lt!41569) (ite (or c!14016 c!14014) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (= (and d!23251 res!44894) b!87499))

(assert (= (and b!87499 res!44895) b!87500))

(declare-fun m!93341 () Bool)

(assert (=> d!23251 m!93341))

(declare-fun m!93343 () Bool)

(assert (=> d!23251 m!93343))

(declare-fun m!93345 () Bool)

(assert (=> d!23251 m!93345))

(declare-fun m!93347 () Bool)

(assert (=> d!23251 m!93347))

(declare-fun m!93349 () Bool)

(assert (=> b!87499 m!93349))

(declare-fun m!93351 () Bool)

(assert (=> b!87500 m!93351))

(assert (=> bm!8196 d!23251))

(declare-fun d!23253 () Bool)

(declare-fun e!57001 () Bool)

(assert (=> d!23253 e!57001))

(declare-fun res!44896 () Bool)

(assert (=> d!23253 (=> (not res!44896) (not e!57001))))

(declare-fun lt!41573 () ListLongMap!1461)

(assert (=> d!23253 (= res!44896 (contains!753 lt!41573 (_1!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun lt!41572 () List!1519)

(assert (=> d!23253 (= lt!41573 (ListLongMap!1462 lt!41572))))

(declare-fun lt!41574 () Unit!2517)

(declare-fun lt!41571 () Unit!2517)

(assert (=> d!23253 (= lt!41574 lt!41571)))

(assert (=> d!23253 (= (getValueByKey!140 lt!41572 (_1!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23253 (= lt!41571 (lemmaContainsTupThenGetReturnValue!57 lt!41572 (_1!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23253 (= lt!41572 (insertStrictlySorted!60 (toList!746 (ite c!13997 call!8195 (ite c!13995 call!8197 call!8192))) (_1!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (_2!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(assert (=> d!23253 (= (+!110 (ite c!13997 call!8195 (ite c!13995 call!8197 call!8192)) (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) lt!41573)))

(declare-fun b!87501 () Bool)

(declare-fun res!44897 () Bool)

(assert (=> b!87501 (=> (not res!44897) (not e!57001))))

(assert (=> b!87501 (= res!44897 (= (getValueByKey!140 (toList!746 lt!41573) (_1!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))))

(declare-fun b!87502 () Bool)

(assert (=> b!87502 (= e!57001 (contains!754 (toList!746 lt!41573) (ite (or c!13997 c!13995) (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 newMap!16)) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (= (and d!23253 res!44896) b!87501))

(assert (= (and b!87501 res!44897) b!87502))

(declare-fun m!93353 () Bool)

(assert (=> d!23253 m!93353))

(declare-fun m!93355 () Bool)

(assert (=> d!23253 m!93355))

(declare-fun m!93357 () Bool)

(assert (=> d!23253 m!93357))

(declare-fun m!93359 () Bool)

(assert (=> d!23253 m!93359))

(declare-fun m!93361 () Bool)

(assert (=> b!87501 m!93361))

(declare-fun m!93363 () Bool)

(assert (=> b!87502 m!93363))

(assert (=> bm!8189 d!23253))

(declare-fun d!23255 () Bool)

(assert (=> d!23255 (= (inRange!0 (index!3110 lt!41004) (mask!6366 newMap!16)) (and (bvsge (index!3110 lt!41004) #b00000000000000000000000000000000) (bvslt (index!3110 lt!41004) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!86230 d!23255))

(declare-fun b!87503 () Bool)

(declare-fun e!57004 () ListLongMap!1461)

(declare-fun call!8362 () ListLongMap!1461)

(assert (=> b!87503 (= e!57004 call!8362)))

(declare-fun b!87504 () Bool)

(declare-fun e!57002 () Bool)

(assert (=> b!87504 (= e!57002 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87504 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!87505 () Bool)

(declare-fun lt!41579 () Unit!2517)

(declare-fun lt!41580 () Unit!2517)

(assert (=> b!87505 (= lt!41579 lt!41580)))

(declare-fun lt!41581 () V!3027)

(declare-fun lt!41576 () (_ BitVec 64))

(declare-fun lt!41577 () (_ BitVec 64))

(declare-fun lt!41578 () ListLongMap!1461)

(assert (=> b!87505 (not (contains!753 (+!110 lt!41578 (tuple2!2199 lt!41577 lt!41581)) lt!41576))))

(assert (=> b!87505 (= lt!41580 (addStillNotContains!31 lt!41578 lt!41577 lt!41581 lt!41576))))

(assert (=> b!87505 (= lt!41576 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!87505 (= lt!41581 (get!1195 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!87505 (= lt!41577 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87505 (= lt!41578 call!8362)))

(assert (=> b!87505 (= e!57004 (+!110 call!8362 (tuple2!2199 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000) (get!1195 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!23257 () Bool)

(declare-fun e!57003 () Bool)

(assert (=> d!23257 e!57003))

(declare-fun res!44898 () Bool)

(assert (=> d!23257 (=> (not res!44898) (not e!57003))))

(declare-fun lt!41575 () ListLongMap!1461)

(assert (=> d!23257 (= res!44898 (not (contains!753 lt!41575 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!57005 () ListLongMap!1461)

(assert (=> d!23257 (= lt!41575 e!57005)))

(declare-fun c!14427 () Bool)

(assert (=> d!23257 (= c!14427 (bvsge #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> d!23257 (validMask!0 (mask!6366 newMap!16))))

(assert (=> d!23257 (= (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2338 newMap!16)) lt!41575)))

(declare-fun b!87506 () Bool)

(assert (=> b!87506 (= e!57005 (ListLongMap!1462 Nil!1516))))

(declare-fun b!87507 () Bool)

(declare-fun e!57007 () Bool)

(assert (=> b!87507 (= e!57007 (= lt!41575 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16))))))

(declare-fun bm!8359 () Bool)

(assert (=> bm!8359 (= call!8362 (getCurrentListMapNoExtraKeys!75 (_keys!4010 newMap!16) (ite c!13892 (_values!2321 newMap!16) lt!40533) (mask!6366 newMap!16) (ite c!13892 (ite c!13883 lt!40541 lt!40521) (extraKeys!2177 newMap!16)) (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2338 newMap!16)))))

(declare-fun b!87508 () Bool)

(assert (=> b!87508 (= e!57005 e!57004)))

(declare-fun c!14428 () Bool)

(assert (=> b!87508 (= c!14428 (validKeyInArray!0 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87509 () Bool)

(assert (=> b!87509 (= e!57007 (isEmpty!335 lt!41575))))

(declare-fun b!87510 () Bool)

(declare-fun e!57008 () Bool)

(declare-fun e!57006 () Bool)

(assert (=> b!87510 (= e!57008 e!57006)))

(assert (=> b!87510 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun res!44901 () Bool)

(assert (=> b!87510 (= res!44901 (contains!753 lt!41575 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87510 (=> (not res!44901) (not e!57006))))

(declare-fun b!87511 () Bool)

(assert (=> b!87511 (= e!57008 e!57007)))

(declare-fun c!14425 () Bool)

(assert (=> b!87511 (= c!14425 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!87512 () Bool)

(assert (=> b!87512 (= e!57003 e!57008)))

(declare-fun c!14426 () Bool)

(assert (=> b!87512 (= c!14426 e!57002)))

(declare-fun res!44899 () Bool)

(assert (=> b!87512 (=> (not res!44899) (not e!57002))))

(assert (=> b!87512 (= res!44899 (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(declare-fun b!87513 () Bool)

(declare-fun res!44900 () Bool)

(assert (=> b!87513 (=> (not res!44900) (not e!57003))))

(assert (=> b!87513 (= res!44900 (not (contains!753 lt!41575 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87514 () Bool)

(assert (=> b!87514 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2163 (_keys!4010 newMap!16))))))

(assert (=> b!87514 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2164 (ite c!13892 (_values!2321 newMap!16) lt!40533))))))

(assert (=> b!87514 (= e!57006 (= (apply!82 lt!41575 (select (arr!1919 (_keys!4010 newMap!16)) #b00000000000000000000000000000000)) (get!1195 (select (arr!1920 (ite c!13892 (_values!2321 newMap!16) lt!40533)) #b00000000000000000000000000000000) (dynLambda!341 (defaultEntry!2338 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!23257 c!14427) b!87506))

(assert (= (and d!23257 (not c!14427)) b!87508))

(assert (= (and b!87508 c!14428) b!87505))

(assert (= (and b!87508 (not c!14428)) b!87503))

(assert (= (or b!87505 b!87503) bm!8359))

(assert (= (and d!23257 res!44898) b!87513))

(assert (= (and b!87513 res!44900) b!87512))

(assert (= (and b!87512 res!44899) b!87504))

(assert (= (and b!87512 c!14426) b!87510))

(assert (= (and b!87512 (not c!14426)) b!87511))

(assert (= (and b!87510 res!44901) b!87514))

(assert (= (and b!87511 c!14425) b!87507))

(assert (= (and b!87511 (not c!14425)) b!87509))

(declare-fun b_lambda!3861 () Bool)

(assert (=> (not b_lambda!3861) (not b!87505)))

(assert (=> b!87505 t!5248))

(declare-fun b_and!5271 () Bool)

(assert (= b_and!5267 (and (=> t!5248 result!2927) b_and!5271)))

(assert (=> b!87505 t!5250))

(declare-fun b_and!5273 () Bool)

(assert (= b_and!5269 (and (=> t!5250 result!2929) b_and!5273)))

(declare-fun b_lambda!3863 () Bool)

(assert (=> (not b_lambda!3863) (not b!87514)))

(assert (=> b!87514 t!5248))

(declare-fun b_and!5275 () Bool)

(assert (= b_and!5271 (and (=> t!5248 result!2927) b_and!5275)))

(assert (=> b!87514 t!5250))

(declare-fun b_and!5277 () Bool)

(assert (= b_and!5273 (and (=> t!5250 result!2929) b_and!5277)))

(assert (=> b!87504 m!90363))

(assert (=> b!87504 m!90363))

(assert (=> b!87504 m!90365))

(assert (=> b!87510 m!90363))

(assert (=> b!87510 m!90363))

(declare-fun m!93365 () Bool)

(assert (=> b!87510 m!93365))

(declare-fun m!93367 () Bool)

(assert (=> bm!8359 m!93367))

(declare-fun m!93369 () Bool)

(assert (=> d!23257 m!93369))

(assert (=> d!23257 m!90385))

(assert (=> b!87508 m!90363))

(assert (=> b!87508 m!90363))

(assert (=> b!87508 m!90365))

(declare-fun m!93371 () Bool)

(assert (=> b!87513 m!93371))

(assert (=> b!87507 m!93367))

(declare-fun m!93373 () Bool)

(assert (=> b!87509 m!93373))

(assert (=> b!87505 m!90377))

(assert (=> b!87505 m!90373))

(assert (=> b!87505 m!90379))

(declare-fun m!93375 () Bool)

(assert (=> b!87505 m!93375))

(assert (=> b!87505 m!90377))

(assert (=> b!87505 m!93375))

(declare-fun m!93377 () Bool)

(assert (=> b!87505 m!93377))

(declare-fun m!93379 () Bool)

(assert (=> b!87505 m!93379))

(assert (=> b!87505 m!90373))

(assert (=> b!87505 m!90363))

(declare-fun m!93381 () Bool)

(assert (=> b!87505 m!93381))

(assert (=> b!87514 m!90377))

(assert (=> b!87514 m!90373))

(assert (=> b!87514 m!90379))

(assert (=> b!87514 m!90377))

(assert (=> b!87514 m!90363))

(declare-fun m!93383 () Bool)

(assert (=> b!87514 m!93383))

(assert (=> b!87514 m!90373))

(assert (=> b!87514 m!90363))

(assert (=> bm!8164 d!23257))

(declare-fun d!23259 () Bool)

(assert (=> d!23259 (isDefined!93 (getValueByKey!140 (toList!746 lt!40556) (_1!1110 lt!40322)))))

(declare-fun lt!41582 () Unit!2517)

(assert (=> d!23259 (= lt!41582 (choose!504 (toList!746 lt!40556) (_1!1110 lt!40322)))))

(declare-fun e!57009 () Bool)

(assert (=> d!23259 e!57009))

(declare-fun res!44902 () Bool)

(assert (=> d!23259 (=> (not res!44902) (not e!57009))))

(assert (=> d!23259 (= res!44902 (isStrictlySorted!298 (toList!746 lt!40556)))))

(assert (=> d!23259 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40556) (_1!1110 lt!40322)) lt!41582)))

(declare-fun b!87515 () Bool)

(assert (=> b!87515 (= e!57009 (containsKey!144 (toList!746 lt!40556) (_1!1110 lt!40322)))))

(assert (= (and d!23259 res!44902) b!87515))

(assert (=> d!23259 m!90115))

(assert (=> d!23259 m!90115))

(assert (=> d!23259 m!91203))

(declare-fun m!93385 () Bool)

(assert (=> d!23259 m!93385))

(declare-fun m!93387 () Bool)

(assert (=> d!23259 m!93387))

(assert (=> b!87515 m!91199))

(assert (=> b!86240 d!23259))

(assert (=> b!86240 d!22705))

(assert (=> b!86240 d!22237))

(assert (=> b!86141 d!22573))

(declare-fun d!23261 () Bool)

(declare-fun e!57011 () Bool)

(assert (=> d!23261 e!57011))

(declare-fun res!44903 () Bool)

(assert (=> d!23261 (=> res!44903 e!57011)))

(declare-fun lt!41583 () Bool)

(assert (=> d!23261 (= res!44903 (not lt!41583))))

(declare-fun lt!41584 () Bool)

(assert (=> d!23261 (= lt!41583 lt!41584)))

(declare-fun lt!41586 () Unit!2517)

(declare-fun e!57010 () Unit!2517)

(assert (=> d!23261 (= lt!41586 e!57010)))

(declare-fun c!14429 () Bool)

(assert (=> d!23261 (= c!14429 lt!41584)))

(assert (=> d!23261 (= lt!41584 (containsKey!144 (toList!746 lt!40695) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23261 (= (contains!753 lt!40695 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41583)))

(declare-fun b!87516 () Bool)

(declare-fun lt!41585 () Unit!2517)

(assert (=> b!87516 (= e!57010 lt!41585)))

(assert (=> b!87516 (= lt!41585 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40695) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87516 (isDefined!93 (getValueByKey!140 (toList!746 lt!40695) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87517 () Bool)

(declare-fun Unit!2594 () Unit!2517)

(assert (=> b!87517 (= e!57010 Unit!2594)))

(declare-fun b!87518 () Bool)

(assert (=> b!87518 (= e!57011 (isDefined!93 (getValueByKey!140 (toList!746 lt!40695) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23261 c!14429) b!87516))

(assert (= (and d!23261 (not c!14429)) b!87517))

(assert (= (and d!23261 (not res!44903)) b!87518))

(declare-fun m!93389 () Bool)

(assert (=> d!23261 m!93389))

(declare-fun m!93391 () Bool)

(assert (=> b!87516 m!93391))

(declare-fun m!93393 () Bool)

(assert (=> b!87516 m!93393))

(assert (=> b!87516 m!93393))

(declare-fun m!93395 () Bool)

(assert (=> b!87516 m!93395))

(assert (=> b!87518 m!93393))

(assert (=> b!87518 m!93393))

(assert (=> b!87518 m!93395))

(assert (=> d!22255 d!23261))

(assert (=> d!22255 d!22169))

(declare-fun b!87520 () Bool)

(declare-fun res!44904 () Bool)

(declare-fun e!57012 () Bool)

(assert (=> b!87520 (=> (not res!44904) (not e!57012))))

(assert (=> b!87520 (= res!44904 (bvsge (size!2167 (v!2645 (underlying!289 thiss!992))) (_size!427 (v!2645 (underlying!289 thiss!992)))))))

(declare-fun d!23263 () Bool)

(declare-fun res!44907 () Bool)

(assert (=> d!23263 (=> (not res!44907) (not e!57012))))

(assert (=> d!23263 (= res!44907 (validMask!0 (mask!6366 (v!2645 (underlying!289 thiss!992)))))))

(assert (=> d!23263 (= (simpleValid!58 (v!2645 (underlying!289 thiss!992))) e!57012)))

(declare-fun b!87521 () Bool)

(declare-fun res!44906 () Bool)

(assert (=> b!87521 (=> (not res!44906) (not e!57012))))

(assert (=> b!87521 (= res!44906 (= (size!2167 (v!2645 (underlying!289 thiss!992))) (bvadd (_size!427 (v!2645 (underlying!289 thiss!992))) (bvsdiv (bvadd (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!87519 () Bool)

(declare-fun res!44905 () Bool)

(assert (=> b!87519 (=> (not res!44905) (not e!57012))))

(assert (=> b!87519 (= res!44905 (and (= (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992)))) (bvadd (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001)) (= (size!2163 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (size!2164 (_values!2321 (v!2645 (underlying!289 thiss!992))))) (bvsge (_size!427 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!427 (v!2645 (underlying!289 thiss!992))) (bvadd (mask!6366 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!87522 () Bool)

(assert (=> b!87522 (= e!57012 (and (bvsge (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2177 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!427 (v!2645 (underlying!289 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!23263 res!44907) b!87519))

(assert (= (and b!87519 res!44905) b!87520))

(assert (= (and b!87520 res!44904) b!87521))

(assert (= (and b!87521 res!44906) b!87522))

(declare-fun m!93397 () Bool)

(assert (=> b!87520 m!93397))

(assert (=> d!23263 m!89899))

(assert (=> b!87521 m!93397))

(assert (=> d!22229 d!23263))

(assert (=> b!85861 d!22735))

(declare-fun d!23265 () Bool)

(declare-fun c!14430 () Bool)

(assert (=> d!23265 (= c!14430 ((_ is Nil!1516) (toList!746 lt!40564)))))

(declare-fun e!57013 () (InoxSet tuple2!2198))

(assert (=> d!23265 (= (content!89 (toList!746 lt!40564)) e!57013)))

(declare-fun b!87523 () Bool)

(assert (=> b!87523 (= e!57013 ((as const (Array tuple2!2198 Bool)) false))))

(declare-fun b!87524 () Bool)

(assert (=> b!87524 (= e!57013 ((_ map or) (store ((as const (Array tuple2!2198 Bool)) false) (h!2106 (toList!746 lt!40564)) true) (content!89 (t!5240 (toList!746 lt!40564)))))))

(assert (= (and d!23265 c!14430) b!87523))

(assert (= (and d!23265 (not c!14430)) b!87524))

(declare-fun m!93399 () Bool)

(assert (=> b!87524 m!93399))

(assert (=> b!87524 m!92663))

(assert (=> d!22277 d!23265))

(declare-fun d!23267 () Bool)

(declare-fun e!57015 () Bool)

(assert (=> d!23267 e!57015))

(declare-fun res!44908 () Bool)

(assert (=> d!23267 (=> res!44908 e!57015)))

(declare-fun lt!41587 () Bool)

(assert (=> d!23267 (= res!44908 (not lt!41587))))

(declare-fun lt!41588 () Bool)

(assert (=> d!23267 (= lt!41587 lt!41588)))

(declare-fun lt!41590 () Unit!2517)

(declare-fun e!57014 () Unit!2517)

(assert (=> d!23267 (= lt!41590 e!57014)))

(declare-fun c!14431 () Bool)

(assert (=> d!23267 (= c!14431 lt!41588)))

(assert (=> d!23267 (= lt!41588 (containsKey!144 (toList!746 lt!40986) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!23267 (= (contains!753 lt!40986 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41587)))

(declare-fun b!87525 () Bool)

(declare-fun lt!41589 () Unit!2517)

(assert (=> b!87525 (= e!57014 lt!41589)))

(assert (=> b!87525 (= lt!41589 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40986) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!87525 (isDefined!93 (getValueByKey!140 (toList!746 lt!40986) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87526 () Bool)

(declare-fun Unit!2595 () Unit!2517)

(assert (=> b!87526 (= e!57014 Unit!2595)))

(declare-fun b!87527 () Bool)

(assert (=> b!87527 (= e!57015 (isDefined!93 (getValueByKey!140 (toList!746 lt!40986) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!23267 c!14431) b!87525))

(assert (= (and d!23267 (not c!14431)) b!87526))

(assert (= (and d!23267 (not res!44908)) b!87527))

(declare-fun m!93401 () Bool)

(assert (=> d!23267 m!93401))

(declare-fun m!93403 () Bool)

(assert (=> b!87525 m!93403))

(assert (=> b!87525 m!91149))

(assert (=> b!87525 m!91149))

(declare-fun m!93405 () Bool)

(assert (=> b!87525 m!93405))

(assert (=> b!87527 m!91149))

(assert (=> b!87527 m!91149))

(assert (=> b!87527 m!93405))

(assert (=> d!22411 d!23267))

(declare-fun b!87528 () Bool)

(declare-fun e!57016 () Option!146)

(assert (=> b!87528 (= e!57016 (Some!145 (_2!1110 (h!2106 lt!40985))))))

(declare-fun d!23269 () Bool)

(declare-fun c!14432 () Bool)

(assert (=> d!23269 (= c!14432 (and ((_ is Cons!1515) lt!40985) (= (_1!1110 (h!2106 lt!40985)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23269 (= (getValueByKey!140 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!57016)))

(declare-fun b!87531 () Bool)

(declare-fun e!57017 () Option!146)

(assert (=> b!87531 (= e!57017 None!144)))

(declare-fun b!87530 () Bool)

(assert (=> b!87530 (= e!57017 (getValueByKey!140 (t!5240 lt!40985) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87529 () Bool)

(assert (=> b!87529 (= e!57016 e!57017)))

(declare-fun c!14433 () Bool)

(assert (=> b!87529 (= c!14433 (and ((_ is Cons!1515) lt!40985) (not (= (_1!1110 (h!2106 lt!40985)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!23269 c!14432) b!87528))

(assert (= (and d!23269 (not c!14432)) b!87529))

(assert (= (and b!87529 c!14433) b!87530))

(assert (= (and b!87529 (not c!14433)) b!87531))

(declare-fun m!93407 () Bool)

(assert (=> b!87530 m!93407))

(assert (=> d!22411 d!23269))

(declare-fun d!23271 () Bool)

(assert (=> d!23271 (= (getValueByKey!140 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41591 () Unit!2517)

(assert (=> d!23271 (= lt!41591 (choose!500 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!57018 () Bool)

(assert (=> d!23271 e!57018))

(declare-fun res!44909 () Bool)

(assert (=> d!23271 (=> (not res!44909) (not e!57018))))

(assert (=> d!23271 (= res!44909 (isStrictlySorted!298 lt!40985))))

(assert (=> d!23271 (= (lemmaContainsTupThenGetReturnValue!57 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41591)))

(declare-fun b!87532 () Bool)

(declare-fun res!44910 () Bool)

(assert (=> b!87532 (=> (not res!44910) (not e!57018))))

(assert (=> b!87532 (= res!44910 (containsKey!144 lt!40985 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87533 () Bool)

(assert (=> b!87533 (= e!57018 (contains!754 lt!40985 (tuple2!2199 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!23271 res!44909) b!87532))

(assert (= (and b!87532 res!44910) b!87533))

(assert (=> d!23271 m!91143))

(declare-fun m!93409 () Bool)

(assert (=> d!23271 m!93409))

(declare-fun m!93411 () Bool)

(assert (=> d!23271 m!93411))

(declare-fun m!93413 () Bool)

(assert (=> b!87532 m!93413))

(declare-fun m!93415 () Bool)

(assert (=> b!87533 m!93415))

(assert (=> d!22411 d!23271))

(declare-fun b!87534 () Bool)

(declare-fun e!57020 () List!1519)

(declare-fun call!8364 () List!1519)

(assert (=> b!87534 (= e!57020 call!8364)))

(declare-fun b!87535 () Bool)

(assert (=> b!87535 (= e!57020 call!8364)))

(declare-fun b!87536 () Bool)

(declare-fun res!44911 () Bool)

(declare-fun e!57021 () Bool)

(assert (=> b!87536 (=> (not res!44911) (not e!57021))))

(declare-fun lt!41592 () List!1519)

(assert (=> b!87536 (= res!44911 (containsKey!144 lt!41592 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87537 () Bool)

(declare-fun e!57022 () List!1519)

(declare-fun e!57023 () List!1519)

(assert (=> b!87537 (= e!57022 e!57023)))

(declare-fun c!14435 () Bool)

(assert (=> b!87537 (= c!14435 (and ((_ is Cons!1515) (toList!746 lt!40325)) (= (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!87538 () Bool)

(declare-fun call!8363 () List!1519)

(assert (=> b!87538 (= e!57022 call!8363)))

(declare-fun b!87539 () Bool)

(declare-fun c!14437 () Bool)

(assert (=> b!87539 (= c!14437 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!87539 (= e!57023 e!57020)))

(declare-fun b!87540 () Bool)

(declare-fun e!57019 () List!1519)

(assert (=> b!87540 (= e!57019 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40325)) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87541 () Bool)

(assert (=> b!87541 (= e!57019 (ite c!14435 (t!5240 (toList!746 lt!40325)) (ite c!14437 (Cons!1515 (h!2106 (toList!746 lt!40325)) (t!5240 (toList!746 lt!40325))) Nil!1516)))))

(declare-fun c!14434 () Bool)

(declare-fun bm!8360 () Bool)

(assert (=> bm!8360 (= call!8363 ($colon$colon!72 e!57019 (ite c!14434 (h!2106 (toList!746 lt!40325)) (tuple2!2199 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14436 () Bool)

(assert (=> bm!8360 (= c!14436 c!14434)))

(declare-fun bm!8361 () Bool)

(declare-fun call!8365 () List!1519)

(assert (=> bm!8361 (= call!8365 call!8363)))

(declare-fun bm!8362 () Bool)

(assert (=> bm!8362 (= call!8364 call!8365)))

(declare-fun b!87543 () Bool)

(assert (=> b!87543 (= e!57023 call!8365)))

(declare-fun d!23273 () Bool)

(assert (=> d!23273 e!57021))

(declare-fun res!44912 () Bool)

(assert (=> d!23273 (=> (not res!44912) (not e!57021))))

(assert (=> d!23273 (= res!44912 (isStrictlySorted!298 lt!41592))))

(assert (=> d!23273 (= lt!41592 e!57022)))

(assert (=> d!23273 (= c!14434 (and ((_ is Cons!1515) (toList!746 lt!40325)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40325))) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23273 (isStrictlySorted!298 (toList!746 lt!40325))))

(assert (=> d!23273 (= (insertStrictlySorted!60 (toList!746 lt!40325) (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41592)))

(declare-fun b!87542 () Bool)

(assert (=> b!87542 (= e!57021 (contains!754 lt!41592 (tuple2!2199 (_1!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!23273 c!14434) b!87538))

(assert (= (and d!23273 (not c!14434)) b!87537))

(assert (= (and b!87537 c!14435) b!87543))

(assert (= (and b!87537 (not c!14435)) b!87539))

(assert (= (and b!87539 c!14437) b!87534))

(assert (= (and b!87539 (not c!14437)) b!87535))

(assert (= (or b!87534 b!87535) bm!8362))

(assert (= (or b!87543 bm!8362) bm!8361))

(assert (= (or b!87538 bm!8361) bm!8360))

(assert (= (and bm!8360 c!14436) b!87540))

(assert (= (and bm!8360 (not c!14436)) b!87541))

(assert (= (and d!23273 res!44912) b!87536))

(assert (= (and b!87536 res!44911) b!87542))

(declare-fun m!93417 () Bool)

(assert (=> d!23273 m!93417))

(assert (=> d!23273 m!90353))

(declare-fun m!93419 () Bool)

(assert (=> b!87536 m!93419))

(declare-fun m!93421 () Bool)

(assert (=> b!87540 m!93421))

(declare-fun m!93423 () Bool)

(assert (=> b!87542 m!93423))

(declare-fun m!93425 () Bool)

(assert (=> bm!8360 m!93425))

(assert (=> d!22411 d!23273))

(declare-fun d!23275 () Bool)

(assert (=> d!23275 (= (inRange!0 (ite c!13986 (index!3110 lt!40800) (ite c!13983 (index!3109 lt!40795) (index!3112 lt!40795))) (mask!6366 newMap!16)) (and (bvsge (ite c!13986 (index!3110 lt!40800) (ite c!13983 (index!3109 lt!40795) (index!3112 lt!40795))) #b00000000000000000000000000000000) (bvslt (ite c!13986 (index!3110 lt!40800) (ite c!13983 (index!3109 lt!40795) (index!3112 lt!40795))) (bvadd (mask!6366 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8184 d!23275))

(declare-fun d!23277 () Bool)

(declare-fun e!57025 () Bool)

(assert (=> d!23277 e!57025))

(declare-fun res!44913 () Bool)

(assert (=> d!23277 (=> res!44913 e!57025)))

(declare-fun lt!41593 () Bool)

(assert (=> d!23277 (= res!44913 (not lt!41593))))

(declare-fun lt!41594 () Bool)

(assert (=> d!23277 (= lt!41593 lt!41594)))

(declare-fun lt!41596 () Unit!2517)

(declare-fun e!57024 () Unit!2517)

(assert (=> d!23277 (= lt!41596 e!57024)))

(declare-fun c!14438 () Bool)

(assert (=> d!23277 (= c!14438 lt!41594)))

(assert (=> d!23277 (= lt!41594 (containsKey!144 (toList!746 lt!40708) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(assert (=> d!23277 (= (contains!753 lt!40708 (_1!1110 (tuple2!2199 lt!40586 lt!40590))) lt!41593)))

(declare-fun b!87544 () Bool)

(declare-fun lt!41595 () Unit!2517)

(assert (=> b!87544 (= e!57024 lt!41595)))

(assert (=> b!87544 (= lt!41595 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40708) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(assert (=> b!87544 (isDefined!93 (getValueByKey!140 (toList!746 lt!40708) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun b!87545 () Bool)

(declare-fun Unit!2596 () Unit!2517)

(assert (=> b!87545 (= e!57024 Unit!2596)))

(declare-fun b!87546 () Bool)

(assert (=> b!87546 (= e!57025 (isDefined!93 (getValueByKey!140 (toList!746 lt!40708) (_1!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (= (and d!23277 c!14438) b!87544))

(assert (= (and d!23277 (not c!14438)) b!87545))

(assert (= (and d!23277 (not res!44913)) b!87546))

(declare-fun m!93427 () Bool)

(assert (=> d!23277 m!93427))

(declare-fun m!93429 () Bool)

(assert (=> b!87544 m!93429))

(assert (=> b!87544 m!90561))

(assert (=> b!87544 m!90561))

(declare-fun m!93431 () Bool)

(assert (=> b!87544 m!93431))

(assert (=> b!87546 m!90561))

(assert (=> b!87546 m!90561))

(assert (=> b!87546 m!93431))

(assert (=> d!22261 d!23277))

(declare-fun b!87547 () Bool)

(declare-fun e!57026 () Option!146)

(assert (=> b!87547 (= e!57026 (Some!145 (_2!1110 (h!2106 lt!40707))))))

(declare-fun c!14439 () Bool)

(declare-fun d!23279 () Bool)

(assert (=> d!23279 (= c!14439 (and ((_ is Cons!1515) lt!40707) (= (_1!1110 (h!2106 lt!40707)) (_1!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (=> d!23279 (= (getValueByKey!140 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590))) e!57026)))

(declare-fun b!87550 () Bool)

(declare-fun e!57027 () Option!146)

(assert (=> b!87550 (= e!57027 None!144)))

(declare-fun b!87549 () Bool)

(assert (=> b!87549 (= e!57027 (getValueByKey!140 (t!5240 lt!40707) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun b!87548 () Bool)

(assert (=> b!87548 (= e!57026 e!57027)))

(declare-fun c!14440 () Bool)

(assert (=> b!87548 (= c!14440 (and ((_ is Cons!1515) lt!40707) (not (= (_1!1110 (h!2106 lt!40707)) (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))))

(assert (= (and d!23279 c!14439) b!87547))

(assert (= (and d!23279 (not c!14439)) b!87548))

(assert (= (and b!87548 c!14440) b!87549))

(assert (= (and b!87548 (not c!14440)) b!87550))

(declare-fun m!93433 () Bool)

(assert (=> b!87549 m!93433))

(assert (=> d!22261 d!23279))

(declare-fun d!23281 () Bool)

(assert (=> d!23281 (= (getValueByKey!140 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590))) (Some!145 (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun lt!41597 () Unit!2517)

(assert (=> d!23281 (= lt!41597 (choose!500 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun e!57028 () Bool)

(assert (=> d!23281 e!57028))

(declare-fun res!44914 () Bool)

(assert (=> d!23281 (=> (not res!44914) (not e!57028))))

(assert (=> d!23281 (= res!44914 (isStrictlySorted!298 lt!40707))))

(assert (=> d!23281 (= (lemmaContainsTupThenGetReturnValue!57 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))) lt!41597)))

(declare-fun b!87551 () Bool)

(declare-fun res!44915 () Bool)

(assert (=> b!87551 (=> (not res!44915) (not e!57028))))

(assert (=> b!87551 (= res!44915 (containsKey!144 lt!40707 (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun b!87552 () Bool)

(assert (=> b!87552 (= e!57028 (contains!754 lt!40707 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (= (and d!23281 res!44914) b!87551))

(assert (= (and b!87551 res!44915) b!87552))

(assert (=> d!23281 m!90555))

(declare-fun m!93435 () Bool)

(assert (=> d!23281 m!93435))

(declare-fun m!93437 () Bool)

(assert (=> d!23281 m!93437))

(declare-fun m!93439 () Bool)

(assert (=> b!87551 m!93439))

(declare-fun m!93441 () Bool)

(assert (=> b!87552 m!93441))

(assert (=> d!22261 d!23281))

(declare-fun b!87553 () Bool)

(declare-fun e!57030 () List!1519)

(declare-fun call!8367 () List!1519)

(assert (=> b!87553 (= e!57030 call!8367)))

(declare-fun b!87554 () Bool)

(assert (=> b!87554 (= e!57030 call!8367)))

(declare-fun b!87555 () Bool)

(declare-fun res!44916 () Bool)

(declare-fun e!57031 () Bool)

(assert (=> b!87555 (=> (not res!44916) (not e!57031))))

(declare-fun lt!41598 () List!1519)

(assert (=> b!87555 (= res!44916 (containsKey!144 lt!41598 (_1!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun b!87556 () Bool)

(declare-fun e!57032 () List!1519)

(declare-fun e!57033 () List!1519)

(assert (=> b!87556 (= e!57032 e!57033)))

(declare-fun c!14442 () Bool)

(assert (=> b!87556 (= c!14442 (and ((_ is Cons!1515) (toList!746 lt!40587)) (= (_1!1110 (h!2106 (toList!746 lt!40587))) (_1!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(declare-fun b!87557 () Bool)

(declare-fun call!8366 () List!1519)

(assert (=> b!87557 (= e!57032 call!8366)))

(declare-fun b!87558 () Bool)

(declare-fun c!14444 () Bool)

(assert (=> b!87558 (= c!14444 (and ((_ is Cons!1515) (toList!746 lt!40587)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40587))) (_1!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (=> b!87558 (= e!57033 e!57030)))

(declare-fun b!87559 () Bool)

(declare-fun e!57029 () List!1519)

(assert (=> b!87559 (= e!57029 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40587)) (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))

(declare-fun b!87560 () Bool)

(assert (=> b!87560 (= e!57029 (ite c!14442 (t!5240 (toList!746 lt!40587)) (ite c!14444 (Cons!1515 (h!2106 (toList!746 lt!40587)) (t!5240 (toList!746 lt!40587))) Nil!1516)))))

(declare-fun bm!8363 () Bool)

(declare-fun c!14441 () Bool)

(assert (=> bm!8363 (= call!8366 ($colon$colon!72 e!57029 (ite c!14441 (h!2106 (toList!746 lt!40587)) (tuple2!2199 (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))))))))

(declare-fun c!14443 () Bool)

(assert (=> bm!8363 (= c!14443 c!14441)))

(declare-fun bm!8364 () Bool)

(declare-fun call!8368 () List!1519)

(assert (=> bm!8364 (= call!8368 call!8366)))

(declare-fun bm!8365 () Bool)

(assert (=> bm!8365 (= call!8367 call!8368)))

(declare-fun b!87562 () Bool)

(assert (=> b!87562 (= e!57033 call!8368)))

(declare-fun d!23283 () Bool)

(assert (=> d!23283 e!57031))

(declare-fun res!44917 () Bool)

(assert (=> d!23283 (=> (not res!44917) (not e!57031))))

(assert (=> d!23283 (= res!44917 (isStrictlySorted!298 lt!41598))))

(assert (=> d!23283 (= lt!41598 e!57032)))

(assert (=> d!23283 (= c!14441 (and ((_ is Cons!1515) (toList!746 lt!40587)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40587))) (_1!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (=> d!23283 (isStrictlySorted!298 (toList!746 lt!40587))))

(assert (=> d!23283 (= (insertStrictlySorted!60 (toList!746 lt!40587) (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590))) lt!41598)))

(declare-fun b!87561 () Bool)

(assert (=> b!87561 (= e!57031 (contains!754 lt!41598 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40586 lt!40590)) (_2!1110 (tuple2!2199 lt!40586 lt!40590)))))))

(assert (= (and d!23283 c!14441) b!87557))

(assert (= (and d!23283 (not c!14441)) b!87556))

(assert (= (and b!87556 c!14442) b!87562))

(assert (= (and b!87556 (not c!14442)) b!87558))

(assert (= (and b!87558 c!14444) b!87553))

(assert (= (and b!87558 (not c!14444)) b!87554))

(assert (= (or b!87553 b!87554) bm!8365))

(assert (= (or b!87562 bm!8365) bm!8364))

(assert (= (or b!87557 bm!8364) bm!8363))

(assert (= (and bm!8363 c!14443) b!87559))

(assert (= (and bm!8363 (not c!14443)) b!87560))

(assert (= (and d!23283 res!44917) b!87555))

(assert (= (and b!87555 res!44916) b!87561))

(declare-fun m!93443 () Bool)

(assert (=> d!23283 m!93443))

(declare-fun m!93445 () Bool)

(assert (=> d!23283 m!93445))

(declare-fun m!93447 () Bool)

(assert (=> b!87555 m!93447))

(declare-fun m!93449 () Bool)

(assert (=> b!87559 m!93449))

(declare-fun m!93451 () Bool)

(assert (=> b!87561 m!93451))

(declare-fun m!93453 () Bool)

(assert (=> bm!8363 m!93453))

(assert (=> d!22261 d!23283))

(declare-fun d!23285 () Bool)

(declare-fun res!44918 () Bool)

(declare-fun e!57034 () Bool)

(assert (=> d!23285 (=> res!44918 e!57034)))

(assert (=> d!23285 (= res!44918 (and ((_ is Cons!1515) lt!40641) (= (_1!1110 (h!2106 lt!40641)) (_1!1110 lt!40324))))))

(assert (=> d!23285 (= (containsKey!144 lt!40641 (_1!1110 lt!40324)) e!57034)))

(declare-fun b!87563 () Bool)

(declare-fun e!57035 () Bool)

(assert (=> b!87563 (= e!57034 e!57035)))

(declare-fun res!44919 () Bool)

(assert (=> b!87563 (=> (not res!44919) (not e!57035))))

(assert (=> b!87563 (= res!44919 (and (or (not ((_ is Cons!1515) lt!40641)) (bvsle (_1!1110 (h!2106 lt!40641)) (_1!1110 lt!40324))) ((_ is Cons!1515) lt!40641) (bvslt (_1!1110 (h!2106 lt!40641)) (_1!1110 lt!40324))))))

(declare-fun b!87564 () Bool)

(assert (=> b!87564 (= e!57035 (containsKey!144 (t!5240 lt!40641) (_1!1110 lt!40324)))))

(assert (= (and d!23285 (not res!44918)) b!87563))

(assert (= (and b!87563 res!44919) b!87564))

(declare-fun m!93455 () Bool)

(assert (=> b!87564 m!93455))

(assert (=> b!85804 d!23285))

(declare-fun d!23287 () Bool)

(declare-fun res!44920 () Bool)

(declare-fun e!57036 () Bool)

(assert (=> d!23287 (=> res!44920 e!57036)))

(assert (=> d!23287 (= res!44920 (and ((_ is Cons!1515) lt!40930) (= (_1!1110 (h!2106 lt!40930)) (_1!1110 lt!40318))))))

(assert (=> d!23287 (= (containsKey!144 lt!40930 (_1!1110 lt!40318)) e!57036)))

(declare-fun b!87565 () Bool)

(declare-fun e!57037 () Bool)

(assert (=> b!87565 (= e!57036 e!57037)))

(declare-fun res!44921 () Bool)

(assert (=> b!87565 (=> (not res!44921) (not e!57037))))

(assert (=> b!87565 (= res!44921 (and (or (not ((_ is Cons!1515) lt!40930)) (bvsle (_1!1110 (h!2106 lt!40930)) (_1!1110 lt!40318))) ((_ is Cons!1515) lt!40930) (bvslt (_1!1110 (h!2106 lt!40930)) (_1!1110 lt!40318))))))

(declare-fun b!87566 () Bool)

(assert (=> b!87566 (= e!57037 (containsKey!144 (t!5240 lt!40930) (_1!1110 lt!40318)))))

(assert (= (and d!23287 (not res!44920)) b!87565))

(assert (= (and b!87565 res!44921) b!87566))

(declare-fun m!93457 () Bool)

(assert (=> b!87566 m!93457))

(assert (=> b!86110 d!23287))

(assert (=> d!22403 d!22401))

(declare-fun d!23289 () Bool)

(assert (=> d!23289 (= (getValueByKey!140 lt!40603 (_1!1110 lt!40318)) (Some!145 (_2!1110 lt!40318)))))

(assert (=> d!23289 true))

(declare-fun _$22!424 () Unit!2517)

(assert (=> d!23289 (= (choose!500 lt!40603 (_1!1110 lt!40318) (_2!1110 lt!40318)) _$22!424)))

(declare-fun bs!3706 () Bool)

(assert (= bs!3706 d!23289))

(assert (=> bs!3706 m!90211))

(assert (=> d!22403 d!23289))

(declare-fun d!23291 () Bool)

(declare-fun res!44922 () Bool)

(declare-fun e!57038 () Bool)

(assert (=> d!23291 (=> res!44922 e!57038)))

(assert (=> d!23291 (= res!44922 (or ((_ is Nil!1516) lt!40603) ((_ is Nil!1516) (t!5240 lt!40603))))))

(assert (=> d!23291 (= (isStrictlySorted!298 lt!40603) e!57038)))

(declare-fun b!87567 () Bool)

(declare-fun e!57039 () Bool)

(assert (=> b!87567 (= e!57038 e!57039)))

(declare-fun res!44923 () Bool)

(assert (=> b!87567 (=> (not res!44923) (not e!57039))))

(assert (=> b!87567 (= res!44923 (bvslt (_1!1110 (h!2106 lt!40603)) (_1!1110 (h!2106 (t!5240 lt!40603)))))))

(declare-fun b!87568 () Bool)

(assert (=> b!87568 (= e!57039 (isStrictlySorted!298 (t!5240 lt!40603)))))

(assert (= (and d!23291 (not res!44922)) b!87567))

(assert (= (and b!87567 res!44923) b!87568))

(declare-fun m!93459 () Bool)

(assert (=> b!87568 m!93459))

(assert (=> d!22403 d!23291))

(declare-fun b!87569 () Bool)

(declare-fun e!57040 () Option!146)

(assert (=> b!87569 (= e!57040 (Some!145 (_2!1110 (h!2106 (t!5240 lt!40559)))))))

(declare-fun d!23293 () Bool)

(declare-fun c!14445 () Bool)

(assert (=> d!23293 (= c!14445 (and ((_ is Cons!1515) (t!5240 lt!40559)) (= (_1!1110 (h!2106 (t!5240 lt!40559))) (_1!1110 lt!40324))))))

(assert (=> d!23293 (= (getValueByKey!140 (t!5240 lt!40559) (_1!1110 lt!40324)) e!57040)))

(declare-fun b!87572 () Bool)

(declare-fun e!57041 () Option!146)

(assert (=> b!87572 (= e!57041 None!144)))

(declare-fun b!87571 () Bool)

(assert (=> b!87571 (= e!57041 (getValueByKey!140 (t!5240 (t!5240 lt!40559)) (_1!1110 lt!40324)))))

(declare-fun b!87570 () Bool)

(assert (=> b!87570 (= e!57040 e!57041)))

(declare-fun c!14446 () Bool)

(assert (=> b!87570 (= c!14446 (and ((_ is Cons!1515) (t!5240 lt!40559)) (not (= (_1!1110 (h!2106 (t!5240 lt!40559))) (_1!1110 lt!40324)))))))

(assert (= (and d!23293 c!14445) b!87569))

(assert (= (and d!23293 (not c!14445)) b!87570))

(assert (= (and b!87570 c!14446) b!87571))

(assert (= (and b!87570 (not c!14446)) b!87572))

(declare-fun m!93461 () Bool)

(assert (=> b!87571 m!93461))

(assert (=> b!85767 d!23293))

(assert (=> b!85707 d!23111))

(assert (=> b!85707 d!22243))

(declare-fun d!23295 () Bool)

(assert (=> d!23295 (= (get!1198 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2649 (getValueByKey!140 (toList!746 lt!40450) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22291 d!23295))

(assert (=> d!22291 d!23023))

(declare-fun d!23297 () Bool)

(declare-fun e!57043 () Bool)

(assert (=> d!23297 e!57043))

(declare-fun res!44924 () Bool)

(assert (=> d!23297 (=> res!44924 e!57043)))

(declare-fun lt!41599 () Bool)

(assert (=> d!23297 (= res!44924 (not lt!41599))))

(declare-fun lt!41600 () Bool)

(assert (=> d!23297 (= lt!41599 lt!41600)))

(declare-fun lt!41602 () Unit!2517)

(declare-fun e!57042 () Unit!2517)

(assert (=> d!23297 (= lt!41602 e!57042)))

(declare-fun c!14447 () Bool)

(assert (=> d!23297 (= c!14447 lt!41600)))

(assert (=> d!23297 (= lt!41600 (containsKey!144 (toList!746 lt!40945) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> d!23297 (= (contains!753 lt!40945 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41599)))

(declare-fun b!87573 () Bool)

(declare-fun lt!41601 () Unit!2517)

(assert (=> b!87573 (= e!57042 lt!41601)))

(assert (=> b!87573 (= lt!41601 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40945) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(assert (=> b!87573 (isDefined!93 (getValueByKey!140 (toList!746 lt!40945) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87574 () Bool)

(declare-fun Unit!2597 () Unit!2517)

(assert (=> b!87574 (= e!57042 Unit!2597)))

(declare-fun b!87575 () Bool)

(assert (=> b!87575 (= e!57043 (isDefined!93 (getValueByKey!140 (toList!746 lt!40945) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!23297 c!14447) b!87573))

(assert (= (and d!23297 (not c!14447)) b!87574))

(assert (= (and d!23297 (not res!44924)) b!87575))

(declare-fun m!93463 () Bool)

(assert (=> d!23297 m!93463))

(declare-fun m!93465 () Bool)

(assert (=> b!87573 m!93465))

(assert (=> b!87573 m!91025))

(assert (=> b!87573 m!91025))

(declare-fun m!93467 () Bool)

(assert (=> b!87573 m!93467))

(assert (=> b!87575 m!91025))

(assert (=> b!87575 m!91025))

(assert (=> b!87575 m!93467))

(assert (=> d!22375 d!23297))

(declare-fun b!87576 () Bool)

(declare-fun e!57044 () Option!146)

(assert (=> b!87576 (= e!57044 (Some!145 (_2!1110 (h!2106 lt!40944))))))

(declare-fun d!23299 () Bool)

(declare-fun c!14448 () Bool)

(assert (=> d!23299 (= c!14448 (and ((_ is Cons!1515) lt!40944) (= (_1!1110 (h!2106 lt!40944)) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23299 (= (getValueByKey!140 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) e!57044)))

(declare-fun b!87579 () Bool)

(declare-fun e!57045 () Option!146)

(assert (=> b!87579 (= e!57045 None!144)))

(declare-fun b!87578 () Bool)

(assert (=> b!87578 (= e!57045 (getValueByKey!140 (t!5240 lt!40944) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87577 () Bool)

(assert (=> b!87577 (= e!57044 e!57045)))

(declare-fun c!14449 () Bool)

(assert (=> b!87577 (= c!14449 (and ((_ is Cons!1515) lt!40944) (not (= (_1!1110 (h!2106 lt!40944)) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(assert (= (and d!23299 c!14448) b!87576))

(assert (= (and d!23299 (not c!14448)) b!87577))

(assert (= (and b!87577 c!14449) b!87578))

(assert (= (and b!87577 (not c!14449)) b!87579))

(declare-fun m!93469 () Bool)

(assert (=> b!87578 m!93469))

(assert (=> d!22375 d!23299))

(declare-fun d!23301 () Bool)

(assert (=> d!23301 (= (getValueByKey!140 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) (Some!145 (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun lt!41603 () Unit!2517)

(assert (=> d!23301 (= lt!41603 (choose!500 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun e!57046 () Bool)

(assert (=> d!23301 e!57046))

(declare-fun res!44925 () Bool)

(assert (=> d!23301 (=> (not res!44925) (not e!57046))))

(assert (=> d!23301 (= res!44925 (isStrictlySorted!298 lt!40944))))

(assert (=> d!23301 (= (lemmaContainsTupThenGetReturnValue!57 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41603)))

(declare-fun b!87580 () Bool)

(declare-fun res!44926 () Bool)

(assert (=> b!87580 (=> (not res!44926) (not e!57046))))

(assert (=> b!87580 (= res!44926 (containsKey!144 lt!40944 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87581 () Bool)

(assert (=> b!87581 (= e!57046 (contains!754 lt!40944 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!23301 res!44925) b!87580))

(assert (= (and b!87580 res!44926) b!87581))

(assert (=> d!23301 m!91019))

(declare-fun m!93471 () Bool)

(assert (=> d!23301 m!93471))

(declare-fun m!93473 () Bool)

(assert (=> d!23301 m!93473))

(declare-fun m!93475 () Bool)

(assert (=> b!87580 m!93475))

(declare-fun m!93477 () Bool)

(assert (=> b!87581 m!93477))

(assert (=> d!22375 d!23301))

(declare-fun b!87582 () Bool)

(declare-fun e!57048 () List!1519)

(declare-fun call!8370 () List!1519)

(assert (=> b!87582 (= e!57048 call!8370)))

(declare-fun b!87583 () Bool)

(assert (=> b!87583 (= e!57048 call!8370)))

(declare-fun b!87584 () Bool)

(declare-fun res!44927 () Bool)

(declare-fun e!57049 () Bool)

(assert (=> b!87584 (=> (not res!44927) (not e!57049))))

(declare-fun lt!41604 () List!1519)

(assert (=> b!87584 (= res!44927 (containsKey!144 lt!41604 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87585 () Bool)

(declare-fun e!57050 () List!1519)

(declare-fun e!57051 () List!1519)

(assert (=> b!87585 (= e!57050 e!57051)))

(declare-fun c!14451 () Bool)

(assert (=> b!87585 (= c!14451 (and ((_ is Cons!1515) (toList!746 lt!40441)) (= (_1!1110 (h!2106 (toList!746 lt!40441))) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(declare-fun b!87586 () Bool)

(declare-fun call!8369 () List!1519)

(assert (=> b!87586 (= e!57050 call!8369)))

(declare-fun c!14453 () Bool)

(declare-fun b!87587 () Bool)

(assert (=> b!87587 (= c!14453 (and ((_ is Cons!1515) (toList!746 lt!40441)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40441))) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> b!87587 (= e!57051 e!57048)))

(declare-fun e!57047 () List!1519)

(declare-fun b!87588 () Bool)

(assert (=> b!87588 (= e!57047 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40441)) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))

(declare-fun b!87589 () Bool)

(assert (=> b!87589 (= e!57047 (ite c!14451 (t!5240 (toList!746 lt!40441)) (ite c!14453 (Cons!1515 (h!2106 (toList!746 lt!40441)) (t!5240 (toList!746 lt!40441))) Nil!1516)))))

(declare-fun c!14450 () Bool)

(declare-fun bm!8366 () Bool)

(assert (=> bm!8366 (= call!8369 ($colon$colon!72 e!57047 (ite c!14450 (h!2106 (toList!746 lt!40441)) (tuple2!2199 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))))))))

(declare-fun c!14452 () Bool)

(assert (=> bm!8366 (= c!14452 c!14450)))

(declare-fun bm!8367 () Bool)

(declare-fun call!8371 () List!1519)

(assert (=> bm!8367 (= call!8371 call!8369)))

(declare-fun bm!8368 () Bool)

(assert (=> bm!8368 (= call!8370 call!8371)))

(declare-fun b!87591 () Bool)

(assert (=> b!87591 (= e!57051 call!8371)))

(declare-fun d!23303 () Bool)

(assert (=> d!23303 e!57049))

(declare-fun res!44928 () Bool)

(assert (=> d!23303 (=> (not res!44928) (not e!57049))))

(assert (=> d!23303 (= res!44928 (isStrictlySorted!298 lt!41604))))

(assert (=> d!23303 (= lt!41604 e!57050)))

(assert (=> d!23303 (= c!14450 (and ((_ is Cons!1515) (toList!746 lt!40441)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40441))) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (=> d!23303 (isStrictlySorted!298 (toList!746 lt!40441))))

(assert (=> d!23303 (= (insertStrictlySorted!60 (toList!746 lt!40441) (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992)))))) lt!41604)))

(declare-fun b!87590 () Bool)

(assert (=> b!87590 (= e!57049 (contains!754 lt!41604 (tuple2!2199 (_1!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))) (_2!1110 (tuple2!2199 lt!40431 (zeroValue!2230 (v!2645 (underlying!289 thiss!992))))))))))

(assert (= (and d!23303 c!14450) b!87586))

(assert (= (and d!23303 (not c!14450)) b!87585))

(assert (= (and b!87585 c!14451) b!87591))

(assert (= (and b!87585 (not c!14451)) b!87587))

(assert (= (and b!87587 c!14453) b!87582))

(assert (= (and b!87587 (not c!14453)) b!87583))

(assert (= (or b!87582 b!87583) bm!8368))

(assert (= (or b!87591 bm!8368) bm!8367))

(assert (= (or b!87586 bm!8367) bm!8366))

(assert (= (and bm!8366 c!14452) b!87588))

(assert (= (and bm!8366 (not c!14452)) b!87589))

(assert (= (and d!23303 res!44928) b!87584))

(assert (= (and b!87584 res!44927) b!87590))

(declare-fun m!93479 () Bool)

(assert (=> d!23303 m!93479))

(declare-fun m!93481 () Bool)

(assert (=> d!23303 m!93481))

(declare-fun m!93483 () Bool)

(assert (=> b!87584 m!93483))

(declare-fun m!93485 () Bool)

(assert (=> b!87588 m!93485))

(declare-fun m!93487 () Bool)

(assert (=> b!87590 m!93487))

(declare-fun m!93489 () Bool)

(assert (=> bm!8366 m!93489))

(assert (=> d!22375 d!23303))

(declare-fun d!23305 () Bool)

(assert (=> d!23305 (isDefined!93 (getValueByKey!140 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41605 () Unit!2517)

(assert (=> d!23305 (= lt!41605 (choose!504 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!57052 () Bool)

(assert (=> d!23305 e!57052))

(declare-fun res!44929 () Bool)

(assert (=> d!23305 (=> (not res!44929) (not e!57052))))

(assert (=> d!23305 (= res!44929 (isStrictlySorted!298 (toList!746 lt!40584)))))

(assert (=> d!23305 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41605)))

(declare-fun b!87592 () Bool)

(assert (=> b!87592 (= e!57052 (containsKey!144 (toList!746 lt!40584) (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!23305 res!44929) b!87592))

(assert (=> d!23305 m!89983))

(assert (=> d!23305 m!91135))

(assert (=> d!23305 m!91135))

(assert (=> d!23305 m!91137))

(assert (=> d!23305 m!89983))

(declare-fun m!93491 () Bool)

(assert (=> d!23305 m!93491))

(assert (=> d!23305 m!91313))

(assert (=> b!87592 m!89983))

(assert (=> b!87592 m!91131))

(assert (=> b!86215 d!23305))

(assert (=> b!86215 d!22609))

(assert (=> b!86215 d!22497))

(declare-fun d!23307 () Bool)

(declare-fun e!57054 () Bool)

(assert (=> d!23307 e!57054))

(declare-fun res!44930 () Bool)

(assert (=> d!23307 (=> res!44930 e!57054)))

(declare-fun lt!41606 () Bool)

(assert (=> d!23307 (= res!44930 (not lt!41606))))

(declare-fun lt!41607 () Bool)

(assert (=> d!23307 (= lt!41606 lt!41607)))

(declare-fun lt!41609 () Unit!2517)

(declare-fun e!57053 () Unit!2517)

(assert (=> d!23307 (= lt!41609 e!57053)))

(declare-fun c!14454 () Bool)

(assert (=> d!23307 (= c!14454 lt!41607)))

(assert (=> d!23307 (= lt!41607 (containsKey!144 (toList!746 lt!40689) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> d!23307 (= (contains!753 lt!40689 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41606)))

(declare-fun b!87593 () Bool)

(declare-fun lt!41608 () Unit!2517)

(assert (=> b!87593 (= e!57053 lt!41608)))

(assert (=> b!87593 (= lt!41608 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 lt!40689) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(assert (=> b!87593 (isDefined!93 (getValueByKey!140 (toList!746 lt!40689) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87594 () Bool)

(declare-fun Unit!2598 () Unit!2517)

(assert (=> b!87594 (= e!57053 Unit!2598)))

(declare-fun b!87595 () Bool)

(assert (=> b!87595 (= e!57054 (isDefined!93 (getValueByKey!140 (toList!746 lt!40689) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23307 c!14454) b!87593))

(assert (= (and d!23307 (not c!14454)) b!87594))

(assert (= (and d!23307 (not res!44930)) b!87595))

(declare-fun m!93493 () Bool)

(assert (=> d!23307 m!93493))

(declare-fun m!93495 () Bool)

(assert (=> b!87593 m!93495))

(assert (=> b!87593 m!90501))

(assert (=> b!87593 m!90501))

(declare-fun m!93497 () Bool)

(assert (=> b!87593 m!93497))

(assert (=> b!87595 m!90501))

(assert (=> b!87595 m!90501))

(assert (=> b!87595 m!93497))

(assert (=> d!22249 d!23307))

(declare-fun b!87596 () Bool)

(declare-fun e!57055 () Option!146)

(assert (=> b!87596 (= e!57055 (Some!145 (_2!1110 (h!2106 lt!40688))))))

(declare-fun d!23309 () Bool)

(declare-fun c!14455 () Bool)

(assert (=> d!23309 (= c!14455 (and ((_ is Cons!1515) lt!40688) (= (_1!1110 (h!2106 lt!40688)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23309 (= (getValueByKey!140 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) e!57055)))

(declare-fun b!87599 () Bool)

(declare-fun e!57056 () Option!146)

(assert (=> b!87599 (= e!57056 None!144)))

(declare-fun b!87598 () Bool)

(assert (=> b!87598 (= e!57056 (getValueByKey!140 (t!5240 lt!40688) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87597 () Bool)

(assert (=> b!87597 (= e!57055 e!57056)))

(declare-fun c!14456 () Bool)

(assert (=> b!87597 (= c!14456 (and ((_ is Cons!1515) lt!40688) (not (= (_1!1110 (h!2106 lt!40688)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(assert (= (and d!23309 c!14455) b!87596))

(assert (= (and d!23309 (not c!14455)) b!87597))

(assert (= (and b!87597 c!14456) b!87598))

(assert (= (and b!87597 (not c!14456)) b!87599))

(declare-fun m!93499 () Bool)

(assert (=> b!87598 m!93499))

(assert (=> d!22249 d!23309))

(declare-fun d!23311 () Bool)

(assert (=> d!23311 (= (getValueByKey!140 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) (Some!145 (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun lt!41610 () Unit!2517)

(assert (=> d!23311 (= lt!41610 (choose!500 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun e!57057 () Bool)

(assert (=> d!23311 e!57057))

(declare-fun res!44931 () Bool)

(assert (=> d!23311 (=> (not res!44931) (not e!57057))))

(assert (=> d!23311 (= res!44931 (isStrictlySorted!298 lt!40688))))

(assert (=> d!23311 (= (lemmaContainsTupThenGetReturnValue!57 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41610)))

(declare-fun b!87600 () Bool)

(declare-fun res!44932 () Bool)

(assert (=> b!87600 (=> (not res!44932) (not e!57057))))

(assert (=> b!87600 (= res!44932 (containsKey!144 lt!40688 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87601 () Bool)

(assert (=> b!87601 (= e!57057 (contains!754 lt!40688 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23311 res!44931) b!87600))

(assert (= (and b!87600 res!44932) b!87601))

(assert (=> d!23311 m!90495))

(declare-fun m!93501 () Bool)

(assert (=> d!23311 m!93501))

(declare-fun m!93503 () Bool)

(assert (=> d!23311 m!93503))

(declare-fun m!93505 () Bool)

(assert (=> b!87600 m!93505))

(declare-fun m!93507 () Bool)

(assert (=> b!87601 m!93507))

(assert (=> d!22249 d!23311))

(declare-fun b!87602 () Bool)

(declare-fun e!57059 () List!1519)

(declare-fun call!8373 () List!1519)

(assert (=> b!87602 (= e!57059 call!8373)))

(declare-fun b!87603 () Bool)

(assert (=> b!87603 (= e!57059 call!8373)))

(declare-fun b!87604 () Bool)

(declare-fun res!44933 () Bool)

(declare-fun e!57060 () Bool)

(assert (=> b!87604 (=> (not res!44933) (not e!57060))))

(declare-fun lt!41611 () List!1519)

(assert (=> b!87604 (= res!44933 (containsKey!144 lt!41611 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87605 () Bool)

(declare-fun e!57061 () List!1519)

(declare-fun e!57062 () List!1519)

(assert (=> b!87605 (= e!57061 e!57062)))

(declare-fun c!14458 () Bool)

(assert (=> b!87605 (= c!14458 (and ((_ is Cons!1515) (toList!746 lt!40331)) (= (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(declare-fun b!87606 () Bool)

(declare-fun call!8372 () List!1519)

(assert (=> b!87606 (= e!57061 call!8372)))

(declare-fun b!87607 () Bool)

(declare-fun c!14460 () Bool)

(assert (=> b!87607 (= c!14460 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvsgt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> b!87607 (= e!57062 e!57059)))

(declare-fun b!87608 () Bool)

(declare-fun e!57058 () List!1519)

(assert (=> b!87608 (= e!57058 (insertStrictlySorted!60 (t!5240 (toList!746 lt!40331)) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))

(declare-fun b!87609 () Bool)

(assert (=> b!87609 (= e!57058 (ite c!14458 (t!5240 (toList!746 lt!40331)) (ite c!14460 (Cons!1515 (h!2106 (toList!746 lt!40331)) (t!5240 (toList!746 lt!40331))) Nil!1516)))))

(declare-fun c!14457 () Bool)

(declare-fun bm!8369 () Bool)

(assert (=> bm!8369 (= call!8372 ($colon$colon!72 e!57058 (ite c!14457 (h!2106 (toList!746 lt!40331)) (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))))))))

(declare-fun c!14459 () Bool)

(assert (=> bm!8369 (= c!14459 c!14457)))

(declare-fun bm!8370 () Bool)

(declare-fun call!8374 () List!1519)

(assert (=> bm!8370 (= call!8374 call!8372)))

(declare-fun bm!8371 () Bool)

(assert (=> bm!8371 (= call!8373 call!8374)))

(declare-fun b!87611 () Bool)

(assert (=> b!87611 (= e!57062 call!8374)))

(declare-fun d!23313 () Bool)

(assert (=> d!23313 e!57060))

(declare-fun res!44934 () Bool)

(assert (=> d!23313 (=> (not res!44934) (not e!57060))))

(assert (=> d!23313 (= res!44934 (isStrictlySorted!298 lt!41611))))

(assert (=> d!23313 (= lt!41611 e!57061)))

(assert (=> d!23313 (= c!14457 (and ((_ is Cons!1515) (toList!746 lt!40331)) (bvslt (_1!1110 (h!2106 (toList!746 lt!40331))) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (=> d!23313 (isStrictlySorted!298 (toList!746 lt!40331))))

(assert (=> d!23313 (= (insertStrictlySorted!60 (toList!746 lt!40331) (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326))) lt!41611)))

(declare-fun b!87610 () Bool)

(assert (=> b!87610 (= e!57060 (contains!754 lt!41611 (tuple2!2199 (_1!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)) (_2!1110 (tuple2!2199 (select (arr!1919 (_keys!4010 (v!2645 (underlying!289 thiss!992)))) from!355) lt!40326)))))))

(assert (= (and d!23313 c!14457) b!87606))

(assert (= (and d!23313 (not c!14457)) b!87605))

(assert (= (and b!87605 c!14458) b!87611))

(assert (= (and b!87605 (not c!14458)) b!87607))

(assert (= (and b!87607 c!14460) b!87602))

(assert (= (and b!87607 (not c!14460)) b!87603))

(assert (= (or b!87602 b!87603) bm!8371))

(assert (= (or b!87611 bm!8371) bm!8370))

(assert (= (or b!87606 bm!8370) bm!8369))

(assert (= (and bm!8369 c!14459) b!87608))

(assert (= (and bm!8369 (not c!14459)) b!87609))

(assert (= (and d!23313 res!44934) b!87604))

(assert (= (and b!87604 res!44933) b!87610))

(declare-fun m!93509 () Bool)

(assert (=> d!23313 m!93509))

(assert (=> d!23313 m!90273))

(declare-fun m!93511 () Bool)

(assert (=> b!87604 m!93511))

(declare-fun m!93513 () Bool)

(assert (=> b!87608 m!93513))

(declare-fun m!93515 () Bool)

(assert (=> b!87610 m!93515))

(declare-fun m!93517 () Bool)

(assert (=> bm!8369 m!93517))

(assert (=> d!22249 d!23313))

(declare-fun d!23315 () Bool)

(declare-fun e!57064 () Bool)

(assert (=> d!23315 e!57064))

(declare-fun res!44935 () Bool)

(assert (=> d!23315 (=> res!44935 e!57064)))

(declare-fun lt!41612 () Bool)

(assert (=> d!23315 (= res!44935 (not lt!41612))))

(declare-fun lt!41613 () Bool)

(assert (=> d!23315 (= lt!41612 lt!41613)))

(declare-fun lt!41615 () Unit!2517)

(declare-fun e!57063 () Unit!2517)

(assert (=> d!23315 (= lt!41615 e!57063)))

(declare-fun c!14461 () Bool)

(assert (=> d!23315 (= c!14461 lt!41613)))

(assert (=> d!23315 (= lt!41613 (containsKey!144 (toList!746 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) lt!40655))))

(assert (=> d!23315 (= (contains!753 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!40655) lt!41612)))

(declare-fun b!87612 () Bool)

(declare-fun lt!41614 () Unit!2517)

(assert (=> b!87612 (= e!57063 lt!41614)))

(assert (=> b!87612 (= lt!41614 (lemmaContainsKeyImpliesGetValueByKeyDefined!92 (toList!746 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) lt!40655))))

(assert (=> b!87612 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) lt!40655))))

(declare-fun b!87613 () Bool)

(declare-fun Unit!2599 () Unit!2517)

(assert (=> b!87613 (= e!57063 Unit!2599)))

(declare-fun b!87614 () Bool)

(assert (=> b!87614 (= e!57064 (isDefined!93 (getValueByKey!140 (toList!746 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) lt!40655)))))

(assert (= (and d!23315 c!14461) b!87612))

(assert (= (and d!23315 (not c!14461)) b!87613))

(assert (= (and d!23315 (not res!44935)) b!87614))

(declare-fun m!93519 () Bool)

(assert (=> d!23315 m!93519))

(declare-fun m!93521 () Bool)

(assert (=> b!87612 m!93521))

(declare-fun m!93523 () Bool)

(assert (=> b!87612 m!93523))

(assert (=> b!87612 m!93523))

(declare-fun m!93525 () Bool)

(assert (=> b!87612 m!93525))

(assert (=> b!87614 m!93523))

(assert (=> b!87614 m!93523))

(assert (=> b!87614 m!93525))

(assert (=> b!85832 d!23315))

(declare-fun d!23317 () Bool)

(declare-fun e!57065 () Bool)

(assert (=> d!23317 e!57065))

(declare-fun res!44936 () Bool)

(assert (=> d!23317 (=> (not res!44936) (not e!57065))))

(declare-fun lt!41618 () ListLongMap!1461)

(assert (=> d!23317 (= res!44936 (contains!753 lt!41618 (_1!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(declare-fun lt!41617 () List!1519)

(assert (=> d!23317 (= lt!41618 (ListLongMap!1462 lt!41617))))

(declare-fun lt!41619 () Unit!2517)

(declare-fun lt!41616 () Unit!2517)

(assert (=> d!23317 (= lt!41619 lt!41616)))

(assert (=> d!23317 (= (getValueByKey!140 lt!41617 (_1!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!23317 (= lt!41616 (lemmaContainsTupThenGetReturnValue!57 lt!41617 (_1!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!23317 (= lt!41617 (insertStrictlySorted!60 (toList!746 lt!40660) (_1!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!23317 (= (+!110 lt!40660 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!41618)))

(declare-fun b!87615 () Bool)

(declare-fun res!44937 () Bool)

(assert (=> b!87615 (=> (not res!44937) (not e!57065))))

(assert (=> b!87615 (= res!44937 (= (getValueByKey!140 (toList!746 lt!41618) (_1!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(declare-fun b!87616 () Bool)

(assert (=> b!87616 (= e!57065 (contains!754 (toList!746 lt!41618) (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))

(assert (= (and d!23317 res!44936) b!87615))

(assert (= (and b!87615 res!44937) b!87616))

(declare-fun m!93527 () Bool)

(assert (=> d!23317 m!93527))

(declare-fun m!93529 () Bool)

(assert (=> d!23317 m!93529))

(declare-fun m!93531 () Bool)

(assert (=> d!23317 m!93531))

(declare-fun m!93533 () Bool)

(assert (=> d!23317 m!93533))

(declare-fun m!93535 () Bool)

(assert (=> b!87615 m!93535))

(declare-fun m!93537 () Bool)

(assert (=> b!87616 m!93537))

(assert (=> b!85832 d!23317))

(declare-fun d!23319 () Bool)

(declare-fun e!57066 () Bool)

(assert (=> d!23319 e!57066))

(declare-fun res!44938 () Bool)

(assert (=> d!23319 (=> (not res!44938) (not e!57066))))

(declare-fun lt!41622 () ListLongMap!1461)

(assert (=> d!23319 (= res!44938 (contains!753 lt!41622 (_1!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(declare-fun lt!41621 () List!1519)

(assert (=> d!23319 (= lt!41622 (ListLongMap!1462 lt!41621))))

(declare-fun lt!41623 () Unit!2517)

(declare-fun lt!41620 () Unit!2517)

(assert (=> d!23319 (= lt!41623 lt!41620)))

(assert (=> d!23319 (= (getValueByKey!140 lt!41621 (_1!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(assert (=> d!23319 (= lt!41620 (lemmaContainsTupThenGetReturnValue!57 lt!41621 (_1!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(assert (=> d!23319 (= lt!41621 (insertStrictlySorted!60 (toList!746 lt!40652) (_1!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(assert (=> d!23319 (= (+!110 lt!40652 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!41622)))

(declare-fun b!87617 () Bool)

(declare-fun res!44939 () Bool)

(assert (=> b!87617 (=> (not res!44939) (not e!57066))))

(assert (=> b!87617 (= res!44939 (= (getValueByKey!140 (toList!746 lt!41622) (_1!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))))))))

(declare-fun b!87618 () Bool)

(assert (=> b!87618 (= e!57066 (contains!754 (toList!746 lt!41622) (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))))))

(assert (= (and d!23319 res!44938) b!87617))

(assert (= (and b!87617 res!44939) b!87618))

(declare-fun m!93539 () Bool)

(assert (=> d!23319 m!93539))

(declare-fun m!93541 () Bool)

(assert (=> d!23319 m!93541))

(declare-fun m!93543 () Bool)

(assert (=> d!23319 m!93543))

(declare-fun m!93545 () Bool)

(assert (=> d!23319 m!93545))

(declare-fun m!93547 () Bool)

(assert (=> b!87617 m!93547))

(declare-fun m!93549 () Bool)

(assert (=> b!87618 m!93549))

(assert (=> b!85832 d!23319))

(declare-fun d!23321 () Bool)

(assert (=> d!23321 (contains!753 (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!40655)))

(declare-fun lt!41624 () Unit!2517)

(assert (=> d!23321 (= lt!41624 (choose!507 lt!40648 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) lt!40655))))

(assert (=> d!23321 (contains!753 lt!40648 lt!40655)))

(assert (=> d!23321 (= (addStillContains!58 lt!40648 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) lt!40655) lt!41624)))

(declare-fun bs!3707 () Bool)

(assert (= bs!3707 d!23321))

(assert (=> bs!3707 m!90411))

(assert (=> bs!3707 m!90411))

(assert (=> bs!3707 m!90413))

(declare-fun m!93551 () Bool)

(assert (=> bs!3707 m!93551))

(declare-fun m!93553 () Bool)

(assert (=> bs!3707 m!93553))

(assert (=> b!85832 d!23321))

(declare-fun d!23323 () Bool)

(assert (=> d!23323 (= (apply!82 lt!40662 lt!40651) (get!1198 (getValueByKey!140 (toList!746 lt!40662) lt!40651)))))

(declare-fun bs!3708 () Bool)

(assert (= bs!3708 d!23323))

(declare-fun m!93555 () Bool)

(assert (=> bs!3708 m!93555))

(assert (=> bs!3708 m!93555))

(declare-fun m!93557 () Bool)

(assert (=> bs!3708 m!93557))

(assert (=> b!85832 d!23323))

(declare-fun d!23325 () Bool)

(assert (=> d!23325 (= (apply!82 (+!110 lt!40662 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!40651) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40662 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) lt!40651)))))

(declare-fun bs!3709 () Bool)

(assert (= bs!3709 d!23325))

(declare-fun m!93559 () Bool)

(assert (=> bs!3709 m!93559))

(assert (=> bs!3709 m!93559))

(declare-fun m!93561 () Bool)

(assert (=> bs!3709 m!93561))

(assert (=> b!85832 d!23325))

(declare-fun d!23327 () Bool)

(assert (=> d!23327 (= (apply!82 (+!110 lt!40652 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!40650) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40652 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) lt!40650)))))

(declare-fun bs!3710 () Bool)

(assert (= bs!3710 d!23327))

(declare-fun m!93563 () Bool)

(assert (=> bs!3710 m!93563))

(assert (=> bs!3710 m!93563))

(declare-fun m!93565 () Bool)

(assert (=> bs!3710 m!93565))

(assert (=> b!85832 d!23327))

(declare-fun d!23329 () Bool)

(assert (=> d!23329 (= (apply!82 (+!110 lt!40652 (tuple2!2199 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!40650) (apply!82 lt!40652 lt!40650))))

(declare-fun lt!41625 () Unit!2517)

(assert (=> d!23329 (= lt!41625 (choose!508 lt!40652 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) lt!40650))))

(declare-fun e!57067 () Bool)

(assert (=> d!23329 e!57067))

(declare-fun res!44940 () Bool)

(assert (=> d!23329 (=> (not res!44940) (not e!57067))))

(assert (=> d!23329 (= res!44940 (contains!753 lt!40652 lt!40650))))

(assert (=> d!23329 (= (addApplyDifferent!58 lt!40652 lt!40642 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)) lt!40650) lt!41625)))

(declare-fun b!87619 () Bool)

(assert (=> b!87619 (= e!57067 (not (= lt!40650 lt!40642)))))

(assert (= (and d!23329 res!44940) b!87619))

(assert (=> d!23329 m!90391))

(declare-fun m!93567 () Bool)

(assert (=> d!23329 m!93567))

(declare-fun m!93569 () Bool)

(assert (=> d!23329 m!93569))

(assert (=> d!23329 m!90409))

(assert (=> d!23329 m!90391))

(assert (=> d!23329 m!90393))

(assert (=> b!85832 d!23329))

(declare-fun d!23331 () Bool)

(assert (=> d!23331 (= (apply!82 (+!110 lt!40660 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!40658) (apply!82 lt!40660 lt!40658))))

(declare-fun lt!41626 () Unit!2517)

(assert (=> d!23331 (= lt!41626 (choose!508 lt!40660 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) lt!40658))))

(declare-fun e!57068 () Bool)

(assert (=> d!23331 e!57068))

(declare-fun res!44941 () Bool)

(assert (=> d!23331 (=> (not res!44941) (not e!57068))))

(assert (=> d!23331 (= res!44941 (contains!753 lt!40660 lt!40658))))

(assert (=> d!23331 (= (addApplyDifferent!58 lt!40660 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) lt!40658) lt!41626)))

(declare-fun b!87620 () Bool)

(assert (=> b!87620 (= e!57068 (not (= lt!40658 lt!40659)))))

(assert (= (and d!23331 res!44941) b!87620))

(assert (=> d!23331 m!90397))

(declare-fun m!93571 () Bool)

(assert (=> d!23331 m!93571))

(declare-fun m!93573 () Bool)

(assert (=> d!23331 m!93573))

(assert (=> d!23331 m!90389))

(assert (=> d!23331 m!90397))

(assert (=> d!23331 m!90399))

(assert (=> b!85832 d!23331))

(declare-fun d!23333 () Bool)

(declare-fun e!57069 () Bool)

(assert (=> d!23333 e!57069))

(declare-fun res!44942 () Bool)

(assert (=> d!23333 (=> (not res!44942) (not e!57069))))

(declare-fun lt!41629 () ListLongMap!1461)

(assert (=> d!23333 (= res!44942 (contains!753 lt!41629 (_1!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(declare-fun lt!41628 () List!1519)

(assert (=> d!23333 (= lt!41629 (ListLongMap!1462 lt!41628))))

(declare-fun lt!41630 () Unit!2517)

(declare-fun lt!41627 () Unit!2517)

(assert (=> d!23333 (= lt!41630 lt!41627)))

(assert (=> d!23333 (= (getValueByKey!140 lt!41628 (_1!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!23333 (= lt!41627 (lemmaContainsTupThenGetReturnValue!57 lt!41628 (_1!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!23333 (= lt!41628 (insertStrictlySorted!60 (toList!746 lt!40662) (_1!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))))))

(assert (=> d!23333 (= (+!110 lt!40662 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!41629)))

(declare-fun b!87621 () Bool)

(declare-fun res!44943 () Bool)

(assert (=> b!87621 (=> (not res!44943) (not e!57069))))

(assert (=> b!87621 (= res!44943 (= (getValueByKey!140 (toList!746 lt!41629) (_1!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))))

(declare-fun b!87622 () Bool)

(assert (=> b!87622 (= e!57069 (contains!754 (toList!746 lt!41629) (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))))))

(assert (= (and d!23333 res!44942) b!87621))

(assert (= (and b!87621 res!44943) b!87622))

(declare-fun m!93575 () Bool)

(assert (=> d!23333 m!93575))

(declare-fun m!93577 () Bool)

(assert (=> d!23333 m!93577))

(declare-fun m!93579 () Bool)

(assert (=> d!23333 m!93579))

(declare-fun m!93581 () Bool)

(assert (=> d!23333 m!93581))

(declare-fun m!93583 () Bool)

(assert (=> b!87621 m!93583))

(declare-fun m!93585 () Bool)

(assert (=> b!87622 m!93585))

(assert (=> b!85832 d!23333))

(declare-fun d!23335 () Bool)

(assert (=> d!23335 (= (apply!82 lt!40652 lt!40650) (get!1198 (getValueByKey!140 (toList!746 lt!40652) lt!40650)))))

(declare-fun bs!3711 () Bool)

(assert (= bs!3711 d!23335))

(declare-fun m!93587 () Bool)

(assert (=> bs!3711 m!93587))

(assert (=> bs!3711 m!93587))

(declare-fun m!93589 () Bool)

(assert (=> bs!3711 m!93589))

(assert (=> b!85832 d!23335))

(assert (=> b!85832 d!23257))

(declare-fun d!23337 () Bool)

(assert (=> d!23337 (= (apply!82 lt!40660 lt!40658) (get!1198 (getValueByKey!140 (toList!746 lt!40660) lt!40658)))))

(declare-fun bs!3712 () Bool)

(assert (= bs!3712 d!23337))

(declare-fun m!93591 () Bool)

(assert (=> bs!3712 m!93591))

(assert (=> bs!3712 m!93591))

(declare-fun m!93593 () Bool)

(assert (=> bs!3712 m!93593))

(assert (=> b!85832 d!23337))

(declare-fun d!23339 () Bool)

(assert (=> d!23339 (= (apply!82 (+!110 lt!40660 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!40658) (get!1198 (getValueByKey!140 (toList!746 (+!110 lt!40660 (tuple2!2199 lt!40659 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16))))) lt!40658)))))

(declare-fun bs!3713 () Bool)

(assert (= bs!3713 d!23339))

(declare-fun m!93595 () Bool)

(assert (=> bs!3713 m!93595))

(assert (=> bs!3713 m!93595))

(declare-fun m!93597 () Bool)

(assert (=> bs!3713 m!93597))

(assert (=> b!85832 d!23339))

(declare-fun d!23341 () Bool)

(assert (=> d!23341 (= (apply!82 (+!110 lt!40662 (tuple2!2199 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)))) lt!40651) (apply!82 lt!40662 lt!40651))))

(declare-fun lt!41631 () Unit!2517)

(assert (=> d!23341 (= lt!41631 (choose!508 lt!40662 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) lt!40651))))

(declare-fun e!57070 () Bool)

(assert (=> d!23341 e!57070))

(declare-fun res!44944 () Bool)

(assert (=> d!23341 (=> (not res!44944) (not e!57070))))

(assert (=> d!23341 (= res!44944 (contains!753 lt!40662 lt!40651))))

(assert (=> d!23341 (= (addApplyDifferent!58 lt!40662 lt!40656 (ite c!13892 (ite c!13883 (minValue!2230 newMap!16) lt!40326) (minValue!2230 newMap!16)) lt!40651) lt!41631)))

(declare-fun b!87623 () Bool)

(assert (=> b!87623 (= e!57070 (not (= lt!40651 lt!40656)))))

(assert (= (and d!23341 res!44944) b!87623))

(assert (=> d!23341 m!90401))

(declare-fun m!93599 () Bool)

(assert (=> d!23341 m!93599))

(declare-fun m!93601 () Bool)

(assert (=> d!23341 m!93601))

(assert (=> d!23341 m!90395))

(assert (=> d!23341 m!90401))

(assert (=> d!23341 m!90403))

(assert (=> b!85832 d!23341))

(declare-fun d!23343 () Bool)

(declare-fun e!57071 () Bool)

(assert (=> d!23343 e!57071))

(declare-fun res!44945 () Bool)

(assert (=> d!23343 (=> (not res!44945) (not e!57071))))

(declare-fun lt!41634 () ListLongMap!1461)

(assert (=> d!23343 (= res!44945 (contains!753 lt!41634 (_1!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(declare-fun lt!41633 () List!1519)

(assert (=> d!23343 (= lt!41634 (ListLongMap!1462 lt!41633))))

(declare-fun lt!41635 () Unit!2517)

(declare-fun lt!41632 () Unit!2517)

(assert (=> d!23343 (= lt!41635 lt!41632)))

(assert (=> d!23343 (= (getValueByKey!140 lt!41633 (_1!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(assert (=> d!23343 (= lt!41632 (lemmaContainsTupThenGetReturnValue!57 lt!41633 (_1!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(assert (=> d!23343 (= lt!41633 (insertStrictlySorted!60 (toList!746 lt!40648) (_1!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) (_2!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))))))

(assert (=> d!23343 (= (+!110 lt!40648 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))) lt!41634)))

(declare-fun b!87624 () Bool)

(declare-fun res!44946 () Bool)

(assert (=> b!87624 (=> (not res!44946) (not e!57071))))

(assert (=> b!87624 (= res!44946 (= (getValueByKey!140 (toList!746 lt!41634) (_1!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16))))) (Some!145 (_2!1110 (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))))))))

(declare-fun b!87625 () Bool)

(assert (=> b!87625 (= e!57071 (contains!754 (toList!746 lt!41634) (tuple2!2199 lt!40657 (ite (and c!13892 c!13883) lt!40326 (zeroValue!2230 newMap!16)))))))

(assert (= (and d!23343 res!44945) b!87624))

(assert (= (and b!87624 res!44946) b!87625))

(declare-fun m!93603 () Bool)

(assert (=> d!23343 m!93603))

(declare-fun m!93605 () Bool)

(assert (=> d!23343 m!93605))

(declare-fun m!93607 () Bool)

(assert (=> d!23343 m!93607))

(declare-fun m!93609 () Bool)

(assert (=> d!23343 m!93609))

(declare-fun m!93611 () Bool)

(assert (=> b!87624 m!93611))

(declare-fun m!93613 () Bool)

(assert (=> b!87625 m!93613))

(assert (=> b!85832 d!23343))

(declare-fun d!23345 () Bool)

(declare-fun e!57072 () Bool)

(assert (=> d!23345 e!57072))

(declare-fun res!44947 () Bool)

(assert (=> d!23345 (=> (not res!44947) (not e!57072))))

(declare-fun lt!41638 () ListLongMap!1461)

(assert (=> d!23345 (= res!44947 (contains!753 lt!41638 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(declare-fun lt!41637 () List!1519)

(assert (=> d!23345 (= lt!41638 (ListLongMap!1462 lt!41637))))

(declare-fun lt!41639 () Unit!2517)

(declare-fun lt!41636 () Unit!2517)

(assert (=> d!23345 (= lt!41639 lt!41636)))

(assert (=> d!23345 (= (getValueByKey!140 lt!41637 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23345 (= lt!41636 (lemmaContainsTupThenGetReturnValue!57 lt!41637 (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23345 (= lt!41637 (insertStrictlySorted!60 (toList!746 call!8198) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))))))

(assert (=> d!23345 (= (+!110 call!8198 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))) lt!41638)))

(declare-fun b!87626 () Bool)

(declare-fun res!44948 () Bool)

(assert (=> b!87626 (=> (not res!44948) (not e!57072))))

(assert (=> b!87626 (= res!44948 (= (getValueByKey!140 (toList!746 lt!41638) (_1!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16)))) (Some!145 (_2!1110 (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))))

(declare-fun b!87627 () Bool)

(assert (=> b!87627 (= e!57072 (contains!754 (toList!746 lt!41638) (tuple2!2199 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2230 newMap!16))))))

(assert (= (and d!23345 res!44947) b!87626))

(assert (= (and b!87626 res!44948) b!87627))

(declare-fun m!93615 () Bool)

(assert (=> d!23345 m!93615))

(declare-fun m!93617 () Bool)

(assert (=> d!23345 m!93617))

(declare-fun m!93619 () Bool)

(assert (=> d!23345 m!93619))

(declare-fun m!93621 () Bool)

(assert (=> d!23345 m!93621))

(declare-fun m!93623 () Bool)

(assert (=> b!87626 m!93623))

(declare-fun m!93625 () Bool)

(assert (=> b!87627 m!93625))

(assert (=> b!86084 d!23345))

(declare-fun mapIsEmpty!3413 () Bool)

(declare-fun mapRes!3413 () Bool)

(assert (=> mapIsEmpty!3413 mapRes!3413))

(declare-fun mapNonEmpty!3413 () Bool)

(declare-fun tp!8957 () Bool)

(declare-fun e!57074 () Bool)

(assert (=> mapNonEmpty!3413 (= mapRes!3413 (and tp!8957 e!57074))))

(declare-fun mapValue!3413 () ValueCell!924)

(declare-fun mapKey!3413 () (_ BitVec 32))

(declare-fun mapRest!3413 () (Array (_ BitVec 32) ValueCell!924))

(assert (=> mapNonEmpty!3413 (= mapRest!3412 (store mapRest!3413 mapKey!3413 mapValue!3413))))

(declare-fun b!87628 () Bool)

(assert (=> b!87628 (= e!57074 tp_is_empty!2535)))

(declare-fun b!87629 () Bool)

(declare-fun e!57073 () Bool)

(assert (=> b!87629 (= e!57073 tp_is_empty!2535)))

(declare-fun condMapEmpty!3413 () Bool)

(declare-fun mapDefault!3413 () ValueCell!924)

(assert (=> mapNonEmpty!3412 (= condMapEmpty!3413 (= mapRest!3412 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3413)))))

(assert (=> mapNonEmpty!3412 (= tp!8956 (and e!57073 mapRes!3413))))

(assert (= (and mapNonEmpty!3412 condMapEmpty!3413) mapIsEmpty!3413))

(assert (= (and mapNonEmpty!3412 (not condMapEmpty!3413)) mapNonEmpty!3413))

(assert (= (and mapNonEmpty!3413 ((_ is ValueCellFull!924) mapValue!3413)) b!87628))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!924) mapDefault!3413)) b!87629))

(declare-fun m!93627 () Bool)

(assert (=> mapNonEmpty!3413 m!93627))

(declare-fun mapIsEmpty!3414 () Bool)

(declare-fun mapRes!3414 () Bool)

(assert (=> mapIsEmpty!3414 mapRes!3414))

(declare-fun mapNonEmpty!3414 () Bool)

(declare-fun tp!8958 () Bool)

(declare-fun e!57076 () Bool)

(assert (=> mapNonEmpty!3414 (= mapRes!3414 (and tp!8958 e!57076))))

(declare-fun mapValue!3414 () ValueCell!924)

(declare-fun mapKey!3414 () (_ BitVec 32))

(declare-fun mapRest!3414 () (Array (_ BitVec 32) ValueCell!924))

(assert (=> mapNonEmpty!3414 (= mapRest!3411 (store mapRest!3414 mapKey!3414 mapValue!3414))))

(declare-fun b!87630 () Bool)

(assert (=> b!87630 (= e!57076 tp_is_empty!2535)))

(declare-fun b!87631 () Bool)

(declare-fun e!57075 () Bool)

(assert (=> b!87631 (= e!57075 tp_is_empty!2535)))

(declare-fun condMapEmpty!3414 () Bool)

(declare-fun mapDefault!3414 () ValueCell!924)

(assert (=> mapNonEmpty!3411 (= condMapEmpty!3414 (= mapRest!3411 ((as const (Array (_ BitVec 32) ValueCell!924)) mapDefault!3414)))))

(assert (=> mapNonEmpty!3411 (= tp!8955 (and e!57075 mapRes!3414))))

(assert (= (and mapNonEmpty!3411 condMapEmpty!3414) mapIsEmpty!3414))

(assert (= (and mapNonEmpty!3411 (not condMapEmpty!3414)) mapNonEmpty!3414))

(assert (= (and mapNonEmpty!3414 ((_ is ValueCellFull!924) mapValue!3414)) b!87630))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!924) mapDefault!3414)) b!87631))

(declare-fun m!93629 () Bool)

(assert (=> mapNonEmpty!3414 m!93629))

(declare-fun b_lambda!3865 () Bool)

(assert (= b_lambda!3843 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3865)))

(declare-fun b_lambda!3867 () Bool)

(assert (= b_lambda!3835 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3867)))

(declare-fun b_lambda!3869 () Bool)

(assert (= b_lambda!3845 (or (and b!85334 b_free!2237) (and b!85323 b_free!2239 (= (defaultEntry!2338 newMap!16) (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))))) b_lambda!3869)))

(declare-fun b_lambda!3871 () Bool)

(assert (= b_lambda!3837 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3871)))

(declare-fun b_lambda!3873 () Bool)

(assert (= b_lambda!3841 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3873)))

(declare-fun b_lambda!3875 () Bool)

(assert (= b_lambda!3863 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3875)))

(declare-fun b_lambda!3877 () Bool)

(assert (= b_lambda!3861 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3877)))

(declare-fun b_lambda!3879 () Bool)

(assert (= b_lambda!3853 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3879)))

(declare-fun b_lambda!3881 () Bool)

(assert (= b_lambda!3857 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3881)))

(declare-fun b_lambda!3883 () Bool)

(assert (= b_lambda!3849 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3883)))

(declare-fun b_lambda!3885 () Bool)

(assert (= b_lambda!3847 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3885)))

(declare-fun b_lambda!3887 () Bool)

(assert (= b_lambda!3851 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3887)))

(declare-fun b_lambda!3889 () Bool)

(assert (= b_lambda!3855 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3889)))

(declare-fun b_lambda!3891 () Bool)

(assert (= b_lambda!3839 (or (and b!85334 b_free!2237 (= (defaultEntry!2338 (v!2645 (underlying!289 thiss!992))) (defaultEntry!2338 newMap!16))) (and b!85323 b_free!2239) b_lambda!3891)))

(check-sat (not d!22627) (not b!87366) (not b!86721) (not b!87129) (not b!87064) (not b!86765) (not d!23123) (not b!86473) (not b!86865) (not d!23175) (not b!87395) (not d!22579) (not b!86598) (not b!87624) (not b!87189) (not b!87510) (not b!86968) (not b!87089) (not b!86697) (not d!22673) (not b!87050) (not b!87410) (not b!86764) (not d!22795) (not b!86318) (not b!87621) (not d!22517) (not d!22841) (not b!87357) (not d!22785) (not b!87373) (not b!87324) (not d!23107) (not b!86907) (not d!22505) (not b!86415) (not b_lambda!3881) (not d!23167) (not b!87009) (not b!87430) (not b!86953) (not b!87289) (not d!23053) (not d!23013) (not b!87135) (not b_lambda!3813) (not d!22791) (not b!86663) (not b!87260) (not d!22925) (not b!86956) (not d!22657) (not d!23247) (not b!86733) (not d!22465) (not b!86894) (not bm!8254) (not b!86565) (not b!86362) (not b!87555) (not b!86816) (not b!87501) (not b!86914) (not b!87123) (not d!22639) (not bm!8224) (not b!87393) (not b!86782) (not b!86532) (not bm!8236) (not d!22519) (not b!87077) (not bm!8357) (not b!87065) (not b!87326) (not b!86427) (not b!87524) (not b!86774) (not d!22793) (not b!87213) (not b!87495) (not b!86355) (not b!86715) (not bm!8359) (not b!87257) (not d!22777) (not b!87600) (not b!86513) (not b!87470) (not b!87484) (not bm!8269) (not d!22783) (not b!87312) (not b!86889) (not b!87222) (not b!86383) (not bm!8314) (not b!86324) (not d!22509) (not bm!8243) (not d!22975) (not b!87622) (not b!86330) (not b!86862) (not b!87225) (not b!86963) (not b!87424) (not b!86351) (not b_lambda!3869) (not b!86589) (not b!86430) (not d!22447) (not b!87042) (not b!87348) (not b!86670) (not b!86398) (not b_lambda!3859) (not d!22463) (not d!22583) (not d!22649) (not b!87540) (not bm!8239) (not b!86796) (not b!87533) (not d!22867) (not b!87148) (not b!86573) (not d!22737) (not b!86390) (not b!87114) (not b!86992) (not b!87287) (not b!87549) (not b_lambda!3879) (not bm!8299) (not b_lambda!3829) (not b!87342) (not b!86886) (not d!22799) (not b!86878) (not b!86679) (not d!23289) (not b!86635) (not b!86482) (not b!87116) (not b!87404) (not b!86756) (not d!23343) (not bm!8293) (not b!86649) (not d!23327) (not b!87269) (not bm!8317) (not b!87128) (not b!86548) (not b!86787) (not d!23203) (not b!86643) (not d!22727) (not b!86529) (not bm!8276) (not b!86265) (not b!87322) (not d!22877) (not b!87580) (not b!87181) (not b!86486) (not b!86346) (not b!86304) (not b!86837) (not d!22857) (not d!23197) (not b!87363) (not b!87074) (not b!87438) (not d!23149) (not b!86313) (not b!87564) (not d!22695) (not d!22893) (not d!22963) (not b!87183) (not b!87084) (not d!22943) (not b!87013) (not b!86374) (not d!22787) (not bm!8231) (not d!22635) (not b!86405) (not b!87057) (not d!22829) (not b!86844) (not d!23281) (not b!86691) (not d!22845) (not d!22647) (not b!86778) (not d!23101) (not b!86406) (not b!87007) (not b!86564) (not b!86579) (not d!23181) (not d!23345) (not b!86984) (not b!86776) (not b_lambda!3825) (not b!86718) (not b!87142) (not b!86608) (not d!22699) (not d!22917) (not b!86389) (not b!87059) (not b!86710) (not b!86569) (not b!86866) (not d!22563) (not b!86753) (not b!86989) (not bm!8289) (not b!87399) (not d!22633) (not b!87231) (not b!86575) (not d!22561) (not b!87428) (not b!86946) (not d!23259) (not b!86884) (not d!23323) (not b!87266) (not b!86556) (not b!86802) (not b!86707) (not b!86959) (not b!86637) (not b!87038) (not bm!8341) (not d!22549) (not d!22705) (not d!22929) (not b!86426) (not b!87402) (not b!87017) (not d!22683) (not b!86552) (not bm!8271) (not b!87518) (not d!22523) (not b!86348) (not b!87475) (not b!86561) (not d!22469) (not b!86298) (not b!87355) (not d!23297) (not b!87053) (not b_lambda!3811) (not b!87049) (not b!86553) (not bm!8283) (not b!86511) (not bm!8366) (not b!87209) (not d!23233) (not b!87204) (not b!87066) (not b_lambda!3801) (not d!23111) (not b!86342) (not d!23201) (not bm!8274) (not bm!8322) (not b!86828) (not b!86409) (not b!87521) (not b!87614) (not b!87568) (not b!87478) (not d!22853) (not b!86432) (not b!87500) (not b!87208) (not b!86931) (not b!86793) (not b!87379) (not b!86535) (not b!86363) (not b!86892) (not d!22531) (not b!86976) (not b!87132) (not d!22483) (not d!23039) (not b!87479) (not d!22985) (not b!86674) (not b!86503) (not b!86910) (not bm!8354) (not b!87515) (not d!22693) (not d!22585) (not b!86683) (not b!86698) (not b!86384) (not d!22919) (not b!87196) (not b!86822) (not d!22817) (not b!87451) (not b!87263) (not b!87388) (not bm!8363) (not b!86436) (not d!23307) (not d!22697) (not b!86869) (not b!87530) (not b!86700) (not b!87247) (not b_lambda!3873) (not b!86702) (not b!86999) (not bm!8323) (not b!86498) (not b!86921) (not b!86475) (not b!86680) (not b!86768) (not b!86991) (not b!86840) (not b!86385) (not b!86600) (not b!87272) (not bm!8333) (not b!86912) (not b!87544) (not d!23315) (not d!22511) (not b!86378) (not bm!8345) (not d!23057) (not b!86320) (not b!86831) (not b!86666) (not d!23335) (not bm!8230) b_and!5275 (not d!22609) (not b!87195) (not d!22981) (not b!86626) (not b!87513) (not bm!8305) (not d!23251) (not b!86950) (not d!23061) (not d!22773) (not b!86712) (not b!87546) (not b!86491) (not d!23305) (not d!22643) (not b!87466) (not d!23021) (not b!87413) (not b!86980) (not b!86422) (not b!87504) (not bm!8353) (not d!22901) (not d!22851) (not d!22957) (not d!22525) (not b!87293) (not b!86994) (not d!22743) (not b!86328) (not b!87376) (not b!87151) (not b!86754) (not d!22967) (not b!86780) (not b!87344) (not b!87400) (not bm!8234) (not bm!8251) (not d!23311) (not b!86516) (not b!86546) (not b!86757) (not b!87164) (not b!86395) (not b!87179) (not d!22767) (not d!22449) (not b!86502) (not b!87027) (not b!87608) (not b!87417) (not b!86369) (not bm!8255) (not b!86971) (not b!87024) (not b!86693) (not bm!8262) (not d!22931) (not b!86974) (not b!86772) (not d!22443) (not d!23147) (not d!23075) (not d!22873) (not b!86530) (not bm!8248) (not b!86825) (not d!22681) (not b!86662) (not b_lambda!3827) (not b!87575) (not b!86882) (not d!23303) (not b_next!2239) (not b!86311) (not d!22771) (not d!22545) (not b!87508) (not b!86604) (not b!86736) (not b!86354) (not b!86381) (not d!23129) (not b!87173) (not b!87000) (not b!87285) (not d!23035) (not b!87595) (not b!86580) (not b!87034) (not b!87070) (not b!86621) (not bm!8352) (not b!87610) (not d!22909) (not d!22745) (not b_lambda!3809) (not b!86429) (not d!22687) (not b!87352) (not d!22521) b_and!5277 (not b!87419) (not b!86361) (not b!87047) (not b!86601) (not b!86631) (not b!86798) (not b!87202) (not d!22905) (not d!23121) (not b!86456) (not b!87072) (not b!86563) (not b!87351) (not b!86849) (not b!86808) (not d!22761) (not d!23117) (not b_lambda!3833) (not b!86829) (not b!87167) (not b!86923) (not b!87248) (not d!22999) (not b!87542) (not d!22947) (not d!23071) (not bm!8240) (not d!22461) (not b!86393) (not b!87581) (not b!87278) (not b!86496) (not d!23283) (not b!86936) (not d!22883) (not d!22875) (not b!86751) (not d!22599) (not b!86312) (not b!87498) (not b!86704) (not b!86843) (not b!86720) (not b!87337) (not b!86344) (not b!86744) (not d!23159) (not b!86633) (not b!86368) (not b!87493) (not d!22723) (not b!86520) (not d!23213) (not b!87240) (not d!22987) (not d!22711) (not b!87552) (not d!23097) (not d!22833) (not b!86819) (not b!87145) (not d!23249) (not b!87153) (not d!23063) (not b!87455) (not b!87268) (not d!23191) (not b!86416) (not b!87346) (not b!86550) (not b!86479) (not b!86431) (not b!86965) (not bm!8270) (not b!87448) (not b!86399) (not d!23329) (not bm!8235) (not d!22759) (not d!23193) (not d!22899) (not bm!8237) (not b!87443) (not b!87227) (not d!22547) (not d!22839) (not b!87105) (not b_lambda!3875) (not b!87427) (not d!22849) (not b!86593) (not d!23155) (not d!22969) (not b!86332) (not b!86749) (not d!22569) (not d!22527) (not d!22717) (not b!87081) (not b!87003) (not b!87291) (not b!86867) (not d!22557) tp_is_empty!2535 (not d!22953) (not bm!8264) (not d!22479) (not b!87571) (not b!86728) (not b!86660) (not b!87139) (not b!87514) (not b!86386) (not d!23089) (not b!86940) (not d!22945) (not b!87177) (not b!86948) (not d!23185) (not b!86848) (not b!87193) (not d!23223) (not b!87588) (not d!22855) (not b!87584) (not b!86813) (not b!86800) (not b!86462) (not b!87509) (not d!22941) (not d!22715) (not d!22541) (not b!86519) (not b!86476) (not b!86536) (not b!86392) (not b!86654) (not b!86269) (not mapNonEmpty!3414) (not b!86969) (not b!87191) (not d!22671) (not b!86644) (not b!87536) (not b!87559) (not d!23081) (not d!23045) (not b!86272) (not b!87022) (not d!23273) (not d!22555) (not d!22765) (not d!22593) (not b!87239) (not d!22665) (not b!87026) (not b!87216) (not d!22779) (not b!87377) (not b!86855) (not b!86762) (not b!87422) (not d!22911) (not d!23339) (not b!86897) (not b!86791) (not b!87436) (not b!86417) (not b!86566) (not b!86937) (not b!86858) (not bm!8256) (not d!23189) (not b!86986) (not b!86672) (not d!23245) (not d!22815) (not b!86876) (not b!86299) (not b!87375) (not b!86852) (not b!86620) (not b!86500) (not b!87200) (not bm!8348) (not b!86315) (not bm!8292) (not d!22581) (not b!86359) (not b!86617) (not b!87370) (not d!22831) (not b!87078) (not d!23341) (not d!22769) (not b!87068) (not b!87044) (not b_lambda!3867) (not b!87407) (not bm!8340) (not d!22679) (not b!86739) (not b!87473) (not b!86419) (not bm!8267) (not b_lambda!3885) (not d!23183) (not bm!8311) (not b!86934) (not b_lambda!3877) (not bm!8229) (not b!87502) (not b!87458) (not b!87520) (not b!86424) (not d!22543) (not d!22669) (not b!87019) (not b!87255) (not bm!8369) (not d!23143) (not b!86610) (not b!87186) (not d!23321) (not b!86856) (not d!23317) (not b!86358) (not d!23313) (not b!87578) (not b!87328) (not b!87453) (not b!87615) (not d!23077) (not b!86485) (not b!86759) (not b!87566) (not bm!8238) (not d!23337) (not b!86403) (not b!86724) (not b!87527) (not b_lambda!3831) (not b!87040) (not d!23271) (not b!86689) (not d!23109) (not d!22835) (not b!86370) (not d!22457) (not b!86577) (not d!22611) (not d!22895) (not d!22501) (not b!86656) (not b!86658) (not b!86559) (not bm!8245) (not d!23059) (not b!87561) (not b!86467) (not d!22565) (not b!86640) (not d!23267) (not d!23231) (not d!23165) (not b!86452) (not b_lambda!3871) (not d!23263) (not b!86377) (not d!22553) (not b!87592) (not b!86307) (not bm!8286) (not b!86451) (not d!22475) (not d!23199) (not b!86372) (not b!87532) (not d!23257) (not b!87626) (not b!87282) (not d!23019) (not b_next!2237) (not b!87261) (not bm!8360) (not b!87111) (not d!23215) (not b_lambda!3883) (not d!22551) (not d!23331) (not b!87331) (not b!87030) (not d!22491) (not b!86376) (not bm!8334) (not b!86435) (not d!22865) (not bm!8338) (not b!86595) (not b!86713) (not d!22921) (not bm!8253) (not b!86696) (not b!87368) (not b!86846) (not d!23205) (not b!87590) (not b!86944) (not d!22703) (not b!86449) (not d!22955) (not d!22739) (not b!86832) (not b_lambda!3891) (not b!87604) (not b!87120) (not d!23261) (not b!87612) (not d!22789) (not b!87220) (not bm!8246) (not b!87405) (not bm!8351) (not b!87491) (not d!23113) (not b!87160) (not b!87237) (not d!22913) (not b_lambda!3889) (not d!22863) (not d!22535) (not bm!8247) (not b!86741) (not d!23139) (not b!87062) (not b!86997) (not b!86747) (not d!22515) (not b!86955) (not d!22539) (not b!87170) (not bm!8308) (not b!86695) (not b!87440) (not b!87618) (not d!22529) (not b!86917) (not d!22755) (not d!23119) (not bm!8342) (not b!87332) (not d!22629) (not b!87593) (not b!87349) (not d!22601) (not d!22615) (not b_lambda!3865) (not b!87496) (not mapNonEmpty!3413) (not d!22719) (not d!22951) (not b!86591) (not b_lambda!3887) (not b!86901) (not b!87126) (not b!86508) (not b!86309) (not b!86541) (not b!86806) (not b!86402) (not b!87206) (not d!22961) (not d!23325) (not b!87627) (not b!86810) (not d!23253) (not bm!8279) (not d!22503) (not bm!8319) (not b!87433) (not b!86638) (not d!22473) (not b!87551) (not b!87162) (not b!86412) (not b!86872) (not b!86859) (not d!23277) (not d!22645) (not bm!8347) (not d!23319) (not b!87446) (not b!87276) (not b!86408) (not b!87435) (not b!86661) (not b!87137) (not d!23195) (not d!22823) (not d!22977) (not bm!8282) (not b!87360) (not b!86443) (not bm!8329) (not b!87211) (not b!86977) (not bm!8296) (not b!87118) (not b!86404) (not d!22567) (not bm!8318) (not d!22881) (not d!22605) (not b!86743) (not b!87228) (not b!87076) (not b!87242) (not b!87516) (not d!22537) (not b!86784) (not b!86777) (not d!22689) (not b!87499) (not bm!8335) (not b!86835) (not b!86394) (not b!87421) (not b!87198) (not b!86927) (not bm!8259) (not d!23301) (not b!86585) (not d!22559) (not b!86373) (not b!86439) (not b!87408) (not b!86730) (not b!86470) (not d!23333) (not d!23007) (not d!23127) (not b!86687) (not b!87169) (not b!87573) (not d!22459) (not b!86364) (not b!86480) (not b!87245) (not b!87505) (not b!87525) (not d!22493) (not b!86582) (not b!86321) (not b!87235) (not b!86446) (not d!22441) (not d!22937) (not b!87426) (not b!86929) (not d!23141) (not b!87397) (not b!87601) (not bm!8326) (not b!86310) (not b!87625) (not bm!8263) (not b!86571) (not b!86677) (not b!87382) (not d!23105) (not b!86367) (not d!22477) (not b!87354) (not b!86804) (not b!87489) (not d!22507) (not b!87507) (not b!87462) (not bm!8302) (not b!86454) (not d!22983) (not d!22641) (not b!86639) (not b!87156) (not b!87617) (not b!86335) (not d!22513) (not b!87086) (not b!87251) (not b!86302) (not d!22701) (not bm!8332) (not d!22631) (not d!23137) (not b!87219) (not d!23157) (not b!87383) (not b!87616) (not b!87598) (not d!22577) (not b!86464))
(check-sat b_and!5275 b_and!5277 (not b_next!2237) (not b_next!2239))
