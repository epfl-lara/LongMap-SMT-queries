; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!10680 () Bool)

(assert start!10680)

(declare-fun b!85121 () Bool)

(declare-fun b_free!2233 () Bool)

(declare-fun b_next!2233 () Bool)

(assert (=> b!85121 (= b_free!2233 (not b_next!2233))))

(declare-fun tp!8924 () Bool)

(declare-fun b_and!5145 () Bool)

(assert (=> b!85121 (= tp!8924 b_and!5145)))

(declare-fun b!85118 () Bool)

(declare-fun b_free!2235 () Bool)

(declare-fun b_next!2235 () Bool)

(assert (=> b!85118 (= b_free!2235 (not b_next!2235))))

(declare-fun tp!8925 () Bool)

(declare-fun b_and!5147 () Bool)

(assert (=> b!85118 (= tp!8925 b_and!5147)))

(declare-fun b!85108 () Bool)

(declare-fun res!43883 () Bool)

(declare-fun e!55514 () Bool)

(assert (=> b!85108 (=> (not res!43883) (not e!55514))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((V!3025 0))(
  ( (V!3026 (val!1311 Int)) )
))
(declare-datatypes ((array!4005 0))(
  ( (array!4006 (arr!1906 (Array (_ BitVec 32) (_ BitVec 64))) (size!2151 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!923 0))(
  ( (ValueCellFull!923 (v!2637 V!3025)) (EmptyCell!923) )
))
(declare-datatypes ((array!4007 0))(
  ( (array!4008 (arr!1907 (Array (_ BitVec 32) ValueCell!923)) (size!2152 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!754 0))(
  ( (LongMapFixedSize!755 (defaultEntry!2337 Int) (mask!6364 (_ BitVec 32)) (extraKeys!2176 (_ BitVec 32)) (zeroValue!2229 V!3025) (minValue!2229 V!3025) (_size!426 (_ BitVec 32)) (_keys!4008 array!4005) (_values!2320 array!4007) (_vacant!426 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!548 0))(
  ( (Cell!549 (v!2638 LongMapFixedSize!754)) )
))
(declare-datatypes ((LongMap!548 0))(
  ( (LongMap!549 (underlying!285 Cell!548)) )
))
(declare-fun thiss!992 () LongMap!548)

(assert (=> b!85108 (= res!43883 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!85109 () Bool)

(declare-fun e!55502 () Bool)

(declare-fun tp_is_empty!2533 () Bool)

(assert (=> b!85109 (= e!55502 tp_is_empty!2533)))

(declare-fun b!85110 () Bool)

(declare-fun e!55507 () Bool)

(assert (=> b!85110 (= e!55507 tp_is_empty!2533)))

(declare-fun b!85111 () Bool)

(declare-fun e!55510 () Bool)

(declare-fun e!55503 () Bool)

(assert (=> b!85111 (= e!55510 e!55503)))

(declare-fun b!85112 () Bool)

(declare-fun e!55506 () Bool)

(declare-fun e!55515 () Bool)

(declare-fun mapRes!3393 () Bool)

(assert (=> b!85112 (= e!55506 (and e!55515 mapRes!3393))))

(declare-fun condMapEmpty!3394 () Bool)

(declare-fun mapDefault!3394 () ValueCell!923)

(assert (=> b!85112 (= condMapEmpty!3394 (= (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3394)))))

(declare-fun res!43887 () Bool)

(assert (=> start!10680 (=> (not res!43887) (not e!55514))))

(declare-fun valid!334 (LongMap!548) Bool)

(assert (=> start!10680 (= res!43887 (valid!334 thiss!992))))

(assert (=> start!10680 e!55514))

(declare-fun e!55504 () Bool)

(assert (=> start!10680 e!55504))

(assert (=> start!10680 true))

(declare-fun e!55508 () Bool)

(assert (=> start!10680 e!55508))

(declare-fun b!85113 () Bool)

(declare-datatypes ((Unit!2510 0))(
  ( (Unit!2511) )
))
(declare-fun e!55501 () Unit!2510)

(declare-fun Unit!2512 () Unit!2510)

(assert (=> b!85113 (= e!55501 Unit!2512)))

(declare-fun mapNonEmpty!3393 () Bool)

(declare-fun tp!8926 () Bool)

(declare-fun e!55513 () Bool)

(assert (=> mapNonEmpty!3393 (= mapRes!3393 (and tp!8926 e!55513))))

(declare-fun mapKey!3394 () (_ BitVec 32))

(declare-fun mapRest!3393 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapValue!3393 () ValueCell!923)

(assert (=> mapNonEmpty!3393 (= (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (store mapRest!3393 mapKey!3394 mapValue!3393))))

(declare-fun mapNonEmpty!3394 () Bool)

(declare-fun mapRes!3394 () Bool)

(declare-fun tp!8923 () Bool)

(assert (=> mapNonEmpty!3394 (= mapRes!3394 (and tp!8923 e!55502))))

(declare-fun mapKey!3393 () (_ BitVec 32))

(declare-fun newMap!16 () LongMapFixedSize!754)

(declare-fun mapRest!3394 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapValue!3394 () ValueCell!923)

(assert (=> mapNonEmpty!3394 (= (arr!1907 (_values!2320 newMap!16)) (store mapRest!3394 mapKey!3393 mapValue!3394))))

(declare-fun mapIsEmpty!3393 () Bool)

(assert (=> mapIsEmpty!3393 mapRes!3394))

(declare-fun mapIsEmpty!3394 () Bool)

(assert (=> mapIsEmpty!3394 mapRes!3393))

(declare-fun b!85114 () Bool)

(declare-fun e!55517 () Bool)

(assert (=> b!85114 (= e!55517 (or (not (= (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6364 (v!2638 (underlying!285 thiss!992)))))) (not (= (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992)))))) (bvslt (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000) (bvslt (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000011)))))

(declare-fun b!85115 () Bool)

(declare-fun e!55518 () Bool)

(declare-fun e!55509 () Bool)

(assert (=> b!85115 (= e!55518 e!55509)))

(declare-fun res!43881 () Bool)

(assert (=> b!85115 (=> (not res!43881) (not e!55509))))

(declare-datatypes ((tuple2!2204 0))(
  ( (tuple2!2205 (_1!1113 Bool) (_2!1113 LongMapFixedSize!754)) )
))
(declare-fun lt!40156 () tuple2!2204)

(assert (=> b!85115 (= res!43881 (and (_1!1113 lt!40156) (bvsgt from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!40145 () Unit!2510)

(assert (=> b!85115 (= lt!40145 e!55501)))

(declare-datatypes ((tuple2!2206 0))(
  ( (tuple2!2207 (_1!1114 (_ BitVec 64)) (_2!1114 V!3025)) )
))
(declare-datatypes ((List!1525 0))(
  ( (Nil!1522) (Cons!1521 (h!2112 tuple2!2206) (t!5237 List!1525)) )
))
(declare-datatypes ((ListLongMap!1449 0))(
  ( (ListLongMap!1450 (toList!740 List!1525)) )
))
(declare-fun lt!40151 () ListLongMap!1449)

(declare-fun c!13784 () Bool)

(declare-fun contains!752 (ListLongMap!1449 (_ BitVec 64)) Bool)

(assert (=> b!85115 (= c!13784 (contains!752 lt!40151 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun lt!40142 () V!3025)

(declare-fun update!122 (LongMapFixedSize!754 (_ BitVec 64) V!3025) tuple2!2204)

(assert (=> b!85115 (= lt!40156 (update!122 newMap!16 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))

(declare-fun b!85116 () Bool)

(assert (=> b!85116 (= e!55513 tp_is_empty!2533)))

(declare-fun b!85117 () Bool)

(assert (=> b!85117 (= e!55509 (not e!55517))))

(declare-fun res!43885 () Bool)

(assert (=> b!85117 (=> res!43885 e!55517)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!85117 (= res!43885 (not (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun lt!40152 () ListLongMap!1449)

(declare-fun lt!40146 () ListLongMap!1449)

(declare-fun lt!40153 () tuple2!2206)

(declare-fun lt!40140 () tuple2!2206)

(declare-fun +!108 (ListLongMap!1449 tuple2!2206) ListLongMap!1449)

(assert (=> b!85117 (= (+!108 lt!40152 lt!40153) (+!108 (+!108 lt!40146 lt!40153) lt!40140))))

(assert (=> b!85117 (= lt!40153 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun lt!40147 () Unit!2510)

(declare-fun addCommutativeForDiffKeys!27 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64) V!3025) Unit!2510)

(assert (=> b!85117 (= lt!40147 (addCommutativeForDiffKeys!27 lt!40146 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun lt!40148 () ListLongMap!1449)

(assert (=> b!85117 (= lt!40148 lt!40152)))

(assert (=> b!85117 (= lt!40152 (+!108 lt!40146 lt!40140))))

(declare-fun lt!40154 () ListLongMap!1449)

(declare-fun lt!40143 () tuple2!2206)

(assert (=> b!85117 (= lt!40148 (+!108 lt!40154 lt!40143))))

(declare-fun lt!40150 () ListLongMap!1449)

(assert (=> b!85117 (= lt!40146 (+!108 lt!40150 lt!40143))))

(assert (=> b!85117 (= lt!40143 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(assert (=> b!85117 (= lt!40154 (+!108 lt!40150 lt!40140))))

(assert (=> b!85117 (= lt!40140 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))

(declare-fun lt!40141 () Unit!2510)

(assert (=> b!85117 (= lt!40141 (addCommutativeForDiffKeys!27 lt!40150 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!72 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) ListLongMap!1449)

(assert (=> b!85117 (= lt!40150 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun e!55505 () Bool)

(declare-fun array_inv!1195 (array!4005) Bool)

(declare-fun array_inv!1196 (array!4007) Bool)

(assert (=> b!85118 (= e!55508 (and tp!8925 tp_is_empty!2533 (array_inv!1195 (_keys!4008 newMap!16)) (array_inv!1196 (_values!2320 newMap!16)) e!55505))))

(declare-fun b!85119 () Bool)

(declare-fun res!43882 () Bool)

(assert (=> b!85119 (=> (not res!43882) (not e!55514))))

(assert (=> b!85119 (= res!43882 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6364 newMap!16)) (_size!426 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85120 () Bool)

(assert (=> b!85120 (= e!55505 (and e!55507 mapRes!3394))))

(declare-fun condMapEmpty!3393 () Bool)

(declare-fun mapDefault!3393 () ValueCell!923)

(assert (=> b!85120 (= condMapEmpty!3393 (= (arr!1907 (_values!2320 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3393)))))

(assert (=> b!85121 (= e!55503 (and tp!8924 tp_is_empty!2533 (array_inv!1195 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (array_inv!1196 (_values!2320 (v!2638 (underlying!285 thiss!992)))) e!55506))))

(declare-fun b!85122 () Bool)

(declare-fun res!43880 () Bool)

(assert (=> b!85122 (=> (not res!43880) (not e!55514))))

(declare-fun valid!335 (LongMapFixedSize!754) Bool)

(assert (=> b!85122 (= res!43880 (valid!335 newMap!16))))

(declare-fun b!85123 () Bool)

(declare-fun e!55516 () Bool)

(assert (=> b!85123 (= e!55516 e!55518)))

(declare-fun res!43884 () Bool)

(assert (=> b!85123 (=> (not res!43884) (not e!55518))))

(assert (=> b!85123 (= res!43884 (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1199 (ValueCell!923 V!3025) V!3025)

(declare-fun dynLambda!342 (Int (_ BitVec 64)) V!3025)

(assert (=> b!85123 (= lt!40142 (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85124 () Bool)

(assert (=> b!85124 (= e!55515 tp_is_empty!2533)))

(declare-fun b!85125 () Bool)

(declare-fun Unit!2513 () Unit!2510)

(assert (=> b!85125 (= e!55501 Unit!2513)))

(declare-fun lt!40155 () Unit!2510)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!66 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2510)

(assert (=> b!85125 (= lt!40155 (lemmaListMapContainsThenArrayContainsFrom!66 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4005 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!85125 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!40157 () Unit!2510)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4005 (_ BitVec 32) (_ BitVec 32)) Unit!2510)

(assert (=> b!85125 (= lt!40157 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1526 0))(
  ( (Nil!1523) (Cons!1522 (h!2113 (_ BitVec 64)) (t!5238 List!1526)) )
))
(declare-fun arrayNoDuplicates!0 (array!4005 (_ BitVec 32) List!1526) Bool)

(assert (=> b!85125 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) from!355 Nil!1523)))

(declare-fun lt!40144 () Unit!2510)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4005 (_ BitVec 32) (_ BitVec 64) List!1526) Unit!2510)

(assert (=> b!85125 (= lt!40144 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523)))))

(assert (=> b!85125 false))

(declare-fun b!85126 () Bool)

(assert (=> b!85126 (= e!55514 e!55516)))

(declare-fun res!43886 () Bool)

(assert (=> b!85126 (=> (not res!43886) (not e!55516))))

(declare-fun lt!40149 () ListLongMap!1449)

(assert (=> b!85126 (= res!43886 (= lt!40149 lt!40151))))

(declare-fun map!1186 (LongMapFixedSize!754) ListLongMap!1449)

(assert (=> b!85126 (= lt!40151 (map!1186 newMap!16))))

(declare-fun getCurrentListMap!426 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) ListLongMap!1449)

(assert (=> b!85126 (= lt!40149 (getCurrentListMap!426 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85127 () Bool)

(assert (=> b!85127 (= e!55504 e!55510)))

(assert (= (and start!10680 res!43887) b!85108))

(assert (= (and b!85108 res!43883) b!85122))

(assert (= (and b!85122 res!43880) b!85119))

(assert (= (and b!85119 res!43882) b!85126))

(assert (= (and b!85126 res!43886) b!85123))

(assert (= (and b!85123 res!43884) b!85115))

(assert (= (and b!85115 c!13784) b!85125))

(assert (= (and b!85115 (not c!13784)) b!85113))

(assert (= (and b!85115 res!43881) b!85117))

(assert (= (and b!85117 (not res!43885)) b!85114))

(assert (= (and b!85112 condMapEmpty!3394) mapIsEmpty!3394))

(assert (= (and b!85112 (not condMapEmpty!3394)) mapNonEmpty!3393))

(get-info :version)

(assert (= (and mapNonEmpty!3393 ((_ is ValueCellFull!923) mapValue!3393)) b!85116))

(assert (= (and b!85112 ((_ is ValueCellFull!923) mapDefault!3394)) b!85124))

(assert (= b!85121 b!85112))

(assert (= b!85111 b!85121))

(assert (= b!85127 b!85111))

(assert (= start!10680 b!85127))

(assert (= (and b!85120 condMapEmpty!3393) mapIsEmpty!3393))

(assert (= (and b!85120 (not condMapEmpty!3393)) mapNonEmpty!3394))

(assert (= (and mapNonEmpty!3394 ((_ is ValueCellFull!923) mapValue!3394)) b!85109))

(assert (= (and b!85120 ((_ is ValueCellFull!923) mapDefault!3393)) b!85110))

(assert (= b!85118 b!85120))

(assert (= start!10680 b!85118))

(declare-fun b_lambda!3781 () Bool)

(assert (=> (not b_lambda!3781) (not b!85123)))

(declare-fun t!5234 () Bool)

(declare-fun tb!1681 () Bool)

(assert (=> (and b!85121 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) t!5234) tb!1681))

(declare-fun result!2903 () Bool)

(assert (=> tb!1681 (= result!2903 tp_is_empty!2533)))

(assert (=> b!85123 t!5234))

(declare-fun b_and!5149 () Bool)

(assert (= b_and!5145 (and (=> t!5234 result!2903) b_and!5149)))

(declare-fun t!5236 () Bool)

(declare-fun tb!1683 () Bool)

(assert (=> (and b!85118 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) t!5236) tb!1683))

(declare-fun result!2907 () Bool)

(assert (= result!2907 result!2903))

(assert (=> b!85123 t!5236))

(declare-fun b_and!5151 () Bool)

(assert (= b_and!5147 (and (=> t!5236 result!2907) b_and!5151)))

(declare-fun m!89401 () Bool)

(assert (=> mapNonEmpty!3393 m!89401))

(declare-fun m!89403 () Bool)

(assert (=> b!85123 m!89403))

(declare-fun m!89405 () Bool)

(assert (=> b!85123 m!89405))

(declare-fun m!89407 () Bool)

(assert (=> b!85123 m!89407))

(assert (=> b!85123 m!89405))

(assert (=> b!85123 m!89407))

(declare-fun m!89409 () Bool)

(assert (=> b!85123 m!89409))

(declare-fun m!89411 () Bool)

(assert (=> b!85122 m!89411))

(declare-fun m!89413 () Bool)

(assert (=> start!10680 m!89413))

(declare-fun m!89415 () Bool)

(assert (=> b!85118 m!89415))

(declare-fun m!89417 () Bool)

(assert (=> b!85118 m!89417))

(declare-fun m!89419 () Bool)

(assert (=> b!85117 m!89419))

(declare-fun m!89421 () Bool)

(assert (=> b!85117 m!89421))

(declare-fun m!89423 () Bool)

(assert (=> b!85117 m!89423))

(declare-fun m!89425 () Bool)

(assert (=> b!85117 m!89425))

(declare-fun m!89427 () Bool)

(assert (=> b!85117 m!89427))

(assert (=> b!85117 m!89403))

(declare-fun m!89429 () Bool)

(assert (=> b!85117 m!89429))

(declare-fun m!89431 () Bool)

(assert (=> b!85117 m!89431))

(declare-fun m!89433 () Bool)

(assert (=> b!85117 m!89433))

(declare-fun m!89435 () Bool)

(assert (=> b!85117 m!89435))

(assert (=> b!85117 m!89403))

(assert (=> b!85117 m!89419))

(declare-fun m!89437 () Bool)

(assert (=> b!85117 m!89437))

(assert (=> b!85117 m!89403))

(declare-fun m!89439 () Bool)

(assert (=> b!85117 m!89439))

(declare-fun m!89441 () Bool)

(assert (=> b!85125 m!89441))

(declare-fun m!89443 () Bool)

(assert (=> b!85125 m!89443))

(assert (=> b!85125 m!89403))

(declare-fun m!89445 () Bool)

(assert (=> b!85125 m!89445))

(assert (=> b!85125 m!89403))

(assert (=> b!85125 m!89403))

(declare-fun m!89447 () Bool)

(assert (=> b!85125 m!89447))

(assert (=> b!85125 m!89403))

(declare-fun m!89449 () Bool)

(assert (=> b!85125 m!89449))

(declare-fun m!89451 () Bool)

(assert (=> b!85121 m!89451))

(declare-fun m!89453 () Bool)

(assert (=> b!85121 m!89453))

(declare-fun m!89455 () Bool)

(assert (=> mapNonEmpty!3394 m!89455))

(assert (=> b!85115 m!89403))

(assert (=> b!85115 m!89403))

(declare-fun m!89457 () Bool)

(assert (=> b!85115 m!89457))

(assert (=> b!85115 m!89403))

(declare-fun m!89459 () Bool)

(assert (=> b!85115 m!89459))

(declare-fun m!89461 () Bool)

(assert (=> b!85126 m!89461))

(declare-fun m!89463 () Bool)

(assert (=> b!85126 m!89463))

(check-sat (not b!85118) (not start!10680) b_and!5151 (not b_lambda!3781) (not mapNonEmpty!3394) (not mapNonEmpty!3393) b_and!5149 (not b!85125) (not b_next!2235) (not b!85117) (not b!85121) (not b!85122) (not b!85126) (not b_next!2233) (not b!85123) tp_is_empty!2533 (not b!85115))
(check-sat b_and!5149 b_and!5151 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun b_lambda!3787 () Bool)

(assert (= b_lambda!3781 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3787)))

(check-sat (not b!85118) (not start!10680) b_and!5151 (not mapNonEmpty!3394) (not mapNonEmpty!3393) b_and!5149 (not b!85125) (not b_next!2235) (not b!85117) (not b!85121) (not b!85122) (not b!85126) (not b_lambda!3787) (not b_next!2233) (not b!85123) tp_is_empty!2533 (not b!85115))
(check-sat b_and!5149 b_and!5151 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun d!22057 () Bool)

(assert (=> d!22057 (= (valid!334 thiss!992) (valid!335 (v!2638 (underlying!285 thiss!992))))))

(declare-fun bs!3605 () Bool)

(assert (= bs!3605 d!22057))

(declare-fun m!89593 () Bool)

(assert (=> bs!3605 m!89593))

(assert (=> start!10680 d!22057))

(declare-fun d!22059 () Bool)

(declare-fun e!55632 () Bool)

(assert (=> d!22059 e!55632))

(declare-fun res!43938 () Bool)

(assert (=> d!22059 (=> res!43938 e!55632)))

(declare-fun lt!40274 () Bool)

(assert (=> d!22059 (= res!43938 (not lt!40274))))

(declare-fun lt!40277 () Bool)

(assert (=> d!22059 (= lt!40274 lt!40277)))

(declare-fun lt!40275 () Unit!2510)

(declare-fun e!55631 () Unit!2510)

(assert (=> d!22059 (= lt!40275 e!55631)))

(declare-fun c!13793 () Bool)

(assert (=> d!22059 (= c!13793 lt!40277)))

(declare-fun containsKey!142 (List!1525 (_ BitVec 64)) Bool)

(assert (=> d!22059 (= lt!40277 (containsKey!142 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22059 (= (contains!752 lt!40151 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!40274)))

(declare-fun b!85260 () Bool)

(declare-fun lt!40276 () Unit!2510)

(assert (=> b!85260 (= e!55631 lt!40276)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!91 (List!1525 (_ BitVec 64)) Unit!2510)

(assert (=> b!85260 (= lt!40276 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-datatypes ((Option!144 0))(
  ( (Some!143 (v!2644 V!3025)) (None!142) )
))
(declare-fun isDefined!92 (Option!144) Bool)

(declare-fun getValueByKey!138 (List!1525 (_ BitVec 64)) Option!144)

(assert (=> b!85260 (isDefined!92 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85261 () Bool)

(declare-fun Unit!2521 () Unit!2510)

(assert (=> b!85261 (= e!55631 Unit!2521)))

(declare-fun b!85262 () Bool)

(assert (=> b!85262 (= e!55632 (isDefined!92 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (= (and d!22059 c!13793) b!85260))

(assert (= (and d!22059 (not c!13793)) b!85261))

(assert (= (and d!22059 (not res!43938)) b!85262))

(assert (=> d!22059 m!89403))

(declare-fun m!89595 () Bool)

(assert (=> d!22059 m!89595))

(assert (=> b!85260 m!89403))

(declare-fun m!89597 () Bool)

(assert (=> b!85260 m!89597))

(assert (=> b!85260 m!89403))

(declare-fun m!89599 () Bool)

(assert (=> b!85260 m!89599))

(assert (=> b!85260 m!89599))

(declare-fun m!89601 () Bool)

(assert (=> b!85260 m!89601))

(assert (=> b!85262 m!89403))

(assert (=> b!85262 m!89599))

(assert (=> b!85262 m!89599))

(assert (=> b!85262 m!89601))

(assert (=> b!85115 d!22059))

(declare-fun bm!8075 () Bool)

(declare-fun call!8086 () Unit!2510)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2510)

(assert (=> bm!8075 (= call!8086 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun bm!8076 () Bool)

(declare-fun call!8084 () Bool)

(declare-fun call!8101 () Bool)

(assert (=> bm!8076 (= call!8084 call!8101)))

(declare-fun bm!8077 () Bool)

(declare-fun call!8092 () Bool)

(declare-fun call!8093 () Bool)

(assert (=> bm!8077 (= call!8092 call!8093)))

(declare-fun bm!8078 () Bool)

(declare-fun call!8083 () Bool)

(assert (=> bm!8078 (= call!8083 call!8092)))

(declare-fun b!85343 () Bool)

(declare-fun res!43972 () Bool)

(declare-fun e!55683 () Bool)

(assert (=> b!85343 (=> (not res!43972) (not e!55683))))

(declare-datatypes ((SeekEntryResult!246 0))(
  ( (MissingZero!246 (index!3121 (_ BitVec 32))) (Found!246 (index!3122 (_ BitVec 32))) (Intermediate!246 (undefined!1058 Bool) (index!3123 (_ BitVec 32)) (x!11998 (_ BitVec 32))) (Undefined!246) (MissingVacant!246 (index!3124 (_ BitVec 32))) )
))
(declare-fun lt!40337 () SeekEntryResult!246)

(assert (=> b!85343 (= res!43972 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!40337)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85344 () Bool)

(declare-fun lt!40350 () Unit!2510)

(declare-fun e!55695 () Unit!2510)

(assert (=> b!85344 (= lt!40350 e!55695)))

(declare-fun c!13821 () Bool)

(declare-fun call!8085 () Bool)

(assert (=> b!85344 (= c!13821 call!8085)))

(declare-fun e!55691 () tuple2!2204)

(assert (=> b!85344 (= e!55691 (tuple2!2205 false newMap!16))))

(declare-fun b!85345 () Bool)

(declare-fun lt!40335 () Unit!2510)

(assert (=> b!85345 (= e!55695 lt!40335)))

(declare-fun call!8078 () Unit!2510)

(assert (=> b!85345 (= lt!40335 call!8078)))

(declare-fun call!8088 () SeekEntryResult!246)

(assert (=> b!85345 (= lt!40337 call!8088)))

(declare-fun c!13831 () Bool)

(assert (=> b!85345 (= c!13831 ((_ is MissingZero!246) lt!40337))))

(declare-fun e!55688 () Bool)

(assert (=> b!85345 e!55688))

(declare-fun b!85346 () Bool)

(declare-fun res!43968 () Bool)

(assert (=> b!85346 (= res!43968 call!8092)))

(declare-fun e!55679 () Bool)

(assert (=> b!85346 (=> (not res!43968) (not e!55679))))

(declare-fun bm!8079 () Bool)

(declare-fun call!8079 () ListLongMap!1449)

(declare-fun call!8100 () ListLongMap!1449)

(assert (=> bm!8079 (= call!8079 call!8100)))

(declare-fun bm!8080 () Bool)

(declare-fun call!8097 () Bool)

(declare-fun call!8099 () Bool)

(assert (=> bm!8080 (= call!8097 call!8099)))

(declare-fun b!85347 () Bool)

(declare-fun res!43979 () Bool)

(assert (=> b!85347 (=> (not res!43979) (not e!55683))))

(assert (=> b!85347 (= res!43979 call!8083)))

(assert (=> b!85347 (= e!55688 e!55683)))

(declare-fun b!85348 () Bool)

(declare-fun e!55675 () ListLongMap!1449)

(assert (=> b!85348 (= e!55675 call!8079)))

(declare-fun b!85349 () Bool)

(declare-fun e!55693 () Bool)

(assert (=> b!85349 (= e!55693 (not call!8097))))

(declare-fun bm!8081 () Bool)

(declare-fun call!8094 () SeekEntryResult!246)

(declare-fun call!8096 () SeekEntryResult!246)

(assert (=> bm!8081 (= call!8094 call!8096)))

(declare-fun b!85350 () Bool)

(declare-fun c!13826 () Bool)

(declare-fun lt!40357 () SeekEntryResult!246)

(assert (=> b!85350 (= c!13826 ((_ is MissingVacant!246) lt!40357))))

(declare-fun e!55677 () tuple2!2204)

(assert (=> b!85350 (= e!55691 e!55677)))

(declare-fun bm!8082 () Bool)

(declare-fun call!8090 () ListLongMap!1449)

(declare-fun call!8087 () ListLongMap!1449)

(assert (=> bm!8082 (= call!8090 call!8087)))

(declare-fun b!85351 () Bool)

(declare-fun call!8081 () Bool)

(assert (=> b!85351 (= e!55683 (not call!8081))))

(declare-fun b!85352 () Bool)

(declare-fun e!55676 () Bool)

(declare-fun lt!40345 () SeekEntryResult!246)

(assert (=> b!85352 (= e!55676 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40345)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85353 () Bool)

(declare-fun lt!40356 () tuple2!2204)

(declare-fun call!8095 () tuple2!2204)

(assert (=> b!85353 (= lt!40356 call!8095)))

(declare-fun e!55690 () tuple2!2204)

(assert (=> b!85353 (= e!55690 (tuple2!2205 (_1!1113 lt!40356) (_2!1113 lt!40356)))))

(declare-fun b!85354 () Bool)

(declare-fun lt!40342 () Unit!2510)

(declare-fun lt!40334 () Unit!2510)

(assert (=> b!85354 (= lt!40342 lt!40334)))

(declare-fun call!8080 () ListLongMap!1449)

(assert (=> b!85354 (= call!8090 call!8080)))

(declare-fun lt!40338 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!31 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2510)

(assert (=> b!85354 (= lt!40334 (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40338 (zeroValue!2229 newMap!16) lt!40142 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)))))

(assert (=> b!85354 (= lt!40338 (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!55689 () tuple2!2204)

(assert (=> b!85354 (= e!55689 (tuple2!2205 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6364 newMap!16) (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) lt!40142 (minValue!2229 newMap!16) (_size!426 newMap!16) (_keys!4008 newMap!16) (_values!2320 newMap!16) (_vacant!426 newMap!16))))))

(declare-fun bm!8083 () Bool)

(declare-fun updateHelperNewKey!31 (LongMapFixedSize!754 (_ BitVec 64) V!3025 (_ BitVec 32)) tuple2!2204)

(assert (=> bm!8083 (= call!8095 (updateHelperNewKey!31 newMap!16 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))

(declare-fun b!85355 () Bool)

(declare-fun res!43980 () Bool)

(assert (=> b!85355 (= res!43980 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!40337)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55680 () Bool)

(assert (=> b!85355 (=> (not res!43980) (not e!55680))))

(declare-fun b!85356 () Bool)

(declare-fun c!13825 () Bool)

(declare-fun lt!40336 () SeekEntryResult!246)

(assert (=> b!85356 (= c!13825 ((_ is MissingVacant!246) lt!40336))))

(declare-fun e!55686 () Bool)

(declare-fun e!55682 () Bool)

(assert (=> b!85356 (= e!55686 e!55682)))

(declare-fun b!85357 () Bool)

(declare-fun res!43974 () Bool)

(assert (=> b!85357 (= res!43974 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!40336)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55687 () Bool)

(assert (=> b!85357 (=> (not res!43974) (not e!55687))))

(declare-fun b!85358 () Bool)

(declare-fun Unit!2522 () Unit!2510)

(assert (=> b!85358 (= e!55695 Unit!2522)))

(declare-fun lt!40341 () Unit!2510)

(assert (=> b!85358 (= lt!40341 call!8086)))

(declare-fun lt!40339 () SeekEntryResult!246)

(assert (=> b!85358 (= lt!40339 call!8088)))

(declare-fun res!43970 () Bool)

(assert (=> b!85358 (= res!43970 ((_ is Found!246) lt!40339))))

(assert (=> b!85358 (=> (not res!43970) (not e!55679))))

(assert (=> b!85358 e!55679))

(declare-fun lt!40332 () Unit!2510)

(assert (=> b!85358 (= lt!40332 lt!40341)))

(assert (=> b!85358 false))

(declare-fun b!85359 () Bool)

(declare-fun lt!40340 () Unit!2510)

(declare-fun lt!40353 () Unit!2510)

(assert (=> b!85359 (= lt!40340 lt!40353)))

(assert (=> b!85359 call!8085))

(declare-fun lt!40348 () array!4007)

(declare-fun lemmaValidKeyInArrayIsInListMap!90 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) Unit!2510)

(assert (=> b!85359 (= lt!40353 (lemmaValidKeyInArrayIsInListMap!90 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (defaultEntry!2337 newMap!16)))))

(assert (=> b!85359 (= lt!40348 (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))))

(declare-fun lt!40333 () Unit!2510)

(declare-fun lt!40346 () Unit!2510)

(assert (=> b!85359 (= lt!40333 lt!40346)))

(declare-fun call!8091 () ListLongMap!1449)

(assert (=> b!85359 (= call!8087 call!8091)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2510)

(assert (=> b!85359 (= lt!40346 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40349 () Unit!2510)

(declare-fun e!55694 () Unit!2510)

(assert (=> b!85359 (= lt!40349 e!55694)))

(declare-fun c!13822 () Bool)

(assert (=> b!85359 (= c!13822 (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!85359 (= e!55690 (tuple2!2205 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (_size!426 newMap!16) (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (_vacant!426 newMap!16))))))

(declare-fun b!85360 () Bool)

(declare-fun res!43975 () Bool)

(assert (=> b!85360 (= res!43975 call!8101)))

(assert (=> b!85360 (=> (not res!43975) (not e!55676))))

(declare-fun bm!8084 () Bool)

(assert (=> bm!8084 (= call!8081 call!8099)))

(declare-fun bm!8085 () Bool)

(declare-fun call!8089 () ListLongMap!1449)

(assert (=> bm!8085 (= call!8089 (map!1186 newMap!16))))

(declare-fun b!85361 () Bool)

(declare-fun res!43976 () Bool)

(assert (=> b!85361 (=> (not res!43976) (not e!55693))))

(assert (=> b!85361 (= res!43976 call!8084)))

(assert (=> b!85361 (= e!55686 e!55693)))

(declare-fun bm!8086 () Bool)

(declare-fun call!8098 () ListLongMap!1449)

(assert (=> bm!8086 (= call!8098 call!8100)))

(declare-fun bm!8087 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4005 (_ BitVec 32)) SeekEntryResult!246)

(assert (=> bm!8087 (= call!8096 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!85362 () Bool)

(declare-fun e!55678 () Bool)

(declare-fun call!8082 () ListLongMap!1449)

(assert (=> b!85362 (= e!55678 (= call!8082 call!8089))))

(declare-fun b!85363 () Bool)

(declare-fun lt!40352 () tuple2!2204)

(assert (=> b!85363 (= e!55677 (tuple2!2205 (_1!1113 lt!40352) (_2!1113 lt!40352)))))

(assert (=> b!85363 (= lt!40352 call!8095)))

(declare-fun b!85364 () Bool)

(declare-fun res!43977 () Bool)

(assert (=> b!85364 (=> (not res!43977) (not e!55693))))

(assert (=> b!85364 (= res!43977 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!40336)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85365 () Bool)

(declare-fun e!55681 () Bool)

(assert (=> b!85365 (= e!55681 ((_ is Undefined!246) lt!40337))))

(declare-fun b!85366 () Bool)

(declare-fun e!55684 () Bool)

(assert (=> b!85366 (= e!55684 e!55678)))

(declare-fun c!13827 () Bool)

(declare-fun lt!40354 () tuple2!2204)

(assert (=> b!85366 (= c!13827 (_1!1113 lt!40354))))

(declare-fun c!13828 () Bool)

(declare-fun lt!40355 () (_ BitVec 32))

(declare-fun bm!8088 () Bool)

(declare-fun c!13823 () Bool)

(assert (=> bm!8088 (= call!8091 (getCurrentListMap!426 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun bm!8089 () Bool)

(declare-fun c!13832 () Bool)

(assert (=> bm!8089 (= call!8100 (getCurrentListMap!426 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun bm!8090 () Bool)

(assert (=> bm!8090 (= call!8080 call!8091)))

(declare-fun d!22061 () Bool)

(assert (=> d!22061 e!55684))

(declare-fun res!43978 () Bool)

(assert (=> d!22061 (=> (not res!43978) (not e!55684))))

(assert (=> d!22061 (= res!43978 (valid!335 (_2!1113 lt!40354)))))

(declare-fun e!55692 () tuple2!2204)

(assert (=> d!22061 (= lt!40354 e!55692)))

(assert (=> d!22061 (= c!13828 (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvneg (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (=> d!22061 (valid!335 newMap!16)))

(assert (=> d!22061 (= (update!122 newMap!16 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142) lt!40354)))

(declare-fun b!85367 () Bool)

(assert (=> b!85367 (= e!55677 e!55690)))

(declare-fun c!13829 () Bool)

(assert (=> b!85367 (= c!13829 ((_ is MissingZero!246) lt!40357))))

(declare-fun b!85368 () Bool)

(declare-fun e!55685 () Bool)

(assert (=> b!85368 (= e!55678 e!55685)))

(declare-fun res!43973 () Bool)

(assert (=> b!85368 (= res!43973 (contains!752 call!8082 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!85368 (=> (not res!43973) (not e!55685))))

(declare-fun bm!8091 () Bool)

(assert (=> bm!8091 (= call!8082 (map!1186 (_2!1113 lt!40354)))))

(declare-fun b!85369 () Bool)

(assert (=> b!85369 (= e!55687 (not call!8097))))

(declare-fun bm!8092 () Bool)

(assert (=> bm!8092 (= call!8099 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!85370 () Bool)

(assert (=> b!85370 (= e!55685 (= call!8082 (+!108 call!8089 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!85371 () Bool)

(assert (=> b!85371 (= e!55692 e!55689)))

(assert (=> b!85371 (= c!13823 (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85372 () Bool)

(assert (=> b!85372 (= e!55682 ((_ is Undefined!246) lt!40336))))

(declare-fun b!85373 () Bool)

(declare-fun c!13820 () Bool)

(assert (=> b!85373 (= c!13820 ((_ is MissingVacant!246) lt!40337))))

(assert (=> b!85373 (= e!55688 e!55681)))

(declare-fun bm!8093 () Bool)

(assert (=> bm!8093 (= call!8101 call!8093)))

(declare-fun b!85374 () Bool)

(declare-fun Unit!2523 () Unit!2510)

(assert (=> b!85374 (= e!55694 Unit!2523)))

(declare-fun lt!40351 () Unit!2510)

(assert (=> b!85374 (= lt!40351 call!8078)))

(assert (=> b!85374 (= lt!40336 call!8094)))

(declare-fun c!13824 () Bool)

(assert (=> b!85374 (= c!13824 ((_ is MissingZero!246) lt!40336))))

(assert (=> b!85374 e!55686))

(declare-fun lt!40358 () Unit!2510)

(assert (=> b!85374 (= lt!40358 lt!40351)))

(assert (=> b!85374 false))

(declare-fun bm!8094 () Bool)

(assert (=> bm!8094 (= call!8087 (+!108 e!55675 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun c!13830 () Bool)

(assert (=> bm!8094 (= c!13830 c!13828)))

(declare-fun bm!8095 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2510)

(assert (=> bm!8095 (= call!8078 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun b!85375 () Bool)

(assert (=> b!85375 (= e!55680 (not call!8081))))

(declare-fun b!85376 () Bool)

(assert (=> b!85376 (= e!55682 e!55687)))

(declare-fun res!43971 () Bool)

(assert (=> b!85376 (= res!43971 call!8084)))

(assert (=> b!85376 (=> (not res!43971) (not e!55687))))

(declare-fun b!85377 () Bool)

(declare-fun lt!40347 () Unit!2510)

(assert (=> b!85377 (= e!55694 lt!40347)))

(assert (=> b!85377 (= lt!40347 call!8086)))

(assert (=> b!85377 (= lt!40345 call!8094)))

(declare-fun res!43967 () Bool)

(assert (=> b!85377 (= res!43967 ((_ is Found!246) lt!40345))))

(assert (=> b!85377 (=> (not res!43967) (not e!55676))))

(assert (=> b!85377 e!55676))

(declare-fun b!85378 () Bool)

(assert (=> b!85378 (= e!55692 e!55691)))

(assert (=> b!85378 (= lt!40357 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (=> b!85378 (= c!13832 ((_ is Undefined!246) lt!40357))))

(declare-fun bm!8096 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!8096 (= call!8093 (inRange!0 (ite c!13832 (ite c!13821 (index!3122 lt!40339) (ite c!13831 (index!3121 lt!40337) (index!3124 lt!40337))) (ite c!13822 (index!3122 lt!40345) (ite c!13824 (index!3121 lt!40336) (index!3124 lt!40336)))) (mask!6364 newMap!16)))))

(declare-fun b!85379 () Bool)

(assert (=> b!85379 (= e!55681 e!55680)))

(declare-fun res!43969 () Bool)

(assert (=> b!85379 (= res!43969 call!8083)))

(assert (=> b!85379 (=> (not res!43969) (not e!55680))))

(declare-fun b!85380 () Bool)

(assert (=> b!85380 (= e!55675 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun bm!8097 () Bool)

(assert (=> bm!8097 (= call!8088 call!8096)))

(declare-fun bm!8098 () Bool)

(assert (=> bm!8098 (= call!8085 (contains!752 call!8098 (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(declare-fun b!85381 () Bool)

(assert (=> b!85381 (= e!55679 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40339)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85382 () Bool)

(declare-fun lt!40344 () Unit!2510)

(declare-fun lt!40343 () Unit!2510)

(assert (=> b!85382 (= lt!40344 lt!40343)))

(assert (=> b!85382 (= call!8090 call!8080)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2510)

(assert (=> b!85382 (= lt!40343 (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40355 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40142 (defaultEntry!2337 newMap!16)))))

(assert (=> b!85382 (= lt!40355 (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!85382 (= e!55689 (tuple2!2205 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6364 newMap!16) (bvor (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) (zeroValue!2229 newMap!16) lt!40142 (_size!426 newMap!16) (_keys!4008 newMap!16) (_values!2320 newMap!16) (_vacant!426 newMap!16))))))

(assert (= (and d!22061 c!13828) b!85371))

(assert (= (and d!22061 (not c!13828)) b!85378))

(assert (= (and b!85371 c!13823) b!85354))

(assert (= (and b!85371 (not c!13823)) b!85382))

(assert (= (or b!85354 b!85382) bm!8090))

(assert (= (or b!85354 b!85382) bm!8079))

(assert (= (or b!85354 b!85382) bm!8082))

(assert (= (and b!85378 c!13832) b!85344))

(assert (= (and b!85378 (not c!13832)) b!85350))

(assert (= (and b!85344 c!13821) b!85358))

(assert (= (and b!85344 (not c!13821)) b!85345))

(assert (= (and b!85358 res!43970) b!85346))

(assert (= (and b!85346 res!43968) b!85381))

(assert (= (and b!85345 c!13831) b!85347))

(assert (= (and b!85345 (not c!13831)) b!85373))

(assert (= (and b!85347 res!43979) b!85343))

(assert (= (and b!85343 res!43972) b!85351))

(assert (= (and b!85373 c!13820) b!85379))

(assert (= (and b!85373 (not c!13820)) b!85365))

(assert (= (and b!85379 res!43969) b!85355))

(assert (= (and b!85355 res!43980) b!85375))

(assert (= (or b!85347 b!85379) bm!8078))

(assert (= (or b!85351 b!85375) bm!8084))

(assert (= (or b!85346 bm!8078) bm!8077))

(assert (= (or b!85358 b!85345) bm!8097))

(assert (= (and b!85350 c!13826) b!85363))

(assert (= (and b!85350 (not c!13826)) b!85367))

(assert (= (and b!85367 c!13829) b!85353))

(assert (= (and b!85367 (not c!13829)) b!85359))

(assert (= (and b!85359 c!13822) b!85377))

(assert (= (and b!85359 (not c!13822)) b!85374))

(assert (= (and b!85377 res!43967) b!85360))

(assert (= (and b!85360 res!43975) b!85352))

(assert (= (and b!85374 c!13824) b!85361))

(assert (= (and b!85374 (not c!13824)) b!85356))

(assert (= (and b!85361 res!43976) b!85364))

(assert (= (and b!85364 res!43977) b!85349))

(assert (= (and b!85356 c!13825) b!85376))

(assert (= (and b!85356 (not c!13825)) b!85372))

(assert (= (and b!85376 res!43971) b!85357))

(assert (= (and b!85357 res!43974) b!85369))

(assert (= (or b!85361 b!85376) bm!8076))

(assert (= (or b!85349 b!85369) bm!8080))

(assert (= (or b!85360 bm!8076) bm!8093))

(assert (= (or b!85377 b!85374) bm!8081))

(assert (= (or b!85363 b!85353) bm!8083))

(assert (= (or bm!8077 bm!8093) bm!8096))

(assert (= (or bm!8084 bm!8080) bm!8092))

(assert (= (or bm!8097 bm!8081) bm!8087))

(assert (= (or b!85358 b!85377) bm!8075))

(assert (= (or b!85344 b!85359) bm!8086))

(assert (= (or b!85345 b!85374) bm!8095))

(assert (= (or b!85344 b!85359) bm!8098))

(assert (= (or bm!8090 b!85359) bm!8088))

(assert (= (or bm!8079 bm!8086) bm!8089))

(assert (= (or bm!8082 b!85359) bm!8094))

(assert (= (and bm!8094 c!13830) b!85348))

(assert (= (and bm!8094 (not c!13830)) b!85380))

(assert (= (and d!22061 res!43978) b!85366))

(assert (= (and b!85366 c!13827) b!85368))

(assert (= (and b!85366 (not c!13827)) b!85362))

(assert (= (and b!85368 res!43973) b!85370))

(assert (= (or b!85370 b!85362) bm!8085))

(assert (= (or b!85368 b!85370 b!85362) bm!8091))

(declare-fun m!89603 () Bool)

(assert (=> d!22061 m!89603))

(assert (=> d!22061 m!89411))

(assert (=> bm!8075 m!89403))

(declare-fun m!89605 () Bool)

(assert (=> bm!8075 m!89605))

(declare-fun m!89607 () Bool)

(assert (=> b!85355 m!89607))

(declare-fun m!89609 () Bool)

(assert (=> b!85381 m!89609))

(declare-fun m!89611 () Bool)

(assert (=> bm!8098 m!89611))

(declare-fun m!89613 () Bool)

(assert (=> bm!8098 m!89613))

(assert (=> b!85368 m!89403))

(declare-fun m!89615 () Bool)

(assert (=> b!85368 m!89615))

(declare-fun m!89617 () Bool)

(assert (=> b!85357 m!89617))

(declare-fun m!89619 () Bool)

(assert (=> bm!8096 m!89619))

(declare-fun m!89621 () Bool)

(assert (=> b!85352 m!89621))

(declare-fun m!89623 () Bool)

(assert (=> bm!8088 m!89623))

(declare-fun m!89625 () Bool)

(assert (=> bm!8088 m!89625))

(declare-fun m!89627 () Bool)

(assert (=> b!85370 m!89627))

(assert (=> b!85378 m!89403))

(declare-fun m!89629 () Bool)

(assert (=> b!85378 m!89629))

(declare-fun m!89631 () Bool)

(assert (=> b!85380 m!89631))

(declare-fun m!89633 () Bool)

(assert (=> bm!8091 m!89633))

(assert (=> bm!8087 m!89403))

(assert (=> bm!8087 m!89629))

(assert (=> b!85359 m!89623))

(assert (=> b!85359 m!89631))

(declare-fun m!89635 () Bool)

(assert (=> b!85359 m!89635))

(assert (=> b!85359 m!89631))

(assert (=> b!85359 m!89403))

(declare-fun m!89637 () Bool)

(assert (=> b!85359 m!89637))

(assert (=> b!85359 m!89403))

(declare-fun m!89639 () Bool)

(assert (=> b!85359 m!89639))

(assert (=> bm!8083 m!89403))

(declare-fun m!89641 () Bool)

(assert (=> bm!8083 m!89641))

(assert (=> bm!8085 m!89461))

(declare-fun m!89643 () Bool)

(assert (=> b!85343 m!89643))

(declare-fun m!89645 () Bool)

(assert (=> bm!8094 m!89645))

(assert (=> bm!8092 m!89403))

(declare-fun m!89647 () Bool)

(assert (=> bm!8092 m!89647))

(declare-fun m!89649 () Bool)

(assert (=> b!85364 m!89649))

(declare-fun m!89651 () Bool)

(assert (=> b!85354 m!89651))

(assert (=> bm!8095 m!89403))

(declare-fun m!89653 () Bool)

(assert (=> bm!8095 m!89653))

(declare-fun m!89655 () Bool)

(assert (=> b!85382 m!89655))

(declare-fun m!89657 () Bool)

(assert (=> bm!8089 m!89657))

(assert (=> b!85115 d!22061))

(declare-fun d!22063 () Bool)

(assert (=> d!22063 (= (map!1186 newMap!16) (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun bs!3606 () Bool)

(assert (= bs!3606 d!22063))

(assert (=> bs!3606 m!89631))

(assert (=> b!85126 d!22063))

(declare-fun bm!8113 () Bool)

(declare-fun call!8121 () ListLongMap!1449)

(declare-fun call!8122 () ListLongMap!1449)

(assert (=> bm!8113 (= call!8121 call!8122)))

(declare-fun bm!8114 () Bool)

(declare-fun call!8120 () ListLongMap!1449)

(assert (=> bm!8114 (= call!8120 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85425 () Bool)

(declare-fun e!55731 () Unit!2510)

(declare-fun Unit!2524 () Unit!2510)

(assert (=> b!85425 (= e!55731 Unit!2524)))

(declare-fun b!85426 () Bool)

(declare-fun e!55733 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!85426 (= e!55733 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85427 () Bool)

(declare-fun e!55723 () Bool)

(declare-fun lt!40415 () ListLongMap!1449)

(declare-fun apply!82 (ListLongMap!1449 (_ BitVec 64)) V!3025)

(assert (=> b!85427 (= e!55723 (= (apply!82 lt!40415 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85428 () Bool)

(declare-fun c!13850 () Bool)

(assert (=> b!85428 (= c!13850 (and (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55727 () ListLongMap!1449)

(declare-fun e!55732 () ListLongMap!1449)

(assert (=> b!85428 (= e!55727 e!55732)))

(declare-fun d!22065 () Bool)

(declare-fun e!55724 () Bool)

(assert (=> d!22065 e!55724))

(declare-fun res!44003 () Bool)

(assert (=> d!22065 (=> (not res!44003) (not e!55724))))

(assert (=> d!22065 (= res!44003 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun lt!40424 () ListLongMap!1449)

(assert (=> d!22065 (= lt!40415 lt!40424)))

(declare-fun lt!40407 () Unit!2510)

(assert (=> d!22065 (= lt!40407 e!55731)))

(declare-fun c!13846 () Bool)

(assert (=> d!22065 (= c!13846 e!55733)))

(declare-fun res!44006 () Bool)

(assert (=> d!22065 (=> (not res!44006) (not e!55733))))

(assert (=> d!22065 (= res!44006 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!55726 () ListLongMap!1449)

(assert (=> d!22065 (= lt!40424 e!55726)))

(declare-fun c!13848 () Bool)

(assert (=> d!22065 (= c!13848 (and (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22065 (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992))))))

(assert (=> d!22065 (= (getCurrentListMap!426 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) lt!40415)))

(declare-fun b!85429 () Bool)

(declare-fun lt!40405 () Unit!2510)

(assert (=> b!85429 (= e!55731 lt!40405)))

(declare-fun lt!40411 () ListLongMap!1449)

(assert (=> b!85429 (= lt!40411 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun lt!40408 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40408 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40412 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40412 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40423 () Unit!2510)

(declare-fun addStillContains!58 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2510)

(assert (=> b!85429 (= lt!40423 (addStillContains!58 lt!40411 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40412))))

(assert (=> b!85429 (contains!752 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40412)))

(declare-fun lt!40422 () Unit!2510)

(assert (=> b!85429 (= lt!40422 lt!40423)))

(declare-fun lt!40404 () ListLongMap!1449)

(assert (=> b!85429 (= lt!40404 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun lt!40421 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40421 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40416 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40416 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40410 () Unit!2510)

(declare-fun addApplyDifferent!58 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2510)

(assert (=> b!85429 (= lt!40410 (addApplyDifferent!58 lt!40404 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40416))))

(assert (=> b!85429 (= (apply!82 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40416) (apply!82 lt!40404 lt!40416))))

(declare-fun lt!40418 () Unit!2510)

(assert (=> b!85429 (= lt!40418 lt!40410)))

(declare-fun lt!40406 () ListLongMap!1449)

(assert (=> b!85429 (= lt!40406 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun lt!40417 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40417 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40419 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40419 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40409 () Unit!2510)

(assert (=> b!85429 (= lt!40409 (addApplyDifferent!58 lt!40406 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40419))))

(assert (=> b!85429 (= (apply!82 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40419) (apply!82 lt!40406 lt!40419))))

(declare-fun lt!40413 () Unit!2510)

(assert (=> b!85429 (= lt!40413 lt!40409)))

(declare-fun lt!40403 () ListLongMap!1449)

(assert (=> b!85429 (= lt!40403 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun lt!40414 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40414 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40420 () (_ BitVec 64))

(assert (=> b!85429 (= lt!40420 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!85429 (= lt!40405 (addApplyDifferent!58 lt!40403 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40420))))

(assert (=> b!85429 (= (apply!82 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40420) (apply!82 lt!40403 lt!40420))))

(declare-fun b!85430 () Bool)

(assert (=> b!85430 (= e!55726 (+!108 call!8122 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85431 () Bool)

(declare-fun e!55730 () Bool)

(declare-fun e!55729 () Bool)

(assert (=> b!85431 (= e!55730 e!55729)))

(declare-fun res!44001 () Bool)

(declare-fun call!8116 () Bool)

(assert (=> b!85431 (= res!44001 call!8116)))

(assert (=> b!85431 (=> (not res!44001) (not e!55729))))

(declare-fun bm!8115 () Bool)

(assert (=> bm!8115 (= call!8116 (contains!752 lt!40415 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85432 () Bool)

(declare-fun res!43999 () Bool)

(assert (=> b!85432 (=> (not res!43999) (not e!55724))))

(declare-fun e!55722 () Bool)

(assert (=> b!85432 (= res!43999 e!55722)))

(declare-fun c!13849 () Bool)

(assert (=> b!85432 (= c!13849 (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8116 () Bool)

(declare-fun call!8117 () ListLongMap!1449)

(declare-fun call!8119 () ListLongMap!1449)

(assert (=> bm!8116 (= call!8117 call!8119)))

(declare-fun b!85433 () Bool)

(assert (=> b!85433 (= e!55732 call!8117)))

(declare-fun b!85434 () Bool)

(declare-fun e!55728 () Bool)

(declare-fun e!55734 () Bool)

(assert (=> b!85434 (= e!55728 e!55734)))

(declare-fun res!44000 () Bool)

(assert (=> b!85434 (=> (not res!44000) (not e!55734))))

(assert (=> b!85434 (= res!44000 (contains!752 lt!40415 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85434 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85435 () Bool)

(assert (=> b!85435 (= e!55730 (not call!8116))))

(declare-fun b!85436 () Bool)

(assert (=> b!85436 (= e!55727 call!8121)))

(declare-fun b!85437 () Bool)

(declare-fun call!8118 () Bool)

(assert (=> b!85437 (= e!55722 (not call!8118))))

(declare-fun b!85438 () Bool)

(assert (=> b!85438 (= e!55722 e!55723)))

(declare-fun res!44004 () Bool)

(assert (=> b!85438 (= res!44004 call!8118)))

(assert (=> b!85438 (=> (not res!44004) (not e!55723))))

(declare-fun b!85439 () Bool)

(assert (=> b!85439 (= e!55729 (= (apply!82 lt!40415 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85440 () Bool)

(declare-fun res!44007 () Bool)

(assert (=> b!85440 (=> (not res!44007) (not e!55724))))

(assert (=> b!85440 (= res!44007 e!55728)))

(declare-fun res!44002 () Bool)

(assert (=> b!85440 (=> res!44002 e!55728)))

(declare-fun e!55725 () Bool)

(assert (=> b!85440 (= res!44002 (not e!55725))))

(declare-fun res!44005 () Bool)

(assert (=> b!85440 (=> (not res!44005) (not e!55725))))

(assert (=> b!85440 (= res!44005 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun bm!8117 () Bool)

(assert (=> bm!8117 (= call!8118 (contains!752 lt!40415 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85441 () Bool)

(assert (=> b!85441 (= e!55724 e!55730)))

(declare-fun c!13845 () Bool)

(assert (=> b!85441 (= c!13845 (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85442 () Bool)

(assert (=> b!85442 (= e!55725 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85443 () Bool)

(assert (=> b!85443 (= e!55734 (= (apply!82 lt!40415 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85443 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> b!85443 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun bm!8118 () Bool)

(declare-fun c!13847 () Bool)

(assert (=> bm!8118 (= call!8122 (+!108 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun bm!8119 () Bool)

(assert (=> bm!8119 (= call!8119 call!8120)))

(declare-fun b!85444 () Bool)

(assert (=> b!85444 (= e!55732 call!8121)))

(declare-fun b!85445 () Bool)

(assert (=> b!85445 (= e!55726 e!55727)))

(assert (=> b!85445 (= c!13847 (and (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!22065 c!13848) b!85430))

(assert (= (and d!22065 (not c!13848)) b!85445))

(assert (= (and b!85445 c!13847) b!85436))

(assert (= (and b!85445 (not c!13847)) b!85428))

(assert (= (and b!85428 c!13850) b!85444))

(assert (= (and b!85428 (not c!13850)) b!85433))

(assert (= (or b!85444 b!85433) bm!8116))

(assert (= (or b!85436 bm!8116) bm!8119))

(assert (= (or b!85436 b!85444) bm!8113))

(assert (= (or b!85430 bm!8119) bm!8114))

(assert (= (or b!85430 bm!8113) bm!8118))

(assert (= (and d!22065 res!44006) b!85426))

(assert (= (and d!22065 c!13846) b!85429))

(assert (= (and d!22065 (not c!13846)) b!85425))

(assert (= (and d!22065 res!44003) b!85440))

(assert (= (and b!85440 res!44005) b!85442))

(assert (= (and b!85440 (not res!44002)) b!85434))

(assert (= (and b!85434 res!44000) b!85443))

(assert (= (and b!85440 res!44007) b!85432))

(assert (= (and b!85432 c!13849) b!85438))

(assert (= (and b!85432 (not c!13849)) b!85437))

(assert (= (and b!85438 res!44004) b!85427))

(assert (= (or b!85438 b!85437) bm!8117))

(assert (= (and b!85432 res!43999) b!85441))

(assert (= (and b!85441 c!13845) b!85431))

(assert (= (and b!85441 (not c!13845)) b!85435))

(assert (= (and b!85431 res!44001) b!85439))

(assert (= (or b!85431 b!85435) bm!8115))

(declare-fun b_lambda!3789 () Bool)

(assert (=> (not b_lambda!3789) (not b!85443)))

(assert (=> b!85443 t!5234))

(declare-fun b_and!5169 () Bool)

(assert (= b_and!5149 (and (=> t!5234 result!2903) b_and!5169)))

(assert (=> b!85443 t!5236))

(declare-fun b_and!5171 () Bool)

(assert (= b_and!5151 (and (=> t!5236 result!2907) b_and!5171)))

(declare-fun m!89659 () Bool)

(assert (=> b!85429 m!89659))

(declare-fun m!89661 () Bool)

(assert (=> b!85429 m!89661))

(declare-fun m!89663 () Bool)

(assert (=> b!85429 m!89663))

(declare-fun m!89665 () Bool)

(assert (=> b!85429 m!89665))

(declare-fun m!89667 () Bool)

(assert (=> b!85429 m!89667))

(declare-fun m!89669 () Bool)

(assert (=> b!85429 m!89669))

(assert (=> b!85429 m!89431))

(assert (=> b!85429 m!89665))

(declare-fun m!89671 () Bool)

(assert (=> b!85429 m!89671))

(declare-fun m!89673 () Bool)

(assert (=> b!85429 m!89673))

(declare-fun m!89675 () Bool)

(assert (=> b!85429 m!89675))

(assert (=> b!85429 m!89671))

(assert (=> b!85429 m!89675))

(declare-fun m!89677 () Bool)

(assert (=> b!85429 m!89677))

(declare-fun m!89679 () Bool)

(assert (=> b!85429 m!89679))

(declare-fun m!89681 () Bool)

(assert (=> b!85429 m!89681))

(declare-fun m!89683 () Bool)

(assert (=> b!85429 m!89683))

(declare-fun m!89685 () Bool)

(assert (=> b!85429 m!89685))

(declare-fun m!89687 () Bool)

(assert (=> b!85429 m!89687))

(declare-fun m!89689 () Bool)

(assert (=> b!85429 m!89689))

(assert (=> b!85429 m!89681))

(declare-fun m!89691 () Bool)

(assert (=> bm!8118 m!89691))

(assert (=> b!85434 m!89659))

(assert (=> b!85434 m!89659))

(declare-fun m!89693 () Bool)

(assert (=> b!85434 m!89693))

(declare-fun m!89695 () Bool)

(assert (=> bm!8117 m!89695))

(assert (=> d!22065 m!89435))

(declare-fun m!89697 () Bool)

(assert (=> b!85427 m!89697))

(declare-fun m!89699 () Bool)

(assert (=> bm!8115 m!89699))

(assert (=> b!85442 m!89659))

(assert (=> b!85442 m!89659))

(declare-fun m!89701 () Bool)

(assert (=> b!85442 m!89701))

(assert (=> bm!8114 m!89431))

(assert (=> b!85426 m!89659))

(assert (=> b!85426 m!89659))

(assert (=> b!85426 m!89701))

(declare-fun m!89703 () Bool)

(assert (=> b!85430 m!89703))

(assert (=> b!85443 m!89659))

(assert (=> b!85443 m!89407))

(declare-fun m!89705 () Bool)

(assert (=> b!85443 m!89705))

(assert (=> b!85443 m!89659))

(declare-fun m!89707 () Bool)

(assert (=> b!85443 m!89707))

(assert (=> b!85443 m!89705))

(assert (=> b!85443 m!89407))

(declare-fun m!89709 () Bool)

(assert (=> b!85443 m!89709))

(declare-fun m!89711 () Bool)

(assert (=> b!85439 m!89711))

(assert (=> b!85126 d!22065))

(declare-fun d!22067 () Bool)

(assert (=> d!22067 (= (array_inv!1195 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvsge (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85121 d!22067))

(declare-fun d!22069 () Bool)

(assert (=> d!22069 (= (array_inv!1196 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvsge (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!85121 d!22069))

(declare-fun d!22071 () Bool)

(declare-fun res!44014 () Bool)

(declare-fun e!55737 () Bool)

(assert (=> d!22071 (=> (not res!44014) (not e!55737))))

(declare-fun simpleValid!58 (LongMapFixedSize!754) Bool)

(assert (=> d!22071 (= res!44014 (simpleValid!58 newMap!16))))

(assert (=> d!22071 (= (valid!335 newMap!16) e!55737)))

(declare-fun b!85452 () Bool)

(declare-fun res!44015 () Bool)

(assert (=> b!85452 (=> (not res!44015) (not e!55737))))

(declare-fun arrayCountValidKeys!0 (array!4005 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!85452 (= res!44015 (= (arrayCountValidKeys!0 (_keys!4008 newMap!16) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (_size!426 newMap!16)))))

(declare-fun b!85453 () Bool)

(declare-fun res!44016 () Bool)

(assert (=> b!85453 (=> (not res!44016) (not e!55737))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4005 (_ BitVec 32)) Bool)

(assert (=> b!85453 (= res!44016 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!85454 () Bool)

(assert (=> b!85454 (= e!55737 (arrayNoDuplicates!0 (_keys!4008 newMap!16) #b00000000000000000000000000000000 Nil!1523))))

(assert (= (and d!22071 res!44014) b!85452))

(assert (= (and b!85452 res!44015) b!85453))

(assert (= (and b!85453 res!44016) b!85454))

(declare-fun m!89713 () Bool)

(assert (=> d!22071 m!89713))

(declare-fun m!89715 () Bool)

(assert (=> b!85452 m!89715))

(declare-fun m!89717 () Bool)

(assert (=> b!85453 m!89717))

(declare-fun m!89719 () Bool)

(assert (=> b!85454 m!89719))

(assert (=> b!85122 d!22071))

(declare-fun d!22073 () Bool)

(declare-fun e!55740 () Bool)

(assert (=> d!22073 e!55740))

(declare-fun res!44021 () Bool)

(assert (=> d!22073 (=> (not res!44021) (not e!55740))))

(declare-fun lt!40435 () ListLongMap!1449)

(assert (=> d!22073 (= res!44021 (contains!752 lt!40435 (_1!1114 lt!40140)))))

(declare-fun lt!40434 () List!1525)

(assert (=> d!22073 (= lt!40435 (ListLongMap!1450 lt!40434))))

(declare-fun lt!40433 () Unit!2510)

(declare-fun lt!40436 () Unit!2510)

(assert (=> d!22073 (= lt!40433 lt!40436)))

(assert (=> d!22073 (= (getValueByKey!138 lt!40434 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(declare-fun lemmaContainsTupThenGetReturnValue!58 (List!1525 (_ BitVec 64) V!3025) Unit!2510)

(assert (=> d!22073 (= lt!40436 (lemmaContainsTupThenGetReturnValue!58 lt!40434 (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun insertStrictlySorted!61 (List!1525 (_ BitVec 64) V!3025) List!1525)

(assert (=> d!22073 (= lt!40434 (insertStrictlySorted!61 (toList!740 (+!108 lt!40146 lt!40153)) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(assert (=> d!22073 (= (+!108 (+!108 lt!40146 lt!40153) lt!40140) lt!40435)))

(declare-fun b!85459 () Bool)

(declare-fun res!44022 () Bool)

(assert (=> b!85459 (=> (not res!44022) (not e!55740))))

(assert (=> b!85459 (= res!44022 (= (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140))))))

(declare-fun b!85460 () Bool)

(declare-fun contains!753 (List!1525 tuple2!2206) Bool)

(assert (=> b!85460 (= e!55740 (contains!753 (toList!740 lt!40435) lt!40140))))

(assert (= (and d!22073 res!44021) b!85459))

(assert (= (and b!85459 res!44022) b!85460))

(declare-fun m!89721 () Bool)

(assert (=> d!22073 m!89721))

(declare-fun m!89723 () Bool)

(assert (=> d!22073 m!89723))

(declare-fun m!89725 () Bool)

(assert (=> d!22073 m!89725))

(declare-fun m!89727 () Bool)

(assert (=> d!22073 m!89727))

(declare-fun m!89729 () Bool)

(assert (=> b!85459 m!89729))

(declare-fun m!89731 () Bool)

(assert (=> b!85460 m!89731))

(assert (=> b!85117 d!22073))

(declare-fun d!22075 () Bool)

(assert (=> d!22075 (= (+!108 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (+!108 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun lt!40439 () Unit!2510)

(declare-fun choose!505 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64) V!3025) Unit!2510)

(assert (=> d!22075 (= lt!40439 (choose!505 lt!40150 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(assert (=> d!22075 (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22075 (= (addCommutativeForDiffKeys!27 lt!40150 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) lt!40439)))

(declare-fun bs!3607 () Bool)

(assert (= bs!3607 d!22075))

(declare-fun m!89733 () Bool)

(assert (=> bs!3607 m!89733))

(declare-fun m!89735 () Bool)

(assert (=> bs!3607 m!89735))

(declare-fun m!89737 () Bool)

(assert (=> bs!3607 m!89737))

(declare-fun m!89739 () Bool)

(assert (=> bs!3607 m!89739))

(assert (=> bs!3607 m!89403))

(declare-fun m!89741 () Bool)

(assert (=> bs!3607 m!89741))

(assert (=> bs!3607 m!89737))

(assert (=> bs!3607 m!89733))

(assert (=> b!85117 d!22075))

(declare-fun d!22077 () Bool)

(assert (=> d!22077 (= (+!108 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (+!108 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun lt!40440 () Unit!2510)

(assert (=> d!22077 (= lt!40440 (choose!505 lt!40146 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))

(assert (=> d!22077 (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22077 (= (addCommutativeForDiffKeys!27 lt!40146 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))) lt!40440)))

(declare-fun bs!3608 () Bool)

(assert (= bs!3608 d!22077))

(declare-fun m!89743 () Bool)

(assert (=> bs!3608 m!89743))

(declare-fun m!89745 () Bool)

(assert (=> bs!3608 m!89745))

(declare-fun m!89747 () Bool)

(assert (=> bs!3608 m!89747))

(declare-fun m!89749 () Bool)

(assert (=> bs!3608 m!89749))

(assert (=> bs!3608 m!89403))

(declare-fun m!89751 () Bool)

(assert (=> bs!3608 m!89751))

(assert (=> bs!3608 m!89747))

(assert (=> bs!3608 m!89743))

(assert (=> b!85117 d!22077))

(declare-fun d!22079 () Bool)

(declare-fun e!55741 () Bool)

(assert (=> d!22079 e!55741))

(declare-fun res!44023 () Bool)

(assert (=> d!22079 (=> (not res!44023) (not e!55741))))

(declare-fun lt!40443 () ListLongMap!1449)

(assert (=> d!22079 (= res!44023 (contains!752 lt!40443 (_1!1114 lt!40143)))))

(declare-fun lt!40442 () List!1525)

(assert (=> d!22079 (= lt!40443 (ListLongMap!1450 lt!40442))))

(declare-fun lt!40441 () Unit!2510)

(declare-fun lt!40444 () Unit!2510)

(assert (=> d!22079 (= lt!40441 lt!40444)))

(assert (=> d!22079 (= (getValueByKey!138 lt!40442 (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143)))))

(assert (=> d!22079 (= lt!40444 (lemmaContainsTupThenGetReturnValue!58 lt!40442 (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(assert (=> d!22079 (= lt!40442 (insertStrictlySorted!61 (toList!740 lt!40154) (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(assert (=> d!22079 (= (+!108 lt!40154 lt!40143) lt!40443)))

(declare-fun b!85461 () Bool)

(declare-fun res!44024 () Bool)

(assert (=> b!85461 (=> (not res!44024) (not e!55741))))

(assert (=> b!85461 (= res!44024 (= (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143))))))

(declare-fun b!85462 () Bool)

(assert (=> b!85462 (= e!55741 (contains!753 (toList!740 lt!40443) lt!40143))))

(assert (= (and d!22079 res!44023) b!85461))

(assert (= (and b!85461 res!44024) b!85462))

(declare-fun m!89753 () Bool)

(assert (=> d!22079 m!89753))

(declare-fun m!89755 () Bool)

(assert (=> d!22079 m!89755))

(declare-fun m!89757 () Bool)

(assert (=> d!22079 m!89757))

(declare-fun m!89759 () Bool)

(assert (=> d!22079 m!89759))

(declare-fun m!89761 () Bool)

(assert (=> b!85461 m!89761))

(declare-fun m!89763 () Bool)

(assert (=> b!85462 m!89763))

(assert (=> b!85117 d!22079))

(declare-fun d!22081 () Bool)

(declare-fun e!55742 () Bool)

(assert (=> d!22081 e!55742))

(declare-fun res!44025 () Bool)

(assert (=> d!22081 (=> (not res!44025) (not e!55742))))

(declare-fun lt!40447 () ListLongMap!1449)

(assert (=> d!22081 (= res!44025 (contains!752 lt!40447 (_1!1114 lt!40140)))))

(declare-fun lt!40446 () List!1525)

(assert (=> d!22081 (= lt!40447 (ListLongMap!1450 lt!40446))))

(declare-fun lt!40445 () Unit!2510)

(declare-fun lt!40448 () Unit!2510)

(assert (=> d!22081 (= lt!40445 lt!40448)))

(assert (=> d!22081 (= (getValueByKey!138 lt!40446 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(assert (=> d!22081 (= lt!40448 (lemmaContainsTupThenGetReturnValue!58 lt!40446 (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(assert (=> d!22081 (= lt!40446 (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(assert (=> d!22081 (= (+!108 lt!40150 lt!40140) lt!40447)))

(declare-fun b!85463 () Bool)

(declare-fun res!44026 () Bool)

(assert (=> b!85463 (=> (not res!44026) (not e!55742))))

(assert (=> b!85463 (= res!44026 (= (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140))))))

(declare-fun b!85464 () Bool)

(assert (=> b!85464 (= e!55742 (contains!753 (toList!740 lt!40447) lt!40140))))

(assert (= (and d!22081 res!44025) b!85463))

(assert (= (and b!85463 res!44026) b!85464))

(declare-fun m!89765 () Bool)

(assert (=> d!22081 m!89765))

(declare-fun m!89767 () Bool)

(assert (=> d!22081 m!89767))

(declare-fun m!89769 () Bool)

(assert (=> d!22081 m!89769))

(declare-fun m!89771 () Bool)

(assert (=> d!22081 m!89771))

(declare-fun m!89773 () Bool)

(assert (=> b!85463 m!89773))

(declare-fun m!89775 () Bool)

(assert (=> b!85464 m!89775))

(assert (=> b!85117 d!22081))

(declare-fun d!22083 () Bool)

(declare-fun e!55743 () Bool)

(assert (=> d!22083 e!55743))

(declare-fun res!44027 () Bool)

(assert (=> d!22083 (=> (not res!44027) (not e!55743))))

(declare-fun lt!40451 () ListLongMap!1449)

(assert (=> d!22083 (= res!44027 (contains!752 lt!40451 (_1!1114 lt!40143)))))

(declare-fun lt!40450 () List!1525)

(assert (=> d!22083 (= lt!40451 (ListLongMap!1450 lt!40450))))

(declare-fun lt!40449 () Unit!2510)

(declare-fun lt!40452 () Unit!2510)

(assert (=> d!22083 (= lt!40449 lt!40452)))

(assert (=> d!22083 (= (getValueByKey!138 lt!40450 (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143)))))

(assert (=> d!22083 (= lt!40452 (lemmaContainsTupThenGetReturnValue!58 lt!40450 (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(assert (=> d!22083 (= lt!40450 (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(assert (=> d!22083 (= (+!108 lt!40150 lt!40143) lt!40451)))

(declare-fun b!85465 () Bool)

(declare-fun res!44028 () Bool)

(assert (=> b!85465 (=> (not res!44028) (not e!55743))))

(assert (=> b!85465 (= res!44028 (= (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143))))))

(declare-fun b!85466 () Bool)

(assert (=> b!85466 (= e!55743 (contains!753 (toList!740 lt!40451) lt!40143))))

(assert (= (and d!22083 res!44027) b!85465))

(assert (= (and b!85465 res!44028) b!85466))

(declare-fun m!89777 () Bool)

(assert (=> d!22083 m!89777))

(declare-fun m!89779 () Bool)

(assert (=> d!22083 m!89779))

(declare-fun m!89781 () Bool)

(assert (=> d!22083 m!89781))

(declare-fun m!89783 () Bool)

(assert (=> d!22083 m!89783))

(declare-fun m!89785 () Bool)

(assert (=> b!85465 m!89785))

(declare-fun m!89787 () Bool)

(assert (=> b!85466 m!89787))

(assert (=> b!85117 d!22083))

(declare-fun b!85491 () Bool)

(assert (=> b!85491 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> b!85491 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!55762 () Bool)

(declare-fun lt!40471 () ListLongMap!1449)

(assert (=> b!85491 (= e!55762 (= (apply!82 lt!40471 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!85492 () Bool)

(declare-fun res!44037 () Bool)

(declare-fun e!55764 () Bool)

(assert (=> b!85492 (=> (not res!44037) (not e!55764))))

(assert (=> b!85492 (= res!44037 (not (contains!752 lt!40471 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85493 () Bool)

(declare-fun e!55760 () Bool)

(assert (=> b!85493 (= e!55764 e!55760)))

(declare-fun c!13860 () Bool)

(declare-fun e!55761 () Bool)

(assert (=> b!85493 (= c!13860 e!55761)))

(declare-fun res!44038 () Bool)

(assert (=> b!85493 (=> (not res!44038) (not e!55761))))

(assert (=> b!85493 (= res!44038 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85494 () Bool)

(declare-fun e!55763 () ListLongMap!1449)

(assert (=> b!85494 (= e!55763 (ListLongMap!1450 Nil!1522))))

(declare-fun bm!8122 () Bool)

(declare-fun call!8125 () ListLongMap!1449)

(assert (=> bm!8122 (= call!8125 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85496 () Bool)

(declare-fun e!55758 () Bool)

(declare-fun isEmpty!339 (ListLongMap!1449) Bool)

(assert (=> b!85496 (= e!55758 (isEmpty!339 lt!40471))))

(declare-fun b!85497 () Bool)

(declare-fun e!55759 () ListLongMap!1449)

(assert (=> b!85497 (= e!55759 call!8125)))

(declare-fun b!85498 () Bool)

(assert (=> b!85498 (= e!55758 (= lt!40471 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85499 () Bool)

(assert (=> b!85499 (= e!55760 e!55762)))

(assert (=> b!85499 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun res!44040 () Bool)

(assert (=> b!85499 (= res!44040 (contains!752 lt!40471 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85499 (=> (not res!44040) (not e!55762))))

(declare-fun b!85500 () Bool)

(declare-fun lt!40473 () Unit!2510)

(declare-fun lt!40472 () Unit!2510)

(assert (=> b!85500 (= lt!40473 lt!40472)))

(declare-fun lt!40468 () V!3025)

(declare-fun lt!40470 () (_ BitVec 64))

(declare-fun lt!40469 () ListLongMap!1449)

(declare-fun lt!40467 () (_ BitVec 64))

(assert (=> b!85500 (not (contains!752 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)) lt!40467))))

(declare-fun addStillNotContains!32 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2510)

(assert (=> b!85500 (= lt!40472 (addStillNotContains!32 lt!40469 lt!40470 lt!40468 lt!40467))))

(assert (=> b!85500 (= lt!40467 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85500 (= lt!40468 (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85500 (= lt!40470 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!85500 (= lt!40469 call!8125)))

(assert (=> b!85500 (= e!55759 (+!108 call!8125 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!85501 () Bool)

(assert (=> b!85501 (= e!55763 e!55759)))

(declare-fun c!13861 () Bool)

(assert (=> b!85501 (= c!13861 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85502 () Bool)

(assert (=> b!85502 (= e!55760 e!55758)))

(declare-fun c!13859 () Bool)

(assert (=> b!85502 (= c!13859 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85495 () Bool)

(assert (=> b!85495 (= e!55761 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85495 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun d!22085 () Bool)

(assert (=> d!22085 e!55764))

(declare-fun res!44039 () Bool)

(assert (=> d!22085 (=> (not res!44039) (not e!55764))))

(assert (=> d!22085 (= res!44039 (not (contains!752 lt!40471 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22085 (= lt!40471 e!55763)))

(declare-fun c!13862 () Bool)

(assert (=> d!22085 (= c!13862 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22085 (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992))))))

(assert (=> d!22085 (= (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) lt!40471)))

(assert (= (and d!22085 c!13862) b!85494))

(assert (= (and d!22085 (not c!13862)) b!85501))

(assert (= (and b!85501 c!13861) b!85500))

(assert (= (and b!85501 (not c!13861)) b!85497))

(assert (= (or b!85500 b!85497) bm!8122))

(assert (= (and d!22085 res!44039) b!85492))

(assert (= (and b!85492 res!44037) b!85493))

(assert (= (and b!85493 res!44038) b!85495))

(assert (= (and b!85493 c!13860) b!85499))

(assert (= (and b!85493 (not c!13860)) b!85502))

(assert (= (and b!85499 res!44040) b!85491))

(assert (= (and b!85502 c!13859) b!85498))

(assert (= (and b!85502 (not c!13859)) b!85496))

(declare-fun b_lambda!3791 () Bool)

(assert (=> (not b_lambda!3791) (not b!85491)))

(assert (=> b!85491 t!5234))

(declare-fun b_and!5173 () Bool)

(assert (= b_and!5169 (and (=> t!5234 result!2903) b_and!5173)))

(assert (=> b!85491 t!5236))

(declare-fun b_and!5175 () Bool)

(assert (= b_and!5171 (and (=> t!5236 result!2907) b_and!5175)))

(declare-fun b_lambda!3793 () Bool)

(assert (=> (not b_lambda!3793) (not b!85500)))

(assert (=> b!85500 t!5234))

(declare-fun b_and!5177 () Bool)

(assert (= b_and!5173 (and (=> t!5234 result!2903) b_and!5177)))

(assert (=> b!85500 t!5236))

(declare-fun b_and!5179 () Bool)

(assert (= b_and!5175 (and (=> t!5236 result!2907) b_and!5179)))

(declare-fun m!89789 () Bool)

(assert (=> d!22085 m!89789))

(assert (=> d!22085 m!89435))

(declare-fun m!89791 () Bool)

(assert (=> bm!8122 m!89791))

(assert (=> b!85500 m!89705))

(assert (=> b!85500 m!89407))

(assert (=> b!85500 m!89709))

(assert (=> b!85500 m!89407))

(assert (=> b!85500 m!89659))

(declare-fun m!89793 () Bool)

(assert (=> b!85500 m!89793))

(declare-fun m!89795 () Bool)

(assert (=> b!85500 m!89795))

(declare-fun m!89797 () Bool)

(assert (=> b!85500 m!89797))

(assert (=> b!85500 m!89795))

(declare-fun m!89799 () Bool)

(assert (=> b!85500 m!89799))

(assert (=> b!85500 m!89705))

(assert (=> b!85491 m!89705))

(assert (=> b!85491 m!89407))

(assert (=> b!85491 m!89709))

(assert (=> b!85491 m!89407))

(assert (=> b!85491 m!89659))

(assert (=> b!85491 m!89659))

(declare-fun m!89801 () Bool)

(assert (=> b!85491 m!89801))

(assert (=> b!85491 m!89705))

(declare-fun m!89803 () Bool)

(assert (=> b!85492 m!89803))

(assert (=> b!85498 m!89791))

(assert (=> b!85495 m!89659))

(assert (=> b!85495 m!89659))

(assert (=> b!85495 m!89701))

(declare-fun m!89805 () Bool)

(assert (=> b!85496 m!89805))

(assert (=> b!85501 m!89659))

(assert (=> b!85501 m!89659))

(assert (=> b!85501 m!89701))

(assert (=> b!85499 m!89659))

(assert (=> b!85499 m!89659))

(declare-fun m!89807 () Bool)

(assert (=> b!85499 m!89807))

(assert (=> b!85117 d!22085))

(declare-fun d!22087 () Bool)

(declare-fun e!55765 () Bool)

(assert (=> d!22087 e!55765))

(declare-fun res!44041 () Bool)

(assert (=> d!22087 (=> (not res!44041) (not e!55765))))

(declare-fun lt!40476 () ListLongMap!1449)

(assert (=> d!22087 (= res!44041 (contains!752 lt!40476 (_1!1114 lt!40153)))))

(declare-fun lt!40475 () List!1525)

(assert (=> d!22087 (= lt!40476 (ListLongMap!1450 lt!40475))))

(declare-fun lt!40474 () Unit!2510)

(declare-fun lt!40477 () Unit!2510)

(assert (=> d!22087 (= lt!40474 lt!40477)))

(assert (=> d!22087 (= (getValueByKey!138 lt!40475 (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153)))))

(assert (=> d!22087 (= lt!40477 (lemmaContainsTupThenGetReturnValue!58 lt!40475 (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(assert (=> d!22087 (= lt!40475 (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(assert (=> d!22087 (= (+!108 lt!40146 lt!40153) lt!40476)))

(declare-fun b!85503 () Bool)

(declare-fun res!44042 () Bool)

(assert (=> b!85503 (=> (not res!44042) (not e!55765))))

(assert (=> b!85503 (= res!44042 (= (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153))))))

(declare-fun b!85504 () Bool)

(assert (=> b!85504 (= e!55765 (contains!753 (toList!740 lt!40476) lt!40153))))

(assert (= (and d!22087 res!44041) b!85503))

(assert (= (and b!85503 res!44042) b!85504))

(declare-fun m!89809 () Bool)

(assert (=> d!22087 m!89809))

(declare-fun m!89811 () Bool)

(assert (=> d!22087 m!89811))

(declare-fun m!89813 () Bool)

(assert (=> d!22087 m!89813))

(declare-fun m!89815 () Bool)

(assert (=> d!22087 m!89815))

(declare-fun m!89817 () Bool)

(assert (=> b!85503 m!89817))

(declare-fun m!89819 () Bool)

(assert (=> b!85504 m!89819))

(assert (=> b!85117 d!22087))

(declare-fun d!22089 () Bool)

(declare-fun e!55766 () Bool)

(assert (=> d!22089 e!55766))

(declare-fun res!44043 () Bool)

(assert (=> d!22089 (=> (not res!44043) (not e!55766))))

(declare-fun lt!40480 () ListLongMap!1449)

(assert (=> d!22089 (= res!44043 (contains!752 lt!40480 (_1!1114 lt!40153)))))

(declare-fun lt!40479 () List!1525)

(assert (=> d!22089 (= lt!40480 (ListLongMap!1450 lt!40479))))

(declare-fun lt!40478 () Unit!2510)

(declare-fun lt!40481 () Unit!2510)

(assert (=> d!22089 (= lt!40478 lt!40481)))

(assert (=> d!22089 (= (getValueByKey!138 lt!40479 (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153)))))

(assert (=> d!22089 (= lt!40481 (lemmaContainsTupThenGetReturnValue!58 lt!40479 (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(assert (=> d!22089 (= lt!40479 (insertStrictlySorted!61 (toList!740 lt!40152) (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(assert (=> d!22089 (= (+!108 lt!40152 lt!40153) lt!40480)))

(declare-fun b!85505 () Bool)

(declare-fun res!44044 () Bool)

(assert (=> b!85505 (=> (not res!44044) (not e!55766))))

(assert (=> b!85505 (= res!44044 (= (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153))))))

(declare-fun b!85506 () Bool)

(assert (=> b!85506 (= e!55766 (contains!753 (toList!740 lt!40480) lt!40153))))

(assert (= (and d!22089 res!44043) b!85505))

(assert (= (and b!85505 res!44044) b!85506))

(declare-fun m!89821 () Bool)

(assert (=> d!22089 m!89821))

(declare-fun m!89823 () Bool)

(assert (=> d!22089 m!89823))

(declare-fun m!89825 () Bool)

(assert (=> d!22089 m!89825))

(declare-fun m!89827 () Bool)

(assert (=> d!22089 m!89827))

(declare-fun m!89829 () Bool)

(assert (=> b!85505 m!89829))

(declare-fun m!89831 () Bool)

(assert (=> b!85506 m!89831))

(assert (=> b!85117 d!22089))

(declare-fun d!22091 () Bool)

(assert (=> d!22091 (= (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992)))) (and (or (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000001111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000011111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000001111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000011111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000001111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000011111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000001111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000011111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000001111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000011111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000001111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000011111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000001111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000011111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000111111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000001111111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000011111111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000111111111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00001111111111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00011111111111111111111111111111) (= (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!85117 d!22091))

(declare-fun d!22093 () Bool)

(declare-fun e!55767 () Bool)

(assert (=> d!22093 e!55767))

(declare-fun res!44045 () Bool)

(assert (=> d!22093 (=> (not res!44045) (not e!55767))))

(declare-fun lt!40484 () ListLongMap!1449)

(assert (=> d!22093 (= res!44045 (contains!752 lt!40484 (_1!1114 lt!40140)))))

(declare-fun lt!40483 () List!1525)

(assert (=> d!22093 (= lt!40484 (ListLongMap!1450 lt!40483))))

(declare-fun lt!40482 () Unit!2510)

(declare-fun lt!40485 () Unit!2510)

(assert (=> d!22093 (= lt!40482 lt!40485)))

(assert (=> d!22093 (= (getValueByKey!138 lt!40483 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(assert (=> d!22093 (= lt!40485 (lemmaContainsTupThenGetReturnValue!58 lt!40483 (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(assert (=> d!22093 (= lt!40483 (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(assert (=> d!22093 (= (+!108 lt!40146 lt!40140) lt!40484)))

(declare-fun b!85507 () Bool)

(declare-fun res!44046 () Bool)

(assert (=> b!85507 (=> (not res!44046) (not e!55767))))

(assert (=> b!85507 (= res!44046 (= (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140))))))

(declare-fun b!85508 () Bool)

(assert (=> b!85508 (= e!55767 (contains!753 (toList!740 lt!40484) lt!40140))))

(assert (= (and d!22093 res!44045) b!85507))

(assert (= (and b!85507 res!44046) b!85508))

(declare-fun m!89833 () Bool)

(assert (=> d!22093 m!89833))

(declare-fun m!89835 () Bool)

(assert (=> d!22093 m!89835))

(declare-fun m!89837 () Bool)

(assert (=> d!22093 m!89837))

(declare-fun m!89839 () Bool)

(assert (=> d!22093 m!89839))

(declare-fun m!89841 () Bool)

(assert (=> b!85507 m!89841))

(declare-fun m!89843 () Bool)

(assert (=> b!85508 m!89843))

(assert (=> b!85117 d!22093))

(declare-fun d!22095 () Bool)

(declare-fun c!13865 () Bool)

(assert (=> d!22095 (= c!13865 ((_ is ValueCellFull!923) (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!55770 () V!3025)

(assert (=> d!22095 (= (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55770)))

(declare-fun b!85513 () Bool)

(declare-fun get!1202 (ValueCell!923 V!3025) V!3025)

(assert (=> b!85513 (= e!55770 (get!1202 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85514 () Bool)

(declare-fun get!1203 (ValueCell!923 V!3025) V!3025)

(assert (=> b!85514 (= e!55770 (get!1203 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22095 c!13865) b!85513))

(assert (= (and d!22095 (not c!13865)) b!85514))

(assert (=> b!85513 m!89405))

(assert (=> b!85513 m!89407))

(declare-fun m!89845 () Bool)

(assert (=> b!85513 m!89845))

(assert (=> b!85514 m!89405))

(assert (=> b!85514 m!89407))

(declare-fun m!89847 () Bool)

(assert (=> b!85514 m!89847))

(assert (=> b!85123 d!22095))

(declare-fun d!22097 () Bool)

(assert (=> d!22097 (= (array_inv!1195 (_keys!4008 newMap!16)) (bvsge (size!2151 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85118 d!22097))

(declare-fun d!22099 () Bool)

(assert (=> d!22099 (= (array_inv!1196 (_values!2320 newMap!16)) (bvsge (size!2152 (_values!2320 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85118 d!22099))

(declare-fun d!22101 () Bool)

(assert (=> d!22101 (not (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!40488 () Unit!2510)

(declare-fun choose!68 (array!4005 (_ BitVec 32) (_ BitVec 64) List!1526) Unit!2510)

(assert (=> d!22101 (= lt!40488 (choose!68 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523)))))

(assert (=> d!22101 (bvslt (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22101 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523)) lt!40488)))

(declare-fun bs!3609 () Bool)

(assert (= bs!3609 d!22101))

(assert (=> bs!3609 m!89403))

(assert (=> bs!3609 m!89447))

(assert (=> bs!3609 m!89403))

(declare-fun m!89849 () Bool)

(assert (=> bs!3609 m!89849))

(assert (=> b!85125 d!22101))

(declare-fun d!22103 () Bool)

(assert (=> d!22103 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) from!355 Nil!1523)))

(declare-fun lt!40491 () Unit!2510)

(declare-fun choose!39 (array!4005 (_ BitVec 32) (_ BitVec 32)) Unit!2510)

(assert (=> d!22103 (= lt!40491 (choose!39 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!22103 (bvslt (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!22103 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 from!355) lt!40491)))

(declare-fun bs!3610 () Bool)

(assert (= bs!3610 d!22103))

(assert (=> bs!3610 m!89443))

(declare-fun m!89851 () Bool)

(assert (=> bs!3610 m!89851))

(assert (=> b!85125 d!22103))

(declare-fun d!22105 () Bool)

(declare-fun res!44051 () Bool)

(declare-fun e!55775 () Bool)

(assert (=> d!22105 (=> res!44051 e!55775)))

(assert (=> d!22105 (= res!44051 (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22105 (= (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!55775)))

(declare-fun b!85519 () Bool)

(declare-fun e!55776 () Bool)

(assert (=> b!85519 (= e!55775 e!55776)))

(declare-fun res!44052 () Bool)

(assert (=> b!85519 (=> (not res!44052) (not e!55776))))

(assert (=> b!85519 (= res!44052 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85520 () Bool)

(assert (=> b!85520 (= e!55776 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!22105 (not res!44051)) b!85519))

(assert (= (and b!85519 res!44052) b!85520))

(assert (=> d!22105 m!89659))

(assert (=> b!85520 m!89403))

(declare-fun m!89853 () Bool)

(assert (=> b!85520 m!89853))

(assert (=> b!85125 d!22105))

(declare-fun d!22107 () Bool)

(declare-fun e!55779 () Bool)

(assert (=> d!22107 e!55779))

(declare-fun c!13868 () Bool)

(assert (=> d!22107 (= c!13868 (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!40494 () Unit!2510)

(declare-fun choose!506 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2510)

(assert (=> d!22107 (= lt!40494 (choose!506 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(assert (=> d!22107 (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992))))))

(assert (=> d!22107 (= (lemmaListMapContainsThenArrayContainsFrom!66 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) lt!40494)))

(declare-fun b!85525 () Bool)

(assert (=> b!85525 (= e!55779 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85526 () Bool)

(assert (=> b!85526 (= e!55779 (ite (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22107 c!13868) b!85525))

(assert (= (and d!22107 (not c!13868)) b!85526))

(assert (=> d!22107 m!89403))

(declare-fun m!89855 () Bool)

(assert (=> d!22107 m!89855))

(assert (=> d!22107 m!89435))

(assert (=> b!85525 m!89403))

(assert (=> b!85525 m!89447))

(assert (=> b!85125 d!22107))

(declare-fun b!85537 () Bool)

(declare-fun e!55790 () Bool)

(declare-fun e!55789 () Bool)

(assert (=> b!85537 (= e!55790 e!55789)))

(declare-fun c!13871 () Bool)

(assert (=> b!85537 (= c!13871 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85538 () Bool)

(declare-fun call!8128 () Bool)

(assert (=> b!85538 (= e!55789 call!8128)))

(declare-fun bm!8125 () Bool)

(assert (=> bm!8125 (= call!8128 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)))))

(declare-fun d!22109 () Bool)

(declare-fun res!44059 () Bool)

(declare-fun e!55788 () Bool)

(assert (=> d!22109 (=> res!44059 e!55788)))

(assert (=> d!22109 (= res!44059 (bvsge from!355 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22109 (= (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) from!355 Nil!1523) e!55788)))

(declare-fun b!85539 () Bool)

(assert (=> b!85539 (= e!55788 e!55790)))

(declare-fun res!44061 () Bool)

(assert (=> b!85539 (=> (not res!44061) (not e!55790))))

(declare-fun e!55791 () Bool)

(assert (=> b!85539 (= res!44061 (not e!55791))))

(declare-fun res!44060 () Bool)

(assert (=> b!85539 (=> (not res!44060) (not e!55791))))

(assert (=> b!85539 (= res!44060 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85540 () Bool)

(declare-fun contains!754 (List!1526 (_ BitVec 64)) Bool)

(assert (=> b!85540 (= e!55791 (contains!754 Nil!1523 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85541 () Bool)

(assert (=> b!85541 (= e!55789 call!8128)))

(assert (= (and d!22109 (not res!44059)) b!85539))

(assert (= (and b!85539 res!44060) b!85540))

(assert (= (and b!85539 res!44061) b!85537))

(assert (= (and b!85537 c!13871) b!85538))

(assert (= (and b!85537 (not c!13871)) b!85541))

(assert (= (or b!85538 b!85541) bm!8125))

(assert (=> b!85537 m!89403))

(assert (=> b!85537 m!89403))

(declare-fun m!89857 () Bool)

(assert (=> b!85537 m!89857))

(assert (=> bm!8125 m!89403))

(declare-fun m!89859 () Bool)

(assert (=> bm!8125 m!89859))

(assert (=> b!85539 m!89403))

(assert (=> b!85539 m!89403))

(assert (=> b!85539 m!89857))

(assert (=> b!85540 m!89403))

(assert (=> b!85540 m!89403))

(declare-fun m!89861 () Bool)

(assert (=> b!85540 m!89861))

(assert (=> b!85125 d!22109))

(declare-fun b!85548 () Bool)

(declare-fun e!55796 () Bool)

(assert (=> b!85548 (= e!55796 tp_is_empty!2533)))

(declare-fun mapIsEmpty!3409 () Bool)

(declare-fun mapRes!3409 () Bool)

(assert (=> mapIsEmpty!3409 mapRes!3409))

(declare-fun b!85549 () Bool)

(declare-fun e!55797 () Bool)

(assert (=> b!85549 (= e!55797 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3409 () Bool)

(declare-fun tp!8953 () Bool)

(assert (=> mapNonEmpty!3409 (= mapRes!3409 (and tp!8953 e!55796))))

(declare-fun mapValue!3409 () ValueCell!923)

(declare-fun mapRest!3409 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapKey!3409 () (_ BitVec 32))

(assert (=> mapNonEmpty!3409 (= mapRest!3393 (store mapRest!3409 mapKey!3409 mapValue!3409))))

(declare-fun condMapEmpty!3409 () Bool)

(declare-fun mapDefault!3409 () ValueCell!923)

(assert (=> mapNonEmpty!3393 (= condMapEmpty!3409 (= mapRest!3393 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3409)))))

(assert (=> mapNonEmpty!3393 (= tp!8926 (and e!55797 mapRes!3409))))

(assert (= (and mapNonEmpty!3393 condMapEmpty!3409) mapIsEmpty!3409))

(assert (= (and mapNonEmpty!3393 (not condMapEmpty!3409)) mapNonEmpty!3409))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!923) mapValue!3409)) b!85548))

(assert (= (and mapNonEmpty!3393 ((_ is ValueCellFull!923) mapDefault!3409)) b!85549))

(declare-fun m!89863 () Bool)

(assert (=> mapNonEmpty!3409 m!89863))

(declare-fun b!85550 () Bool)

(declare-fun e!55798 () Bool)

(assert (=> b!85550 (= e!55798 tp_is_empty!2533)))

(declare-fun mapIsEmpty!3410 () Bool)

(declare-fun mapRes!3410 () Bool)

(assert (=> mapIsEmpty!3410 mapRes!3410))

(declare-fun b!85551 () Bool)

(declare-fun e!55799 () Bool)

(assert (=> b!85551 (= e!55799 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3410 () Bool)

(declare-fun tp!8954 () Bool)

(assert (=> mapNonEmpty!3410 (= mapRes!3410 (and tp!8954 e!55798))))

(declare-fun mapKey!3410 () (_ BitVec 32))

(declare-fun mapValue!3410 () ValueCell!923)

(declare-fun mapRest!3410 () (Array (_ BitVec 32) ValueCell!923))

(assert (=> mapNonEmpty!3410 (= mapRest!3394 (store mapRest!3410 mapKey!3410 mapValue!3410))))

(declare-fun condMapEmpty!3410 () Bool)

(declare-fun mapDefault!3410 () ValueCell!923)

(assert (=> mapNonEmpty!3394 (= condMapEmpty!3410 (= mapRest!3394 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3410)))))

(assert (=> mapNonEmpty!3394 (= tp!8923 (and e!55799 mapRes!3410))))

(assert (= (and mapNonEmpty!3394 condMapEmpty!3410) mapIsEmpty!3410))

(assert (= (and mapNonEmpty!3394 (not condMapEmpty!3410)) mapNonEmpty!3410))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!923) mapValue!3410)) b!85550))

(assert (= (and mapNonEmpty!3394 ((_ is ValueCellFull!923) mapDefault!3410)) b!85551))

(declare-fun m!89865 () Bool)

(assert (=> mapNonEmpty!3410 m!89865))

(declare-fun b_lambda!3795 () Bool)

(assert (= b_lambda!3789 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3795)))

(declare-fun b_lambda!3797 () Bool)

(assert (= b_lambda!3791 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3797)))

(declare-fun b_lambda!3799 () Bool)

(assert (= b_lambda!3793 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3799)))

(check-sat (not b!85507) (not b_next!2235) (not d!22079) (not d!22071) (not b_lambda!3799) (not b!85434) (not bm!8118) (not d!22093) (not bm!8092) (not b!85501) (not b!85452) (not d!22075) (not b_lambda!3797) (not b!85537) (not b!85514) (not b!85382) (not b!85500) (not b!85354) (not bm!8098) (not d!22061) (not b!85495) (not b!85464) (not b!85461) (not mapNonEmpty!3410) (not bm!8088) (not mapNonEmpty!3409) (not bm!8094) (not b!85453) (not b!85439) (not b!85443) (not b!85496) (not b!85492) (not d!22089) (not b!85498) (not d!22073) (not bm!8125) (not d!22087) (not b!85463) (not d!22101) (not b!85262) (not b!85430) (not b!85466) (not b!85462) (not b!85491) (not b!85442) (not d!22077) (not b!85539) (not bm!8075) (not b_lambda!3795) (not b!85504) b_and!5177 (not bm!8095) (not b!85459) b_and!5179 (not bm!8089) (not d!22063) (not b!85465) (not b!85454) (not bm!8087) (not d!22107) (not b!85378) (not b_lambda!3787) (not b_next!2233) (not b!85505) (not b!85513) (not bm!8085) (not bm!8083) (not b!85370) (not b!85426) (not bm!8091) (not d!22103) (not b!85359) (not b!85520) (not d!22065) (not b!85508) (not bm!8117) (not b!85499) (not b!85368) (not b!85540) (not d!22057) (not d!22085) (not d!22081) (not d!22083) (not b!85460) (not b!85503) (not bm!8115) (not bm!8122) (not d!22059) (not b!85380) (not b!85429) (not bm!8114) (not bm!8096) (not b!85260) (not b!85525) tp_is_empty!2533 (not b!85506) (not b!85427))
(check-sat b_and!5177 b_and!5179 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun d!22111 () Bool)

(declare-fun e!55801 () Bool)

(assert (=> d!22111 e!55801))

(declare-fun res!44062 () Bool)

(assert (=> d!22111 (=> res!44062 e!55801)))

(declare-fun lt!40495 () Bool)

(assert (=> d!22111 (= res!44062 (not lt!40495))))

(declare-fun lt!40498 () Bool)

(assert (=> d!22111 (= lt!40495 lt!40498)))

(declare-fun lt!40496 () Unit!2510)

(declare-fun e!55800 () Unit!2510)

(assert (=> d!22111 (= lt!40496 e!55800)))

(declare-fun c!13872 () Bool)

(assert (=> d!22111 (= c!13872 lt!40498)))

(assert (=> d!22111 (= lt!40498 (containsKey!142 (toList!740 lt!40480) (_1!1114 lt!40153)))))

(assert (=> d!22111 (= (contains!752 lt!40480 (_1!1114 lt!40153)) lt!40495)))

(declare-fun b!85552 () Bool)

(declare-fun lt!40497 () Unit!2510)

(assert (=> b!85552 (= e!55800 lt!40497)))

(assert (=> b!85552 (= lt!40497 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40480) (_1!1114 lt!40153)))))

(assert (=> b!85552 (isDefined!92 (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153)))))

(declare-fun b!85553 () Bool)

(declare-fun Unit!2525 () Unit!2510)

(assert (=> b!85553 (= e!55800 Unit!2525)))

(declare-fun b!85554 () Bool)

(assert (=> b!85554 (= e!55801 (isDefined!92 (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153))))))

(assert (= (and d!22111 c!13872) b!85552))

(assert (= (and d!22111 (not c!13872)) b!85553))

(assert (= (and d!22111 (not res!44062)) b!85554))

(declare-fun m!89867 () Bool)

(assert (=> d!22111 m!89867))

(declare-fun m!89869 () Bool)

(assert (=> b!85552 m!89869))

(assert (=> b!85552 m!89829))

(assert (=> b!85552 m!89829))

(declare-fun m!89871 () Bool)

(assert (=> b!85552 m!89871))

(assert (=> b!85554 m!89829))

(assert (=> b!85554 m!89829))

(assert (=> b!85554 m!89871))

(assert (=> d!22089 d!22111))

(declare-fun d!22113 () Bool)

(declare-fun c!13877 () Bool)

(assert (=> d!22113 (= c!13877 (and ((_ is Cons!1521) lt!40479) (= (_1!1114 (h!2112 lt!40479)) (_1!1114 lt!40153))))))

(declare-fun e!55806 () Option!144)

(assert (=> d!22113 (= (getValueByKey!138 lt!40479 (_1!1114 lt!40153)) e!55806)))

(declare-fun b!85566 () Bool)

(declare-fun e!55807 () Option!144)

(assert (=> b!85566 (= e!55807 None!142)))

(declare-fun b!85563 () Bool)

(assert (=> b!85563 (= e!55806 (Some!143 (_2!1114 (h!2112 lt!40479))))))

(declare-fun b!85565 () Bool)

(assert (=> b!85565 (= e!55807 (getValueByKey!138 (t!5237 lt!40479) (_1!1114 lt!40153)))))

(declare-fun b!85564 () Bool)

(assert (=> b!85564 (= e!55806 e!55807)))

(declare-fun c!13878 () Bool)

(assert (=> b!85564 (= c!13878 (and ((_ is Cons!1521) lt!40479) (not (= (_1!1114 (h!2112 lt!40479)) (_1!1114 lt!40153)))))))

(assert (= (and d!22113 c!13877) b!85563))

(assert (= (and d!22113 (not c!13877)) b!85564))

(assert (= (and b!85564 c!13878) b!85565))

(assert (= (and b!85564 (not c!13878)) b!85566))

(declare-fun m!89873 () Bool)

(assert (=> b!85565 m!89873))

(assert (=> d!22089 d!22113))

(declare-fun d!22115 () Bool)

(assert (=> d!22115 (= (getValueByKey!138 lt!40479 (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153)))))

(declare-fun lt!40501 () Unit!2510)

(declare-fun choose!507 (List!1525 (_ BitVec 64) V!3025) Unit!2510)

(assert (=> d!22115 (= lt!40501 (choose!507 lt!40479 (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(declare-fun e!55810 () Bool)

(assert (=> d!22115 e!55810))

(declare-fun res!44067 () Bool)

(assert (=> d!22115 (=> (not res!44067) (not e!55810))))

(declare-fun isStrictlySorted!293 (List!1525) Bool)

(assert (=> d!22115 (= res!44067 (isStrictlySorted!293 lt!40479))))

(assert (=> d!22115 (= (lemmaContainsTupThenGetReturnValue!58 lt!40479 (_1!1114 lt!40153) (_2!1114 lt!40153)) lt!40501)))

(declare-fun b!85571 () Bool)

(declare-fun res!44068 () Bool)

(assert (=> b!85571 (=> (not res!44068) (not e!55810))))

(assert (=> b!85571 (= res!44068 (containsKey!142 lt!40479 (_1!1114 lt!40153)))))

(declare-fun b!85572 () Bool)

(assert (=> b!85572 (= e!55810 (contains!753 lt!40479 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(assert (= (and d!22115 res!44067) b!85571))

(assert (= (and b!85571 res!44068) b!85572))

(assert (=> d!22115 m!89823))

(declare-fun m!89875 () Bool)

(assert (=> d!22115 m!89875))

(declare-fun m!89877 () Bool)

(assert (=> d!22115 m!89877))

(declare-fun m!89879 () Bool)

(assert (=> b!85571 m!89879))

(declare-fun m!89881 () Bool)

(assert (=> b!85572 m!89881))

(assert (=> d!22089 d!22115))

(declare-fun b!85593 () Bool)

(declare-fun e!55823 () List!1525)

(assert (=> b!85593 (= e!55823 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40152)) (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(declare-fun b!85594 () Bool)

(declare-fun c!13889 () Bool)

(declare-fun c!13890 () Bool)

(assert (=> b!85594 (= e!55823 (ite c!13889 (t!5237 (toList!740 lt!40152)) (ite c!13890 (Cons!1521 (h!2112 (toList!740 lt!40152)) (t!5237 (toList!740 lt!40152))) Nil!1522)))))

(declare-fun b!85595 () Bool)

(declare-fun e!55824 () List!1525)

(declare-fun call!8136 () List!1525)

(assert (=> b!85595 (= e!55824 call!8136)))

(declare-fun b!85596 () Bool)

(declare-fun e!55821 () List!1525)

(declare-fun call!8135 () List!1525)

(assert (=> b!85596 (= e!55821 call!8135)))

(declare-fun b!85597 () Bool)

(assert (=> b!85597 (= c!13890 (and ((_ is Cons!1521) (toList!740 lt!40152)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40152))) (_1!1114 lt!40153))))))

(declare-fun e!55825 () List!1525)

(assert (=> b!85597 (= e!55821 e!55825)))

(declare-fun b!85598 () Bool)

(declare-fun res!44073 () Bool)

(declare-fun e!55822 () Bool)

(assert (=> b!85598 (=> (not res!44073) (not e!55822))))

(declare-fun lt!40504 () List!1525)

(assert (=> b!85598 (= res!44073 (containsKey!142 lt!40504 (_1!1114 lt!40153)))))

(declare-fun b!85600 () Bool)

(declare-fun call!8137 () List!1525)

(assert (=> b!85600 (= e!55825 call!8137)))

(declare-fun b!85601 () Bool)

(assert (=> b!85601 (= e!55822 (contains!753 lt!40504 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun bm!8132 () Bool)

(declare-fun c!13888 () Bool)

(declare-fun $colon$colon!71 (List!1525 tuple2!2206) List!1525)

(assert (=> bm!8132 (= call!8136 ($colon$colon!71 e!55823 (ite c!13888 (h!2112 (toList!740 lt!40152)) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153)))))))

(declare-fun c!13887 () Bool)

(assert (=> bm!8132 (= c!13887 c!13888)))

(declare-fun bm!8133 () Bool)

(assert (=> bm!8133 (= call!8137 call!8135)))

(declare-fun b!85599 () Bool)

(assert (=> b!85599 (= e!55825 call!8137)))

(declare-fun d!22117 () Bool)

(assert (=> d!22117 e!55822))

(declare-fun res!44074 () Bool)

(assert (=> d!22117 (=> (not res!44074) (not e!55822))))

(assert (=> d!22117 (= res!44074 (isStrictlySorted!293 lt!40504))))

(assert (=> d!22117 (= lt!40504 e!55824)))

(assert (=> d!22117 (= c!13888 (and ((_ is Cons!1521) (toList!740 lt!40152)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40152))) (_1!1114 lt!40153))))))

(assert (=> d!22117 (isStrictlySorted!293 (toList!740 lt!40152))))

(assert (=> d!22117 (= (insertStrictlySorted!61 (toList!740 lt!40152) (_1!1114 lt!40153) (_2!1114 lt!40153)) lt!40504)))

(declare-fun b!85602 () Bool)

(assert (=> b!85602 (= e!55824 e!55821)))

(assert (=> b!85602 (= c!13889 (and ((_ is Cons!1521) (toList!740 lt!40152)) (= (_1!1114 (h!2112 (toList!740 lt!40152))) (_1!1114 lt!40153))))))

(declare-fun bm!8134 () Bool)

(assert (=> bm!8134 (= call!8135 call!8136)))

(assert (= (and d!22117 c!13888) b!85595))

(assert (= (and d!22117 (not c!13888)) b!85602))

(assert (= (and b!85602 c!13889) b!85596))

(assert (= (and b!85602 (not c!13889)) b!85597))

(assert (= (and b!85597 c!13890) b!85600))

(assert (= (and b!85597 (not c!13890)) b!85599))

(assert (= (or b!85600 b!85599) bm!8133))

(assert (= (or b!85596 bm!8133) bm!8134))

(assert (= (or b!85595 bm!8134) bm!8132))

(assert (= (and bm!8132 c!13887) b!85593))

(assert (= (and bm!8132 (not c!13887)) b!85594))

(assert (= (and d!22117 res!44074) b!85598))

(assert (= (and b!85598 res!44073) b!85601))

(declare-fun m!89883 () Bool)

(assert (=> d!22117 m!89883))

(declare-fun m!89885 () Bool)

(assert (=> d!22117 m!89885))

(declare-fun m!89887 () Bool)

(assert (=> b!85601 m!89887))

(declare-fun m!89889 () Bool)

(assert (=> b!85598 m!89889))

(declare-fun m!89891 () Bool)

(assert (=> b!85593 m!89891))

(declare-fun m!89893 () Bool)

(assert (=> bm!8132 m!89893))

(assert (=> d!22089 d!22117))

(declare-fun d!22119 () Bool)

(assert (=> d!22119 (= (inRange!0 (ite c!13832 (ite c!13821 (index!3122 lt!40339) (ite c!13831 (index!3121 lt!40337) (index!3124 lt!40337))) (ite c!13822 (index!3122 lt!40345) (ite c!13824 (index!3121 lt!40336) (index!3124 lt!40336)))) (mask!6364 newMap!16)) (and (bvsge (ite c!13832 (ite c!13821 (index!3122 lt!40339) (ite c!13831 (index!3121 lt!40337) (index!3124 lt!40337))) (ite c!13822 (index!3122 lt!40345) (ite c!13824 (index!3121 lt!40336) (index!3124 lt!40336)))) #b00000000000000000000000000000000) (bvslt (ite c!13832 (ite c!13821 (index!3122 lt!40339) (ite c!13831 (index!3121 lt!40337) (index!3124 lt!40337))) (ite c!13822 (index!3122 lt!40345) (ite c!13824 (index!3121 lt!40336) (index!3124 lt!40336)))) (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8096 d!22119))

(declare-fun d!22121 () Bool)

(declare-fun c!13891 () Bool)

(assert (=> d!22121 (= c!13891 (and ((_ is Cons!1521) (toList!740 lt!40447)) (= (_1!1114 (h!2112 (toList!740 lt!40447))) (_1!1114 lt!40140))))))

(declare-fun e!55826 () Option!144)

(assert (=> d!22121 (= (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140)) e!55826)))

(declare-fun b!85606 () Bool)

(declare-fun e!55827 () Option!144)

(assert (=> b!85606 (= e!55827 None!142)))

(declare-fun b!85603 () Bool)

(assert (=> b!85603 (= e!55826 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40447)))))))

(declare-fun b!85605 () Bool)

(assert (=> b!85605 (= e!55827 (getValueByKey!138 (t!5237 (toList!740 lt!40447)) (_1!1114 lt!40140)))))

(declare-fun b!85604 () Bool)

(assert (=> b!85604 (= e!55826 e!55827)))

(declare-fun c!13892 () Bool)

(assert (=> b!85604 (= c!13892 (and ((_ is Cons!1521) (toList!740 lt!40447)) (not (= (_1!1114 (h!2112 (toList!740 lt!40447))) (_1!1114 lt!40140)))))))

(assert (= (and d!22121 c!13891) b!85603))

(assert (= (and d!22121 (not c!13891)) b!85604))

(assert (= (and b!85604 c!13892) b!85605))

(assert (= (and b!85604 (not c!13892)) b!85606))

(declare-fun m!89895 () Bool)

(assert (=> b!85605 m!89895))

(assert (=> b!85463 d!22121))

(declare-fun d!22123 () Bool)

(assert (=> d!22123 (= (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85495 d!22123))

(declare-fun d!22125 () Bool)

(declare-fun res!44079 () Bool)

(declare-fun e!55832 () Bool)

(assert (=> d!22125 (=> res!44079 e!55832)))

(assert (=> d!22125 (= res!44079 (and ((_ is Cons!1521) (toList!740 lt!40151)) (= (_1!1114 (h!2112 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (=> d!22125 (= (containsKey!142 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!55832)))

(declare-fun b!85611 () Bool)

(declare-fun e!55833 () Bool)

(assert (=> b!85611 (= e!55832 e!55833)))

(declare-fun res!44080 () Bool)

(assert (=> b!85611 (=> (not res!44080) (not e!55833))))

(assert (=> b!85611 (= res!44080 (and (or (not ((_ is Cons!1521) (toList!740 lt!40151))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) ((_ is Cons!1521) (toList!740 lt!40151)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun b!85612 () Bool)

(assert (=> b!85612 (= e!55833 (containsKey!142 (t!5237 (toList!740 lt!40151)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!22125 (not res!44079)) b!85611))

(assert (= (and b!85611 res!44080) b!85612))

(assert (=> b!85612 m!89403))

(declare-fun m!89897 () Bool)

(assert (=> b!85612 m!89897))

(assert (=> d!22059 d!22125))

(declare-fun d!22127 () Bool)

(declare-fun e!55835 () Bool)

(assert (=> d!22127 e!55835))

(declare-fun res!44081 () Bool)

(assert (=> d!22127 (=> res!44081 e!55835)))

(declare-fun lt!40505 () Bool)

(assert (=> d!22127 (= res!44081 (not lt!40505))))

(declare-fun lt!40508 () Bool)

(assert (=> d!22127 (= lt!40505 lt!40508)))

(declare-fun lt!40506 () Unit!2510)

(declare-fun e!55834 () Unit!2510)

(assert (=> d!22127 (= lt!40506 e!55834)))

(declare-fun c!13893 () Bool)

(assert (=> d!22127 (= c!13893 lt!40508)))

(assert (=> d!22127 (= lt!40508 (containsKey!142 (toList!740 lt!40476) (_1!1114 lt!40153)))))

(assert (=> d!22127 (= (contains!752 lt!40476 (_1!1114 lt!40153)) lt!40505)))

(declare-fun b!85613 () Bool)

(declare-fun lt!40507 () Unit!2510)

(assert (=> b!85613 (= e!55834 lt!40507)))

(assert (=> b!85613 (= lt!40507 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40476) (_1!1114 lt!40153)))))

(assert (=> b!85613 (isDefined!92 (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153)))))

(declare-fun b!85614 () Bool)

(declare-fun Unit!2526 () Unit!2510)

(assert (=> b!85614 (= e!55834 Unit!2526)))

(declare-fun b!85615 () Bool)

(assert (=> b!85615 (= e!55835 (isDefined!92 (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153))))))

(assert (= (and d!22127 c!13893) b!85613))

(assert (= (and d!22127 (not c!13893)) b!85614))

(assert (= (and d!22127 (not res!44081)) b!85615))

(declare-fun m!89899 () Bool)

(assert (=> d!22127 m!89899))

(declare-fun m!89901 () Bool)

(assert (=> b!85613 m!89901))

(assert (=> b!85613 m!89817))

(assert (=> b!85613 m!89817))

(declare-fun m!89903 () Bool)

(assert (=> b!85613 m!89903))

(assert (=> b!85615 m!89817))

(assert (=> b!85615 m!89817))

(assert (=> b!85615 m!89903))

(assert (=> d!22087 d!22127))

(declare-fun d!22129 () Bool)

(declare-fun c!13894 () Bool)

(assert (=> d!22129 (= c!13894 (and ((_ is Cons!1521) lt!40475) (= (_1!1114 (h!2112 lt!40475)) (_1!1114 lt!40153))))))

(declare-fun e!55836 () Option!144)

(assert (=> d!22129 (= (getValueByKey!138 lt!40475 (_1!1114 lt!40153)) e!55836)))

(declare-fun b!85619 () Bool)

(declare-fun e!55837 () Option!144)

(assert (=> b!85619 (= e!55837 None!142)))

(declare-fun b!85616 () Bool)

(assert (=> b!85616 (= e!55836 (Some!143 (_2!1114 (h!2112 lt!40475))))))

(declare-fun b!85618 () Bool)

(assert (=> b!85618 (= e!55837 (getValueByKey!138 (t!5237 lt!40475) (_1!1114 lt!40153)))))

(declare-fun b!85617 () Bool)

(assert (=> b!85617 (= e!55836 e!55837)))

(declare-fun c!13895 () Bool)

(assert (=> b!85617 (= c!13895 (and ((_ is Cons!1521) lt!40475) (not (= (_1!1114 (h!2112 lt!40475)) (_1!1114 lt!40153)))))))

(assert (= (and d!22129 c!13894) b!85616))

(assert (= (and d!22129 (not c!13894)) b!85617))

(assert (= (and b!85617 c!13895) b!85618))

(assert (= (and b!85617 (not c!13895)) b!85619))

(declare-fun m!89905 () Bool)

(assert (=> b!85618 m!89905))

(assert (=> d!22087 d!22129))

(declare-fun d!22131 () Bool)

(assert (=> d!22131 (= (getValueByKey!138 lt!40475 (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153)))))

(declare-fun lt!40509 () Unit!2510)

(assert (=> d!22131 (= lt!40509 (choose!507 lt!40475 (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(declare-fun e!55838 () Bool)

(assert (=> d!22131 e!55838))

(declare-fun res!44082 () Bool)

(assert (=> d!22131 (=> (not res!44082) (not e!55838))))

(assert (=> d!22131 (= res!44082 (isStrictlySorted!293 lt!40475))))

(assert (=> d!22131 (= (lemmaContainsTupThenGetReturnValue!58 lt!40475 (_1!1114 lt!40153) (_2!1114 lt!40153)) lt!40509)))

(declare-fun b!85620 () Bool)

(declare-fun res!44083 () Bool)

(assert (=> b!85620 (=> (not res!44083) (not e!55838))))

(assert (=> b!85620 (= res!44083 (containsKey!142 lt!40475 (_1!1114 lt!40153)))))

(declare-fun b!85621 () Bool)

(assert (=> b!85621 (= e!55838 (contains!753 lt!40475 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(assert (= (and d!22131 res!44082) b!85620))

(assert (= (and b!85620 res!44083) b!85621))

(assert (=> d!22131 m!89811))

(declare-fun m!89907 () Bool)

(assert (=> d!22131 m!89907))

(declare-fun m!89909 () Bool)

(assert (=> d!22131 m!89909))

(declare-fun m!89911 () Bool)

(assert (=> b!85620 m!89911))

(declare-fun m!89913 () Bool)

(assert (=> b!85621 m!89913))

(assert (=> d!22087 d!22131))

(declare-fun b!85622 () Bool)

(declare-fun e!55841 () List!1525)

(assert (=> b!85622 (= e!55841 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40146)) (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(declare-fun c!13898 () Bool)

(declare-fun b!85623 () Bool)

(declare-fun c!13899 () Bool)

(assert (=> b!85623 (= e!55841 (ite c!13898 (t!5237 (toList!740 lt!40146)) (ite c!13899 (Cons!1521 (h!2112 (toList!740 lt!40146)) (t!5237 (toList!740 lt!40146))) Nil!1522)))))

(declare-fun b!85624 () Bool)

(declare-fun e!55842 () List!1525)

(declare-fun call!8139 () List!1525)

(assert (=> b!85624 (= e!55842 call!8139)))

(declare-fun b!85625 () Bool)

(declare-fun e!55839 () List!1525)

(declare-fun call!8138 () List!1525)

(assert (=> b!85625 (= e!55839 call!8138)))

(declare-fun b!85626 () Bool)

(assert (=> b!85626 (= c!13899 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 lt!40153))))))

(declare-fun e!55843 () List!1525)

(assert (=> b!85626 (= e!55839 e!55843)))

(declare-fun b!85627 () Bool)

(declare-fun res!44084 () Bool)

(declare-fun e!55840 () Bool)

(assert (=> b!85627 (=> (not res!44084) (not e!55840))))

(declare-fun lt!40510 () List!1525)

(assert (=> b!85627 (= res!44084 (containsKey!142 lt!40510 (_1!1114 lt!40153)))))

(declare-fun b!85629 () Bool)

(declare-fun call!8140 () List!1525)

(assert (=> b!85629 (= e!55843 call!8140)))

(declare-fun b!85630 () Bool)

(assert (=> b!85630 (= e!55840 (contains!753 lt!40510 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun bm!8135 () Bool)

(declare-fun c!13897 () Bool)

(assert (=> bm!8135 (= call!8139 ($colon$colon!71 e!55841 (ite c!13897 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153)))))))

(declare-fun c!13896 () Bool)

(assert (=> bm!8135 (= c!13896 c!13897)))

(declare-fun bm!8136 () Bool)

(assert (=> bm!8136 (= call!8140 call!8138)))

(declare-fun b!85628 () Bool)

(assert (=> b!85628 (= e!55843 call!8140)))

(declare-fun d!22133 () Bool)

(assert (=> d!22133 e!55840))

(declare-fun res!44085 () Bool)

(assert (=> d!22133 (=> (not res!44085) (not e!55840))))

(assert (=> d!22133 (= res!44085 (isStrictlySorted!293 lt!40510))))

(assert (=> d!22133 (= lt!40510 e!55842)))

(assert (=> d!22133 (= c!13897 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 lt!40153))))))

(assert (=> d!22133 (isStrictlySorted!293 (toList!740 lt!40146))))

(assert (=> d!22133 (= (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 lt!40153) (_2!1114 lt!40153)) lt!40510)))

(declare-fun b!85631 () Bool)

(assert (=> b!85631 (= e!55842 e!55839)))

(assert (=> b!85631 (= c!13898 (and ((_ is Cons!1521) (toList!740 lt!40146)) (= (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 lt!40153))))))

(declare-fun bm!8137 () Bool)

(assert (=> bm!8137 (= call!8138 call!8139)))

(assert (= (and d!22133 c!13897) b!85624))

(assert (= (and d!22133 (not c!13897)) b!85631))

(assert (= (and b!85631 c!13898) b!85625))

(assert (= (and b!85631 (not c!13898)) b!85626))

(assert (= (and b!85626 c!13899) b!85629))

(assert (= (and b!85626 (not c!13899)) b!85628))

(assert (= (or b!85629 b!85628) bm!8136))

(assert (= (or b!85625 bm!8136) bm!8137))

(assert (= (or b!85624 bm!8137) bm!8135))

(assert (= (and bm!8135 c!13896) b!85622))

(assert (= (and bm!8135 (not c!13896)) b!85623))

(assert (= (and d!22133 res!44085) b!85627))

(assert (= (and b!85627 res!44084) b!85630))

(declare-fun m!89915 () Bool)

(assert (=> d!22133 m!89915))

(declare-fun m!89917 () Bool)

(assert (=> d!22133 m!89917))

(declare-fun m!89919 () Bool)

(assert (=> b!85630 m!89919))

(declare-fun m!89921 () Bool)

(assert (=> b!85627 m!89921))

(declare-fun m!89923 () Bool)

(assert (=> b!85622 m!89923))

(declare-fun m!89925 () Bool)

(assert (=> bm!8135 m!89925))

(assert (=> d!22087 d!22133))

(declare-fun d!22135 () Bool)

(declare-fun lt!40513 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!89 (List!1525) (InoxSet tuple2!2206))

(assert (=> d!22135 (= lt!40513 (select (content!89 (toList!740 lt!40435)) lt!40140))))

(declare-fun e!55848 () Bool)

(assert (=> d!22135 (= lt!40513 e!55848)))

(declare-fun res!44090 () Bool)

(assert (=> d!22135 (=> (not res!44090) (not e!55848))))

(assert (=> d!22135 (= res!44090 ((_ is Cons!1521) (toList!740 lt!40435)))))

(assert (=> d!22135 (= (contains!753 (toList!740 lt!40435) lt!40140) lt!40513)))

(declare-fun b!85636 () Bool)

(declare-fun e!55849 () Bool)

(assert (=> b!85636 (= e!55848 e!55849)))

(declare-fun res!44091 () Bool)

(assert (=> b!85636 (=> res!44091 e!55849)))

(assert (=> b!85636 (= res!44091 (= (h!2112 (toList!740 lt!40435)) lt!40140))))

(declare-fun b!85637 () Bool)

(assert (=> b!85637 (= e!55849 (contains!753 (t!5237 (toList!740 lt!40435)) lt!40140))))

(assert (= (and d!22135 res!44090) b!85636))

(assert (= (and b!85636 (not res!44091)) b!85637))

(declare-fun m!89927 () Bool)

(assert (=> d!22135 m!89927))

(declare-fun m!89929 () Bool)

(assert (=> d!22135 m!89929))

(declare-fun m!89931 () Bool)

(assert (=> b!85637 m!89931))

(assert (=> b!85460 d!22135))

(declare-fun d!22137 () Bool)

(assert (=> d!22137 (= (get!1203 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85514 d!22137))

(declare-fun b!85638 () Bool)

(assert (=> b!85638 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> b!85638 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun lt!40518 () ListLongMap!1449)

(declare-fun e!55854 () Bool)

(assert (=> b!85638 (= e!55854 (= (apply!82 lt!40518 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!85639 () Bool)

(declare-fun res!44092 () Bool)

(declare-fun e!55856 () Bool)

(assert (=> b!85639 (=> (not res!44092) (not e!55856))))

(assert (=> b!85639 (= res!44092 (not (contains!752 lt!40518 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85640 () Bool)

(declare-fun e!55852 () Bool)

(assert (=> b!85640 (= e!55856 e!55852)))

(declare-fun c!13901 () Bool)

(declare-fun e!55853 () Bool)

(assert (=> b!85640 (= c!13901 e!55853)))

(declare-fun res!44093 () Bool)

(assert (=> b!85640 (=> (not res!44093) (not e!55853))))

(assert (=> b!85640 (= res!44093 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85641 () Bool)

(declare-fun e!55855 () ListLongMap!1449)

(assert (=> b!85641 (= e!55855 (ListLongMap!1450 Nil!1522))))

(declare-fun bm!8138 () Bool)

(declare-fun call!8141 () ListLongMap!1449)

(assert (=> bm!8138 (= call!8141 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85643 () Bool)

(declare-fun e!55850 () Bool)

(assert (=> b!85643 (= e!55850 (isEmpty!339 lt!40518))))

(declare-fun b!85644 () Bool)

(declare-fun e!55851 () ListLongMap!1449)

(assert (=> b!85644 (= e!55851 call!8141)))

(declare-fun b!85645 () Bool)

(assert (=> b!85645 (= e!55850 (= lt!40518 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85646 () Bool)

(assert (=> b!85646 (= e!55852 e!55854)))

(assert (=> b!85646 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun res!44095 () Bool)

(assert (=> b!85646 (= res!44095 (contains!752 lt!40518 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85646 (=> (not res!44095) (not e!55854))))

(declare-fun b!85647 () Bool)

(declare-fun lt!40520 () Unit!2510)

(declare-fun lt!40519 () Unit!2510)

(assert (=> b!85647 (= lt!40520 lt!40519)))

(declare-fun lt!40516 () ListLongMap!1449)

(declare-fun lt!40514 () (_ BitVec 64))

(declare-fun lt!40517 () (_ BitVec 64))

(declare-fun lt!40515 () V!3025)

(assert (=> b!85647 (not (contains!752 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515)) lt!40514))))

(assert (=> b!85647 (= lt!40519 (addStillNotContains!32 lt!40516 lt!40517 lt!40515 lt!40514))))

(assert (=> b!85647 (= lt!40514 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!85647 (= lt!40515 (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!85647 (= lt!40517 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!85647 (= lt!40516 call!8141)))

(assert (=> b!85647 (= e!55851 (+!108 call!8141 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!85648 () Bool)

(assert (=> b!85648 (= e!55855 e!55851)))

(declare-fun c!13902 () Bool)

(assert (=> b!85648 (= c!13902 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85649 () Bool)

(assert (=> b!85649 (= e!55852 e!55850)))

(declare-fun c!13900 () Bool)

(assert (=> b!85649 (= c!13900 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85642 () Bool)

(assert (=> b!85642 (= e!55853 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!85642 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!22139 () Bool)

(assert (=> d!22139 e!55856))

(declare-fun res!44094 () Bool)

(assert (=> d!22139 (=> (not res!44094) (not e!55856))))

(assert (=> d!22139 (= res!44094 (not (contains!752 lt!40518 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22139 (= lt!40518 e!55855)))

(declare-fun c!13903 () Bool)

(assert (=> d!22139 (= c!13903 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22139 (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992))))))

(assert (=> d!22139 (= (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) lt!40518)))

(assert (= (and d!22139 c!13903) b!85641))

(assert (= (and d!22139 (not c!13903)) b!85648))

(assert (= (and b!85648 c!13902) b!85647))

(assert (= (and b!85648 (not c!13902)) b!85644))

(assert (= (or b!85647 b!85644) bm!8138))

(assert (= (and d!22139 res!44094) b!85639))

(assert (= (and b!85639 res!44092) b!85640))

(assert (= (and b!85640 res!44093) b!85642))

(assert (= (and b!85640 c!13901) b!85646))

(assert (= (and b!85640 (not c!13901)) b!85649))

(assert (= (and b!85646 res!44095) b!85638))

(assert (= (and b!85649 c!13900) b!85645))

(assert (= (and b!85649 (not c!13900)) b!85643))

(declare-fun b_lambda!3801 () Bool)

(assert (=> (not b_lambda!3801) (not b!85638)))

(assert (=> b!85638 t!5234))

(declare-fun b_and!5181 () Bool)

(assert (= b_and!5177 (and (=> t!5234 result!2903) b_and!5181)))

(assert (=> b!85638 t!5236))

(declare-fun b_and!5183 () Bool)

(assert (= b_and!5179 (and (=> t!5236 result!2907) b_and!5183)))

(declare-fun b_lambda!3803 () Bool)

(assert (=> (not b_lambda!3803) (not b!85647)))

(assert (=> b!85647 t!5234))

(declare-fun b_and!5185 () Bool)

(assert (= b_and!5181 (and (=> t!5234 result!2903) b_and!5185)))

(assert (=> b!85647 t!5236))

(declare-fun b_and!5187 () Bool)

(assert (= b_and!5183 (and (=> t!5236 result!2907) b_and!5187)))

(declare-fun m!89933 () Bool)

(assert (=> d!22139 m!89933))

(assert (=> d!22139 m!89435))

(declare-fun m!89935 () Bool)

(assert (=> bm!8138 m!89935))

(declare-fun m!89937 () Bool)

(assert (=> b!85647 m!89937))

(assert (=> b!85647 m!89407))

(declare-fun m!89939 () Bool)

(assert (=> b!85647 m!89939))

(assert (=> b!85647 m!89407))

(declare-fun m!89941 () Bool)

(assert (=> b!85647 m!89941))

(declare-fun m!89943 () Bool)

(assert (=> b!85647 m!89943))

(declare-fun m!89945 () Bool)

(assert (=> b!85647 m!89945))

(declare-fun m!89947 () Bool)

(assert (=> b!85647 m!89947))

(assert (=> b!85647 m!89945))

(declare-fun m!89949 () Bool)

(assert (=> b!85647 m!89949))

(assert (=> b!85647 m!89937))

(assert (=> b!85638 m!89937))

(assert (=> b!85638 m!89407))

(assert (=> b!85638 m!89939))

(assert (=> b!85638 m!89407))

(assert (=> b!85638 m!89941))

(assert (=> b!85638 m!89941))

(declare-fun m!89951 () Bool)

(assert (=> b!85638 m!89951))

(assert (=> b!85638 m!89937))

(declare-fun m!89953 () Bool)

(assert (=> b!85639 m!89953))

(assert (=> b!85645 m!89935))

(assert (=> b!85642 m!89941))

(assert (=> b!85642 m!89941))

(declare-fun m!89955 () Bool)

(assert (=> b!85642 m!89955))

(declare-fun m!89957 () Bool)

(assert (=> b!85643 m!89957))

(assert (=> b!85648 m!89941))

(assert (=> b!85648 m!89941))

(assert (=> b!85648 m!89955))

(assert (=> b!85646 m!89941))

(assert (=> b!85646 m!89941))

(declare-fun m!89959 () Bool)

(assert (=> b!85646 m!89959))

(assert (=> b!85498 d!22139))

(declare-fun bm!8139 () Bool)

(declare-fun call!8147 () ListLongMap!1449)

(declare-fun call!8148 () ListLongMap!1449)

(assert (=> bm!8139 (= call!8147 call!8148)))

(declare-fun bm!8140 () Bool)

(declare-fun call!8146 () ListLongMap!1449)

(assert (=> bm!8140 (= call!8146 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85650 () Bool)

(declare-fun e!55866 () Unit!2510)

(declare-fun Unit!2527 () Unit!2510)

(assert (=> b!85650 (= e!55866 Unit!2527)))

(declare-fun b!85651 () Bool)

(declare-fun e!55868 () Bool)

(assert (=> b!85651 (= e!55868 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85652 () Bool)

(declare-fun e!55858 () Bool)

(declare-fun lt!40533 () ListLongMap!1449)

(assert (=> b!85652 (= e!55858 (= (apply!82 lt!40533 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!85653 () Bool)

(declare-fun c!13909 () Bool)

(assert (=> b!85653 (= c!13909 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55862 () ListLongMap!1449)

(declare-fun e!55867 () ListLongMap!1449)

(assert (=> b!85653 (= e!55862 e!55867)))

(declare-fun d!22141 () Bool)

(declare-fun e!55859 () Bool)

(assert (=> d!22141 e!55859))

(declare-fun res!44100 () Bool)

(assert (=> d!22141 (=> (not res!44100) (not e!55859))))

(assert (=> d!22141 (= res!44100 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!40542 () ListLongMap!1449)

(assert (=> d!22141 (= lt!40533 lt!40542)))

(declare-fun lt!40525 () Unit!2510)

(assert (=> d!22141 (= lt!40525 e!55866)))

(declare-fun c!13905 () Bool)

(assert (=> d!22141 (= c!13905 e!55868)))

(declare-fun res!44103 () Bool)

(assert (=> d!22141 (=> (not res!44103) (not e!55868))))

(assert (=> d!22141 (= res!44103 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!55861 () ListLongMap!1449)

(assert (=> d!22141 (= lt!40542 e!55861)))

(declare-fun c!13907 () Bool)

(assert (=> d!22141 (= c!13907 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22141 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22141 (= (getCurrentListMap!426 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40533)))

(declare-fun b!85654 () Bool)

(declare-fun lt!40523 () Unit!2510)

(assert (=> b!85654 (= e!55866 lt!40523)))

(declare-fun lt!40529 () ListLongMap!1449)

(assert (=> b!85654 (= lt!40529 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40526 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40526 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40530 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40530 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40541 () Unit!2510)

(assert (=> b!85654 (= lt!40541 (addStillContains!58 lt!40529 lt!40526 (zeroValue!2229 newMap!16) lt!40530))))

(assert (=> b!85654 (contains!752 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))) lt!40530)))

(declare-fun lt!40540 () Unit!2510)

(assert (=> b!85654 (= lt!40540 lt!40541)))

(declare-fun lt!40522 () ListLongMap!1449)

(assert (=> b!85654 (= lt!40522 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40539 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40539 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40534 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40534 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40528 () Unit!2510)

(assert (=> b!85654 (= lt!40528 (addApplyDifferent!58 lt!40522 lt!40539 (minValue!2229 newMap!16) lt!40534))))

(assert (=> b!85654 (= (apply!82 (+!108 lt!40522 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))) lt!40534) (apply!82 lt!40522 lt!40534))))

(declare-fun lt!40536 () Unit!2510)

(assert (=> b!85654 (= lt!40536 lt!40528)))

(declare-fun lt!40524 () ListLongMap!1449)

(assert (=> b!85654 (= lt!40524 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40535 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40535 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40537 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40537 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40527 () Unit!2510)

(assert (=> b!85654 (= lt!40527 (addApplyDifferent!58 lt!40524 lt!40535 (zeroValue!2229 newMap!16) lt!40537))))

(assert (=> b!85654 (= (apply!82 (+!108 lt!40524 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))) lt!40537) (apply!82 lt!40524 lt!40537))))

(declare-fun lt!40531 () Unit!2510)

(assert (=> b!85654 (= lt!40531 lt!40527)))

(declare-fun lt!40521 () ListLongMap!1449)

(assert (=> b!85654 (= lt!40521 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40532 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40532 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40538 () (_ BitVec 64))

(assert (=> b!85654 (= lt!40538 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85654 (= lt!40523 (addApplyDifferent!58 lt!40521 lt!40532 (minValue!2229 newMap!16) lt!40538))))

(assert (=> b!85654 (= (apply!82 (+!108 lt!40521 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))) lt!40538) (apply!82 lt!40521 lt!40538))))

(declare-fun b!85655 () Bool)

(assert (=> b!85655 (= e!55861 (+!108 call!8148 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!85656 () Bool)

(declare-fun e!55865 () Bool)

(declare-fun e!55864 () Bool)

(assert (=> b!85656 (= e!55865 e!55864)))

(declare-fun res!44098 () Bool)

(declare-fun call!8142 () Bool)

(assert (=> b!85656 (= res!44098 call!8142)))

(assert (=> b!85656 (=> (not res!44098) (not e!55864))))

(declare-fun bm!8141 () Bool)

(assert (=> bm!8141 (= call!8142 (contains!752 lt!40533 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85657 () Bool)

(declare-fun res!44096 () Bool)

(assert (=> b!85657 (=> (not res!44096) (not e!55859))))

(declare-fun e!55857 () Bool)

(assert (=> b!85657 (= res!44096 e!55857)))

(declare-fun c!13908 () Bool)

(assert (=> b!85657 (= c!13908 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8142 () Bool)

(declare-fun call!8143 () ListLongMap!1449)

(declare-fun call!8145 () ListLongMap!1449)

(assert (=> bm!8142 (= call!8143 call!8145)))

(declare-fun b!85658 () Bool)

(assert (=> b!85658 (= e!55867 call!8143)))

(declare-fun b!85659 () Bool)

(declare-fun e!55863 () Bool)

(declare-fun e!55869 () Bool)

(assert (=> b!85659 (= e!55863 e!55869)))

(declare-fun res!44097 () Bool)

(assert (=> b!85659 (=> (not res!44097) (not e!55869))))

(assert (=> b!85659 (= res!44097 (contains!752 lt!40533 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85659 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!85660 () Bool)

(assert (=> b!85660 (= e!55865 (not call!8142))))

(declare-fun b!85661 () Bool)

(assert (=> b!85661 (= e!55862 call!8147)))

(declare-fun b!85662 () Bool)

(declare-fun call!8144 () Bool)

(assert (=> b!85662 (= e!55857 (not call!8144))))

(declare-fun b!85663 () Bool)

(assert (=> b!85663 (= e!55857 e!55858)))

(declare-fun res!44101 () Bool)

(assert (=> b!85663 (= res!44101 call!8144)))

(assert (=> b!85663 (=> (not res!44101) (not e!55858))))

(declare-fun b!85664 () Bool)

(assert (=> b!85664 (= e!55864 (= (apply!82 lt!40533 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!85665 () Bool)

(declare-fun res!44104 () Bool)

(assert (=> b!85665 (=> (not res!44104) (not e!55859))))

(assert (=> b!85665 (= res!44104 e!55863)))

(declare-fun res!44099 () Bool)

(assert (=> b!85665 (=> res!44099 e!55863)))

(declare-fun e!55860 () Bool)

(assert (=> b!85665 (= res!44099 (not e!55860))))

(declare-fun res!44102 () Bool)

(assert (=> b!85665 (=> (not res!44102) (not e!55860))))

(assert (=> b!85665 (= res!44102 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8143 () Bool)

(assert (=> bm!8143 (= call!8144 (contains!752 lt!40533 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85666 () Bool)

(assert (=> b!85666 (= e!55859 e!55865)))

(declare-fun c!13904 () Bool)

(assert (=> b!85666 (= c!13904 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85667 () Bool)

(assert (=> b!85667 (= e!55860 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85668 () Bool)

(assert (=> b!85668 (= e!55869 (= (apply!82 lt!40533 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85668 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348))))))

(assert (=> b!85668 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8144 () Bool)

(declare-fun c!13906 () Bool)

(assert (=> bm!8144 (= call!8148 (+!108 (ite c!13907 call!8146 (ite c!13906 call!8145 call!8143)) (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8145 () Bool)

(assert (=> bm!8145 (= call!8145 call!8146)))

(declare-fun b!85669 () Bool)

(assert (=> b!85669 (= e!55867 call!8147)))

(declare-fun b!85670 () Bool)

(assert (=> b!85670 (= e!55861 e!55862)))

(assert (=> b!85670 (= c!13906 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!22141 c!13907) b!85655))

(assert (= (and d!22141 (not c!13907)) b!85670))

(assert (= (and b!85670 c!13906) b!85661))

(assert (= (and b!85670 (not c!13906)) b!85653))

(assert (= (and b!85653 c!13909) b!85669))

(assert (= (and b!85653 (not c!13909)) b!85658))

(assert (= (or b!85669 b!85658) bm!8142))

(assert (= (or b!85661 bm!8142) bm!8145))

(assert (= (or b!85661 b!85669) bm!8139))

(assert (= (or b!85655 bm!8145) bm!8140))

(assert (= (or b!85655 bm!8139) bm!8144))

(assert (= (and d!22141 res!44103) b!85651))

(assert (= (and d!22141 c!13905) b!85654))

(assert (= (and d!22141 (not c!13905)) b!85650))

(assert (= (and d!22141 res!44100) b!85665))

(assert (= (and b!85665 res!44102) b!85667))

(assert (= (and b!85665 (not res!44099)) b!85659))

(assert (= (and b!85659 res!44097) b!85668))

(assert (= (and b!85665 res!44104) b!85657))

(assert (= (and b!85657 c!13908) b!85663))

(assert (= (and b!85657 (not c!13908)) b!85662))

(assert (= (and b!85663 res!44101) b!85652))

(assert (= (or b!85663 b!85662) bm!8143))

(assert (= (and b!85657 res!44096) b!85666))

(assert (= (and b!85666 c!13904) b!85656))

(assert (= (and b!85666 (not c!13904)) b!85660))

(assert (= (and b!85656 res!44098) b!85664))

(assert (= (or b!85656 b!85660) bm!8141))

(declare-fun b_lambda!3805 () Bool)

(assert (=> (not b_lambda!3805) (not b!85668)))

(declare-fun t!5251 () Bool)

(declare-fun tb!1693 () Bool)

(assert (=> (and b!85121 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16)) t!5251) tb!1693))

(declare-fun result!2923 () Bool)

(assert (=> tb!1693 (= result!2923 tp_is_empty!2533)))

(assert (=> b!85668 t!5251))

(declare-fun b_and!5189 () Bool)

(assert (= b_and!5185 (and (=> t!5251 result!2923) b_and!5189)))

(declare-fun t!5253 () Bool)

(declare-fun tb!1695 () Bool)

(assert (=> (and b!85118 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 newMap!16)) t!5253) tb!1695))

(declare-fun result!2925 () Bool)

(assert (= result!2925 result!2923))

(assert (=> b!85668 t!5253))

(declare-fun b_and!5191 () Bool)

(assert (= b_and!5187 (and (=> t!5253 result!2925) b_and!5191)))

(declare-fun m!89961 () Bool)

(assert (=> b!85654 m!89961))

(declare-fun m!89963 () Bool)

(assert (=> b!85654 m!89963))

(declare-fun m!89965 () Bool)

(assert (=> b!85654 m!89965))

(declare-fun m!89967 () Bool)

(assert (=> b!85654 m!89967))

(declare-fun m!89969 () Bool)

(assert (=> b!85654 m!89969))

(declare-fun m!89971 () Bool)

(assert (=> b!85654 m!89971))

(declare-fun m!89973 () Bool)

(assert (=> b!85654 m!89973))

(assert (=> b!85654 m!89967))

(declare-fun m!89975 () Bool)

(assert (=> b!85654 m!89975))

(declare-fun m!89977 () Bool)

(assert (=> b!85654 m!89977))

(declare-fun m!89979 () Bool)

(assert (=> b!85654 m!89979))

(assert (=> b!85654 m!89975))

(assert (=> b!85654 m!89979))

(declare-fun m!89981 () Bool)

(assert (=> b!85654 m!89981))

(declare-fun m!89983 () Bool)

(assert (=> b!85654 m!89983))

(declare-fun m!89985 () Bool)

(assert (=> b!85654 m!89985))

(declare-fun m!89987 () Bool)

(assert (=> b!85654 m!89987))

(declare-fun m!89989 () Bool)

(assert (=> b!85654 m!89989))

(declare-fun m!89991 () Bool)

(assert (=> b!85654 m!89991))

(declare-fun m!89993 () Bool)

(assert (=> b!85654 m!89993))

(assert (=> b!85654 m!89985))

(declare-fun m!89995 () Bool)

(assert (=> bm!8144 m!89995))

(assert (=> b!85659 m!89961))

(assert (=> b!85659 m!89961))

(declare-fun m!89997 () Bool)

(assert (=> b!85659 m!89997))

(declare-fun m!89999 () Bool)

(assert (=> bm!8143 m!89999))

(declare-fun m!90001 () Bool)

(assert (=> d!22141 m!90001))

(declare-fun m!90003 () Bool)

(assert (=> b!85652 m!90003))

(declare-fun m!90005 () Bool)

(assert (=> bm!8141 m!90005))

(assert (=> b!85667 m!89961))

(assert (=> b!85667 m!89961))

(declare-fun m!90007 () Bool)

(assert (=> b!85667 m!90007))

(assert (=> bm!8140 m!89973))

(assert (=> b!85651 m!89961))

(assert (=> b!85651 m!89961))

(assert (=> b!85651 m!90007))

(declare-fun m!90009 () Bool)

(assert (=> b!85655 m!90009))

(assert (=> b!85668 m!89961))

(declare-fun m!90011 () Bool)

(assert (=> b!85668 m!90011))

(declare-fun m!90013 () Bool)

(assert (=> b!85668 m!90013))

(assert (=> b!85668 m!89961))

(declare-fun m!90015 () Bool)

(assert (=> b!85668 m!90015))

(assert (=> b!85668 m!90013))

(assert (=> b!85668 m!90011))

(declare-fun m!90017 () Bool)

(assert (=> b!85668 m!90017))

(declare-fun m!90019 () Bool)

(assert (=> b!85664 m!90019))

(assert (=> bm!8089 d!22141))

(declare-fun bm!8146 () Bool)

(declare-fun call!8154 () ListLongMap!1449)

(declare-fun call!8155 () ListLongMap!1449)

(assert (=> bm!8146 (= call!8154 call!8155)))

(declare-fun bm!8147 () Bool)

(declare-fun call!8153 () ListLongMap!1449)

(assert (=> bm!8147 (= call!8153 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85671 () Bool)

(declare-fun e!55879 () Unit!2510)

(declare-fun Unit!2528 () Unit!2510)

(assert (=> b!85671 (= e!55879 Unit!2528)))

(declare-fun b!85672 () Bool)

(declare-fun e!55881 () Bool)

(assert (=> b!85672 (= e!55881 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85673 () Bool)

(declare-fun e!55871 () Bool)

(declare-fun lt!40555 () ListLongMap!1449)

(assert (=> b!85673 (= e!55871 (= (apply!82 lt!40555 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!85674 () Bool)

(declare-fun c!13915 () Bool)

(assert (=> b!85674 (= c!13915 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!55875 () ListLongMap!1449)

(declare-fun e!55880 () ListLongMap!1449)

(assert (=> b!85674 (= e!55875 e!55880)))

(declare-fun d!22143 () Bool)

(declare-fun e!55872 () Bool)

(assert (=> d!22143 e!55872))

(declare-fun res!44109 () Bool)

(assert (=> d!22143 (=> (not res!44109) (not e!55872))))

(assert (=> d!22143 (= res!44109 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!40564 () ListLongMap!1449)

(assert (=> d!22143 (= lt!40555 lt!40564)))

(declare-fun lt!40547 () Unit!2510)

(assert (=> d!22143 (= lt!40547 e!55879)))

(declare-fun c!13911 () Bool)

(assert (=> d!22143 (= c!13911 e!55881)))

(declare-fun res!44112 () Bool)

(assert (=> d!22143 (=> (not res!44112) (not e!55881))))

(assert (=> d!22143 (= res!44112 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!55874 () ListLongMap!1449)

(assert (=> d!22143 (= lt!40564 e!55874)))

(declare-fun c!13913 () Bool)

(assert (=> d!22143 (= c!13913 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22143 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22143 (= (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40555)))

(declare-fun b!85675 () Bool)

(declare-fun lt!40545 () Unit!2510)

(assert (=> b!85675 (= e!55879 lt!40545)))

(declare-fun lt!40551 () ListLongMap!1449)

(assert (=> b!85675 (= lt!40551 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40548 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40548 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40552 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40552 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40563 () Unit!2510)

(assert (=> b!85675 (= lt!40563 (addStillContains!58 lt!40551 lt!40548 (zeroValue!2229 newMap!16) lt!40552))))

(assert (=> b!85675 (contains!752 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))) lt!40552)))

(declare-fun lt!40562 () Unit!2510)

(assert (=> b!85675 (= lt!40562 lt!40563)))

(declare-fun lt!40544 () ListLongMap!1449)

(assert (=> b!85675 (= lt!40544 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40561 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40561 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40556 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40556 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40550 () Unit!2510)

(assert (=> b!85675 (= lt!40550 (addApplyDifferent!58 lt!40544 lt!40561 (minValue!2229 newMap!16) lt!40556))))

(assert (=> b!85675 (= (apply!82 (+!108 lt!40544 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))) lt!40556) (apply!82 lt!40544 lt!40556))))

(declare-fun lt!40558 () Unit!2510)

(assert (=> b!85675 (= lt!40558 lt!40550)))

(declare-fun lt!40546 () ListLongMap!1449)

(assert (=> b!85675 (= lt!40546 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40557 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40557 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40559 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40559 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40549 () Unit!2510)

(assert (=> b!85675 (= lt!40549 (addApplyDifferent!58 lt!40546 lt!40557 (zeroValue!2229 newMap!16) lt!40559))))

(assert (=> b!85675 (= (apply!82 (+!108 lt!40546 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))) lt!40559) (apply!82 lt!40546 lt!40559))))

(declare-fun lt!40553 () Unit!2510)

(assert (=> b!85675 (= lt!40553 lt!40549)))

(declare-fun lt!40543 () ListLongMap!1449)

(assert (=> b!85675 (= lt!40543 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40554 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40554 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40560 () (_ BitVec 64))

(assert (=> b!85675 (= lt!40560 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85675 (= lt!40545 (addApplyDifferent!58 lt!40543 lt!40554 (minValue!2229 newMap!16) lt!40560))))

(assert (=> b!85675 (= (apply!82 (+!108 lt!40543 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))) lt!40560) (apply!82 lt!40543 lt!40560))))

(declare-fun b!85676 () Bool)

(assert (=> b!85676 (= e!55874 (+!108 call!8155 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!85677 () Bool)

(declare-fun e!55878 () Bool)

(declare-fun e!55877 () Bool)

(assert (=> b!85677 (= e!55878 e!55877)))

(declare-fun res!44107 () Bool)

(declare-fun call!8149 () Bool)

(assert (=> b!85677 (= res!44107 call!8149)))

(assert (=> b!85677 (=> (not res!44107) (not e!55877))))

(declare-fun bm!8148 () Bool)

(assert (=> bm!8148 (= call!8149 (contains!752 lt!40555 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85678 () Bool)

(declare-fun res!44105 () Bool)

(assert (=> b!85678 (=> (not res!44105) (not e!55872))))

(declare-fun e!55870 () Bool)

(assert (=> b!85678 (= res!44105 e!55870)))

(declare-fun c!13914 () Bool)

(assert (=> b!85678 (= c!13914 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8149 () Bool)

(declare-fun call!8150 () ListLongMap!1449)

(declare-fun call!8152 () ListLongMap!1449)

(assert (=> bm!8149 (= call!8150 call!8152)))

(declare-fun b!85679 () Bool)

(assert (=> b!85679 (= e!55880 call!8150)))

(declare-fun b!85680 () Bool)

(declare-fun e!55876 () Bool)

(declare-fun e!55882 () Bool)

(assert (=> b!85680 (= e!55876 e!55882)))

(declare-fun res!44106 () Bool)

(assert (=> b!85680 (=> (not res!44106) (not e!55882))))

(assert (=> b!85680 (= res!44106 (contains!752 lt!40555 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85680 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!85681 () Bool)

(assert (=> b!85681 (= e!55878 (not call!8149))))

(declare-fun b!85682 () Bool)

(assert (=> b!85682 (= e!55875 call!8154)))

(declare-fun b!85683 () Bool)

(declare-fun call!8151 () Bool)

(assert (=> b!85683 (= e!55870 (not call!8151))))

(declare-fun b!85684 () Bool)

(assert (=> b!85684 (= e!55870 e!55871)))

(declare-fun res!44110 () Bool)

(assert (=> b!85684 (= res!44110 call!8151)))

(assert (=> b!85684 (=> (not res!44110) (not e!55871))))

(declare-fun b!85685 () Bool)

(assert (=> b!85685 (= e!55877 (= (apply!82 lt!40555 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!85686 () Bool)

(declare-fun res!44113 () Bool)

(assert (=> b!85686 (=> (not res!44113) (not e!55872))))

(assert (=> b!85686 (= res!44113 e!55876)))

(declare-fun res!44108 () Bool)

(assert (=> b!85686 (=> res!44108 e!55876)))

(declare-fun e!55873 () Bool)

(assert (=> b!85686 (= res!44108 (not e!55873))))

(declare-fun res!44111 () Bool)

(assert (=> b!85686 (=> (not res!44111) (not e!55873))))

(assert (=> b!85686 (= res!44111 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8150 () Bool)

(assert (=> bm!8150 (= call!8151 (contains!752 lt!40555 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85687 () Bool)

(assert (=> b!85687 (= e!55872 e!55878)))

(declare-fun c!13910 () Bool)

(assert (=> b!85687 (= c!13910 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85688 () Bool)

(assert (=> b!85688 (= e!55873 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85689 () Bool)

(assert (=> b!85689 (= e!55882 (= (apply!82 lt!40555 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85689 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (_values!2320 newMap!16))))))

(assert (=> b!85689 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun c!13912 () Bool)

(declare-fun bm!8151 () Bool)

(assert (=> bm!8151 (= call!8155 (+!108 (ite c!13913 call!8153 (ite c!13912 call!8152 call!8150)) (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8152 () Bool)

(assert (=> bm!8152 (= call!8152 call!8153)))

(declare-fun b!85690 () Bool)

(assert (=> b!85690 (= e!55880 call!8154)))

(declare-fun b!85691 () Bool)

(assert (=> b!85691 (= e!55874 e!55875)))

(assert (=> b!85691 (= c!13912 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!22143 c!13913) b!85676))

(assert (= (and d!22143 (not c!13913)) b!85691))

(assert (= (and b!85691 c!13912) b!85682))

(assert (= (and b!85691 (not c!13912)) b!85674))

(assert (= (and b!85674 c!13915) b!85690))

(assert (= (and b!85674 (not c!13915)) b!85679))

(assert (= (or b!85690 b!85679) bm!8149))

(assert (= (or b!85682 bm!8149) bm!8152))

(assert (= (or b!85682 b!85690) bm!8146))

(assert (= (or b!85676 bm!8152) bm!8147))

(assert (= (or b!85676 bm!8146) bm!8151))

(assert (= (and d!22143 res!44112) b!85672))

(assert (= (and d!22143 c!13911) b!85675))

(assert (= (and d!22143 (not c!13911)) b!85671))

(assert (= (and d!22143 res!44109) b!85686))

(assert (= (and b!85686 res!44111) b!85688))

(assert (= (and b!85686 (not res!44108)) b!85680))

(assert (= (and b!85680 res!44106) b!85689))

(assert (= (and b!85686 res!44113) b!85678))

(assert (= (and b!85678 c!13914) b!85684))

(assert (= (and b!85678 (not c!13914)) b!85683))

(assert (= (and b!85684 res!44110) b!85673))

(assert (= (or b!85684 b!85683) bm!8150))

(assert (= (and b!85678 res!44105) b!85687))

(assert (= (and b!85687 c!13910) b!85677))

(assert (= (and b!85687 (not c!13910)) b!85681))

(assert (= (and b!85677 res!44107) b!85685))

(assert (= (or b!85677 b!85681) bm!8148))

(declare-fun b_lambda!3807 () Bool)

(assert (=> (not b_lambda!3807) (not b!85689)))

(assert (=> b!85689 t!5251))

(declare-fun b_and!5193 () Bool)

(assert (= b_and!5189 (and (=> t!5251 result!2923) b_and!5193)))

(assert (=> b!85689 t!5253))

(declare-fun b_and!5195 () Bool)

(assert (= b_and!5191 (and (=> t!5253 result!2925) b_and!5195)))

(assert (=> b!85675 m!89961))

(declare-fun m!90021 () Bool)

(assert (=> b!85675 m!90021))

(declare-fun m!90023 () Bool)

(assert (=> b!85675 m!90023))

(declare-fun m!90025 () Bool)

(assert (=> b!85675 m!90025))

(declare-fun m!90027 () Bool)

(assert (=> b!85675 m!90027))

(declare-fun m!90029 () Bool)

(assert (=> b!85675 m!90029))

(declare-fun m!90031 () Bool)

(assert (=> b!85675 m!90031))

(assert (=> b!85675 m!90025))

(declare-fun m!90033 () Bool)

(assert (=> b!85675 m!90033))

(declare-fun m!90035 () Bool)

(assert (=> b!85675 m!90035))

(declare-fun m!90037 () Bool)

(assert (=> b!85675 m!90037))

(assert (=> b!85675 m!90033))

(assert (=> b!85675 m!90037))

(declare-fun m!90039 () Bool)

(assert (=> b!85675 m!90039))

(declare-fun m!90041 () Bool)

(assert (=> b!85675 m!90041))

(declare-fun m!90043 () Bool)

(assert (=> b!85675 m!90043))

(declare-fun m!90045 () Bool)

(assert (=> b!85675 m!90045))

(declare-fun m!90047 () Bool)

(assert (=> b!85675 m!90047))

(declare-fun m!90049 () Bool)

(assert (=> b!85675 m!90049))

(declare-fun m!90051 () Bool)

(assert (=> b!85675 m!90051))

(assert (=> b!85675 m!90043))

(declare-fun m!90053 () Bool)

(assert (=> bm!8151 m!90053))

(assert (=> b!85680 m!89961))

(assert (=> b!85680 m!89961))

(declare-fun m!90055 () Bool)

(assert (=> b!85680 m!90055))

(declare-fun m!90057 () Bool)

(assert (=> bm!8150 m!90057))

(assert (=> d!22143 m!90001))

(declare-fun m!90059 () Bool)

(assert (=> b!85673 m!90059))

(declare-fun m!90061 () Bool)

(assert (=> bm!8148 m!90061))

(assert (=> b!85688 m!89961))

(assert (=> b!85688 m!89961))

(assert (=> b!85688 m!90007))

(assert (=> bm!8147 m!90031))

(assert (=> b!85672 m!89961))

(assert (=> b!85672 m!89961))

(assert (=> b!85672 m!90007))

(declare-fun m!90063 () Bool)

(assert (=> b!85676 m!90063))

(assert (=> b!85689 m!89961))

(assert (=> b!85689 m!90011))

(declare-fun m!90065 () Bool)

(assert (=> b!85689 m!90065))

(assert (=> b!85689 m!89961))

(declare-fun m!90067 () Bool)

(assert (=> b!85689 m!90067))

(assert (=> b!85689 m!90065))

(assert (=> b!85689 m!90011))

(declare-fun m!90069 () Bool)

(assert (=> b!85689 m!90069))

(declare-fun m!90071 () Bool)

(assert (=> b!85685 m!90071))

(assert (=> b!85380 d!22143))

(declare-fun b!85700 () Bool)

(declare-fun res!44123 () Bool)

(declare-fun e!55885 () Bool)

(assert (=> b!85700 (=> (not res!44123) (not e!55885))))

(assert (=> b!85700 (= res!44123 (and (= (size!2152 (_values!2320 newMap!16)) (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001)) (= (size!2151 (_keys!4008 newMap!16)) (size!2152 (_values!2320 newMap!16))) (bvsge (_size!426 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!426 newMap!16) (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!85701 () Bool)

(declare-fun res!44124 () Bool)

(assert (=> b!85701 (=> (not res!44124) (not e!55885))))

(declare-fun size!2157 (LongMapFixedSize!754) (_ BitVec 32))

(assert (=> b!85701 (= res!44124 (bvsge (size!2157 newMap!16) (_size!426 newMap!16)))))

(declare-fun d!22145 () Bool)

(declare-fun res!44122 () Bool)

(assert (=> d!22145 (=> (not res!44122) (not e!55885))))

(assert (=> d!22145 (= res!44122 (validMask!0 (mask!6364 newMap!16)))))

(assert (=> d!22145 (= (simpleValid!58 newMap!16) e!55885)))

(declare-fun b!85702 () Bool)

(declare-fun res!44125 () Bool)

(assert (=> b!85702 (=> (not res!44125) (not e!55885))))

(assert (=> b!85702 (= res!44125 (= (size!2157 newMap!16) (bvadd (_size!426 newMap!16) (bvsdiv (bvadd (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!85703 () Bool)

(assert (=> b!85703 (= e!55885 (and (bvsge (extraKeys!2176 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!426 newMap!16) #b00000000000000000000000000000000)))))

(assert (= (and d!22145 res!44122) b!85700))

(assert (= (and b!85700 res!44123) b!85701))

(assert (= (and b!85701 res!44124) b!85702))

(assert (= (and b!85702 res!44125) b!85703))

(declare-fun m!90073 () Bool)

(assert (=> b!85701 m!90073))

(assert (=> d!22145 m!90001))

(assert (=> b!85702 m!90073))

(assert (=> d!22071 d!22145))

(declare-fun d!22147 () Bool)

(declare-fun e!55887 () Bool)

(assert (=> d!22147 e!55887))

(declare-fun res!44126 () Bool)

(assert (=> d!22147 (=> res!44126 e!55887)))

(declare-fun lt!40565 () Bool)

(assert (=> d!22147 (= res!44126 (not lt!40565))))

(declare-fun lt!40568 () Bool)

(assert (=> d!22147 (= lt!40565 lt!40568)))

(declare-fun lt!40566 () Unit!2510)

(declare-fun e!55886 () Unit!2510)

(assert (=> d!22147 (= lt!40566 e!55886)))

(declare-fun c!13916 () Bool)

(assert (=> d!22147 (= c!13916 lt!40568)))

(assert (=> d!22147 (= lt!40568 (containsKey!142 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22147 (= (contains!752 lt!40415 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40565)))

(declare-fun b!85704 () Bool)

(declare-fun lt!40567 () Unit!2510)

(assert (=> b!85704 (= e!55886 lt!40567)))

(assert (=> b!85704 (= lt!40567 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85704 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!85705 () Bool)

(declare-fun Unit!2529 () Unit!2510)

(assert (=> b!85705 (= e!55886 Unit!2529)))

(declare-fun b!85706 () Bool)

(assert (=> b!85706 (= e!55887 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22147 c!13916) b!85704))

(assert (= (and d!22147 (not c!13916)) b!85705))

(assert (= (and d!22147 (not res!44126)) b!85706))

(assert (=> d!22147 m!89659))

(declare-fun m!90075 () Bool)

(assert (=> d!22147 m!90075))

(assert (=> b!85704 m!89659))

(declare-fun m!90077 () Bool)

(assert (=> b!85704 m!90077))

(assert (=> b!85704 m!89659))

(declare-fun m!90079 () Bool)

(assert (=> b!85704 m!90079))

(assert (=> b!85704 m!90079))

(declare-fun m!90081 () Bool)

(assert (=> b!85704 m!90081))

(assert (=> b!85706 m!89659))

(assert (=> b!85706 m!90079))

(assert (=> b!85706 m!90079))

(assert (=> b!85706 m!90081))

(assert (=> b!85434 d!22147))

(declare-fun d!22149 () Bool)

(declare-fun isEmpty!340 (List!1525) Bool)

(assert (=> d!22149 (= (isEmpty!339 lt!40471) (isEmpty!340 (toList!740 lt!40471)))))

(declare-fun bs!3611 () Bool)

(assert (= bs!3611 d!22149))

(declare-fun m!90083 () Bool)

(assert (=> bs!3611 m!90083))

(assert (=> b!85496 d!22149))

(declare-fun d!22151 () Bool)

(declare-fun c!13917 () Bool)

(assert (=> d!22151 (= c!13917 (and ((_ is Cons!1521) (toList!740 lt!40451)) (= (_1!1114 (h!2112 (toList!740 lt!40451))) (_1!1114 lt!40143))))))

(declare-fun e!55888 () Option!144)

(assert (=> d!22151 (= (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143)) e!55888)))

(declare-fun b!85710 () Bool)

(declare-fun e!55889 () Option!144)

(assert (=> b!85710 (= e!55889 None!142)))

(declare-fun b!85707 () Bool)

(assert (=> b!85707 (= e!55888 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40451)))))))

(declare-fun b!85709 () Bool)

(assert (=> b!85709 (= e!55889 (getValueByKey!138 (t!5237 (toList!740 lt!40451)) (_1!1114 lt!40143)))))

(declare-fun b!85708 () Bool)

(assert (=> b!85708 (= e!55888 e!55889)))

(declare-fun c!13918 () Bool)

(assert (=> b!85708 (= c!13918 (and ((_ is Cons!1521) (toList!740 lt!40451)) (not (= (_1!1114 (h!2112 (toList!740 lt!40451))) (_1!1114 lt!40143)))))))

(assert (= (and d!22151 c!13917) b!85707))

(assert (= (and d!22151 (not c!13917)) b!85708))

(assert (= (and b!85708 c!13918) b!85709))

(assert (= (and b!85708 (not c!13918)) b!85710))

(declare-fun m!90085 () Bool)

(assert (=> b!85709 m!90085))

(assert (=> b!85465 d!22151))

(declare-fun d!22153 () Bool)

(assert (=> d!22153 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40571 () Unit!2510)

(declare-fun choose!508 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2510)

(assert (=> d!22153 (= lt!40571 (choose!508 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40338 (zeroValue!2229 newMap!16) lt!40142 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22153 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22153 (= (lemmaChangeZeroKeyThenAddPairToListMap!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40338 (zeroValue!2229 newMap!16) lt!40142 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)) lt!40571)))

(declare-fun bs!3612 () Bool)

(assert (= bs!3612 d!22153))

(assert (=> bs!3612 m!90001))

(declare-fun m!90087 () Bool)

(assert (=> bs!3612 m!90087))

(assert (=> bs!3612 m!89631))

(declare-fun m!90089 () Bool)

(assert (=> bs!3612 m!90089))

(declare-fun m!90091 () Bool)

(assert (=> bs!3612 m!90091))

(assert (=> bs!3612 m!89631))

(assert (=> b!85354 d!22153))

(declare-fun d!22155 () Bool)

(declare-fun c!13919 () Bool)

(assert (=> d!22155 (= c!13919 ((_ is ValueCellFull!923) (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!55890 () V!3025)

(assert (=> d!22155 (= (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!55890)))

(declare-fun b!85711 () Bool)

(assert (=> b!85711 (= e!55890 (get!1202 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!85712 () Bool)

(assert (=> b!85712 (= e!55890 (get!1203 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22155 c!13919) b!85711))

(assert (= (and d!22155 (not c!13919)) b!85712))

(assert (=> b!85711 m!89705))

(assert (=> b!85711 m!89407))

(declare-fun m!90093 () Bool)

(assert (=> b!85711 m!90093))

(assert (=> b!85712 m!89705))

(assert (=> b!85712 m!89407))

(declare-fun m!90095 () Bool)

(assert (=> b!85712 m!90095))

(assert (=> b!85500 d!22155))

(declare-fun d!22157 () Bool)

(declare-fun e!55891 () Bool)

(assert (=> d!22157 e!55891))

(declare-fun res!44127 () Bool)

(assert (=> d!22157 (=> (not res!44127) (not e!55891))))

(declare-fun lt!40574 () ListLongMap!1449)

(assert (=> d!22157 (= res!44127 (contains!752 lt!40574 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!40573 () List!1525)

(assert (=> d!22157 (= lt!40574 (ListLongMap!1450 lt!40573))))

(declare-fun lt!40572 () Unit!2510)

(declare-fun lt!40575 () Unit!2510)

(assert (=> d!22157 (= lt!40572 lt!40575)))

(assert (=> d!22157 (= (getValueByKey!138 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22157 (= lt!40575 (lemmaContainsTupThenGetReturnValue!58 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22157 (= lt!40573 (insertStrictlySorted!61 (toList!740 call!8125) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22157 (= (+!108 call!8125 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!40574)))

(declare-fun b!85713 () Bool)

(declare-fun res!44128 () Bool)

(assert (=> b!85713 (=> (not res!44128) (not e!55891))))

(assert (=> b!85713 (= res!44128 (= (getValueByKey!138 (toList!740 lt!40574) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!85714 () Bool)

(assert (=> b!85714 (= e!55891 (contains!753 (toList!740 lt!40574) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22157 res!44127) b!85713))

(assert (= (and b!85713 res!44128) b!85714))

(declare-fun m!90097 () Bool)

(assert (=> d!22157 m!90097))

(declare-fun m!90099 () Bool)

(assert (=> d!22157 m!90099))

(declare-fun m!90101 () Bool)

(assert (=> d!22157 m!90101))

(declare-fun m!90103 () Bool)

(assert (=> d!22157 m!90103))

(declare-fun m!90105 () Bool)

(assert (=> b!85713 m!90105))

(declare-fun m!90107 () Bool)

(assert (=> b!85714 m!90107))

(assert (=> b!85500 d!22157))

(declare-fun d!22159 () Bool)

(declare-fun e!55893 () Bool)

(assert (=> d!22159 e!55893))

(declare-fun res!44129 () Bool)

(assert (=> d!22159 (=> res!44129 e!55893)))

(declare-fun lt!40576 () Bool)

(assert (=> d!22159 (= res!44129 (not lt!40576))))

(declare-fun lt!40579 () Bool)

(assert (=> d!22159 (= lt!40576 lt!40579)))

(declare-fun lt!40577 () Unit!2510)

(declare-fun e!55892 () Unit!2510)

(assert (=> d!22159 (= lt!40577 e!55892)))

(declare-fun c!13920 () Bool)

(assert (=> d!22159 (= c!13920 lt!40579)))

(assert (=> d!22159 (= lt!40579 (containsKey!142 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))

(assert (=> d!22159 (= (contains!752 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)) lt!40467) lt!40576)))

(declare-fun b!85715 () Bool)

(declare-fun lt!40578 () Unit!2510)

(assert (=> b!85715 (= e!55892 lt!40578)))

(assert (=> b!85715 (= lt!40578 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))

(assert (=> b!85715 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))

(declare-fun b!85716 () Bool)

(declare-fun Unit!2530 () Unit!2510)

(assert (=> b!85716 (= e!55892 Unit!2530)))

(declare-fun b!85717 () Bool)

(assert (=> b!85717 (= e!55893 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467)))))

(assert (= (and d!22159 c!13920) b!85715))

(assert (= (and d!22159 (not c!13920)) b!85716))

(assert (= (and d!22159 (not res!44129)) b!85717))

(declare-fun m!90109 () Bool)

(assert (=> d!22159 m!90109))

(declare-fun m!90111 () Bool)

(assert (=> b!85715 m!90111))

(declare-fun m!90113 () Bool)

(assert (=> b!85715 m!90113))

(assert (=> b!85715 m!90113))

(declare-fun m!90115 () Bool)

(assert (=> b!85715 m!90115))

(assert (=> b!85717 m!90113))

(assert (=> b!85717 m!90113))

(assert (=> b!85717 m!90115))

(assert (=> b!85500 d!22159))

(declare-fun d!22161 () Bool)

(declare-fun e!55894 () Bool)

(assert (=> d!22161 e!55894))

(declare-fun res!44130 () Bool)

(assert (=> d!22161 (=> (not res!44130) (not e!55894))))

(declare-fun lt!40582 () ListLongMap!1449)

(assert (=> d!22161 (= res!44130 (contains!752 lt!40582 (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun lt!40581 () List!1525)

(assert (=> d!22161 (= lt!40582 (ListLongMap!1450 lt!40581))))

(declare-fun lt!40580 () Unit!2510)

(declare-fun lt!40583 () Unit!2510)

(assert (=> d!22161 (= lt!40580 lt!40583)))

(assert (=> d!22161 (= (getValueByKey!138 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468))) (Some!143 (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))

(assert (=> d!22161 (= lt!40583 (lemmaContainsTupThenGetReturnValue!58 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))

(assert (=> d!22161 (= lt!40581 (insertStrictlySorted!61 (toList!740 lt!40469) (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))

(assert (=> d!22161 (= (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)) lt!40582)))

(declare-fun b!85718 () Bool)

(declare-fun res!44131 () Bool)

(assert (=> b!85718 (=> (not res!44131) (not e!55894))))

(assert (=> b!85718 (= res!44131 (= (getValueByKey!138 (toList!740 lt!40582) (_1!1114 (tuple2!2207 lt!40470 lt!40468))) (Some!143 (_2!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(declare-fun b!85719 () Bool)

(assert (=> b!85719 (= e!55894 (contains!753 (toList!740 lt!40582) (tuple2!2207 lt!40470 lt!40468)))))

(assert (= (and d!22161 res!44130) b!85718))

(assert (= (and b!85718 res!44131) b!85719))

(declare-fun m!90117 () Bool)

(assert (=> d!22161 m!90117))

(declare-fun m!90119 () Bool)

(assert (=> d!22161 m!90119))

(declare-fun m!90121 () Bool)

(assert (=> d!22161 m!90121))

(declare-fun m!90123 () Bool)

(assert (=> d!22161 m!90123))

(declare-fun m!90125 () Bool)

(assert (=> b!85718 m!90125))

(declare-fun m!90127 () Bool)

(assert (=> b!85719 m!90127))

(assert (=> b!85500 d!22161))

(declare-fun d!22163 () Bool)

(assert (=> d!22163 (not (contains!752 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)) lt!40467))))

(declare-fun lt!40586 () Unit!2510)

(declare-fun choose!509 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2510)

(assert (=> d!22163 (= lt!40586 (choose!509 lt!40469 lt!40470 lt!40468 lt!40467))))

(declare-fun e!55897 () Bool)

(assert (=> d!22163 e!55897))

(declare-fun res!44134 () Bool)

(assert (=> d!22163 (=> (not res!44134) (not e!55897))))

(assert (=> d!22163 (= res!44134 (not (contains!752 lt!40469 lt!40467)))))

(assert (=> d!22163 (= (addStillNotContains!32 lt!40469 lt!40470 lt!40468 lt!40467) lt!40586)))

(declare-fun b!85723 () Bool)

(assert (=> b!85723 (= e!55897 (not (= lt!40470 lt!40467)))))

(assert (= (and d!22163 res!44134) b!85723))

(assert (=> d!22163 m!89795))

(assert (=> d!22163 m!89795))

(assert (=> d!22163 m!89797))

(declare-fun m!90129 () Bool)

(assert (=> d!22163 m!90129))

(declare-fun m!90131 () Bool)

(assert (=> d!22163 m!90131))

(assert (=> b!85500 d!22163))

(declare-fun d!22165 () Bool)

(declare-fun e!55899 () Bool)

(assert (=> d!22165 e!55899))

(declare-fun res!44135 () Bool)

(assert (=> d!22165 (=> res!44135 e!55899)))

(declare-fun lt!40587 () Bool)

(assert (=> d!22165 (= res!44135 (not lt!40587))))

(declare-fun lt!40590 () Bool)

(assert (=> d!22165 (= lt!40587 lt!40590)))

(declare-fun lt!40588 () Unit!2510)

(declare-fun e!55898 () Unit!2510)

(assert (=> d!22165 (= lt!40588 e!55898)))

(declare-fun c!13921 () Bool)

(assert (=> d!22165 (= c!13921 lt!40590)))

(assert (=> d!22165 (= lt!40590 (containsKey!142 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(assert (=> d!22165 (= (contains!752 call!8098 (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))) lt!40587)))

(declare-fun b!85724 () Bool)

(declare-fun lt!40589 () Unit!2510)

(assert (=> b!85724 (= e!55898 lt!40589)))

(assert (=> b!85724 (= lt!40589 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(assert (=> b!85724 (isDefined!92 (getValueByKey!138 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(declare-fun b!85725 () Bool)

(declare-fun Unit!2531 () Unit!2510)

(assert (=> b!85725 (= e!55898 Unit!2531)))

(declare-fun b!85726 () Bool)

(assert (=> b!85726 (= e!55899 (isDefined!92 (getValueByKey!138 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))))

(assert (= (and d!22165 c!13921) b!85724))

(assert (= (and d!22165 (not c!13921)) b!85725))

(assert (= (and d!22165 (not res!44135)) b!85726))

(declare-fun m!90133 () Bool)

(assert (=> d!22165 m!90133))

(declare-fun m!90135 () Bool)

(assert (=> b!85724 m!90135))

(declare-fun m!90137 () Bool)

(assert (=> b!85724 m!90137))

(assert (=> b!85724 m!90137))

(declare-fun m!90139 () Bool)

(assert (=> b!85724 m!90139))

(assert (=> b!85726 m!90137))

(assert (=> b!85726 m!90137))

(assert (=> b!85726 m!90139))

(assert (=> bm!8098 d!22165))

(declare-fun b!85736 () Bool)

(declare-fun e!55906 () Bool)

(declare-fun call!8158 () Bool)

(assert (=> b!85736 (= e!55906 call!8158)))

(declare-fun b!85737 () Bool)

(declare-fun e!55907 () Bool)

(assert (=> b!85737 (= e!55906 e!55907)))

(declare-fun lt!40599 () (_ BitVec 64))

(assert (=> b!85737 (= lt!40599 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40597 () Unit!2510)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4005 (_ BitVec 64) (_ BitVec 32)) Unit!2510)

(assert (=> b!85737 (= lt!40597 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4008 newMap!16) lt!40599 #b00000000000000000000000000000000))))

(assert (=> b!85737 (arrayContainsKey!0 (_keys!4008 newMap!16) lt!40599 #b00000000000000000000000000000000)))

(declare-fun lt!40598 () Unit!2510)

(assert (=> b!85737 (= lt!40598 lt!40597)))

(declare-fun res!44141 () Bool)

(assert (=> b!85737 (= res!44141 (= (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (_keys!4008 newMap!16) (mask!6364 newMap!16)) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!85737 (=> (not res!44141) (not e!55907))))

(declare-fun d!22167 () Bool)

(declare-fun res!44140 () Bool)

(declare-fun e!55908 () Bool)

(assert (=> d!22167 (=> res!44140 e!55908)))

(assert (=> d!22167 (= res!44140 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22167 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 newMap!16) (mask!6364 newMap!16)) e!55908)))

(declare-fun b!85735 () Bool)

(assert (=> b!85735 (= e!55908 e!55906)))

(declare-fun c!13924 () Bool)

(assert (=> b!85735 (= c!13924 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!8155 () Bool)

(assert (=> bm!8155 (= call!8158 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!85738 () Bool)

(assert (=> b!85738 (= e!55907 call!8158)))

(assert (= (and d!22167 (not res!44140)) b!85735))

(assert (= (and b!85735 c!13924) b!85737))

(assert (= (and b!85735 (not c!13924)) b!85736))

(assert (= (and b!85737 res!44141) b!85738))

(assert (= (or b!85738 b!85736) bm!8155))

(assert (=> b!85737 m!89961))

(declare-fun m!90141 () Bool)

(assert (=> b!85737 m!90141))

(declare-fun m!90143 () Bool)

(assert (=> b!85737 m!90143))

(assert (=> b!85737 m!89961))

(declare-fun m!90145 () Bool)

(assert (=> b!85737 m!90145))

(assert (=> b!85735 m!89961))

(assert (=> b!85735 m!89961))

(assert (=> b!85735 m!90007))

(declare-fun m!90147 () Bool)

(assert (=> bm!8155 m!90147))

(assert (=> b!85453 d!22167))

(declare-fun d!22169 () Bool)

(declare-fun res!44142 () Bool)

(declare-fun e!55909 () Bool)

(assert (=> d!22169 (=> res!44142 e!55909)))

(assert (=> d!22169 (= res!44142 (= (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22169 (= (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000) e!55909)))

(declare-fun b!85739 () Bool)

(declare-fun e!55910 () Bool)

(assert (=> b!85739 (= e!55909 e!55910)))

(declare-fun res!44143 () Bool)

(assert (=> b!85739 (=> (not res!44143) (not e!55910))))

(assert (=> b!85739 (= res!44143 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!85740 () Bool)

(assert (=> b!85740 (= e!55910 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22169 (not res!44142)) b!85739))

(assert (= (and b!85739 res!44143) b!85740))

(assert (=> d!22169 m!89961))

(assert (=> b!85740 m!89403))

(declare-fun m!90149 () Bool)

(assert (=> b!85740 m!90149))

(assert (=> bm!8092 d!22169))

(declare-fun d!22171 () Bool)

(declare-fun c!13925 () Bool)

(assert (=> d!22171 (= c!13925 (and ((_ is Cons!1521) (toList!740 lt!40480)) (= (_1!1114 (h!2112 (toList!740 lt!40480))) (_1!1114 lt!40153))))))

(declare-fun e!55911 () Option!144)

(assert (=> d!22171 (= (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153)) e!55911)))

(declare-fun b!85744 () Bool)

(declare-fun e!55912 () Option!144)

(assert (=> b!85744 (= e!55912 None!142)))

(declare-fun b!85741 () Bool)

(assert (=> b!85741 (= e!55911 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40480)))))))

(declare-fun b!85743 () Bool)

(assert (=> b!85743 (= e!55912 (getValueByKey!138 (t!5237 (toList!740 lt!40480)) (_1!1114 lt!40153)))))

(declare-fun b!85742 () Bool)

(assert (=> b!85742 (= e!55911 e!55912)))

(declare-fun c!13926 () Bool)

(assert (=> b!85742 (= c!13926 (and ((_ is Cons!1521) (toList!740 lt!40480)) (not (= (_1!1114 (h!2112 (toList!740 lt!40480))) (_1!1114 lt!40153)))))))

(assert (= (and d!22171 c!13925) b!85741))

(assert (= (and d!22171 (not c!13925)) b!85742))

(assert (= (and b!85742 c!13926) b!85743))

(assert (= (and b!85742 (not c!13926)) b!85744))

(declare-fun m!90151 () Bool)

(assert (=> b!85743 m!90151))

(assert (=> b!85505 d!22171))

(declare-fun d!22173 () Bool)

(declare-fun e!55915 () Bool)

(assert (=> d!22173 e!55915))

(declare-fun res!44149 () Bool)

(assert (=> d!22173 (=> (not res!44149) (not e!55915))))

(declare-fun lt!40604 () SeekEntryResult!246)

(assert (=> d!22173 (= res!44149 ((_ is Found!246) lt!40604))))

(assert (=> d!22173 (= lt!40604 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun lt!40605 () Unit!2510)

(declare-fun choose!510 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2510)

(assert (=> d!22173 (= lt!40605 (choose!510 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22173 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22173 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) lt!40605)))

(declare-fun b!85749 () Bool)

(declare-fun res!44148 () Bool)

(assert (=> b!85749 (=> (not res!44148) (not e!55915))))

(assert (=> b!85749 (= res!44148 (inRange!0 (index!3122 lt!40604) (mask!6364 newMap!16)))))

(declare-fun b!85750 () Bool)

(assert (=> b!85750 (= e!55915 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40604)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!85750 (and (bvsge (index!3122 lt!40604) #b00000000000000000000000000000000) (bvslt (index!3122 lt!40604) (size!2151 (_keys!4008 newMap!16))))))

(assert (= (and d!22173 res!44149) b!85749))

(assert (= (and b!85749 res!44148) b!85750))

(assert (=> d!22173 m!89403))

(assert (=> d!22173 m!89629))

(assert (=> d!22173 m!89403))

(declare-fun m!90153 () Bool)

(assert (=> d!22173 m!90153))

(assert (=> d!22173 m!90001))

(declare-fun m!90155 () Bool)

(assert (=> b!85749 m!90155))

(declare-fun m!90157 () Bool)

(assert (=> b!85750 m!90157))

(assert (=> bm!8075 d!22173))

(declare-fun d!22175 () Bool)

(assert (=> d!22175 (= (map!1186 (_2!1113 lt!40354)) (getCurrentListMap!426 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))))))

(declare-fun bs!3613 () Bool)

(assert (= bs!3613 d!22175))

(declare-fun m!90159 () Bool)

(assert (=> bs!3613 m!90159))

(assert (=> bm!8091 d!22175))

(declare-fun d!22177 () Bool)

(assert (=> d!22177 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40608 () Unit!2510)

(declare-fun choose!511 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 V!3025 Int) Unit!2510)

(assert (=> d!22177 (= lt!40608 (choose!511 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40355 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40142 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22177 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22177 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40355 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40142 (defaultEntry!2337 newMap!16)) lt!40608)))

(declare-fun bs!3614 () Bool)

(assert (= bs!3614 d!22177))

(declare-fun m!90161 () Bool)

(assert (=> bs!3614 m!90161))

(assert (=> bs!3614 m!89631))

(assert (=> bs!3614 m!90001))

(declare-fun m!90163 () Bool)

(assert (=> bs!3614 m!90163))

(assert (=> bs!3614 m!89631))

(declare-fun m!90165 () Bool)

(assert (=> bs!3614 m!90165))

(assert (=> b!85382 d!22177))

(declare-fun d!22179 () Bool)

(declare-fun c!13927 () Bool)

(assert (=> d!22179 (= c!13927 (and ((_ is Cons!1521) (toList!740 lt!40476)) (= (_1!1114 (h!2112 (toList!740 lt!40476))) (_1!1114 lt!40153))))))

(declare-fun e!55916 () Option!144)

(assert (=> d!22179 (= (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153)) e!55916)))

(declare-fun b!85754 () Bool)

(declare-fun e!55917 () Option!144)

(assert (=> b!85754 (= e!55917 None!142)))

(declare-fun b!85751 () Bool)

(assert (=> b!85751 (= e!55916 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40476)))))))

(declare-fun b!85753 () Bool)

(assert (=> b!85753 (= e!55917 (getValueByKey!138 (t!5237 (toList!740 lt!40476)) (_1!1114 lt!40153)))))

(declare-fun b!85752 () Bool)

(assert (=> b!85752 (= e!55916 e!55917)))

(declare-fun c!13928 () Bool)

(assert (=> b!85752 (= c!13928 (and ((_ is Cons!1521) (toList!740 lt!40476)) (not (= (_1!1114 (h!2112 (toList!740 lt!40476))) (_1!1114 lt!40153)))))))

(assert (= (and d!22179 c!13927) b!85751))

(assert (= (and d!22179 (not c!13927)) b!85752))

(assert (= (and b!85752 c!13928) b!85753))

(assert (= (and b!85752 (not c!13928)) b!85754))

(declare-fun m!90167 () Bool)

(assert (=> b!85753 m!90167))

(assert (=> b!85503 d!22179))

(declare-fun d!22181 () Bool)

(declare-fun e!55919 () Bool)

(assert (=> d!22181 e!55919))

(declare-fun res!44150 () Bool)

(assert (=> d!22181 (=> res!44150 e!55919)))

(declare-fun lt!40609 () Bool)

(assert (=> d!22181 (= res!44150 (not lt!40609))))

(declare-fun lt!40612 () Bool)

(assert (=> d!22181 (= lt!40609 lt!40612)))

(declare-fun lt!40610 () Unit!2510)

(declare-fun e!55918 () Unit!2510)

(assert (=> d!22181 (= lt!40610 e!55918)))

(declare-fun c!13929 () Bool)

(assert (=> d!22181 (= c!13929 lt!40612)))

(assert (=> d!22181 (= lt!40612 (containsKey!142 (toList!740 lt!40443) (_1!1114 lt!40143)))))

(assert (=> d!22181 (= (contains!752 lt!40443 (_1!1114 lt!40143)) lt!40609)))

(declare-fun b!85755 () Bool)

(declare-fun lt!40611 () Unit!2510)

(assert (=> b!85755 (= e!55918 lt!40611)))

(assert (=> b!85755 (= lt!40611 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40443) (_1!1114 lt!40143)))))

(assert (=> b!85755 (isDefined!92 (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143)))))

(declare-fun b!85756 () Bool)

(declare-fun Unit!2532 () Unit!2510)

(assert (=> b!85756 (= e!55918 Unit!2532)))

(declare-fun b!85757 () Bool)

(assert (=> b!85757 (= e!55919 (isDefined!92 (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143))))))

(assert (= (and d!22181 c!13929) b!85755))

(assert (= (and d!22181 (not c!13929)) b!85756))

(assert (= (and d!22181 (not res!44150)) b!85757))

(declare-fun m!90169 () Bool)

(assert (=> d!22181 m!90169))

(declare-fun m!90171 () Bool)

(assert (=> b!85755 m!90171))

(assert (=> b!85755 m!89761))

(assert (=> b!85755 m!89761))

(declare-fun m!90173 () Bool)

(assert (=> b!85755 m!90173))

(assert (=> b!85757 m!89761))

(assert (=> b!85757 m!89761))

(assert (=> b!85757 m!90173))

(assert (=> d!22079 d!22181))

(declare-fun d!22183 () Bool)

(declare-fun c!13930 () Bool)

(assert (=> d!22183 (= c!13930 (and ((_ is Cons!1521) lt!40442) (= (_1!1114 (h!2112 lt!40442)) (_1!1114 lt!40143))))))

(declare-fun e!55920 () Option!144)

(assert (=> d!22183 (= (getValueByKey!138 lt!40442 (_1!1114 lt!40143)) e!55920)))

(declare-fun b!85761 () Bool)

(declare-fun e!55921 () Option!144)

(assert (=> b!85761 (= e!55921 None!142)))

(declare-fun b!85758 () Bool)

(assert (=> b!85758 (= e!55920 (Some!143 (_2!1114 (h!2112 lt!40442))))))

(declare-fun b!85760 () Bool)

(assert (=> b!85760 (= e!55921 (getValueByKey!138 (t!5237 lt!40442) (_1!1114 lt!40143)))))

(declare-fun b!85759 () Bool)

(assert (=> b!85759 (= e!55920 e!55921)))

(declare-fun c!13931 () Bool)

(assert (=> b!85759 (= c!13931 (and ((_ is Cons!1521) lt!40442) (not (= (_1!1114 (h!2112 lt!40442)) (_1!1114 lt!40143)))))))

(assert (= (and d!22183 c!13930) b!85758))

(assert (= (and d!22183 (not c!13930)) b!85759))

(assert (= (and b!85759 c!13931) b!85760))

(assert (= (and b!85759 (not c!13931)) b!85761))

(declare-fun m!90175 () Bool)

(assert (=> b!85760 m!90175))

(assert (=> d!22079 d!22183))

(declare-fun d!22185 () Bool)

(assert (=> d!22185 (= (getValueByKey!138 lt!40442 (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143)))))

(declare-fun lt!40613 () Unit!2510)

(assert (=> d!22185 (= lt!40613 (choose!507 lt!40442 (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(declare-fun e!55922 () Bool)

(assert (=> d!22185 e!55922))

(declare-fun res!44151 () Bool)

(assert (=> d!22185 (=> (not res!44151) (not e!55922))))

(assert (=> d!22185 (= res!44151 (isStrictlySorted!293 lt!40442))))

(assert (=> d!22185 (= (lemmaContainsTupThenGetReturnValue!58 lt!40442 (_1!1114 lt!40143) (_2!1114 lt!40143)) lt!40613)))

(declare-fun b!85762 () Bool)

(declare-fun res!44152 () Bool)

(assert (=> b!85762 (=> (not res!44152) (not e!55922))))

(assert (=> b!85762 (= res!44152 (containsKey!142 lt!40442 (_1!1114 lt!40143)))))

(declare-fun b!85763 () Bool)

(assert (=> b!85763 (= e!55922 (contains!753 lt!40442 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(assert (= (and d!22185 res!44151) b!85762))

(assert (= (and b!85762 res!44152) b!85763))

(assert (=> d!22185 m!89755))

(declare-fun m!90177 () Bool)

(assert (=> d!22185 m!90177))

(declare-fun m!90179 () Bool)

(assert (=> d!22185 m!90179))

(declare-fun m!90181 () Bool)

(assert (=> b!85762 m!90181))

(declare-fun m!90183 () Bool)

(assert (=> b!85763 m!90183))

(assert (=> d!22079 d!22185))

(declare-fun b!85764 () Bool)

(declare-fun e!55925 () List!1525)

(assert (=> b!85764 (= e!55925 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40154)) (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(declare-fun b!85765 () Bool)

(declare-fun c!13934 () Bool)

(declare-fun c!13935 () Bool)

(assert (=> b!85765 (= e!55925 (ite c!13934 (t!5237 (toList!740 lt!40154)) (ite c!13935 (Cons!1521 (h!2112 (toList!740 lt!40154)) (t!5237 (toList!740 lt!40154))) Nil!1522)))))

(declare-fun b!85766 () Bool)

(declare-fun e!55926 () List!1525)

(declare-fun call!8160 () List!1525)

(assert (=> b!85766 (= e!55926 call!8160)))

(declare-fun b!85767 () Bool)

(declare-fun e!55923 () List!1525)

(declare-fun call!8159 () List!1525)

(assert (=> b!85767 (= e!55923 call!8159)))

(declare-fun b!85768 () Bool)

(assert (=> b!85768 (= c!13935 (and ((_ is Cons!1521) (toList!740 lt!40154)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40154))) (_1!1114 lt!40143))))))

(declare-fun e!55927 () List!1525)

(assert (=> b!85768 (= e!55923 e!55927)))

(declare-fun b!85769 () Bool)

(declare-fun res!44153 () Bool)

(declare-fun e!55924 () Bool)

(assert (=> b!85769 (=> (not res!44153) (not e!55924))))

(declare-fun lt!40614 () List!1525)

(assert (=> b!85769 (= res!44153 (containsKey!142 lt!40614 (_1!1114 lt!40143)))))

(declare-fun b!85771 () Bool)

(declare-fun call!8161 () List!1525)

(assert (=> b!85771 (= e!55927 call!8161)))

(declare-fun b!85772 () Bool)

(assert (=> b!85772 (= e!55924 (contains!753 lt!40614 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun bm!8156 () Bool)

(declare-fun c!13933 () Bool)

(assert (=> bm!8156 (= call!8160 ($colon$colon!71 e!55925 (ite c!13933 (h!2112 (toList!740 lt!40154)) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143)))))))

(declare-fun c!13932 () Bool)

(assert (=> bm!8156 (= c!13932 c!13933)))

(declare-fun bm!8157 () Bool)

(assert (=> bm!8157 (= call!8161 call!8159)))

(declare-fun b!85770 () Bool)

(assert (=> b!85770 (= e!55927 call!8161)))

(declare-fun d!22187 () Bool)

(assert (=> d!22187 e!55924))

(declare-fun res!44154 () Bool)

(assert (=> d!22187 (=> (not res!44154) (not e!55924))))

(assert (=> d!22187 (= res!44154 (isStrictlySorted!293 lt!40614))))

(assert (=> d!22187 (= lt!40614 e!55926)))

(assert (=> d!22187 (= c!13933 (and ((_ is Cons!1521) (toList!740 lt!40154)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40154))) (_1!1114 lt!40143))))))

(assert (=> d!22187 (isStrictlySorted!293 (toList!740 lt!40154))))

(assert (=> d!22187 (= (insertStrictlySorted!61 (toList!740 lt!40154) (_1!1114 lt!40143) (_2!1114 lt!40143)) lt!40614)))

(declare-fun b!85773 () Bool)

(assert (=> b!85773 (= e!55926 e!55923)))

(assert (=> b!85773 (= c!13934 (and ((_ is Cons!1521) (toList!740 lt!40154)) (= (_1!1114 (h!2112 (toList!740 lt!40154))) (_1!1114 lt!40143))))))

(declare-fun bm!8158 () Bool)

(assert (=> bm!8158 (= call!8159 call!8160)))

(assert (= (and d!22187 c!13933) b!85766))

(assert (= (and d!22187 (not c!13933)) b!85773))

(assert (= (and b!85773 c!13934) b!85767))

(assert (= (and b!85773 (not c!13934)) b!85768))

(assert (= (and b!85768 c!13935) b!85771))

(assert (= (and b!85768 (not c!13935)) b!85770))

(assert (= (or b!85771 b!85770) bm!8157))

(assert (= (or b!85767 bm!8157) bm!8158))

(assert (= (or b!85766 bm!8158) bm!8156))

(assert (= (and bm!8156 c!13932) b!85764))

(assert (= (and bm!8156 (not c!13932)) b!85765))

(assert (= (and d!22187 res!44154) b!85769))

(assert (= (and b!85769 res!44153) b!85772))

(declare-fun m!90185 () Bool)

(assert (=> d!22187 m!90185))

(declare-fun m!90187 () Bool)

(assert (=> d!22187 m!90187))

(declare-fun m!90189 () Bool)

(assert (=> b!85772 m!90189))

(declare-fun m!90191 () Bool)

(assert (=> b!85769 m!90191))

(declare-fun m!90193 () Bool)

(assert (=> b!85764 m!90193))

(declare-fun m!90195 () Bool)

(assert (=> bm!8156 m!90195))

(assert (=> d!22079 d!22187))

(assert (=> bm!8114 d!22085))

(assert (=> b!85442 d!22123))

(declare-fun d!22189 () Bool)

(declare-fun e!55928 () Bool)

(assert (=> d!22189 e!55928))

(declare-fun res!44155 () Bool)

(assert (=> d!22189 (=> (not res!44155) (not e!55928))))

(declare-fun lt!40617 () ListLongMap!1449)

(assert (=> d!22189 (= res!44155 (contains!752 lt!40617 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!40616 () List!1525)

(assert (=> d!22189 (= lt!40617 (ListLongMap!1450 lt!40616))))

(declare-fun lt!40615 () Unit!2510)

(declare-fun lt!40618 () Unit!2510)

(assert (=> d!22189 (= lt!40615 lt!40618)))

(assert (=> d!22189 (= (getValueByKey!138 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22189 (= lt!40618 (lemmaContainsTupThenGetReturnValue!58 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22189 (= lt!40616 (insertStrictlySorted!61 (toList!740 call!8089) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22189 (= (+!108 call!8089 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!40617)))

(declare-fun b!85774 () Bool)

(declare-fun res!44156 () Bool)

(assert (=> b!85774 (=> (not res!44156) (not e!55928))))

(assert (=> b!85774 (= res!44156 (= (getValueByKey!138 (toList!740 lt!40617) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!85775 () Bool)

(assert (=> b!85775 (= e!55928 (contains!753 (toList!740 lt!40617) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22189 res!44155) b!85774))

(assert (= (and b!85774 res!44156) b!85775))

(declare-fun m!90197 () Bool)

(assert (=> d!22189 m!90197))

(declare-fun m!90199 () Bool)

(assert (=> d!22189 m!90199))

(declare-fun m!90201 () Bool)

(assert (=> d!22189 m!90201))

(declare-fun m!90203 () Bool)

(assert (=> d!22189 m!90203))

(declare-fun m!90205 () Bool)

(assert (=> b!85774 m!90205))

(declare-fun m!90207 () Bool)

(assert (=> b!85775 m!90207))

(assert (=> b!85370 d!22189))

(declare-fun d!22191 () Bool)

(declare-fun lt!40619 () Bool)

(assert (=> d!22191 (= lt!40619 (select (content!89 (toList!740 lt!40480)) lt!40153))))

(declare-fun e!55929 () Bool)

(assert (=> d!22191 (= lt!40619 e!55929)))

(declare-fun res!44157 () Bool)

(assert (=> d!22191 (=> (not res!44157) (not e!55929))))

(assert (=> d!22191 (= res!44157 ((_ is Cons!1521) (toList!740 lt!40480)))))

(assert (=> d!22191 (= (contains!753 (toList!740 lt!40480) lt!40153) lt!40619)))

(declare-fun b!85776 () Bool)

(declare-fun e!55930 () Bool)

(assert (=> b!85776 (= e!55929 e!55930)))

(declare-fun res!44158 () Bool)

(assert (=> b!85776 (=> res!44158 e!55930)))

(assert (=> b!85776 (= res!44158 (= (h!2112 (toList!740 lt!40480)) lt!40153))))

(declare-fun b!85777 () Bool)

(assert (=> b!85777 (= e!55930 (contains!753 (t!5237 (toList!740 lt!40480)) lt!40153))))

(assert (= (and d!22191 res!44157) b!85776))

(assert (= (and b!85776 (not res!44158)) b!85777))

(declare-fun m!90209 () Bool)

(assert (=> d!22191 m!90209))

(declare-fun m!90211 () Bool)

(assert (=> d!22191 m!90211))

(declare-fun m!90213 () Bool)

(assert (=> b!85777 m!90213))

(assert (=> b!85506 d!22191))

(assert (=> bm!8085 d!22063))

(declare-fun d!22193 () Bool)

(declare-fun e!55932 () Bool)

(assert (=> d!22193 e!55932))

(declare-fun res!44159 () Bool)

(assert (=> d!22193 (=> res!44159 e!55932)))

(declare-fun lt!40620 () Bool)

(assert (=> d!22193 (= res!44159 (not lt!40620))))

(declare-fun lt!40623 () Bool)

(assert (=> d!22193 (= lt!40620 lt!40623)))

(declare-fun lt!40621 () Unit!2510)

(declare-fun e!55931 () Unit!2510)

(assert (=> d!22193 (= lt!40621 e!55931)))

(declare-fun c!13936 () Bool)

(assert (=> d!22193 (= c!13936 lt!40623)))

(assert (=> d!22193 (= lt!40623 (containsKey!142 (toList!740 lt!40447) (_1!1114 lt!40140)))))

(assert (=> d!22193 (= (contains!752 lt!40447 (_1!1114 lt!40140)) lt!40620)))

(declare-fun b!85778 () Bool)

(declare-fun lt!40622 () Unit!2510)

(assert (=> b!85778 (= e!55931 lt!40622)))

(assert (=> b!85778 (= lt!40622 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40447) (_1!1114 lt!40140)))))

(assert (=> b!85778 (isDefined!92 (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140)))))

(declare-fun b!85779 () Bool)

(declare-fun Unit!2533 () Unit!2510)

(assert (=> b!85779 (= e!55931 Unit!2533)))

(declare-fun b!85780 () Bool)

(assert (=> b!85780 (= e!55932 (isDefined!92 (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140))))))

(assert (= (and d!22193 c!13936) b!85778))

(assert (= (and d!22193 (not c!13936)) b!85779))

(assert (= (and d!22193 (not res!44159)) b!85780))

(declare-fun m!90215 () Bool)

(assert (=> d!22193 m!90215))

(declare-fun m!90217 () Bool)

(assert (=> b!85778 m!90217))

(assert (=> b!85778 m!89773))

(assert (=> b!85778 m!89773))

(declare-fun m!90219 () Bool)

(assert (=> b!85778 m!90219))

(assert (=> b!85780 m!89773))

(assert (=> b!85780 m!89773))

(assert (=> b!85780 m!90219))

(assert (=> d!22081 d!22193))

(declare-fun d!22195 () Bool)

(declare-fun c!13937 () Bool)

(assert (=> d!22195 (= c!13937 (and ((_ is Cons!1521) lt!40446) (= (_1!1114 (h!2112 lt!40446)) (_1!1114 lt!40140))))))

(declare-fun e!55933 () Option!144)

(assert (=> d!22195 (= (getValueByKey!138 lt!40446 (_1!1114 lt!40140)) e!55933)))

(declare-fun b!85784 () Bool)

(declare-fun e!55934 () Option!144)

(assert (=> b!85784 (= e!55934 None!142)))

(declare-fun b!85781 () Bool)

(assert (=> b!85781 (= e!55933 (Some!143 (_2!1114 (h!2112 lt!40446))))))

(declare-fun b!85783 () Bool)

(assert (=> b!85783 (= e!55934 (getValueByKey!138 (t!5237 lt!40446) (_1!1114 lt!40140)))))

(declare-fun b!85782 () Bool)

(assert (=> b!85782 (= e!55933 e!55934)))

(declare-fun c!13938 () Bool)

(assert (=> b!85782 (= c!13938 (and ((_ is Cons!1521) lt!40446) (not (= (_1!1114 (h!2112 lt!40446)) (_1!1114 lt!40140)))))))

(assert (= (and d!22195 c!13937) b!85781))

(assert (= (and d!22195 (not c!13937)) b!85782))

(assert (= (and b!85782 c!13938) b!85783))

(assert (= (and b!85782 (not c!13938)) b!85784))

(declare-fun m!90221 () Bool)

(assert (=> b!85783 m!90221))

(assert (=> d!22081 d!22195))

(declare-fun d!22197 () Bool)

(assert (=> d!22197 (= (getValueByKey!138 lt!40446 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(declare-fun lt!40624 () Unit!2510)

(assert (=> d!22197 (= lt!40624 (choose!507 lt!40446 (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun e!55935 () Bool)

(assert (=> d!22197 e!55935))

(declare-fun res!44160 () Bool)

(assert (=> d!22197 (=> (not res!44160) (not e!55935))))

(assert (=> d!22197 (= res!44160 (isStrictlySorted!293 lt!40446))))

(assert (=> d!22197 (= (lemmaContainsTupThenGetReturnValue!58 lt!40446 (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40624)))

(declare-fun b!85785 () Bool)

(declare-fun res!44161 () Bool)

(assert (=> b!85785 (=> (not res!44161) (not e!55935))))

(assert (=> b!85785 (= res!44161 (containsKey!142 lt!40446 (_1!1114 lt!40140)))))

(declare-fun b!85786 () Bool)

(assert (=> b!85786 (= e!55935 (contains!753 lt!40446 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!22197 res!44160) b!85785))

(assert (= (and b!85785 res!44161) b!85786))

(assert (=> d!22197 m!89767))

(declare-fun m!90223 () Bool)

(assert (=> d!22197 m!90223))

(declare-fun m!90225 () Bool)

(assert (=> d!22197 m!90225))

(declare-fun m!90227 () Bool)

(assert (=> b!85785 m!90227))

(declare-fun m!90229 () Bool)

(assert (=> b!85786 m!90229))

(assert (=> d!22081 d!22197))

(declare-fun b!85787 () Bool)

(declare-fun e!55938 () List!1525)

(assert (=> b!85787 (= e!55938 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40150)) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun c!13942 () Bool)

(declare-fun c!13941 () Bool)

(declare-fun b!85788 () Bool)

(assert (=> b!85788 (= e!55938 (ite c!13941 (t!5237 (toList!740 lt!40150)) (ite c!13942 (Cons!1521 (h!2112 (toList!740 lt!40150)) (t!5237 (toList!740 lt!40150))) Nil!1522)))))

(declare-fun b!85789 () Bool)

(declare-fun e!55939 () List!1525)

(declare-fun call!8163 () List!1525)

(assert (=> b!85789 (= e!55939 call!8163)))

(declare-fun b!85790 () Bool)

(declare-fun e!55936 () List!1525)

(declare-fun call!8162 () List!1525)

(assert (=> b!85790 (= e!55936 call!8162)))

(declare-fun b!85791 () Bool)

(assert (=> b!85791 (= c!13942 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 lt!40140))))))

(declare-fun e!55940 () List!1525)

(assert (=> b!85791 (= e!55936 e!55940)))

(declare-fun b!85792 () Bool)

(declare-fun res!44162 () Bool)

(declare-fun e!55937 () Bool)

(assert (=> b!85792 (=> (not res!44162) (not e!55937))))

(declare-fun lt!40625 () List!1525)

(assert (=> b!85792 (= res!44162 (containsKey!142 lt!40625 (_1!1114 lt!40140)))))

(declare-fun b!85794 () Bool)

(declare-fun call!8164 () List!1525)

(assert (=> b!85794 (= e!55940 call!8164)))

(declare-fun b!85795 () Bool)

(assert (=> b!85795 (= e!55937 (contains!753 lt!40625 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun c!13940 () Bool)

(declare-fun bm!8159 () Bool)

(assert (=> bm!8159 (= call!8163 ($colon$colon!71 e!55938 (ite c!13940 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))))))

(declare-fun c!13939 () Bool)

(assert (=> bm!8159 (= c!13939 c!13940)))

(declare-fun bm!8160 () Bool)

(assert (=> bm!8160 (= call!8164 call!8162)))

(declare-fun b!85793 () Bool)

(assert (=> b!85793 (= e!55940 call!8164)))

(declare-fun d!22199 () Bool)

(assert (=> d!22199 e!55937))

(declare-fun res!44163 () Bool)

(assert (=> d!22199 (=> (not res!44163) (not e!55937))))

(assert (=> d!22199 (= res!44163 (isStrictlySorted!293 lt!40625))))

(assert (=> d!22199 (= lt!40625 e!55939)))

(assert (=> d!22199 (= c!13940 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 lt!40140))))))

(assert (=> d!22199 (isStrictlySorted!293 (toList!740 lt!40150))))

(assert (=> d!22199 (= (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40625)))

(declare-fun b!85796 () Bool)

(assert (=> b!85796 (= e!55939 e!55936)))

(assert (=> b!85796 (= c!13941 (and ((_ is Cons!1521) (toList!740 lt!40150)) (= (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 lt!40140))))))

(declare-fun bm!8161 () Bool)

(assert (=> bm!8161 (= call!8162 call!8163)))

(assert (= (and d!22199 c!13940) b!85789))

(assert (= (and d!22199 (not c!13940)) b!85796))

(assert (= (and b!85796 c!13941) b!85790))

(assert (= (and b!85796 (not c!13941)) b!85791))

(assert (= (and b!85791 c!13942) b!85794))

(assert (= (and b!85791 (not c!13942)) b!85793))

(assert (= (or b!85794 b!85793) bm!8160))

(assert (= (or b!85790 bm!8160) bm!8161))

(assert (= (or b!85789 bm!8161) bm!8159))

(assert (= (and bm!8159 c!13939) b!85787))

(assert (= (and bm!8159 (not c!13939)) b!85788))

(assert (= (and d!22199 res!44163) b!85792))

(assert (= (and b!85792 res!44162) b!85795))

(declare-fun m!90231 () Bool)

(assert (=> d!22199 m!90231))

(declare-fun m!90233 () Bool)

(assert (=> d!22199 m!90233))

(declare-fun m!90235 () Bool)

(assert (=> b!85795 m!90235))

(declare-fun m!90237 () Bool)

(assert (=> b!85792 m!90237))

(declare-fun m!90239 () Bool)

(assert (=> b!85787 m!90239))

(declare-fun m!90241 () Bool)

(assert (=> bm!8159 m!90241))

(assert (=> d!22081 d!22199))

(assert (=> b!85426 d!22123))

(declare-fun d!22201 () Bool)

(declare-fun e!55941 () Bool)

(assert (=> d!22201 e!55941))

(declare-fun res!44164 () Bool)

(assert (=> d!22201 (=> (not res!44164) (not e!55941))))

(declare-fun lt!40628 () ListLongMap!1449)

(assert (=> d!22201 (= res!44164 (contains!752 lt!40628 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun lt!40627 () List!1525)

(assert (=> d!22201 (= lt!40628 (ListLongMap!1450 lt!40627))))

(declare-fun lt!40626 () Unit!2510)

(declare-fun lt!40629 () Unit!2510)

(assert (=> d!22201 (= lt!40626 lt!40629)))

(assert (=> d!22201 (= (getValueByKey!138 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (Some!143 (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22201 (= lt!40629 (lemmaContainsTupThenGetReturnValue!58 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22201 (= lt!40627 (insertStrictlySorted!61 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22201 (= (+!108 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40628)))

(declare-fun b!85797 () Bool)

(declare-fun res!44165 () Bool)

(assert (=> b!85797 (=> (not res!44165) (not e!55941))))

(assert (=> b!85797 (= res!44165 (= (getValueByKey!138 (toList!740 lt!40628) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (Some!143 (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun b!85798 () Bool)

(assert (=> b!85798 (= e!55941 (contains!753 (toList!740 lt!40628) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (= (and d!22201 res!44164) b!85797))

(assert (= (and b!85797 res!44165) b!85798))

(declare-fun m!90243 () Bool)

(assert (=> d!22201 m!90243))

(declare-fun m!90245 () Bool)

(assert (=> d!22201 m!90245))

(declare-fun m!90247 () Bool)

(assert (=> d!22201 m!90247))

(declare-fun m!90249 () Bool)

(assert (=> d!22201 m!90249))

(declare-fun m!90251 () Bool)

(assert (=> b!85797 m!90251))

(declare-fun m!90253 () Bool)

(assert (=> b!85798 m!90253))

(assert (=> bm!8118 d!22201))

(declare-fun d!22203 () Bool)

(declare-fun res!44166 () Bool)

(declare-fun e!55942 () Bool)

(assert (=> d!22203 (=> (not res!44166) (not e!55942))))

(assert (=> d!22203 (= res!44166 (simpleValid!58 (v!2638 (underlying!285 thiss!992))))))

(assert (=> d!22203 (= (valid!335 (v!2638 (underlying!285 thiss!992))) e!55942)))

(declare-fun b!85799 () Bool)

(declare-fun res!44167 () Bool)

(assert (=> b!85799 (=> (not res!44167) (not e!55942))))

(assert (=> b!85799 (= res!44167 (= (arrayCountValidKeys!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))) (_size!426 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85800 () Bool)

(declare-fun res!44168 () Bool)

(assert (=> b!85800 (=> (not res!44168) (not e!55942))))

(assert (=> b!85800 (= res!44168 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!85801 () Bool)

(assert (=> b!85801 (= e!55942 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 Nil!1523))))

(assert (= (and d!22203 res!44166) b!85799))

(assert (= (and b!85799 res!44167) b!85800))

(assert (= (and b!85800 res!44168) b!85801))

(declare-fun m!90255 () Bool)

(assert (=> d!22203 m!90255))

(declare-fun m!90257 () Bool)

(assert (=> b!85799 m!90257))

(declare-fun m!90259 () Bool)

(assert (=> b!85800 m!90259))

(declare-fun m!90261 () Bool)

(assert (=> b!85801 m!90261))

(assert (=> d!22057 d!22203))

(declare-fun d!22205 () Bool)

(declare-fun e!55943 () Bool)

(assert (=> d!22205 e!55943))

(declare-fun res!44169 () Bool)

(assert (=> d!22205 (=> (not res!44169) (not e!55943))))

(declare-fun lt!40632 () ListLongMap!1449)

(assert (=> d!22205 (= res!44169 (contains!752 lt!40632 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40631 () List!1525)

(assert (=> d!22205 (= lt!40632 (ListLongMap!1450 lt!40631))))

(declare-fun lt!40630 () Unit!2510)

(declare-fun lt!40633 () Unit!2510)

(assert (=> d!22205 (= lt!40630 lt!40633)))

(assert (=> d!22205 (= (getValueByKey!138 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22205 (= lt!40633 (lemmaContainsTupThenGetReturnValue!58 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22205 (= lt!40631 (insertStrictlySorted!61 (toList!740 call!8122) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22205 (= (+!108 call!8122 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40632)))

(declare-fun b!85802 () Bool)

(declare-fun res!44170 () Bool)

(assert (=> b!85802 (=> (not res!44170) (not e!55943))))

(assert (=> b!85802 (= res!44170 (= (getValueByKey!138 (toList!740 lt!40632) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!85803 () Bool)

(assert (=> b!85803 (= e!55943 (contains!753 (toList!740 lt!40632) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22205 res!44169) b!85802))

(assert (= (and b!85802 res!44170) b!85803))

(declare-fun m!90263 () Bool)

(assert (=> d!22205 m!90263))

(declare-fun m!90265 () Bool)

(assert (=> d!22205 m!90265))

(declare-fun m!90267 () Bool)

(assert (=> d!22205 m!90267))

(declare-fun m!90269 () Bool)

(assert (=> d!22205 m!90269))

(declare-fun m!90271 () Bool)

(assert (=> b!85802 m!90271))

(declare-fun m!90273 () Bool)

(assert (=> b!85803 m!90273))

(assert (=> b!85430 d!22205))

(declare-fun b!85804 () Bool)

(declare-fun e!55946 () Bool)

(declare-fun e!55945 () Bool)

(assert (=> b!85804 (= e!55946 e!55945)))

(declare-fun c!13943 () Bool)

(assert (=> b!85804 (= c!13943 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85805 () Bool)

(declare-fun call!8165 () Bool)

(assert (=> b!85805 (= e!55945 call!8165)))

(declare-fun bm!8162 () Bool)

(assert (=> bm!8162 (= call!8165 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13943 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523))))))

(declare-fun d!22207 () Bool)

(declare-fun res!44171 () Bool)

(declare-fun e!55944 () Bool)

(assert (=> d!22207 (=> res!44171 e!55944)))

(assert (=> d!22207 (= res!44171 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22207 (= (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) e!55944)))

(declare-fun b!85806 () Bool)

(assert (=> b!85806 (= e!55944 e!55946)))

(declare-fun res!44173 () Bool)

(assert (=> b!85806 (=> (not res!44173) (not e!55946))))

(declare-fun e!55947 () Bool)

(assert (=> b!85806 (= res!44173 (not e!55947))))

(declare-fun res!44172 () Bool)

(assert (=> b!85806 (=> (not res!44172) (not e!55947))))

(assert (=> b!85806 (= res!44172 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85807 () Bool)

(assert (=> b!85807 (= e!55947 (contains!754 (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!85808 () Bool)

(assert (=> b!85808 (= e!55945 call!8165)))

(assert (= (and d!22207 (not res!44171)) b!85806))

(assert (= (and b!85806 res!44172) b!85807))

(assert (= (and b!85806 res!44173) b!85804))

(assert (= (and b!85804 c!13943) b!85805))

(assert (= (and b!85804 (not c!13943)) b!85808))

(assert (= (or b!85805 b!85808) bm!8162))

(declare-fun m!90275 () Bool)

(assert (=> b!85804 m!90275))

(assert (=> b!85804 m!90275))

(declare-fun m!90277 () Bool)

(assert (=> b!85804 m!90277))

(assert (=> bm!8162 m!90275))

(declare-fun m!90279 () Bool)

(assert (=> bm!8162 m!90279))

(assert (=> b!85806 m!90275))

(assert (=> b!85806 m!90275))

(assert (=> b!85806 m!90277))

(assert (=> b!85807 m!90275))

(assert (=> b!85807 m!90275))

(declare-fun m!90281 () Bool)

(assert (=> b!85807 m!90281))

(assert (=> bm!8125 d!22207))

(declare-fun d!22209 () Bool)

(declare-fun e!55949 () Bool)

(assert (=> d!22209 e!55949))

(declare-fun res!44174 () Bool)

(assert (=> d!22209 (=> res!44174 e!55949)))

(declare-fun lt!40634 () Bool)

(assert (=> d!22209 (= res!44174 (not lt!40634))))

(declare-fun lt!40637 () Bool)

(assert (=> d!22209 (= lt!40634 lt!40637)))

(declare-fun lt!40635 () Unit!2510)

(declare-fun e!55948 () Unit!2510)

(assert (=> d!22209 (= lt!40635 e!55948)))

(declare-fun c!13944 () Bool)

(assert (=> d!22209 (= c!13944 lt!40637)))

(assert (=> d!22209 (= lt!40637 (containsKey!142 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22209 (= (contains!752 lt!40471 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40634)))

(declare-fun b!85809 () Bool)

(declare-fun lt!40636 () Unit!2510)

(assert (=> b!85809 (= e!55948 lt!40636)))

(assert (=> b!85809 (= lt!40636 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85809 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85810 () Bool)

(declare-fun Unit!2534 () Unit!2510)

(assert (=> b!85810 (= e!55948 Unit!2534)))

(declare-fun b!85811 () Bool)

(assert (=> b!85811 (= e!55949 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22209 c!13944) b!85809))

(assert (= (and d!22209 (not c!13944)) b!85810))

(assert (= (and d!22209 (not res!44174)) b!85811))

(declare-fun m!90283 () Bool)

(assert (=> d!22209 m!90283))

(declare-fun m!90285 () Bool)

(assert (=> b!85809 m!90285))

(declare-fun m!90287 () Bool)

(assert (=> b!85809 m!90287))

(assert (=> b!85809 m!90287))

(declare-fun m!90289 () Bool)

(assert (=> b!85809 m!90289))

(assert (=> b!85811 m!90287))

(assert (=> b!85811 m!90287))

(assert (=> b!85811 m!90289))

(assert (=> d!22085 d!22209))

(assert (=> d!22085 d!22091))

(declare-fun d!22211 () Bool)

(declare-fun get!1204 (Option!144) V!3025)

(assert (=> d!22211 (= (apply!82 lt!40471 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1204 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3615 () Bool)

(assert (= bs!3615 d!22211))

(assert (=> bs!3615 m!89659))

(declare-fun m!90291 () Bool)

(assert (=> bs!3615 m!90291))

(assert (=> bs!3615 m!90291))

(declare-fun m!90293 () Bool)

(assert (=> bs!3615 m!90293))

(assert (=> b!85491 d!22211))

(assert (=> b!85491 d!22155))

(declare-fun d!22213 () Bool)

(declare-fun e!55950 () Bool)

(assert (=> d!22213 e!55950))

(declare-fun res!44175 () Bool)

(assert (=> d!22213 (=> (not res!44175) (not e!55950))))

(declare-fun lt!40640 () ListLongMap!1449)

(assert (=> d!22213 (= res!44175 (contains!752 lt!40640 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun lt!40639 () List!1525)

(assert (=> d!22213 (= lt!40640 (ListLongMap!1450 lt!40639))))

(declare-fun lt!40638 () Unit!2510)

(declare-fun lt!40641 () Unit!2510)

(assert (=> d!22213 (= lt!40638 lt!40641)))

(assert (=> d!22213 (= (getValueByKey!138 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (Some!143 (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22213 (= lt!40641 (lemmaContainsTupThenGetReturnValue!58 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22213 (= lt!40639 (insertStrictlySorted!61 (toList!740 e!55675) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22213 (= (+!108 e!55675 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!40640)))

(declare-fun b!85812 () Bool)

(declare-fun res!44176 () Bool)

(assert (=> b!85812 (=> (not res!44176) (not e!55950))))

(assert (=> b!85812 (= res!44176 (= (getValueByKey!138 (toList!740 lt!40640) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (Some!143 (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun b!85813 () Bool)

(assert (=> b!85813 (= e!55950 (contains!753 (toList!740 lt!40640) (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (= (and d!22213 res!44175) b!85812))

(assert (= (and b!85812 res!44176) b!85813))

(declare-fun m!90295 () Bool)

(assert (=> d!22213 m!90295))

(declare-fun m!90297 () Bool)

(assert (=> d!22213 m!90297))

(declare-fun m!90299 () Bool)

(assert (=> d!22213 m!90299))

(declare-fun m!90301 () Bool)

(assert (=> d!22213 m!90301))

(declare-fun m!90303 () Bool)

(assert (=> b!85812 m!90303))

(declare-fun m!90305 () Bool)

(assert (=> b!85813 m!90305))

(assert (=> bm!8094 d!22213))

(declare-fun d!22215 () Bool)

(declare-fun c!13945 () Bool)

(assert (=> d!22215 (= c!13945 (and ((_ is Cons!1521) (toList!740 lt!40484)) (= (_1!1114 (h!2112 (toList!740 lt!40484))) (_1!1114 lt!40140))))))

(declare-fun e!55951 () Option!144)

(assert (=> d!22215 (= (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140)) e!55951)))

(declare-fun b!85817 () Bool)

(declare-fun e!55952 () Option!144)

(assert (=> b!85817 (= e!55952 None!142)))

(declare-fun b!85814 () Bool)

(assert (=> b!85814 (= e!55951 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40484)))))))

(declare-fun b!85816 () Bool)

(assert (=> b!85816 (= e!55952 (getValueByKey!138 (t!5237 (toList!740 lt!40484)) (_1!1114 lt!40140)))))

(declare-fun b!85815 () Bool)

(assert (=> b!85815 (= e!55951 e!55952)))

(declare-fun c!13946 () Bool)

(assert (=> b!85815 (= c!13946 (and ((_ is Cons!1521) (toList!740 lt!40484)) (not (= (_1!1114 (h!2112 (toList!740 lt!40484))) (_1!1114 lt!40140)))))))

(assert (= (and d!22215 c!13945) b!85814))

(assert (= (and d!22215 (not c!13945)) b!85815))

(assert (= (and b!85815 c!13946) b!85816))

(assert (= (and b!85815 (not c!13946)) b!85817))

(declare-fun m!90307 () Bool)

(assert (=> b!85816 m!90307))

(assert (=> b!85507 d!22215))

(declare-fun d!22217 () Bool)

(declare-fun e!55954 () Bool)

(assert (=> d!22217 e!55954))

(declare-fun res!44177 () Bool)

(assert (=> d!22217 (=> res!44177 e!55954)))

(declare-fun lt!40642 () Bool)

(assert (=> d!22217 (= res!44177 (not lt!40642))))

(declare-fun lt!40645 () Bool)

(assert (=> d!22217 (= lt!40642 lt!40645)))

(declare-fun lt!40643 () Unit!2510)

(declare-fun e!55953 () Unit!2510)

(assert (=> d!22217 (= lt!40643 e!55953)))

(declare-fun c!13947 () Bool)

(assert (=> d!22217 (= c!13947 lt!40645)))

(assert (=> d!22217 (= lt!40645 (containsKey!142 (toList!740 lt!40435) (_1!1114 lt!40140)))))

(assert (=> d!22217 (= (contains!752 lt!40435 (_1!1114 lt!40140)) lt!40642)))

(declare-fun b!85818 () Bool)

(declare-fun lt!40644 () Unit!2510)

(assert (=> b!85818 (= e!55953 lt!40644)))

(assert (=> b!85818 (= lt!40644 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40435) (_1!1114 lt!40140)))))

(assert (=> b!85818 (isDefined!92 (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140)))))

(declare-fun b!85819 () Bool)

(declare-fun Unit!2535 () Unit!2510)

(assert (=> b!85819 (= e!55953 Unit!2535)))

(declare-fun b!85820 () Bool)

(assert (=> b!85820 (= e!55954 (isDefined!92 (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140))))))

(assert (= (and d!22217 c!13947) b!85818))

(assert (= (and d!22217 (not c!13947)) b!85819))

(assert (= (and d!22217 (not res!44177)) b!85820))

(declare-fun m!90309 () Bool)

(assert (=> d!22217 m!90309))

(declare-fun m!90311 () Bool)

(assert (=> b!85818 m!90311))

(assert (=> b!85818 m!89729))

(assert (=> b!85818 m!89729))

(declare-fun m!90313 () Bool)

(assert (=> b!85818 m!90313))

(assert (=> b!85820 m!89729))

(assert (=> b!85820 m!89729))

(assert (=> b!85820 m!90313))

(assert (=> d!22073 d!22217))

(declare-fun d!22219 () Bool)

(declare-fun c!13948 () Bool)

(assert (=> d!22219 (= c!13948 (and ((_ is Cons!1521) lt!40434) (= (_1!1114 (h!2112 lt!40434)) (_1!1114 lt!40140))))))

(declare-fun e!55955 () Option!144)

(assert (=> d!22219 (= (getValueByKey!138 lt!40434 (_1!1114 lt!40140)) e!55955)))

(declare-fun b!85824 () Bool)

(declare-fun e!55956 () Option!144)

(assert (=> b!85824 (= e!55956 None!142)))

(declare-fun b!85821 () Bool)

(assert (=> b!85821 (= e!55955 (Some!143 (_2!1114 (h!2112 lt!40434))))))

(declare-fun b!85823 () Bool)

(assert (=> b!85823 (= e!55956 (getValueByKey!138 (t!5237 lt!40434) (_1!1114 lt!40140)))))

(declare-fun b!85822 () Bool)

(assert (=> b!85822 (= e!55955 e!55956)))

(declare-fun c!13949 () Bool)

(assert (=> b!85822 (= c!13949 (and ((_ is Cons!1521) lt!40434) (not (= (_1!1114 (h!2112 lt!40434)) (_1!1114 lt!40140)))))))

(assert (= (and d!22219 c!13948) b!85821))

(assert (= (and d!22219 (not c!13948)) b!85822))

(assert (= (and b!85822 c!13949) b!85823))

(assert (= (and b!85822 (not c!13949)) b!85824))

(declare-fun m!90315 () Bool)

(assert (=> b!85823 m!90315))

(assert (=> d!22073 d!22219))

(declare-fun d!22221 () Bool)

(assert (=> d!22221 (= (getValueByKey!138 lt!40434 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(declare-fun lt!40646 () Unit!2510)

(assert (=> d!22221 (= lt!40646 (choose!507 lt!40434 (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun e!55957 () Bool)

(assert (=> d!22221 e!55957))

(declare-fun res!44178 () Bool)

(assert (=> d!22221 (=> (not res!44178) (not e!55957))))

(assert (=> d!22221 (= res!44178 (isStrictlySorted!293 lt!40434))))

(assert (=> d!22221 (= (lemmaContainsTupThenGetReturnValue!58 lt!40434 (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40646)))

(declare-fun b!85825 () Bool)

(declare-fun res!44179 () Bool)

(assert (=> b!85825 (=> (not res!44179) (not e!55957))))

(assert (=> b!85825 (= res!44179 (containsKey!142 lt!40434 (_1!1114 lt!40140)))))

(declare-fun b!85826 () Bool)

(assert (=> b!85826 (= e!55957 (contains!753 lt!40434 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!22221 res!44178) b!85825))

(assert (= (and b!85825 res!44179) b!85826))

(assert (=> d!22221 m!89723))

(declare-fun m!90317 () Bool)

(assert (=> d!22221 m!90317))

(declare-fun m!90319 () Bool)

(assert (=> d!22221 m!90319))

(declare-fun m!90321 () Bool)

(assert (=> b!85825 m!90321))

(declare-fun m!90323 () Bool)

(assert (=> b!85826 m!90323))

(assert (=> d!22073 d!22221))

(declare-fun b!85827 () Bool)

(declare-fun e!55960 () List!1525)

(assert (=> b!85827 (= e!55960 (insertStrictlySorted!61 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun c!13953 () Bool)

(declare-fun b!85828 () Bool)

(declare-fun c!13952 () Bool)

(assert (=> b!85828 (= e!55960 (ite c!13952 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))) (ite c!13953 (Cons!1521 (h!2112 (toList!740 (+!108 lt!40146 lt!40153))) (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) Nil!1522)))))

(declare-fun b!85829 () Bool)

(declare-fun e!55961 () List!1525)

(declare-fun call!8167 () List!1525)

(assert (=> b!85829 (= e!55961 call!8167)))

(declare-fun b!85830 () Bool)

(declare-fun e!55958 () List!1525)

(declare-fun call!8166 () List!1525)

(assert (=> b!85830 (= e!55958 call!8166)))

(declare-fun b!85831 () Bool)

(assert (=> b!85831 (= c!13953 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 lt!40153))) (bvsgt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 lt!40153)))) (_1!1114 lt!40140))))))

(declare-fun e!55962 () List!1525)

(assert (=> b!85831 (= e!55958 e!55962)))

(declare-fun b!85832 () Bool)

(declare-fun res!44180 () Bool)

(declare-fun e!55959 () Bool)

(assert (=> b!85832 (=> (not res!44180) (not e!55959))))

(declare-fun lt!40647 () List!1525)

(assert (=> b!85832 (= res!44180 (containsKey!142 lt!40647 (_1!1114 lt!40140)))))

(declare-fun b!85834 () Bool)

(declare-fun call!8168 () List!1525)

(assert (=> b!85834 (= e!55962 call!8168)))

(declare-fun b!85835 () Bool)

(assert (=> b!85835 (= e!55959 (contains!753 lt!40647 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun c!13951 () Bool)

(declare-fun bm!8163 () Bool)

(assert (=> bm!8163 (= call!8167 ($colon$colon!71 e!55960 (ite c!13951 (h!2112 (toList!740 (+!108 lt!40146 lt!40153))) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))))))

(declare-fun c!13950 () Bool)

(assert (=> bm!8163 (= c!13950 c!13951)))

(declare-fun bm!8164 () Bool)

(assert (=> bm!8164 (= call!8168 call!8166)))

(declare-fun b!85833 () Bool)

(assert (=> b!85833 (= e!55962 call!8168)))

(declare-fun d!22223 () Bool)

(assert (=> d!22223 e!55959))

(declare-fun res!44181 () Bool)

(assert (=> d!22223 (=> (not res!44181) (not e!55959))))

(assert (=> d!22223 (= res!44181 (isStrictlySorted!293 lt!40647))))

(assert (=> d!22223 (= lt!40647 e!55961)))

(assert (=> d!22223 (= c!13951 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 lt!40153))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 lt!40153)))) (_1!1114 lt!40140))))))

(assert (=> d!22223 (isStrictlySorted!293 (toList!740 (+!108 lt!40146 lt!40153)))))

(assert (=> d!22223 (= (insertStrictlySorted!61 (toList!740 (+!108 lt!40146 lt!40153)) (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40647)))

(declare-fun b!85836 () Bool)

(assert (=> b!85836 (= e!55961 e!55958)))

(assert (=> b!85836 (= c!13952 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 lt!40153))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 lt!40153)))) (_1!1114 lt!40140))))))

(declare-fun bm!8165 () Bool)

(assert (=> bm!8165 (= call!8166 call!8167)))

(assert (= (and d!22223 c!13951) b!85829))

(assert (= (and d!22223 (not c!13951)) b!85836))

(assert (= (and b!85836 c!13952) b!85830))

(assert (= (and b!85836 (not c!13952)) b!85831))

(assert (= (and b!85831 c!13953) b!85834))

(assert (= (and b!85831 (not c!13953)) b!85833))

(assert (= (or b!85834 b!85833) bm!8164))

(assert (= (or b!85830 bm!8164) bm!8165))

(assert (= (or b!85829 bm!8165) bm!8163))

(assert (= (and bm!8163 c!13950) b!85827))

(assert (= (and bm!8163 (not c!13950)) b!85828))

(assert (= (and d!22223 res!44181) b!85832))

(assert (= (and b!85832 res!44180) b!85835))

(declare-fun m!90325 () Bool)

(assert (=> d!22223 m!90325))

(declare-fun m!90327 () Bool)

(assert (=> d!22223 m!90327))

(declare-fun m!90329 () Bool)

(assert (=> b!85835 m!90329))

(declare-fun m!90331 () Bool)

(assert (=> b!85832 m!90331))

(declare-fun m!90333 () Bool)

(assert (=> b!85827 m!90333))

(declare-fun m!90335 () Bool)

(assert (=> bm!8163 m!90335))

(assert (=> d!22073 d!22223))

(declare-fun d!22225 () Bool)

(assert (=> d!22225 (= (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85537 d!22225))

(declare-fun d!22227 () Bool)

(declare-fun e!55964 () Bool)

(assert (=> d!22227 e!55964))

(declare-fun res!44182 () Bool)

(assert (=> d!22227 (=> res!44182 e!55964)))

(declare-fun lt!40648 () Bool)

(assert (=> d!22227 (= res!44182 (not lt!40648))))

(declare-fun lt!40651 () Bool)

(assert (=> d!22227 (= lt!40648 lt!40651)))

(declare-fun lt!40649 () Unit!2510)

(declare-fun e!55963 () Unit!2510)

(assert (=> d!22227 (= lt!40649 e!55963)))

(declare-fun c!13954 () Bool)

(assert (=> d!22227 (= c!13954 lt!40651)))

(assert (=> d!22227 (= lt!40651 (containsKey!142 (toList!740 lt!40451) (_1!1114 lt!40143)))))

(assert (=> d!22227 (= (contains!752 lt!40451 (_1!1114 lt!40143)) lt!40648)))

(declare-fun b!85837 () Bool)

(declare-fun lt!40650 () Unit!2510)

(assert (=> b!85837 (= e!55963 lt!40650)))

(assert (=> b!85837 (= lt!40650 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40451) (_1!1114 lt!40143)))))

(assert (=> b!85837 (isDefined!92 (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143)))))

(declare-fun b!85838 () Bool)

(declare-fun Unit!2536 () Unit!2510)

(assert (=> b!85838 (= e!55963 Unit!2536)))

(declare-fun b!85839 () Bool)

(assert (=> b!85839 (= e!55964 (isDefined!92 (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143))))))

(assert (= (and d!22227 c!13954) b!85837))

(assert (= (and d!22227 (not c!13954)) b!85838))

(assert (= (and d!22227 (not res!44182)) b!85839))

(declare-fun m!90337 () Bool)

(assert (=> d!22227 m!90337))

(declare-fun m!90339 () Bool)

(assert (=> b!85837 m!90339))

(assert (=> b!85837 m!89785))

(assert (=> b!85837 m!89785))

(declare-fun m!90341 () Bool)

(assert (=> b!85837 m!90341))

(assert (=> b!85839 m!89785))

(assert (=> b!85839 m!89785))

(assert (=> b!85839 m!90341))

(assert (=> d!22083 d!22227))

(declare-fun d!22229 () Bool)

(declare-fun c!13955 () Bool)

(assert (=> d!22229 (= c!13955 (and ((_ is Cons!1521) lt!40450) (= (_1!1114 (h!2112 lt!40450)) (_1!1114 lt!40143))))))

(declare-fun e!55965 () Option!144)

(assert (=> d!22229 (= (getValueByKey!138 lt!40450 (_1!1114 lt!40143)) e!55965)))

(declare-fun b!85843 () Bool)

(declare-fun e!55966 () Option!144)

(assert (=> b!85843 (= e!55966 None!142)))

(declare-fun b!85840 () Bool)

(assert (=> b!85840 (= e!55965 (Some!143 (_2!1114 (h!2112 lt!40450))))))

(declare-fun b!85842 () Bool)

(assert (=> b!85842 (= e!55966 (getValueByKey!138 (t!5237 lt!40450) (_1!1114 lt!40143)))))

(declare-fun b!85841 () Bool)

(assert (=> b!85841 (= e!55965 e!55966)))

(declare-fun c!13956 () Bool)

(assert (=> b!85841 (= c!13956 (and ((_ is Cons!1521) lt!40450) (not (= (_1!1114 (h!2112 lt!40450)) (_1!1114 lt!40143)))))))

(assert (= (and d!22229 c!13955) b!85840))

(assert (= (and d!22229 (not c!13955)) b!85841))

(assert (= (and b!85841 c!13956) b!85842))

(assert (= (and b!85841 (not c!13956)) b!85843))

(declare-fun m!90343 () Bool)

(assert (=> b!85842 m!90343))

(assert (=> d!22083 d!22229))

(declare-fun d!22231 () Bool)

(assert (=> d!22231 (= (getValueByKey!138 lt!40450 (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143)))))

(declare-fun lt!40652 () Unit!2510)

(assert (=> d!22231 (= lt!40652 (choose!507 lt!40450 (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(declare-fun e!55967 () Bool)

(assert (=> d!22231 e!55967))

(declare-fun res!44183 () Bool)

(assert (=> d!22231 (=> (not res!44183) (not e!55967))))

(assert (=> d!22231 (= res!44183 (isStrictlySorted!293 lt!40450))))

(assert (=> d!22231 (= (lemmaContainsTupThenGetReturnValue!58 lt!40450 (_1!1114 lt!40143) (_2!1114 lt!40143)) lt!40652)))

(declare-fun b!85844 () Bool)

(declare-fun res!44184 () Bool)

(assert (=> b!85844 (=> (not res!44184) (not e!55967))))

(assert (=> b!85844 (= res!44184 (containsKey!142 lt!40450 (_1!1114 lt!40143)))))

(declare-fun b!85845 () Bool)

(assert (=> b!85845 (= e!55967 (contains!753 lt!40450 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(assert (= (and d!22231 res!44183) b!85844))

(assert (= (and b!85844 res!44184) b!85845))

(assert (=> d!22231 m!89779))

(declare-fun m!90345 () Bool)

(assert (=> d!22231 m!90345))

(declare-fun m!90347 () Bool)

(assert (=> d!22231 m!90347))

(declare-fun m!90349 () Bool)

(assert (=> b!85844 m!90349))

(declare-fun m!90351 () Bool)

(assert (=> b!85845 m!90351))

(assert (=> d!22083 d!22231))

(declare-fun b!85846 () Bool)

(declare-fun e!55970 () List!1525)

(assert (=> b!85846 (= e!55970 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40150)) (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(declare-fun c!13959 () Bool)

(declare-fun c!13960 () Bool)

(declare-fun b!85847 () Bool)

(assert (=> b!85847 (= e!55970 (ite c!13959 (t!5237 (toList!740 lt!40150)) (ite c!13960 (Cons!1521 (h!2112 (toList!740 lt!40150)) (t!5237 (toList!740 lt!40150))) Nil!1522)))))

(declare-fun b!85848 () Bool)

(declare-fun e!55971 () List!1525)

(declare-fun call!8170 () List!1525)

(assert (=> b!85848 (= e!55971 call!8170)))

(declare-fun b!85849 () Bool)

(declare-fun e!55968 () List!1525)

(declare-fun call!8169 () List!1525)

(assert (=> b!85849 (= e!55968 call!8169)))

(declare-fun b!85850 () Bool)

(assert (=> b!85850 (= c!13960 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 lt!40143))))))

(declare-fun e!55972 () List!1525)

(assert (=> b!85850 (= e!55968 e!55972)))

(declare-fun b!85851 () Bool)

(declare-fun res!44185 () Bool)

(declare-fun e!55969 () Bool)

(assert (=> b!85851 (=> (not res!44185) (not e!55969))))

(declare-fun lt!40653 () List!1525)

(assert (=> b!85851 (= res!44185 (containsKey!142 lt!40653 (_1!1114 lt!40143)))))

(declare-fun b!85853 () Bool)

(declare-fun call!8171 () List!1525)

(assert (=> b!85853 (= e!55972 call!8171)))

(declare-fun b!85854 () Bool)

(assert (=> b!85854 (= e!55969 (contains!753 lt!40653 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun c!13958 () Bool)

(declare-fun bm!8166 () Bool)

(assert (=> bm!8166 (= call!8170 ($colon$colon!71 e!55970 (ite c!13958 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143)))))))

(declare-fun c!13957 () Bool)

(assert (=> bm!8166 (= c!13957 c!13958)))

(declare-fun bm!8167 () Bool)

(assert (=> bm!8167 (= call!8171 call!8169)))

(declare-fun b!85852 () Bool)

(assert (=> b!85852 (= e!55972 call!8171)))

(declare-fun d!22233 () Bool)

(assert (=> d!22233 e!55969))

(declare-fun res!44186 () Bool)

(assert (=> d!22233 (=> (not res!44186) (not e!55969))))

(assert (=> d!22233 (= res!44186 (isStrictlySorted!293 lt!40653))))

(assert (=> d!22233 (= lt!40653 e!55971)))

(assert (=> d!22233 (= c!13958 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 lt!40143))))))

(assert (=> d!22233 (isStrictlySorted!293 (toList!740 lt!40150))))

(assert (=> d!22233 (= (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 lt!40143) (_2!1114 lt!40143)) lt!40653)))

(declare-fun b!85855 () Bool)

(assert (=> b!85855 (= e!55971 e!55968)))

(assert (=> b!85855 (= c!13959 (and ((_ is Cons!1521) (toList!740 lt!40150)) (= (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 lt!40143))))))

(declare-fun bm!8168 () Bool)

(assert (=> bm!8168 (= call!8169 call!8170)))

(assert (= (and d!22233 c!13958) b!85848))

(assert (= (and d!22233 (not c!13958)) b!85855))

(assert (= (and b!85855 c!13959) b!85849))

(assert (= (and b!85855 (not c!13959)) b!85850))

(assert (= (and b!85850 c!13960) b!85853))

(assert (= (and b!85850 (not c!13960)) b!85852))

(assert (= (or b!85853 b!85852) bm!8167))

(assert (= (or b!85849 bm!8167) bm!8168))

(assert (= (or b!85848 bm!8168) bm!8166))

(assert (= (and bm!8166 c!13957) b!85846))

(assert (= (and bm!8166 (not c!13957)) b!85847))

(assert (= (and d!22233 res!44186) b!85851))

(assert (= (and b!85851 res!44185) b!85854))

(declare-fun m!90353 () Bool)

(assert (=> d!22233 m!90353))

(assert (=> d!22233 m!90233))

(declare-fun m!90355 () Bool)

(assert (=> b!85854 m!90355))

(declare-fun m!90357 () Bool)

(assert (=> b!85851 m!90357))

(declare-fun m!90359 () Bool)

(assert (=> b!85846 m!90359))

(declare-fun m!90361 () Bool)

(assert (=> bm!8166 m!90361))

(assert (=> d!22083 d!22233))

(declare-fun d!22235 () Bool)

(declare-fun c!13961 () Bool)

(assert (=> d!22235 (= c!13961 (and ((_ is Cons!1521) (toList!740 lt!40443)) (= (_1!1114 (h!2112 (toList!740 lt!40443))) (_1!1114 lt!40143))))))

(declare-fun e!55973 () Option!144)

(assert (=> d!22235 (= (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143)) e!55973)))

(declare-fun b!85859 () Bool)

(declare-fun e!55974 () Option!144)

(assert (=> b!85859 (= e!55974 None!142)))

(declare-fun b!85856 () Bool)

(assert (=> b!85856 (= e!55973 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40443)))))))

(declare-fun b!85858 () Bool)

(assert (=> b!85858 (= e!55974 (getValueByKey!138 (t!5237 (toList!740 lt!40443)) (_1!1114 lt!40143)))))

(declare-fun b!85857 () Bool)

(assert (=> b!85857 (= e!55973 e!55974)))

(declare-fun c!13962 () Bool)

(assert (=> b!85857 (= c!13962 (and ((_ is Cons!1521) (toList!740 lt!40443)) (not (= (_1!1114 (h!2112 (toList!740 lt!40443))) (_1!1114 lt!40143)))))))

(assert (= (and d!22235 c!13961) b!85856))

(assert (= (and d!22235 (not c!13961)) b!85857))

(assert (= (and b!85857 c!13962) b!85858))

(assert (= (and b!85857 (not c!13962)) b!85859))

(declare-fun m!90363 () Bool)

(assert (=> b!85858 m!90363))

(assert (=> b!85461 d!22235))

(declare-fun d!22237 () Bool)

(declare-fun e!55976 () Bool)

(assert (=> d!22237 e!55976))

(declare-fun res!44187 () Bool)

(assert (=> d!22237 (=> res!44187 e!55976)))

(declare-fun lt!40654 () Bool)

(assert (=> d!22237 (= res!44187 (not lt!40654))))

(declare-fun lt!40657 () Bool)

(assert (=> d!22237 (= lt!40654 lt!40657)))

(declare-fun lt!40655 () Unit!2510)

(declare-fun e!55975 () Unit!2510)

(assert (=> d!22237 (= lt!40655 e!55975)))

(declare-fun c!13963 () Bool)

(assert (=> d!22237 (= c!13963 lt!40657)))

(assert (=> d!22237 (= lt!40657 (containsKey!142 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22237 (= (contains!752 lt!40415 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40654)))

(declare-fun b!85860 () Bool)

(declare-fun lt!40656 () Unit!2510)

(assert (=> b!85860 (= e!55975 lt!40656)))

(assert (=> b!85860 (= lt!40656 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85860 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85861 () Bool)

(declare-fun Unit!2537 () Unit!2510)

(assert (=> b!85861 (= e!55975 Unit!2537)))

(declare-fun b!85862 () Bool)

(assert (=> b!85862 (= e!55976 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22237 c!13963) b!85860))

(assert (= (and d!22237 (not c!13963)) b!85861))

(assert (= (and d!22237 (not res!44187)) b!85862))

(declare-fun m!90365 () Bool)

(assert (=> d!22237 m!90365))

(declare-fun m!90367 () Bool)

(assert (=> b!85860 m!90367))

(declare-fun m!90369 () Bool)

(assert (=> b!85860 m!90369))

(assert (=> b!85860 m!90369))

(declare-fun m!90371 () Bool)

(assert (=> b!85860 m!90371))

(assert (=> b!85862 m!90369))

(assert (=> b!85862 m!90369))

(assert (=> b!85862 m!90371))

(assert (=> bm!8115 d!22237))

(declare-fun d!22239 () Bool)

(declare-fun lt!40660 () Bool)

(declare-fun content!90 (List!1526) (InoxSet (_ BitVec 64)))

(assert (=> d!22239 (= lt!40660 (select (content!90 Nil!1523) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!55982 () Bool)

(assert (=> d!22239 (= lt!40660 e!55982)))

(declare-fun res!44193 () Bool)

(assert (=> d!22239 (=> (not res!44193) (not e!55982))))

(assert (=> d!22239 (= res!44193 ((_ is Cons!1522) Nil!1523))))

(assert (=> d!22239 (= (contains!754 Nil!1523 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!40660)))

(declare-fun b!85867 () Bool)

(declare-fun e!55981 () Bool)

(assert (=> b!85867 (= e!55982 e!55981)))

(declare-fun res!44192 () Bool)

(assert (=> b!85867 (=> res!44192 e!55981)))

(assert (=> b!85867 (= res!44192 (= (h!2113 Nil!1523) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85868 () Bool)

(assert (=> b!85868 (= e!55981 (contains!754 (t!5238 Nil!1523) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!22239 res!44193) b!85867))

(assert (= (and b!85867 (not res!44192)) b!85868))

(declare-fun m!90373 () Bool)

(assert (=> d!22239 m!90373))

(assert (=> d!22239 m!89403))

(declare-fun m!90375 () Bool)

(assert (=> d!22239 m!90375))

(assert (=> b!85868 m!89403))

(declare-fun m!90377 () Bool)

(assert (=> b!85868 m!90377))

(assert (=> b!85540 d!22239))

(assert (=> bm!8122 d!22139))

(assert (=> d!22063 d!22143))

(declare-fun d!22241 () Bool)

(declare-fun lt!40661 () Bool)

(assert (=> d!22241 (= lt!40661 (select (content!89 (toList!740 lt!40447)) lt!40140))))

(declare-fun e!55983 () Bool)

(assert (=> d!22241 (= lt!40661 e!55983)))

(declare-fun res!44194 () Bool)

(assert (=> d!22241 (=> (not res!44194) (not e!55983))))

(assert (=> d!22241 (= res!44194 ((_ is Cons!1521) (toList!740 lt!40447)))))

(assert (=> d!22241 (= (contains!753 (toList!740 lt!40447) lt!40140) lt!40661)))

(declare-fun b!85869 () Bool)

(declare-fun e!55984 () Bool)

(assert (=> b!85869 (= e!55983 e!55984)))

(declare-fun res!44195 () Bool)

(assert (=> b!85869 (=> res!44195 e!55984)))

(assert (=> b!85869 (= res!44195 (= (h!2112 (toList!740 lt!40447)) lt!40140))))

(declare-fun b!85870 () Bool)

(assert (=> b!85870 (= e!55984 (contains!753 (t!5237 (toList!740 lt!40447)) lt!40140))))

(assert (= (and d!22241 res!44194) b!85869))

(assert (= (and b!85869 (not res!44195)) b!85870))

(declare-fun m!90379 () Bool)

(assert (=> d!22241 m!90379))

(declare-fun m!90381 () Bool)

(assert (=> d!22241 m!90381))

(declare-fun m!90383 () Bool)

(assert (=> b!85870 m!90383))

(assert (=> b!85464 d!22241))

(declare-fun b!85883 () Bool)

(declare-fun e!55991 () SeekEntryResult!246)

(declare-fun lt!40668 () SeekEntryResult!246)

(assert (=> b!85883 (= e!55991 (MissingZero!246 (index!3123 lt!40668)))))

(declare-fun d!22243 () Bool)

(declare-fun lt!40669 () SeekEntryResult!246)

(assert (=> d!22243 (and (or ((_ is Undefined!246) lt!40669) (not ((_ is Found!246) lt!40669)) (and (bvsge (index!3122 lt!40669) #b00000000000000000000000000000000) (bvslt (index!3122 lt!40669) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!40669) ((_ is Found!246) lt!40669) (not ((_ is MissingZero!246) lt!40669)) (and (bvsge (index!3121 lt!40669) #b00000000000000000000000000000000) (bvslt (index!3121 lt!40669) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!40669) ((_ is Found!246) lt!40669) ((_ is MissingZero!246) lt!40669) (not ((_ is MissingVacant!246) lt!40669)) (and (bvsge (index!3124 lt!40669) #b00000000000000000000000000000000) (bvslt (index!3124 lt!40669) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!40669) (ite ((_ is Found!246) lt!40669) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40669)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite ((_ is MissingZero!246) lt!40669) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!40669)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!246) lt!40669) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!40669)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!55992 () SeekEntryResult!246)

(assert (=> d!22243 (= lt!40669 e!55992)))

(declare-fun c!13971 () Bool)

(assert (=> d!22243 (= c!13971 (and ((_ is Intermediate!246) lt!40668) (undefined!1058 lt!40668)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4005 (_ BitVec 32)) SeekEntryResult!246)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!22243 (= lt!40668 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (=> d!22243 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22243 (= (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)) lt!40669)))

(declare-fun b!85884 () Bool)

(declare-fun c!13970 () Bool)

(declare-fun lt!40670 () (_ BitVec 64))

(assert (=> b!85884 (= c!13970 (= lt!40670 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!55993 () SeekEntryResult!246)

(assert (=> b!85884 (= e!55993 e!55991)))

(declare-fun b!85885 () Bool)

(assert (=> b!85885 (= e!55992 Undefined!246)))

(declare-fun b!85886 () Bool)

(assert (=> b!85886 (= e!55993 (Found!246 (index!3123 lt!40668)))))

(declare-fun b!85887 () Bool)

(assert (=> b!85887 (= e!55992 e!55993)))

(assert (=> b!85887 (= lt!40670 (select (arr!1906 (_keys!4008 newMap!16)) (index!3123 lt!40668)))))

(declare-fun c!13972 () Bool)

(assert (=> b!85887 (= c!13972 (= lt!40670 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85888 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4005 (_ BitVec 32)) SeekEntryResult!246)

(assert (=> b!85888 (= e!55991 (seekKeyOrZeroReturnVacant!0 (x!11998 lt!40668) (index!3123 lt!40668) (index!3123 lt!40668) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (= (and d!22243 c!13971) b!85885))

(assert (= (and d!22243 (not c!13971)) b!85887))

(assert (= (and b!85887 c!13972) b!85886))

(assert (= (and b!85887 (not c!13972)) b!85884))

(assert (= (and b!85884 c!13970) b!85883))

(assert (= (and b!85884 (not c!13970)) b!85888))

(declare-fun m!90385 () Bool)

(assert (=> d!22243 m!90385))

(declare-fun m!90387 () Bool)

(assert (=> d!22243 m!90387))

(declare-fun m!90389 () Bool)

(assert (=> d!22243 m!90389))

(declare-fun m!90391 () Bool)

(assert (=> d!22243 m!90391))

(assert (=> d!22243 m!89403))

(declare-fun m!90393 () Bool)

(assert (=> d!22243 m!90393))

(assert (=> d!22243 m!89403))

(assert (=> d!22243 m!90391))

(assert (=> d!22243 m!90001))

(declare-fun m!90395 () Bool)

(assert (=> b!85887 m!90395))

(assert (=> b!85888 m!89403))

(declare-fun m!90397 () Bool)

(assert (=> b!85888 m!90397))

(assert (=> b!85378 d!22243))

(declare-fun d!22245 () Bool)

(declare-fun lt!40671 () Bool)

(assert (=> d!22245 (= lt!40671 (select (content!89 (toList!740 lt!40443)) lt!40143))))

(declare-fun e!55994 () Bool)

(assert (=> d!22245 (= lt!40671 e!55994)))

(declare-fun res!44196 () Bool)

(assert (=> d!22245 (=> (not res!44196) (not e!55994))))

(assert (=> d!22245 (= res!44196 ((_ is Cons!1521) (toList!740 lt!40443)))))

(assert (=> d!22245 (= (contains!753 (toList!740 lt!40443) lt!40143) lt!40671)))

(declare-fun b!85889 () Bool)

(declare-fun e!55995 () Bool)

(assert (=> b!85889 (= e!55994 e!55995)))

(declare-fun res!44197 () Bool)

(assert (=> b!85889 (=> res!44197 e!55995)))

(assert (=> b!85889 (= res!44197 (= (h!2112 (toList!740 lt!40443)) lt!40143))))

(declare-fun b!85890 () Bool)

(assert (=> b!85890 (= e!55995 (contains!753 (t!5237 (toList!740 lt!40443)) lt!40143))))

(assert (= (and d!22245 res!44196) b!85889))

(assert (= (and b!85889 (not res!44197)) b!85890))

(declare-fun m!90399 () Bool)

(assert (=> d!22245 m!90399))

(declare-fun m!90401 () Bool)

(assert (=> d!22245 m!90401))

(declare-fun m!90403 () Bool)

(assert (=> b!85890 m!90403))

(assert (=> b!85462 d!22245))

(declare-fun d!22247 () Bool)

(declare-fun res!44198 () Bool)

(declare-fun e!55996 () Bool)

(assert (=> d!22247 (=> res!44198 e!55996)))

(assert (=> d!22247 (= res!44198 (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22247 (= (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!55996)))

(declare-fun b!85891 () Bool)

(declare-fun e!55997 () Bool)

(assert (=> b!85891 (= e!55996 e!55997)))

(declare-fun res!44199 () Bool)

(assert (=> b!85891 (=> (not res!44199) (not e!55997))))

(assert (=> b!85891 (= res!44199 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!85892 () Bool)

(assert (=> b!85892 (= e!55997 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!22247 (not res!44198)) b!85891))

(assert (= (and b!85891 res!44199) b!85892))

(assert (=> d!22247 m!89941))

(assert (=> b!85892 m!89403))

(declare-fun m!90405 () Bool)

(assert (=> b!85892 m!90405))

(assert (=> b!85520 d!22247))

(declare-fun d!22249 () Bool)

(declare-fun res!44200 () Bool)

(declare-fun e!55998 () Bool)

(assert (=> d!22249 (=> (not res!44200) (not e!55998))))

(assert (=> d!22249 (= res!44200 (simpleValid!58 (_2!1113 lt!40354)))))

(assert (=> d!22249 (= (valid!335 (_2!1113 lt!40354)) e!55998)))

(declare-fun b!85893 () Bool)

(declare-fun res!44201 () Bool)

(assert (=> b!85893 (=> (not res!44201) (not e!55998))))

(assert (=> b!85893 (= res!44201 (= (arrayCountValidKeys!0 (_keys!4008 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))) (_size!426 (_2!1113 lt!40354))))))

(declare-fun b!85894 () Bool)

(declare-fun res!44202 () Bool)

(assert (=> b!85894 (=> (not res!44202) (not e!55998))))

(assert (=> b!85894 (= res!44202 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354))))))

(declare-fun b!85895 () Bool)

(assert (=> b!85895 (= e!55998 (arrayNoDuplicates!0 (_keys!4008 (_2!1113 lt!40354)) #b00000000000000000000000000000000 Nil!1523))))

(assert (= (and d!22249 res!44200) b!85893))

(assert (= (and b!85893 res!44201) b!85894))

(assert (= (and b!85894 res!44202) b!85895))

(declare-fun m!90407 () Bool)

(assert (=> d!22249 m!90407))

(declare-fun m!90409 () Bool)

(assert (=> b!85893 m!90409))

(declare-fun m!90411 () Bool)

(assert (=> b!85894 m!90411))

(declare-fun m!90413 () Bool)

(assert (=> b!85895 m!90413))

(assert (=> d!22061 d!22249))

(assert (=> d!22061 d!22071))

(declare-fun d!22251 () Bool)

(declare-fun e!56001 () Bool)

(assert (=> d!22251 e!56001))

(declare-fun c!13975 () Bool)

(assert (=> d!22251 (= c!13975 (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!22251 true))

(declare-fun _$29!108 () Unit!2510)

(assert (=> d!22251 (= (choose!506 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) _$29!108)))

(declare-fun b!85900 () Bool)

(assert (=> b!85900 (= e!56001 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!85901 () Bool)

(assert (=> b!85901 (= e!56001 (ite (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!22251 c!13975) b!85900))

(assert (= (and d!22251 (not c!13975)) b!85901))

(assert (=> b!85900 m!89403))

(assert (=> b!85900 m!89447))

(assert (=> d!22107 d!22251))

(assert (=> d!22107 d!22091))

(declare-fun b!85910 () Bool)

(declare-fun e!56006 () (_ BitVec 32))

(declare-fun call!8174 () (_ BitVec 32))

(assert (=> b!85910 (= e!56006 call!8174)))

(declare-fun b!85911 () Bool)

(declare-fun e!56007 () (_ BitVec 32))

(assert (=> b!85911 (= e!56007 e!56006)))

(declare-fun c!13981 () Bool)

(assert (=> b!85911 (= c!13981 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85912 () Bool)

(assert (=> b!85912 (= e!56007 #b00000000000000000000000000000000)))

(declare-fun bm!8171 () Bool)

(assert (=> bm!8171 (= call!8174 (arrayCountValidKeys!0 (_keys!4008 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!85913 () Bool)

(assert (=> b!85913 (= e!56006 (bvadd #b00000000000000000000000000000001 call!8174))))

(declare-fun d!22253 () Bool)

(declare-fun lt!40674 () (_ BitVec 32))

(assert (=> d!22253 (and (bvsge lt!40674 #b00000000000000000000000000000000) (bvsle lt!40674 (bvsub (size!2151 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22253 (= lt!40674 e!56007)))

(declare-fun c!13980 () Bool)

(assert (=> d!22253 (= c!13980 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22253 (and (bvsle #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2151 (_keys!4008 newMap!16)) (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22253 (= (arrayCountValidKeys!0 (_keys!4008 newMap!16) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) lt!40674)))

(assert (= (and d!22253 c!13980) b!85912))

(assert (= (and d!22253 (not c!13980)) b!85911))

(assert (= (and b!85911 c!13981) b!85913))

(assert (= (and b!85911 (not c!13981)) b!85910))

(assert (= (or b!85913 b!85910) bm!8171))

(assert (=> b!85911 m!89961))

(assert (=> b!85911 m!89961))

(assert (=> b!85911 m!90007))

(declare-fun m!90415 () Bool)

(assert (=> bm!8171 m!90415))

(assert (=> b!85452 d!22253))

(declare-fun d!22255 () Bool)

(assert (=> d!22255 (= (get!1202 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2637 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!85513 d!22255))

(declare-fun d!22257 () Bool)

(declare-fun lt!40675 () Bool)

(assert (=> d!22257 (= lt!40675 (select (content!89 (toList!740 lt!40451)) lt!40143))))

(declare-fun e!56008 () Bool)

(assert (=> d!22257 (= lt!40675 e!56008)))

(declare-fun res!44203 () Bool)

(assert (=> d!22257 (=> (not res!44203) (not e!56008))))

(assert (=> d!22257 (= res!44203 ((_ is Cons!1521) (toList!740 lt!40451)))))

(assert (=> d!22257 (= (contains!753 (toList!740 lt!40451) lt!40143) lt!40675)))

(declare-fun b!85914 () Bool)

(declare-fun e!56009 () Bool)

(assert (=> b!85914 (= e!56008 e!56009)))

(declare-fun res!44204 () Bool)

(assert (=> b!85914 (=> res!44204 e!56009)))

(assert (=> b!85914 (= res!44204 (= (h!2112 (toList!740 lt!40451)) lt!40143))))

(declare-fun b!85915 () Bool)

(assert (=> b!85915 (= e!56009 (contains!753 (t!5237 (toList!740 lt!40451)) lt!40143))))

(assert (= (and d!22257 res!44203) b!85914))

(assert (= (and b!85914 (not res!44204)) b!85915))

(declare-fun m!90417 () Bool)

(assert (=> d!22257 m!90417))

(declare-fun m!90419 () Bool)

(assert (=> d!22257 m!90419))

(declare-fun m!90421 () Bool)

(assert (=> b!85915 m!90421))

(assert (=> b!85466 d!22257))

(declare-fun d!22259 () Bool)

(declare-fun c!13982 () Bool)

(assert (=> d!22259 (= c!13982 (and ((_ is Cons!1521) (toList!740 lt!40435)) (= (_1!1114 (h!2112 (toList!740 lt!40435))) (_1!1114 lt!40140))))))

(declare-fun e!56010 () Option!144)

(assert (=> d!22259 (= (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140)) e!56010)))

(declare-fun b!85919 () Bool)

(declare-fun e!56011 () Option!144)

(assert (=> b!85919 (= e!56011 None!142)))

(declare-fun b!85916 () Bool)

(assert (=> b!85916 (= e!56010 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40435)))))))

(declare-fun b!85918 () Bool)

(assert (=> b!85918 (= e!56011 (getValueByKey!138 (t!5237 (toList!740 lt!40435)) (_1!1114 lt!40140)))))

(declare-fun b!85917 () Bool)

(assert (=> b!85917 (= e!56010 e!56011)))

(declare-fun c!13983 () Bool)

(assert (=> b!85917 (= c!13983 (and ((_ is Cons!1521) (toList!740 lt!40435)) (not (= (_1!1114 (h!2112 (toList!740 lt!40435))) (_1!1114 lt!40140)))))))

(assert (= (and d!22259 c!13982) b!85916))

(assert (= (and d!22259 (not c!13982)) b!85917))

(assert (= (and b!85917 c!13983) b!85918))

(assert (= (and b!85917 (not c!13983)) b!85919))

(declare-fun m!90423 () Bool)

(assert (=> b!85918 m!90423))

(assert (=> b!85459 d!22259))

(declare-fun bm!8172 () Bool)

(declare-fun call!8180 () ListLongMap!1449)

(declare-fun call!8181 () ListLongMap!1449)

(assert (=> bm!8172 (= call!8180 call!8181)))

(declare-fun call!8179 () ListLongMap!1449)

(declare-fun bm!8173 () Bool)

(assert (=> bm!8173 (= call!8179 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!85920 () Bool)

(declare-fun e!56021 () Unit!2510)

(declare-fun Unit!2538 () Unit!2510)

(assert (=> b!85920 (= e!56021 Unit!2538)))

(declare-fun b!85921 () Bool)

(declare-fun e!56023 () Bool)

(assert (=> b!85921 (= e!56023 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun lt!40688 () ListLongMap!1449)

(declare-fun e!56013 () Bool)

(declare-fun b!85922 () Bool)

(assert (=> b!85922 (= e!56013 (= (apply!82 lt!40688 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))

(declare-fun b!85923 () Bool)

(declare-fun c!13989 () Bool)

(assert (=> b!85923 (= c!13989 (and (not (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56017 () ListLongMap!1449)

(declare-fun e!56022 () ListLongMap!1449)

(assert (=> b!85923 (= e!56017 e!56022)))

(declare-fun d!22261 () Bool)

(declare-fun e!56014 () Bool)

(assert (=> d!22261 e!56014))

(declare-fun res!44209 () Bool)

(assert (=> d!22261 (=> (not res!44209) (not e!56014))))

(assert (=> d!22261 (= res!44209 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!40697 () ListLongMap!1449)

(assert (=> d!22261 (= lt!40688 lt!40697)))

(declare-fun lt!40680 () Unit!2510)

(assert (=> d!22261 (= lt!40680 e!56021)))

(declare-fun c!13985 () Bool)

(assert (=> d!22261 (= c!13985 e!56023)))

(declare-fun res!44212 () Bool)

(assert (=> d!22261 (=> (not res!44212) (not e!56023))))

(assert (=> d!22261 (= res!44212 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!56016 () ListLongMap!1449)

(assert (=> d!22261 (= lt!40697 e!56016)))

(declare-fun c!13987 () Bool)

(assert (=> d!22261 (= c!13987 (and (not (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22261 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22261 (= (getCurrentListMap!426 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40688)))

(declare-fun b!85924 () Bool)

(declare-fun lt!40678 () Unit!2510)

(assert (=> b!85924 (= e!56021 lt!40678)))

(declare-fun lt!40684 () ListLongMap!1449)

(assert (=> b!85924 (= lt!40684 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40681 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40681 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40685 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40685 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40696 () Unit!2510)

(assert (=> b!85924 (= lt!40696 (addStillContains!58 lt!40684 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) lt!40685))))

(assert (=> b!85924 (contains!752 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!40685)))

(declare-fun lt!40695 () Unit!2510)

(assert (=> b!85924 (= lt!40695 lt!40696)))

(declare-fun lt!40677 () ListLongMap!1449)

(assert (=> b!85924 (= lt!40677 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40694 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40694 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40689 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40689 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40683 () Unit!2510)

(assert (=> b!85924 (= lt!40683 (addApplyDifferent!58 lt!40677 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) lt!40689))))

(assert (=> b!85924 (= (apply!82 (+!108 lt!40677 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!40689) (apply!82 lt!40677 lt!40689))))

(declare-fun lt!40691 () Unit!2510)

(assert (=> b!85924 (= lt!40691 lt!40683)))

(declare-fun lt!40679 () ListLongMap!1449)

(assert (=> b!85924 (= lt!40679 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40690 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40690 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40692 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40692 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!40682 () Unit!2510)

(assert (=> b!85924 (= lt!40682 (addApplyDifferent!58 lt!40679 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) lt!40692))))

(assert (=> b!85924 (= (apply!82 (+!108 lt!40679 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!40692) (apply!82 lt!40679 lt!40692))))

(declare-fun lt!40686 () Unit!2510)

(assert (=> b!85924 (= lt!40686 lt!40682)))

(declare-fun lt!40676 () ListLongMap!1449)

(assert (=> b!85924 (= lt!40676 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40687 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40687 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!40693 () (_ BitVec 64))

(assert (=> b!85924 (= lt!40693 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!85924 (= lt!40678 (addApplyDifferent!58 lt!40676 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) lt!40693))))

(assert (=> b!85924 (= (apply!82 (+!108 lt!40676 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!40693) (apply!82 lt!40676 lt!40693))))

(declare-fun b!85925 () Bool)

(assert (=> b!85925 (= e!56016 (+!108 call!8181 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))

(declare-fun b!85926 () Bool)

(declare-fun e!56020 () Bool)

(declare-fun e!56019 () Bool)

(assert (=> b!85926 (= e!56020 e!56019)))

(declare-fun res!44207 () Bool)

(declare-fun call!8175 () Bool)

(assert (=> b!85926 (= res!44207 call!8175)))

(assert (=> b!85926 (=> (not res!44207) (not e!56019))))

(declare-fun bm!8174 () Bool)

(assert (=> bm!8174 (= call!8175 (contains!752 lt!40688 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85927 () Bool)

(declare-fun res!44205 () Bool)

(assert (=> b!85927 (=> (not res!44205) (not e!56014))))

(declare-fun e!56012 () Bool)

(assert (=> b!85927 (= res!44205 e!56012)))

(declare-fun c!13988 () Bool)

(assert (=> b!85927 (= c!13988 (not (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8175 () Bool)

(declare-fun call!8176 () ListLongMap!1449)

(declare-fun call!8178 () ListLongMap!1449)

(assert (=> bm!8175 (= call!8176 call!8178)))

(declare-fun b!85928 () Bool)

(assert (=> b!85928 (= e!56022 call!8176)))

(declare-fun b!85929 () Bool)

(declare-fun e!56018 () Bool)

(declare-fun e!56024 () Bool)

(assert (=> b!85929 (= e!56018 e!56024)))

(declare-fun res!44206 () Bool)

(assert (=> b!85929 (=> (not res!44206) (not e!56024))))

(assert (=> b!85929 (= res!44206 (contains!752 lt!40688 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!85929 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!85930 () Bool)

(assert (=> b!85930 (= e!56020 (not call!8175))))

(declare-fun b!85931 () Bool)

(assert (=> b!85931 (= e!56017 call!8180)))

(declare-fun b!85932 () Bool)

(declare-fun call!8177 () Bool)

(assert (=> b!85932 (= e!56012 (not call!8177))))

(declare-fun b!85933 () Bool)

(assert (=> b!85933 (= e!56012 e!56013)))

(declare-fun res!44210 () Bool)

(assert (=> b!85933 (= res!44210 call!8177)))

(assert (=> b!85933 (=> (not res!44210) (not e!56013))))

(declare-fun b!85934 () Bool)

(assert (=> b!85934 (= e!56019 (= (apply!82 lt!40688 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))

(declare-fun b!85935 () Bool)

(declare-fun res!44213 () Bool)

(assert (=> b!85935 (=> (not res!44213) (not e!56014))))

(assert (=> b!85935 (= res!44213 e!56018)))

(declare-fun res!44208 () Bool)

(assert (=> b!85935 (=> res!44208 e!56018)))

(declare-fun e!56015 () Bool)

(assert (=> b!85935 (= res!44208 (not e!56015))))

(declare-fun res!44211 () Bool)

(assert (=> b!85935 (=> (not res!44211) (not e!56015))))

(assert (=> b!85935 (= res!44211 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8176 () Bool)

(assert (=> bm!8176 (= call!8177 (contains!752 lt!40688 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85936 () Bool)

(assert (=> b!85936 (= e!56014 e!56020)))

(declare-fun c!13984 () Bool)

(assert (=> b!85936 (= c!13984 (not (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!85937 () Bool)

(assert (=> b!85937 (= e!56015 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85938 () Bool)

(assert (=> b!85938 (= e!56024 (= (apply!82 lt!40688 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85938 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))))))))

(assert (=> b!85938 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8177 () Bool)

(declare-fun c!13986 () Bool)

(assert (=> bm!8177 (= call!8181 (+!108 (ite c!13987 call!8179 (ite c!13986 call!8178 call!8176)) (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(declare-fun bm!8178 () Bool)

(assert (=> bm!8178 (= call!8178 call!8179)))

(declare-fun b!85939 () Bool)

(assert (=> b!85939 (= e!56022 call!8180)))

(declare-fun b!85940 () Bool)

(assert (=> b!85940 (= e!56016 e!56017)))

(assert (=> b!85940 (= c!13986 (and (not (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!22261 c!13987) b!85925))

(assert (= (and d!22261 (not c!13987)) b!85940))

(assert (= (and b!85940 c!13986) b!85931))

(assert (= (and b!85940 (not c!13986)) b!85923))

(assert (= (and b!85923 c!13989) b!85939))

(assert (= (and b!85923 (not c!13989)) b!85928))

(assert (= (or b!85939 b!85928) bm!8175))

(assert (= (or b!85931 bm!8175) bm!8178))

(assert (= (or b!85931 b!85939) bm!8172))

(assert (= (or b!85925 bm!8178) bm!8173))

(assert (= (or b!85925 bm!8172) bm!8177))

(assert (= (and d!22261 res!44212) b!85921))

(assert (= (and d!22261 c!13985) b!85924))

(assert (= (and d!22261 (not c!13985)) b!85920))

(assert (= (and d!22261 res!44209) b!85935))

(assert (= (and b!85935 res!44211) b!85937))

(assert (= (and b!85935 (not res!44208)) b!85929))

(assert (= (and b!85929 res!44206) b!85938))

(assert (= (and b!85935 res!44213) b!85927))

(assert (= (and b!85927 c!13988) b!85933))

(assert (= (and b!85927 (not c!13988)) b!85932))

(assert (= (and b!85933 res!44210) b!85922))

(assert (= (or b!85933 b!85932) bm!8176))

(assert (= (and b!85927 res!44205) b!85936))

(assert (= (and b!85936 c!13984) b!85926))

(assert (= (and b!85936 (not c!13984)) b!85930))

(assert (= (and b!85926 res!44207) b!85934))

(assert (= (or b!85926 b!85930) bm!8174))

(declare-fun b_lambda!3809 () Bool)

(assert (=> (not b_lambda!3809) (not b!85938)))

(assert (=> b!85938 t!5251))

(declare-fun b_and!5197 () Bool)

(assert (= b_and!5193 (and (=> t!5251 result!2923) b_and!5197)))

(assert (=> b!85938 t!5253))

(declare-fun b_and!5199 () Bool)

(assert (= b_and!5195 (and (=> t!5253 result!2925) b_and!5199)))

(assert (=> b!85924 m!89961))

(declare-fun m!90425 () Bool)

(assert (=> b!85924 m!90425))

(declare-fun m!90427 () Bool)

(assert (=> b!85924 m!90427))

(declare-fun m!90429 () Bool)

(assert (=> b!85924 m!90429))

(declare-fun m!90431 () Bool)

(assert (=> b!85924 m!90431))

(declare-fun m!90433 () Bool)

(assert (=> b!85924 m!90433))

(declare-fun m!90435 () Bool)

(assert (=> b!85924 m!90435))

(assert (=> b!85924 m!90429))

(declare-fun m!90437 () Bool)

(assert (=> b!85924 m!90437))

(declare-fun m!90439 () Bool)

(assert (=> b!85924 m!90439))

(declare-fun m!90441 () Bool)

(assert (=> b!85924 m!90441))

(assert (=> b!85924 m!90437))

(assert (=> b!85924 m!90441))

(declare-fun m!90443 () Bool)

(assert (=> b!85924 m!90443))

(declare-fun m!90445 () Bool)

(assert (=> b!85924 m!90445))

(declare-fun m!90447 () Bool)

(assert (=> b!85924 m!90447))

(declare-fun m!90449 () Bool)

(assert (=> b!85924 m!90449))

(declare-fun m!90451 () Bool)

(assert (=> b!85924 m!90451))

(declare-fun m!90453 () Bool)

(assert (=> b!85924 m!90453))

(declare-fun m!90455 () Bool)

(assert (=> b!85924 m!90455))

(assert (=> b!85924 m!90447))

(declare-fun m!90457 () Bool)

(assert (=> bm!8177 m!90457))

(assert (=> b!85929 m!89961))

(assert (=> b!85929 m!89961))

(declare-fun m!90459 () Bool)

(assert (=> b!85929 m!90459))

(declare-fun m!90461 () Bool)

(assert (=> bm!8176 m!90461))

(assert (=> d!22261 m!90001))

(declare-fun m!90463 () Bool)

(assert (=> b!85922 m!90463))

(declare-fun m!90465 () Bool)

(assert (=> bm!8174 m!90465))

(assert (=> b!85937 m!89961))

(assert (=> b!85937 m!89961))

(assert (=> b!85937 m!90007))

(assert (=> bm!8173 m!90435))

(assert (=> b!85921 m!89961))

(assert (=> b!85921 m!89961))

(assert (=> b!85921 m!90007))

(declare-fun m!90467 () Bool)

(assert (=> b!85925 m!90467))

(assert (=> b!85938 m!89961))

(assert (=> b!85938 m!90011))

(declare-fun m!90469 () Bool)

(assert (=> b!85938 m!90469))

(assert (=> b!85938 m!89961))

(declare-fun m!90471 () Bool)

(assert (=> b!85938 m!90471))

(assert (=> b!85938 m!90469))

(assert (=> b!85938 m!90011))

(declare-fun m!90473 () Bool)

(assert (=> b!85938 m!90473))

(declare-fun m!90475 () Bool)

(assert (=> b!85934 m!90475))

(assert (=> bm!8088 d!22261))

(declare-fun b!85975 () Bool)

(declare-fun e!56048 () Bool)

(declare-fun lt!40772 () tuple2!2204)

(assert (=> b!85975 (= e!56048 (= (map!1186 (_2!1113 lt!40772)) (+!108 (map!1186 newMap!16) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56047 () Bool)

(declare-fun b!85976 () Bool)

(declare-fun lt!40761 () SeekEntryResult!246)

(assert (=> b!85976 (= e!56047 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40761)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85977 () Bool)

(declare-fun e!56043 () Unit!2510)

(declare-fun Unit!2539 () Unit!2510)

(assert (=> b!85977 (= e!56043 Unit!2539)))

(declare-fun b!85978 () Bool)

(declare-fun res!44234 () Bool)

(declare-fun call!8190 () Bool)

(assert (=> b!85978 (= res!44234 call!8190)))

(assert (=> b!85978 (=> (not res!44234) (not e!56047))))

(declare-fun b!85979 () Bool)

(declare-fun res!44240 () Bool)

(declare-fun e!56044 () Bool)

(assert (=> b!85979 (=> (not res!44240) (not e!56044))))

(declare-fun call!8191 () Bool)

(assert (=> b!85979 (= res!44240 call!8191)))

(declare-fun e!56041 () Bool)

(assert (=> b!85979 (= e!56041 e!56044)))

(declare-fun d!22263 () Bool)

(assert (=> d!22263 e!56048))

(declare-fun res!44237 () Bool)

(assert (=> d!22263 (=> (not res!44237) (not e!56048))))

(assert (=> d!22263 (= res!44237 (_1!1113 lt!40772))))

(assert (=> d!22263 (= lt!40772 (tuple2!2205 true (LongMapFixedSize!755 (defaultEntry!2337 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd (_size!426 newMap!16) #b00000000000000000000000000000001) (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (_vacant!426 newMap!16))))))

(declare-fun lt!40768 () Unit!2510)

(declare-fun lt!40784 () Unit!2510)

(assert (=> d!22263 (= lt!40768 lt!40784)))

(declare-fun lt!40778 () array!4007)

(declare-fun lt!40770 () array!4005)

(assert (=> d!22263 (contains!752 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))

(assert (=> d!22263 (= lt!40784 (lemmaValidKeyInArrayIsInListMap!90 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22263 (= lt!40778 (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))))

(assert (=> d!22263 (= lt!40770 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun lt!40764 () Unit!2510)

(declare-fun lt!40781 () Unit!2510)

(assert (=> d!22263 (= lt!40764 lt!40781)))

(declare-fun lt!40763 () array!4005)

(assert (=> d!22263 (= (arrayCountValidKeys!0 lt!40763 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4005 (_ BitVec 32)) Unit!2510)

(assert (=> d!22263 (= lt!40781 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40763 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))

(assert (=> d!22263 (= lt!40763 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun lt!40771 () Unit!2510)

(declare-fun lt!40777 () Unit!2510)

(assert (=> d!22263 (= lt!40771 lt!40777)))

(declare-fun lt!40765 () array!4005)

(assert (=> d!22263 (arrayContainsKey!0 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!22263 (= lt!40777 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))

(assert (=> d!22263 (= lt!40765 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun lt!40786 () Unit!2510)

(declare-fun lt!40787 () Unit!2510)

(assert (=> d!22263 (= lt!40786 lt!40787)))

(assert (=> d!22263 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (getCurrentListMap!426 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!19 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2510)

(assert (=> d!22263 (= lt!40787 (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40782 () Unit!2510)

(declare-fun lt!40767 () Unit!2510)

(assert (=> d!22263 (= lt!40782 lt!40767)))

(assert (=> d!22263 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (mask!6364 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4005 (_ BitVec 32) (_ BitVec 32)) Unit!2510)

(assert (=> d!22263 (= lt!40767 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (mask!6364 newMap!16)))))

(declare-fun lt!40785 () Unit!2510)

(declare-fun lt!40758 () Unit!2510)

(assert (=> d!22263 (= lt!40785 lt!40758)))

(assert (=> d!22263 (= (arrayCountValidKeys!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4008 newMap!16) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4005 (_ BitVec 32) (_ BitVec 64)) Unit!2510)

(assert (=> d!22263 (= lt!40758 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4008 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun lt!40779 () Unit!2510)

(declare-fun lt!40774 () Unit!2510)

(assert (=> d!22263 (= lt!40779 lt!40774)))

(declare-fun lt!40780 () (_ BitVec 32))

(declare-fun lt!40773 () List!1526)

(assert (=> d!22263 (arrayNoDuplicates!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) lt!40780 lt!40773)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4005 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1526) Unit!2510)

(assert (=> d!22263 (= lt!40774 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) lt!40780 lt!40773))))

(assert (=> d!22263 (= lt!40773 Nil!1523)))

(assert (=> d!22263 (= lt!40780 #b00000000000000000000000000000000)))

(declare-fun lt!40762 () Unit!2510)

(assert (=> d!22263 (= lt!40762 e!56043)))

(declare-fun c!13998 () Bool)

(assert (=> d!22263 (= c!13998 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!40776 () Unit!2510)

(declare-fun e!56042 () Unit!2510)

(assert (=> d!22263 (= lt!40776 e!56042)))

(declare-fun c!14000 () Bool)

(assert (=> d!22263 (= c!14000 (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22263 (valid!335 newMap!16)))

(assert (=> d!22263 (= (updateHelperNewKey!31 newMap!16 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))) lt!40772)))

(declare-fun b!85980 () Bool)

(declare-fun Unit!2540 () Unit!2510)

(assert (=> b!85980 (= e!56042 Unit!2540)))

(declare-fun lt!40769 () Unit!2510)

(assert (=> b!85980 (= lt!40769 (lemmaInListMapThenSeekEntryOrOpenFindsIt!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun call!8192 () SeekEntryResult!246)

(assert (=> b!85980 (= lt!40761 call!8192)))

(declare-fun res!44232 () Bool)

(assert (=> b!85980 (= res!44232 ((_ is Found!246) lt!40761))))

(assert (=> b!85980 (=> (not res!44232) (not e!56047))))

(assert (=> b!85980 e!56047))

(declare-fun lt!40760 () Unit!2510)

(assert (=> b!85980 (= lt!40760 lt!40769)))

(assert (=> b!85980 false))

(declare-fun b!85981 () Bool)

(declare-fun call!8193 () Bool)

(assert (=> b!85981 (= e!56044 (not call!8193))))

(declare-fun b!85982 () Bool)

(declare-fun lt!40766 () Unit!2510)

(assert (=> b!85982 (= e!56042 lt!40766)))

(assert (=> b!85982 (= lt!40766 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(declare-fun lt!40775 () SeekEntryResult!246)

(assert (=> b!85982 (= lt!40775 call!8192)))

(declare-fun c!13999 () Bool)

(assert (=> b!85982 (= c!13999 ((_ is MissingZero!246) lt!40775))))

(assert (=> b!85982 e!56041))

(declare-fun b!85983 () Bool)

(declare-fun Unit!2541 () Unit!2510)

(assert (=> b!85983 (= e!56043 Unit!2541)))

(declare-fun lt!40783 () Unit!2510)

(declare-fun lemmaArrayContainsKeyThenInListMap!19 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2510)

(assert (=> b!85983 (= lt!40783 (lemmaArrayContainsKeyThenInListMap!19 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> b!85983 (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))

(declare-fun lt!40759 () Unit!2510)

(assert (=> b!85983 (= lt!40759 lt!40783)))

(assert (=> b!85983 false))

(declare-fun bm!8187 () Bool)

(assert (=> bm!8187 (= call!8190 (inRange!0 (ite c!14000 (index!3122 lt!40761) (ite c!13999 (index!3121 lt!40775) (index!3124 lt!40775))) (mask!6364 newMap!16)))))

(declare-fun b!85984 () Bool)

(declare-fun res!44236 () Bool)

(assert (=> b!85984 (=> (not res!44236) (not e!56048))))

(assert (=> b!85984 (= res!44236 (valid!335 (_2!1113 lt!40772)))))

(declare-fun bm!8188 () Bool)

(assert (=> bm!8188 (= call!8192 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!85985 () Bool)

(declare-fun res!44233 () Bool)

(assert (=> b!85985 (=> (not res!44233) (not e!56044))))

(assert (=> b!85985 (= res!44233 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!40775)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!85986 () Bool)

(declare-fun c!14001 () Bool)

(assert (=> b!85986 (= c!14001 ((_ is MissingVacant!246) lt!40775))))

(declare-fun e!56045 () Bool)

(assert (=> b!85986 (= e!56041 e!56045)))

(declare-fun bm!8189 () Bool)

(assert (=> bm!8189 (= call!8191 call!8190)))

(declare-fun b!85987 () Bool)

(declare-fun res!44238 () Bool)

(assert (=> b!85987 (=> (not res!44238) (not e!56048))))

(assert (=> b!85987 (= res!44238 (contains!752 (map!1186 (_2!1113 lt!40772)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85988 () Bool)

(declare-fun e!56046 () Bool)

(assert (=> b!85988 (= e!56045 e!56046)))

(declare-fun res!44239 () Bool)

(assert (=> b!85988 (= res!44239 call!8191)))

(assert (=> b!85988 (=> (not res!44239) (not e!56046))))

(declare-fun b!85989 () Bool)

(assert (=> b!85989 (= e!56046 (not call!8193))))

(declare-fun b!85990 () Bool)

(assert (=> b!85990 (= e!56045 ((_ is Undefined!246) lt!40775))))

(declare-fun b!85991 () Bool)

(declare-fun res!44235 () Bool)

(assert (=> b!85991 (= res!44235 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!40775)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85991 (=> (not res!44235) (not e!56046))))

(declare-fun bm!8190 () Bool)

(assert (=> bm!8190 (= call!8193 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!22263 c!14000) b!85980))

(assert (= (and d!22263 (not c!14000)) b!85982))

(assert (= (and b!85980 res!44232) b!85978))

(assert (= (and b!85978 res!44234) b!85976))

(assert (= (and b!85982 c!13999) b!85979))

(assert (= (and b!85982 (not c!13999)) b!85986))

(assert (= (and b!85979 res!44240) b!85985))

(assert (= (and b!85985 res!44233) b!85981))

(assert (= (and b!85986 c!14001) b!85988))

(assert (= (and b!85986 (not c!14001)) b!85990))

(assert (= (and b!85988 res!44239) b!85991))

(assert (= (and b!85991 res!44235) b!85989))

(assert (= (or b!85979 b!85988) bm!8189))

(assert (= (or b!85981 b!85989) bm!8190))

(assert (= (or b!85978 bm!8189) bm!8187))

(assert (= (or b!85980 b!85982) bm!8188))

(assert (= (and d!22263 c!13998) b!85983))

(assert (= (and d!22263 (not c!13998)) b!85977))

(assert (= (and d!22263 res!44237) b!85984))

(assert (= (and b!85984 res!44236) b!85987))

(assert (= (and b!85987 res!44238) b!85975))

(assert (=> b!85983 m!89403))

(declare-fun m!90477 () Bool)

(assert (=> b!85983 m!90477))

(assert (=> b!85983 m!89631))

(assert (=> b!85983 m!89631))

(assert (=> b!85983 m!89403))

(assert (=> b!85983 m!89637))

(assert (=> bm!8188 m!89403))

(assert (=> bm!8188 m!89629))

(assert (=> bm!8190 m!89403))

(assert (=> bm!8190 m!89647))

(assert (=> b!85982 m!89403))

(assert (=> b!85982 m!89653))

(declare-fun m!90479 () Bool)

(assert (=> b!85984 m!90479))

(declare-fun m!90481 () Bool)

(assert (=> b!85976 m!90481))

(assert (=> d!22263 m!89715))

(declare-fun m!90483 () Bool)

(assert (=> d!22263 m!90483))

(assert (=> d!22263 m!89631))

(declare-fun m!90485 () Bool)

(assert (=> d!22263 m!90485))

(declare-fun m!90487 () Bool)

(assert (=> d!22263 m!90487))

(declare-fun m!90489 () Bool)

(assert (=> d!22263 m!90489))

(assert (=> d!22263 m!90483))

(declare-fun m!90491 () Bool)

(assert (=> d!22263 m!90491))

(assert (=> d!22263 m!89631))

(assert (=> d!22263 m!89403))

(assert (=> d!22263 m!89637))

(declare-fun m!90493 () Bool)

(assert (=> d!22263 m!90493))

(declare-fun m!90495 () Bool)

(assert (=> d!22263 m!90495))

(declare-fun m!90497 () Bool)

(assert (=> d!22263 m!90497))

(assert (=> d!22263 m!89631))

(declare-fun m!90499 () Bool)

(assert (=> d!22263 m!90499))

(assert (=> d!22263 m!90489))

(assert (=> d!22263 m!89411))

(declare-fun m!90501 () Bool)

(assert (=> d!22263 m!90501))

(declare-fun m!90503 () Bool)

(assert (=> d!22263 m!90503))

(assert (=> d!22263 m!89403))

(declare-fun m!90505 () Bool)

(assert (=> d!22263 m!90505))

(assert (=> d!22263 m!89403))

(declare-fun m!90507 () Bool)

(assert (=> d!22263 m!90507))

(assert (=> d!22263 m!89403))

(declare-fun m!90509 () Bool)

(assert (=> d!22263 m!90509))

(assert (=> d!22263 m!89403))

(declare-fun m!90511 () Bool)

(assert (=> d!22263 m!90511))

(declare-fun m!90513 () Bool)

(assert (=> d!22263 m!90513))

(declare-fun m!90515 () Bool)

(assert (=> d!22263 m!90515))

(assert (=> d!22263 m!89403))

(declare-fun m!90517 () Bool)

(assert (=> d!22263 m!90517))

(assert (=> d!22263 m!89403))

(declare-fun m!90519 () Bool)

(assert (=> d!22263 m!90519))

(assert (=> d!22263 m!89403))

(assert (=> d!22263 m!89647))

(declare-fun m!90521 () Bool)

(assert (=> b!85991 m!90521))

(declare-fun m!90523 () Bool)

(assert (=> bm!8187 m!90523))

(assert (=> b!85980 m!89403))

(assert (=> b!85980 m!89605))

(declare-fun m!90525 () Bool)

(assert (=> b!85987 m!90525))

(assert (=> b!85987 m!90525))

(assert (=> b!85987 m!89403))

(declare-fun m!90527 () Bool)

(assert (=> b!85987 m!90527))

(assert (=> b!85975 m!90525))

(assert (=> b!85975 m!89461))

(assert (=> b!85975 m!89461))

(declare-fun m!90529 () Bool)

(assert (=> b!85975 m!90529))

(declare-fun m!90531 () Bool)

(assert (=> b!85985 m!90531))

(assert (=> bm!8083 d!22263))

(declare-fun d!22265 () Bool)

(declare-fun e!56050 () Bool)

(assert (=> d!22265 e!56050))

(declare-fun res!44241 () Bool)

(assert (=> d!22265 (=> res!44241 e!56050)))

(declare-fun lt!40788 () Bool)

(assert (=> d!22265 (= res!44241 (not lt!40788))))

(declare-fun lt!40791 () Bool)

(assert (=> d!22265 (= lt!40788 lt!40791)))

(declare-fun lt!40789 () Unit!2510)

(declare-fun e!56049 () Unit!2510)

(assert (=> d!22265 (= lt!40789 e!56049)))

(declare-fun c!14002 () Bool)

(assert (=> d!22265 (= c!14002 lt!40791)))

(assert (=> d!22265 (= lt!40791 (containsKey!142 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22265 (= (contains!752 call!8082 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!40788)))

(declare-fun b!85992 () Bool)

(declare-fun lt!40790 () Unit!2510)

(assert (=> b!85992 (= e!56049 lt!40790)))

(assert (=> b!85992 (= lt!40790 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!85992 (isDefined!92 (getValueByKey!138 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!85993 () Bool)

(declare-fun Unit!2542 () Unit!2510)

(assert (=> b!85993 (= e!56049 Unit!2542)))

(declare-fun b!85994 () Bool)

(assert (=> b!85994 (= e!56050 (isDefined!92 (getValueByKey!138 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (= (and d!22265 c!14002) b!85992))

(assert (= (and d!22265 (not c!14002)) b!85993))

(assert (= (and d!22265 (not res!44241)) b!85994))

(assert (=> d!22265 m!89403))

(declare-fun m!90533 () Bool)

(assert (=> d!22265 m!90533))

(assert (=> b!85992 m!89403))

(declare-fun m!90535 () Bool)

(assert (=> b!85992 m!90535))

(assert (=> b!85992 m!89403))

(declare-fun m!90537 () Bool)

(assert (=> b!85992 m!90537))

(assert (=> b!85992 m!90537))

(declare-fun m!90539 () Bool)

(assert (=> b!85992 m!90539))

(assert (=> b!85994 m!89403))

(assert (=> b!85994 m!90537))

(assert (=> b!85994 m!90537))

(assert (=> b!85994 m!90539))

(assert (=> b!85368 d!22265))

(assert (=> d!22103 d!22109))

(declare-fun d!22267 () Bool)

(assert (=> d!22267 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) from!355 Nil!1523)))

(assert (=> d!22267 true))

(declare-fun _$71!114 () Unit!2510)

(assert (=> d!22267 (= (choose!39 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!114)))

(declare-fun bs!3616 () Bool)

(assert (= bs!3616 d!22267))

(assert (=> bs!3616 m!89443))

(assert (=> d!22103 d!22267))

(declare-fun b!85995 () Bool)

(declare-fun e!56053 () Bool)

(declare-fun e!56052 () Bool)

(assert (=> b!85995 (= e!56053 e!56052)))

(declare-fun c!14003 () Bool)

(assert (=> b!85995 (= c!14003 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85996 () Bool)

(declare-fun call!8194 () Bool)

(assert (=> b!85996 (= e!56052 call!8194)))

(declare-fun bm!8191 () Bool)

(assert (=> bm!8191 (= call!8194 (arrayNoDuplicates!0 (_keys!4008 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14003 (Cons!1522 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) Nil!1523) Nil!1523)))))

(declare-fun d!22269 () Bool)

(declare-fun res!44242 () Bool)

(declare-fun e!56051 () Bool)

(assert (=> d!22269 (=> res!44242 e!56051)))

(assert (=> d!22269 (= res!44242 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22269 (= (arrayNoDuplicates!0 (_keys!4008 newMap!16) #b00000000000000000000000000000000 Nil!1523) e!56051)))

(declare-fun b!85997 () Bool)

(assert (=> b!85997 (= e!56051 e!56053)))

(declare-fun res!44244 () Bool)

(assert (=> b!85997 (=> (not res!44244) (not e!56053))))

(declare-fun e!56054 () Bool)

(assert (=> b!85997 (= res!44244 (not e!56054))))

(declare-fun res!44243 () Bool)

(assert (=> b!85997 (=> (not res!44243) (not e!56054))))

(assert (=> b!85997 (= res!44243 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85998 () Bool)

(assert (=> b!85998 (= e!56054 (contains!754 Nil!1523 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!85999 () Bool)

(assert (=> b!85999 (= e!56052 call!8194)))

(assert (= (and d!22269 (not res!44242)) b!85997))

(assert (= (and b!85997 res!44243) b!85998))

(assert (= (and b!85997 res!44244) b!85995))

(assert (= (and b!85995 c!14003) b!85996))

(assert (= (and b!85995 (not c!14003)) b!85999))

(assert (= (or b!85996 b!85999) bm!8191))

(assert (=> b!85995 m!89961))

(assert (=> b!85995 m!89961))

(assert (=> b!85995 m!90007))

(assert (=> bm!8191 m!89961))

(declare-fun m!90541 () Bool)

(assert (=> bm!8191 m!90541))

(assert (=> b!85997 m!89961))

(assert (=> b!85997 m!89961))

(assert (=> b!85997 m!90007))

(assert (=> b!85998 m!89961))

(assert (=> b!85998 m!89961))

(declare-fun m!90543 () Bool)

(assert (=> b!85998 m!90543))

(assert (=> b!85454 d!22269))

(declare-fun d!22271 () Bool)

(declare-fun e!56056 () Bool)

(assert (=> d!22271 e!56056))

(declare-fun res!44245 () Bool)

(assert (=> d!22271 (=> res!44245 e!56056)))

(declare-fun lt!40792 () Bool)

(assert (=> d!22271 (= res!44245 (not lt!40792))))

(declare-fun lt!40795 () Bool)

(assert (=> d!22271 (= lt!40792 lt!40795)))

(declare-fun lt!40793 () Unit!2510)

(declare-fun e!56055 () Unit!2510)

(assert (=> d!22271 (= lt!40793 e!56055)))

(declare-fun c!14004 () Bool)

(assert (=> d!22271 (= c!14004 lt!40795)))

(assert (=> d!22271 (= lt!40795 (containsKey!142 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!22271 (= (contains!752 lt!40471 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40792)))

(declare-fun b!86000 () Bool)

(declare-fun lt!40794 () Unit!2510)

(assert (=> b!86000 (= e!56055 lt!40794)))

(assert (=> b!86000 (= lt!40794 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!86000 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86001 () Bool)

(declare-fun Unit!2543 () Unit!2510)

(assert (=> b!86001 (= e!56055 Unit!2543)))

(declare-fun b!86002 () Bool)

(assert (=> b!86002 (= e!56056 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!22271 c!14004) b!86000))

(assert (= (and d!22271 (not c!14004)) b!86001))

(assert (= (and d!22271 (not res!44245)) b!86002))

(assert (=> d!22271 m!89659))

(declare-fun m!90545 () Bool)

(assert (=> d!22271 m!90545))

(assert (=> b!86000 m!89659))

(declare-fun m!90547 () Bool)

(assert (=> b!86000 m!90547))

(assert (=> b!86000 m!89659))

(assert (=> b!86000 m!90291))

(assert (=> b!86000 m!90291))

(declare-fun m!90549 () Bool)

(assert (=> b!86000 m!90549))

(assert (=> b!86002 m!89659))

(assert (=> b!86002 m!90291))

(assert (=> b!86002 m!90291))

(assert (=> b!86002 m!90549))

(assert (=> b!85499 d!22271))

(declare-fun d!22273 () Bool)

(declare-fun e!56058 () Bool)

(assert (=> d!22273 e!56058))

(declare-fun res!44246 () Bool)

(assert (=> d!22273 (=> res!44246 e!56058)))

(declare-fun lt!40796 () Bool)

(assert (=> d!22273 (= res!44246 (not lt!40796))))

(declare-fun lt!40799 () Bool)

(assert (=> d!22273 (= lt!40796 lt!40799)))

(declare-fun lt!40797 () Unit!2510)

(declare-fun e!56057 () Unit!2510)

(assert (=> d!22273 (= lt!40797 e!56057)))

(declare-fun c!14005 () Bool)

(assert (=> d!22273 (= c!14005 lt!40799)))

(assert (=> d!22273 (= lt!40799 (containsKey!142 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22273 (= (contains!752 lt!40415 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40796)))

(declare-fun b!86003 () Bool)

(declare-fun lt!40798 () Unit!2510)

(assert (=> b!86003 (= e!56057 lt!40798)))

(assert (=> b!86003 (= lt!40798 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86003 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86004 () Bool)

(declare-fun Unit!2544 () Unit!2510)

(assert (=> b!86004 (= e!56057 Unit!2544)))

(declare-fun b!86005 () Bool)

(assert (=> b!86005 (= e!56058 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22273 c!14005) b!86003))

(assert (= (and d!22273 (not c!14005)) b!86004))

(assert (= (and d!22273 (not res!44246)) b!86005))

(declare-fun m!90551 () Bool)

(assert (=> d!22273 m!90551))

(declare-fun m!90553 () Bool)

(assert (=> b!86003 m!90553))

(declare-fun m!90555 () Bool)

(assert (=> b!86003 m!90555))

(assert (=> b!86003 m!90555))

(declare-fun m!90557 () Bool)

(assert (=> b!86003 m!90557))

(assert (=> b!86005 m!90555))

(assert (=> b!86005 m!90555))

(assert (=> b!86005 m!90557))

(assert (=> bm!8117 d!22273))

(declare-fun d!22275 () Bool)

(declare-fun lt!40800 () Bool)

(assert (=> d!22275 (= lt!40800 (select (content!89 (toList!740 lt!40476)) lt!40153))))

(declare-fun e!56059 () Bool)

(assert (=> d!22275 (= lt!40800 e!56059)))

(declare-fun res!44247 () Bool)

(assert (=> d!22275 (=> (not res!44247) (not e!56059))))

(assert (=> d!22275 (= res!44247 ((_ is Cons!1521) (toList!740 lt!40476)))))

(assert (=> d!22275 (= (contains!753 (toList!740 lt!40476) lt!40153) lt!40800)))

(declare-fun b!86006 () Bool)

(declare-fun e!56060 () Bool)

(assert (=> b!86006 (= e!56059 e!56060)))

(declare-fun res!44248 () Bool)

(assert (=> b!86006 (=> res!44248 e!56060)))

(assert (=> b!86006 (= res!44248 (= (h!2112 (toList!740 lt!40476)) lt!40153))))

(declare-fun b!86007 () Bool)

(assert (=> b!86007 (= e!56060 (contains!753 (t!5237 (toList!740 lt!40476)) lt!40153))))

(assert (= (and d!22275 res!44247) b!86006))

(assert (= (and b!86006 (not res!44248)) b!86007))

(declare-fun m!90559 () Bool)

(assert (=> d!22275 m!90559))

(declare-fun m!90561 () Bool)

(assert (=> d!22275 m!90561))

(declare-fun m!90563 () Bool)

(assert (=> b!86007 m!90563))

(assert (=> b!85504 d!22275))

(assert (=> b!85525 d!22105))

(declare-fun d!22277 () Bool)

(declare-fun e!56062 () Bool)

(assert (=> d!22277 e!56062))

(declare-fun res!44249 () Bool)

(assert (=> d!22277 (=> res!44249 e!56062)))

(declare-fun lt!40801 () Bool)

(assert (=> d!22277 (= res!44249 (not lt!40801))))

(declare-fun lt!40804 () Bool)

(assert (=> d!22277 (= lt!40801 lt!40804)))

(declare-fun lt!40802 () Unit!2510)

(declare-fun e!56061 () Unit!2510)

(assert (=> d!22277 (= lt!40802 e!56061)))

(declare-fun c!14006 () Bool)

(assert (=> d!22277 (= c!14006 lt!40804)))

(assert (=> d!22277 (= lt!40804 (containsKey!142 (toList!740 lt!40484) (_1!1114 lt!40140)))))

(assert (=> d!22277 (= (contains!752 lt!40484 (_1!1114 lt!40140)) lt!40801)))

(declare-fun b!86008 () Bool)

(declare-fun lt!40803 () Unit!2510)

(assert (=> b!86008 (= e!56061 lt!40803)))

(assert (=> b!86008 (= lt!40803 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40484) (_1!1114 lt!40140)))))

(assert (=> b!86008 (isDefined!92 (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140)))))

(declare-fun b!86009 () Bool)

(declare-fun Unit!2545 () Unit!2510)

(assert (=> b!86009 (= e!56061 Unit!2545)))

(declare-fun b!86010 () Bool)

(assert (=> b!86010 (= e!56062 (isDefined!92 (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140))))))

(assert (= (and d!22277 c!14006) b!86008))

(assert (= (and d!22277 (not c!14006)) b!86009))

(assert (= (and d!22277 (not res!44249)) b!86010))

(declare-fun m!90565 () Bool)

(assert (=> d!22277 m!90565))

(declare-fun m!90567 () Bool)

(assert (=> b!86008 m!90567))

(assert (=> b!86008 m!89841))

(assert (=> b!86008 m!89841))

(declare-fun m!90569 () Bool)

(assert (=> b!86008 m!90569))

(assert (=> b!86010 m!89841))

(assert (=> b!86010 m!89841))

(assert (=> b!86010 m!90569))

(assert (=> d!22093 d!22277))

(declare-fun d!22279 () Bool)

(declare-fun c!14007 () Bool)

(assert (=> d!22279 (= c!14007 (and ((_ is Cons!1521) lt!40483) (= (_1!1114 (h!2112 lt!40483)) (_1!1114 lt!40140))))))

(declare-fun e!56063 () Option!144)

(assert (=> d!22279 (= (getValueByKey!138 lt!40483 (_1!1114 lt!40140)) e!56063)))

(declare-fun b!86014 () Bool)

(declare-fun e!56064 () Option!144)

(assert (=> b!86014 (= e!56064 None!142)))

(declare-fun b!86011 () Bool)

(assert (=> b!86011 (= e!56063 (Some!143 (_2!1114 (h!2112 lt!40483))))))

(declare-fun b!86013 () Bool)

(assert (=> b!86013 (= e!56064 (getValueByKey!138 (t!5237 lt!40483) (_1!1114 lt!40140)))))

(declare-fun b!86012 () Bool)

(assert (=> b!86012 (= e!56063 e!56064)))

(declare-fun c!14008 () Bool)

(assert (=> b!86012 (= c!14008 (and ((_ is Cons!1521) lt!40483) (not (= (_1!1114 (h!2112 lt!40483)) (_1!1114 lt!40140)))))))

(assert (= (and d!22279 c!14007) b!86011))

(assert (= (and d!22279 (not c!14007)) b!86012))

(assert (= (and b!86012 c!14008) b!86013))

(assert (= (and b!86012 (not c!14008)) b!86014))

(declare-fun m!90571 () Bool)

(assert (=> b!86013 m!90571))

(assert (=> d!22093 d!22279))

(declare-fun d!22281 () Bool)

(assert (=> d!22281 (= (getValueByKey!138 lt!40483 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(declare-fun lt!40805 () Unit!2510)

(assert (=> d!22281 (= lt!40805 (choose!507 lt!40483 (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun e!56065 () Bool)

(assert (=> d!22281 e!56065))

(declare-fun res!44250 () Bool)

(assert (=> d!22281 (=> (not res!44250) (not e!56065))))

(assert (=> d!22281 (= res!44250 (isStrictlySorted!293 lt!40483))))

(assert (=> d!22281 (= (lemmaContainsTupThenGetReturnValue!58 lt!40483 (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40805)))

(declare-fun b!86015 () Bool)

(declare-fun res!44251 () Bool)

(assert (=> b!86015 (=> (not res!44251) (not e!56065))))

(assert (=> b!86015 (= res!44251 (containsKey!142 lt!40483 (_1!1114 lt!40140)))))

(declare-fun b!86016 () Bool)

(assert (=> b!86016 (= e!56065 (contains!753 lt!40483 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!22281 res!44250) b!86015))

(assert (= (and b!86015 res!44251) b!86016))

(assert (=> d!22281 m!89835))

(declare-fun m!90573 () Bool)

(assert (=> d!22281 m!90573))

(declare-fun m!90575 () Bool)

(assert (=> d!22281 m!90575))

(declare-fun m!90577 () Bool)

(assert (=> b!86015 m!90577))

(declare-fun m!90579 () Bool)

(assert (=> b!86016 m!90579))

(assert (=> d!22093 d!22281))

(declare-fun b!86017 () Bool)

(declare-fun e!56068 () List!1525)

(assert (=> b!86017 (= e!56068 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40146)) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun c!14011 () Bool)

(declare-fun b!86018 () Bool)

(declare-fun c!14012 () Bool)

(assert (=> b!86018 (= e!56068 (ite c!14011 (t!5237 (toList!740 lt!40146)) (ite c!14012 (Cons!1521 (h!2112 (toList!740 lt!40146)) (t!5237 (toList!740 lt!40146))) Nil!1522)))))

(declare-fun b!86019 () Bool)

(declare-fun e!56069 () List!1525)

(declare-fun call!8196 () List!1525)

(assert (=> b!86019 (= e!56069 call!8196)))

(declare-fun b!86020 () Bool)

(declare-fun e!56066 () List!1525)

(declare-fun call!8195 () List!1525)

(assert (=> b!86020 (= e!56066 call!8195)))

(declare-fun b!86021 () Bool)

(assert (=> b!86021 (= c!14012 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 lt!40140))))))

(declare-fun e!56070 () List!1525)

(assert (=> b!86021 (= e!56066 e!56070)))

(declare-fun b!86022 () Bool)

(declare-fun res!44252 () Bool)

(declare-fun e!56067 () Bool)

(assert (=> b!86022 (=> (not res!44252) (not e!56067))))

(declare-fun lt!40806 () List!1525)

(assert (=> b!86022 (= res!44252 (containsKey!142 lt!40806 (_1!1114 lt!40140)))))

(declare-fun b!86024 () Bool)

(declare-fun call!8197 () List!1525)

(assert (=> b!86024 (= e!56070 call!8197)))

(declare-fun b!86025 () Bool)

(assert (=> b!86025 (= e!56067 (contains!753 lt!40806 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun bm!8192 () Bool)

(declare-fun c!14010 () Bool)

(assert (=> bm!8192 (= call!8196 ($colon$colon!71 e!56068 (ite c!14010 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))))))

(declare-fun c!14009 () Bool)

(assert (=> bm!8192 (= c!14009 c!14010)))

(declare-fun bm!8193 () Bool)

(assert (=> bm!8193 (= call!8197 call!8195)))

(declare-fun b!86023 () Bool)

(assert (=> b!86023 (= e!56070 call!8197)))

(declare-fun d!22283 () Bool)

(assert (=> d!22283 e!56067))

(declare-fun res!44253 () Bool)

(assert (=> d!22283 (=> (not res!44253) (not e!56067))))

(assert (=> d!22283 (= res!44253 (isStrictlySorted!293 lt!40806))))

(assert (=> d!22283 (= lt!40806 e!56069)))

(assert (=> d!22283 (= c!14010 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 lt!40140))))))

(assert (=> d!22283 (isStrictlySorted!293 (toList!740 lt!40146))))

(assert (=> d!22283 (= (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40806)))

(declare-fun b!86026 () Bool)

(assert (=> b!86026 (= e!56069 e!56066)))

(assert (=> b!86026 (= c!14011 (and ((_ is Cons!1521) (toList!740 lt!40146)) (= (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 lt!40140))))))

(declare-fun bm!8194 () Bool)

(assert (=> bm!8194 (= call!8195 call!8196)))

(assert (= (and d!22283 c!14010) b!86019))

(assert (= (and d!22283 (not c!14010)) b!86026))

(assert (= (and b!86026 c!14011) b!86020))

(assert (= (and b!86026 (not c!14011)) b!86021))

(assert (= (and b!86021 c!14012) b!86024))

(assert (= (and b!86021 (not c!14012)) b!86023))

(assert (= (or b!86024 b!86023) bm!8193))

(assert (= (or b!86020 bm!8193) bm!8194))

(assert (= (or b!86019 bm!8194) bm!8192))

(assert (= (and bm!8192 c!14009) b!86017))

(assert (= (and bm!8192 (not c!14009)) b!86018))

(assert (= (and d!22283 res!44253) b!86022))

(assert (= (and b!86022 res!44252) b!86025))

(declare-fun m!90581 () Bool)

(assert (=> d!22283 m!90581))

(assert (=> d!22283 m!89917))

(declare-fun m!90583 () Bool)

(assert (=> b!86025 m!90583))

(declare-fun m!90585 () Bool)

(assert (=> b!86022 m!90585))

(declare-fun m!90587 () Bool)

(assert (=> b!86017 m!90587))

(declare-fun m!90589 () Bool)

(assert (=> bm!8192 m!90589))

(assert (=> d!22093 d!22283))

(assert (=> b!85501 d!22123))

(declare-fun d!22285 () Bool)

(assert (=> d!22285 (= (apply!82 lt!40415 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3617 () Bool)

(assert (= bs!3617 d!22285))

(assert (=> bs!3617 m!90369))

(assert (=> bs!3617 m!90369))

(declare-fun m!90591 () Bool)

(assert (=> bs!3617 m!90591))

(assert (=> b!85439 d!22285))

(assert (=> d!22065 d!22091))

(declare-fun d!22287 () Bool)

(assert (=> d!22287 (= (apply!82 lt!40415 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1204 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3618 () Bool)

(assert (= bs!3618 d!22287))

(assert (=> bs!3618 m!89659))

(assert (=> bs!3618 m!90079))

(assert (=> bs!3618 m!90079))

(declare-fun m!90593 () Bool)

(assert (=> bs!3618 m!90593))

(assert (=> b!85443 d!22287))

(assert (=> b!85443 d!22155))

(declare-fun d!22289 () Bool)

(declare-fun e!56073 () Bool)

(assert (=> d!22289 e!56073))

(declare-fun res!44256 () Bool)

(assert (=> d!22289 (=> (not res!44256) (not e!56073))))

(assert (=> d!22289 (= res!44256 (and (bvsge (index!3122 lt!40357) #b00000000000000000000000000000000) (bvslt (index!3122 lt!40357) (size!2151 (_keys!4008 newMap!16)))))))

(declare-fun lt!40809 () Unit!2510)

(declare-fun choose!512 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) Int) Unit!2510)

(assert (=> d!22289 (= lt!40809 (choose!512 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22289 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22289 (= (lemmaValidKeyInArrayIsInListMap!90 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (defaultEntry!2337 newMap!16)) lt!40809)))

(declare-fun b!86029 () Bool)

(assert (=> b!86029 (= e!56073 (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))

(assert (= (and d!22289 res!44256) b!86029))

(declare-fun m!90595 () Bool)

(assert (=> d!22289 m!90595))

(assert (=> d!22289 m!90001))

(declare-fun m!90597 () Bool)

(assert (=> b!86029 m!90597))

(assert (=> b!86029 m!89611))

(assert (=> b!86029 m!90597))

(assert (=> b!86029 m!89611))

(declare-fun m!90599 () Bool)

(assert (=> b!86029 m!90599))

(assert (=> b!85359 d!22289))

(declare-fun d!22291 () Bool)

(declare-fun e!56076 () Bool)

(assert (=> d!22291 e!56076))

(declare-fun res!44259 () Bool)

(assert (=> d!22291 (=> (not res!44259) (not e!56076))))

(assert (=> d!22291 (= res!44259 (and (bvsge (index!3122 lt!40357) #b00000000000000000000000000000000) (bvslt (index!3122 lt!40357) (size!2152 (_values!2320 newMap!16)))))))

(declare-fun lt!40812 () Unit!2510)

(declare-fun choose!513 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2510)

(assert (=> d!22291 (= lt!40812 (choose!513 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22291 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22291 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)) lt!40812)))

(declare-fun b!86032 () Bool)

(assert (=> b!86032 (= e!56076 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (getCurrentListMap!426 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))))

(assert (= (and d!22291 res!44259) b!86032))

(assert (=> d!22291 m!89403))

(declare-fun m!90601 () Bool)

(assert (=> d!22291 m!90601))

(assert (=> d!22291 m!90001))

(assert (=> b!86032 m!89631))

(assert (=> b!86032 m!89631))

(assert (=> b!86032 m!90485))

(assert (=> b!86032 m!89623))

(declare-fun m!90603 () Bool)

(assert (=> b!86032 m!90603))

(assert (=> b!85359 d!22291))

(declare-fun d!22293 () Bool)

(declare-fun e!56078 () Bool)

(assert (=> d!22293 e!56078))

(declare-fun res!44260 () Bool)

(assert (=> d!22293 (=> res!44260 e!56078)))

(declare-fun lt!40813 () Bool)

(assert (=> d!22293 (= res!44260 (not lt!40813))))

(declare-fun lt!40816 () Bool)

(assert (=> d!22293 (= lt!40813 lt!40816)))

(declare-fun lt!40814 () Unit!2510)

(declare-fun e!56077 () Unit!2510)

(assert (=> d!22293 (= lt!40814 e!56077)))

(declare-fun c!14013 () Bool)

(assert (=> d!22293 (= c!14013 lt!40816)))

(assert (=> d!22293 (= lt!40816 (containsKey!142 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22293 (= (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!40813)))

(declare-fun b!86033 () Bool)

(declare-fun lt!40815 () Unit!2510)

(assert (=> b!86033 (= e!56077 lt!40815)))

(assert (=> b!86033 (= lt!40815 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!86033 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!86034 () Bool)

(declare-fun Unit!2546 () Unit!2510)

(assert (=> b!86034 (= e!56077 Unit!2546)))

(declare-fun b!86035 () Bool)

(assert (=> b!86035 (= e!56078 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (= (and d!22293 c!14013) b!86033))

(assert (= (and d!22293 (not c!14013)) b!86034))

(assert (= (and d!22293 (not res!44260)) b!86035))

(assert (=> d!22293 m!89403))

(declare-fun m!90605 () Bool)

(assert (=> d!22293 m!90605))

(assert (=> b!86033 m!89403))

(declare-fun m!90607 () Bool)

(assert (=> b!86033 m!90607))

(assert (=> b!86033 m!89403))

(declare-fun m!90609 () Bool)

(assert (=> b!86033 m!90609))

(assert (=> b!86033 m!90609))

(declare-fun m!90611 () Bool)

(assert (=> b!86033 m!90611))

(assert (=> b!86035 m!89403))

(assert (=> b!86035 m!90609))

(assert (=> b!86035 m!90609))

(assert (=> b!86035 m!90611))

(assert (=> b!85359 d!22293))

(assert (=> b!85359 d!22143))

(declare-fun d!22295 () Bool)

(assert (=> d!22295 (= (apply!82 lt!40415 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3619 () Bool)

(assert (= bs!3619 d!22295))

(assert (=> bs!3619 m!90555))

(assert (=> bs!3619 m!90555))

(declare-fun m!90613 () Bool)

(assert (=> bs!3619 m!90613))

(assert (=> b!85427 d!22295))

(assert (=> d!22101 d!22105))

(declare-fun d!22297 () Bool)

(assert (=> d!22297 (not (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!22297 true))

(declare-fun _$68!73 () Unit!2510)

(assert (=> d!22297 (= (choose!68 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523)) _$68!73)))

(declare-fun bs!3620 () Bool)

(assert (= bs!3620 d!22297))

(assert (=> bs!3620 m!89403))

(assert (=> bs!3620 m!89447))

(assert (=> d!22101 d!22297))

(declare-fun d!22299 () Bool)

(assert (=> d!22299 (isDefined!92 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun lt!40819 () Unit!2510)

(declare-fun choose!514 (List!1525 (_ BitVec 64)) Unit!2510)

(assert (=> d!22299 (= lt!40819 (choose!514 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!56081 () Bool)

(assert (=> d!22299 e!56081))

(declare-fun res!44263 () Bool)

(assert (=> d!22299 (=> (not res!44263) (not e!56081))))

(assert (=> d!22299 (= res!44263 (isStrictlySorted!293 (toList!740 lt!40151)))))

(assert (=> d!22299 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!40819)))

(declare-fun b!86038 () Bool)

(assert (=> b!86038 (= e!56081 (containsKey!142 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!22299 res!44263) b!86038))

(assert (=> d!22299 m!89403))

(assert (=> d!22299 m!89599))

(assert (=> d!22299 m!89599))

(assert (=> d!22299 m!89601))

(assert (=> d!22299 m!89403))

(declare-fun m!90615 () Bool)

(assert (=> d!22299 m!90615))

(declare-fun m!90617 () Bool)

(assert (=> d!22299 m!90617))

(assert (=> b!86038 m!89403))

(assert (=> b!86038 m!89595))

(assert (=> b!85260 d!22299))

(declare-fun d!22301 () Bool)

(declare-fun isEmpty!341 (Option!144) Bool)

(assert (=> d!22301 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(declare-fun bs!3621 () Bool)

(assert (= bs!3621 d!22301))

(assert (=> bs!3621 m!89599))

(declare-fun m!90619 () Bool)

(assert (=> bs!3621 m!90619))

(assert (=> b!85260 d!22301))

(declare-fun c!14014 () Bool)

(declare-fun d!22303 () Bool)

(assert (=> d!22303 (= c!14014 (and ((_ is Cons!1521) (toList!740 lt!40151)) (= (_1!1114 (h!2112 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun e!56082 () Option!144)

(assert (=> d!22303 (= (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56082)))

(declare-fun b!86042 () Bool)

(declare-fun e!56083 () Option!144)

(assert (=> b!86042 (= e!56083 None!142)))

(declare-fun b!86039 () Bool)

(assert (=> b!86039 (= e!56082 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40151)))))))

(declare-fun b!86041 () Bool)

(assert (=> b!86041 (= e!56083 (getValueByKey!138 (t!5237 (toList!740 lt!40151)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!86040 () Bool)

(assert (=> b!86040 (= e!56082 e!56083)))

(declare-fun c!14015 () Bool)

(assert (=> b!86040 (= c!14015 (and ((_ is Cons!1521) (toList!740 lt!40151)) (not (= (_1!1114 (h!2112 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(assert (= (and d!22303 c!14014) b!86039))

(assert (= (and d!22303 (not c!14014)) b!86040))

(assert (= (and b!86040 c!14015) b!86041))

(assert (= (and b!86040 (not c!14015)) b!86042))

(assert (=> b!86041 m!89403))

(declare-fun m!90621 () Bool)

(assert (=> b!86041 m!90621))

(assert (=> b!85260 d!22303))

(declare-fun b!86059 () Bool)

(declare-fun e!56093 () Bool)

(declare-fun lt!40825 () SeekEntryResult!246)

(assert (=> b!86059 (= e!56093 ((_ is Undefined!246) lt!40825))))

(declare-fun b!86060 () Bool)

(declare-fun res!44274 () Bool)

(declare-fun e!56094 () Bool)

(assert (=> b!86060 (=> (not res!44274) (not e!56094))))

(assert (=> b!86060 (= res!44274 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!40825)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86060 (and (bvsge (index!3124 lt!40825) #b00000000000000000000000000000000) (bvslt (index!3124 lt!40825) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun d!22305 () Bool)

(declare-fun e!56095 () Bool)

(assert (=> d!22305 e!56095))

(declare-fun c!14021 () Bool)

(assert (=> d!22305 (= c!14021 ((_ is MissingZero!246) lt!40825))))

(assert (=> d!22305 (= lt!40825 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun lt!40824 () Unit!2510)

(declare-fun choose!515 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) Int) Unit!2510)

(assert (=> d!22305 (= lt!40824 (choose!515 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)))))

(assert (=> d!22305 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22305 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!31 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) lt!40824)))

(declare-fun call!8202 () Bool)

(declare-fun bm!8199 () Bool)

(assert (=> bm!8199 (= call!8202 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!86061 () Bool)

(declare-fun e!56092 () Bool)

(assert (=> b!86061 (= e!56095 e!56092)))

(declare-fun res!44272 () Bool)

(declare-fun call!8203 () Bool)

(assert (=> b!86061 (= res!44272 call!8203)))

(assert (=> b!86061 (=> (not res!44272) (not e!56092))))

(declare-fun b!86062 () Bool)

(assert (=> b!86062 (= e!56094 (not call!8202))))

(declare-fun b!86063 () Bool)

(assert (=> b!86063 (= e!56092 (not call!8202))))

(declare-fun bm!8200 () Bool)

(assert (=> bm!8200 (= call!8203 (inRange!0 (ite c!14021 (index!3121 lt!40825) (index!3124 lt!40825)) (mask!6364 newMap!16)))))

(declare-fun b!86064 () Bool)

(assert (=> b!86064 (and (bvsge (index!3121 lt!40825) #b00000000000000000000000000000000) (bvslt (index!3121 lt!40825) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun res!44273 () Bool)

(assert (=> b!86064 (= res!44273 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!40825)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86064 (=> (not res!44273) (not e!56092))))

(declare-fun b!86065 () Bool)

(declare-fun res!44275 () Bool)

(assert (=> b!86065 (=> (not res!44275) (not e!56094))))

(assert (=> b!86065 (= res!44275 call!8203)))

(assert (=> b!86065 (= e!56093 e!56094)))

(declare-fun b!86066 () Bool)

(assert (=> b!86066 (= e!56095 e!56093)))

(declare-fun c!14020 () Bool)

(assert (=> b!86066 (= c!14020 ((_ is MissingVacant!246) lt!40825))))

(assert (= (and d!22305 c!14021) b!86061))

(assert (= (and d!22305 (not c!14021)) b!86066))

(assert (= (and b!86061 res!44272) b!86064))

(assert (= (and b!86064 res!44273) b!86063))

(assert (= (and b!86066 c!14020) b!86065))

(assert (= (and b!86066 (not c!14020)) b!86059))

(assert (= (and b!86065 res!44275) b!86060))

(assert (= (and b!86060 res!44274) b!86062))

(assert (= (or b!86061 b!86065) bm!8200))

(assert (= (or b!86063 b!86062) bm!8199))

(declare-fun m!90623 () Bool)

(assert (=> b!86064 m!90623))

(declare-fun m!90625 () Bool)

(assert (=> b!86060 m!90625))

(declare-fun m!90627 () Bool)

(assert (=> bm!8200 m!90627))

(assert (=> bm!8199 m!89403))

(assert (=> bm!8199 m!89647))

(assert (=> d!22305 m!89403))

(assert (=> d!22305 m!89629))

(assert (=> d!22305 m!89403))

(declare-fun m!90629 () Bool)

(assert (=> d!22305 m!90629))

(assert (=> d!22305 m!90001))

(assert (=> bm!8095 d!22305))

(declare-fun d!22307 () Bool)

(assert (=> d!22307 (= (apply!82 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40416) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40416)))))

(declare-fun bs!3622 () Bool)

(assert (= bs!3622 d!22307))

(declare-fun m!90631 () Bool)

(assert (=> bs!3622 m!90631))

(assert (=> bs!3622 m!90631))

(declare-fun m!90633 () Bool)

(assert (=> bs!3622 m!90633))

(assert (=> b!85429 d!22307))

(declare-fun d!22309 () Bool)

(assert (=> d!22309 (= (apply!82 lt!40406 lt!40419) (get!1204 (getValueByKey!138 (toList!740 lt!40406) lt!40419)))))

(declare-fun bs!3623 () Bool)

(assert (= bs!3623 d!22309))

(declare-fun m!90635 () Bool)

(assert (=> bs!3623 m!90635))

(assert (=> bs!3623 m!90635))

(declare-fun m!90637 () Bool)

(assert (=> bs!3623 m!90637))

(assert (=> b!85429 d!22309))

(assert (=> b!85429 d!22085))

(declare-fun d!22311 () Bool)

(assert (=> d!22311 (contains!752 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40412)))

(declare-fun lt!40828 () Unit!2510)

(declare-fun choose!516 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2510)

(assert (=> d!22311 (= lt!40828 (choose!516 lt!40411 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40412))))

(assert (=> d!22311 (contains!752 lt!40411 lt!40412)))

(assert (=> d!22311 (= (addStillContains!58 lt!40411 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40412) lt!40828)))

(declare-fun bs!3624 () Bool)

(assert (= bs!3624 d!22311))

(assert (=> bs!3624 m!89681))

(assert (=> bs!3624 m!89681))

(assert (=> bs!3624 m!89683))

(declare-fun m!90639 () Bool)

(assert (=> bs!3624 m!90639))

(declare-fun m!90641 () Bool)

(assert (=> bs!3624 m!90641))

(assert (=> b!85429 d!22311))

(declare-fun d!22313 () Bool)

(declare-fun e!56097 () Bool)

(assert (=> d!22313 e!56097))

(declare-fun res!44276 () Bool)

(assert (=> d!22313 (=> res!44276 e!56097)))

(declare-fun lt!40829 () Bool)

(assert (=> d!22313 (= res!44276 (not lt!40829))))

(declare-fun lt!40832 () Bool)

(assert (=> d!22313 (= lt!40829 lt!40832)))

(declare-fun lt!40830 () Unit!2510)

(declare-fun e!56096 () Unit!2510)

(assert (=> d!22313 (= lt!40830 e!56096)))

(declare-fun c!14022 () Bool)

(assert (=> d!22313 (= c!14022 lt!40832)))

(assert (=> d!22313 (= lt!40832 (containsKey!142 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))

(assert (=> d!22313 (= (contains!752 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40412) lt!40829)))

(declare-fun b!86068 () Bool)

(declare-fun lt!40831 () Unit!2510)

(assert (=> b!86068 (= e!56096 lt!40831)))

(assert (=> b!86068 (= lt!40831 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))

(assert (=> b!86068 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))

(declare-fun b!86069 () Bool)

(declare-fun Unit!2547 () Unit!2510)

(assert (=> b!86069 (= e!56096 Unit!2547)))

(declare-fun b!86070 () Bool)

(assert (=> b!86070 (= e!56097 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412)))))

(assert (= (and d!22313 c!14022) b!86068))

(assert (= (and d!22313 (not c!14022)) b!86069))

(assert (= (and d!22313 (not res!44276)) b!86070))

(declare-fun m!90643 () Bool)

(assert (=> d!22313 m!90643))

(declare-fun m!90645 () Bool)

(assert (=> b!86068 m!90645))

(declare-fun m!90647 () Bool)

(assert (=> b!86068 m!90647))

(assert (=> b!86068 m!90647))

(declare-fun m!90649 () Bool)

(assert (=> b!86068 m!90649))

(assert (=> b!86070 m!90647))

(assert (=> b!86070 m!90647))

(assert (=> b!86070 m!90649))

(assert (=> b!85429 d!22313))

(declare-fun d!22315 () Bool)

(assert (=> d!22315 (= (apply!82 lt!40404 lt!40416) (get!1204 (getValueByKey!138 (toList!740 lt!40404) lt!40416)))))

(declare-fun bs!3625 () Bool)

(assert (= bs!3625 d!22315))

(declare-fun m!90651 () Bool)

(assert (=> bs!3625 m!90651))

(assert (=> bs!3625 m!90651))

(declare-fun m!90653 () Bool)

(assert (=> bs!3625 m!90653))

(assert (=> b!85429 d!22315))

(declare-fun d!22317 () Bool)

(assert (=> d!22317 (= (apply!82 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40420) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40420)))))

(declare-fun bs!3626 () Bool)

(assert (= bs!3626 d!22317))

(declare-fun m!90655 () Bool)

(assert (=> bs!3626 m!90655))

(assert (=> bs!3626 m!90655))

(declare-fun m!90657 () Bool)

(assert (=> bs!3626 m!90657))

(assert (=> b!85429 d!22317))

(declare-fun d!22319 () Bool)

(assert (=> d!22319 (= (apply!82 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40419) (apply!82 lt!40406 lt!40419))))

(declare-fun lt!40835 () Unit!2510)

(declare-fun choose!517 (ListLongMap!1449 (_ BitVec 64) V!3025 (_ BitVec 64)) Unit!2510)

(assert (=> d!22319 (= lt!40835 (choose!517 lt!40406 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40419))))

(declare-fun e!56100 () Bool)

(assert (=> d!22319 e!56100))

(declare-fun res!44279 () Bool)

(assert (=> d!22319 (=> (not res!44279) (not e!56100))))

(assert (=> d!22319 (= res!44279 (contains!752 lt!40406 lt!40419))))

(assert (=> d!22319 (= (addApplyDifferent!58 lt!40406 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40419) lt!40835)))

(declare-fun b!86074 () Bool)

(assert (=> b!86074 (= e!56100 (not (= lt!40419 lt!40417)))))

(assert (= (and d!22319 res!44279) b!86074))

(declare-fun m!90659 () Bool)

(assert (=> d!22319 m!90659))

(assert (=> d!22319 m!89665))

(assert (=> d!22319 m!89667))

(assert (=> d!22319 m!89685))

(declare-fun m!90661 () Bool)

(assert (=> d!22319 m!90661))

(assert (=> d!22319 m!89665))

(assert (=> b!85429 d!22319))

(declare-fun d!22321 () Bool)

(assert (=> d!22321 (= (apply!82 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40420) (apply!82 lt!40403 lt!40420))))

(declare-fun lt!40836 () Unit!2510)

(assert (=> d!22321 (= lt!40836 (choose!517 lt!40403 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40420))))

(declare-fun e!56101 () Bool)

(assert (=> d!22321 e!56101))

(declare-fun res!44280 () Bool)

(assert (=> d!22321 (=> (not res!44280) (not e!56101))))

(assert (=> d!22321 (= res!44280 (contains!752 lt!40403 lt!40420))))

(assert (=> d!22321 (= (addApplyDifferent!58 lt!40403 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40420) lt!40836)))

(declare-fun b!86075 () Bool)

(assert (=> b!86075 (= e!56101 (not (= lt!40420 lt!40414)))))

(assert (= (and d!22321 res!44280) b!86075))

(declare-fun m!90663 () Bool)

(assert (=> d!22321 m!90663))

(assert (=> d!22321 m!89675))

(assert (=> d!22321 m!89677))

(assert (=> d!22321 m!89689))

(declare-fun m!90665 () Bool)

(assert (=> d!22321 m!90665))

(assert (=> d!22321 m!89675))

(assert (=> b!85429 d!22321))

(declare-fun d!22323 () Bool)

(assert (=> d!22323 (= (apply!82 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40419) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40419)))))

(declare-fun bs!3627 () Bool)

(assert (= bs!3627 d!22323))

(declare-fun m!90667 () Bool)

(assert (=> bs!3627 m!90667))

(assert (=> bs!3627 m!90667))

(declare-fun m!90669 () Bool)

(assert (=> bs!3627 m!90669))

(assert (=> b!85429 d!22323))

(declare-fun d!22325 () Bool)

(declare-fun e!56102 () Bool)

(assert (=> d!22325 e!56102))

(declare-fun res!44281 () Bool)

(assert (=> d!22325 (=> (not res!44281) (not e!56102))))

(declare-fun lt!40839 () ListLongMap!1449)

(assert (=> d!22325 (= res!44281 (contains!752 lt!40839 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40838 () List!1525)

(assert (=> d!22325 (= lt!40839 (ListLongMap!1450 lt!40838))))

(declare-fun lt!40837 () Unit!2510)

(declare-fun lt!40840 () Unit!2510)

(assert (=> d!22325 (= lt!40837 lt!40840)))

(assert (=> d!22325 (= (getValueByKey!138 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22325 (= lt!40840 (lemmaContainsTupThenGetReturnValue!58 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22325 (= lt!40838 (insertStrictlySorted!61 (toList!740 lt!40411) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22325 (= (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40839)))

(declare-fun b!86076 () Bool)

(declare-fun res!44282 () Bool)

(assert (=> b!86076 (=> (not res!44282) (not e!56102))))

(assert (=> b!86076 (= res!44282 (= (getValueByKey!138 (toList!740 lt!40839) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86077 () Bool)

(assert (=> b!86077 (= e!56102 (contains!753 (toList!740 lt!40839) (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22325 res!44281) b!86076))

(assert (= (and b!86076 res!44282) b!86077))

(declare-fun m!90671 () Bool)

(assert (=> d!22325 m!90671))

(declare-fun m!90673 () Bool)

(assert (=> d!22325 m!90673))

(declare-fun m!90675 () Bool)

(assert (=> d!22325 m!90675))

(declare-fun m!90677 () Bool)

(assert (=> d!22325 m!90677))

(declare-fun m!90679 () Bool)

(assert (=> b!86076 m!90679))

(declare-fun m!90681 () Bool)

(assert (=> b!86077 m!90681))

(assert (=> b!85429 d!22325))

(declare-fun d!22327 () Bool)

(declare-fun e!56103 () Bool)

(assert (=> d!22327 e!56103))

(declare-fun res!44283 () Bool)

(assert (=> d!22327 (=> (not res!44283) (not e!56103))))

(declare-fun lt!40843 () ListLongMap!1449)

(assert (=> d!22327 (= res!44283 (contains!752 lt!40843 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40842 () List!1525)

(assert (=> d!22327 (= lt!40843 (ListLongMap!1450 lt!40842))))

(declare-fun lt!40841 () Unit!2510)

(declare-fun lt!40844 () Unit!2510)

(assert (=> d!22327 (= lt!40841 lt!40844)))

(assert (=> d!22327 (= (getValueByKey!138 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22327 (= lt!40844 (lemmaContainsTupThenGetReturnValue!58 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22327 (= lt!40842 (insertStrictlySorted!61 (toList!740 lt!40404) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22327 (= (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40843)))

(declare-fun b!86078 () Bool)

(declare-fun res!44284 () Bool)

(assert (=> b!86078 (=> (not res!44284) (not e!56103))))

(assert (=> b!86078 (= res!44284 (= (getValueByKey!138 (toList!740 lt!40843) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86079 () Bool)

(assert (=> b!86079 (= e!56103 (contains!753 (toList!740 lt!40843) (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22327 res!44283) b!86078))

(assert (= (and b!86078 res!44284) b!86079))

(declare-fun m!90683 () Bool)

(assert (=> d!22327 m!90683))

(declare-fun m!90685 () Bool)

(assert (=> d!22327 m!90685))

(declare-fun m!90687 () Bool)

(assert (=> d!22327 m!90687))

(declare-fun m!90689 () Bool)

(assert (=> d!22327 m!90689))

(declare-fun m!90691 () Bool)

(assert (=> b!86078 m!90691))

(declare-fun m!90693 () Bool)

(assert (=> b!86079 m!90693))

(assert (=> b!85429 d!22327))

(declare-fun d!22329 () Bool)

(assert (=> d!22329 (= (apply!82 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40416) (apply!82 lt!40404 lt!40416))))

(declare-fun lt!40845 () Unit!2510)

(assert (=> d!22329 (= lt!40845 (choose!517 lt!40404 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40416))))

(declare-fun e!56104 () Bool)

(assert (=> d!22329 e!56104))

(declare-fun res!44285 () Bool)

(assert (=> d!22329 (=> (not res!44285) (not e!56104))))

(assert (=> d!22329 (= res!44285 (contains!752 lt!40404 lt!40416))))

(assert (=> d!22329 (= (addApplyDifferent!58 lt!40404 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40416) lt!40845)))

(declare-fun b!86080 () Bool)

(assert (=> b!86080 (= e!56104 (not (= lt!40416 lt!40421)))))

(assert (= (and d!22329 res!44285) b!86080))

(declare-fun m!90695 () Bool)

(assert (=> d!22329 m!90695))

(assert (=> d!22329 m!89671))

(assert (=> d!22329 m!89673))

(assert (=> d!22329 m!89687))

(declare-fun m!90697 () Bool)

(assert (=> d!22329 m!90697))

(assert (=> d!22329 m!89671))

(assert (=> b!85429 d!22329))

(declare-fun d!22331 () Bool)

(declare-fun e!56105 () Bool)

(assert (=> d!22331 e!56105))

(declare-fun res!44286 () Bool)

(assert (=> d!22331 (=> (not res!44286) (not e!56105))))

(declare-fun lt!40848 () ListLongMap!1449)

(assert (=> d!22331 (= res!44286 (contains!752 lt!40848 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40847 () List!1525)

(assert (=> d!22331 (= lt!40848 (ListLongMap!1450 lt!40847))))

(declare-fun lt!40846 () Unit!2510)

(declare-fun lt!40849 () Unit!2510)

(assert (=> d!22331 (= lt!40846 lt!40849)))

(assert (=> d!22331 (= (getValueByKey!138 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22331 (= lt!40849 (lemmaContainsTupThenGetReturnValue!58 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22331 (= lt!40847 (insertStrictlySorted!61 (toList!740 lt!40406) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22331 (= (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40848)))

(declare-fun b!86081 () Bool)

(declare-fun res!44287 () Bool)

(assert (=> b!86081 (=> (not res!44287) (not e!56105))))

(assert (=> b!86081 (= res!44287 (= (getValueByKey!138 (toList!740 lt!40848) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86082 () Bool)

(assert (=> b!86082 (= e!56105 (contains!753 (toList!740 lt!40848) (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22331 res!44286) b!86081))

(assert (= (and b!86081 res!44287) b!86082))

(declare-fun m!90699 () Bool)

(assert (=> d!22331 m!90699))

(declare-fun m!90701 () Bool)

(assert (=> d!22331 m!90701))

(declare-fun m!90703 () Bool)

(assert (=> d!22331 m!90703))

(declare-fun m!90705 () Bool)

(assert (=> d!22331 m!90705))

(declare-fun m!90707 () Bool)

(assert (=> b!86081 m!90707))

(declare-fun m!90709 () Bool)

(assert (=> b!86082 m!90709))

(assert (=> b!85429 d!22331))

(declare-fun d!22333 () Bool)

(declare-fun e!56106 () Bool)

(assert (=> d!22333 e!56106))

(declare-fun res!44288 () Bool)

(assert (=> d!22333 (=> (not res!44288) (not e!56106))))

(declare-fun lt!40852 () ListLongMap!1449)

(assert (=> d!22333 (= res!44288 (contains!752 lt!40852 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40851 () List!1525)

(assert (=> d!22333 (= lt!40852 (ListLongMap!1450 lt!40851))))

(declare-fun lt!40850 () Unit!2510)

(declare-fun lt!40853 () Unit!2510)

(assert (=> d!22333 (= lt!40850 lt!40853)))

(assert (=> d!22333 (= (getValueByKey!138 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22333 (= lt!40853 (lemmaContainsTupThenGetReturnValue!58 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22333 (= lt!40851 (insertStrictlySorted!61 (toList!740 lt!40403) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22333 (= (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40852)))

(declare-fun b!86083 () Bool)

(declare-fun res!44289 () Bool)

(assert (=> b!86083 (=> (not res!44289) (not e!56106))))

(assert (=> b!86083 (= res!44289 (= (getValueByKey!138 (toList!740 lt!40852) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86084 () Bool)

(assert (=> b!86084 (= e!56106 (contains!753 (toList!740 lt!40852) (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22333 res!44288) b!86083))

(assert (= (and b!86083 res!44289) b!86084))

(declare-fun m!90711 () Bool)

(assert (=> d!22333 m!90711))

(declare-fun m!90713 () Bool)

(assert (=> d!22333 m!90713))

(declare-fun m!90715 () Bool)

(assert (=> d!22333 m!90715))

(declare-fun m!90717 () Bool)

(assert (=> d!22333 m!90717))

(declare-fun m!90719 () Bool)

(assert (=> b!86083 m!90719))

(declare-fun m!90721 () Bool)

(assert (=> b!86084 m!90721))

(assert (=> b!85429 d!22333))

(declare-fun d!22335 () Bool)

(assert (=> d!22335 (= (apply!82 lt!40403 lt!40420) (get!1204 (getValueByKey!138 (toList!740 lt!40403) lt!40420)))))

(declare-fun bs!3628 () Bool)

(assert (= bs!3628 d!22335))

(declare-fun m!90723 () Bool)

(assert (=> bs!3628 m!90723))

(assert (=> bs!3628 m!90723))

(declare-fun m!90725 () Bool)

(assert (=> bs!3628 m!90725))

(assert (=> b!85429 d!22335))

(declare-fun d!22337 () Bool)

(declare-fun lt!40854 () Bool)

(assert (=> d!22337 (= lt!40854 (select (content!89 (toList!740 lt!40484)) lt!40140))))

(declare-fun e!56107 () Bool)

(assert (=> d!22337 (= lt!40854 e!56107)))

(declare-fun res!44290 () Bool)

(assert (=> d!22337 (=> (not res!44290) (not e!56107))))

(assert (=> d!22337 (= res!44290 ((_ is Cons!1521) (toList!740 lt!40484)))))

(assert (=> d!22337 (= (contains!753 (toList!740 lt!40484) lt!40140) lt!40854)))

(declare-fun b!86085 () Bool)

(declare-fun e!56108 () Bool)

(assert (=> b!86085 (= e!56107 e!56108)))

(declare-fun res!44291 () Bool)

(assert (=> b!86085 (=> res!44291 e!56108)))

(assert (=> b!86085 (= res!44291 (= (h!2112 (toList!740 lt!40484)) lt!40140))))

(declare-fun b!86086 () Bool)

(assert (=> b!86086 (= e!56108 (contains!753 (t!5237 (toList!740 lt!40484)) lt!40140))))

(assert (= (and d!22337 res!44290) b!86085))

(assert (= (and b!86085 (not res!44291)) b!86086))

(declare-fun m!90727 () Bool)

(assert (=> d!22337 m!90727))

(declare-fun m!90729 () Bool)

(assert (=> d!22337 m!90729))

(declare-fun m!90731 () Bool)

(assert (=> b!86086 m!90731))

(assert (=> b!85508 d!22337))

(assert (=> b!85262 d!22301))

(assert (=> b!85262 d!22303))

(declare-fun d!22339 () Bool)

(declare-fun e!56109 () Bool)

(assert (=> d!22339 e!56109))

(declare-fun res!44292 () Bool)

(assert (=> d!22339 (=> (not res!44292) (not e!56109))))

(declare-fun lt!40857 () ListLongMap!1449)

(assert (=> d!22339 (= res!44292 (contains!752 lt!40857 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!40856 () List!1525)

(assert (=> d!22339 (= lt!40857 (ListLongMap!1450 lt!40856))))

(declare-fun lt!40855 () Unit!2510)

(declare-fun lt!40858 () Unit!2510)

(assert (=> d!22339 (= lt!40855 lt!40858)))

(assert (=> d!22339 (= (getValueByKey!138 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22339 (= lt!40858 (lemmaContainsTupThenGetReturnValue!58 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22339 (= lt!40856 (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22339 (= (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!40857)))

(declare-fun b!86087 () Bool)

(declare-fun res!44293 () Bool)

(assert (=> b!86087 (=> (not res!44293) (not e!56109))))

(assert (=> b!86087 (= res!44293 (= (getValueByKey!138 (toList!740 lt!40857) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86088 () Bool)

(assert (=> b!86088 (= e!56109 (contains!753 (toList!740 lt!40857) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22339 res!44292) b!86087))

(assert (= (and b!86087 res!44293) b!86088))

(declare-fun m!90733 () Bool)

(assert (=> d!22339 m!90733))

(declare-fun m!90735 () Bool)

(assert (=> d!22339 m!90735))

(declare-fun m!90737 () Bool)

(assert (=> d!22339 m!90737))

(declare-fun m!90739 () Bool)

(assert (=> d!22339 m!90739))

(declare-fun m!90741 () Bool)

(assert (=> b!86087 m!90741))

(declare-fun m!90743 () Bool)

(assert (=> b!86088 m!90743))

(assert (=> d!22077 d!22339))

(declare-fun d!22341 () Bool)

(assert (=> d!22341 (= (+!108 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (+!108 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (=> d!22341 true))

(declare-fun _$28!142 () Unit!2510)

(assert (=> d!22341 (= (choose!505 lt!40146 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))) _$28!142)))

(declare-fun bs!3629 () Bool)

(assert (= bs!3629 d!22341))

(assert (=> bs!3629 m!89743))

(assert (=> bs!3629 m!89743))

(assert (=> bs!3629 m!89745))

(assert (=> bs!3629 m!89747))

(assert (=> bs!3629 m!89747))

(assert (=> bs!3629 m!89749))

(assert (=> d!22077 d!22341))

(declare-fun d!22343 () Bool)

(declare-fun e!56110 () Bool)

(assert (=> d!22343 e!56110))

(declare-fun res!44294 () Bool)

(assert (=> d!22343 (=> (not res!44294) (not e!56110))))

(declare-fun lt!40861 () ListLongMap!1449)

(assert (=> d!22343 (= res!44294 (contains!752 lt!40861 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!40860 () List!1525)

(assert (=> d!22343 (= lt!40861 (ListLongMap!1450 lt!40860))))

(declare-fun lt!40859 () Unit!2510)

(declare-fun lt!40862 () Unit!2510)

(assert (=> d!22343 (= lt!40859 lt!40862)))

(assert (=> d!22343 (= (getValueByKey!138 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22343 (= lt!40862 (lemmaContainsTupThenGetReturnValue!58 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22343 (= lt!40860 (insertStrictlySorted!61 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22343 (= (+!108 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!40861)))

(declare-fun b!86089 () Bool)

(declare-fun res!44295 () Bool)

(assert (=> b!86089 (=> (not res!44295) (not e!56110))))

(assert (=> b!86089 (= res!44295 (= (getValueByKey!138 (toList!740 lt!40861) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86090 () Bool)

(assert (=> b!86090 (= e!56110 (contains!753 (toList!740 lt!40861) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22343 res!44294) b!86089))

(assert (= (and b!86089 res!44295) b!86090))

(declare-fun m!90745 () Bool)

(assert (=> d!22343 m!90745))

(declare-fun m!90747 () Bool)

(assert (=> d!22343 m!90747))

(declare-fun m!90749 () Bool)

(assert (=> d!22343 m!90749))

(declare-fun m!90751 () Bool)

(assert (=> d!22343 m!90751))

(declare-fun m!90753 () Bool)

(assert (=> b!86089 m!90753))

(declare-fun m!90755 () Bool)

(assert (=> b!86090 m!90755))

(assert (=> d!22077 d!22343))

(declare-fun d!22345 () Bool)

(declare-fun e!56111 () Bool)

(assert (=> d!22345 e!56111))

(declare-fun res!44296 () Bool)

(assert (=> d!22345 (=> (not res!44296) (not e!56111))))

(declare-fun lt!40865 () ListLongMap!1449)

(assert (=> d!22345 (= res!44296 (contains!752 lt!40865 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40864 () List!1525)

(assert (=> d!22345 (= lt!40865 (ListLongMap!1450 lt!40864))))

(declare-fun lt!40863 () Unit!2510)

(declare-fun lt!40866 () Unit!2510)

(assert (=> d!22345 (= lt!40863 lt!40866)))

(assert (=> d!22345 (= (getValueByKey!138 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22345 (= lt!40866 (lemmaContainsTupThenGetReturnValue!58 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22345 (= lt!40864 (insertStrictlySorted!61 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22345 (= (+!108 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40865)))

(declare-fun b!86091 () Bool)

(declare-fun res!44297 () Bool)

(assert (=> b!86091 (=> (not res!44297) (not e!56111))))

(assert (=> b!86091 (= res!44297 (= (getValueByKey!138 (toList!740 lt!40865) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86092 () Bool)

(assert (=> b!86092 (= e!56111 (contains!753 (toList!740 lt!40865) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22345 res!44296) b!86091))

(assert (= (and b!86091 res!44297) b!86092))

(declare-fun m!90757 () Bool)

(assert (=> d!22345 m!90757))

(declare-fun m!90759 () Bool)

(assert (=> d!22345 m!90759))

(declare-fun m!90761 () Bool)

(assert (=> d!22345 m!90761))

(declare-fun m!90763 () Bool)

(assert (=> d!22345 m!90763))

(declare-fun m!90765 () Bool)

(assert (=> b!86091 m!90765))

(declare-fun m!90767 () Bool)

(assert (=> b!86092 m!90767))

(assert (=> d!22077 d!22345))

(declare-fun d!22347 () Bool)

(declare-fun e!56112 () Bool)

(assert (=> d!22347 e!56112))

(declare-fun res!44298 () Bool)

(assert (=> d!22347 (=> (not res!44298) (not e!56112))))

(declare-fun lt!40869 () ListLongMap!1449)

(assert (=> d!22347 (= res!44298 (contains!752 lt!40869 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40868 () List!1525)

(assert (=> d!22347 (= lt!40869 (ListLongMap!1450 lt!40868))))

(declare-fun lt!40867 () Unit!2510)

(declare-fun lt!40870 () Unit!2510)

(assert (=> d!22347 (= lt!40867 lt!40870)))

(assert (=> d!22347 (= (getValueByKey!138 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22347 (= lt!40870 (lemmaContainsTupThenGetReturnValue!58 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22347 (= lt!40868 (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22347 (= (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40869)))

(declare-fun b!86093 () Bool)

(declare-fun res!44299 () Bool)

(assert (=> b!86093 (=> (not res!44299) (not e!56112))))

(assert (=> b!86093 (= res!44299 (= (getValueByKey!138 (toList!740 lt!40869) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86094 () Bool)

(assert (=> b!86094 (= e!56112 (contains!753 (toList!740 lt!40869) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22347 res!44298) b!86093))

(assert (= (and b!86093 res!44299) b!86094))

(declare-fun m!90769 () Bool)

(assert (=> d!22347 m!90769))

(declare-fun m!90771 () Bool)

(assert (=> d!22347 m!90771))

(declare-fun m!90773 () Bool)

(assert (=> d!22347 m!90773))

(declare-fun m!90775 () Bool)

(assert (=> d!22347 m!90775))

(declare-fun m!90777 () Bool)

(assert (=> b!86093 m!90777))

(declare-fun m!90779 () Bool)

(assert (=> b!86094 m!90779))

(assert (=> d!22077 d!22347))

(declare-fun d!22349 () Bool)

(declare-fun e!56114 () Bool)

(assert (=> d!22349 e!56114))

(declare-fun res!44300 () Bool)

(assert (=> d!22349 (=> res!44300 e!56114)))

(declare-fun lt!40871 () Bool)

(assert (=> d!22349 (= res!44300 (not lt!40871))))

(declare-fun lt!40874 () Bool)

(assert (=> d!22349 (= lt!40871 lt!40874)))

(declare-fun lt!40872 () Unit!2510)

(declare-fun e!56113 () Unit!2510)

(assert (=> d!22349 (= lt!40872 e!56113)))

(declare-fun c!14023 () Bool)

(assert (=> d!22349 (= c!14023 lt!40874)))

(assert (=> d!22349 (= lt!40874 (containsKey!142 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22349 (= (contains!752 lt!40471 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40871)))

(declare-fun b!86095 () Bool)

(declare-fun lt!40873 () Unit!2510)

(assert (=> b!86095 (= e!56113 lt!40873)))

(assert (=> b!86095 (= lt!40873 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86095 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86096 () Bool)

(declare-fun Unit!2548 () Unit!2510)

(assert (=> b!86096 (= e!56113 Unit!2548)))

(declare-fun b!86097 () Bool)

(assert (=> b!86097 (= e!56114 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22349 c!14023) b!86095))

(assert (= (and d!22349 (not c!14023)) b!86096))

(assert (= (and d!22349 (not res!44300)) b!86097))

(declare-fun m!90781 () Bool)

(assert (=> d!22349 m!90781))

(declare-fun m!90783 () Bool)

(assert (=> b!86095 m!90783))

(declare-fun m!90785 () Bool)

(assert (=> b!86095 m!90785))

(assert (=> b!86095 m!90785))

(declare-fun m!90787 () Bool)

(assert (=> b!86095 m!90787))

(assert (=> b!86097 m!90785))

(assert (=> b!86097 m!90785))

(assert (=> b!86097 m!90787))

(assert (=> b!85492 d!22349))

(declare-fun d!22351 () Bool)

(declare-fun e!56115 () Bool)

(assert (=> d!22351 e!56115))

(declare-fun res!44301 () Bool)

(assert (=> d!22351 (=> (not res!44301) (not e!56115))))

(declare-fun lt!40877 () ListLongMap!1449)

(assert (=> d!22351 (= res!44301 (contains!752 lt!40877 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40876 () List!1525)

(assert (=> d!22351 (= lt!40877 (ListLongMap!1450 lt!40876))))

(declare-fun lt!40875 () Unit!2510)

(declare-fun lt!40878 () Unit!2510)

(assert (=> d!22351 (= lt!40875 lt!40878)))

(assert (=> d!22351 (= (getValueByKey!138 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22351 (= lt!40878 (lemmaContainsTupThenGetReturnValue!58 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22351 (= lt!40876 (insertStrictlySorted!61 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22351 (= (+!108 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40877)))

(declare-fun b!86098 () Bool)

(declare-fun res!44302 () Bool)

(assert (=> b!86098 (=> (not res!44302) (not e!56115))))

(assert (=> b!86098 (= res!44302 (= (getValueByKey!138 (toList!740 lt!40877) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86099 () Bool)

(assert (=> b!86099 (= e!56115 (contains!753 (toList!740 lt!40877) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22351 res!44301) b!86098))

(assert (= (and b!86098 res!44302) b!86099))

(declare-fun m!90789 () Bool)

(assert (=> d!22351 m!90789))

(declare-fun m!90791 () Bool)

(assert (=> d!22351 m!90791))

(declare-fun m!90793 () Bool)

(assert (=> d!22351 m!90793))

(declare-fun m!90795 () Bool)

(assert (=> d!22351 m!90795))

(declare-fun m!90797 () Bool)

(assert (=> b!86098 m!90797))

(declare-fun m!90799 () Bool)

(assert (=> b!86099 m!90799))

(assert (=> d!22075 d!22351))

(declare-fun d!22353 () Bool)

(declare-fun e!56116 () Bool)

(assert (=> d!22353 e!56116))

(declare-fun res!44303 () Bool)

(assert (=> d!22353 (=> (not res!44303) (not e!56116))))

(declare-fun lt!40881 () ListLongMap!1449)

(assert (=> d!22353 (= res!44303 (contains!752 lt!40881 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!40880 () List!1525)

(assert (=> d!22353 (= lt!40881 (ListLongMap!1450 lt!40880))))

(declare-fun lt!40879 () Unit!2510)

(declare-fun lt!40882 () Unit!2510)

(assert (=> d!22353 (= lt!40879 lt!40882)))

(assert (=> d!22353 (= (getValueByKey!138 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22353 (= lt!40882 (lemmaContainsTupThenGetReturnValue!58 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22353 (= lt!40880 (insertStrictlySorted!61 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22353 (= (+!108 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!40881)))

(declare-fun b!86100 () Bool)

(declare-fun res!44304 () Bool)

(assert (=> b!86100 (=> (not res!44304) (not e!56116))))

(assert (=> b!86100 (= res!44304 (= (getValueByKey!138 (toList!740 lt!40881) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86101 () Bool)

(assert (=> b!86101 (= e!56116 (contains!753 (toList!740 lt!40881) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22353 res!44303) b!86100))

(assert (= (and b!86100 res!44304) b!86101))

(declare-fun m!90801 () Bool)

(assert (=> d!22353 m!90801))

(declare-fun m!90803 () Bool)

(assert (=> d!22353 m!90803))

(declare-fun m!90805 () Bool)

(assert (=> d!22353 m!90805))

(declare-fun m!90807 () Bool)

(assert (=> d!22353 m!90807))

(declare-fun m!90809 () Bool)

(assert (=> b!86100 m!90809))

(declare-fun m!90811 () Bool)

(assert (=> b!86101 m!90811))

(assert (=> d!22075 d!22353))

(declare-fun d!22355 () Bool)

(assert (=> d!22355 (= (+!108 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (+!108 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (=> d!22355 true))

(declare-fun _$28!143 () Unit!2510)

(assert (=> d!22355 (= (choose!505 lt!40150 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) _$28!143)))

(declare-fun bs!3630 () Bool)

(assert (= bs!3630 d!22355))

(assert (=> bs!3630 m!89733))

(assert (=> bs!3630 m!89733))

(assert (=> bs!3630 m!89735))

(assert (=> bs!3630 m!89737))

(assert (=> bs!3630 m!89737))

(assert (=> bs!3630 m!89739))

(assert (=> d!22075 d!22355))

(declare-fun d!22357 () Bool)

(declare-fun e!56117 () Bool)

(assert (=> d!22357 e!56117))

(declare-fun res!44305 () Bool)

(assert (=> d!22357 (=> (not res!44305) (not e!56117))))

(declare-fun lt!40885 () ListLongMap!1449)

(assert (=> d!22357 (= res!44305 (contains!752 lt!40885 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!40884 () List!1525)

(assert (=> d!22357 (= lt!40885 (ListLongMap!1450 lt!40884))))

(declare-fun lt!40883 () Unit!2510)

(declare-fun lt!40886 () Unit!2510)

(assert (=> d!22357 (= lt!40883 lt!40886)))

(assert (=> d!22357 (= (getValueByKey!138 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22357 (= lt!40886 (lemmaContainsTupThenGetReturnValue!58 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22357 (= lt!40884 (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22357 (= (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!40885)))

(declare-fun b!86102 () Bool)

(declare-fun res!44306 () Bool)

(assert (=> b!86102 (=> (not res!44306) (not e!56117))))

(assert (=> b!86102 (= res!44306 (= (getValueByKey!138 (toList!740 lt!40885) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86103 () Bool)

(assert (=> b!86103 (= e!56117 (contains!753 (toList!740 lt!40885) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22357 res!44305) b!86102))

(assert (= (and b!86102 res!44306) b!86103))

(declare-fun m!90813 () Bool)

(assert (=> d!22357 m!90813))

(declare-fun m!90815 () Bool)

(assert (=> d!22357 m!90815))

(declare-fun m!90817 () Bool)

(assert (=> d!22357 m!90817))

(declare-fun m!90819 () Bool)

(assert (=> d!22357 m!90819))

(declare-fun m!90821 () Bool)

(assert (=> b!86102 m!90821))

(declare-fun m!90823 () Bool)

(assert (=> b!86103 m!90823))

(assert (=> d!22075 d!22357))

(declare-fun d!22359 () Bool)

(declare-fun e!56118 () Bool)

(assert (=> d!22359 e!56118))

(declare-fun res!44307 () Bool)

(assert (=> d!22359 (=> (not res!44307) (not e!56118))))

(declare-fun lt!40889 () ListLongMap!1449)

(assert (=> d!22359 (= res!44307 (contains!752 lt!40889 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40888 () List!1525)

(assert (=> d!22359 (= lt!40889 (ListLongMap!1450 lt!40888))))

(declare-fun lt!40887 () Unit!2510)

(declare-fun lt!40890 () Unit!2510)

(assert (=> d!22359 (= lt!40887 lt!40890)))

(assert (=> d!22359 (= (getValueByKey!138 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22359 (= lt!40890 (lemmaContainsTupThenGetReturnValue!58 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22359 (= lt!40888 (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22359 (= (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40889)))

(declare-fun b!86104 () Bool)

(declare-fun res!44308 () Bool)

(assert (=> b!86104 (=> (not res!44308) (not e!56118))))

(assert (=> b!86104 (= res!44308 (= (getValueByKey!138 (toList!740 lt!40889) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!86105 () Bool)

(assert (=> b!86105 (= e!56118 (contains!753 (toList!740 lt!40889) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22359 res!44307) b!86104))

(assert (= (and b!86104 res!44308) b!86105))

(declare-fun m!90825 () Bool)

(assert (=> d!22359 m!90825))

(declare-fun m!90827 () Bool)

(assert (=> d!22359 m!90827))

(declare-fun m!90829 () Bool)

(assert (=> d!22359 m!90829))

(declare-fun m!90831 () Bool)

(assert (=> d!22359 m!90831))

(declare-fun m!90833 () Bool)

(assert (=> b!86104 m!90833))

(declare-fun m!90835 () Bool)

(assert (=> b!86105 m!90835))

(assert (=> d!22075 d!22359))

(assert (=> bm!8087 d!22243))

(assert (=> b!85539 d!22225))

(declare-fun b!86106 () Bool)

(declare-fun e!56119 () Bool)

(assert (=> b!86106 (= e!56119 tp_is_empty!2533)))

(declare-fun mapIsEmpty!3411 () Bool)

(declare-fun mapRes!3411 () Bool)

(assert (=> mapIsEmpty!3411 mapRes!3411))

(declare-fun b!86107 () Bool)

(declare-fun e!56120 () Bool)

(assert (=> b!86107 (= e!56120 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3411 () Bool)

(declare-fun tp!8955 () Bool)

(assert (=> mapNonEmpty!3411 (= mapRes!3411 (and tp!8955 e!56119))))

(declare-fun mapRest!3411 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapValue!3411 () ValueCell!923)

(declare-fun mapKey!3411 () (_ BitVec 32))

(assert (=> mapNonEmpty!3411 (= mapRest!3409 (store mapRest!3411 mapKey!3411 mapValue!3411))))

(declare-fun condMapEmpty!3411 () Bool)

(declare-fun mapDefault!3411 () ValueCell!923)

(assert (=> mapNonEmpty!3409 (= condMapEmpty!3411 (= mapRest!3409 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3411)))))

(assert (=> mapNonEmpty!3409 (= tp!8953 (and e!56120 mapRes!3411))))

(assert (= (and mapNonEmpty!3409 condMapEmpty!3411) mapIsEmpty!3411))

(assert (= (and mapNonEmpty!3409 (not condMapEmpty!3411)) mapNonEmpty!3411))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!923) mapValue!3411)) b!86106))

(assert (= (and mapNonEmpty!3409 ((_ is ValueCellFull!923) mapDefault!3411)) b!86107))

(declare-fun m!90837 () Bool)

(assert (=> mapNonEmpty!3411 m!90837))

(declare-fun b!86108 () Bool)

(declare-fun e!56121 () Bool)

(assert (=> b!86108 (= e!56121 tp_is_empty!2533)))

(declare-fun mapIsEmpty!3412 () Bool)

(declare-fun mapRes!3412 () Bool)

(assert (=> mapIsEmpty!3412 mapRes!3412))

(declare-fun b!86109 () Bool)

(declare-fun e!56122 () Bool)

(assert (=> b!86109 (= e!56122 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3412 () Bool)

(declare-fun tp!8956 () Bool)

(assert (=> mapNonEmpty!3412 (= mapRes!3412 (and tp!8956 e!56121))))

(declare-fun mapValue!3412 () ValueCell!923)

(declare-fun mapKey!3412 () (_ BitVec 32))

(declare-fun mapRest!3412 () (Array (_ BitVec 32) ValueCell!923))

(assert (=> mapNonEmpty!3412 (= mapRest!3410 (store mapRest!3412 mapKey!3412 mapValue!3412))))

(declare-fun condMapEmpty!3412 () Bool)

(declare-fun mapDefault!3412 () ValueCell!923)

(assert (=> mapNonEmpty!3410 (= condMapEmpty!3412 (= mapRest!3410 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3412)))))

(assert (=> mapNonEmpty!3410 (= tp!8954 (and e!56122 mapRes!3412))))

(assert (= (and mapNonEmpty!3410 condMapEmpty!3412) mapIsEmpty!3412))

(assert (= (and mapNonEmpty!3410 (not condMapEmpty!3412)) mapNonEmpty!3412))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!923) mapValue!3412)) b!86108))

(assert (= (and mapNonEmpty!3410 ((_ is ValueCellFull!923) mapDefault!3412)) b!86109))

(declare-fun m!90839 () Bool)

(assert (=> mapNonEmpty!3412 m!90839))

(declare-fun b_lambda!3811 () Bool)

(assert (= b_lambda!3809 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3811)))

(declare-fun b_lambda!3813 () Bool)

(assert (= b_lambda!3803 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3813)))

(declare-fun b_lambda!3815 () Bool)

(assert (= b_lambda!3807 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3815)))

(declare-fun b_lambda!3817 () Bool)

(assert (= b_lambda!3805 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3817)))

(declare-fun b_lambda!3819 () Bool)

(assert (= b_lambda!3801 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3819)))

(check-sat (not b!86003) (not b!85890) (not b!85837) (not mapNonEmpty!3411) (not b!85668) (not b!85812) (not b!86033) (not b!86079) (not b_lambda!3799) (not b!86002) (not b!86094) (not b!85868) (not d!22257) (not b_lambda!3819) (not b!85715) (not d!22359) (not d!22231) (not d!22187) (not d!22267) (not b_lambda!3817) (not bm!8155) (not b!85803) (not b!85763) (not b_lambda!3797) (not d!22287) (not b!85851) (not b!86081) (not d!22337) (not b!86101) (not bm!8141) (not bm!8176) (not d!22327) (not b!85688) (not d!22149) (not d!22135) (not b!85911) (not bm!8174) (not b!85651) (not b!85800) (not b!85676) (not b!85615) (not b!85975) (not b!85984) (not d!22139) (not b!85646) b_and!5197 (not b!86100) (not bm!8143) (not d!22335) (not d!22173) (not d!22331) (not b!86089) (not b_lambda!3815) (not b!86038) (not d!22157) (not d!22205) (not d!22239) (not d!22343) (not b!85605) (not b!85845) (not b!85823) (not d!22271) (not d!22159) (not b!85937) (not b!85778) (not b!85820) (not b!85648) (not b!85809) (not d!22181) (not d!22347) (not b!85706) (not b!85627) (not b!85622) (not d!22127) (not d!22165) (not b!85929) (not b!85601) (not b!85785) (not b!85637) (not d!22357) (not b!86007) (not b!85925) (not d!22203) (not b!86091) (not bm!8187) (not d!22273) (not b!85839) (not b!86076) (not b!85618) (not bm!8200) (not b!85811) (not b!86010) (not b!86005) (not d!22197) (not b!85717) (not b!85846) (not b!85620) (not b!86092) (not bm!8151) (not b!85888) (not b_next!2235) (not d!22249) (not bm!8132) (not b!85735) (not b!85842) (not d!22241) (not b!85612) (not b!86070) (not d!22233) (not d!22223) (not d!22301) (not bm!8188) (not b!85713) (not b!85645) (not d!22289) (not b!85832) (not bm!8199) (not b!86098) (not bm!8190) (not d!22111) (not mapNonEmpty!3412) (not b!85775) (not b!85554) (not b!85749) (not b!85802) (not b!85753) (not bm!8156) (not b!85685) (not b!85593) (not b!85702) (not b!85924) (not b!85862) (not b!86103) (not b!85813) (not d!22305) (not b!85860) (not b!85816) (not b!85719) (not b!85655) (not bm!8177) (not d!22201) (not d!22261) (not b!85982) (not d!22315) (not b!85795) (not b!86097) (not d!22221) (not b!85787) (not d!22283) (not bm!8173) (not d!22143) (not bm!8166) (not b!85934) (not d!22339) (not b!85892) (not b!86095) (not d!22177) (not b!86105) (not b!86016) (not b!85712) (not d!22319) (not b!86017) (not d!22321) (not b!85980) (not b!85667) (not b!85807) (not b!86025) (not bm!8163) (not d!22175) (not b!85786) (not d!22163) (not b!85997) (not b!86083) (not d!22295) (not d!22161) (not b!85799) (not b!85652) (not b_lambda!3795) (not d!22285) (not bm!8192) b_and!5199 (not b!85938) (not d!22349) (not b!86082) (not d!22191) (not b!85870) (not b!86022) (not bm!8138) (not b!85895) (not d!22311) (not d!22211) (not b!85718) (not b!85737) (not bm!8162) (not bm!8148) (not b!85680) (not b!85783) (not b!85701) (not d!22213) (not b!86008) (not d!22353) (not d!22237) (not b!85987) (not bm!8135) (not b!85915) (not b!85726) (not b!85639) (not d!22147) (not b!85918) (not d!22351) (not bm!8191) (not d!22145) (not b!85638) (not bm!8140) (not d!22199) (not b!85835) (not d!22153) (not d!22131) (not b!86013) (not b!85673) (not d!22227) (not b!85992) (not d!22313) (not b!86032) (not b_lambda!3787) (not b!86035) (not b_next!2233) (not b!85854) (not b!85659) (not b!85804) (not b!85642) (not b!85689) (not b!86077) (not d!22275) (not b!85654) (not b!85894) (not d!22217) (not b!85760) (not b!85621) (not b!85995) (not b!86099) (not b!85704) (not d!22185) (not b!86093) (not b!85921) (not b!85613) (not b!85827) (not b!85675) (not b!85922) (not d!22317) (not b!85571) (not d!22117) (not d!22265) (not bm!8159) (not b!85780) (not b!85844) (not d!22355) (not b!85998) (not b!85801) (not b!86078) (not b!85769) (not bm!8150) (not b!85711) (not b!85774) (not b!85714) (not d!22263) (not d!22133) (not b!85858) (not b!85743) (not d!22329) (not d!22325) (not d!22323) (not d!22189) (not d!22341) (not b!85672) (not b!85764) (not d!22345) (not b!85552) (not d!22333) (not b!85740) (not d!22291) (not b!85900) (not b!85825) (not bm!8147) (not d!22141) (not b!85792) (not b_lambda!3813) (not b!85762) (not b!85994) (not b!85664) (not b!85777) (not b!86087) (not d!22293) (not d!22245) (not d!22193) (not b!86000) (not b!85647) (not b!85983) (not b!85806) (not b!85565) (not b!86068) (not b!86090) (not b!86086) (not b!86104) (not d!22209) (not b!85643) (not d!22243) (not b!85755) (not d!22297) (not d!22281) (not d!22115) (not b!85797) (not b!86015) (not b!86084) (not d!22309) (not b!85772) (not bm!8144) tp_is_empty!2533 (not b!85598) (not b!86029) (not d!22307) (not bm!8171) (not b!86088) (not b!86102) (not b!86041) (not b!85724) (not b!85818) (not d!22277) (not b!85630) (not b!85798) (not b!85572) (not b_lambda!3811) (not b!85709) (not b!85826) (not b!85757) (not b!85893) (not d!22299))
(check-sat b_and!5197 b_and!5199 (not b_next!2233) (not b_next!2235))
(get-model)

(declare-fun d!22361 () Bool)

(declare-fun e!56124 () Bool)

(assert (=> d!22361 e!56124))

(declare-fun res!44309 () Bool)

(assert (=> d!22361 (=> res!44309 e!56124)))

(declare-fun lt!40891 () Bool)

(assert (=> d!22361 (= res!44309 (not lt!40891))))

(declare-fun lt!40894 () Bool)

(assert (=> d!22361 (= lt!40891 lt!40894)))

(declare-fun lt!40892 () Unit!2510)

(declare-fun e!56123 () Unit!2510)

(assert (=> d!22361 (= lt!40892 e!56123)))

(declare-fun c!14024 () Bool)

(assert (=> d!22361 (= c!14024 lt!40894)))

(assert (=> d!22361 (= lt!40894 (containsKey!142 (toList!740 lt!40688) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22361 (= (contains!752 lt!40688 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) lt!40891)))

(declare-fun b!86110 () Bool)

(declare-fun lt!40893 () Unit!2510)

(assert (=> b!86110 (= e!56123 lt!40893)))

(assert (=> b!86110 (= lt!40893 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40688) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86110 (isDefined!92 (getValueByKey!138 (toList!740 lt!40688) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86111 () Bool)

(declare-fun Unit!2549 () Unit!2510)

(assert (=> b!86111 (= e!56123 Unit!2549)))

(declare-fun b!86112 () Bool)

(assert (=> b!86112 (= e!56124 (isDefined!92 (getValueByKey!138 (toList!740 lt!40688) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22361 c!14024) b!86110))

(assert (= (and d!22361 (not c!14024)) b!86111))

(assert (= (and d!22361 (not res!44309)) b!86112))

(assert (=> d!22361 m!89961))

(declare-fun m!90841 () Bool)

(assert (=> d!22361 m!90841))

(assert (=> b!86110 m!89961))

(declare-fun m!90843 () Bool)

(assert (=> b!86110 m!90843))

(assert (=> b!86110 m!89961))

(declare-fun m!90845 () Bool)

(assert (=> b!86110 m!90845))

(assert (=> b!86110 m!90845))

(declare-fun m!90847 () Bool)

(assert (=> b!86110 m!90847))

(assert (=> b!86112 m!89961))

(assert (=> b!86112 m!90845))

(assert (=> b!86112 m!90845))

(assert (=> b!86112 m!90847))

(assert (=> b!85929 d!22361))

(declare-fun d!22363 () Bool)

(declare-fun res!44310 () Bool)

(declare-fun e!56125 () Bool)

(assert (=> d!22363 (=> res!44310 e!56125)))

(assert (=> d!22363 (= res!44310 (and ((_ is Cons!1521) (toList!740 lt!40480)) (= (_1!1114 (h!2112 (toList!740 lt!40480))) (_1!1114 lt!40153))))))

(assert (=> d!22363 (= (containsKey!142 (toList!740 lt!40480) (_1!1114 lt!40153)) e!56125)))

(declare-fun b!86113 () Bool)

(declare-fun e!56126 () Bool)

(assert (=> b!86113 (= e!56125 e!56126)))

(declare-fun res!44311 () Bool)

(assert (=> b!86113 (=> (not res!44311) (not e!56126))))

(assert (=> b!86113 (= res!44311 (and (or (not ((_ is Cons!1521) (toList!740 lt!40480))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40480))) (_1!1114 lt!40153))) ((_ is Cons!1521) (toList!740 lt!40480)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40480))) (_1!1114 lt!40153))))))

(declare-fun b!86114 () Bool)

(assert (=> b!86114 (= e!56126 (containsKey!142 (t!5237 (toList!740 lt!40480)) (_1!1114 lt!40153)))))

(assert (= (and d!22363 (not res!44310)) b!86113))

(assert (= (and b!86113 res!44311) b!86114))

(declare-fun m!90849 () Bool)

(assert (=> b!86114 m!90849))

(assert (=> d!22111 d!22363))

(declare-fun d!22365 () Bool)

(declare-fun res!44316 () Bool)

(declare-fun e!56131 () Bool)

(assert (=> d!22365 (=> res!44316 e!56131)))

(assert (=> d!22365 (= res!44316 (or ((_ is Nil!1522) lt!40504) ((_ is Nil!1522) (t!5237 lt!40504))))))

(assert (=> d!22365 (= (isStrictlySorted!293 lt!40504) e!56131)))

(declare-fun b!86119 () Bool)

(declare-fun e!56132 () Bool)

(assert (=> b!86119 (= e!56131 e!56132)))

(declare-fun res!44317 () Bool)

(assert (=> b!86119 (=> (not res!44317) (not e!56132))))

(assert (=> b!86119 (= res!44317 (bvslt (_1!1114 (h!2112 lt!40504)) (_1!1114 (h!2112 (t!5237 lt!40504)))))))

(declare-fun b!86120 () Bool)

(assert (=> b!86120 (= e!56132 (isStrictlySorted!293 (t!5237 lt!40504)))))

(assert (= (and d!22365 (not res!44316)) b!86119))

(assert (= (and b!86119 res!44317) b!86120))

(declare-fun m!90851 () Bool)

(assert (=> b!86120 m!90851))

(assert (=> d!22117 d!22365))

(declare-fun d!22367 () Bool)

(declare-fun res!44318 () Bool)

(declare-fun e!56133 () Bool)

(assert (=> d!22367 (=> res!44318 e!56133)))

(assert (=> d!22367 (= res!44318 (or ((_ is Nil!1522) (toList!740 lt!40152)) ((_ is Nil!1522) (t!5237 (toList!740 lt!40152)))))))

(assert (=> d!22367 (= (isStrictlySorted!293 (toList!740 lt!40152)) e!56133)))

(declare-fun b!86121 () Bool)

(declare-fun e!56134 () Bool)

(assert (=> b!86121 (= e!56133 e!56134)))

(declare-fun res!44319 () Bool)

(assert (=> b!86121 (=> (not res!44319) (not e!56134))))

(assert (=> b!86121 (= res!44319 (bvslt (_1!1114 (h!2112 (toList!740 lt!40152))) (_1!1114 (h!2112 (t!5237 (toList!740 lt!40152))))))))

(declare-fun b!86122 () Bool)

(assert (=> b!86122 (= e!56134 (isStrictlySorted!293 (t!5237 (toList!740 lt!40152))))))

(assert (= (and d!22367 (not res!44318)) b!86121))

(assert (= (and b!86121 res!44319) b!86122))

(declare-fun m!90853 () Bool)

(assert (=> b!86122 m!90853))

(assert (=> d!22117 d!22367))

(declare-fun d!22369 () Bool)

(declare-fun res!44320 () Bool)

(declare-fun e!56135 () Bool)

(assert (=> d!22369 (=> res!44320 e!56135)))

(assert (=> d!22369 (= res!44320 (and ((_ is Cons!1521) (toList!740 lt!40443)) (= (_1!1114 (h!2112 (toList!740 lt!40443))) (_1!1114 lt!40143))))))

(assert (=> d!22369 (= (containsKey!142 (toList!740 lt!40443) (_1!1114 lt!40143)) e!56135)))

(declare-fun b!86123 () Bool)

(declare-fun e!56136 () Bool)

(assert (=> b!86123 (= e!56135 e!56136)))

(declare-fun res!44321 () Bool)

(assert (=> b!86123 (=> (not res!44321) (not e!56136))))

(assert (=> b!86123 (= res!44321 (and (or (not ((_ is Cons!1521) (toList!740 lt!40443))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40443))) (_1!1114 lt!40143))) ((_ is Cons!1521) (toList!740 lt!40443)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40443))) (_1!1114 lt!40143))))))

(declare-fun b!86124 () Bool)

(assert (=> b!86124 (= e!56136 (containsKey!142 (t!5237 (toList!740 lt!40443)) (_1!1114 lt!40143)))))

(assert (= (and d!22369 (not res!44320)) b!86123))

(assert (= (and b!86123 res!44321) b!86124))

(declare-fun m!90855 () Bool)

(assert (=> b!86124 m!90855))

(assert (=> d!22181 d!22369))

(declare-fun d!22371 () Bool)

(assert (=> d!22371 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!40895 () Unit!2510)

(assert (=> d!22371 (= lt!40895 (choose!514 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56137 () Bool)

(assert (=> d!22371 e!56137))

(declare-fun res!44322 () Bool)

(assert (=> d!22371 (=> (not res!44322) (not e!56137))))

(assert (=> d!22371 (= res!44322 (isStrictlySorted!293 (toList!740 lt!40471)))))

(assert (=> d!22371 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!40895)))

(declare-fun b!86125 () Bool)

(assert (=> b!86125 (= e!56137 (containsKey!142 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22371 res!44322) b!86125))

(assert (=> d!22371 m!89659))

(assert (=> d!22371 m!90291))

(assert (=> d!22371 m!90291))

(assert (=> d!22371 m!90549))

(assert (=> d!22371 m!89659))

(declare-fun m!90857 () Bool)

(assert (=> d!22371 m!90857))

(declare-fun m!90859 () Bool)

(assert (=> d!22371 m!90859))

(assert (=> b!86125 m!89659))

(assert (=> b!86125 m!90545))

(assert (=> b!86000 d!22371))

(declare-fun d!22373 () Bool)

(assert (=> d!22373 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3631 () Bool)

(assert (= bs!3631 d!22373))

(assert (=> bs!3631 m!90291))

(declare-fun m!90861 () Bool)

(assert (=> bs!3631 m!90861))

(assert (=> b!86000 d!22373))

(declare-fun c!14025 () Bool)

(declare-fun d!22375 () Bool)

(assert (=> d!22375 (= c!14025 (and ((_ is Cons!1521) (toList!740 lt!40471)) (= (_1!1114 (h!2112 (toList!740 lt!40471))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!56138 () Option!144)

(assert (=> d!22375 (= (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56138)))

(declare-fun b!86129 () Bool)

(declare-fun e!56139 () Option!144)

(assert (=> b!86129 (= e!56139 None!142)))

(declare-fun b!86126 () Bool)

(assert (=> b!86126 (= e!56138 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40471)))))))

(declare-fun b!86128 () Bool)

(assert (=> b!86128 (= e!56139 (getValueByKey!138 (t!5237 (toList!740 lt!40471)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86127 () Bool)

(assert (=> b!86127 (= e!56138 e!56139)))

(declare-fun c!14026 () Bool)

(assert (=> b!86127 (= c!14026 (and ((_ is Cons!1521) (toList!740 lt!40471)) (not (= (_1!1114 (h!2112 (toList!740 lt!40471))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!22375 c!14025) b!86126))

(assert (= (and d!22375 (not c!14025)) b!86127))

(assert (= (and b!86127 c!14026) b!86128))

(assert (= (and b!86127 (not c!14026)) b!86129))

(assert (=> b!86128 m!89659))

(declare-fun m!90863 () Bool)

(assert (=> b!86128 m!90863))

(assert (=> b!86000 d!22375))

(declare-fun d!22377 () Bool)

(assert (=> d!22377 (= (apply!82 lt!40555 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (getValueByKey!138 (toList!740 lt!40555) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3632 () Bool)

(assert (= bs!3632 d!22377))

(assert (=> bs!3632 m!89961))

(declare-fun m!90865 () Bool)

(assert (=> bs!3632 m!90865))

(assert (=> bs!3632 m!90865))

(declare-fun m!90867 () Bool)

(assert (=> bs!3632 m!90867))

(assert (=> b!85689 d!22377))

(declare-fun d!22379 () Bool)

(declare-fun c!14027 () Bool)

(assert (=> d!22379 (= c!14027 ((_ is ValueCellFull!923) (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56140 () V!3025)

(assert (=> d!22379 (= (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56140)))

(declare-fun b!86130 () Bool)

(assert (=> b!86130 (= e!56140 (get!1202 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86131 () Bool)

(assert (=> b!86131 (= e!56140 (get!1203 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22379 c!14027) b!86130))

(assert (= (and d!22379 (not c!14027)) b!86131))

(assert (=> b!86130 m!90065))

(assert (=> b!86130 m!90011))

(declare-fun m!90869 () Bool)

(assert (=> b!86130 m!90869))

(assert (=> b!86131 m!90065))

(assert (=> b!86131 m!90011))

(declare-fun m!90871 () Bool)

(assert (=> b!86131 m!90871))

(assert (=> b!85689 d!22379))

(declare-fun c!14028 () Bool)

(declare-fun d!22381 () Bool)

(assert (=> d!22381 (= c!14028 (and ((_ is Cons!1521) (toList!740 lt!40640)) (= (_1!1114 (h!2112 (toList!740 lt!40640))) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun e!56141 () Option!144)

(assert (=> d!22381 (= (getValueByKey!138 (toList!740 lt!40640) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) e!56141)))

(declare-fun b!86135 () Bool)

(declare-fun e!56142 () Option!144)

(assert (=> b!86135 (= e!56142 None!142)))

(declare-fun b!86132 () Bool)

(assert (=> b!86132 (= e!56141 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40640)))))))

(declare-fun b!86134 () Bool)

(assert (=> b!86134 (= e!56142 (getValueByKey!138 (t!5237 (toList!740 lt!40640)) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86133 () Bool)

(assert (=> b!86133 (= e!56141 e!56142)))

(declare-fun c!14029 () Bool)

(assert (=> b!86133 (= c!14029 (and ((_ is Cons!1521) (toList!740 lt!40640)) (not (= (_1!1114 (h!2112 (toList!740 lt!40640))) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))))

(assert (= (and d!22381 c!14028) b!86132))

(assert (= (and d!22381 (not c!14028)) b!86133))

(assert (= (and b!86133 c!14029) b!86134))

(assert (= (and b!86133 (not c!14029)) b!86135))

(declare-fun m!90873 () Bool)

(assert (=> b!86134 m!90873))

(assert (=> b!85812 d!22381))

(declare-fun d!22383 () Bool)

(declare-fun lt!40896 () Bool)

(assert (=> d!22383 (= lt!40896 (select (content!89 (toList!740 lt!40889)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56143 () Bool)

(assert (=> d!22383 (= lt!40896 e!56143)))

(declare-fun res!44323 () Bool)

(assert (=> d!22383 (=> (not res!44323) (not e!56143))))

(assert (=> d!22383 (= res!44323 ((_ is Cons!1521) (toList!740 lt!40889)))))

(assert (=> d!22383 (= (contains!753 (toList!740 lt!40889) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40896)))

(declare-fun b!86136 () Bool)

(declare-fun e!56144 () Bool)

(assert (=> b!86136 (= e!56143 e!56144)))

(declare-fun res!44324 () Bool)

(assert (=> b!86136 (=> res!44324 e!56144)))

(assert (=> b!86136 (= res!44324 (= (h!2112 (toList!740 lt!40889)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86137 () Bool)

(assert (=> b!86137 (= e!56144 (contains!753 (t!5237 (toList!740 lt!40889)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22383 res!44323) b!86136))

(assert (= (and b!86136 (not res!44324)) b!86137))

(declare-fun m!90875 () Bool)

(assert (=> d!22383 m!90875))

(declare-fun m!90877 () Bool)

(assert (=> d!22383 m!90877))

(declare-fun m!90879 () Bool)

(assert (=> b!86137 m!90879))

(assert (=> b!86105 d!22383))

(declare-fun d!22385 () Bool)

(assert (=> d!22385 (= (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85997 d!22385))

(declare-fun b!86138 () Bool)

(declare-fun e!56147 () List!1525)

(assert (=> b!86138 (= e!56147 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 lt!40146))) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun b!86139 () Bool)

(declare-fun c!14032 () Bool)

(declare-fun c!14033 () Bool)

(assert (=> b!86139 (= e!56147 (ite c!14032 (t!5237 (t!5237 (toList!740 lt!40146))) (ite c!14033 (Cons!1521 (h!2112 (t!5237 (toList!740 lt!40146))) (t!5237 (t!5237 (toList!740 lt!40146)))) Nil!1522)))))

(declare-fun b!86140 () Bool)

(declare-fun e!56148 () List!1525)

(declare-fun call!8205 () List!1525)

(assert (=> b!86140 (= e!56148 call!8205)))

(declare-fun b!86141 () Bool)

(declare-fun e!56145 () List!1525)

(declare-fun call!8204 () List!1525)

(assert (=> b!86141 (= e!56145 call!8204)))

(declare-fun b!86142 () Bool)

(assert (=> b!86142 (= c!14033 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40146))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146)))) (_1!1114 lt!40140))))))

(declare-fun e!56149 () List!1525)

(assert (=> b!86142 (= e!56145 e!56149)))

(declare-fun b!86143 () Bool)

(declare-fun res!44325 () Bool)

(declare-fun e!56146 () Bool)

(assert (=> b!86143 (=> (not res!44325) (not e!56146))))

(declare-fun lt!40897 () List!1525)

(assert (=> b!86143 (= res!44325 (containsKey!142 lt!40897 (_1!1114 lt!40140)))))

(declare-fun b!86145 () Bool)

(declare-fun call!8206 () List!1525)

(assert (=> b!86145 (= e!56149 call!8206)))

(declare-fun b!86146 () Bool)

(assert (=> b!86146 (= e!56146 (contains!753 lt!40897 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun c!14031 () Bool)

(declare-fun bm!8201 () Bool)

(assert (=> bm!8201 (= call!8205 ($colon$colon!71 e!56147 (ite c!14031 (h!2112 (t!5237 (toList!740 lt!40146))) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))))))

(declare-fun c!14030 () Bool)

(assert (=> bm!8201 (= c!14030 c!14031)))

(declare-fun bm!8202 () Bool)

(assert (=> bm!8202 (= call!8206 call!8204)))

(declare-fun b!86144 () Bool)

(assert (=> b!86144 (= e!56149 call!8206)))

(declare-fun d!22387 () Bool)

(assert (=> d!22387 e!56146))

(declare-fun res!44326 () Bool)

(assert (=> d!22387 (=> (not res!44326) (not e!56146))))

(assert (=> d!22387 (= res!44326 (isStrictlySorted!293 lt!40897))))

(assert (=> d!22387 (= lt!40897 e!56148)))

(assert (=> d!22387 (= c!14031 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40146))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146)))) (_1!1114 lt!40140))))))

(assert (=> d!22387 (isStrictlySorted!293 (t!5237 (toList!740 lt!40146)))))

(assert (=> d!22387 (= (insertStrictlySorted!61 (t!5237 (toList!740 lt!40146)) (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!40897)))

(declare-fun b!86147 () Bool)

(assert (=> b!86147 (= e!56148 e!56145)))

(assert (=> b!86147 (= c!14032 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40146))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146)))) (_1!1114 lt!40140))))))

(declare-fun bm!8203 () Bool)

(assert (=> bm!8203 (= call!8204 call!8205)))

(assert (= (and d!22387 c!14031) b!86140))

(assert (= (and d!22387 (not c!14031)) b!86147))

(assert (= (and b!86147 c!14032) b!86141))

(assert (= (and b!86147 (not c!14032)) b!86142))

(assert (= (and b!86142 c!14033) b!86145))

(assert (= (and b!86142 (not c!14033)) b!86144))

(assert (= (or b!86145 b!86144) bm!8202))

(assert (= (or b!86141 bm!8202) bm!8203))

(assert (= (or b!86140 bm!8203) bm!8201))

(assert (= (and bm!8201 c!14030) b!86138))

(assert (= (and bm!8201 (not c!14030)) b!86139))

(assert (= (and d!22387 res!44326) b!86143))

(assert (= (and b!86143 res!44325) b!86146))

(declare-fun m!90881 () Bool)

(assert (=> d!22387 m!90881))

(declare-fun m!90883 () Bool)

(assert (=> d!22387 m!90883))

(declare-fun m!90885 () Bool)

(assert (=> b!86146 m!90885))

(declare-fun m!90887 () Bool)

(assert (=> b!86143 m!90887))

(declare-fun m!90889 () Bool)

(assert (=> b!86138 m!90889))

(declare-fun m!90891 () Bool)

(assert (=> bm!8201 m!90891))

(assert (=> b!86017 d!22387))

(declare-fun d!22389 () Bool)

(declare-fun c!14034 () Bool)

(assert (=> d!22389 (= c!14034 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40480))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40480)))) (_1!1114 lt!40153))))))

(declare-fun e!56150 () Option!144)

(assert (=> d!22389 (= (getValueByKey!138 (t!5237 (toList!740 lt!40480)) (_1!1114 lt!40153)) e!56150)))

(declare-fun b!86151 () Bool)

(declare-fun e!56151 () Option!144)

(assert (=> b!86151 (= e!56151 None!142)))

(declare-fun b!86148 () Bool)

(assert (=> b!86148 (= e!56150 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40480))))))))

(declare-fun b!86150 () Bool)

(assert (=> b!86150 (= e!56151 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40480))) (_1!1114 lt!40153)))))

(declare-fun b!86149 () Bool)

(assert (=> b!86149 (= e!56150 e!56151)))

(declare-fun c!14035 () Bool)

(assert (=> b!86149 (= c!14035 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40480))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40480)))) (_1!1114 lt!40153)))))))

(assert (= (and d!22389 c!14034) b!86148))

(assert (= (and d!22389 (not c!14034)) b!86149))

(assert (= (and b!86149 c!14035) b!86150))

(assert (= (and b!86149 (not c!14035)) b!86151))

(declare-fun m!90893 () Bool)

(assert (=> b!86150 m!90893))

(assert (=> b!85743 d!22389))

(declare-fun d!22391 () Bool)

(declare-fun e!56153 () Bool)

(assert (=> d!22391 e!56153))

(declare-fun res!44327 () Bool)

(assert (=> d!22391 (=> res!44327 e!56153)))

(declare-fun lt!40898 () Bool)

(assert (=> d!22391 (= res!44327 (not lt!40898))))

(declare-fun lt!40901 () Bool)

(assert (=> d!22391 (= lt!40898 lt!40901)))

(declare-fun lt!40899 () Unit!2510)

(declare-fun e!56152 () Unit!2510)

(assert (=> d!22391 (= lt!40899 e!56152)))

(declare-fun c!14036 () Bool)

(assert (=> d!22391 (= c!14036 lt!40901)))

(assert (=> d!22391 (= lt!40901 (containsKey!142 (toList!740 lt!40533) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22391 (= (contains!752 lt!40533 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40898)))

(declare-fun b!86152 () Bool)

(declare-fun lt!40900 () Unit!2510)

(assert (=> b!86152 (= e!56152 lt!40900)))

(assert (=> b!86152 (= lt!40900 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40533) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86152 (isDefined!92 (getValueByKey!138 (toList!740 lt!40533) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86153 () Bool)

(declare-fun Unit!2550 () Unit!2510)

(assert (=> b!86153 (= e!56152 Unit!2550)))

(declare-fun b!86154 () Bool)

(assert (=> b!86154 (= e!56153 (isDefined!92 (getValueByKey!138 (toList!740 lt!40533) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22391 c!14036) b!86152))

(assert (= (and d!22391 (not c!14036)) b!86153))

(assert (= (and d!22391 (not res!44327)) b!86154))

(declare-fun m!90895 () Bool)

(assert (=> d!22391 m!90895))

(declare-fun m!90897 () Bool)

(assert (=> b!86152 m!90897))

(declare-fun m!90899 () Bool)

(assert (=> b!86152 m!90899))

(assert (=> b!86152 m!90899))

(declare-fun m!90901 () Bool)

(assert (=> b!86152 m!90901))

(assert (=> b!86154 m!90899))

(assert (=> b!86154 m!90899))

(assert (=> b!86154 m!90901))

(assert (=> bm!8143 d!22391))

(declare-fun d!22393 () Bool)

(assert (=> d!22393 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3633 () Bool)

(assert (= bs!3633 d!22393))

(assert (=> bs!3633 m!90079))

(declare-fun m!90903 () Bool)

(assert (=> bs!3633 m!90903))

(assert (=> b!85706 d!22393))

(declare-fun d!22395 () Bool)

(declare-fun c!14037 () Bool)

(assert (=> d!22395 (= c!14037 (and ((_ is Cons!1521) (toList!740 lt!40415)) (= (_1!1114 (h!2112 (toList!740 lt!40415))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!56154 () Option!144)

(assert (=> d!22395 (= (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56154)))

(declare-fun b!86158 () Bool)

(declare-fun e!56155 () Option!144)

(assert (=> b!86158 (= e!56155 None!142)))

(declare-fun b!86155 () Bool)

(assert (=> b!86155 (= e!56154 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40415)))))))

(declare-fun b!86157 () Bool)

(assert (=> b!86157 (= e!56155 (getValueByKey!138 (t!5237 (toList!740 lt!40415)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!86156 () Bool)

(assert (=> b!86156 (= e!56154 e!56155)))

(declare-fun c!14038 () Bool)

(assert (=> b!86156 (= c!14038 (and ((_ is Cons!1521) (toList!740 lt!40415)) (not (= (_1!1114 (h!2112 (toList!740 lt!40415))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(assert (= (and d!22395 c!14037) b!86155))

(assert (= (and d!22395 (not c!14037)) b!86156))

(assert (= (and b!86156 c!14038) b!86157))

(assert (= (and b!86156 (not c!14038)) b!86158))

(assert (=> b!86157 m!89659))

(declare-fun m!90905 () Bool)

(assert (=> b!86157 m!90905))

(assert (=> b!85706 d!22395))

(declare-fun d!22397 () Bool)

(declare-fun e!56157 () Bool)

(assert (=> d!22397 e!56157))

(declare-fun res!44328 () Bool)

(assert (=> d!22397 (=> res!44328 e!56157)))

(declare-fun lt!40902 () Bool)

(assert (=> d!22397 (= res!44328 (not lt!40902))))

(declare-fun lt!40905 () Bool)

(assert (=> d!22397 (= lt!40902 lt!40905)))

(declare-fun lt!40903 () Unit!2510)

(declare-fun e!56156 () Unit!2510)

(assert (=> d!22397 (= lt!40903 e!56156)))

(declare-fun c!14039 () Bool)

(assert (=> d!22397 (= c!14039 lt!40905)))

(assert (=> d!22397 (= lt!40905 (containsKey!142 (toList!740 lt!40869) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22397 (= (contains!752 lt!40869 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40902)))

(declare-fun b!86159 () Bool)

(declare-fun lt!40904 () Unit!2510)

(assert (=> b!86159 (= e!56156 lt!40904)))

(assert (=> b!86159 (= lt!40904 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40869) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86159 (isDefined!92 (getValueByKey!138 (toList!740 lt!40869) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86160 () Bool)

(declare-fun Unit!2551 () Unit!2510)

(assert (=> b!86160 (= e!56156 Unit!2551)))

(declare-fun b!86161 () Bool)

(assert (=> b!86161 (= e!56157 (isDefined!92 (getValueByKey!138 (toList!740 lt!40869) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22397 c!14039) b!86159))

(assert (= (and d!22397 (not c!14039)) b!86160))

(assert (= (and d!22397 (not res!44328)) b!86161))

(declare-fun m!90907 () Bool)

(assert (=> d!22397 m!90907))

(declare-fun m!90909 () Bool)

(assert (=> b!86159 m!90909))

(assert (=> b!86159 m!90777))

(assert (=> b!86159 m!90777))

(declare-fun m!90911 () Bool)

(assert (=> b!86159 m!90911))

(assert (=> b!86161 m!90777))

(assert (=> b!86161 m!90777))

(assert (=> b!86161 m!90911))

(assert (=> d!22347 d!22397))

(declare-fun d!22399 () Bool)

(declare-fun c!14040 () Bool)

(assert (=> d!22399 (= c!14040 (and ((_ is Cons!1521) lt!40868) (= (_1!1114 (h!2112 lt!40868)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56158 () Option!144)

(assert (=> d!22399 (= (getValueByKey!138 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56158)))

(declare-fun b!86165 () Bool)

(declare-fun e!56159 () Option!144)

(assert (=> b!86165 (= e!56159 None!142)))

(declare-fun b!86162 () Bool)

(assert (=> b!86162 (= e!56158 (Some!143 (_2!1114 (h!2112 lt!40868))))))

(declare-fun b!86164 () Bool)

(assert (=> b!86164 (= e!56159 (getValueByKey!138 (t!5237 lt!40868) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86163 () Bool)

(assert (=> b!86163 (= e!56158 e!56159)))

(declare-fun c!14041 () Bool)

(assert (=> b!86163 (= c!14041 (and ((_ is Cons!1521) lt!40868) (not (= (_1!1114 (h!2112 lt!40868)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22399 c!14040) b!86162))

(assert (= (and d!22399 (not c!14040)) b!86163))

(assert (= (and b!86163 c!14041) b!86164))

(assert (= (and b!86163 (not c!14041)) b!86165))

(declare-fun m!90913 () Bool)

(assert (=> b!86164 m!90913))

(assert (=> d!22347 d!22399))

(declare-fun d!22401 () Bool)

(assert (=> d!22401 (= (getValueByKey!138 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40906 () Unit!2510)

(assert (=> d!22401 (= lt!40906 (choose!507 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56160 () Bool)

(assert (=> d!22401 e!56160))

(declare-fun res!44329 () Bool)

(assert (=> d!22401 (=> (not res!44329) (not e!56160))))

(assert (=> d!22401 (= res!44329 (isStrictlySorted!293 lt!40868))))

(assert (=> d!22401 (= (lemmaContainsTupThenGetReturnValue!58 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40906)))

(declare-fun b!86166 () Bool)

(declare-fun res!44330 () Bool)

(assert (=> b!86166 (=> (not res!44330) (not e!56160))))

(assert (=> b!86166 (= res!44330 (containsKey!142 lt!40868 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86167 () Bool)

(assert (=> b!86167 (= e!56160 (contains!753 lt!40868 (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22401 res!44329) b!86166))

(assert (= (and b!86166 res!44330) b!86167))

(assert (=> d!22401 m!90771))

(declare-fun m!90915 () Bool)

(assert (=> d!22401 m!90915))

(declare-fun m!90917 () Bool)

(assert (=> d!22401 m!90917))

(declare-fun m!90919 () Bool)

(assert (=> b!86166 m!90919))

(declare-fun m!90921 () Bool)

(assert (=> b!86167 m!90921))

(assert (=> d!22347 d!22401))

(declare-fun b!86168 () Bool)

(declare-fun e!56163 () List!1525)

(assert (=> b!86168 (= e!56163 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40146)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86169 () Bool)

(declare-fun c!14044 () Bool)

(declare-fun c!14045 () Bool)

(assert (=> b!86169 (= e!56163 (ite c!14044 (t!5237 (toList!740 lt!40146)) (ite c!14045 (Cons!1521 (h!2112 (toList!740 lt!40146)) (t!5237 (toList!740 lt!40146))) Nil!1522)))))

(declare-fun b!86170 () Bool)

(declare-fun e!56164 () List!1525)

(declare-fun call!8208 () List!1525)

(assert (=> b!86170 (= e!56164 call!8208)))

(declare-fun b!86171 () Bool)

(declare-fun e!56161 () List!1525)

(declare-fun call!8207 () List!1525)

(assert (=> b!86171 (= e!56161 call!8207)))

(declare-fun b!86172 () Bool)

(assert (=> b!86172 (= c!14045 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56165 () List!1525)

(assert (=> b!86172 (= e!56161 e!56165)))

(declare-fun b!86173 () Bool)

(declare-fun res!44331 () Bool)

(declare-fun e!56162 () Bool)

(assert (=> b!86173 (=> (not res!44331) (not e!56162))))

(declare-fun lt!40907 () List!1525)

(assert (=> b!86173 (= res!44331 (containsKey!142 lt!40907 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86175 () Bool)

(declare-fun call!8209 () List!1525)

(assert (=> b!86175 (= e!56165 call!8209)))

(declare-fun b!86176 () Bool)

(assert (=> b!86176 (= e!56162 (contains!753 lt!40907 (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun c!14043 () Bool)

(declare-fun bm!8204 () Bool)

(assert (=> bm!8204 (= call!8208 ($colon$colon!71 e!56163 (ite c!14043 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14042 () Bool)

(assert (=> bm!8204 (= c!14042 c!14043)))

(declare-fun bm!8205 () Bool)

(assert (=> bm!8205 (= call!8209 call!8207)))

(declare-fun b!86174 () Bool)

(assert (=> b!86174 (= e!56165 call!8209)))

(declare-fun d!22403 () Bool)

(assert (=> d!22403 e!56162))

(declare-fun res!44332 () Bool)

(assert (=> d!22403 (=> (not res!44332) (not e!56162))))

(assert (=> d!22403 (= res!44332 (isStrictlySorted!293 lt!40907))))

(assert (=> d!22403 (= lt!40907 e!56164)))

(assert (=> d!22403 (= c!14043 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22403 (isStrictlySorted!293 (toList!740 lt!40146))))

(assert (=> d!22403 (= (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40907)))

(declare-fun b!86177 () Bool)

(assert (=> b!86177 (= e!56164 e!56161)))

(assert (=> b!86177 (= c!14044 (and ((_ is Cons!1521) (toList!740 lt!40146)) (= (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8206 () Bool)

(assert (=> bm!8206 (= call!8207 call!8208)))

(assert (= (and d!22403 c!14043) b!86170))

(assert (= (and d!22403 (not c!14043)) b!86177))

(assert (= (and b!86177 c!14044) b!86171))

(assert (= (and b!86177 (not c!14044)) b!86172))

(assert (= (and b!86172 c!14045) b!86175))

(assert (= (and b!86172 (not c!14045)) b!86174))

(assert (= (or b!86175 b!86174) bm!8205))

(assert (= (or b!86171 bm!8205) bm!8206))

(assert (= (or b!86170 bm!8206) bm!8204))

(assert (= (and bm!8204 c!14042) b!86168))

(assert (= (and bm!8204 (not c!14042)) b!86169))

(assert (= (and d!22403 res!44332) b!86173))

(assert (= (and b!86173 res!44331) b!86176))

(declare-fun m!90923 () Bool)

(assert (=> d!22403 m!90923))

(assert (=> d!22403 m!89917))

(declare-fun m!90925 () Bool)

(assert (=> b!86176 m!90925))

(declare-fun m!90927 () Bool)

(assert (=> b!86173 m!90927))

(declare-fun m!90929 () Bool)

(assert (=> b!86168 m!90929))

(declare-fun m!90931 () Bool)

(assert (=> bm!8204 m!90931))

(assert (=> d!22347 d!22403))

(declare-fun b!86179 () Bool)

(declare-fun e!56166 () Bool)

(declare-fun call!8210 () Bool)

(assert (=> b!86179 (= e!56166 call!8210)))

(declare-fun b!86180 () Bool)

(declare-fun e!56167 () Bool)

(assert (=> b!86180 (= e!56166 e!56167)))

(declare-fun lt!40910 () (_ BitVec 64))

(assert (=> b!86180 (= lt!40910 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000))))

(declare-fun lt!40908 () Unit!2510)

(assert (=> b!86180 (= lt!40908 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4008 (_2!1113 lt!40354)) lt!40910 #b00000000000000000000000000000000))))

(assert (=> b!86180 (arrayContainsKey!0 (_keys!4008 (_2!1113 lt!40354)) lt!40910 #b00000000000000000000000000000000)))

(declare-fun lt!40909 () Unit!2510)

(assert (=> b!86180 (= lt!40909 lt!40908)))

(declare-fun res!44334 () Bool)

(assert (=> b!86180 (= res!44334 (= (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000) (_keys!4008 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354))) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!86180 (=> (not res!44334) (not e!56167))))

(declare-fun d!22405 () Bool)

(declare-fun res!44333 () Bool)

(declare-fun e!56168 () Bool)

(assert (=> d!22405 (=> res!44333 e!56168)))

(assert (=> d!22405 (= res!44333 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(assert (=> d!22405 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354))) e!56168)))

(declare-fun b!86178 () Bool)

(assert (=> b!86178 (= e!56168 e!56166)))

(declare-fun c!14046 () Bool)

(assert (=> b!86178 (= c!14046 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun bm!8207 () Bool)

(assert (=> bm!8207 (= call!8210 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4008 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354))))))

(declare-fun b!86181 () Bool)

(assert (=> b!86181 (= e!56167 call!8210)))

(assert (= (and d!22405 (not res!44333)) b!86178))

(assert (= (and b!86178 c!14046) b!86180))

(assert (= (and b!86178 (not c!14046)) b!86179))

(assert (= (and b!86180 res!44334) b!86181))

(assert (= (or b!86181 b!86179) bm!8207))

(declare-fun m!90933 () Bool)

(assert (=> b!86180 m!90933))

(declare-fun m!90935 () Bool)

(assert (=> b!86180 m!90935))

(declare-fun m!90937 () Bool)

(assert (=> b!86180 m!90937))

(assert (=> b!86180 m!90933))

(declare-fun m!90939 () Bool)

(assert (=> b!86180 m!90939))

(assert (=> b!86178 m!90933))

(assert (=> b!86178 m!90933))

(declare-fun m!90941 () Bool)

(assert (=> b!86178 m!90941))

(declare-fun m!90943 () Bool)

(assert (=> bm!8207 m!90943))

(assert (=> b!85894 d!22405))

(declare-fun d!22407 () Bool)

(declare-fun e!56169 () Bool)

(assert (=> d!22407 e!56169))

(declare-fun res!44335 () Bool)

(assert (=> d!22407 (=> (not res!44335) (not e!56169))))

(declare-fun lt!40913 () ListLongMap!1449)

(assert (=> d!22407 (= res!44335 (contains!752 lt!40913 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun lt!40912 () List!1525)

(assert (=> d!22407 (= lt!40913 (ListLongMap!1450 lt!40912))))

(declare-fun lt!40911 () Unit!2510)

(declare-fun lt!40914 () Unit!2510)

(assert (=> d!22407 (= lt!40911 lt!40914)))

(assert (=> d!22407 (= (getValueByKey!138 lt!40912 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22407 (= lt!40914 (lemmaContainsTupThenGetReturnValue!58 lt!40912 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22407 (= lt!40912 (insertStrictlySorted!61 (toList!740 call!8155) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!22407 (= (+!108 call!8155 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) lt!40913)))

(declare-fun b!86182 () Bool)

(declare-fun res!44336 () Bool)

(assert (=> b!86182 (=> (not res!44336) (not e!56169))))

(assert (=> b!86182 (= res!44336 (= (getValueByKey!138 (toList!740 lt!40913) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun b!86183 () Bool)

(assert (=> b!86183 (= e!56169 (contains!753 (toList!740 lt!40913) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(assert (= (and d!22407 res!44335) b!86182))

(assert (= (and b!86182 res!44336) b!86183))

(declare-fun m!90945 () Bool)

(assert (=> d!22407 m!90945))

(declare-fun m!90947 () Bool)

(assert (=> d!22407 m!90947))

(declare-fun m!90949 () Bool)

(assert (=> d!22407 m!90949))

(declare-fun m!90951 () Bool)

(assert (=> d!22407 m!90951))

(declare-fun m!90953 () Bool)

(assert (=> b!86182 m!90953))

(declare-fun m!90955 () Bool)

(assert (=> b!86183 m!90955))

(assert (=> b!85676 d!22407))

(declare-fun d!22409 () Bool)

(assert (=> d!22409 (isDefined!92 (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143)))))

(declare-fun lt!40915 () Unit!2510)

(assert (=> d!22409 (= lt!40915 (choose!514 (toList!740 lt!40443) (_1!1114 lt!40143)))))

(declare-fun e!56170 () Bool)

(assert (=> d!22409 e!56170))

(declare-fun res!44337 () Bool)

(assert (=> d!22409 (=> (not res!44337) (not e!56170))))

(assert (=> d!22409 (= res!44337 (isStrictlySorted!293 (toList!740 lt!40443)))))

(assert (=> d!22409 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40443) (_1!1114 lt!40143)) lt!40915)))

(declare-fun b!86184 () Bool)

(assert (=> b!86184 (= e!56170 (containsKey!142 (toList!740 lt!40443) (_1!1114 lt!40143)))))

(assert (= (and d!22409 res!44337) b!86184))

(assert (=> d!22409 m!89761))

(assert (=> d!22409 m!89761))

(assert (=> d!22409 m!90173))

(declare-fun m!90957 () Bool)

(assert (=> d!22409 m!90957))

(declare-fun m!90959 () Bool)

(assert (=> d!22409 m!90959))

(assert (=> b!86184 m!90169))

(assert (=> b!85755 d!22409))

(declare-fun d!22411 () Bool)

(assert (=> d!22411 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40443) (_1!1114 lt!40143)))))))

(declare-fun bs!3634 () Bool)

(assert (= bs!3634 d!22411))

(assert (=> bs!3634 m!89761))

(declare-fun m!90961 () Bool)

(assert (=> bs!3634 m!90961))

(assert (=> b!85755 d!22411))

(assert (=> b!85755 d!22235))

(declare-fun d!22413 () Bool)

(declare-fun res!44338 () Bool)

(declare-fun e!56171 () Bool)

(assert (=> d!22413 (=> res!44338 e!56171)))

(assert (=> d!22413 (= res!44338 (or ((_ is Nil!1522) lt!40806) ((_ is Nil!1522) (t!5237 lt!40806))))))

(assert (=> d!22413 (= (isStrictlySorted!293 lt!40806) e!56171)))

(declare-fun b!86185 () Bool)

(declare-fun e!56172 () Bool)

(assert (=> b!86185 (= e!56171 e!56172)))

(declare-fun res!44339 () Bool)

(assert (=> b!86185 (=> (not res!44339) (not e!56172))))

(assert (=> b!86185 (= res!44339 (bvslt (_1!1114 (h!2112 lt!40806)) (_1!1114 (h!2112 (t!5237 lt!40806)))))))

(declare-fun b!86186 () Bool)

(assert (=> b!86186 (= e!56172 (isStrictlySorted!293 (t!5237 lt!40806)))))

(assert (= (and d!22413 (not res!44338)) b!86185))

(assert (= (and b!86185 res!44339) b!86186))

(declare-fun m!90963 () Bool)

(assert (=> b!86186 m!90963))

(assert (=> d!22283 d!22413))

(declare-fun d!22415 () Bool)

(declare-fun res!44340 () Bool)

(declare-fun e!56173 () Bool)

(assert (=> d!22415 (=> res!44340 e!56173)))

(assert (=> d!22415 (= res!44340 (or ((_ is Nil!1522) (toList!740 lt!40146)) ((_ is Nil!1522) (t!5237 (toList!740 lt!40146)))))))

(assert (=> d!22415 (= (isStrictlySorted!293 (toList!740 lt!40146)) e!56173)))

(declare-fun b!86187 () Bool)

(declare-fun e!56174 () Bool)

(assert (=> b!86187 (= e!56173 e!56174)))

(declare-fun res!44341 () Bool)

(assert (=> b!86187 (=> (not res!44341) (not e!56174))))

(assert (=> b!86187 (= res!44341 (bvslt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146))))))))

(declare-fun b!86188 () Bool)

(assert (=> b!86188 (= e!56174 (isStrictlySorted!293 (t!5237 (toList!740 lt!40146))))))

(assert (= (and d!22415 (not res!44340)) b!86187))

(assert (= (and b!86187 res!44341) b!86188))

(assert (=> b!86188 m!90883))

(assert (=> d!22283 d!22415))

(assert (=> b!85937 d!22385))

(declare-fun d!22417 () Bool)

(assert (=> d!22417 (isDefined!92 (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153)))))

(declare-fun lt!40916 () Unit!2510)

(assert (=> d!22417 (= lt!40916 (choose!514 (toList!740 lt!40480) (_1!1114 lt!40153)))))

(declare-fun e!56175 () Bool)

(assert (=> d!22417 e!56175))

(declare-fun res!44342 () Bool)

(assert (=> d!22417 (=> (not res!44342) (not e!56175))))

(assert (=> d!22417 (= res!44342 (isStrictlySorted!293 (toList!740 lt!40480)))))

(assert (=> d!22417 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40480) (_1!1114 lt!40153)) lt!40916)))

(declare-fun b!86189 () Bool)

(assert (=> b!86189 (= e!56175 (containsKey!142 (toList!740 lt!40480) (_1!1114 lt!40153)))))

(assert (= (and d!22417 res!44342) b!86189))

(assert (=> d!22417 m!89829))

(assert (=> d!22417 m!89829))

(assert (=> d!22417 m!89871))

(declare-fun m!90965 () Bool)

(assert (=> d!22417 m!90965))

(declare-fun m!90967 () Bool)

(assert (=> d!22417 m!90967))

(assert (=> b!86189 m!89867))

(assert (=> b!85552 d!22417))

(declare-fun d!22419 () Bool)

(assert (=> d!22419 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40480) (_1!1114 lt!40153)))))))

(declare-fun bs!3635 () Bool)

(assert (= bs!3635 d!22419))

(assert (=> bs!3635 m!89829))

(declare-fun m!90969 () Bool)

(assert (=> bs!3635 m!90969))

(assert (=> b!85552 d!22419))

(assert (=> b!85552 d!22171))

(declare-fun d!22421 () Bool)

(assert (=> d!22421 (= (apply!82 lt!40533 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40533) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3636 () Bool)

(assert (= bs!3636 d!22421))

(assert (=> bs!3636 m!90899))

(assert (=> bs!3636 m!90899))

(declare-fun m!90971 () Bool)

(assert (=> bs!3636 m!90971))

(assert (=> b!85652 d!22421))

(declare-fun d!22423 () Bool)

(assert (=> d!22423 (= ($colon$colon!71 e!56068 (ite c!14010 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))) (Cons!1521 (ite c!14010 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) e!56068))))

(assert (=> bm!8192 d!22423))

(declare-fun d!22425 () Bool)

(assert (=> d!22425 (= (size!2157 newMap!16) (bvadd (_size!426 newMap!16) (bvsdiv (bvadd (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!85702 d!22425))

(declare-fun b!86208 () Bool)

(declare-fun e!56188 () Bool)

(declare-fun e!56190 () Bool)

(assert (=> b!86208 (= e!56188 e!56190)))

(declare-fun res!44350 () Bool)

(declare-fun lt!40922 () SeekEntryResult!246)

(assert (=> b!86208 (= res!44350 (and ((_ is Intermediate!246) lt!40922) (not (undefined!1058 lt!40922)) (bvslt (x!11998 lt!40922) #b01111111111111111111111111111110) (bvsge (x!11998 lt!40922) #b00000000000000000000000000000000) (bvsge (x!11998 lt!40922) #b00000000000000000000000000000000)))))

(assert (=> b!86208 (=> (not res!44350) (not e!56190))))

(declare-fun e!56186 () SeekEntryResult!246)

(declare-fun b!86209 () Bool)

(assert (=> b!86209 (= e!56186 (Intermediate!246 false (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!22427 () Bool)

(assert (=> d!22427 e!56188))

(declare-fun c!14053 () Bool)

(assert (=> d!22427 (= c!14053 (and ((_ is Intermediate!246) lt!40922) (undefined!1058 lt!40922)))))

(declare-fun e!56187 () SeekEntryResult!246)

(assert (=> d!22427 (= lt!40922 e!56187)))

(declare-fun c!14055 () Bool)

(assert (=> d!22427 (= c!14055 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!40921 () (_ BitVec 64))

(assert (=> d!22427 (= lt!40921 (select (arr!1906 (_keys!4008 newMap!16)) (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16))))))

(assert (=> d!22427 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22427 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)) lt!40922)))

(declare-fun b!86210 () Bool)

(assert (=> b!86210 (= e!56187 e!56186)))

(declare-fun c!14054 () Bool)

(assert (=> b!86210 (= c!14054 (or (= lt!40921 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (= (bvadd lt!40921 lt!40921) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86211 () Bool)

(assert (=> b!86211 (= e!56187 (Intermediate!246 true (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!86212 () Bool)

(assert (=> b!86212 (and (bvsge (index!3123 lt!40922) #b00000000000000000000000000000000) (bvslt (index!3123 lt!40922) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun res!44351 () Bool)

(assert (=> b!86212 (= res!44351 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3123 lt!40922)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!56189 () Bool)

(assert (=> b!86212 (=> res!44351 e!56189)))

(assert (=> b!86212 (= e!56190 e!56189)))

(declare-fun b!86213 () Bool)

(assert (=> b!86213 (= e!56188 (bvsge (x!11998 lt!40922) #b01111111111111111111111111111110))))

(declare-fun b!86214 () Bool)

(assert (=> b!86214 (and (bvsge (index!3123 lt!40922) #b00000000000000000000000000000000) (bvslt (index!3123 lt!40922) (size!2151 (_keys!4008 newMap!16))))))

(assert (=> b!86214 (= e!56189 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3123 lt!40922)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86215 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!86215 (= e!56186 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16)) #b00000000000000000000000000000000 (mask!6364 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!86216 () Bool)

(assert (=> b!86216 (and (bvsge (index!3123 lt!40922) #b00000000000000000000000000000000) (bvslt (index!3123 lt!40922) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun res!44349 () Bool)

(assert (=> b!86216 (= res!44349 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3123 lt!40922)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86216 (=> res!44349 e!56189)))

(assert (= (and d!22427 c!14055) b!86211))

(assert (= (and d!22427 (not c!14055)) b!86210))

(assert (= (and b!86210 c!14054) b!86209))

(assert (= (and b!86210 (not c!14054)) b!86215))

(assert (= (and d!22427 c!14053) b!86213))

(assert (= (and d!22427 (not c!14053)) b!86208))

(assert (= (and b!86208 res!44350) b!86212))

(assert (= (and b!86212 (not res!44351)) b!86216))

(assert (= (and b!86216 (not res!44349)) b!86214))

(assert (=> b!86215 m!90391))

(declare-fun m!90973 () Bool)

(assert (=> b!86215 m!90973))

(assert (=> b!86215 m!90973))

(assert (=> b!86215 m!89403))

(declare-fun m!90975 () Bool)

(assert (=> b!86215 m!90975))

(declare-fun m!90977 () Bool)

(assert (=> b!86214 m!90977))

(assert (=> b!86216 m!90977))

(assert (=> d!22427 m!90391))

(declare-fun m!90979 () Bool)

(assert (=> d!22427 m!90979))

(assert (=> d!22427 m!90001))

(assert (=> b!86212 m!90977))

(assert (=> d!22243 d!22427))

(declare-fun d!22429 () Bool)

(declare-fun lt!40928 () (_ BitVec 32))

(declare-fun lt!40927 () (_ BitVec 32))

(assert (=> d!22429 (= lt!40928 (bvmul (bvxor lt!40927 (bvlshr lt!40927 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!22429 (= lt!40927 ((_ extract 31 0) (bvand (bvxor (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvlshr (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!22429 (and (bvsge (mask!6364 newMap!16) #b00000000000000000000000000000000) (let ((res!44352 (let ((h!2117 ((_ extract 31 0) (bvand (bvxor (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvlshr (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12100 (bvmul (bvxor h!2117 (bvlshr h!2117 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12100 (bvlshr x!12100 #b00000000000000000000000000001101)) (mask!6364 newMap!16)))))) (and (bvslt res!44352 (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001)) (bvsge res!44352 #b00000000000000000000000000000000))))))

(assert (=> d!22429 (= (toIndex!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (mask!6364 newMap!16)) (bvand (bvxor lt!40928 (bvlshr lt!40928 #b00000000000000000000000000001101)) (mask!6364 newMap!16)))))

(assert (=> d!22243 d!22429))

(declare-fun d!22431 () Bool)

(assert (=> d!22431 (= (validMask!0 (mask!6364 newMap!16)) (and (or (= (mask!6364 newMap!16) #b00000000000000000000000000000111) (= (mask!6364 newMap!16) #b00000000000000000000000000001111) (= (mask!6364 newMap!16) #b00000000000000000000000000011111) (= (mask!6364 newMap!16) #b00000000000000000000000000111111) (= (mask!6364 newMap!16) #b00000000000000000000000001111111) (= (mask!6364 newMap!16) #b00000000000000000000000011111111) (= (mask!6364 newMap!16) #b00000000000000000000000111111111) (= (mask!6364 newMap!16) #b00000000000000000000001111111111) (= (mask!6364 newMap!16) #b00000000000000000000011111111111) (= (mask!6364 newMap!16) #b00000000000000000000111111111111) (= (mask!6364 newMap!16) #b00000000000000000001111111111111) (= (mask!6364 newMap!16) #b00000000000000000011111111111111) (= (mask!6364 newMap!16) #b00000000000000000111111111111111) (= (mask!6364 newMap!16) #b00000000000000001111111111111111) (= (mask!6364 newMap!16) #b00000000000000011111111111111111) (= (mask!6364 newMap!16) #b00000000000000111111111111111111) (= (mask!6364 newMap!16) #b00000000000001111111111111111111) (= (mask!6364 newMap!16) #b00000000000011111111111111111111) (= (mask!6364 newMap!16) #b00000000000111111111111111111111) (= (mask!6364 newMap!16) #b00000000001111111111111111111111) (= (mask!6364 newMap!16) #b00000000011111111111111111111111) (= (mask!6364 newMap!16) #b00000000111111111111111111111111) (= (mask!6364 newMap!16) #b00000001111111111111111111111111) (= (mask!6364 newMap!16) #b00000011111111111111111111111111) (= (mask!6364 newMap!16) #b00000111111111111111111111111111) (= (mask!6364 newMap!16) #b00001111111111111111111111111111) (= (mask!6364 newMap!16) #b00011111111111111111111111111111) (= (mask!6364 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6364 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!22243 d!22431))

(declare-fun c!14056 () Bool)

(declare-fun d!22433 () Bool)

(assert (=> d!22433 (= c!14056 (and ((_ is Cons!1521) (toList!740 lt!40848)) (= (_1!1114 (h!2112 (toList!740 lt!40848))) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56191 () Option!144)

(assert (=> d!22433 (= (getValueByKey!138 (toList!740 lt!40848) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56191)))

(declare-fun b!86220 () Bool)

(declare-fun e!56192 () Option!144)

(assert (=> b!86220 (= e!56192 None!142)))

(declare-fun b!86217 () Bool)

(assert (=> b!86217 (= e!56191 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40848)))))))

(declare-fun b!86219 () Bool)

(assert (=> b!86219 (= e!56192 (getValueByKey!138 (t!5237 (toList!740 lt!40848)) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86218 () Bool)

(assert (=> b!86218 (= e!56191 e!56192)))

(declare-fun c!14057 () Bool)

(assert (=> b!86218 (= c!14057 (and ((_ is Cons!1521) (toList!740 lt!40848)) (not (= (_1!1114 (h!2112 (toList!740 lt!40848))) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22433 c!14056) b!86217))

(assert (= (and d!22433 (not c!14056)) b!86218))

(assert (= (and b!86218 c!14057) b!86219))

(assert (= (and b!86218 (not c!14057)) b!86220))

(declare-fun m!90981 () Bool)

(assert (=> b!86219 m!90981))

(assert (=> b!86081 d!22433))

(declare-fun b!86221 () Bool)

(declare-fun e!56193 () (_ BitVec 32))

(declare-fun call!8211 () (_ BitVec 32))

(assert (=> b!86221 (= e!56193 call!8211)))

(declare-fun b!86222 () Bool)

(declare-fun e!56194 () (_ BitVec 32))

(assert (=> b!86222 (= e!56194 e!56193)))

(declare-fun c!14059 () Bool)

(assert (=> b!86222 (= c!14059 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!86223 () Bool)

(assert (=> b!86223 (= e!56194 #b00000000000000000000000000000000)))

(declare-fun bm!8208 () Bool)

(assert (=> bm!8208 (= call!8211 (arrayCountValidKeys!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86224 () Bool)

(assert (=> b!86224 (= e!56193 (bvadd #b00000000000000000000000000000001 call!8211))))

(declare-fun d!22435 () Bool)

(declare-fun lt!40929 () (_ BitVec 32))

(assert (=> d!22435 (and (bvsge lt!40929 #b00000000000000000000000000000000) (bvsle lt!40929 (bvsub (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!22435 (= lt!40929 e!56194)))

(declare-fun c!14058 () Bool)

(assert (=> d!22435 (= c!14058 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22435 (and (bvsle #b00000000000000000000000000000000 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22435 (= (arrayCountValidKeys!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))) lt!40929)))

(assert (= (and d!22435 c!14058) b!86223))

(assert (= (and d!22435 (not c!14058)) b!86222))

(assert (= (and b!86222 c!14059) b!86224))

(assert (= (and b!86222 (not c!14059)) b!86221))

(assert (= (or b!86224 b!86221) bm!8208))

(declare-fun m!90983 () Bool)

(assert (=> b!86222 m!90983))

(assert (=> b!86222 m!90983))

(declare-fun m!90985 () Bool)

(assert (=> b!86222 m!90985))

(declare-fun m!90987 () Bool)

(assert (=> bm!8208 m!90987))

(assert (=> b!85799 d!22435))

(declare-fun d!22437 () Bool)

(declare-fun res!44353 () Bool)

(declare-fun e!56195 () Bool)

(assert (=> d!22437 (=> res!44353 e!56195)))

(assert (=> d!22437 (= res!44353 (and ((_ is Cons!1521) (toList!740 lt!40451)) (= (_1!1114 (h!2112 (toList!740 lt!40451))) (_1!1114 lt!40143))))))

(assert (=> d!22437 (= (containsKey!142 (toList!740 lt!40451) (_1!1114 lt!40143)) e!56195)))

(declare-fun b!86225 () Bool)

(declare-fun e!56196 () Bool)

(assert (=> b!86225 (= e!56195 e!56196)))

(declare-fun res!44354 () Bool)

(assert (=> b!86225 (=> (not res!44354) (not e!56196))))

(assert (=> b!86225 (= res!44354 (and (or (not ((_ is Cons!1521) (toList!740 lt!40451))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40451))) (_1!1114 lt!40143))) ((_ is Cons!1521) (toList!740 lt!40451)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40451))) (_1!1114 lt!40143))))))

(declare-fun b!86226 () Bool)

(assert (=> b!86226 (= e!56196 (containsKey!142 (t!5237 (toList!740 lt!40451)) (_1!1114 lt!40143)))))

(assert (= (and d!22437 (not res!44353)) b!86225))

(assert (= (and b!86225 res!44354) b!86226))

(declare-fun m!90989 () Bool)

(assert (=> b!86226 m!90989))

(assert (=> d!22227 d!22437))

(declare-fun d!22439 () Bool)

(assert (=> d!22439 (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))

(assert (=> d!22439 true))

(declare-fun _$16!108 () Unit!2510)

(assert (=> d!22439 (= (choose!512 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (defaultEntry!2337 newMap!16)) _$16!108)))

(declare-fun bs!3637 () Bool)

(assert (= bs!3637 d!22439))

(assert (=> bs!3637 m!90597))

(assert (=> bs!3637 m!89611))

(assert (=> bs!3637 m!90597))

(assert (=> bs!3637 m!89611))

(assert (=> bs!3637 m!90599))

(assert (=> d!22289 d!22439))

(assert (=> d!22289 d!22431))

(declare-fun d!22441 () Bool)

(declare-fun lt!40930 () Bool)

(assert (=> d!22441 (= lt!40930 (select (content!89 (toList!740 lt!40869)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56197 () Bool)

(assert (=> d!22441 (= lt!40930 e!56197)))

(declare-fun res!44355 () Bool)

(assert (=> d!22441 (=> (not res!44355) (not e!56197))))

(assert (=> d!22441 (= res!44355 ((_ is Cons!1521) (toList!740 lt!40869)))))

(assert (=> d!22441 (= (contains!753 (toList!740 lt!40869) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40930)))

(declare-fun b!86227 () Bool)

(declare-fun e!56198 () Bool)

(assert (=> b!86227 (= e!56197 e!56198)))

(declare-fun res!44356 () Bool)

(assert (=> b!86227 (=> res!44356 e!56198)))

(assert (=> b!86227 (= res!44356 (= (h!2112 (toList!740 lt!40869)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86228 () Bool)

(assert (=> b!86228 (= e!56198 (contains!753 (t!5237 (toList!740 lt!40869)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22441 res!44355) b!86227))

(assert (= (and b!86227 (not res!44356)) b!86228))

(declare-fun m!90991 () Bool)

(assert (=> d!22441 m!90991))

(declare-fun m!90993 () Bool)

(assert (=> d!22441 m!90993))

(declare-fun m!90995 () Bool)

(assert (=> b!86228 m!90995))

(assert (=> b!86094 d!22441))

(declare-fun d!22443 () Bool)

(declare-fun e!56200 () Bool)

(assert (=> d!22443 e!56200))

(declare-fun res!44357 () Bool)

(assert (=> d!22443 (=> res!44357 e!56200)))

(declare-fun lt!40931 () Bool)

(assert (=> d!22443 (= res!44357 (not lt!40931))))

(declare-fun lt!40934 () Bool)

(assert (=> d!22443 (= lt!40931 lt!40934)))

(declare-fun lt!40932 () Unit!2510)

(declare-fun e!56199 () Unit!2510)

(assert (=> d!22443 (= lt!40932 e!56199)))

(declare-fun c!14060 () Bool)

(assert (=> d!22443 (= c!14060 lt!40934)))

(assert (=> d!22443 (= lt!40934 (containsKey!142 (toList!740 lt!40640) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22443 (= (contains!752 lt!40640 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) lt!40931)))

(declare-fun b!86229 () Bool)

(declare-fun lt!40933 () Unit!2510)

(assert (=> b!86229 (= e!56199 lt!40933)))

(assert (=> b!86229 (= lt!40933 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40640) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> b!86229 (isDefined!92 (getValueByKey!138 (toList!740 lt!40640) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86230 () Bool)

(declare-fun Unit!2552 () Unit!2510)

(assert (=> b!86230 (= e!56199 Unit!2552)))

(declare-fun b!86231 () Bool)

(assert (=> b!86231 (= e!56200 (isDefined!92 (getValueByKey!138 (toList!740 lt!40640) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22443 c!14060) b!86229))

(assert (= (and d!22443 (not c!14060)) b!86230))

(assert (= (and d!22443 (not res!44357)) b!86231))

(declare-fun m!90997 () Bool)

(assert (=> d!22443 m!90997))

(declare-fun m!90999 () Bool)

(assert (=> b!86229 m!90999))

(assert (=> b!86229 m!90303))

(assert (=> b!86229 m!90303))

(declare-fun m!91001 () Bool)

(assert (=> b!86229 m!91001))

(assert (=> b!86231 m!90303))

(assert (=> b!86231 m!90303))

(assert (=> b!86231 m!91001))

(assert (=> d!22213 d!22443))

(declare-fun c!14061 () Bool)

(declare-fun d!22445 () Bool)

(assert (=> d!22445 (= c!14061 (and ((_ is Cons!1521) lt!40639) (= (_1!1114 (h!2112 lt!40639)) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun e!56201 () Option!144)

(assert (=> d!22445 (= (getValueByKey!138 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) e!56201)))

(declare-fun b!86235 () Bool)

(declare-fun e!56202 () Option!144)

(assert (=> b!86235 (= e!56202 None!142)))

(declare-fun b!86232 () Bool)

(assert (=> b!86232 (= e!56201 (Some!143 (_2!1114 (h!2112 lt!40639))))))

(declare-fun b!86234 () Bool)

(assert (=> b!86234 (= e!56202 (getValueByKey!138 (t!5237 lt!40639) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86233 () Bool)

(assert (=> b!86233 (= e!56201 e!56202)))

(declare-fun c!14062 () Bool)

(assert (=> b!86233 (= c!14062 (and ((_ is Cons!1521) lt!40639) (not (= (_1!1114 (h!2112 lt!40639)) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))))

(assert (= (and d!22445 c!14061) b!86232))

(assert (= (and d!22445 (not c!14061)) b!86233))

(assert (= (and b!86233 c!14062) b!86234))

(assert (= (and b!86233 (not c!14062)) b!86235))

(declare-fun m!91003 () Bool)

(assert (=> b!86234 m!91003))

(assert (=> d!22213 d!22445))

(declare-fun d!22447 () Bool)

(assert (=> d!22447 (= (getValueByKey!138 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (Some!143 (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun lt!40935 () Unit!2510)

(assert (=> d!22447 (= lt!40935 (choose!507 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56203 () Bool)

(assert (=> d!22447 e!56203))

(declare-fun res!44358 () Bool)

(assert (=> d!22447 (=> (not res!44358) (not e!56203))))

(assert (=> d!22447 (= res!44358 (isStrictlySorted!293 lt!40639))))

(assert (=> d!22447 (= (lemmaContainsTupThenGetReturnValue!58 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) lt!40935)))

(declare-fun b!86236 () Bool)

(declare-fun res!44359 () Bool)

(assert (=> b!86236 (=> (not res!44359) (not e!56203))))

(assert (=> b!86236 (= res!44359 (containsKey!142 lt!40639 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86237 () Bool)

(assert (=> b!86237 (= e!56203 (contains!753 lt!40639 (tuple2!2207 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22447 res!44358) b!86236))

(assert (= (and b!86236 res!44359) b!86237))

(assert (=> d!22447 m!90297))

(declare-fun m!91005 () Bool)

(assert (=> d!22447 m!91005))

(declare-fun m!91007 () Bool)

(assert (=> d!22447 m!91007))

(declare-fun m!91009 () Bool)

(assert (=> b!86236 m!91009))

(declare-fun m!91011 () Bool)

(assert (=> b!86237 m!91011))

(assert (=> d!22213 d!22447))

(declare-fun b!86238 () Bool)

(declare-fun e!56206 () List!1525)

(assert (=> b!86238 (= e!56206 (insertStrictlySorted!61 (t!5237 (toList!740 e!55675)) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun c!14065 () Bool)

(declare-fun b!86239 () Bool)

(declare-fun c!14066 () Bool)

(assert (=> b!86239 (= e!56206 (ite c!14065 (t!5237 (toList!740 e!55675)) (ite c!14066 (Cons!1521 (h!2112 (toList!740 e!55675)) (t!5237 (toList!740 e!55675))) Nil!1522)))))

(declare-fun b!86240 () Bool)

(declare-fun e!56207 () List!1525)

(declare-fun call!8213 () List!1525)

(assert (=> b!86240 (= e!56207 call!8213)))

(declare-fun b!86241 () Bool)

(declare-fun e!56204 () List!1525)

(declare-fun call!8212 () List!1525)

(assert (=> b!86241 (= e!56204 call!8212)))

(declare-fun b!86242 () Bool)

(assert (=> b!86242 (= c!14066 (and ((_ is Cons!1521) (toList!740 e!55675)) (bvsgt (_1!1114 (h!2112 (toList!740 e!55675))) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun e!56208 () List!1525)

(assert (=> b!86242 (= e!56204 e!56208)))

(declare-fun b!86243 () Bool)

(declare-fun res!44360 () Bool)

(declare-fun e!56205 () Bool)

(assert (=> b!86243 (=> (not res!44360) (not e!56205))))

(declare-fun lt!40936 () List!1525)

(assert (=> b!86243 (= res!44360 (containsKey!142 lt!40936 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86245 () Bool)

(declare-fun call!8214 () List!1525)

(assert (=> b!86245 (= e!56208 call!8214)))

(declare-fun b!86246 () Bool)

(assert (=> b!86246 (= e!56205 (contains!753 lt!40936 (tuple2!2207 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun c!14064 () Bool)

(declare-fun bm!8209 () Bool)

(assert (=> bm!8209 (= call!8213 ($colon$colon!71 e!56206 (ite c!14064 (h!2112 (toList!740 e!55675)) (tuple2!2207 (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))))

(declare-fun c!14063 () Bool)

(assert (=> bm!8209 (= c!14063 c!14064)))

(declare-fun bm!8210 () Bool)

(assert (=> bm!8210 (= call!8214 call!8212)))

(declare-fun b!86244 () Bool)

(assert (=> b!86244 (= e!56208 call!8214)))

(declare-fun d!22449 () Bool)

(assert (=> d!22449 e!56205))

(declare-fun res!44361 () Bool)

(assert (=> d!22449 (=> (not res!44361) (not e!56205))))

(assert (=> d!22449 (= res!44361 (isStrictlySorted!293 lt!40936))))

(assert (=> d!22449 (= lt!40936 e!56207)))

(assert (=> d!22449 (= c!14064 (and ((_ is Cons!1521) (toList!740 e!55675)) (bvslt (_1!1114 (h!2112 (toList!740 e!55675))) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (=> d!22449 (isStrictlySorted!293 (toList!740 e!55675))))

(assert (=> d!22449 (= (insertStrictlySorted!61 (toList!740 e!55675) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_2!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) lt!40936)))

(declare-fun b!86247 () Bool)

(assert (=> b!86247 (= e!56207 e!56204)))

(assert (=> b!86247 (= c!14065 (and ((_ is Cons!1521) (toList!740 e!55675)) (= (_1!1114 (h!2112 (toList!740 e!55675))) (_1!1114 (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun bm!8211 () Bool)

(assert (=> bm!8211 (= call!8212 call!8213)))

(assert (= (and d!22449 c!14064) b!86240))

(assert (= (and d!22449 (not c!14064)) b!86247))

(assert (= (and b!86247 c!14065) b!86241))

(assert (= (and b!86247 (not c!14065)) b!86242))

(assert (= (and b!86242 c!14066) b!86245))

(assert (= (and b!86242 (not c!14066)) b!86244))

(assert (= (or b!86245 b!86244) bm!8210))

(assert (= (or b!86241 bm!8210) bm!8211))

(assert (= (or b!86240 bm!8211) bm!8209))

(assert (= (and bm!8209 c!14063) b!86238))

(assert (= (and bm!8209 (not c!14063)) b!86239))

(assert (= (and d!22449 res!44361) b!86243))

(assert (= (and b!86243 res!44360) b!86246))

(declare-fun m!91013 () Bool)

(assert (=> d!22449 m!91013))

(declare-fun m!91015 () Bool)

(assert (=> d!22449 m!91015))

(declare-fun m!91017 () Bool)

(assert (=> b!86246 m!91017))

(declare-fun m!91019 () Bool)

(assert (=> b!86243 m!91019))

(declare-fun m!91021 () Bool)

(assert (=> b!86238 m!91021))

(declare-fun m!91023 () Bool)

(assert (=> bm!8209 m!91023))

(assert (=> d!22213 d!22449))

(declare-fun d!22451 () Bool)

(assert (=> d!22451 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3638 () Bool)

(assert (= bs!3638 d!22451))

(assert (=> bs!3638 m!90785))

(declare-fun m!91025 () Bool)

(assert (=> bs!3638 m!91025))

(assert (=> b!86097 d!22451))

(declare-fun d!22453 () Bool)

(declare-fun c!14067 () Bool)

(assert (=> d!22453 (= c!14067 (and ((_ is Cons!1521) (toList!740 lt!40471)) (= (_1!1114 (h!2112 (toList!740 lt!40471))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56209 () Option!144)

(assert (=> d!22453 (= (getValueByKey!138 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000) e!56209)))

(declare-fun b!86251 () Bool)

(declare-fun e!56210 () Option!144)

(assert (=> b!86251 (= e!56210 None!142)))

(declare-fun b!86248 () Bool)

(assert (=> b!86248 (= e!56209 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40471)))))))

(declare-fun b!86250 () Bool)

(assert (=> b!86250 (= e!56210 (getValueByKey!138 (t!5237 (toList!740 lt!40471)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86249 () Bool)

(assert (=> b!86249 (= e!56209 e!56210)))

(declare-fun c!14068 () Bool)

(assert (=> b!86249 (= c!14068 (and ((_ is Cons!1521) (toList!740 lt!40471)) (not (= (_1!1114 (h!2112 (toList!740 lt!40471))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22453 c!14067) b!86248))

(assert (= (and d!22453 (not c!14067)) b!86249))

(assert (= (and b!86249 c!14068) b!86250))

(assert (= (and b!86249 (not c!14068)) b!86251))

(declare-fun m!91027 () Bool)

(assert (=> b!86250 m!91027))

(assert (=> b!86097 d!22453))

(declare-fun lt!40937 () Bool)

(declare-fun d!22455 () Bool)

(assert (=> d!22455 (= lt!40937 (select (content!89 (toList!740 lt!40881)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun e!56211 () Bool)

(assert (=> d!22455 (= lt!40937 e!56211)))

(declare-fun res!44362 () Bool)

(assert (=> d!22455 (=> (not res!44362) (not e!56211))))

(assert (=> d!22455 (= res!44362 ((_ is Cons!1521) (toList!740 lt!40881)))))

(assert (=> d!22455 (= (contains!753 (toList!740 lt!40881) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!40937)))

(declare-fun b!86252 () Bool)

(declare-fun e!56212 () Bool)

(assert (=> b!86252 (= e!56211 e!56212)))

(declare-fun res!44363 () Bool)

(assert (=> b!86252 (=> res!44363 e!56212)))

(assert (=> b!86252 (= res!44363 (= (h!2112 (toList!740 lt!40881)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun b!86253 () Bool)

(assert (=> b!86253 (= e!56212 (contains!753 (t!5237 (toList!740 lt!40881)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22455 res!44362) b!86252))

(assert (= (and b!86252 (not res!44363)) b!86253))

(declare-fun m!91029 () Bool)

(assert (=> d!22455 m!91029))

(declare-fun m!91031 () Bool)

(assert (=> d!22455 m!91031))

(declare-fun m!91033 () Bool)

(assert (=> b!86253 m!91033))

(assert (=> b!86101 d!22455))

(declare-fun d!22457 () Bool)

(declare-fun lt!40938 () Bool)

(assert (=> d!22457 (= lt!40938 (select (content!89 lt!40483) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun e!56213 () Bool)

(assert (=> d!22457 (= lt!40938 e!56213)))

(declare-fun res!44364 () Bool)

(assert (=> d!22457 (=> (not res!44364) (not e!56213))))

(assert (=> d!22457 (= res!44364 ((_ is Cons!1521) lt!40483))))

(assert (=> d!22457 (= (contains!753 lt!40483 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) lt!40938)))

(declare-fun b!86254 () Bool)

(declare-fun e!56214 () Bool)

(assert (=> b!86254 (= e!56213 e!56214)))

(declare-fun res!44365 () Bool)

(assert (=> b!86254 (=> res!44365 e!56214)))

(assert (=> b!86254 (= res!44365 (= (h!2112 lt!40483) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun b!86255 () Bool)

(assert (=> b!86255 (= e!56214 (contains!753 (t!5237 lt!40483) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!22457 res!44364) b!86254))

(assert (= (and b!86254 (not res!44365)) b!86255))

(declare-fun m!91035 () Bool)

(assert (=> d!22457 m!91035))

(declare-fun m!91037 () Bool)

(assert (=> d!22457 m!91037))

(declare-fun m!91039 () Bool)

(assert (=> b!86255 m!91039))

(assert (=> b!86016 d!22457))

(assert (=> d!22221 d!22219))

(declare-fun d!22459 () Bool)

(assert (=> d!22459 (= (getValueByKey!138 lt!40434 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(assert (=> d!22459 true))

(declare-fun _$22!418 () Unit!2510)

(assert (=> d!22459 (= (choose!507 lt!40434 (_1!1114 lt!40140) (_2!1114 lt!40140)) _$22!418)))

(declare-fun bs!3639 () Bool)

(assert (= bs!3639 d!22459))

(assert (=> bs!3639 m!89723))

(assert (=> d!22221 d!22459))

(declare-fun d!22461 () Bool)

(declare-fun res!44366 () Bool)

(declare-fun e!56215 () Bool)

(assert (=> d!22461 (=> res!44366 e!56215)))

(assert (=> d!22461 (= res!44366 (or ((_ is Nil!1522) lt!40434) ((_ is Nil!1522) (t!5237 lt!40434))))))

(assert (=> d!22461 (= (isStrictlySorted!293 lt!40434) e!56215)))

(declare-fun b!86256 () Bool)

(declare-fun e!56216 () Bool)

(assert (=> b!86256 (= e!56215 e!56216)))

(declare-fun res!44367 () Bool)

(assert (=> b!86256 (=> (not res!44367) (not e!56216))))

(assert (=> b!86256 (= res!44367 (bvslt (_1!1114 (h!2112 lt!40434)) (_1!1114 (h!2112 (t!5237 lt!40434)))))))

(declare-fun b!86257 () Bool)

(assert (=> b!86257 (= e!56216 (isStrictlySorted!293 (t!5237 lt!40434)))))

(assert (= (and d!22461 (not res!44366)) b!86256))

(assert (= (and b!86256 res!44367) b!86257))

(declare-fun m!91041 () Bool)

(assert (=> b!86257 m!91041))

(assert (=> d!22221 d!22461))

(declare-fun d!22463 () Bool)

(assert (=> d!22463 (= (get!1204 (getValueByKey!138 (toList!740 lt!40404) lt!40416)) (v!2644 (getValueByKey!138 (toList!740 lt!40404) lt!40416)))))

(assert (=> d!22315 d!22463))

(declare-fun d!22465 () Bool)

(declare-fun c!14069 () Bool)

(assert (=> d!22465 (= c!14069 (and ((_ is Cons!1521) (toList!740 lt!40404)) (= (_1!1114 (h!2112 (toList!740 lt!40404))) lt!40416)))))

(declare-fun e!56217 () Option!144)

(assert (=> d!22465 (= (getValueByKey!138 (toList!740 lt!40404) lt!40416) e!56217)))

(declare-fun b!86261 () Bool)

(declare-fun e!56218 () Option!144)

(assert (=> b!86261 (= e!56218 None!142)))

(declare-fun b!86258 () Bool)

(assert (=> b!86258 (= e!56217 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40404)))))))

(declare-fun b!86260 () Bool)

(assert (=> b!86260 (= e!56218 (getValueByKey!138 (t!5237 (toList!740 lt!40404)) lt!40416))))

(declare-fun b!86259 () Bool)

(assert (=> b!86259 (= e!56217 e!56218)))

(declare-fun c!14070 () Bool)

(assert (=> b!86259 (= c!14070 (and ((_ is Cons!1521) (toList!740 lt!40404)) (not (= (_1!1114 (h!2112 (toList!740 lt!40404))) lt!40416))))))

(assert (= (and d!22465 c!14069) b!86258))

(assert (= (and d!22465 (not c!14069)) b!86259))

(assert (= (and b!86259 c!14070) b!86260))

(assert (= (and b!86259 (not c!14070)) b!86261))

(declare-fun m!91043 () Bool)

(assert (=> b!86260 m!91043))

(assert (=> d!22315 d!22465))

(declare-fun b!86262 () Bool)

(declare-fun e!56219 () (_ BitVec 32))

(declare-fun call!8215 () (_ BitVec 32))

(assert (=> b!86262 (= e!56219 call!8215)))

(declare-fun b!86263 () Bool)

(declare-fun e!56220 () (_ BitVec 32))

(assert (=> b!86263 (= e!56220 e!56219)))

(declare-fun c!14072 () Bool)

(assert (=> b!86263 (= c!14072 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun b!86264 () Bool)

(assert (=> b!86264 (= e!56220 #b00000000000000000000000000000000)))

(declare-fun bm!8212 () Bool)

(assert (=> bm!8212 (= call!8215 (arrayCountValidKeys!0 (_keys!4008 (_2!1113 lt!40354)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(declare-fun b!86265 () Bool)

(assert (=> b!86265 (= e!56219 (bvadd #b00000000000000000000000000000001 call!8215))))

(declare-fun d!22467 () Bool)

(declare-fun lt!40939 () (_ BitVec 32))

(assert (=> d!22467 (and (bvsge lt!40939 #b00000000000000000000000000000000) (bvsle lt!40939 (bvsub (size!2151 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(assert (=> d!22467 (= lt!40939 e!56220)))

(declare-fun c!14071 () Bool)

(assert (=> d!22467 (= c!14071 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(assert (=> d!22467 (and (bvsle #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2151 (_keys!4008 (_2!1113 lt!40354))) (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(assert (=> d!22467 (= (arrayCountValidKeys!0 (_keys!4008 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))) lt!40939)))

(assert (= (and d!22467 c!14071) b!86264))

(assert (= (and d!22467 (not c!14071)) b!86263))

(assert (= (and b!86263 c!14072) b!86265))

(assert (= (and b!86263 (not c!14072)) b!86262))

(assert (= (or b!86265 b!86262) bm!8212))

(assert (=> b!86263 m!90933))

(assert (=> b!86263 m!90933))

(assert (=> b!86263 m!90941))

(declare-fun m!91045 () Bool)

(assert (=> bm!8212 m!91045))

(assert (=> b!85893 d!22467))

(declare-fun d!22469 () Bool)

(declare-fun c!14073 () Bool)

(assert (=> d!22469 (= c!14073 (and ((_ is Cons!1521) (toList!740 lt!40889)) (= (_1!1114 (h!2112 (toList!740 lt!40889))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56221 () Option!144)

(assert (=> d!22469 (= (getValueByKey!138 (toList!740 lt!40889) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56221)))

(declare-fun b!86269 () Bool)

(declare-fun e!56222 () Option!144)

(assert (=> b!86269 (= e!56222 None!142)))

(declare-fun b!86266 () Bool)

(assert (=> b!86266 (= e!56221 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40889)))))))

(declare-fun b!86268 () Bool)

(assert (=> b!86268 (= e!56222 (getValueByKey!138 (t!5237 (toList!740 lt!40889)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86267 () Bool)

(assert (=> b!86267 (= e!56221 e!56222)))

(declare-fun c!14074 () Bool)

(assert (=> b!86267 (= c!14074 (and ((_ is Cons!1521) (toList!740 lt!40889)) (not (= (_1!1114 (h!2112 (toList!740 lt!40889))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22469 c!14073) b!86266))

(assert (= (and d!22469 (not c!14073)) b!86267))

(assert (= (and b!86267 c!14074) b!86268))

(assert (= (and b!86267 (not c!14074)) b!86269))

(declare-fun m!91047 () Bool)

(assert (=> b!86268 m!91047))

(assert (=> b!86104 d!22469))

(assert (=> b!85688 d!22385))

(declare-fun b!86270 () Bool)

(declare-fun e!56225 () Bool)

(declare-fun e!56224 () Bool)

(assert (=> b!86270 (= e!56225 e!56224)))

(declare-fun c!14075 () Bool)

(assert (=> b!86270 (= c!14075 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86271 () Bool)

(declare-fun call!8216 () Bool)

(assert (=> b!86271 (= e!56224 call!8216)))

(declare-fun bm!8213 () Bool)

(assert (=> bm!8213 (= call!8216 (arrayNoDuplicates!0 (_keys!4008 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14075 (Cons!1522 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!14003 (Cons!1522 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) Nil!1523) Nil!1523)) (ite c!14003 (Cons!1522 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) Nil!1523) Nil!1523))))))

(declare-fun d!22471 () Bool)

(declare-fun res!44368 () Bool)

(declare-fun e!56223 () Bool)

(assert (=> d!22471 (=> res!44368 e!56223)))

(assert (=> d!22471 (= res!44368 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22471 (= (arrayNoDuplicates!0 (_keys!4008 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14003 (Cons!1522 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) Nil!1523) Nil!1523)) e!56223)))

(declare-fun b!86272 () Bool)

(assert (=> b!86272 (= e!56223 e!56225)))

(declare-fun res!44370 () Bool)

(assert (=> b!86272 (=> (not res!44370) (not e!56225))))

(declare-fun e!56226 () Bool)

(assert (=> b!86272 (= res!44370 (not e!56226))))

(declare-fun res!44369 () Bool)

(assert (=> b!86272 (=> (not res!44369) (not e!56226))))

(assert (=> b!86272 (= res!44369 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86273 () Bool)

(assert (=> b!86273 (= e!56226 (contains!754 (ite c!14003 (Cons!1522 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) Nil!1523) Nil!1523) (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86274 () Bool)

(assert (=> b!86274 (= e!56224 call!8216)))

(assert (= (and d!22471 (not res!44368)) b!86272))

(assert (= (and b!86272 res!44369) b!86273))

(assert (= (and b!86272 res!44370) b!86270))

(assert (= (and b!86270 c!14075) b!86271))

(assert (= (and b!86270 (not c!14075)) b!86274))

(assert (= (or b!86271 b!86274) bm!8213))

(declare-fun m!91049 () Bool)

(assert (=> b!86270 m!91049))

(assert (=> b!86270 m!91049))

(declare-fun m!91051 () Bool)

(assert (=> b!86270 m!91051))

(assert (=> bm!8213 m!91049))

(declare-fun m!91053 () Bool)

(assert (=> bm!8213 m!91053))

(assert (=> b!86272 m!91049))

(assert (=> b!86272 m!91049))

(assert (=> b!86272 m!91051))

(assert (=> b!86273 m!91049))

(assert (=> b!86273 m!91049))

(declare-fun m!91055 () Bool)

(assert (=> b!86273 m!91055))

(assert (=> bm!8191 d!22471))

(declare-fun d!22473 () Bool)

(declare-fun c!14076 () Bool)

(assert (=> d!22473 (= c!14076 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40447))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40447)))) (_1!1114 lt!40140))))))

(declare-fun e!56227 () Option!144)

(assert (=> d!22473 (= (getValueByKey!138 (t!5237 (toList!740 lt!40447)) (_1!1114 lt!40140)) e!56227)))

(declare-fun b!86278 () Bool)

(declare-fun e!56228 () Option!144)

(assert (=> b!86278 (= e!56228 None!142)))

(declare-fun b!86275 () Bool)

(assert (=> b!86275 (= e!56227 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40447))))))))

(declare-fun b!86277 () Bool)

(assert (=> b!86277 (= e!56228 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40447))) (_1!1114 lt!40140)))))

(declare-fun b!86276 () Bool)

(assert (=> b!86276 (= e!56227 e!56228)))

(declare-fun c!14077 () Bool)

(assert (=> b!86276 (= c!14077 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40447))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40447)))) (_1!1114 lt!40140)))))))

(assert (= (and d!22473 c!14076) b!86275))

(assert (= (and d!22473 (not c!14076)) b!86276))

(assert (= (and b!86276 c!14077) b!86277))

(assert (= (and b!86276 (not c!14077)) b!86278))

(declare-fun m!91057 () Bool)

(assert (=> b!86277 m!91057))

(assert (=> b!85605 d!22473))

(declare-fun d!22475 () Bool)

(declare-fun res!44371 () Bool)

(declare-fun e!56229 () Bool)

(assert (=> d!22475 (=> res!44371 e!56229)))

(assert (=> d!22475 (= res!44371 (and ((_ is Cons!1521) (toList!740 lt!40415)) (= (_1!1114 (h!2112 (toList!740 lt!40415))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22475 (= (containsKey!142 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000) e!56229)))

(declare-fun b!86279 () Bool)

(declare-fun e!56230 () Bool)

(assert (=> b!86279 (= e!56229 e!56230)))

(declare-fun res!44372 () Bool)

(assert (=> b!86279 (=> (not res!44372) (not e!56230))))

(assert (=> b!86279 (= res!44372 (and (or (not ((_ is Cons!1521) (toList!740 lt!40415))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40415))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1521) (toList!740 lt!40415)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40415))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86280 () Bool)

(assert (=> b!86280 (= e!56230 (containsKey!142 (t!5237 (toList!740 lt!40415)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22475 (not res!44371)) b!86279))

(assert (= (and b!86279 res!44372) b!86280))

(declare-fun m!91059 () Bool)

(assert (=> b!86280 m!91059))

(assert (=> d!22237 d!22475))

(declare-fun d!22477 () Bool)

(assert (=> d!22477 (= (get!1204 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2644 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22285 d!22477))

(declare-fun d!22479 () Bool)

(declare-fun c!14078 () Bool)

(assert (=> d!22479 (= c!14078 (and ((_ is Cons!1521) (toList!740 lt!40415)) (= (_1!1114 (h!2112 (toList!740 lt!40415))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56231 () Option!144)

(assert (=> d!22479 (= (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000) e!56231)))

(declare-fun b!86284 () Bool)

(declare-fun e!56232 () Option!144)

(assert (=> b!86284 (= e!56232 None!142)))

(declare-fun b!86281 () Bool)

(assert (=> b!86281 (= e!56231 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40415)))))))

(declare-fun b!86283 () Bool)

(assert (=> b!86283 (= e!56232 (getValueByKey!138 (t!5237 (toList!740 lt!40415)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86282 () Bool)

(assert (=> b!86282 (= e!56231 e!56232)))

(declare-fun c!14079 () Bool)

(assert (=> b!86282 (= c!14079 (and ((_ is Cons!1521) (toList!740 lt!40415)) (not (= (_1!1114 (h!2112 (toList!740 lt!40415))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22479 c!14078) b!86281))

(assert (= (and d!22479 (not c!14078)) b!86282))

(assert (= (and b!86282 c!14079) b!86283))

(assert (= (and b!86282 (not c!14079)) b!86284))

(declare-fun m!91061 () Bool)

(assert (=> b!86283 m!91061))

(assert (=> d!22285 d!22479))

(assert (=> d!22299 d!22301))

(assert (=> d!22299 d!22303))

(declare-fun d!22481 () Bool)

(assert (=> d!22481 (isDefined!92 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22481 true))

(declare-fun _$12!335 () Unit!2510)

(assert (=> d!22481 (= (choose!514 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) _$12!335)))

(declare-fun bs!3640 () Bool)

(assert (= bs!3640 d!22481))

(assert (=> bs!3640 m!89403))

(assert (=> bs!3640 m!89599))

(assert (=> bs!3640 m!89599))

(assert (=> bs!3640 m!89601))

(assert (=> d!22299 d!22481))

(declare-fun d!22483 () Bool)

(declare-fun res!44373 () Bool)

(declare-fun e!56233 () Bool)

(assert (=> d!22483 (=> res!44373 e!56233)))

(assert (=> d!22483 (= res!44373 (or ((_ is Nil!1522) (toList!740 lt!40151)) ((_ is Nil!1522) (t!5237 (toList!740 lt!40151)))))))

(assert (=> d!22483 (= (isStrictlySorted!293 (toList!740 lt!40151)) e!56233)))

(declare-fun b!86285 () Bool)

(declare-fun e!56234 () Bool)

(assert (=> b!86285 (= e!56233 e!56234)))

(declare-fun res!44374 () Bool)

(assert (=> b!86285 (=> (not res!44374) (not e!56234))))

(assert (=> b!86285 (= res!44374 (bvslt (_1!1114 (h!2112 (toList!740 lt!40151))) (_1!1114 (h!2112 (t!5237 (toList!740 lt!40151))))))))

(declare-fun b!86286 () Bool)

(assert (=> b!86286 (= e!56234 (isStrictlySorted!293 (t!5237 (toList!740 lt!40151))))))

(assert (= (and d!22483 (not res!44373)) b!86285))

(assert (= (and b!86285 res!44374) b!86286))

(declare-fun m!91063 () Bool)

(assert (=> b!86286 m!91063))

(assert (=> d!22299 d!22483))

(declare-fun d!22485 () Bool)

(declare-fun e!56236 () Bool)

(assert (=> d!22485 e!56236))

(declare-fun res!44375 () Bool)

(assert (=> d!22485 (=> res!44375 e!56236)))

(declare-fun lt!40940 () Bool)

(assert (=> d!22485 (= res!44375 (not lt!40940))))

(declare-fun lt!40943 () Bool)

(assert (=> d!22485 (= lt!40940 lt!40943)))

(declare-fun lt!40941 () Unit!2510)

(declare-fun e!56235 () Unit!2510)

(assert (=> d!22485 (= lt!40941 e!56235)))

(declare-fun c!14080 () Bool)

(assert (=> d!22485 (= c!14080 lt!40943)))

(assert (=> d!22485 (= lt!40943 (containsKey!142 (toList!740 lt!40688) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22485 (= (contains!752 lt!40688 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40940)))

(declare-fun b!86287 () Bool)

(declare-fun lt!40942 () Unit!2510)

(assert (=> b!86287 (= e!56235 lt!40942)))

(assert (=> b!86287 (= lt!40942 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40688) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86287 (isDefined!92 (getValueByKey!138 (toList!740 lt!40688) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86288 () Bool)

(declare-fun Unit!2553 () Unit!2510)

(assert (=> b!86288 (= e!56235 Unit!2553)))

(declare-fun b!86289 () Bool)

(assert (=> b!86289 (= e!56236 (isDefined!92 (getValueByKey!138 (toList!740 lt!40688) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22485 c!14080) b!86287))

(assert (= (and d!22485 (not c!14080)) b!86288))

(assert (= (and d!22485 (not res!44375)) b!86289))

(declare-fun m!91065 () Bool)

(assert (=> d!22485 m!91065))

(declare-fun m!91067 () Bool)

(assert (=> b!86287 m!91067))

(declare-fun m!91069 () Bool)

(assert (=> b!86287 m!91069))

(assert (=> b!86287 m!91069))

(declare-fun m!91071 () Bool)

(assert (=> b!86287 m!91071))

(assert (=> b!86289 m!91069))

(assert (=> b!86289 m!91069))

(assert (=> b!86289 m!91071))

(assert (=> bm!8176 d!22485))

(assert (=> d!22305 d!22243))

(declare-fun b!86306 () Bool)

(declare-fun e!56246 () Bool)

(declare-fun call!8222 () Bool)

(assert (=> b!86306 (= e!56246 (not call!8222))))

(declare-fun b!86307 () Bool)

(declare-fun res!44386 () Bool)

(declare-fun e!56248 () Bool)

(assert (=> b!86307 (=> (not res!44386) (not e!56248))))

(declare-fun lt!40946 () SeekEntryResult!246)

(assert (=> b!86307 (= res!44386 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!40946)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86308 () Bool)

(declare-fun res!44384 () Bool)

(assert (=> b!86308 (=> (not res!44384) (not e!56248))))

(declare-fun call!8221 () Bool)

(assert (=> b!86308 (= res!44384 call!8221)))

(declare-fun e!56247 () Bool)

(assert (=> b!86308 (= e!56247 e!56248)))

(declare-fun b!86309 () Bool)

(declare-fun e!56245 () Bool)

(assert (=> b!86309 (= e!56245 e!56246)))

(declare-fun res!44385 () Bool)

(assert (=> b!86309 (= res!44385 call!8221)))

(assert (=> b!86309 (=> (not res!44385) (not e!56246))))

(declare-fun b!86311 () Bool)

(assert (=> b!86311 (= e!56245 e!56247)))

(declare-fun c!14086 () Bool)

(assert (=> b!86311 (= c!14086 ((_ is MissingVacant!246) lt!40946))))

(declare-fun b!86312 () Bool)

(assert (=> b!86312 (= e!56248 (not call!8222))))

(declare-fun b!86313 () Bool)

(assert (=> b!86313 (= e!56247 ((_ is Undefined!246) lt!40946))))

(declare-fun c!14085 () Bool)

(declare-fun bm!8218 () Bool)

(assert (=> bm!8218 (= call!8221 (inRange!0 (ite c!14085 (index!3121 lt!40946) (index!3124 lt!40946)) (mask!6364 newMap!16)))))

(declare-fun bm!8219 () Bool)

(assert (=> bm!8219 (= call!8222 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!22487 () Bool)

(assert (=> d!22487 e!56245))

(assert (=> d!22487 (= c!14085 ((_ is MissingZero!246) lt!40946))))

(assert (=> d!22487 (= lt!40946 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (=> d!22487 true))

(declare-fun _$34!839 () Unit!2510)

(assert (=> d!22487 (= (choose!515 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) _$34!839)))

(declare-fun b!86310 () Bool)

(declare-fun res!44387 () Bool)

(assert (=> b!86310 (= res!44387 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!40946)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86310 (=> (not res!44387) (not e!56246))))

(assert (= (and d!22487 c!14085) b!86309))

(assert (= (and d!22487 (not c!14085)) b!86311))

(assert (= (and b!86309 res!44385) b!86310))

(assert (= (and b!86310 res!44387) b!86306))

(assert (= (and b!86311 c!14086) b!86308))

(assert (= (and b!86311 (not c!14086)) b!86313))

(assert (= (and b!86308 res!44384) b!86307))

(assert (= (and b!86307 res!44386) b!86312))

(assert (= (or b!86309 b!86308) bm!8218))

(assert (= (or b!86306 b!86312) bm!8219))

(assert (=> d!22487 m!89403))

(assert (=> d!22487 m!89629))

(declare-fun m!91073 () Bool)

(assert (=> b!86310 m!91073))

(assert (=> bm!8219 m!89403))

(assert (=> bm!8219 m!89647))

(declare-fun m!91075 () Bool)

(assert (=> bm!8218 m!91075))

(declare-fun m!91077 () Bool)

(assert (=> b!86307 m!91077))

(assert (=> d!22305 d!22487))

(assert (=> d!22305 d!22431))

(declare-fun d!22489 () Bool)

(declare-fun e!56250 () Bool)

(assert (=> d!22489 e!56250))

(declare-fun res!44388 () Bool)

(assert (=> d!22489 (=> res!44388 e!56250)))

(declare-fun lt!40947 () Bool)

(assert (=> d!22489 (= res!44388 (not lt!40947))))

(declare-fun lt!40950 () Bool)

(assert (=> d!22489 (= lt!40947 lt!40950)))

(declare-fun lt!40948 () Unit!2510)

(declare-fun e!56249 () Unit!2510)

(assert (=> d!22489 (= lt!40948 e!56249)))

(declare-fun c!14087 () Bool)

(assert (=> d!22489 (= c!14087 lt!40950)))

(assert (=> d!22489 (= lt!40950 (containsKey!142 (toList!740 lt!40852) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22489 (= (contains!752 lt!40852 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40947)))

(declare-fun b!86314 () Bool)

(declare-fun lt!40949 () Unit!2510)

(assert (=> b!86314 (= e!56249 lt!40949)))

(assert (=> b!86314 (= lt!40949 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40852) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86314 (isDefined!92 (getValueByKey!138 (toList!740 lt!40852) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86315 () Bool)

(declare-fun Unit!2554 () Unit!2510)

(assert (=> b!86315 (= e!56249 Unit!2554)))

(declare-fun b!86316 () Bool)

(assert (=> b!86316 (= e!56250 (isDefined!92 (getValueByKey!138 (toList!740 lt!40852) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22489 c!14087) b!86314))

(assert (= (and d!22489 (not c!14087)) b!86315))

(assert (= (and d!22489 (not res!44388)) b!86316))

(declare-fun m!91079 () Bool)

(assert (=> d!22489 m!91079))

(declare-fun m!91081 () Bool)

(assert (=> b!86314 m!91081))

(assert (=> b!86314 m!90719))

(assert (=> b!86314 m!90719))

(declare-fun m!91083 () Bool)

(assert (=> b!86314 m!91083))

(assert (=> b!86316 m!90719))

(assert (=> b!86316 m!90719))

(assert (=> b!86316 m!91083))

(assert (=> d!22333 d!22489))

(declare-fun d!22491 () Bool)

(declare-fun c!14088 () Bool)

(assert (=> d!22491 (= c!14088 (and ((_ is Cons!1521) lt!40851) (= (_1!1114 (h!2112 lt!40851)) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56251 () Option!144)

(assert (=> d!22491 (= (getValueByKey!138 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56251)))

(declare-fun b!86320 () Bool)

(declare-fun e!56252 () Option!144)

(assert (=> b!86320 (= e!56252 None!142)))

(declare-fun b!86317 () Bool)

(assert (=> b!86317 (= e!56251 (Some!143 (_2!1114 (h!2112 lt!40851))))))

(declare-fun b!86319 () Bool)

(assert (=> b!86319 (= e!56252 (getValueByKey!138 (t!5237 lt!40851) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86318 () Bool)

(assert (=> b!86318 (= e!56251 e!56252)))

(declare-fun c!14089 () Bool)

(assert (=> b!86318 (= c!14089 (and ((_ is Cons!1521) lt!40851) (not (= (_1!1114 (h!2112 lt!40851)) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22491 c!14088) b!86317))

(assert (= (and d!22491 (not c!14088)) b!86318))

(assert (= (and b!86318 c!14089) b!86319))

(assert (= (and b!86318 (not c!14089)) b!86320))

(declare-fun m!91085 () Bool)

(assert (=> b!86319 m!91085))

(assert (=> d!22333 d!22491))

(declare-fun d!22493 () Bool)

(assert (=> d!22493 (= (getValueByKey!138 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!40951 () Unit!2510)

(assert (=> d!22493 (= lt!40951 (choose!507 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56253 () Bool)

(assert (=> d!22493 e!56253))

(declare-fun res!44389 () Bool)

(assert (=> d!22493 (=> (not res!44389) (not e!56253))))

(assert (=> d!22493 (= res!44389 (isStrictlySorted!293 lt!40851))))

(assert (=> d!22493 (= (lemmaContainsTupThenGetReturnValue!58 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40951)))

(declare-fun b!86321 () Bool)

(declare-fun res!44390 () Bool)

(assert (=> b!86321 (=> (not res!44390) (not e!56253))))

(assert (=> b!86321 (= res!44390 (containsKey!142 lt!40851 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86322 () Bool)

(assert (=> b!86322 (= e!56253 (contains!753 lt!40851 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22493 res!44389) b!86321))

(assert (= (and b!86321 res!44390) b!86322))

(assert (=> d!22493 m!90713))

(declare-fun m!91087 () Bool)

(assert (=> d!22493 m!91087))

(declare-fun m!91089 () Bool)

(assert (=> d!22493 m!91089))

(declare-fun m!91091 () Bool)

(assert (=> b!86321 m!91091))

(declare-fun m!91093 () Bool)

(assert (=> b!86322 m!91093))

(assert (=> d!22333 d!22493))

(declare-fun b!86323 () Bool)

(declare-fun e!56256 () List!1525)

(assert (=> b!86323 (= e!56256 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40403)) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun c!14093 () Bool)

(declare-fun c!14092 () Bool)

(declare-fun b!86324 () Bool)

(assert (=> b!86324 (= e!56256 (ite c!14092 (t!5237 (toList!740 lt!40403)) (ite c!14093 (Cons!1521 (h!2112 (toList!740 lt!40403)) (t!5237 (toList!740 lt!40403))) Nil!1522)))))

(declare-fun b!86325 () Bool)

(declare-fun e!56257 () List!1525)

(declare-fun call!8224 () List!1525)

(assert (=> b!86325 (= e!56257 call!8224)))

(declare-fun b!86326 () Bool)

(declare-fun e!56254 () List!1525)

(declare-fun call!8223 () List!1525)

(assert (=> b!86326 (= e!56254 call!8223)))

(declare-fun b!86327 () Bool)

(assert (=> b!86327 (= c!14093 (and ((_ is Cons!1521) (toList!740 lt!40403)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40403))) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56258 () List!1525)

(assert (=> b!86327 (= e!56254 e!56258)))

(declare-fun b!86328 () Bool)

(declare-fun res!44391 () Bool)

(declare-fun e!56255 () Bool)

(assert (=> b!86328 (=> (not res!44391) (not e!56255))))

(declare-fun lt!40952 () List!1525)

(assert (=> b!86328 (= res!44391 (containsKey!142 lt!40952 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86330 () Bool)

(declare-fun call!8225 () List!1525)

(assert (=> b!86330 (= e!56258 call!8225)))

(declare-fun b!86331 () Bool)

(assert (=> b!86331 (= e!56255 (contains!753 lt!40952 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun c!14091 () Bool)

(declare-fun bm!8220 () Bool)

(assert (=> bm!8220 (= call!8224 ($colon$colon!71 e!56256 (ite c!14091 (h!2112 (toList!740 lt!40403)) (tuple2!2207 (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14090 () Bool)

(assert (=> bm!8220 (= c!14090 c!14091)))

(declare-fun bm!8221 () Bool)

(assert (=> bm!8221 (= call!8225 call!8223)))

(declare-fun b!86329 () Bool)

(assert (=> b!86329 (= e!56258 call!8225)))

(declare-fun d!22495 () Bool)

(assert (=> d!22495 e!56255))

(declare-fun res!44392 () Bool)

(assert (=> d!22495 (=> (not res!44392) (not e!56255))))

(assert (=> d!22495 (= res!44392 (isStrictlySorted!293 lt!40952))))

(assert (=> d!22495 (= lt!40952 e!56257)))

(assert (=> d!22495 (= c!14091 (and ((_ is Cons!1521) (toList!740 lt!40403)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40403))) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22495 (isStrictlySorted!293 (toList!740 lt!40403))))

(assert (=> d!22495 (= (insertStrictlySorted!61 (toList!740 lt!40403) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40952)))

(declare-fun b!86332 () Bool)

(assert (=> b!86332 (= e!56257 e!56254)))

(assert (=> b!86332 (= c!14092 (and ((_ is Cons!1521) (toList!740 lt!40403)) (= (_1!1114 (h!2112 (toList!740 lt!40403))) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8222 () Bool)

(assert (=> bm!8222 (= call!8223 call!8224)))

(assert (= (and d!22495 c!14091) b!86325))

(assert (= (and d!22495 (not c!14091)) b!86332))

(assert (= (and b!86332 c!14092) b!86326))

(assert (= (and b!86332 (not c!14092)) b!86327))

(assert (= (and b!86327 c!14093) b!86330))

(assert (= (and b!86327 (not c!14093)) b!86329))

(assert (= (or b!86330 b!86329) bm!8221))

(assert (= (or b!86326 bm!8221) bm!8222))

(assert (= (or b!86325 bm!8222) bm!8220))

(assert (= (and bm!8220 c!14090) b!86323))

(assert (= (and bm!8220 (not c!14090)) b!86324))

(assert (= (and d!22495 res!44392) b!86328))

(assert (= (and b!86328 res!44391) b!86331))

(declare-fun m!91095 () Bool)

(assert (=> d!22495 m!91095))

(declare-fun m!91097 () Bool)

(assert (=> d!22495 m!91097))

(declare-fun m!91099 () Bool)

(assert (=> b!86331 m!91099))

(declare-fun m!91101 () Bool)

(assert (=> b!86328 m!91101))

(declare-fun m!91103 () Bool)

(assert (=> b!86323 m!91103))

(declare-fun m!91105 () Bool)

(assert (=> bm!8220 m!91105))

(assert (=> d!22333 d!22495))

(declare-fun d!22497 () Bool)

(declare-fun e!56260 () Bool)

(assert (=> d!22497 e!56260))

(declare-fun res!44393 () Bool)

(assert (=> d!22497 (=> res!44393 e!56260)))

(declare-fun lt!40953 () Bool)

(assert (=> d!22497 (= res!44393 (not lt!40953))))

(declare-fun lt!40956 () Bool)

(assert (=> d!22497 (= lt!40953 lt!40956)))

(declare-fun lt!40954 () Unit!2510)

(declare-fun e!56259 () Unit!2510)

(assert (=> d!22497 (= lt!40954 e!56259)))

(declare-fun c!14094 () Bool)

(assert (=> d!22497 (= c!14094 lt!40956)))

(assert (=> d!22497 (= lt!40956 (containsKey!142 (toList!740 lt!40881) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22497 (= (contains!752 lt!40881 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!40953)))

(declare-fun b!86333 () Bool)

(declare-fun lt!40955 () Unit!2510)

(assert (=> b!86333 (= e!56259 lt!40955)))

(assert (=> b!86333 (= lt!40955 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40881) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> b!86333 (isDefined!92 (getValueByKey!138 (toList!740 lt!40881) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86334 () Bool)

(declare-fun Unit!2555 () Unit!2510)

(assert (=> b!86334 (= e!56259 Unit!2555)))

(declare-fun b!86335 () Bool)

(assert (=> b!86335 (= e!56260 (isDefined!92 (getValueByKey!138 (toList!740 lt!40881) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22497 c!14094) b!86333))

(assert (= (and d!22497 (not c!14094)) b!86334))

(assert (= (and d!22497 (not res!44393)) b!86335))

(declare-fun m!91107 () Bool)

(assert (=> d!22497 m!91107))

(declare-fun m!91109 () Bool)

(assert (=> b!86333 m!91109))

(assert (=> b!86333 m!90809))

(assert (=> b!86333 m!90809))

(declare-fun m!91111 () Bool)

(assert (=> b!86333 m!91111))

(assert (=> b!86335 m!90809))

(assert (=> b!86335 m!90809))

(assert (=> b!86335 m!91111))

(assert (=> d!22353 d!22497))

(declare-fun c!14095 () Bool)

(declare-fun d!22499 () Bool)

(assert (=> d!22499 (= c!14095 (and ((_ is Cons!1521) lt!40880) (= (_1!1114 (h!2112 lt!40880)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56261 () Option!144)

(assert (=> d!22499 (= (getValueByKey!138 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56261)))

(declare-fun b!86339 () Bool)

(declare-fun e!56262 () Option!144)

(assert (=> b!86339 (= e!56262 None!142)))

(declare-fun b!86336 () Bool)

(assert (=> b!86336 (= e!56261 (Some!143 (_2!1114 (h!2112 lt!40880))))))

(declare-fun b!86338 () Bool)

(assert (=> b!86338 (= e!56262 (getValueByKey!138 (t!5237 lt!40880) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86337 () Bool)

(assert (=> b!86337 (= e!56261 e!56262)))

(declare-fun c!14096 () Bool)

(assert (=> b!86337 (= c!14096 (and ((_ is Cons!1521) lt!40880) (not (= (_1!1114 (h!2112 lt!40880)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22499 c!14095) b!86336))

(assert (= (and d!22499 (not c!14095)) b!86337))

(assert (= (and b!86337 c!14096) b!86338))

(assert (= (and b!86337 (not c!14096)) b!86339))

(declare-fun m!91113 () Bool)

(assert (=> b!86338 m!91113))

(assert (=> d!22353 d!22499))

(declare-fun d!22501 () Bool)

(assert (=> d!22501 (= (getValueByKey!138 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!40957 () Unit!2510)

(assert (=> d!22501 (= lt!40957 (choose!507 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56263 () Bool)

(assert (=> d!22501 e!56263))

(declare-fun res!44394 () Bool)

(assert (=> d!22501 (=> (not res!44394) (not e!56263))))

(assert (=> d!22501 (= res!44394 (isStrictlySorted!293 lt!40880))))

(assert (=> d!22501 (= (lemmaContainsTupThenGetReturnValue!58 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!40957)))

(declare-fun b!86340 () Bool)

(declare-fun res!44395 () Bool)

(assert (=> b!86340 (=> (not res!44395) (not e!56263))))

(assert (=> b!86340 (= res!44395 (containsKey!142 lt!40880 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86341 () Bool)

(assert (=> b!86341 (= e!56263 (contains!753 lt!40880 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22501 res!44394) b!86340))

(assert (= (and b!86340 res!44395) b!86341))

(assert (=> d!22501 m!90803))

(declare-fun m!91115 () Bool)

(assert (=> d!22501 m!91115))

(declare-fun m!91117 () Bool)

(assert (=> d!22501 m!91117))

(declare-fun m!91119 () Bool)

(assert (=> b!86340 m!91119))

(declare-fun m!91121 () Bool)

(assert (=> b!86341 m!91121))

(assert (=> d!22353 d!22501))

(declare-fun b!86342 () Bool)

(declare-fun e!56266 () List!1525)

(assert (=> b!86342 (= e!56266 (insertStrictlySorted!61 (t!5237 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86343 () Bool)

(declare-fun c!14099 () Bool)

(declare-fun c!14100 () Bool)

(assert (=> b!86343 (= e!56266 (ite c!14099 (t!5237 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (ite c!14100 (Cons!1521 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (t!5237 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) Nil!1522)))))

(declare-fun b!86344 () Bool)

(declare-fun e!56267 () List!1525)

(declare-fun call!8227 () List!1525)

(assert (=> b!86344 (= e!56267 call!8227)))

(declare-fun b!86345 () Bool)

(declare-fun e!56264 () List!1525)

(declare-fun call!8226 () List!1525)

(assert (=> b!86345 (= e!56264 call!8226)))

(declare-fun b!86346 () Bool)

(assert (=> b!86346 (= c!14100 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (bvsgt (_1!1114 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56268 () List!1525)

(assert (=> b!86346 (= e!56264 e!56268)))

(declare-fun b!86347 () Bool)

(declare-fun res!44396 () Bool)

(declare-fun e!56265 () Bool)

(assert (=> b!86347 (=> (not res!44396) (not e!56265))))

(declare-fun lt!40958 () List!1525)

(assert (=> b!86347 (= res!44396 (containsKey!142 lt!40958 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86349 () Bool)

(declare-fun call!8228 () List!1525)

(assert (=> b!86349 (= e!56268 call!8228)))

(declare-fun b!86350 () Bool)

(assert (=> b!86350 (= e!56265 (contains!753 lt!40958 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8223 () Bool)

(declare-fun c!14098 () Bool)

(assert (=> bm!8223 (= call!8227 ($colon$colon!71 e!56266 (ite c!14098 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun c!14097 () Bool)

(assert (=> bm!8223 (= c!14097 c!14098)))

(declare-fun bm!8224 () Bool)

(assert (=> bm!8224 (= call!8228 call!8226)))

(declare-fun b!86348 () Bool)

(assert (=> b!86348 (= e!56268 call!8228)))

(declare-fun d!22503 () Bool)

(assert (=> d!22503 e!56265))

(declare-fun res!44397 () Bool)

(assert (=> d!22503 (=> (not res!44397) (not e!56265))))

(assert (=> d!22503 (= res!44397 (isStrictlySorted!293 lt!40958))))

(assert (=> d!22503 (= lt!40958 e!56267)))

(assert (=> d!22503 (= c!14098 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22503 (isStrictlySorted!293 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22503 (= (insertStrictlySorted!61 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!40958)))

(declare-fun b!86351 () Bool)

(assert (=> b!86351 (= e!56267 e!56264)))

(assert (=> b!86351 (= c!14099 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8225 () Bool)

(assert (=> bm!8225 (= call!8226 call!8227)))

(assert (= (and d!22503 c!14098) b!86344))

(assert (= (and d!22503 (not c!14098)) b!86351))

(assert (= (and b!86351 c!14099) b!86345))

(assert (= (and b!86351 (not c!14099)) b!86346))

(assert (= (and b!86346 c!14100) b!86349))

(assert (= (and b!86346 (not c!14100)) b!86348))

(assert (= (or b!86349 b!86348) bm!8224))

(assert (= (or b!86345 bm!8224) bm!8225))

(assert (= (or b!86344 bm!8225) bm!8223))

(assert (= (and bm!8223 c!14097) b!86342))

(assert (= (and bm!8223 (not c!14097)) b!86343))

(assert (= (and d!22503 res!44397) b!86347))

(assert (= (and b!86347 res!44396) b!86350))

(declare-fun m!91123 () Bool)

(assert (=> d!22503 m!91123))

(declare-fun m!91125 () Bool)

(assert (=> d!22503 m!91125))

(declare-fun m!91127 () Bool)

(assert (=> b!86350 m!91127))

(declare-fun m!91129 () Bool)

(assert (=> b!86347 m!91129))

(declare-fun m!91131 () Bool)

(assert (=> b!86342 m!91131))

(declare-fun m!91133 () Bool)

(assert (=> bm!8223 m!91133))

(assert (=> d!22353 d!22503))

(declare-fun d!22505 () Bool)

(declare-fun c!14101 () Bool)

(assert (=> d!22505 (= c!14101 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40451))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40451)))) (_1!1114 lt!40143))))))

(declare-fun e!56269 () Option!144)

(assert (=> d!22505 (= (getValueByKey!138 (t!5237 (toList!740 lt!40451)) (_1!1114 lt!40143)) e!56269)))

(declare-fun b!86355 () Bool)

(declare-fun e!56270 () Option!144)

(assert (=> b!86355 (= e!56270 None!142)))

(declare-fun b!86352 () Bool)

(assert (=> b!86352 (= e!56269 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40451))))))))

(declare-fun b!86354 () Bool)

(assert (=> b!86354 (= e!56270 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40451))) (_1!1114 lt!40143)))))

(declare-fun b!86353 () Bool)

(assert (=> b!86353 (= e!56269 e!56270)))

(declare-fun c!14102 () Bool)

(assert (=> b!86353 (= c!14102 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40451))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40451)))) (_1!1114 lt!40143)))))))

(assert (= (and d!22505 c!14101) b!86352))

(assert (= (and d!22505 (not c!14101)) b!86353))

(assert (= (and b!86353 c!14102) b!86354))

(assert (= (and b!86353 (not c!14102)) b!86355))

(declare-fun m!91135 () Bool)

(assert (=> b!86354 m!91135))

(assert (=> b!85709 d!22505))

(declare-fun d!22507 () Bool)

(assert (=> d!22507 (= (isEmpty!339 lt!40518) (isEmpty!340 (toList!740 lt!40518)))))

(declare-fun bs!3641 () Bool)

(assert (= bs!3641 d!22507))

(declare-fun m!91137 () Bool)

(assert (=> bs!3641 m!91137))

(assert (=> b!85643 d!22507))

(declare-fun d!22509 () Bool)

(declare-fun c!14103 () Bool)

(assert (=> d!22509 (= c!14103 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40435))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40435)))) (_1!1114 lt!40140))))))

(declare-fun e!56271 () Option!144)

(assert (=> d!22509 (= (getValueByKey!138 (t!5237 (toList!740 lt!40435)) (_1!1114 lt!40140)) e!56271)))

(declare-fun b!86359 () Bool)

(declare-fun e!56272 () Option!144)

(assert (=> b!86359 (= e!56272 None!142)))

(declare-fun b!86356 () Bool)

(assert (=> b!86356 (= e!56271 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40435))))))))

(declare-fun b!86358 () Bool)

(assert (=> b!86358 (= e!56272 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40435))) (_1!1114 lt!40140)))))

(declare-fun b!86357 () Bool)

(assert (=> b!86357 (= e!56271 e!56272)))

(declare-fun c!14104 () Bool)

(assert (=> b!86357 (= c!14104 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40435))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40435)))) (_1!1114 lt!40140)))))))

(assert (= (and d!22509 c!14103) b!86356))

(assert (= (and d!22509 (not c!14103)) b!86357))

(assert (= (and b!86357 c!14104) b!86358))

(assert (= (and b!86357 (not c!14104)) b!86359))

(declare-fun m!91139 () Bool)

(assert (=> b!86358 m!91139))

(assert (=> b!85918 d!22509))

(declare-fun d!22511 () Bool)

(assert (=> d!22511 (= (apply!82 (+!108 lt!40546 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))) lt!40559) (apply!82 lt!40546 lt!40559))))

(declare-fun lt!40959 () Unit!2510)

(assert (=> d!22511 (= lt!40959 (choose!517 lt!40546 lt!40557 (zeroValue!2229 newMap!16) lt!40559))))

(declare-fun e!56273 () Bool)

(assert (=> d!22511 e!56273))

(declare-fun res!44398 () Bool)

(assert (=> d!22511 (=> (not res!44398) (not e!56273))))

(assert (=> d!22511 (= res!44398 (contains!752 lt!40546 lt!40559))))

(assert (=> d!22511 (= (addApplyDifferent!58 lt!40546 lt!40557 (zeroValue!2229 newMap!16) lt!40559) lt!40959)))

(declare-fun b!86360 () Bool)

(assert (=> b!86360 (= e!56273 (not (= lt!40559 lt!40557)))))

(assert (= (and d!22511 res!44398) b!86360))

(declare-fun m!91141 () Bool)

(assert (=> d!22511 m!91141))

(assert (=> d!22511 m!90025))

(assert (=> d!22511 m!90027))

(assert (=> d!22511 m!90047))

(declare-fun m!91143 () Bool)

(assert (=> d!22511 m!91143))

(assert (=> d!22511 m!90025))

(assert (=> b!85675 d!22511))

(declare-fun d!22513 () Bool)

(assert (=> d!22513 (= (apply!82 lt!40544 lt!40556) (get!1204 (getValueByKey!138 (toList!740 lt!40544) lt!40556)))))

(declare-fun bs!3642 () Bool)

(assert (= bs!3642 d!22513))

(declare-fun m!91145 () Bool)

(assert (=> bs!3642 m!91145))

(assert (=> bs!3642 m!91145))

(declare-fun m!91147 () Bool)

(assert (=> bs!3642 m!91147))

(assert (=> b!85675 d!22513))

(declare-fun d!22515 () Bool)

(assert (=> d!22515 (= (apply!82 (+!108 lt!40546 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))) lt!40559) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40546 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))) lt!40559)))))

(declare-fun bs!3643 () Bool)

(assert (= bs!3643 d!22515))

(declare-fun m!91149 () Bool)

(assert (=> bs!3643 m!91149))

(assert (=> bs!3643 m!91149))

(declare-fun m!91151 () Bool)

(assert (=> bs!3643 m!91151))

(assert (=> b!85675 d!22515))

(declare-fun d!22517 () Bool)

(declare-fun e!56274 () Bool)

(assert (=> d!22517 e!56274))

(declare-fun res!44399 () Bool)

(assert (=> d!22517 (=> (not res!44399) (not e!56274))))

(declare-fun lt!40962 () ListLongMap!1449)

(assert (=> d!22517 (= res!44399 (contains!752 lt!40962 (_1!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!40961 () List!1525)

(assert (=> d!22517 (= lt!40962 (ListLongMap!1450 lt!40961))))

(declare-fun lt!40960 () Unit!2510)

(declare-fun lt!40963 () Unit!2510)

(assert (=> d!22517 (= lt!40960 lt!40963)))

(assert (=> d!22517 (= (getValueByKey!138 lt!40961 (_1!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22517 (= lt!40963 (lemmaContainsTupThenGetReturnValue!58 lt!40961 (_1!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22517 (= lt!40961 (insertStrictlySorted!61 (toList!740 lt!40551) (_1!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22517 (= (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))) lt!40962)))

(declare-fun b!86361 () Bool)

(declare-fun res!44400 () Bool)

(assert (=> b!86361 (=> (not res!44400) (not e!56274))))

(assert (=> b!86361 (= res!44400 (= (getValueByKey!138 (toList!740 lt!40962) (_1!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86362 () Bool)

(assert (=> b!86362 (= e!56274 (contains!753 (toList!740 lt!40962) (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22517 res!44399) b!86361))

(assert (= (and b!86361 res!44400) b!86362))

(declare-fun m!91153 () Bool)

(assert (=> d!22517 m!91153))

(declare-fun m!91155 () Bool)

(assert (=> d!22517 m!91155))

(declare-fun m!91157 () Bool)

(assert (=> d!22517 m!91157))

(declare-fun m!91159 () Bool)

(assert (=> d!22517 m!91159))

(declare-fun m!91161 () Bool)

(assert (=> b!86361 m!91161))

(declare-fun m!91163 () Bool)

(assert (=> b!86362 m!91163))

(assert (=> b!85675 d!22517))

(declare-fun d!22519 () Bool)

(declare-fun e!56275 () Bool)

(assert (=> d!22519 e!56275))

(declare-fun res!44401 () Bool)

(assert (=> d!22519 (=> (not res!44401) (not e!56275))))

(declare-fun lt!40966 () ListLongMap!1449)

(assert (=> d!22519 (= res!44401 (contains!752 lt!40966 (_1!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!40965 () List!1525)

(assert (=> d!22519 (= lt!40966 (ListLongMap!1450 lt!40965))))

(declare-fun lt!40964 () Unit!2510)

(declare-fun lt!40967 () Unit!2510)

(assert (=> d!22519 (= lt!40964 lt!40967)))

(assert (=> d!22519 (= (getValueByKey!138 lt!40965 (_1!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22519 (= lt!40967 (lemmaContainsTupThenGetReturnValue!58 lt!40965 (_1!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22519 (= lt!40965 (insertStrictlySorted!61 (toList!740 lt!40546) (_1!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22519 (= (+!108 lt!40546 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))) lt!40966)))

(declare-fun b!86363 () Bool)

(declare-fun res!44402 () Bool)

(assert (=> b!86363 (=> (not res!44402) (not e!56275))))

(assert (=> b!86363 (= res!44402 (= (getValueByKey!138 (toList!740 lt!40966) (_1!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86364 () Bool)

(assert (=> b!86364 (= e!56275 (contains!753 (toList!740 lt!40966) (tuple2!2207 lt!40557 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22519 res!44401) b!86363))

(assert (= (and b!86363 res!44402) b!86364))

(declare-fun m!91165 () Bool)

(assert (=> d!22519 m!91165))

(declare-fun m!91167 () Bool)

(assert (=> d!22519 m!91167))

(declare-fun m!91169 () Bool)

(assert (=> d!22519 m!91169))

(declare-fun m!91171 () Bool)

(assert (=> d!22519 m!91171))

(declare-fun m!91173 () Bool)

(assert (=> b!86363 m!91173))

(declare-fun m!91175 () Bool)

(assert (=> b!86364 m!91175))

(assert (=> b!85675 d!22519))

(declare-fun d!22521 () Bool)

(assert (=> d!22521 (= (apply!82 (+!108 lt!40544 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))) lt!40556) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40544 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))) lt!40556)))))

(declare-fun bs!3644 () Bool)

(assert (= bs!3644 d!22521))

(declare-fun m!91177 () Bool)

(assert (=> bs!3644 m!91177))

(assert (=> bs!3644 m!91177))

(declare-fun m!91179 () Bool)

(assert (=> bs!3644 m!91179))

(assert (=> b!85675 d!22521))

(declare-fun d!22523 () Bool)

(assert (=> d!22523 (contains!752 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))) lt!40552)))

(declare-fun lt!40968 () Unit!2510)

(assert (=> d!22523 (= lt!40968 (choose!516 lt!40551 lt!40548 (zeroValue!2229 newMap!16) lt!40552))))

(assert (=> d!22523 (contains!752 lt!40551 lt!40552)))

(assert (=> d!22523 (= (addStillContains!58 lt!40551 lt!40548 (zeroValue!2229 newMap!16) lt!40552) lt!40968)))

(declare-fun bs!3645 () Bool)

(assert (= bs!3645 d!22523))

(assert (=> bs!3645 m!90043))

(assert (=> bs!3645 m!90043))

(assert (=> bs!3645 m!90045))

(declare-fun m!91181 () Bool)

(assert (=> bs!3645 m!91181))

(declare-fun m!91183 () Bool)

(assert (=> bs!3645 m!91183))

(assert (=> b!85675 d!22523))

(declare-fun d!22525 () Bool)

(assert (=> d!22525 (= (apply!82 (+!108 lt!40544 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))) lt!40556) (apply!82 lt!40544 lt!40556))))

(declare-fun lt!40969 () Unit!2510)

(assert (=> d!22525 (= lt!40969 (choose!517 lt!40544 lt!40561 (minValue!2229 newMap!16) lt!40556))))

(declare-fun e!56276 () Bool)

(assert (=> d!22525 e!56276))

(declare-fun res!44403 () Bool)

(assert (=> d!22525 (=> (not res!44403) (not e!56276))))

(assert (=> d!22525 (= res!44403 (contains!752 lt!40544 lt!40556))))

(assert (=> d!22525 (= (addApplyDifferent!58 lt!40544 lt!40561 (minValue!2229 newMap!16) lt!40556) lt!40969)))

(declare-fun b!86365 () Bool)

(assert (=> b!86365 (= e!56276 (not (= lt!40556 lt!40561)))))

(assert (= (and d!22525 res!44403) b!86365))

(declare-fun m!91185 () Bool)

(assert (=> d!22525 m!91185))

(assert (=> d!22525 m!90033))

(assert (=> d!22525 m!90035))

(assert (=> d!22525 m!90049))

(declare-fun m!91187 () Bool)

(assert (=> d!22525 m!91187))

(assert (=> d!22525 m!90033))

(assert (=> b!85675 d!22525))

(declare-fun d!22527 () Bool)

(declare-fun e!56278 () Bool)

(assert (=> d!22527 e!56278))

(declare-fun res!44404 () Bool)

(assert (=> d!22527 (=> res!44404 e!56278)))

(declare-fun lt!40970 () Bool)

(assert (=> d!22527 (= res!44404 (not lt!40970))))

(declare-fun lt!40973 () Bool)

(assert (=> d!22527 (= lt!40970 lt!40973)))

(declare-fun lt!40971 () Unit!2510)

(declare-fun e!56277 () Unit!2510)

(assert (=> d!22527 (= lt!40971 e!56277)))

(declare-fun c!14105 () Bool)

(assert (=> d!22527 (= c!14105 lt!40973)))

(assert (=> d!22527 (= lt!40973 (containsKey!142 (toList!740 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))) lt!40552))))

(assert (=> d!22527 (= (contains!752 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16))) lt!40552) lt!40970)))

(declare-fun b!86366 () Bool)

(declare-fun lt!40972 () Unit!2510)

(assert (=> b!86366 (= e!56277 lt!40972)))

(assert (=> b!86366 (= lt!40972 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))) lt!40552))))

(assert (=> b!86366 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))) lt!40552))))

(declare-fun b!86367 () Bool)

(declare-fun Unit!2556 () Unit!2510)

(assert (=> b!86367 (= e!56277 Unit!2556)))

(declare-fun b!86368 () Bool)

(assert (=> b!86368 (= e!56278 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40551 (tuple2!2207 lt!40548 (zeroValue!2229 newMap!16)))) lt!40552)))))

(assert (= (and d!22527 c!14105) b!86366))

(assert (= (and d!22527 (not c!14105)) b!86367))

(assert (= (and d!22527 (not res!44404)) b!86368))

(declare-fun m!91189 () Bool)

(assert (=> d!22527 m!91189))

(declare-fun m!91191 () Bool)

(assert (=> b!86366 m!91191))

(declare-fun m!91193 () Bool)

(assert (=> b!86366 m!91193))

(assert (=> b!86366 m!91193))

(declare-fun m!91195 () Bool)

(assert (=> b!86366 m!91195))

(assert (=> b!86368 m!91193))

(assert (=> b!86368 m!91193))

(assert (=> b!86368 m!91195))

(assert (=> b!85675 d!22527))

(declare-fun d!22529 () Bool)

(declare-fun e!56279 () Bool)

(assert (=> d!22529 e!56279))

(declare-fun res!44405 () Bool)

(assert (=> d!22529 (=> (not res!44405) (not e!56279))))

(declare-fun lt!40976 () ListLongMap!1449)

(assert (=> d!22529 (= res!44405 (contains!752 lt!40976 (_1!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))))))

(declare-fun lt!40975 () List!1525)

(assert (=> d!22529 (= lt!40976 (ListLongMap!1450 lt!40975))))

(declare-fun lt!40974 () Unit!2510)

(declare-fun lt!40977 () Unit!2510)

(assert (=> d!22529 (= lt!40974 lt!40977)))

(assert (=> d!22529 (= (getValueByKey!138 lt!40975 (_1!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))))))

(assert (=> d!22529 (= lt!40977 (lemmaContainsTupThenGetReturnValue!58 lt!40975 (_1!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))))))

(assert (=> d!22529 (= lt!40975 (insertStrictlySorted!61 (toList!740 lt!40544) (_1!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))))))

(assert (=> d!22529 (= (+!108 lt!40544 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))) lt!40976)))

(declare-fun b!86369 () Bool)

(declare-fun res!44406 () Bool)

(assert (=> b!86369 (=> (not res!44406) (not e!56279))))

(assert (=> b!86369 (= res!44406 (= (getValueByKey!138 (toList!740 lt!40976) (_1!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40561 (minValue!2229 newMap!16))))))))

(declare-fun b!86370 () Bool)

(assert (=> b!86370 (= e!56279 (contains!753 (toList!740 lt!40976) (tuple2!2207 lt!40561 (minValue!2229 newMap!16))))))

(assert (= (and d!22529 res!44405) b!86369))

(assert (= (and b!86369 res!44406) b!86370))

(declare-fun m!91197 () Bool)

(assert (=> d!22529 m!91197))

(declare-fun m!91199 () Bool)

(assert (=> d!22529 m!91199))

(declare-fun m!91201 () Bool)

(assert (=> d!22529 m!91201))

(declare-fun m!91203 () Bool)

(assert (=> d!22529 m!91203))

(declare-fun m!91205 () Bool)

(assert (=> b!86369 m!91205))

(declare-fun m!91207 () Bool)

(assert (=> b!86370 m!91207))

(assert (=> b!85675 d!22529))

(declare-fun d!22531 () Bool)

(assert (=> d!22531 (= (apply!82 (+!108 lt!40543 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))) lt!40560) (apply!82 lt!40543 lt!40560))))

(declare-fun lt!40978 () Unit!2510)

(assert (=> d!22531 (= lt!40978 (choose!517 lt!40543 lt!40554 (minValue!2229 newMap!16) lt!40560))))

(declare-fun e!56280 () Bool)

(assert (=> d!22531 e!56280))

(declare-fun res!44407 () Bool)

(assert (=> d!22531 (=> (not res!44407) (not e!56280))))

(assert (=> d!22531 (= res!44407 (contains!752 lt!40543 lt!40560))))

(assert (=> d!22531 (= (addApplyDifferent!58 lt!40543 lt!40554 (minValue!2229 newMap!16) lt!40560) lt!40978)))

(declare-fun b!86371 () Bool)

(assert (=> b!86371 (= e!56280 (not (= lt!40560 lt!40554)))))

(assert (= (and d!22531 res!44407) b!86371))

(declare-fun m!91209 () Bool)

(assert (=> d!22531 m!91209))

(assert (=> d!22531 m!90037))

(assert (=> d!22531 m!90039))

(assert (=> d!22531 m!90051))

(declare-fun m!91211 () Bool)

(assert (=> d!22531 m!91211))

(assert (=> d!22531 m!90037))

(assert (=> b!85675 d!22531))

(declare-fun d!22533 () Bool)

(assert (=> d!22533 (= (apply!82 (+!108 lt!40543 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))) lt!40560) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40543 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))) lt!40560)))))

(declare-fun bs!3646 () Bool)

(assert (= bs!3646 d!22533))

(declare-fun m!91213 () Bool)

(assert (=> bs!3646 m!91213))

(assert (=> bs!3646 m!91213))

(declare-fun m!91215 () Bool)

(assert (=> bs!3646 m!91215))

(assert (=> b!85675 d!22533))

(declare-fun d!22535 () Bool)

(assert (=> d!22535 (= (apply!82 lt!40546 lt!40559) (get!1204 (getValueByKey!138 (toList!740 lt!40546) lt!40559)))))

(declare-fun bs!3647 () Bool)

(assert (= bs!3647 d!22535))

(declare-fun m!91217 () Bool)

(assert (=> bs!3647 m!91217))

(assert (=> bs!3647 m!91217))

(declare-fun m!91219 () Bool)

(assert (=> bs!3647 m!91219))

(assert (=> b!85675 d!22535))

(declare-fun d!22537 () Bool)

(declare-fun e!56281 () Bool)

(assert (=> d!22537 e!56281))

(declare-fun res!44408 () Bool)

(assert (=> d!22537 (=> (not res!44408) (not e!56281))))

(declare-fun lt!40981 () ListLongMap!1449)

(assert (=> d!22537 (= res!44408 (contains!752 lt!40981 (_1!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))))))

(declare-fun lt!40980 () List!1525)

(assert (=> d!22537 (= lt!40981 (ListLongMap!1450 lt!40980))))

(declare-fun lt!40979 () Unit!2510)

(declare-fun lt!40982 () Unit!2510)

(assert (=> d!22537 (= lt!40979 lt!40982)))

(assert (=> d!22537 (= (getValueByKey!138 lt!40980 (_1!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))))))

(assert (=> d!22537 (= lt!40982 (lemmaContainsTupThenGetReturnValue!58 lt!40980 (_1!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))))))

(assert (=> d!22537 (= lt!40980 (insertStrictlySorted!61 (toList!740 lt!40543) (_1!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))))))

(assert (=> d!22537 (= (+!108 lt!40543 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))) lt!40981)))

(declare-fun b!86372 () Bool)

(declare-fun res!44409 () Bool)

(assert (=> b!86372 (=> (not res!44409) (not e!56281))))

(assert (=> b!86372 (= res!44409 (= (getValueByKey!138 (toList!740 lt!40981) (_1!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40554 (minValue!2229 newMap!16))))))))

(declare-fun b!86373 () Bool)

(assert (=> b!86373 (= e!56281 (contains!753 (toList!740 lt!40981) (tuple2!2207 lt!40554 (minValue!2229 newMap!16))))))

(assert (= (and d!22537 res!44408) b!86372))

(assert (= (and b!86372 res!44409) b!86373))

(declare-fun m!91221 () Bool)

(assert (=> d!22537 m!91221))

(declare-fun m!91223 () Bool)

(assert (=> d!22537 m!91223))

(declare-fun m!91225 () Bool)

(assert (=> d!22537 m!91225))

(declare-fun m!91227 () Bool)

(assert (=> d!22537 m!91227))

(declare-fun m!91229 () Bool)

(assert (=> b!86372 m!91229))

(declare-fun m!91231 () Bool)

(assert (=> b!86373 m!91231))

(assert (=> b!85675 d!22537))

(declare-fun d!22539 () Bool)

(assert (=> d!22539 (= (apply!82 lt!40543 lt!40560) (get!1204 (getValueByKey!138 (toList!740 lt!40543) lt!40560)))))

(declare-fun bs!3648 () Bool)

(assert (= bs!3648 d!22539))

(declare-fun m!91233 () Bool)

(assert (=> bs!3648 m!91233))

(assert (=> bs!3648 m!91233))

(declare-fun m!91235 () Bool)

(assert (=> bs!3648 m!91235))

(assert (=> b!85675 d!22539))

(declare-fun b!86374 () Bool)

(assert (=> b!86374 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> b!86374 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (_values!2320 newMap!16))))))

(declare-fun e!56286 () Bool)

(declare-fun lt!40987 () ListLongMap!1449)

(assert (=> b!86374 (= e!56286 (= (apply!82 lt!40987 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86375 () Bool)

(declare-fun res!44410 () Bool)

(declare-fun e!56288 () Bool)

(assert (=> b!86375 (=> (not res!44410) (not e!56288))))

(assert (=> b!86375 (= res!44410 (not (contains!752 lt!40987 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86376 () Bool)

(declare-fun e!56284 () Bool)

(assert (=> b!86376 (= e!56288 e!56284)))

(declare-fun c!14107 () Bool)

(declare-fun e!56285 () Bool)

(assert (=> b!86376 (= c!14107 e!56285)))

(declare-fun res!44411 () Bool)

(assert (=> b!86376 (=> (not res!44411) (not e!56285))))

(assert (=> b!86376 (= res!44411 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86377 () Bool)

(declare-fun e!56287 () ListLongMap!1449)

(assert (=> b!86377 (= e!56287 (ListLongMap!1450 Nil!1522))))

(declare-fun bm!8226 () Bool)

(declare-fun call!8229 () ListLongMap!1449)

(assert (=> bm!8226 (= call!8229 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16)))))

(declare-fun b!86379 () Bool)

(declare-fun e!56282 () Bool)

(assert (=> b!86379 (= e!56282 (isEmpty!339 lt!40987))))

(declare-fun b!86380 () Bool)

(declare-fun e!56283 () ListLongMap!1449)

(assert (=> b!86380 (= e!56283 call!8229)))

(declare-fun b!86381 () Bool)

(assert (=> b!86381 (= e!56282 (= lt!40987 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16))))))

(declare-fun b!86382 () Bool)

(assert (=> b!86382 (= e!56284 e!56286)))

(assert (=> b!86382 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun res!44413 () Bool)

(assert (=> b!86382 (= res!44413 (contains!752 lt!40987 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86382 (=> (not res!44413) (not e!56286))))

(declare-fun b!86383 () Bool)

(declare-fun lt!40989 () Unit!2510)

(declare-fun lt!40988 () Unit!2510)

(assert (=> b!86383 (= lt!40989 lt!40988)))

(declare-fun lt!40984 () V!3025)

(declare-fun lt!40985 () ListLongMap!1449)

(declare-fun lt!40983 () (_ BitVec 64))

(declare-fun lt!40986 () (_ BitVec 64))

(assert (=> b!86383 (not (contains!752 (+!108 lt!40985 (tuple2!2207 lt!40986 lt!40984)) lt!40983))))

(assert (=> b!86383 (= lt!40988 (addStillNotContains!32 lt!40985 lt!40986 lt!40984 lt!40983))))

(assert (=> b!86383 (= lt!40983 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86383 (= lt!40984 (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86383 (= lt!40986 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86383 (= lt!40985 call!8229)))

(assert (=> b!86383 (= e!56283 (+!108 call!8229 (tuple2!2207 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86384 () Bool)

(assert (=> b!86384 (= e!56287 e!56283)))

(declare-fun c!14108 () Bool)

(assert (=> b!86384 (= c!14108 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86385 () Bool)

(assert (=> b!86385 (= e!56284 e!56282)))

(declare-fun c!14106 () Bool)

(assert (=> b!86385 (= c!14106 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86378 () Bool)

(assert (=> b!86378 (= e!56285 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86378 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!22541 () Bool)

(assert (=> d!22541 e!56288))

(declare-fun res!44412 () Bool)

(assert (=> d!22541 (=> (not res!44412) (not e!56288))))

(assert (=> d!22541 (= res!44412 (not (contains!752 lt!40987 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22541 (= lt!40987 e!56287)))

(declare-fun c!14109 () Bool)

(assert (=> d!22541 (= c!14109 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22541 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22541 (= (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!40987)))

(assert (= (and d!22541 c!14109) b!86377))

(assert (= (and d!22541 (not c!14109)) b!86384))

(assert (= (and b!86384 c!14108) b!86383))

(assert (= (and b!86384 (not c!14108)) b!86380))

(assert (= (or b!86383 b!86380) bm!8226))

(assert (= (and d!22541 res!44412) b!86375))

(assert (= (and b!86375 res!44410) b!86376))

(assert (= (and b!86376 res!44411) b!86378))

(assert (= (and b!86376 c!14107) b!86382))

(assert (= (and b!86376 (not c!14107)) b!86385))

(assert (= (and b!86382 res!44413) b!86374))

(assert (= (and b!86385 c!14106) b!86381))

(assert (= (and b!86385 (not c!14106)) b!86379))

(declare-fun b_lambda!3821 () Bool)

(assert (=> (not b_lambda!3821) (not b!86374)))

(assert (=> b!86374 t!5251))

(declare-fun b_and!5201 () Bool)

(assert (= b_and!5197 (and (=> t!5251 result!2923) b_and!5201)))

(assert (=> b!86374 t!5253))

(declare-fun b_and!5203 () Bool)

(assert (= b_and!5199 (and (=> t!5253 result!2925) b_and!5203)))

(declare-fun b_lambda!3823 () Bool)

(assert (=> (not b_lambda!3823) (not b!86383)))

(assert (=> b!86383 t!5251))

(declare-fun b_and!5205 () Bool)

(assert (= b_and!5201 (and (=> t!5251 result!2923) b_and!5205)))

(assert (=> b!86383 t!5253))

(declare-fun b_and!5207 () Bool)

(assert (= b_and!5203 (and (=> t!5253 result!2925) b_and!5207)))

(declare-fun m!91237 () Bool)

(assert (=> d!22541 m!91237))

(assert (=> d!22541 m!90001))

(declare-fun m!91239 () Bool)

(assert (=> bm!8226 m!91239))

(assert (=> b!86383 m!90065))

(assert (=> b!86383 m!90011))

(assert (=> b!86383 m!90069))

(assert (=> b!86383 m!90011))

(assert (=> b!86383 m!89961))

(declare-fun m!91241 () Bool)

(assert (=> b!86383 m!91241))

(declare-fun m!91243 () Bool)

(assert (=> b!86383 m!91243))

(declare-fun m!91245 () Bool)

(assert (=> b!86383 m!91245))

(assert (=> b!86383 m!91243))

(declare-fun m!91247 () Bool)

(assert (=> b!86383 m!91247))

(assert (=> b!86383 m!90065))

(assert (=> b!86374 m!90065))

(assert (=> b!86374 m!90011))

(assert (=> b!86374 m!90069))

(assert (=> b!86374 m!90011))

(assert (=> b!86374 m!89961))

(assert (=> b!86374 m!89961))

(declare-fun m!91249 () Bool)

(assert (=> b!86374 m!91249))

(assert (=> b!86374 m!90065))

(declare-fun m!91251 () Bool)

(assert (=> b!86375 m!91251))

(assert (=> b!86381 m!91239))

(assert (=> b!86378 m!89961))

(assert (=> b!86378 m!89961))

(assert (=> b!86378 m!90007))

(declare-fun m!91253 () Bool)

(assert (=> b!86379 m!91253))

(assert (=> b!86384 m!89961))

(assert (=> b!86384 m!89961))

(assert (=> b!86384 m!90007))

(assert (=> b!86382 m!89961))

(assert (=> b!86382 m!89961))

(declare-fun m!91255 () Bool)

(assert (=> b!86382 m!91255))

(assert (=> b!85675 d!22541))

(declare-fun d!22543 () Bool)

(declare-fun res!44414 () Bool)

(declare-fun e!56289 () Bool)

(assert (=> d!22543 (=> res!44414 e!56289)))

(assert (=> d!22543 (= res!44414 (and ((_ is Cons!1521) (toList!740 lt!40471)) (= (_1!1114 (h!2112 (toList!740 lt!40471))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22543 (= (containsKey!142 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56289)))

(declare-fun b!86386 () Bool)

(declare-fun e!56290 () Bool)

(assert (=> b!86386 (= e!56289 e!56290)))

(declare-fun res!44415 () Bool)

(assert (=> b!86386 (=> (not res!44415) (not e!56290))))

(assert (=> b!86386 (= res!44415 (and (or (not ((_ is Cons!1521) (toList!740 lt!40471))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40471))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1521) (toList!740 lt!40471)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40471))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!86387 () Bool)

(assert (=> b!86387 (= e!56290 (containsKey!142 (t!5237 (toList!740 lt!40471)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!22543 (not res!44414)) b!86386))

(assert (= (and b!86386 res!44415) b!86387))

(assert (=> b!86387 m!89659))

(declare-fun m!91257 () Bool)

(assert (=> b!86387 m!91257))

(assert (=> d!22271 d!22543))

(assert (=> d!22341 d!22345))

(assert (=> d!22341 d!22339))

(assert (=> d!22341 d!22343))

(assert (=> d!22341 d!22347))

(declare-fun d!22545 () Bool)

(declare-fun lt!40990 () Bool)

(assert (=> d!22545 (= lt!40990 (select (content!89 lt!40806) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun e!56291 () Bool)

(assert (=> d!22545 (= lt!40990 e!56291)))

(declare-fun res!44416 () Bool)

(assert (=> d!22545 (=> (not res!44416) (not e!56291))))

(assert (=> d!22545 (= res!44416 ((_ is Cons!1521) lt!40806))))

(assert (=> d!22545 (= (contains!753 lt!40806 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) lt!40990)))

(declare-fun b!86388 () Bool)

(declare-fun e!56292 () Bool)

(assert (=> b!86388 (= e!56291 e!56292)))

(declare-fun res!44417 () Bool)

(assert (=> b!86388 (=> res!44417 e!56292)))

(assert (=> b!86388 (= res!44417 (= (h!2112 lt!40806) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun b!86389 () Bool)

(assert (=> b!86389 (= e!56292 (contains!753 (t!5237 lt!40806) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!22545 res!44416) b!86388))

(assert (= (and b!86388 (not res!44417)) b!86389))

(declare-fun m!91259 () Bool)

(assert (=> d!22545 m!91259))

(declare-fun m!91261 () Bool)

(assert (=> d!22545 m!91261))

(declare-fun m!91263 () Bool)

(assert (=> b!86389 m!91263))

(assert (=> b!86025 d!22545))

(assert (=> b!85701 d!22425))

(declare-fun d!22547 () Bool)

(assert (=> d!22547 (= (apply!82 lt!40688 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40688) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3649 () Bool)

(assert (= bs!3649 d!22547))

(assert (=> bs!3649 m!91069))

(assert (=> bs!3649 m!91069))

(declare-fun m!91265 () Bool)

(assert (=> bs!3649 m!91265))

(assert (=> b!85922 d!22547))

(assert (=> b!85651 d!22385))

(assert (=> b!85980 d!22173))

(declare-fun d!22549 () Bool)

(declare-fun c!14110 () Bool)

(assert (=> d!22549 (= c!14110 (and ((_ is Cons!1521) (toList!740 lt!40869)) (= (_1!1114 (h!2112 (toList!740 lt!40869))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56293 () Option!144)

(assert (=> d!22549 (= (getValueByKey!138 (toList!740 lt!40869) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56293)))

(declare-fun b!86393 () Bool)

(declare-fun e!56294 () Option!144)

(assert (=> b!86393 (= e!56294 None!142)))

(declare-fun b!86390 () Bool)

(assert (=> b!86390 (= e!56293 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40869)))))))

(declare-fun b!86392 () Bool)

(assert (=> b!86392 (= e!56294 (getValueByKey!138 (t!5237 (toList!740 lt!40869)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86391 () Bool)

(assert (=> b!86391 (= e!56293 e!56294)))

(declare-fun c!14111 () Bool)

(assert (=> b!86391 (= c!14111 (and ((_ is Cons!1521) (toList!740 lt!40869)) (not (= (_1!1114 (h!2112 (toList!740 lt!40869))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22549 c!14110) b!86390))

(assert (= (and d!22549 (not c!14110)) b!86391))

(assert (= (and b!86391 c!14111) b!86392))

(assert (= (and b!86391 (not c!14111)) b!86393))

(declare-fun m!91267 () Bool)

(assert (=> b!86392 m!91267))

(assert (=> b!86093 d!22549))

(declare-fun d!22551 () Bool)

(assert (=> d!22551 (= (isDefined!92 (getValueByKey!138 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) (not (isEmpty!341 (getValueByKey!138 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(declare-fun bs!3650 () Bool)

(assert (= bs!3650 d!22551))

(assert (=> bs!3650 m!90537))

(declare-fun m!91269 () Bool)

(assert (=> bs!3650 m!91269))

(assert (=> b!85994 d!22551))

(declare-fun d!22553 () Bool)

(declare-fun c!14112 () Bool)

(assert (=> d!22553 (= c!14112 (and ((_ is Cons!1521) (toList!740 call!8082)) (= (_1!1114 (h!2112 (toList!740 call!8082))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun e!56295 () Option!144)

(assert (=> d!22553 (= (getValueByKey!138 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56295)))

(declare-fun b!86397 () Bool)

(declare-fun e!56296 () Option!144)

(assert (=> b!86397 (= e!56296 None!142)))

(declare-fun b!86394 () Bool)

(assert (=> b!86394 (= e!56295 (Some!143 (_2!1114 (h!2112 (toList!740 call!8082)))))))

(declare-fun b!86396 () Bool)

(assert (=> b!86396 (= e!56296 (getValueByKey!138 (t!5237 (toList!740 call!8082)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!86395 () Bool)

(assert (=> b!86395 (= e!56295 e!56296)))

(declare-fun c!14113 () Bool)

(assert (=> b!86395 (= c!14113 (and ((_ is Cons!1521) (toList!740 call!8082)) (not (= (_1!1114 (h!2112 (toList!740 call!8082))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(assert (= (and d!22553 c!14112) b!86394))

(assert (= (and d!22553 (not c!14112)) b!86395))

(assert (= (and b!86395 c!14113) b!86396))

(assert (= (and b!86395 (not c!14113)) b!86397))

(assert (=> b!86396 m!89403))

(declare-fun m!91271 () Bool)

(assert (=> b!86396 m!91271))

(assert (=> b!85994 d!22553))

(declare-fun lt!40991 () Bool)

(declare-fun d!22555 () Bool)

(assert (=> d!22555 (= lt!40991 (select (content!89 (toList!740 lt!40852)) (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56297 () Bool)

(assert (=> d!22555 (= lt!40991 e!56297)))

(declare-fun res!44418 () Bool)

(assert (=> d!22555 (=> (not res!44418) (not e!56297))))

(assert (=> d!22555 (= res!44418 ((_ is Cons!1521) (toList!740 lt!40852)))))

(assert (=> d!22555 (= (contains!753 (toList!740 lt!40852) (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40991)))

(declare-fun b!86398 () Bool)

(declare-fun e!56298 () Bool)

(assert (=> b!86398 (= e!56297 e!56298)))

(declare-fun res!44419 () Bool)

(assert (=> b!86398 (=> res!44419 e!56298)))

(assert (=> b!86398 (= res!44419 (= (h!2112 (toList!740 lt!40852)) (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86399 () Bool)

(assert (=> b!86399 (= e!56298 (contains!753 (t!5237 (toList!740 lt!40852)) (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22555 res!44418) b!86398))

(assert (= (and b!86398 (not res!44419)) b!86399))

(declare-fun m!91273 () Bool)

(assert (=> d!22555 m!91273))

(declare-fun m!91275 () Bool)

(assert (=> d!22555 m!91275))

(declare-fun m!91277 () Bool)

(assert (=> b!86399 m!91277))

(assert (=> b!86084 d!22555))

(declare-fun c!14114 () Bool)

(declare-fun d!22557 () Bool)

(assert (=> d!22557 (= c!14114 (and ((_ is Cons!1521) (toList!740 lt!40881)) (= (_1!1114 (h!2112 (toList!740 lt!40881))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56299 () Option!144)

(assert (=> d!22557 (= (getValueByKey!138 (toList!740 lt!40881) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56299)))

(declare-fun b!86403 () Bool)

(declare-fun e!56300 () Option!144)

(assert (=> b!86403 (= e!56300 None!142)))

(declare-fun b!86400 () Bool)

(assert (=> b!86400 (= e!56299 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40881)))))))

(declare-fun b!86402 () Bool)

(assert (=> b!86402 (= e!56300 (getValueByKey!138 (t!5237 (toList!740 lt!40881)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86401 () Bool)

(assert (=> b!86401 (= e!56299 e!56300)))

(declare-fun c!14115 () Bool)

(assert (=> b!86401 (= c!14115 (and ((_ is Cons!1521) (toList!740 lt!40881)) (not (= (_1!1114 (h!2112 (toList!740 lt!40881))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22557 c!14114) b!86400))

(assert (= (and d!22557 (not c!14114)) b!86401))

(assert (= (and b!86401 c!14115) b!86402))

(assert (= (and b!86401 (not c!14115)) b!86403))

(declare-fun m!91279 () Bool)

(assert (=> b!86402 m!91279))

(assert (=> b!86100 d!22557))

(assert (=> d!22329 d!22307))

(assert (=> d!22329 d!22315))

(declare-fun d!22559 () Bool)

(assert (=> d!22559 (= (apply!82 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40416) (apply!82 lt!40404 lt!40416))))

(assert (=> d!22559 true))

(declare-fun _$34!842 () Unit!2510)

(assert (=> d!22559 (= (choose!517 lt!40404 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40416) _$34!842)))

(declare-fun bs!3651 () Bool)

(assert (= bs!3651 d!22559))

(assert (=> bs!3651 m!89671))

(assert (=> bs!3651 m!89671))

(assert (=> bs!3651 m!89673))

(assert (=> bs!3651 m!89687))

(assert (=> d!22329 d!22559))

(assert (=> d!22329 d!22327))

(declare-fun d!22561 () Bool)

(declare-fun e!56302 () Bool)

(assert (=> d!22561 e!56302))

(declare-fun res!44420 () Bool)

(assert (=> d!22561 (=> res!44420 e!56302)))

(declare-fun lt!40992 () Bool)

(assert (=> d!22561 (= res!44420 (not lt!40992))))

(declare-fun lt!40995 () Bool)

(assert (=> d!22561 (= lt!40992 lt!40995)))

(declare-fun lt!40993 () Unit!2510)

(declare-fun e!56301 () Unit!2510)

(assert (=> d!22561 (= lt!40993 e!56301)))

(declare-fun c!14116 () Bool)

(assert (=> d!22561 (= c!14116 lt!40995)))

(assert (=> d!22561 (= lt!40995 (containsKey!142 (toList!740 lt!40404) lt!40416))))

(assert (=> d!22561 (= (contains!752 lt!40404 lt!40416) lt!40992)))

(declare-fun b!86405 () Bool)

(declare-fun lt!40994 () Unit!2510)

(assert (=> b!86405 (= e!56301 lt!40994)))

(assert (=> b!86405 (= lt!40994 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40404) lt!40416))))

(assert (=> b!86405 (isDefined!92 (getValueByKey!138 (toList!740 lt!40404) lt!40416))))

(declare-fun b!86406 () Bool)

(declare-fun Unit!2557 () Unit!2510)

(assert (=> b!86406 (= e!56301 Unit!2557)))

(declare-fun b!86407 () Bool)

(assert (=> b!86407 (= e!56302 (isDefined!92 (getValueByKey!138 (toList!740 lt!40404) lt!40416)))))

(assert (= (and d!22561 c!14116) b!86405))

(assert (= (and d!22561 (not c!14116)) b!86406))

(assert (= (and d!22561 (not res!44420)) b!86407))

(declare-fun m!91281 () Bool)

(assert (=> d!22561 m!91281))

(declare-fun m!91283 () Bool)

(assert (=> b!86405 m!91283))

(assert (=> b!86405 m!90651))

(assert (=> b!86405 m!90651))

(declare-fun m!91285 () Bool)

(assert (=> b!86405 m!91285))

(assert (=> b!86407 m!90651))

(assert (=> b!86407 m!90651))

(assert (=> b!86407 m!91285))

(assert (=> d!22329 d!22561))

(declare-fun d!22563 () Bool)

(declare-fun e!56304 () Bool)

(assert (=> d!22563 e!56304))

(declare-fun res!44421 () Bool)

(assert (=> d!22563 (=> res!44421 e!56304)))

(declare-fun lt!40996 () Bool)

(assert (=> d!22563 (= res!44421 (not lt!40996))))

(declare-fun lt!40999 () Bool)

(assert (=> d!22563 (= lt!40996 lt!40999)))

(declare-fun lt!40997 () Unit!2510)

(declare-fun e!56303 () Unit!2510)

(assert (=> d!22563 (= lt!40997 e!56303)))

(declare-fun c!14117 () Bool)

(assert (=> d!22563 (= c!14117 lt!40999)))

(assert (=> d!22563 (= lt!40999 (containsKey!142 (toList!740 lt!40889) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22563 (= (contains!752 lt!40889 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40996)))

(declare-fun b!86408 () Bool)

(declare-fun lt!40998 () Unit!2510)

(assert (=> b!86408 (= e!56303 lt!40998)))

(assert (=> b!86408 (= lt!40998 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40889) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86408 (isDefined!92 (getValueByKey!138 (toList!740 lt!40889) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86409 () Bool)

(declare-fun Unit!2558 () Unit!2510)

(assert (=> b!86409 (= e!56303 Unit!2558)))

(declare-fun b!86410 () Bool)

(assert (=> b!86410 (= e!56304 (isDefined!92 (getValueByKey!138 (toList!740 lt!40889) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22563 c!14117) b!86408))

(assert (= (and d!22563 (not c!14117)) b!86409))

(assert (= (and d!22563 (not res!44421)) b!86410))

(declare-fun m!91287 () Bool)

(assert (=> d!22563 m!91287))

(declare-fun m!91289 () Bool)

(assert (=> b!86408 m!91289))

(assert (=> b!86408 m!90833))

(assert (=> b!86408 m!90833))

(declare-fun m!91291 () Bool)

(assert (=> b!86408 m!91291))

(assert (=> b!86410 m!90833))

(assert (=> b!86410 m!90833))

(assert (=> b!86410 m!91291))

(assert (=> d!22359 d!22563))

(declare-fun d!22565 () Bool)

(declare-fun c!14118 () Bool)

(assert (=> d!22565 (= c!14118 (and ((_ is Cons!1521) lt!40888) (= (_1!1114 (h!2112 lt!40888)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56305 () Option!144)

(assert (=> d!22565 (= (getValueByKey!138 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56305)))

(declare-fun b!86414 () Bool)

(declare-fun e!56306 () Option!144)

(assert (=> b!86414 (= e!56306 None!142)))

(declare-fun b!86411 () Bool)

(assert (=> b!86411 (= e!56305 (Some!143 (_2!1114 (h!2112 lt!40888))))))

(declare-fun b!86413 () Bool)

(assert (=> b!86413 (= e!56306 (getValueByKey!138 (t!5237 lt!40888) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86412 () Bool)

(assert (=> b!86412 (= e!56305 e!56306)))

(declare-fun c!14119 () Bool)

(assert (=> b!86412 (= c!14119 (and ((_ is Cons!1521) lt!40888) (not (= (_1!1114 (h!2112 lt!40888)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22565 c!14118) b!86411))

(assert (= (and d!22565 (not c!14118)) b!86412))

(assert (= (and b!86412 c!14119) b!86413))

(assert (= (and b!86412 (not c!14119)) b!86414))

(declare-fun m!91293 () Bool)

(assert (=> b!86413 m!91293))

(assert (=> d!22359 d!22565))

(declare-fun d!22567 () Bool)

(assert (=> d!22567 (= (getValueByKey!138 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41000 () Unit!2510)

(assert (=> d!22567 (= lt!41000 (choose!507 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56307 () Bool)

(assert (=> d!22567 e!56307))

(declare-fun res!44422 () Bool)

(assert (=> d!22567 (=> (not res!44422) (not e!56307))))

(assert (=> d!22567 (= res!44422 (isStrictlySorted!293 lt!40888))))

(assert (=> d!22567 (= (lemmaContainsTupThenGetReturnValue!58 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41000)))

(declare-fun b!86415 () Bool)

(declare-fun res!44423 () Bool)

(assert (=> b!86415 (=> (not res!44423) (not e!56307))))

(assert (=> b!86415 (= res!44423 (containsKey!142 lt!40888 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86416 () Bool)

(assert (=> b!86416 (= e!56307 (contains!753 lt!40888 (tuple2!2207 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22567 res!44422) b!86415))

(assert (= (and b!86415 res!44423) b!86416))

(assert (=> d!22567 m!90827))

(declare-fun m!91295 () Bool)

(assert (=> d!22567 m!91295))

(declare-fun m!91297 () Bool)

(assert (=> d!22567 m!91297))

(declare-fun m!91299 () Bool)

(assert (=> b!86415 m!91299))

(declare-fun m!91301 () Bool)

(assert (=> b!86416 m!91301))

(assert (=> d!22359 d!22567))

(declare-fun b!86417 () Bool)

(declare-fun e!56310 () List!1525)

(assert (=> b!86417 (= e!56310 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40150)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun c!14123 () Bool)

(declare-fun b!86418 () Bool)

(declare-fun c!14122 () Bool)

(assert (=> b!86418 (= e!56310 (ite c!14122 (t!5237 (toList!740 lt!40150)) (ite c!14123 (Cons!1521 (h!2112 (toList!740 lt!40150)) (t!5237 (toList!740 lt!40150))) Nil!1522)))))

(declare-fun b!86419 () Bool)

(declare-fun e!56311 () List!1525)

(declare-fun call!8231 () List!1525)

(assert (=> b!86419 (= e!56311 call!8231)))

(declare-fun b!86420 () Bool)

(declare-fun e!56308 () List!1525)

(declare-fun call!8230 () List!1525)

(assert (=> b!86420 (= e!56308 call!8230)))

(declare-fun b!86421 () Bool)

(assert (=> b!86421 (= c!14123 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56312 () List!1525)

(assert (=> b!86421 (= e!56308 e!56312)))

(declare-fun b!86422 () Bool)

(declare-fun res!44424 () Bool)

(declare-fun e!56309 () Bool)

(assert (=> b!86422 (=> (not res!44424) (not e!56309))))

(declare-fun lt!41001 () List!1525)

(assert (=> b!86422 (= res!44424 (containsKey!142 lt!41001 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86424 () Bool)

(declare-fun call!8232 () List!1525)

(assert (=> b!86424 (= e!56312 call!8232)))

(declare-fun b!86425 () Bool)

(assert (=> b!86425 (= e!56309 (contains!753 lt!41001 (tuple2!2207 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun c!14121 () Bool)

(declare-fun bm!8227 () Bool)

(assert (=> bm!8227 (= call!8231 ($colon$colon!71 e!56310 (ite c!14121 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14120 () Bool)

(assert (=> bm!8227 (= c!14120 c!14121)))

(declare-fun bm!8228 () Bool)

(assert (=> bm!8228 (= call!8232 call!8230)))

(declare-fun b!86423 () Bool)

(assert (=> b!86423 (= e!56312 call!8232)))

(declare-fun d!22569 () Bool)

(assert (=> d!22569 e!56309))

(declare-fun res!44425 () Bool)

(assert (=> d!22569 (=> (not res!44425) (not e!56309))))

(assert (=> d!22569 (= res!44425 (isStrictlySorted!293 lt!41001))))

(assert (=> d!22569 (= lt!41001 e!56311)))

(assert (=> d!22569 (= c!14121 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22569 (isStrictlySorted!293 (toList!740 lt!40150))))

(assert (=> d!22569 (= (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41001)))

(declare-fun b!86426 () Bool)

(assert (=> b!86426 (= e!56311 e!56308)))

(assert (=> b!86426 (= c!14122 (and ((_ is Cons!1521) (toList!740 lt!40150)) (= (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8229 () Bool)

(assert (=> bm!8229 (= call!8230 call!8231)))

(assert (= (and d!22569 c!14121) b!86419))

(assert (= (and d!22569 (not c!14121)) b!86426))

(assert (= (and b!86426 c!14122) b!86420))

(assert (= (and b!86426 (not c!14122)) b!86421))

(assert (= (and b!86421 c!14123) b!86424))

(assert (= (and b!86421 (not c!14123)) b!86423))

(assert (= (or b!86424 b!86423) bm!8228))

(assert (= (or b!86420 bm!8228) bm!8229))

(assert (= (or b!86419 bm!8229) bm!8227))

(assert (= (and bm!8227 c!14120) b!86417))

(assert (= (and bm!8227 (not c!14120)) b!86418))

(assert (= (and d!22569 res!44425) b!86422))

(assert (= (and b!86422 res!44424) b!86425))

(declare-fun m!91303 () Bool)

(assert (=> d!22569 m!91303))

(assert (=> d!22569 m!90233))

(declare-fun m!91305 () Bool)

(assert (=> b!86425 m!91305))

(declare-fun m!91307 () Bool)

(assert (=> b!86422 m!91307))

(declare-fun m!91309 () Bool)

(assert (=> b!86417 m!91309))

(declare-fun m!91311 () Bool)

(assert (=> bm!8227 m!91311))

(assert (=> d!22359 d!22569))

(declare-fun lt!41002 () Bool)

(declare-fun d!22571 () Bool)

(assert (=> d!22571 (= lt!41002 (select (content!90 (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56314 () Bool)

(assert (=> d!22571 (= lt!41002 e!56314)))

(declare-fun res!44427 () Bool)

(assert (=> d!22571 (=> (not res!44427) (not e!56314))))

(assert (=> d!22571 (= res!44427 ((_ is Cons!1522) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)))))

(assert (=> d!22571 (= (contains!754 (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!41002)))

(declare-fun b!86427 () Bool)

(declare-fun e!56313 () Bool)

(assert (=> b!86427 (= e!56314 e!56313)))

(declare-fun res!44426 () Bool)

(assert (=> b!86427 (=> res!44426 e!56313)))

(assert (=> b!86427 (= res!44426 (= (h!2113 (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!86428 () Bool)

(assert (=> b!86428 (= e!56313 (contains!754 (t!5238 (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!22571 res!44427) b!86427))

(assert (= (and b!86427 (not res!44426)) b!86428))

(declare-fun m!91313 () Bool)

(assert (=> d!22571 m!91313))

(assert (=> d!22571 m!90275))

(declare-fun m!91315 () Bool)

(assert (=> d!22571 m!91315))

(assert (=> b!86428 m!90275))

(declare-fun m!91317 () Bool)

(assert (=> b!86428 m!91317))

(assert (=> b!85807 d!22571))

(declare-fun d!22573 () Bool)

(assert (=> d!22573 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41003 () Unit!2510)

(assert (=> d!22573 (= lt!41003 (choose!514 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56315 () Bool)

(assert (=> d!22573 e!56315))

(declare-fun res!44428 () Bool)

(assert (=> d!22573 (=> (not res!44428) (not e!56315))))

(assert (=> d!22573 (= res!44428 (isStrictlySorted!293 (toList!740 lt!40415)))))

(assert (=> d!22573 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41003)))

(declare-fun b!86429 () Bool)

(assert (=> b!86429 (= e!56315 (containsKey!142 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22573 res!44428) b!86429))

(assert (=> d!22573 m!90369))

(assert (=> d!22573 m!90369))

(assert (=> d!22573 m!90371))

(declare-fun m!91319 () Bool)

(assert (=> d!22573 m!91319))

(declare-fun m!91321 () Bool)

(assert (=> d!22573 m!91321))

(assert (=> b!86429 m!90365))

(assert (=> b!85860 d!22573))

(declare-fun d!22575 () Bool)

(assert (=> d!22575 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40415) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3652 () Bool)

(assert (= bs!3652 d!22575))

(assert (=> bs!3652 m!90369))

(declare-fun m!91323 () Bool)

(assert (=> bs!3652 m!91323))

(assert (=> b!85860 d!22575))

(assert (=> b!85860 d!22479))

(assert (=> b!85900 d!22105))

(declare-fun d!22577 () Bool)

(assert (=> d!22577 (isDefined!92 (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140)))))

(declare-fun lt!41004 () Unit!2510)

(assert (=> d!22577 (= lt!41004 (choose!514 (toList!740 lt!40435) (_1!1114 lt!40140)))))

(declare-fun e!56316 () Bool)

(assert (=> d!22577 e!56316))

(declare-fun res!44429 () Bool)

(assert (=> d!22577 (=> (not res!44429) (not e!56316))))

(assert (=> d!22577 (= res!44429 (isStrictlySorted!293 (toList!740 lt!40435)))))

(assert (=> d!22577 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40435) (_1!1114 lt!40140)) lt!41004)))

(declare-fun b!86430 () Bool)

(assert (=> b!86430 (= e!56316 (containsKey!142 (toList!740 lt!40435) (_1!1114 lt!40140)))))

(assert (= (and d!22577 res!44429) b!86430))

(assert (=> d!22577 m!89729))

(assert (=> d!22577 m!89729))

(assert (=> d!22577 m!90313))

(declare-fun m!91325 () Bool)

(assert (=> d!22577 m!91325))

(declare-fun m!91327 () Bool)

(assert (=> d!22577 m!91327))

(assert (=> b!86430 m!90309))

(assert (=> b!85818 d!22577))

(declare-fun d!22579 () Bool)

(assert (=> d!22579 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40435) (_1!1114 lt!40140)))))))

(declare-fun bs!3653 () Bool)

(assert (= bs!3653 d!22579))

(assert (=> bs!3653 m!89729))

(declare-fun m!91329 () Bool)

(assert (=> bs!3653 m!91329))

(assert (=> b!85818 d!22579))

(assert (=> b!85818 d!22259))

(declare-fun d!22581 () Bool)

(assert (=> d!22581 (= ($colon$colon!71 e!55823 (ite c!13888 (h!2112 (toList!740 lt!40152)) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153)))) (Cons!1521 (ite c!13888 (h!2112 (toList!740 lt!40152)) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))) e!55823))))

(assert (=> bm!8132 d!22581))

(declare-fun d!22583 () Bool)

(declare-fun c!14126 () Bool)

(assert (=> d!22583 (= c!14126 ((_ is Nil!1522) (toList!740 lt!40447)))))

(declare-fun e!56319 () (InoxSet tuple2!2206))

(assert (=> d!22583 (= (content!89 (toList!740 lt!40447)) e!56319)))

(declare-fun b!86435 () Bool)

(assert (=> b!86435 (= e!56319 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!86436 () Bool)

(assert (=> b!86436 (= e!56319 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40447)) true) (content!89 (t!5237 (toList!740 lt!40447)))))))

(assert (= (and d!22583 c!14126) b!86435))

(assert (= (and d!22583 (not c!14126)) b!86436))

(declare-fun m!91331 () Bool)

(assert (=> b!86436 m!91331))

(declare-fun m!91333 () Bool)

(assert (=> b!86436 m!91333))

(assert (=> d!22241 d!22583))

(declare-fun d!22585 () Bool)

(assert (=> d!22585 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41005 () Unit!2510)

(assert (=> d!22585 (= lt!41005 (choose!514 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56320 () Bool)

(assert (=> d!22585 e!56320))

(declare-fun res!44430 () Bool)

(assert (=> d!22585 (=> (not res!44430) (not e!56320))))

(assert (=> d!22585 (= res!44430 (isStrictlySorted!293 (toList!740 lt!40415)))))

(assert (=> d!22585 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41005)))

(declare-fun b!86437 () Bool)

(assert (=> b!86437 (= e!56320 (containsKey!142 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22585 res!44430) b!86437))

(assert (=> d!22585 m!90555))

(assert (=> d!22585 m!90555))

(assert (=> d!22585 m!90557))

(declare-fun m!91335 () Bool)

(assert (=> d!22585 m!91335))

(assert (=> d!22585 m!91321))

(assert (=> b!86437 m!90551))

(assert (=> b!86003 d!22585))

(declare-fun d!22587 () Bool)

(assert (=> d!22587 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3654 () Bool)

(assert (= bs!3654 d!22587))

(assert (=> bs!3654 m!90555))

(declare-fun m!91337 () Bool)

(assert (=> bs!3654 m!91337))

(assert (=> b!86003 d!22587))

(declare-fun d!22589 () Bool)

(declare-fun c!14127 () Bool)

(assert (=> d!22589 (= c!14127 (and ((_ is Cons!1521) (toList!740 lt!40415)) (= (_1!1114 (h!2112 (toList!740 lt!40415))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56321 () Option!144)

(assert (=> d!22589 (= (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000) e!56321)))

(declare-fun b!86441 () Bool)

(declare-fun e!56322 () Option!144)

(assert (=> b!86441 (= e!56322 None!142)))

(declare-fun b!86438 () Bool)

(assert (=> b!86438 (= e!56321 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40415)))))))

(declare-fun b!86440 () Bool)

(assert (=> b!86440 (= e!56322 (getValueByKey!138 (t!5237 (toList!740 lt!40415)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86439 () Bool)

(assert (=> b!86439 (= e!56321 e!56322)))

(declare-fun c!14128 () Bool)

(assert (=> b!86439 (= c!14128 (and ((_ is Cons!1521) (toList!740 lt!40415)) (not (= (_1!1114 (h!2112 (toList!740 lt!40415))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22589 c!14127) b!86438))

(assert (= (and d!22589 (not c!14127)) b!86439))

(assert (= (and b!86439 c!14128) b!86440))

(assert (= (and b!86439 (not c!14128)) b!86441))

(declare-fun m!91339 () Bool)

(assert (=> b!86440 m!91339))

(assert (=> b!86003 d!22589))

(declare-fun d!22591 () Bool)

(declare-fun lt!41006 () Bool)

(assert (=> d!22591 (= lt!41006 (select (content!89 (t!5237 (toList!740 lt!40484))) lt!40140))))

(declare-fun e!56323 () Bool)

(assert (=> d!22591 (= lt!41006 e!56323)))

(declare-fun res!44431 () Bool)

(assert (=> d!22591 (=> (not res!44431) (not e!56323))))

(assert (=> d!22591 (= res!44431 ((_ is Cons!1521) (t!5237 (toList!740 lt!40484))))))

(assert (=> d!22591 (= (contains!753 (t!5237 (toList!740 lt!40484)) lt!40140) lt!41006)))

(declare-fun b!86442 () Bool)

(declare-fun e!56324 () Bool)

(assert (=> b!86442 (= e!56323 e!56324)))

(declare-fun res!44432 () Bool)

(assert (=> b!86442 (=> res!44432 e!56324)))

(assert (=> b!86442 (= res!44432 (= (h!2112 (t!5237 (toList!740 lt!40484))) lt!40140))))

(declare-fun b!86443 () Bool)

(assert (=> b!86443 (= e!56324 (contains!753 (t!5237 (t!5237 (toList!740 lt!40484))) lt!40140))))

(assert (= (and d!22591 res!44431) b!86442))

(assert (= (and b!86442 (not res!44432)) b!86443))

(declare-fun m!91341 () Bool)

(assert (=> d!22591 m!91341))

(declare-fun m!91343 () Bool)

(assert (=> d!22591 m!91343))

(declare-fun m!91345 () Bool)

(assert (=> b!86443 m!91345))

(assert (=> b!86086 d!22591))

(declare-fun d!22593 () Bool)

(assert (=> d!22593 (= (inRange!0 (ite c!14021 (index!3121 lt!40825) (index!3124 lt!40825)) (mask!6364 newMap!16)) (and (bvsge (ite c!14021 (index!3121 lt!40825) (index!3124 lt!40825)) #b00000000000000000000000000000000) (bvslt (ite c!14021 (index!3121 lt!40825) (index!3124 lt!40825)) (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8200 d!22593))

(assert (=> b!86002 d!22373))

(assert (=> b!86002 d!22375))

(declare-fun b!86444 () Bool)

(declare-fun res!44434 () Bool)

(declare-fun e!56325 () Bool)

(assert (=> b!86444 (=> (not res!44434) (not e!56325))))

(assert (=> b!86444 (= res!44434 (and (= (size!2152 (_values!2320 (_2!1113 lt!40354))) (bvadd (mask!6364 (_2!1113 lt!40354)) #b00000000000000000000000000000001)) (= (size!2151 (_keys!4008 (_2!1113 lt!40354))) (size!2152 (_values!2320 (_2!1113 lt!40354)))) (bvsge (_size!426 (_2!1113 lt!40354)) #b00000000000000000000000000000000) (bvsle (_size!426 (_2!1113 lt!40354)) (bvadd (mask!6364 (_2!1113 lt!40354)) #b00000000000000000000000000000001))))))

(declare-fun b!86445 () Bool)

(declare-fun res!44435 () Bool)

(assert (=> b!86445 (=> (not res!44435) (not e!56325))))

(assert (=> b!86445 (= res!44435 (bvsge (size!2157 (_2!1113 lt!40354)) (_size!426 (_2!1113 lt!40354))))))

(declare-fun d!22595 () Bool)

(declare-fun res!44433 () Bool)

(assert (=> d!22595 (=> (not res!44433) (not e!56325))))

(assert (=> d!22595 (= res!44433 (validMask!0 (mask!6364 (_2!1113 lt!40354))))))

(assert (=> d!22595 (= (simpleValid!58 (_2!1113 lt!40354)) e!56325)))

(declare-fun b!86446 () Bool)

(declare-fun res!44436 () Bool)

(assert (=> b!86446 (=> (not res!44436) (not e!56325))))

(assert (=> b!86446 (= res!44436 (= (size!2157 (_2!1113 lt!40354)) (bvadd (_size!426 (_2!1113 lt!40354)) (bvsdiv (bvadd (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86447 () Bool)

(assert (=> b!86447 (= e!56325 (and (bvsge (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000011) (bvsge (_vacant!426 (_2!1113 lt!40354)) #b00000000000000000000000000000000)))))

(assert (= (and d!22595 res!44433) b!86444))

(assert (= (and b!86444 res!44434) b!86445))

(assert (= (and b!86445 res!44435) b!86446))

(assert (= (and b!86446 res!44436) b!86447))

(declare-fun m!91347 () Bool)

(assert (=> b!86445 m!91347))

(declare-fun m!91349 () Bool)

(assert (=> d!22595 m!91349))

(assert (=> b!86446 m!91347))

(assert (=> d!22249 d!22595))

(declare-fun lt!41007 () Bool)

(declare-fun d!22597 () Bool)

(assert (=> d!22597 (= lt!41007 (select (content!89 (toList!740 lt!40843)) (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56326 () Bool)

(assert (=> d!22597 (= lt!41007 e!56326)))

(declare-fun res!44437 () Bool)

(assert (=> d!22597 (=> (not res!44437) (not e!56326))))

(assert (=> d!22597 (= res!44437 ((_ is Cons!1521) (toList!740 lt!40843)))))

(assert (=> d!22597 (= (contains!753 (toList!740 lt!40843) (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!41007)))

(declare-fun b!86448 () Bool)

(declare-fun e!56327 () Bool)

(assert (=> b!86448 (= e!56326 e!56327)))

(declare-fun res!44438 () Bool)

(assert (=> b!86448 (=> res!44438 e!56327)))

(assert (=> b!86448 (= res!44438 (= (h!2112 (toList!740 lt!40843)) (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86449 () Bool)

(assert (=> b!86449 (= e!56327 (contains!753 (t!5237 (toList!740 lt!40843)) (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22597 res!44437) b!86448))

(assert (= (and b!86448 (not res!44438)) b!86449))

(declare-fun m!91351 () Bool)

(assert (=> d!22597 m!91351))

(declare-fun m!91353 () Bool)

(assert (=> d!22597 m!91353))

(declare-fun m!91355 () Bool)

(assert (=> b!86449 m!91355))

(assert (=> b!86079 d!22597))

(declare-fun d!22599 () Bool)

(declare-fun lt!41008 () Bool)

(assert (=> d!22599 (= lt!41008 (select (content!89 (toList!740 lt!40885)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun e!56328 () Bool)

(assert (=> d!22599 (= lt!41008 e!56328)))

(declare-fun res!44439 () Bool)

(assert (=> d!22599 (=> (not res!44439) (not e!56328))))

(assert (=> d!22599 (= res!44439 ((_ is Cons!1521) (toList!740 lt!40885)))))

(assert (=> d!22599 (= (contains!753 (toList!740 lt!40885) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!41008)))

(declare-fun b!86450 () Bool)

(declare-fun e!56329 () Bool)

(assert (=> b!86450 (= e!56328 e!56329)))

(declare-fun res!44440 () Bool)

(assert (=> b!86450 (=> res!44440 e!56329)))

(assert (=> b!86450 (= res!44440 (= (h!2112 (toList!740 lt!40885)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun b!86451 () Bool)

(assert (=> b!86451 (= e!56329 (contains!753 (t!5237 (toList!740 lt!40885)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22599 res!44439) b!86450))

(assert (= (and b!86450 (not res!44440)) b!86451))

(declare-fun m!91357 () Bool)

(assert (=> d!22599 m!91357))

(declare-fun m!91359 () Bool)

(assert (=> d!22599 m!91359))

(declare-fun m!91361 () Bool)

(assert (=> b!86451 m!91361))

(assert (=> b!86103 d!22599))

(declare-fun c!14129 () Bool)

(declare-fun d!22601 () Bool)

(assert (=> d!22601 (= c!14129 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40151))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40151)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun e!56330 () Option!144)

(assert (=> d!22601 (= (getValueByKey!138 (t!5237 (toList!740 lt!40151)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56330)))

(declare-fun b!86455 () Bool)

(declare-fun e!56331 () Option!144)

(assert (=> b!86455 (= e!56331 None!142)))

(declare-fun b!86452 () Bool)

(assert (=> b!86452 (= e!56330 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40151))))))))

(declare-fun b!86454 () Bool)

(assert (=> b!86454 (= e!56331 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!86453 () Bool)

(assert (=> b!86453 (= e!56330 e!56331)))

(declare-fun c!14130 () Bool)

(assert (=> b!86453 (= c!14130 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40151))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40151)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(assert (= (and d!22601 c!14129) b!86452))

(assert (= (and d!22601 (not c!14129)) b!86453))

(assert (= (and b!86453 c!14130) b!86454))

(assert (= (and b!86453 (not c!14130)) b!86455))

(assert (=> b!86454 m!89403))

(declare-fun m!91363 () Bool)

(assert (=> b!86454 m!91363))

(assert (=> b!86041 d!22601))

(declare-fun d!22603 () Bool)

(declare-fun res!44441 () Bool)

(declare-fun e!56332 () Bool)

(assert (=> d!22603 (=> res!44441 e!56332)))

(assert (=> d!22603 (= res!44441 (and ((_ is Cons!1521) lt!40625) (= (_1!1114 (h!2112 lt!40625)) (_1!1114 lt!40140))))))

(assert (=> d!22603 (= (containsKey!142 lt!40625 (_1!1114 lt!40140)) e!56332)))

(declare-fun b!86456 () Bool)

(declare-fun e!56333 () Bool)

(assert (=> b!86456 (= e!56332 e!56333)))

(declare-fun res!44442 () Bool)

(assert (=> b!86456 (=> (not res!44442) (not e!56333))))

(assert (=> b!86456 (= res!44442 (and (or (not ((_ is Cons!1521) lt!40625)) (bvsle (_1!1114 (h!2112 lt!40625)) (_1!1114 lt!40140))) ((_ is Cons!1521) lt!40625) (bvslt (_1!1114 (h!2112 lt!40625)) (_1!1114 lt!40140))))))

(declare-fun b!86457 () Bool)

(assert (=> b!86457 (= e!56333 (containsKey!142 (t!5237 lt!40625) (_1!1114 lt!40140)))))

(assert (= (and d!22603 (not res!44441)) b!86456))

(assert (= (and b!86456 res!44442) b!86457))

(declare-fun m!91365 () Bool)

(assert (=> b!86457 m!91365))

(assert (=> b!85792 d!22603))

(declare-fun d!22605 () Bool)

(declare-fun c!14131 () Bool)

(assert (=> d!22605 (= c!14131 (and ((_ is Cons!1521) (t!5237 lt!40475)) (= (_1!1114 (h!2112 (t!5237 lt!40475))) (_1!1114 lt!40153))))))

(declare-fun e!56334 () Option!144)

(assert (=> d!22605 (= (getValueByKey!138 (t!5237 lt!40475) (_1!1114 lt!40153)) e!56334)))

(declare-fun b!86461 () Bool)

(declare-fun e!56335 () Option!144)

(assert (=> b!86461 (= e!56335 None!142)))

(declare-fun b!86458 () Bool)

(assert (=> b!86458 (= e!56334 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40475)))))))

(declare-fun b!86460 () Bool)

(assert (=> b!86460 (= e!56335 (getValueByKey!138 (t!5237 (t!5237 lt!40475)) (_1!1114 lt!40153)))))

(declare-fun b!86459 () Bool)

(assert (=> b!86459 (= e!56334 e!56335)))

(declare-fun c!14132 () Bool)

(assert (=> b!86459 (= c!14132 (and ((_ is Cons!1521) (t!5237 lt!40475)) (not (= (_1!1114 (h!2112 (t!5237 lt!40475))) (_1!1114 lt!40153)))))))

(assert (= (and d!22605 c!14131) b!86458))

(assert (= (and d!22605 (not c!14131)) b!86459))

(assert (= (and b!86459 c!14132) b!86460))

(assert (= (and b!86459 (not c!14132)) b!86461))

(declare-fun m!91367 () Bool)

(assert (=> b!86460 m!91367))

(assert (=> b!85618 d!22605))

(declare-fun bm!8230 () Bool)

(declare-fun call!8238 () ListLongMap!1449)

(declare-fun call!8239 () ListLongMap!1449)

(assert (=> bm!8230 (= call!8238 call!8239)))

(declare-fun bm!8231 () Bool)

(declare-fun call!8237 () ListLongMap!1449)

(assert (=> bm!8231 (= call!8237 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))))))

(declare-fun b!86462 () Bool)

(declare-fun e!56345 () Unit!2510)

(declare-fun Unit!2559 () Unit!2510)

(assert (=> b!86462 (= e!56345 Unit!2559)))

(declare-fun b!86463 () Bool)

(declare-fun e!56347 () Bool)

(assert (=> b!86463 (= e!56347 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun b!86464 () Bool)

(declare-fun e!56337 () Bool)

(declare-fun lt!41021 () ListLongMap!1449)

(assert (=> b!86464 (= e!56337 (= (apply!82 lt!41021 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 (_2!1113 lt!40354))))))

(declare-fun b!86465 () Bool)

(declare-fun c!14138 () Bool)

(assert (=> b!86465 (= c!14138 (and (not (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56341 () ListLongMap!1449)

(declare-fun e!56346 () ListLongMap!1449)

(assert (=> b!86465 (= e!56341 e!56346)))

(declare-fun d!22607 () Bool)

(declare-fun e!56338 () Bool)

(assert (=> d!22607 e!56338))

(declare-fun res!44447 () Bool)

(assert (=> d!22607 (=> (not res!44447) (not e!56338))))

(assert (=> d!22607 (= res!44447 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))))

(declare-fun lt!41030 () ListLongMap!1449)

(assert (=> d!22607 (= lt!41021 lt!41030)))

(declare-fun lt!41013 () Unit!2510)

(assert (=> d!22607 (= lt!41013 e!56345)))

(declare-fun c!14134 () Bool)

(assert (=> d!22607 (= c!14134 e!56347)))

(declare-fun res!44450 () Bool)

(assert (=> d!22607 (=> (not res!44450) (not e!56347))))

(assert (=> d!22607 (= res!44450 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(declare-fun e!56340 () ListLongMap!1449)

(assert (=> d!22607 (= lt!41030 e!56340)))

(declare-fun c!14136 () Bool)

(assert (=> d!22607 (= c!14136 (and (not (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22607 (validMask!0 (mask!6364 (_2!1113 lt!40354)))))

(assert (=> d!22607 (= (getCurrentListMap!426 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))) lt!41021)))

(declare-fun b!86466 () Bool)

(declare-fun lt!41011 () Unit!2510)

(assert (=> b!86466 (= e!56345 lt!41011)))

(declare-fun lt!41017 () ListLongMap!1449)

(assert (=> b!86466 (= lt!41017 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))))))

(declare-fun lt!41014 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41014 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41018 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41018 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000))))

(declare-fun lt!41029 () Unit!2510)

(assert (=> b!86466 (= lt!41029 (addStillContains!58 lt!41017 lt!41014 (zeroValue!2229 (_2!1113 lt!40354)) lt!41018))))

(assert (=> b!86466 (contains!752 (+!108 lt!41017 (tuple2!2207 lt!41014 (zeroValue!2229 (_2!1113 lt!40354)))) lt!41018)))

(declare-fun lt!41028 () Unit!2510)

(assert (=> b!86466 (= lt!41028 lt!41029)))

(declare-fun lt!41010 () ListLongMap!1449)

(assert (=> b!86466 (= lt!41010 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))))))

(declare-fun lt!41027 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41027 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41022 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41022 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000))))

(declare-fun lt!41016 () Unit!2510)

(assert (=> b!86466 (= lt!41016 (addApplyDifferent!58 lt!41010 lt!41027 (minValue!2229 (_2!1113 lt!40354)) lt!41022))))

(assert (=> b!86466 (= (apply!82 (+!108 lt!41010 (tuple2!2207 lt!41027 (minValue!2229 (_2!1113 lt!40354)))) lt!41022) (apply!82 lt!41010 lt!41022))))

(declare-fun lt!41024 () Unit!2510)

(assert (=> b!86466 (= lt!41024 lt!41016)))

(declare-fun lt!41012 () ListLongMap!1449)

(assert (=> b!86466 (= lt!41012 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))))))

(declare-fun lt!41023 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41023 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41025 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41025 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000))))

(declare-fun lt!41015 () Unit!2510)

(assert (=> b!86466 (= lt!41015 (addApplyDifferent!58 lt!41012 lt!41023 (zeroValue!2229 (_2!1113 lt!40354)) lt!41025))))

(assert (=> b!86466 (= (apply!82 (+!108 lt!41012 (tuple2!2207 lt!41023 (zeroValue!2229 (_2!1113 lt!40354)))) lt!41025) (apply!82 lt!41012 lt!41025))))

(declare-fun lt!41019 () Unit!2510)

(assert (=> b!86466 (= lt!41019 lt!41015)))

(declare-fun lt!41009 () ListLongMap!1449)

(assert (=> b!86466 (= lt!41009 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (_2!1113 lt!40354)) (_values!2320 (_2!1113 lt!40354)) (mask!6364 (_2!1113 lt!40354)) (extraKeys!2176 (_2!1113 lt!40354)) (zeroValue!2229 (_2!1113 lt!40354)) (minValue!2229 (_2!1113 lt!40354)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40354))))))

(declare-fun lt!41020 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41020 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41026 () (_ BitVec 64))

(assert (=> b!86466 (= lt!41026 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000))))

(assert (=> b!86466 (= lt!41011 (addApplyDifferent!58 lt!41009 lt!41020 (minValue!2229 (_2!1113 lt!40354)) lt!41026))))

(assert (=> b!86466 (= (apply!82 (+!108 lt!41009 (tuple2!2207 lt!41020 (minValue!2229 (_2!1113 lt!40354)))) lt!41026) (apply!82 lt!41009 lt!41026))))

(declare-fun b!86467 () Bool)

(assert (=> b!86467 (= e!56340 (+!108 call!8239 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (_2!1113 lt!40354)))))))

(declare-fun b!86468 () Bool)

(declare-fun e!56344 () Bool)

(declare-fun e!56343 () Bool)

(assert (=> b!86468 (= e!56344 e!56343)))

(declare-fun res!44445 () Bool)

(declare-fun call!8233 () Bool)

(assert (=> b!86468 (= res!44445 call!8233)))

(assert (=> b!86468 (=> (not res!44445) (not e!56343))))

(declare-fun bm!8232 () Bool)

(assert (=> bm!8232 (= call!8233 (contains!752 lt!41021 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86469 () Bool)

(declare-fun res!44443 () Bool)

(assert (=> b!86469 (=> (not res!44443) (not e!56338))))

(declare-fun e!56336 () Bool)

(assert (=> b!86469 (= res!44443 e!56336)))

(declare-fun c!14137 () Bool)

(assert (=> b!86469 (= c!14137 (not (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8233 () Bool)

(declare-fun call!8234 () ListLongMap!1449)

(declare-fun call!8236 () ListLongMap!1449)

(assert (=> bm!8233 (= call!8234 call!8236)))

(declare-fun b!86470 () Bool)

(assert (=> b!86470 (= e!56346 call!8234)))

(declare-fun b!86471 () Bool)

(declare-fun e!56342 () Bool)

(declare-fun e!56348 () Bool)

(assert (=> b!86471 (= e!56342 e!56348)))

(declare-fun res!44444 () Bool)

(assert (=> b!86471 (=> (not res!44444) (not e!56348))))

(assert (=> b!86471 (= res!44444 (contains!752 lt!41021 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(assert (=> b!86471 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(declare-fun b!86472 () Bool)

(assert (=> b!86472 (= e!56344 (not call!8233))))

(declare-fun b!86473 () Bool)

(assert (=> b!86473 (= e!56341 call!8238)))

(declare-fun b!86474 () Bool)

(declare-fun call!8235 () Bool)

(assert (=> b!86474 (= e!56336 (not call!8235))))

(declare-fun b!86475 () Bool)

(assert (=> b!86475 (= e!56336 e!56337)))

(declare-fun res!44448 () Bool)

(assert (=> b!86475 (= res!44448 call!8235)))

(assert (=> b!86475 (=> (not res!44448) (not e!56337))))

(declare-fun b!86476 () Bool)

(assert (=> b!86476 (= e!56343 (= (apply!82 lt!41021 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 (_2!1113 lt!40354))))))

(declare-fun b!86477 () Bool)

(declare-fun res!44451 () Bool)

(assert (=> b!86477 (=> (not res!44451) (not e!56338))))

(assert (=> b!86477 (= res!44451 e!56342)))

(declare-fun res!44446 () Bool)

(assert (=> b!86477 (=> res!44446 e!56342)))

(declare-fun e!56339 () Bool)

(assert (=> b!86477 (= res!44446 (not e!56339))))

(declare-fun res!44449 () Bool)

(assert (=> b!86477 (=> (not res!44449) (not e!56339))))

(assert (=> b!86477 (= res!44449 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(declare-fun bm!8234 () Bool)

(assert (=> bm!8234 (= call!8235 (contains!752 lt!41021 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86478 () Bool)

(assert (=> b!86478 (= e!56338 e!56344)))

(declare-fun c!14133 () Bool)

(assert (=> b!86478 (= c!14133 (not (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86479 () Bool)

(assert (=> b!86479 (= e!56339 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun b!86480 () Bool)

(assert (=> b!86480 (= e!56348 (= (apply!82 lt!41021 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (_values!2320 (_2!1113 lt!40354))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 (_2!1113 lt!40354)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86480 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (_values!2320 (_2!1113 lt!40354)))))))

(assert (=> b!86480 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(declare-fun bm!8235 () Bool)

(declare-fun c!14135 () Bool)

(assert (=> bm!8235 (= call!8239 (+!108 (ite c!14136 call!8237 (ite c!14135 call!8236 call!8234)) (ite (or c!14136 c!14135) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (_2!1113 lt!40354))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (_2!1113 lt!40354))))))))

(declare-fun bm!8236 () Bool)

(assert (=> bm!8236 (= call!8236 call!8237)))

(declare-fun b!86481 () Bool)

(assert (=> b!86481 (= e!56346 call!8238)))

(declare-fun b!86482 () Bool)

(assert (=> b!86482 (= e!56340 e!56341)))

(assert (=> b!86482 (= c!14135 (and (not (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 (_2!1113 lt!40354)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!22607 c!14136) b!86467))

(assert (= (and d!22607 (not c!14136)) b!86482))

(assert (= (and b!86482 c!14135) b!86473))

(assert (= (and b!86482 (not c!14135)) b!86465))

(assert (= (and b!86465 c!14138) b!86481))

(assert (= (and b!86465 (not c!14138)) b!86470))

(assert (= (or b!86481 b!86470) bm!8233))

(assert (= (or b!86473 bm!8233) bm!8236))

(assert (= (or b!86473 b!86481) bm!8230))

(assert (= (or b!86467 bm!8236) bm!8231))

(assert (= (or b!86467 bm!8230) bm!8235))

(assert (= (and d!22607 res!44450) b!86463))

(assert (= (and d!22607 c!14134) b!86466))

(assert (= (and d!22607 (not c!14134)) b!86462))

(assert (= (and d!22607 res!44447) b!86477))

(assert (= (and b!86477 res!44449) b!86479))

(assert (= (and b!86477 (not res!44446)) b!86471))

(assert (= (and b!86471 res!44444) b!86480))

(assert (= (and b!86477 res!44451) b!86469))

(assert (= (and b!86469 c!14137) b!86475))

(assert (= (and b!86469 (not c!14137)) b!86474))

(assert (= (and b!86475 res!44448) b!86464))

(assert (= (or b!86475 b!86474) bm!8234))

(assert (= (and b!86469 res!44443) b!86478))

(assert (= (and b!86478 c!14133) b!86468))

(assert (= (and b!86478 (not c!14133)) b!86472))

(assert (= (and b!86468 res!44445) b!86476))

(assert (= (or b!86468 b!86472) bm!8232))

(declare-fun b_lambda!3825 () Bool)

(assert (=> (not b_lambda!3825) (not b!86480)))

(declare-fun t!5256 () Bool)

(declare-fun tb!1697 () Bool)

(assert (=> (and b!85121 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 (_2!1113 lt!40354))) t!5256) tb!1697))

(declare-fun result!2927 () Bool)

(assert (=> tb!1697 (= result!2927 tp_is_empty!2533)))

(assert (=> b!86480 t!5256))

(declare-fun b_and!5209 () Bool)

(assert (= b_and!5205 (and (=> t!5256 result!2927) b_and!5209)))

(declare-fun t!5258 () Bool)

(declare-fun tb!1699 () Bool)

(assert (=> (and b!85118 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (_2!1113 lt!40354))) t!5258) tb!1699))

(declare-fun result!2929 () Bool)

(assert (= result!2929 result!2927))

(assert (=> b!86480 t!5258))

(declare-fun b_and!5211 () Bool)

(assert (= b_and!5207 (and (=> t!5258 result!2929) b_and!5211)))

(assert (=> b!86466 m!90933))

(declare-fun m!91369 () Bool)

(assert (=> b!86466 m!91369))

(declare-fun m!91371 () Bool)

(assert (=> b!86466 m!91371))

(declare-fun m!91373 () Bool)

(assert (=> b!86466 m!91373))

(declare-fun m!91375 () Bool)

(assert (=> b!86466 m!91375))

(declare-fun m!91377 () Bool)

(assert (=> b!86466 m!91377))

(declare-fun m!91379 () Bool)

(assert (=> b!86466 m!91379))

(assert (=> b!86466 m!91373))

(declare-fun m!91381 () Bool)

(assert (=> b!86466 m!91381))

(declare-fun m!91383 () Bool)

(assert (=> b!86466 m!91383))

(declare-fun m!91385 () Bool)

(assert (=> b!86466 m!91385))

(assert (=> b!86466 m!91381))

(assert (=> b!86466 m!91385))

(declare-fun m!91387 () Bool)

(assert (=> b!86466 m!91387))

(declare-fun m!91389 () Bool)

(assert (=> b!86466 m!91389))

(declare-fun m!91391 () Bool)

(assert (=> b!86466 m!91391))

(declare-fun m!91393 () Bool)

(assert (=> b!86466 m!91393))

(declare-fun m!91395 () Bool)

(assert (=> b!86466 m!91395))

(declare-fun m!91397 () Bool)

(assert (=> b!86466 m!91397))

(declare-fun m!91399 () Bool)

(assert (=> b!86466 m!91399))

(assert (=> b!86466 m!91391))

(declare-fun m!91401 () Bool)

(assert (=> bm!8235 m!91401))

(assert (=> b!86471 m!90933))

(assert (=> b!86471 m!90933))

(declare-fun m!91403 () Bool)

(assert (=> b!86471 m!91403))

(declare-fun m!91405 () Bool)

(assert (=> bm!8234 m!91405))

(assert (=> d!22607 m!91349))

(declare-fun m!91407 () Bool)

(assert (=> b!86464 m!91407))

(declare-fun m!91409 () Bool)

(assert (=> bm!8232 m!91409))

(assert (=> b!86479 m!90933))

(assert (=> b!86479 m!90933))

(assert (=> b!86479 m!90941))

(assert (=> bm!8231 m!91379))

(assert (=> b!86463 m!90933))

(assert (=> b!86463 m!90933))

(assert (=> b!86463 m!90941))

(declare-fun m!91411 () Bool)

(assert (=> b!86467 m!91411))

(assert (=> b!86480 m!90933))

(declare-fun m!91413 () Bool)

(assert (=> b!86480 m!91413))

(declare-fun m!91415 () Bool)

(assert (=> b!86480 m!91415))

(assert (=> b!86480 m!90933))

(declare-fun m!91417 () Bool)

(assert (=> b!86480 m!91417))

(assert (=> b!86480 m!91415))

(assert (=> b!86480 m!91413))

(declare-fun m!91419 () Bool)

(assert (=> b!86480 m!91419))

(declare-fun m!91421 () Bool)

(assert (=> b!86476 m!91421))

(assert (=> d!22175 d!22607))

(declare-fun d!22609 () Bool)

(declare-fun c!14139 () Bool)

(assert (=> d!22609 (= c!14139 (and ((_ is Cons!1521) (t!5237 lt!40446)) (= (_1!1114 (h!2112 (t!5237 lt!40446))) (_1!1114 lt!40140))))))

(declare-fun e!56349 () Option!144)

(assert (=> d!22609 (= (getValueByKey!138 (t!5237 lt!40446) (_1!1114 lt!40140)) e!56349)))

(declare-fun b!86486 () Bool)

(declare-fun e!56350 () Option!144)

(assert (=> b!86486 (= e!56350 None!142)))

(declare-fun b!86483 () Bool)

(assert (=> b!86483 (= e!56349 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40446)))))))

(declare-fun b!86485 () Bool)

(assert (=> b!86485 (= e!56350 (getValueByKey!138 (t!5237 (t!5237 lt!40446)) (_1!1114 lt!40140)))))

(declare-fun b!86484 () Bool)

(assert (=> b!86484 (= e!56349 e!56350)))

(declare-fun c!14140 () Bool)

(assert (=> b!86484 (= c!14140 (and ((_ is Cons!1521) (t!5237 lt!40446)) (not (= (_1!1114 (h!2112 (t!5237 lt!40446))) (_1!1114 lt!40140)))))))

(assert (= (and d!22609 c!14139) b!86483))

(assert (= (and d!22609 (not c!14139)) b!86484))

(assert (= (and b!86484 c!14140) b!86485))

(assert (= (and b!86484 (not c!14140)) b!86486))

(declare-fun m!91423 () Bool)

(assert (=> b!86485 m!91423))

(assert (=> b!85783 d!22609))

(declare-fun d!22611 () Bool)

(declare-fun res!44452 () Bool)

(declare-fun e!56351 () Bool)

(assert (=> d!22611 (=> res!44452 e!56351)))

(assert (=> d!22611 (= res!44452 (and ((_ is Cons!1521) lt!40510) (= (_1!1114 (h!2112 lt!40510)) (_1!1114 lt!40153))))))

(assert (=> d!22611 (= (containsKey!142 lt!40510 (_1!1114 lt!40153)) e!56351)))

(declare-fun b!86487 () Bool)

(declare-fun e!56352 () Bool)

(assert (=> b!86487 (= e!56351 e!56352)))

(declare-fun res!44453 () Bool)

(assert (=> b!86487 (=> (not res!44453) (not e!56352))))

(assert (=> b!86487 (= res!44453 (and (or (not ((_ is Cons!1521) lt!40510)) (bvsle (_1!1114 (h!2112 lt!40510)) (_1!1114 lt!40153))) ((_ is Cons!1521) lt!40510) (bvslt (_1!1114 (h!2112 lt!40510)) (_1!1114 lt!40153))))))

(declare-fun b!86488 () Bool)

(assert (=> b!86488 (= e!56352 (containsKey!142 (t!5237 lt!40510) (_1!1114 lt!40153)))))

(assert (= (and d!22611 (not res!44452)) b!86487))

(assert (= (and b!86487 res!44453) b!86488))

(declare-fun m!91425 () Bool)

(assert (=> b!86488 m!91425))

(assert (=> b!85627 d!22611))

(declare-fun d!22613 () Bool)

(declare-fun c!14141 () Bool)

(assert (=> d!22613 (= c!14141 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40443))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40443)))) (_1!1114 lt!40143))))))

(declare-fun e!56353 () Option!144)

(assert (=> d!22613 (= (getValueByKey!138 (t!5237 (toList!740 lt!40443)) (_1!1114 lt!40143)) e!56353)))

(declare-fun b!86492 () Bool)

(declare-fun e!56354 () Option!144)

(assert (=> b!86492 (= e!56354 None!142)))

(declare-fun b!86489 () Bool)

(assert (=> b!86489 (= e!56353 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40443))))))))

(declare-fun b!86491 () Bool)

(assert (=> b!86491 (= e!56354 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40443))) (_1!1114 lt!40143)))))

(declare-fun b!86490 () Bool)

(assert (=> b!86490 (= e!56353 e!56354)))

(declare-fun c!14142 () Bool)

(assert (=> b!86490 (= c!14142 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40443))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40443)))) (_1!1114 lt!40143)))))))

(assert (= (and d!22613 c!14141) b!86489))

(assert (= (and d!22613 (not c!14141)) b!86490))

(assert (= (and b!86490 c!14142) b!86491))

(assert (= (and b!86490 (not c!14142)) b!86492))

(declare-fun m!91427 () Bool)

(assert (=> b!86491 m!91427))

(assert (=> b!85858 d!22613))

(declare-fun d!22615 () Bool)

(assert (=> d!22615 (= (apply!82 lt!40518 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1204 (getValueByKey!138 (toList!740 lt!40518) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!3655 () Bool)

(assert (= bs!3655 d!22615))

(assert (=> bs!3655 m!89941))

(declare-fun m!91429 () Bool)

(assert (=> bs!3655 m!91429))

(assert (=> bs!3655 m!91429))

(declare-fun m!91431 () Bool)

(assert (=> bs!3655 m!91431))

(assert (=> b!85638 d!22615))

(declare-fun d!22617 () Bool)

(declare-fun c!14143 () Bool)

(assert (=> d!22617 (= c!14143 ((_ is ValueCellFull!923) (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!56355 () V!3025)

(assert (=> d!22617 (= (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56355)))

(declare-fun b!86493 () Bool)

(assert (=> b!86493 (= e!56355 (get!1202 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86494 () Bool)

(assert (=> b!86494 (= e!56355 (get!1203 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22617 c!14143) b!86493))

(assert (= (and d!22617 (not c!14143)) b!86494))

(assert (=> b!86493 m!89937))

(assert (=> b!86493 m!89407))

(declare-fun m!91433 () Bool)

(assert (=> b!86493 m!91433))

(assert (=> b!86494 m!89937))

(assert (=> b!86494 m!89407))

(declare-fun m!91435 () Bool)

(assert (=> b!86494 m!91435))

(assert (=> b!85638 d!22617))

(declare-fun d!22619 () Bool)

(declare-fun e!56357 () Bool)

(assert (=> d!22619 e!56357))

(declare-fun res!44454 () Bool)

(assert (=> d!22619 (=> res!44454 e!56357)))

(declare-fun lt!41031 () Bool)

(assert (=> d!22619 (= res!44454 (not lt!41031))))

(declare-fun lt!41034 () Bool)

(assert (=> d!22619 (= lt!41031 lt!41034)))

(declare-fun lt!41032 () Unit!2510)

(declare-fun e!56356 () Unit!2510)

(assert (=> d!22619 (= lt!41032 e!56356)))

(declare-fun c!14144 () Bool)

(assert (=> d!22619 (= c!14144 lt!41034)))

(assert (=> d!22619 (= lt!41034 (containsKey!142 (toList!740 lt!40865) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22619 (= (contains!752 lt!40865 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41031)))

(declare-fun b!86495 () Bool)

(declare-fun lt!41033 () Unit!2510)

(assert (=> b!86495 (= e!56356 lt!41033)))

(assert (=> b!86495 (= lt!41033 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40865) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86495 (isDefined!92 (getValueByKey!138 (toList!740 lt!40865) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86496 () Bool)

(declare-fun Unit!2560 () Unit!2510)

(assert (=> b!86496 (= e!56356 Unit!2560)))

(declare-fun b!86497 () Bool)

(assert (=> b!86497 (= e!56357 (isDefined!92 (getValueByKey!138 (toList!740 lt!40865) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22619 c!14144) b!86495))

(assert (= (and d!22619 (not c!14144)) b!86496))

(assert (= (and d!22619 (not res!44454)) b!86497))

(declare-fun m!91437 () Bool)

(assert (=> d!22619 m!91437))

(declare-fun m!91439 () Bool)

(assert (=> b!86495 m!91439))

(assert (=> b!86495 m!90765))

(assert (=> b!86495 m!90765))

(declare-fun m!91441 () Bool)

(assert (=> b!86495 m!91441))

(assert (=> b!86497 m!90765))

(assert (=> b!86497 m!90765))

(assert (=> b!86497 m!91441))

(assert (=> d!22345 d!22619))

(declare-fun d!22621 () Bool)

(declare-fun c!14145 () Bool)

(assert (=> d!22621 (= c!14145 (and ((_ is Cons!1521) lt!40864) (= (_1!1114 (h!2112 lt!40864)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56358 () Option!144)

(assert (=> d!22621 (= (getValueByKey!138 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56358)))

(declare-fun b!86501 () Bool)

(declare-fun e!56359 () Option!144)

(assert (=> b!86501 (= e!56359 None!142)))

(declare-fun b!86498 () Bool)

(assert (=> b!86498 (= e!56358 (Some!143 (_2!1114 (h!2112 lt!40864))))))

(declare-fun b!86500 () Bool)

(assert (=> b!86500 (= e!56359 (getValueByKey!138 (t!5237 lt!40864) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86499 () Bool)

(assert (=> b!86499 (= e!56358 e!56359)))

(declare-fun c!14146 () Bool)

(assert (=> b!86499 (= c!14146 (and ((_ is Cons!1521) lt!40864) (not (= (_1!1114 (h!2112 lt!40864)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22621 c!14145) b!86498))

(assert (= (and d!22621 (not c!14145)) b!86499))

(assert (= (and b!86499 c!14146) b!86500))

(assert (= (and b!86499 (not c!14146)) b!86501))

(declare-fun m!91443 () Bool)

(assert (=> b!86500 m!91443))

(assert (=> d!22345 d!22621))

(declare-fun d!22623 () Bool)

(assert (=> d!22623 (= (getValueByKey!138 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41035 () Unit!2510)

(assert (=> d!22623 (= lt!41035 (choose!507 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56360 () Bool)

(assert (=> d!22623 e!56360))

(declare-fun res!44455 () Bool)

(assert (=> d!22623 (=> (not res!44455) (not e!56360))))

(assert (=> d!22623 (= res!44455 (isStrictlySorted!293 lt!40864))))

(assert (=> d!22623 (= (lemmaContainsTupThenGetReturnValue!58 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41035)))

(declare-fun b!86502 () Bool)

(declare-fun res!44456 () Bool)

(assert (=> b!86502 (=> (not res!44456) (not e!56360))))

(assert (=> b!86502 (= res!44456 (containsKey!142 lt!40864 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86503 () Bool)

(assert (=> b!86503 (= e!56360 (contains!753 lt!40864 (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22623 res!44455) b!86502))

(assert (= (and b!86502 res!44456) b!86503))

(assert (=> d!22623 m!90759))

(declare-fun m!91445 () Bool)

(assert (=> d!22623 m!91445))

(declare-fun m!91447 () Bool)

(assert (=> d!22623 m!91447))

(declare-fun m!91449 () Bool)

(assert (=> b!86502 m!91449))

(declare-fun m!91451 () Bool)

(assert (=> b!86503 m!91451))

(assert (=> d!22345 d!22623))

(declare-fun b!86504 () Bool)

(declare-fun e!56363 () List!1525)

(assert (=> b!86504 (= e!56363 (insertStrictlySorted!61 (t!5237 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun c!14149 () Bool)

(declare-fun c!14150 () Bool)

(declare-fun b!86505 () Bool)

(assert (=> b!86505 (= e!56363 (ite c!14149 (t!5237 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (ite c!14150 (Cons!1521 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (t!5237 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) Nil!1522)))))

(declare-fun b!86506 () Bool)

(declare-fun e!56364 () List!1525)

(declare-fun call!8241 () List!1525)

(assert (=> b!86506 (= e!56364 call!8241)))

(declare-fun b!86507 () Bool)

(declare-fun e!56361 () List!1525)

(declare-fun call!8240 () List!1525)

(assert (=> b!86507 (= e!56361 call!8240)))

(declare-fun b!86508 () Bool)

(assert (=> b!86508 (= c!14150 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (bvsgt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56365 () List!1525)

(assert (=> b!86508 (= e!56361 e!56365)))

(declare-fun b!86509 () Bool)

(declare-fun res!44457 () Bool)

(declare-fun e!56362 () Bool)

(assert (=> b!86509 (=> (not res!44457) (not e!56362))))

(declare-fun lt!41036 () List!1525)

(assert (=> b!86509 (= res!44457 (containsKey!142 lt!41036 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86511 () Bool)

(declare-fun call!8242 () List!1525)

(assert (=> b!86511 (= e!56365 call!8242)))

(declare-fun b!86512 () Bool)

(assert (=> b!86512 (= e!56362 (contains!753 lt!41036 (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun c!14148 () Bool)

(declare-fun bm!8237 () Bool)

(assert (=> bm!8237 (= call!8241 ($colon$colon!71 e!56363 (ite c!14148 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14147 () Bool)

(assert (=> bm!8237 (= c!14147 c!14148)))

(declare-fun bm!8238 () Bool)

(assert (=> bm!8238 (= call!8242 call!8240)))

(declare-fun b!86510 () Bool)

(assert (=> b!86510 (= e!56365 call!8242)))

(declare-fun d!22625 () Bool)

(assert (=> d!22625 e!56362))

(declare-fun res!44458 () Bool)

(assert (=> d!22625 (=> (not res!44458) (not e!56362))))

(assert (=> d!22625 (= res!44458 (isStrictlySorted!293 lt!41036))))

(assert (=> d!22625 (= lt!41036 e!56364)))

(assert (=> d!22625 (= c!14148 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22625 (isStrictlySorted!293 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22625 (= (insertStrictlySorted!61 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41036)))

(declare-fun b!86513 () Bool)

(assert (=> b!86513 (= e!56364 e!56361)))

(assert (=> b!86513 (= c!14149 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8239 () Bool)

(assert (=> bm!8239 (= call!8240 call!8241)))

(assert (= (and d!22625 c!14148) b!86506))

(assert (= (and d!22625 (not c!14148)) b!86513))

(assert (= (and b!86513 c!14149) b!86507))

(assert (= (and b!86513 (not c!14149)) b!86508))

(assert (= (and b!86508 c!14150) b!86511))

(assert (= (and b!86508 (not c!14150)) b!86510))

(assert (= (or b!86511 b!86510) bm!8238))

(assert (= (or b!86507 bm!8238) bm!8239))

(assert (= (or b!86506 bm!8239) bm!8237))

(assert (= (and bm!8237 c!14147) b!86504))

(assert (= (and bm!8237 (not c!14147)) b!86505))

(assert (= (and d!22625 res!44458) b!86509))

(assert (= (and b!86509 res!44457) b!86512))

(declare-fun m!91453 () Bool)

(assert (=> d!22625 m!91453))

(declare-fun m!91455 () Bool)

(assert (=> d!22625 m!91455))

(declare-fun m!91457 () Bool)

(assert (=> b!86512 m!91457))

(declare-fun m!91459 () Bool)

(assert (=> b!86509 m!91459))

(declare-fun m!91461 () Bool)

(assert (=> b!86504 m!91461))

(declare-fun m!91463 () Bool)

(assert (=> bm!8237 m!91463))

(assert (=> d!22345 d!22625))

(declare-fun d!22627 () Bool)

(declare-fun res!44459 () Bool)

(declare-fun e!56366 () Bool)

(assert (=> d!22627 (=> res!44459 e!56366)))

(assert (=> d!22627 (= res!44459 (and ((_ is Cons!1521) (toList!740 lt!40471)) (= (_1!1114 (h!2112 (toList!740 lt!40471))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22627 (= (containsKey!142 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000) e!56366)))

(declare-fun b!86514 () Bool)

(declare-fun e!56367 () Bool)

(assert (=> b!86514 (= e!56366 e!56367)))

(declare-fun res!44460 () Bool)

(assert (=> b!86514 (=> (not res!44460) (not e!56367))))

(assert (=> b!86514 (= res!44460 (and (or (not ((_ is Cons!1521) (toList!740 lt!40471))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40471))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1521) (toList!740 lt!40471)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40471))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86515 () Bool)

(assert (=> b!86515 (= e!56367 (containsKey!142 (t!5237 (toList!740 lt!40471)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22627 (not res!44459)) b!86514))

(assert (= (and b!86514 res!44460) b!86515))

(declare-fun m!91465 () Bool)

(assert (=> b!86515 m!91465))

(assert (=> d!22209 d!22627))

(declare-fun d!22629 () Bool)

(declare-fun res!44461 () Bool)

(declare-fun e!56368 () Bool)

(assert (=> d!22629 (=> res!44461 e!56368)))

(assert (=> d!22629 (= res!44461 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))))) lt!40467)))))

(assert (=> d!22629 (= (containsKey!142 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467) e!56368)))

(declare-fun b!86516 () Bool)

(declare-fun e!56369 () Bool)

(assert (=> b!86516 (= e!56368 e!56369)))

(declare-fun res!44462 () Bool)

(assert (=> b!86516 (=> (not res!44462) (not e!56369))))

(assert (=> b!86516 (= res!44462 (and (or (not ((_ is Cons!1521) (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))))) (bvsle (_1!1114 (h!2112 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))))) lt!40467)) ((_ is Cons!1521) (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))))) lt!40467)))))

(declare-fun b!86517 () Bool)

(assert (=> b!86517 (= e!56369 (containsKey!142 (t!5237 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))) lt!40467))))

(assert (= (and d!22629 (not res!44461)) b!86516))

(assert (= (and b!86516 res!44462) b!86517))

(declare-fun m!91467 () Bool)

(assert (=> b!86517 m!91467))

(assert (=> d!22159 d!22629))

(declare-fun d!22631 () Bool)

(declare-fun e!56371 () Bool)

(assert (=> d!22631 e!56371))

(declare-fun res!44463 () Bool)

(assert (=> d!22631 (=> res!44463 e!56371)))

(declare-fun lt!41037 () Bool)

(assert (=> d!22631 (= res!44463 (not lt!41037))))

(declare-fun lt!41040 () Bool)

(assert (=> d!22631 (= lt!41037 lt!41040)))

(declare-fun lt!41038 () Unit!2510)

(declare-fun e!56370 () Unit!2510)

(assert (=> d!22631 (= lt!41038 e!56370)))

(declare-fun c!14151 () Bool)

(assert (=> d!22631 (= c!14151 lt!41040)))

(assert (=> d!22631 (= lt!41040 (containsKey!142 (toList!740 lt!40877) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22631 (= (contains!752 lt!40877 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41037)))

(declare-fun b!86518 () Bool)

(declare-fun lt!41039 () Unit!2510)

(assert (=> b!86518 (= e!56370 lt!41039)))

(assert (=> b!86518 (= lt!41039 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40877) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86518 (isDefined!92 (getValueByKey!138 (toList!740 lt!40877) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86519 () Bool)

(declare-fun Unit!2561 () Unit!2510)

(assert (=> b!86519 (= e!56370 Unit!2561)))

(declare-fun b!86520 () Bool)

(assert (=> b!86520 (= e!56371 (isDefined!92 (getValueByKey!138 (toList!740 lt!40877) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22631 c!14151) b!86518))

(assert (= (and d!22631 (not c!14151)) b!86519))

(assert (= (and d!22631 (not res!44463)) b!86520))

(declare-fun m!91469 () Bool)

(assert (=> d!22631 m!91469))

(declare-fun m!91471 () Bool)

(assert (=> b!86518 m!91471))

(assert (=> b!86518 m!90797))

(assert (=> b!86518 m!90797))

(declare-fun m!91473 () Bool)

(assert (=> b!86518 m!91473))

(assert (=> b!86520 m!90797))

(assert (=> b!86520 m!90797))

(assert (=> b!86520 m!91473))

(assert (=> d!22351 d!22631))

(declare-fun d!22633 () Bool)

(declare-fun c!14152 () Bool)

(assert (=> d!22633 (= c!14152 (and ((_ is Cons!1521) lt!40876) (= (_1!1114 (h!2112 lt!40876)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56372 () Option!144)

(assert (=> d!22633 (= (getValueByKey!138 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56372)))

(declare-fun b!86524 () Bool)

(declare-fun e!56373 () Option!144)

(assert (=> b!86524 (= e!56373 None!142)))

(declare-fun b!86521 () Bool)

(assert (=> b!86521 (= e!56372 (Some!143 (_2!1114 (h!2112 lt!40876))))))

(declare-fun b!86523 () Bool)

(assert (=> b!86523 (= e!56373 (getValueByKey!138 (t!5237 lt!40876) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86522 () Bool)

(assert (=> b!86522 (= e!56372 e!56373)))

(declare-fun c!14153 () Bool)

(assert (=> b!86522 (= c!14153 (and ((_ is Cons!1521) lt!40876) (not (= (_1!1114 (h!2112 lt!40876)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22633 c!14152) b!86521))

(assert (= (and d!22633 (not c!14152)) b!86522))

(assert (= (and b!86522 c!14153) b!86523))

(assert (= (and b!86522 (not c!14153)) b!86524))

(declare-fun m!91475 () Bool)

(assert (=> b!86523 m!91475))

(assert (=> d!22351 d!22633))

(declare-fun d!22635 () Bool)

(assert (=> d!22635 (= (getValueByKey!138 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41041 () Unit!2510)

(assert (=> d!22635 (= lt!41041 (choose!507 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56374 () Bool)

(assert (=> d!22635 e!56374))

(declare-fun res!44464 () Bool)

(assert (=> d!22635 (=> (not res!44464) (not e!56374))))

(assert (=> d!22635 (= res!44464 (isStrictlySorted!293 lt!40876))))

(assert (=> d!22635 (= (lemmaContainsTupThenGetReturnValue!58 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41041)))

(declare-fun b!86525 () Bool)

(declare-fun res!44465 () Bool)

(assert (=> b!86525 (=> (not res!44465) (not e!56374))))

(assert (=> b!86525 (= res!44465 (containsKey!142 lt!40876 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86526 () Bool)

(assert (=> b!86526 (= e!56374 (contains!753 lt!40876 (tuple2!2207 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22635 res!44464) b!86525))

(assert (= (and b!86525 res!44465) b!86526))

(assert (=> d!22635 m!90791))

(declare-fun m!91477 () Bool)

(assert (=> d!22635 m!91477))

(declare-fun m!91479 () Bool)

(assert (=> d!22635 m!91479))

(declare-fun m!91481 () Bool)

(assert (=> b!86525 m!91481))

(declare-fun m!91483 () Bool)

(assert (=> b!86526 m!91483))

(assert (=> d!22351 d!22635))

(declare-fun e!56377 () List!1525)

(declare-fun b!86527 () Bool)

(assert (=> b!86527 (= e!56377 (insertStrictlySorted!61 (t!5237 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86528 () Bool)

(declare-fun c!14156 () Bool)

(declare-fun c!14157 () Bool)

(assert (=> b!86528 (= e!56377 (ite c!14156 (t!5237 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (ite c!14157 (Cons!1521 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (t!5237 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) Nil!1522)))))

(declare-fun b!86529 () Bool)

(declare-fun e!56378 () List!1525)

(declare-fun call!8244 () List!1525)

(assert (=> b!86529 (= e!56378 call!8244)))

(declare-fun b!86530 () Bool)

(declare-fun e!56375 () List!1525)

(declare-fun call!8243 () List!1525)

(assert (=> b!86530 (= e!56375 call!8243)))

(declare-fun b!86531 () Bool)

(assert (=> b!86531 (= c!14157 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (bvsgt (_1!1114 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56379 () List!1525)

(assert (=> b!86531 (= e!56375 e!56379)))

(declare-fun b!86532 () Bool)

(declare-fun res!44466 () Bool)

(declare-fun e!56376 () Bool)

(assert (=> b!86532 (=> (not res!44466) (not e!56376))))

(declare-fun lt!41042 () List!1525)

(assert (=> b!86532 (= res!44466 (containsKey!142 lt!41042 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86534 () Bool)

(declare-fun call!8245 () List!1525)

(assert (=> b!86534 (= e!56379 call!8245)))

(declare-fun b!86535 () Bool)

(assert (=> b!86535 (= e!56376 (contains!753 lt!41042 (tuple2!2207 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8240 () Bool)

(declare-fun c!14155 () Bool)

(assert (=> bm!8240 (= call!8244 ($colon$colon!71 e!56377 (ite c!14155 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (tuple2!2207 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14154 () Bool)

(assert (=> bm!8240 (= c!14154 c!14155)))

(declare-fun bm!8241 () Bool)

(assert (=> bm!8241 (= call!8245 call!8243)))

(declare-fun b!86533 () Bool)

(assert (=> b!86533 (= e!56379 call!8245)))

(declare-fun d!22637 () Bool)

(assert (=> d!22637 e!56376))

(declare-fun res!44467 () Bool)

(assert (=> d!22637 (=> (not res!44467) (not e!56376))))

(assert (=> d!22637 (= res!44467 (isStrictlySorted!293 lt!41042))))

(assert (=> d!22637 (= lt!41042 e!56378)))

(assert (=> d!22637 (= c!14155 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22637 (isStrictlySorted!293 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22637 (= (insertStrictlySorted!61 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41042)))

(declare-fun b!86536 () Bool)

(assert (=> b!86536 (= e!56378 e!56375)))

(assert (=> b!86536 (= c!14156 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40150 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8242 () Bool)

(assert (=> bm!8242 (= call!8243 call!8244)))

(assert (= (and d!22637 c!14155) b!86529))

(assert (= (and d!22637 (not c!14155)) b!86536))

(assert (= (and b!86536 c!14156) b!86530))

(assert (= (and b!86536 (not c!14156)) b!86531))

(assert (= (and b!86531 c!14157) b!86534))

(assert (= (and b!86531 (not c!14157)) b!86533))

(assert (= (or b!86534 b!86533) bm!8241))

(assert (= (or b!86530 bm!8241) bm!8242))

(assert (= (or b!86529 bm!8242) bm!8240))

(assert (= (and bm!8240 c!14154) b!86527))

(assert (= (and bm!8240 (not c!14154)) b!86528))

(assert (= (and d!22637 res!44467) b!86532))

(assert (= (and b!86532 res!44466) b!86535))

(declare-fun m!91485 () Bool)

(assert (=> d!22637 m!91485))

(declare-fun m!91487 () Bool)

(assert (=> d!22637 m!91487))

(declare-fun m!91489 () Bool)

(assert (=> b!86535 m!91489))

(declare-fun m!91491 () Bool)

(assert (=> b!86532 m!91491))

(declare-fun m!91493 () Bool)

(assert (=> b!86527 m!91493))

(declare-fun m!91495 () Bool)

(assert (=> bm!8240 m!91495))

(assert (=> d!22351 d!22637))

(assert (=> b!85554 d!22419))

(assert (=> b!85554 d!22171))

(declare-fun d!22639 () Bool)

(assert (=> d!22639 (= (map!1186 (_2!1113 lt!40772)) (getCurrentListMap!426 (_keys!4008 (_2!1113 lt!40772)) (_values!2320 (_2!1113 lt!40772)) (mask!6364 (_2!1113 lt!40772)) (extraKeys!2176 (_2!1113 lt!40772)) (zeroValue!2229 (_2!1113 lt!40772)) (minValue!2229 (_2!1113 lt!40772)) #b00000000000000000000000000000000 (defaultEntry!2337 (_2!1113 lt!40772))))))

(declare-fun bs!3656 () Bool)

(assert (= bs!3656 d!22639))

(declare-fun m!91497 () Bool)

(assert (=> bs!3656 m!91497))

(assert (=> b!85975 d!22639))

(declare-fun d!22641 () Bool)

(declare-fun e!56380 () Bool)

(assert (=> d!22641 e!56380))

(declare-fun res!44468 () Bool)

(assert (=> d!22641 (=> (not res!44468) (not e!56380))))

(declare-fun lt!41045 () ListLongMap!1449)

(assert (=> d!22641 (= res!44468 (contains!752 lt!41045 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!41044 () List!1525)

(assert (=> d!22641 (= lt!41045 (ListLongMap!1450 lt!41044))))

(declare-fun lt!41043 () Unit!2510)

(declare-fun lt!41046 () Unit!2510)

(assert (=> d!22641 (= lt!41043 lt!41046)))

(assert (=> d!22641 (= (getValueByKey!138 lt!41044 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22641 (= lt!41046 (lemmaContainsTupThenGetReturnValue!58 lt!41044 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22641 (= lt!41044 (insertStrictlySorted!61 (toList!740 (map!1186 newMap!16)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22641 (= (+!108 (map!1186 newMap!16) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!41045)))

(declare-fun b!86537 () Bool)

(declare-fun res!44469 () Bool)

(assert (=> b!86537 (=> (not res!44469) (not e!56380))))

(assert (=> b!86537 (= res!44469 (= (getValueByKey!138 (toList!740 lt!41045) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!86538 () Bool)

(assert (=> b!86538 (= e!56380 (contains!753 (toList!740 lt!41045) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22641 res!44468) b!86537))

(assert (= (and b!86537 res!44469) b!86538))

(declare-fun m!91499 () Bool)

(assert (=> d!22641 m!91499))

(declare-fun m!91501 () Bool)

(assert (=> d!22641 m!91501))

(declare-fun m!91503 () Bool)

(assert (=> d!22641 m!91503))

(declare-fun m!91505 () Bool)

(assert (=> d!22641 m!91505))

(declare-fun m!91507 () Bool)

(assert (=> b!86537 m!91507))

(declare-fun m!91509 () Bool)

(assert (=> b!86538 m!91509))

(assert (=> b!85975 d!22641))

(assert (=> b!85975 d!22063))

(declare-fun d!22643 () Bool)

(declare-fun e!56381 () Bool)

(assert (=> d!22643 e!56381))

(declare-fun res!44470 () Bool)

(assert (=> d!22643 (=> (not res!44470) (not e!56381))))

(declare-fun lt!41049 () ListLongMap!1449)

(assert (=> d!22643 (= res!44470 (contains!752 lt!41049 (_1!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(declare-fun lt!41048 () List!1525)

(assert (=> d!22643 (= lt!41049 (ListLongMap!1450 lt!41048))))

(declare-fun lt!41047 () Unit!2510)

(declare-fun lt!41050 () Unit!2510)

(assert (=> d!22643 (= lt!41047 lt!41050)))

(assert (=> d!22643 (= (getValueByKey!138 lt!41048 (_1!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))) (Some!143 (_2!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(assert (=> d!22643 (= lt!41050 (lemmaContainsTupThenGetReturnValue!58 lt!41048 (_1!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (_2!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(assert (=> d!22643 (= lt!41048 (insertStrictlySorted!61 (toList!740 (ite c!13987 call!8179 (ite c!13986 call!8178 call!8176))) (_1!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (_2!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(assert (=> d!22643 (= (+!108 (ite c!13987 call!8179 (ite c!13986 call!8178 call!8176)) (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) lt!41049)))

(declare-fun b!86539 () Bool)

(declare-fun res!44471 () Bool)

(assert (=> b!86539 (=> (not res!44471) (not e!56381))))

(assert (=> b!86539 (= res!44471 (= (getValueByKey!138 (toList!740 lt!41049) (_1!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))) (Some!143 (_2!1114 (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))))

(declare-fun b!86540 () Bool)

(assert (=> b!86540 (= e!56381 (contains!753 (toList!740 lt!41049) (ite (or c!13987 c!13986) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (= (and d!22643 res!44470) b!86539))

(assert (= (and b!86539 res!44471) b!86540))

(declare-fun m!91511 () Bool)

(assert (=> d!22643 m!91511))

(declare-fun m!91513 () Bool)

(assert (=> d!22643 m!91513))

(declare-fun m!91515 () Bool)

(assert (=> d!22643 m!91515))

(declare-fun m!91517 () Bool)

(assert (=> d!22643 m!91517))

(declare-fun m!91519 () Bool)

(assert (=> b!86539 m!91519))

(declare-fun m!91521 () Bool)

(assert (=> b!86540 m!91521))

(assert (=> bm!8177 d!22643))

(declare-fun d!22645 () Bool)

(assert (=> d!22645 (= (apply!82 lt!40533 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (getValueByKey!138 (toList!740 lt!40533) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3657 () Bool)

(assert (= bs!3657 d!22645))

(assert (=> bs!3657 m!89961))

(declare-fun m!91523 () Bool)

(assert (=> bs!3657 m!91523))

(assert (=> bs!3657 m!91523))

(declare-fun m!91525 () Bool)

(assert (=> bs!3657 m!91525))

(assert (=> b!85668 d!22645))

(declare-fun c!14158 () Bool)

(declare-fun d!22647 () Bool)

(assert (=> d!22647 (= c!14158 ((_ is ValueCellFull!923) (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000)))))

(declare-fun e!56382 () V!3025)

(assert (=> d!22647 (= (get!1199 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56382)))

(declare-fun b!86541 () Bool)

(assert (=> b!86541 (= e!56382 (get!1202 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86542 () Bool)

(assert (=> b!86542 (= e!56382 (get!1203 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22647 c!14158) b!86541))

(assert (= (and d!22647 (not c!14158)) b!86542))

(assert (=> b!86541 m!90013))

(assert (=> b!86541 m!90011))

(declare-fun m!91527 () Bool)

(assert (=> b!86541 m!91527))

(assert (=> b!86542 m!90013))

(assert (=> b!86542 m!90011))

(declare-fun m!91529 () Bool)

(assert (=> b!86542 m!91529))

(assert (=> b!85668 d!22647))

(declare-fun d!22649 () Bool)

(declare-fun res!44472 () Bool)

(declare-fun e!56383 () Bool)

(assert (=> d!22649 (=> res!44472 e!56383)))

(assert (=> d!22649 (= res!44472 (and ((_ is Cons!1521) lt!40450) (= (_1!1114 (h!2112 lt!40450)) (_1!1114 lt!40143))))))

(assert (=> d!22649 (= (containsKey!142 lt!40450 (_1!1114 lt!40143)) e!56383)))

(declare-fun b!86543 () Bool)

(declare-fun e!56384 () Bool)

(assert (=> b!86543 (= e!56383 e!56384)))

(declare-fun res!44473 () Bool)

(assert (=> b!86543 (=> (not res!44473) (not e!56384))))

(assert (=> b!86543 (= res!44473 (and (or (not ((_ is Cons!1521) lt!40450)) (bvsle (_1!1114 (h!2112 lt!40450)) (_1!1114 lt!40143))) ((_ is Cons!1521) lt!40450) (bvslt (_1!1114 (h!2112 lt!40450)) (_1!1114 lt!40143))))))

(declare-fun b!86544 () Bool)

(assert (=> b!86544 (= e!56384 (containsKey!142 (t!5237 lt!40450) (_1!1114 lt!40143)))))

(assert (= (and d!22649 (not res!44472)) b!86543))

(assert (= (and b!86543 res!44473) b!86544))

(declare-fun m!91531 () Bool)

(assert (=> b!86544 m!91531))

(assert (=> b!85844 d!22649))

(assert (=> d!22143 d!22431))

(assert (=> b!85757 d!22411))

(assert (=> b!85757 d!22235))

(declare-fun d!22651 () Bool)

(declare-fun e!56386 () Bool)

(assert (=> d!22651 e!56386))

(declare-fun res!44474 () Bool)

(assert (=> d!22651 (=> res!44474 e!56386)))

(declare-fun lt!41051 () Bool)

(assert (=> d!22651 (= res!44474 (not lt!41051))))

(declare-fun lt!41054 () Bool)

(assert (=> d!22651 (= lt!41051 lt!41054)))

(declare-fun lt!41052 () Unit!2510)

(declare-fun e!56385 () Unit!2510)

(assert (=> d!22651 (= lt!41052 e!56385)))

(declare-fun c!14159 () Bool)

(assert (=> d!22651 (= c!14159 lt!41054)))

(assert (=> d!22651 (= lt!41054 (containsKey!142 (toList!740 lt!40518) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!22651 (= (contains!752 lt!40518 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!41051)))

(declare-fun b!86545 () Bool)

(declare-fun lt!41053 () Unit!2510)

(assert (=> b!86545 (= e!56385 lt!41053)))

(assert (=> b!86545 (= lt!41053 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40518) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!86545 (isDefined!92 (getValueByKey!138 (toList!740 lt!40518) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!86546 () Bool)

(declare-fun Unit!2562 () Unit!2510)

(assert (=> b!86546 (= e!56385 Unit!2562)))

(declare-fun b!86547 () Bool)

(assert (=> b!86547 (= e!56386 (isDefined!92 (getValueByKey!138 (toList!740 lt!40518) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!22651 c!14159) b!86545))

(assert (= (and d!22651 (not c!14159)) b!86546))

(assert (= (and d!22651 (not res!44474)) b!86547))

(assert (=> d!22651 m!89941))

(declare-fun m!91533 () Bool)

(assert (=> d!22651 m!91533))

(assert (=> b!86545 m!89941))

(declare-fun m!91535 () Bool)

(assert (=> b!86545 m!91535))

(assert (=> b!86545 m!89941))

(assert (=> b!86545 m!91429))

(assert (=> b!86545 m!91429))

(declare-fun m!91537 () Bool)

(assert (=> b!86545 m!91537))

(assert (=> b!86547 m!89941))

(assert (=> b!86547 m!91429))

(assert (=> b!86547 m!91429))

(assert (=> b!86547 m!91537))

(assert (=> b!85646 d!22651))

(declare-fun b!86548 () Bool)

(declare-fun e!56389 () Bool)

(declare-fun e!56388 () Bool)

(assert (=> b!86548 (= e!56389 e!56388)))

(declare-fun c!14160 () Bool)

(assert (=> b!86548 (= c!14160 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!86549 () Bool)

(declare-fun call!8246 () Bool)

(assert (=> b!86549 (= e!56388 call!8246)))

(declare-fun bm!8243 () Bool)

(assert (=> bm!8243 (= call!8246 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14160 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000) Nil!1523) Nil!1523)))))

(declare-fun d!22653 () Bool)

(declare-fun res!44475 () Bool)

(declare-fun e!56387 () Bool)

(assert (=> d!22653 (=> res!44475 e!56387)))

(assert (=> d!22653 (= res!44475 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22653 (= (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000 Nil!1523) e!56387)))

(declare-fun b!86550 () Bool)

(assert (=> b!86550 (= e!56387 e!56389)))

(declare-fun res!44477 () Bool)

(assert (=> b!86550 (=> (not res!44477) (not e!56389))))

(declare-fun e!56390 () Bool)

(assert (=> b!86550 (= res!44477 (not e!56390))))

(declare-fun res!44476 () Bool)

(assert (=> b!86550 (=> (not res!44476) (not e!56390))))

(assert (=> b!86550 (= res!44476 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!86551 () Bool)

(assert (=> b!86551 (= e!56390 (contains!754 Nil!1523 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!86552 () Bool)

(assert (=> b!86552 (= e!56388 call!8246)))

(assert (= (and d!22653 (not res!44475)) b!86550))

(assert (= (and b!86550 res!44476) b!86551))

(assert (= (and b!86550 res!44477) b!86548))

(assert (= (and b!86548 c!14160) b!86549))

(assert (= (and b!86548 (not c!14160)) b!86552))

(assert (= (or b!86549 b!86552) bm!8243))

(assert (=> b!86548 m!90983))

(assert (=> b!86548 m!90983))

(assert (=> b!86548 m!90985))

(assert (=> bm!8243 m!90983))

(declare-fun m!91539 () Bool)

(assert (=> bm!8243 m!91539))

(assert (=> b!86550 m!90983))

(assert (=> b!86550 m!90983))

(assert (=> b!86550 m!90985))

(assert (=> b!86551 m!90983))

(assert (=> b!86551 m!90983))

(declare-fun m!91541 () Bool)

(assert (=> b!86551 m!91541))

(assert (=> b!85801 d!22653))

(declare-fun d!22655 () Bool)

(declare-fun lt!41055 () Bool)

(assert (=> d!22655 (= lt!41055 (select (content!89 (toList!740 lt!40865)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56391 () Bool)

(assert (=> d!22655 (= lt!41055 e!56391)))

(declare-fun res!44478 () Bool)

(assert (=> d!22655 (=> (not res!44478) (not e!56391))))

(assert (=> d!22655 (= res!44478 ((_ is Cons!1521) (toList!740 lt!40865)))))

(assert (=> d!22655 (= (contains!753 (toList!740 lt!40865) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!41055)))

(declare-fun b!86553 () Bool)

(declare-fun e!56392 () Bool)

(assert (=> b!86553 (= e!56391 e!56392)))

(declare-fun res!44479 () Bool)

(assert (=> b!86553 (=> res!44479 e!56392)))

(assert (=> b!86553 (= res!44479 (= (h!2112 (toList!740 lt!40865)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86554 () Bool)

(assert (=> b!86554 (= e!56392 (contains!753 (t!5237 (toList!740 lt!40865)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22655 res!44478) b!86553))

(assert (= (and b!86553 (not res!44479)) b!86554))

(declare-fun m!91543 () Bool)

(assert (=> d!22655 m!91543))

(declare-fun m!91545 () Bool)

(assert (=> d!22655 m!91545))

(declare-fun m!91547 () Bool)

(assert (=> b!86554 m!91547))

(assert (=> b!86092 d!22655))

(declare-fun d!22657 () Bool)

(assert (not d!22657))

(assert (=> b!85868 d!22657))

(declare-fun d!22659 () Bool)

(declare-fun e!56394 () Bool)

(assert (=> d!22659 e!56394))

(declare-fun res!44480 () Bool)

(assert (=> d!22659 (=> res!44480 e!56394)))

(declare-fun lt!41056 () Bool)

(assert (=> d!22659 (= res!44480 (not lt!41056))))

(declare-fun lt!41059 () Bool)

(assert (=> d!22659 (= lt!41056 lt!41059)))

(declare-fun lt!41057 () Unit!2510)

(declare-fun e!56393 () Unit!2510)

(assert (=> d!22659 (= lt!41057 e!56393)))

(declare-fun c!14161 () Bool)

(assert (=> d!22659 (= c!14161 lt!41059)))

(assert (=> d!22659 (= lt!41059 (containsKey!142 (toList!740 lt!40555) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22659 (= (contains!752 lt!40555 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41056)))

(declare-fun b!86555 () Bool)

(declare-fun lt!41058 () Unit!2510)

(assert (=> b!86555 (= e!56393 lt!41058)))

(assert (=> b!86555 (= lt!41058 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40555) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86555 (isDefined!92 (getValueByKey!138 (toList!740 lt!40555) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86556 () Bool)

(declare-fun Unit!2563 () Unit!2510)

(assert (=> b!86556 (= e!56393 Unit!2563)))

(declare-fun b!86557 () Bool)

(assert (=> b!86557 (= e!56394 (isDefined!92 (getValueByKey!138 (toList!740 lt!40555) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22659 c!14161) b!86555))

(assert (= (and d!22659 (not c!14161)) b!86556))

(assert (= (and d!22659 (not res!44480)) b!86557))

(declare-fun m!91549 () Bool)

(assert (=> d!22659 m!91549))

(declare-fun m!91551 () Bool)

(assert (=> b!86555 m!91551))

(declare-fun m!91553 () Bool)

(assert (=> b!86555 m!91553))

(assert (=> b!86555 m!91553))

(declare-fun m!91555 () Bool)

(assert (=> b!86555 m!91555))

(assert (=> b!86557 m!91553))

(assert (=> b!86557 m!91553))

(assert (=> b!86557 m!91555))

(assert (=> bm!8148 d!22659))

(declare-fun d!22661 () Bool)

(declare-fun res!44481 () Bool)

(declare-fun e!56395 () Bool)

(assert (=> d!22661 (=> res!44481 e!56395)))

(assert (=> d!22661 (= res!44481 (and ((_ is Cons!1521) (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (= (_1!1114 (h!2112 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (=> d!22661 (= (containsKey!142 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56395)))

(declare-fun b!86558 () Bool)

(declare-fun e!56396 () Bool)

(assert (=> b!86558 (= e!56395 e!56396)))

(declare-fun res!44482 () Bool)

(assert (=> b!86558 (=> (not res!44482) (not e!56396))))

(assert (=> b!86558 (= res!44482 (and (or (not ((_ is Cons!1521) (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (bvsle (_1!1114 (h!2112 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) ((_ is Cons!1521) (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (bvslt (_1!1114 (h!2112 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun b!86559 () Bool)

(assert (=> b!86559 (= e!56396 (containsKey!142 (t!5237 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!22661 (not res!44481)) b!86558))

(assert (= (and b!86558 res!44482) b!86559))

(assert (=> b!86559 m!89403))

(declare-fun m!91557 () Bool)

(assert (=> b!86559 m!91557))

(assert (=> d!22293 d!22661))

(declare-fun d!22663 () Bool)

(declare-fun res!44483 () Bool)

(declare-fun e!56397 () Bool)

(assert (=> d!22663 (=> res!44483 e!56397)))

(assert (=> d!22663 (= res!44483 (and ((_ is Cons!1521) (toList!740 call!8098)) (= (_1!1114 (h!2112 (toList!740 call!8098))) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))))

(assert (=> d!22663 (= (containsKey!142 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))) e!56397)))

(declare-fun b!86560 () Bool)

(declare-fun e!56398 () Bool)

(assert (=> b!86560 (= e!56397 e!56398)))

(declare-fun res!44484 () Bool)

(assert (=> b!86560 (=> (not res!44484) (not e!56398))))

(assert (=> b!86560 (= res!44484 (and (or (not ((_ is Cons!1521) (toList!740 call!8098))) (bvsle (_1!1114 (h!2112 (toList!740 call!8098))) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))) ((_ is Cons!1521) (toList!740 call!8098)) (bvslt (_1!1114 (h!2112 (toList!740 call!8098))) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))))

(declare-fun b!86561 () Bool)

(assert (=> b!86561 (= e!56398 (containsKey!142 (t!5237 (toList!740 call!8098)) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(assert (= (and d!22663 (not res!44483)) b!86560))

(assert (= (and b!86560 res!44484) b!86561))

(declare-fun m!91559 () Bool)

(assert (=> b!86561 m!91559))

(assert (=> d!22165 d!22663))

(declare-fun d!22665 () Bool)

(assert (=> d!22665 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41060 () Unit!2510)

(assert (=> d!22665 (= lt!41060 (choose!514 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56399 () Bool)

(assert (=> d!22665 e!56399))

(declare-fun res!44485 () Bool)

(assert (=> d!22665 (=> (not res!44485) (not e!56399))))

(assert (=> d!22665 (= res!44485 (isStrictlySorted!293 (toList!740 lt!40471)))))

(assert (=> d!22665 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000) lt!41060)))

(declare-fun b!86562 () Bool)

(assert (=> b!86562 (= e!56399 (containsKey!142 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22665 res!44485) b!86562))

(assert (=> d!22665 m!90287))

(assert (=> d!22665 m!90287))

(assert (=> d!22665 m!90289))

(declare-fun m!91561 () Bool)

(assert (=> d!22665 m!91561))

(assert (=> d!22665 m!90859))

(assert (=> b!86562 m!90283))

(assert (=> b!85809 d!22665))

(declare-fun d!22667 () Bool)

(assert (=> d!22667 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3658 () Bool)

(assert (= bs!3658 d!22667))

(assert (=> bs!3658 m!90287))

(declare-fun m!91563 () Bool)

(assert (=> bs!3658 m!91563))

(assert (=> b!85809 d!22667))

(declare-fun d!22669 () Bool)

(declare-fun c!14162 () Bool)

(assert (=> d!22669 (= c!14162 (and ((_ is Cons!1521) (toList!740 lt!40471)) (= (_1!1114 (h!2112 (toList!740 lt!40471))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!56400 () Option!144)

(assert (=> d!22669 (= (getValueByKey!138 (toList!740 lt!40471) #b0000000000000000000000000000000000000000000000000000000000000000) e!56400)))

(declare-fun b!86566 () Bool)

(declare-fun e!56401 () Option!144)

(assert (=> b!86566 (= e!56401 None!142)))

(declare-fun b!86563 () Bool)

(assert (=> b!86563 (= e!56400 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40471)))))))

(declare-fun b!86565 () Bool)

(assert (=> b!86565 (= e!56401 (getValueByKey!138 (t!5237 (toList!740 lt!40471)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86564 () Bool)

(assert (=> b!86564 (= e!56400 e!56401)))

(declare-fun c!14163 () Bool)

(assert (=> b!86564 (= c!14163 (and ((_ is Cons!1521) (toList!740 lt!40471)) (not (= (_1!1114 (h!2112 (toList!740 lt!40471))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and d!22669 c!14162) b!86563))

(assert (= (and d!22669 (not c!14162)) b!86564))

(assert (= (and b!86564 c!14163) b!86565))

(assert (= (and b!86564 (not c!14163)) b!86566))

(declare-fun m!91565 () Bool)

(assert (=> b!86565 m!91565))

(assert (=> b!85809 d!22669))

(declare-fun d!22671 () Bool)

(declare-fun res!44486 () Bool)

(declare-fun e!56402 () Bool)

(assert (=> d!22671 (=> res!44486 e!56402)))

(assert (=> d!22671 (= res!44486 (and ((_ is Cons!1521) lt!40647) (= (_1!1114 (h!2112 lt!40647)) (_1!1114 lt!40140))))))

(assert (=> d!22671 (= (containsKey!142 lt!40647 (_1!1114 lt!40140)) e!56402)))

(declare-fun b!86567 () Bool)

(declare-fun e!56403 () Bool)

(assert (=> b!86567 (= e!56402 e!56403)))

(declare-fun res!44487 () Bool)

(assert (=> b!86567 (=> (not res!44487) (not e!56403))))

(assert (=> b!86567 (= res!44487 (and (or (not ((_ is Cons!1521) lt!40647)) (bvsle (_1!1114 (h!2112 lt!40647)) (_1!1114 lt!40140))) ((_ is Cons!1521) lt!40647) (bvslt (_1!1114 (h!2112 lt!40647)) (_1!1114 lt!40140))))))

(declare-fun b!86568 () Bool)

(assert (=> b!86568 (= e!56403 (containsKey!142 (t!5237 lt!40647) (_1!1114 lt!40140)))))

(assert (= (and d!22671 (not res!44486)) b!86567))

(assert (= (and b!86567 res!44487) b!86568))

(declare-fun m!91567 () Bool)

(assert (=> b!86568 m!91567))

(assert (=> b!85832 d!22671))

(assert (=> b!85735 d!22385))

(declare-fun d!22673 () Bool)

(assert (=> d!22673 (= (apply!82 lt!40522 lt!40534) (get!1204 (getValueByKey!138 (toList!740 lt!40522) lt!40534)))))

(declare-fun bs!3659 () Bool)

(assert (= bs!3659 d!22673))

(declare-fun m!91569 () Bool)

(assert (=> bs!3659 m!91569))

(assert (=> bs!3659 m!91569))

(declare-fun m!91571 () Bool)

(assert (=> bs!3659 m!91571))

(assert (=> b!85654 d!22673))

(declare-fun d!22675 () Bool)

(assert (=> d!22675 (= (apply!82 (+!108 lt!40521 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))) lt!40538) (apply!82 lt!40521 lt!40538))))

(declare-fun lt!41061 () Unit!2510)

(assert (=> d!22675 (= lt!41061 (choose!517 lt!40521 lt!40532 (minValue!2229 newMap!16) lt!40538))))

(declare-fun e!56404 () Bool)

(assert (=> d!22675 e!56404))

(declare-fun res!44488 () Bool)

(assert (=> d!22675 (=> (not res!44488) (not e!56404))))

(assert (=> d!22675 (= res!44488 (contains!752 lt!40521 lt!40538))))

(assert (=> d!22675 (= (addApplyDifferent!58 lt!40521 lt!40532 (minValue!2229 newMap!16) lt!40538) lt!41061)))

(declare-fun b!86569 () Bool)

(assert (=> b!86569 (= e!56404 (not (= lt!40538 lt!40532)))))

(assert (= (and d!22675 res!44488) b!86569))

(declare-fun m!91573 () Bool)

(assert (=> d!22675 m!91573))

(assert (=> d!22675 m!89979))

(assert (=> d!22675 m!89981))

(assert (=> d!22675 m!89993))

(declare-fun m!91575 () Bool)

(assert (=> d!22675 m!91575))

(assert (=> d!22675 m!89979))

(assert (=> b!85654 d!22675))

(declare-fun d!22677 () Bool)

(assert (=> d!22677 (= (apply!82 (+!108 lt!40524 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))) lt!40537) (apply!82 lt!40524 lt!40537))))

(declare-fun lt!41062 () Unit!2510)

(assert (=> d!22677 (= lt!41062 (choose!517 lt!40524 lt!40535 (zeroValue!2229 newMap!16) lt!40537))))

(declare-fun e!56405 () Bool)

(assert (=> d!22677 e!56405))

(declare-fun res!44489 () Bool)

(assert (=> d!22677 (=> (not res!44489) (not e!56405))))

(assert (=> d!22677 (= res!44489 (contains!752 lt!40524 lt!40537))))

(assert (=> d!22677 (= (addApplyDifferent!58 lt!40524 lt!40535 (zeroValue!2229 newMap!16) lt!40537) lt!41062)))

(declare-fun b!86570 () Bool)

(assert (=> b!86570 (= e!56405 (not (= lt!40537 lt!40535)))))

(assert (= (and d!22677 res!44489) b!86570))

(declare-fun m!91577 () Bool)

(assert (=> d!22677 m!91577))

(assert (=> d!22677 m!89967))

(assert (=> d!22677 m!89969))

(assert (=> d!22677 m!89989))

(declare-fun m!91579 () Bool)

(assert (=> d!22677 m!91579))

(assert (=> d!22677 m!89967))

(assert (=> b!85654 d!22677))

(declare-fun d!22679 () Bool)

(assert (=> d!22679 (contains!752 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))) lt!40530)))

(declare-fun lt!41063 () Unit!2510)

(assert (=> d!22679 (= lt!41063 (choose!516 lt!40529 lt!40526 (zeroValue!2229 newMap!16) lt!40530))))

(assert (=> d!22679 (contains!752 lt!40529 lt!40530)))

(assert (=> d!22679 (= (addStillContains!58 lt!40529 lt!40526 (zeroValue!2229 newMap!16) lt!40530) lt!41063)))

(declare-fun bs!3660 () Bool)

(assert (= bs!3660 d!22679))

(assert (=> bs!3660 m!89985))

(assert (=> bs!3660 m!89985))

(assert (=> bs!3660 m!89987))

(declare-fun m!91581 () Bool)

(assert (=> bs!3660 m!91581))

(declare-fun m!91583 () Bool)

(assert (=> bs!3660 m!91583))

(assert (=> b!85654 d!22679))

(declare-fun d!22681 () Bool)

(assert (=> d!22681 (= (apply!82 lt!40521 lt!40538) (get!1204 (getValueByKey!138 (toList!740 lt!40521) lt!40538)))))

(declare-fun bs!3661 () Bool)

(assert (= bs!3661 d!22681))

(declare-fun m!91585 () Bool)

(assert (=> bs!3661 m!91585))

(assert (=> bs!3661 m!91585))

(declare-fun m!91587 () Bool)

(assert (=> bs!3661 m!91587))

(assert (=> b!85654 d!22681))

(declare-fun d!22683 () Bool)

(declare-fun e!56406 () Bool)

(assert (=> d!22683 e!56406))

(declare-fun res!44490 () Bool)

(assert (=> d!22683 (=> (not res!44490) (not e!56406))))

(declare-fun lt!41066 () ListLongMap!1449)

(assert (=> d!22683 (= res!44490 (contains!752 lt!41066 (_1!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))))))

(declare-fun lt!41065 () List!1525)

(assert (=> d!22683 (= lt!41066 (ListLongMap!1450 lt!41065))))

(declare-fun lt!41064 () Unit!2510)

(declare-fun lt!41067 () Unit!2510)

(assert (=> d!22683 (= lt!41064 lt!41067)))

(assert (=> d!22683 (= (getValueByKey!138 lt!41065 (_1!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))))))

(assert (=> d!22683 (= lt!41067 (lemmaContainsTupThenGetReturnValue!58 lt!41065 (_1!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))))))

(assert (=> d!22683 (= lt!41065 (insertStrictlySorted!61 (toList!740 lt!40521) (_1!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))))))

(assert (=> d!22683 (= (+!108 lt!40521 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))) lt!41066)))

(declare-fun b!86571 () Bool)

(declare-fun res!44491 () Bool)

(assert (=> b!86571 (=> (not res!44491) (not e!56406))))

(assert (=> b!86571 (= res!44491 (= (getValueByKey!138 (toList!740 lt!41066) (_1!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))))))))

(declare-fun b!86572 () Bool)

(assert (=> b!86572 (= e!56406 (contains!753 (toList!740 lt!41066) (tuple2!2207 lt!40532 (minValue!2229 newMap!16))))))

(assert (= (and d!22683 res!44490) b!86571))

(assert (= (and b!86571 res!44491) b!86572))

(declare-fun m!91589 () Bool)

(assert (=> d!22683 m!91589))

(declare-fun m!91591 () Bool)

(assert (=> d!22683 m!91591))

(declare-fun m!91593 () Bool)

(assert (=> d!22683 m!91593))

(declare-fun m!91595 () Bool)

(assert (=> d!22683 m!91595))

(declare-fun m!91597 () Bool)

(assert (=> b!86571 m!91597))

(declare-fun m!91599 () Bool)

(assert (=> b!86572 m!91599))

(assert (=> b!85654 d!22683))

(declare-fun d!22685 () Bool)

(assert (=> d!22685 (= (apply!82 lt!40524 lt!40537) (get!1204 (getValueByKey!138 (toList!740 lt!40524) lt!40537)))))

(declare-fun bs!3662 () Bool)

(assert (= bs!3662 d!22685))

(declare-fun m!91601 () Bool)

(assert (=> bs!3662 m!91601))

(assert (=> bs!3662 m!91601))

(declare-fun m!91603 () Bool)

(assert (=> bs!3662 m!91603))

(assert (=> b!85654 d!22685))

(declare-fun d!22687 () Bool)

(declare-fun e!56407 () Bool)

(assert (=> d!22687 e!56407))

(declare-fun res!44492 () Bool)

(assert (=> d!22687 (=> (not res!44492) (not e!56407))))

(declare-fun lt!41070 () ListLongMap!1449)

(assert (=> d!22687 (= res!44492 (contains!752 lt!41070 (_1!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!41069 () List!1525)

(assert (=> d!22687 (= lt!41070 (ListLongMap!1450 lt!41069))))

(declare-fun lt!41068 () Unit!2510)

(declare-fun lt!41071 () Unit!2510)

(assert (=> d!22687 (= lt!41068 lt!41071)))

(assert (=> d!22687 (= (getValueByKey!138 lt!41069 (_1!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22687 (= lt!41071 (lemmaContainsTupThenGetReturnValue!58 lt!41069 (_1!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22687 (= lt!41069 (insertStrictlySorted!61 (toList!740 lt!40524) (_1!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22687 (= (+!108 lt!40524 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))) lt!41070)))

(declare-fun b!86573 () Bool)

(declare-fun res!44493 () Bool)

(assert (=> b!86573 (=> (not res!44493) (not e!56407))))

(assert (=> b!86573 (= res!44493 (= (getValueByKey!138 (toList!740 lt!41070) (_1!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86574 () Bool)

(assert (=> b!86574 (= e!56407 (contains!753 (toList!740 lt!41070) (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22687 res!44492) b!86573))

(assert (= (and b!86573 res!44493) b!86574))

(declare-fun m!91605 () Bool)

(assert (=> d!22687 m!91605))

(declare-fun m!91607 () Bool)

(assert (=> d!22687 m!91607))

(declare-fun m!91609 () Bool)

(assert (=> d!22687 m!91609))

(declare-fun m!91611 () Bool)

(assert (=> d!22687 m!91611))

(declare-fun m!91613 () Bool)

(assert (=> b!86573 m!91613))

(declare-fun m!91615 () Bool)

(assert (=> b!86574 m!91615))

(assert (=> b!85654 d!22687))

(declare-fun d!22689 () Bool)

(assert (=> d!22689 (= (apply!82 (+!108 lt!40521 (tuple2!2207 lt!40532 (minValue!2229 newMap!16))) lt!40538) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40521 (tuple2!2207 lt!40532 (minValue!2229 newMap!16)))) lt!40538)))))

(declare-fun bs!3663 () Bool)

(assert (= bs!3663 d!22689))

(declare-fun m!91617 () Bool)

(assert (=> bs!3663 m!91617))

(assert (=> bs!3663 m!91617))

(declare-fun m!91619 () Bool)

(assert (=> bs!3663 m!91619))

(assert (=> b!85654 d!22689))

(declare-fun d!22691 () Bool)

(declare-fun e!56408 () Bool)

(assert (=> d!22691 e!56408))

(declare-fun res!44494 () Bool)

(assert (=> d!22691 (=> (not res!44494) (not e!56408))))

(declare-fun lt!41074 () ListLongMap!1449)

(assert (=> d!22691 (= res!44494 (contains!752 lt!41074 (_1!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))))))

(declare-fun lt!41073 () List!1525)

(assert (=> d!22691 (= lt!41074 (ListLongMap!1450 lt!41073))))

(declare-fun lt!41072 () Unit!2510)

(declare-fun lt!41075 () Unit!2510)

(assert (=> d!22691 (= lt!41072 lt!41075)))

(assert (=> d!22691 (= (getValueByKey!138 lt!41073 (_1!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22691 (= lt!41075 (lemmaContainsTupThenGetReturnValue!58 lt!41073 (_1!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22691 (= lt!41073 (insertStrictlySorted!61 (toList!740 lt!40529) (_1!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))))))

(assert (=> d!22691 (= (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))) lt!41074)))

(declare-fun b!86575 () Bool)

(declare-fun res!44495 () Bool)

(assert (=> b!86575 (=> (not res!44495) (not e!56408))))

(assert (=> b!86575 (= res!44495 (= (getValueByKey!138 (toList!740 lt!41074) (_1!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))))))))

(declare-fun b!86576 () Bool)

(assert (=> b!86576 (= e!56408 (contains!753 (toList!740 lt!41074) (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))))))

(assert (= (and d!22691 res!44494) b!86575))

(assert (= (and b!86575 res!44495) b!86576))

(declare-fun m!91621 () Bool)

(assert (=> d!22691 m!91621))

(declare-fun m!91623 () Bool)

(assert (=> d!22691 m!91623))

(declare-fun m!91625 () Bool)

(assert (=> d!22691 m!91625))

(declare-fun m!91627 () Bool)

(assert (=> d!22691 m!91627))

(declare-fun m!91629 () Bool)

(assert (=> b!86575 m!91629))

(declare-fun m!91631 () Bool)

(assert (=> b!86576 m!91631))

(assert (=> b!85654 d!22691))

(declare-fun d!22693 () Bool)

(assert (=> d!22693 (= (apply!82 (+!108 lt!40524 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16))) lt!40537) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40524 (tuple2!2207 lt!40535 (zeroValue!2229 newMap!16)))) lt!40537)))))

(declare-fun bs!3664 () Bool)

(assert (= bs!3664 d!22693))

(declare-fun m!91633 () Bool)

(assert (=> bs!3664 m!91633))

(assert (=> bs!3664 m!91633))

(declare-fun m!91635 () Bool)

(assert (=> bs!3664 m!91635))

(assert (=> b!85654 d!22693))

(declare-fun d!22695 () Bool)

(assert (=> d!22695 (= (apply!82 (+!108 lt!40522 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))) lt!40534) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40522 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))) lt!40534)))))

(declare-fun bs!3665 () Bool)

(assert (= bs!3665 d!22695))

(declare-fun m!91637 () Bool)

(assert (=> bs!3665 m!91637))

(assert (=> bs!3665 m!91637))

(declare-fun m!91639 () Bool)

(assert (=> bs!3665 m!91639))

(assert (=> b!85654 d!22695))

(declare-fun d!22697 () Bool)

(declare-fun e!56409 () Bool)

(assert (=> d!22697 e!56409))

(declare-fun res!44496 () Bool)

(assert (=> d!22697 (=> (not res!44496) (not e!56409))))

(declare-fun lt!41078 () ListLongMap!1449)

(assert (=> d!22697 (= res!44496 (contains!752 lt!41078 (_1!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))))))

(declare-fun lt!41077 () List!1525)

(assert (=> d!22697 (= lt!41078 (ListLongMap!1450 lt!41077))))

(declare-fun lt!41076 () Unit!2510)

(declare-fun lt!41079 () Unit!2510)

(assert (=> d!22697 (= lt!41076 lt!41079)))

(assert (=> d!22697 (= (getValueByKey!138 lt!41077 (_1!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))))))

(assert (=> d!22697 (= lt!41079 (lemmaContainsTupThenGetReturnValue!58 lt!41077 (_1!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))))))

(assert (=> d!22697 (= lt!41077 (insertStrictlySorted!61 (toList!740 lt!40522) (_1!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))))))

(assert (=> d!22697 (= (+!108 lt!40522 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))) lt!41078)))

(declare-fun b!86577 () Bool)

(declare-fun res!44497 () Bool)

(assert (=> b!86577 (=> (not res!44497) (not e!56409))))

(assert (=> b!86577 (= res!44497 (= (getValueByKey!138 (toList!740 lt!41078) (_1!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))))))))

(declare-fun b!86578 () Bool)

(assert (=> b!86578 (= e!56409 (contains!753 (toList!740 lt!41078) (tuple2!2207 lt!40539 (minValue!2229 newMap!16))))))

(assert (= (and d!22697 res!44496) b!86577))

(assert (= (and b!86577 res!44497) b!86578))

(declare-fun m!91641 () Bool)

(assert (=> d!22697 m!91641))

(declare-fun m!91643 () Bool)

(assert (=> d!22697 m!91643))

(declare-fun m!91645 () Bool)

(assert (=> d!22697 m!91645))

(declare-fun m!91647 () Bool)

(assert (=> d!22697 m!91647))

(declare-fun m!91649 () Bool)

(assert (=> b!86577 m!91649))

(declare-fun m!91651 () Bool)

(assert (=> b!86578 m!91651))

(assert (=> b!85654 d!22697))

(declare-fun d!22699 () Bool)

(declare-fun e!56411 () Bool)

(assert (=> d!22699 e!56411))

(declare-fun res!44498 () Bool)

(assert (=> d!22699 (=> res!44498 e!56411)))

(declare-fun lt!41080 () Bool)

(assert (=> d!22699 (= res!44498 (not lt!41080))))

(declare-fun lt!41083 () Bool)

(assert (=> d!22699 (= lt!41080 lt!41083)))

(declare-fun lt!41081 () Unit!2510)

(declare-fun e!56410 () Unit!2510)

(assert (=> d!22699 (= lt!41081 e!56410)))

(declare-fun c!14164 () Bool)

(assert (=> d!22699 (= c!14164 lt!41083)))

(assert (=> d!22699 (= lt!41083 (containsKey!142 (toList!740 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))) lt!40530))))

(assert (=> d!22699 (= (contains!752 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16))) lt!40530) lt!41080)))

(declare-fun b!86579 () Bool)

(declare-fun lt!41082 () Unit!2510)

(assert (=> b!86579 (= e!56410 lt!41082)))

(assert (=> b!86579 (= lt!41082 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))) lt!40530))))

(assert (=> b!86579 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))) lt!40530))))

(declare-fun b!86580 () Bool)

(declare-fun Unit!2564 () Unit!2510)

(assert (=> b!86580 (= e!56410 Unit!2564)))

(declare-fun b!86581 () Bool)

(assert (=> b!86581 (= e!56411 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40529 (tuple2!2207 lt!40526 (zeroValue!2229 newMap!16)))) lt!40530)))))

(assert (= (and d!22699 c!14164) b!86579))

(assert (= (and d!22699 (not c!14164)) b!86580))

(assert (= (and d!22699 (not res!44498)) b!86581))

(declare-fun m!91653 () Bool)

(assert (=> d!22699 m!91653))

(declare-fun m!91655 () Bool)

(assert (=> b!86579 m!91655))

(declare-fun m!91657 () Bool)

(assert (=> b!86579 m!91657))

(assert (=> b!86579 m!91657))

(declare-fun m!91659 () Bool)

(assert (=> b!86579 m!91659))

(assert (=> b!86581 m!91657))

(assert (=> b!86581 m!91657))

(assert (=> b!86581 m!91659))

(assert (=> b!85654 d!22699))

(declare-fun d!22701 () Bool)

(assert (=> d!22701 (= (apply!82 (+!108 lt!40522 (tuple2!2207 lt!40539 (minValue!2229 newMap!16))) lt!40534) (apply!82 lt!40522 lt!40534))))

(declare-fun lt!41084 () Unit!2510)

(assert (=> d!22701 (= lt!41084 (choose!517 lt!40522 lt!40539 (minValue!2229 newMap!16) lt!40534))))

(declare-fun e!56412 () Bool)

(assert (=> d!22701 e!56412))

(declare-fun res!44499 () Bool)

(assert (=> d!22701 (=> (not res!44499) (not e!56412))))

(assert (=> d!22701 (= res!44499 (contains!752 lt!40522 lt!40534))))

(assert (=> d!22701 (= (addApplyDifferent!58 lt!40522 lt!40539 (minValue!2229 newMap!16) lt!40534) lt!41084)))

(declare-fun b!86582 () Bool)

(assert (=> b!86582 (= e!56412 (not (= lt!40534 lt!40539)))))

(assert (= (and d!22701 res!44499) b!86582))

(declare-fun m!91661 () Bool)

(assert (=> d!22701 m!91661))

(assert (=> d!22701 m!89975))

(assert (=> d!22701 m!89977))

(assert (=> d!22701 m!89991))

(declare-fun m!91663 () Bool)

(assert (=> d!22701 m!91663))

(assert (=> d!22701 m!89975))

(assert (=> b!85654 d!22701))

(declare-fun b!86583 () Bool)

(assert (=> b!86583 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> b!86583 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348))))))

(declare-fun e!56417 () Bool)

(declare-fun lt!41089 () ListLongMap!1449)

(assert (=> b!86583 (= e!56417 (= (apply!82 lt!41089 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86584 () Bool)

(declare-fun res!44500 () Bool)

(declare-fun e!56419 () Bool)

(assert (=> b!86584 (=> (not res!44500) (not e!56419))))

(assert (=> b!86584 (= res!44500 (not (contains!752 lt!41089 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86585 () Bool)

(declare-fun e!56415 () Bool)

(assert (=> b!86585 (= e!56419 e!56415)))

(declare-fun c!14166 () Bool)

(declare-fun e!56416 () Bool)

(assert (=> b!86585 (= c!14166 e!56416)))

(declare-fun res!44501 () Bool)

(assert (=> b!86585 (=> (not res!44501) (not e!56416))))

(assert (=> b!86585 (= res!44501 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86586 () Bool)

(declare-fun e!56418 () ListLongMap!1449)

(assert (=> b!86586 (= e!56418 (ListLongMap!1450 Nil!1522))))

(declare-fun call!8247 () ListLongMap!1449)

(declare-fun bm!8244 () Bool)

(assert (=> bm!8244 (= call!8247 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16)))))

(declare-fun b!86588 () Bool)

(declare-fun e!56413 () Bool)

(assert (=> b!86588 (= e!56413 (isEmpty!339 lt!41089))))

(declare-fun b!86589 () Bool)

(declare-fun e!56414 () ListLongMap!1449)

(assert (=> b!86589 (= e!56414 call!8247)))

(declare-fun b!86590 () Bool)

(assert (=> b!86590 (= e!56413 (= lt!41089 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16))))))

(declare-fun b!86591 () Bool)

(assert (=> b!86591 (= e!56415 e!56417)))

(assert (=> b!86591 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun res!44503 () Bool)

(assert (=> b!86591 (= res!44503 (contains!752 lt!41089 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86591 (=> (not res!44503) (not e!56417))))

(declare-fun b!86592 () Bool)

(declare-fun lt!41091 () Unit!2510)

(declare-fun lt!41090 () Unit!2510)

(assert (=> b!86592 (= lt!41091 lt!41090)))

(declare-fun lt!41086 () V!3025)

(declare-fun lt!41087 () ListLongMap!1449)

(declare-fun lt!41088 () (_ BitVec 64))

(declare-fun lt!41085 () (_ BitVec 64))

(assert (=> b!86592 (not (contains!752 (+!108 lt!41087 (tuple2!2207 lt!41088 lt!41086)) lt!41085))))

(assert (=> b!86592 (= lt!41090 (addStillNotContains!32 lt!41087 lt!41088 lt!41086 lt!41085))))

(assert (=> b!86592 (= lt!41085 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86592 (= lt!41086 (get!1199 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86592 (= lt!41088 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86592 (= lt!41087 call!8247)))

(assert (=> b!86592 (= e!56414 (+!108 call!8247 (tuple2!2207 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (get!1199 (select (arr!1907 (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86593 () Bool)

(assert (=> b!86593 (= e!56418 e!56414)))

(declare-fun c!14167 () Bool)

(assert (=> b!86593 (= c!14167 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86594 () Bool)

(assert (=> b!86594 (= e!56415 e!56413)))

(declare-fun c!14165 () Bool)

(assert (=> b!86594 (= c!14165 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86587 () Bool)

(assert (=> b!86587 (= e!56416 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86587 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!22703 () Bool)

(assert (=> d!22703 e!56419))

(declare-fun res!44502 () Bool)

(assert (=> d!22703 (=> (not res!44502) (not e!56419))))

(assert (=> d!22703 (= res!44502 (not (contains!752 lt!41089 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22703 (= lt!41089 e!56418)))

(declare-fun c!14168 () Bool)

(assert (=> d!22703 (= c!14168 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22703 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22703 (= (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite (or c!13828 c!13832) (_values!2320 newMap!16) lt!40348) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41089)))

(assert (= (and d!22703 c!14168) b!86586))

(assert (= (and d!22703 (not c!14168)) b!86593))

(assert (= (and b!86593 c!14167) b!86592))

(assert (= (and b!86593 (not c!14167)) b!86589))

(assert (= (or b!86592 b!86589) bm!8244))

(assert (= (and d!22703 res!44502) b!86584))

(assert (= (and b!86584 res!44500) b!86585))

(assert (= (and b!86585 res!44501) b!86587))

(assert (= (and b!86585 c!14166) b!86591))

(assert (= (and b!86585 (not c!14166)) b!86594))

(assert (= (and b!86591 res!44503) b!86583))

(assert (= (and b!86594 c!14165) b!86590))

(assert (= (and b!86594 (not c!14165)) b!86588))

(declare-fun b_lambda!3827 () Bool)

(assert (=> (not b_lambda!3827) (not b!86583)))

(assert (=> b!86583 t!5251))

(declare-fun b_and!5213 () Bool)

(assert (= b_and!5209 (and (=> t!5251 result!2923) b_and!5213)))

(assert (=> b!86583 t!5253))

(declare-fun b_and!5215 () Bool)

(assert (= b_and!5211 (and (=> t!5253 result!2925) b_and!5215)))

(declare-fun b_lambda!3829 () Bool)

(assert (=> (not b_lambda!3829) (not b!86592)))

(assert (=> b!86592 t!5251))

(declare-fun b_and!5217 () Bool)

(assert (= b_and!5213 (and (=> t!5251 result!2923) b_and!5217)))

(assert (=> b!86592 t!5253))

(declare-fun b_and!5219 () Bool)

(assert (= b_and!5215 (and (=> t!5253 result!2925) b_and!5219)))

(declare-fun m!91665 () Bool)

(assert (=> d!22703 m!91665))

(assert (=> d!22703 m!90001))

(declare-fun m!91667 () Bool)

(assert (=> bm!8244 m!91667))

(assert (=> b!86592 m!90013))

(assert (=> b!86592 m!90011))

(assert (=> b!86592 m!90017))

(assert (=> b!86592 m!90011))

(assert (=> b!86592 m!89961))

(declare-fun m!91669 () Bool)

(assert (=> b!86592 m!91669))

(declare-fun m!91671 () Bool)

(assert (=> b!86592 m!91671))

(declare-fun m!91673 () Bool)

(assert (=> b!86592 m!91673))

(assert (=> b!86592 m!91671))

(declare-fun m!91675 () Bool)

(assert (=> b!86592 m!91675))

(assert (=> b!86592 m!90013))

(assert (=> b!86583 m!90013))

(assert (=> b!86583 m!90011))

(assert (=> b!86583 m!90017))

(assert (=> b!86583 m!90011))

(assert (=> b!86583 m!89961))

(assert (=> b!86583 m!89961))

(declare-fun m!91677 () Bool)

(assert (=> b!86583 m!91677))

(assert (=> b!86583 m!90013))

(declare-fun m!91679 () Bool)

(assert (=> b!86584 m!91679))

(assert (=> b!86590 m!91667))

(assert (=> b!86587 m!89961))

(assert (=> b!86587 m!89961))

(assert (=> b!86587 m!90007))

(declare-fun m!91681 () Bool)

(assert (=> b!86588 m!91681))

(assert (=> b!86593 m!89961))

(assert (=> b!86593 m!89961))

(assert (=> b!86593 m!90007))

(assert (=> b!86591 m!89961))

(assert (=> b!86591 m!89961))

(declare-fun m!91683 () Bool)

(assert (=> b!86591 m!91683))

(assert (=> b!85654 d!22703))

(declare-fun d!22705 () Bool)

(declare-fun e!56420 () Bool)

(assert (=> d!22705 e!56420))

(declare-fun res!44504 () Bool)

(assert (=> d!22705 (=> (not res!44504) (not e!56420))))

(declare-fun lt!41094 () ListLongMap!1449)

(assert (=> d!22705 (= res!44504 (contains!752 lt!41094 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(declare-fun lt!41093 () List!1525)

(assert (=> d!22705 (= lt!41094 (ListLongMap!1450 lt!41093))))

(declare-fun lt!41092 () Unit!2510)

(declare-fun lt!41095 () Unit!2510)

(assert (=> d!22705 (= lt!41092 lt!41095)))

(assert (=> d!22705 (= (getValueByKey!138 lt!41093 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22705 (= lt!41095 (lemmaContainsTupThenGetReturnValue!58 lt!41093 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22705 (= lt!41093 (insertStrictlySorted!61 (toList!740 call!8181) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22705 (= (+!108 call!8181 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!41094)))

(declare-fun b!86595 () Bool)

(declare-fun res!44505 () Bool)

(assert (=> b!86595 (=> (not res!44505) (not e!56420))))

(assert (=> b!86595 (= res!44505 (= (getValueByKey!138 (toList!740 lt!41094) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(declare-fun b!86596 () Bool)

(assert (=> b!86596 (= e!56420 (contains!753 (toList!740 lt!41094) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))

(assert (= (and d!22705 res!44504) b!86595))

(assert (= (and b!86595 res!44505) b!86596))

(declare-fun m!91685 () Bool)

(assert (=> d!22705 m!91685))

(declare-fun m!91687 () Bool)

(assert (=> d!22705 m!91687))

(declare-fun m!91689 () Bool)

(assert (=> d!22705 m!91689))

(declare-fun m!91691 () Bool)

(assert (=> d!22705 m!91691))

(declare-fun m!91693 () Bool)

(assert (=> b!86595 m!91693))

(declare-fun m!91695 () Bool)

(assert (=> b!86596 m!91695))

(assert (=> b!85925 d!22705))

(declare-fun d!22707 () Bool)

(declare-fun c!14169 () Bool)

(assert (=> d!22707 (= c!14169 (and ((_ is Cons!1521) (t!5237 lt!40434)) (= (_1!1114 (h!2112 (t!5237 lt!40434))) (_1!1114 lt!40140))))))

(declare-fun e!56421 () Option!144)

(assert (=> d!22707 (= (getValueByKey!138 (t!5237 lt!40434) (_1!1114 lt!40140)) e!56421)))

(declare-fun b!86600 () Bool)

(declare-fun e!56422 () Option!144)

(assert (=> b!86600 (= e!56422 None!142)))

(declare-fun b!86597 () Bool)

(assert (=> b!86597 (= e!56421 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40434)))))))

(declare-fun b!86599 () Bool)

(assert (=> b!86599 (= e!56422 (getValueByKey!138 (t!5237 (t!5237 lt!40434)) (_1!1114 lt!40140)))))

(declare-fun b!86598 () Bool)

(assert (=> b!86598 (= e!56421 e!56422)))

(declare-fun c!14170 () Bool)

(assert (=> b!86598 (= c!14170 (and ((_ is Cons!1521) (t!5237 lt!40434)) (not (= (_1!1114 (h!2112 (t!5237 lt!40434))) (_1!1114 lt!40140)))))))

(assert (= (and d!22707 c!14169) b!86597))

(assert (= (and d!22707 (not c!14169)) b!86598))

(assert (= (and b!86598 c!14170) b!86599))

(assert (= (and b!86598 (not c!14170)) b!86600))

(declare-fun m!91697 () Bool)

(assert (=> b!86599 m!91697))

(assert (=> b!85823 d!22707))

(declare-fun d!22709 () Bool)

(assert (=> d!22709 (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))

(declare-fun lt!41098 () Unit!2510)

(declare-fun choose!518 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 64) (_ BitVec 32) Int) Unit!2510)

(assert (=> d!22709 (= lt!41098 (choose!518 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22709 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22709 (= (lemmaArrayContainsKeyThenInListMap!19 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41098)))

(declare-fun bs!3666 () Bool)

(assert (= bs!3666 d!22709))

(assert (=> bs!3666 m!89631))

(assert (=> bs!3666 m!89631))

(assert (=> bs!3666 m!89403))

(assert (=> bs!3666 m!89637))

(assert (=> bs!3666 m!89403))

(declare-fun m!91699 () Bool)

(assert (=> bs!3666 m!91699))

(assert (=> bs!3666 m!90001))

(assert (=> b!85983 d!22709))

(assert (=> b!85983 d!22293))

(assert (=> b!85983 d!22143))

(declare-fun d!22711 () Bool)

(declare-fun c!14171 () Bool)

(assert (=> d!22711 (= c!14171 ((_ is Nil!1522) (toList!740 lt!40443)))))

(declare-fun e!56423 () (InoxSet tuple2!2206))

(assert (=> d!22711 (= (content!89 (toList!740 lt!40443)) e!56423)))

(declare-fun b!86601 () Bool)

(assert (=> b!86601 (= e!56423 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!86602 () Bool)

(assert (=> b!86602 (= e!56423 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40443)) true) (content!89 (t!5237 (toList!740 lt!40443)))))))

(assert (= (and d!22711 c!14171) b!86601))

(assert (= (and d!22711 (not c!14171)) b!86602))

(declare-fun m!91701 () Bool)

(assert (=> b!86602 m!91701))

(declare-fun m!91703 () Bool)

(assert (=> b!86602 m!91703))

(assert (=> d!22245 d!22711))

(declare-fun d!22713 () Bool)

(declare-fun lt!41099 () Bool)

(assert (=> d!22713 (= lt!41099 (select (content!89 (toList!740 lt!40877)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56424 () Bool)

(assert (=> d!22713 (= lt!41099 e!56424)))

(declare-fun res!44506 () Bool)

(assert (=> d!22713 (=> (not res!44506) (not e!56424))))

(assert (=> d!22713 (= res!44506 ((_ is Cons!1521) (toList!740 lt!40877)))))

(assert (=> d!22713 (= (contains!753 (toList!740 lt!40877) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!41099)))

(declare-fun b!86603 () Bool)

(declare-fun e!56425 () Bool)

(assert (=> b!86603 (= e!56424 e!56425)))

(declare-fun res!44507 () Bool)

(assert (=> b!86603 (=> res!44507 e!56425)))

(assert (=> b!86603 (= res!44507 (= (h!2112 (toList!740 lt!40877)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86604 () Bool)

(assert (=> b!86604 (= e!56425 (contains!753 (t!5237 (toList!740 lt!40877)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22713 res!44506) b!86603))

(assert (= (and b!86603 (not res!44507)) b!86604))

(declare-fun m!91705 () Bool)

(assert (=> d!22713 m!91705))

(declare-fun m!91707 () Bool)

(assert (=> d!22713 m!91707))

(declare-fun m!91709 () Bool)

(assert (=> b!86604 m!91709))

(assert (=> b!86099 d!22713))

(declare-fun d!22715 () Bool)

(assert (=> d!22715 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))

(declare-fun lt!41100 () Unit!2510)

(assert (=> d!22715 (= lt!41100 (choose!514 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))

(declare-fun e!56426 () Bool)

(assert (=> d!22715 e!56426))

(declare-fun res!44508 () Bool)

(assert (=> d!22715 (=> (not res!44508) (not e!56426))))

(assert (=> d!22715 (= res!44508 (isStrictlySorted!293 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))))))

(assert (=> d!22715 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467) lt!41100)))

(declare-fun b!86605 () Bool)

(assert (=> b!86605 (= e!56426 (containsKey!142 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))

(assert (= (and d!22715 res!44508) b!86605))

(assert (=> d!22715 m!90113))

(assert (=> d!22715 m!90113))

(assert (=> d!22715 m!90115))

(declare-fun m!91711 () Bool)

(assert (=> d!22715 m!91711))

(declare-fun m!91713 () Bool)

(assert (=> d!22715 m!91713))

(assert (=> b!86605 m!90109))

(assert (=> b!85715 d!22715))

(declare-fun d!22717 () Bool)

(assert (=> d!22717 (= (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467)) (not (isEmpty!341 (getValueByKey!138 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467))))))

(declare-fun bs!3667 () Bool)

(assert (= bs!3667 d!22717))

(assert (=> bs!3667 m!90113))

(declare-fun m!91715 () Bool)

(assert (=> bs!3667 m!91715))

(assert (=> b!85715 d!22717))

(declare-fun c!14172 () Bool)

(declare-fun d!22719 () Bool)

(assert (=> d!22719 (= c!14172 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))))) lt!40467)))))

(declare-fun e!56427 () Option!144)

(assert (=> d!22719 (= (getValueByKey!138 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))) lt!40467) e!56427)))

(declare-fun b!86609 () Bool)

(declare-fun e!56428 () Option!144)

(assert (=> b!86609 (= e!56428 None!142)))

(declare-fun b!86606 () Bool)

(assert (=> b!86606 (= e!56427 (Some!143 (_2!1114 (h!2112 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))))))))

(declare-fun b!86608 () Bool)

(assert (=> b!86608 (= e!56428 (getValueByKey!138 (t!5237 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))) lt!40467))))

(declare-fun b!86607 () Bool)

(assert (=> b!86607 (= e!56427 e!56428)))

(declare-fun c!14173 () Bool)

(assert (=> b!86607 (= c!14173 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)))) (not (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468))))) lt!40467))))))

(assert (= (and d!22719 c!14172) b!86606))

(assert (= (and d!22719 (not c!14172)) b!86607))

(assert (= (and b!86607 c!14173) b!86608))

(assert (= (and b!86607 (not c!14173)) b!86609))

(declare-fun m!91717 () Bool)

(assert (=> b!86608 m!91717))

(assert (=> b!85715 d!22719))

(declare-fun d!22721 () Bool)

(declare-fun res!44509 () Bool)

(declare-fun e!56429 () Bool)

(assert (=> d!22721 (=> res!44509 e!56429)))

(assert (=> d!22721 (= res!44509 (and ((_ is Cons!1521) lt!40442) (= (_1!1114 (h!2112 lt!40442)) (_1!1114 lt!40143))))))

(assert (=> d!22721 (= (containsKey!142 lt!40442 (_1!1114 lt!40143)) e!56429)))

(declare-fun b!86610 () Bool)

(declare-fun e!56430 () Bool)

(assert (=> b!86610 (= e!56429 e!56430)))

(declare-fun res!44510 () Bool)

(assert (=> b!86610 (=> (not res!44510) (not e!56430))))

(assert (=> b!86610 (= res!44510 (and (or (not ((_ is Cons!1521) lt!40442)) (bvsle (_1!1114 (h!2112 lt!40442)) (_1!1114 lt!40143))) ((_ is Cons!1521) lt!40442) (bvslt (_1!1114 (h!2112 lt!40442)) (_1!1114 lt!40143))))))

(declare-fun b!86611 () Bool)

(assert (=> b!86611 (= e!56430 (containsKey!142 (t!5237 lt!40442) (_1!1114 lt!40143)))))

(assert (= (and d!22721 (not res!44509)) b!86610))

(assert (= (and b!86610 res!44510) b!86611))

(declare-fun m!91719 () Bool)

(assert (=> b!86611 m!91719))

(assert (=> b!85762 d!22721))

(declare-fun lt!41101 () Bool)

(declare-fun d!22723 () Bool)

(assert (=> d!22723 (= lt!41101 (select (content!89 (toList!740 lt!40857)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun e!56431 () Bool)

(assert (=> d!22723 (= lt!41101 e!56431)))

(declare-fun res!44511 () Bool)

(assert (=> d!22723 (=> (not res!44511) (not e!56431))))

(assert (=> d!22723 (= res!44511 ((_ is Cons!1521) (toList!740 lt!40857)))))

(assert (=> d!22723 (= (contains!753 (toList!740 lt!40857) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!41101)))

(declare-fun b!86612 () Bool)

(declare-fun e!56432 () Bool)

(assert (=> b!86612 (= e!56431 e!56432)))

(declare-fun res!44512 () Bool)

(assert (=> b!86612 (=> res!44512 e!56432)))

(assert (=> b!86612 (= res!44512 (= (h!2112 (toList!740 lt!40857)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun b!86613 () Bool)

(assert (=> b!86613 (= e!56432 (contains!753 (t!5237 (toList!740 lt!40857)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22723 res!44511) b!86612))

(assert (= (and b!86612 (not res!44512)) b!86613))

(declare-fun m!91721 () Bool)

(assert (=> d!22723 m!91721))

(declare-fun m!91723 () Bool)

(assert (=> d!22723 m!91723))

(declare-fun m!91725 () Bool)

(assert (=> b!86613 m!91725))

(assert (=> b!86088 d!22723))

(declare-fun d!22725 () Bool)

(declare-fun c!14174 () Bool)

(assert (=> d!22725 (= c!14174 (and ((_ is Cons!1521) (t!5237 lt!40450)) (= (_1!1114 (h!2112 (t!5237 lt!40450))) (_1!1114 lt!40143))))))

(declare-fun e!56433 () Option!144)

(assert (=> d!22725 (= (getValueByKey!138 (t!5237 lt!40450) (_1!1114 lt!40143)) e!56433)))

(declare-fun b!86617 () Bool)

(declare-fun e!56434 () Option!144)

(assert (=> b!86617 (= e!56434 None!142)))

(declare-fun b!86614 () Bool)

(assert (=> b!86614 (= e!56433 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40450)))))))

(declare-fun b!86616 () Bool)

(assert (=> b!86616 (= e!56434 (getValueByKey!138 (t!5237 (t!5237 lt!40450)) (_1!1114 lt!40143)))))

(declare-fun b!86615 () Bool)

(assert (=> b!86615 (= e!56433 e!56434)))

(declare-fun c!14175 () Bool)

(assert (=> b!86615 (= c!14175 (and ((_ is Cons!1521) (t!5237 lt!40450)) (not (= (_1!1114 (h!2112 (t!5237 lt!40450))) (_1!1114 lt!40143)))))))

(assert (= (and d!22725 c!14174) b!86614))

(assert (= (and d!22725 (not c!14174)) b!86615))

(assert (= (and b!86615 c!14175) b!86616))

(assert (= (and b!86615 (not c!14175)) b!86617))

(declare-fun m!91727 () Bool)

(assert (=> b!86616 m!91727))

(assert (=> b!85842 d!22725))

(assert (=> b!85862 d!22575))

(assert (=> b!85862 d!22479))

(declare-fun b!86618 () Bool)

(declare-fun e!56435 () (_ BitVec 32))

(declare-fun call!8248 () (_ BitVec 32))

(assert (=> b!86618 (= e!56435 call!8248)))

(declare-fun b!86619 () Bool)

(declare-fun e!56436 () (_ BitVec 32))

(assert (=> b!86619 (= e!56436 e!56435)))

(declare-fun c!14177 () Bool)

(assert (=> b!86619 (= c!14177 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!86620 () Bool)

(assert (=> b!86620 (= e!56436 #b00000000000000000000000000000000)))

(declare-fun bm!8245 () Bool)

(assert (=> bm!8245 (= call!8248 (arrayCountValidKeys!0 (_keys!4008 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86621 () Bool)

(assert (=> b!86621 (= e!56435 (bvadd #b00000000000000000000000000000001 call!8248))))

(declare-fun d!22727 () Bool)

(declare-fun lt!41102 () (_ BitVec 32))

(assert (=> d!22727 (and (bvsge lt!41102 #b00000000000000000000000000000000) (bvsle lt!41102 (bvsub (size!2151 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!22727 (= lt!41102 e!56436)))

(declare-fun c!14176 () Bool)

(assert (=> d!22727 (= c!14176 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22727 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2151 (_keys!4008 newMap!16)) (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22727 (= (arrayCountValidKeys!0 (_keys!4008 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))) lt!41102)))

(assert (= (and d!22727 c!14176) b!86620))

(assert (= (and d!22727 (not c!14176)) b!86619))

(assert (= (and b!86619 c!14177) b!86621))

(assert (= (and b!86619 (not c!14177)) b!86618))

(assert (= (or b!86621 b!86618) bm!8245))

(assert (=> b!86619 m!91049))

(assert (=> b!86619 m!91049))

(assert (=> b!86619 m!91051))

(declare-fun m!91729 () Bool)

(assert (=> bm!8245 m!91729))

(assert (=> bm!8171 d!22727))

(declare-fun d!22729 () Bool)

(declare-fun lt!41103 () Bool)

(assert (=> d!22729 (= lt!41103 (select (content!89 lt!40504) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun e!56437 () Bool)

(assert (=> d!22729 (= lt!41103 e!56437)))

(declare-fun res!44513 () Bool)

(assert (=> d!22729 (=> (not res!44513) (not e!56437))))

(assert (=> d!22729 (= res!44513 ((_ is Cons!1521) lt!40504))))

(assert (=> d!22729 (= (contains!753 lt!40504 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))) lt!41103)))

(declare-fun b!86622 () Bool)

(declare-fun e!56438 () Bool)

(assert (=> b!86622 (= e!56437 e!56438)))

(declare-fun res!44514 () Bool)

(assert (=> b!86622 (=> res!44514 e!56438)))

(assert (=> b!86622 (= res!44514 (= (h!2112 lt!40504) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun b!86623 () Bool)

(assert (=> b!86623 (= e!56438 (contains!753 (t!5237 lt!40504) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(assert (= (and d!22729 res!44513) b!86622))

(assert (= (and b!86622 (not res!44514)) b!86623))

(declare-fun m!91731 () Bool)

(assert (=> d!22729 m!91731))

(declare-fun m!91733 () Bool)

(assert (=> d!22729 m!91733))

(declare-fun m!91735 () Bool)

(assert (=> b!86623 m!91735))

(assert (=> b!85601 d!22729))

(declare-fun d!22731 () Bool)

(declare-fun res!44515 () Bool)

(declare-fun e!56439 () Bool)

(assert (=> d!22731 (=> res!44515 e!56439)))

(assert (=> d!22731 (= res!44515 (and ((_ is Cons!1521) lt!40653) (= (_1!1114 (h!2112 lt!40653)) (_1!1114 lt!40143))))))

(assert (=> d!22731 (= (containsKey!142 lt!40653 (_1!1114 lt!40143)) e!56439)))

(declare-fun b!86624 () Bool)

(declare-fun e!56440 () Bool)

(assert (=> b!86624 (= e!56439 e!56440)))

(declare-fun res!44516 () Bool)

(assert (=> b!86624 (=> (not res!44516) (not e!56440))))

(assert (=> b!86624 (= res!44516 (and (or (not ((_ is Cons!1521) lt!40653)) (bvsle (_1!1114 (h!2112 lt!40653)) (_1!1114 lt!40143))) ((_ is Cons!1521) lt!40653) (bvslt (_1!1114 (h!2112 lt!40653)) (_1!1114 lt!40143))))))

(declare-fun b!86625 () Bool)

(assert (=> b!86625 (= e!56440 (containsKey!142 (t!5237 lt!40653) (_1!1114 lt!40143)))))

(assert (= (and d!22731 (not res!44515)) b!86624))

(assert (= (and b!86624 res!44516) b!86625))

(declare-fun m!91737 () Bool)

(assert (=> b!86625 m!91737))

(assert (=> b!85851 d!22731))

(declare-fun c!14178 () Bool)

(declare-fun d!22733 () Bool)

(assert (=> d!22733 (= c!14178 (and ((_ is Cons!1521) (toList!740 lt!40885)) (= (_1!1114 (h!2112 (toList!740 lt!40885))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56441 () Option!144)

(assert (=> d!22733 (= (getValueByKey!138 (toList!740 lt!40885) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56441)))

(declare-fun b!86629 () Bool)

(declare-fun e!56442 () Option!144)

(assert (=> b!86629 (= e!56442 None!142)))

(declare-fun b!86626 () Bool)

(assert (=> b!86626 (= e!56441 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40885)))))))

(declare-fun b!86628 () Bool)

(assert (=> b!86628 (= e!56442 (getValueByKey!138 (t!5237 (toList!740 lt!40885)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86627 () Bool)

(assert (=> b!86627 (= e!56441 e!56442)))

(declare-fun c!14179 () Bool)

(assert (=> b!86627 (= c!14179 (and ((_ is Cons!1521) (toList!740 lt!40885)) (not (= (_1!1114 (h!2112 (toList!740 lt!40885))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22733 c!14178) b!86626))

(assert (= (and d!22733 (not c!14178)) b!86627))

(assert (= (and b!86627 c!14179) b!86628))

(assert (= (and b!86627 (not c!14179)) b!86629))

(declare-fun m!91739 () Bool)

(assert (=> b!86628 m!91739))

(assert (=> b!86102 d!22733))

(assert (=> d!22267 d!22109))

(declare-fun d!22735 () Bool)

(declare-fun res!44517 () Bool)

(declare-fun e!56443 () Bool)

(assert (=> d!22735 (=> res!44517 e!56443)))

(assert (=> d!22735 (= res!44517 (and ((_ is Cons!1521) (toList!740 lt!40447)) (= (_1!1114 (h!2112 (toList!740 lt!40447))) (_1!1114 lt!40140))))))

(assert (=> d!22735 (= (containsKey!142 (toList!740 lt!40447) (_1!1114 lt!40140)) e!56443)))

(declare-fun b!86630 () Bool)

(declare-fun e!56444 () Bool)

(assert (=> b!86630 (= e!56443 e!56444)))

(declare-fun res!44518 () Bool)

(assert (=> b!86630 (=> (not res!44518) (not e!56444))))

(assert (=> b!86630 (= res!44518 (and (or (not ((_ is Cons!1521) (toList!740 lt!40447))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40447))) (_1!1114 lt!40140))) ((_ is Cons!1521) (toList!740 lt!40447)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40447))) (_1!1114 lt!40140))))))

(declare-fun b!86631 () Bool)

(assert (=> b!86631 (= e!56444 (containsKey!142 (t!5237 (toList!740 lt!40447)) (_1!1114 lt!40140)))))

(assert (= (and d!22735 (not res!44517)) b!86630))

(assert (= (and b!86630 res!44518) b!86631))

(declare-fun m!91741 () Bool)

(assert (=> b!86631 m!91741))

(assert (=> d!22193 d!22735))

(declare-fun d!22737 () Bool)

(declare-fun e!56446 () Bool)

(assert (=> d!22737 e!56446))

(declare-fun res!44519 () Bool)

(assert (=> d!22737 (=> res!44519 e!56446)))

(declare-fun lt!41104 () Bool)

(assert (=> d!22737 (= res!44519 (not lt!41104))))

(declare-fun lt!41107 () Bool)

(assert (=> d!22737 (= lt!41104 lt!41107)))

(declare-fun lt!41105 () Unit!2510)

(declare-fun e!56445 () Unit!2510)

(assert (=> d!22737 (= lt!41105 e!56445)))

(declare-fun c!14180 () Bool)

(assert (=> d!22737 (= c!14180 lt!41107)))

(assert (=> d!22737 (= lt!41107 (containsKey!142 (toList!740 lt!40533) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!22737 (= (contains!752 lt!40533 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) lt!41104)))

(declare-fun b!86632 () Bool)

(declare-fun lt!41106 () Unit!2510)

(assert (=> b!86632 (= e!56445 lt!41106)))

(assert (=> b!86632 (= lt!41106 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40533) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86632 (isDefined!92 (getValueByKey!138 (toList!740 lt!40533) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86633 () Bool)

(declare-fun Unit!2565 () Unit!2510)

(assert (=> b!86633 (= e!56445 Unit!2565)))

(declare-fun b!86634 () Bool)

(assert (=> b!86634 (= e!56446 (isDefined!92 (getValueByKey!138 (toList!740 lt!40533) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!22737 c!14180) b!86632))

(assert (= (and d!22737 (not c!14180)) b!86633))

(assert (= (and d!22737 (not res!44519)) b!86634))

(assert (=> d!22737 m!89961))

(declare-fun m!91743 () Bool)

(assert (=> d!22737 m!91743))

(assert (=> b!86632 m!89961))

(declare-fun m!91745 () Bool)

(assert (=> b!86632 m!91745))

(assert (=> b!86632 m!89961))

(assert (=> b!86632 m!91523))

(assert (=> b!86632 m!91523))

(declare-fun m!91747 () Bool)

(assert (=> b!86632 m!91747))

(assert (=> b!86634 m!89961))

(assert (=> b!86634 m!91523))

(assert (=> b!86634 m!91523))

(assert (=> b!86634 m!91747))

(assert (=> b!85659 d!22737))

(declare-fun d!22739 () Bool)

(declare-fun res!44520 () Bool)

(declare-fun e!56447 () Bool)

(assert (=> d!22739 (=> res!44520 e!56447)))

(assert (=> d!22739 (= res!44520 (and ((_ is Cons!1521) (toList!740 lt!40476)) (= (_1!1114 (h!2112 (toList!740 lt!40476))) (_1!1114 lt!40153))))))

(assert (=> d!22739 (= (containsKey!142 (toList!740 lt!40476) (_1!1114 lt!40153)) e!56447)))

(declare-fun b!86635 () Bool)

(declare-fun e!56448 () Bool)

(assert (=> b!86635 (= e!56447 e!56448)))

(declare-fun res!44521 () Bool)

(assert (=> b!86635 (=> (not res!44521) (not e!56448))))

(assert (=> b!86635 (= res!44521 (and (or (not ((_ is Cons!1521) (toList!740 lt!40476))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40476))) (_1!1114 lt!40153))) ((_ is Cons!1521) (toList!740 lt!40476)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40476))) (_1!1114 lt!40153))))))

(declare-fun b!86636 () Bool)

(assert (=> b!86636 (= e!56448 (containsKey!142 (t!5237 (toList!740 lt!40476)) (_1!1114 lt!40153)))))

(assert (= (and d!22739 (not res!44520)) b!86635))

(assert (= (and b!86635 res!44521) b!86636))

(declare-fun m!91749 () Bool)

(assert (=> b!86636 m!91749))

(assert (=> d!22127 d!22739))

(declare-fun c!14181 () Bool)

(declare-fun d!22741 () Bool)

(assert (=> d!22741 (= c!14181 (and ((_ is Cons!1521) (toList!740 lt!40843)) (= (_1!1114 (h!2112 (toList!740 lt!40843))) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56449 () Option!144)

(assert (=> d!22741 (= (getValueByKey!138 (toList!740 lt!40843) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56449)))

(declare-fun b!86640 () Bool)

(declare-fun e!56450 () Option!144)

(assert (=> b!86640 (= e!56450 None!142)))

(declare-fun b!86637 () Bool)

(assert (=> b!86637 (= e!56449 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40843)))))))

(declare-fun b!86639 () Bool)

(assert (=> b!86639 (= e!56450 (getValueByKey!138 (t!5237 (toList!740 lt!40843)) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86638 () Bool)

(assert (=> b!86638 (= e!56449 e!56450)))

(declare-fun c!14182 () Bool)

(assert (=> b!86638 (= c!14182 (and ((_ is Cons!1521) (toList!740 lt!40843)) (not (= (_1!1114 (h!2112 (toList!740 lt!40843))) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22741 c!14181) b!86637))

(assert (= (and d!22741 (not c!14181)) b!86638))

(assert (= (and b!86638 c!14182) b!86639))

(assert (= (and b!86638 (not c!14182)) b!86640))

(declare-fun m!91751 () Bool)

(assert (=> b!86639 m!91751))

(assert (=> b!86078 d!22741))

(declare-fun d!22743 () Bool)

(declare-fun lt!41108 () Bool)

(assert (=> d!22743 (= lt!41108 (select (content!89 (t!5237 (toList!740 lt!40447))) lt!40140))))

(declare-fun e!56451 () Bool)

(assert (=> d!22743 (= lt!41108 e!56451)))

(declare-fun res!44522 () Bool)

(assert (=> d!22743 (=> (not res!44522) (not e!56451))))

(assert (=> d!22743 (= res!44522 ((_ is Cons!1521) (t!5237 (toList!740 lt!40447))))))

(assert (=> d!22743 (= (contains!753 (t!5237 (toList!740 lt!40447)) lt!40140) lt!41108)))

(declare-fun b!86641 () Bool)

(declare-fun e!56452 () Bool)

(assert (=> b!86641 (= e!56451 e!56452)))

(declare-fun res!44523 () Bool)

(assert (=> b!86641 (=> res!44523 e!56452)))

(assert (=> b!86641 (= res!44523 (= (h!2112 (t!5237 (toList!740 lt!40447))) lt!40140))))

(declare-fun b!86642 () Bool)

(assert (=> b!86642 (= e!56452 (contains!753 (t!5237 (t!5237 (toList!740 lt!40447))) lt!40140))))

(assert (= (and d!22743 res!44522) b!86641))

(assert (= (and b!86641 (not res!44523)) b!86642))

(assert (=> d!22743 m!91333))

(declare-fun m!91753 () Bool)

(assert (=> d!22743 m!91753))

(declare-fun m!91755 () Bool)

(assert (=> b!86642 m!91755))

(assert (=> b!85870 d!22743))

(declare-fun d!22745 () Bool)

(declare-fun lt!41109 () Bool)

(assert (=> d!22745 (= lt!41109 (select (content!89 (toList!740 lt!40640)) (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56453 () Bool)

(assert (=> d!22745 (= lt!41109 e!56453)))

(declare-fun res!44524 () Bool)

(assert (=> d!22745 (=> (not res!44524) (not e!56453))))

(assert (=> d!22745 (= res!44524 ((_ is Cons!1521) (toList!740 lt!40640)))))

(assert (=> d!22745 (= (contains!753 (toList!740 lt!40640) (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41109)))

(declare-fun b!86643 () Bool)

(declare-fun e!56454 () Bool)

(assert (=> b!86643 (= e!56453 e!56454)))

(declare-fun res!44525 () Bool)

(assert (=> b!86643 (=> res!44525 e!56454)))

(assert (=> b!86643 (= res!44525 (= (h!2112 (toList!740 lt!40640)) (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86644 () Bool)

(assert (=> b!86644 (= e!56454 (contains!753 (t!5237 (toList!740 lt!40640)) (ite c!13828 (ite c!13823 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (= (and d!22745 res!44524) b!86643))

(assert (= (and b!86643 (not res!44525)) b!86644))

(declare-fun m!91757 () Bool)

(assert (=> d!22745 m!91757))

(declare-fun m!91759 () Bool)

(assert (=> d!22745 m!91759))

(declare-fun m!91761 () Bool)

(assert (=> b!86644 m!91761))

(assert (=> b!85813 d!22745))

(declare-fun d!22747 () Bool)

(declare-fun e!56456 () Bool)

(assert (=> d!22747 e!56456))

(declare-fun res!44526 () Bool)

(assert (=> d!22747 (=> res!44526 e!56456)))

(declare-fun lt!41110 () Bool)

(assert (=> d!22747 (= res!44526 (not lt!41110))))

(declare-fun lt!41113 () Bool)

(assert (=> d!22747 (= lt!41110 lt!41113)))

(declare-fun lt!41111 () Unit!2510)

(declare-fun e!56455 () Unit!2510)

(assert (=> d!22747 (= lt!41111 e!56455)))

(declare-fun c!14183 () Bool)

(assert (=> d!22747 (= c!14183 lt!41113)))

(assert (=> d!22747 (= lt!41113 (containsKey!142 (toList!740 lt!40848) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22747 (= (contains!752 lt!40848 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41110)))

(declare-fun b!86645 () Bool)

(declare-fun lt!41112 () Unit!2510)

(assert (=> b!86645 (= e!56455 lt!41112)))

(assert (=> b!86645 (= lt!41112 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40848) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86645 (isDefined!92 (getValueByKey!138 (toList!740 lt!40848) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86646 () Bool)

(declare-fun Unit!2566 () Unit!2510)

(assert (=> b!86646 (= e!56455 Unit!2566)))

(declare-fun b!86647 () Bool)

(assert (=> b!86647 (= e!56456 (isDefined!92 (getValueByKey!138 (toList!740 lt!40848) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22747 c!14183) b!86645))

(assert (= (and d!22747 (not c!14183)) b!86646))

(assert (= (and d!22747 (not res!44526)) b!86647))

(declare-fun m!91763 () Bool)

(assert (=> d!22747 m!91763))

(declare-fun m!91765 () Bool)

(assert (=> b!86645 m!91765))

(assert (=> b!86645 m!90707))

(assert (=> b!86645 m!90707))

(declare-fun m!91767 () Bool)

(assert (=> b!86645 m!91767))

(assert (=> b!86647 m!90707))

(assert (=> b!86647 m!90707))

(assert (=> b!86647 m!91767))

(assert (=> d!22331 d!22747))

(declare-fun c!14184 () Bool)

(declare-fun d!22749 () Bool)

(assert (=> d!22749 (= c!14184 (and ((_ is Cons!1521) lt!40847) (= (_1!1114 (h!2112 lt!40847)) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56457 () Option!144)

(assert (=> d!22749 (= (getValueByKey!138 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56457)))

(declare-fun b!86651 () Bool)

(declare-fun e!56458 () Option!144)

(assert (=> b!86651 (= e!56458 None!142)))

(declare-fun b!86648 () Bool)

(assert (=> b!86648 (= e!56457 (Some!143 (_2!1114 (h!2112 lt!40847))))))

(declare-fun b!86650 () Bool)

(assert (=> b!86650 (= e!56458 (getValueByKey!138 (t!5237 lt!40847) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86649 () Bool)

(assert (=> b!86649 (= e!56457 e!56458)))

(declare-fun c!14185 () Bool)

(assert (=> b!86649 (= c!14185 (and ((_ is Cons!1521) lt!40847) (not (= (_1!1114 (h!2112 lt!40847)) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22749 c!14184) b!86648))

(assert (= (and d!22749 (not c!14184)) b!86649))

(assert (= (and b!86649 c!14185) b!86650))

(assert (= (and b!86649 (not c!14185)) b!86651))

(declare-fun m!91769 () Bool)

(assert (=> b!86650 m!91769))

(assert (=> d!22331 d!22749))

(declare-fun d!22751 () Bool)

(assert (=> d!22751 (= (getValueByKey!138 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41114 () Unit!2510)

(assert (=> d!22751 (= lt!41114 (choose!507 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56459 () Bool)

(assert (=> d!22751 e!56459))

(declare-fun res!44527 () Bool)

(assert (=> d!22751 (=> (not res!44527) (not e!56459))))

(assert (=> d!22751 (= res!44527 (isStrictlySorted!293 lt!40847))))

(assert (=> d!22751 (= (lemmaContainsTupThenGetReturnValue!58 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41114)))

(declare-fun b!86652 () Bool)

(declare-fun res!44528 () Bool)

(assert (=> b!86652 (=> (not res!44528) (not e!56459))))

(assert (=> b!86652 (= res!44528 (containsKey!142 lt!40847 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86653 () Bool)

(assert (=> b!86653 (= e!56459 (contains!753 lt!40847 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22751 res!44527) b!86652))

(assert (= (and b!86652 res!44528) b!86653))

(assert (=> d!22751 m!90701))

(declare-fun m!91771 () Bool)

(assert (=> d!22751 m!91771))

(declare-fun m!91773 () Bool)

(assert (=> d!22751 m!91773))

(declare-fun m!91775 () Bool)

(assert (=> b!86652 m!91775))

(declare-fun m!91777 () Bool)

(assert (=> b!86653 m!91777))

(assert (=> d!22331 d!22751))

(declare-fun e!56462 () List!1525)

(declare-fun b!86654 () Bool)

(assert (=> b!86654 (= e!56462 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40406)) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun c!14188 () Bool)

(declare-fun b!86655 () Bool)

(declare-fun c!14189 () Bool)

(assert (=> b!86655 (= e!56462 (ite c!14188 (t!5237 (toList!740 lt!40406)) (ite c!14189 (Cons!1521 (h!2112 (toList!740 lt!40406)) (t!5237 (toList!740 lt!40406))) Nil!1522)))))

(declare-fun b!86656 () Bool)

(declare-fun e!56463 () List!1525)

(declare-fun call!8250 () List!1525)

(assert (=> b!86656 (= e!56463 call!8250)))

(declare-fun b!86657 () Bool)

(declare-fun e!56460 () List!1525)

(declare-fun call!8249 () List!1525)

(assert (=> b!86657 (= e!56460 call!8249)))

(declare-fun b!86658 () Bool)

(assert (=> b!86658 (= c!14189 (and ((_ is Cons!1521) (toList!740 lt!40406)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40406))) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56464 () List!1525)

(assert (=> b!86658 (= e!56460 e!56464)))

(declare-fun b!86659 () Bool)

(declare-fun res!44529 () Bool)

(declare-fun e!56461 () Bool)

(assert (=> b!86659 (=> (not res!44529) (not e!56461))))

(declare-fun lt!41115 () List!1525)

(assert (=> b!86659 (= res!44529 (containsKey!142 lt!41115 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86661 () Bool)

(declare-fun call!8251 () List!1525)

(assert (=> b!86661 (= e!56464 call!8251)))

(declare-fun b!86662 () Bool)

(assert (=> b!86662 (= e!56461 (contains!753 lt!41115 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8246 () Bool)

(declare-fun c!14187 () Bool)

(assert (=> bm!8246 (= call!8250 ($colon$colon!71 e!56462 (ite c!14187 (h!2112 (toList!740 lt!40406)) (tuple2!2207 (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14186 () Bool)

(assert (=> bm!8246 (= c!14186 c!14187)))

(declare-fun bm!8247 () Bool)

(assert (=> bm!8247 (= call!8251 call!8249)))

(declare-fun b!86660 () Bool)

(assert (=> b!86660 (= e!56464 call!8251)))

(declare-fun d!22753 () Bool)

(assert (=> d!22753 e!56461))

(declare-fun res!44530 () Bool)

(assert (=> d!22753 (=> (not res!44530) (not e!56461))))

(assert (=> d!22753 (= res!44530 (isStrictlySorted!293 lt!41115))))

(assert (=> d!22753 (= lt!41115 e!56463)))

(assert (=> d!22753 (= c!14187 (and ((_ is Cons!1521) (toList!740 lt!40406)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40406))) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22753 (isStrictlySorted!293 (toList!740 lt!40406))))

(assert (=> d!22753 (= (insertStrictlySorted!61 (toList!740 lt!40406) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41115)))

(declare-fun b!86663 () Bool)

(assert (=> b!86663 (= e!56463 e!56460)))

(assert (=> b!86663 (= c!14188 (and ((_ is Cons!1521) (toList!740 lt!40406)) (= (_1!1114 (h!2112 (toList!740 lt!40406))) (_1!1114 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8248 () Bool)

(assert (=> bm!8248 (= call!8249 call!8250)))

(assert (= (and d!22753 c!14187) b!86656))

(assert (= (and d!22753 (not c!14187)) b!86663))

(assert (= (and b!86663 c!14188) b!86657))

(assert (= (and b!86663 (not c!14188)) b!86658))

(assert (= (and b!86658 c!14189) b!86661))

(assert (= (and b!86658 (not c!14189)) b!86660))

(assert (= (or b!86661 b!86660) bm!8247))

(assert (= (or b!86657 bm!8247) bm!8248))

(assert (= (or b!86656 bm!8248) bm!8246))

(assert (= (and bm!8246 c!14186) b!86654))

(assert (= (and bm!8246 (not c!14186)) b!86655))

(assert (= (and d!22753 res!44530) b!86659))

(assert (= (and b!86659 res!44529) b!86662))

(declare-fun m!91779 () Bool)

(assert (=> d!22753 m!91779))

(declare-fun m!91781 () Bool)

(assert (=> d!22753 m!91781))

(declare-fun m!91783 () Bool)

(assert (=> b!86662 m!91783))

(declare-fun m!91785 () Bool)

(assert (=> b!86659 m!91785))

(declare-fun m!91787 () Bool)

(assert (=> b!86654 m!91787))

(declare-fun m!91789 () Bool)

(assert (=> bm!8246 m!91789))

(assert (=> d!22331 d!22753))

(declare-fun d!22755 () Bool)

(assert (=> d!22755 (isDefined!92 (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143)))))

(declare-fun lt!41116 () Unit!2510)

(assert (=> d!22755 (= lt!41116 (choose!514 (toList!740 lt!40451) (_1!1114 lt!40143)))))

(declare-fun e!56465 () Bool)

(assert (=> d!22755 e!56465))

(declare-fun res!44531 () Bool)

(assert (=> d!22755 (=> (not res!44531) (not e!56465))))

(assert (=> d!22755 (= res!44531 (isStrictlySorted!293 (toList!740 lt!40451)))))

(assert (=> d!22755 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40451) (_1!1114 lt!40143)) lt!41116)))

(declare-fun b!86664 () Bool)

(assert (=> b!86664 (= e!56465 (containsKey!142 (toList!740 lt!40451) (_1!1114 lt!40143)))))

(assert (= (and d!22755 res!44531) b!86664))

(assert (=> d!22755 m!89785))

(assert (=> d!22755 m!89785))

(assert (=> d!22755 m!90341))

(declare-fun m!91791 () Bool)

(assert (=> d!22755 m!91791))

(declare-fun m!91793 () Bool)

(assert (=> d!22755 m!91793))

(assert (=> b!86664 m!90337))

(assert (=> b!85837 d!22755))

(declare-fun d!22757 () Bool)

(assert (=> d!22757 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40451) (_1!1114 lt!40143)))))))

(declare-fun bs!3668 () Bool)

(assert (= bs!3668 d!22757))

(assert (=> bs!3668 m!89785))

(declare-fun m!91795 () Bool)

(assert (=> bs!3668 m!91795))

(assert (=> b!85837 d!22757))

(assert (=> b!85837 d!22151))

(declare-fun d!22759 () Bool)

(declare-fun e!56467 () Bool)

(assert (=> d!22759 e!56467))

(declare-fun res!44532 () Bool)

(assert (=> d!22759 (=> res!44532 e!56467)))

(declare-fun lt!41117 () Bool)

(assert (=> d!22759 (= res!44532 (not lt!41117))))

(declare-fun lt!41120 () Bool)

(assert (=> d!22759 (= lt!41117 lt!41120)))

(declare-fun lt!41118 () Unit!2510)

(declare-fun e!56466 () Unit!2510)

(assert (=> d!22759 (= lt!41118 e!56466)))

(declare-fun c!14190 () Bool)

(assert (=> d!22759 (= c!14190 lt!41120)))

(assert (=> d!22759 (= lt!41120 (containsKey!142 (toList!740 (map!1186 (_2!1113 lt!40772))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!22759 (= (contains!752 (map!1186 (_2!1113 lt!40772)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!41117)))

(declare-fun b!86665 () Bool)

(declare-fun lt!41119 () Unit!2510)

(assert (=> b!86665 (= e!56466 lt!41119)))

(assert (=> b!86665 (= lt!41119 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (map!1186 (_2!1113 lt!40772))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> b!86665 (isDefined!92 (getValueByKey!138 (toList!740 (map!1186 (_2!1113 lt!40772))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!86666 () Bool)

(declare-fun Unit!2567 () Unit!2510)

(assert (=> b!86666 (= e!56466 Unit!2567)))

(declare-fun b!86667 () Bool)

(assert (=> b!86667 (= e!56467 (isDefined!92 (getValueByKey!138 (toList!740 (map!1186 (_2!1113 lt!40772))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (= (and d!22759 c!14190) b!86665))

(assert (= (and d!22759 (not c!14190)) b!86666))

(assert (= (and d!22759 (not res!44532)) b!86667))

(assert (=> d!22759 m!89403))

(declare-fun m!91797 () Bool)

(assert (=> d!22759 m!91797))

(assert (=> b!86665 m!89403))

(declare-fun m!91799 () Bool)

(assert (=> b!86665 m!91799))

(assert (=> b!86665 m!89403))

(declare-fun m!91801 () Bool)

(assert (=> b!86665 m!91801))

(assert (=> b!86665 m!91801))

(declare-fun m!91803 () Bool)

(assert (=> b!86665 m!91803))

(assert (=> b!86667 m!89403))

(assert (=> b!86667 m!91801))

(assert (=> b!86667 m!91801))

(assert (=> b!86667 m!91803))

(assert (=> b!85987 d!22759))

(assert (=> b!85987 d!22639))

(declare-fun d!22761 () Bool)

(declare-fun lt!41121 () Bool)

(assert (=> d!22761 (= lt!41121 (select (content!89 (t!5237 (toList!740 lt!40443))) lt!40143))))

(declare-fun e!56468 () Bool)

(assert (=> d!22761 (= lt!41121 e!56468)))

(declare-fun res!44533 () Bool)

(assert (=> d!22761 (=> (not res!44533) (not e!56468))))

(assert (=> d!22761 (= res!44533 ((_ is Cons!1521) (t!5237 (toList!740 lt!40443))))))

(assert (=> d!22761 (= (contains!753 (t!5237 (toList!740 lt!40443)) lt!40143) lt!41121)))

(declare-fun b!86668 () Bool)

(declare-fun e!56469 () Bool)

(assert (=> b!86668 (= e!56468 e!56469)))

(declare-fun res!44534 () Bool)

(assert (=> b!86668 (=> res!44534 e!56469)))

(assert (=> b!86668 (= res!44534 (= (h!2112 (t!5237 (toList!740 lt!40443))) lt!40143))))

(declare-fun b!86669 () Bool)

(assert (=> b!86669 (= e!56469 (contains!753 (t!5237 (t!5237 (toList!740 lt!40443))) lt!40143))))

(assert (= (and d!22761 res!44533) b!86668))

(assert (= (and b!86668 (not res!44534)) b!86669))

(assert (=> d!22761 m!91703))

(declare-fun m!91805 () Bool)

(assert (=> d!22761 m!91805))

(declare-fun m!91807 () Bool)

(assert (=> b!86669 m!91807))

(assert (=> b!85890 d!22761))

(assert (=> d!22115 d!22113))

(declare-fun d!22763 () Bool)

(assert (=> d!22763 (= (getValueByKey!138 lt!40479 (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153)))))

(assert (=> d!22763 true))

(declare-fun _$22!419 () Unit!2510)

(assert (=> d!22763 (= (choose!507 lt!40479 (_1!1114 lt!40153) (_2!1114 lt!40153)) _$22!419)))

(declare-fun bs!3669 () Bool)

(assert (= bs!3669 d!22763))

(assert (=> bs!3669 m!89823))

(assert (=> d!22115 d!22763))

(declare-fun d!22765 () Bool)

(declare-fun res!44535 () Bool)

(declare-fun e!56470 () Bool)

(assert (=> d!22765 (=> res!44535 e!56470)))

(assert (=> d!22765 (= res!44535 (or ((_ is Nil!1522) lt!40479) ((_ is Nil!1522) (t!5237 lt!40479))))))

(assert (=> d!22765 (= (isStrictlySorted!293 lt!40479) e!56470)))

(declare-fun b!86670 () Bool)

(declare-fun e!56471 () Bool)

(assert (=> b!86670 (= e!56470 e!56471)))

(declare-fun res!44536 () Bool)

(assert (=> b!86670 (=> (not res!44536) (not e!56471))))

(assert (=> b!86670 (= res!44536 (bvslt (_1!1114 (h!2112 lt!40479)) (_1!1114 (h!2112 (t!5237 lt!40479)))))))

(declare-fun b!86671 () Bool)

(assert (=> b!86671 (= e!56471 (isStrictlySorted!293 (t!5237 lt!40479)))))

(assert (= (and d!22765 (not res!44535)) b!86670))

(assert (= (and b!86670 res!44536) b!86671))

(declare-fun m!91809 () Bool)

(assert (=> b!86671 m!91809))

(assert (=> d!22115 d!22765))

(declare-fun b!86672 () Bool)

(declare-fun e!56474 () Bool)

(declare-fun e!56473 () Bool)

(assert (=> b!86672 (= e!56474 e!56473)))

(declare-fun c!14191 () Bool)

(assert (=> b!86672 (= c!14191 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun b!86673 () Bool)

(declare-fun call!8252 () Bool)

(assert (=> b!86673 (= e!56473 call!8252)))

(declare-fun bm!8249 () Bool)

(assert (=> bm!8249 (= call!8252 (arrayNoDuplicates!0 (_keys!4008 (_2!1113 lt!40354)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!14191 (Cons!1522 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000) Nil!1523) Nil!1523)))))

(declare-fun d!22767 () Bool)

(declare-fun res!44537 () Bool)

(declare-fun e!56472 () Bool)

(assert (=> d!22767 (=> res!44537 e!56472)))

(assert (=> d!22767 (= res!44537 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40354)))))))

(assert (=> d!22767 (= (arrayNoDuplicates!0 (_keys!4008 (_2!1113 lt!40354)) #b00000000000000000000000000000000 Nil!1523) e!56472)))

(declare-fun b!86674 () Bool)

(assert (=> b!86674 (= e!56472 e!56474)))

(declare-fun res!44539 () Bool)

(assert (=> b!86674 (=> (not res!44539) (not e!56474))))

(declare-fun e!56475 () Bool)

(assert (=> b!86674 (= res!44539 (not e!56475))))

(declare-fun res!44538 () Bool)

(assert (=> b!86674 (=> (not res!44538) (not e!56475))))

(assert (=> b!86674 (= res!44538 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun b!86675 () Bool)

(assert (=> b!86675 (= e!56475 (contains!754 Nil!1523 (select (arr!1906 (_keys!4008 (_2!1113 lt!40354))) #b00000000000000000000000000000000)))))

(declare-fun b!86676 () Bool)

(assert (=> b!86676 (= e!56473 call!8252)))

(assert (= (and d!22767 (not res!44537)) b!86674))

(assert (= (and b!86674 res!44538) b!86675))

(assert (= (and b!86674 res!44539) b!86672))

(assert (= (and b!86672 c!14191) b!86673))

(assert (= (and b!86672 (not c!14191)) b!86676))

(assert (= (or b!86673 b!86676) bm!8249))

(assert (=> b!86672 m!90933))

(assert (=> b!86672 m!90933))

(assert (=> b!86672 m!90941))

(assert (=> bm!8249 m!90933))

(declare-fun m!91811 () Bool)

(assert (=> bm!8249 m!91811))

(assert (=> b!86674 m!90933))

(assert (=> b!86674 m!90933))

(assert (=> b!86674 m!90941))

(assert (=> b!86675 m!90933))

(assert (=> b!86675 m!90933))

(declare-fun m!91813 () Bool)

(assert (=> b!86675 m!91813))

(assert (=> b!85895 d!22767))

(declare-fun d!22769 () Bool)

(declare-fun res!44540 () Bool)

(declare-fun e!56476 () Bool)

(assert (=> d!22769 (=> res!44540 e!56476)))

(assert (=> d!22769 (= res!44540 (and ((_ is Cons!1521) lt!40614) (= (_1!1114 (h!2112 lt!40614)) (_1!1114 lt!40143))))))

(assert (=> d!22769 (= (containsKey!142 lt!40614 (_1!1114 lt!40143)) e!56476)))

(declare-fun b!86677 () Bool)

(declare-fun e!56477 () Bool)

(assert (=> b!86677 (= e!56476 e!56477)))

(declare-fun res!44541 () Bool)

(assert (=> b!86677 (=> (not res!44541) (not e!56477))))

(assert (=> b!86677 (= res!44541 (and (or (not ((_ is Cons!1521) lt!40614)) (bvsle (_1!1114 (h!2112 lt!40614)) (_1!1114 lt!40143))) ((_ is Cons!1521) lt!40614) (bvslt (_1!1114 (h!2112 lt!40614)) (_1!1114 lt!40143))))))

(declare-fun b!86678 () Bool)

(assert (=> b!86678 (= e!56477 (containsKey!142 (t!5237 lt!40614) (_1!1114 lt!40143)))))

(assert (= (and d!22769 (not res!44540)) b!86677))

(assert (= (and b!86677 res!44541) b!86678))

(declare-fun m!91815 () Bool)

(assert (=> b!86678 m!91815))

(assert (=> b!85769 d!22769))

(declare-fun d!22771 () Bool)

(declare-fun e!56478 () Bool)

(assert (=> d!22771 e!56478))

(declare-fun res!44542 () Bool)

(assert (=> d!22771 (=> (not res!44542) (not e!56478))))

(declare-fun lt!41124 () ListLongMap!1449)

(assert (=> d!22771 (= res!44542 (contains!752 lt!41124 (_1!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun lt!41123 () List!1525)

(assert (=> d!22771 (= lt!41124 (ListLongMap!1450 lt!41123))))

(declare-fun lt!41122 () Unit!2510)

(declare-fun lt!41125 () Unit!2510)

(assert (=> d!22771 (= lt!41122 lt!41125)))

(assert (=> d!22771 (= (getValueByKey!138 lt!41123 (_1!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!22771 (= lt!41125 (lemmaContainsTupThenGetReturnValue!58 lt!41123 (_1!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!22771 (= lt!41123 (insertStrictlySorted!61 (toList!740 (ite c!13913 call!8153 (ite c!13912 call!8152 call!8150))) (_1!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!22771 (= (+!108 (ite c!13913 call!8153 (ite c!13912 call!8152 call!8150)) (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) lt!41124)))

(declare-fun b!86679 () Bool)

(declare-fun res!44543 () Bool)

(assert (=> b!86679 (=> (not res!44543) (not e!56478))))

(assert (=> b!86679 (= res!44543 (= (getValueByKey!138 (toList!740 lt!41124) (_1!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))))

(declare-fun b!86680 () Bool)

(assert (=> b!86680 (= e!56478 (contains!753 (toList!740 lt!41124) (ite (or c!13913 c!13912) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (= (and d!22771 res!44542) b!86679))

(assert (= (and b!86679 res!44543) b!86680))

(declare-fun m!91817 () Bool)

(assert (=> d!22771 m!91817))

(declare-fun m!91819 () Bool)

(assert (=> d!22771 m!91819))

(declare-fun m!91821 () Bool)

(assert (=> d!22771 m!91821))

(declare-fun m!91823 () Bool)

(assert (=> d!22771 m!91823))

(declare-fun m!91825 () Bool)

(assert (=> b!86679 m!91825))

(declare-fun m!91827 () Bool)

(assert (=> b!86680 m!91827))

(assert (=> bm!8151 d!22771))

(declare-fun d!22773 () Bool)

(declare-fun lt!41126 () Bool)

(assert (=> d!22773 (= lt!41126 (select (content!90 Nil!1523) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!56480 () Bool)

(assert (=> d!22773 (= lt!41126 e!56480)))

(declare-fun res!44545 () Bool)

(assert (=> d!22773 (=> (not res!44545) (not e!56480))))

(assert (=> d!22773 (= res!44545 ((_ is Cons!1522) Nil!1523))))

(assert (=> d!22773 (= (contains!754 Nil!1523 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) lt!41126)))

(declare-fun b!86681 () Bool)

(declare-fun e!56479 () Bool)

(assert (=> b!86681 (= e!56480 e!56479)))

(declare-fun res!44544 () Bool)

(assert (=> b!86681 (=> res!44544 e!56479)))

(assert (=> b!86681 (= res!44544 (= (h!2113 Nil!1523) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86682 () Bool)

(assert (=> b!86682 (= e!56479 (contains!754 (t!5238 Nil!1523) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!22773 res!44545) b!86681))

(assert (= (and b!86681 (not res!44544)) b!86682))

(assert (=> d!22773 m!90373))

(assert (=> d!22773 m!89961))

(declare-fun m!91829 () Bool)

(assert (=> d!22773 m!91829))

(assert (=> b!86682 m!89961))

(declare-fun m!91831 () Bool)

(assert (=> b!86682 m!91831))

(assert (=> b!85998 d!22773))

(declare-fun d!22775 () Bool)

(declare-fun c!14192 () Bool)

(assert (=> d!22775 (= c!14192 (and ((_ is Cons!1521) (t!5237 lt!40442)) (= (_1!1114 (h!2112 (t!5237 lt!40442))) (_1!1114 lt!40143))))))

(declare-fun e!56481 () Option!144)

(assert (=> d!22775 (= (getValueByKey!138 (t!5237 lt!40442) (_1!1114 lt!40143)) e!56481)))

(declare-fun b!86686 () Bool)

(declare-fun e!56482 () Option!144)

(assert (=> b!86686 (= e!56482 None!142)))

(declare-fun b!86683 () Bool)

(assert (=> b!86683 (= e!56481 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40442)))))))

(declare-fun b!86685 () Bool)

(assert (=> b!86685 (= e!56482 (getValueByKey!138 (t!5237 (t!5237 lt!40442)) (_1!1114 lt!40143)))))

(declare-fun b!86684 () Bool)

(assert (=> b!86684 (= e!56481 e!56482)))

(declare-fun c!14193 () Bool)

(assert (=> b!86684 (= c!14193 (and ((_ is Cons!1521) (t!5237 lt!40442)) (not (= (_1!1114 (h!2112 (t!5237 lt!40442))) (_1!1114 lt!40143)))))))

(assert (= (and d!22775 c!14192) b!86683))

(assert (= (and d!22775 (not c!14192)) b!86684))

(assert (= (and b!86684 c!14193) b!86685))

(assert (= (and b!86684 (not c!14193)) b!86686))

(declare-fun m!91833 () Bool)

(assert (=> b!86685 m!91833))

(assert (=> b!85760 d!22775))

(declare-fun d!22777 () Bool)

(declare-fun e!56484 () Bool)

(assert (=> d!22777 e!56484))

(declare-fun res!44546 () Bool)

(assert (=> d!22777 (=> res!44546 e!56484)))

(declare-fun lt!41127 () Bool)

(assert (=> d!22777 (= res!44546 (not lt!41127))))

(declare-fun lt!41130 () Bool)

(assert (=> d!22777 (= lt!41127 lt!41130)))

(declare-fun lt!41128 () Unit!2510)

(declare-fun e!56483 () Unit!2510)

(assert (=> d!22777 (= lt!41128 e!56483)))

(declare-fun c!14194 () Bool)

(assert (=> d!22777 (= c!14194 lt!41130)))

(assert (=> d!22777 (= lt!41130 (containsKey!142 (toList!740 lt!40857) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22777 (= (contains!752 lt!40857 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41127)))

(declare-fun b!86687 () Bool)

(declare-fun lt!41129 () Unit!2510)

(assert (=> b!86687 (= e!56483 lt!41129)))

(assert (=> b!86687 (= lt!41129 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40857) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> b!86687 (isDefined!92 (getValueByKey!138 (toList!740 lt!40857) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86688 () Bool)

(declare-fun Unit!2568 () Unit!2510)

(assert (=> b!86688 (= e!56483 Unit!2568)))

(declare-fun b!86689 () Bool)

(assert (=> b!86689 (= e!56484 (isDefined!92 (getValueByKey!138 (toList!740 lt!40857) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22777 c!14194) b!86687))

(assert (= (and d!22777 (not c!14194)) b!86688))

(assert (= (and d!22777 (not res!44546)) b!86689))

(declare-fun m!91835 () Bool)

(assert (=> d!22777 m!91835))

(declare-fun m!91837 () Bool)

(assert (=> b!86687 m!91837))

(assert (=> b!86687 m!90741))

(assert (=> b!86687 m!90741))

(declare-fun m!91839 () Bool)

(assert (=> b!86687 m!91839))

(assert (=> b!86689 m!90741))

(assert (=> b!86689 m!90741))

(assert (=> b!86689 m!91839))

(assert (=> d!22339 d!22777))

(declare-fun c!14195 () Bool)

(declare-fun d!22779 () Bool)

(assert (=> d!22779 (= c!14195 (and ((_ is Cons!1521) lt!40856) (= (_1!1114 (h!2112 lt!40856)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56485 () Option!144)

(assert (=> d!22779 (= (getValueByKey!138 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56485)))

(declare-fun b!86693 () Bool)

(declare-fun e!56486 () Option!144)

(assert (=> b!86693 (= e!56486 None!142)))

(declare-fun b!86690 () Bool)

(assert (=> b!86690 (= e!56485 (Some!143 (_2!1114 (h!2112 lt!40856))))))

(declare-fun b!86692 () Bool)

(assert (=> b!86692 (= e!56486 (getValueByKey!138 (t!5237 lt!40856) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86691 () Bool)

(assert (=> b!86691 (= e!56485 e!56486)))

(declare-fun c!14196 () Bool)

(assert (=> b!86691 (= c!14196 (and ((_ is Cons!1521) lt!40856) (not (= (_1!1114 (h!2112 lt!40856)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22779 c!14195) b!86690))

(assert (= (and d!22779 (not c!14195)) b!86691))

(assert (= (and b!86691 c!14196) b!86692))

(assert (= (and b!86691 (not c!14196)) b!86693))

(declare-fun m!91841 () Bool)

(assert (=> b!86692 m!91841))

(assert (=> d!22339 d!22779))

(declare-fun d!22781 () Bool)

(assert (=> d!22781 (= (getValueByKey!138 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!41131 () Unit!2510)

(assert (=> d!22781 (= lt!41131 (choose!507 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56487 () Bool)

(assert (=> d!22781 e!56487))

(declare-fun res!44547 () Bool)

(assert (=> d!22781 (=> (not res!44547) (not e!56487))))

(assert (=> d!22781 (= res!44547 (isStrictlySorted!293 lt!40856))))

(assert (=> d!22781 (= (lemmaContainsTupThenGetReturnValue!58 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41131)))

(declare-fun b!86694 () Bool)

(declare-fun res!44548 () Bool)

(assert (=> b!86694 (=> (not res!44548) (not e!56487))))

(assert (=> b!86694 (= res!44548 (containsKey!142 lt!40856 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86695 () Bool)

(assert (=> b!86695 (= e!56487 (contains!753 lt!40856 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22781 res!44547) b!86694))

(assert (= (and b!86694 res!44548) b!86695))

(assert (=> d!22781 m!90735))

(declare-fun m!91843 () Bool)

(assert (=> d!22781 m!91843))

(declare-fun m!91845 () Bool)

(assert (=> d!22781 m!91845))

(declare-fun m!91847 () Bool)

(assert (=> b!86694 m!91847))

(declare-fun m!91849 () Bool)

(assert (=> b!86695 m!91849))

(assert (=> d!22339 d!22781))

(declare-fun b!86696 () Bool)

(declare-fun e!56490 () List!1525)

(assert (=> b!86696 (= e!56490 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40146)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86697 () Bool)

(declare-fun c!14199 () Bool)

(declare-fun c!14200 () Bool)

(assert (=> b!86697 (= e!56490 (ite c!14199 (t!5237 (toList!740 lt!40146)) (ite c!14200 (Cons!1521 (h!2112 (toList!740 lt!40146)) (t!5237 (toList!740 lt!40146))) Nil!1522)))))

(declare-fun b!86698 () Bool)

(declare-fun e!56491 () List!1525)

(declare-fun call!8254 () List!1525)

(assert (=> b!86698 (= e!56491 call!8254)))

(declare-fun b!86699 () Bool)

(declare-fun e!56488 () List!1525)

(declare-fun call!8253 () List!1525)

(assert (=> b!86699 (= e!56488 call!8253)))

(declare-fun b!86700 () Bool)

(assert (=> b!86700 (= c!14200 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56492 () List!1525)

(assert (=> b!86700 (= e!56488 e!56492)))

(declare-fun b!86701 () Bool)

(declare-fun res!44549 () Bool)

(declare-fun e!56489 () Bool)

(assert (=> b!86701 (=> (not res!44549) (not e!56489))))

(declare-fun lt!41132 () List!1525)

(assert (=> b!86701 (= res!44549 (containsKey!142 lt!41132 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86703 () Bool)

(declare-fun call!8255 () List!1525)

(assert (=> b!86703 (= e!56492 call!8255)))

(declare-fun b!86704 () Bool)

(assert (=> b!86704 (= e!56489 (contains!753 lt!41132 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun c!14198 () Bool)

(declare-fun bm!8250 () Bool)

(assert (=> bm!8250 (= call!8254 ($colon$colon!71 e!56490 (ite c!14198 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun c!14197 () Bool)

(assert (=> bm!8250 (= c!14197 c!14198)))

(declare-fun bm!8251 () Bool)

(assert (=> bm!8251 (= call!8255 call!8253)))

(declare-fun b!86702 () Bool)

(assert (=> b!86702 (= e!56492 call!8255)))

(declare-fun d!22783 () Bool)

(assert (=> d!22783 e!56489))

(declare-fun res!44550 () Bool)

(assert (=> d!22783 (=> (not res!44550) (not e!56489))))

(assert (=> d!22783 (= res!44550 (isStrictlySorted!293 lt!41132))))

(assert (=> d!22783 (= lt!41132 e!56491)))

(assert (=> d!22783 (= c!14198 (and ((_ is Cons!1521) (toList!740 lt!40146)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22783 (isStrictlySorted!293 (toList!740 lt!40146))))

(assert (=> d!22783 (= (insertStrictlySorted!61 (toList!740 lt!40146) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41132)))

(declare-fun b!86705 () Bool)

(assert (=> b!86705 (= e!56491 e!56488)))

(assert (=> b!86705 (= c!14199 (and ((_ is Cons!1521) (toList!740 lt!40146)) (= (_1!1114 (h!2112 (toList!740 lt!40146))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8252 () Bool)

(assert (=> bm!8252 (= call!8253 call!8254)))

(assert (= (and d!22783 c!14198) b!86698))

(assert (= (and d!22783 (not c!14198)) b!86705))

(assert (= (and b!86705 c!14199) b!86699))

(assert (= (and b!86705 (not c!14199)) b!86700))

(assert (= (and b!86700 c!14200) b!86703))

(assert (= (and b!86700 (not c!14200)) b!86702))

(assert (= (or b!86703 b!86702) bm!8251))

(assert (= (or b!86699 bm!8251) bm!8252))

(assert (= (or b!86698 bm!8252) bm!8250))

(assert (= (and bm!8250 c!14197) b!86696))

(assert (= (and bm!8250 (not c!14197)) b!86697))

(assert (= (and d!22783 res!44550) b!86701))

(assert (= (and b!86701 res!44549) b!86704))

(declare-fun m!91851 () Bool)

(assert (=> d!22783 m!91851))

(assert (=> d!22783 m!89917))

(declare-fun m!91853 () Bool)

(assert (=> b!86704 m!91853))

(declare-fun m!91855 () Bool)

(assert (=> b!86701 m!91855))

(declare-fun m!91857 () Bool)

(assert (=> b!86696 m!91857))

(declare-fun m!91859 () Bool)

(assert (=> bm!8250 m!91859))

(assert (=> d!22339 d!22783))

(declare-fun d!22785 () Bool)

(assert (=> d!22785 (isDefined!92 (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140)))))

(declare-fun lt!41133 () Unit!2510)

(assert (=> d!22785 (= lt!41133 (choose!514 (toList!740 lt!40447) (_1!1114 lt!40140)))))

(declare-fun e!56493 () Bool)

(assert (=> d!22785 e!56493))

(declare-fun res!44551 () Bool)

(assert (=> d!22785 (=> (not res!44551) (not e!56493))))

(assert (=> d!22785 (= res!44551 (isStrictlySorted!293 (toList!740 lt!40447)))))

(assert (=> d!22785 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40447) (_1!1114 lt!40140)) lt!41133)))

(declare-fun b!86706 () Bool)

(assert (=> b!86706 (= e!56493 (containsKey!142 (toList!740 lt!40447) (_1!1114 lt!40140)))))

(assert (= (and d!22785 res!44551) b!86706))

(assert (=> d!22785 m!89773))

(assert (=> d!22785 m!89773))

(assert (=> d!22785 m!90219))

(declare-fun m!91861 () Bool)

(assert (=> d!22785 m!91861))

(declare-fun m!91863 () Bool)

(assert (=> d!22785 m!91863))

(assert (=> b!86706 m!90215))

(assert (=> b!85778 d!22785))

(declare-fun d!22787 () Bool)

(assert (=> d!22787 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40447) (_1!1114 lt!40140)))))))

(declare-fun bs!3670 () Bool)

(assert (= bs!3670 d!22787))

(assert (=> bs!3670 m!89773))

(declare-fun m!91865 () Bool)

(assert (=> bs!3670 m!91865))

(assert (=> b!85778 d!22787))

(assert (=> b!85778 d!22121))

(declare-fun d!22789 () Bool)

(declare-fun res!44552 () Bool)

(declare-fun e!56494 () Bool)

(assert (=> d!22789 (=> res!44552 e!56494)))

(assert (=> d!22789 (= res!44552 (and ((_ is Cons!1521) (toList!740 lt!40435)) (= (_1!1114 (h!2112 (toList!740 lt!40435))) (_1!1114 lt!40140))))))

(assert (=> d!22789 (= (containsKey!142 (toList!740 lt!40435) (_1!1114 lt!40140)) e!56494)))

(declare-fun b!86707 () Bool)

(declare-fun e!56495 () Bool)

(assert (=> b!86707 (= e!56494 e!56495)))

(declare-fun res!44553 () Bool)

(assert (=> b!86707 (=> (not res!44553) (not e!56495))))

(assert (=> b!86707 (= res!44553 (and (or (not ((_ is Cons!1521) (toList!740 lt!40435))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40435))) (_1!1114 lt!40140))) ((_ is Cons!1521) (toList!740 lt!40435)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40435))) (_1!1114 lt!40140))))))

(declare-fun b!86708 () Bool)

(assert (=> b!86708 (= e!56495 (containsKey!142 (t!5237 (toList!740 lt!40435)) (_1!1114 lt!40140)))))

(assert (= (and d!22789 (not res!44552)) b!86707))

(assert (= (and b!86707 res!44553) b!86708))

(declare-fun m!91867 () Bool)

(assert (=> b!86708 m!91867))

(assert (=> d!22217 d!22789))

(declare-fun d!22791 () Bool)

(assert (=> d!22791 (isDefined!92 (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153)))))

(declare-fun lt!41134 () Unit!2510)

(assert (=> d!22791 (= lt!41134 (choose!514 (toList!740 lt!40476) (_1!1114 lt!40153)))))

(declare-fun e!56496 () Bool)

(assert (=> d!22791 e!56496))

(declare-fun res!44554 () Bool)

(assert (=> d!22791 (=> (not res!44554) (not e!56496))))

(assert (=> d!22791 (= res!44554 (isStrictlySorted!293 (toList!740 lt!40476)))))

(assert (=> d!22791 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40476) (_1!1114 lt!40153)) lt!41134)))

(declare-fun b!86709 () Bool)

(assert (=> b!86709 (= e!56496 (containsKey!142 (toList!740 lt!40476) (_1!1114 lt!40153)))))

(assert (= (and d!22791 res!44554) b!86709))

(assert (=> d!22791 m!89817))

(assert (=> d!22791 m!89817))

(assert (=> d!22791 m!89903))

(declare-fun m!91869 () Bool)

(assert (=> d!22791 m!91869))

(declare-fun m!91871 () Bool)

(assert (=> d!22791 m!91871))

(assert (=> b!86709 m!89899))

(assert (=> b!85613 d!22791))

(declare-fun d!22793 () Bool)

(assert (=> d!22793 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40476) (_1!1114 lt!40153)))))))

(declare-fun bs!3671 () Bool)

(assert (= bs!3671 d!22793))

(assert (=> bs!3671 m!89817))

(declare-fun m!91873 () Bool)

(assert (=> bs!3671 m!91873))

(assert (=> b!85613 d!22793))

(assert (=> b!85613 d!22179))

(declare-fun d!22795 () Bool)

(declare-fun res!44555 () Bool)

(declare-fun e!56497 () Bool)

(assert (=> d!22795 (=> res!44555 e!56497)))

(assert (=> d!22795 (= res!44555 (and ((_ is Cons!1521) (toList!740 lt!40415)) (= (_1!1114 (h!2112 (toList!740 lt!40415))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22795 (= (containsKey!142 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000) e!56497)))

(declare-fun b!86710 () Bool)

(declare-fun e!56498 () Bool)

(assert (=> b!86710 (= e!56497 e!56498)))

(declare-fun res!44556 () Bool)

(assert (=> b!86710 (=> (not res!44556) (not e!56498))))

(assert (=> b!86710 (= res!44556 (and (or (not ((_ is Cons!1521) (toList!740 lt!40415))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40415))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1521) (toList!740 lt!40415)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40415))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86711 () Bool)

(assert (=> b!86711 (= e!56498 (containsKey!142 (t!5237 (toList!740 lt!40415)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!22795 (not res!44555)) b!86710))

(assert (= (and b!86710 res!44556) b!86711))

(declare-fun m!91875 () Bool)

(assert (=> b!86711 m!91875))

(assert (=> d!22273 d!22795))

(assert (=> b!85667 d!22385))

(declare-fun d!22797 () Bool)

(assert (=> d!22797 (= (apply!82 lt!40688 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1204 (getValueByKey!138 (toList!740 lt!40688) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3672 () Bool)

(assert (= bs!3672 d!22797))

(assert (=> bs!3672 m!89961))

(assert (=> bs!3672 m!90845))

(assert (=> bs!3672 m!90845))

(declare-fun m!91877 () Bool)

(assert (=> bs!3672 m!91877))

(assert (=> b!85938 d!22797))

(declare-fun c!14201 () Bool)

(declare-fun d!22799 () Bool)

(assert (=> d!22799 (= c!14201 ((_ is ValueCellFull!923) (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!56499 () V!3025)

(assert (=> d!22799 (= (get!1199 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!56499)))

(declare-fun b!86712 () Bool)

(assert (=> b!86712 (= e!56499 (get!1202 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86713 () Bool)

(assert (=> b!86713 (= e!56499 (get!1203 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22799 c!14201) b!86712))

(assert (= (and d!22799 (not c!14201)) b!86713))

(assert (=> b!86712 m!90469))

(assert (=> b!86712 m!90011))

(declare-fun m!91879 () Bool)

(assert (=> b!86712 m!91879))

(assert (=> b!86713 m!90469))

(assert (=> b!86713 m!90011))

(declare-fun m!91881 () Bool)

(assert (=> b!86713 m!91881))

(assert (=> b!85938 d!22799))

(declare-fun b!86714 () Bool)

(declare-fun e!56502 () List!1525)

(assert (=> b!86714 (= e!56502 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 lt!40152))) (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(declare-fun c!14204 () Bool)

(declare-fun c!14205 () Bool)

(declare-fun b!86715 () Bool)

(assert (=> b!86715 (= e!56502 (ite c!14204 (t!5237 (t!5237 (toList!740 lt!40152))) (ite c!14205 (Cons!1521 (h!2112 (t!5237 (toList!740 lt!40152))) (t!5237 (t!5237 (toList!740 lt!40152)))) Nil!1522)))))

(declare-fun b!86716 () Bool)

(declare-fun e!56503 () List!1525)

(declare-fun call!8257 () List!1525)

(assert (=> b!86716 (= e!56503 call!8257)))

(declare-fun b!86717 () Bool)

(declare-fun e!56500 () List!1525)

(declare-fun call!8256 () List!1525)

(assert (=> b!86717 (= e!56500 call!8256)))

(declare-fun b!86718 () Bool)

(assert (=> b!86718 (= c!14205 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40152))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40152)))) (_1!1114 lt!40153))))))

(declare-fun e!56504 () List!1525)

(assert (=> b!86718 (= e!56500 e!56504)))

(declare-fun b!86719 () Bool)

(declare-fun res!44557 () Bool)

(declare-fun e!56501 () Bool)

(assert (=> b!86719 (=> (not res!44557) (not e!56501))))

(declare-fun lt!41135 () List!1525)

(assert (=> b!86719 (= res!44557 (containsKey!142 lt!41135 (_1!1114 lt!40153)))))

(declare-fun b!86721 () Bool)

(declare-fun call!8258 () List!1525)

(assert (=> b!86721 (= e!56504 call!8258)))

(declare-fun b!86722 () Bool)

(assert (=> b!86722 (= e!56501 (contains!753 lt!41135 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun c!14203 () Bool)

(declare-fun bm!8253 () Bool)

(assert (=> bm!8253 (= call!8257 ($colon$colon!71 e!56502 (ite c!14203 (h!2112 (t!5237 (toList!740 lt!40152))) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153)))))))

(declare-fun c!14202 () Bool)

(assert (=> bm!8253 (= c!14202 c!14203)))

(declare-fun bm!8254 () Bool)

(assert (=> bm!8254 (= call!8258 call!8256)))

(declare-fun b!86720 () Bool)

(assert (=> b!86720 (= e!56504 call!8258)))

(declare-fun d!22801 () Bool)

(assert (=> d!22801 e!56501))

(declare-fun res!44558 () Bool)

(assert (=> d!22801 (=> (not res!44558) (not e!56501))))

(assert (=> d!22801 (= res!44558 (isStrictlySorted!293 lt!41135))))

(assert (=> d!22801 (= lt!41135 e!56503)))

(assert (=> d!22801 (= c!14203 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40152))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40152)))) (_1!1114 lt!40153))))))

(assert (=> d!22801 (isStrictlySorted!293 (t!5237 (toList!740 lt!40152)))))

(assert (=> d!22801 (= (insertStrictlySorted!61 (t!5237 (toList!740 lt!40152)) (_1!1114 lt!40153) (_2!1114 lt!40153)) lt!41135)))

(declare-fun b!86723 () Bool)

(assert (=> b!86723 (= e!56503 e!56500)))

(assert (=> b!86723 (= c!14204 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40152))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40152)))) (_1!1114 lt!40153))))))

(declare-fun bm!8255 () Bool)

(assert (=> bm!8255 (= call!8256 call!8257)))

(assert (= (and d!22801 c!14203) b!86716))

(assert (= (and d!22801 (not c!14203)) b!86723))

(assert (= (and b!86723 c!14204) b!86717))

(assert (= (and b!86723 (not c!14204)) b!86718))

(assert (= (and b!86718 c!14205) b!86721))

(assert (= (and b!86718 (not c!14205)) b!86720))

(assert (= (or b!86721 b!86720) bm!8254))

(assert (= (or b!86717 bm!8254) bm!8255))

(assert (= (or b!86716 bm!8255) bm!8253))

(assert (= (and bm!8253 c!14202) b!86714))

(assert (= (and bm!8253 (not c!14202)) b!86715))

(assert (= (and d!22801 res!44558) b!86719))

(assert (= (and b!86719 res!44557) b!86722))

(declare-fun m!91883 () Bool)

(assert (=> d!22801 m!91883))

(assert (=> d!22801 m!90853))

(declare-fun m!91885 () Bool)

(assert (=> b!86722 m!91885))

(declare-fun m!91887 () Bool)

(assert (=> b!86719 m!91887))

(declare-fun m!91889 () Bool)

(assert (=> b!86714 m!91889))

(declare-fun m!91891 () Bool)

(assert (=> bm!8253 m!91891))

(assert (=> b!85593 d!22801))

(declare-fun b!86725 () Bool)

(declare-fun e!56505 () Bool)

(declare-fun call!8259 () Bool)

(assert (=> b!86725 (= e!56505 call!8259)))

(declare-fun b!86726 () Bool)

(declare-fun e!56506 () Bool)

(assert (=> b!86726 (= e!56505 e!56506)))

(declare-fun lt!41138 () (_ BitVec 64))

(assert (=> b!86726 (= lt!41138 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!41136 () Unit!2510)

(assert (=> b!86726 (= lt!41136 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) lt!41138 #b00000000000000000000000000000000))))

(assert (=> b!86726 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) lt!41138 #b00000000000000000000000000000000)))

(declare-fun lt!41137 () Unit!2510)

(assert (=> b!86726 (= lt!41137 lt!41136)))

(declare-fun res!44560 () Bool)

(assert (=> b!86726 (= res!44560 (= (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000) (_keys!4008 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992)))) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!86726 (=> (not res!44560) (not e!56506))))

(declare-fun d!22803 () Bool)

(declare-fun res!44559 () Bool)

(declare-fun e!56507 () Bool)

(assert (=> d!22803 (=> res!44559 e!56507)))

(assert (=> d!22803 (= res!44559 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22803 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992)))) e!56507)))

(declare-fun b!86724 () Bool)

(assert (=> b!86724 (= e!56507 e!56505)))

(declare-fun c!14206 () Bool)

(assert (=> b!86724 (= c!14206 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8256 () Bool)

(assert (=> bm!8256 (= call!8259 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4008 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!86727 () Bool)

(assert (=> b!86727 (= e!56506 call!8259)))

(assert (= (and d!22803 (not res!44559)) b!86724))

(assert (= (and b!86724 c!14206) b!86726))

(assert (= (and b!86724 (not c!14206)) b!86725))

(assert (= (and b!86726 res!44560) b!86727))

(assert (= (or b!86727 b!86725) bm!8256))

(assert (=> b!86726 m!90983))

(declare-fun m!91893 () Bool)

(assert (=> b!86726 m!91893))

(declare-fun m!91895 () Bool)

(assert (=> b!86726 m!91895))

(assert (=> b!86726 m!90983))

(declare-fun m!91897 () Bool)

(assert (=> b!86726 m!91897))

(assert (=> b!86724 m!90983))

(assert (=> b!86724 m!90983))

(assert (=> b!86724 m!90985))

(declare-fun m!91899 () Bool)

(assert (=> bm!8256 m!91899))

(assert (=> b!85800 d!22803))

(declare-fun b!86728 () Bool)

(assert (=> b!86728 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> b!86728 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun lt!41143 () ListLongMap!1449)

(declare-fun e!56512 () Bool)

(assert (=> b!86728 (= e!56512 (= (apply!82 lt!41143 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86729 () Bool)

(declare-fun res!44561 () Bool)

(declare-fun e!56514 () Bool)

(assert (=> b!86729 (=> (not res!44561) (not e!56514))))

(assert (=> b!86729 (= res!44561 (not (contains!752 lt!41143 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86730 () Bool)

(declare-fun e!56510 () Bool)

(assert (=> b!86730 (= e!56514 e!56510)))

(declare-fun c!14208 () Bool)

(declare-fun e!56511 () Bool)

(assert (=> b!86730 (= c!14208 e!56511)))

(declare-fun res!44562 () Bool)

(assert (=> b!86730 (=> (not res!44562) (not e!56511))))

(assert (=> b!86730 (= res!44562 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86731 () Bool)

(declare-fun e!56513 () ListLongMap!1449)

(assert (=> b!86731 (= e!56513 (ListLongMap!1450 Nil!1522))))

(declare-fun bm!8257 () Bool)

(declare-fun call!8260 () ListLongMap!1449)

(assert (=> bm!8257 (= call!8260 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun b!86733 () Bool)

(declare-fun e!56508 () Bool)

(assert (=> b!86733 (= e!56508 (isEmpty!339 lt!41143))))

(declare-fun b!86734 () Bool)

(declare-fun e!56509 () ListLongMap!1449)

(assert (=> b!86734 (= e!56509 call!8260)))

(declare-fun b!86735 () Bool)

(assert (=> b!86735 (= e!56508 (= lt!41143 (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86736 () Bool)

(assert (=> b!86736 (= e!56510 e!56512)))

(assert (=> b!86736 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun res!44564 () Bool)

(assert (=> b!86736 (= res!44564 (contains!752 lt!41143 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!86736 (=> (not res!44564) (not e!56512))))

(declare-fun b!86737 () Bool)

(declare-fun lt!41145 () Unit!2510)

(declare-fun lt!41144 () Unit!2510)

(assert (=> b!86737 (= lt!41145 lt!41144)))

(declare-fun lt!41139 () (_ BitVec 64))

(declare-fun lt!41140 () V!3025)

(declare-fun lt!41141 () ListLongMap!1449)

(declare-fun lt!41142 () (_ BitVec 64))

(assert (=> b!86737 (not (contains!752 (+!108 lt!41141 (tuple2!2207 lt!41142 lt!41140)) lt!41139))))

(assert (=> b!86737 (= lt!41144 (addStillNotContains!32 lt!41141 lt!41142 lt!41140 lt!41139))))

(assert (=> b!86737 (= lt!41139 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86737 (= lt!41140 (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86737 (= lt!41142 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!86737 (= lt!41141 call!8260)))

(assert (=> b!86737 (= e!56509 (+!108 call!8260 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86738 () Bool)

(assert (=> b!86738 (= e!56513 e!56509)))

(declare-fun c!14209 () Bool)

(assert (=> b!86738 (= c!14209 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!86739 () Bool)

(assert (=> b!86739 (= e!56510 e!56508)))

(declare-fun c!14207 () Bool)

(assert (=> b!86739 (= c!14207 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86732 () Bool)

(assert (=> b!86732 (= e!56511 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!86732 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun d!22805 () Bool)

(assert (=> d!22805 e!56514))

(declare-fun res!44563 () Bool)

(assert (=> d!22805 (=> (not res!44563) (not e!56514))))

(assert (=> d!22805 (= res!44563 (not (contains!752 lt!41143 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22805 (= lt!41143 e!56513)))

(declare-fun c!14210 () Bool)

(assert (=> d!22805 (= c!14210 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!22805 (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992))))))

(assert (=> d!22805 (= (getCurrentListMapNoExtraKeys!72 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (_values!2320 (v!2638 (underlying!285 thiss!992))) (mask!6364 (v!2638 (underlying!285 thiss!992))) (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) (minValue!2229 (v!2638 (underlying!285 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992)))) lt!41143)))

(assert (= (and d!22805 c!14210) b!86731))

(assert (= (and d!22805 (not c!14210)) b!86738))

(assert (= (and b!86738 c!14209) b!86737))

(assert (= (and b!86738 (not c!14209)) b!86734))

(assert (= (or b!86737 b!86734) bm!8257))

(assert (= (and d!22805 res!44563) b!86729))

(assert (= (and b!86729 res!44561) b!86730))

(assert (= (and b!86730 res!44562) b!86732))

(assert (= (and b!86730 c!14208) b!86736))

(assert (= (and b!86730 (not c!14208)) b!86739))

(assert (= (and b!86736 res!44564) b!86728))

(assert (= (and b!86739 c!14207) b!86735))

(assert (= (and b!86739 (not c!14207)) b!86733))

(declare-fun b_lambda!3831 () Bool)

(assert (=> (not b_lambda!3831) (not b!86728)))

(assert (=> b!86728 t!5234))

(declare-fun b_and!5221 () Bool)

(assert (= b_and!5217 (and (=> t!5234 result!2903) b_and!5221)))

(assert (=> b!86728 t!5236))

(declare-fun b_and!5223 () Bool)

(assert (= b_and!5219 (and (=> t!5236 result!2907) b_and!5223)))

(declare-fun b_lambda!3833 () Bool)

(assert (=> (not b_lambda!3833) (not b!86737)))

(assert (=> b!86737 t!5234))

(declare-fun b_and!5225 () Bool)

(assert (= b_and!5221 (and (=> t!5234 result!2903) b_and!5225)))

(assert (=> b!86737 t!5236))

(declare-fun b_and!5227 () Bool)

(assert (= b_and!5223 (and (=> t!5236 result!2907) b_and!5227)))

(declare-fun m!91901 () Bool)

(assert (=> d!22805 m!91901))

(assert (=> d!22805 m!89435))

(declare-fun m!91903 () Bool)

(assert (=> bm!8257 m!91903))

(declare-fun m!91905 () Bool)

(assert (=> b!86737 m!91905))

(assert (=> b!86737 m!89407))

(declare-fun m!91907 () Bool)

(assert (=> b!86737 m!91907))

(assert (=> b!86737 m!89407))

(declare-fun m!91909 () Bool)

(assert (=> b!86737 m!91909))

(declare-fun m!91911 () Bool)

(assert (=> b!86737 m!91911))

(declare-fun m!91913 () Bool)

(assert (=> b!86737 m!91913))

(declare-fun m!91915 () Bool)

(assert (=> b!86737 m!91915))

(assert (=> b!86737 m!91913))

(declare-fun m!91917 () Bool)

(assert (=> b!86737 m!91917))

(assert (=> b!86737 m!91905))

(assert (=> b!86728 m!91905))

(assert (=> b!86728 m!89407))

(assert (=> b!86728 m!91907))

(assert (=> b!86728 m!89407))

(assert (=> b!86728 m!91909))

(assert (=> b!86728 m!91909))

(declare-fun m!91919 () Bool)

(assert (=> b!86728 m!91919))

(assert (=> b!86728 m!91905))

(declare-fun m!91921 () Bool)

(assert (=> b!86729 m!91921))

(assert (=> b!86735 m!91903))

(assert (=> b!86732 m!91909))

(assert (=> b!86732 m!91909))

(declare-fun m!91923 () Bool)

(assert (=> b!86732 m!91923))

(declare-fun m!91925 () Bool)

(assert (=> b!86733 m!91925))

(assert (=> b!86738 m!91909))

(assert (=> b!86738 m!91909))

(assert (=> b!86738 m!91923))

(assert (=> b!86736 m!91909))

(assert (=> b!86736 m!91909))

(declare-fun m!91927 () Bool)

(assert (=> b!86736 m!91927))

(assert (=> b!85645 d!22805))

(declare-fun d!22807 () Bool)

(declare-fun c!14211 () Bool)

(assert (=> d!22807 (= c!14211 (and ((_ is Cons!1521) (toList!740 lt!40865)) (= (_1!1114 (h!2112 (toList!740 lt!40865))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56515 () Option!144)

(assert (=> d!22807 (= (getValueByKey!138 (toList!740 lt!40865) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56515)))

(declare-fun b!86743 () Bool)

(declare-fun e!56516 () Option!144)

(assert (=> b!86743 (= e!56516 None!142)))

(declare-fun b!86740 () Bool)

(assert (=> b!86740 (= e!56515 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40865)))))))

(declare-fun b!86742 () Bool)

(assert (=> b!86742 (= e!56516 (getValueByKey!138 (t!5237 (toList!740 lt!40865)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86741 () Bool)

(assert (=> b!86741 (= e!56515 e!56516)))

(declare-fun c!14212 () Bool)

(assert (=> b!86741 (= c!14212 (and ((_ is Cons!1521) (toList!740 lt!40865)) (not (= (_1!1114 (h!2112 (toList!740 lt!40865))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22807 c!14211) b!86740))

(assert (= (and d!22807 (not c!14211)) b!86741))

(assert (= (and b!86741 c!14212) b!86742))

(assert (= (and b!86741 (not c!14212)) b!86743))

(declare-fun m!91929 () Bool)

(assert (=> b!86742 m!91929))

(assert (=> b!86091 d!22807))

(declare-fun d!22809 () Bool)

(declare-fun lt!41146 () Bool)

(assert (=> d!22809 (= lt!41146 (select (content!89 (t!5237 (toList!740 lt!40451))) lt!40143))))

(declare-fun e!56517 () Bool)

(assert (=> d!22809 (= lt!41146 e!56517)))

(declare-fun res!44565 () Bool)

(assert (=> d!22809 (=> (not res!44565) (not e!56517))))

(assert (=> d!22809 (= res!44565 ((_ is Cons!1521) (t!5237 (toList!740 lt!40451))))))

(assert (=> d!22809 (= (contains!753 (t!5237 (toList!740 lt!40451)) lt!40143) lt!41146)))

(declare-fun b!86744 () Bool)

(declare-fun e!56518 () Bool)

(assert (=> b!86744 (= e!56517 e!56518)))

(declare-fun res!44566 () Bool)

(assert (=> b!86744 (=> res!44566 e!56518)))

(assert (=> b!86744 (= res!44566 (= (h!2112 (t!5237 (toList!740 lt!40451))) lt!40143))))

(declare-fun b!86745 () Bool)

(assert (=> b!86745 (= e!56518 (contains!753 (t!5237 (t!5237 (toList!740 lt!40451))) lt!40143))))

(assert (= (and d!22809 res!44565) b!86744))

(assert (= (and b!86744 (not res!44566)) b!86745))

(declare-fun m!91931 () Bool)

(assert (=> d!22809 m!91931))

(declare-fun m!91933 () Bool)

(assert (=> d!22809 m!91933))

(declare-fun m!91935 () Bool)

(assert (=> b!86745 m!91935))

(assert (=> b!85915 d!22809))

(declare-fun d!22811 () Bool)

(declare-fun e!56520 () Bool)

(assert (=> d!22811 e!56520))

(declare-fun res!44567 () Bool)

(assert (=> d!22811 (=> res!44567 e!56520)))

(declare-fun lt!41147 () Bool)

(assert (=> d!22811 (= res!44567 (not lt!41147))))

(declare-fun lt!41150 () Bool)

(assert (=> d!22811 (= lt!41147 lt!41150)))

(declare-fun lt!41148 () Unit!2510)

(declare-fun e!56519 () Unit!2510)

(assert (=> d!22811 (= lt!41148 e!56519)))

(declare-fun c!14213 () Bool)

(assert (=> d!22811 (= c!14213 lt!41150)))

(assert (=> d!22811 (= lt!41150 (containsKey!142 (toList!740 lt!40885) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22811 (= (contains!752 lt!40885 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41147)))

(declare-fun b!86746 () Bool)

(declare-fun lt!41149 () Unit!2510)

(assert (=> b!86746 (= e!56519 lt!41149)))

(assert (=> b!86746 (= lt!41149 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40885) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> b!86746 (isDefined!92 (getValueByKey!138 (toList!740 lt!40885) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86747 () Bool)

(declare-fun Unit!2569 () Unit!2510)

(assert (=> b!86747 (= e!56519 Unit!2569)))

(declare-fun b!86748 () Bool)

(assert (=> b!86748 (= e!56520 (isDefined!92 (getValueByKey!138 (toList!740 lt!40885) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22811 c!14213) b!86746))

(assert (= (and d!22811 (not c!14213)) b!86747))

(assert (= (and d!22811 (not res!44567)) b!86748))

(declare-fun m!91937 () Bool)

(assert (=> d!22811 m!91937))

(declare-fun m!91939 () Bool)

(assert (=> b!86746 m!91939))

(assert (=> b!86746 m!90821))

(assert (=> b!86746 m!90821))

(declare-fun m!91941 () Bool)

(assert (=> b!86746 m!91941))

(assert (=> b!86748 m!90821))

(assert (=> b!86748 m!90821))

(assert (=> b!86748 m!91941))

(assert (=> d!22357 d!22811))

(declare-fun d!22813 () Bool)

(declare-fun c!14214 () Bool)

(assert (=> d!22813 (= c!14214 (and ((_ is Cons!1521) lt!40884) (= (_1!1114 (h!2112 lt!40884)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56521 () Option!144)

(assert (=> d!22813 (= (getValueByKey!138 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56521)))

(declare-fun b!86752 () Bool)

(declare-fun e!56522 () Option!144)

(assert (=> b!86752 (= e!56522 None!142)))

(declare-fun b!86749 () Bool)

(assert (=> b!86749 (= e!56521 (Some!143 (_2!1114 (h!2112 lt!40884))))))

(declare-fun b!86751 () Bool)

(assert (=> b!86751 (= e!56522 (getValueByKey!138 (t!5237 lt!40884) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86750 () Bool)

(assert (=> b!86750 (= e!56521 e!56522)))

(declare-fun c!14215 () Bool)

(assert (=> b!86750 (= c!14215 (and ((_ is Cons!1521) lt!40884) (not (= (_1!1114 (h!2112 lt!40884)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22813 c!14214) b!86749))

(assert (= (and d!22813 (not c!14214)) b!86750))

(assert (= (and b!86750 c!14215) b!86751))

(assert (= (and b!86750 (not c!14215)) b!86752))

(declare-fun m!91943 () Bool)

(assert (=> b!86751 m!91943))

(assert (=> d!22357 d!22813))

(declare-fun d!22815 () Bool)

(assert (=> d!22815 (= (getValueByKey!138 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!41151 () Unit!2510)

(assert (=> d!22815 (= lt!41151 (choose!507 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56523 () Bool)

(assert (=> d!22815 e!56523))

(declare-fun res!44568 () Bool)

(assert (=> d!22815 (=> (not res!44568) (not e!56523))))

(assert (=> d!22815 (= res!44568 (isStrictlySorted!293 lt!40884))))

(assert (=> d!22815 (= (lemmaContainsTupThenGetReturnValue!58 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41151)))

(declare-fun b!86753 () Bool)

(declare-fun res!44569 () Bool)

(assert (=> b!86753 (=> (not res!44569) (not e!56523))))

(assert (=> b!86753 (= res!44569 (containsKey!142 lt!40884 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86754 () Bool)

(assert (=> b!86754 (= e!56523 (contains!753 lt!40884 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22815 res!44568) b!86753))

(assert (= (and b!86753 res!44569) b!86754))

(assert (=> d!22815 m!90815))

(declare-fun m!91945 () Bool)

(assert (=> d!22815 m!91945))

(declare-fun m!91947 () Bool)

(assert (=> d!22815 m!91947))

(declare-fun m!91949 () Bool)

(assert (=> b!86753 m!91949))

(declare-fun m!91951 () Bool)

(assert (=> b!86754 m!91951))

(assert (=> d!22357 d!22815))

(declare-fun e!56526 () List!1525)

(declare-fun b!86755 () Bool)

(assert (=> b!86755 (= e!56526 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40150)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86756 () Bool)

(declare-fun c!14218 () Bool)

(declare-fun c!14219 () Bool)

(assert (=> b!86756 (= e!56526 (ite c!14218 (t!5237 (toList!740 lt!40150)) (ite c!14219 (Cons!1521 (h!2112 (toList!740 lt!40150)) (t!5237 (toList!740 lt!40150))) Nil!1522)))))

(declare-fun b!86757 () Bool)

(declare-fun e!56527 () List!1525)

(declare-fun call!8262 () List!1525)

(assert (=> b!86757 (= e!56527 call!8262)))

(declare-fun b!86758 () Bool)

(declare-fun e!56524 () List!1525)

(declare-fun call!8261 () List!1525)

(assert (=> b!86758 (= e!56524 call!8261)))

(declare-fun b!86759 () Bool)

(assert (=> b!86759 (= c!14219 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56528 () List!1525)

(assert (=> b!86759 (= e!56524 e!56528)))

(declare-fun b!86760 () Bool)

(declare-fun res!44570 () Bool)

(declare-fun e!56525 () Bool)

(assert (=> b!86760 (=> (not res!44570) (not e!56525))))

(declare-fun lt!41152 () List!1525)

(assert (=> b!86760 (= res!44570 (containsKey!142 lt!41152 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86762 () Bool)

(declare-fun call!8263 () List!1525)

(assert (=> b!86762 (= e!56528 call!8263)))

(declare-fun b!86763 () Bool)

(assert (=> b!86763 (= e!56525 (contains!753 lt!41152 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8258 () Bool)

(declare-fun c!14217 () Bool)

(assert (=> bm!8258 (= call!8262 ($colon$colon!71 e!56526 (ite c!14217 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun c!14216 () Bool)

(assert (=> bm!8258 (= c!14216 c!14217)))

(declare-fun bm!8259 () Bool)

(assert (=> bm!8259 (= call!8263 call!8261)))

(declare-fun b!86761 () Bool)

(assert (=> b!86761 (= e!56528 call!8263)))

(declare-fun d!22817 () Bool)

(assert (=> d!22817 e!56525))

(declare-fun res!44571 () Bool)

(assert (=> d!22817 (=> (not res!44571) (not e!56525))))

(assert (=> d!22817 (= res!44571 (isStrictlySorted!293 lt!41152))))

(assert (=> d!22817 (= lt!41152 e!56527)))

(assert (=> d!22817 (= c!14217 (and ((_ is Cons!1521) (toList!740 lt!40150)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22817 (isStrictlySorted!293 (toList!740 lt!40150))))

(assert (=> d!22817 (= (insertStrictlySorted!61 (toList!740 lt!40150) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41152)))

(declare-fun b!86764 () Bool)

(assert (=> b!86764 (= e!56527 e!56524)))

(assert (=> b!86764 (= c!14218 (and ((_ is Cons!1521) (toList!740 lt!40150)) (= (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8260 () Bool)

(assert (=> bm!8260 (= call!8261 call!8262)))

(assert (= (and d!22817 c!14217) b!86757))

(assert (= (and d!22817 (not c!14217)) b!86764))

(assert (= (and b!86764 c!14218) b!86758))

(assert (= (and b!86764 (not c!14218)) b!86759))

(assert (= (and b!86759 c!14219) b!86762))

(assert (= (and b!86759 (not c!14219)) b!86761))

(assert (= (or b!86762 b!86761) bm!8259))

(assert (= (or b!86758 bm!8259) bm!8260))

(assert (= (or b!86757 bm!8260) bm!8258))

(assert (= (and bm!8258 c!14216) b!86755))

(assert (= (and bm!8258 (not c!14216)) b!86756))

(assert (= (and d!22817 res!44571) b!86760))

(assert (= (and b!86760 res!44570) b!86763))

(declare-fun m!91953 () Bool)

(assert (=> d!22817 m!91953))

(assert (=> d!22817 m!90233))

(declare-fun m!91955 () Bool)

(assert (=> b!86763 m!91955))

(declare-fun m!91957 () Bool)

(assert (=> b!86760 m!91957))

(declare-fun m!91959 () Bool)

(assert (=> b!86755 m!91959))

(declare-fun m!91961 () Bool)

(assert (=> bm!8258 m!91961))

(assert (=> d!22357 d!22817))

(declare-fun lt!41153 () Bool)

(declare-fun d!22819 () Bool)

(assert (=> d!22819 (= lt!41153 (select (content!89 (toList!740 lt!40848)) (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56529 () Bool)

(assert (=> d!22819 (= lt!41153 e!56529)))

(declare-fun res!44572 () Bool)

(assert (=> d!22819 (=> (not res!44572) (not e!56529))))

(assert (=> d!22819 (= res!44572 ((_ is Cons!1521) (toList!740 lt!40848)))))

(assert (=> d!22819 (= (contains!753 (toList!740 lt!40848) (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!41153)))

(declare-fun b!86765 () Bool)

(declare-fun e!56530 () Bool)

(assert (=> b!86765 (= e!56529 e!56530)))

(declare-fun res!44573 () Bool)

(assert (=> b!86765 (=> res!44573 e!56530)))

(assert (=> b!86765 (= res!44573 (= (h!2112 (toList!740 lt!40848)) (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86766 () Bool)

(assert (=> b!86766 (= e!56530 (contains!753 (t!5237 (toList!740 lt!40848)) (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22819 res!44572) b!86765))

(assert (= (and b!86765 (not res!44573)) b!86766))

(declare-fun m!91963 () Bool)

(assert (=> d!22819 m!91963))

(declare-fun m!91965 () Bool)

(assert (=> d!22819 m!91965))

(declare-fun m!91967 () Bool)

(assert (=> b!86766 m!91967))

(assert (=> b!86082 d!22819))

(assert (=> d!22281 d!22279))

(declare-fun d!22821 () Bool)

(assert (=> d!22821 (= (getValueByKey!138 lt!40483 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(assert (=> d!22821 true))

(declare-fun _$22!420 () Unit!2510)

(assert (=> d!22821 (= (choose!507 lt!40483 (_1!1114 lt!40140) (_2!1114 lt!40140)) _$22!420)))

(declare-fun bs!3673 () Bool)

(assert (= bs!3673 d!22821))

(assert (=> bs!3673 m!89835))

(assert (=> d!22281 d!22821))

(declare-fun d!22823 () Bool)

(declare-fun res!44574 () Bool)

(declare-fun e!56531 () Bool)

(assert (=> d!22823 (=> res!44574 e!56531)))

(assert (=> d!22823 (= res!44574 (or ((_ is Nil!1522) lt!40483) ((_ is Nil!1522) (t!5237 lt!40483))))))

(assert (=> d!22823 (= (isStrictlySorted!293 lt!40483) e!56531)))

(declare-fun b!86767 () Bool)

(declare-fun e!56532 () Bool)

(assert (=> b!86767 (= e!56531 e!56532)))

(declare-fun res!44575 () Bool)

(assert (=> b!86767 (=> (not res!44575) (not e!56532))))

(assert (=> b!86767 (= res!44575 (bvslt (_1!1114 (h!2112 lt!40483)) (_1!1114 (h!2112 (t!5237 lt!40483)))))))

(declare-fun b!86768 () Bool)

(assert (=> b!86768 (= e!56532 (isStrictlySorted!293 (t!5237 lt!40483)))))

(assert (= (and d!22823 (not res!44574)) b!86767))

(assert (= (and b!86767 res!44575) b!86768))

(declare-fun m!91969 () Bool)

(assert (=> b!86768 m!91969))

(assert (=> d!22281 d!22823))

(declare-fun d!22825 () Bool)

(declare-fun lt!41154 () Bool)

(assert (=> d!22825 (= lt!41154 (select (content!89 (t!5237 (toList!740 lt!40480))) lt!40153))))

(declare-fun e!56533 () Bool)

(assert (=> d!22825 (= lt!41154 e!56533)))

(declare-fun res!44576 () Bool)

(assert (=> d!22825 (=> (not res!44576) (not e!56533))))

(assert (=> d!22825 (= res!44576 ((_ is Cons!1521) (t!5237 (toList!740 lt!40480))))))

(assert (=> d!22825 (= (contains!753 (t!5237 (toList!740 lt!40480)) lt!40153) lt!41154)))

(declare-fun b!86769 () Bool)

(declare-fun e!56534 () Bool)

(assert (=> b!86769 (= e!56533 e!56534)))

(declare-fun res!44577 () Bool)

(assert (=> b!86769 (=> res!44577 e!56534)))

(assert (=> b!86769 (= res!44577 (= (h!2112 (t!5237 (toList!740 lt!40480))) lt!40153))))

(declare-fun b!86770 () Bool)

(assert (=> b!86770 (= e!56534 (contains!753 (t!5237 (t!5237 (toList!740 lt!40480))) lt!40153))))

(assert (= (and d!22825 res!44576) b!86769))

(assert (= (and b!86769 (not res!44577)) b!86770))

(declare-fun m!91971 () Bool)

(assert (=> d!22825 m!91971))

(declare-fun m!91973 () Bool)

(assert (=> d!22825 m!91973))

(declare-fun m!91975 () Bool)

(assert (=> b!86770 m!91975))

(assert (=> b!85777 d!22825))

(declare-fun d!22827 () Bool)

(assert (=> d!22827 (= (apply!82 (+!108 lt!40677 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!40689) (apply!82 lt!40677 lt!40689))))

(declare-fun lt!41155 () Unit!2510)

(assert (=> d!22827 (= lt!41155 (choose!517 lt!40677 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) lt!40689))))

(declare-fun e!56535 () Bool)

(assert (=> d!22827 e!56535))

(declare-fun res!44578 () Bool)

(assert (=> d!22827 (=> (not res!44578) (not e!56535))))

(assert (=> d!22827 (= res!44578 (contains!752 lt!40677 lt!40689))))

(assert (=> d!22827 (= (addApplyDifferent!58 lt!40677 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) lt!40689) lt!41155)))

(declare-fun b!86771 () Bool)

(assert (=> b!86771 (= e!56535 (not (= lt!40689 lt!40694)))))

(assert (= (and d!22827 res!44578) b!86771))

(declare-fun m!91977 () Bool)

(assert (=> d!22827 m!91977))

(assert (=> d!22827 m!90437))

(assert (=> d!22827 m!90439))

(assert (=> d!22827 m!90453))

(declare-fun m!91979 () Bool)

(assert (=> d!22827 m!91979))

(assert (=> d!22827 m!90437))

(assert (=> b!85924 d!22827))

(declare-fun d!22829 () Bool)

(assert (=> d!22829 (= (apply!82 (+!108 lt!40676 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!40693) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40676 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) lt!40693)))))

(declare-fun bs!3674 () Bool)

(assert (= bs!3674 d!22829))

(declare-fun m!91981 () Bool)

(assert (=> bs!3674 m!91981))

(assert (=> bs!3674 m!91981))

(declare-fun m!91983 () Bool)

(assert (=> bs!3674 m!91983))

(assert (=> b!85924 d!22829))

(declare-fun d!22831 () Bool)

(assert (=> d!22831 (= (apply!82 (+!108 lt!40679 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!40692) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40679 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) lt!40692)))))

(declare-fun bs!3675 () Bool)

(assert (= bs!3675 d!22831))

(declare-fun m!91985 () Bool)

(assert (=> bs!3675 m!91985))

(assert (=> bs!3675 m!91985))

(declare-fun m!91987 () Bool)

(assert (=> bs!3675 m!91987))

(assert (=> b!85924 d!22831))

(declare-fun d!22833 () Bool)

(assert (=> d!22833 (= (apply!82 lt!40679 lt!40692) (get!1204 (getValueByKey!138 (toList!740 lt!40679) lt!40692)))))

(declare-fun bs!3676 () Bool)

(assert (= bs!3676 d!22833))

(declare-fun m!91989 () Bool)

(assert (=> bs!3676 m!91989))

(assert (=> bs!3676 m!91989))

(declare-fun m!91991 () Bool)

(assert (=> bs!3676 m!91991))

(assert (=> b!85924 d!22833))

(declare-fun d!22835 () Bool)

(declare-fun e!56536 () Bool)

(assert (=> d!22835 e!56536))

(declare-fun res!44579 () Bool)

(assert (=> d!22835 (=> (not res!44579) (not e!56536))))

(declare-fun lt!41158 () ListLongMap!1449)

(assert (=> d!22835 (= res!44579 (contains!752 lt!41158 (_1!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(declare-fun lt!41157 () List!1525)

(assert (=> d!22835 (= lt!41158 (ListLongMap!1450 lt!41157))))

(declare-fun lt!41156 () Unit!2510)

(declare-fun lt!41159 () Unit!2510)

(assert (=> d!22835 (= lt!41156 lt!41159)))

(assert (=> d!22835 (= (getValueByKey!138 lt!41157 (_1!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(assert (=> d!22835 (= lt!41159 (lemmaContainsTupThenGetReturnValue!58 lt!41157 (_1!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(assert (=> d!22835 (= lt!41157 (insertStrictlySorted!61 (toList!740 lt!40679) (_1!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(assert (=> d!22835 (= (+!108 lt!40679 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!41158)))

(declare-fun b!86772 () Bool)

(declare-fun res!44580 () Bool)

(assert (=> b!86772 (=> (not res!44580) (not e!56536))))

(assert (=> b!86772 (= res!44580 (= (getValueByKey!138 (toList!740 lt!41158) (_1!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))))))))

(declare-fun b!86773 () Bool)

(assert (=> b!86773 (= e!56536 (contains!753 (toList!740 lt!41158) (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))))))

(assert (= (and d!22835 res!44579) b!86772))

(assert (= (and b!86772 res!44580) b!86773))

(declare-fun m!91993 () Bool)

(assert (=> d!22835 m!91993))

(declare-fun m!91995 () Bool)

(assert (=> d!22835 m!91995))

(declare-fun m!91997 () Bool)

(assert (=> d!22835 m!91997))

(declare-fun m!91999 () Bool)

(assert (=> d!22835 m!91999))

(declare-fun m!92001 () Bool)

(assert (=> b!86772 m!92001))

(declare-fun m!92003 () Bool)

(assert (=> b!86773 m!92003))

(assert (=> b!85924 d!22835))

(declare-fun d!22837 () Bool)

(assert (=> d!22837 (= (apply!82 (+!108 lt!40679 (tuple2!2207 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!40692) (apply!82 lt!40679 lt!40692))))

(declare-fun lt!41160 () Unit!2510)

(assert (=> d!22837 (= lt!41160 (choose!517 lt!40679 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) lt!40692))))

(declare-fun e!56537 () Bool)

(assert (=> d!22837 e!56537))

(declare-fun res!44581 () Bool)

(assert (=> d!22837 (=> (not res!44581) (not e!56537))))

(assert (=> d!22837 (= res!44581 (contains!752 lt!40679 lt!40692))))

(assert (=> d!22837 (= (addApplyDifferent!58 lt!40679 lt!40690 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) lt!40692) lt!41160)))

(declare-fun b!86774 () Bool)

(assert (=> b!86774 (= e!56537 (not (= lt!40692 lt!40690)))))

(assert (= (and d!22837 res!44581) b!86774))

(declare-fun m!92005 () Bool)

(assert (=> d!22837 m!92005))

(assert (=> d!22837 m!90429))

(assert (=> d!22837 m!90431))

(assert (=> d!22837 m!90451))

(declare-fun m!92007 () Bool)

(assert (=> d!22837 m!92007))

(assert (=> d!22837 m!90429))

(assert (=> b!85924 d!22837))

(declare-fun d!22839 () Bool)

(declare-fun e!56538 () Bool)

(assert (=> d!22839 e!56538))

(declare-fun res!44582 () Bool)

(assert (=> d!22839 (=> (not res!44582) (not e!56538))))

(declare-fun lt!41163 () ListLongMap!1449)

(assert (=> d!22839 (= res!44582 (contains!752 lt!41163 (_1!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(declare-fun lt!41162 () List!1525)

(assert (=> d!22839 (= lt!41163 (ListLongMap!1450 lt!41162))))

(declare-fun lt!41161 () Unit!2510)

(declare-fun lt!41164 () Unit!2510)

(assert (=> d!22839 (= lt!41161 lt!41164)))

(assert (=> d!22839 (= (getValueByKey!138 lt!41162 (_1!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22839 (= lt!41164 (lemmaContainsTupThenGetReturnValue!58 lt!41162 (_1!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22839 (= lt!41162 (insertStrictlySorted!61 (toList!740 lt!40677) (_1!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22839 (= (+!108 lt!40677 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!41163)))

(declare-fun b!86775 () Bool)

(declare-fun res!44583 () Bool)

(assert (=> b!86775 (=> (not res!44583) (not e!56538))))

(assert (=> b!86775 (= res!44583 (= (getValueByKey!138 (toList!740 lt!41163) (_1!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(declare-fun b!86776 () Bool)

(assert (=> b!86776 (= e!56538 (contains!753 (toList!740 lt!41163) (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))

(assert (= (and d!22839 res!44582) b!86775))

(assert (= (and b!86775 res!44583) b!86776))

(declare-fun m!92009 () Bool)

(assert (=> d!22839 m!92009))

(declare-fun m!92011 () Bool)

(assert (=> d!22839 m!92011))

(declare-fun m!92013 () Bool)

(assert (=> d!22839 m!92013))

(declare-fun m!92015 () Bool)

(assert (=> d!22839 m!92015))

(declare-fun m!92017 () Bool)

(assert (=> b!86775 m!92017))

(declare-fun m!92019 () Bool)

(assert (=> b!86776 m!92019))

(assert (=> b!85924 d!22839))

(declare-fun d!22841 () Bool)

(assert (=> d!22841 (= (apply!82 (+!108 lt!40677 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!40689) (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40677 (tuple2!2207 lt!40694 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) lt!40689)))))

(declare-fun bs!3677 () Bool)

(assert (= bs!3677 d!22841))

(declare-fun m!92021 () Bool)

(assert (=> bs!3677 m!92021))

(assert (=> bs!3677 m!92021))

(declare-fun m!92023 () Bool)

(assert (=> bs!3677 m!92023))

(assert (=> b!85924 d!22841))

(declare-fun d!22843 () Bool)

(assert (=> d!22843 (= (apply!82 lt!40677 lt!40689) (get!1204 (getValueByKey!138 (toList!740 lt!40677) lt!40689)))))

(declare-fun bs!3678 () Bool)

(assert (= bs!3678 d!22843))

(declare-fun m!92025 () Bool)

(assert (=> bs!3678 m!92025))

(assert (=> bs!3678 m!92025))

(declare-fun m!92027 () Bool)

(assert (=> bs!3678 m!92027))

(assert (=> b!85924 d!22843))

(declare-fun d!22845 () Bool)

(declare-fun e!56540 () Bool)

(assert (=> d!22845 e!56540))

(declare-fun res!44584 () Bool)

(assert (=> d!22845 (=> res!44584 e!56540)))

(declare-fun lt!41165 () Bool)

(assert (=> d!22845 (= res!44584 (not lt!41165))))

(declare-fun lt!41168 () Bool)

(assert (=> d!22845 (= lt!41165 lt!41168)))

(declare-fun lt!41166 () Unit!2510)

(declare-fun e!56539 () Unit!2510)

(assert (=> d!22845 (= lt!41166 e!56539)))

(declare-fun c!14220 () Bool)

(assert (=> d!22845 (= c!14220 lt!41168)))

(assert (=> d!22845 (= lt!41168 (containsKey!142 (toList!740 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) lt!40685))))

(assert (=> d!22845 (= (contains!752 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!40685) lt!41165)))

(declare-fun b!86777 () Bool)

(declare-fun lt!41167 () Unit!2510)

(assert (=> b!86777 (= e!56539 lt!41167)))

(assert (=> b!86777 (= lt!41167 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) lt!40685))))

(assert (=> b!86777 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) lt!40685))))

(declare-fun b!86778 () Bool)

(declare-fun Unit!2570 () Unit!2510)

(assert (=> b!86778 (= e!56539 Unit!2570)))

(declare-fun b!86779 () Bool)

(assert (=> b!86779 (= e!56540 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) lt!40685)))))

(assert (= (and d!22845 c!14220) b!86777))

(assert (= (and d!22845 (not c!14220)) b!86778))

(assert (= (and d!22845 (not res!44584)) b!86779))

(declare-fun m!92029 () Bool)

(assert (=> d!22845 m!92029))

(declare-fun m!92031 () Bool)

(assert (=> b!86777 m!92031))

(declare-fun m!92033 () Bool)

(assert (=> b!86777 m!92033))

(assert (=> b!86777 m!92033))

(declare-fun m!92035 () Bool)

(assert (=> b!86777 m!92035))

(assert (=> b!86779 m!92033))

(assert (=> b!86779 m!92033))

(assert (=> b!86779 m!92035))

(assert (=> b!85924 d!22845))

(declare-fun d!22847 () Bool)

(assert (=> d!22847 (contains!752 (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!40685)))

(declare-fun lt!41169 () Unit!2510)

(assert (=> d!22847 (= lt!41169 (choose!516 lt!40684 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) lt!40685))))

(assert (=> d!22847 (contains!752 lt!40684 lt!40685)))

(assert (=> d!22847 (= (addStillContains!58 lt!40684 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) lt!40685) lt!41169)))

(declare-fun bs!3679 () Bool)

(assert (= bs!3679 d!22847))

(assert (=> bs!3679 m!90447))

(assert (=> bs!3679 m!90447))

(assert (=> bs!3679 m!90449))

(declare-fun m!92037 () Bool)

(assert (=> bs!3679 m!92037))

(declare-fun m!92039 () Bool)

(assert (=> bs!3679 m!92039))

(assert (=> b!85924 d!22847))

(declare-fun d!22849 () Bool)

(assert (=> d!22849 (= (apply!82 lt!40676 lt!40693) (get!1204 (getValueByKey!138 (toList!740 lt!40676) lt!40693)))))

(declare-fun bs!3680 () Bool)

(assert (= bs!3680 d!22849))

(declare-fun m!92041 () Bool)

(assert (=> bs!3680 m!92041))

(assert (=> bs!3680 m!92041))

(declare-fun m!92043 () Bool)

(assert (=> bs!3680 m!92043))

(assert (=> b!85924 d!22849))

(declare-fun d!22851 () Bool)

(declare-fun e!56541 () Bool)

(assert (=> d!22851 e!56541))

(declare-fun res!44585 () Bool)

(assert (=> d!22851 (=> (not res!44585) (not e!56541))))

(declare-fun lt!41172 () ListLongMap!1449)

(assert (=> d!22851 (= res!44585 (contains!752 lt!41172 (_1!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(declare-fun lt!41171 () List!1525)

(assert (=> d!22851 (= lt!41172 (ListLongMap!1450 lt!41171))))

(declare-fun lt!41170 () Unit!2510)

(declare-fun lt!41173 () Unit!2510)

(assert (=> d!22851 (= lt!41170 lt!41173)))

(assert (=> d!22851 (= (getValueByKey!138 lt!41171 (_1!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22851 (= lt!41173 (lemmaContainsTupThenGetReturnValue!58 lt!41171 (_1!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22851 (= lt!41171 (insertStrictlySorted!61 (toList!740 lt!40676) (_1!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))))))

(assert (=> d!22851 (= (+!108 lt!40676 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!41172)))

(declare-fun b!86780 () Bool)

(declare-fun res!44586 () Bool)

(assert (=> b!86780 (=> (not res!44586) (not e!56541))))

(assert (=> b!86780 (= res!44586 (= (getValueByKey!138 (toList!740 lt!41172) (_1!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))))

(declare-fun b!86781 () Bool)

(assert (=> b!86781 (= e!56541 (contains!753 (toList!740 lt!41172) (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))))))

(assert (= (and d!22851 res!44585) b!86780))

(assert (= (and b!86780 res!44586) b!86781))

(declare-fun m!92045 () Bool)

(assert (=> d!22851 m!92045))

(declare-fun m!92047 () Bool)

(assert (=> d!22851 m!92047))

(declare-fun m!92049 () Bool)

(assert (=> d!22851 m!92049))

(declare-fun m!92051 () Bool)

(assert (=> d!22851 m!92051))

(declare-fun m!92053 () Bool)

(assert (=> b!86780 m!92053))

(declare-fun m!92055 () Bool)

(assert (=> b!86781 m!92055))

(assert (=> b!85924 d!22851))

(declare-fun d!22853 () Bool)

(assert (=> d!22853 (= (apply!82 (+!108 lt!40676 (tuple2!2207 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)))) lt!40693) (apply!82 lt!40676 lt!40693))))

(declare-fun lt!41174 () Unit!2510)

(assert (=> d!22853 (= lt!41174 (choose!517 lt!40676 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) lt!40693))))

(declare-fun e!56542 () Bool)

(assert (=> d!22853 e!56542))

(declare-fun res!44587 () Bool)

(assert (=> d!22853 (=> (not res!44587) (not e!56542))))

(assert (=> d!22853 (= res!44587 (contains!752 lt!40676 lt!40693))))

(assert (=> d!22853 (= (addApplyDifferent!58 lt!40676 lt!40687 (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) lt!40693) lt!41174)))

(declare-fun b!86782 () Bool)

(assert (=> b!86782 (= e!56542 (not (= lt!40693 lt!40687)))))

(assert (= (and d!22853 res!44587) b!86782))

(declare-fun m!92057 () Bool)

(assert (=> d!22853 m!92057))

(assert (=> d!22853 m!90441))

(assert (=> d!22853 m!90443))

(assert (=> d!22853 m!90455))

(declare-fun m!92059 () Bool)

(assert (=> d!22853 m!92059))

(assert (=> d!22853 m!90441))

(assert (=> b!85924 d!22853))

(declare-fun d!22855 () Bool)

(declare-fun e!56543 () Bool)

(assert (=> d!22855 e!56543))

(declare-fun res!44588 () Bool)

(assert (=> d!22855 (=> (not res!44588) (not e!56543))))

(declare-fun lt!41177 () ListLongMap!1449)

(assert (=> d!22855 (= res!44588 (contains!752 lt!41177 (_1!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(declare-fun lt!41176 () List!1525)

(assert (=> d!22855 (= lt!41177 (ListLongMap!1450 lt!41176))))

(declare-fun lt!41175 () Unit!2510)

(declare-fun lt!41178 () Unit!2510)

(assert (=> d!22855 (= lt!41175 lt!41178)))

(assert (=> d!22855 (= (getValueByKey!138 lt!41176 (_1!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(assert (=> d!22855 (= lt!41178 (lemmaContainsTupThenGetReturnValue!58 lt!41176 (_1!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(assert (=> d!22855 (= lt!41176 (insertStrictlySorted!61 (toList!740 lt!40684) (_1!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) (_2!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))))))

(assert (=> d!22855 (= (+!108 lt!40684 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))) lt!41177)))

(declare-fun b!86783 () Bool)

(declare-fun res!44589 () Bool)

(assert (=> b!86783 (=> (not res!44589) (not e!56543))))

(assert (=> b!86783 (= res!44589 (= (getValueByKey!138 (toList!740 lt!41177) (_1!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16))))) (Some!143 (_2!1114 (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))))))))

(declare-fun b!86784 () Bool)

(assert (=> b!86784 (= e!56543 (contains!753 (toList!740 lt!41177) (tuple2!2207 lt!40681 (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)))))))

(assert (= (and d!22855 res!44588) b!86783))

(assert (= (and b!86783 res!44589) b!86784))

(declare-fun m!92061 () Bool)

(assert (=> d!22855 m!92061))

(declare-fun m!92063 () Bool)

(assert (=> d!22855 m!92063))

(declare-fun m!92065 () Bool)

(assert (=> d!22855 m!92065))

(declare-fun m!92067 () Bool)

(assert (=> d!22855 m!92067))

(declare-fun m!92069 () Bool)

(assert (=> b!86783 m!92069))

(declare-fun m!92071 () Bool)

(assert (=> b!86784 m!92071))

(assert (=> b!85924 d!22855))

(declare-fun b!86785 () Bool)

(assert (=> b!86785 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> b!86785 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))))))))

(declare-fun e!56548 () Bool)

(declare-fun lt!41183 () ListLongMap!1449)

(assert (=> b!86785 (= e!56548 (= (apply!82 lt!41183 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!86786 () Bool)

(declare-fun res!44590 () Bool)

(declare-fun e!56550 () Bool)

(assert (=> b!86786 (=> (not res!44590) (not e!56550))))

(assert (=> b!86786 (= res!44590 (not (contains!752 lt!41183 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!86787 () Bool)

(declare-fun e!56546 () Bool)

(assert (=> b!86787 (= e!56550 e!56546)))

(declare-fun c!14222 () Bool)

(declare-fun e!56547 () Bool)

(assert (=> b!86787 (= c!14222 e!56547)))

(declare-fun res!44591 () Bool)

(assert (=> b!86787 (=> (not res!44591) (not e!56547))))

(assert (=> b!86787 (= res!44591 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86788 () Bool)

(declare-fun e!56549 () ListLongMap!1449)

(assert (=> b!86788 (= e!56549 (ListLongMap!1450 Nil!1522))))

(declare-fun bm!8261 () Bool)

(declare-fun call!8264 () ListLongMap!1449)

(assert (=> bm!8261 (= call!8264 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16)))))

(declare-fun b!86790 () Bool)

(declare-fun e!56544 () Bool)

(assert (=> b!86790 (= e!56544 (isEmpty!339 lt!41183))))

(declare-fun b!86791 () Bool)

(declare-fun e!56545 () ListLongMap!1449)

(assert (=> b!86791 (= e!56545 call!8264)))

(declare-fun b!86792 () Bool)

(assert (=> b!86792 (= e!56544 (= lt!41183 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2337 newMap!16))))))

(declare-fun b!86793 () Bool)

(assert (=> b!86793 (= e!56546 e!56548)))

(assert (=> b!86793 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun res!44593 () Bool)

(assert (=> b!86793 (= res!44593 (contains!752 lt!41183 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86793 (=> (not res!44593) (not e!56548))))

(declare-fun b!86794 () Bool)

(declare-fun lt!41185 () Unit!2510)

(declare-fun lt!41184 () Unit!2510)

(assert (=> b!86794 (= lt!41185 lt!41184)))

(declare-fun lt!41180 () V!3025)

(declare-fun lt!41181 () ListLongMap!1449)

(declare-fun lt!41179 () (_ BitVec 64))

(declare-fun lt!41182 () (_ BitVec 64))

(assert (=> b!86794 (not (contains!752 (+!108 lt!41181 (tuple2!2207 lt!41182 lt!41180)) lt!41179))))

(assert (=> b!86794 (= lt!41184 (addStillNotContains!32 lt!41181 lt!41182 lt!41180 lt!41179))))

(assert (=> b!86794 (= lt!41179 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!86794 (= lt!41180 (get!1199 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!86794 (= lt!41182 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86794 (= lt!41181 call!8264)))

(assert (=> b!86794 (= e!56545 (+!108 call!8264 (tuple2!2207 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (get!1199 (select (arr!1907 (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86795 () Bool)

(assert (=> b!86795 (= e!56549 e!56545)))

(declare-fun c!14223 () Bool)

(assert (=> b!86795 (= c!14223 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86796 () Bool)

(assert (=> b!86796 (= e!56546 e!56544)))

(declare-fun c!14221 () Bool)

(assert (=> b!86796 (= c!14221 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86789 () Bool)

(assert (=> b!86789 (= e!56547 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86789 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun d!22857 () Bool)

(assert (=> d!22857 e!56550))

(declare-fun res!44592 () Bool)

(assert (=> d!22857 (=> (not res!44592) (not e!56550))))

(assert (=> d!22857 (= res!44592 (not (contains!752 lt!41183 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22857 (= lt!41183 e!56549)))

(declare-fun c!14224 () Bool)

(assert (=> d!22857 (= c!14224 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!22857 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22857 (= (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (ite c!13828 (_values!2320 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) (mask!6364 newMap!16) (ite c!13828 (ite c!13823 lt!40338 lt!40355) (extraKeys!2176 newMap!16)) (ite (and c!13828 c!13823) lt!40142 (zeroValue!2229 newMap!16)) (ite c!13828 (ite c!13823 (minValue!2229 newMap!16) lt!40142) (minValue!2229 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41183)))

(assert (= (and d!22857 c!14224) b!86788))

(assert (= (and d!22857 (not c!14224)) b!86795))

(assert (= (and b!86795 c!14223) b!86794))

(assert (= (and b!86795 (not c!14223)) b!86791))

(assert (= (or b!86794 b!86791) bm!8261))

(assert (= (and d!22857 res!44592) b!86786))

(assert (= (and b!86786 res!44590) b!86787))

(assert (= (and b!86787 res!44591) b!86789))

(assert (= (and b!86787 c!14222) b!86793))

(assert (= (and b!86787 (not c!14222)) b!86796))

(assert (= (and b!86793 res!44593) b!86785))

(assert (= (and b!86796 c!14221) b!86792))

(assert (= (and b!86796 (not c!14221)) b!86790))

(declare-fun b_lambda!3835 () Bool)

(assert (=> (not b_lambda!3835) (not b!86785)))

(assert (=> b!86785 t!5251))

(declare-fun b_and!5229 () Bool)

(assert (= b_and!5225 (and (=> t!5251 result!2923) b_and!5229)))

(assert (=> b!86785 t!5253))

(declare-fun b_and!5231 () Bool)

(assert (= b_and!5227 (and (=> t!5253 result!2925) b_and!5231)))

(declare-fun b_lambda!3837 () Bool)

(assert (=> (not b_lambda!3837) (not b!86794)))

(assert (=> b!86794 t!5251))

(declare-fun b_and!5233 () Bool)

(assert (= b_and!5229 (and (=> t!5251 result!2923) b_and!5233)))

(assert (=> b!86794 t!5253))

(declare-fun b_and!5235 () Bool)

(assert (= b_and!5231 (and (=> t!5253 result!2925) b_and!5235)))

(declare-fun m!92073 () Bool)

(assert (=> d!22857 m!92073))

(assert (=> d!22857 m!90001))

(declare-fun m!92075 () Bool)

(assert (=> bm!8261 m!92075))

(assert (=> b!86794 m!90469))

(assert (=> b!86794 m!90011))

(assert (=> b!86794 m!90473))

(assert (=> b!86794 m!90011))

(assert (=> b!86794 m!89961))

(declare-fun m!92077 () Bool)

(assert (=> b!86794 m!92077))

(declare-fun m!92079 () Bool)

(assert (=> b!86794 m!92079))

(declare-fun m!92081 () Bool)

(assert (=> b!86794 m!92081))

(assert (=> b!86794 m!92079))

(declare-fun m!92083 () Bool)

(assert (=> b!86794 m!92083))

(assert (=> b!86794 m!90469))

(assert (=> b!86785 m!90469))

(assert (=> b!86785 m!90011))

(assert (=> b!86785 m!90473))

(assert (=> b!86785 m!90011))

(assert (=> b!86785 m!89961))

(assert (=> b!86785 m!89961))

(declare-fun m!92085 () Bool)

(assert (=> b!86785 m!92085))

(assert (=> b!86785 m!90469))

(declare-fun m!92087 () Bool)

(assert (=> b!86786 m!92087))

(assert (=> b!86792 m!92075))

(assert (=> b!86789 m!89961))

(assert (=> b!86789 m!89961))

(assert (=> b!86789 m!90007))

(declare-fun m!92089 () Bool)

(assert (=> b!86790 m!92089))

(assert (=> b!86795 m!89961))

(assert (=> b!86795 m!89961))

(assert (=> b!86795 m!90007))

(assert (=> b!86793 m!89961))

(assert (=> b!86793 m!89961))

(declare-fun m!92091 () Bool)

(assert (=> b!86793 m!92091))

(assert (=> b!85924 d!22857))

(declare-fun d!22859 () Bool)

(declare-fun c!14225 () Bool)

(assert (=> d!22859 (= c!14225 (and ((_ is Cons!1521) (toList!740 lt!40877)) (= (_1!1114 (h!2112 (toList!740 lt!40877))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56551 () Option!144)

(assert (=> d!22859 (= (getValueByKey!138 (toList!740 lt!40877) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56551)))

(declare-fun b!86800 () Bool)

(declare-fun e!56552 () Option!144)

(assert (=> b!86800 (= e!56552 None!142)))

(declare-fun b!86797 () Bool)

(assert (=> b!86797 (= e!56551 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40877)))))))

(declare-fun b!86799 () Bool)

(assert (=> b!86799 (= e!56552 (getValueByKey!138 (t!5237 (toList!740 lt!40877)) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86798 () Bool)

(assert (=> b!86798 (= e!56551 e!56552)))

(declare-fun c!14226 () Bool)

(assert (=> b!86798 (= c!14226 (and ((_ is Cons!1521) (toList!740 lt!40877)) (not (= (_1!1114 (h!2112 (toList!740 lt!40877))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22859 c!14225) b!86797))

(assert (= (and d!22859 (not c!14225)) b!86798))

(assert (= (and b!86798 c!14226) b!86799))

(assert (= (and b!86798 (not c!14226)) b!86800))

(declare-fun m!92093 () Bool)

(assert (=> b!86799 m!92093))

(assert (=> b!86098 d!22859))

(declare-fun d!22861 () Bool)

(declare-fun e!56554 () Bool)

(assert (=> d!22861 e!56554))

(declare-fun res!44594 () Bool)

(assert (=> d!22861 (=> res!44594 e!56554)))

(declare-fun lt!41186 () Bool)

(assert (=> d!22861 (= res!44594 (not lt!41186))))

(declare-fun lt!41189 () Bool)

(assert (=> d!22861 (= lt!41186 lt!41189)))

(declare-fun lt!41187 () Unit!2510)

(declare-fun e!56553 () Unit!2510)

(assert (=> d!22861 (= lt!41187 e!56553)))

(declare-fun c!14227 () Bool)

(assert (=> d!22861 (= c!14227 lt!41189)))

(assert (=> d!22861 (= lt!41189 (containsKey!142 (toList!740 lt!40843) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22861 (= (contains!752 lt!40843 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41186)))

(declare-fun b!86801 () Bool)

(declare-fun lt!41188 () Unit!2510)

(assert (=> b!86801 (= e!56553 lt!41188)))

(assert (=> b!86801 (= lt!41188 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40843) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86801 (isDefined!92 (getValueByKey!138 (toList!740 lt!40843) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86802 () Bool)

(declare-fun Unit!2571 () Unit!2510)

(assert (=> b!86802 (= e!56553 Unit!2571)))

(declare-fun b!86803 () Bool)

(assert (=> b!86803 (= e!56554 (isDefined!92 (getValueByKey!138 (toList!740 lt!40843) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22861 c!14227) b!86801))

(assert (= (and d!22861 (not c!14227)) b!86802))

(assert (= (and d!22861 (not res!44594)) b!86803))

(declare-fun m!92095 () Bool)

(assert (=> d!22861 m!92095))

(declare-fun m!92097 () Bool)

(assert (=> b!86801 m!92097))

(assert (=> b!86801 m!90691))

(assert (=> b!86801 m!90691))

(declare-fun m!92099 () Bool)

(assert (=> b!86801 m!92099))

(assert (=> b!86803 m!90691))

(assert (=> b!86803 m!90691))

(assert (=> b!86803 m!92099))

(assert (=> d!22327 d!22861))

(declare-fun d!22863 () Bool)

(declare-fun c!14228 () Bool)

(assert (=> d!22863 (= c!14228 (and ((_ is Cons!1521) lt!40842) (= (_1!1114 (h!2112 lt!40842)) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56555 () Option!144)

(assert (=> d!22863 (= (getValueByKey!138 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56555)))

(declare-fun b!86807 () Bool)

(declare-fun e!56556 () Option!144)

(assert (=> b!86807 (= e!56556 None!142)))

(declare-fun b!86804 () Bool)

(assert (=> b!86804 (= e!56555 (Some!143 (_2!1114 (h!2112 lt!40842))))))

(declare-fun b!86806 () Bool)

(assert (=> b!86806 (= e!56556 (getValueByKey!138 (t!5237 lt!40842) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86805 () Bool)

(assert (=> b!86805 (= e!56555 e!56556)))

(declare-fun c!14229 () Bool)

(assert (=> b!86805 (= c!14229 (and ((_ is Cons!1521) lt!40842) (not (= (_1!1114 (h!2112 lt!40842)) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22863 c!14228) b!86804))

(assert (= (and d!22863 (not c!14228)) b!86805))

(assert (= (and b!86805 c!14229) b!86806))

(assert (= (and b!86805 (not c!14229)) b!86807))

(declare-fun m!92101 () Bool)

(assert (=> b!86806 m!92101))

(assert (=> d!22327 d!22863))

(declare-fun d!22865 () Bool)

(assert (=> d!22865 (= (getValueByKey!138 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41190 () Unit!2510)

(assert (=> d!22865 (= lt!41190 (choose!507 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56557 () Bool)

(assert (=> d!22865 e!56557))

(declare-fun res!44595 () Bool)

(assert (=> d!22865 (=> (not res!44595) (not e!56557))))

(assert (=> d!22865 (= res!44595 (isStrictlySorted!293 lt!40842))))

(assert (=> d!22865 (= (lemmaContainsTupThenGetReturnValue!58 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41190)))

(declare-fun b!86808 () Bool)

(declare-fun res!44596 () Bool)

(assert (=> b!86808 (=> (not res!44596) (not e!56557))))

(assert (=> b!86808 (= res!44596 (containsKey!142 lt!40842 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86809 () Bool)

(assert (=> b!86809 (= e!56557 (contains!753 lt!40842 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22865 res!44595) b!86808))

(assert (= (and b!86808 res!44596) b!86809))

(assert (=> d!22865 m!90685))

(declare-fun m!92103 () Bool)

(assert (=> d!22865 m!92103))

(declare-fun m!92105 () Bool)

(assert (=> d!22865 m!92105))

(declare-fun m!92107 () Bool)

(assert (=> b!86808 m!92107))

(declare-fun m!92109 () Bool)

(assert (=> b!86809 m!92109))

(assert (=> d!22327 d!22865))

(declare-fun b!86810 () Bool)

(declare-fun e!56560 () List!1525)

(assert (=> b!86810 (= e!56560 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40404)) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86811 () Bool)

(declare-fun c!14233 () Bool)

(declare-fun c!14232 () Bool)

(assert (=> b!86811 (= e!56560 (ite c!14232 (t!5237 (toList!740 lt!40404)) (ite c!14233 (Cons!1521 (h!2112 (toList!740 lt!40404)) (t!5237 (toList!740 lt!40404))) Nil!1522)))))

(declare-fun b!86812 () Bool)

(declare-fun e!56561 () List!1525)

(declare-fun call!8266 () List!1525)

(assert (=> b!86812 (= e!56561 call!8266)))

(declare-fun b!86813 () Bool)

(declare-fun e!56558 () List!1525)

(declare-fun call!8265 () List!1525)

(assert (=> b!86813 (= e!56558 call!8265)))

(declare-fun b!86814 () Bool)

(assert (=> b!86814 (= c!14233 (and ((_ is Cons!1521) (toList!740 lt!40404)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40404))) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56562 () List!1525)

(assert (=> b!86814 (= e!56558 e!56562)))

(declare-fun b!86815 () Bool)

(declare-fun res!44597 () Bool)

(declare-fun e!56559 () Bool)

(assert (=> b!86815 (=> (not res!44597) (not e!56559))))

(declare-fun lt!41191 () List!1525)

(assert (=> b!86815 (= res!44597 (containsKey!142 lt!41191 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86817 () Bool)

(declare-fun call!8267 () List!1525)

(assert (=> b!86817 (= e!56562 call!8267)))

(declare-fun b!86818 () Bool)

(assert (=> b!86818 (= e!56559 (contains!753 lt!41191 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8262 () Bool)

(declare-fun c!14231 () Bool)

(assert (=> bm!8262 (= call!8266 ($colon$colon!71 e!56560 (ite c!14231 (h!2112 (toList!740 lt!40404)) (tuple2!2207 (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14230 () Bool)

(assert (=> bm!8262 (= c!14230 c!14231)))

(declare-fun bm!8263 () Bool)

(assert (=> bm!8263 (= call!8267 call!8265)))

(declare-fun b!86816 () Bool)

(assert (=> b!86816 (= e!56562 call!8267)))

(declare-fun d!22867 () Bool)

(assert (=> d!22867 e!56559))

(declare-fun res!44598 () Bool)

(assert (=> d!22867 (=> (not res!44598) (not e!56559))))

(assert (=> d!22867 (= res!44598 (isStrictlySorted!293 lt!41191))))

(assert (=> d!22867 (= lt!41191 e!56561)))

(assert (=> d!22867 (= c!14231 (and ((_ is Cons!1521) (toList!740 lt!40404)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40404))) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22867 (isStrictlySorted!293 (toList!740 lt!40404))))

(assert (=> d!22867 (= (insertStrictlySorted!61 (toList!740 lt!40404) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41191)))

(declare-fun b!86819 () Bool)

(assert (=> b!86819 (= e!56561 e!56558)))

(assert (=> b!86819 (= c!14232 (and ((_ is Cons!1521) (toList!740 lt!40404)) (= (_1!1114 (h!2112 (toList!740 lt!40404))) (_1!1114 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8264 () Bool)

(assert (=> bm!8264 (= call!8265 call!8266)))

(assert (= (and d!22867 c!14231) b!86812))

(assert (= (and d!22867 (not c!14231)) b!86819))

(assert (= (and b!86819 c!14232) b!86813))

(assert (= (and b!86819 (not c!14232)) b!86814))

(assert (= (and b!86814 c!14233) b!86817))

(assert (= (and b!86814 (not c!14233)) b!86816))

(assert (= (or b!86817 b!86816) bm!8263))

(assert (= (or b!86813 bm!8263) bm!8264))

(assert (= (or b!86812 bm!8264) bm!8262))

(assert (= (and bm!8262 c!14230) b!86810))

(assert (= (and bm!8262 (not c!14230)) b!86811))

(assert (= (and d!22867 res!44598) b!86815))

(assert (= (and b!86815 res!44597) b!86818))

(declare-fun m!92111 () Bool)

(assert (=> d!22867 m!92111))

(declare-fun m!92113 () Bool)

(assert (=> d!22867 m!92113))

(declare-fun m!92115 () Bool)

(assert (=> b!86818 m!92115))

(declare-fun m!92117 () Bool)

(assert (=> b!86815 m!92117))

(declare-fun m!92119 () Bool)

(assert (=> b!86810 m!92119))

(declare-fun m!92121 () Bool)

(assert (=> bm!8262 m!92121))

(assert (=> d!22327 d!22867))

(declare-fun c!14234 () Bool)

(declare-fun d!22869 () Bool)

(assert (=> d!22869 (= c!14234 (and ((_ is Cons!1521) (toList!740 lt!40857)) (= (_1!1114 (h!2112 (toList!740 lt!40857))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56563 () Option!144)

(assert (=> d!22869 (= (getValueByKey!138 (toList!740 lt!40857) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56563)))

(declare-fun b!86823 () Bool)

(declare-fun e!56564 () Option!144)

(assert (=> b!86823 (= e!56564 None!142)))

(declare-fun b!86820 () Bool)

(assert (=> b!86820 (= e!56563 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40857)))))))

(declare-fun b!86822 () Bool)

(assert (=> b!86822 (= e!56564 (getValueByKey!138 (t!5237 (toList!740 lt!40857)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86821 () Bool)

(assert (=> b!86821 (= e!56563 e!56564)))

(declare-fun c!14235 () Bool)

(assert (=> b!86821 (= c!14235 (and ((_ is Cons!1521) (toList!740 lt!40857)) (not (= (_1!1114 (h!2112 (toList!740 lt!40857))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22869 c!14234) b!86820))

(assert (= (and d!22869 (not c!14234)) b!86821))

(assert (= (and b!86821 c!14235) b!86822))

(assert (= (and b!86821 (not c!14235)) b!86823))

(declare-fun m!92123 () Bool)

(assert (=> b!86822 m!92123))

(assert (=> b!86087 d!22869))

(declare-fun d!22871 () Bool)

(assert (=> d!22871 (= (inRange!0 (index!3122 lt!40604) (mask!6364 newMap!16)) (and (bvsge (index!3122 lt!40604) #b00000000000000000000000000000000) (bvslt (index!3122 lt!40604) (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!85749 d!22871))

(assert (=> b!85982 d!22305))

(declare-fun d!22873 () Bool)

(assert (=> d!22873 (= (isEmpty!340 (toList!740 lt!40471)) ((_ is Nil!1522) (toList!740 lt!40471)))))

(assert (=> d!22149 d!22873))

(assert (=> b!85820 d!22579))

(assert (=> b!85820 d!22259))

(declare-fun d!22875 () Bool)

(declare-fun res!44599 () Bool)

(declare-fun e!56565 () Bool)

(assert (=> d!22875 (=> (not res!44599) (not e!56565))))

(assert (=> d!22875 (= res!44599 (simpleValid!58 (_2!1113 lt!40772)))))

(assert (=> d!22875 (= (valid!335 (_2!1113 lt!40772)) e!56565)))

(declare-fun b!86824 () Bool)

(declare-fun res!44600 () Bool)

(assert (=> b!86824 (=> (not res!44600) (not e!56565))))

(assert (=> b!86824 (= res!44600 (= (arrayCountValidKeys!0 (_keys!4008 (_2!1113 lt!40772)) #b00000000000000000000000000000000 (size!2151 (_keys!4008 (_2!1113 lt!40772)))) (_size!426 (_2!1113 lt!40772))))))

(declare-fun b!86825 () Bool)

(declare-fun res!44601 () Bool)

(assert (=> b!86825 (=> (not res!44601) (not e!56565))))

(assert (=> b!86825 (= res!44601 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4008 (_2!1113 lt!40772)) (mask!6364 (_2!1113 lt!40772))))))

(declare-fun b!86826 () Bool)

(assert (=> b!86826 (= e!56565 (arrayNoDuplicates!0 (_keys!4008 (_2!1113 lt!40772)) #b00000000000000000000000000000000 Nil!1523))))

(assert (= (and d!22875 res!44599) b!86824))

(assert (= (and b!86824 res!44600) b!86825))

(assert (= (and b!86825 res!44601) b!86826))

(declare-fun m!92125 () Bool)

(assert (=> d!22875 m!92125))

(declare-fun m!92127 () Bool)

(assert (=> b!86824 m!92127))

(declare-fun m!92129 () Bool)

(assert (=> b!86825 m!92129))

(declare-fun m!92131 () Bool)

(assert (=> b!86826 m!92131))

(assert (=> b!85984 d!22875))

(declare-fun d!22877 () Bool)

(declare-fun c!14236 () Bool)

(assert (=> d!22877 (= c!14236 (and ((_ is Cons!1521) (t!5237 lt!40479)) (= (_1!1114 (h!2112 (t!5237 lt!40479))) (_1!1114 lt!40153))))))

(declare-fun e!56566 () Option!144)

(assert (=> d!22877 (= (getValueByKey!138 (t!5237 lt!40479) (_1!1114 lt!40153)) e!56566)))

(declare-fun b!86830 () Bool)

(declare-fun e!56567 () Option!144)

(assert (=> b!86830 (= e!56567 None!142)))

(declare-fun b!86827 () Bool)

(assert (=> b!86827 (= e!56566 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40479)))))))

(declare-fun b!86829 () Bool)

(assert (=> b!86829 (= e!56567 (getValueByKey!138 (t!5237 (t!5237 lt!40479)) (_1!1114 lt!40153)))))

(declare-fun b!86828 () Bool)

(assert (=> b!86828 (= e!56566 e!56567)))

(declare-fun c!14237 () Bool)

(assert (=> b!86828 (= c!14237 (and ((_ is Cons!1521) (t!5237 lt!40479)) (not (= (_1!1114 (h!2112 (t!5237 lt!40479))) (_1!1114 lt!40153)))))))

(assert (= (and d!22877 c!14236) b!86827))

(assert (= (and d!22877 (not c!14236)) b!86828))

(assert (= (and b!86828 c!14237) b!86829))

(assert (= (and b!86828 (not c!14237)) b!86830))

(declare-fun m!92133 () Bool)

(assert (=> b!86829 m!92133))

(assert (=> b!85565 d!22877))

(declare-fun d!22879 () Bool)

(declare-fun e!56569 () Bool)

(assert (=> d!22879 e!56569))

(declare-fun res!44602 () Bool)

(assert (=> d!22879 (=> res!44602 e!56569)))

(declare-fun lt!41192 () Bool)

(assert (=> d!22879 (= res!44602 (not lt!41192))))

(declare-fun lt!41195 () Bool)

(assert (=> d!22879 (= lt!41192 lt!41195)))

(declare-fun lt!41193 () Unit!2510)

(declare-fun e!56568 () Unit!2510)

(assert (=> d!22879 (= lt!41193 e!56568)))

(declare-fun c!14238 () Bool)

(assert (=> d!22879 (= c!14238 lt!41195)))

(assert (=> d!22879 (= lt!41195 (containsKey!142 (toList!740 lt!40632) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22879 (= (contains!752 lt!40632 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41192)))

(declare-fun b!86831 () Bool)

(declare-fun lt!41194 () Unit!2510)

(assert (=> b!86831 (= e!56568 lt!41194)))

(assert (=> b!86831 (= lt!41194 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40632) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!86831 (isDefined!92 (getValueByKey!138 (toList!740 lt!40632) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86832 () Bool)

(declare-fun Unit!2572 () Unit!2510)

(assert (=> b!86832 (= e!56568 Unit!2572)))

(declare-fun b!86833 () Bool)

(assert (=> b!86833 (= e!56569 (isDefined!92 (getValueByKey!138 (toList!740 lt!40632) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22879 c!14238) b!86831))

(assert (= (and d!22879 (not c!14238)) b!86832))

(assert (= (and d!22879 (not res!44602)) b!86833))

(declare-fun m!92135 () Bool)

(assert (=> d!22879 m!92135))

(declare-fun m!92137 () Bool)

(assert (=> b!86831 m!92137))

(assert (=> b!86831 m!90271))

(assert (=> b!86831 m!90271))

(declare-fun m!92139 () Bool)

(assert (=> b!86831 m!92139))

(assert (=> b!86833 m!90271))

(assert (=> b!86833 m!90271))

(assert (=> b!86833 m!92139))

(assert (=> d!22205 d!22879))

(declare-fun d!22881 () Bool)

(declare-fun c!14239 () Bool)

(assert (=> d!22881 (= c!14239 (and ((_ is Cons!1521) lt!40631) (= (_1!1114 (h!2112 lt!40631)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56570 () Option!144)

(assert (=> d!22881 (= (getValueByKey!138 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56570)))

(declare-fun b!86837 () Bool)

(declare-fun e!56571 () Option!144)

(assert (=> b!86837 (= e!56571 None!142)))

(declare-fun b!86834 () Bool)

(assert (=> b!86834 (= e!56570 (Some!143 (_2!1114 (h!2112 lt!40631))))))

(declare-fun b!86836 () Bool)

(assert (=> b!86836 (= e!56571 (getValueByKey!138 (t!5237 lt!40631) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86835 () Bool)

(assert (=> b!86835 (= e!56570 e!56571)))

(declare-fun c!14240 () Bool)

(assert (=> b!86835 (= c!14240 (and ((_ is Cons!1521) lt!40631) (not (= (_1!1114 (h!2112 lt!40631)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22881 c!14239) b!86834))

(assert (= (and d!22881 (not c!14239)) b!86835))

(assert (= (and b!86835 c!14240) b!86836))

(assert (= (and b!86835 (not c!14240)) b!86837))

(declare-fun m!92141 () Bool)

(assert (=> b!86836 m!92141))

(assert (=> d!22205 d!22881))

(declare-fun d!22883 () Bool)

(assert (=> d!22883 (= (getValueByKey!138 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41196 () Unit!2510)

(assert (=> d!22883 (= lt!41196 (choose!507 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56572 () Bool)

(assert (=> d!22883 e!56572))

(declare-fun res!44603 () Bool)

(assert (=> d!22883 (=> (not res!44603) (not e!56572))))

(assert (=> d!22883 (= res!44603 (isStrictlySorted!293 lt!40631))))

(assert (=> d!22883 (= (lemmaContainsTupThenGetReturnValue!58 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41196)))

(declare-fun b!86838 () Bool)

(declare-fun res!44604 () Bool)

(assert (=> b!86838 (=> (not res!44604) (not e!56572))))

(assert (=> b!86838 (= res!44604 (containsKey!142 lt!40631 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86839 () Bool)

(assert (=> b!86839 (= e!56572 (contains!753 lt!40631 (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!22883 res!44603) b!86838))

(assert (= (and b!86838 res!44604) b!86839))

(assert (=> d!22883 m!90265))

(declare-fun m!92143 () Bool)

(assert (=> d!22883 m!92143))

(declare-fun m!92145 () Bool)

(assert (=> d!22883 m!92145))

(declare-fun m!92147 () Bool)

(assert (=> b!86838 m!92147))

(declare-fun m!92149 () Bool)

(assert (=> b!86839 m!92149))

(assert (=> d!22205 d!22883))

(declare-fun b!86840 () Bool)

(declare-fun e!56575 () List!1525)

(assert (=> b!86840 (= e!56575 (insertStrictlySorted!61 (t!5237 (toList!740 call!8122)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86841 () Bool)

(declare-fun c!14244 () Bool)

(declare-fun c!14243 () Bool)

(assert (=> b!86841 (= e!56575 (ite c!14243 (t!5237 (toList!740 call!8122)) (ite c!14244 (Cons!1521 (h!2112 (toList!740 call!8122)) (t!5237 (toList!740 call!8122))) Nil!1522)))))

(declare-fun b!86842 () Bool)

(declare-fun e!56576 () List!1525)

(declare-fun call!8269 () List!1525)

(assert (=> b!86842 (= e!56576 call!8269)))

(declare-fun b!86843 () Bool)

(declare-fun e!56573 () List!1525)

(declare-fun call!8268 () List!1525)

(assert (=> b!86843 (= e!56573 call!8268)))

(declare-fun b!86844 () Bool)

(assert (=> b!86844 (= c!14244 (and ((_ is Cons!1521) (toList!740 call!8122)) (bvsgt (_1!1114 (h!2112 (toList!740 call!8122))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56577 () List!1525)

(assert (=> b!86844 (= e!56573 e!56577)))

(declare-fun b!86845 () Bool)

(declare-fun res!44605 () Bool)

(declare-fun e!56574 () Bool)

(assert (=> b!86845 (=> (not res!44605) (not e!56574))))

(declare-fun lt!41197 () List!1525)

(assert (=> b!86845 (= res!44605 (containsKey!142 lt!41197 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86847 () Bool)

(declare-fun call!8270 () List!1525)

(assert (=> b!86847 (= e!56577 call!8270)))

(declare-fun b!86848 () Bool)

(assert (=> b!86848 (= e!56574 (contains!753 lt!41197 (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun c!14242 () Bool)

(declare-fun bm!8265 () Bool)

(assert (=> bm!8265 (= call!8269 ($colon$colon!71 e!56575 (ite c!14242 (h!2112 (toList!740 call!8122)) (tuple2!2207 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14241 () Bool)

(assert (=> bm!8265 (= c!14241 c!14242)))

(declare-fun bm!8266 () Bool)

(assert (=> bm!8266 (= call!8270 call!8268)))

(declare-fun b!86846 () Bool)

(assert (=> b!86846 (= e!56577 call!8270)))

(declare-fun d!22885 () Bool)

(assert (=> d!22885 e!56574))

(declare-fun res!44606 () Bool)

(assert (=> d!22885 (=> (not res!44606) (not e!56574))))

(assert (=> d!22885 (= res!44606 (isStrictlySorted!293 lt!41197))))

(assert (=> d!22885 (= lt!41197 e!56576)))

(assert (=> d!22885 (= c!14242 (and ((_ is Cons!1521) (toList!740 call!8122)) (bvslt (_1!1114 (h!2112 (toList!740 call!8122))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!22885 (isStrictlySorted!293 (toList!740 call!8122))))

(assert (=> d!22885 (= (insertStrictlySorted!61 (toList!740 call!8122) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41197)))

(declare-fun b!86849 () Bool)

(assert (=> b!86849 (= e!56576 e!56573)))

(assert (=> b!86849 (= c!14243 (and ((_ is Cons!1521) (toList!740 call!8122)) (= (_1!1114 (h!2112 (toList!740 call!8122))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8267 () Bool)

(assert (=> bm!8267 (= call!8268 call!8269)))

(assert (= (and d!22885 c!14242) b!86842))

(assert (= (and d!22885 (not c!14242)) b!86849))

(assert (= (and b!86849 c!14243) b!86843))

(assert (= (and b!86849 (not c!14243)) b!86844))

(assert (= (and b!86844 c!14244) b!86847))

(assert (= (and b!86844 (not c!14244)) b!86846))

(assert (= (or b!86847 b!86846) bm!8266))

(assert (= (or b!86843 bm!8266) bm!8267))

(assert (= (or b!86842 bm!8267) bm!8265))

(assert (= (and bm!8265 c!14241) b!86840))

(assert (= (and bm!8265 (not c!14241)) b!86841))

(assert (= (and d!22885 res!44606) b!86845))

(assert (= (and b!86845 res!44605) b!86848))

(declare-fun m!92151 () Bool)

(assert (=> d!22885 m!92151))

(declare-fun m!92153 () Bool)

(assert (=> d!22885 m!92153))

(declare-fun m!92155 () Bool)

(assert (=> b!86848 m!92155))

(declare-fun m!92157 () Bool)

(assert (=> b!86845 m!92157))

(declare-fun m!92159 () Bool)

(assert (=> b!86840 m!92159))

(declare-fun m!92161 () Bool)

(assert (=> bm!8265 m!92161))

(assert (=> d!22205 d!22885))

(declare-fun d!22887 () Bool)

(declare-fun lt!41198 () Bool)

(assert (=> d!22887 (= lt!41198 (select (content!89 (toList!740 lt!40839)) (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56578 () Bool)

(assert (=> d!22887 (= lt!41198 e!56578)))

(declare-fun res!44607 () Bool)

(assert (=> d!22887 (=> (not res!44607) (not e!56578))))

(assert (=> d!22887 (= res!44607 ((_ is Cons!1521) (toList!740 lt!40839)))))

(assert (=> d!22887 (= (contains!753 (toList!740 lt!40839) (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!41198)))

(declare-fun b!86850 () Bool)

(declare-fun e!56579 () Bool)

(assert (=> b!86850 (= e!56578 e!56579)))

(declare-fun res!44608 () Bool)

(assert (=> b!86850 (=> res!44608 e!56579)))

(assert (=> b!86850 (= res!44608 (= (h!2112 (toList!740 lt!40839)) (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86851 () Bool)

(assert (=> b!86851 (= e!56579 (contains!753 (t!5237 (toList!740 lt!40839)) (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22887 res!44607) b!86850))

(assert (= (and b!86850 (not res!44608)) b!86851))

(declare-fun m!92163 () Bool)

(assert (=> d!22887 m!92163))

(declare-fun m!92165 () Bool)

(assert (=> d!22887 m!92165))

(declare-fun m!92167 () Bool)

(assert (=> b!86851 m!92167))

(assert (=> b!86077 d!22887))

(declare-fun b!86852 () Bool)

(declare-fun e!56582 () List!1525)

(assert (=> b!86852 (= e!56582 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 lt!40154))) (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(declare-fun b!86853 () Bool)

(declare-fun c!14248 () Bool)

(declare-fun c!14247 () Bool)

(assert (=> b!86853 (= e!56582 (ite c!14247 (t!5237 (t!5237 (toList!740 lt!40154))) (ite c!14248 (Cons!1521 (h!2112 (t!5237 (toList!740 lt!40154))) (t!5237 (t!5237 (toList!740 lt!40154)))) Nil!1522)))))

(declare-fun b!86854 () Bool)

(declare-fun e!56583 () List!1525)

(declare-fun call!8272 () List!1525)

(assert (=> b!86854 (= e!56583 call!8272)))

(declare-fun b!86855 () Bool)

(declare-fun e!56580 () List!1525)

(declare-fun call!8271 () List!1525)

(assert (=> b!86855 (= e!56580 call!8271)))

(declare-fun b!86856 () Bool)

(assert (=> b!86856 (= c!14248 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40154))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40154)))) (_1!1114 lt!40143))))))

(declare-fun e!56584 () List!1525)

(assert (=> b!86856 (= e!56580 e!56584)))

(declare-fun b!86857 () Bool)

(declare-fun res!44609 () Bool)

(declare-fun e!56581 () Bool)

(assert (=> b!86857 (=> (not res!44609) (not e!56581))))

(declare-fun lt!41199 () List!1525)

(assert (=> b!86857 (= res!44609 (containsKey!142 lt!41199 (_1!1114 lt!40143)))))

(declare-fun b!86859 () Bool)

(declare-fun call!8273 () List!1525)

(assert (=> b!86859 (= e!56584 call!8273)))

(declare-fun b!86860 () Bool)

(assert (=> b!86860 (= e!56581 (contains!753 lt!41199 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun c!14246 () Bool)

(declare-fun bm!8268 () Bool)

(assert (=> bm!8268 (= call!8272 ($colon$colon!71 e!56582 (ite c!14246 (h!2112 (t!5237 (toList!740 lt!40154))) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143)))))))

(declare-fun c!14245 () Bool)

(assert (=> bm!8268 (= c!14245 c!14246)))

(declare-fun bm!8269 () Bool)

(assert (=> bm!8269 (= call!8273 call!8271)))

(declare-fun b!86858 () Bool)

(assert (=> b!86858 (= e!56584 call!8273)))

(declare-fun d!22889 () Bool)

(assert (=> d!22889 e!56581))

(declare-fun res!44610 () Bool)

(assert (=> d!22889 (=> (not res!44610) (not e!56581))))

(assert (=> d!22889 (= res!44610 (isStrictlySorted!293 lt!41199))))

(assert (=> d!22889 (= lt!41199 e!56583)))

(assert (=> d!22889 (= c!14246 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40154))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40154)))) (_1!1114 lt!40143))))))

(assert (=> d!22889 (isStrictlySorted!293 (t!5237 (toList!740 lt!40154)))))

(assert (=> d!22889 (= (insertStrictlySorted!61 (t!5237 (toList!740 lt!40154)) (_1!1114 lt!40143) (_2!1114 lt!40143)) lt!41199)))

(declare-fun b!86861 () Bool)

(assert (=> b!86861 (= e!56583 e!56580)))

(assert (=> b!86861 (= c!14247 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40154))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40154)))) (_1!1114 lt!40143))))))

(declare-fun bm!8270 () Bool)

(assert (=> bm!8270 (= call!8271 call!8272)))

(assert (= (and d!22889 c!14246) b!86854))

(assert (= (and d!22889 (not c!14246)) b!86861))

(assert (= (and b!86861 c!14247) b!86855))

(assert (= (and b!86861 (not c!14247)) b!86856))

(assert (= (and b!86856 c!14248) b!86859))

(assert (= (and b!86856 (not c!14248)) b!86858))

(assert (= (or b!86859 b!86858) bm!8269))

(assert (= (or b!86855 bm!8269) bm!8270))

(assert (= (or b!86854 bm!8270) bm!8268))

(assert (= (and bm!8268 c!14245) b!86852))

(assert (= (and bm!8268 (not c!14245)) b!86853))

(assert (= (and d!22889 res!44610) b!86857))

(assert (= (and b!86857 res!44609) b!86860))

(declare-fun m!92169 () Bool)

(assert (=> d!22889 m!92169))

(declare-fun m!92171 () Bool)

(assert (=> d!22889 m!92171))

(declare-fun m!92173 () Bool)

(assert (=> b!86860 m!92173))

(declare-fun m!92175 () Bool)

(assert (=> b!86857 m!92175))

(declare-fun m!92177 () Bool)

(assert (=> b!86852 m!92177))

(declare-fun m!92179 () Bool)

(assert (=> bm!8268 m!92179))

(assert (=> b!85764 d!22889))

(assert (=> b!86005 d!22587))

(assert (=> b!86005 d!22589))

(declare-fun d!22891 () Bool)

(declare-fun e!56586 () Bool)

(assert (=> d!22891 e!56586))

(declare-fun res!44611 () Bool)

(assert (=> d!22891 (=> res!44611 e!56586)))

(declare-fun lt!41200 () Bool)

(assert (=> d!22891 (= res!44611 (not lt!41200))))

(declare-fun lt!41203 () Bool)

(assert (=> d!22891 (= lt!41200 lt!41203)))

(declare-fun lt!41201 () Unit!2510)

(declare-fun e!56585 () Unit!2510)

(assert (=> d!22891 (= lt!41201 e!56585)))

(declare-fun c!14249 () Bool)

(assert (=> d!22891 (= c!14249 lt!41203)))

(assert (=> d!22891 (= lt!41203 (containsKey!142 (toList!740 lt!40861) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!22891 (= (contains!752 lt!40861 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41200)))

(declare-fun b!86862 () Bool)

(declare-fun lt!41202 () Unit!2510)

(assert (=> b!86862 (= e!56585 lt!41202)))

(assert (=> b!86862 (= lt!41202 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40861) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> b!86862 (isDefined!92 (getValueByKey!138 (toList!740 lt!40861) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86863 () Bool)

(declare-fun Unit!2573 () Unit!2510)

(assert (=> b!86863 (= e!56585 Unit!2573)))

(declare-fun b!86864 () Bool)

(assert (=> b!86864 (= e!56586 (isDefined!92 (getValueByKey!138 (toList!740 lt!40861) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22891 c!14249) b!86862))

(assert (= (and d!22891 (not c!14249)) b!86863))

(assert (= (and d!22891 (not res!44611)) b!86864))

(declare-fun m!92181 () Bool)

(assert (=> d!22891 m!92181))

(declare-fun m!92183 () Bool)

(assert (=> b!86862 m!92183))

(assert (=> b!86862 m!90753))

(assert (=> b!86862 m!90753))

(declare-fun m!92185 () Bool)

(assert (=> b!86862 m!92185))

(assert (=> b!86864 m!90753))

(assert (=> b!86864 m!90753))

(assert (=> b!86864 m!92185))

(assert (=> d!22343 d!22891))

(declare-fun c!14250 () Bool)

(declare-fun d!22893 () Bool)

(assert (=> d!22893 (= c!14250 (and ((_ is Cons!1521) lt!40860) (= (_1!1114 (h!2112 lt!40860)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56587 () Option!144)

(assert (=> d!22893 (= (getValueByKey!138 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56587)))

(declare-fun b!86868 () Bool)

(declare-fun e!56588 () Option!144)

(assert (=> b!86868 (= e!56588 None!142)))

(declare-fun b!86865 () Bool)

(assert (=> b!86865 (= e!56587 (Some!143 (_2!1114 (h!2112 lt!40860))))))

(declare-fun b!86867 () Bool)

(assert (=> b!86867 (= e!56588 (getValueByKey!138 (t!5237 lt!40860) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86866 () Bool)

(assert (=> b!86866 (= e!56587 e!56588)))

(declare-fun c!14251 () Bool)

(assert (=> b!86866 (= c!14251 (and ((_ is Cons!1521) lt!40860) (not (= (_1!1114 (h!2112 lt!40860)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22893 c!14250) b!86865))

(assert (= (and d!22893 (not c!14250)) b!86866))

(assert (= (and b!86866 c!14251) b!86867))

(assert (= (and b!86866 (not c!14251)) b!86868))

(declare-fun m!92187 () Bool)

(assert (=> b!86867 m!92187))

(assert (=> d!22343 d!22893))

(declare-fun d!22895 () Bool)

(assert (=> d!22895 (= (getValueByKey!138 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!41204 () Unit!2510)

(assert (=> d!22895 (= lt!41204 (choose!507 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56589 () Bool)

(assert (=> d!22895 e!56589))

(declare-fun res!44612 () Bool)

(assert (=> d!22895 (=> (not res!44612) (not e!56589))))

(assert (=> d!22895 (= res!44612 (isStrictlySorted!293 lt!40860))))

(assert (=> d!22895 (= (lemmaContainsTupThenGetReturnValue!58 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41204)))

(declare-fun b!86869 () Bool)

(declare-fun res!44613 () Bool)

(assert (=> b!86869 (=> (not res!44613) (not e!56589))))

(assert (=> b!86869 (= res!44613 (containsKey!142 lt!40860 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86870 () Bool)

(assert (=> b!86870 (= e!56589 (contains!753 lt!40860 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!22895 res!44612) b!86869))

(assert (= (and b!86869 res!44613) b!86870))

(assert (=> d!22895 m!90747))

(declare-fun m!92189 () Bool)

(assert (=> d!22895 m!92189))

(declare-fun m!92191 () Bool)

(assert (=> d!22895 m!92191))

(declare-fun m!92193 () Bool)

(assert (=> b!86869 m!92193))

(declare-fun m!92195 () Bool)

(assert (=> b!86870 m!92195))

(assert (=> d!22343 d!22895))

(declare-fun e!56592 () List!1525)

(declare-fun b!86871 () Bool)

(assert (=> b!86871 (= e!56592 (insertStrictlySorted!61 (t!5237 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86872 () Bool)

(declare-fun c!14255 () Bool)

(declare-fun c!14254 () Bool)

(assert (=> b!86872 (= e!56592 (ite c!14254 (t!5237 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (ite c!14255 (Cons!1521 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (t!5237 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) Nil!1522)))))

(declare-fun b!86873 () Bool)

(declare-fun e!56593 () List!1525)

(declare-fun call!8275 () List!1525)

(assert (=> b!86873 (= e!56593 call!8275)))

(declare-fun b!86874 () Bool)

(declare-fun e!56590 () List!1525)

(declare-fun call!8274 () List!1525)

(assert (=> b!86874 (= e!56590 call!8274)))

(declare-fun b!86875 () Bool)

(assert (=> b!86875 (= c!14255 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (bvsgt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56594 () List!1525)

(assert (=> b!86875 (= e!56590 e!56594)))

(declare-fun b!86876 () Bool)

(declare-fun res!44614 () Bool)

(declare-fun e!56591 () Bool)

(assert (=> b!86876 (=> (not res!44614) (not e!56591))))

(declare-fun lt!41205 () List!1525)

(assert (=> b!86876 (= res!44614 (containsKey!142 lt!41205 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86878 () Bool)

(declare-fun call!8276 () List!1525)

(assert (=> b!86878 (= e!56594 call!8276)))

(declare-fun b!86879 () Bool)

(assert (=> b!86879 (= e!56591 (contains!753 lt!41205 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8271 () Bool)

(declare-fun c!14253 () Bool)

(assert (=> bm!8271 (= call!8275 ($colon$colon!71 e!56592 (ite c!14253 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun c!14252 () Bool)

(assert (=> bm!8271 (= c!14252 c!14253)))

(declare-fun bm!8272 () Bool)

(assert (=> bm!8272 (= call!8276 call!8274)))

(declare-fun b!86877 () Bool)

(assert (=> b!86877 (= e!56594 call!8276)))

(declare-fun d!22897 () Bool)

(assert (=> d!22897 e!56591))

(declare-fun res!44615 () Bool)

(assert (=> d!22897 (=> (not res!44615) (not e!56591))))

(assert (=> d!22897 (= res!44615 (isStrictlySorted!293 lt!41205))))

(assert (=> d!22897 (= lt!41205 e!56593)))

(assert (=> d!22897 (= c!14253 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!22897 (isStrictlySorted!293 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!22897 (= (insertStrictlySorted!61 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41205)))

(declare-fun b!86880 () Bool)

(assert (=> b!86880 (= e!56593 e!56590)))

(assert (=> b!86880 (= c!14254 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8273 () Bool)

(assert (=> bm!8273 (= call!8274 call!8275)))

(assert (= (and d!22897 c!14253) b!86873))

(assert (= (and d!22897 (not c!14253)) b!86880))

(assert (= (and b!86880 c!14254) b!86874))

(assert (= (and b!86880 (not c!14254)) b!86875))

(assert (= (and b!86875 c!14255) b!86878))

(assert (= (and b!86875 (not c!14255)) b!86877))

(assert (= (or b!86878 b!86877) bm!8272))

(assert (= (or b!86874 bm!8272) bm!8273))

(assert (= (or b!86873 bm!8273) bm!8271))

(assert (= (and bm!8271 c!14252) b!86871))

(assert (= (and bm!8271 (not c!14252)) b!86872))

(assert (= (and d!22897 res!44615) b!86876))

(assert (= (and b!86876 res!44614) b!86879))

(declare-fun m!92197 () Bool)

(assert (=> d!22897 m!92197))

(declare-fun m!92199 () Bool)

(assert (=> d!22897 m!92199))

(declare-fun m!92201 () Bool)

(assert (=> b!86879 m!92201))

(declare-fun m!92203 () Bool)

(assert (=> b!86876 m!92203))

(declare-fun m!92205 () Bool)

(assert (=> b!86871 m!92205))

(declare-fun m!92207 () Bool)

(assert (=> bm!8271 m!92207))

(assert (=> d!22343 d!22897))

(declare-fun d!22899 () Bool)

(declare-fun lt!41206 () Bool)

(assert (=> d!22899 (= lt!41206 (select (content!89 lt!40653) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun e!56595 () Bool)

(assert (=> d!22899 (= lt!41206 e!56595)))

(declare-fun res!44616 () Bool)

(assert (=> d!22899 (=> (not res!44616) (not e!56595))))

(assert (=> d!22899 (= res!44616 ((_ is Cons!1521) lt!40653))))

(assert (=> d!22899 (= (contains!753 lt!40653 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))) lt!41206)))

(declare-fun b!86881 () Bool)

(declare-fun e!56596 () Bool)

(assert (=> b!86881 (= e!56595 e!56596)))

(declare-fun res!44617 () Bool)

(assert (=> b!86881 (=> res!44617 e!56596)))

(assert (=> b!86881 (= res!44617 (= (h!2112 lt!40653) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun b!86882 () Bool)

(assert (=> b!86882 (= e!56596 (contains!753 (t!5237 lt!40653) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(assert (= (and d!22899 res!44616) b!86881))

(assert (= (and b!86881 (not res!44617)) b!86882))

(declare-fun m!92209 () Bool)

(assert (=> d!22899 m!92209))

(declare-fun m!92211 () Bool)

(assert (=> d!22899 m!92211))

(declare-fun m!92213 () Bool)

(assert (=> b!86882 m!92213))

(assert (=> b!85854 d!22899))

(declare-fun d!22901 () Bool)

(declare-fun res!44618 () Bool)

(declare-fun e!56597 () Bool)

(assert (=> d!22901 (=> res!44618 e!56597)))

(assert (=> d!22901 (= res!44618 (and ((_ is Cons!1521) lt!40434) (= (_1!1114 (h!2112 lt!40434)) (_1!1114 lt!40140))))))

(assert (=> d!22901 (= (containsKey!142 lt!40434 (_1!1114 lt!40140)) e!56597)))

(declare-fun b!86883 () Bool)

(declare-fun e!56598 () Bool)

(assert (=> b!86883 (= e!56597 e!56598)))

(declare-fun res!44619 () Bool)

(assert (=> b!86883 (=> (not res!44619) (not e!56598))))

(assert (=> b!86883 (= res!44619 (and (or (not ((_ is Cons!1521) lt!40434)) (bvsle (_1!1114 (h!2112 lt!40434)) (_1!1114 lt!40140))) ((_ is Cons!1521) lt!40434) (bvslt (_1!1114 (h!2112 lt!40434)) (_1!1114 lt!40140))))))

(declare-fun b!86884 () Bool)

(assert (=> b!86884 (= e!56598 (containsKey!142 (t!5237 lt!40434) (_1!1114 lt!40140)))))

(assert (= (and d!22901 (not res!44618)) b!86883))

(assert (= (and b!86883 res!44619) b!86884))

(declare-fun m!92215 () Bool)

(assert (=> b!86884 m!92215))

(assert (=> b!85825 d!22901))

(declare-fun d!22903 () Bool)

(declare-fun res!44620 () Bool)

(declare-fun e!56599 () Bool)

(assert (=> d!22903 (=> res!44620 e!56599)))

(assert (=> d!22903 (= res!44620 (and ((_ is Cons!1521) (toList!740 lt!40484)) (= (_1!1114 (h!2112 (toList!740 lt!40484))) (_1!1114 lt!40140))))))

(assert (=> d!22903 (= (containsKey!142 (toList!740 lt!40484) (_1!1114 lt!40140)) e!56599)))

(declare-fun b!86885 () Bool)

(declare-fun e!56600 () Bool)

(assert (=> b!86885 (= e!56599 e!56600)))

(declare-fun res!44621 () Bool)

(assert (=> b!86885 (=> (not res!44621) (not e!56600))))

(assert (=> b!86885 (= res!44621 (and (or (not ((_ is Cons!1521) (toList!740 lt!40484))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40484))) (_1!1114 lt!40140))) ((_ is Cons!1521) (toList!740 lt!40484)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40484))) (_1!1114 lt!40140))))))

(declare-fun b!86886 () Bool)

(assert (=> b!86886 (= e!56600 (containsKey!142 (t!5237 (toList!740 lt!40484)) (_1!1114 lt!40140)))))

(assert (= (and d!22903 (not res!44620)) b!86885))

(assert (= (and b!86885 res!44621) b!86886))

(declare-fun m!92217 () Bool)

(assert (=> b!86886 m!92217))

(assert (=> d!22277 d!22903))

(assert (=> d!22311 d!22313))

(assert (=> d!22311 d!22325))

(declare-fun d!22905 () Bool)

(assert (=> d!22905 (contains!752 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40412)))

(assert (=> d!22905 true))

(declare-fun _$35!330 () Unit!2510)

(assert (=> d!22905 (= (choose!516 lt!40411 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40412) _$35!330)))

(declare-fun bs!3681 () Bool)

(assert (= bs!3681 d!22905))

(assert (=> bs!3681 m!89681))

(assert (=> bs!3681 m!89681))

(assert (=> bs!3681 m!89683))

(assert (=> d!22311 d!22905))

(declare-fun d!22907 () Bool)

(declare-fun e!56602 () Bool)

(assert (=> d!22907 e!56602))

(declare-fun res!44622 () Bool)

(assert (=> d!22907 (=> res!44622 e!56602)))

(declare-fun lt!41207 () Bool)

(assert (=> d!22907 (= res!44622 (not lt!41207))))

(declare-fun lt!41210 () Bool)

(assert (=> d!22907 (= lt!41207 lt!41210)))

(declare-fun lt!41208 () Unit!2510)

(declare-fun e!56601 () Unit!2510)

(assert (=> d!22907 (= lt!41208 e!56601)))

(declare-fun c!14256 () Bool)

(assert (=> d!22907 (= c!14256 lt!41210)))

(assert (=> d!22907 (= lt!41210 (containsKey!142 (toList!740 lt!40411) lt!40412))))

(assert (=> d!22907 (= (contains!752 lt!40411 lt!40412) lt!41207)))

(declare-fun b!86888 () Bool)

(declare-fun lt!41209 () Unit!2510)

(assert (=> b!86888 (= e!56601 lt!41209)))

(assert (=> b!86888 (= lt!41209 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40411) lt!40412))))

(assert (=> b!86888 (isDefined!92 (getValueByKey!138 (toList!740 lt!40411) lt!40412))))

(declare-fun b!86889 () Bool)

(declare-fun Unit!2574 () Unit!2510)

(assert (=> b!86889 (= e!56601 Unit!2574)))

(declare-fun b!86890 () Bool)

(assert (=> b!86890 (= e!56602 (isDefined!92 (getValueByKey!138 (toList!740 lt!40411) lt!40412)))))

(assert (= (and d!22907 c!14256) b!86888))

(assert (= (and d!22907 (not c!14256)) b!86889))

(assert (= (and d!22907 (not res!44622)) b!86890))

(declare-fun m!92219 () Bool)

(assert (=> d!22907 m!92219))

(declare-fun m!92221 () Bool)

(assert (=> b!86888 m!92221))

(declare-fun m!92223 () Bool)

(assert (=> b!86888 m!92223))

(assert (=> b!86888 m!92223))

(declare-fun m!92225 () Bool)

(assert (=> b!86888 m!92225))

(assert (=> b!86890 m!92223))

(assert (=> b!86890 m!92223))

(assert (=> b!86890 m!92225))

(assert (=> d!22311 d!22907))

(declare-fun b!86891 () Bool)

(declare-fun res!44624 () Bool)

(declare-fun e!56603 () Bool)

(assert (=> b!86891 (=> (not res!44624) (not e!56603))))

(assert (=> b!86891 (= res!44624 (and (= (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001)) (= (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (size!2152 (_values!2320 (v!2638 (underlying!285 thiss!992))))) (bvsge (_size!426 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!426 (v!2638 (underlying!285 thiss!992))) (bvadd (mask!6364 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!86892 () Bool)

(declare-fun res!44625 () Bool)

(assert (=> b!86892 (=> (not res!44625) (not e!56603))))

(assert (=> b!86892 (= res!44625 (bvsge (size!2157 (v!2638 (underlying!285 thiss!992))) (_size!426 (v!2638 (underlying!285 thiss!992)))))))

(declare-fun d!22909 () Bool)

(declare-fun res!44623 () Bool)

(assert (=> d!22909 (=> (not res!44623) (not e!56603))))

(assert (=> d!22909 (= res!44623 (validMask!0 (mask!6364 (v!2638 (underlying!285 thiss!992)))))))

(assert (=> d!22909 (= (simpleValid!58 (v!2638 (underlying!285 thiss!992))) e!56603)))

(declare-fun b!86893 () Bool)

(declare-fun res!44626 () Bool)

(assert (=> b!86893 (=> (not res!44626) (not e!56603))))

(assert (=> b!86893 (= res!44626 (= (size!2157 (v!2638 (underlying!285 thiss!992))) (bvadd (_size!426 (v!2638 (underlying!285 thiss!992))) (bvsdiv (bvadd (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!86894 () Bool)

(assert (=> b!86894 (= e!56603 (and (bvsge (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2176 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!426 (v!2638 (underlying!285 thiss!992))) #b00000000000000000000000000000000)))))

(assert (= (and d!22909 res!44623) b!86891))

(assert (= (and b!86891 res!44624) b!86892))

(assert (= (and b!86892 res!44625) b!86893))

(assert (= (and b!86893 res!44626) b!86894))

(declare-fun m!92227 () Bool)

(assert (=> b!86892 m!92227))

(assert (=> d!22909 m!89435))

(assert (=> b!86893 m!92227))

(assert (=> d!22203 d!22909))

(declare-fun d!22911 () Bool)

(declare-fun e!56605 () Bool)

(assert (=> d!22911 e!56605))

(declare-fun res!44627 () Bool)

(assert (=> d!22911 (=> res!44627 e!56605)))

(declare-fun lt!41211 () Bool)

(assert (=> d!22911 (= res!44627 (not lt!41211))))

(declare-fun lt!41214 () Bool)

(assert (=> d!22911 (= lt!41211 lt!41214)))

(declare-fun lt!41212 () Unit!2510)

(declare-fun e!56604 () Unit!2510)

(assert (=> d!22911 (= lt!41212 e!56604)))

(declare-fun c!14257 () Bool)

(assert (=> d!22911 (= c!14257 lt!41214)))

(assert (=> d!22911 (= lt!41214 (containsKey!142 (toList!740 lt!40574) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!22911 (= (contains!752 lt!40574 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41211)))

(declare-fun b!86895 () Bool)

(declare-fun lt!41213 () Unit!2510)

(assert (=> b!86895 (= e!56604 lt!41213)))

(assert (=> b!86895 (= lt!41213 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40574) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!86895 (isDefined!92 (getValueByKey!138 (toList!740 lt!40574) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86896 () Bool)

(declare-fun Unit!2575 () Unit!2510)

(assert (=> b!86896 (= e!56604 Unit!2575)))

(declare-fun b!86897 () Bool)

(assert (=> b!86897 (= e!56605 (isDefined!92 (getValueByKey!138 (toList!740 lt!40574) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!22911 c!14257) b!86895))

(assert (= (and d!22911 (not c!14257)) b!86896))

(assert (= (and d!22911 (not res!44627)) b!86897))

(declare-fun m!92229 () Bool)

(assert (=> d!22911 m!92229))

(declare-fun m!92231 () Bool)

(assert (=> b!86895 m!92231))

(assert (=> b!86895 m!90105))

(assert (=> b!86895 m!90105))

(declare-fun m!92233 () Bool)

(assert (=> b!86895 m!92233))

(assert (=> b!86897 m!90105))

(assert (=> b!86897 m!90105))

(assert (=> b!86897 m!92233))

(assert (=> d!22157 d!22911))

(declare-fun d!22913 () Bool)

(declare-fun c!14258 () Bool)

(assert (=> d!22913 (= c!14258 (and ((_ is Cons!1521) lt!40573) (= (_1!1114 (h!2112 lt!40573)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!56606 () Option!144)

(assert (=> d!22913 (= (getValueByKey!138 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56606)))

(declare-fun b!86901 () Bool)

(declare-fun e!56607 () Option!144)

(assert (=> b!86901 (= e!56607 None!142)))

(declare-fun b!86898 () Bool)

(assert (=> b!86898 (= e!56606 (Some!143 (_2!1114 (h!2112 lt!40573))))))

(declare-fun b!86900 () Bool)

(assert (=> b!86900 (= e!56607 (getValueByKey!138 (t!5237 lt!40573) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86899 () Bool)

(assert (=> b!86899 (= e!56606 e!56607)))

(declare-fun c!14259 () Bool)

(assert (=> b!86899 (= c!14259 (and ((_ is Cons!1521) lt!40573) (not (= (_1!1114 (h!2112 lt!40573)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!22913 c!14258) b!86898))

(assert (= (and d!22913 (not c!14258)) b!86899))

(assert (= (and b!86899 c!14259) b!86900))

(assert (= (and b!86899 (not c!14259)) b!86901))

(declare-fun m!92235 () Bool)

(assert (=> b!86900 m!92235))

(assert (=> d!22157 d!22913))

(declare-fun d!22915 () Bool)

(assert (=> d!22915 (= (getValueByKey!138 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41215 () Unit!2510)

(assert (=> d!22915 (= lt!41215 (choose!507 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56608 () Bool)

(assert (=> d!22915 e!56608))

(declare-fun res!44628 () Bool)

(assert (=> d!22915 (=> (not res!44628) (not e!56608))))

(assert (=> d!22915 (= res!44628 (isStrictlySorted!293 lt!40573))))

(assert (=> d!22915 (= (lemmaContainsTupThenGetReturnValue!58 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41215)))

(declare-fun b!86902 () Bool)

(declare-fun res!44629 () Bool)

(assert (=> b!86902 (=> (not res!44629) (not e!56608))))

(assert (=> b!86902 (= res!44629 (containsKey!142 lt!40573 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86903 () Bool)

(assert (=> b!86903 (= e!56608 (contains!753 lt!40573 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!22915 res!44628) b!86902))

(assert (= (and b!86902 res!44629) b!86903))

(assert (=> d!22915 m!90099))

(declare-fun m!92237 () Bool)

(assert (=> d!22915 m!92237))

(declare-fun m!92239 () Bool)

(assert (=> d!22915 m!92239))

(declare-fun m!92241 () Bool)

(assert (=> b!86902 m!92241))

(declare-fun m!92243 () Bool)

(assert (=> b!86903 m!92243))

(assert (=> d!22157 d!22915))

(declare-fun b!86904 () Bool)

(declare-fun e!56611 () List!1525)

(assert (=> b!86904 (= e!56611 (insertStrictlySorted!61 (t!5237 (toList!740 call!8125)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!14262 () Bool)

(declare-fun c!14263 () Bool)

(declare-fun b!86905 () Bool)

(assert (=> b!86905 (= e!56611 (ite c!14262 (t!5237 (toList!740 call!8125)) (ite c!14263 (Cons!1521 (h!2112 (toList!740 call!8125)) (t!5237 (toList!740 call!8125))) Nil!1522)))))

(declare-fun b!86906 () Bool)

(declare-fun e!56612 () List!1525)

(declare-fun call!8278 () List!1525)

(assert (=> b!86906 (= e!56612 call!8278)))

(declare-fun b!86907 () Bool)

(declare-fun e!56609 () List!1525)

(declare-fun call!8277 () List!1525)

(assert (=> b!86907 (= e!56609 call!8277)))

(declare-fun b!86908 () Bool)

(assert (=> b!86908 (= c!14263 (and ((_ is Cons!1521) (toList!740 call!8125)) (bvsgt (_1!1114 (h!2112 (toList!740 call!8125))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!56613 () List!1525)

(assert (=> b!86908 (= e!56609 e!56613)))

(declare-fun b!86909 () Bool)

(declare-fun res!44630 () Bool)

(declare-fun e!56610 () Bool)

(assert (=> b!86909 (=> (not res!44630) (not e!56610))))

(declare-fun lt!41216 () List!1525)

(assert (=> b!86909 (= res!44630 (containsKey!142 lt!41216 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!86911 () Bool)

(declare-fun call!8279 () List!1525)

(assert (=> b!86911 (= e!56613 call!8279)))

(declare-fun b!86912 () Bool)

(assert (=> b!86912 (= e!56610 (contains!753 lt!41216 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun c!14261 () Bool)

(declare-fun bm!8274 () Bool)

(assert (=> bm!8274 (= call!8278 ($colon$colon!71 e!56611 (ite c!14261 (h!2112 (toList!740 call!8125)) (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!14260 () Bool)

(assert (=> bm!8274 (= c!14260 c!14261)))

(declare-fun bm!8275 () Bool)

(assert (=> bm!8275 (= call!8279 call!8277)))

(declare-fun b!86910 () Bool)

(assert (=> b!86910 (= e!56613 call!8279)))

(declare-fun d!22917 () Bool)

(assert (=> d!22917 e!56610))

(declare-fun res!44631 () Bool)

(assert (=> d!22917 (=> (not res!44631) (not e!56610))))

(assert (=> d!22917 (= res!44631 (isStrictlySorted!293 lt!41216))))

(assert (=> d!22917 (= lt!41216 e!56612)))

(assert (=> d!22917 (= c!14261 (and ((_ is Cons!1521) (toList!740 call!8125)) (bvslt (_1!1114 (h!2112 (toList!740 call!8125))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!22917 (isStrictlySorted!293 (toList!740 call!8125))))

(assert (=> d!22917 (= (insertStrictlySorted!61 (toList!740 call!8125) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!41216)))

(declare-fun b!86913 () Bool)

(assert (=> b!86913 (= e!56612 e!56609)))

(assert (=> b!86913 (= c!14262 (and ((_ is Cons!1521) (toList!740 call!8125)) (= (_1!1114 (h!2112 (toList!740 call!8125))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!8276 () Bool)

(assert (=> bm!8276 (= call!8277 call!8278)))

(assert (= (and d!22917 c!14261) b!86906))

(assert (= (and d!22917 (not c!14261)) b!86913))

(assert (= (and b!86913 c!14262) b!86907))

(assert (= (and b!86913 (not c!14262)) b!86908))

(assert (= (and b!86908 c!14263) b!86911))

(assert (= (and b!86908 (not c!14263)) b!86910))

(assert (= (or b!86911 b!86910) bm!8275))

(assert (= (or b!86907 bm!8275) bm!8276))

(assert (= (or b!86906 bm!8276) bm!8274))

(assert (= (and bm!8274 c!14260) b!86904))

(assert (= (and bm!8274 (not c!14260)) b!86905))

(assert (= (and d!22917 res!44631) b!86909))

(assert (= (and b!86909 res!44630) b!86912))

(declare-fun m!92245 () Bool)

(assert (=> d!22917 m!92245))

(declare-fun m!92247 () Bool)

(assert (=> d!22917 m!92247))

(declare-fun m!92249 () Bool)

(assert (=> b!86912 m!92249))

(declare-fun m!92251 () Bool)

(assert (=> b!86909 m!92251))

(declare-fun m!92253 () Bool)

(assert (=> b!86904 m!92253))

(declare-fun m!92255 () Bool)

(assert (=> bm!8274 m!92255))

(assert (=> d!22157 d!22917))

(declare-fun d!22919 () Bool)

(assert (=> d!22919 (= ($colon$colon!71 e!55925 (ite c!13933 (h!2112 (toList!740 lt!40154)) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143)))) (Cons!1521 (ite c!13933 (h!2112 (toList!740 lt!40154)) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))) e!55925))))

(assert (=> bm!8156 d!22919))

(declare-fun d!22921 () Bool)

(declare-fun lt!41217 () Bool)

(assert (=> d!22921 (= lt!41217 (select (content!89 (toList!740 lt!40632)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun e!56614 () Bool)

(assert (=> d!22921 (= lt!41217 e!56614)))

(declare-fun res!44632 () Bool)

(assert (=> d!22921 (=> (not res!44632) (not e!56614))))

(assert (=> d!22921 (= res!44632 ((_ is Cons!1521) (toList!740 lt!40632)))))

(assert (=> d!22921 (= (contains!753 (toList!740 lt!40632) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!41217)))

(declare-fun b!86914 () Bool)

(declare-fun e!56615 () Bool)

(assert (=> b!86914 (= e!56614 e!56615)))

(declare-fun res!44633 () Bool)

(assert (=> b!86914 (=> res!44633 e!56615)))

(assert (=> b!86914 (= res!44633 (= (h!2112 (toList!740 lt!40632)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!86915 () Bool)

(assert (=> b!86915 (= e!56615 (contains!753 (t!5237 (toList!740 lt!40632)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))

(assert (= (and d!22921 res!44632) b!86914))

(assert (= (and b!86914 (not res!44633)) b!86915))

(declare-fun m!92257 () Bool)

(assert (=> d!22921 m!92257))

(declare-fun m!92259 () Bool)

(assert (=> d!22921 m!92259))

(declare-fun m!92261 () Bool)

(assert (=> b!86915 m!92261))

(assert (=> b!85803 d!22921))

(declare-fun d!22923 () Bool)

(assert (=> d!22923 (= (get!1204 (getValueByKey!138 (toList!740 lt!40403) lt!40420)) (v!2644 (getValueByKey!138 (toList!740 lt!40403) lt!40420)))))

(assert (=> d!22335 d!22923))

(declare-fun d!22925 () Bool)

(declare-fun c!14264 () Bool)

(assert (=> d!22925 (= c!14264 (and ((_ is Cons!1521) (toList!740 lt!40403)) (= (_1!1114 (h!2112 (toList!740 lt!40403))) lt!40420)))))

(declare-fun e!56616 () Option!144)

(assert (=> d!22925 (= (getValueByKey!138 (toList!740 lt!40403) lt!40420) e!56616)))

(declare-fun b!86919 () Bool)

(declare-fun e!56617 () Option!144)

(assert (=> b!86919 (= e!56617 None!142)))

(declare-fun b!86916 () Bool)

(assert (=> b!86916 (= e!56616 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40403)))))))

(declare-fun b!86918 () Bool)

(assert (=> b!86918 (= e!56617 (getValueByKey!138 (t!5237 (toList!740 lt!40403)) lt!40420))))

(declare-fun b!86917 () Bool)

(assert (=> b!86917 (= e!56616 e!56617)))

(declare-fun c!14265 () Bool)

(assert (=> b!86917 (= c!14265 (and ((_ is Cons!1521) (toList!740 lt!40403)) (not (= (_1!1114 (h!2112 (toList!740 lt!40403))) lt!40420))))))

(assert (= (and d!22925 c!14264) b!86916))

(assert (= (and d!22925 (not c!14264)) b!86917))

(assert (= (and b!86917 c!14265) b!86918))

(assert (= (and b!86917 (not c!14265)) b!86919))

(declare-fun m!92263 () Bool)

(assert (=> b!86918 m!92263))

(assert (=> d!22335 d!22925))

(declare-fun d!22927 () Bool)

(declare-fun c!14266 () Bool)

(assert (=> d!22927 (= c!14266 (and ((_ is Cons!1521) (t!5237 lt!40483)) (= (_1!1114 (h!2112 (t!5237 lt!40483))) (_1!1114 lt!40140))))))

(declare-fun e!56618 () Option!144)

(assert (=> d!22927 (= (getValueByKey!138 (t!5237 lt!40483) (_1!1114 lt!40140)) e!56618)))

(declare-fun b!86923 () Bool)

(declare-fun e!56619 () Option!144)

(assert (=> b!86923 (= e!56619 None!142)))

(declare-fun b!86920 () Bool)

(assert (=> b!86920 (= e!56618 (Some!143 (_2!1114 (h!2112 (t!5237 lt!40483)))))))

(declare-fun b!86922 () Bool)

(assert (=> b!86922 (= e!56619 (getValueByKey!138 (t!5237 (t!5237 lt!40483)) (_1!1114 lt!40140)))))

(declare-fun b!86921 () Bool)

(assert (=> b!86921 (= e!56618 e!56619)))

(declare-fun c!14267 () Bool)

(assert (=> b!86921 (= c!14267 (and ((_ is Cons!1521) (t!5237 lt!40483)) (not (= (_1!1114 (h!2112 (t!5237 lt!40483))) (_1!1114 lt!40140)))))))

(assert (= (and d!22927 c!14266) b!86920))

(assert (= (and d!22927 (not c!14266)) b!86921))

(assert (= (and b!86921 c!14267) b!86922))

(assert (= (and b!86921 (not c!14267)) b!86923))

(declare-fun m!92265 () Bool)

(assert (=> b!86922 m!92265))

(assert (=> b!86013 d!22927))

(assert (=> bm!8173 d!22857))

(declare-fun lt!41218 () Bool)

(declare-fun d!22929 () Bool)

(assert (=> d!22929 (= lt!41218 (select (content!89 (toList!740 lt!40861)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun e!56620 () Bool)

(assert (=> d!22929 (= lt!41218 e!56620)))

(declare-fun res!44634 () Bool)

(assert (=> d!22929 (=> (not res!44634) (not e!56620))))

(assert (=> d!22929 (= res!44634 ((_ is Cons!1521) (toList!740 lt!40861)))))

(assert (=> d!22929 (= (contains!753 (toList!740 lt!40861) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!41218)))

(declare-fun b!86924 () Bool)

(declare-fun e!56621 () Bool)

(assert (=> b!86924 (= e!56620 e!56621)))

(declare-fun res!44635 () Bool)

(assert (=> b!86924 (=> res!44635 e!56621)))

(assert (=> b!86924 (= res!44635 (= (h!2112 (toList!740 lt!40861)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun b!86925 () Bool)

(assert (=> b!86925 (= e!56621 (contains!753 (t!5237 (toList!740 lt!40861)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!22929 res!44634) b!86924))

(assert (= (and b!86924 (not res!44635)) b!86925))

(declare-fun m!92267 () Bool)

(assert (=> d!22929 m!92267))

(declare-fun m!92269 () Bool)

(assert (=> d!22929 m!92269))

(declare-fun m!92271 () Bool)

(assert (=> b!86925 m!92271))

(assert (=> b!86090 d!22929))

(declare-fun c!14268 () Bool)

(declare-fun d!22931 () Bool)

(assert (=> d!22931 (= c!14268 (and ((_ is Cons!1521) (toList!740 lt!40617)) (= (_1!1114 (h!2112 (toList!740 lt!40617))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56622 () Option!144)

(assert (=> d!22931 (= (getValueByKey!138 (toList!740 lt!40617) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56622)))

(declare-fun b!86929 () Bool)

(declare-fun e!56623 () Option!144)

(assert (=> b!86929 (= e!56623 None!142)))

(declare-fun b!86926 () Bool)

(assert (=> b!86926 (= e!56622 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40617)))))))

(declare-fun b!86928 () Bool)

(assert (=> b!86928 (= e!56623 (getValueByKey!138 (t!5237 (toList!740 lt!40617)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!86927 () Bool)

(assert (=> b!86927 (= e!56622 e!56623)))

(declare-fun c!14269 () Bool)

(assert (=> b!86927 (= c!14269 (and ((_ is Cons!1521) (toList!740 lt!40617)) (not (= (_1!1114 (h!2112 (toList!740 lt!40617))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!22931 c!14268) b!86926))

(assert (= (and d!22931 (not c!14268)) b!86927))

(assert (= (and b!86927 c!14269) b!86928))

(assert (= (and b!86927 (not c!14269)) b!86929))

(declare-fun m!92273 () Bool)

(assert (=> b!86928 m!92273))

(assert (=> b!85774 d!22931))

(declare-fun d!22933 () Bool)

(assert (=> d!22933 (isDefined!92 (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140)))))

(declare-fun lt!41219 () Unit!2510)

(assert (=> d!22933 (= lt!41219 (choose!514 (toList!740 lt!40484) (_1!1114 lt!40140)))))

(declare-fun e!56624 () Bool)

(assert (=> d!22933 e!56624))

(declare-fun res!44636 () Bool)

(assert (=> d!22933 (=> (not res!44636) (not e!56624))))

(assert (=> d!22933 (= res!44636 (isStrictlySorted!293 (toList!740 lt!40484)))))

(assert (=> d!22933 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40484) (_1!1114 lt!40140)) lt!41219)))

(declare-fun b!86930 () Bool)

(assert (=> b!86930 (= e!56624 (containsKey!142 (toList!740 lt!40484) (_1!1114 lt!40140)))))

(assert (= (and d!22933 res!44636) b!86930))

(assert (=> d!22933 m!89841))

(assert (=> d!22933 m!89841))

(assert (=> d!22933 m!90569))

(declare-fun m!92275 () Bool)

(assert (=> d!22933 m!92275))

(declare-fun m!92277 () Bool)

(assert (=> d!22933 m!92277))

(assert (=> b!86930 m!90565))

(assert (=> b!86008 d!22933))

(declare-fun d!22935 () Bool)

(assert (=> d!22935 (= (isDefined!92 (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140))) (not (isEmpty!341 (getValueByKey!138 (toList!740 lt!40484) (_1!1114 lt!40140)))))))

(declare-fun bs!3682 () Bool)

(assert (= bs!3682 d!22935))

(assert (=> bs!3682 m!89841))

(declare-fun m!92279 () Bool)

(assert (=> bs!3682 m!92279))

(assert (=> b!86008 d!22935))

(assert (=> b!86008 d!22215))

(declare-fun d!22937 () Bool)

(declare-fun lt!41220 () Bool)

(assert (=> d!22937 (= lt!41220 (select (content!89 (toList!740 lt!40574)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!56625 () Bool)

(assert (=> d!22937 (= lt!41220 e!56625)))

(declare-fun res!44637 () Bool)

(assert (=> d!22937 (=> (not res!44637) (not e!56625))))

(assert (=> d!22937 (= res!44637 ((_ is Cons!1521) (toList!740 lt!40574)))))

(assert (=> d!22937 (= (contains!753 (toList!740 lt!40574) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41220)))

(declare-fun b!86931 () Bool)

(declare-fun e!56626 () Bool)

(assert (=> b!86931 (= e!56625 e!56626)))

(declare-fun res!44638 () Bool)

(assert (=> b!86931 (=> res!44638 e!56626)))

(assert (=> b!86931 (= res!44638 (= (h!2112 (toList!740 lt!40574)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!86932 () Bool)

(assert (=> b!86932 (= e!56626 (contains!753 (t!5237 (toList!740 lt!40574)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!22937 res!44637) b!86931))

(assert (= (and b!86931 (not res!44638)) b!86932))

(declare-fun m!92281 () Bool)

(assert (=> d!22937 m!92281))

(declare-fun m!92283 () Bool)

(assert (=> d!22937 m!92283))

(declare-fun m!92285 () Bool)

(assert (=> b!86932 m!92285))

(assert (=> b!85714 d!22937))

(declare-fun bm!8277 () Bool)

(declare-fun call!8285 () ListLongMap!1449)

(declare-fun call!8286 () ListLongMap!1449)

(assert (=> bm!8277 (= call!8285 call!8286)))

(declare-fun bm!8278 () Bool)

(declare-fun call!8284 () ListLongMap!1449)

(assert (=> bm!8278 (= call!8284 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!86933 () Bool)

(declare-fun e!56636 () Unit!2510)

(declare-fun Unit!2576 () Unit!2510)

(assert (=> b!86933 (= e!56636 Unit!2576)))

(declare-fun b!86934 () Bool)

(declare-fun e!56638 () Bool)

(assert (=> b!86934 (= e!56638 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86935 () Bool)

(declare-fun e!56628 () Bool)

(declare-fun lt!41233 () ListLongMap!1449)

(assert (=> b!86935 (= e!56628 (= (apply!82 lt!41233 #b0000000000000000000000000000000000000000000000000000000000000000) lt!40142))))

(declare-fun b!86936 () Bool)

(declare-fun c!14275 () Bool)

(assert (=> b!86936 (= c!14275 (and (not (= (bvand lt!40338 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40338 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56632 () ListLongMap!1449)

(declare-fun e!56637 () ListLongMap!1449)

(assert (=> b!86936 (= e!56632 e!56637)))

(declare-fun d!22939 () Bool)

(declare-fun e!56629 () Bool)

(assert (=> d!22939 e!56629))

(declare-fun res!44643 () Bool)

(assert (=> d!22939 (=> (not res!44643) (not e!56629))))

(assert (=> d!22939 (= res!44643 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!41242 () ListLongMap!1449)

(assert (=> d!22939 (= lt!41233 lt!41242)))

(declare-fun lt!41225 () Unit!2510)

(assert (=> d!22939 (= lt!41225 e!56636)))

(declare-fun c!14271 () Bool)

(assert (=> d!22939 (= c!14271 e!56638)))

(declare-fun res!44646 () Bool)

(assert (=> d!22939 (=> (not res!44646) (not e!56638))))

(assert (=> d!22939 (= res!44646 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!56631 () ListLongMap!1449)

(assert (=> d!22939 (= lt!41242 e!56631)))

(declare-fun c!14273 () Bool)

(assert (=> d!22939 (= c!14273 (and (not (= (bvand lt!40338 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40338 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!22939 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22939 (= (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41233)))

(declare-fun b!86937 () Bool)

(declare-fun lt!41223 () Unit!2510)

(assert (=> b!86937 (= e!56636 lt!41223)))

(declare-fun lt!41229 () ListLongMap!1449)

(assert (=> b!86937 (= lt!41229 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41226 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41226 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41230 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41230 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41241 () Unit!2510)

(assert (=> b!86937 (= lt!41241 (addStillContains!58 lt!41229 lt!41226 lt!40142 lt!41230))))

(assert (=> b!86937 (contains!752 (+!108 lt!41229 (tuple2!2207 lt!41226 lt!40142)) lt!41230)))

(declare-fun lt!41240 () Unit!2510)

(assert (=> b!86937 (= lt!41240 lt!41241)))

(declare-fun lt!41222 () ListLongMap!1449)

(assert (=> b!86937 (= lt!41222 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41239 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41239 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41234 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41234 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41228 () Unit!2510)

(assert (=> b!86937 (= lt!41228 (addApplyDifferent!58 lt!41222 lt!41239 (minValue!2229 newMap!16) lt!41234))))

(assert (=> b!86937 (= (apply!82 (+!108 lt!41222 (tuple2!2207 lt!41239 (minValue!2229 newMap!16))) lt!41234) (apply!82 lt!41222 lt!41234))))

(declare-fun lt!41236 () Unit!2510)

(assert (=> b!86937 (= lt!41236 lt!41228)))

(declare-fun lt!41224 () ListLongMap!1449)

(assert (=> b!86937 (= lt!41224 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41235 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41235 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41237 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41237 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41227 () Unit!2510)

(assert (=> b!86937 (= lt!41227 (addApplyDifferent!58 lt!41224 lt!41235 lt!40142 lt!41237))))

(assert (=> b!86937 (= (apply!82 (+!108 lt!41224 (tuple2!2207 lt!41235 lt!40142)) lt!41237) (apply!82 lt!41224 lt!41237))))

(declare-fun lt!41231 () Unit!2510)

(assert (=> b!86937 (= lt!41231 lt!41227)))

(declare-fun lt!41221 () ListLongMap!1449)

(assert (=> b!86937 (= lt!41221 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41232 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41232 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41238 () (_ BitVec 64))

(assert (=> b!86937 (= lt!41238 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!86937 (= lt!41223 (addApplyDifferent!58 lt!41221 lt!41232 (minValue!2229 newMap!16) lt!41238))))

(assert (=> b!86937 (= (apply!82 (+!108 lt!41221 (tuple2!2207 lt!41232 (minValue!2229 newMap!16))) lt!41238) (apply!82 lt!41221 lt!41238))))

(declare-fun b!86938 () Bool)

(assert (=> b!86938 (= e!56631 (+!108 call!8286 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!86939 () Bool)

(declare-fun e!56635 () Bool)

(declare-fun e!56634 () Bool)

(assert (=> b!86939 (= e!56635 e!56634)))

(declare-fun res!44641 () Bool)

(declare-fun call!8280 () Bool)

(assert (=> b!86939 (= res!44641 call!8280)))

(assert (=> b!86939 (=> (not res!44641) (not e!56634))))

(declare-fun bm!8279 () Bool)

(assert (=> bm!8279 (= call!8280 (contains!752 lt!41233 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86940 () Bool)

(declare-fun res!44639 () Bool)

(assert (=> b!86940 (=> (not res!44639) (not e!56629))))

(declare-fun e!56627 () Bool)

(assert (=> b!86940 (= res!44639 e!56627)))

(declare-fun c!14274 () Bool)

(assert (=> b!86940 (= c!14274 (not (= (bvand lt!40338 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8280 () Bool)

(declare-fun call!8281 () ListLongMap!1449)

(declare-fun call!8283 () ListLongMap!1449)

(assert (=> bm!8280 (= call!8281 call!8283)))

(declare-fun b!86941 () Bool)

(assert (=> b!86941 (= e!56637 call!8281)))

(declare-fun b!86942 () Bool)

(declare-fun e!56633 () Bool)

(declare-fun e!56639 () Bool)

(assert (=> b!86942 (= e!56633 e!56639)))

(declare-fun res!44640 () Bool)

(assert (=> b!86942 (=> (not res!44640) (not e!56639))))

(assert (=> b!86942 (= res!44640 (contains!752 lt!41233 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!86942 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86943 () Bool)

(assert (=> b!86943 (= e!56635 (not call!8280))))

(declare-fun b!86944 () Bool)

(assert (=> b!86944 (= e!56632 call!8285)))

(declare-fun b!86945 () Bool)

(declare-fun call!8282 () Bool)

(assert (=> b!86945 (= e!56627 (not call!8282))))

(declare-fun b!86946 () Bool)

(assert (=> b!86946 (= e!56627 e!56628)))

(declare-fun res!44644 () Bool)

(assert (=> b!86946 (= res!44644 call!8282)))

(assert (=> b!86946 (=> (not res!44644) (not e!56628))))

(declare-fun b!86947 () Bool)

(assert (=> b!86947 (= e!56634 (= (apply!82 lt!41233 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!86948 () Bool)

(declare-fun res!44647 () Bool)

(assert (=> b!86948 (=> (not res!44647) (not e!56629))))

(assert (=> b!86948 (= res!44647 e!56633)))

(declare-fun res!44642 () Bool)

(assert (=> b!86948 (=> res!44642 e!56633)))

(declare-fun e!56630 () Bool)

(assert (=> b!86948 (= res!44642 (not e!56630))))

(declare-fun res!44645 () Bool)

(assert (=> b!86948 (=> (not res!44645) (not e!56630))))

(assert (=> b!86948 (= res!44645 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8281 () Bool)

(assert (=> bm!8281 (= call!8282 (contains!752 lt!41233 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86949 () Bool)

(assert (=> b!86949 (= e!56629 e!56635)))

(declare-fun c!14270 () Bool)

(assert (=> b!86949 (= c!14270 (not (= (bvand lt!40338 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!86950 () Bool)

(assert (=> b!86950 (= e!56630 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86951 () Bool)

(assert (=> b!86951 (= e!56639 (= (apply!82 lt!41233 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!86951 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (_values!2320 newMap!16))))))

(assert (=> b!86951 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8282 () Bool)

(declare-fun c!14272 () Bool)

(assert (=> bm!8282 (= call!8286 (+!108 (ite c!14273 call!8284 (ite c!14272 call!8283 call!8281)) (ite (or c!14273 c!14272) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8283 () Bool)

(assert (=> bm!8283 (= call!8283 call!8284)))

(declare-fun b!86952 () Bool)

(assert (=> b!86952 (= e!56637 call!8285)))

(declare-fun b!86953 () Bool)

(assert (=> b!86953 (= e!56631 e!56632)))

(assert (=> b!86953 (= c!14272 (and (not (= (bvand lt!40338 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40338 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!22939 c!14273) b!86938))

(assert (= (and d!22939 (not c!14273)) b!86953))

(assert (= (and b!86953 c!14272) b!86944))

(assert (= (and b!86953 (not c!14272)) b!86936))

(assert (= (and b!86936 c!14275) b!86952))

(assert (= (and b!86936 (not c!14275)) b!86941))

(assert (= (or b!86952 b!86941) bm!8280))

(assert (= (or b!86944 bm!8280) bm!8283))

(assert (= (or b!86944 b!86952) bm!8277))

(assert (= (or b!86938 bm!8283) bm!8278))

(assert (= (or b!86938 bm!8277) bm!8282))

(assert (= (and d!22939 res!44646) b!86934))

(assert (= (and d!22939 c!14271) b!86937))

(assert (= (and d!22939 (not c!14271)) b!86933))

(assert (= (and d!22939 res!44643) b!86948))

(assert (= (and b!86948 res!44645) b!86950))

(assert (= (and b!86948 (not res!44642)) b!86942))

(assert (= (and b!86942 res!44640) b!86951))

(assert (= (and b!86948 res!44647) b!86940))

(assert (= (and b!86940 c!14274) b!86946))

(assert (= (and b!86940 (not c!14274)) b!86945))

(assert (= (and b!86946 res!44644) b!86935))

(assert (= (or b!86946 b!86945) bm!8281))

(assert (= (and b!86940 res!44639) b!86949))

(assert (= (and b!86949 c!14270) b!86939))

(assert (= (and b!86949 (not c!14270)) b!86943))

(assert (= (and b!86939 res!44641) b!86947))

(assert (= (or b!86939 b!86943) bm!8279))

(declare-fun b_lambda!3839 () Bool)

(assert (=> (not b_lambda!3839) (not b!86951)))

(assert (=> b!86951 t!5251))

(declare-fun b_and!5237 () Bool)

(assert (= b_and!5233 (and (=> t!5251 result!2923) b_and!5237)))

(assert (=> b!86951 t!5253))

(declare-fun b_and!5239 () Bool)

(assert (= b_and!5235 (and (=> t!5253 result!2925) b_and!5239)))

(assert (=> b!86937 m!89961))

(declare-fun m!92287 () Bool)

(assert (=> b!86937 m!92287))

(declare-fun m!92289 () Bool)

(assert (=> b!86937 m!92289))

(declare-fun m!92291 () Bool)

(assert (=> b!86937 m!92291))

(declare-fun m!92293 () Bool)

(assert (=> b!86937 m!92293))

(declare-fun m!92295 () Bool)

(assert (=> b!86937 m!92295))

(declare-fun m!92297 () Bool)

(assert (=> b!86937 m!92297))

(assert (=> b!86937 m!92291))

(declare-fun m!92299 () Bool)

(assert (=> b!86937 m!92299))

(declare-fun m!92301 () Bool)

(assert (=> b!86937 m!92301))

(declare-fun m!92303 () Bool)

(assert (=> b!86937 m!92303))

(assert (=> b!86937 m!92299))

(assert (=> b!86937 m!92303))

(declare-fun m!92305 () Bool)

(assert (=> b!86937 m!92305))

(declare-fun m!92307 () Bool)

(assert (=> b!86937 m!92307))

(declare-fun m!92309 () Bool)

(assert (=> b!86937 m!92309))

(declare-fun m!92311 () Bool)

(assert (=> b!86937 m!92311))

(declare-fun m!92313 () Bool)

(assert (=> b!86937 m!92313))

(declare-fun m!92315 () Bool)

(assert (=> b!86937 m!92315))

(declare-fun m!92317 () Bool)

(assert (=> b!86937 m!92317))

(assert (=> b!86937 m!92309))

(declare-fun m!92319 () Bool)

(assert (=> bm!8282 m!92319))

(assert (=> b!86942 m!89961))

(assert (=> b!86942 m!89961))

(declare-fun m!92321 () Bool)

(assert (=> b!86942 m!92321))

(declare-fun m!92323 () Bool)

(assert (=> bm!8281 m!92323))

(assert (=> d!22939 m!90001))

(declare-fun m!92325 () Bool)

(assert (=> b!86935 m!92325))

(declare-fun m!92327 () Bool)

(assert (=> bm!8279 m!92327))

(assert (=> b!86950 m!89961))

(assert (=> b!86950 m!89961))

(assert (=> b!86950 m!90007))

(assert (=> bm!8278 m!92297))

(assert (=> b!86934 m!89961))

(assert (=> b!86934 m!89961))

(assert (=> b!86934 m!90007))

(declare-fun m!92329 () Bool)

(assert (=> b!86938 m!92329))

(assert (=> b!86951 m!89961))

(assert (=> b!86951 m!90011))

(assert (=> b!86951 m!90065))

(assert (=> b!86951 m!89961))

(declare-fun m!92331 () Bool)

(assert (=> b!86951 m!92331))

(assert (=> b!86951 m!90065))

(assert (=> b!86951 m!90011))

(assert (=> b!86951 m!90069))

(declare-fun m!92333 () Bool)

(assert (=> b!86947 m!92333))

(assert (=> d!22153 d!22939))

(assert (=> d!22153 d!22143))

(assert (=> d!22153 d!22431))

(declare-fun d!22941 () Bool)

(assert (=> d!22941 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40338 lt!40142 (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!22941 true))

(declare-fun _$7!74 () Unit!2510)

(assert (=> d!22941 (= (choose!508 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40338 (zeroValue!2229 newMap!16) lt!40142 (minValue!2229 newMap!16) (defaultEntry!2337 newMap!16)) _$7!74)))

(declare-fun bs!3683 () Bool)

(assert (= bs!3683 d!22941))

(assert (=> bs!3683 m!89631))

(assert (=> bs!3683 m!89631))

(assert (=> bs!3683 m!90089))

(assert (=> bs!3683 m!90087))

(assert (=> d!22153 d!22941))

(declare-fun d!22943 () Bool)

(declare-fun e!56640 () Bool)

(assert (=> d!22943 e!56640))

(declare-fun res!44648 () Bool)

(assert (=> d!22943 (=> (not res!44648) (not e!56640))))

(declare-fun lt!41245 () ListLongMap!1449)

(assert (=> d!22943 (= res!44648 (contains!752 lt!41245 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(declare-fun lt!41244 () List!1525)

(assert (=> d!22943 (= lt!41245 (ListLongMap!1450 lt!41244))))

(declare-fun lt!41243 () Unit!2510)

(declare-fun lt!41246 () Unit!2510)

(assert (=> d!22943 (= lt!41243 lt!41246)))

(assert (=> d!22943 (= (getValueByKey!138 lt!41244 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(assert (=> d!22943 (= lt!41246 (lemmaContainsTupThenGetReturnValue!58 lt!41244 (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(assert (=> d!22943 (= lt!41244 (insertStrictlySorted!61 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(assert (=> d!22943 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)) lt!41245)))

(declare-fun b!86954 () Bool)

(declare-fun res!44649 () Bool)

(assert (=> b!86954 (=> (not res!44649) (not e!56640))))

(assert (=> b!86954 (= res!44649 (= (getValueByKey!138 (toList!740 lt!41245) (_1!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142))) (Some!143 (_2!1114 (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)))))))

(declare-fun b!86955 () Bool)

(assert (=> b!86955 (= e!56640 (contains!753 (toList!740 lt!41245) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 lt!40142)))))

(assert (= (and d!22943 res!44648) b!86954))

(assert (= (and b!86954 res!44649) b!86955))

(declare-fun m!92335 () Bool)

(assert (=> d!22943 m!92335))

(declare-fun m!92337 () Bool)

(assert (=> d!22943 m!92337))

(declare-fun m!92339 () Bool)

(assert (=> d!22943 m!92339))

(declare-fun m!92341 () Bool)

(assert (=> d!22943 m!92341))

(declare-fun m!92343 () Bool)

(assert (=> b!86954 m!92343))

(declare-fun m!92345 () Bool)

(assert (=> b!86955 m!92345))

(assert (=> d!22153 d!22943))

(declare-fun d!22945 () Bool)

(assert (=> d!22945 (= (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85648 d!22945))

(assert (=> d!22261 d!22431))

(declare-fun b!86956 () Bool)

(declare-fun e!56643 () List!1525)

(assert (=> b!86956 (= e!56643 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 lt!40150))) (_1!1114 lt!40143) (_2!1114 lt!40143)))))

(declare-fun c!14279 () Bool)

(declare-fun c!14278 () Bool)

(declare-fun b!86957 () Bool)

(assert (=> b!86957 (= e!56643 (ite c!14278 (t!5237 (t!5237 (toList!740 lt!40150))) (ite c!14279 (Cons!1521 (h!2112 (t!5237 (toList!740 lt!40150))) (t!5237 (t!5237 (toList!740 lt!40150)))) Nil!1522)))))

(declare-fun b!86958 () Bool)

(declare-fun e!56644 () List!1525)

(declare-fun call!8288 () List!1525)

(assert (=> b!86958 (= e!56644 call!8288)))

(declare-fun b!86959 () Bool)

(declare-fun e!56641 () List!1525)

(declare-fun call!8287 () List!1525)

(assert (=> b!86959 (= e!56641 call!8287)))

(declare-fun b!86960 () Bool)

(assert (=> b!86960 (= c!14279 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40150))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150)))) (_1!1114 lt!40143))))))

(declare-fun e!56645 () List!1525)

(assert (=> b!86960 (= e!56641 e!56645)))

(declare-fun b!86961 () Bool)

(declare-fun res!44650 () Bool)

(declare-fun e!56642 () Bool)

(assert (=> b!86961 (=> (not res!44650) (not e!56642))))

(declare-fun lt!41247 () List!1525)

(assert (=> b!86961 (= res!44650 (containsKey!142 lt!41247 (_1!1114 lt!40143)))))

(declare-fun b!86963 () Bool)

(declare-fun call!8289 () List!1525)

(assert (=> b!86963 (= e!56645 call!8289)))

(declare-fun b!86964 () Bool)

(assert (=> b!86964 (= e!56642 (contains!753 lt!41247 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun c!14277 () Bool)

(declare-fun bm!8284 () Bool)

(assert (=> bm!8284 (= call!8288 ($colon$colon!71 e!56643 (ite c!14277 (h!2112 (t!5237 (toList!740 lt!40150))) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143)))))))

(declare-fun c!14276 () Bool)

(assert (=> bm!8284 (= c!14276 c!14277)))

(declare-fun bm!8285 () Bool)

(assert (=> bm!8285 (= call!8289 call!8287)))

(declare-fun b!86962 () Bool)

(assert (=> b!86962 (= e!56645 call!8289)))

(declare-fun d!22947 () Bool)

(assert (=> d!22947 e!56642))

(declare-fun res!44651 () Bool)

(assert (=> d!22947 (=> (not res!44651) (not e!56642))))

(assert (=> d!22947 (= res!44651 (isStrictlySorted!293 lt!41247))))

(assert (=> d!22947 (= lt!41247 e!56644)))

(assert (=> d!22947 (= c!14277 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40150))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150)))) (_1!1114 lt!40143))))))

(assert (=> d!22947 (isStrictlySorted!293 (t!5237 (toList!740 lt!40150)))))

(assert (=> d!22947 (= (insertStrictlySorted!61 (t!5237 (toList!740 lt!40150)) (_1!1114 lt!40143) (_2!1114 lt!40143)) lt!41247)))

(declare-fun b!86965 () Bool)

(assert (=> b!86965 (= e!56644 e!56641)))

(assert (=> b!86965 (= c!14278 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40150))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150)))) (_1!1114 lt!40143))))))

(declare-fun bm!8286 () Bool)

(assert (=> bm!8286 (= call!8287 call!8288)))

(assert (= (and d!22947 c!14277) b!86958))

(assert (= (and d!22947 (not c!14277)) b!86965))

(assert (= (and b!86965 c!14278) b!86959))

(assert (= (and b!86965 (not c!14278)) b!86960))

(assert (= (and b!86960 c!14279) b!86963))

(assert (= (and b!86960 (not c!14279)) b!86962))

(assert (= (or b!86963 b!86962) bm!8285))

(assert (= (or b!86959 bm!8285) bm!8286))

(assert (= (or b!86958 bm!8286) bm!8284))

(assert (= (and bm!8284 c!14276) b!86956))

(assert (= (and bm!8284 (not c!14276)) b!86957))

(assert (= (and d!22947 res!44651) b!86961))

(assert (= (and b!86961 res!44650) b!86964))

(declare-fun m!92347 () Bool)

(assert (=> d!22947 m!92347))

(declare-fun m!92349 () Bool)

(assert (=> d!22947 m!92349))

(declare-fun m!92351 () Bool)

(assert (=> b!86964 m!92351))

(declare-fun m!92353 () Bool)

(assert (=> b!86961 m!92353))

(declare-fun m!92355 () Bool)

(assert (=> b!86956 m!92355))

(declare-fun m!92357 () Bool)

(assert (=> bm!8284 m!92357))

(assert (=> b!85846 d!22947))

(assert (=> d!22319 d!22309))

(declare-fun d!22949 () Bool)

(declare-fun e!56647 () Bool)

(assert (=> d!22949 e!56647))

(declare-fun res!44652 () Bool)

(assert (=> d!22949 (=> res!44652 e!56647)))

(declare-fun lt!41248 () Bool)

(assert (=> d!22949 (= res!44652 (not lt!41248))))

(declare-fun lt!41251 () Bool)

(assert (=> d!22949 (= lt!41248 lt!41251)))

(declare-fun lt!41249 () Unit!2510)

(declare-fun e!56646 () Unit!2510)

(assert (=> d!22949 (= lt!41249 e!56646)))

(declare-fun c!14280 () Bool)

(assert (=> d!22949 (= c!14280 lt!41251)))

(assert (=> d!22949 (= lt!41251 (containsKey!142 (toList!740 lt!40406) lt!40419))))

(assert (=> d!22949 (= (contains!752 lt!40406 lt!40419) lt!41248)))

(declare-fun b!86966 () Bool)

(declare-fun lt!41250 () Unit!2510)

(assert (=> b!86966 (= e!56646 lt!41250)))

(assert (=> b!86966 (= lt!41250 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40406) lt!40419))))

(assert (=> b!86966 (isDefined!92 (getValueByKey!138 (toList!740 lt!40406) lt!40419))))

(declare-fun b!86967 () Bool)

(declare-fun Unit!2577 () Unit!2510)

(assert (=> b!86967 (= e!56646 Unit!2577)))

(declare-fun b!86968 () Bool)

(assert (=> b!86968 (= e!56647 (isDefined!92 (getValueByKey!138 (toList!740 lt!40406) lt!40419)))))

(assert (= (and d!22949 c!14280) b!86966))

(assert (= (and d!22949 (not c!14280)) b!86967))

(assert (= (and d!22949 (not res!44652)) b!86968))

(declare-fun m!92359 () Bool)

(assert (=> d!22949 m!92359))

(declare-fun m!92361 () Bool)

(assert (=> b!86966 m!92361))

(assert (=> b!86966 m!90635))

(assert (=> b!86966 m!90635))

(declare-fun m!92363 () Bool)

(assert (=> b!86966 m!92363))

(assert (=> b!86968 m!90635))

(assert (=> b!86968 m!90635))

(assert (=> b!86968 m!92363))

(assert (=> d!22319 d!22949))

(assert (=> d!22319 d!22323))

(assert (=> d!22319 d!22331))

(declare-fun d!22951 () Bool)

(assert (=> d!22951 (= (apply!82 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40419) (apply!82 lt!40406 lt!40419))))

(assert (=> d!22951 true))

(declare-fun _$34!843 () Unit!2510)

(assert (=> d!22951 (= (choose!517 lt!40406 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40419) _$34!843)))

(declare-fun bs!3684 () Bool)

(assert (= bs!3684 d!22951))

(assert (=> bs!3684 m!89665))

(assert (=> bs!3684 m!89665))

(assert (=> bs!3684 m!89667))

(assert (=> bs!3684 m!89685))

(assert (=> d!22319 d!22951))

(assert (=> b!85811 d!22667))

(assert (=> b!85811 d!22669))

(assert (=> b!85717 d!22717))

(assert (=> b!85717 d!22719))

(declare-fun d!22953 () Bool)

(assert (=> d!22953 (arrayContainsKey!0 (_keys!4008 newMap!16) lt!40599 #b00000000000000000000000000000000)))

(declare-fun lt!41254 () Unit!2510)

(declare-fun choose!13 (array!4005 (_ BitVec 64) (_ BitVec 32)) Unit!2510)

(assert (=> d!22953 (= lt!41254 (choose!13 (_keys!4008 newMap!16) lt!40599 #b00000000000000000000000000000000))))

(assert (=> d!22953 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!22953 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4008 newMap!16) lt!40599 #b00000000000000000000000000000000) lt!41254)))

(declare-fun bs!3685 () Bool)

(assert (= bs!3685 d!22953))

(assert (=> bs!3685 m!90143))

(declare-fun m!92365 () Bool)

(assert (=> bs!3685 m!92365))

(assert (=> b!85737 d!22953))

(declare-fun d!22955 () Bool)

(declare-fun res!44653 () Bool)

(declare-fun e!56648 () Bool)

(assert (=> d!22955 (=> res!44653 e!56648)))

(assert (=> d!22955 (= res!44653 (= (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) lt!40599))))

(assert (=> d!22955 (= (arrayContainsKey!0 (_keys!4008 newMap!16) lt!40599 #b00000000000000000000000000000000) e!56648)))

(declare-fun b!86969 () Bool)

(declare-fun e!56649 () Bool)

(assert (=> b!86969 (= e!56648 e!56649)))

(declare-fun res!44654 () Bool)

(assert (=> b!86969 (=> (not res!44654) (not e!56649))))

(assert (=> b!86969 (= res!44654 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!86970 () Bool)

(assert (=> b!86970 (= e!56649 (arrayContainsKey!0 (_keys!4008 newMap!16) lt!40599 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!22955 (not res!44653)) b!86969))

(assert (= (and b!86969 res!44654) b!86970))

(assert (=> d!22955 m!89961))

(declare-fun m!92367 () Bool)

(assert (=> b!86970 m!92367))

(assert (=> b!85737 d!22955))

(declare-fun b!86971 () Bool)

(declare-fun e!56650 () SeekEntryResult!246)

(declare-fun lt!41255 () SeekEntryResult!246)

(assert (=> b!86971 (= e!56650 (MissingZero!246 (index!3123 lt!41255)))))

(declare-fun d!22957 () Bool)

(declare-fun lt!41256 () SeekEntryResult!246)

(assert (=> d!22957 (and (or ((_ is Undefined!246) lt!41256) (not ((_ is Found!246) lt!41256)) (and (bvsge (index!3122 lt!41256) #b00000000000000000000000000000000) (bvslt (index!3122 lt!41256) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!41256) ((_ is Found!246) lt!41256) (not ((_ is MissingZero!246) lt!41256)) (and (bvsge (index!3121 lt!41256) #b00000000000000000000000000000000) (bvslt (index!3121 lt!41256) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!41256) ((_ is Found!246) lt!41256) ((_ is MissingZero!246) lt!41256) (not ((_ is MissingVacant!246) lt!41256)) (and (bvsge (index!3124 lt!41256) #b00000000000000000000000000000000) (bvslt (index!3124 lt!41256) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!41256) (ite ((_ is Found!246) lt!41256) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!41256)) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!246) lt!41256) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3121 lt!41256)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!246) lt!41256) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!41256)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!56651 () SeekEntryResult!246)

(assert (=> d!22957 (= lt!41256 e!56651)))

(declare-fun c!14282 () Bool)

(assert (=> d!22957 (= c!14282 (and ((_ is Intermediate!246) lt!41255) (undefined!1058 lt!41255)))))

(assert (=> d!22957 (= lt!41255 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (mask!6364 newMap!16)) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (=> d!22957 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22957 (= (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (_keys!4008 newMap!16) (mask!6364 newMap!16)) lt!41256)))

(declare-fun b!86972 () Bool)

(declare-fun c!14281 () Bool)

(declare-fun lt!41257 () (_ BitVec 64))

(assert (=> b!86972 (= c!14281 (= lt!41257 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56652 () SeekEntryResult!246)

(assert (=> b!86972 (= e!56652 e!56650)))

(declare-fun b!86973 () Bool)

(assert (=> b!86973 (= e!56651 Undefined!246)))

(declare-fun b!86974 () Bool)

(assert (=> b!86974 (= e!56652 (Found!246 (index!3123 lt!41255)))))

(declare-fun b!86975 () Bool)

(assert (=> b!86975 (= e!56651 e!56652)))

(assert (=> b!86975 (= lt!41257 (select (arr!1906 (_keys!4008 newMap!16)) (index!3123 lt!41255)))))

(declare-fun c!14283 () Bool)

(assert (=> b!86975 (= c!14283 (= lt!41257 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!86976 () Bool)

(assert (=> b!86976 (= e!56650 (seekKeyOrZeroReturnVacant!0 (x!11998 lt!41255) (index!3123 lt!41255) (index!3123 lt!41255) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (= (and d!22957 c!14282) b!86973))

(assert (= (and d!22957 (not c!14282)) b!86975))

(assert (= (and b!86975 c!14283) b!86974))

(assert (= (and b!86975 (not c!14283)) b!86972))

(assert (= (and b!86972 c!14281) b!86971))

(assert (= (and b!86972 (not c!14281)) b!86976))

(declare-fun m!92369 () Bool)

(assert (=> d!22957 m!92369))

(declare-fun m!92371 () Bool)

(assert (=> d!22957 m!92371))

(declare-fun m!92373 () Bool)

(assert (=> d!22957 m!92373))

(declare-fun m!92375 () Bool)

(assert (=> d!22957 m!92375))

(assert (=> d!22957 m!89961))

(declare-fun m!92377 () Bool)

(assert (=> d!22957 m!92377))

(assert (=> d!22957 m!89961))

(assert (=> d!22957 m!92375))

(assert (=> d!22957 m!90001))

(declare-fun m!92379 () Bool)

(assert (=> b!86975 m!92379))

(assert (=> b!86976 m!89961))

(declare-fun m!92381 () Bool)

(assert (=> b!86976 m!92381))

(assert (=> b!85737 d!22957))

(declare-fun d!22959 () Bool)

(declare-fun lt!41258 () Bool)

(assert (=> d!22959 (= lt!41258 (select (content!89 lt!40446) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun e!56653 () Bool)

(assert (=> d!22959 (= lt!41258 e!56653)))

(declare-fun res!44655 () Bool)

(assert (=> d!22959 (=> (not res!44655) (not e!56653))))

(assert (=> d!22959 (= res!44655 ((_ is Cons!1521) lt!40446))))

(assert (=> d!22959 (= (contains!753 lt!40446 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) lt!41258)))

(declare-fun b!86977 () Bool)

(declare-fun e!56654 () Bool)

(assert (=> b!86977 (= e!56653 e!56654)))

(declare-fun res!44656 () Bool)

(assert (=> b!86977 (=> res!44656 e!56654)))

(assert (=> b!86977 (= res!44656 (= (h!2112 lt!40446) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun b!86978 () Bool)

(assert (=> b!86978 (= e!56654 (contains!753 (t!5237 lt!40446) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!22959 res!44655) b!86977))

(assert (= (and b!86977 (not res!44656)) b!86978))

(declare-fun m!92383 () Bool)

(assert (=> d!22959 m!92383))

(declare-fun m!92385 () Bool)

(assert (=> d!22959 m!92385))

(declare-fun m!92387 () Bool)

(assert (=> b!86978 m!92387))

(assert (=> b!85786 d!22959))

(declare-fun d!22961 () Bool)

(declare-fun e!56656 () Bool)

(assert (=> d!22961 e!56656))

(declare-fun res!44657 () Bool)

(assert (=> d!22961 (=> res!44657 e!56656)))

(declare-fun lt!41259 () Bool)

(assert (=> d!22961 (= res!44657 (not lt!41259))))

(declare-fun lt!41262 () Bool)

(assert (=> d!22961 (= lt!41259 lt!41262)))

(declare-fun lt!41260 () Unit!2510)

(declare-fun e!56655 () Unit!2510)

(assert (=> d!22961 (= lt!41260 e!56655)))

(declare-fun c!14284 () Bool)

(assert (=> d!22961 (= c!14284 lt!41262)))

(assert (=> d!22961 (= lt!41262 (containsKey!142 (toList!740 lt!40688) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22961 (= (contains!752 lt!40688 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41259)))

(declare-fun b!86979 () Bool)

(declare-fun lt!41261 () Unit!2510)

(assert (=> b!86979 (= e!56655 lt!41261)))

(assert (=> b!86979 (= lt!41261 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40688) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!86979 (isDefined!92 (getValueByKey!138 (toList!740 lt!40688) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!86980 () Bool)

(declare-fun Unit!2578 () Unit!2510)

(assert (=> b!86980 (= e!56655 Unit!2578)))

(declare-fun b!86981 () Bool)

(assert (=> b!86981 (= e!56656 (isDefined!92 (getValueByKey!138 (toList!740 lt!40688) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22961 c!14284) b!86979))

(assert (= (and d!22961 (not c!14284)) b!86980))

(assert (= (and d!22961 (not res!44657)) b!86981))

(declare-fun m!92389 () Bool)

(assert (=> d!22961 m!92389))

(declare-fun m!92391 () Bool)

(assert (=> b!86979 m!92391))

(declare-fun m!92393 () Bool)

(assert (=> b!86979 m!92393))

(assert (=> b!86979 m!92393))

(declare-fun m!92395 () Bool)

(assert (=> b!86979 m!92395))

(assert (=> b!86981 m!92393))

(assert (=> b!86981 m!92393))

(assert (=> b!86981 m!92395))

(assert (=> bm!8174 d!22961))

(declare-fun d!22963 () Bool)

(declare-fun lt!41263 () Bool)

(assert (=> d!22963 (= lt!41263 (select (content!89 lt!40475) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun e!56657 () Bool)

(assert (=> d!22963 (= lt!41263 e!56657)))

(declare-fun res!44658 () Bool)

(assert (=> d!22963 (=> (not res!44658) (not e!56657))))

(assert (=> d!22963 (= res!44658 ((_ is Cons!1521) lt!40475))))

(assert (=> d!22963 (= (contains!753 lt!40475 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))) lt!41263)))

(declare-fun b!86982 () Bool)

(declare-fun e!56658 () Bool)

(assert (=> b!86982 (= e!56657 e!56658)))

(declare-fun res!44659 () Bool)

(assert (=> b!86982 (=> res!44659 e!56658)))

(assert (=> b!86982 (= res!44659 (= (h!2112 lt!40475) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun b!86983 () Bool)

(assert (=> b!86983 (= e!56658 (contains!753 (t!5237 lt!40475) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(assert (= (and d!22963 res!44658) b!86982))

(assert (= (and b!86982 (not res!44659)) b!86983))

(declare-fun m!92397 () Bool)

(assert (=> d!22963 m!92397))

(declare-fun m!92399 () Bool)

(assert (=> d!22963 m!92399))

(declare-fun m!92401 () Bool)

(assert (=> b!86983 m!92401))

(assert (=> b!85621 d!22963))

(declare-fun d!22965 () Bool)

(declare-fun lt!41264 () Bool)

(assert (=> d!22965 (= lt!41264 (select (content!89 (t!5237 (toList!740 lt!40476))) lt!40153))))

(declare-fun e!56659 () Bool)

(assert (=> d!22965 (= lt!41264 e!56659)))

(declare-fun res!44660 () Bool)

(assert (=> d!22965 (=> (not res!44660) (not e!56659))))

(assert (=> d!22965 (= res!44660 ((_ is Cons!1521) (t!5237 (toList!740 lt!40476))))))

(assert (=> d!22965 (= (contains!753 (t!5237 (toList!740 lt!40476)) lt!40153) lt!41264)))

(declare-fun b!86984 () Bool)

(declare-fun e!56660 () Bool)

(assert (=> b!86984 (= e!56659 e!56660)))

(declare-fun res!44661 () Bool)

(assert (=> b!86984 (=> res!44661 e!56660)))

(assert (=> b!86984 (= res!44661 (= (h!2112 (t!5237 (toList!740 lt!40476))) lt!40153))))

(declare-fun b!86985 () Bool)

(assert (=> b!86985 (= e!56660 (contains!753 (t!5237 (t!5237 (toList!740 lt!40476))) lt!40153))))

(assert (= (and d!22965 res!44660) b!86984))

(assert (= (and b!86984 (not res!44661)) b!86985))

(declare-fun m!92403 () Bool)

(assert (=> d!22965 m!92403))

(declare-fun m!92405 () Bool)

(assert (=> d!22965 m!92405))

(declare-fun m!92407 () Bool)

(assert (=> b!86985 m!92407))

(assert (=> b!86007 d!22965))

(declare-fun d!22967 () Bool)

(assert (=> d!22967 (isDefined!92 (getValueByKey!138 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(declare-fun lt!41265 () Unit!2510)

(assert (=> d!22967 (= lt!41265 (choose!514 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(declare-fun e!56661 () Bool)

(assert (=> d!22967 e!56661))

(declare-fun res!44662 () Bool)

(assert (=> d!22967 (=> (not res!44662) (not e!56661))))

(assert (=> d!22967 (= res!44662 (isStrictlySorted!293 (toList!740 call!8098)))))

(assert (=> d!22967 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))) lt!41265)))

(declare-fun b!86986 () Bool)

(assert (=> b!86986 (= e!56661 (containsKey!142 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(assert (= (and d!22967 res!44662) b!86986))

(assert (=> d!22967 m!90137))

(assert (=> d!22967 m!90137))

(assert (=> d!22967 m!90139))

(declare-fun m!92409 () Bool)

(assert (=> d!22967 m!92409))

(declare-fun m!92411 () Bool)

(assert (=> d!22967 m!92411))

(assert (=> b!86986 m!90133))

(assert (=> b!85724 d!22967))

(declare-fun d!22969 () Bool)

(assert (=> d!22969 (= (isDefined!92 (getValueByKey!138 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))) (not (isEmpty!341 (getValueByKey!138 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))))

(declare-fun bs!3686 () Bool)

(assert (= bs!3686 d!22969))

(assert (=> bs!3686 m!90137))

(declare-fun m!92413 () Bool)

(assert (=> bs!3686 m!92413))

(assert (=> b!85724 d!22969))

(declare-fun d!22971 () Bool)

(declare-fun c!14285 () Bool)

(assert (=> d!22971 (= c!14285 (and ((_ is Cons!1521) (toList!740 call!8098)) (= (_1!1114 (h!2112 (toList!740 call!8098))) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))))

(declare-fun e!56662 () Option!144)

(assert (=> d!22971 (= (getValueByKey!138 (toList!740 call!8098) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))) e!56662)))

(declare-fun b!86990 () Bool)

(declare-fun e!56663 () Option!144)

(assert (=> b!86990 (= e!56663 None!142)))

(declare-fun b!86987 () Bool)

(assert (=> b!86987 (= e!56662 (Some!143 (_2!1114 (h!2112 (toList!740 call!8098)))))))

(declare-fun b!86989 () Bool)

(assert (=> b!86989 (= e!56663 (getValueByKey!138 (t!5237 (toList!740 call!8098)) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(declare-fun b!86988 () Bool)

(assert (=> b!86988 (= e!56662 e!56663)))

(declare-fun c!14286 () Bool)

(assert (=> b!86988 (= c!14286 (and ((_ is Cons!1521) (toList!740 call!8098)) (not (= (_1!1114 (h!2112 (toList!740 call!8098))) (ite c!13832 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))))

(assert (= (and d!22971 c!14285) b!86987))

(assert (= (and d!22971 (not c!14285)) b!86988))

(assert (= (and b!86988 c!14286) b!86989))

(assert (= (and b!86988 (not c!14286)) b!86990))

(declare-fun m!92415 () Bool)

(assert (=> b!86989 m!92415))

(assert (=> b!85724 d!22971))

(declare-fun d!22973 () Bool)

(assert (=> d!22973 (= (apply!82 lt!40555 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40555) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3687 () Bool)

(assert (= bs!3687 d!22973))

(assert (=> bs!3687 m!91553))

(assert (=> bs!3687 m!91553))

(declare-fun m!92417 () Bool)

(assert (=> bs!3687 m!92417))

(assert (=> b!85685 d!22973))

(declare-fun d!22975 () Bool)

(assert (=> d!22975 (= (inRange!0 (ite c!14000 (index!3122 lt!40761) (ite c!13999 (index!3121 lt!40775) (index!3124 lt!40775))) (mask!6364 newMap!16)) (and (bvsge (ite c!14000 (index!3122 lt!40761) (ite c!13999 (index!3121 lt!40775) (index!3124 lt!40775))) #b00000000000000000000000000000000) (bvslt (ite c!14000 (index!3122 lt!40761) (ite c!13999 (index!3121 lt!40775) (index!3124 lt!40775))) (bvadd (mask!6364 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!8187 d!22975))

(declare-fun d!22977 () Bool)

(declare-fun c!14287 () Bool)

(assert (=> d!22977 (= c!14287 (and ((_ is Cons!1521) (toList!740 lt!40839)) (= (_1!1114 (h!2112 (toList!740 lt!40839))) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56664 () Option!144)

(assert (=> d!22977 (= (getValueByKey!138 (toList!740 lt!40839) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56664)))

(declare-fun b!86994 () Bool)

(declare-fun e!56665 () Option!144)

(assert (=> b!86994 (= e!56665 None!142)))

(declare-fun b!86991 () Bool)

(assert (=> b!86991 (= e!56664 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40839)))))))

(declare-fun b!86993 () Bool)

(assert (=> b!86993 (= e!56665 (getValueByKey!138 (t!5237 (toList!740 lt!40839)) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!86992 () Bool)

(assert (=> b!86992 (= e!56664 e!56665)))

(declare-fun c!14288 () Bool)

(assert (=> b!86992 (= c!14288 (and ((_ is Cons!1521) (toList!740 lt!40839)) (not (= (_1!1114 (h!2112 (toList!740 lt!40839))) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22977 c!14287) b!86991))

(assert (= (and d!22977 (not c!14287)) b!86992))

(assert (= (and b!86992 c!14288) b!86993))

(assert (= (and b!86992 (not c!14288)) b!86994))

(declare-fun m!92419 () Bool)

(assert (=> b!86993 m!92419))

(assert (=> b!86076 d!22977))

(declare-fun d!22979 () Bool)

(declare-fun res!44663 () Bool)

(declare-fun e!56666 () Bool)

(assert (=> d!22979 (=> res!44663 e!56666)))

(assert (=> d!22979 (= res!44663 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40412)))))

(assert (=> d!22979 (= (containsKey!142 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412) e!56666)))

(declare-fun b!86995 () Bool)

(declare-fun e!56667 () Bool)

(assert (=> b!86995 (= e!56666 e!56667)))

(declare-fun res!44664 () Bool)

(assert (=> b!86995 (=> (not res!44664) (not e!56667))))

(assert (=> b!86995 (= res!44664 (and (or (not ((_ is Cons!1521) (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) (bvsle (_1!1114 (h!2112 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40412)) ((_ is Cons!1521) (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40412)))))

(declare-fun b!86996 () Bool)

(assert (=> b!86996 (= e!56667 (containsKey!142 (t!5237 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!40412))))

(assert (= (and d!22979 (not res!44663)) b!86995))

(assert (= (and b!86995 res!44664) b!86996))

(declare-fun m!92421 () Bool)

(assert (=> b!86996 m!92421))

(assert (=> d!22313 d!22979))

(declare-fun b!87009 () Bool)

(declare-fun e!56674 () SeekEntryResult!246)

(assert (=> b!87009 (= e!56674 Undefined!246)))

(declare-fun lt!41271 () SeekEntryResult!246)

(declare-fun d!22981 () Bool)

(assert (=> d!22981 (and (or ((_ is Undefined!246) lt!41271) (not ((_ is Found!246) lt!41271)) (and (bvsge (index!3122 lt!41271) #b00000000000000000000000000000000) (bvslt (index!3122 lt!41271) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!41271) ((_ is Found!246) lt!41271) (not ((_ is MissingVacant!246) lt!41271)) (not (= (index!3124 lt!41271) (index!3123 lt!40668))) (and (bvsge (index!3124 lt!41271) #b00000000000000000000000000000000) (bvslt (index!3124 lt!41271) (size!2151 (_keys!4008 newMap!16))))) (or ((_ is Undefined!246) lt!41271) (ite ((_ is Found!246) lt!41271) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!41271)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (and ((_ is MissingVacant!246) lt!41271) (= (index!3124 lt!41271) (index!3123 lt!40668)) (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3124 lt!41271)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!22981 (= lt!41271 e!56674)))

(declare-fun c!14297 () Bool)

(assert (=> d!22981 (= c!14297 (bvsge (x!11998 lt!40668) #b01111111111111111111111111111110))))

(declare-fun lt!41270 () (_ BitVec 64))

(assert (=> d!22981 (= lt!41270 (select (arr!1906 (_keys!4008 newMap!16)) (index!3123 lt!40668)))))

(assert (=> d!22981 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!22981 (= (seekKeyOrZeroReturnVacant!0 (x!11998 lt!40668) (index!3123 lt!40668) (index!3123 lt!40668) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)) lt!41271)))

(declare-fun b!87010 () Bool)

(declare-fun e!56675 () SeekEntryResult!246)

(assert (=> b!87010 (= e!56675 (MissingVacant!246 (index!3123 lt!40668)))))

(declare-fun b!87011 () Bool)

(assert (=> b!87011 (= e!56675 (seekKeyOrZeroReturnVacant!0 (bvadd (x!11998 lt!40668) #b00000000000000000000000000000001) (nextIndex!0 (index!3123 lt!40668) (x!11998 lt!40668) (mask!6364 newMap!16)) (index!3123 lt!40668) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!87012 () Bool)

(declare-fun e!56676 () SeekEntryResult!246)

(assert (=> b!87012 (= e!56676 (Found!246 (index!3123 lt!40668)))))

(declare-fun b!87013 () Bool)

(declare-fun c!14295 () Bool)

(assert (=> b!87013 (= c!14295 (= lt!41270 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87013 (= e!56676 e!56675)))

(declare-fun b!87014 () Bool)

(assert (=> b!87014 (= e!56674 e!56676)))

(declare-fun c!14296 () Bool)

(assert (=> b!87014 (= c!14296 (= lt!41270 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!22981 c!14297) b!87009))

(assert (= (and d!22981 (not c!14297)) b!87014))

(assert (= (and b!87014 c!14296) b!87012))

(assert (= (and b!87014 (not c!14296)) b!87013))

(assert (= (and b!87013 c!14295) b!87010))

(assert (= (and b!87013 (not c!14295)) b!87011))

(declare-fun m!92423 () Bool)

(assert (=> d!22981 m!92423))

(declare-fun m!92425 () Bool)

(assert (=> d!22981 m!92425))

(assert (=> d!22981 m!90395))

(assert (=> d!22981 m!90001))

(declare-fun m!92427 () Bool)

(assert (=> b!87011 m!92427))

(assert (=> b!87011 m!92427))

(assert (=> b!87011 m!89403))

(declare-fun m!92429 () Bool)

(assert (=> b!87011 m!92429))

(assert (=> b!85888 d!22981))

(declare-fun d!22983 () Bool)

(assert (=> d!22983 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun lt!41272 () Unit!2510)

(assert (=> d!22983 (= lt!41272 (choose!514 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!56677 () Bool)

(assert (=> d!22983 e!56677))

(declare-fun res!44665 () Bool)

(assert (=> d!22983 (=> (not res!44665) (not e!56677))))

(assert (=> d!22983 (= res!44665 (isStrictlySorted!293 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))))

(assert (=> d!22983 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!41272)))

(declare-fun b!87015 () Bool)

(assert (=> b!87015 (= e!56677 (containsKey!142 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!22983 res!44665) b!87015))

(assert (=> d!22983 m!89403))

(assert (=> d!22983 m!90609))

(assert (=> d!22983 m!90609))

(assert (=> d!22983 m!90611))

(assert (=> d!22983 m!89403))

(declare-fun m!92431 () Bool)

(assert (=> d!22983 m!92431))

(declare-fun m!92433 () Bool)

(assert (=> d!22983 m!92433))

(assert (=> b!87015 m!89403))

(assert (=> b!87015 m!90605))

(assert (=> b!86033 d!22983))

(declare-fun d!22985 () Bool)

(assert (=> d!22985 (= (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) (not (isEmpty!341 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(declare-fun bs!3688 () Bool)

(assert (= bs!3688 d!22985))

(assert (=> bs!3688 m!90609))

(declare-fun m!92435 () Bool)

(assert (=> bs!3688 m!92435))

(assert (=> b!86033 d!22985))

(declare-fun d!22987 () Bool)

(declare-fun c!14298 () Bool)

(assert (=> d!22987 (= c!14298 (and ((_ is Cons!1521) (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (= (_1!1114 (h!2112 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun e!56678 () Option!144)

(assert (=> d!22987 (= (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56678)))

(declare-fun b!87019 () Bool)

(declare-fun e!56679 () Option!144)

(assert (=> b!87019 (= e!56679 None!142)))

(declare-fun b!87016 () Bool)

(assert (=> b!87016 (= e!56678 (Some!143 (_2!1114 (h!2112 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))))))

(declare-fun b!87018 () Bool)

(assert (=> b!87018 (= e!56679 (getValueByKey!138 (t!5237 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!87017 () Bool)

(assert (=> b!87017 (= e!56678 e!56679)))

(declare-fun c!14299 () Bool)

(assert (=> b!87017 (= c!14299 (and ((_ is Cons!1521) (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))) (not (= (_1!1114 (h!2112 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(assert (= (and d!22987 c!14298) b!87016))

(assert (= (and d!22987 (not c!14298)) b!87017))

(assert (= (and b!87017 c!14299) b!87018))

(assert (= (and b!87017 (not c!14299)) b!87019))

(assert (=> b!87018 m!89403))

(declare-fun m!92437 () Bool)

(assert (=> b!87018 m!92437))

(assert (=> b!86033 d!22987))

(declare-fun d!22989 () Bool)

(declare-fun e!56681 () Bool)

(assert (=> d!22989 e!56681))

(declare-fun res!44666 () Bool)

(assert (=> d!22989 (=> res!44666 e!56681)))

(declare-fun lt!41273 () Bool)

(assert (=> d!22989 (= res!44666 (not lt!41273))))

(declare-fun lt!41276 () Bool)

(assert (=> d!22989 (= lt!41273 lt!41276)))

(declare-fun lt!41274 () Unit!2510)

(declare-fun e!56680 () Unit!2510)

(assert (=> d!22989 (= lt!41274 e!56680)))

(declare-fun c!14300 () Bool)

(assert (=> d!22989 (= c!14300 lt!41276)))

(assert (=> d!22989 (= lt!41276 (containsKey!142 (toList!740 lt!40518) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22989 (= (contains!752 lt!40518 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41273)))

(declare-fun b!87020 () Bool)

(declare-fun lt!41275 () Unit!2510)

(assert (=> b!87020 (= e!56680 lt!41275)))

(assert (=> b!87020 (= lt!41275 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40518) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87020 (isDefined!92 (getValueByKey!138 (toList!740 lt!40518) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87021 () Bool)

(declare-fun Unit!2579 () Unit!2510)

(assert (=> b!87021 (= e!56680 Unit!2579)))

(declare-fun b!87022 () Bool)

(assert (=> b!87022 (= e!56681 (isDefined!92 (getValueByKey!138 (toList!740 lt!40518) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22989 c!14300) b!87020))

(assert (= (and d!22989 (not c!14300)) b!87021))

(assert (= (and d!22989 (not res!44666)) b!87022))

(declare-fun m!92439 () Bool)

(assert (=> d!22989 m!92439))

(declare-fun m!92441 () Bool)

(assert (=> b!87020 m!92441))

(declare-fun m!92443 () Bool)

(assert (=> b!87020 m!92443))

(assert (=> b!87020 m!92443))

(declare-fun m!92445 () Bool)

(assert (=> b!87020 m!92445))

(assert (=> b!87022 m!92443))

(assert (=> b!87022 m!92443))

(assert (=> b!87022 m!92445))

(assert (=> d!22139 d!22989))

(assert (=> d!22139 d!22091))

(declare-fun d!22991 () Bool)

(declare-fun e!56683 () Bool)

(assert (=> d!22991 e!56683))

(declare-fun res!44667 () Bool)

(assert (=> d!22991 (=> res!44667 e!56683)))

(declare-fun lt!41277 () Bool)

(assert (=> d!22991 (= res!44667 (not lt!41277))))

(declare-fun lt!41280 () Bool)

(assert (=> d!22991 (= lt!41277 lt!41280)))

(declare-fun lt!41278 () Unit!2510)

(declare-fun e!56682 () Unit!2510)

(assert (=> d!22991 (= lt!41278 e!56682)))

(declare-fun c!14301 () Bool)

(assert (=> d!22991 (= c!14301 lt!41280)))

(assert (=> d!22991 (= lt!41280 (containsKey!142 (toList!740 lt!40518) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!22991 (= (contains!752 lt!40518 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41277)))

(declare-fun b!87023 () Bool)

(declare-fun lt!41279 () Unit!2510)

(assert (=> b!87023 (= e!56682 lt!41279)))

(assert (=> b!87023 (= lt!41279 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40518) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87023 (isDefined!92 (getValueByKey!138 (toList!740 lt!40518) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87024 () Bool)

(declare-fun Unit!2580 () Unit!2510)

(assert (=> b!87024 (= e!56682 Unit!2580)))

(declare-fun b!87025 () Bool)

(assert (=> b!87025 (= e!56683 (isDefined!92 (getValueByKey!138 (toList!740 lt!40518) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!22991 c!14301) b!87023))

(assert (= (and d!22991 (not c!14301)) b!87024))

(assert (= (and d!22991 (not res!44667)) b!87025))

(declare-fun m!92447 () Bool)

(assert (=> d!22991 m!92447))

(declare-fun m!92449 () Bool)

(assert (=> b!87023 m!92449))

(declare-fun m!92451 () Bool)

(assert (=> b!87023 m!92451))

(assert (=> b!87023 m!92451))

(declare-fun m!92453 () Bool)

(assert (=> b!87023 m!92453))

(assert (=> b!87025 m!92451))

(assert (=> b!87025 m!92451))

(assert (=> b!87025 m!92453))

(assert (=> b!85639 d!22991))

(assert (=> b!85839 d!22757))

(assert (=> b!85839 d!22151))

(assert (=> bm!8147 d!22541))

(declare-fun d!22993 () Bool)

(declare-fun c!14302 () Bool)

(assert (=> d!22993 (= c!14302 ((_ is Nil!1522) (toList!740 lt!40480)))))

(declare-fun e!56684 () (InoxSet tuple2!2206))

(assert (=> d!22993 (= (content!89 (toList!740 lt!40480)) e!56684)))

(declare-fun b!87026 () Bool)

(assert (=> b!87026 (= e!56684 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!87027 () Bool)

(assert (=> b!87027 (= e!56684 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40480)) true) (content!89 (t!5237 (toList!740 lt!40480)))))))

(assert (= (and d!22993 c!14302) b!87026))

(assert (= (and d!22993 (not c!14302)) b!87027))

(declare-fun m!92455 () Bool)

(assert (=> b!87027 m!92455))

(assert (=> b!87027 m!91971))

(assert (=> d!22191 d!22993))

(declare-fun d!22995 () Bool)

(assert (=> d!22995 (= (content!90 Nil!1523) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!22239 d!22995))

(declare-fun d!22997 () Bool)

(declare-fun c!14303 () Bool)

(assert (=> d!22997 (= c!14303 ((_ is Nil!1522) (toList!740 lt!40451)))))

(declare-fun e!56685 () (InoxSet tuple2!2206))

(assert (=> d!22997 (= (content!89 (toList!740 lt!40451)) e!56685)))

(declare-fun b!87028 () Bool)

(assert (=> b!87028 (= e!56685 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!87029 () Bool)

(assert (=> b!87029 (= e!56685 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40451)) true) (content!89 (t!5237 (toList!740 lt!40451)))))))

(assert (= (and d!22997 c!14303) b!87028))

(assert (= (and d!22997 (not c!14303)) b!87029))

(declare-fun m!92457 () Bool)

(assert (=> b!87029 m!92457))

(assert (=> b!87029 m!91931))

(assert (=> d!22257 d!22997))

(declare-fun d!22999 () Bool)

(declare-fun c!14304 () Bool)

(assert (=> d!22999 (= c!14304 (and ((_ is Cons!1521) (toList!740 lt!40632)) (= (_1!1114 (h!2112 (toList!740 lt!40632))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56686 () Option!144)

(assert (=> d!22999 (= (getValueByKey!138 (toList!740 lt!40632) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56686)))

(declare-fun b!87033 () Bool)

(declare-fun e!56687 () Option!144)

(assert (=> b!87033 (= e!56687 None!142)))

(declare-fun b!87030 () Bool)

(assert (=> b!87030 (= e!56686 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40632)))))))

(declare-fun b!87032 () Bool)

(assert (=> b!87032 (= e!56687 (getValueByKey!138 (t!5237 (toList!740 lt!40632)) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87031 () Bool)

(assert (=> b!87031 (= e!56686 e!56687)))

(declare-fun c!14305 () Bool)

(assert (=> b!87031 (= c!14305 (and ((_ is Cons!1521) (toList!740 lt!40632)) (not (= (_1!1114 (h!2112 (toList!740 lt!40632))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!22999 c!14304) b!87030))

(assert (= (and d!22999 (not c!14304)) b!87031))

(assert (= (and b!87031 c!14305) b!87032))

(assert (= (and b!87031 (not c!14305)) b!87033))

(declare-fun m!92459 () Bool)

(assert (=> b!87032 m!92459))

(assert (=> b!85802 d!22999))

(declare-fun d!23001 () Bool)

(declare-fun lt!41281 () Bool)

(assert (=> d!23001 (= lt!41281 (select (content!89 lt!40450) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun e!56688 () Bool)

(assert (=> d!23001 (= lt!41281 e!56688)))

(declare-fun res!44668 () Bool)

(assert (=> d!23001 (=> (not res!44668) (not e!56688))))

(assert (=> d!23001 (= res!44668 ((_ is Cons!1521) lt!40450))))

(assert (=> d!23001 (= (contains!753 lt!40450 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))) lt!41281)))

(declare-fun b!87034 () Bool)

(declare-fun e!56689 () Bool)

(assert (=> b!87034 (= e!56688 e!56689)))

(declare-fun res!44669 () Bool)

(assert (=> b!87034 (=> res!44669 e!56689)))

(assert (=> b!87034 (= res!44669 (= (h!2112 lt!40450) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun b!87035 () Bool)

(assert (=> b!87035 (= e!56689 (contains!753 (t!5237 lt!40450) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(assert (= (and d!23001 res!44668) b!87034))

(assert (= (and b!87034 (not res!44669)) b!87035))

(declare-fun m!92461 () Bool)

(assert (=> d!23001 m!92461))

(declare-fun m!92463 () Bool)

(assert (=> d!23001 m!92463))

(declare-fun m!92465 () Bool)

(assert (=> b!87035 m!92465))

(assert (=> b!85845 d!23001))

(declare-fun d!23003 () Bool)

(assert (=> d!23003 (= (isEmpty!341 (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) (not ((_ is Some!143) (getValueByKey!138 (toList!740 lt!40151) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))))

(assert (=> d!22301 d!23003))

(declare-fun d!23005 () Bool)

(declare-fun lt!41282 () Bool)

(assert (=> d!23005 (= lt!41282 (select (content!89 lt!40614) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun e!56690 () Bool)

(assert (=> d!23005 (= lt!41282 e!56690)))

(declare-fun res!44670 () Bool)

(assert (=> d!23005 (=> (not res!44670) (not e!56690))))

(assert (=> d!23005 (= res!44670 ((_ is Cons!1521) lt!40614))))

(assert (=> d!23005 (= (contains!753 lt!40614 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))) lt!41282)))

(declare-fun b!87036 () Bool)

(declare-fun e!56691 () Bool)

(assert (=> b!87036 (= e!56690 e!56691)))

(declare-fun res!44671 () Bool)

(assert (=> b!87036 (=> res!44671 e!56691)))

(assert (=> b!87036 (= res!44671 (= (h!2112 lt!40614) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun b!87037 () Bool)

(assert (=> b!87037 (= e!56691 (contains!753 (t!5237 lt!40614) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(assert (= (and d!23005 res!44670) b!87036))

(assert (= (and b!87036 (not res!44671)) b!87037))

(declare-fun m!92467 () Bool)

(assert (=> d!23005 m!92467))

(declare-fun m!92469 () Bool)

(assert (=> d!23005 m!92469))

(declare-fun m!92471 () Bool)

(assert (=> b!87037 m!92471))

(assert (=> b!85772 d!23005))

(declare-fun d!23007 () Bool)

(declare-fun c!14306 () Bool)

(assert (=> d!23007 (= c!14306 (and ((_ is Cons!1521) (toList!740 lt!40861)) (= (_1!1114 (h!2112 (toList!740 lt!40861))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56692 () Option!144)

(assert (=> d!23007 (= (getValueByKey!138 (toList!740 lt!40861) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56692)))

(declare-fun b!87041 () Bool)

(declare-fun e!56693 () Option!144)

(assert (=> b!87041 (= e!56693 None!142)))

(declare-fun b!87038 () Bool)

(assert (=> b!87038 (= e!56692 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40861)))))))

(declare-fun b!87040 () Bool)

(assert (=> b!87040 (= e!56693 (getValueByKey!138 (t!5237 (toList!740 lt!40861)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!87039 () Bool)

(assert (=> b!87039 (= e!56692 e!56693)))

(declare-fun c!14307 () Bool)

(assert (=> b!87039 (= c!14307 (and ((_ is Cons!1521) (toList!740 lt!40861)) (not (= (_1!1114 (h!2112 (toList!740 lt!40861))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!23007 c!14306) b!87038))

(assert (= (and d!23007 (not c!14306)) b!87039))

(assert (= (and b!87039 c!14307) b!87040))

(assert (= (and b!87039 (not c!14307)) b!87041))

(declare-fun m!92473 () Bool)

(assert (=> b!87040 m!92473))

(assert (=> b!86089 d!23007))

(declare-fun d!23009 () Bool)

(assert (=> d!23009 (= (get!1204 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2644 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22287 d!23009))

(assert (=> d!22287 d!22395))

(declare-fun d!23011 () Bool)

(assert (=> d!23011 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))

(declare-fun lt!41283 () Unit!2510)

(assert (=> d!23011 (= lt!41283 (choose!514 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))

(declare-fun e!56694 () Bool)

(assert (=> d!23011 e!56694))

(declare-fun res!44672 () Bool)

(assert (=> d!23011 (=> (not res!44672) (not e!56694))))

(assert (=> d!23011 (= res!44672 (isStrictlySorted!293 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!23011 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412) lt!41283)))

(declare-fun b!87042 () Bool)

(assert (=> b!87042 (= e!56694 (containsKey!142 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))

(assert (= (and d!23011 res!44672) b!87042))

(assert (=> d!23011 m!90647))

(assert (=> d!23011 m!90647))

(assert (=> d!23011 m!90649))

(declare-fun m!92475 () Bool)

(assert (=> d!23011 m!92475))

(declare-fun m!92477 () Bool)

(assert (=> d!23011 m!92477))

(assert (=> b!87042 m!90643))

(assert (=> b!86068 d!23011))

(declare-fun d!23013 () Bool)

(assert (=> d!23013 (= (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412)) (not (isEmpty!341 (getValueByKey!138 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412))))))

(declare-fun bs!3689 () Bool)

(assert (= bs!3689 d!23013))

(assert (=> bs!3689 m!90647))

(declare-fun m!92479 () Bool)

(assert (=> bs!3689 m!92479))

(assert (=> b!86068 d!23013))

(declare-fun c!14308 () Bool)

(declare-fun d!23015 () Bool)

(assert (=> d!23015 (= c!14308 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40412)))))

(declare-fun e!56695 () Option!144)

(assert (=> d!23015 (= (getValueByKey!138 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40412) e!56695)))

(declare-fun b!87046 () Bool)

(declare-fun e!56696 () Option!144)

(assert (=> b!87046 (= e!56696 None!142)))

(declare-fun b!87043 () Bool)

(assert (=> b!87043 (= e!56695 (Some!143 (_2!1114 (h!2112 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(declare-fun b!87045 () Bool)

(assert (=> b!87045 (= e!56696 (getValueByKey!138 (t!5237 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!40412))))

(declare-fun b!87044 () Bool)

(assert (=> b!87044 (= e!56695 e!56696)))

(declare-fun c!14309 () Bool)

(assert (=> b!87044 (= c!14309 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (not (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40411 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40412))))))

(assert (= (and d!23015 c!14308) b!87043))

(assert (= (and d!23015 (not c!14308)) b!87044))

(assert (= (and b!87044 c!14309) b!87045))

(assert (= (and b!87044 (not c!14309)) b!87046))

(declare-fun m!92481 () Bool)

(assert (=> b!87045 m!92481))

(assert (=> b!86068 d!23015))

(assert (=> d!22163 d!22159))

(assert (=> d!22163 d!22161))

(declare-fun d!23017 () Bool)

(assert (=> d!23017 (not (contains!752 (+!108 lt!40469 (tuple2!2207 lt!40470 lt!40468)) lt!40467))))

(assert (=> d!23017 true))

(declare-fun _$36!313 () Unit!2510)

(assert (=> d!23017 (= (choose!509 lt!40469 lt!40470 lt!40468 lt!40467) _$36!313)))

(declare-fun bs!3690 () Bool)

(assert (= bs!3690 d!23017))

(assert (=> bs!3690 m!89795))

(assert (=> bs!3690 m!89795))

(assert (=> bs!3690 m!89797))

(assert (=> d!22163 d!23017))

(declare-fun d!23019 () Bool)

(declare-fun e!56698 () Bool)

(assert (=> d!23019 e!56698))

(declare-fun res!44673 () Bool)

(assert (=> d!23019 (=> res!44673 e!56698)))

(declare-fun lt!41284 () Bool)

(assert (=> d!23019 (= res!44673 (not lt!41284))))

(declare-fun lt!41287 () Bool)

(assert (=> d!23019 (= lt!41284 lt!41287)))

(declare-fun lt!41285 () Unit!2510)

(declare-fun e!56697 () Unit!2510)

(assert (=> d!23019 (= lt!41285 e!56697)))

(declare-fun c!14310 () Bool)

(assert (=> d!23019 (= c!14310 lt!41287)))

(assert (=> d!23019 (= lt!41287 (containsKey!142 (toList!740 lt!40469) lt!40467))))

(assert (=> d!23019 (= (contains!752 lt!40469 lt!40467) lt!41284)))

(declare-fun b!87048 () Bool)

(declare-fun lt!41286 () Unit!2510)

(assert (=> b!87048 (= e!56697 lt!41286)))

(assert (=> b!87048 (= lt!41286 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40469) lt!40467))))

(assert (=> b!87048 (isDefined!92 (getValueByKey!138 (toList!740 lt!40469) lt!40467))))

(declare-fun b!87049 () Bool)

(declare-fun Unit!2581 () Unit!2510)

(assert (=> b!87049 (= e!56697 Unit!2581)))

(declare-fun b!87050 () Bool)

(assert (=> b!87050 (= e!56698 (isDefined!92 (getValueByKey!138 (toList!740 lt!40469) lt!40467)))))

(assert (= (and d!23019 c!14310) b!87048))

(assert (= (and d!23019 (not c!14310)) b!87049))

(assert (= (and d!23019 (not res!44673)) b!87050))

(declare-fun m!92483 () Bool)

(assert (=> d!23019 m!92483))

(declare-fun m!92485 () Bool)

(assert (=> b!87048 m!92485))

(declare-fun m!92487 () Bool)

(assert (=> b!87048 m!92487))

(assert (=> b!87048 m!92487))

(declare-fun m!92489 () Bool)

(assert (=> b!87048 m!92489))

(assert (=> b!87050 m!92487))

(assert (=> b!87050 m!92487))

(assert (=> b!87050 m!92489))

(assert (=> d!22163 d!23019))

(declare-fun d!23021 () Bool)

(declare-fun e!56699 () Bool)

(assert (=> d!23021 e!56699))

(declare-fun res!44674 () Bool)

(assert (=> d!23021 (=> (not res!44674) (not e!56699))))

(declare-fun lt!41290 () ListLongMap!1449)

(assert (=> d!23021 (= res!44674 (contains!752 lt!41290 (_1!1114 (tuple2!2207 lt!40517 lt!40515))))))

(declare-fun lt!41289 () List!1525)

(assert (=> d!23021 (= lt!41290 (ListLongMap!1450 lt!41289))))

(declare-fun lt!41288 () Unit!2510)

(declare-fun lt!41291 () Unit!2510)

(assert (=> d!23021 (= lt!41288 lt!41291)))

(assert (=> d!23021 (= (getValueByKey!138 lt!41289 (_1!1114 (tuple2!2207 lt!40517 lt!40515))) (Some!143 (_2!1114 (tuple2!2207 lt!40517 lt!40515))))))

(assert (=> d!23021 (= lt!41291 (lemmaContainsTupThenGetReturnValue!58 lt!41289 (_1!1114 (tuple2!2207 lt!40517 lt!40515)) (_2!1114 (tuple2!2207 lt!40517 lt!40515))))))

(assert (=> d!23021 (= lt!41289 (insertStrictlySorted!61 (toList!740 lt!40516) (_1!1114 (tuple2!2207 lt!40517 lt!40515)) (_2!1114 (tuple2!2207 lt!40517 lt!40515))))))

(assert (=> d!23021 (= (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515)) lt!41290)))

(declare-fun b!87051 () Bool)

(declare-fun res!44675 () Bool)

(assert (=> b!87051 (=> (not res!44675) (not e!56699))))

(assert (=> b!87051 (= res!44675 (= (getValueByKey!138 (toList!740 lt!41290) (_1!1114 (tuple2!2207 lt!40517 lt!40515))) (Some!143 (_2!1114 (tuple2!2207 lt!40517 lt!40515)))))))

(declare-fun b!87052 () Bool)

(assert (=> b!87052 (= e!56699 (contains!753 (toList!740 lt!41290) (tuple2!2207 lt!40517 lt!40515)))))

(assert (= (and d!23021 res!44674) b!87051))

(assert (= (and b!87051 res!44675) b!87052))

(declare-fun m!92491 () Bool)

(assert (=> d!23021 m!92491))

(declare-fun m!92493 () Bool)

(assert (=> d!23021 m!92493))

(declare-fun m!92495 () Bool)

(assert (=> d!23021 m!92495))

(declare-fun m!92497 () Bool)

(assert (=> d!23021 m!92497))

(declare-fun m!92499 () Bool)

(assert (=> b!87051 m!92499))

(declare-fun m!92501 () Bool)

(assert (=> b!87052 m!92501))

(assert (=> b!85647 d!23021))

(declare-fun d!23023 () Bool)

(assert (=> d!23023 (not (contains!752 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515)) lt!40514))))

(declare-fun lt!41292 () Unit!2510)

(assert (=> d!23023 (= lt!41292 (choose!509 lt!40516 lt!40517 lt!40515 lt!40514))))

(declare-fun e!56700 () Bool)

(assert (=> d!23023 e!56700))

(declare-fun res!44676 () Bool)

(assert (=> d!23023 (=> (not res!44676) (not e!56700))))

(assert (=> d!23023 (= res!44676 (not (contains!752 lt!40516 lt!40514)))))

(assert (=> d!23023 (= (addStillNotContains!32 lt!40516 lt!40517 lt!40515 lt!40514) lt!41292)))

(declare-fun b!87053 () Bool)

(assert (=> b!87053 (= e!56700 (not (= lt!40517 lt!40514)))))

(assert (= (and d!23023 res!44676) b!87053))

(assert (=> d!23023 m!89945))

(assert (=> d!23023 m!89945))

(assert (=> d!23023 m!89947))

(declare-fun m!92503 () Bool)

(assert (=> d!23023 m!92503))

(declare-fun m!92505 () Bool)

(assert (=> d!23023 m!92505))

(assert (=> b!85647 d!23023))

(assert (=> b!85647 d!22617))

(declare-fun d!23025 () Bool)

(declare-fun e!56701 () Bool)

(assert (=> d!23025 e!56701))

(declare-fun res!44677 () Bool)

(assert (=> d!23025 (=> (not res!44677) (not e!56701))))

(declare-fun lt!41295 () ListLongMap!1449)

(assert (=> d!23025 (= res!44677 (contains!752 lt!41295 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!41294 () List!1525)

(assert (=> d!23025 (= lt!41295 (ListLongMap!1450 lt!41294))))

(declare-fun lt!41293 () Unit!2510)

(declare-fun lt!41296 () Unit!2510)

(assert (=> d!23025 (= lt!41293 lt!41296)))

(assert (=> d!23025 (= (getValueByKey!138 lt!41294 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23025 (= lt!41296 (lemmaContainsTupThenGetReturnValue!58 lt!41294 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23025 (= lt!41294 (insertStrictlySorted!61 (toList!740 call!8141) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!23025 (= (+!108 call!8141 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!41295)))

(declare-fun b!87054 () Bool)

(declare-fun res!44678 () Bool)

(assert (=> b!87054 (=> (not res!44678) (not e!56701))))

(assert (=> b!87054 (= res!44678 (= (getValueByKey!138 (toList!740 lt!41295) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!87055 () Bool)

(assert (=> b!87055 (= e!56701 (contains!753 (toList!740 lt!41295) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!23025 res!44677) b!87054))

(assert (= (and b!87054 res!44678) b!87055))

(declare-fun m!92507 () Bool)

(assert (=> d!23025 m!92507))

(declare-fun m!92509 () Bool)

(assert (=> d!23025 m!92509))

(declare-fun m!92511 () Bool)

(assert (=> d!23025 m!92511))

(declare-fun m!92513 () Bool)

(assert (=> d!23025 m!92513))

(declare-fun m!92515 () Bool)

(assert (=> b!87054 m!92515))

(declare-fun m!92517 () Bool)

(assert (=> b!87055 m!92517))

(assert (=> b!85647 d!23025))

(declare-fun d!23027 () Bool)

(declare-fun e!56703 () Bool)

(assert (=> d!23027 e!56703))

(declare-fun res!44679 () Bool)

(assert (=> d!23027 (=> res!44679 e!56703)))

(declare-fun lt!41297 () Bool)

(assert (=> d!23027 (= res!44679 (not lt!41297))))

(declare-fun lt!41300 () Bool)

(assert (=> d!23027 (= lt!41297 lt!41300)))

(declare-fun lt!41298 () Unit!2510)

(declare-fun e!56702 () Unit!2510)

(assert (=> d!23027 (= lt!41298 e!56702)))

(declare-fun c!14311 () Bool)

(assert (=> d!23027 (= c!14311 lt!41300)))

(assert (=> d!23027 (= lt!41300 (containsKey!142 (toList!740 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515))) lt!40514))))

(assert (=> d!23027 (= (contains!752 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515)) lt!40514) lt!41297)))

(declare-fun b!87056 () Bool)

(declare-fun lt!41299 () Unit!2510)

(assert (=> b!87056 (= e!56702 lt!41299)))

(assert (=> b!87056 (= lt!41299 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515))) lt!40514))))

(assert (=> b!87056 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515))) lt!40514))))

(declare-fun b!87057 () Bool)

(declare-fun Unit!2582 () Unit!2510)

(assert (=> b!87057 (= e!56702 Unit!2582)))

(declare-fun b!87058 () Bool)

(assert (=> b!87058 (= e!56703 (isDefined!92 (getValueByKey!138 (toList!740 (+!108 lt!40516 (tuple2!2207 lt!40517 lt!40515))) lt!40514)))))

(assert (= (and d!23027 c!14311) b!87056))

(assert (= (and d!23027 (not c!14311)) b!87057))

(assert (= (and d!23027 (not res!44679)) b!87058))

(declare-fun m!92519 () Bool)

(assert (=> d!23027 m!92519))

(declare-fun m!92521 () Bool)

(assert (=> b!87056 m!92521))

(declare-fun m!92523 () Bool)

(assert (=> b!87056 m!92523))

(assert (=> b!87056 m!92523))

(declare-fun m!92525 () Bool)

(assert (=> b!87056 m!92525))

(assert (=> b!87058 m!92523))

(assert (=> b!87058 m!92523))

(assert (=> b!87058 m!92525))

(assert (=> b!85647 d!23027))

(declare-fun d!23029 () Bool)

(assert (=> d!23029 (= (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!85804 d!23029))

(assert (=> b!85615 d!22793))

(assert (=> b!85615 d!22179))

(declare-fun d!23031 () Bool)

(declare-fun e!56704 () Bool)

(assert (=> d!23031 e!56704))

(declare-fun res!44680 () Bool)

(assert (=> d!23031 (=> (not res!44680) (not e!56704))))

(declare-fun lt!41303 () ListLongMap!1449)

(assert (=> d!23031 (= res!44680 (contains!752 lt!41303 (_1!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun lt!41302 () List!1525)

(assert (=> d!23031 (= lt!41303 (ListLongMap!1450 lt!41302))))

(declare-fun lt!41301 () Unit!2510)

(declare-fun lt!41304 () Unit!2510)

(assert (=> d!23031 (= lt!41301 lt!41304)))

(assert (=> d!23031 (= (getValueByKey!138 lt!41302 (_1!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23031 (= lt!41304 (lemmaContainsTupThenGetReturnValue!58 lt!41302 (_1!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23031 (= lt!41302 (insertStrictlySorted!61 (toList!740 (ite c!13907 call!8146 (ite c!13906 call!8145 call!8143))) (_1!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (_2!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(assert (=> d!23031 (= (+!108 (ite c!13907 call!8146 (ite c!13906 call!8145 call!8143)) (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) lt!41303)))

(declare-fun b!87059 () Bool)

(declare-fun res!44681 () Bool)

(assert (=> b!87059 (=> (not res!44681) (not e!56704))))

(assert (=> b!87059 (= res!44681 (= (getValueByKey!138 (toList!740 lt!41303) (_1!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))) (Some!143 (_2!1114 (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))))

(declare-fun b!87060 () Bool)

(assert (=> b!87060 (= e!56704 (contains!753 (toList!740 lt!41303) (ite (or c!13907 c!13906) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (= (and d!23031 res!44680) b!87059))

(assert (= (and b!87059 res!44681) b!87060))

(declare-fun m!92527 () Bool)

(assert (=> d!23031 m!92527))

(declare-fun m!92529 () Bool)

(assert (=> d!23031 m!92529))

(declare-fun m!92531 () Bool)

(assert (=> d!23031 m!92531))

(declare-fun m!92533 () Bool)

(assert (=> d!23031 m!92533))

(declare-fun m!92535 () Bool)

(assert (=> b!87059 m!92535))

(declare-fun m!92537 () Bool)

(assert (=> b!87060 m!92537))

(assert (=> bm!8144 d!23031))

(declare-fun d!23033 () Bool)

(declare-fun e!56706 () Bool)

(assert (=> d!23033 e!56706))

(declare-fun res!44682 () Bool)

(assert (=> d!23033 (=> res!44682 e!56706)))

(declare-fun lt!41305 () Bool)

(assert (=> d!23033 (= res!44682 (not lt!41305))))

(declare-fun lt!41308 () Bool)

(assert (=> d!23033 (= lt!41305 lt!41308)))

(declare-fun lt!41306 () Unit!2510)

(declare-fun e!56705 () Unit!2510)

(assert (=> d!23033 (= lt!41306 e!56705)))

(declare-fun c!14312 () Bool)

(assert (=> d!23033 (= c!14312 lt!41308)))

(assert (=> d!23033 (= lt!41308 (containsKey!142 (toList!740 lt!40839) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> d!23033 (= (contains!752 lt!40839 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41305)))

(declare-fun b!87061 () Bool)

(declare-fun lt!41307 () Unit!2510)

(assert (=> b!87061 (= e!56705 lt!41307)))

(assert (=> b!87061 (= lt!41307 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40839) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (=> b!87061 (isDefined!92 (getValueByKey!138 (toList!740 lt!40839) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87062 () Bool)

(declare-fun Unit!2583 () Unit!2510)

(assert (=> b!87062 (= e!56705 Unit!2583)))

(declare-fun b!87063 () Bool)

(assert (=> b!87063 (= e!56706 (isDefined!92 (getValueByKey!138 (toList!740 lt!40839) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!23033 c!14312) b!87061))

(assert (= (and d!23033 (not c!14312)) b!87062))

(assert (= (and d!23033 (not res!44682)) b!87063))

(declare-fun m!92539 () Bool)

(assert (=> d!23033 m!92539))

(declare-fun m!92541 () Bool)

(assert (=> b!87061 m!92541))

(assert (=> b!87061 m!90679))

(assert (=> b!87061 m!90679))

(declare-fun m!92543 () Bool)

(assert (=> b!87061 m!92543))

(assert (=> b!87063 m!90679))

(assert (=> b!87063 m!90679))

(assert (=> b!87063 m!92543))

(assert (=> d!22325 d!23033))

(declare-fun d!23035 () Bool)

(declare-fun c!14313 () Bool)

(assert (=> d!23035 (= c!14313 (and ((_ is Cons!1521) lt!40838) (= (_1!1114 (h!2112 lt!40838)) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56707 () Option!144)

(assert (=> d!23035 (= (getValueByKey!138 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56707)))

(declare-fun b!87067 () Bool)

(declare-fun e!56708 () Option!144)

(assert (=> b!87067 (= e!56708 None!142)))

(declare-fun b!87064 () Bool)

(assert (=> b!87064 (= e!56707 (Some!143 (_2!1114 (h!2112 lt!40838))))))

(declare-fun b!87066 () Bool)

(assert (=> b!87066 (= e!56708 (getValueByKey!138 (t!5237 lt!40838) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87065 () Bool)

(assert (=> b!87065 (= e!56707 e!56708)))

(declare-fun c!14314 () Bool)

(assert (=> b!87065 (= c!14314 (and ((_ is Cons!1521) lt!40838) (not (= (_1!1114 (h!2112 lt!40838)) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!23035 c!14313) b!87064))

(assert (= (and d!23035 (not c!14313)) b!87065))

(assert (= (and b!87065 c!14314) b!87066))

(assert (= (and b!87065 (not c!14314)) b!87067))

(declare-fun m!92545 () Bool)

(assert (=> b!87066 m!92545))

(assert (=> d!22325 d!23035))

(declare-fun d!23037 () Bool)

(assert (=> d!23037 (= (getValueByKey!138 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) (Some!143 (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun lt!41309 () Unit!2510)

(assert (=> d!23037 (= lt!41309 (choose!507 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56709 () Bool)

(assert (=> d!23037 e!56709))

(declare-fun res!44683 () Bool)

(assert (=> d!23037 (=> (not res!44683) (not e!56709))))

(assert (=> d!23037 (= res!44683 (isStrictlySorted!293 lt!40838))))

(assert (=> d!23037 (= (lemmaContainsTupThenGetReturnValue!58 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41309)))

(declare-fun b!87068 () Bool)

(declare-fun res!44684 () Bool)

(assert (=> b!87068 (=> (not res!44684) (not e!56709))))

(assert (=> b!87068 (= res!44684 (containsKey!142 lt!40838 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87069 () Bool)

(assert (=> b!87069 (= e!56709 (contains!753 lt!40838 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (= (and d!23037 res!44683) b!87068))

(assert (= (and b!87068 res!44684) b!87069))

(assert (=> d!23037 m!90673))

(declare-fun m!92547 () Bool)

(assert (=> d!23037 m!92547))

(declare-fun m!92549 () Bool)

(assert (=> d!23037 m!92549))

(declare-fun m!92551 () Bool)

(assert (=> b!87068 m!92551))

(declare-fun m!92553 () Bool)

(assert (=> b!87069 m!92553))

(assert (=> d!22325 d!23037))

(declare-fun e!56712 () List!1525)

(declare-fun b!87070 () Bool)

(assert (=> b!87070 (= e!56712 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40411)) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun c!14317 () Bool)

(declare-fun c!14318 () Bool)

(declare-fun b!87071 () Bool)

(assert (=> b!87071 (= e!56712 (ite c!14317 (t!5237 (toList!740 lt!40411)) (ite c!14318 (Cons!1521 (h!2112 (toList!740 lt!40411)) (t!5237 (toList!740 lt!40411))) Nil!1522)))))

(declare-fun b!87072 () Bool)

(declare-fun e!56713 () List!1525)

(declare-fun call!8291 () List!1525)

(assert (=> b!87072 (= e!56713 call!8291)))

(declare-fun b!87073 () Bool)

(declare-fun e!56710 () List!1525)

(declare-fun call!8290 () List!1525)

(assert (=> b!87073 (= e!56710 call!8290)))

(declare-fun b!87074 () Bool)

(assert (=> b!87074 (= c!14318 (and ((_ is Cons!1521) (toList!740 lt!40411)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40411))) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56714 () List!1525)

(assert (=> b!87074 (= e!56710 e!56714)))

(declare-fun b!87075 () Bool)

(declare-fun res!44685 () Bool)

(declare-fun e!56711 () Bool)

(assert (=> b!87075 (=> (not res!44685) (not e!56711))))

(declare-fun lt!41310 () List!1525)

(assert (=> b!87075 (= res!44685 (containsKey!142 lt!41310 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87077 () Bool)

(declare-fun call!8292 () List!1525)

(assert (=> b!87077 (= e!56714 call!8292)))

(declare-fun b!87078 () Bool)

(assert (=> b!87078 (= e!56711 (contains!753 lt!41310 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8287 () Bool)

(declare-fun c!14316 () Bool)

(assert (=> bm!8287 (= call!8291 ($colon$colon!71 e!56712 (ite c!14316 (h!2112 (toList!740 lt!40411)) (tuple2!2207 (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14315 () Bool)

(assert (=> bm!8287 (= c!14315 c!14316)))

(declare-fun bm!8288 () Bool)

(assert (=> bm!8288 (= call!8292 call!8290)))

(declare-fun b!87076 () Bool)

(assert (=> b!87076 (= e!56714 call!8292)))

(declare-fun d!23039 () Bool)

(assert (=> d!23039 e!56711))

(declare-fun res!44686 () Bool)

(assert (=> d!23039 (=> (not res!44686) (not e!56711))))

(assert (=> d!23039 (= res!44686 (isStrictlySorted!293 lt!41310))))

(assert (=> d!23039 (= lt!41310 e!56713)))

(assert (=> d!23039 (= c!14316 (and ((_ is Cons!1521) (toList!740 lt!40411)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40411))) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!23039 (isStrictlySorted!293 (toList!740 lt!40411))))

(assert (=> d!23039 (= (insertStrictlySorted!61 (toList!740 lt!40411) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))) (_2!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41310)))

(declare-fun b!87079 () Bool)

(assert (=> b!87079 (= e!56713 e!56710)))

(assert (=> b!87079 (= c!14317 (and ((_ is Cons!1521) (toList!740 lt!40411)) (= (_1!1114 (h!2112 (toList!740 lt!40411))) (_1!1114 (tuple2!2207 lt!40408 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun bm!8289 () Bool)

(assert (=> bm!8289 (= call!8290 call!8291)))

(assert (= (and d!23039 c!14316) b!87072))

(assert (= (and d!23039 (not c!14316)) b!87079))

(assert (= (and b!87079 c!14317) b!87073))

(assert (= (and b!87079 (not c!14317)) b!87074))

(assert (= (and b!87074 c!14318) b!87077))

(assert (= (and b!87074 (not c!14318)) b!87076))

(assert (= (or b!87077 b!87076) bm!8288))

(assert (= (or b!87073 bm!8288) bm!8289))

(assert (= (or b!87072 bm!8289) bm!8287))

(assert (= (and bm!8287 c!14315) b!87070))

(assert (= (and bm!8287 (not c!14315)) b!87071))

(assert (= (and d!23039 res!44686) b!87075))

(assert (= (and b!87075 res!44685) b!87078))

(declare-fun m!92555 () Bool)

(assert (=> d!23039 m!92555))

(declare-fun m!92557 () Bool)

(assert (=> d!23039 m!92557))

(declare-fun m!92559 () Bool)

(assert (=> b!87078 m!92559))

(declare-fun m!92561 () Bool)

(assert (=> b!87075 m!92561))

(declare-fun m!92563 () Bool)

(assert (=> b!87070 m!92563))

(declare-fun m!92565 () Bool)

(assert (=> bm!8287 m!92565))

(assert (=> d!22325 d!23039))

(assert (=> b!85780 d!22787))

(assert (=> b!85780 d!22121))

(declare-fun d!23041 () Bool)

(declare-fun res!44687 () Bool)

(declare-fun e!56715 () Bool)

(assert (=> d!23041 (=> res!44687 e!56715)))

(assert (=> d!23041 (= res!44687 (and ((_ is Cons!1521) lt!40446) (= (_1!1114 (h!2112 lt!40446)) (_1!1114 lt!40140))))))

(assert (=> d!23041 (= (containsKey!142 lt!40446 (_1!1114 lt!40140)) e!56715)))

(declare-fun b!87080 () Bool)

(declare-fun e!56716 () Bool)

(assert (=> b!87080 (= e!56715 e!56716)))

(declare-fun res!44688 () Bool)

(assert (=> b!87080 (=> (not res!44688) (not e!56716))))

(assert (=> b!87080 (= res!44688 (and (or (not ((_ is Cons!1521) lt!40446)) (bvsle (_1!1114 (h!2112 lt!40446)) (_1!1114 lt!40140))) ((_ is Cons!1521) lt!40446) (bvslt (_1!1114 (h!2112 lt!40446)) (_1!1114 lt!40140))))))

(declare-fun b!87081 () Bool)

(assert (=> b!87081 (= e!56716 (containsKey!142 (t!5237 lt!40446) (_1!1114 lt!40140)))))

(assert (= (and d!23041 (not res!44687)) b!87080))

(assert (= (and b!87080 res!44688) b!87081))

(declare-fun m!92567 () Bool)

(assert (=> b!87081 m!92567))

(assert (=> b!85785 d!23041))

(declare-fun d!23043 () Bool)

(declare-fun res!44689 () Bool)

(declare-fun e!56717 () Bool)

(assert (=> d!23043 (=> res!44689 e!56717)))

(assert (=> d!23043 (= res!44689 (and ((_ is Cons!1521) lt!40475) (= (_1!1114 (h!2112 lt!40475)) (_1!1114 lt!40153))))))

(assert (=> d!23043 (= (containsKey!142 lt!40475 (_1!1114 lt!40153)) e!56717)))

(declare-fun b!87082 () Bool)

(declare-fun e!56718 () Bool)

(assert (=> b!87082 (= e!56717 e!56718)))

(declare-fun res!44690 () Bool)

(assert (=> b!87082 (=> (not res!44690) (not e!56718))))

(assert (=> b!87082 (= res!44690 (and (or (not ((_ is Cons!1521) lt!40475)) (bvsle (_1!1114 (h!2112 lt!40475)) (_1!1114 lt!40153))) ((_ is Cons!1521) lt!40475) (bvslt (_1!1114 (h!2112 lt!40475)) (_1!1114 lt!40153))))))

(declare-fun b!87083 () Bool)

(assert (=> b!87083 (= e!56718 (containsKey!142 (t!5237 lt!40475) (_1!1114 lt!40153)))))

(assert (= (and d!23043 (not res!44689)) b!87082))

(assert (= (and b!87082 res!44690) b!87083))

(declare-fun m!92569 () Bool)

(assert (=> b!87083 m!92569))

(assert (=> b!85620 d!23043))

(declare-fun d!23045 () Bool)

(declare-fun e!56719 () Bool)

(assert (=> d!23045 e!56719))

(declare-fun res!44691 () Bool)

(assert (=> d!23045 (=> (not res!44691) (not e!56719))))

(declare-fun lt!41313 () ListLongMap!1449)

(assert (=> d!23045 (= res!44691 (contains!752 lt!41313 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun lt!41312 () List!1525)

(assert (=> d!23045 (= lt!41313 (ListLongMap!1450 lt!41312))))

(declare-fun lt!41311 () Unit!2510)

(declare-fun lt!41314 () Unit!2510)

(assert (=> d!23045 (= lt!41311 lt!41314)))

(assert (=> d!23045 (= (getValueByKey!138 lt!41312 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!23045 (= lt!41314 (lemmaContainsTupThenGetReturnValue!58 lt!41312 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!23045 (= lt!41312 (insertStrictlySorted!61 (toList!740 call!8148) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(assert (=> d!23045 (= (+!108 call!8148 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))) lt!41313)))

(declare-fun b!87084 () Bool)

(declare-fun res!44692 () Bool)

(assert (=> b!87084 (=> (not res!44692) (not e!56719))))

(assert (=> b!87084 (= res!44692 (= (getValueByKey!138 (toList!740 lt!41313) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))))

(declare-fun b!87085 () Bool)

(assert (=> b!87085 (= e!56719 (contains!753 (toList!740 lt!41313) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(assert (= (and d!23045 res!44691) b!87084))

(assert (= (and b!87084 res!44692) b!87085))

(declare-fun m!92571 () Bool)

(assert (=> d!23045 m!92571))

(declare-fun m!92573 () Bool)

(assert (=> d!23045 m!92573))

(declare-fun m!92575 () Bool)

(assert (=> d!23045 m!92575))

(declare-fun m!92577 () Bool)

(assert (=> d!23045 m!92577))

(declare-fun m!92579 () Bool)

(assert (=> b!87084 m!92579))

(declare-fun m!92581 () Bool)

(assert (=> b!87085 m!92581))

(assert (=> b!85655 d!23045))

(declare-fun d!23047 () Bool)

(declare-fun c!14319 () Bool)

(assert (=> d!23047 (= c!14319 (and ((_ is Cons!1521) (toList!740 lt!40574)) (= (_1!1114 (h!2112 (toList!740 lt!40574))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!56720 () Option!144)

(assert (=> d!23047 (= (getValueByKey!138 (toList!740 lt!40574) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!56720)))

(declare-fun b!87089 () Bool)

(declare-fun e!56721 () Option!144)

(assert (=> b!87089 (= e!56721 None!142)))

(declare-fun b!87086 () Bool)

(assert (=> b!87086 (= e!56720 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40574)))))))

(declare-fun b!87088 () Bool)

(assert (=> b!87088 (= e!56721 (getValueByKey!138 (t!5237 (toList!740 lt!40574)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!87087 () Bool)

(assert (=> b!87087 (= e!56720 e!56721)))

(declare-fun c!14320 () Bool)

(assert (=> b!87087 (= c!14320 (and ((_ is Cons!1521) (toList!740 lt!40574)) (not (= (_1!1114 (h!2112 (toList!740 lt!40574))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1199 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!23047 c!14319) b!87086))

(assert (= (and d!23047 (not c!14319)) b!87087))

(assert (= (and b!87087 c!14320) b!87088))

(assert (= (and b!87087 (not c!14320)) b!87089))

(declare-fun m!92583 () Bool)

(assert (=> b!87088 m!92583))

(assert (=> b!85713 d!23047))

(declare-fun d!23049 () Bool)

(declare-fun c!14321 () Bool)

(assert (=> d!23049 (= c!14321 ((_ is Nil!1522) (toList!740 lt!40484)))))

(declare-fun e!56722 () (InoxSet tuple2!2206))

(assert (=> d!23049 (= (content!89 (toList!740 lt!40484)) e!56722)))

(declare-fun b!87090 () Bool)

(assert (=> b!87090 (= e!56722 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!87091 () Bool)

(assert (=> b!87091 (= e!56722 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40484)) true) (content!89 (t!5237 (toList!740 lt!40484)))))))

(assert (= (and d!23049 c!14321) b!87090))

(assert (= (and d!23049 (not c!14321)) b!87091))

(declare-fun m!92585 () Bool)

(assert (=> b!87091 m!92585))

(assert (=> b!87091 m!91341))

(assert (=> d!22337 d!23049))

(declare-fun d!23051 () Bool)

(declare-fun c!14322 () Bool)

(assert (=> d!23051 (= c!14322 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40476))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40476)))) (_1!1114 lt!40153))))))

(declare-fun e!56723 () Option!144)

(assert (=> d!23051 (= (getValueByKey!138 (t!5237 (toList!740 lt!40476)) (_1!1114 lt!40153)) e!56723)))

(declare-fun b!87095 () Bool)

(declare-fun e!56724 () Option!144)

(assert (=> b!87095 (= e!56724 None!142)))

(declare-fun b!87092 () Bool)

(assert (=> b!87092 (= e!56723 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40476))))))))

(declare-fun b!87094 () Bool)

(assert (=> b!87094 (= e!56724 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40476))) (_1!1114 lt!40153)))))

(declare-fun b!87093 () Bool)

(assert (=> b!87093 (= e!56723 e!56724)))

(declare-fun c!14323 () Bool)

(assert (=> b!87093 (= c!14323 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40476))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40476)))) (_1!1114 lt!40153)))))))

(assert (= (and d!23051 c!14322) b!87092))

(assert (= (and d!23051 (not c!14322)) b!87093))

(assert (= (and b!87093 c!14323) b!87094))

(assert (= (and b!87093 (not c!14323)) b!87095))

(declare-fun m!92587 () Bool)

(assert (=> b!87094 m!92587))

(assert (=> b!85753 d!23051))

(assert (=> d!22297 d!22105))

(declare-fun d!23053 () Bool)

(declare-fun lt!41315 () Bool)

(assert (=> d!23053 (= lt!41315 (select (content!89 lt!40442) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun e!56725 () Bool)

(assert (=> d!23053 (= lt!41315 e!56725)))

(declare-fun res!44693 () Bool)

(assert (=> d!23053 (=> (not res!44693) (not e!56725))))

(assert (=> d!23053 (= res!44693 ((_ is Cons!1521) lt!40442))))

(assert (=> d!23053 (= (contains!753 lt!40442 (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))) lt!41315)))

(declare-fun b!87096 () Bool)

(declare-fun e!56726 () Bool)

(assert (=> b!87096 (= e!56725 e!56726)))

(declare-fun res!44694 () Bool)

(assert (=> b!87096 (=> res!44694 e!56726)))

(assert (=> b!87096 (= res!44694 (= (h!2112 lt!40442) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(declare-fun b!87097 () Bool)

(assert (=> b!87097 (= e!56726 (contains!753 (t!5237 lt!40442) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))))))

(assert (= (and d!23053 res!44693) b!87096))

(assert (= (and b!87096 (not res!44694)) b!87097))

(declare-fun m!92589 () Bool)

(assert (=> d!23053 m!92589))

(declare-fun m!92591 () Bool)

(assert (=> d!23053 m!92591))

(declare-fun m!92593 () Bool)

(assert (=> b!87097 m!92593))

(assert (=> b!85763 d!23053))

(declare-fun d!23055 () Bool)

(assert (=> d!23055 (= (apply!82 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))) lt!40420) (apply!82 lt!40403 lt!40420))))

(assert (=> d!23055 true))

(declare-fun _$34!844 () Unit!2510)

(assert (=> d!23055 (= (choose!517 lt!40403 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))) lt!40420) _$34!844)))

(declare-fun bs!3691 () Bool)

(assert (= bs!3691 d!23055))

(assert (=> bs!3691 m!89675))

(assert (=> bs!3691 m!89675))

(assert (=> bs!3691 m!89677))

(assert (=> bs!3691 m!89689))

(assert (=> d!22321 d!23055))

(declare-fun d!23057 () Bool)

(declare-fun e!56728 () Bool)

(assert (=> d!23057 e!56728))

(declare-fun res!44695 () Bool)

(assert (=> d!23057 (=> res!44695 e!56728)))

(declare-fun lt!41316 () Bool)

(assert (=> d!23057 (= res!44695 (not lt!41316))))

(declare-fun lt!41319 () Bool)

(assert (=> d!23057 (= lt!41316 lt!41319)))

(declare-fun lt!41317 () Unit!2510)

(declare-fun e!56727 () Unit!2510)

(assert (=> d!23057 (= lt!41317 e!56727)))

(declare-fun c!14324 () Bool)

(assert (=> d!23057 (= c!14324 lt!41319)))

(assert (=> d!23057 (= lt!41319 (containsKey!142 (toList!740 lt!40403) lt!40420))))

(assert (=> d!23057 (= (contains!752 lt!40403 lt!40420) lt!41316)))

(declare-fun b!87098 () Bool)

(declare-fun lt!41318 () Unit!2510)

(assert (=> b!87098 (= e!56727 lt!41318)))

(assert (=> b!87098 (= lt!41318 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40403) lt!40420))))

(assert (=> b!87098 (isDefined!92 (getValueByKey!138 (toList!740 lt!40403) lt!40420))))

(declare-fun b!87099 () Bool)

(declare-fun Unit!2584 () Unit!2510)

(assert (=> b!87099 (= e!56727 Unit!2584)))

(declare-fun b!87100 () Bool)

(assert (=> b!87100 (= e!56728 (isDefined!92 (getValueByKey!138 (toList!740 lt!40403) lt!40420)))))

(assert (= (and d!23057 c!14324) b!87098))

(assert (= (and d!23057 (not c!14324)) b!87099))

(assert (= (and d!23057 (not res!44695)) b!87100))

(declare-fun m!92595 () Bool)

(assert (=> d!23057 m!92595))

(declare-fun m!92597 () Bool)

(assert (=> b!87098 m!92597))

(assert (=> b!87098 m!90723))

(assert (=> b!87098 m!90723))

(declare-fun m!92599 () Bool)

(assert (=> b!87098 m!92599))

(assert (=> b!87100 m!90723))

(assert (=> b!87100 m!90723))

(assert (=> b!87100 m!92599))

(assert (=> d!22321 d!23057))

(assert (=> d!22321 d!22317))

(assert (=> d!22321 d!22333))

(assert (=> d!22321 d!22335))

(declare-fun d!23059 () Bool)

(assert (=> d!23059 (= (get!1203 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!85712 d!23059))

(assert (=> b!86038 d!22125))

(declare-fun d!23061 () Bool)

(declare-fun res!44696 () Bool)

(declare-fun e!56729 () Bool)

(assert (=> d!23061 (=> res!44696 e!56729)))

(assert (=> d!23061 (= res!44696 (or ((_ is Nil!1522) lt!40510) ((_ is Nil!1522) (t!5237 lt!40510))))))

(assert (=> d!23061 (= (isStrictlySorted!293 lt!40510) e!56729)))

(declare-fun b!87101 () Bool)

(declare-fun e!56730 () Bool)

(assert (=> b!87101 (= e!56729 e!56730)))

(declare-fun res!44697 () Bool)

(assert (=> b!87101 (=> (not res!44697) (not e!56730))))

(assert (=> b!87101 (= res!44697 (bvslt (_1!1114 (h!2112 lt!40510)) (_1!1114 (h!2112 (t!5237 lt!40510)))))))

(declare-fun b!87102 () Bool)

(assert (=> b!87102 (= e!56730 (isStrictlySorted!293 (t!5237 lt!40510)))))

(assert (= (and d!23061 (not res!44696)) b!87101))

(assert (= (and b!87101 res!44697) b!87102))

(declare-fun m!92601 () Bool)

(assert (=> b!87102 m!92601))

(assert (=> d!22133 d!23061))

(assert (=> d!22133 d!22415))

(declare-fun d!23063 () Bool)

(declare-fun e!56732 () Bool)

(assert (=> d!23063 e!56732))

(declare-fun res!44698 () Bool)

(assert (=> d!23063 (=> res!44698 e!56732)))

(declare-fun lt!41320 () Bool)

(assert (=> d!23063 (= res!44698 (not lt!41320))))

(declare-fun lt!41323 () Bool)

(assert (=> d!23063 (= lt!41320 lt!41323)))

(declare-fun lt!41321 () Unit!2510)

(declare-fun e!56731 () Unit!2510)

(assert (=> d!23063 (= lt!41321 e!56731)))

(declare-fun c!14325 () Bool)

(assert (=> d!23063 (= c!14325 lt!41323)))

(assert (=> d!23063 (= lt!41323 (containsKey!142 (toList!740 lt!40628) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> d!23063 (= (contains!752 lt!40628 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!41320)))

(declare-fun b!87103 () Bool)

(declare-fun lt!41322 () Unit!2510)

(assert (=> b!87103 (= e!56731 lt!41322)))

(assert (=> b!87103 (= lt!41322 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40628) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(assert (=> b!87103 (isDefined!92 (getValueByKey!138 (toList!740 lt!40628) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!87104 () Bool)

(declare-fun Unit!2585 () Unit!2510)

(assert (=> b!87104 (= e!56731 Unit!2585)))

(declare-fun b!87105 () Bool)

(assert (=> b!87105 (= e!56732 (isDefined!92 (getValueByKey!138 (toList!740 lt!40628) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!23063 c!14325) b!87103))

(assert (= (and d!23063 (not c!14325)) b!87104))

(assert (= (and d!23063 (not res!44698)) b!87105))

(declare-fun m!92603 () Bool)

(assert (=> d!23063 m!92603))

(declare-fun m!92605 () Bool)

(assert (=> b!87103 m!92605))

(assert (=> b!87103 m!90251))

(assert (=> b!87103 m!90251))

(declare-fun m!92607 () Bool)

(assert (=> b!87103 m!92607))

(assert (=> b!87105 m!90251))

(assert (=> b!87105 m!90251))

(assert (=> b!87105 m!92607))

(assert (=> d!22201 d!23063))

(declare-fun d!23065 () Bool)

(declare-fun c!14326 () Bool)

(assert (=> d!23065 (= c!14326 (and ((_ is Cons!1521) lt!40627) (= (_1!1114 (h!2112 lt!40627)) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun e!56733 () Option!144)

(assert (=> d!23065 (= (getValueByKey!138 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) e!56733)))

(declare-fun b!87109 () Bool)

(declare-fun e!56734 () Option!144)

(assert (=> b!87109 (= e!56734 None!142)))

(declare-fun b!87106 () Bool)

(assert (=> b!87106 (= e!56733 (Some!143 (_2!1114 (h!2112 lt!40627))))))

(declare-fun b!87108 () Bool)

(assert (=> b!87108 (= e!56734 (getValueByKey!138 (t!5237 lt!40627) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!87107 () Bool)

(assert (=> b!87107 (= e!56733 e!56734)))

(declare-fun c!14327 () Bool)

(assert (=> b!87107 (= c!14327 (and ((_ is Cons!1521) lt!40627) (not (= (_1!1114 (h!2112 lt!40627)) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(assert (= (and d!23065 c!14326) b!87106))

(assert (= (and d!23065 (not c!14326)) b!87107))

(assert (= (and b!87107 c!14327) b!87108))

(assert (= (and b!87107 (not c!14327)) b!87109))

(declare-fun m!92609 () Bool)

(assert (=> b!87108 m!92609))

(assert (=> d!22201 d!23065))

(declare-fun d!23067 () Bool)

(assert (=> d!23067 (= (getValueByKey!138 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (Some!143 (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun lt!41324 () Unit!2510)

(assert (=> d!23067 (= lt!41324 (choose!507 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56735 () Bool)

(assert (=> d!23067 e!56735))

(declare-fun res!44699 () Bool)

(assert (=> d!23067 (=> (not res!44699) (not e!56735))))

(assert (=> d!23067 (= res!44699 (isStrictlySorted!293 lt!40627))))

(assert (=> d!23067 (= (lemmaContainsTupThenGetReturnValue!58 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!41324)))

(declare-fun b!87110 () Bool)

(declare-fun res!44700 () Bool)

(assert (=> b!87110 (=> (not res!44700) (not e!56735))))

(assert (=> b!87110 (= res!44700 (containsKey!142 lt!40627 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!87111 () Bool)

(assert (=> b!87111 (= e!56735 (contains!753 lt!40627 (tuple2!2207 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!23067 res!44699) b!87110))

(assert (= (and b!87110 res!44700) b!87111))

(assert (=> d!23067 m!90245))

(declare-fun m!92611 () Bool)

(assert (=> d!23067 m!92611))

(declare-fun m!92613 () Bool)

(assert (=> d!23067 m!92613))

(declare-fun m!92615 () Bool)

(assert (=> b!87110 m!92615))

(declare-fun m!92617 () Bool)

(assert (=> b!87111 m!92617))

(assert (=> d!22201 d!23067))

(declare-fun b!87112 () Bool)

(declare-fun e!56738 () List!1525)

(assert (=> b!87112 (= e!56738 (insertStrictlySorted!61 (t!5237 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun c!14331 () Bool)

(declare-fun b!87113 () Bool)

(declare-fun c!14330 () Bool)

(assert (=> b!87113 (= e!56738 (ite c!14330 (t!5237 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (ite c!14331 (Cons!1521 (h!2112 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (t!5237 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))))) Nil!1522)))))

(declare-fun b!87114 () Bool)

(declare-fun e!56739 () List!1525)

(declare-fun call!8294 () List!1525)

(assert (=> b!87114 (= e!56739 call!8294)))

(declare-fun b!87115 () Bool)

(declare-fun e!56736 () List!1525)

(declare-fun call!8293 () List!1525)

(assert (=> b!87115 (= e!56736 call!8293)))

(declare-fun b!87116 () Bool)

(assert (=> b!87116 (= c!14331 (and ((_ is Cons!1521) (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (bvsgt (_1!1114 (h!2112 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun e!56740 () List!1525)

(assert (=> b!87116 (= e!56736 e!56740)))

(declare-fun b!87117 () Bool)

(declare-fun res!44701 () Bool)

(declare-fun e!56737 () Bool)

(assert (=> b!87117 (=> (not res!44701) (not e!56737))))

(declare-fun lt!41325 () List!1525)

(assert (=> b!87117 (= res!44701 (containsKey!142 lt!41325 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!87119 () Bool)

(declare-fun call!8295 () List!1525)

(assert (=> b!87119 (= e!56740 call!8295)))

(declare-fun b!87120 () Bool)

(assert (=> b!87120 (= e!56737 (contains!753 lt!41325 (tuple2!2207 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun c!14329 () Bool)

(declare-fun bm!8290 () Bool)

(assert (=> bm!8290 (= call!8294 ($colon$colon!71 e!56738 (ite c!14329 (h!2112 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (tuple2!2207 (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(declare-fun c!14328 () Bool)

(assert (=> bm!8290 (= c!14328 c!14329)))

(declare-fun bm!8291 () Bool)

(assert (=> bm!8291 (= call!8295 call!8293)))

(declare-fun b!87118 () Bool)

(assert (=> b!87118 (= e!56740 call!8295)))

(declare-fun d!23069 () Bool)

(assert (=> d!23069 e!56737))

(declare-fun res!44702 () Bool)

(assert (=> d!23069 (=> (not res!44702) (not e!56737))))

(assert (=> d!23069 (= res!44702 (isStrictlySorted!293 lt!41325))))

(assert (=> d!23069 (= lt!41325 e!56739)))

(assert (=> d!23069 (= c!14329 (and ((_ is Cons!1521) (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (bvslt (_1!1114 (h!2112 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (=> d!23069 (isStrictlySorted!293 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))))))

(assert (=> d!23069 (= (insertStrictlySorted!61 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) (_2!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!41325)))

(declare-fun b!87121 () Bool)

(assert (=> b!87121 (= e!56739 e!56736)))

(assert (=> b!87121 (= c!14330 (and ((_ is Cons!1521) (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117)))) (= (_1!1114 (h!2112 (toList!740 (ite c!13848 call!8120 (ite c!13847 call!8119 call!8117))))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun bm!8292 () Bool)

(assert (=> bm!8292 (= call!8293 call!8294)))

(assert (= (and d!23069 c!14329) b!87114))

(assert (= (and d!23069 (not c!14329)) b!87121))

(assert (= (and b!87121 c!14330) b!87115))

(assert (= (and b!87121 (not c!14330)) b!87116))

(assert (= (and b!87116 c!14331) b!87119))

(assert (= (and b!87116 (not c!14331)) b!87118))

(assert (= (or b!87119 b!87118) bm!8291))

(assert (= (or b!87115 bm!8291) bm!8292))

(assert (= (or b!87114 bm!8292) bm!8290))

(assert (= (and bm!8290 c!14328) b!87112))

(assert (= (and bm!8290 (not c!14328)) b!87113))

(assert (= (and d!23069 res!44702) b!87117))

(assert (= (and b!87117 res!44701) b!87120))

(declare-fun m!92619 () Bool)

(assert (=> d!23069 m!92619))

(declare-fun m!92621 () Bool)

(assert (=> d!23069 m!92621))

(declare-fun m!92623 () Bool)

(assert (=> b!87120 m!92623))

(declare-fun m!92625 () Bool)

(assert (=> b!87117 m!92625))

(declare-fun m!92627 () Bool)

(assert (=> b!87112 m!92627))

(declare-fun m!92629 () Bool)

(assert (=> bm!8290 m!92629))

(assert (=> d!22201 d!23069))

(declare-fun d!23071 () Bool)

(declare-fun c!14332 () Bool)

(assert (=> d!23071 (= c!14332 ((_ is Nil!1522) (toList!740 lt!40435)))))

(declare-fun e!56741 () (InoxSet tuple2!2206))

(assert (=> d!23071 (= (content!89 (toList!740 lt!40435)) e!56741)))

(declare-fun b!87122 () Bool)

(assert (=> b!87122 (= e!56741 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!87123 () Bool)

(assert (=> b!87123 (= e!56741 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40435)) true) (content!89 (t!5237 (toList!740 lt!40435)))))))

(assert (= (and d!23071 c!14332) b!87122))

(assert (= (and d!23071 (not c!14332)) b!87123))

(declare-fun m!92631 () Bool)

(assert (=> b!87123 m!92631))

(declare-fun m!92633 () Bool)

(assert (=> b!87123 m!92633))

(assert (=> d!22135 d!23071))

(declare-fun d!23073 () Bool)

(assert (=> d!23073 (= (apply!82 lt!40533 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40533) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3692 () Bool)

(assert (= bs!3692 d!23073))

(declare-fun m!92635 () Bool)

(assert (=> bs!3692 m!92635))

(assert (=> bs!3692 m!92635))

(declare-fun m!92637 () Bool)

(assert (=> bs!3692 m!92637))

(assert (=> b!85664 d!23073))

(declare-fun d!23075 () Bool)

(declare-fun res!44703 () Bool)

(declare-fun e!56742 () Bool)

(assert (=> d!23075 (=> res!44703 e!56742)))

(assert (=> d!23075 (= res!44703 (or ((_ is Nil!1522) lt!40625) ((_ is Nil!1522) (t!5237 lt!40625))))))

(assert (=> d!23075 (= (isStrictlySorted!293 lt!40625) e!56742)))

(declare-fun b!87124 () Bool)

(declare-fun e!56743 () Bool)

(assert (=> b!87124 (= e!56742 e!56743)))

(declare-fun res!44704 () Bool)

(assert (=> b!87124 (=> (not res!44704) (not e!56743))))

(assert (=> b!87124 (= res!44704 (bvslt (_1!1114 (h!2112 lt!40625)) (_1!1114 (h!2112 (t!5237 lt!40625)))))))

(declare-fun b!87125 () Bool)

(assert (=> b!87125 (= e!56743 (isStrictlySorted!293 (t!5237 lt!40625)))))

(assert (= (and d!23075 (not res!44703)) b!87124))

(assert (= (and b!87124 res!44704) b!87125))

(declare-fun m!92639 () Bool)

(assert (=> b!87125 m!92639))

(assert (=> d!22199 d!23075))

(declare-fun d!23077 () Bool)

(declare-fun res!44705 () Bool)

(declare-fun e!56744 () Bool)

(assert (=> d!23077 (=> res!44705 e!56744)))

(assert (=> d!23077 (= res!44705 (or ((_ is Nil!1522) (toList!740 lt!40150)) ((_ is Nil!1522) (t!5237 (toList!740 lt!40150)))))))

(assert (=> d!23077 (= (isStrictlySorted!293 (toList!740 lt!40150)) e!56744)))

(declare-fun b!87126 () Bool)

(declare-fun e!56745 () Bool)

(assert (=> b!87126 (= e!56744 e!56745)))

(declare-fun res!44706 () Bool)

(assert (=> b!87126 (=> (not res!44706) (not e!56745))))

(assert (=> b!87126 (= res!44706 (bvslt (_1!1114 (h!2112 (toList!740 lt!40150))) (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150))))))))

(declare-fun b!87127 () Bool)

(assert (=> b!87127 (= e!56745 (isStrictlySorted!293 (t!5237 (toList!740 lt!40150))))))

(assert (= (and d!23077 (not res!44705)) b!87126))

(assert (= (and b!87126 res!44706) b!87127))

(assert (=> b!87127 m!92349))

(assert (=> d!22199 d!23077))

(declare-fun d!23079 () Bool)

(assert (=> d!23079 (isDefined!92 (getValueByKey!138 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!41326 () Unit!2510)

(assert (=> d!23079 (= lt!41326 (choose!514 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!56746 () Bool)

(assert (=> d!23079 e!56746))

(declare-fun res!44707 () Bool)

(assert (=> d!23079 (=> (not res!44707) (not e!56746))))

(assert (=> d!23079 (= res!44707 (isStrictlySorted!293 (toList!740 lt!40415)))))

(assert (=> d!23079 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!41326)))

(declare-fun b!87128 () Bool)

(assert (=> b!87128 (= e!56746 (containsKey!142 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!23079 res!44707) b!87128))

(assert (=> d!23079 m!89659))

(assert (=> d!23079 m!90079))

(assert (=> d!23079 m!90079))

(assert (=> d!23079 m!90081))

(assert (=> d!23079 m!89659))

(declare-fun m!92641 () Bool)

(assert (=> d!23079 m!92641))

(assert (=> d!23079 m!91321))

(assert (=> b!87128 m!89659))

(assert (=> b!87128 m!90075))

(assert (=> b!85704 d!23079))

(assert (=> b!85704 d!22393))

(assert (=> b!85704 d!22395))

(assert (=> d!22231 d!22229))

(declare-fun d!23081 () Bool)

(assert (=> d!23081 (= (getValueByKey!138 lt!40450 (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143)))))

(assert (=> d!23081 true))

(declare-fun _$22!421 () Unit!2510)

(assert (=> d!23081 (= (choose!507 lt!40450 (_1!1114 lt!40143) (_2!1114 lt!40143)) _$22!421)))

(declare-fun bs!3693 () Bool)

(assert (= bs!3693 d!23081))

(assert (=> bs!3693 m!89779))

(assert (=> d!22231 d!23081))

(declare-fun d!23083 () Bool)

(declare-fun res!44708 () Bool)

(declare-fun e!56747 () Bool)

(assert (=> d!23083 (=> res!44708 e!56747)))

(assert (=> d!23083 (= res!44708 (or ((_ is Nil!1522) lt!40450) ((_ is Nil!1522) (t!5237 lt!40450))))))

(assert (=> d!23083 (= (isStrictlySorted!293 lt!40450) e!56747)))

(declare-fun b!87129 () Bool)

(declare-fun e!56748 () Bool)

(assert (=> b!87129 (= e!56747 e!56748)))

(declare-fun res!44709 () Bool)

(assert (=> b!87129 (=> (not res!44709) (not e!56748))))

(assert (=> b!87129 (= res!44709 (bvslt (_1!1114 (h!2112 lt!40450)) (_1!1114 (h!2112 (t!5237 lt!40450)))))))

(declare-fun b!87130 () Bool)

(assert (=> b!87130 (= e!56748 (isStrictlySorted!293 (t!5237 lt!40450)))))

(assert (= (and d!23083 (not res!44708)) b!87129))

(assert (= (and b!87129 res!44709) b!87130))

(declare-fun m!92643 () Bool)

(assert (=> b!87130 m!92643))

(assert (=> d!22231 d!23083))

(declare-fun d!23085 () Bool)

(declare-fun e!56750 () Bool)

(assert (=> d!23085 e!56750))

(declare-fun res!44710 () Bool)

(assert (=> d!23085 (=> res!44710 e!56750)))

(declare-fun lt!41327 () Bool)

(assert (=> d!23085 (= res!44710 (not lt!41327))))

(declare-fun lt!41330 () Bool)

(assert (=> d!23085 (= lt!41327 lt!41330)))

(declare-fun lt!41328 () Unit!2510)

(declare-fun e!56749 () Unit!2510)

(assert (=> d!23085 (= lt!41328 e!56749)))

(declare-fun c!14333 () Bool)

(assert (=> d!23085 (= c!14333 lt!41330)))

(assert (=> d!23085 (= lt!41330 (containsKey!142 (toList!740 lt!40582) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(assert (=> d!23085 (= (contains!752 lt!40582 (_1!1114 (tuple2!2207 lt!40470 lt!40468))) lt!41327)))

(declare-fun b!87131 () Bool)

(declare-fun lt!41329 () Unit!2510)

(assert (=> b!87131 (= e!56749 lt!41329)))

(assert (=> b!87131 (= lt!41329 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40582) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(assert (=> b!87131 (isDefined!92 (getValueByKey!138 (toList!740 lt!40582) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun b!87132 () Bool)

(declare-fun Unit!2586 () Unit!2510)

(assert (=> b!87132 (= e!56749 Unit!2586)))

(declare-fun b!87133 () Bool)

(assert (=> b!87133 (= e!56750 (isDefined!92 (getValueByKey!138 (toList!740 lt!40582) (_1!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(assert (= (and d!23085 c!14333) b!87131))

(assert (= (and d!23085 (not c!14333)) b!87132))

(assert (= (and d!23085 (not res!44710)) b!87133))

(declare-fun m!92645 () Bool)

(assert (=> d!23085 m!92645))

(declare-fun m!92647 () Bool)

(assert (=> b!87131 m!92647))

(assert (=> b!87131 m!90125))

(assert (=> b!87131 m!90125))

(declare-fun m!92649 () Bool)

(assert (=> b!87131 m!92649))

(assert (=> b!87133 m!90125))

(assert (=> b!87133 m!90125))

(assert (=> b!87133 m!92649))

(assert (=> d!22161 d!23085))

(declare-fun d!23087 () Bool)

(declare-fun c!14334 () Bool)

(assert (=> d!23087 (= c!14334 (and ((_ is Cons!1521) lt!40581) (= (_1!1114 (h!2112 lt!40581)) (_1!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(declare-fun e!56751 () Option!144)

(assert (=> d!23087 (= (getValueByKey!138 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468))) e!56751)))

(declare-fun b!87137 () Bool)

(declare-fun e!56752 () Option!144)

(assert (=> b!87137 (= e!56752 None!142)))

(declare-fun b!87134 () Bool)

(assert (=> b!87134 (= e!56751 (Some!143 (_2!1114 (h!2112 lt!40581))))))

(declare-fun b!87136 () Bool)

(assert (=> b!87136 (= e!56752 (getValueByKey!138 (t!5237 lt!40581) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun b!87135 () Bool)

(assert (=> b!87135 (= e!56751 e!56752)))

(declare-fun c!14335 () Bool)

(assert (=> b!87135 (= c!14335 (and ((_ is Cons!1521) lt!40581) (not (= (_1!1114 (h!2112 lt!40581)) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))))

(assert (= (and d!23087 c!14334) b!87134))

(assert (= (and d!23087 (not c!14334)) b!87135))

(assert (= (and b!87135 c!14335) b!87136))

(assert (= (and b!87135 (not c!14335)) b!87137))

(declare-fun m!92651 () Bool)

(assert (=> b!87136 m!92651))

(assert (=> d!22161 d!23087))

(declare-fun d!23089 () Bool)

(assert (=> d!23089 (= (getValueByKey!138 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468))) (Some!143 (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun lt!41331 () Unit!2510)

(assert (=> d!23089 (= lt!41331 (choose!507 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun e!56753 () Bool)

(assert (=> d!23089 e!56753))

(declare-fun res!44711 () Bool)

(assert (=> d!23089 (=> (not res!44711) (not e!56753))))

(assert (=> d!23089 (= res!44711 (isStrictlySorted!293 lt!40581))))

(assert (=> d!23089 (= (lemmaContainsTupThenGetReturnValue!58 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))) lt!41331)))

(declare-fun b!87138 () Bool)

(declare-fun res!44712 () Bool)

(assert (=> b!87138 (=> (not res!44712) (not e!56753))))

(assert (=> b!87138 (= res!44712 (containsKey!142 lt!40581 (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun b!87139 () Bool)

(assert (=> b!87139 (= e!56753 (contains!753 lt!40581 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(assert (= (and d!23089 res!44711) b!87138))

(assert (= (and b!87138 res!44712) b!87139))

(assert (=> d!23089 m!90119))

(declare-fun m!92653 () Bool)

(assert (=> d!23089 m!92653))

(declare-fun m!92655 () Bool)

(assert (=> d!23089 m!92655))

(declare-fun m!92657 () Bool)

(assert (=> b!87138 m!92657))

(declare-fun m!92659 () Bool)

(assert (=> b!87139 m!92659))

(assert (=> d!22161 d!23089))

(declare-fun b!87140 () Bool)

(declare-fun e!56756 () List!1525)

(assert (=> b!87140 (= e!56756 (insertStrictlySorted!61 (t!5237 (toList!740 lt!40469)) (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun c!14339 () Bool)

(declare-fun b!87141 () Bool)

(declare-fun c!14338 () Bool)

(assert (=> b!87141 (= e!56756 (ite c!14338 (t!5237 (toList!740 lt!40469)) (ite c!14339 (Cons!1521 (h!2112 (toList!740 lt!40469)) (t!5237 (toList!740 lt!40469))) Nil!1522)))))

(declare-fun b!87142 () Bool)

(declare-fun e!56757 () List!1525)

(declare-fun call!8297 () List!1525)

(assert (=> b!87142 (= e!56757 call!8297)))

(declare-fun b!87143 () Bool)

(declare-fun e!56754 () List!1525)

(declare-fun call!8296 () List!1525)

(assert (=> b!87143 (= e!56754 call!8296)))

(declare-fun b!87144 () Bool)

(assert (=> b!87144 (= c!14339 (and ((_ is Cons!1521) (toList!740 lt!40469)) (bvsgt (_1!1114 (h!2112 (toList!740 lt!40469))) (_1!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(declare-fun e!56758 () List!1525)

(assert (=> b!87144 (= e!56754 e!56758)))

(declare-fun b!87145 () Bool)

(declare-fun res!44713 () Bool)

(declare-fun e!56755 () Bool)

(assert (=> b!87145 (=> (not res!44713) (not e!56755))))

(declare-fun lt!41332 () List!1525)

(assert (=> b!87145 (= res!44713 (containsKey!142 lt!41332 (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun b!87147 () Bool)

(declare-fun call!8298 () List!1525)

(assert (=> b!87147 (= e!56758 call!8298)))

(declare-fun b!87148 () Bool)

(assert (=> b!87148 (= e!56755 (contains!753 lt!41332 (tuple2!2207 (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(declare-fun c!14337 () Bool)

(declare-fun bm!8293 () Bool)

(assert (=> bm!8293 (= call!8297 ($colon$colon!71 e!56756 (ite c!14337 (h!2112 (toList!740 lt!40469)) (tuple2!2207 (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))))))))

(declare-fun c!14336 () Bool)

(assert (=> bm!8293 (= c!14336 c!14337)))

(declare-fun bm!8294 () Bool)

(assert (=> bm!8294 (= call!8298 call!8296)))

(declare-fun b!87146 () Bool)

(assert (=> b!87146 (= e!56758 call!8298)))

(declare-fun d!23091 () Bool)

(assert (=> d!23091 e!56755))

(declare-fun res!44714 () Bool)

(assert (=> d!23091 (=> (not res!44714) (not e!56755))))

(assert (=> d!23091 (= res!44714 (isStrictlySorted!293 lt!41332))))

(assert (=> d!23091 (= lt!41332 e!56757)))

(assert (=> d!23091 (= c!14337 (and ((_ is Cons!1521) (toList!740 lt!40469)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40469))) (_1!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(assert (=> d!23091 (isStrictlySorted!293 (toList!740 lt!40469))))

(assert (=> d!23091 (= (insertStrictlySorted!61 (toList!740 lt!40469) (_1!1114 (tuple2!2207 lt!40470 lt!40468)) (_2!1114 (tuple2!2207 lt!40470 lt!40468))) lt!41332)))

(declare-fun b!87149 () Bool)

(assert (=> b!87149 (= e!56757 e!56754)))

(assert (=> b!87149 (= c!14338 (and ((_ is Cons!1521) (toList!740 lt!40469)) (= (_1!1114 (h!2112 (toList!740 lt!40469))) (_1!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(declare-fun bm!8295 () Bool)

(assert (=> bm!8295 (= call!8296 call!8297)))

(assert (= (and d!23091 c!14337) b!87142))

(assert (= (and d!23091 (not c!14337)) b!87149))

(assert (= (and b!87149 c!14338) b!87143))

(assert (= (and b!87149 (not c!14338)) b!87144))

(assert (= (and b!87144 c!14339) b!87147))

(assert (= (and b!87144 (not c!14339)) b!87146))

(assert (= (or b!87147 b!87146) bm!8294))

(assert (= (or b!87143 bm!8294) bm!8295))

(assert (= (or b!87142 bm!8295) bm!8293))

(assert (= (and bm!8293 c!14336) b!87140))

(assert (= (and bm!8293 (not c!14336)) b!87141))

(assert (= (and d!23091 res!44714) b!87145))

(assert (= (and b!87145 res!44713) b!87148))

(declare-fun m!92661 () Bool)

(assert (=> d!23091 m!92661))

(declare-fun m!92663 () Bool)

(assert (=> d!23091 m!92663))

(declare-fun m!92665 () Bool)

(assert (=> b!87148 m!92665))

(declare-fun m!92667 () Bool)

(assert (=> b!87145 m!92667))

(declare-fun m!92669 () Bool)

(assert (=> b!87140 m!92669))

(declare-fun m!92671 () Bool)

(assert (=> bm!8293 m!92671))

(assert (=> d!22161 d!23091))

(declare-fun d!23093 () Bool)

(declare-fun lt!41333 () Bool)

(assert (=> d!23093 (= lt!41333 (select (content!89 (t!5237 (toList!740 lt!40435))) lt!40140))))

(declare-fun e!56759 () Bool)

(assert (=> d!23093 (= lt!41333 e!56759)))

(declare-fun res!44715 () Bool)

(assert (=> d!23093 (=> (not res!44715) (not e!56759))))

(assert (=> d!23093 (= res!44715 ((_ is Cons!1521) (t!5237 (toList!740 lt!40435))))))

(assert (=> d!23093 (= (contains!753 (t!5237 (toList!740 lt!40435)) lt!40140) lt!41333)))

(declare-fun b!87150 () Bool)

(declare-fun e!56760 () Bool)

(assert (=> b!87150 (= e!56759 e!56760)))

(declare-fun res!44716 () Bool)

(assert (=> b!87150 (=> res!44716 e!56760)))

(assert (=> b!87150 (= res!44716 (= (h!2112 (t!5237 (toList!740 lt!40435))) lt!40140))))

(declare-fun b!87151 () Bool)

(assert (=> b!87151 (= e!56760 (contains!753 (t!5237 (t!5237 (toList!740 lt!40435))) lt!40140))))

(assert (= (and d!23093 res!44715) b!87150))

(assert (= (and b!87150 (not res!44716)) b!87151))

(assert (=> d!23093 m!92633))

(declare-fun m!92673 () Bool)

(assert (=> d!23093 m!92673))

(declare-fun m!92675 () Bool)

(assert (=> b!87151 m!92675))

(assert (=> b!85637 d!23093))

(declare-fun d!23095 () Bool)

(assert (=> d!23095 (= (apply!82 lt!40555 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40555) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3694 () Bool)

(assert (= bs!3694 d!23095))

(declare-fun m!92677 () Bool)

(assert (=> bs!3694 m!92677))

(assert (=> bs!3694 m!92677))

(declare-fun m!92679 () Bool)

(assert (=> bs!3694 m!92679))

(assert (=> b!85673 d!23095))

(assert (=> b!85642 d!22945))

(declare-fun d!23097 () Bool)

(assert (=> d!23097 (= (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40420)) (v!2644 (getValueByKey!138 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40420)))))

(assert (=> d!22317 d!23097))

(declare-fun c!14340 () Bool)

(declare-fun d!23099 () Bool)

(assert (=> d!23099 (= c!14340 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40420)))))

(declare-fun e!56761 () Option!144)

(assert (=> d!23099 (= (getValueByKey!138 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40420) e!56761)))

(declare-fun b!87155 () Bool)

(declare-fun e!56762 () Option!144)

(assert (=> b!87155 (= e!56762 None!142)))

(declare-fun b!87152 () Bool)

(assert (=> b!87152 (= e!56761 (Some!143 (_2!1114 (h!2112 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(declare-fun b!87154 () Bool)

(assert (=> b!87154 (= e!56762 (getValueByKey!138 (t!5237 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!40420))))

(declare-fun b!87153 () Bool)

(assert (=> b!87153 (= e!56761 e!56762)))

(declare-fun c!14341 () Bool)

(assert (=> b!87153 (= c!14341 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (not (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40403 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40420))))))

(assert (= (and d!23099 c!14340) b!87152))

(assert (= (and d!23099 (not c!14340)) b!87153))

(assert (= (and b!87153 c!14341) b!87154))

(assert (= (and b!87153 (not c!14341)) b!87155))

(declare-fun m!92681 () Bool)

(assert (=> b!87154 m!92681))

(assert (=> d!22317 d!23099))

(declare-fun d!23101 () Bool)

(declare-fun res!44717 () Bool)

(declare-fun e!56763 () Bool)

(assert (=> d!23101 (=> res!44717 e!56763)))

(assert (=> d!23101 (= res!44717 (and ((_ is Cons!1521) (toList!740 lt!40471)) (= (_1!1114 (h!2112 (toList!740 lt!40471))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!23101 (= (containsKey!142 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000) e!56763)))

(declare-fun b!87156 () Bool)

(declare-fun e!56764 () Bool)

(assert (=> b!87156 (= e!56763 e!56764)))

(declare-fun res!44718 () Bool)

(assert (=> b!87156 (=> (not res!44718) (not e!56764))))

(assert (=> b!87156 (= res!44718 (and (or (not ((_ is Cons!1521) (toList!740 lt!40471))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40471))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1521) (toList!740 lt!40471)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40471))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!87157 () Bool)

(assert (=> b!87157 (= e!56764 (containsKey!142 (t!5237 (toList!740 lt!40471)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23101 (not res!44717)) b!87156))

(assert (= (and b!87156 res!44718) b!87157))

(declare-fun m!92683 () Bool)

(assert (=> b!87157 m!92683))

(assert (=> d!22349 d!23101))

(declare-fun d!23103 () Bool)

(assert (=> d!23103 (= (get!1204 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2644 (getValueByKey!138 (toList!740 lt!40471) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!22211 d!23103))

(assert (=> d!22211 d!22375))

(assert (=> d!22131 d!22129))

(declare-fun d!23105 () Bool)

(assert (=> d!23105 (= (getValueByKey!138 lt!40475 (_1!1114 lt!40153)) (Some!143 (_2!1114 lt!40153)))))

(assert (=> d!23105 true))

(declare-fun _$22!422 () Unit!2510)

(assert (=> d!23105 (= (choose!507 lt!40475 (_1!1114 lt!40153) (_2!1114 lt!40153)) _$22!422)))

(declare-fun bs!3695 () Bool)

(assert (= bs!3695 d!23105))

(assert (=> bs!3695 m!89811))

(assert (=> d!22131 d!23105))

(declare-fun d!23107 () Bool)

(declare-fun res!44719 () Bool)

(declare-fun e!56765 () Bool)

(assert (=> d!23107 (=> res!44719 e!56765)))

(assert (=> d!23107 (= res!44719 (or ((_ is Nil!1522) lt!40475) ((_ is Nil!1522) (t!5237 lt!40475))))))

(assert (=> d!23107 (= (isStrictlySorted!293 lt!40475) e!56765)))

(declare-fun b!87158 () Bool)

(declare-fun e!56766 () Bool)

(assert (=> b!87158 (= e!56765 e!56766)))

(declare-fun res!44720 () Bool)

(assert (=> b!87158 (=> (not res!44720) (not e!56766))))

(assert (=> b!87158 (= res!44720 (bvslt (_1!1114 (h!2112 lt!40475)) (_1!1114 (h!2112 (t!5237 lt!40475)))))))

(declare-fun b!87159 () Bool)

(assert (=> b!87159 (= e!56766 (isStrictlySorted!293 (t!5237 lt!40475)))))

(assert (= (and d!23107 (not res!44719)) b!87158))

(assert (= (and b!87158 res!44720) b!87159))

(declare-fun m!92685 () Bool)

(assert (=> b!87159 m!92685))

(assert (=> d!22131 d!23107))

(assert (=> d!22197 d!22195))

(declare-fun d!23109 () Bool)

(assert (=> d!23109 (= (getValueByKey!138 lt!40446 (_1!1114 lt!40140)) (Some!143 (_2!1114 lt!40140)))))

(assert (=> d!23109 true))

(declare-fun _$22!423 () Unit!2510)

(assert (=> d!23109 (= (choose!507 lt!40446 (_1!1114 lt!40140) (_2!1114 lt!40140)) _$22!423)))

(declare-fun bs!3696 () Bool)

(assert (= bs!3696 d!23109))

(assert (=> bs!3696 m!89767))

(assert (=> d!22197 d!23109))

(declare-fun d!23111 () Bool)

(declare-fun res!44721 () Bool)

(declare-fun e!56767 () Bool)

(assert (=> d!23111 (=> res!44721 e!56767)))

(assert (=> d!23111 (= res!44721 (or ((_ is Nil!1522) lt!40446) ((_ is Nil!1522) (t!5237 lt!40446))))))

(assert (=> d!23111 (= (isStrictlySorted!293 lt!40446) e!56767)))

(declare-fun b!87160 () Bool)

(declare-fun e!56768 () Bool)

(assert (=> b!87160 (= e!56767 e!56768)))

(declare-fun res!44722 () Bool)

(assert (=> b!87160 (=> (not res!44722) (not e!56768))))

(assert (=> b!87160 (= res!44722 (bvslt (_1!1114 (h!2112 lt!40446)) (_1!1114 (h!2112 (t!5237 lt!40446)))))))

(declare-fun b!87161 () Bool)

(assert (=> b!87161 (= e!56768 (isStrictlySorted!293 (t!5237 lt!40446)))))

(assert (= (and d!23111 (not res!44721)) b!87160))

(assert (= (and b!87160 res!44722) b!87161))

(declare-fun m!92687 () Bool)

(assert (=> b!87161 m!92687))

(assert (=> d!22197 d!23111))

(assert (=> b!85921 d!22385))

(declare-fun d!23113 () Bool)

(declare-fun lt!41334 () Bool)

(assert (=> d!23113 (= lt!41334 (select (content!89 lt!40479) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun e!56769 () Bool)

(assert (=> d!23113 (= lt!41334 e!56769)))

(declare-fun res!44723 () Bool)

(assert (=> d!23113 (=> (not res!44723) (not e!56769))))

(assert (=> d!23113 (= res!44723 ((_ is Cons!1521) lt!40479))))

(assert (=> d!23113 (= (contains!753 lt!40479 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))) lt!41334)))

(declare-fun b!87162 () Bool)

(declare-fun e!56770 () Bool)

(assert (=> b!87162 (= e!56769 e!56770)))

(declare-fun res!44724 () Bool)

(assert (=> b!87162 (=> res!44724 e!56770)))

(assert (=> b!87162 (= res!44724 (= (h!2112 lt!40479) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun b!87163 () Bool)

(assert (=> b!87163 (= e!56770 (contains!753 (t!5237 lt!40479) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(assert (= (and d!23113 res!44723) b!87162))

(assert (= (and b!87162 (not res!44724)) b!87163))

(declare-fun m!92689 () Bool)

(assert (=> d!23113 m!92689))

(declare-fun m!92691 () Bool)

(assert (=> d!23113 m!92691))

(declare-fun m!92693 () Bool)

(assert (=> b!87163 m!92693))

(assert (=> b!85572 d!23113))

(assert (=> bm!8138 d!22805))

(declare-fun d!23115 () Bool)

(assert (=> d!23115 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!23115 true))

(declare-fun _$8!76 () Unit!2510)

(assert (=> d!23115 (= (choose!511 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) lt!40355 (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) lt!40142 (defaultEntry!2337 newMap!16)) _$8!76)))

(declare-fun bs!3697 () Bool)

(assert (= bs!3697 d!23115))

(assert (=> bs!3697 m!89631))

(assert (=> bs!3697 m!89631))

(assert (=> bs!3697 m!90165))

(assert (=> bs!3697 m!90161))

(assert (=> d!22177 d!23115))

(assert (=> d!22177 d!22143))

(declare-fun bm!8296 () Bool)

(declare-fun call!8304 () ListLongMap!1449)

(declare-fun call!8305 () ListLongMap!1449)

(assert (=> bm!8296 (= call!8304 call!8305)))

(declare-fun bm!8297 () Bool)

(declare-fun call!8303 () ListLongMap!1449)

(assert (=> bm!8297 (= call!8303 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87164 () Bool)

(declare-fun e!56780 () Unit!2510)

(declare-fun Unit!2587 () Unit!2510)

(assert (=> b!87164 (= e!56780 Unit!2587)))

(declare-fun b!87165 () Bool)

(declare-fun e!56782 () Bool)

(assert (=> b!87165 (= e!56782 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87166 () Bool)

(declare-fun e!56772 () Bool)

(declare-fun lt!41347 () ListLongMap!1449)

(assert (=> b!87166 (= e!56772 (= (apply!82 lt!41347 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87167 () Bool)

(declare-fun c!14347 () Bool)

(assert (=> b!87167 (= c!14347 (and (not (= (bvand lt!40355 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!40355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56776 () ListLongMap!1449)

(declare-fun e!56781 () ListLongMap!1449)

(assert (=> b!87167 (= e!56776 e!56781)))

(declare-fun d!23117 () Bool)

(declare-fun e!56773 () Bool)

(assert (=> d!23117 e!56773))

(declare-fun res!44729 () Bool)

(assert (=> d!23117 (=> (not res!44729) (not e!56773))))

(assert (=> d!23117 (= res!44729 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!41356 () ListLongMap!1449)

(assert (=> d!23117 (= lt!41347 lt!41356)))

(declare-fun lt!41339 () Unit!2510)

(assert (=> d!23117 (= lt!41339 e!56780)))

(declare-fun c!14343 () Bool)

(assert (=> d!23117 (= c!14343 e!56782)))

(declare-fun res!44732 () Bool)

(assert (=> d!23117 (=> (not res!44732) (not e!56782))))

(assert (=> d!23117 (= res!44732 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!56775 () ListLongMap!1449)

(assert (=> d!23117 (= lt!41356 e!56775)))

(declare-fun c!14345 () Bool)

(assert (=> d!23117 (= c!14345 (and (not (= (bvand lt!40355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!40355 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23117 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23117 (= (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41347)))

(declare-fun b!87168 () Bool)

(declare-fun lt!41337 () Unit!2510)

(assert (=> b!87168 (= e!56780 lt!41337)))

(declare-fun lt!41343 () ListLongMap!1449)

(assert (=> b!87168 (= lt!41343 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41340 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41340 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41344 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41344 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41355 () Unit!2510)

(assert (=> b!87168 (= lt!41355 (addStillContains!58 lt!41343 lt!41340 (zeroValue!2229 newMap!16) lt!41344))))

(assert (=> b!87168 (contains!752 (+!108 lt!41343 (tuple2!2207 lt!41340 (zeroValue!2229 newMap!16))) lt!41344)))

(declare-fun lt!41354 () Unit!2510)

(assert (=> b!87168 (= lt!41354 lt!41355)))

(declare-fun lt!41336 () ListLongMap!1449)

(assert (=> b!87168 (= lt!41336 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41353 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41353 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41348 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41348 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41342 () Unit!2510)

(assert (=> b!87168 (= lt!41342 (addApplyDifferent!58 lt!41336 lt!41353 lt!40142 lt!41348))))

(assert (=> b!87168 (= (apply!82 (+!108 lt!41336 (tuple2!2207 lt!41353 lt!40142)) lt!41348) (apply!82 lt!41336 lt!41348))))

(declare-fun lt!41350 () Unit!2510)

(assert (=> b!87168 (= lt!41350 lt!41342)))

(declare-fun lt!41338 () ListLongMap!1449)

(assert (=> b!87168 (= lt!41338 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41349 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41349 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41351 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41351 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41341 () Unit!2510)

(assert (=> b!87168 (= lt!41341 (addApplyDifferent!58 lt!41338 lt!41349 (zeroValue!2229 newMap!16) lt!41351))))

(assert (=> b!87168 (= (apply!82 (+!108 lt!41338 (tuple2!2207 lt!41349 (zeroValue!2229 newMap!16))) lt!41351) (apply!82 lt!41338 lt!41351))))

(declare-fun lt!41345 () Unit!2510)

(assert (=> b!87168 (= lt!41345 lt!41341)))

(declare-fun lt!41335 () ListLongMap!1449)

(assert (=> b!87168 (= lt!41335 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) lt!40355 (zeroValue!2229 newMap!16) lt!40142 #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41346 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41346 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41352 () (_ BitVec 64))

(assert (=> b!87168 (= lt!41352 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87168 (= lt!41337 (addApplyDifferent!58 lt!41335 lt!41346 lt!40142 lt!41352))))

(assert (=> b!87168 (= (apply!82 (+!108 lt!41335 (tuple2!2207 lt!41346 lt!40142)) lt!41352) (apply!82 lt!41335 lt!41352))))

(declare-fun b!87169 () Bool)

(assert (=> b!87169 (= e!56775 (+!108 call!8305 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)))))

(declare-fun b!87170 () Bool)

(declare-fun e!56779 () Bool)

(declare-fun e!56778 () Bool)

(assert (=> b!87170 (= e!56779 e!56778)))

(declare-fun res!44727 () Bool)

(declare-fun call!8299 () Bool)

(assert (=> b!87170 (= res!44727 call!8299)))

(assert (=> b!87170 (=> (not res!44727) (not e!56778))))

(declare-fun bm!8298 () Bool)

(assert (=> bm!8298 (= call!8299 (contains!752 lt!41347 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87171 () Bool)

(declare-fun res!44725 () Bool)

(assert (=> b!87171 (=> (not res!44725) (not e!56773))))

(declare-fun e!56771 () Bool)

(assert (=> b!87171 (= res!44725 e!56771)))

(declare-fun c!14346 () Bool)

(assert (=> b!87171 (= c!14346 (not (= (bvand lt!40355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8299 () Bool)

(declare-fun call!8300 () ListLongMap!1449)

(declare-fun call!8302 () ListLongMap!1449)

(assert (=> bm!8299 (= call!8300 call!8302)))

(declare-fun b!87172 () Bool)

(assert (=> b!87172 (= e!56781 call!8300)))

(declare-fun b!87173 () Bool)

(declare-fun e!56777 () Bool)

(declare-fun e!56783 () Bool)

(assert (=> b!87173 (= e!56777 e!56783)))

(declare-fun res!44726 () Bool)

(assert (=> b!87173 (=> (not res!44726) (not e!56783))))

(assert (=> b!87173 (= res!44726 (contains!752 lt!41347 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87173 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!87174 () Bool)

(assert (=> b!87174 (= e!56779 (not call!8299))))

(declare-fun b!87175 () Bool)

(assert (=> b!87175 (= e!56776 call!8304)))

(declare-fun b!87176 () Bool)

(declare-fun call!8301 () Bool)

(assert (=> b!87176 (= e!56771 (not call!8301))))

(declare-fun b!87177 () Bool)

(assert (=> b!87177 (= e!56771 e!56772)))

(declare-fun res!44730 () Bool)

(assert (=> b!87177 (= res!44730 call!8301)))

(assert (=> b!87177 (=> (not res!44730) (not e!56772))))

(declare-fun b!87178 () Bool)

(assert (=> b!87178 (= e!56778 (= (apply!82 lt!41347 #b1000000000000000000000000000000000000000000000000000000000000000) lt!40142))))

(declare-fun b!87179 () Bool)

(declare-fun res!44733 () Bool)

(assert (=> b!87179 (=> (not res!44733) (not e!56773))))

(assert (=> b!87179 (= res!44733 e!56777)))

(declare-fun res!44728 () Bool)

(assert (=> b!87179 (=> res!44728 e!56777)))

(declare-fun e!56774 () Bool)

(assert (=> b!87179 (= res!44728 (not e!56774))))

(declare-fun res!44731 () Bool)

(assert (=> b!87179 (=> (not res!44731) (not e!56774))))

(assert (=> b!87179 (= res!44731 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8300 () Bool)

(assert (=> bm!8300 (= call!8301 (contains!752 lt!41347 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87180 () Bool)

(assert (=> b!87180 (= e!56773 e!56779)))

(declare-fun c!14342 () Bool)

(assert (=> b!87180 (= c!14342 (not (= (bvand lt!40355 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87181 () Bool)

(assert (=> b!87181 (= e!56774 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87182 () Bool)

(assert (=> b!87182 (= e!56783 (= (apply!82 lt!41347 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (_values!2320 newMap!16)) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87182 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (_values!2320 newMap!16))))))

(assert (=> b!87182 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun c!14344 () Bool)

(declare-fun bm!8301 () Bool)

(assert (=> bm!8301 (= call!8305 (+!108 (ite c!14345 call!8303 (ite c!14344 call!8302 call!8300)) (ite (or c!14345 c!14344) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(declare-fun bm!8302 () Bool)

(assert (=> bm!8302 (= call!8302 call!8303)))

(declare-fun b!87183 () Bool)

(assert (=> b!87183 (= e!56781 call!8304)))

(declare-fun b!87184 () Bool)

(assert (=> b!87184 (= e!56775 e!56776)))

(assert (=> b!87184 (= c!14344 (and (not (= (bvand lt!40355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!40355 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!23117 c!14345) b!87169))

(assert (= (and d!23117 (not c!14345)) b!87184))

(assert (= (and b!87184 c!14344) b!87175))

(assert (= (and b!87184 (not c!14344)) b!87167))

(assert (= (and b!87167 c!14347) b!87183))

(assert (= (and b!87167 (not c!14347)) b!87172))

(assert (= (or b!87183 b!87172) bm!8299))

(assert (= (or b!87175 bm!8299) bm!8302))

(assert (= (or b!87175 b!87183) bm!8296))

(assert (= (or b!87169 bm!8302) bm!8297))

(assert (= (or b!87169 bm!8296) bm!8301))

(assert (= (and d!23117 res!44732) b!87165))

(assert (= (and d!23117 c!14343) b!87168))

(assert (= (and d!23117 (not c!14343)) b!87164))

(assert (= (and d!23117 res!44729) b!87179))

(assert (= (and b!87179 res!44731) b!87181))

(assert (= (and b!87179 (not res!44728)) b!87173))

(assert (= (and b!87173 res!44726) b!87182))

(assert (= (and b!87179 res!44733) b!87171))

(assert (= (and b!87171 c!14346) b!87177))

(assert (= (and b!87171 (not c!14346)) b!87176))

(assert (= (and b!87177 res!44730) b!87166))

(assert (= (or b!87177 b!87176) bm!8300))

(assert (= (and b!87171 res!44725) b!87180))

(assert (= (and b!87180 c!14342) b!87170))

(assert (= (and b!87180 (not c!14342)) b!87174))

(assert (= (and b!87170 res!44727) b!87178))

(assert (= (or b!87170 b!87174) bm!8298))

(declare-fun b_lambda!3841 () Bool)

(assert (=> (not b_lambda!3841) (not b!87182)))

(assert (=> b!87182 t!5251))

(declare-fun b_and!5241 () Bool)

(assert (= b_and!5237 (and (=> t!5251 result!2923) b_and!5241)))

(assert (=> b!87182 t!5253))

(declare-fun b_and!5243 () Bool)

(assert (= b_and!5239 (and (=> t!5253 result!2925) b_and!5243)))

(assert (=> b!87168 m!89961))

(declare-fun m!92695 () Bool)

(assert (=> b!87168 m!92695))

(declare-fun m!92697 () Bool)

(assert (=> b!87168 m!92697))

(declare-fun m!92699 () Bool)

(assert (=> b!87168 m!92699))

(declare-fun m!92701 () Bool)

(assert (=> b!87168 m!92701))

(declare-fun m!92703 () Bool)

(assert (=> b!87168 m!92703))

(declare-fun m!92705 () Bool)

(assert (=> b!87168 m!92705))

(assert (=> b!87168 m!92699))

(declare-fun m!92707 () Bool)

(assert (=> b!87168 m!92707))

(declare-fun m!92709 () Bool)

(assert (=> b!87168 m!92709))

(declare-fun m!92711 () Bool)

(assert (=> b!87168 m!92711))

(assert (=> b!87168 m!92707))

(assert (=> b!87168 m!92711))

(declare-fun m!92713 () Bool)

(assert (=> b!87168 m!92713))

(declare-fun m!92715 () Bool)

(assert (=> b!87168 m!92715))

(declare-fun m!92717 () Bool)

(assert (=> b!87168 m!92717))

(declare-fun m!92719 () Bool)

(assert (=> b!87168 m!92719))

(declare-fun m!92721 () Bool)

(assert (=> b!87168 m!92721))

(declare-fun m!92723 () Bool)

(assert (=> b!87168 m!92723))

(declare-fun m!92725 () Bool)

(assert (=> b!87168 m!92725))

(assert (=> b!87168 m!92717))

(declare-fun m!92727 () Bool)

(assert (=> bm!8301 m!92727))

(assert (=> b!87173 m!89961))

(assert (=> b!87173 m!89961))

(declare-fun m!92729 () Bool)

(assert (=> b!87173 m!92729))

(declare-fun m!92731 () Bool)

(assert (=> bm!8300 m!92731))

(assert (=> d!23117 m!90001))

(declare-fun m!92733 () Bool)

(assert (=> b!87166 m!92733))

(declare-fun m!92735 () Bool)

(assert (=> bm!8298 m!92735))

(assert (=> b!87181 m!89961))

(assert (=> b!87181 m!89961))

(assert (=> b!87181 m!90007))

(assert (=> bm!8297 m!92705))

(assert (=> b!87165 m!89961))

(assert (=> b!87165 m!89961))

(assert (=> b!87165 m!90007))

(declare-fun m!92737 () Bool)

(assert (=> b!87169 m!92737))

(assert (=> b!87182 m!89961))

(assert (=> b!87182 m!90011))

(assert (=> b!87182 m!90065))

(assert (=> b!87182 m!89961))

(declare-fun m!92739 () Bool)

(assert (=> b!87182 m!92739))

(assert (=> b!87182 m!90065))

(assert (=> b!87182 m!90011))

(assert (=> b!87182 m!90069))

(declare-fun m!92741 () Bool)

(assert (=> b!87178 m!92741))

(assert (=> d!22177 d!23117))

(assert (=> d!22177 d!22431))

(declare-fun d!23119 () Bool)

(declare-fun e!56784 () Bool)

(assert (=> d!23119 e!56784))

(declare-fun res!44734 () Bool)

(assert (=> d!23119 (=> (not res!44734) (not e!56784))))

(declare-fun lt!41359 () ListLongMap!1449)

(assert (=> d!23119 (= res!44734 (contains!752 lt!41359 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(declare-fun lt!41358 () List!1525)

(assert (=> d!23119 (= lt!41359 (ListLongMap!1450 lt!41358))))

(declare-fun lt!41357 () Unit!2510)

(declare-fun lt!41360 () Unit!2510)

(assert (=> d!23119 (= lt!41357 lt!41360)))

(assert (=> d!23119 (= (getValueByKey!138 lt!41358 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(assert (=> d!23119 (= lt!41360 (lemmaContainsTupThenGetReturnValue!58 lt!41358 (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(assert (=> d!23119 (= lt!41358 (insertStrictlySorted!61 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))))))

(assert (=> d!23119 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)) lt!41359)))

(declare-fun b!87185 () Bool)

(declare-fun res!44735 () Bool)

(assert (=> b!87185 (=> (not res!44735) (not e!56784))))

(assert (=> b!87185 (= res!44735 (= (getValueByKey!138 (toList!740 lt!41359) (_1!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142))) (Some!143 (_2!1114 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)))))))

(declare-fun b!87186 () Bool)

(assert (=> b!87186 (= e!56784 (contains!753 (toList!740 lt!41359) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 lt!40142)))))

(assert (= (and d!23119 res!44734) b!87185))

(assert (= (and b!87185 res!44735) b!87186))

(declare-fun m!92743 () Bool)

(assert (=> d!23119 m!92743))

(declare-fun m!92745 () Bool)

(assert (=> d!23119 m!92745))

(declare-fun m!92747 () Bool)

(assert (=> d!23119 m!92747))

(declare-fun m!92749 () Bool)

(assert (=> d!23119 m!92749))

(declare-fun m!92751 () Bool)

(assert (=> b!87185 m!92751))

(declare-fun m!92753 () Bool)

(assert (=> b!87186 m!92753))

(assert (=> d!22177 d!23119))

(declare-fun d!23121 () Bool)

(assert (=> d!23121 (arrayContainsKey!0 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!41361 () Unit!2510)

(assert (=> d!23121 (= lt!41361 (choose!13 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))

(assert (=> d!23121 (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000)))

(assert (=> d!23121 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))) lt!41361)))

(declare-fun bs!3698 () Bool)

(assert (= bs!3698 d!23121))

(assert (=> bs!3698 m!89403))

(assert (=> bs!3698 m!90517))

(assert (=> bs!3698 m!89403))

(declare-fun m!92755 () Bool)

(assert (=> bs!3698 m!92755))

(assert (=> d!22263 d!23121))

(declare-fun d!23123 () Bool)

(declare-fun res!44736 () Bool)

(declare-fun e!56785 () Bool)

(assert (=> d!23123 (=> res!44736 e!56785)))

(assert (=> d!23123 (= res!44736 (= (select (arr!1906 lt!40765) #b00000000000000000000000000000000) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!23123 (= (arrayContainsKey!0 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) #b00000000000000000000000000000000) e!56785)))

(declare-fun b!87187 () Bool)

(declare-fun e!56786 () Bool)

(assert (=> b!87187 (= e!56785 e!56786)))

(declare-fun res!44737 () Bool)

(assert (=> b!87187 (=> (not res!44737) (not e!56786))))

(assert (=> b!87187 (= res!44737 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 lt!40765)))))

(declare-fun b!87188 () Bool)

(assert (=> b!87188 (= e!56786 (arrayContainsKey!0 lt!40765 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!23123 (not res!44736)) b!87187))

(assert (= (and b!87187 res!44737) b!87188))

(declare-fun m!92757 () Bool)

(assert (=> d!23123 m!92757))

(assert (=> b!87188 m!89403))

(declare-fun m!92759 () Bool)

(assert (=> b!87188 m!92759))

(assert (=> d!22263 d!23123))

(declare-fun bm!8303 () Bool)

(declare-fun call!8311 () ListLongMap!1449)

(declare-fun call!8312 () ListLongMap!1449)

(assert (=> bm!8303 (= call!8311 call!8312)))

(declare-fun call!8310 () ListLongMap!1449)

(declare-fun bm!8304 () Bool)

(assert (=> bm!8304 (= call!8310 (getCurrentListMapNoExtraKeys!72 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87189 () Bool)

(declare-fun e!56796 () Unit!2510)

(declare-fun Unit!2588 () Unit!2510)

(assert (=> b!87189 (= e!56796 Unit!2588)))

(declare-fun e!56798 () Bool)

(declare-fun b!87190 () Bool)

(assert (=> b!87190 (= e!56798 (validKeyInArray!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!87191 () Bool)

(declare-fun e!56788 () Bool)

(declare-fun lt!41374 () ListLongMap!1449)

(assert (=> b!87191 (= e!56788 (= (apply!82 lt!41374 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87192 () Bool)

(declare-fun c!14353 () Bool)

(assert (=> b!87192 (= c!14353 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56792 () ListLongMap!1449)

(declare-fun e!56797 () ListLongMap!1449)

(assert (=> b!87192 (= e!56792 e!56797)))

(declare-fun d!23125 () Bool)

(declare-fun e!56789 () Bool)

(assert (=> d!23125 e!56789))

(declare-fun res!44742 () Bool)

(assert (=> d!23125 (=> (not res!44742) (not e!56789))))

(assert (=> d!23125 (= res!44742 (or (bvsge #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))))

(declare-fun lt!41383 () ListLongMap!1449)

(assert (=> d!23125 (= lt!41374 lt!41383)))

(declare-fun lt!41366 () Unit!2510)

(assert (=> d!23125 (= lt!41366 e!56796)))

(declare-fun c!14349 () Bool)

(assert (=> d!23125 (= c!14349 e!56798)))

(declare-fun res!44745 () Bool)

(assert (=> d!23125 (=> (not res!44745) (not e!56798))))

(assert (=> d!23125 (= res!44745 (bvslt #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun e!56791 () ListLongMap!1449)

(assert (=> d!23125 (= lt!41383 e!56791)))

(declare-fun c!14351 () Bool)

(assert (=> d!23125 (= c!14351 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23125 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23125 (= (getCurrentListMap!426 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41374)))

(declare-fun b!87193 () Bool)

(declare-fun lt!41364 () Unit!2510)

(assert (=> b!87193 (= e!56796 lt!41364)))

(declare-fun lt!41370 () ListLongMap!1449)

(assert (=> b!87193 (= lt!41370 (getCurrentListMapNoExtraKeys!72 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41367 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41367 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41371 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41371 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41382 () Unit!2510)

(assert (=> b!87193 (= lt!41382 (addStillContains!58 lt!41370 lt!41367 (zeroValue!2229 newMap!16) lt!41371))))

(assert (=> b!87193 (contains!752 (+!108 lt!41370 (tuple2!2207 lt!41367 (zeroValue!2229 newMap!16))) lt!41371)))

(declare-fun lt!41381 () Unit!2510)

(assert (=> b!87193 (= lt!41381 lt!41382)))

(declare-fun lt!41363 () ListLongMap!1449)

(assert (=> b!87193 (= lt!41363 (getCurrentListMapNoExtraKeys!72 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41380 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41380 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41375 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41375 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41369 () Unit!2510)

(assert (=> b!87193 (= lt!41369 (addApplyDifferent!58 lt!41363 lt!41380 (minValue!2229 newMap!16) lt!41375))))

(assert (=> b!87193 (= (apply!82 (+!108 lt!41363 (tuple2!2207 lt!41380 (minValue!2229 newMap!16))) lt!41375) (apply!82 lt!41363 lt!41375))))

(declare-fun lt!41377 () Unit!2510)

(assert (=> b!87193 (= lt!41377 lt!41369)))

(declare-fun lt!41365 () ListLongMap!1449)

(assert (=> b!87193 (= lt!41365 (getCurrentListMapNoExtraKeys!72 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41376 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41376 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41378 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41378 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41368 () Unit!2510)

(assert (=> b!87193 (= lt!41368 (addApplyDifferent!58 lt!41365 lt!41376 (zeroValue!2229 newMap!16) lt!41378))))

(assert (=> b!87193 (= (apply!82 (+!108 lt!41365 (tuple2!2207 lt!41376 (zeroValue!2229 newMap!16))) lt!41378) (apply!82 lt!41365 lt!41378))))

(declare-fun lt!41372 () Unit!2510)

(assert (=> b!87193 (= lt!41372 lt!41368)))

(declare-fun lt!41362 () ListLongMap!1449)

(assert (=> b!87193 (= lt!41362 (getCurrentListMapNoExtraKeys!72 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41373 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41373 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41379 () (_ BitVec 64))

(assert (=> b!87193 (= lt!41379 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!87193 (= lt!41364 (addApplyDifferent!58 lt!41362 lt!41373 (minValue!2229 newMap!16) lt!41379))))

(assert (=> b!87193 (= (apply!82 (+!108 lt!41362 (tuple2!2207 lt!41373 (minValue!2229 newMap!16))) lt!41379) (apply!82 lt!41362 lt!41379))))

(declare-fun b!87194 () Bool)

(assert (=> b!87194 (= e!56791 (+!108 call!8312 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87195 () Bool)

(declare-fun e!56795 () Bool)

(declare-fun e!56794 () Bool)

(assert (=> b!87195 (= e!56795 e!56794)))

(declare-fun res!44740 () Bool)

(declare-fun call!8306 () Bool)

(assert (=> b!87195 (= res!44740 call!8306)))

(assert (=> b!87195 (=> (not res!44740) (not e!56794))))

(declare-fun bm!8305 () Bool)

(assert (=> bm!8305 (= call!8306 (contains!752 lt!41374 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87196 () Bool)

(declare-fun res!44738 () Bool)

(assert (=> b!87196 (=> (not res!44738) (not e!56789))))

(declare-fun e!56787 () Bool)

(assert (=> b!87196 (= res!44738 e!56787)))

(declare-fun c!14352 () Bool)

(assert (=> b!87196 (= c!14352 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8306 () Bool)

(declare-fun call!8307 () ListLongMap!1449)

(declare-fun call!8309 () ListLongMap!1449)

(assert (=> bm!8306 (= call!8307 call!8309)))

(declare-fun b!87197 () Bool)

(assert (=> b!87197 (= e!56797 call!8307)))

(declare-fun b!87198 () Bool)

(declare-fun e!56793 () Bool)

(declare-fun e!56799 () Bool)

(assert (=> b!87198 (= e!56793 e!56799)))

(declare-fun res!44739 () Bool)

(assert (=> b!87198 (=> (not res!44739) (not e!56799))))

(assert (=> b!87198 (= res!44739 (contains!752 lt!41374 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!87198 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun b!87199 () Bool)

(assert (=> b!87199 (= e!56795 (not call!8306))))

(declare-fun b!87200 () Bool)

(assert (=> b!87200 (= e!56792 call!8311)))

(declare-fun b!87201 () Bool)

(declare-fun call!8308 () Bool)

(assert (=> b!87201 (= e!56787 (not call!8308))))

(declare-fun b!87202 () Bool)

(assert (=> b!87202 (= e!56787 e!56788)))

(declare-fun res!44743 () Bool)

(assert (=> b!87202 (= res!44743 call!8308)))

(assert (=> b!87202 (=> (not res!44743) (not e!56788))))

(declare-fun b!87203 () Bool)

(assert (=> b!87203 (= e!56794 (= (apply!82 lt!41374 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!87204 () Bool)

(declare-fun res!44746 () Bool)

(assert (=> b!87204 (=> (not res!44746) (not e!56789))))

(assert (=> b!87204 (= res!44746 e!56793)))

(declare-fun res!44741 () Bool)

(assert (=> b!87204 (=> res!44741 e!56793)))

(declare-fun e!56790 () Bool)

(assert (=> b!87204 (= res!44741 (not e!56790))))

(declare-fun res!44744 () Bool)

(assert (=> b!87204 (=> (not res!44744) (not e!56790))))

(assert (=> b!87204 (= res!44744 (bvslt #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun bm!8307 () Bool)

(assert (=> bm!8307 (= call!8308 (contains!752 lt!41374 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87205 () Bool)

(assert (=> b!87205 (= e!56789 e!56795)))

(declare-fun c!14348 () Bool)

(assert (=> b!87205 (= c!14348 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87206 () Bool)

(assert (=> b!87206 (= e!56790 (validKeyInArray!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!87207 () Bool)

(assert (=> b!87207 (= e!56799 (= (apply!82 lt!41374 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87207 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))))))

(assert (=> b!87207 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun c!14350 () Bool)

(declare-fun bm!8308 () Bool)

(assert (=> bm!8308 (= call!8312 (+!108 (ite c!14351 call!8310 (ite c!14350 call!8309 call!8307)) (ite (or c!14351 c!14350) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8309 () Bool)

(assert (=> bm!8309 (= call!8309 call!8310)))

(declare-fun b!87208 () Bool)

(assert (=> b!87208 (= e!56797 call!8311)))

(declare-fun b!87209 () Bool)

(assert (=> b!87209 (= e!56791 e!56792)))

(assert (=> b!87209 (= c!14350 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!23125 c!14351) b!87194))

(assert (= (and d!23125 (not c!14351)) b!87209))

(assert (= (and b!87209 c!14350) b!87200))

(assert (= (and b!87209 (not c!14350)) b!87192))

(assert (= (and b!87192 c!14353) b!87208))

(assert (= (and b!87192 (not c!14353)) b!87197))

(assert (= (or b!87208 b!87197) bm!8306))

(assert (= (or b!87200 bm!8306) bm!8309))

(assert (= (or b!87200 b!87208) bm!8303))

(assert (= (or b!87194 bm!8309) bm!8304))

(assert (= (or b!87194 bm!8303) bm!8308))

(assert (= (and d!23125 res!44745) b!87190))

(assert (= (and d!23125 c!14349) b!87193))

(assert (= (and d!23125 (not c!14349)) b!87189))

(assert (= (and d!23125 res!44742) b!87204))

(assert (= (and b!87204 res!44744) b!87206))

(assert (= (and b!87204 (not res!44741)) b!87198))

(assert (= (and b!87198 res!44739) b!87207))

(assert (= (and b!87204 res!44746) b!87196))

(assert (= (and b!87196 c!14352) b!87202))

(assert (= (and b!87196 (not c!14352)) b!87201))

(assert (= (and b!87202 res!44743) b!87191))

(assert (= (or b!87202 b!87201) bm!8307))

(assert (= (and b!87196 res!44738) b!87205))

(assert (= (and b!87205 c!14348) b!87195))

(assert (= (and b!87205 (not c!14348)) b!87199))

(assert (= (and b!87195 res!44740) b!87203))

(assert (= (or b!87195 b!87199) bm!8305))

(declare-fun b_lambda!3843 () Bool)

(assert (=> (not b_lambda!3843) (not b!87207)))

(assert (=> b!87207 t!5251))

(declare-fun b_and!5245 () Bool)

(assert (= b_and!5241 (and (=> t!5251 result!2923) b_and!5245)))

(assert (=> b!87207 t!5253))

(declare-fun b_and!5247 () Bool)

(assert (= b_and!5243 (and (=> t!5253 result!2925) b_and!5247)))

(declare-fun m!92761 () Bool)

(assert (=> b!87193 m!92761))

(declare-fun m!92763 () Bool)

(assert (=> b!87193 m!92763))

(declare-fun m!92765 () Bool)

(assert (=> b!87193 m!92765))

(declare-fun m!92767 () Bool)

(assert (=> b!87193 m!92767))

(declare-fun m!92769 () Bool)

(assert (=> b!87193 m!92769))

(declare-fun m!92771 () Bool)

(assert (=> b!87193 m!92771))

(declare-fun m!92773 () Bool)

(assert (=> b!87193 m!92773))

(assert (=> b!87193 m!92767))

(declare-fun m!92775 () Bool)

(assert (=> b!87193 m!92775))

(declare-fun m!92777 () Bool)

(assert (=> b!87193 m!92777))

(declare-fun m!92779 () Bool)

(assert (=> b!87193 m!92779))

(assert (=> b!87193 m!92775))

(assert (=> b!87193 m!92779))

(declare-fun m!92781 () Bool)

(assert (=> b!87193 m!92781))

(declare-fun m!92783 () Bool)

(assert (=> b!87193 m!92783))

(declare-fun m!92785 () Bool)

(assert (=> b!87193 m!92785))

(declare-fun m!92787 () Bool)

(assert (=> b!87193 m!92787))

(declare-fun m!92789 () Bool)

(assert (=> b!87193 m!92789))

(declare-fun m!92791 () Bool)

(assert (=> b!87193 m!92791))

(declare-fun m!92793 () Bool)

(assert (=> b!87193 m!92793))

(assert (=> b!87193 m!92785))

(declare-fun m!92795 () Bool)

(assert (=> bm!8308 m!92795))

(assert (=> b!87198 m!92761))

(assert (=> b!87198 m!92761))

(declare-fun m!92797 () Bool)

(assert (=> b!87198 m!92797))

(declare-fun m!92799 () Bool)

(assert (=> bm!8307 m!92799))

(assert (=> d!23125 m!90001))

(declare-fun m!92801 () Bool)

(assert (=> b!87191 m!92801))

(declare-fun m!92803 () Bool)

(assert (=> bm!8305 m!92803))

(assert (=> b!87206 m!92761))

(assert (=> b!87206 m!92761))

(declare-fun m!92805 () Bool)

(assert (=> b!87206 m!92805))

(assert (=> bm!8304 m!92773))

(assert (=> b!87190 m!92761))

(assert (=> b!87190 m!92761))

(assert (=> b!87190 m!92805))

(declare-fun m!92807 () Bool)

(assert (=> b!87194 m!92807))

(assert (=> b!87207 m!92761))

(assert (=> b!87207 m!90011))

(declare-fun m!92809 () Bool)

(assert (=> b!87207 m!92809))

(assert (=> b!87207 m!92761))

(declare-fun m!92811 () Bool)

(assert (=> b!87207 m!92811))

(assert (=> b!87207 m!92809))

(assert (=> b!87207 m!90011))

(declare-fun m!92813 () Bool)

(assert (=> b!87207 m!92813))

(declare-fun m!92815 () Bool)

(assert (=> b!87203 m!92815))

(assert (=> d!22263 d!23125))

(declare-fun b!87210 () Bool)

(declare-fun e!56800 () (_ BitVec 32))

(declare-fun call!8313 () (_ BitVec 32))

(assert (=> b!87210 (= e!56800 call!8313)))

(declare-fun b!87211 () Bool)

(declare-fun e!56801 () (_ BitVec 32))

(assert (=> b!87211 (= e!56801 e!56800)))

(declare-fun c!14355 () Bool)

(assert (=> b!87211 (= c!14355 (validKeyInArray!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!87212 () Bool)

(assert (=> b!87212 (= e!56801 #b00000000000000000000000000000000)))

(declare-fun bm!8310 () Bool)

(assert (=> bm!8310 (= call!8313 (arrayCountValidKeys!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!87213 () Bool)

(assert (=> b!87213 (= e!56800 (bvadd #b00000000000000000000000000000001 call!8313))))

(declare-fun d!23127 () Bool)

(declare-fun lt!41384 () (_ BitVec 32))

(assert (=> d!23127 (and (bvsge lt!41384 #b00000000000000000000000000000000) (bvsle lt!41384 (bvsub (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!23127 (= lt!41384 e!56801)))

(declare-fun c!14354 () Bool)

(assert (=> d!23127 (= c!14354 (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!23127 (and (bvsle #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2151 (_keys!4008 newMap!16)) (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(assert (=> d!23127 (= (arrayCountValidKeys!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) lt!41384)))

(assert (= (and d!23127 c!14354) b!87212))

(assert (= (and d!23127 (not c!14354)) b!87211))

(assert (= (and b!87211 c!14355) b!87213))

(assert (= (and b!87211 (not c!14355)) b!87210))

(assert (= (or b!87213 b!87210) bm!8310))

(assert (=> b!87211 m!92761))

(assert (=> b!87211 m!92761))

(assert (=> b!87211 m!92805))

(declare-fun m!92817 () Bool)

(assert (=> bm!8310 m!92817))

(assert (=> d!22263 d!23127))

(declare-fun b!87215 () Bool)

(declare-fun e!56802 () Bool)

(declare-fun call!8314 () Bool)

(assert (=> b!87215 (= e!56802 call!8314)))

(declare-fun b!87216 () Bool)

(declare-fun e!56803 () Bool)

(assert (=> b!87216 (= e!56802 e!56803)))

(declare-fun lt!41387 () (_ BitVec 64))

(assert (=> b!87216 (= lt!41387 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!41385 () Unit!2510)

(assert (=> b!87216 (= lt!41385 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) lt!41387 #b00000000000000000000000000000000))))

(assert (=> b!87216 (arrayContainsKey!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) lt!41387 #b00000000000000000000000000000000)))

(declare-fun lt!41386 () Unit!2510)

(assert (=> b!87216 (= lt!41386 lt!41385)))

(declare-fun res!44748 () Bool)

(assert (=> b!87216 (= res!44748 (= (seekEntryOrOpen!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000) (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (mask!6364 newMap!16)) (Found!246 #b00000000000000000000000000000000)))))

(assert (=> b!87216 (=> (not res!44748) (not e!56803))))

(declare-fun d!23129 () Bool)

(declare-fun res!44747 () Bool)

(declare-fun e!56804 () Bool)

(assert (=> d!23129 (=> res!44747 e!56804)))

(assert (=> d!23129 (= res!44747 (bvsge #b00000000000000000000000000000000 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(assert (=> d!23129 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (mask!6364 newMap!16)) e!56804)))

(declare-fun b!87214 () Bool)

(assert (=> b!87214 (= e!56804 e!56802)))

(declare-fun c!14356 () Bool)

(assert (=> b!87214 (= c!14356 (validKeyInArray!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!8311 () Bool)

(assert (=> bm!8311 (= call!8314 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (mask!6364 newMap!16)))))

(declare-fun b!87217 () Bool)

(assert (=> b!87217 (= e!56803 call!8314)))

(assert (= (and d!23129 (not res!44747)) b!87214))

(assert (= (and b!87214 c!14356) b!87216))

(assert (= (and b!87214 (not c!14356)) b!87215))

(assert (= (and b!87216 res!44748) b!87217))

(assert (= (or b!87217 b!87215) bm!8311))

(assert (=> b!87216 m!92761))

(declare-fun m!92819 () Bool)

(assert (=> b!87216 m!92819))

(declare-fun m!92821 () Bool)

(assert (=> b!87216 m!92821))

(assert (=> b!87216 m!92761))

(declare-fun m!92823 () Bool)

(assert (=> b!87216 m!92823))

(assert (=> b!87214 m!92761))

(assert (=> b!87214 m!92761))

(assert (=> b!87214 m!92805))

(declare-fun m!92825 () Bool)

(assert (=> bm!8311 m!92825))

(assert (=> d!22263 d!23129))

(declare-fun b!87218 () Bool)

(declare-fun e!56805 () (_ BitVec 32))

(declare-fun call!8315 () (_ BitVec 32))

(assert (=> b!87218 (= e!56805 call!8315)))

(declare-fun b!87219 () Bool)

(declare-fun e!56806 () (_ BitVec 32))

(assert (=> b!87219 (= e!56806 e!56805)))

(declare-fun c!14358 () Bool)

(assert (=> b!87219 (= c!14358 (validKeyInArray!0 (select (arr!1906 lt!40763) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(declare-fun b!87220 () Bool)

(assert (=> b!87220 (= e!56806 #b00000000000000000000000000000000)))

(declare-fun bm!8312 () Bool)

(assert (=> bm!8312 (= call!8315 (arrayCountValidKeys!0 lt!40763 (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001) (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001)))))

(declare-fun b!87221 () Bool)

(assert (=> b!87221 (= e!56805 (bvadd #b00000000000000000000000000000001 call!8315))))

(declare-fun d!23131 () Bool)

(declare-fun lt!41388 () (_ BitVec 32))

(assert (=> d!23131 (and (bvsge lt!41388 #b00000000000000000000000000000000) (bvsle lt!41388 (bvsub (size!2151 lt!40763) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(assert (=> d!23131 (= lt!41388 e!56806)))

(declare-fun c!14357 () Bool)

(assert (=> d!23131 (= c!14357 (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001)))))

(assert (=> d!23131 (and (bvsle (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001)) (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001) (size!2151 lt!40763)))))

(assert (=> d!23131 (= (arrayCountValidKeys!0 lt!40763 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001)) lt!41388)))

(assert (= (and d!23131 c!14357) b!87220))

(assert (= (and d!23131 (not c!14357)) b!87219))

(assert (= (and b!87219 c!14358) b!87221))

(assert (= (and b!87219 (not c!14358)) b!87218))

(assert (= (or b!87221 b!87218) bm!8312))

(declare-fun m!92827 () Bool)

(assert (=> b!87219 m!92827))

(assert (=> b!87219 m!92827))

(declare-fun m!92829 () Bool)

(assert (=> b!87219 m!92829))

(declare-fun m!92831 () Bool)

(assert (=> bm!8312 m!92831))

(assert (=> d!22263 d!23131))

(assert (=> d!22263 d!22169))

(assert (=> d!22263 d!22253))

(declare-fun d!23133 () Bool)

(declare-fun e!56811 () Bool)

(assert (=> d!23133 e!56811))

(declare-fun res!44760 () Bool)

(assert (=> d!23133 (=> (not res!44760) (not e!56811))))

(assert (=> d!23133 (= res!44760 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 (_keys!4008 newMap!16)))))))

(declare-fun lt!41391 () Unit!2510)

(declare-fun choose!1 (array!4005 (_ BitVec 32) (_ BitVec 64)) Unit!2510)

(assert (=> d!23133 (= lt!41391 (choose!1 (_keys!4008 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!56812 () Bool)

(assert (=> d!23133 e!56812))

(declare-fun res!44759 () Bool)

(assert (=> d!23133 (=> (not res!44759) (not e!56812))))

(assert (=> d!23133 (= res!44759 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 (_keys!4008 newMap!16)))))))

(assert (=> d!23133 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4008 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!41391)))

(declare-fun b!87230 () Bool)

(declare-fun res!44757 () Bool)

(assert (=> b!87230 (=> (not res!44757) (not e!56812))))

(assert (=> b!87230 (= res!44757 (not (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))))

(declare-fun b!87233 () Bool)

(assert (=> b!87233 (= e!56811 (= (arrayCountValidKeys!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4008 newMap!16) #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!87231 () Bool)

(declare-fun res!44758 () Bool)

(assert (=> b!87231 (=> (not res!44758) (not e!56812))))

(assert (=> b!87231 (= res!44758 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun b!87232 () Bool)

(assert (=> b!87232 (= e!56812 (bvslt (size!2151 (_keys!4008 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!23133 res!44759) b!87230))

(assert (= (and b!87230 res!44757) b!87231))

(assert (= (and b!87231 res!44758) b!87232))

(assert (= (and d!23133 res!44760) b!87233))

(assert (=> d!23133 m!89403))

(declare-fun m!92833 () Bool)

(assert (=> d!23133 m!92833))

(declare-fun m!92835 () Bool)

(assert (=> b!87230 m!92835))

(assert (=> b!87230 m!92835))

(declare-fun m!92837 () Bool)

(assert (=> b!87230 m!92837))

(assert (=> b!87233 m!90501))

(assert (=> b!87233 m!90493))

(assert (=> b!87233 m!89715))

(assert (=> b!87231 m!89403))

(assert (=> b!87231 m!89857))

(assert (=> d!22263 d!23133))

(declare-fun d!23135 () Bool)

(declare-fun e!56814 () Bool)

(assert (=> d!23135 e!56814))

(declare-fun res!44761 () Bool)

(assert (=> d!23135 (=> res!44761 e!56814)))

(declare-fun lt!41392 () Bool)

(assert (=> d!23135 (= res!44761 (not lt!41392))))

(declare-fun lt!41395 () Bool)

(assert (=> d!23135 (= lt!41392 lt!41395)))

(declare-fun lt!41393 () Unit!2510)

(declare-fun e!56813 () Unit!2510)

(assert (=> d!23135 (= lt!41393 e!56813)))

(declare-fun c!14359 () Bool)

(assert (=> d!23135 (= c!14359 lt!41395)))

(assert (=> d!23135 (= lt!41395 (containsKey!142 (toList!740 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(assert (=> d!23135 (= (contains!752 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))) lt!41392)))

(declare-fun b!87234 () Bool)

(declare-fun lt!41394 () Unit!2510)

(assert (=> b!87234 (= e!56813 lt!41394)))

(assert (=> b!87234 (= lt!41394 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(assert (=> b!87234 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(declare-fun b!87235 () Bool)

(declare-fun Unit!2589 () Unit!2510)

(assert (=> b!87235 (= e!56813 Unit!2589)))

(declare-fun b!87236 () Bool)

(assert (=> b!87236 (= e!56814 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))))

(assert (= (and d!23135 c!14359) b!87234))

(assert (= (and d!23135 (not c!14359)) b!87235))

(assert (= (and d!23135 (not res!44761)) b!87236))

(assert (=> d!23135 m!90483))

(declare-fun m!92839 () Bool)

(assert (=> d!23135 m!92839))

(assert (=> b!87234 m!90483))

(declare-fun m!92841 () Bool)

(assert (=> b!87234 m!92841))

(assert (=> b!87234 m!90483))

(declare-fun m!92843 () Bool)

(assert (=> b!87234 m!92843))

(assert (=> b!87234 m!92843))

(declare-fun m!92845 () Bool)

(assert (=> b!87234 m!92845))

(assert (=> b!87236 m!90483))

(assert (=> b!87236 m!92843))

(assert (=> b!87236 m!92843))

(assert (=> b!87236 m!92845))

(assert (=> d!22263 d!23135))

(declare-fun d!23137 () Bool)

(declare-fun e!56815 () Bool)

(assert (=> d!23137 e!56815))

(declare-fun res!44762 () Bool)

(assert (=> d!23137 (=> (not res!44762) (not e!56815))))

(declare-fun lt!41398 () ListLongMap!1449)

(assert (=> d!23137 (= res!44762 (contains!752 lt!41398 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!41397 () List!1525)

(assert (=> d!23137 (= lt!41398 (ListLongMap!1450 lt!41397))))

(declare-fun lt!41396 () Unit!2510)

(declare-fun lt!41399 () Unit!2510)

(assert (=> d!23137 (= lt!41396 lt!41399)))

(assert (=> d!23137 (= (getValueByKey!138 lt!41397 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!23137 (= lt!41399 (lemmaContainsTupThenGetReturnValue!58 lt!41397 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!23137 (= lt!41397 (insertStrictlySorted!61 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!23137 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!41398)))

(declare-fun b!87237 () Bool)

(declare-fun res!44763 () Bool)

(assert (=> b!87237 (=> (not res!44763) (not e!56815))))

(assert (=> b!87237 (= res!44763 (= (getValueByKey!138 (toList!740 lt!41398) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun b!87238 () Bool)

(assert (=> b!87238 (= e!56815 (contains!753 (toList!740 lt!41398) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!23137 res!44762) b!87237))

(assert (= (and b!87237 res!44763) b!87238))

(declare-fun m!92847 () Bool)

(assert (=> d!23137 m!92847))

(declare-fun m!92849 () Bool)

(assert (=> d!23137 m!92849))

(declare-fun m!92851 () Bool)

(assert (=> d!23137 m!92851))

(declare-fun m!92853 () Bool)

(assert (=> d!23137 m!92853))

(declare-fun m!92855 () Bool)

(assert (=> b!87237 m!92855))

(declare-fun m!92857 () Bool)

(assert (=> b!87238 m!92857))

(assert (=> d!22263 d!23137))

(declare-fun d!23139 () Bool)

(declare-fun e!56818 () Bool)

(assert (=> d!23139 e!56818))

(declare-fun res!44766 () Bool)

(assert (=> d!23139 (=> (not res!44766) (not e!56818))))

(assert (=> d!23139 (= res!44766 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 (_keys!4008 newMap!16))) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2152 (_values!2320 newMap!16)))))))

(declare-fun lt!41402 () Unit!2510)

(declare-fun choose!519 (array!4005 array!4007 (_ BitVec 32) (_ BitVec 32) V!3025 V!3025 (_ BitVec 32) (_ BitVec 64) V!3025 Int) Unit!2510)

(assert (=> d!23139 (= lt!41402 (choose!519 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)))))

(assert (=> d!23139 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23139 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!19 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)) lt!41402)))

(declare-fun b!87241 () Bool)

(assert (=> b!87241 (= e!56818 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (getCurrentListMap!426 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))))))

(assert (= (and d!23139 res!44766) b!87241))

(assert (=> d!23139 m!89403))

(declare-fun m!92859 () Bool)

(assert (=> d!23139 m!92859))

(assert (=> d!23139 m!90001))

(assert (=> b!87241 m!89631))

(assert (=> b!87241 m!90485))

(assert (=> b!87241 m!90495))

(assert (=> b!87241 m!90503))

(assert (=> b!87241 m!90501))

(assert (=> b!87241 m!89631))

(assert (=> d!22263 d!23139))

(declare-fun b!87242 () Bool)

(declare-fun e!56821 () Bool)

(declare-fun e!56820 () Bool)

(assert (=> b!87242 (= e!56821 e!56820)))

(declare-fun c!14360 () Bool)

(assert (=> b!87242 (= c!14360 (validKeyInArray!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) lt!40780)))))

(declare-fun b!87243 () Bool)

(declare-fun call!8316 () Bool)

(assert (=> b!87243 (= e!56820 call!8316)))

(declare-fun bm!8313 () Bool)

(assert (=> bm!8313 (= call!8316 (arrayNoDuplicates!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (bvadd lt!40780 #b00000000000000000000000000000001) (ite c!14360 (Cons!1522 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) lt!40780) lt!40773) lt!40773)))))

(declare-fun d!23141 () Bool)

(declare-fun res!44767 () Bool)

(declare-fun e!56819 () Bool)

(assert (=> d!23141 (=> res!44767 e!56819)))

(assert (=> d!23141 (= res!44767 (bvsge lt!40780 (size!2151 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))))))))

(assert (=> d!23141 (= (arrayNoDuplicates!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) lt!40780 lt!40773) e!56819)))

(declare-fun b!87244 () Bool)

(assert (=> b!87244 (= e!56819 e!56821)))

(declare-fun res!44769 () Bool)

(assert (=> b!87244 (=> (not res!44769) (not e!56821))))

(declare-fun e!56822 () Bool)

(assert (=> b!87244 (= res!44769 (not e!56822))))

(declare-fun res!44768 () Bool)

(assert (=> b!87244 (=> (not res!44768) (not e!56822))))

(assert (=> b!87244 (= res!44768 (validKeyInArray!0 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) lt!40780)))))

(declare-fun b!87245 () Bool)

(assert (=> b!87245 (= e!56822 (contains!754 lt!40773 (select (arr!1906 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16)))) lt!40780)))))

(declare-fun b!87246 () Bool)

(assert (=> b!87246 (= e!56820 call!8316)))

(assert (= (and d!23141 (not res!44767)) b!87244))

(assert (= (and b!87244 res!44768) b!87245))

(assert (= (and b!87244 res!44769) b!87242))

(assert (= (and b!87242 c!14360) b!87243))

(assert (= (and b!87242 (not c!14360)) b!87246))

(assert (= (or b!87243 b!87246) bm!8313))

(declare-fun m!92861 () Bool)

(assert (=> b!87242 m!92861))

(assert (=> b!87242 m!92861))

(declare-fun m!92863 () Bool)

(assert (=> b!87242 m!92863))

(assert (=> bm!8313 m!92861))

(declare-fun m!92865 () Bool)

(assert (=> bm!8313 m!92865))

(assert (=> b!87244 m!92861))

(assert (=> b!87244 m!92861))

(assert (=> b!87244 m!92863))

(assert (=> b!87245 m!92861))

(assert (=> b!87245 m!92861))

(declare-fun m!92867 () Bool)

(assert (=> b!87245 m!92867))

(assert (=> d!22263 d!23141))

(declare-fun bm!8314 () Bool)

(declare-fun call!8322 () ListLongMap!1449)

(declare-fun call!8323 () ListLongMap!1449)

(assert (=> bm!8314 (= call!8322 call!8323)))

(declare-fun call!8321 () ListLongMap!1449)

(declare-fun bm!8315 () Bool)

(assert (=> bm!8315 (= call!8321 (getCurrentListMapNoExtraKeys!72 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87247 () Bool)

(declare-fun e!56832 () Unit!2510)

(declare-fun Unit!2590 () Unit!2510)

(assert (=> b!87247 (= e!56832 Unit!2590)))

(declare-fun b!87248 () Bool)

(declare-fun e!56834 () Bool)

(assert (=> b!87248 (= e!56834 (validKeyInArray!0 (select (arr!1906 lt!40770) #b00000000000000000000000000000000)))))

(declare-fun b!87249 () Bool)

(declare-fun e!56824 () Bool)

(declare-fun lt!41415 () ListLongMap!1449)

(assert (=> b!87249 (= e!56824 (= (apply!82 lt!41415 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87250 () Bool)

(declare-fun c!14366 () Bool)

(assert (=> b!87250 (= c!14366 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56828 () ListLongMap!1449)

(declare-fun e!56833 () ListLongMap!1449)

(assert (=> b!87250 (= e!56828 e!56833)))

(declare-fun d!23143 () Bool)

(declare-fun e!56825 () Bool)

(assert (=> d!23143 e!56825))

(declare-fun res!44774 () Bool)

(assert (=> d!23143 (=> (not res!44774) (not e!56825))))

(assert (=> d!23143 (= res!44774 (or (bvsge #b00000000000000000000000000000000 (size!2151 lt!40770)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 lt!40770)))))))

(declare-fun lt!41424 () ListLongMap!1449)

(assert (=> d!23143 (= lt!41415 lt!41424)))

(declare-fun lt!41407 () Unit!2510)

(assert (=> d!23143 (= lt!41407 e!56832)))

(declare-fun c!14362 () Bool)

(assert (=> d!23143 (= c!14362 e!56834)))

(declare-fun res!44777 () Bool)

(assert (=> d!23143 (=> (not res!44777) (not e!56834))))

(assert (=> d!23143 (= res!44777 (bvslt #b00000000000000000000000000000000 (size!2151 lt!40770)))))

(declare-fun e!56827 () ListLongMap!1449)

(assert (=> d!23143 (= lt!41424 e!56827)))

(declare-fun c!14364 () Bool)

(assert (=> d!23143 (= c!14364 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23143 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23143 (= (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41415)))

(declare-fun b!87251 () Bool)

(declare-fun lt!41405 () Unit!2510)

(assert (=> b!87251 (= e!56832 lt!41405)))

(declare-fun lt!41411 () ListLongMap!1449)

(assert (=> b!87251 (= lt!41411 (getCurrentListMapNoExtraKeys!72 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41408 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41408 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41412 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41412 (select (arr!1906 lt!40770) #b00000000000000000000000000000000))))

(declare-fun lt!41423 () Unit!2510)

(assert (=> b!87251 (= lt!41423 (addStillContains!58 lt!41411 lt!41408 (zeroValue!2229 newMap!16) lt!41412))))

(assert (=> b!87251 (contains!752 (+!108 lt!41411 (tuple2!2207 lt!41408 (zeroValue!2229 newMap!16))) lt!41412)))

(declare-fun lt!41422 () Unit!2510)

(assert (=> b!87251 (= lt!41422 lt!41423)))

(declare-fun lt!41404 () ListLongMap!1449)

(assert (=> b!87251 (= lt!41404 (getCurrentListMapNoExtraKeys!72 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41421 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41421 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41416 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41416 (select (arr!1906 lt!40770) #b00000000000000000000000000000000))))

(declare-fun lt!41410 () Unit!2510)

(assert (=> b!87251 (= lt!41410 (addApplyDifferent!58 lt!41404 lt!41421 (minValue!2229 newMap!16) lt!41416))))

(assert (=> b!87251 (= (apply!82 (+!108 lt!41404 (tuple2!2207 lt!41421 (minValue!2229 newMap!16))) lt!41416) (apply!82 lt!41404 lt!41416))))

(declare-fun lt!41418 () Unit!2510)

(assert (=> b!87251 (= lt!41418 lt!41410)))

(declare-fun lt!41406 () ListLongMap!1449)

(assert (=> b!87251 (= lt!41406 (getCurrentListMapNoExtraKeys!72 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41417 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41417 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41419 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41419 (select (arr!1906 lt!40770) #b00000000000000000000000000000000))))

(declare-fun lt!41409 () Unit!2510)

(assert (=> b!87251 (= lt!41409 (addApplyDifferent!58 lt!41406 lt!41417 (zeroValue!2229 newMap!16) lt!41419))))

(assert (=> b!87251 (= (apply!82 (+!108 lt!41406 (tuple2!2207 lt!41417 (zeroValue!2229 newMap!16))) lt!41419) (apply!82 lt!41406 lt!41419))))

(declare-fun lt!41413 () Unit!2510)

(assert (=> b!87251 (= lt!41413 lt!41409)))

(declare-fun lt!41403 () ListLongMap!1449)

(assert (=> b!87251 (= lt!41403 (getCurrentListMapNoExtraKeys!72 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41414 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41414 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41420 () (_ BitVec 64))

(assert (=> b!87251 (= lt!41420 (select (arr!1906 lt!40770) #b00000000000000000000000000000000))))

(assert (=> b!87251 (= lt!41405 (addApplyDifferent!58 lt!41403 lt!41414 (minValue!2229 newMap!16) lt!41420))))

(assert (=> b!87251 (= (apply!82 (+!108 lt!41403 (tuple2!2207 lt!41414 (minValue!2229 newMap!16))) lt!41420) (apply!82 lt!41403 lt!41420))))

(declare-fun b!87252 () Bool)

(assert (=> b!87252 (= e!56827 (+!108 call!8323 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87253 () Bool)

(declare-fun e!56831 () Bool)

(declare-fun e!56830 () Bool)

(assert (=> b!87253 (= e!56831 e!56830)))

(declare-fun res!44772 () Bool)

(declare-fun call!8317 () Bool)

(assert (=> b!87253 (= res!44772 call!8317)))

(assert (=> b!87253 (=> (not res!44772) (not e!56830))))

(declare-fun bm!8316 () Bool)

(assert (=> bm!8316 (= call!8317 (contains!752 lt!41415 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87254 () Bool)

(declare-fun res!44770 () Bool)

(assert (=> b!87254 (=> (not res!44770) (not e!56825))))

(declare-fun e!56823 () Bool)

(assert (=> b!87254 (= res!44770 e!56823)))

(declare-fun c!14365 () Bool)

(assert (=> b!87254 (= c!14365 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8317 () Bool)

(declare-fun call!8318 () ListLongMap!1449)

(declare-fun call!8320 () ListLongMap!1449)

(assert (=> bm!8317 (= call!8318 call!8320)))

(declare-fun b!87255 () Bool)

(assert (=> b!87255 (= e!56833 call!8318)))

(declare-fun b!87256 () Bool)

(declare-fun e!56829 () Bool)

(declare-fun e!56835 () Bool)

(assert (=> b!87256 (= e!56829 e!56835)))

(declare-fun res!44771 () Bool)

(assert (=> b!87256 (=> (not res!44771) (not e!56835))))

(assert (=> b!87256 (= res!44771 (contains!752 lt!41415 (select (arr!1906 lt!40770) #b00000000000000000000000000000000)))))

(assert (=> b!87256 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 lt!40770)))))

(declare-fun b!87257 () Bool)

(assert (=> b!87257 (= e!56831 (not call!8317))))

(declare-fun b!87258 () Bool)

(assert (=> b!87258 (= e!56828 call!8322)))

(declare-fun b!87259 () Bool)

(declare-fun call!8319 () Bool)

(assert (=> b!87259 (= e!56823 (not call!8319))))

(declare-fun b!87260 () Bool)

(assert (=> b!87260 (= e!56823 e!56824)))

(declare-fun res!44775 () Bool)

(assert (=> b!87260 (= res!44775 call!8319)))

(assert (=> b!87260 (=> (not res!44775) (not e!56824))))

(declare-fun b!87261 () Bool)

(assert (=> b!87261 (= e!56830 (= (apply!82 lt!41415 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!87262 () Bool)

(declare-fun res!44778 () Bool)

(assert (=> b!87262 (=> (not res!44778) (not e!56825))))

(assert (=> b!87262 (= res!44778 e!56829)))

(declare-fun res!44773 () Bool)

(assert (=> b!87262 (=> res!44773 e!56829)))

(declare-fun e!56826 () Bool)

(assert (=> b!87262 (= res!44773 (not e!56826))))

(declare-fun res!44776 () Bool)

(assert (=> b!87262 (=> (not res!44776) (not e!56826))))

(assert (=> b!87262 (= res!44776 (bvslt #b00000000000000000000000000000000 (size!2151 lt!40770)))))

(declare-fun bm!8318 () Bool)

(assert (=> bm!8318 (= call!8319 (contains!752 lt!41415 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87263 () Bool)

(assert (=> b!87263 (= e!56825 e!56831)))

(declare-fun c!14361 () Bool)

(assert (=> b!87263 (= c!14361 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87264 () Bool)

(assert (=> b!87264 (= e!56826 (validKeyInArray!0 (select (arr!1906 lt!40770) #b00000000000000000000000000000000)))))

(declare-fun b!87265 () Bool)

(assert (=> b!87265 (= e!56835 (= (apply!82 lt!41415 (select (arr!1906 lt!40770) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 lt!40778) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87265 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 lt!40778)))))

(assert (=> b!87265 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 lt!40770)))))

(declare-fun bm!8319 () Bool)

(declare-fun c!14363 () Bool)

(assert (=> bm!8319 (= call!8323 (+!108 (ite c!14364 call!8321 (ite c!14363 call!8320 call!8318)) (ite (or c!14364 c!14363) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8320 () Bool)

(assert (=> bm!8320 (= call!8320 call!8321)))

(declare-fun b!87266 () Bool)

(assert (=> b!87266 (= e!56833 call!8322)))

(declare-fun b!87267 () Bool)

(assert (=> b!87267 (= e!56827 e!56828)))

(assert (=> b!87267 (= c!14363 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!23143 c!14364) b!87252))

(assert (= (and d!23143 (not c!14364)) b!87267))

(assert (= (and b!87267 c!14363) b!87258))

(assert (= (and b!87267 (not c!14363)) b!87250))

(assert (= (and b!87250 c!14366) b!87266))

(assert (= (and b!87250 (not c!14366)) b!87255))

(assert (= (or b!87266 b!87255) bm!8317))

(assert (= (or b!87258 bm!8317) bm!8320))

(assert (= (or b!87258 b!87266) bm!8314))

(assert (= (or b!87252 bm!8320) bm!8315))

(assert (= (or b!87252 bm!8314) bm!8319))

(assert (= (and d!23143 res!44777) b!87248))

(assert (= (and d!23143 c!14362) b!87251))

(assert (= (and d!23143 (not c!14362)) b!87247))

(assert (= (and d!23143 res!44774) b!87262))

(assert (= (and b!87262 res!44776) b!87264))

(assert (= (and b!87262 (not res!44773)) b!87256))

(assert (= (and b!87256 res!44771) b!87265))

(assert (= (and b!87262 res!44778) b!87254))

(assert (= (and b!87254 c!14365) b!87260))

(assert (= (and b!87254 (not c!14365)) b!87259))

(assert (= (and b!87260 res!44775) b!87249))

(assert (= (or b!87260 b!87259) bm!8318))

(assert (= (and b!87254 res!44770) b!87263))

(assert (= (and b!87263 c!14361) b!87253))

(assert (= (and b!87263 (not c!14361)) b!87257))

(assert (= (and b!87253 res!44772) b!87261))

(assert (= (or b!87253 b!87257) bm!8316))

(declare-fun b_lambda!3845 () Bool)

(assert (=> (not b_lambda!3845) (not b!87265)))

(assert (=> b!87265 t!5251))

(declare-fun b_and!5249 () Bool)

(assert (= b_and!5245 (and (=> t!5251 result!2923) b_and!5249)))

(assert (=> b!87265 t!5253))

(declare-fun b_and!5251 () Bool)

(assert (= b_and!5247 (and (=> t!5253 result!2925) b_and!5251)))

(declare-fun m!92869 () Bool)

(assert (=> b!87251 m!92869))

(declare-fun m!92871 () Bool)

(assert (=> b!87251 m!92871))

(declare-fun m!92873 () Bool)

(assert (=> b!87251 m!92873))

(declare-fun m!92875 () Bool)

(assert (=> b!87251 m!92875))

(declare-fun m!92877 () Bool)

(assert (=> b!87251 m!92877))

(declare-fun m!92879 () Bool)

(assert (=> b!87251 m!92879))

(declare-fun m!92881 () Bool)

(assert (=> b!87251 m!92881))

(assert (=> b!87251 m!92875))

(declare-fun m!92883 () Bool)

(assert (=> b!87251 m!92883))

(declare-fun m!92885 () Bool)

(assert (=> b!87251 m!92885))

(declare-fun m!92887 () Bool)

(assert (=> b!87251 m!92887))

(assert (=> b!87251 m!92883))

(assert (=> b!87251 m!92887))

(declare-fun m!92889 () Bool)

(assert (=> b!87251 m!92889))

(declare-fun m!92891 () Bool)

(assert (=> b!87251 m!92891))

(declare-fun m!92893 () Bool)

(assert (=> b!87251 m!92893))

(declare-fun m!92895 () Bool)

(assert (=> b!87251 m!92895))

(declare-fun m!92897 () Bool)

(assert (=> b!87251 m!92897))

(declare-fun m!92899 () Bool)

(assert (=> b!87251 m!92899))

(declare-fun m!92901 () Bool)

(assert (=> b!87251 m!92901))

(assert (=> b!87251 m!92893))

(declare-fun m!92903 () Bool)

(assert (=> bm!8319 m!92903))

(assert (=> b!87256 m!92869))

(assert (=> b!87256 m!92869))

(declare-fun m!92905 () Bool)

(assert (=> b!87256 m!92905))

(declare-fun m!92907 () Bool)

(assert (=> bm!8318 m!92907))

(assert (=> d!23143 m!90001))

(declare-fun m!92909 () Bool)

(assert (=> b!87249 m!92909))

(declare-fun m!92911 () Bool)

(assert (=> bm!8316 m!92911))

(assert (=> b!87264 m!92869))

(assert (=> b!87264 m!92869))

(declare-fun m!92913 () Bool)

(assert (=> b!87264 m!92913))

(assert (=> bm!8315 m!92881))

(assert (=> b!87248 m!92869))

(assert (=> b!87248 m!92869))

(assert (=> b!87248 m!92913))

(declare-fun m!92915 () Bool)

(assert (=> b!87252 m!92915))

(assert (=> b!87265 m!92869))

(assert (=> b!87265 m!90011))

(declare-fun m!92917 () Bool)

(assert (=> b!87265 m!92917))

(assert (=> b!87265 m!92869))

(declare-fun m!92919 () Bool)

(assert (=> b!87265 m!92919))

(assert (=> b!87265 m!92917))

(assert (=> b!87265 m!90011))

(declare-fun m!92921 () Bool)

(assert (=> b!87265 m!92921))

(declare-fun m!92923 () Bool)

(assert (=> b!87261 m!92923))

(assert (=> d!22263 d!23143))

(assert (=> d!22263 d!22293))

(declare-fun d!23145 () Bool)

(declare-fun e!56836 () Bool)

(assert (=> d!23145 e!56836))

(declare-fun res!44779 () Bool)

(assert (=> d!23145 (=> (not res!44779) (not e!56836))))

(assert (=> d!23145 (= res!44779 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 lt!40770))))))

(declare-fun lt!41425 () Unit!2510)

(assert (=> d!23145 (= lt!41425 (choose!512 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (defaultEntry!2337 newMap!16)))))

(assert (=> d!23145 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23145 (= (lemmaValidKeyInArrayIsInListMap!90 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (defaultEntry!2337 newMap!16)) lt!41425)))

(declare-fun b!87268 () Bool)

(assert (=> b!87268 (= e!56836 (contains!752 (getCurrentListMap!426 lt!40770 lt!40778 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 lt!40770) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(assert (= (and d!23145 res!44779) b!87268))

(declare-fun m!92925 () Bool)

(assert (=> d!23145 m!92925))

(assert (=> d!23145 m!90001))

(assert (=> b!87268 m!90489))

(declare-fun m!92927 () Bool)

(assert (=> b!87268 m!92927))

(assert (=> b!87268 m!90489))

(assert (=> b!87268 m!92927))

(declare-fun m!92929 () Bool)

(assert (=> b!87268 m!92929))

(assert (=> d!22263 d!23145))

(assert (=> d!22263 d!22143))

(declare-fun d!23147 () Bool)

(declare-fun e!56839 () Bool)

(assert (=> d!23147 e!56839))

(declare-fun res!44782 () Bool)

(assert (=> d!23147 (=> (not res!44782) (not e!56839))))

(assert (=> d!23147 (= res!44782 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 (_keys!4008 newMap!16)))))))

(declare-fun lt!41428 () Unit!2510)

(declare-fun choose!102 ((_ BitVec 64) array!4005 (_ BitVec 32) (_ BitVec 32)) Unit!2510)

(assert (=> d!23147 (= lt!41428 (choose!102 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (mask!6364 newMap!16)))))

(assert (=> d!23147 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23147 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (mask!6364 newMap!16)) lt!41428)))

(declare-fun b!87271 () Bool)

(assert (=> b!87271 (= e!56839 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) (mask!6364 newMap!16)))))

(assert (= (and d!23147 res!44782) b!87271))

(assert (=> d!23147 m!89403))

(declare-fun m!92931 () Bool)

(assert (=> d!23147 m!92931))

(assert (=> d!23147 m!90001))

(assert (=> b!87271 m!90501))

(assert (=> b!87271 m!90497))

(assert (=> d!22263 d!23147))

(declare-fun d!23149 () Bool)

(declare-fun e!56842 () Bool)

(assert (=> d!23149 e!56842))

(declare-fun res!44785 () Bool)

(assert (=> d!23149 (=> (not res!44785) (not e!56842))))

(assert (=> d!23149 (= res!44785 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 (_keys!4008 newMap!16)))))))

(declare-fun lt!41431 () Unit!2510)

(declare-fun choose!41 (array!4005 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1526) Unit!2510)

(assert (=> d!23149 (= lt!41431 (choose!41 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) lt!40780 lt!40773))))

(assert (=> d!23149 (bvslt (size!2151 (_keys!4008 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!23149 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) lt!40780 lt!40773) lt!41431)))

(declare-fun b!87274 () Bool)

(assert (=> b!87274 (= e!56842 (arrayNoDuplicates!0 (array!4006 (store (arr!1906 (_keys!4008 newMap!16)) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) (size!2151 (_keys!4008 newMap!16))) lt!40780 lt!40773))))

(assert (= (and d!23149 res!44785) b!87274))

(assert (=> d!23149 m!89403))

(declare-fun m!92933 () Bool)

(assert (=> d!23149 m!92933))

(assert (=> b!87274 m!90501))

(assert (=> b!87274 m!90513))

(assert (=> d!22263 d!23149))

(declare-fun d!23151 () Bool)

(assert (=> d!23151 (= (arrayCountValidKeys!0 lt!40763 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (bvadd (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!41434 () Unit!2510)

(declare-fun choose!2 (array!4005 (_ BitVec 32)) Unit!2510)

(assert (=> d!23151 (= lt!41434 (choose!2 lt!40763 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))))))

(declare-fun e!56845 () Bool)

(assert (=> d!23151 e!56845))

(declare-fun res!44790 () Bool)

(assert (=> d!23151 (=> (not res!44790) (not e!56845))))

(assert (=> d!23151 (= res!44790 (and (bvsge (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) #b00000000000000000000000000000000) (bvslt (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)) (size!2151 lt!40763))))))

(assert (=> d!23151 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!40763 (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357))) lt!41434)))

(declare-fun b!87279 () Bool)

(declare-fun res!44791 () Bool)

(assert (=> b!87279 (=> (not res!44791) (not e!56845))))

(assert (=> b!87279 (= res!44791 (validKeyInArray!0 (select (arr!1906 lt!40763) (ite c!13826 (index!3124 lt!40357) (index!3121 lt!40357)))))))

(declare-fun b!87280 () Bool)

(assert (=> b!87280 (= e!56845 (bvslt (size!2151 lt!40763) #b01111111111111111111111111111111))))

(assert (= (and d!23151 res!44790) b!87279))

(assert (= (and b!87279 res!44791) b!87280))

(assert (=> d!23151 m!90499))

(declare-fun m!92935 () Bool)

(assert (=> d!23151 m!92935))

(assert (=> b!87279 m!92827))

(assert (=> b!87279 m!92827))

(assert (=> b!87279 m!92829))

(assert (=> d!22263 d!23151))

(assert (=> d!22263 d!22071))

(declare-fun lt!41435 () Bool)

(declare-fun d!23153 () Bool)

(assert (=> d!23153 (= lt!41435 (select (content!89 (toList!740 lt!40628)) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun e!56846 () Bool)

(assert (=> d!23153 (= lt!41435 e!56846)))

(declare-fun res!44792 () Bool)

(assert (=> d!23153 (=> (not res!44792) (not e!56846))))

(assert (=> d!23153 (= res!44792 ((_ is Cons!1521) (toList!740 lt!40628)))))

(assert (=> d!23153 (= (contains!753 (toList!740 lt!40628) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!41435)))

(declare-fun b!87281 () Bool)

(declare-fun e!56847 () Bool)

(assert (=> b!87281 (= e!56846 e!56847)))

(declare-fun res!44793 () Bool)

(assert (=> b!87281 (=> res!44793 e!56847)))

(assert (=> b!87281 (= res!44793 (= (h!2112 (toList!740 lt!40628)) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87282 () Bool)

(assert (=> b!87282 (= e!56847 (contains!753 (t!5237 (toList!740 lt!40628)) (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(assert (= (and d!23153 res!44792) b!87281))

(assert (= (and b!87281 (not res!44793)) b!87282))

(declare-fun m!92937 () Bool)

(assert (=> d!23153 m!92937))

(declare-fun m!92939 () Bool)

(assert (=> d!23153 m!92939))

(declare-fun m!92941 () Bool)

(assert (=> b!87282 m!92941))

(assert (=> b!85798 d!23153))

(declare-fun d!23155 () Bool)

(assert (=> d!23155 (= (get!1204 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2644 (getValueByKey!138 (toList!740 lt!40415) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!22295 d!23155))

(assert (=> d!22295 d!22589))

(assert (=> b!86010 d!22935))

(assert (=> b!86010 d!22215))

(declare-fun d!23157 () Bool)

(declare-fun res!44794 () Bool)

(declare-fun e!56848 () Bool)

(assert (=> d!23157 (=> res!44794 e!56848)))

(assert (=> d!23157 (= res!44794 (and ((_ is Cons!1521) lt!40504) (= (_1!1114 (h!2112 lt!40504)) (_1!1114 lt!40153))))))

(assert (=> d!23157 (= (containsKey!142 lt!40504 (_1!1114 lt!40153)) e!56848)))

(declare-fun b!87283 () Bool)

(declare-fun e!56849 () Bool)

(assert (=> b!87283 (= e!56848 e!56849)))

(declare-fun res!44795 () Bool)

(assert (=> b!87283 (=> (not res!44795) (not e!56849))))

(assert (=> b!87283 (= res!44795 (and (or (not ((_ is Cons!1521) lt!40504)) (bvsle (_1!1114 (h!2112 lt!40504)) (_1!1114 lt!40153))) ((_ is Cons!1521) lt!40504) (bvslt (_1!1114 (h!2112 lt!40504)) (_1!1114 lt!40153))))))

(declare-fun b!87284 () Bool)

(assert (=> b!87284 (= e!56849 (containsKey!142 (t!5237 lt!40504) (_1!1114 lt!40153)))))

(assert (= (and d!23157 (not res!44794)) b!87283))

(assert (= (and b!87283 res!44795) b!87284))

(declare-fun m!92943 () Bool)

(assert (=> b!87284 m!92943))

(assert (=> b!85598 d!23157))

(declare-fun d!23159 () Bool)

(declare-fun e!56851 () Bool)

(assert (=> d!23159 e!56851))

(declare-fun res!44796 () Bool)

(assert (=> d!23159 (=> res!44796 e!56851)))

(declare-fun lt!41436 () Bool)

(assert (=> d!23159 (= res!44796 (not lt!41436))))

(declare-fun lt!41439 () Bool)

(assert (=> d!23159 (= lt!41436 lt!41439)))

(declare-fun lt!41437 () Unit!2510)

(declare-fun e!56850 () Unit!2510)

(assert (=> d!23159 (= lt!41437 e!56850)))

(declare-fun c!14367 () Bool)

(assert (=> d!23159 (= c!14367 lt!41439)))

(assert (=> d!23159 (= lt!41439 (containsKey!142 (toList!740 lt!40555) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!23159 (= (contains!752 lt!40555 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) lt!41436)))

(declare-fun b!87285 () Bool)

(declare-fun lt!41438 () Unit!2510)

(assert (=> b!87285 (= e!56850 lt!41438)))

(assert (=> b!87285 (= lt!41438 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40555) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87285 (isDefined!92 (getValueByKey!138 (toList!740 lt!40555) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87286 () Bool)

(declare-fun Unit!2591 () Unit!2510)

(assert (=> b!87286 (= e!56850 Unit!2591)))

(declare-fun b!87287 () Bool)

(assert (=> b!87287 (= e!56851 (isDefined!92 (getValueByKey!138 (toList!740 lt!40555) (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!23159 c!14367) b!87285))

(assert (= (and d!23159 (not c!14367)) b!87286))

(assert (= (and d!23159 (not res!44796)) b!87287))

(assert (=> d!23159 m!89961))

(declare-fun m!92945 () Bool)

(assert (=> d!23159 m!92945))

(assert (=> b!87285 m!89961))

(declare-fun m!92947 () Bool)

(assert (=> b!87285 m!92947))

(assert (=> b!87285 m!89961))

(assert (=> b!87285 m!90865))

(assert (=> b!87285 m!90865))

(declare-fun m!92949 () Bool)

(assert (=> b!87285 m!92949))

(assert (=> b!87287 m!89961))

(assert (=> b!87287 m!90865))

(assert (=> b!87287 m!90865))

(assert (=> b!87287 m!92949))

(assert (=> b!85680 d!23159))

(declare-fun d!23161 () Bool)

(assert (=> d!23161 (= (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40416)) (v!2644 (getValueByKey!138 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40416)))))

(assert (=> d!22307 d!23161))

(declare-fun c!14368 () Bool)

(declare-fun d!23163 () Bool)

(assert (=> d!23163 (= c!14368 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40416)))))

(declare-fun e!56852 () Option!144)

(assert (=> d!23163 (= (getValueByKey!138 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40416) e!56852)))

(declare-fun b!87291 () Bool)

(declare-fun e!56853 () Option!144)

(assert (=> b!87291 (= e!56853 None!142)))

(declare-fun b!87288 () Bool)

(assert (=> b!87288 (= e!56852 (Some!143 (_2!1114 (h!2112 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(declare-fun b!87290 () Bool)

(assert (=> b!87290 (= e!56853 (getValueByKey!138 (t!5237 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!40416))))

(declare-fun b!87289 () Bool)

(assert (=> b!87289 (= e!56852 e!56853)))

(declare-fun c!14369 () Bool)

(assert (=> b!87289 (= c!14369 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) (not (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40404 (tuple2!2207 lt!40421 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40416))))))

(assert (= (and d!23163 c!14368) b!87288))

(assert (= (and d!23163 (not c!14368)) b!87289))

(assert (= (and b!87289 c!14369) b!87290))

(assert (= (and b!87289 (not c!14369)) b!87291))

(declare-fun m!92951 () Bool)

(assert (=> b!87290 m!92951))

(assert (=> d!22307 d!23163))

(declare-fun d!23165 () Bool)

(declare-fun res!44797 () Bool)

(declare-fun e!56854 () Bool)

(assert (=> d!23165 (=> res!44797 e!56854)))

(assert (=> d!23165 (= res!44797 (or ((_ is Nil!1522) lt!40647) ((_ is Nil!1522) (t!5237 lt!40647))))))

(assert (=> d!23165 (= (isStrictlySorted!293 lt!40647) e!56854)))

(declare-fun b!87292 () Bool)

(declare-fun e!56855 () Bool)

(assert (=> b!87292 (= e!56854 e!56855)))

(declare-fun res!44798 () Bool)

(assert (=> b!87292 (=> (not res!44798) (not e!56855))))

(assert (=> b!87292 (= res!44798 (bvslt (_1!1114 (h!2112 lt!40647)) (_1!1114 (h!2112 (t!5237 lt!40647)))))))

(declare-fun b!87293 () Bool)

(assert (=> b!87293 (= e!56855 (isStrictlySorted!293 (t!5237 lt!40647)))))

(assert (= (and d!23165 (not res!44797)) b!87292))

(assert (= (and b!87292 res!44798) b!87293))

(declare-fun m!92953 () Bool)

(assert (=> b!87293 m!92953))

(assert (=> d!22223 d!23165))

(declare-fun d!23167 () Bool)

(declare-fun res!44799 () Bool)

(declare-fun e!56856 () Bool)

(assert (=> d!23167 (=> res!44799 e!56856)))

(assert (=> d!23167 (= res!44799 (or ((_ is Nil!1522) (toList!740 (+!108 lt!40146 lt!40153))) ((_ is Nil!1522) (t!5237 (toList!740 (+!108 lt!40146 lt!40153))))))))

(assert (=> d!23167 (= (isStrictlySorted!293 (toList!740 (+!108 lt!40146 lt!40153))) e!56856)))

(declare-fun b!87294 () Bool)

(declare-fun e!56857 () Bool)

(assert (=> b!87294 (= e!56856 e!56857)))

(declare-fun res!44800 () Bool)

(assert (=> b!87294 (=> (not res!44800) (not e!56857))))

(assert (=> b!87294 (= res!44800 (bvslt (_1!1114 (h!2112 (toList!740 (+!108 lt!40146 lt!40153)))) (_1!1114 (h!2112 (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))))))))

(declare-fun b!87295 () Bool)

(assert (=> b!87295 (= e!56857 (isStrictlySorted!293 (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))))))

(assert (= (and d!23167 (not res!44799)) b!87294))

(assert (= (and b!87294 res!44800) b!87295))

(declare-fun m!92955 () Bool)

(assert (=> b!87295 m!92955))

(assert (=> d!22223 d!23167))

(declare-fun c!14370 () Bool)

(declare-fun d!23169 () Bool)

(assert (=> d!23169 (= c!14370 (and ((_ is Cons!1521) (toList!740 lt!40852)) (= (_1!1114 (h!2112 (toList!740 lt!40852))) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun e!56858 () Option!144)

(assert (=> d!23169 (= (getValueByKey!138 (toList!740 lt!40852) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))) e!56858)))

(declare-fun b!87299 () Bool)

(declare-fun e!56859 () Option!144)

(assert (=> b!87299 (= e!56859 None!142)))

(declare-fun b!87296 () Bool)

(assert (=> b!87296 (= e!56858 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40852)))))))

(declare-fun b!87298 () Bool)

(assert (=> b!87298 (= e!56859 (getValueByKey!138 (t!5237 (toList!740 lt!40852)) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))

(declare-fun b!87297 () Bool)

(assert (=> b!87297 (= e!56858 e!56859)))

(declare-fun c!14371 () Bool)

(assert (=> b!87297 (= c!14371 (and ((_ is Cons!1521) (toList!740 lt!40852)) (not (= (_1!1114 (h!2112 (toList!740 lt!40852))) (_1!1114 (tuple2!2207 lt!40414 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(assert (= (and d!23169 c!14370) b!87296))

(assert (= (and d!23169 (not c!14370)) b!87297))

(assert (= (and b!87297 c!14371) b!87298))

(assert (= (and b!87297 (not c!14371)) b!87299))

(declare-fun m!92957 () Bool)

(assert (=> b!87298 m!92957))

(assert (=> b!86083 d!23169))

(declare-fun d!23171 () Bool)

(declare-fun res!44801 () Bool)

(declare-fun e!56860 () Bool)

(assert (=> d!23171 (=> res!44801 e!56860)))

(assert (=> d!23171 (= res!44801 (= (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!23171 (= (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!56860)))

(declare-fun b!87300 () Bool)

(declare-fun e!56861 () Bool)

(assert (=> b!87300 (= e!56860 e!56861)))

(declare-fun res!44802 () Bool)

(assert (=> b!87300 (=> (not res!44802) (not e!56861))))

(assert (=> b!87300 (= res!44802 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(declare-fun b!87301 () Bool)

(assert (=> b!87301 (= e!56861 (arrayContainsKey!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!23171 (not res!44801)) b!87300))

(assert (= (and b!87300 res!44802) b!87301))

(assert (=> d!23171 m!91909))

(assert (=> b!87301 m!89403))

(declare-fun m!92959 () Bool)

(assert (=> b!87301 m!92959))

(assert (=> b!85892 d!23171))

(declare-fun d!23173 () Bool)

(assert (=> d!23173 (= ($colon$colon!71 e!55960 (ite c!13951 (h!2112 (toList!740 (+!108 lt!40146 lt!40153))) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))) (Cons!1521 (ite c!13951 (h!2112 (toList!740 (+!108 lt!40146 lt!40153))) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) e!55960))))

(assert (=> bm!8163 d!23173))

(declare-fun d!23175 () Bool)

(assert (=> d!23175 (isDefined!92 (getValueByKey!138 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!41440 () Unit!2510)

(assert (=> d!23175 (= lt!41440 (choose!514 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!56862 () Bool)

(assert (=> d!23175 e!56862))

(declare-fun res!44803 () Bool)

(assert (=> d!23175 (=> (not res!44803) (not e!56862))))

(assert (=> d!23175 (= res!44803 (isStrictlySorted!293 (toList!740 lt!40471)))))

(assert (=> d!23175 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000) lt!41440)))

(declare-fun b!87302 () Bool)

(assert (=> b!87302 (= e!56862 (containsKey!142 (toList!740 lt!40471) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!23175 res!44803) b!87302))

(assert (=> d!23175 m!90785))

(assert (=> d!23175 m!90785))

(assert (=> d!23175 m!90787))

(declare-fun m!92961 () Bool)

(assert (=> d!23175 m!92961))

(assert (=> d!23175 m!90859))

(assert (=> b!87302 m!90781))

(assert (=> b!86095 d!23175))

(assert (=> b!86095 d!22451))

(assert (=> b!86095 d!22453))

(assert (=> b!85911 d!22385))

(declare-fun d!23177 () Bool)

(declare-fun res!44804 () Bool)

(declare-fun e!56863 () Bool)

(assert (=> d!23177 (=> res!44804 e!56863)))

(assert (=> d!23177 (= res!44804 (and ((_ is Cons!1521) lt!40483) (= (_1!1114 (h!2112 lt!40483)) (_1!1114 lt!40140))))))

(assert (=> d!23177 (= (containsKey!142 lt!40483 (_1!1114 lt!40140)) e!56863)))

(declare-fun b!87303 () Bool)

(declare-fun e!56864 () Bool)

(assert (=> b!87303 (= e!56863 e!56864)))

(declare-fun res!44805 () Bool)

(assert (=> b!87303 (=> (not res!44805) (not e!56864))))

(assert (=> b!87303 (= res!44805 (and (or (not ((_ is Cons!1521) lt!40483)) (bvsle (_1!1114 (h!2112 lt!40483)) (_1!1114 lt!40140))) ((_ is Cons!1521) lt!40483) (bvslt (_1!1114 (h!2112 lt!40483)) (_1!1114 lt!40140))))))

(declare-fun b!87304 () Bool)

(assert (=> b!87304 (= e!56864 (containsKey!142 (t!5237 lt!40483) (_1!1114 lt!40140)))))

(assert (= (and d!23177 (not res!44804)) b!87303))

(assert (= (and b!87303 res!44805) b!87304))

(declare-fun m!92963 () Bool)

(assert (=> b!87304 m!92963))

(assert (=> b!86015 d!23177))

(assert (=> b!85806 d!23029))

(declare-fun d!23179 () Bool)

(declare-fun lt!41441 () Bool)

(assert (=> d!23179 (= lt!41441 (select (content!89 (toList!740 lt!40582)) (tuple2!2207 lt!40470 lt!40468)))))

(declare-fun e!56865 () Bool)

(assert (=> d!23179 (= lt!41441 e!56865)))

(declare-fun res!44806 () Bool)

(assert (=> d!23179 (=> (not res!44806) (not e!56865))))

(assert (=> d!23179 (= res!44806 ((_ is Cons!1521) (toList!740 lt!40582)))))

(assert (=> d!23179 (= (contains!753 (toList!740 lt!40582) (tuple2!2207 lt!40470 lt!40468)) lt!41441)))

(declare-fun b!87305 () Bool)

(declare-fun e!56866 () Bool)

(assert (=> b!87305 (= e!56865 e!56866)))

(declare-fun res!44807 () Bool)

(assert (=> b!87305 (=> res!44807 e!56866)))

(assert (=> b!87305 (= res!44807 (= (h!2112 (toList!740 lt!40582)) (tuple2!2207 lt!40470 lt!40468)))))

(declare-fun b!87306 () Bool)

(assert (=> b!87306 (= e!56866 (contains!753 (t!5237 (toList!740 lt!40582)) (tuple2!2207 lt!40470 lt!40468)))))

(assert (= (and d!23179 res!44806) b!87305))

(assert (= (and b!87305 (not res!44807)) b!87306))

(declare-fun m!92965 () Bool)

(assert (=> d!23179 m!92965))

(declare-fun m!92967 () Bool)

(assert (=> d!23179 m!92967))

(declare-fun m!92969 () Bool)

(assert (=> b!87306 m!92969))

(assert (=> b!85719 d!23179))

(assert (=> bm!8199 d!22169))

(declare-fun b!87307 () Bool)

(declare-fun e!56869 () List!1525)

(assert (=> b!87307 (= e!56869 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 lt!40146))) (_1!1114 lt!40153) (_2!1114 lt!40153)))))

(declare-fun c!14374 () Bool)

(declare-fun b!87308 () Bool)

(declare-fun c!14375 () Bool)

(assert (=> b!87308 (= e!56869 (ite c!14374 (t!5237 (t!5237 (toList!740 lt!40146))) (ite c!14375 (Cons!1521 (h!2112 (t!5237 (toList!740 lt!40146))) (t!5237 (t!5237 (toList!740 lt!40146)))) Nil!1522)))))

(declare-fun b!87309 () Bool)

(declare-fun e!56870 () List!1525)

(declare-fun call!8325 () List!1525)

(assert (=> b!87309 (= e!56870 call!8325)))

(declare-fun b!87310 () Bool)

(declare-fun e!56867 () List!1525)

(declare-fun call!8324 () List!1525)

(assert (=> b!87310 (= e!56867 call!8324)))

(declare-fun b!87311 () Bool)

(assert (=> b!87311 (= c!14375 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40146))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146)))) (_1!1114 lt!40153))))))

(declare-fun e!56871 () List!1525)

(assert (=> b!87311 (= e!56867 e!56871)))

(declare-fun b!87312 () Bool)

(declare-fun res!44808 () Bool)

(declare-fun e!56868 () Bool)

(assert (=> b!87312 (=> (not res!44808) (not e!56868))))

(declare-fun lt!41442 () List!1525)

(assert (=> b!87312 (= res!44808 (containsKey!142 lt!41442 (_1!1114 lt!40153)))))

(declare-fun b!87314 () Bool)

(declare-fun call!8326 () List!1525)

(assert (=> b!87314 (= e!56871 call!8326)))

(declare-fun b!87315 () Bool)

(assert (=> b!87315 (= e!56868 (contains!753 lt!41442 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun c!14373 () Bool)

(declare-fun bm!8321 () Bool)

(assert (=> bm!8321 (= call!8325 ($colon$colon!71 e!56869 (ite c!14373 (h!2112 (t!5237 (toList!740 lt!40146))) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153)))))))

(declare-fun c!14372 () Bool)

(assert (=> bm!8321 (= c!14372 c!14373)))

(declare-fun bm!8322 () Bool)

(assert (=> bm!8322 (= call!8326 call!8324)))

(declare-fun b!87313 () Bool)

(assert (=> b!87313 (= e!56871 call!8326)))

(declare-fun d!23181 () Bool)

(assert (=> d!23181 e!56868))

(declare-fun res!44809 () Bool)

(assert (=> d!23181 (=> (not res!44809) (not e!56868))))

(assert (=> d!23181 (= res!44809 (isStrictlySorted!293 lt!41442))))

(assert (=> d!23181 (= lt!41442 e!56870)))

(assert (=> d!23181 (= c!14373 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40146))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146)))) (_1!1114 lt!40153))))))

(assert (=> d!23181 (isStrictlySorted!293 (t!5237 (toList!740 lt!40146)))))

(assert (=> d!23181 (= (insertStrictlySorted!61 (t!5237 (toList!740 lt!40146)) (_1!1114 lt!40153) (_2!1114 lt!40153)) lt!41442)))

(declare-fun b!87316 () Bool)

(assert (=> b!87316 (= e!56870 e!56867)))

(assert (=> b!87316 (= c!14374 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40146))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40146)))) (_1!1114 lt!40153))))))

(declare-fun bm!8323 () Bool)

(assert (=> bm!8323 (= call!8324 call!8325)))

(assert (= (and d!23181 c!14373) b!87309))

(assert (= (and d!23181 (not c!14373)) b!87316))

(assert (= (and b!87316 c!14374) b!87310))

(assert (= (and b!87316 (not c!14374)) b!87311))

(assert (= (and b!87311 c!14375) b!87314))

(assert (= (and b!87311 (not c!14375)) b!87313))

(assert (= (or b!87314 b!87313) bm!8322))

(assert (= (or b!87310 bm!8322) bm!8323))

(assert (= (or b!87309 bm!8323) bm!8321))

(assert (= (and bm!8321 c!14372) b!87307))

(assert (= (and bm!8321 (not c!14372)) b!87308))

(assert (= (and d!23181 res!44809) b!87312))

(assert (= (and b!87312 res!44808) b!87315))

(declare-fun m!92971 () Bool)

(assert (=> d!23181 m!92971))

(assert (=> d!23181 m!90883))

(declare-fun m!92973 () Bool)

(assert (=> b!87315 m!92973))

(declare-fun m!92975 () Bool)

(assert (=> b!87312 m!92975))

(declare-fun m!92977 () Bool)

(assert (=> b!87307 m!92977))

(declare-fun m!92979 () Bool)

(assert (=> bm!8321 m!92979))

(assert (=> b!85622 d!23181))

(declare-fun d!23183 () Bool)

(assert (=> d!23183 (= (get!1202 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!342 (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2637 (select (arr!1907 (_values!2320 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!85711 d!23183))

(assert (=> bm!8188 d!22243))

(declare-fun b!87317 () Bool)

(declare-fun e!56874 () List!1525)

(assert (=> b!87317 (= e!56874 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 lt!40150))) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun b!87318 () Bool)

(declare-fun c!14379 () Bool)

(declare-fun c!14378 () Bool)

(assert (=> b!87318 (= e!56874 (ite c!14378 (t!5237 (t!5237 (toList!740 lt!40150))) (ite c!14379 (Cons!1521 (h!2112 (t!5237 (toList!740 lt!40150))) (t!5237 (t!5237 (toList!740 lt!40150)))) Nil!1522)))))

(declare-fun b!87319 () Bool)

(declare-fun e!56875 () List!1525)

(declare-fun call!8328 () List!1525)

(assert (=> b!87319 (= e!56875 call!8328)))

(declare-fun b!87320 () Bool)

(declare-fun e!56872 () List!1525)

(declare-fun call!8327 () List!1525)

(assert (=> b!87320 (= e!56872 call!8327)))

(declare-fun b!87321 () Bool)

(assert (=> b!87321 (= c!14379 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40150))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150)))) (_1!1114 lt!40140))))))

(declare-fun e!56876 () List!1525)

(assert (=> b!87321 (= e!56872 e!56876)))

(declare-fun b!87322 () Bool)

(declare-fun res!44810 () Bool)

(declare-fun e!56873 () Bool)

(assert (=> b!87322 (=> (not res!44810) (not e!56873))))

(declare-fun lt!41443 () List!1525)

(assert (=> b!87322 (= res!44810 (containsKey!142 lt!41443 (_1!1114 lt!40140)))))

(declare-fun b!87324 () Bool)

(declare-fun call!8329 () List!1525)

(assert (=> b!87324 (= e!56876 call!8329)))

(declare-fun b!87325 () Bool)

(assert (=> b!87325 (= e!56873 (contains!753 lt!41443 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun c!14377 () Bool)

(declare-fun bm!8324 () Bool)

(assert (=> bm!8324 (= call!8328 ($colon$colon!71 e!56874 (ite c!14377 (h!2112 (t!5237 (toList!740 lt!40150))) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))))))

(declare-fun c!14376 () Bool)

(assert (=> bm!8324 (= c!14376 c!14377)))

(declare-fun bm!8325 () Bool)

(assert (=> bm!8325 (= call!8329 call!8327)))

(declare-fun b!87323 () Bool)

(assert (=> b!87323 (= e!56876 call!8329)))

(declare-fun d!23185 () Bool)

(assert (=> d!23185 e!56873))

(declare-fun res!44811 () Bool)

(assert (=> d!23185 (=> (not res!44811) (not e!56873))))

(assert (=> d!23185 (= res!44811 (isStrictlySorted!293 lt!41443))))

(assert (=> d!23185 (= lt!41443 e!56875)))

(assert (=> d!23185 (= c!14377 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40150))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150)))) (_1!1114 lt!40140))))))

(assert (=> d!23185 (isStrictlySorted!293 (t!5237 (toList!740 lt!40150)))))

(assert (=> d!23185 (= (insertStrictlySorted!61 (t!5237 (toList!740 lt!40150)) (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!41443)))

(declare-fun b!87326 () Bool)

(assert (=> b!87326 (= e!56875 e!56872)))

(assert (=> b!87326 (= c!14378 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40150))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40150)))) (_1!1114 lt!40140))))))

(declare-fun bm!8326 () Bool)

(assert (=> bm!8326 (= call!8327 call!8328)))

(assert (= (and d!23185 c!14377) b!87319))

(assert (= (and d!23185 (not c!14377)) b!87326))

(assert (= (and b!87326 c!14378) b!87320))

(assert (= (and b!87326 (not c!14378)) b!87321))

(assert (= (and b!87321 c!14379) b!87324))

(assert (= (and b!87321 (not c!14379)) b!87323))

(assert (= (or b!87324 b!87323) bm!8325))

(assert (= (or b!87320 bm!8325) bm!8326))

(assert (= (or b!87319 bm!8326) bm!8324))

(assert (= (and bm!8324 c!14376) b!87317))

(assert (= (and bm!8324 (not c!14376)) b!87318))

(assert (= (and d!23185 res!44811) b!87322))

(assert (= (and b!87322 res!44810) b!87325))

(declare-fun m!92981 () Bool)

(assert (=> d!23185 m!92981))

(assert (=> d!23185 m!92349))

(declare-fun m!92983 () Bool)

(assert (=> b!87325 m!92983))

(declare-fun m!92985 () Bool)

(assert (=> b!87322 m!92985))

(declare-fun m!92987 () Bool)

(assert (=> b!87317 m!92987))

(declare-fun m!92989 () Bool)

(assert (=> bm!8324 m!92989))

(assert (=> b!85787 d!23185))

(declare-fun d!23187 () Bool)

(assert (=> d!23187 (= (get!1204 (getValueByKey!138 (toList!740 lt!40406) lt!40419)) (v!2644 (getValueByKey!138 (toList!740 lt!40406) lt!40419)))))

(assert (=> d!22309 d!23187))

(declare-fun d!23189 () Bool)

(declare-fun c!14380 () Bool)

(assert (=> d!23189 (= c!14380 (and ((_ is Cons!1521) (toList!740 lt!40406)) (= (_1!1114 (h!2112 (toList!740 lt!40406))) lt!40419)))))

(declare-fun e!56877 () Option!144)

(assert (=> d!23189 (= (getValueByKey!138 (toList!740 lt!40406) lt!40419) e!56877)))

(declare-fun b!87330 () Bool)

(declare-fun e!56878 () Option!144)

(assert (=> b!87330 (= e!56878 None!142)))

(declare-fun b!87327 () Bool)

(assert (=> b!87327 (= e!56877 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40406)))))))

(declare-fun b!87329 () Bool)

(assert (=> b!87329 (= e!56878 (getValueByKey!138 (t!5237 (toList!740 lt!40406)) lt!40419))))

(declare-fun b!87328 () Bool)

(assert (=> b!87328 (= e!56877 e!56878)))

(declare-fun c!14381 () Bool)

(assert (=> b!87328 (= c!14381 (and ((_ is Cons!1521) (toList!740 lt!40406)) (not (= (_1!1114 (h!2112 (toList!740 lt!40406))) lt!40419))))))

(assert (= (and d!23189 c!14380) b!87327))

(assert (= (and d!23189 (not c!14380)) b!87328))

(assert (= (and b!87328 c!14381) b!87329))

(assert (= (and b!87328 (not c!14381)) b!87330))

(declare-fun m!92991 () Bool)

(assert (=> b!87329 m!92991))

(assert (=> d!22309 d!23189))

(declare-fun d!23191 () Bool)

(declare-fun res!44812 () Bool)

(declare-fun e!56879 () Bool)

(assert (=> d!23191 (=> res!44812 e!56879)))

(assert (=> d!23191 (= res!44812 (or ((_ is Nil!1522) lt!40653) ((_ is Nil!1522) (t!5237 lt!40653))))))

(assert (=> d!23191 (= (isStrictlySorted!293 lt!40653) e!56879)))

(declare-fun b!87331 () Bool)

(declare-fun e!56880 () Bool)

(assert (=> b!87331 (= e!56879 e!56880)))

(declare-fun res!44813 () Bool)

(assert (=> b!87331 (=> (not res!44813) (not e!56880))))

(assert (=> b!87331 (= res!44813 (bvslt (_1!1114 (h!2112 lt!40653)) (_1!1114 (h!2112 (t!5237 lt!40653)))))))

(declare-fun b!87332 () Bool)

(assert (=> b!87332 (= e!56880 (isStrictlySorted!293 (t!5237 lt!40653)))))

(assert (= (and d!23191 (not res!44812)) b!87331))

(assert (= (and b!87331 res!44813) b!87332))

(declare-fun m!92993 () Bool)

(assert (=> b!87332 m!92993))

(assert (=> d!22233 d!23191))

(assert (=> d!22233 d!23077))

(declare-fun d!23193 () Bool)

(declare-fun e!56882 () Bool)

(assert (=> d!23193 e!56882))

(declare-fun res!44814 () Bool)

(assert (=> d!23193 (=> res!44814 e!56882)))

(declare-fun lt!41444 () Bool)

(assert (=> d!23193 (= res!44814 (not lt!41444))))

(declare-fun lt!41447 () Bool)

(assert (=> d!23193 (= lt!41444 lt!41447)))

(declare-fun lt!41445 () Unit!2510)

(declare-fun e!56881 () Unit!2510)

(assert (=> d!23193 (= lt!41445 e!56881)))

(declare-fun c!14382 () Bool)

(assert (=> d!23193 (= c!14382 lt!41447)))

(assert (=> d!23193 (= lt!41447 (containsKey!142 (toList!740 lt!40555) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23193 (= (contains!752 lt!40555 #b0000000000000000000000000000000000000000000000000000000000000000) lt!41444)))

(declare-fun b!87333 () Bool)

(declare-fun lt!41446 () Unit!2510)

(assert (=> b!87333 (= e!56881 lt!41446)))

(assert (=> b!87333 (= lt!41446 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40555) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87333 (isDefined!92 (getValueByKey!138 (toList!740 lt!40555) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87334 () Bool)

(declare-fun Unit!2592 () Unit!2510)

(assert (=> b!87334 (= e!56881 Unit!2592)))

(declare-fun b!87335 () Bool)

(assert (=> b!87335 (= e!56882 (isDefined!92 (getValueByKey!138 (toList!740 lt!40555) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23193 c!14382) b!87333))

(assert (= (and d!23193 (not c!14382)) b!87334))

(assert (= (and d!23193 (not res!44814)) b!87335))

(declare-fun m!92995 () Bool)

(assert (=> d!23193 m!92995))

(declare-fun m!92997 () Bool)

(assert (=> b!87333 m!92997))

(assert (=> b!87333 m!92677))

(assert (=> b!87333 m!92677))

(declare-fun m!92999 () Bool)

(assert (=> b!87333 m!92999))

(assert (=> b!87335 m!92677))

(assert (=> b!87335 m!92677))

(assert (=> b!87335 m!92999))

(assert (=> bm!8150 d!23193))

(assert (=> b!85995 d!22385))

(declare-fun d!23195 () Bool)

(assert (=> d!23195 (= ($colon$colon!71 e!55970 (ite c!13958 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143)))) (Cons!1521 (ite c!13958 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 lt!40143) (_2!1114 lt!40143))) e!55970))))

(assert (=> bm!8166 d!23195))

(declare-fun d!23197 () Bool)

(declare-fun res!44815 () Bool)

(declare-fun e!56883 () Bool)

(assert (=> d!23197 (=> res!44815 e!56883)))

(assert (=> d!23197 (= res!44815 (and ((_ is Cons!1521) (toList!740 call!8082)) (= (_1!1114 (h!2112 (toList!740 call!8082))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (=> d!23197 (= (containsKey!142 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56883)))

(declare-fun b!87336 () Bool)

(declare-fun e!56884 () Bool)

(assert (=> b!87336 (= e!56883 e!56884)))

(declare-fun res!44816 () Bool)

(assert (=> b!87336 (=> (not res!44816) (not e!56884))))

(assert (=> b!87336 (= res!44816 (and (or (not ((_ is Cons!1521) (toList!740 call!8082))) (bvsle (_1!1114 (h!2112 (toList!740 call!8082))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) ((_ is Cons!1521) (toList!740 call!8082)) (bvslt (_1!1114 (h!2112 (toList!740 call!8082))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun b!87337 () Bool)

(assert (=> b!87337 (= e!56884 (containsKey!142 (t!5237 (toList!740 call!8082)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!23197 (not res!44815)) b!87336))

(assert (= (and b!87336 res!44816) b!87337))

(assert (=> b!87337 m!89403))

(declare-fun m!93001 () Bool)

(assert (=> b!87337 m!93001))

(assert (=> d!22265 d!23197))

(assert (=> b!86035 d!22985))

(assert (=> b!86035 d!22987))

(assert (=> b!85726 d!22969))

(assert (=> b!85726 d!22971))

(assert (=> d!22145 d!22431))

(declare-fun d!23199 () Bool)

(assert (=> d!23199 (= (apply!82 lt!40688 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1204 (getValueByKey!138 (toList!740 lt!40688) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3699 () Bool)

(assert (= bs!3699 d!23199))

(assert (=> bs!3699 m!92393))

(assert (=> bs!3699 m!92393))

(declare-fun m!93003 () Bool)

(assert (=> bs!3699 m!93003))

(assert (=> b!85934 d!23199))

(declare-fun d!23201 () Bool)

(declare-fun lt!41448 () Bool)

(assert (=> d!23201 (= lt!41448 (select (content!89 lt!40434) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun e!56885 () Bool)

(assert (=> d!23201 (= lt!41448 e!56885)))

(declare-fun res!44817 () Bool)

(assert (=> d!23201 (=> (not res!44817) (not e!56885))))

(assert (=> d!23201 (= res!44817 ((_ is Cons!1521) lt!40434))))

(assert (=> d!23201 (= (contains!753 lt!40434 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) lt!41448)))

(declare-fun b!87338 () Bool)

(declare-fun e!56886 () Bool)

(assert (=> b!87338 (= e!56885 e!56886)))

(declare-fun res!44818 () Bool)

(assert (=> b!87338 (=> res!44818 e!56886)))

(assert (=> b!87338 (= res!44818 (= (h!2112 lt!40434) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun b!87339 () Bool)

(assert (=> b!87339 (= e!56886 (contains!753 (t!5237 lt!40434) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!23201 res!44817) b!87338))

(assert (= (and b!87338 (not res!44818)) b!87339))

(declare-fun m!93005 () Bool)

(assert (=> d!23201 m!93005))

(declare-fun m!93007 () Bool)

(assert (=> d!23201 m!93007))

(declare-fun m!93009 () Bool)

(assert (=> b!87339 m!93009))

(assert (=> b!85826 d!23201))

(declare-fun d!23203 () Bool)

(declare-fun e!56888 () Bool)

(assert (=> d!23203 e!56888))

(declare-fun res!44819 () Bool)

(assert (=> d!23203 (=> res!44819 e!56888)))

(declare-fun lt!41449 () Bool)

(assert (=> d!23203 (= res!44819 (not lt!41449))))

(declare-fun lt!41452 () Bool)

(assert (=> d!23203 (= lt!41449 lt!41452)))

(declare-fun lt!41450 () Unit!2510)

(declare-fun e!56887 () Unit!2510)

(assert (=> d!23203 (= lt!41450 e!56887)))

(declare-fun c!14383 () Bool)

(assert (=> d!23203 (= c!14383 lt!41452)))

(assert (=> d!23203 (= lt!41452 (containsKey!142 (toList!740 lt!40617) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> d!23203 (= (contains!752 lt!40617 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41449)))

(declare-fun b!87340 () Bool)

(declare-fun lt!41451 () Unit!2510)

(assert (=> b!87340 (= e!56887 lt!41451)))

(assert (=> b!87340 (= lt!41451 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40617) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(assert (=> b!87340 (isDefined!92 (getValueByKey!138 (toList!740 lt!40617) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!87341 () Bool)

(declare-fun Unit!2593 () Unit!2510)

(assert (=> b!87341 (= e!56887 Unit!2593)))

(declare-fun b!87342 () Bool)

(assert (=> b!87342 (= e!56888 (isDefined!92 (getValueByKey!138 (toList!740 lt!40617) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!23203 c!14383) b!87340))

(assert (= (and d!23203 (not c!14383)) b!87341))

(assert (= (and d!23203 (not res!44819)) b!87342))

(declare-fun m!93011 () Bool)

(assert (=> d!23203 m!93011))

(declare-fun m!93013 () Bool)

(assert (=> b!87340 m!93013))

(assert (=> b!87340 m!90205))

(assert (=> b!87340 m!90205))

(declare-fun m!93015 () Bool)

(assert (=> b!87340 m!93015))

(assert (=> b!87342 m!90205))

(assert (=> b!87342 m!90205))

(assert (=> b!87342 m!93015))

(assert (=> d!22189 d!23203))

(declare-fun c!14384 () Bool)

(declare-fun d!23205 () Bool)

(assert (=> d!23205 (= c!14384 (and ((_ is Cons!1521) lt!40616) (= (_1!1114 (h!2112 lt!40616)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56889 () Option!144)

(assert (=> d!23205 (= (getValueByKey!138 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) e!56889)))

(declare-fun b!87346 () Bool)

(declare-fun e!56890 () Option!144)

(assert (=> b!87346 (= e!56890 None!142)))

(declare-fun b!87343 () Bool)

(assert (=> b!87343 (= e!56889 (Some!143 (_2!1114 (h!2112 lt!40616))))))

(declare-fun b!87345 () Bool)

(assert (=> b!87345 (= e!56890 (getValueByKey!138 (t!5237 lt!40616) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!87344 () Bool)

(assert (=> b!87344 (= e!56889 e!56890)))

(declare-fun c!14385 () Bool)

(assert (=> b!87344 (= c!14385 (and ((_ is Cons!1521) lt!40616) (not (= (_1!1114 (h!2112 lt!40616)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(assert (= (and d!23205 c!14384) b!87343))

(assert (= (and d!23205 (not c!14384)) b!87344))

(assert (= (and b!87344 c!14385) b!87345))

(assert (= (and b!87344 (not c!14385)) b!87346))

(declare-fun m!93017 () Bool)

(assert (=> b!87345 m!93017))

(assert (=> d!22189 d!23205))

(declare-fun d!23207 () Bool)

(assert (=> d!23207 (= (getValueByKey!138 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) (Some!143 (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun lt!41453 () Unit!2510)

(assert (=> d!23207 (= lt!41453 (choose!507 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun e!56891 () Bool)

(assert (=> d!23207 e!56891))

(declare-fun res!44820 () Bool)

(assert (=> d!23207 (=> (not res!44820) (not e!56891))))

(assert (=> d!23207 (= res!44820 (isStrictlySorted!293 lt!40616))))

(assert (=> d!23207 (= (lemmaContainsTupThenGetReturnValue!58 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41453)))

(declare-fun b!87347 () Bool)

(declare-fun res!44821 () Bool)

(assert (=> b!87347 (=> (not res!44821) (not e!56891))))

(assert (=> b!87347 (= res!44821 (containsKey!142 lt!40616 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!87348 () Bool)

(assert (=> b!87348 (= e!56891 (contains!753 lt!40616 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (= (and d!23207 res!44820) b!87347))

(assert (= (and b!87347 res!44821) b!87348))

(assert (=> d!23207 m!90199))

(declare-fun m!93019 () Bool)

(assert (=> d!23207 m!93019))

(declare-fun m!93021 () Bool)

(assert (=> d!23207 m!93021))

(declare-fun m!93023 () Bool)

(assert (=> b!87347 m!93023))

(declare-fun m!93025 () Bool)

(assert (=> b!87348 m!93025))

(assert (=> d!22189 d!23207))

(declare-fun b!87349 () Bool)

(declare-fun e!56894 () List!1525)

(assert (=> b!87349 (= e!56894 (insertStrictlySorted!61 (t!5237 (toList!740 call!8089)) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!87350 () Bool)

(declare-fun c!14389 () Bool)

(declare-fun c!14388 () Bool)

(assert (=> b!87350 (= e!56894 (ite c!14388 (t!5237 (toList!740 call!8089)) (ite c!14389 (Cons!1521 (h!2112 (toList!740 call!8089)) (t!5237 (toList!740 call!8089))) Nil!1522)))))

(declare-fun b!87351 () Bool)

(declare-fun e!56895 () List!1525)

(declare-fun call!8331 () List!1525)

(assert (=> b!87351 (= e!56895 call!8331)))

(declare-fun b!87352 () Bool)

(declare-fun e!56892 () List!1525)

(declare-fun call!8330 () List!1525)

(assert (=> b!87352 (= e!56892 call!8330)))

(declare-fun b!87353 () Bool)

(assert (=> b!87353 (= c!14389 (and ((_ is Cons!1521) (toList!740 call!8089)) (bvsgt (_1!1114 (h!2112 (toList!740 call!8089))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun e!56896 () List!1525)

(assert (=> b!87353 (= e!56892 e!56896)))

(declare-fun b!87354 () Bool)

(declare-fun res!44822 () Bool)

(declare-fun e!56893 () Bool)

(assert (=> b!87354 (=> (not res!44822) (not e!56893))))

(declare-fun lt!41454 () List!1525)

(assert (=> b!87354 (= res!44822 (containsKey!142 lt!41454 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))

(declare-fun b!87356 () Bool)

(declare-fun call!8332 () List!1525)

(assert (=> b!87356 (= e!56896 call!8332)))

(declare-fun b!87357 () Bool)

(assert (=> b!87357 (= e!56893 (contains!753 lt!41454 (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8327 () Bool)

(declare-fun c!14387 () Bool)

(assert (=> bm!8327 (= call!8331 ($colon$colon!71 e!56894 (ite c!14387 (h!2112 (toList!740 call!8089)) (tuple2!2207 (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))))))))

(declare-fun c!14386 () Bool)

(assert (=> bm!8327 (= c!14386 c!14387)))

(declare-fun bm!8328 () Bool)

(assert (=> bm!8328 (= call!8332 call!8330)))

(declare-fun b!87355 () Bool)

(assert (=> b!87355 (= e!56896 call!8332)))

(declare-fun d!23209 () Bool)

(assert (=> d!23209 e!56893))

(declare-fun res!44823 () Bool)

(assert (=> d!23209 (=> (not res!44823) (not e!56893))))

(assert (=> d!23209 (= res!44823 (isStrictlySorted!293 lt!41454))))

(assert (=> d!23209 (= lt!41454 e!56895)))

(assert (=> d!23209 (= c!14387 (and ((_ is Cons!1521) (toList!740 call!8089)) (bvslt (_1!1114 (h!2112 (toList!740 call!8089))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(assert (=> d!23209 (isStrictlySorted!293 (toList!740 call!8089))))

(assert (=> d!23209 (= (insertStrictlySorted!61 (toList!740 call!8089) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (_2!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142))) lt!41454)))

(declare-fun b!87358 () Bool)

(assert (=> b!87358 (= e!56895 e!56892)))

(assert (=> b!87358 (= c!14388 (and ((_ is Cons!1521) (toList!740 call!8089)) (= (_1!1114 (h!2112 (toList!740 call!8089))) (_1!1114 (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))))

(declare-fun bm!8329 () Bool)

(assert (=> bm!8329 (= call!8330 call!8331)))

(assert (= (and d!23209 c!14387) b!87351))

(assert (= (and d!23209 (not c!14387)) b!87358))

(assert (= (and b!87358 c!14388) b!87352))

(assert (= (and b!87358 (not c!14388)) b!87353))

(assert (= (and b!87353 c!14389) b!87356))

(assert (= (and b!87353 (not c!14389)) b!87355))

(assert (= (or b!87356 b!87355) bm!8328))

(assert (= (or b!87352 bm!8328) bm!8329))

(assert (= (or b!87351 bm!8329) bm!8327))

(assert (= (and bm!8327 c!14386) b!87349))

(assert (= (and bm!8327 (not c!14386)) b!87350))

(assert (= (and d!23209 res!44823) b!87354))

(assert (= (and b!87354 res!44822) b!87357))

(declare-fun m!93027 () Bool)

(assert (=> d!23209 m!93027))

(declare-fun m!93029 () Bool)

(assert (=> d!23209 m!93029))

(declare-fun m!93031 () Bool)

(assert (=> b!87357 m!93031))

(declare-fun m!93033 () Bool)

(assert (=> b!87354 m!93033))

(declare-fun m!93035 () Bool)

(assert (=> b!87349 m!93035))

(declare-fun m!93037 () Bool)

(assert (=> bm!8327 m!93037))

(assert (=> d!22189 d!23209))

(declare-fun d!23211 () Bool)

(declare-fun c!14390 () Bool)

(assert (=> d!23211 (= c!14390 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40484))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40484)))) (_1!1114 lt!40140))))))

(declare-fun e!56897 () Option!144)

(assert (=> d!23211 (= (getValueByKey!138 (t!5237 (toList!740 lt!40484)) (_1!1114 lt!40140)) e!56897)))

(declare-fun b!87362 () Bool)

(declare-fun e!56898 () Option!144)

(assert (=> b!87362 (= e!56898 None!142)))

(declare-fun b!87359 () Bool)

(assert (=> b!87359 (= e!56897 (Some!143 (_2!1114 (h!2112 (t!5237 (toList!740 lt!40484))))))))

(declare-fun b!87361 () Bool)

(assert (=> b!87361 (= e!56898 (getValueByKey!138 (t!5237 (t!5237 (toList!740 lt!40484))) (_1!1114 lt!40140)))))

(declare-fun b!87360 () Bool)

(assert (=> b!87360 (= e!56897 e!56898)))

(declare-fun c!14391 () Bool)

(assert (=> b!87360 (= c!14391 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40484))) (not (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40484)))) (_1!1114 lt!40140)))))))

(assert (= (and d!23211 c!14390) b!87359))

(assert (= (and d!23211 (not c!14390)) b!87360))

(assert (= (and b!87360 c!14391) b!87361))

(assert (= (and b!87360 (not c!14391)) b!87362))

(declare-fun m!93039 () Bool)

(assert (=> b!87361 m!93039))

(assert (=> b!85816 d!23211))

(declare-fun d!23213 () Bool)

(assert (=> d!23213 (= (+!108 (getCurrentListMap!426 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) (getCurrentListMap!426 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(assert (=> d!23213 true))

(declare-fun _$5!92 () Unit!2510)

(assert (=> d!23213 (= (choose!513 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (index!3122 lt!40357) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142 (defaultEntry!2337 newMap!16)) _$5!92)))

(declare-fun bs!3700 () Bool)

(assert (= bs!3700 d!23213))

(assert (=> bs!3700 m!89631))

(assert (=> bs!3700 m!89631))

(assert (=> bs!3700 m!90485))

(assert (=> bs!3700 m!89623))

(assert (=> bs!3700 m!90603))

(assert (=> d!22291 d!23213))

(assert (=> d!22291 d!22431))

(declare-fun d!23215 () Bool)

(declare-fun lt!41455 () Bool)

(assert (=> d!23215 (= lt!41455 (select (content!89 lt!40510) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun e!56899 () Bool)

(assert (=> d!23215 (= lt!41455 e!56899)))

(declare-fun res!44824 () Bool)

(assert (=> d!23215 (=> (not res!44824) (not e!56899))))

(assert (=> d!23215 (= res!44824 ((_ is Cons!1521) lt!40510))))

(assert (=> d!23215 (= (contains!753 lt!40510 (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))) lt!41455)))

(declare-fun b!87363 () Bool)

(declare-fun e!56900 () Bool)

(assert (=> b!87363 (= e!56899 e!56900)))

(declare-fun res!44825 () Bool)

(assert (=> b!87363 (=> res!44825 e!56900)))

(assert (=> b!87363 (= res!44825 (= (h!2112 lt!40510) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(declare-fun b!87364 () Bool)

(assert (=> b!87364 (= e!56900 (contains!753 (t!5237 lt!40510) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))))))

(assert (= (and d!23215 res!44824) b!87363))

(assert (= (and b!87363 (not res!44825)) b!87364))

(declare-fun m!93041 () Bool)

(assert (=> d!23215 m!93041))

(declare-fun m!93043 () Bool)

(assert (=> d!23215 m!93043))

(declare-fun m!93045 () Bool)

(assert (=> b!87364 m!93045))

(assert (=> b!85630 d!23215))

(assert (=> b!86032 d!23137))

(assert (=> b!86032 d!22143))

(declare-fun bm!8330 () Bool)

(declare-fun call!8338 () ListLongMap!1449)

(declare-fun call!8339 () ListLongMap!1449)

(assert (=> bm!8330 (= call!8338 call!8339)))

(declare-fun bm!8331 () Bool)

(declare-fun call!8337 () ListLongMap!1449)

(assert (=> bm!8331 (= call!8337 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87365 () Bool)

(declare-fun e!56910 () Unit!2510)

(declare-fun Unit!2594 () Unit!2510)

(assert (=> b!87365 (= e!56910 Unit!2594)))

(declare-fun b!87366 () Bool)

(declare-fun e!56912 () Bool)

(assert (=> b!87366 (= e!56912 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87367 () Bool)

(declare-fun e!56902 () Bool)

(declare-fun lt!41468 () ListLongMap!1449)

(assert (=> b!87367 (= e!56902 (= (apply!82 lt!41468 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87368 () Bool)

(declare-fun c!14397 () Bool)

(assert (=> b!87368 (= c!14397 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56906 () ListLongMap!1449)

(declare-fun e!56911 () ListLongMap!1449)

(assert (=> b!87368 (= e!56906 e!56911)))

(declare-fun d!23217 () Bool)

(declare-fun e!56903 () Bool)

(assert (=> d!23217 e!56903))

(declare-fun res!44830 () Bool)

(assert (=> d!23217 (=> (not res!44830) (not e!56903))))

(assert (=> d!23217 (= res!44830 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!41477 () ListLongMap!1449)

(assert (=> d!23217 (= lt!41468 lt!41477)))

(declare-fun lt!41460 () Unit!2510)

(assert (=> d!23217 (= lt!41460 e!56910)))

(declare-fun c!14393 () Bool)

(assert (=> d!23217 (= c!14393 e!56912)))

(declare-fun res!44833 () Bool)

(assert (=> d!23217 (=> (not res!44833) (not e!56912))))

(assert (=> d!23217 (= res!44833 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!56905 () ListLongMap!1449)

(assert (=> d!23217 (= lt!41477 e!56905)))

(declare-fun c!14395 () Bool)

(assert (=> d!23217 (= c!14395 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23217 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23217 (= (getCurrentListMap!426 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41468)))

(declare-fun b!87369 () Bool)

(declare-fun lt!41458 () Unit!2510)

(assert (=> b!87369 (= e!56910 lt!41458)))

(declare-fun lt!41464 () ListLongMap!1449)

(assert (=> b!87369 (= lt!41464 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41461 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41461 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41465 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41465 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41476 () Unit!2510)

(assert (=> b!87369 (= lt!41476 (addStillContains!58 lt!41464 lt!41461 (zeroValue!2229 newMap!16) lt!41465))))

(assert (=> b!87369 (contains!752 (+!108 lt!41464 (tuple2!2207 lt!41461 (zeroValue!2229 newMap!16))) lt!41465)))

(declare-fun lt!41475 () Unit!2510)

(assert (=> b!87369 (= lt!41475 lt!41476)))

(declare-fun lt!41457 () ListLongMap!1449)

(assert (=> b!87369 (= lt!41457 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41474 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41474 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41469 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41469 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41463 () Unit!2510)

(assert (=> b!87369 (= lt!41463 (addApplyDifferent!58 lt!41457 lt!41474 (minValue!2229 newMap!16) lt!41469))))

(assert (=> b!87369 (= (apply!82 (+!108 lt!41457 (tuple2!2207 lt!41474 (minValue!2229 newMap!16))) lt!41469) (apply!82 lt!41457 lt!41469))))

(declare-fun lt!41471 () Unit!2510)

(assert (=> b!87369 (= lt!41471 lt!41463)))

(declare-fun lt!41459 () ListLongMap!1449)

(assert (=> b!87369 (= lt!41459 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41470 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41470 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41472 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41472 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41462 () Unit!2510)

(assert (=> b!87369 (= lt!41462 (addApplyDifferent!58 lt!41459 lt!41470 (zeroValue!2229 newMap!16) lt!41472))))

(assert (=> b!87369 (= (apply!82 (+!108 lt!41459 (tuple2!2207 lt!41470 (zeroValue!2229 newMap!16))) lt!41472) (apply!82 lt!41459 lt!41472))))

(declare-fun lt!41466 () Unit!2510)

(assert (=> b!87369 (= lt!41466 lt!41462)))

(declare-fun lt!41456 () ListLongMap!1449)

(assert (=> b!87369 (= lt!41456 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41467 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41467 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41473 () (_ BitVec 64))

(assert (=> b!87369 (= lt!41473 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87369 (= lt!41458 (addApplyDifferent!58 lt!41456 lt!41467 (minValue!2229 newMap!16) lt!41473))))

(assert (=> b!87369 (= (apply!82 (+!108 lt!41456 (tuple2!2207 lt!41467 (minValue!2229 newMap!16))) lt!41473) (apply!82 lt!41456 lt!41473))))

(declare-fun b!87370 () Bool)

(assert (=> b!87370 (= e!56905 (+!108 call!8339 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87371 () Bool)

(declare-fun e!56909 () Bool)

(declare-fun e!56908 () Bool)

(assert (=> b!87371 (= e!56909 e!56908)))

(declare-fun res!44828 () Bool)

(declare-fun call!8333 () Bool)

(assert (=> b!87371 (= res!44828 call!8333)))

(assert (=> b!87371 (=> (not res!44828) (not e!56908))))

(declare-fun bm!8332 () Bool)

(assert (=> bm!8332 (= call!8333 (contains!752 lt!41468 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87372 () Bool)

(declare-fun res!44826 () Bool)

(assert (=> b!87372 (=> (not res!44826) (not e!56903))))

(declare-fun e!56901 () Bool)

(assert (=> b!87372 (= res!44826 e!56901)))

(declare-fun c!14396 () Bool)

(assert (=> b!87372 (= c!14396 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8333 () Bool)

(declare-fun call!8334 () ListLongMap!1449)

(declare-fun call!8336 () ListLongMap!1449)

(assert (=> bm!8333 (= call!8334 call!8336)))

(declare-fun b!87373 () Bool)

(assert (=> b!87373 (= e!56911 call!8334)))

(declare-fun b!87374 () Bool)

(declare-fun e!56907 () Bool)

(declare-fun e!56913 () Bool)

(assert (=> b!87374 (= e!56907 e!56913)))

(declare-fun res!44827 () Bool)

(assert (=> b!87374 (=> (not res!44827) (not e!56913))))

(assert (=> b!87374 (= res!44827 (contains!752 lt!41468 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87374 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!87375 () Bool)

(assert (=> b!87375 (= e!56909 (not call!8333))))

(declare-fun b!87376 () Bool)

(assert (=> b!87376 (= e!56906 call!8338)))

(declare-fun b!87377 () Bool)

(declare-fun call!8335 () Bool)

(assert (=> b!87377 (= e!56901 (not call!8335))))

(declare-fun b!87378 () Bool)

(assert (=> b!87378 (= e!56901 e!56902)))

(declare-fun res!44831 () Bool)

(assert (=> b!87378 (= res!44831 call!8335)))

(assert (=> b!87378 (=> (not res!44831) (not e!56902))))

(declare-fun b!87379 () Bool)

(assert (=> b!87379 (= e!56908 (= (apply!82 lt!41468 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!87380 () Bool)

(declare-fun res!44834 () Bool)

(assert (=> b!87380 (=> (not res!44834) (not e!56903))))

(assert (=> b!87380 (= res!44834 e!56907)))

(declare-fun res!44829 () Bool)

(assert (=> b!87380 (=> res!44829 e!56907)))

(declare-fun e!56904 () Bool)

(assert (=> b!87380 (= res!44829 (not e!56904))))

(declare-fun res!44832 () Bool)

(assert (=> b!87380 (=> (not res!44832) (not e!56904))))

(assert (=> b!87380 (= res!44832 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8334 () Bool)

(assert (=> bm!8334 (= call!8335 (contains!752 lt!41468 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87381 () Bool)

(assert (=> b!87381 (= e!56903 e!56909)))

(declare-fun c!14392 () Bool)

(assert (=> b!87381 (= c!14392 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87382 () Bool)

(assert (=> b!87382 (= e!56904 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87383 () Bool)

(assert (=> b!87383 (= e!56913 (= (apply!82 lt!41468 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87383 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 (array!4008 (store (arr!1907 (_values!2320 newMap!16)) (index!3122 lt!40357) (ValueCellFull!923 lt!40142)) (size!2152 (_values!2320 newMap!16))))))))

(assert (=> b!87383 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8335 () Bool)

(declare-fun c!14394 () Bool)

(assert (=> bm!8335 (= call!8339 (+!108 (ite c!14395 call!8337 (ite c!14394 call!8336 call!8334)) (ite (or c!14395 c!14394) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8336 () Bool)

(assert (=> bm!8336 (= call!8336 call!8337)))

(declare-fun b!87384 () Bool)

(assert (=> b!87384 (= e!56911 call!8338)))

(declare-fun b!87385 () Bool)

(assert (=> b!87385 (= e!56905 e!56906)))

(assert (=> b!87385 (= c!14394 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!23217 c!14395) b!87370))

(assert (= (and d!23217 (not c!14395)) b!87385))

(assert (= (and b!87385 c!14394) b!87376))

(assert (= (and b!87385 (not c!14394)) b!87368))

(assert (= (and b!87368 c!14397) b!87384))

(assert (= (and b!87368 (not c!14397)) b!87373))

(assert (= (or b!87384 b!87373) bm!8333))

(assert (= (or b!87376 bm!8333) bm!8336))

(assert (= (or b!87376 b!87384) bm!8330))

(assert (= (or b!87370 bm!8336) bm!8331))

(assert (= (or b!87370 bm!8330) bm!8335))

(assert (= (and d!23217 res!44833) b!87366))

(assert (= (and d!23217 c!14393) b!87369))

(assert (= (and d!23217 (not c!14393)) b!87365))

(assert (= (and d!23217 res!44830) b!87380))

(assert (= (and b!87380 res!44832) b!87382))

(assert (= (and b!87380 (not res!44829)) b!87374))

(assert (= (and b!87374 res!44827) b!87383))

(assert (= (and b!87380 res!44834) b!87372))

(assert (= (and b!87372 c!14396) b!87378))

(assert (= (and b!87372 (not c!14396)) b!87377))

(assert (= (and b!87378 res!44831) b!87367))

(assert (= (or b!87378 b!87377) bm!8334))

(assert (= (and b!87372 res!44826) b!87381))

(assert (= (and b!87381 c!14392) b!87371))

(assert (= (and b!87381 (not c!14392)) b!87375))

(assert (= (and b!87371 res!44828) b!87379))

(assert (= (or b!87371 b!87375) bm!8332))

(declare-fun b_lambda!3847 () Bool)

(assert (=> (not b_lambda!3847) (not b!87383)))

(assert (=> b!87383 t!5251))

(declare-fun b_and!5253 () Bool)

(assert (= b_and!5249 (and (=> t!5251 result!2923) b_and!5253)))

(assert (=> b!87383 t!5253))

(declare-fun b_and!5255 () Bool)

(assert (= b_and!5251 (and (=> t!5253 result!2925) b_and!5255)))

(assert (=> b!87369 m!89961))

(declare-fun m!93047 () Bool)

(assert (=> b!87369 m!93047))

(declare-fun m!93049 () Bool)

(assert (=> b!87369 m!93049))

(declare-fun m!93051 () Bool)

(assert (=> b!87369 m!93051))

(declare-fun m!93053 () Bool)

(assert (=> b!87369 m!93053))

(declare-fun m!93055 () Bool)

(assert (=> b!87369 m!93055))

(declare-fun m!93057 () Bool)

(assert (=> b!87369 m!93057))

(assert (=> b!87369 m!93051))

(declare-fun m!93059 () Bool)

(assert (=> b!87369 m!93059))

(declare-fun m!93061 () Bool)

(assert (=> b!87369 m!93061))

(declare-fun m!93063 () Bool)

(assert (=> b!87369 m!93063))

(assert (=> b!87369 m!93059))

(assert (=> b!87369 m!93063))

(declare-fun m!93065 () Bool)

(assert (=> b!87369 m!93065))

(declare-fun m!93067 () Bool)

(assert (=> b!87369 m!93067))

(declare-fun m!93069 () Bool)

(assert (=> b!87369 m!93069))

(declare-fun m!93071 () Bool)

(assert (=> b!87369 m!93071))

(declare-fun m!93073 () Bool)

(assert (=> b!87369 m!93073))

(declare-fun m!93075 () Bool)

(assert (=> b!87369 m!93075))

(declare-fun m!93077 () Bool)

(assert (=> b!87369 m!93077))

(assert (=> b!87369 m!93069))

(declare-fun m!93079 () Bool)

(assert (=> bm!8335 m!93079))

(assert (=> b!87374 m!89961))

(assert (=> b!87374 m!89961))

(declare-fun m!93081 () Bool)

(assert (=> b!87374 m!93081))

(declare-fun m!93083 () Bool)

(assert (=> bm!8334 m!93083))

(assert (=> d!23217 m!90001))

(declare-fun m!93085 () Bool)

(assert (=> b!87367 m!93085))

(declare-fun m!93087 () Bool)

(assert (=> bm!8332 m!93087))

(assert (=> b!87382 m!89961))

(assert (=> b!87382 m!89961))

(assert (=> b!87382 m!90007))

(assert (=> bm!8331 m!93057))

(assert (=> b!87366 m!89961))

(assert (=> b!87366 m!89961))

(assert (=> b!87366 m!90007))

(declare-fun m!93089 () Bool)

(assert (=> b!87370 m!93089))

(assert (=> b!87383 m!89961))

(assert (=> b!87383 m!90011))

(declare-fun m!93091 () Bool)

(assert (=> b!87383 m!93091))

(assert (=> b!87383 m!89961))

(declare-fun m!93093 () Bool)

(assert (=> b!87383 m!93093))

(assert (=> b!87383 m!93091))

(assert (=> b!87383 m!90011))

(declare-fun m!93095 () Bool)

(assert (=> b!87383 m!93095))

(declare-fun m!93097 () Bool)

(assert (=> b!87379 m!93097))

(assert (=> b!86032 d!23217))

(declare-fun d!23219 () Bool)

(assert (=> d!23219 (= (get!1204 (getValueByKey!138 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40419)) (v!2644 (getValueByKey!138 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40419)))))

(assert (=> d!22323 d!23219))

(declare-fun c!14398 () Bool)

(declare-fun d!23221 () Bool)

(assert (=> d!23221 (= c!14398 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40419)))))

(declare-fun e!56914 () Option!144)

(assert (=> d!23221 (= (getValueByKey!138 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))) lt!40419) e!56914)))

(declare-fun b!87389 () Bool)

(declare-fun e!56915 () Option!144)

(assert (=> b!87389 (= e!56915 None!142)))

(declare-fun b!87386 () Bool)

(assert (=> b!87386 (= e!56914 (Some!143 (_2!1114 (h!2112 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(declare-fun b!87388 () Bool)

(assert (=> b!87388 (= e!56915 (getValueByKey!138 (t!5237 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) lt!40419))))

(declare-fun b!87387 () Bool)

(assert (=> b!87387 (= e!56914 e!56915)))

(declare-fun c!14399 () Bool)

(assert (=> b!87387 (= c!14399 (and ((_ is Cons!1521) (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992))))))) (not (= (_1!1114 (h!2112 (toList!740 (+!108 lt!40406 (tuple2!2207 lt!40417 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))))))) lt!40419))))))

(assert (= (and d!23221 c!14398) b!87386))

(assert (= (and d!23221 (not c!14398)) b!87387))

(assert (= (and b!87387 c!14399) b!87388))

(assert (= (and b!87387 (not c!14399)) b!87389))

(declare-fun m!93099 () Bool)

(assert (=> b!87388 m!93099))

(assert (=> d!22323 d!23221))

(assert (=> d!22173 d!22243))

(declare-fun d!23223 () Bool)

(declare-fun e!56918 () Bool)

(assert (=> d!23223 e!56918))

(declare-fun res!44839 () Bool)

(assert (=> d!23223 (=> (not res!44839) (not e!56918))))

(declare-fun lt!41480 () SeekEntryResult!246)

(assert (=> d!23223 (= res!44839 ((_ is Found!246) lt!41480))))

(assert (=> d!23223 (= lt!41480 (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(assert (=> d!23223 true))

(declare-fun _$33!72 () Unit!2510)

(assert (=> d!23223 (= (choose!510 (_keys!4008 newMap!16) (_values!2320 newMap!16) (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (defaultEntry!2337 newMap!16)) _$33!72)))

(declare-fun b!87394 () Bool)

(declare-fun res!44840 () Bool)

(assert (=> b!87394 (=> (not res!44840) (not e!56918))))

(assert (=> b!87394 (= res!44840 (inRange!0 (index!3122 lt!41480) (mask!6364 newMap!16)))))

(declare-fun b!87395 () Bool)

(assert (=> b!87395 (= e!56918 (= (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!41480)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!23223 res!44839) b!87394))

(assert (= (and b!87394 res!44840) b!87395))

(assert (=> d!23223 m!89403))

(assert (=> d!23223 m!89629))

(declare-fun m!93101 () Bool)

(assert (=> b!87394 m!93101))

(declare-fun m!93103 () Bool)

(assert (=> b!87395 m!93103))

(assert (=> d!22173 d!23223))

(assert (=> d!22173 d!22431))

(declare-fun d!23225 () Bool)

(declare-fun lt!41481 () Bool)

(assert (=> d!23225 (= lt!41481 (select (content!89 lt!40625) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun e!56919 () Bool)

(assert (=> d!23225 (= lt!41481 e!56919)))

(declare-fun res!44841 () Bool)

(assert (=> d!23225 (=> (not res!44841) (not e!56919))))

(assert (=> d!23225 (= res!44841 ((_ is Cons!1521) lt!40625))))

(assert (=> d!23225 (= (contains!753 lt!40625 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) lt!41481)))

(declare-fun b!87396 () Bool)

(declare-fun e!56920 () Bool)

(assert (=> b!87396 (= e!56919 e!56920)))

(declare-fun res!44842 () Bool)

(assert (=> b!87396 (=> res!44842 e!56920)))

(assert (=> b!87396 (= res!44842 (= (h!2112 lt!40625) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun b!87397 () Bool)

(assert (=> b!87397 (= e!56920 (contains!753 (t!5237 lt!40625) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!23225 res!44841) b!87396))

(assert (= (and b!87396 (not res!44842)) b!87397))

(declare-fun m!93105 () Bool)

(assert (=> d!23225 m!93105))

(declare-fun m!93107 () Bool)

(assert (=> d!23225 m!93107))

(declare-fun m!93109 () Bool)

(assert (=> b!87397 m!93109))

(assert (=> b!85795 d!23225))

(declare-fun d!23227 () Bool)

(declare-fun res!44843 () Bool)

(declare-fun e!56921 () Bool)

(assert (=> d!23227 (=> res!44843 e!56921)))

(assert (=> d!23227 (= res!44843 (or ((_ is Nil!1522) lt!40614) ((_ is Nil!1522) (t!5237 lt!40614))))))

(assert (=> d!23227 (= (isStrictlySorted!293 lt!40614) e!56921)))

(declare-fun b!87398 () Bool)

(declare-fun e!56922 () Bool)

(assert (=> b!87398 (= e!56921 e!56922)))

(declare-fun res!44844 () Bool)

(assert (=> b!87398 (=> (not res!44844) (not e!56922))))

(assert (=> b!87398 (= res!44844 (bvslt (_1!1114 (h!2112 lt!40614)) (_1!1114 (h!2112 (t!5237 lt!40614)))))))

(declare-fun b!87399 () Bool)

(assert (=> b!87399 (= e!56922 (isStrictlySorted!293 (t!5237 lt!40614)))))

(assert (= (and d!23227 (not res!44843)) b!87398))

(assert (= (and b!87398 res!44844) b!87399))

(declare-fun m!93111 () Bool)

(assert (=> b!87399 m!93111))

(assert (=> d!22187 d!23227))

(declare-fun d!23229 () Bool)

(declare-fun res!44845 () Bool)

(declare-fun e!56923 () Bool)

(assert (=> d!23229 (=> res!44845 e!56923)))

(assert (=> d!23229 (= res!44845 (or ((_ is Nil!1522) (toList!740 lt!40154)) ((_ is Nil!1522) (t!5237 (toList!740 lt!40154)))))))

(assert (=> d!23229 (= (isStrictlySorted!293 (toList!740 lt!40154)) e!56923)))

(declare-fun b!87400 () Bool)

(declare-fun e!56924 () Bool)

(assert (=> b!87400 (= e!56923 e!56924)))

(declare-fun res!44846 () Bool)

(assert (=> b!87400 (=> (not res!44846) (not e!56924))))

(assert (=> b!87400 (= res!44846 (bvslt (_1!1114 (h!2112 (toList!740 lt!40154))) (_1!1114 (h!2112 (t!5237 (toList!740 lt!40154))))))))

(declare-fun b!87401 () Bool)

(assert (=> b!87401 (= e!56924 (isStrictlySorted!293 (t!5237 (toList!740 lt!40154))))))

(assert (= (and d!23229 (not res!44845)) b!87400))

(assert (= (and b!87400 res!44846) b!87401))

(assert (=> b!87401 m!92171))

(assert (=> d!22187 d!23229))

(assert (=> b!85672 d!22385))

(declare-fun d!23231 () Bool)

(declare-fun res!44847 () Bool)

(declare-fun e!56925 () Bool)

(assert (=> d!23231 (=> res!44847 e!56925)))

(assert (=> d!23231 (= res!44847 (and ((_ is Cons!1521) lt!40806) (= (_1!1114 (h!2112 lt!40806)) (_1!1114 lt!40140))))))

(assert (=> d!23231 (= (containsKey!142 lt!40806 (_1!1114 lt!40140)) e!56925)))

(declare-fun b!87402 () Bool)

(declare-fun e!56926 () Bool)

(assert (=> b!87402 (= e!56925 e!56926)))

(declare-fun res!44848 () Bool)

(assert (=> b!87402 (=> (not res!44848) (not e!56926))))

(assert (=> b!87402 (= res!44848 (and (or (not ((_ is Cons!1521) lt!40806)) (bvsle (_1!1114 (h!2112 lt!40806)) (_1!1114 lt!40140))) ((_ is Cons!1521) lt!40806) (bvslt (_1!1114 (h!2112 lt!40806)) (_1!1114 lt!40140))))))

(declare-fun b!87403 () Bool)

(assert (=> b!87403 (= e!56926 (containsKey!142 (t!5237 lt!40806) (_1!1114 lt!40140)))))

(assert (= (and d!23231 (not res!44847)) b!87402))

(assert (= (and b!87402 res!44848) b!87403))

(declare-fun m!93113 () Bool)

(assert (=> b!87403 m!93113))

(assert (=> b!86022 d!23231))

(assert (=> bm!8140 d!22703))

(declare-fun d!23233 () Bool)

(declare-fun c!14400 () Bool)

(assert (=> d!23233 (= c!14400 ((_ is Nil!1522) (toList!740 lt!40476)))))

(declare-fun e!56927 () (InoxSet tuple2!2206))

(assert (=> d!23233 (= (content!89 (toList!740 lt!40476)) e!56927)))

(declare-fun b!87404 () Bool)

(assert (=> b!87404 (= e!56927 ((as const (Array tuple2!2206 Bool)) false))))

(declare-fun b!87405 () Bool)

(assert (=> b!87405 (= e!56927 ((_ map or) (store ((as const (Array tuple2!2206 Bool)) false) (h!2112 (toList!740 lt!40476)) true) (content!89 (t!5237 (toList!740 lt!40476)))))))

(assert (= (and d!23233 c!14400) b!87404))

(assert (= (and d!23233 (not c!14400)) b!87405))

(declare-fun m!93115 () Bool)

(assert (=> b!87405 m!93115))

(assert (=> b!87405 m!92403))

(assert (=> d!22275 d!23233))

(declare-fun d!23235 () Bool)

(assert (=> d!23235 (= ($colon$colon!71 e!55938 (ite c!13940 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))) (Cons!1521 (ite c!13940 (h!2112 (toList!740 lt!40150)) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) e!55938))))

(assert (=> bm!8159 d!23235))

(assert (=> d!22355 d!22351))

(assert (=> d!22355 d!22357))

(assert (=> d!22355 d!22353))

(assert (=> d!22355 d!22359))

(assert (=> bm!8190 d!22169))

(declare-fun d!23237 () Bool)

(declare-fun res!44849 () Bool)

(declare-fun e!56928 () Bool)

(assert (=> d!23237 (=> res!44849 e!56928)))

(assert (=> d!23237 (= res!44849 (and ((_ is Cons!1521) lt!40479) (= (_1!1114 (h!2112 lt!40479)) (_1!1114 lt!40153))))))

(assert (=> d!23237 (= (containsKey!142 lt!40479 (_1!1114 lt!40153)) e!56928)))

(declare-fun b!87406 () Bool)

(declare-fun e!56929 () Bool)

(assert (=> b!87406 (= e!56928 e!56929)))

(declare-fun res!44850 () Bool)

(assert (=> b!87406 (=> (not res!44850) (not e!56929))))

(assert (=> b!87406 (= res!44850 (and (or (not ((_ is Cons!1521) lt!40479)) (bvsle (_1!1114 (h!2112 lt!40479)) (_1!1114 lt!40153))) ((_ is Cons!1521) lt!40479) (bvslt (_1!1114 (h!2112 lt!40479)) (_1!1114 lt!40153))))))

(declare-fun b!87407 () Bool)

(assert (=> b!87407 (= e!56929 (containsKey!142 (t!5237 lt!40479) (_1!1114 lt!40153)))))

(assert (= (and d!23237 (not res!44849)) b!87406))

(assert (= (and b!87406 res!44850) b!87407))

(declare-fun m!93117 () Bool)

(assert (=> b!87407 m!93117))

(assert (=> b!85571 d!23237))

(declare-fun b!87408 () Bool)

(declare-fun e!56932 () List!1525)

(assert (=> b!87408 (= e!56932 (insertStrictlySorted!61 (t!5237 (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (_1!1114 lt!40140) (_2!1114 lt!40140)))))

(declare-fun b!87409 () Bool)

(declare-fun c!14403 () Bool)

(declare-fun c!14404 () Bool)

(assert (=> b!87409 (= e!56932 (ite c!14403 (t!5237 (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (ite c!14404 (Cons!1521 (h!2112 (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (t!5237 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))))) Nil!1522)))))

(declare-fun b!87410 () Bool)

(declare-fun e!56933 () List!1525)

(declare-fun call!8341 () List!1525)

(assert (=> b!87410 (= e!56933 call!8341)))

(declare-fun b!87411 () Bool)

(declare-fun e!56930 () List!1525)

(declare-fun call!8340 () List!1525)

(assert (=> b!87411 (= e!56930 call!8340)))

(declare-fun b!87412 () Bool)

(assert (=> b!87412 (= c!14404 (and ((_ is Cons!1521) (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (bvsgt (_1!1114 (h!2112 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))))) (_1!1114 lt!40140))))))

(declare-fun e!56934 () List!1525)

(assert (=> b!87412 (= e!56930 e!56934)))

(declare-fun b!87413 () Bool)

(declare-fun res!44851 () Bool)

(declare-fun e!56931 () Bool)

(assert (=> b!87413 (=> (not res!44851) (not e!56931))))

(declare-fun lt!41482 () List!1525)

(assert (=> b!87413 (= res!44851 (containsKey!142 lt!41482 (_1!1114 lt!40140)))))

(declare-fun b!87415 () Bool)

(declare-fun call!8342 () List!1525)

(assert (=> b!87415 (= e!56934 call!8342)))

(declare-fun b!87416 () Bool)

(assert (=> b!87416 (= e!56931 (contains!753 lt!41482 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun c!14402 () Bool)

(declare-fun bm!8337 () Bool)

(assert (=> bm!8337 (= call!8341 ($colon$colon!71 e!56932 (ite c!14402 (h!2112 (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140)))))))

(declare-fun c!14401 () Bool)

(assert (=> bm!8337 (= c!14401 c!14402)))

(declare-fun bm!8338 () Bool)

(assert (=> bm!8338 (= call!8342 call!8340)))

(declare-fun b!87414 () Bool)

(assert (=> b!87414 (= e!56934 call!8342)))

(declare-fun d!23239 () Bool)

(assert (=> d!23239 e!56931))

(declare-fun res!44852 () Bool)

(assert (=> d!23239 (=> (not res!44852) (not e!56931))))

(assert (=> d!23239 (= res!44852 (isStrictlySorted!293 lt!41482))))

(assert (=> d!23239 (= lt!41482 e!56933)))

(assert (=> d!23239 (= c!14402 (and ((_ is Cons!1521) (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))))) (_1!1114 lt!40140))))))

(assert (=> d!23239 (isStrictlySorted!293 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))))))

(assert (=> d!23239 (= (insertStrictlySorted!61 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))) (_1!1114 lt!40140) (_2!1114 lt!40140)) lt!41482)))

(declare-fun b!87417 () Bool)

(assert (=> b!87417 (= e!56933 e!56930)))

(assert (=> b!87417 (= c!14403 (and ((_ is Cons!1521) (t!5237 (toList!740 (+!108 lt!40146 lt!40153)))) (= (_1!1114 (h!2112 (t!5237 (toList!740 (+!108 lt!40146 lt!40153))))) (_1!1114 lt!40140))))))

(declare-fun bm!8339 () Bool)

(assert (=> bm!8339 (= call!8340 call!8341)))

(assert (= (and d!23239 c!14402) b!87410))

(assert (= (and d!23239 (not c!14402)) b!87417))

(assert (= (and b!87417 c!14403) b!87411))

(assert (= (and b!87417 (not c!14403)) b!87412))

(assert (= (and b!87412 c!14404) b!87415))

(assert (= (and b!87412 (not c!14404)) b!87414))

(assert (= (or b!87415 b!87414) bm!8338))

(assert (= (or b!87411 bm!8338) bm!8339))

(assert (= (or b!87410 bm!8339) bm!8337))

(assert (= (and bm!8337 c!14401) b!87408))

(assert (= (and bm!8337 (not c!14401)) b!87409))

(assert (= (and d!23239 res!44852) b!87413))

(assert (= (and b!87413 res!44851) b!87416))

(declare-fun m!93119 () Bool)

(assert (=> d!23239 m!93119))

(assert (=> d!23239 m!92955))

(declare-fun m!93121 () Bool)

(assert (=> b!87416 m!93121))

(declare-fun m!93123 () Bool)

(assert (=> b!87413 m!93123))

(declare-fun m!93125 () Bool)

(assert (=> b!87408 m!93125))

(declare-fun m!93127 () Bool)

(assert (=> bm!8337 m!93127))

(assert (=> b!85827 d!23239))

(declare-fun d!23241 () Bool)

(assert (=> d!23241 (= ($colon$colon!71 e!55841 (ite c!13897 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153)))) (Cons!1521 (ite c!13897 (h!2112 (toList!740 lt!40146)) (tuple2!2207 (_1!1114 lt!40153) (_2!1114 lt!40153))) e!55841))))

(assert (=> bm!8135 d!23241))

(declare-fun d!23243 () Bool)

(declare-fun c!14405 () Bool)

(assert (=> d!23243 (= c!14405 (and ((_ is Cons!1521) (toList!740 lt!40628)) (= (_1!1114 (h!2112 (toList!740 lt!40628))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992)))))))))))

(declare-fun e!56935 () Option!144)

(assert (=> d!23243 (= (getValueByKey!138 (toList!740 lt!40628) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))) e!56935)))

(declare-fun b!87421 () Bool)

(declare-fun e!56936 () Option!144)

(assert (=> b!87421 (= e!56936 None!142)))

(declare-fun b!87418 () Bool)

(assert (=> b!87418 (= e!56935 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40628)))))))

(declare-fun b!87420 () Bool)

(assert (=> b!87420 (= e!56936 (getValueByKey!138 (t!5237 (toList!740 lt!40628)) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))

(declare-fun b!87419 () Bool)

(assert (=> b!87419 (= e!56935 e!56936)))

(declare-fun c!14406 () Bool)

(assert (=> b!87419 (= c!14406 (and ((_ is Cons!1521) (toList!740 lt!40628)) (not (= (_1!1114 (h!2112 (toList!740 lt!40628))) (_1!1114 (ite (or c!13848 c!13847) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 (v!2638 (underlying!285 thiss!992)))) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 (v!2638 (underlying!285 thiss!992))))))))))))

(assert (= (and d!23243 c!14405) b!87418))

(assert (= (and d!23243 (not c!14405)) b!87419))

(assert (= (and b!87419 c!14406) b!87420))

(assert (= (and b!87419 (not c!14406)) b!87421))

(declare-fun m!93129 () Bool)

(assert (=> b!87420 m!93129))

(assert (=> b!85797 d!23243))

(declare-fun d!23245 () Bool)

(declare-fun res!44853 () Bool)

(declare-fun e!56937 () Bool)

(assert (=> d!23245 (=> res!44853 e!56937)))

(assert (=> d!23245 (= res!44853 (= (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (=> d!23245 (= (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!56937)))

(declare-fun b!87422 () Bool)

(declare-fun e!56938 () Bool)

(assert (=> b!87422 (= e!56937 e!56938)))

(declare-fun res!44854 () Bool)

(assert (=> b!87422 (=> (not res!44854) (not e!56938))))

(assert (=> b!87422 (= res!44854 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!87423 () Bool)

(assert (=> b!87423 (= e!56938 (arrayContainsKey!0 (_keys!4008 newMap!16) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!23245 (not res!44853)) b!87422))

(assert (= (and b!87422 res!44854) b!87423))

(assert (=> d!23245 m!91049))

(assert (=> b!87423 m!89403))

(declare-fun m!93131 () Bool)

(assert (=> b!87423 m!93131))

(assert (=> b!85740 d!23245))

(assert (=> d!22185 d!22183))

(declare-fun d!23247 () Bool)

(assert (=> d!23247 (= (getValueByKey!138 lt!40442 (_1!1114 lt!40143)) (Some!143 (_2!1114 lt!40143)))))

(assert (=> d!23247 true))

(declare-fun _$22!424 () Unit!2510)

(assert (=> d!23247 (= (choose!507 lt!40442 (_1!1114 lt!40143) (_2!1114 lt!40143)) _$22!424)))

(declare-fun bs!3701 () Bool)

(assert (= bs!3701 d!23247))

(assert (=> bs!3701 m!89755))

(assert (=> d!22185 d!23247))

(declare-fun d!23249 () Bool)

(declare-fun res!44855 () Bool)

(declare-fun e!56939 () Bool)

(assert (=> d!23249 (=> res!44855 e!56939)))

(assert (=> d!23249 (= res!44855 (or ((_ is Nil!1522) lt!40442) ((_ is Nil!1522) (t!5237 lt!40442))))))

(assert (=> d!23249 (= (isStrictlySorted!293 lt!40442) e!56939)))

(declare-fun b!87424 () Bool)

(declare-fun e!56940 () Bool)

(assert (=> b!87424 (= e!56939 e!56940)))

(declare-fun res!44856 () Bool)

(assert (=> b!87424 (=> (not res!44856) (not e!56940))))

(assert (=> b!87424 (= res!44856 (bvslt (_1!1114 (h!2112 lt!40442)) (_1!1114 (h!2112 (t!5237 lt!40442)))))))

(declare-fun b!87425 () Bool)

(assert (=> b!87425 (= e!56940 (isStrictlySorted!293 (t!5237 lt!40442)))))

(assert (= (and d!23249 (not res!44855)) b!87424))

(assert (= (and b!87424 res!44856) b!87425))

(declare-fun m!93133 () Bool)

(assert (=> b!87425 m!93133))

(assert (=> d!22185 d!23249))

(declare-fun d!23251 () Bool)

(assert (=> d!23251 (isDefined!92 (getValueByKey!138 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun lt!41483 () Unit!2510)

(assert (=> d!23251 (= lt!41483 (choose!514 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(declare-fun e!56941 () Bool)

(assert (=> d!23251 e!56941))

(declare-fun res!44857 () Bool)

(assert (=> d!23251 (=> (not res!44857) (not e!56941))))

(assert (=> d!23251 (= res!44857 (isStrictlySorted!293 (toList!740 call!8082)))))

(assert (=> d!23251 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) lt!41483)))

(declare-fun b!87426 () Bool)

(assert (=> b!87426 (= e!56941 (containsKey!142 (toList!740 call!8082) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!23251 res!44857) b!87426))

(assert (=> d!23251 m!89403))

(assert (=> d!23251 m!90537))

(assert (=> d!23251 m!90537))

(assert (=> d!23251 m!90539))

(assert (=> d!23251 m!89403))

(declare-fun m!93135 () Bool)

(assert (=> d!23251 m!93135))

(declare-fun m!93137 () Bool)

(assert (=> d!23251 m!93137))

(assert (=> b!87426 m!89403))

(assert (=> b!87426 m!90533))

(assert (=> b!85992 d!23251))

(assert (=> b!85992 d!22551))

(assert (=> b!85992 d!22553))

(assert (=> b!86070 d!23013))

(assert (=> b!86070 d!23015))

(declare-fun b!87427 () Bool)

(declare-fun e!56944 () Bool)

(declare-fun e!56943 () Bool)

(assert (=> b!87427 (= e!56944 e!56943)))

(declare-fun c!14407 () Bool)

(assert (=> b!87427 (= c!14407 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87428 () Bool)

(declare-fun call!8343 () Bool)

(assert (=> b!87428 (= e!56943 call!8343)))

(declare-fun bm!8340 () Bool)

(assert (=> bm!8340 (= call!8343 (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!14407 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!13943 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523))) (ite c!13943 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)))))))

(declare-fun d!23253 () Bool)

(declare-fun res!44858 () Bool)

(declare-fun e!56942 () Bool)

(assert (=> d!23253 (=> res!44858 e!56942)))

(assert (=> d!23253 (= res!44858 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2151 (_keys!4008 (v!2638 (underlying!285 thiss!992))))))))

(assert (=> d!23253 (= (arrayNoDuplicates!0 (_keys!4008 (v!2638 (underlying!285 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!13943 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523))) e!56942)))

(declare-fun b!87429 () Bool)

(assert (=> b!87429 (= e!56942 e!56944)))

(declare-fun res!44860 () Bool)

(assert (=> b!87429 (=> (not res!44860) (not e!56944))))

(declare-fun e!56945 () Bool)

(assert (=> b!87429 (= res!44860 (not e!56945))))

(declare-fun res!44859 () Bool)

(assert (=> b!87429 (=> (not res!44859) (not e!56945))))

(assert (=> b!87429 (= res!44859 (validKeyInArray!0 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87430 () Bool)

(assert (=> b!87430 (= e!56945 (contains!754 (ite c!13943 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (ite c!13871 (Cons!1522 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) Nil!1523) Nil!1523)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!87431 () Bool)

(assert (=> b!87431 (= e!56943 call!8343)))

(assert (= (and d!23253 (not res!44858)) b!87429))

(assert (= (and b!87429 res!44859) b!87430))

(assert (= (and b!87429 res!44860) b!87427))

(assert (= (and b!87427 c!14407) b!87428))

(assert (= (and b!87427 (not c!14407)) b!87431))

(assert (= (or b!87428 b!87431) bm!8340))

(declare-fun m!93139 () Bool)

(assert (=> b!87427 m!93139))

(assert (=> b!87427 m!93139))

(declare-fun m!93141 () Bool)

(assert (=> b!87427 m!93141))

(assert (=> bm!8340 m!93139))

(declare-fun m!93143 () Bool)

(assert (=> bm!8340 m!93143))

(assert (=> b!87429 m!93139))

(assert (=> b!87429 m!93139))

(assert (=> b!87429 m!93141))

(assert (=> b!87430 m!93139))

(assert (=> b!87430 m!93139))

(declare-fun m!93145 () Bool)

(assert (=> b!87430 m!93145))

(assert (=> bm!8162 d!23253))

(declare-fun d!23255 () Bool)

(declare-fun c!14408 () Bool)

(assert (=> d!23255 (= c!14408 (and ((_ is Cons!1521) (toList!740 lt!40582)) (= (_1!1114 (h!2112 (toList!740 lt!40582))) (_1!1114 (tuple2!2207 lt!40470 lt!40468)))))))

(declare-fun e!56946 () Option!144)

(assert (=> d!23255 (= (getValueByKey!138 (toList!740 lt!40582) (_1!1114 (tuple2!2207 lt!40470 lt!40468))) e!56946)))

(declare-fun b!87435 () Bool)

(declare-fun e!56947 () Option!144)

(assert (=> b!87435 (= e!56947 None!142)))

(declare-fun b!87432 () Bool)

(assert (=> b!87432 (= e!56946 (Some!143 (_2!1114 (h!2112 (toList!740 lt!40582)))))))

(declare-fun b!87434 () Bool)

(assert (=> b!87434 (= e!56947 (getValueByKey!138 (t!5237 (toList!740 lt!40582)) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))

(declare-fun b!87433 () Bool)

(assert (=> b!87433 (= e!56946 e!56947)))

(declare-fun c!14409 () Bool)

(assert (=> b!87433 (= c!14409 (and ((_ is Cons!1521) (toList!740 lt!40582)) (not (= (_1!1114 (h!2112 (toList!740 lt!40582))) (_1!1114 (tuple2!2207 lt!40470 lt!40468))))))))

(assert (= (and d!23255 c!14408) b!87432))

(assert (= (and d!23255 (not c!14408)) b!87433))

(assert (= (and b!87433 c!14409) b!87434))

(assert (= (and b!87433 (not c!14409)) b!87435))

(declare-fun m!93147 () Bool)

(assert (=> b!87434 m!93147))

(assert (=> b!85718 d!23255))

(assert (=> d!22141 d!22431))

(declare-fun lt!41484 () Bool)

(declare-fun d!23257 () Bool)

(assert (=> d!23257 (= lt!41484 (select (content!89 (toList!740 lt!40617)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun e!56948 () Bool)

(assert (=> d!23257 (= lt!41484 e!56948)))

(declare-fun res!44861 () Bool)

(assert (=> d!23257 (=> (not res!44861) (not e!56948))))

(assert (=> d!23257 (= res!44861 ((_ is Cons!1521) (toList!740 lt!40617)))))

(assert (=> d!23257 (= (contains!753 (toList!740 lt!40617) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)) lt!41484)))

(declare-fun b!87436 () Bool)

(declare-fun e!56949 () Bool)

(assert (=> b!87436 (= e!56948 e!56949)))

(declare-fun res!44862 () Bool)

(assert (=> b!87436 (=> res!44862 e!56949)))

(assert (=> b!87436 (= res!44862 (= (h!2112 (toList!740 lt!40617)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(declare-fun b!87437 () Bool)

(assert (=> b!87437 (= e!56949 (contains!753 (t!5237 (toList!740 lt!40617)) (tuple2!2207 (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355) lt!40142)))))

(assert (= (and d!23257 res!44861) b!87436))

(assert (= (and b!87436 (not res!44862)) b!87437))

(declare-fun m!93149 () Bool)

(assert (=> d!23257 m!93149))

(declare-fun m!93151 () Bool)

(assert (=> d!23257 m!93151))

(declare-fun m!93153 () Bool)

(assert (=> b!87437 m!93153))

(assert (=> b!85775 d!23257))

(declare-fun b!87439 () Bool)

(declare-fun e!56950 () Bool)

(declare-fun call!8344 () Bool)

(assert (=> b!87439 (= e!56950 call!8344)))

(declare-fun b!87440 () Bool)

(declare-fun e!56951 () Bool)

(assert (=> b!87440 (= e!56950 e!56951)))

(declare-fun lt!41487 () (_ BitVec 64))

(assert (=> b!87440 (= lt!41487 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!41485 () Unit!2510)

(assert (=> b!87440 (= lt!41485 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4008 newMap!16) lt!41487 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!87440 (arrayContainsKey!0 (_keys!4008 newMap!16) lt!41487 #b00000000000000000000000000000000)))

(declare-fun lt!41486 () Unit!2510)

(assert (=> b!87440 (= lt!41486 lt!41485)))

(declare-fun res!44864 () Bool)

(assert (=> b!87440 (= res!44864 (= (seekEntryOrOpen!0 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4008 newMap!16) (mask!6364 newMap!16)) (Found!246 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!87440 (=> (not res!44864) (not e!56951))))

(declare-fun d!23259 () Bool)

(declare-fun res!44863 () Bool)

(declare-fun e!56952 () Bool)

(assert (=> d!23259 (=> res!44863 e!56952)))

(assert (=> d!23259 (= res!44863 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2151 (_keys!4008 newMap!16))))))

(assert (=> d!23259 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4008 newMap!16) (mask!6364 newMap!16)) e!56952)))

(declare-fun b!87438 () Bool)

(assert (=> b!87438 (= e!56952 e!56950)))

(declare-fun c!14410 () Bool)

(assert (=> b!87438 (= c!14410 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!8341 () Bool)

(assert (=> bm!8341 (= call!8344 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4008 newMap!16) (mask!6364 newMap!16)))))

(declare-fun b!87441 () Bool)

(assert (=> b!87441 (= e!56951 call!8344)))

(assert (= (and d!23259 (not res!44863)) b!87438))

(assert (= (and b!87438 c!14410) b!87440))

(assert (= (and b!87438 (not c!14410)) b!87439))

(assert (= (and b!87440 res!44864) b!87441))

(assert (= (or b!87441 b!87439) bm!8341))

(assert (=> b!87440 m!91049))

(declare-fun m!93155 () Bool)

(assert (=> b!87440 m!93155))

(declare-fun m!93157 () Bool)

(assert (=> b!87440 m!93157))

(assert (=> b!87440 m!91049))

(declare-fun m!93159 () Bool)

(assert (=> b!87440 m!93159))

(assert (=> b!87438 m!91049))

(assert (=> b!87438 m!91049))

(assert (=> b!87438 m!91051))

(declare-fun m!93161 () Bool)

(assert (=> bm!8341 m!93161))

(assert (=> bm!8155 d!23259))

(declare-fun d!23261 () Bool)

(declare-fun e!56954 () Bool)

(assert (=> d!23261 e!56954))

(declare-fun res!44865 () Bool)

(assert (=> d!23261 (=> res!44865 e!56954)))

(declare-fun lt!41488 () Bool)

(assert (=> d!23261 (= res!44865 (not lt!41488))))

(declare-fun lt!41491 () Bool)

(assert (=> d!23261 (= lt!41488 lt!41491)))

(declare-fun lt!41489 () Unit!2510)

(declare-fun e!56953 () Unit!2510)

(assert (=> d!23261 (= lt!41489 e!56953)))

(declare-fun c!14411 () Bool)

(assert (=> d!23261 (= c!14411 lt!41491)))

(assert (=> d!23261 (= lt!41491 (containsKey!142 (toList!740 lt!40533) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!23261 (= (contains!752 lt!40533 #b1000000000000000000000000000000000000000000000000000000000000000) lt!41488)))

(declare-fun b!87442 () Bool)

(declare-fun lt!41490 () Unit!2510)

(assert (=> b!87442 (= e!56953 lt!41490)))

(assert (=> b!87442 (= lt!41490 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 lt!40533) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!87442 (isDefined!92 (getValueByKey!138 (toList!740 lt!40533) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87443 () Bool)

(declare-fun Unit!2595 () Unit!2510)

(assert (=> b!87443 (= e!56953 Unit!2595)))

(declare-fun b!87444 () Bool)

(assert (=> b!87444 (= e!56954 (isDefined!92 (getValueByKey!138 (toList!740 lt!40533) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!23261 c!14411) b!87442))

(assert (= (and d!23261 (not c!14411)) b!87443))

(assert (= (and d!23261 (not res!44865)) b!87444))

(declare-fun m!93163 () Bool)

(assert (=> d!23261 m!93163))

(declare-fun m!93165 () Bool)

(assert (=> b!87442 m!93165))

(assert (=> b!87442 m!92635))

(assert (=> b!87442 m!92635))

(declare-fun m!93167 () Bool)

(assert (=> b!87442 m!93167))

(assert (=> b!87444 m!92635))

(assert (=> b!87444 m!92635))

(assert (=> b!87444 m!93167))

(assert (=> bm!8141 d!23261))

(declare-fun d!23263 () Bool)

(declare-fun res!44866 () Bool)

(declare-fun e!56955 () Bool)

(assert (=> d!23263 (=> res!44866 e!56955)))

(assert (=> d!23263 (= res!44866 (and ((_ is Cons!1521) (t!5237 (toList!740 lt!40151))) (= (_1!1114 (h!2112 (t!5237 (toList!740 lt!40151)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(assert (=> d!23263 (= (containsKey!142 (t!5237 (toList!740 lt!40151)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)) e!56955)))

(declare-fun b!87445 () Bool)

(declare-fun e!56956 () Bool)

(assert (=> b!87445 (= e!56955 e!56956)))

(declare-fun res!44867 () Bool)

(assert (=> b!87445 (=> (not res!44867) (not e!56956))))

(assert (=> b!87445 (= res!44867 (and (or (not ((_ is Cons!1521) (t!5237 (toList!740 lt!40151)))) (bvsle (_1!1114 (h!2112 (t!5237 (toList!740 lt!40151)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))) ((_ is Cons!1521) (t!5237 (toList!740 lt!40151))) (bvslt (_1!1114 (h!2112 (t!5237 (toList!740 lt!40151)))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355))))))

(declare-fun b!87446 () Bool)

(assert (=> b!87446 (= e!56956 (containsKey!142 (t!5237 (t!5237 (toList!740 lt!40151))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) from!355)))))

(assert (= (and d!23263 (not res!44866)) b!87445))

(assert (= (and b!87445 res!44867) b!87446))

(assert (=> b!87446 m!89403))

(declare-fun m!93169 () Bool)

(assert (=> b!87446 m!93169))

(assert (=> b!85612 d!23263))

(declare-fun d!23265 () Bool)

(declare-fun e!56958 () Bool)

(assert (=> d!23265 e!56958))

(declare-fun res!44868 () Bool)

(assert (=> d!23265 (=> res!44868 e!56958)))

(declare-fun lt!41492 () Bool)

(assert (=> d!23265 (= res!44868 (not lt!41492))))

(declare-fun lt!41495 () Bool)

(assert (=> d!23265 (= lt!41492 lt!41495)))

(declare-fun lt!41493 () Unit!2510)

(declare-fun e!56957 () Unit!2510)

(assert (=> d!23265 (= lt!41493 e!56957)))

(declare-fun c!14412 () Bool)

(assert (=> d!23265 (= c!14412 lt!41495)))

(assert (=> d!23265 (= lt!41495 (containsKey!142 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))

(assert (=> d!23265 (= (contains!752 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))) lt!41492)))

(declare-fun b!87447 () Bool)

(declare-fun lt!41494 () Unit!2510)

(assert (=> b!87447 (= e!56957 lt!41494)))

(assert (=> b!87447 (= lt!41494 (lemmaContainsKeyImpliesGetValueByKeyDefined!91 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))

(assert (=> b!87447 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357))))))

(declare-fun b!87448 () Bool)

(declare-fun Unit!2596 () Unit!2510)

(assert (=> b!87448 (= e!56957 Unit!2596)))

(declare-fun b!87449 () Bool)

(assert (=> b!87449 (= e!56958 (isDefined!92 (getValueByKey!138 (toList!740 (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16))) (select (arr!1906 (_keys!4008 newMap!16)) (index!3122 lt!40357)))))))

(assert (= (and d!23265 c!14412) b!87447))

(assert (= (and d!23265 (not c!14412)) b!87448))

(assert (= (and d!23265 (not res!44868)) b!87449))

(assert (=> d!23265 m!89611))

(declare-fun m!93171 () Bool)

(assert (=> d!23265 m!93171))

(assert (=> b!87447 m!89611))

(declare-fun m!93173 () Bool)

(assert (=> b!87447 m!93173))

(assert (=> b!87447 m!89611))

(declare-fun m!93175 () Bool)

(assert (=> b!87447 m!93175))

(assert (=> b!87447 m!93175))

(declare-fun m!93177 () Bool)

(assert (=> b!87447 m!93177))

(assert (=> b!87449 m!89611))

(assert (=> b!87449 m!93175))

(assert (=> b!87449 m!93175))

(assert (=> b!87449 m!93177))

(assert (=> b!86029 d!23265))

(declare-fun bm!8342 () Bool)

(declare-fun call!8350 () ListLongMap!1449)

(declare-fun call!8351 () ListLongMap!1449)

(assert (=> bm!8342 (= call!8350 call!8351)))

(declare-fun bm!8343 () Bool)

(declare-fun call!8349 () ListLongMap!1449)

(assert (=> bm!8343 (= call!8349 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun b!87450 () Bool)

(declare-fun e!56968 () Unit!2510)

(declare-fun Unit!2597 () Unit!2510)

(assert (=> b!87450 (= e!56968 Unit!2597)))

(declare-fun b!87451 () Bool)

(declare-fun e!56970 () Bool)

(assert (=> b!87451 (= e!56970 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87452 () Bool)

(declare-fun e!56960 () Bool)

(declare-fun lt!41508 () ListLongMap!1449)

(assert (=> b!87452 (= e!56960 (= (apply!82 lt!41508 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2229 newMap!16)))))

(declare-fun b!87453 () Bool)

(declare-fun c!14418 () Bool)

(assert (=> b!87453 (= c!14418 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!56964 () ListLongMap!1449)

(declare-fun e!56969 () ListLongMap!1449)

(assert (=> b!87453 (= e!56964 e!56969)))

(declare-fun d!23267 () Bool)

(declare-fun e!56961 () Bool)

(assert (=> d!23267 e!56961))

(declare-fun res!44873 () Bool)

(assert (=> d!23267 (=> (not res!44873) (not e!56961))))

(assert (=> d!23267 (= res!44873 (or (bvsge #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))))

(declare-fun lt!41517 () ListLongMap!1449)

(assert (=> d!23267 (= lt!41508 lt!41517)))

(declare-fun lt!41500 () Unit!2510)

(assert (=> d!23267 (= lt!41500 e!56968)))

(declare-fun c!14414 () Bool)

(assert (=> d!23267 (= c!14414 e!56970)))

(declare-fun res!44876 () Bool)

(assert (=> d!23267 (=> (not res!44876) (not e!56970))))

(assert (=> d!23267 (= res!44876 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun e!56963 () ListLongMap!1449)

(assert (=> d!23267 (= lt!41517 e!56963)))

(declare-fun c!14416 () Bool)

(assert (=> d!23267 (= c!14416 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!23267 (validMask!0 (mask!6364 newMap!16))))

(assert (=> d!23267 (= (getCurrentListMap!426 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)) lt!41508)))

(declare-fun b!87454 () Bool)

(declare-fun lt!41498 () Unit!2510)

(assert (=> b!87454 (= e!56968 lt!41498)))

(declare-fun lt!41504 () ListLongMap!1449)

(assert (=> b!87454 (= lt!41504 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41501 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41501 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41505 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41505 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41516 () Unit!2510)

(assert (=> b!87454 (= lt!41516 (addStillContains!58 lt!41504 lt!41501 (zeroValue!2229 newMap!16) lt!41505))))

(assert (=> b!87454 (contains!752 (+!108 lt!41504 (tuple2!2207 lt!41501 (zeroValue!2229 newMap!16))) lt!41505)))

(declare-fun lt!41515 () Unit!2510)

(assert (=> b!87454 (= lt!41515 lt!41516)))

(declare-fun lt!41497 () ListLongMap!1449)

(assert (=> b!87454 (= lt!41497 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41514 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41514 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41509 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41509 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41503 () Unit!2510)

(assert (=> b!87454 (= lt!41503 (addApplyDifferent!58 lt!41497 lt!41514 (minValue!2229 newMap!16) lt!41509))))

(assert (=> b!87454 (= (apply!82 (+!108 lt!41497 (tuple2!2207 lt!41514 (minValue!2229 newMap!16))) lt!41509) (apply!82 lt!41497 lt!41509))))

(declare-fun lt!41511 () Unit!2510)

(assert (=> b!87454 (= lt!41511 lt!41503)))

(declare-fun lt!41499 () ListLongMap!1449)

(assert (=> b!87454 (= lt!41499 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41510 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41510 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41512 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41512 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!41502 () Unit!2510)

(assert (=> b!87454 (= lt!41502 (addApplyDifferent!58 lt!41499 lt!41510 (zeroValue!2229 newMap!16) lt!41512))))

(assert (=> b!87454 (= (apply!82 (+!108 lt!41499 (tuple2!2207 lt!41510 (zeroValue!2229 newMap!16))) lt!41512) (apply!82 lt!41499 lt!41512))))

(declare-fun lt!41506 () Unit!2510)

(assert (=> b!87454 (= lt!41506 lt!41502)))

(declare-fun lt!41496 () ListLongMap!1449)

(assert (=> b!87454 (= lt!41496 (getCurrentListMapNoExtraKeys!72 (_keys!4008 newMap!16) lt!40348 (mask!6364 newMap!16) (extraKeys!2176 newMap!16) (zeroValue!2229 newMap!16) (minValue!2229 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2337 newMap!16)))))

(declare-fun lt!41507 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41507 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!41513 () (_ BitVec 64))

(assert (=> b!87454 (= lt!41513 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!87454 (= lt!41498 (addApplyDifferent!58 lt!41496 lt!41507 (minValue!2229 newMap!16) lt!41513))))

(assert (=> b!87454 (= (apply!82 (+!108 lt!41496 (tuple2!2207 lt!41507 (minValue!2229 newMap!16))) lt!41513) (apply!82 lt!41496 lt!41513))))

(declare-fun b!87455 () Bool)

(assert (=> b!87455 (= e!56963 (+!108 call!8351 (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16))))))

(declare-fun b!87456 () Bool)

(declare-fun e!56967 () Bool)

(declare-fun e!56966 () Bool)

(assert (=> b!87456 (= e!56967 e!56966)))

(declare-fun res!44871 () Bool)

(declare-fun call!8345 () Bool)

(assert (=> b!87456 (= res!44871 call!8345)))

(assert (=> b!87456 (=> (not res!44871) (not e!56966))))

(declare-fun bm!8344 () Bool)

(assert (=> bm!8344 (= call!8345 (contains!752 lt!41508 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87457 () Bool)

(declare-fun res!44869 () Bool)

(assert (=> b!87457 (=> (not res!44869) (not e!56961))))

(declare-fun e!56959 () Bool)

(assert (=> b!87457 (= res!44869 e!56959)))

(declare-fun c!14417 () Bool)

(assert (=> b!87457 (= c!14417 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!8345 () Bool)

(declare-fun call!8346 () ListLongMap!1449)

(declare-fun call!8348 () ListLongMap!1449)

(assert (=> bm!8345 (= call!8346 call!8348)))

(declare-fun b!87458 () Bool)

(assert (=> b!87458 (= e!56969 call!8346)))

(declare-fun b!87459 () Bool)

(declare-fun e!56965 () Bool)

(declare-fun e!56971 () Bool)

(assert (=> b!87459 (= e!56965 e!56971)))

(declare-fun res!44870 () Bool)

(assert (=> b!87459 (=> (not res!44870) (not e!56971))))

(assert (=> b!87459 (= res!44870 (contains!752 lt!41508 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!87459 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun b!87460 () Bool)

(assert (=> b!87460 (= e!56967 (not call!8345))))

(declare-fun b!87461 () Bool)

(assert (=> b!87461 (= e!56964 call!8350)))

(declare-fun b!87462 () Bool)

(declare-fun call!8347 () Bool)

(assert (=> b!87462 (= e!56959 (not call!8347))))

(declare-fun b!87463 () Bool)

(assert (=> b!87463 (= e!56959 e!56960)))

(declare-fun res!44874 () Bool)

(assert (=> b!87463 (= res!44874 call!8347)))

(assert (=> b!87463 (=> (not res!44874) (not e!56960))))

(declare-fun b!87464 () Bool)

(assert (=> b!87464 (= e!56966 (= (apply!82 lt!41508 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2229 newMap!16)))))

(declare-fun b!87465 () Bool)

(declare-fun res!44877 () Bool)

(assert (=> b!87465 (=> (not res!44877) (not e!56961))))

(assert (=> b!87465 (= res!44877 e!56965)))

(declare-fun res!44872 () Bool)

(assert (=> b!87465 (=> res!44872 e!56965)))

(declare-fun e!56962 () Bool)

(assert (=> b!87465 (= res!44872 (not e!56962))))

(declare-fun res!44875 () Bool)

(assert (=> b!87465 (=> (not res!44875) (not e!56962))))

(assert (=> b!87465 (= res!44875 (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun bm!8346 () Bool)

(assert (=> bm!8346 (= call!8347 (contains!752 lt!41508 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!87466 () Bool)

(assert (=> b!87466 (= e!56961 e!56967)))

(declare-fun c!14413 () Bool)

(assert (=> b!87466 (= c!14413 (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!87467 () Bool)

(assert (=> b!87467 (= e!56962 (validKeyInArray!0 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!87468 () Bool)

(assert (=> b!87468 (= e!56971 (= (apply!82 lt!41508 (select (arr!1906 (_keys!4008 newMap!16)) #b00000000000000000000000000000000)) (get!1199 (select (arr!1907 lt!40348) #b00000000000000000000000000000000) (dynLambda!342 (defaultEntry!2337 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!87468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2152 lt!40348)))))

(assert (=> b!87468 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2151 (_keys!4008 newMap!16))))))

(declare-fun c!14415 () Bool)

(declare-fun bm!8347 () Bool)

(assert (=> bm!8347 (= call!8351 (+!108 (ite c!14416 call!8349 (ite c!14415 call!8348 call!8346)) (ite (or c!14416 c!14415) (tuple2!2207 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2229 newMap!16)) (tuple2!2207 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2229 newMap!16)))))))

(declare-fun bm!8348 () Bool)

(assert (=> bm!8348 (= call!8348 call!8349)))

(declare-fun b!87469 () Bool)

(assert (=> b!87469 (= e!56969 call!8350)))

(declare-fun b!87470 () Bool)

(assert (=> b!87470 (= e!56963 e!56964)))

(assert (=> b!87470 (= c!14415 (and (not (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2176 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!23267 c!14416) b!87455))

(assert (= (and d!23267 (not c!14416)) b!87470))

(assert (= (and b!87470 c!14415) b!87461))

(assert (= (and b!87470 (not c!14415)) b!87453))

(assert (= (and b!87453 c!14418) b!87469))

(assert (= (and b!87453 (not c!14418)) b!87458))

(assert (= (or b!87469 b!87458) bm!8345))

(assert (= (or b!87461 bm!8345) bm!8348))

(assert (= (or b!87461 b!87469) bm!8342))

(assert (= (or b!87455 bm!8348) bm!8343))

(assert (= (or b!87455 bm!8342) bm!8347))

(assert (= (and d!23267 res!44876) b!87451))

(assert (= (and d!23267 c!14414) b!87454))

(assert (= (and d!23267 (not c!14414)) b!87450))

(assert (= (and d!23267 res!44873) b!87465))

(assert (= (and b!87465 res!44875) b!87467))

(assert (= (and b!87465 (not res!44872)) b!87459))

(assert (= (and b!87459 res!44870) b!87468))

(assert (= (and b!87465 res!44877) b!87457))

(assert (= (and b!87457 c!14417) b!87463))

(assert (= (and b!87457 (not c!14417)) b!87462))

(assert (= (and b!87463 res!44874) b!87452))

(assert (= (or b!87463 b!87462) bm!8346))

(assert (= (and b!87457 res!44869) b!87466))

(assert (= (and b!87466 c!14413) b!87456))

(assert (= (and b!87466 (not c!14413)) b!87460))

(assert (= (and b!87456 res!44871) b!87464))

(assert (= (or b!87456 b!87460) bm!8344))

(declare-fun b_lambda!3849 () Bool)

(assert (=> (not b_lambda!3849) (not b!87468)))

(assert (=> b!87468 t!5251))

(declare-fun b_and!5257 () Bool)

(assert (= b_and!5253 (and (=> t!5251 result!2923) b_and!5257)))

(assert (=> b!87468 t!5253))

(declare-fun b_and!5259 () Bool)

(assert (= b_and!5255 (and (=> t!5253 result!2925) b_and!5259)))

(assert (=> b!87454 m!89961))

(declare-fun m!93179 () Bool)

(assert (=> b!87454 m!93179))

(declare-fun m!93181 () Bool)

(assert (=> b!87454 m!93181))

(declare-fun m!93183 () Bool)

(assert (=> b!87454 m!93183))

(declare-fun m!93185 () Bool)

(assert (=> b!87454 m!93185))

(declare-fun m!93187 () Bool)

(assert (=> b!87454 m!93187))

(declare-fun m!93189 () Bool)

(assert (=> b!87454 m!93189))

(assert (=> b!87454 m!93183))

(declare-fun m!93191 () Bool)

(assert (=> b!87454 m!93191))

(declare-fun m!93193 () Bool)

(assert (=> b!87454 m!93193))

(declare-fun m!93195 () Bool)

(assert (=> b!87454 m!93195))

(assert (=> b!87454 m!93191))

(assert (=> b!87454 m!93195))

(declare-fun m!93197 () Bool)

(assert (=> b!87454 m!93197))

(declare-fun m!93199 () Bool)

(assert (=> b!87454 m!93199))

(declare-fun m!93201 () Bool)

(assert (=> b!87454 m!93201))

(declare-fun m!93203 () Bool)

(assert (=> b!87454 m!93203))

(declare-fun m!93205 () Bool)

(assert (=> b!87454 m!93205))

(declare-fun m!93207 () Bool)

(assert (=> b!87454 m!93207))

(declare-fun m!93209 () Bool)

(assert (=> b!87454 m!93209))

(assert (=> b!87454 m!93201))

(declare-fun m!93211 () Bool)

(assert (=> bm!8347 m!93211))

(assert (=> b!87459 m!89961))

(assert (=> b!87459 m!89961))

(declare-fun m!93213 () Bool)

(assert (=> b!87459 m!93213))

(declare-fun m!93215 () Bool)

(assert (=> bm!8346 m!93215))

(assert (=> d!23267 m!90001))

(declare-fun m!93217 () Bool)

(assert (=> b!87452 m!93217))

(declare-fun m!93219 () Bool)

(assert (=> bm!8344 m!93219))

(assert (=> b!87467 m!89961))

(assert (=> b!87467 m!89961))

(assert (=> b!87467 m!90007))

(assert (=> bm!8343 m!93189))

(assert (=> b!87451 m!89961))

(assert (=> b!87451 m!89961))

(assert (=> b!87451 m!90007))

(declare-fun m!93221 () Bool)

(assert (=> b!87455 m!93221))

(assert (=> b!87468 m!89961))

(assert (=> b!87468 m!90011))

(declare-fun m!93223 () Bool)

(assert (=> b!87468 m!93223))

(assert (=> b!87468 m!89961))

(declare-fun m!93225 () Bool)

(assert (=> b!87468 m!93225))

(assert (=> b!87468 m!93223))

(assert (=> b!87468 m!90011))

(declare-fun m!93227 () Bool)

(assert (=> b!87468 m!93227))

(declare-fun m!93229 () Bool)

(assert (=> b!87464 m!93229))

(assert (=> b!86029 d!23267))

(declare-fun d!23269 () Bool)

(declare-fun res!44878 () Bool)

(declare-fun e!56972 () Bool)

(assert (=> d!23269 (=> res!44878 e!56972)))

(assert (=> d!23269 (= res!44878 (and ((_ is Cons!1521) (toList!740 lt!40415)) (= (_1!1114 (h!2112 (toList!740 lt!40415))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!23269 (= (containsKey!142 (toList!740 lt!40415) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!56972)))

(declare-fun b!87471 () Bool)

(declare-fun e!56973 () Bool)

(assert (=> b!87471 (= e!56972 e!56973)))

(declare-fun res!44879 () Bool)

(assert (=> b!87471 (=> (not res!44879) (not e!56973))))

(assert (=> b!87471 (= res!44879 (and (or (not ((_ is Cons!1521) (toList!740 lt!40415))) (bvsle (_1!1114 (h!2112 (toList!740 lt!40415))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1521) (toList!740 lt!40415)) (bvslt (_1!1114 (h!2112 (toList!740 lt!40415))) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!87472 () Bool)

(assert (=> b!87472 (= e!56973 (containsKey!142 (t!5237 (toList!740 lt!40415)) (select (arr!1906 (_keys!4008 (v!2638 (underlying!285 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!23269 (not res!44878)) b!87471))

(assert (= (and b!87471 res!44879) b!87472))

(assert (=> b!87472 m!89659))

(declare-fun m!93231 () Bool)

(assert (=> b!87472 m!93231))

(assert (=> d!22147 d!23269))

(declare-fun d!23271 () Bool)

(declare-fun lt!41518 () Bool)

(assert (=> d!23271 (= lt!41518 (select (content!89 lt!40647) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun e!56974 () Bool)

(assert (=> d!23271 (= lt!41518 e!56974)))

(declare-fun res!44880 () Bool)

(assert (=> d!23271 (=> (not res!44880) (not e!56974))))

(assert (=> d!23271 (= res!44880 ((_ is Cons!1521) lt!40647))))

(assert (=> d!23271 (= (contains!753 lt!40647 (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))) lt!41518)))

(declare-fun b!87473 () Bool)

(declare-fun e!56975 () Bool)

(assert (=> b!87473 (= e!56974 e!56975)))

(declare-fun res!44881 () Bool)

(assert (=> b!87473 (=> res!44881 e!56975)))

(assert (=> b!87473 (= res!44881 (= (h!2112 lt!40647) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(declare-fun b!87474 () Bool)

(assert (=> b!87474 (= e!56975 (contains!753 (t!5237 lt!40647) (tuple2!2207 (_1!1114 lt!40140) (_2!1114 lt!40140))))))

(assert (= (and d!23271 res!44880) b!87473))

(assert (= (and b!87473 (not res!44881)) b!87474))

(declare-fun m!93233 () Bool)

(assert (=> d!23271 m!93233))

(declare-fun m!93235 () Bool)

(assert (=> d!23271 m!93235))

(declare-fun m!93237 () Bool)

(assert (=> b!87474 m!93237))

(assert (=> b!85835 d!23271))

(declare-fun b!87475 () Bool)

(declare-fun e!56976 () Bool)

(assert (=> b!87475 (= e!56976 tp_is_empty!2533)))

(declare-fun mapIsEmpty!3413 () Bool)

(declare-fun mapRes!3413 () Bool)

(assert (=> mapIsEmpty!3413 mapRes!3413))

(declare-fun b!87476 () Bool)

(declare-fun e!56977 () Bool)

(assert (=> b!87476 (= e!56977 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3413 () Bool)

(declare-fun tp!8957 () Bool)

(assert (=> mapNonEmpty!3413 (= mapRes!3413 (and tp!8957 e!56976))))

(declare-fun mapKey!3413 () (_ BitVec 32))

(declare-fun mapRest!3413 () (Array (_ BitVec 32) ValueCell!923))

(declare-fun mapValue!3413 () ValueCell!923)

(assert (=> mapNonEmpty!3413 (= mapRest!3412 (store mapRest!3413 mapKey!3413 mapValue!3413))))

(declare-fun condMapEmpty!3413 () Bool)

(declare-fun mapDefault!3413 () ValueCell!923)

(assert (=> mapNonEmpty!3412 (= condMapEmpty!3413 (= mapRest!3412 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3413)))))

(assert (=> mapNonEmpty!3412 (= tp!8956 (and e!56977 mapRes!3413))))

(assert (= (and mapNonEmpty!3412 condMapEmpty!3413) mapIsEmpty!3413))

(assert (= (and mapNonEmpty!3412 (not condMapEmpty!3413)) mapNonEmpty!3413))

(assert (= (and mapNonEmpty!3413 ((_ is ValueCellFull!923) mapValue!3413)) b!87475))

(assert (= (and mapNonEmpty!3412 ((_ is ValueCellFull!923) mapDefault!3413)) b!87476))

(declare-fun m!93239 () Bool)

(assert (=> mapNonEmpty!3413 m!93239))

(declare-fun b!87477 () Bool)

(declare-fun e!56978 () Bool)

(assert (=> b!87477 (= e!56978 tp_is_empty!2533)))

(declare-fun mapIsEmpty!3414 () Bool)

(declare-fun mapRes!3414 () Bool)

(assert (=> mapIsEmpty!3414 mapRes!3414))

(declare-fun b!87478 () Bool)

(declare-fun e!56979 () Bool)

(assert (=> b!87478 (= e!56979 tp_is_empty!2533)))

(declare-fun mapNonEmpty!3414 () Bool)

(declare-fun tp!8958 () Bool)

(assert (=> mapNonEmpty!3414 (= mapRes!3414 (and tp!8958 e!56978))))

(declare-fun mapValue!3414 () ValueCell!923)

(declare-fun mapKey!3414 () (_ BitVec 32))

(declare-fun mapRest!3414 () (Array (_ BitVec 32) ValueCell!923))

(assert (=> mapNonEmpty!3414 (= mapRest!3411 (store mapRest!3414 mapKey!3414 mapValue!3414))))

(declare-fun condMapEmpty!3414 () Bool)

(declare-fun mapDefault!3414 () ValueCell!923)

(assert (=> mapNonEmpty!3411 (= condMapEmpty!3414 (= mapRest!3411 ((as const (Array (_ BitVec 32) ValueCell!923)) mapDefault!3414)))))

(assert (=> mapNonEmpty!3411 (= tp!8955 (and e!56979 mapRes!3414))))

(assert (= (and mapNonEmpty!3411 condMapEmpty!3414) mapIsEmpty!3414))

(assert (= (and mapNonEmpty!3411 (not condMapEmpty!3414)) mapNonEmpty!3414))

(assert (= (and mapNonEmpty!3414 ((_ is ValueCellFull!923) mapValue!3414)) b!87477))

(assert (= (and mapNonEmpty!3411 ((_ is ValueCellFull!923) mapDefault!3414)) b!87478))

(declare-fun m!93241 () Bool)

(assert (=> mapNonEmpty!3414 m!93241))

(declare-fun b_lambda!3851 () Bool)

(assert (= b_lambda!3821 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3851)))

(declare-fun b_lambda!3853 () Bool)

(assert (= b_lambda!3837 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3853)))

(declare-fun b_lambda!3855 () Bool)

(assert (= b_lambda!3847 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3855)))

(declare-fun b_lambda!3857 () Bool)

(assert (= b_lambda!3849 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3857)))

(declare-fun b_lambda!3859 () Bool)

(assert (= b_lambda!3839 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3859)))

(declare-fun b_lambda!3861 () Bool)

(assert (= b_lambda!3845 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3861)))

(declare-fun b_lambda!3863 () Bool)

(assert (= b_lambda!3831 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3863)))

(declare-fun b_lambda!3865 () Bool)

(assert (= b_lambda!3841 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3865)))

(declare-fun b_lambda!3867 () Bool)

(assert (= b_lambda!3823 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3867)))

(declare-fun b_lambda!3869 () Bool)

(assert (= b_lambda!3835 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3869)))

(declare-fun b_lambda!3871 () Bool)

(assert (= b_lambda!3829 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3871)))

(declare-fun b_lambda!3873 () Bool)

(assert (= b_lambda!3843 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3873)))

(declare-fun b_lambda!3875 () Bool)

(assert (= b_lambda!3827 (or (and b!85121 b_free!2233 (= (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))) (defaultEntry!2337 newMap!16))) (and b!85118 b_free!2235) b_lambda!3875)))

(declare-fun b_lambda!3877 () Bool)

(assert (= b_lambda!3833 (or (and b!85121 b_free!2233) (and b!85118 b_free!2235 (= (defaultEntry!2337 newMap!16) (defaultEntry!2337 (v!2638 (underlying!285 thiss!992))))) b_lambda!3877)))

(check-sat (not b!86551) (not b!87178) (not b!87037) (not d!22899) (not d!23113) (not bm!8331) (not b!87117) (not b!86399) (not b!87238) (not d!23073) (not b!86799) (not d!22673) (not d!22833) (not b!86822) (not d!22781) (not d!22825) (not bm!8312) (not b!86314) (not b_lambda!3799) (not b!87032) (not b!87056) (not d!22713) (not b!86595) (not b!87133) (not b!87112) (not b!86650) (not b!86964) (not d!22879) (not bm!8261) (not bm!8318) (not d!22821) (not d!22943) (not b!86942) (not b!86976) (not b_lambda!3861) (not b!87161) (not bm!8245) (not d!22817) (not b!86728) (not b!86246) (not d!22929) (not b!87279) (not d!22835) (not b_lambda!3817) (not b!86794) (not b!86283) (not b!86540) (not b_lambda!3819) (not bm!8290) (not d!23267) (not b!87166) (not b!86363) (not b!86122) (not d!22771) (not b!86636) (not bm!8232) (not b!86273) (not b!86768) (not d!23115) (not b!86893) (not d!22377) (not b!86257) (not b!87211) (not b!87427) (not b!86970) (not bm!8324) (not d!22785) (not b!86189) (not d!23139) (not b!87302) (not b!87070) (not b!87102) (not b!87098) (not d!22837) (not d!22529) (not b!86831) (not mapNonEmpty!3414) (not b!86479) (not b!86851) (not b!86951) (not d!22831) (not bm!8347) (not b!87459) (not b_lambda!3797) (not d!22585) (not b!87105) (not b!86675) (not d!22847) (not d!22867) (not b!86379) (not b!87340) (not d!22839) (not b!87058) (not bm!8298) (not d!22675) (not b!86503) (not b!87342) (not b!86935) (not b!86928) (not b!86704) (not b!87136) (not bm!8319) (not b!87018) (not b!87157) (not b!87023) (not b!87193) (not b!87194) (not b!86780) (not b!86178) (not b!86413) (not d!22459) (not b!87332) (not b!87442) (not d!23057) (not d!23089) (not d!23085) (not b!87416) (not b!86368) (not d!22851) b_and!5257 (not d!23193) (not d!22791) (not d!22757) (not b!86509) (not b_lambda!3855) (not b!86565) (not b!86904) (not b!86932) (not bm!8321) (not b!87256) (not d!23261) (not b!86732) (not b!86280) (not b!86186) (not b!86124) (not b!87452) (not bm!8335) (not d!22535) (not d!22695) (not d!22705) (not b!86892) (not b!86183) (not b!87249) (not d!22787) (not b!86460) (not b!86745) (not d!23069) (not b!86852) (not d!22991) (not d!22715) (not b_lambda!3815) (not d!23133) (not b!87203) (not b!86268) (not d!22969) (not bm!8209) (not b!86738) (not b!87139) (not b!86955) (not b!86176) (not b!86180) (not b!87045) (not bm!8281) (not d!22595) (not bm!8274) (not d!22887) (not d!22891) (not d!23031) (not b!86562) (not b!87103) (not d!23147) (not d!22861) (not b!87131) (not b_lambda!3825) (not b!87083) (not b!86772) (not b!86694) (not d!22391) (not b!87423) (not b!86429) (not b!86667) (not b!86243) (not d!23251) (not b!86535) (not b!87055) (not b!86736) (not b!86966) (not d!22815) (not b!86680) (not b!86517) (not d!22985) (not b!86164) (not b!87370) (not b!86770) (not d!22935) (not d!22699) (not d!23143) (not b!86783) (not bm!8235) (not d!22809) (not bm!8293) (not d!23033) (not d!22709) (not b_lambda!3857) (not d!23181) (not d!22743) (not d!22421) (not b!86669) (not d!23005) (not b!86322) (not bm!8346) (not b!86236) (not bm!8307) (not b!86253) (not b!86504) (not b!86446) (not b!86947) (not b!86792) (not b!86342) (not b!86520) (not b!86777) (not bm!8220) (not b!86623) (not b!86260) (not b!86354) (not d!22949) (not d!22555) (not d!22403) (not d!22989) (not b!86493) (not b!86112) (not bm!8223) (not d!22737) (not d!22827) (not bm!8310) (not b!86808) (not d!22485) (not b!86378) (not b!86708) (not b_lambda!3853) (not b!86168) (not b!87397) (not b_lambda!3871) (not d!23093) (not b!86544) (not d!22687) (not b_next!2235) (not d!22967) (not b!86578) (not b!86934) (not b!86839) (not d!22895) (not d!22717) (not b!87097) (not d!22915) (not b!86631) (not b!87349) (not d!22393) (not b!86930) (not b!86701) (not b!86277) (not b!86405) (not b!86602) (not d!22575) (not b!86471) (not b!86369) (not d!22493) (not d!23125) (not b!86323) (not b!87382) (not b!86234) (not b!86647) (not b!87383) (not d!22397) (not d!23201) (not b!87207) (not b!86653) (not b!86572) (not b!87138) (not b!86466) (not b!86237) (not b!86671) (not b!86897) (not b!86328) (not b!86786) (not b!86335) (not b!87022) (not b!86654) (not b!86599) (not b!87108) (not b!86436) (not d!23063) (not d!22427) (not b!86215) (not b!86978) (not b!87438) (not b!86672) (not b!87401) (not d!23151) (not b!87325) (not d!22569) (not b!87236) (not b!86722) (not b!86766) (not bm!8287) (not b!87434) (not b!86134) (not b!86724) (not b!87357) (not d!22373) (not b!86415) (not b!86110) (not b!86706) (not b!86870) (not bm!8227) (not d!23135) (not bm!8327) (not d!22489) (not d!22407) (not b!86407) (not b!86430) (not d!23213) (not b!87148) (not d!22689) (not b!86532) (not b!86370) (not b!86173) (not b!86985) (not b!86568) (not b!86502) (not b!87408) (not d!22701) (not d!22519) (not bm!8297) (not b!87403) (not b!87333) (not bm!8244) (not b!86347) (not d!22503) (not d!23055) (not b!87094) (not b!86737) (not d!23145) (not b!86157) (not b!86682) (not d!23223) (not b!86152) (not b!87271) (not b!87206) (not d!22515) (not b!86138) (not d!22763) (not b!86763) (not bm!8316) (not b!86712) (not d!22963) (not d!22599) (not b_lambda!3877) (not d!22539) (not b!86826) (not b!87027) (not b!86938) (not b!86895) (not b!87347) (not d!22643) (not d!22911) (not d!22631) (not d!22573) (not b!87322) (not b!87474) b_and!5259 (not d!22889) (not b!86231) (not b!86350) (not b!86571) (not d!22587) (not b!86983) (not d!22441) (not b!86120) (not b!86410) (not b!87188) (not bm!8231) (not b!86454) (not b!86692) (not b!86979) (not b!86726) (not d!22885) (not b!86539) (not b!86784) (not d!23199) (not b!87298) (not b_lambda!3869) (not b!86678) (not b!87468) (not d!22907) (not bm!8240) (not b!87120) (not d!22751) (not b!86810) (not b!86748) (not b!86611) (not b!86559) (not b!86575) (not bm!8279) (not d!22497) (not b!86890) (not d!23095) (not b!87251) (not d!22729) (not d!23011) (not b!86608) (not d!22547) (not b!87394) (not d!23053) (not b!87185) (not b!86713) (not b!86679) (not d!22849) (not d!22683) (not d!22533) (not b!86645) (not b!87140) (not d!22579) (not b!86541) (not b!86417) (not d!22511) (not d!23039) (not b!87191) (not b!86451) (not b!87216) (not bm!8301) (not d!22571) (not b!87091) (not b!86159) (not b!87130) (not d!22697) (not bm!8344) (not b!86555) (not d!22521) (not d!23037) (not b!86331) (not b!87084) (not d!22607) (not b!87088) (not d!22921) (not d!22667) (not b!86714) (not bm!8246) (not d!23153) (not b!86547) (not d!22409) (not d!22819) (not b!87231) (not b_lambda!3795) (not d!22939) (not d!23017) (not d!22685) (not bm!8341) (not b!86577) (not d!22655) (not d!22665) (not b!87020) (not b!86857) (not b!86909) (not b!87430) (not d!22637) (not bm!8332) (not b!87407) (not d!22973) (not b!86428) (not d!23209) (not b!87061) (not b!86270) (not d!23001) (not b!87261) (not d!23159) (not b!87069) (not d!22801) (not d!22417) (not b!87169) (not b!87075) (not b!87464) (not b!86130) (not b!86561) (not b!86525) (not d!23027) (not b!87040) (not b!87268) (not b!87051) (not b!87111) (not d!22513) (not b!86604) (not b!87446) (not b!87304) (not d!23175) (not b!87472) (not b!87048) (not b!86869) (not b!86583) (not b!86550) (not bm!8201) (not d!22457) (not d!22635) (not b!86588) (not b!86628) (not d!23025) (not b!86579) (not d!22455) (not bm!8308) (not b!87295) (not b!86593) (not b!86689) (not d!22411) (not b!86373) (not b!87190) (not b!87425) (not b!86512) (not b!86131) (not b!86591) (not b!86773) (not d!23247) (not b!87035) (not b!86364) (not b!87315) (not b!86860) (not bm!8258) (not b!87100) (not b!86735) (not d!22567) (not b!86457) (not d!22723) (not bm!8262) (not b!87426) (not b!86665) (not d!23013) (not d!23185) (not b!87241) (not bm!8253) (not d!22917) (not b!86372) (not b!86416) (not d!22451) (not d!22961) (not b!86495) (not b!86789) (not d!22383) (not b!87339) (not b!87127) (not b!86182) (not b!86128) (not b!87274) (not d!23265) (not b!87329) (not d!22909) (not b!86902) (not b!86408) (not b!86574) (not d!22957) (not b!86488) (not b!86695) (not b!87015) (not b!86518) (not b!87244) (not b!86366) (not b!86526) (not b!86845) (not b!87374) (not b!86491) (not b!86238) (not b_lambda!3859) (not bm!8257) (not b!86590) (not d!22933) (not d!23149) (not b!86592) (not b!87369) (not d!22755) (not d!22551) (not b!86584) (not bm!8284) (not b!87066) (not d!23119) (not b!86287) (not b!87366) (not d!23217) (not b!87186) (not b!86833) (not b!87293) (not b!86711) (not b!86795) (not b!87054) (not b!86440) (not b!86968) (not d!22507) (not b!87312) (not d!22645) (not b!87230) (not bm!8234) (not b_lambda!3787) (not d!22753) (not b!86497) (not d!22953) (not d!22419) (not bm!8271) (not b!87248) (not b_next!2233) (not b_lambda!3865) (not d!22487) (not b!87420) (not b!87264) (not b_lambda!3867) (not b!87287) (not b!86219) (not b!86422) (not b!86166) (not d!23019) (not d!22591) (not d!22747) (not b!86742) (not b!87317) (not b!86494) (not b!86125) (not bm!8313) (not d!22773) (not b!86425) (not d!22693) (not b!87085) (not b!86753) (not b!87335) (not b!86362) (not d!22361) (not bm!8315) (not b!87284) (not b!86729) (not d!22691) (not bm!8337) (not b!86289) (not b!86986) (not b!86537) (not b!86867) (not b!86903) (not d!22981) (not b!86167) (not b!86836) (not b!87198) (not d!22525) (not b!86545) (not bm!8219) (not bm!8208) (not b!86862) (not d!22623) (not b!86396) (not b!86776) (not d!22857) (not b!86632) (not d!22531) (not b!86222) (not b!86581) (not d!22761) (not d!22777) (not b!86755) (not bm!8250) (not b!86838) (not b!86888) (not d!22841) (not bm!8249) (not d!22439) (not d!23021) (not b!86341) (not d!22947) (not b!86876) (not b!86925) (not d!23207) (not b!87367) (not b!86818) (not bm!8282) (not b!87285) (not d!23239) (not b!86760) (not bm!8212) (not b!86801) (not b!87125) (not b!87123) (not bm!8243) (not d!22783) (not d!22481) (not b!86445) (not b!87025) (not b!86338) (not b!86358) (not b!86733) (not bm!8265) (not d!23215) (not d!22561) (not b!86184) (not b!86746) (not b!86950) (not bm!8311) (not b!86785) (not b!87242) (not b!86137) (not b!86143) (not b!86402) (not d!22641) (not b!86644) (not d!22959) (not b!86375) (not b!86150) (not b!86625) (not b!87078) (not d!22679) (not d!22615) (not b!86464) (not d!22883) (not b!86815) (not d!22937) (not d!23257) (not b!86449) (not b!86954) (not d!22495) (not b!87234) (not d!22941) (not b!86825) (not d!22865) (not b!87050) (not b!87437) (not d!22745) (not d!22523) (not b!86500) (not d!22387) (not b!86879) (not d!22401) (not d!22371) (not d!23179) (not bm!8207) (not d!22501) (not b!86188) (not b!86321) (not b_lambda!3851) (not d!23081) (not d!22639) (not b!87282) (not d!22853) (not b!87154) (not b!86443) (not d!23117) (not d!22559) (not b!86993) (not d!22625) (not b!86250) (not d!22545) (not bm!8204) (not d!23045) (not d!22541) (not b!87345) (not b!87413) (not b!86829) (not b!87307) (not b!86319) (not b!87029) (not d!22619) (not b!86146) (not b!86961) (not b!86719) (not d!22905) (not b!87159) (not b!86542) (not d!22537) (not b!86751) (not b!86996) (not b!86316) (not b!87165) (not b!87052) (not b!86918) (not b!87449) (not d!22517) (not b!86886) (not b!87379) (not b!86382) (not b!86664) (not bm!8268) (not b!86605) (not b!86806) (not d!22527) (not b_lambda!3863) (not b!87059) (not b!86154) (not d!22811) (not d!23225) (not b!86384) (not b!86803) (not b!87354) (not b!86696) (not d!23067) (not bm!8343) (not b!86864) (not b!86383) (not b!86467) (not b!86263) (not bm!8256) (not b!86662) (not b!86639) (not d!22597) (not b!86596) (not b!87467) (not b!87063) (not b!87145) (not b!86361) (not b!86548) (not b!87168) (not b!86674) (not b!86333) (not b!86754) (not b!86922) (not d!23079) (not d!22855) (not b!86616) (not b!86587) (not b!86900) (not b_lambda!3813) (not d!22759) (not b_lambda!3875) (not d!22951) (not d!22447) (not b!86226) (not b!87182) (not b!86374) (not d!23121) (not b!86659) (not b!86463) (not b!86114) (not d!22845) (not d!22577) (not d!22797) (not d!23091) (not b!87306) (not d!22449) (not b!87454) (not b!86286) (not bm!8305) (not b!86576) (not d!22681) (not b!86642) (not b!86523) (not bm!8218) (not b!87219) (not b!87447) (not b!86634) (not b!87245) (not d!22659) (not b!87173) (not b!86956) (not b!86790) (not b!87440) (not d!22677) (not b!87361) (not b!86871) (not b!87214) (not bm!8213) (not b!86824) (not b!87233) (not b!86485) (not b!86476) (not b!87405) (not b!86515) (not d!23105) (not b!86619) (not b!86538) (not d!22829) (not b!87451) (not b!86557) (not bm!8304) (not b!86915) (not b!87081) (not d!22897) (not d!22875) (not bm!8278) (not bm!8334) (not b!86437) (not b!87337) (not b!86527) (not d!23109) (not b!86775) (not b!86793) (not b!86381) (not b!87128) (not b!86652) (not d!23023) (not b!86882) (not b!86709) (not bm!8340) (not d!23137) (not b!87388) (not b!87252) (not b!86884) (not b!87429) (not b!87301) (not d!22793) (not b!87364) (not b!87444) (not b!86989) (not b!86809) (not b!87290) (not b!86554) (not bm!8300) (not d!22805) (not b!86228) (not b!86272) (not b!86685) (not d!22843) (not b!87151) (not b!86161) (not b!87455) (not b!87110) tp_is_empty!2533 (not b!86981) (not b!86392) (not b!86255) (not b!87399) (not b!86389) (not d!22443) (not d!22983) (not b!86840) (not d!23203) (not b!86848) (not bm!8237) (not d!22703) (not b!87011) (not b!87042) (not mapNonEmpty!3413) (not b!87060) (not b!87265) (not bm!8226) (not b!86779) (not d!23271) (not b!86937) (not b!86687) (not b!87068) (not d!22651) (not b!86781) (not b!87181) (not b!87348) (not b!86613) (not b!87237) (not b!86573) (not b!86480) (not b!87163) (not d!22965) (not b_lambda!3811) (not b!86912) (not d!22563) (not b!86229) (not b!86340) (not b!86387) (not b_lambda!3873))
(check-sat b_and!5257 b_and!5259 (not b_next!2233) (not b_next!2235))
