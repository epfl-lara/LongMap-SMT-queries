; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12192 () Bool)

(assert start!12192)

(declare-fun b!102942 () Bool)

(declare-fun b_free!2509 () Bool)

(declare-fun b_next!2509 () Bool)

(assert (=> b!102942 (= b_free!2509 (not b_next!2509))))

(declare-fun tp!9841 () Bool)

(declare-fun b_and!6353 () Bool)

(assert (=> b!102942 (= tp!9841 b_and!6353)))

(declare-fun b!102934 () Bool)

(declare-fun b_free!2511 () Bool)

(declare-fun b_next!2511 () Bool)

(assert (=> b!102934 (= b_free!2511 (not b_next!2511))))

(declare-fun tp!9843 () Bool)

(declare-fun b_and!6355 () Bool)

(assert (=> b!102934 (= tp!9843 b_and!6355)))

(declare-fun mapNonEmpty!3897 () Bool)

(declare-fun mapRes!3897 () Bool)

(declare-fun tp!9844 () Bool)

(declare-fun e!67068 () Bool)

(assert (=> mapNonEmpty!3897 (= mapRes!3897 (and tp!9844 e!67068))))

(declare-datatypes ((V!3209 0))(
  ( (V!3210 (val!1380 Int)) )
))
(declare-datatypes ((ValueCell!992 0))(
  ( (ValueCellFull!992 (v!2866 V!3209)) (EmptyCell!992) )
))
(declare-fun mapValue!3897 () ValueCell!992)

(declare-fun mapKey!3898 () (_ BitVec 32))

(declare-datatypes ((array!4311 0))(
  ( (array!4312 (arr!2044 (Array (_ BitVec 32) (_ BitVec 64))) (size!2299 (_ BitVec 32))) )
))
(declare-datatypes ((array!4313 0))(
  ( (array!4314 (arr!2045 (Array (_ BitVec 32) ValueCell!992)) (size!2300 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!892 0))(
  ( (LongMapFixedSize!893 (defaultEntry!2560 Int) (mask!6695 (_ BitVec 32)) (extraKeys!2369 (_ BitVec 32)) (zeroValue!2437 V!3209) (minValue!2437 V!3209) (_size!495 (_ BitVec 32)) (_keys!4261 array!4311) (_values!2543 array!4313) (_vacant!495 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!892)

(declare-fun mapRest!3898 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3897 (= (arr!2045 (_values!2543 newMap!16)) (store mapRest!3898 mapKey!3898 mapValue!3897))))

(declare-fun b!102932 () Bool)

(declare-fun tp_is_empty!2671 () Bool)

(assert (=> b!102932 (= e!67068 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3898 () Bool)

(declare-fun mapRes!3898 () Bool)

(declare-fun tp!9842 () Bool)

(declare-fun e!67073 () Bool)

(assert (=> mapNonEmpty!3898 (= mapRes!3898 (and tp!9842 e!67073))))

(declare-fun mapValue!3898 () ValueCell!992)

(declare-datatypes ((Cell!682 0))(
  ( (Cell!683 (v!2867 LongMapFixedSize!892)) )
))
(declare-datatypes ((LongMap!682 0))(
  ( (LongMap!683 (underlying!352 Cell!682)) )
))
(declare-fun thiss!992 () LongMap!682)

(declare-fun mapRest!3897 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapKey!3897 () (_ BitVec 32))

(assert (=> mapNonEmpty!3898 (= (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (store mapRest!3897 mapKey!3897 mapValue!3898))))

(declare-fun b!102933 () Bool)

(declare-fun e!67061 () Bool)

(declare-fun e!67064 () Bool)

(assert (=> b!102933 (= e!67061 (and e!67064 mapRes!3898))))

(declare-fun condMapEmpty!3897 () Bool)

(declare-fun mapDefault!3897 () ValueCell!992)

(assert (=> b!102933 (= condMapEmpty!3897 (= (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3897)))))

(declare-fun e!67066 () Bool)

(declare-fun e!67070 () Bool)

(declare-fun array_inv!1289 (array!4311) Bool)

(declare-fun array_inv!1290 (array!4313) Bool)

(assert (=> b!102934 (= e!67066 (and tp!9843 tp_is_empty!2671 (array_inv!1289 (_keys!4261 newMap!16)) (array_inv!1290 (_values!2543 newMap!16)) e!67070))))

(declare-fun b!102935 () Bool)

(declare-fun e!67067 () Bool)

(assert (=> b!102935 (= e!67067 tp_is_empty!2671)))

(declare-fun b!102936 () Bool)

(declare-fun e!67060 () Bool)

(declare-fun e!67058 () Bool)

(assert (=> b!102936 (= e!67060 (not e!67058))))

(declare-fun res!51431 () Bool)

(assert (=> b!102936 (=> res!51431 e!67058)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!102936 (= res!51431 (not (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992))))))))

(declare-datatypes ((tuple2!2372 0))(
  ( (tuple2!2373 (_1!1197 (_ BitVec 64)) (_2!1197 V!3209)) )
))
(declare-datatypes ((List!1612 0))(
  ( (Nil!1609) (Cons!1608 (h!2204 tuple2!2372) (t!5665 List!1612)) )
))
(declare-datatypes ((ListLongMap!1539 0))(
  ( (ListLongMap!1540 (toList!785 List!1612)) )
))
(declare-fun lt!52333 () ListLongMap!1539)

(declare-fun lt!52331 () tuple2!2372)

(declare-fun lt!52325 () tuple2!2372)

(declare-fun +!134 (ListLongMap!1539 tuple2!2372) ListLongMap!1539)

(assert (=> b!102936 (= (+!134 (+!134 lt!52333 lt!52331) lt!52325) (+!134 (+!134 lt!52333 lt!52325) lt!52331))))

(assert (=> b!102936 (= lt!52325 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lt!52329 () V!3209)

(assert (=> b!102936 (= lt!52331 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))

(declare-datatypes ((Unit!3141 0))(
  ( (Unit!3142) )
))
(declare-fun lt!52332 () Unit!3141)

(declare-fun addCommutativeForDiffKeys!46 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64) V!3209) Unit!3141)

(assert (=> b!102936 (= lt!52332 (addCommutativeForDiffKeys!46 lt!52333 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!99 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) ListLongMap!1539)

(assert (=> b!102936 (= lt!52333 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!102937 () Bool)

(declare-fun e!67069 () Bool)

(assert (=> b!102937 (= e!67069 e!67060)))

(declare-fun res!51428 () Bool)

(assert (=> b!102937 (=> (not res!51428) (not e!67060))))

(declare-datatypes ((tuple2!2374 0))(
  ( (tuple2!2375 (_1!1198 Bool) (_2!1198 LongMapFixedSize!892)) )
))
(declare-fun lt!52326 () tuple2!2374)

(assert (=> b!102937 (= res!51428 (and (_1!1198 lt!52326) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!52330 () Unit!3141)

(declare-fun e!67072 () Unit!3141)

(assert (=> b!102937 (= lt!52330 e!67072)))

(declare-fun c!17697 () Bool)

(declare-fun lt!52327 () ListLongMap!1539)

(declare-fun contains!816 (ListLongMap!1539 (_ BitVec 64)) Bool)

(assert (=> b!102937 (= c!17697 (contains!816 lt!52327 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun update!157 (LongMapFixedSize!892 (_ BitVec 64) V!3209) tuple2!2374)

(assert (=> b!102937 (= lt!52326 (update!157 newMap!16 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))

(declare-fun b!102938 () Bool)

(declare-fun e!67059 () Bool)

(assert (=> b!102938 (= e!67059 e!67069)))

(declare-fun res!51429 () Bool)

(assert (=> b!102938 (=> (not res!51429) (not e!67069))))

(assert (=> b!102938 (= res!51429 (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1325 (ValueCell!992 V!3209) V!3209)

(declare-fun dynLambda!382 (Int (_ BitVec 64)) V!3209)

(assert (=> b!102938 (= lt!52329 (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!102939 () Bool)

(assert (=> b!102939 (= e!67058 (= (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6695 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!102940 () Bool)

(declare-fun Unit!3143 () Unit!3141)

(assert (=> b!102940 (= e!67072 Unit!3143)))

(declare-fun b!102941 () Bool)

(assert (=> b!102941 (= e!67070 (and e!67067 mapRes!3897))))

(declare-fun condMapEmpty!3898 () Bool)

(declare-fun mapDefault!3898 () ValueCell!992)

(assert (=> b!102941 (= condMapEmpty!3898 (= (arr!2045 (_values!2543 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3898)))))

(declare-fun e!67065 () Bool)

(assert (=> b!102942 (= e!67065 (and tp!9841 tp_is_empty!2671 (array_inv!1289 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (array_inv!1290 (_values!2543 (v!2867 (underlying!352 thiss!992)))) e!67061))))

(declare-fun b!102943 () Bool)

(declare-fun e!67062 () Bool)

(assert (=> b!102943 (= e!67062 e!67059)))

(declare-fun res!51433 () Bool)

(assert (=> b!102943 (=> (not res!51433) (not e!67059))))

(declare-fun lt!52334 () ListLongMap!1539)

(assert (=> b!102943 (= res!51433 (= lt!52334 lt!52327))))

(declare-fun map!1266 (LongMapFixedSize!892) ListLongMap!1539)

(assert (=> b!102943 (= lt!52327 (map!1266 newMap!16))))

(declare-fun getCurrentListMap!462 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) ListLongMap!1539)

(assert (=> b!102943 (= lt!52334 (getCurrentListMap!462 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!102944 () Bool)

(assert (=> b!102944 (= e!67073 tp_is_empty!2671)))

(declare-fun b!102945 () Bool)

(assert (=> b!102945 (= e!67064 tp_is_empty!2671)))

(declare-fun b!102946 () Bool)

(declare-fun Unit!3144 () Unit!3141)

(assert (=> b!102946 (= e!67072 Unit!3144)))

(declare-fun lt!52328 () Unit!3141)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!108 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3141)

(assert (=> b!102946 (= lt!52328 (lemmaListMapContainsThenArrayContainsFrom!108 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4311 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!102946 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!52335 () Unit!3141)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4311 (_ BitVec 32) (_ BitVec 32)) Unit!3141)

(assert (=> b!102946 (= lt!52335 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1613 0))(
  ( (Nil!1610) (Cons!1609 (h!2205 (_ BitVec 64)) (t!5666 List!1613)) )
))
(declare-fun arrayNoDuplicates!0 (array!4311 (_ BitVec 32) List!1613) Bool)

(assert (=> b!102946 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) from!355 Nil!1610)))

(declare-fun lt!52324 () Unit!3141)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4311 (_ BitVec 32) (_ BitVec 64) List!1613) Unit!3141)

(assert (=> b!102946 (= lt!52324 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610)))))

(assert (=> b!102946 false))

(declare-fun res!51427 () Bool)

(assert (=> start!12192 (=> (not res!51427) (not e!67062))))

(declare-fun valid!418 (LongMap!682) Bool)

(assert (=> start!12192 (= res!51427 (valid!418 thiss!992))))

(assert (=> start!12192 e!67062))

(declare-fun e!67057 () Bool)

(assert (=> start!12192 e!67057))

(assert (=> start!12192 true))

(assert (=> start!12192 e!67066))

(declare-fun b!102947 () Bool)

(declare-fun res!51426 () Bool)

(assert (=> b!102947 (=> (not res!51426) (not e!67062))))

(declare-fun valid!419 (LongMapFixedSize!892) Bool)

(assert (=> b!102947 (= res!51426 (valid!419 newMap!16))))

(declare-fun mapIsEmpty!3897 () Bool)

(assert (=> mapIsEmpty!3897 mapRes!3897))

(declare-fun b!102948 () Bool)

(declare-fun e!67074 () Bool)

(assert (=> b!102948 (= e!67057 e!67074)))

(declare-fun mapIsEmpty!3898 () Bool)

(assert (=> mapIsEmpty!3898 mapRes!3898))

(declare-fun b!102949 () Bool)

(declare-fun res!51430 () Bool)

(assert (=> b!102949 (=> (not res!51430) (not e!67062))))

(assert (=> b!102949 (= res!51430 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6695 newMap!16)) (_size!495 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!102950 () Bool)

(declare-fun res!51432 () Bool)

(assert (=> b!102950 (=> (not res!51432) (not e!67062))))

(assert (=> b!102950 (= res!51432 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!102951 () Bool)

(assert (=> b!102951 (= e!67074 e!67065)))

(assert (= (and start!12192 res!51427) b!102950))

(assert (= (and b!102950 res!51432) b!102947))

(assert (= (and b!102947 res!51426) b!102949))

(assert (= (and b!102949 res!51430) b!102943))

(assert (= (and b!102943 res!51433) b!102938))

(assert (= (and b!102938 res!51429) b!102937))

(assert (= (and b!102937 c!17697) b!102946))

(assert (= (and b!102937 (not c!17697)) b!102940))

(assert (= (and b!102937 res!51428) b!102936))

(assert (= (and b!102936 (not res!51431)) b!102939))

(assert (= (and b!102933 condMapEmpty!3897) mapIsEmpty!3898))

(assert (= (and b!102933 (not condMapEmpty!3897)) mapNonEmpty!3898))

(get-info :version)

(assert (= (and mapNonEmpty!3898 ((_ is ValueCellFull!992) mapValue!3898)) b!102944))

(assert (= (and b!102933 ((_ is ValueCellFull!992) mapDefault!3897)) b!102945))

(assert (= b!102942 b!102933))

(assert (= b!102951 b!102942))

(assert (= b!102948 b!102951))

(assert (= start!12192 b!102948))

(assert (= (and b!102941 condMapEmpty!3898) mapIsEmpty!3897))

(assert (= (and b!102941 (not condMapEmpty!3898)) mapNonEmpty!3897))

(assert (= (and mapNonEmpty!3897 ((_ is ValueCellFull!992) mapValue!3897)) b!102932))

(assert (= (and b!102941 ((_ is ValueCellFull!992) mapDefault!3898)) b!102935))

(assert (= b!102934 b!102941))

(assert (= start!12192 b!102934))

(declare-fun b_lambda!4593 () Bool)

(assert (=> (not b_lambda!4593) (not b!102938)))

(declare-fun t!5662 () Bool)

(declare-fun tb!2021 () Bool)

(assert (=> (and b!102942 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) t!5662) tb!2021))

(declare-fun result!3411 () Bool)

(assert (=> tb!2021 (= result!3411 tp_is_empty!2671)))

(assert (=> b!102938 t!5662))

(declare-fun b_and!6357 () Bool)

(assert (= b_and!6353 (and (=> t!5662 result!3411) b_and!6357)))

(declare-fun tb!2023 () Bool)

(declare-fun t!5664 () Bool)

(assert (=> (and b!102934 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) t!5664) tb!2023))

(declare-fun result!3415 () Bool)

(assert (= result!3415 result!3411))

(assert (=> b!102938 t!5664))

(declare-fun b_and!6359 () Bool)

(assert (= b_and!6355 (and (=> t!5664 result!3415) b_and!6359)))

(declare-fun m!113535 () Bool)

(assert (=> b!102938 m!113535))

(declare-fun m!113537 () Bool)

(assert (=> b!102938 m!113537))

(declare-fun m!113539 () Bool)

(assert (=> b!102938 m!113539))

(assert (=> b!102938 m!113537))

(assert (=> b!102938 m!113539))

(declare-fun m!113541 () Bool)

(assert (=> b!102938 m!113541))

(declare-fun m!113543 () Bool)

(assert (=> b!102943 m!113543))

(declare-fun m!113545 () Bool)

(assert (=> b!102943 m!113545))

(declare-fun m!113547 () Bool)

(assert (=> b!102942 m!113547))

(declare-fun m!113549 () Bool)

(assert (=> b!102942 m!113549))

(declare-fun m!113551 () Bool)

(assert (=> b!102936 m!113551))

(declare-fun m!113553 () Bool)

(assert (=> b!102936 m!113553))

(declare-fun m!113555 () Bool)

(assert (=> b!102936 m!113555))

(declare-fun m!113557 () Bool)

(assert (=> b!102936 m!113557))

(assert (=> b!102936 m!113535))

(assert (=> b!102936 m!113555))

(declare-fun m!113559 () Bool)

(assert (=> b!102936 m!113559))

(assert (=> b!102936 m!113535))

(declare-fun m!113561 () Bool)

(assert (=> b!102936 m!113561))

(declare-fun m!113563 () Bool)

(assert (=> b!102936 m!113563))

(assert (=> b!102936 m!113551))

(declare-fun m!113565 () Bool)

(assert (=> mapNonEmpty!3897 m!113565))

(declare-fun m!113567 () Bool)

(assert (=> b!102934 m!113567))

(declare-fun m!113569 () Bool)

(assert (=> b!102934 m!113569))

(assert (=> b!102937 m!113535))

(assert (=> b!102937 m!113535))

(declare-fun m!113571 () Bool)

(assert (=> b!102937 m!113571))

(assert (=> b!102937 m!113535))

(declare-fun m!113573 () Bool)

(assert (=> b!102937 m!113573))

(declare-fun m!113575 () Bool)

(assert (=> mapNonEmpty!3898 m!113575))

(declare-fun m!113577 () Bool)

(assert (=> b!102946 m!113577))

(declare-fun m!113579 () Bool)

(assert (=> b!102946 m!113579))

(assert (=> b!102946 m!113535))

(declare-fun m!113581 () Bool)

(assert (=> b!102946 m!113581))

(assert (=> b!102946 m!113535))

(assert (=> b!102946 m!113535))

(declare-fun m!113583 () Bool)

(assert (=> b!102946 m!113583))

(assert (=> b!102946 m!113535))

(declare-fun m!113585 () Bool)

(assert (=> b!102946 m!113585))

(declare-fun m!113587 () Bool)

(assert (=> start!12192 m!113587))

(declare-fun m!113589 () Bool)

(assert (=> b!102947 m!113589))

(check-sat (not b!102942) (not start!12192) (not b!102937) (not b_next!2511) (not b!102943) tp_is_empty!2671 (not b_next!2509) b_and!6359 (not b_lambda!4593) (not b!102947) (not b!102934) (not b!102946) (not b!102938) (not mapNonEmpty!3897) (not mapNonEmpty!3898) b_and!6357 (not b!102936))
(check-sat b_and!6357 b_and!6359 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun b_lambda!4599 () Bool)

(assert (= b_lambda!4593 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4599)))

(check-sat (not b!102942) (not start!12192) (not b!102937) (not b_next!2511) (not b!102943) (not b_lambda!4599) tp_is_empty!2671 (not b_next!2509) b_and!6359 (not b!102947) (not b!102934) (not b!102946) (not b!102938) (not mapNonEmpty!3897) (not mapNonEmpty!3898) b_and!6357 (not b!102936))
(check-sat b_and!6357 b_and!6359 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun d!27643 () Bool)

(assert (=> d!27643 (not (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52410 () Unit!3141)

(declare-fun choose!68 (array!4311 (_ BitVec 32) (_ BitVec 64) List!1613) Unit!3141)

(assert (=> d!27643 (= lt!52410 (choose!68 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610)))))

(assert (=> d!27643 (bvslt (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27643 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610)) lt!52410)))

(declare-fun bs!4221 () Bool)

(assert (= bs!4221 d!27643))

(assert (=> bs!4221 m!113535))

(assert (=> bs!4221 m!113583))

(assert (=> bs!4221 m!113535))

(declare-fun m!113703 () Bool)

(assert (=> bs!4221 m!113703))

(assert (=> b!102946 d!27643))

(declare-fun d!27645 () Bool)

(assert (=> d!27645 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) from!355 Nil!1610)))

(declare-fun lt!52413 () Unit!3141)

(declare-fun choose!39 (array!4311 (_ BitVec 32) (_ BitVec 32)) Unit!3141)

(assert (=> d!27645 (= lt!52413 (choose!39 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!27645 (bvslt (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27645 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 from!355) lt!52413)))

(declare-fun bs!4222 () Bool)

(assert (= bs!4222 d!27645))

(assert (=> bs!4222 m!113579))

(declare-fun m!113705 () Bool)

(assert (=> bs!4222 m!113705))

(assert (=> b!102946 d!27645))

(declare-fun d!27647 () Bool)

(declare-fun res!51486 () Bool)

(declare-fun e!67187 () Bool)

(assert (=> d!27647 (=> res!51486 e!67187)))

(assert (=> d!27647 (= res!51486 (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27647 (= (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!67187)))

(declare-fun b!103082 () Bool)

(declare-fun e!67188 () Bool)

(assert (=> b!103082 (= e!67187 e!67188)))

(declare-fun res!51487 () Bool)

(assert (=> b!103082 (=> (not res!51487) (not e!67188))))

(assert (=> b!103082 (= res!51487 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103083 () Bool)

(assert (=> b!103083 (= e!67188 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!27647 (not res!51486)) b!103082))

(assert (= (and b!103082 res!51487) b!103083))

(declare-fun m!113707 () Bool)

(assert (=> d!27647 m!113707))

(assert (=> b!103083 m!113535))

(declare-fun m!113709 () Bool)

(assert (=> b!103083 m!113709))

(assert (=> b!102946 d!27647))

(declare-fun d!27649 () Bool)

(declare-fun e!67191 () Bool)

(assert (=> d!27649 e!67191))

(declare-fun c!17706 () Bool)

(assert (=> d!27649 (= c!17706 (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!52416 () Unit!3141)

(declare-fun choose!644 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3141)

(assert (=> d!27649 (= lt!52416 (choose!644 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(assert (=> d!27649 (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992))))))

(assert (=> d!27649 (= (lemmaListMapContainsThenArrayContainsFrom!108 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) lt!52416)))

(declare-fun b!103088 () Bool)

(assert (=> b!103088 (= e!67191 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103089 () Bool)

(assert (=> b!103089 (= e!67191 (ite (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27649 c!17706) b!103088))

(assert (= (and d!27649 (not c!17706)) b!103089))

(assert (=> d!27649 m!113535))

(declare-fun m!113711 () Bool)

(assert (=> d!27649 m!113711))

(assert (=> d!27649 m!113563))

(assert (=> b!103088 m!113535))

(assert (=> b!103088 m!113583))

(assert (=> b!102946 d!27649))

(declare-fun bm!10743 () Bool)

(declare-fun call!10746 () Bool)

(declare-fun c!17709 () Bool)

(assert (=> bm!10743 (= call!10746 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)))))

(declare-fun b!103100 () Bool)

(declare-fun e!67202 () Bool)

(declare-fun e!67203 () Bool)

(assert (=> b!103100 (= e!67202 e!67203)))

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!103100 (= c!17709 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103101 () Bool)

(assert (=> b!103101 (= e!67203 call!10746)))

(declare-fun d!27651 () Bool)

(declare-fun res!51495 () Bool)

(declare-fun e!67201 () Bool)

(assert (=> d!27651 (=> res!51495 e!67201)))

(assert (=> d!27651 (= res!51495 (bvsge from!355 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!27651 (= (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) from!355 Nil!1610) e!67201)))

(declare-fun b!103102 () Bool)

(assert (=> b!103102 (= e!67201 e!67202)))

(declare-fun res!51496 () Bool)

(assert (=> b!103102 (=> (not res!51496) (not e!67202))))

(declare-fun e!67200 () Bool)

(assert (=> b!103102 (= res!51496 (not e!67200))))

(declare-fun res!51494 () Bool)

(assert (=> b!103102 (=> (not res!51494) (not e!67200))))

(assert (=> b!103102 (= res!51494 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103103 () Bool)

(assert (=> b!103103 (= e!67203 call!10746)))

(declare-fun b!103104 () Bool)

(declare-fun contains!818 (List!1613 (_ BitVec 64)) Bool)

(assert (=> b!103104 (= e!67200 (contains!818 Nil!1610 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27651 (not res!51495)) b!103102))

(assert (= (and b!103102 res!51494) b!103104))

(assert (= (and b!103102 res!51496) b!103100))

(assert (= (and b!103100 c!17709) b!103101))

(assert (= (and b!103100 (not c!17709)) b!103103))

(assert (= (or b!103101 b!103103) bm!10743))

(assert (=> bm!10743 m!113535))

(declare-fun m!113713 () Bool)

(assert (=> bm!10743 m!113713))

(assert (=> b!103100 m!113535))

(assert (=> b!103100 m!113535))

(declare-fun m!113715 () Bool)

(assert (=> b!103100 m!113715))

(assert (=> b!103102 m!113535))

(assert (=> b!103102 m!113535))

(assert (=> b!103102 m!113715))

(assert (=> b!103104 m!113535))

(assert (=> b!103104 m!113535))

(declare-fun m!113717 () Bool)

(assert (=> b!103104 m!113717))

(assert (=> b!102946 d!27651))

(declare-fun b!103129 () Bool)

(declare-fun e!67219 () Bool)

(declare-fun lt!52435 () ListLongMap!1539)

(declare-fun isEmpty!371 (ListLongMap!1539) Bool)

(assert (=> b!103129 (= e!67219 (isEmpty!371 lt!52435))))

(declare-fun d!27653 () Bool)

(declare-fun e!67224 () Bool)

(assert (=> d!27653 e!67224))

(declare-fun res!51505 () Bool)

(assert (=> d!27653 (=> (not res!51505) (not e!67224))))

(assert (=> d!27653 (= res!51505 (not (contains!816 lt!52435 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67220 () ListLongMap!1539)

(assert (=> d!27653 (= lt!52435 e!67220)))

(declare-fun c!17721 () Bool)

(assert (=> d!27653 (= c!17721 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!27653 (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992))))))

(assert (=> d!27653 (= (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) lt!52435)))

(declare-fun b!103130 () Bool)

(declare-fun e!67222 () Bool)

(assert (=> b!103130 (= e!67222 e!67219)))

(declare-fun c!17719 () Bool)

(assert (=> b!103130 (= c!17719 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103131 () Bool)

(assert (=> b!103131 (= e!67220 (ListLongMap!1540 Nil!1609))))

(declare-fun b!103132 () Bool)

(assert (=> b!103132 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> b!103132 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67218 () Bool)

(declare-fun apply!97 (ListLongMap!1539 (_ BitVec 64)) V!3209)

(assert (=> b!103132 (= e!67218 (= (apply!97 lt!52435 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103133 () Bool)

(declare-fun e!67221 () Bool)

(assert (=> b!103133 (= e!67221 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103133 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!103134 () Bool)

(assert (=> b!103134 (= e!67224 e!67222)))

(declare-fun c!17720 () Bool)

(assert (=> b!103134 (= c!17720 e!67221)))

(declare-fun res!51508 () Bool)

(assert (=> b!103134 (=> (not res!51508) (not e!67221))))

(assert (=> b!103134 (= res!51508 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103135 () Bool)

(declare-fun lt!52432 () Unit!3141)

(declare-fun lt!52434 () Unit!3141)

(assert (=> b!103135 (= lt!52432 lt!52434)))

(declare-fun lt!52436 () ListLongMap!1539)

(declare-fun lt!52437 () (_ BitVec 64))

(declare-fun lt!52433 () V!3209)

(declare-fun lt!52431 () (_ BitVec 64))

(assert (=> b!103135 (not (contains!816 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)) lt!52437))))

(declare-fun addStillNotContains!46 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3141)

(assert (=> b!103135 (= lt!52434 (addStillNotContains!46 lt!52436 lt!52431 lt!52433 lt!52437))))

(assert (=> b!103135 (= lt!52437 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103135 (= lt!52433 (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103135 (= lt!52431 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!10749 () ListLongMap!1539)

(assert (=> b!103135 (= lt!52436 call!10749)))

(declare-fun e!67223 () ListLongMap!1539)

(assert (=> b!103135 (= e!67223 (+!134 call!10749 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!103136 () Bool)

(assert (=> b!103136 (= e!67223 call!10749)))

(declare-fun b!103137 () Bool)

(assert (=> b!103137 (= e!67222 e!67218)))

(assert (=> b!103137 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun res!51507 () Bool)

(assert (=> b!103137 (= res!51507 (contains!816 lt!52435 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103137 (=> (not res!51507) (not e!67218))))

(declare-fun bm!10746 () Bool)

(assert (=> bm!10746 (= call!10749 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!103138 () Bool)

(assert (=> b!103138 (= e!67219 (= lt!52435 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103139 () Bool)

(assert (=> b!103139 (= e!67220 e!67223)))

(declare-fun c!17718 () Bool)

(assert (=> b!103139 (= c!17718 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103140 () Bool)

(declare-fun res!51506 () Bool)

(assert (=> b!103140 (=> (not res!51506) (not e!67224))))

(assert (=> b!103140 (= res!51506 (not (contains!816 lt!52435 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27653 c!17721) b!103131))

(assert (= (and d!27653 (not c!17721)) b!103139))

(assert (= (and b!103139 c!17718) b!103135))

(assert (= (and b!103139 (not c!17718)) b!103136))

(assert (= (or b!103135 b!103136) bm!10746))

(assert (= (and d!27653 res!51505) b!103140))

(assert (= (and b!103140 res!51506) b!103134))

(assert (= (and b!103134 res!51508) b!103133))

(assert (= (and b!103134 c!17720) b!103137))

(assert (= (and b!103134 (not c!17720)) b!103130))

(assert (= (and b!103137 res!51507) b!103132))

(assert (= (and b!103130 c!17719) b!103138))

(assert (= (and b!103130 (not c!17719)) b!103129))

(declare-fun b_lambda!4601 () Bool)

(assert (=> (not b_lambda!4601) (not b!103132)))

(assert (=> b!103132 t!5662))

(declare-fun b_and!6377 () Bool)

(assert (= b_and!6357 (and (=> t!5662 result!3411) b_and!6377)))

(assert (=> b!103132 t!5664))

(declare-fun b_and!6379 () Bool)

(assert (= b_and!6359 (and (=> t!5664 result!3415) b_and!6379)))

(declare-fun b_lambda!4603 () Bool)

(assert (=> (not b_lambda!4603) (not b!103135)))

(assert (=> b!103135 t!5662))

(declare-fun b_and!6381 () Bool)

(assert (= b_and!6377 (and (=> t!5662 result!3411) b_and!6381)))

(assert (=> b!103135 t!5664))

(declare-fun b_and!6383 () Bool)

(assert (= b_and!6379 (and (=> t!5664 result!3415) b_and!6383)))

(assert (=> b!103133 m!113707))

(assert (=> b!103133 m!113707))

(declare-fun m!113719 () Bool)

(assert (=> b!103133 m!113719))

(declare-fun m!113721 () Bool)

(assert (=> b!103129 m!113721))

(assert (=> b!103137 m!113707))

(assert (=> b!103137 m!113707))

(declare-fun m!113723 () Bool)

(assert (=> b!103137 m!113723))

(declare-fun m!113725 () Bool)

(assert (=> d!27653 m!113725))

(assert (=> d!27653 m!113563))

(declare-fun m!113727 () Bool)

(assert (=> b!103140 m!113727))

(declare-fun m!113729 () Bool)

(assert (=> b!103132 m!113729))

(assert (=> b!103132 m!113707))

(declare-fun m!113731 () Bool)

(assert (=> b!103132 m!113731))

(assert (=> b!103132 m!113539))

(assert (=> b!103132 m!113729))

(assert (=> b!103132 m!113539))

(declare-fun m!113733 () Bool)

(assert (=> b!103132 m!113733))

(assert (=> b!103132 m!113707))

(declare-fun m!113735 () Bool)

(assert (=> bm!10746 m!113735))

(assert (=> b!103138 m!113735))

(assert (=> b!103139 m!113707))

(assert (=> b!103139 m!113707))

(assert (=> b!103139 m!113719))

(assert (=> b!103135 m!113729))

(declare-fun m!113737 () Bool)

(assert (=> b!103135 m!113737))

(assert (=> b!103135 m!113729))

(assert (=> b!103135 m!113539))

(assert (=> b!103135 m!113733))

(declare-fun m!113739 () Bool)

(assert (=> b!103135 m!113739))

(declare-fun m!113741 () Bool)

(assert (=> b!103135 m!113741))

(assert (=> b!103135 m!113707))

(declare-fun m!113743 () Bool)

(assert (=> b!103135 m!113743))

(assert (=> b!103135 m!113539))

(assert (=> b!103135 m!113739))

(assert (=> b!102936 d!27653))

(declare-fun d!27655 () Bool)

(declare-fun e!67227 () Bool)

(assert (=> d!27655 e!67227))

(declare-fun res!51514 () Bool)

(assert (=> d!27655 (=> (not res!51514) (not e!67227))))

(declare-fun lt!52449 () ListLongMap!1539)

(assert (=> d!27655 (= res!51514 (contains!816 lt!52449 (_1!1197 lt!52325)))))

(declare-fun lt!52447 () List!1612)

(assert (=> d!27655 (= lt!52449 (ListLongMap!1540 lt!52447))))

(declare-fun lt!52446 () Unit!3141)

(declare-fun lt!52448 () Unit!3141)

(assert (=> d!27655 (= lt!52446 lt!52448)))

(declare-datatypes ((Option!159 0))(
  ( (Some!158 (v!2873 V!3209)) (None!157) )
))
(declare-fun getValueByKey!153 (List!1612 (_ BitVec 64)) Option!159)

(assert (=> d!27655 (= (getValueByKey!153 lt!52447 (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325)))))

(declare-fun lemmaContainsTupThenGetReturnValue!72 (List!1612 (_ BitVec 64) V!3209) Unit!3141)

(assert (=> d!27655 (= lt!52448 (lemmaContainsTupThenGetReturnValue!72 lt!52447 (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun insertStrictlySorted!75 (List!1612 (_ BitVec 64) V!3209) List!1612)

(assert (=> d!27655 (= lt!52447 (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(assert (=> d!27655 (= (+!134 lt!52333 lt!52325) lt!52449)))

(declare-fun b!103145 () Bool)

(declare-fun res!51513 () Bool)

(assert (=> b!103145 (=> (not res!51513) (not e!67227))))

(assert (=> b!103145 (= res!51513 (= (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325))))))

(declare-fun b!103146 () Bool)

(declare-fun contains!819 (List!1612 tuple2!2372) Bool)

(assert (=> b!103146 (= e!67227 (contains!819 (toList!785 lt!52449) lt!52325))))

(assert (= (and d!27655 res!51514) b!103145))

(assert (= (and b!103145 res!51513) b!103146))

(declare-fun m!113745 () Bool)

(assert (=> d!27655 m!113745))

(declare-fun m!113747 () Bool)

(assert (=> d!27655 m!113747))

(declare-fun m!113749 () Bool)

(assert (=> d!27655 m!113749))

(declare-fun m!113751 () Bool)

(assert (=> d!27655 m!113751))

(declare-fun m!113753 () Bool)

(assert (=> b!103145 m!113753))

(declare-fun m!113755 () Bool)

(assert (=> b!103146 m!113755))

(assert (=> b!102936 d!27655))

(declare-fun d!27657 () Bool)

(declare-fun e!67228 () Bool)

(assert (=> d!27657 e!67228))

(declare-fun res!51516 () Bool)

(assert (=> d!27657 (=> (not res!51516) (not e!67228))))

(declare-fun lt!52453 () ListLongMap!1539)

(assert (=> d!27657 (= res!51516 (contains!816 lt!52453 (_1!1197 lt!52325)))))

(declare-fun lt!52451 () List!1612)

(assert (=> d!27657 (= lt!52453 (ListLongMap!1540 lt!52451))))

(declare-fun lt!52450 () Unit!3141)

(declare-fun lt!52452 () Unit!3141)

(assert (=> d!27657 (= lt!52450 lt!52452)))

(assert (=> d!27657 (= (getValueByKey!153 lt!52451 (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325)))))

(assert (=> d!27657 (= lt!52452 (lemmaContainsTupThenGetReturnValue!72 lt!52451 (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(assert (=> d!27657 (= lt!52451 (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 lt!52331)) (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(assert (=> d!27657 (= (+!134 (+!134 lt!52333 lt!52331) lt!52325) lt!52453)))

(declare-fun b!103147 () Bool)

(declare-fun res!51515 () Bool)

(assert (=> b!103147 (=> (not res!51515) (not e!67228))))

(assert (=> b!103147 (= res!51515 (= (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325))))))

(declare-fun b!103148 () Bool)

(assert (=> b!103148 (= e!67228 (contains!819 (toList!785 lt!52453) lt!52325))))

(assert (= (and d!27657 res!51516) b!103147))

(assert (= (and b!103147 res!51515) b!103148))

(declare-fun m!113757 () Bool)

(assert (=> d!27657 m!113757))

(declare-fun m!113759 () Bool)

(assert (=> d!27657 m!113759))

(declare-fun m!113761 () Bool)

(assert (=> d!27657 m!113761))

(declare-fun m!113763 () Bool)

(assert (=> d!27657 m!113763))

(declare-fun m!113765 () Bool)

(assert (=> b!103147 m!113765))

(declare-fun m!113767 () Bool)

(assert (=> b!103148 m!113767))

(assert (=> b!102936 d!27657))

(declare-fun d!27659 () Bool)

(declare-fun e!67229 () Bool)

(assert (=> d!27659 e!67229))

(declare-fun res!51518 () Bool)

(assert (=> d!27659 (=> (not res!51518) (not e!67229))))

(declare-fun lt!52457 () ListLongMap!1539)

(assert (=> d!27659 (= res!51518 (contains!816 lt!52457 (_1!1197 lt!52331)))))

(declare-fun lt!52455 () List!1612)

(assert (=> d!27659 (= lt!52457 (ListLongMap!1540 lt!52455))))

(declare-fun lt!52454 () Unit!3141)

(declare-fun lt!52456 () Unit!3141)

(assert (=> d!27659 (= lt!52454 lt!52456)))

(assert (=> d!27659 (= (getValueByKey!153 lt!52455 (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331)))))

(assert (=> d!27659 (= lt!52456 (lemmaContainsTupThenGetReturnValue!72 lt!52455 (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(assert (=> d!27659 (= lt!52455 (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(assert (=> d!27659 (= (+!134 lt!52333 lt!52331) lt!52457)))

(declare-fun b!103149 () Bool)

(declare-fun res!51517 () Bool)

(assert (=> b!103149 (=> (not res!51517) (not e!67229))))

(assert (=> b!103149 (= res!51517 (= (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331))))))

(declare-fun b!103150 () Bool)

(assert (=> b!103150 (= e!67229 (contains!819 (toList!785 lt!52457) lt!52331))))

(assert (= (and d!27659 res!51518) b!103149))

(assert (= (and b!103149 res!51517) b!103150))

(declare-fun m!113769 () Bool)

(assert (=> d!27659 m!113769))

(declare-fun m!113771 () Bool)

(assert (=> d!27659 m!113771))

(declare-fun m!113773 () Bool)

(assert (=> d!27659 m!113773))

(declare-fun m!113775 () Bool)

(assert (=> d!27659 m!113775))

(declare-fun m!113777 () Bool)

(assert (=> b!103149 m!113777))

(declare-fun m!113779 () Bool)

(assert (=> b!103150 m!113779))

(assert (=> b!102936 d!27659))

(declare-fun d!27661 () Bool)

(assert (=> d!27661 (= (+!134 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (+!134 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun lt!52460 () Unit!3141)

(declare-fun choose!645 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64) V!3209) Unit!3141)

(assert (=> d!27661 (= lt!52460 (choose!645 lt!52333 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))

(assert (=> d!27661 (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27661 (= (addCommutativeForDiffKeys!46 lt!52333 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) lt!52460)))

(declare-fun bs!4223 () Bool)

(assert (= bs!4223 d!27661))

(declare-fun m!113781 () Bool)

(assert (=> bs!4223 m!113781))

(declare-fun m!113783 () Bool)

(assert (=> bs!4223 m!113783))

(assert (=> bs!4223 m!113535))

(declare-fun m!113785 () Bool)

(assert (=> bs!4223 m!113785))

(assert (=> bs!4223 m!113781))

(declare-fun m!113787 () Bool)

(assert (=> bs!4223 m!113787))

(declare-fun m!113789 () Bool)

(assert (=> bs!4223 m!113789))

(assert (=> bs!4223 m!113787))

(assert (=> b!102936 d!27661))

(declare-fun d!27663 () Bool)

(declare-fun e!67230 () Bool)

(assert (=> d!27663 e!67230))

(declare-fun res!51520 () Bool)

(assert (=> d!27663 (=> (not res!51520) (not e!67230))))

(declare-fun lt!52464 () ListLongMap!1539)

(assert (=> d!27663 (= res!51520 (contains!816 lt!52464 (_1!1197 lt!52331)))))

(declare-fun lt!52462 () List!1612)

(assert (=> d!27663 (= lt!52464 (ListLongMap!1540 lt!52462))))

(declare-fun lt!52461 () Unit!3141)

(declare-fun lt!52463 () Unit!3141)

(assert (=> d!27663 (= lt!52461 lt!52463)))

(assert (=> d!27663 (= (getValueByKey!153 lt!52462 (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331)))))

(assert (=> d!27663 (= lt!52463 (lemmaContainsTupThenGetReturnValue!72 lt!52462 (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(assert (=> d!27663 (= lt!52462 (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 lt!52325)) (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(assert (=> d!27663 (= (+!134 (+!134 lt!52333 lt!52325) lt!52331) lt!52464)))

(declare-fun b!103151 () Bool)

(declare-fun res!51519 () Bool)

(assert (=> b!103151 (=> (not res!51519) (not e!67230))))

(assert (=> b!103151 (= res!51519 (= (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331))))))

(declare-fun b!103152 () Bool)

(assert (=> b!103152 (= e!67230 (contains!819 (toList!785 lt!52464) lt!52331))))

(assert (= (and d!27663 res!51520) b!103151))

(assert (= (and b!103151 res!51519) b!103152))

(declare-fun m!113791 () Bool)

(assert (=> d!27663 m!113791))

(declare-fun m!113793 () Bool)

(assert (=> d!27663 m!113793))

(declare-fun m!113795 () Bool)

(assert (=> d!27663 m!113795))

(declare-fun m!113797 () Bool)

(assert (=> d!27663 m!113797))

(declare-fun m!113799 () Bool)

(assert (=> b!103151 m!113799))

(declare-fun m!113801 () Bool)

(assert (=> b!103152 m!113801))

(assert (=> b!102936 d!27663))

(declare-fun d!27665 () Bool)

(assert (=> d!27665 (= (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992)))) (and (or (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000001111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000011111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000001111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000011111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000001111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000011111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000001111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000011111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000001111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000011111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000001111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000011111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000001111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000011111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000111111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000001111111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000011111111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000111111111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00001111111111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00011111111111111111111111111111) (= (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!102936 d!27665))

(declare-fun d!27667 () Bool)

(declare-fun res!51527 () Bool)

(declare-fun e!67233 () Bool)

(assert (=> d!27667 (=> (not res!51527) (not e!67233))))

(declare-fun simpleValid!73 (LongMapFixedSize!892) Bool)

(assert (=> d!27667 (= res!51527 (simpleValid!73 newMap!16))))

(assert (=> d!27667 (= (valid!419 newMap!16) e!67233)))

(declare-fun b!103159 () Bool)

(declare-fun res!51528 () Bool)

(assert (=> b!103159 (=> (not res!51528) (not e!67233))))

(declare-fun arrayCountValidKeys!0 (array!4311 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!103159 (= res!51528 (= (arrayCountValidKeys!0 (_keys!4261 newMap!16) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (_size!495 newMap!16)))))

(declare-fun b!103160 () Bool)

(declare-fun res!51529 () Bool)

(assert (=> b!103160 (=> (not res!51529) (not e!67233))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4311 (_ BitVec 32)) Bool)

(assert (=> b!103160 (= res!51529 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!103161 () Bool)

(assert (=> b!103161 (= e!67233 (arrayNoDuplicates!0 (_keys!4261 newMap!16) #b00000000000000000000000000000000 Nil!1610))))

(assert (= (and d!27667 res!51527) b!103159))

(assert (= (and b!103159 res!51528) b!103160))

(assert (= (and b!103160 res!51529) b!103161))

(declare-fun m!113803 () Bool)

(assert (=> d!27667 m!113803))

(declare-fun m!113805 () Bool)

(assert (=> b!103159 m!113805))

(declare-fun m!113807 () Bool)

(assert (=> b!103160 m!113807))

(declare-fun m!113809 () Bool)

(assert (=> b!103161 m!113809))

(assert (=> b!102947 d!27667))

(declare-fun d!27669 () Bool)

(assert (=> d!27669 (= (array_inv!1289 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvsge (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!102942 d!27669))

(declare-fun d!27671 () Bool)

(assert (=> d!27671 (= (array_inv!1290 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvsge (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!102942 d!27671))

(declare-fun d!27673 () Bool)

(declare-fun e!67239 () Bool)

(assert (=> d!27673 e!67239))

(declare-fun res!51532 () Bool)

(assert (=> d!27673 (=> res!51532 e!67239)))

(declare-fun lt!52475 () Bool)

(assert (=> d!27673 (= res!51532 (not lt!52475))))

(declare-fun lt!52474 () Bool)

(assert (=> d!27673 (= lt!52475 lt!52474)))

(declare-fun lt!52476 () Unit!3141)

(declare-fun e!67238 () Unit!3141)

(assert (=> d!27673 (= lt!52476 e!67238)))

(declare-fun c!17724 () Bool)

(assert (=> d!27673 (= c!17724 lt!52474)))

(declare-fun containsKey!157 (List!1612 (_ BitVec 64)) Bool)

(assert (=> d!27673 (= lt!52474 (containsKey!157 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27673 (= (contains!816 lt!52327 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!52475)))

(declare-fun b!103168 () Bool)

(declare-fun lt!52473 () Unit!3141)

(assert (=> b!103168 (= e!67238 lt!52473)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!106 (List!1612 (_ BitVec 64)) Unit!3141)

(assert (=> b!103168 (= lt!52473 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun isDefined!107 (Option!159) Bool)

(assert (=> b!103168 (isDefined!107 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103169 () Bool)

(declare-fun Unit!3147 () Unit!3141)

(assert (=> b!103169 (= e!67238 Unit!3147)))

(declare-fun b!103170 () Bool)

(assert (=> b!103170 (= e!67239 (isDefined!107 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (= (and d!27673 c!17724) b!103168))

(assert (= (and d!27673 (not c!17724)) b!103169))

(assert (= (and d!27673 (not res!51532)) b!103170))

(assert (=> d!27673 m!113535))

(declare-fun m!113811 () Bool)

(assert (=> d!27673 m!113811))

(assert (=> b!103168 m!113535))

(declare-fun m!113813 () Bool)

(assert (=> b!103168 m!113813))

(assert (=> b!103168 m!113535))

(declare-fun m!113815 () Bool)

(assert (=> b!103168 m!113815))

(assert (=> b!103168 m!113815))

(declare-fun m!113817 () Bool)

(assert (=> b!103168 m!113817))

(assert (=> b!103170 m!113535))

(assert (=> b!103170 m!113815))

(assert (=> b!103170 m!113815))

(assert (=> b!103170 m!113817))

(assert (=> b!102937 d!27673))

(declare-fun bm!10795 () Bool)

(declare-fun call!10807 () ListLongMap!1539)

(assert (=> bm!10795 (= call!10807 (map!1266 newMap!16))))

(declare-fun bm!10796 () Bool)

(declare-fun call!10809 () Unit!3141)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3141)

(assert (=> bm!10796 (= call!10809 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun b!103255 () Bool)

(declare-fun e!67293 () Bool)

(declare-fun e!67291 () Bool)

(assert (=> b!103255 (= e!67293 e!67291)))

(declare-fun res!51567 () Bool)

(declare-fun call!10812 () Bool)

(assert (=> b!103255 (= res!51567 call!10812)))

(assert (=> b!103255 (=> (not res!51567) (not e!67291))))

(declare-fun call!10800 () ListLongMap!1539)

(declare-fun b!103256 () Bool)

(declare-fun e!67287 () Bool)

(assert (=> b!103256 (= e!67287 (= call!10800 (+!134 call!10807 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103257 () Bool)

(declare-fun lt!52546 () Unit!3141)

(declare-fun lt!52551 () Unit!3141)

(assert (=> b!103257 (= lt!52546 lt!52551)))

(declare-fun call!10801 () ListLongMap!1539)

(declare-datatypes ((SeekEntryResult!261 0))(
  ( (MissingZero!261 (index!3191 (_ BitVec 32))) (Found!261 (index!3192 (_ BitVec 32))) (Intermediate!261 (undefined!1073 Bool) (index!3193 (_ BitVec 32)) (x!13502 (_ BitVec 32))) (Undefined!261) (MissingVacant!261 (index!3194 (_ BitVec 32))) )
))
(declare-fun lt!52554 () SeekEntryResult!261)

(assert (=> b!103257 (contains!816 call!10801 (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))

(declare-fun lt!52532 () array!4313)

(declare-fun lemmaValidKeyInArrayIsInListMap!105 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) Unit!3141)

(assert (=> b!103257 (= lt!52551 (lemmaValidKeyInArrayIsInListMap!105 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (defaultEntry!2560 newMap!16)))))

(assert (=> b!103257 (= lt!52532 (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))))

(declare-fun lt!52549 () Unit!3141)

(declare-fun lt!52555 () Unit!3141)

(assert (=> b!103257 (= lt!52549 lt!52555)))

(declare-fun call!10813 () ListLongMap!1539)

(declare-fun call!10802 () ListLongMap!1539)

(assert (=> b!103257 (= call!10813 call!10802)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3141)

(assert (=> b!103257 (= lt!52555 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52533 () Unit!3141)

(declare-fun e!67295 () Unit!3141)

(assert (=> b!103257 (= lt!52533 e!67295)))

(declare-fun c!17755 () Bool)

(declare-fun call!10806 () Bool)

(assert (=> b!103257 (= c!17755 call!10806)))

(declare-fun e!67305 () tuple2!2374)

(assert (=> b!103257 (= e!67305 (tuple2!2375 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (_size!495 newMap!16) (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (_vacant!495 newMap!16))))))

(declare-fun b!103258 () Bool)

(declare-fun e!67286 () ListLongMap!1539)

(assert (=> b!103258 (= e!67286 call!10802)))

(declare-fun b!103259 () Bool)

(declare-fun e!67301 () Bool)

(assert (=> b!103259 (= e!67301 e!67287)))

(declare-fun res!51571 () Bool)

(assert (=> b!103259 (= res!51571 (contains!816 call!10800 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!103259 (=> (not res!51571) (not e!67287))))

(declare-fun b!103260 () Bool)

(declare-fun e!67285 () Unit!3141)

(declare-fun Unit!3148 () Unit!3141)

(assert (=> b!103260 (= e!67285 Unit!3148)))

(declare-fun lt!52547 () Unit!3141)

(declare-fun call!10817 () Unit!3141)

(assert (=> b!103260 (= lt!52547 call!10817)))

(declare-fun lt!52539 () SeekEntryResult!261)

(declare-fun call!10803 () SeekEntryResult!261)

(assert (=> b!103260 (= lt!52539 call!10803)))

(declare-fun res!51564 () Bool)

(assert (=> b!103260 (= res!51564 ((_ is Found!261) lt!52539))))

(declare-fun e!67297 () Bool)

(assert (=> b!103260 (=> (not res!51564) (not e!67297))))

(assert (=> b!103260 e!67297))

(declare-fun lt!52540 () Unit!3141)

(assert (=> b!103260 (= lt!52540 lt!52547)))

(assert (=> b!103260 false))

(declare-fun b!103261 () Bool)

(declare-fun res!51566 () Bool)

(declare-fun e!67298 () Bool)

(assert (=> b!103261 (=> (not res!51566) (not e!67298))))

(declare-fun lt!52548 () SeekEntryResult!261)

(assert (=> b!103261 (= res!51566 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!52548)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10797 () Bool)

(declare-fun c!17757 () Bool)

(declare-fun call!10811 () tuple2!2374)

(declare-fun updateHelperNewKey!46 (LongMapFixedSize!892 (_ BitVec 64) V!3209 (_ BitVec 32)) tuple2!2374)

(assert (=> bm!10797 (= call!10811 (updateHelperNewKey!46 newMap!16 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))

(declare-fun bm!10798 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3141)

(assert (=> bm!10798 (= call!10817 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10799 () Bool)

(declare-fun call!10815 () SeekEntryResult!261)

(declare-fun call!10814 () SeekEntryResult!261)

(assert (=> bm!10799 (= call!10815 call!10814)))

(declare-fun b!103262 () Bool)

(declare-fun lt!52553 () Unit!3141)

(declare-fun lt!52541 () Unit!3141)

(assert (=> b!103262 (= lt!52553 lt!52541)))

(declare-fun call!10818 () ListLongMap!1539)

(declare-fun call!10808 () ListLongMap!1539)

(assert (=> b!103262 (= call!10818 call!10808)))

(declare-fun lt!52552 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!46 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3141)

(assert (=> b!103262 (= lt!52541 (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52552 (zeroValue!2437 newMap!16) lt!52329 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)))))

(assert (=> b!103262 (= lt!52552 (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!67292 () tuple2!2374)

(assert (=> b!103262 (= e!67292 (tuple2!2375 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6695 newMap!16) (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) lt!52329 (minValue!2437 newMap!16) (_size!495 newMap!16) (_keys!4261 newMap!16) (_values!2543 newMap!16) (_vacant!495 newMap!16))))))

(declare-fun bm!10800 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4311 (_ BitVec 32)) SeekEntryResult!261)

(assert (=> bm!10800 (= call!10814 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!103263 () Bool)

(declare-fun e!67299 () ListLongMap!1539)

(declare-fun call!10819 () ListLongMap!1539)

(assert (=> b!103263 (= e!67299 call!10819)))

(declare-fun b!103264 () Bool)

(declare-fun res!51561 () Bool)

(declare-fun call!10805 () Bool)

(assert (=> b!103264 (= res!51561 call!10805)))

(assert (=> b!103264 (=> (not res!51561) (not e!67297))))

(declare-fun b!103265 () Bool)

(declare-fun e!67290 () Bool)

(declare-fun call!10821 () Bool)

(assert (=> b!103265 (= e!67290 (not call!10821))))

(declare-fun bm!10801 () Bool)

(declare-fun call!10798 () Bool)

(assert (=> bm!10801 (= call!10805 call!10798)))

(declare-fun b!103266 () Bool)

(declare-fun res!51572 () Bool)

(assert (=> b!103266 (= res!51572 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!52548)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103266 (=> (not res!51572) (not e!67291))))

(declare-fun b!103267 () Bool)

(declare-fun e!67288 () tuple2!2374)

(assert (=> b!103267 (= e!67288 e!67292)))

(declare-fun c!17759 () Bool)

(assert (=> b!103267 (= c!17759 (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103268 () Bool)

(declare-fun Unit!3149 () Unit!3141)

(assert (=> b!103268 (= e!67295 Unit!3149)))

(declare-fun lt!52537 () Unit!3141)

(assert (=> b!103268 (= lt!52537 call!10809)))

(assert (=> b!103268 (= lt!52548 call!10815)))

(declare-fun c!17760 () Bool)

(assert (=> b!103268 (= c!17760 ((_ is MissingZero!261) lt!52548))))

(declare-fun e!67289 () Bool)

(assert (=> b!103268 e!67289))

(declare-fun lt!52536 () Unit!3141)

(assert (=> b!103268 (= lt!52536 lt!52537)))

(assert (=> b!103268 false))

(declare-fun b!103269 () Bool)

(declare-fun lt!52556 () Unit!3141)

(assert (=> b!103269 (= e!67285 lt!52556)))

(assert (=> b!103269 (= lt!52556 call!10809)))

(declare-fun lt!52545 () SeekEntryResult!261)

(assert (=> b!103269 (= lt!52545 call!10803)))

(declare-fun c!17756 () Bool)

(assert (=> b!103269 (= c!17756 ((_ is MissingZero!261) lt!52545))))

(declare-fun e!67302 () Bool)

(assert (=> b!103269 e!67302))

(declare-fun bm!10802 () Bool)

(assert (=> bm!10802 (= call!10819 call!10801)))

(declare-fun b!103270 () Bool)

(declare-fun res!51570 () Bool)

(assert (=> b!103270 (= res!51570 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!52545)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103270 (=> (not res!51570) (not e!67290))))

(declare-fun bm!10803 () Bool)

(assert (=> bm!10803 (= call!10803 call!10814)))

(declare-fun bm!10804 () Bool)

(declare-fun call!10799 () Bool)

(assert (=> bm!10804 (= call!10799 call!10798)))

(declare-fun c!17753 () Bool)

(declare-fun lt!52534 () (_ BitVec 32))

(declare-fun bm!10805 () Bool)

(declare-fun c!17763 () Bool)

(declare-fun call!10804 () ListLongMap!1539)

(assert (=> bm!10805 (= call!10804 (getCurrentListMap!462 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10806 () Bool)

(declare-fun lt!52557 () tuple2!2374)

(assert (=> bm!10806 (= call!10800 (map!1266 (_2!1198 lt!52557)))))

(declare-fun bm!10807 () Bool)

(assert (=> bm!10807 (= call!10808 call!10804)))

(declare-fun b!103271 () Bool)

(declare-fun res!51562 () Bool)

(assert (=> b!103271 (= res!51562 call!10799)))

(declare-fun e!67294 () Bool)

(assert (=> b!103271 (=> (not res!51562) (not e!67294))))

(declare-fun b!103272 () Bool)

(declare-fun lt!52543 () SeekEntryResult!261)

(assert (=> b!103272 (= e!67294 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52543)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun bm!10808 () Bool)

(assert (=> bm!10808 (= call!10802 call!10804)))

(declare-fun b!103273 () Bool)

(declare-fun c!17761 () Bool)

(assert (=> b!103273 (= c!17761 ((_ is MissingVacant!261) lt!52548))))

(assert (=> b!103273 (= e!67289 e!67293)))

(declare-fun b!103274 () Bool)

(declare-fun res!51563 () Bool)

(declare-fun e!67304 () Bool)

(assert (=> b!103274 (=> (not res!51563) (not e!67304))))

(assert (=> b!103274 (= res!51563 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!52545)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103275 () Bool)

(declare-fun e!67296 () tuple2!2374)

(declare-fun lt!52544 () tuple2!2374)

(assert (=> b!103275 (= e!67296 (tuple2!2375 (_1!1198 lt!52544) (_2!1198 lt!52544)))))

(assert (=> b!103275 (= lt!52544 call!10811)))

(declare-fun b!103276 () Bool)

(assert (=> b!103276 (= e!67286 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun d!27675 () Bool)

(declare-fun e!67284 () Bool)

(assert (=> d!27675 e!67284))

(declare-fun res!51565 () Bool)

(assert (=> d!27675 (=> (not res!51565) (not e!67284))))

(assert (=> d!27675 (= res!51565 (valid!419 (_2!1198 lt!52557)))))

(assert (=> d!27675 (= lt!52557 e!67288)))

(assert (=> d!27675 (= c!17763 (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvneg (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!27675 (valid!419 newMap!16)))

(assert (=> d!27675 (= (update!157 newMap!16 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329) lt!52557)))

(declare-fun call!10810 () Bool)

(declare-fun bm!10809 () Bool)

(assert (=> bm!10809 (= call!10810 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103277 () Bool)

(declare-fun lt!52535 () Unit!3141)

(declare-fun lt!52542 () Unit!3141)

(assert (=> b!103277 (= lt!52535 lt!52542)))

(assert (=> b!103277 (= call!10818 call!10808)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3141)

(assert (=> b!103277 (= lt!52542 (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52534 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52329 (defaultEntry!2560 newMap!16)))))

(assert (=> b!103277 (= lt!52534 (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!103277 (= e!67292 (tuple2!2375 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6695 newMap!16) (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) (zeroValue!2437 newMap!16) lt!52329 (_size!495 newMap!16) (_keys!4261 newMap!16) (_values!2543 newMap!16) (_vacant!495 newMap!16))))))

(declare-fun b!103278 () Bool)

(declare-fun e!67300 () Bool)

(assert (=> b!103278 (= e!67300 e!67290)))

(declare-fun res!51568 () Bool)

(declare-fun call!10816 () Bool)

(assert (=> b!103278 (= res!51568 call!10816)))

(assert (=> b!103278 (=> (not res!51568) (not e!67290))))

(declare-fun b!103279 () Bool)

(declare-fun call!10820 () Bool)

(assert (=> b!103279 (= e!67298 (not call!10820))))

(declare-fun bm!10810 () Bool)

(assert (=> bm!10810 (= call!10813 (+!134 e!67299 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun c!17765 () Bool)

(assert (=> bm!10810 (= c!17765 c!17763)))

(declare-fun b!103280 () Bool)

(assert (=> b!103280 (= c!17757 ((_ is MissingVacant!261) lt!52554))))

(declare-fun e!67303 () tuple2!2374)

(assert (=> b!103280 (= e!67303 e!67296)))

(declare-fun b!103281 () Bool)

(assert (=> b!103281 (= e!67284 e!67301)))

(declare-fun c!17758 () Bool)

(assert (=> b!103281 (= c!17758 (_1!1198 lt!52557))))

(declare-fun bm!10811 () Bool)

(assert (=> bm!10811 (= call!10821 call!10810)))

(declare-fun b!103282 () Bool)

(declare-fun lt!52538 () Unit!3141)

(assert (=> b!103282 (= lt!52538 e!67285)))

(declare-fun c!17762 () Bool)

(assert (=> b!103282 (= c!17762 call!10806)))

(assert (=> b!103282 (= e!67303 (tuple2!2375 false newMap!16))))

(declare-fun bm!10812 () Bool)

(declare-fun c!17766 () Bool)

(assert (=> bm!10812 (= c!17766 c!17753)))

(assert (=> bm!10812 (= call!10806 (contains!816 e!67286 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103283 () Bool)

(declare-fun lt!52550 () tuple2!2374)

(assert (=> b!103283 (= lt!52550 call!10811)))

(assert (=> b!103283 (= e!67305 (tuple2!2375 (_1!1198 lt!52550) (_2!1198 lt!52550)))))

(declare-fun b!103284 () Bool)

(assert (=> b!103284 (= e!67293 ((_ is Undefined!261) lt!52548))))

(declare-fun b!103285 () Bool)

(assert (=> b!103285 (= e!67299 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10813 () Bool)

(assert (=> bm!10813 (= call!10820 call!10810)))

(declare-fun b!103286 () Bool)

(assert (=> b!103286 (= e!67297 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52539)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun bm!10814 () Bool)

(assert (=> bm!10814 (= call!10812 call!10799)))

(declare-fun b!103287 () Bool)

(assert (=> b!103287 (= e!67291 (not call!10820))))

(declare-fun b!103288 () Bool)

(declare-fun res!51569 () Bool)

(assert (=> b!103288 (=> (not res!51569) (not e!67304))))

(assert (=> b!103288 (= res!51569 call!10816)))

(assert (=> b!103288 (= e!67302 e!67304)))

(declare-fun b!103289 () Bool)

(assert (=> b!103289 (= e!67296 e!67305)))

(declare-fun c!17754 () Bool)

(assert (=> b!103289 (= c!17754 ((_ is MissingZero!261) lt!52554))))

(declare-fun b!103290 () Bool)

(declare-fun res!51574 () Bool)

(assert (=> b!103290 (=> (not res!51574) (not e!67298))))

(assert (=> b!103290 (= res!51574 call!10812)))

(assert (=> b!103290 (= e!67289 e!67298)))

(declare-fun b!103291 () Bool)

(assert (=> b!103291 (= e!67301 (= call!10800 call!10807))))

(declare-fun b!103292 () Bool)

(assert (=> b!103292 (= e!67288 e!67303)))

(assert (=> b!103292 (= lt!52554 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(assert (=> b!103292 (= c!17753 ((_ is Undefined!261) lt!52554))))

(declare-fun bm!10815 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!10815 (= call!10798 (inRange!0 (ite c!17753 (ite c!17762 (index!3192 lt!52539) (ite c!17756 (index!3191 lt!52545) (index!3194 lt!52545))) (ite c!17755 (index!3192 lt!52543) (ite c!17760 (index!3191 lt!52548) (index!3194 lt!52548)))) (mask!6695 newMap!16)))))

(declare-fun b!103293 () Bool)

(assert (=> b!103293 (= e!67300 ((_ is Undefined!261) lt!52545))))

(declare-fun b!103294 () Bool)

(assert (=> b!103294 (= e!67304 (not call!10821))))

(declare-fun bm!10816 () Bool)

(assert (=> bm!10816 (= call!10801 (getCurrentListMap!462 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun b!103295 () Bool)

(declare-fun lt!52531 () Unit!3141)

(assert (=> b!103295 (= e!67295 lt!52531)))

(assert (=> b!103295 (= lt!52531 call!10817)))

(assert (=> b!103295 (= lt!52543 call!10815)))

(declare-fun res!51573 () Bool)

(assert (=> b!103295 (= res!51573 ((_ is Found!261) lt!52543))))

(assert (=> b!103295 (=> (not res!51573) (not e!67294))))

(assert (=> b!103295 e!67294))

(declare-fun bm!10817 () Bool)

(assert (=> bm!10817 (= call!10816 call!10805)))

(declare-fun b!103296 () Bool)

(declare-fun c!17764 () Bool)

(assert (=> b!103296 (= c!17764 ((_ is MissingVacant!261) lt!52545))))

(assert (=> b!103296 (= e!67302 e!67300)))

(declare-fun bm!10818 () Bool)

(assert (=> bm!10818 (= call!10818 call!10813)))

(assert (= (and d!27675 c!17763) b!103267))

(assert (= (and d!27675 (not c!17763)) b!103292))

(assert (= (and b!103267 c!17759) b!103262))

(assert (= (and b!103267 (not c!17759)) b!103277))

(assert (= (or b!103262 b!103277) bm!10802))

(assert (= (or b!103262 b!103277) bm!10807))

(assert (= (or b!103262 b!103277) bm!10818))

(assert (= (and b!103292 c!17753) b!103282))

(assert (= (and b!103292 (not c!17753)) b!103280))

(assert (= (and b!103282 c!17762) b!103260))

(assert (= (and b!103282 (not c!17762)) b!103269))

(assert (= (and b!103260 res!51564) b!103264))

(assert (= (and b!103264 res!51561) b!103286))

(assert (= (and b!103269 c!17756) b!103288))

(assert (= (and b!103269 (not c!17756)) b!103296))

(assert (= (and b!103288 res!51569) b!103274))

(assert (= (and b!103274 res!51563) b!103294))

(assert (= (and b!103296 c!17764) b!103278))

(assert (= (and b!103296 (not c!17764)) b!103293))

(assert (= (and b!103278 res!51568) b!103270))

(assert (= (and b!103270 res!51570) b!103265))

(assert (= (or b!103288 b!103278) bm!10817))

(assert (= (or b!103294 b!103265) bm!10811))

(assert (= (or b!103264 bm!10817) bm!10801))

(assert (= (or b!103260 b!103269) bm!10803))

(assert (= (and b!103280 c!17757) b!103275))

(assert (= (and b!103280 (not c!17757)) b!103289))

(assert (= (and b!103289 c!17754) b!103283))

(assert (= (and b!103289 (not c!17754)) b!103257))

(assert (= (and b!103257 c!17755) b!103295))

(assert (= (and b!103257 (not c!17755)) b!103268))

(assert (= (and b!103295 res!51573) b!103271))

(assert (= (and b!103271 res!51562) b!103272))

(assert (= (and b!103268 c!17760) b!103290))

(assert (= (and b!103268 (not c!17760)) b!103273))

(assert (= (and b!103290 res!51574) b!103261))

(assert (= (and b!103261 res!51566) b!103279))

(assert (= (and b!103273 c!17761) b!103255))

(assert (= (and b!103273 (not c!17761)) b!103284))

(assert (= (and b!103255 res!51567) b!103266))

(assert (= (and b!103266 res!51572) b!103287))

(assert (= (or b!103290 b!103255) bm!10814))

(assert (= (or b!103279 b!103287) bm!10813))

(assert (= (or b!103271 bm!10814) bm!10804))

(assert (= (or b!103295 b!103268) bm!10799))

(assert (= (or b!103275 b!103283) bm!10797))

(assert (= (or b!103282 b!103257) bm!10808))

(assert (= (or bm!10811 bm!10813) bm!10809))

(assert (= (or b!103269 b!103268) bm!10796))

(assert (= (or bm!10801 bm!10804) bm!10815))

(assert (= (or b!103260 b!103295) bm!10798))

(assert (= (or bm!10803 bm!10799) bm!10800))

(assert (= (or b!103282 b!103257) bm!10812))

(assert (= (and bm!10812 c!17766) b!103258))

(assert (= (and bm!10812 (not c!17766)) b!103276))

(assert (= (or bm!10807 bm!10808) bm!10805))

(assert (= (or bm!10802 b!103257) bm!10816))

(assert (= (or bm!10818 b!103257) bm!10810))

(assert (= (and bm!10810 c!17765) b!103263))

(assert (= (and bm!10810 (not c!17765)) b!103285))

(assert (= (and d!27675 res!51565) b!103281))

(assert (= (and b!103281 c!17758) b!103259))

(assert (= (and b!103281 (not c!17758)) b!103291))

(assert (= (and b!103259 res!51571) b!103256))

(assert (= (or b!103259 b!103256 b!103291) bm!10806))

(assert (= (or b!103256 b!103291) bm!10795))

(declare-fun m!113819 () Bool)

(assert (=> b!103261 m!113819))

(declare-fun m!113821 () Bool)

(assert (=> d!27675 m!113821))

(assert (=> d!27675 m!113589))

(assert (=> b!103292 m!113535))

(declare-fun m!113823 () Bool)

(assert (=> b!103292 m!113823))

(assert (=> b!103259 m!113535))

(declare-fun m!113825 () Bool)

(assert (=> b!103259 m!113825))

(declare-fun m!113827 () Bool)

(assert (=> b!103257 m!113827))

(assert (=> b!103257 m!113535))

(declare-fun m!113829 () Bool)

(assert (=> b!103257 m!113829))

(declare-fun m!113831 () Bool)

(assert (=> b!103257 m!113831))

(declare-fun m!113833 () Bool)

(assert (=> b!103257 m!113833))

(declare-fun m!113835 () Bool)

(assert (=> b!103257 m!113835))

(assert (=> b!103257 m!113833))

(declare-fun m!113837 () Bool)

(assert (=> bm!10806 m!113837))

(declare-fun m!113839 () Bool)

(assert (=> b!103286 m!113839))

(assert (=> bm!10809 m!113535))

(declare-fun m!113841 () Bool)

(assert (=> bm!10809 m!113841))

(assert (=> bm!10800 m!113535))

(assert (=> bm!10800 m!113823))

(declare-fun m!113843 () Bool)

(assert (=> b!103277 m!113843))

(declare-fun m!113845 () Bool)

(assert (=> b!103266 m!113845))

(declare-fun m!113847 () Bool)

(assert (=> b!103285 m!113847))

(assert (=> b!103276 m!113847))

(declare-fun m!113849 () Bool)

(assert (=> b!103262 m!113849))

(declare-fun m!113851 () Bool)

(assert (=> bm!10810 m!113851))

(declare-fun m!113853 () Bool)

(assert (=> b!103274 m!113853))

(assert (=> bm!10797 m!113535))

(declare-fun m!113855 () Bool)

(assert (=> bm!10797 m!113855))

(assert (=> bm!10795 m!113543))

(declare-fun m!113857 () Bool)

(assert (=> bm!10815 m!113857))

(declare-fun m!113859 () Bool)

(assert (=> bm!10816 m!113859))

(assert (=> bm!10796 m!113535))

(declare-fun m!113861 () Bool)

(assert (=> bm!10796 m!113861))

(declare-fun m!113863 () Bool)

(assert (=> b!103272 m!113863))

(assert (=> bm!10798 m!113535))

(declare-fun m!113865 () Bool)

(assert (=> bm!10798 m!113865))

(declare-fun m!113867 () Bool)

(assert (=> b!103270 m!113867))

(assert (=> bm!10805 m!113831))

(declare-fun m!113869 () Bool)

(assert (=> bm!10805 m!113869))

(assert (=> bm!10812 m!113535))

(declare-fun m!113871 () Bool)

(assert (=> bm!10812 m!113871))

(declare-fun m!113873 () Bool)

(assert (=> b!103256 m!113873))

(assert (=> b!102937 d!27675))

(declare-fun d!27677 () Bool)

(assert (=> d!27677 (= (map!1266 newMap!16) (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bs!4224 () Bool)

(assert (= bs!4224 d!27677))

(assert (=> bs!4224 m!113847))

(assert (=> b!102943 d!27677))

(declare-fun b!103339 () Bool)

(declare-fun e!67344 () Bool)

(assert (=> b!103339 (= e!67344 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103340 () Bool)

(declare-fun c!17782 () Bool)

(assert (=> b!103340 (= c!17782 (and (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67341 () ListLongMap!1539)

(declare-fun e!67342 () ListLongMap!1539)

(assert (=> b!103340 (= e!67341 e!67342)))

(declare-fun b!103341 () Bool)

(declare-fun e!67337 () Bool)

(declare-fun call!10836 () Bool)

(assert (=> b!103341 (= e!67337 (not call!10836))))

(declare-fun bm!10833 () Bool)

(declare-fun call!10839 () ListLongMap!1539)

(assert (=> bm!10833 (= call!10839 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun lt!52612 () ListLongMap!1539)

(declare-fun e!67336 () Bool)

(declare-fun b!103342 () Bool)

(assert (=> b!103342 (= e!67336 (= (apply!97 lt!52612 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103342 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> b!103342 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103343 () Bool)

(declare-fun e!67343 () ListLongMap!1539)

(assert (=> b!103343 (= e!67343 e!67341)))

(declare-fun c!17780 () Bool)

(assert (=> b!103343 (= c!17780 (and (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103344 () Bool)

(declare-fun e!67338 () Unit!3141)

(declare-fun lt!52616 () Unit!3141)

(assert (=> b!103344 (= e!67338 lt!52616)))

(declare-fun lt!52603 () ListLongMap!1539)

(assert (=> b!103344 (= lt!52603 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun lt!52605 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52605 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52621 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52621 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52623 () Unit!3141)

(declare-fun addStillContains!73 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3141)

(assert (=> b!103344 (= lt!52623 (addStillContains!73 lt!52603 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52621))))

(assert (=> b!103344 (contains!816 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52621)))

(declare-fun lt!52619 () Unit!3141)

(assert (=> b!103344 (= lt!52619 lt!52623)))

(declare-fun lt!52614 () ListLongMap!1539)

(assert (=> b!103344 (= lt!52614 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun lt!52622 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52622 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52604 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52604 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52609 () Unit!3141)

(declare-fun addApplyDifferent!73 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3141)

(assert (=> b!103344 (= lt!52609 (addApplyDifferent!73 lt!52614 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52604))))

(assert (=> b!103344 (= (apply!97 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52604) (apply!97 lt!52614 lt!52604))))

(declare-fun lt!52602 () Unit!3141)

(assert (=> b!103344 (= lt!52602 lt!52609)))

(declare-fun lt!52620 () ListLongMap!1539)

(assert (=> b!103344 (= lt!52620 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun lt!52615 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52615 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52617 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52617 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52606 () Unit!3141)

(assert (=> b!103344 (= lt!52606 (addApplyDifferent!73 lt!52620 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52617))))

(assert (=> b!103344 (= (apply!97 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52617) (apply!97 lt!52620 lt!52617))))

(declare-fun lt!52611 () Unit!3141)

(assert (=> b!103344 (= lt!52611 lt!52606)))

(declare-fun lt!52613 () ListLongMap!1539)

(assert (=> b!103344 (= lt!52613 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun lt!52618 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52618 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52608 () (_ BitVec 64))

(assert (=> b!103344 (= lt!52608 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!103344 (= lt!52616 (addApplyDifferent!73 lt!52613 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52608))))

(assert (=> b!103344 (= (apply!97 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52608) (apply!97 lt!52613 lt!52608))))

(declare-fun b!103345 () Bool)

(declare-fun e!67332 () Bool)

(declare-fun e!67335 () Bool)

(assert (=> b!103345 (= e!67332 e!67335)))

(declare-fun res!51595 () Bool)

(declare-fun call!10838 () Bool)

(assert (=> b!103345 (= res!51595 call!10838)))

(assert (=> b!103345 (=> (not res!51595) (not e!67335))))

(declare-fun b!103346 () Bool)

(declare-fun e!67340 () Bool)

(assert (=> b!103346 (= e!67340 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103347 () Bool)

(declare-fun e!67339 () Bool)

(assert (=> b!103347 (= e!67339 (= (apply!97 lt!52612 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun c!17779 () Bool)

(declare-fun call!10841 () ListLongMap!1539)

(declare-fun bm!10834 () Bool)

(declare-fun call!10837 () ListLongMap!1539)

(declare-fun call!10842 () ListLongMap!1539)

(assert (=> bm!10834 (= call!10842 (+!134 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!10835 () Bool)

(assert (=> bm!10835 (= call!10837 call!10839)))

(declare-fun b!103348 () Bool)

(declare-fun res!51596 () Bool)

(declare-fun e!67334 () Bool)

(assert (=> b!103348 (=> (not res!51596) (not e!67334))))

(declare-fun e!67333 () Bool)

(assert (=> b!103348 (= res!51596 e!67333)))

(declare-fun res!51598 () Bool)

(assert (=> b!103348 (=> res!51598 e!67333)))

(assert (=> b!103348 (= res!51598 (not e!67344))))

(declare-fun res!51593 () Bool)

(assert (=> b!103348 (=> (not res!51593) (not e!67344))))

(assert (=> b!103348 (= res!51593 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun bm!10836 () Bool)

(assert (=> bm!10836 (= call!10838 (contains!816 lt!52612 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10837 () Bool)

(assert (=> bm!10837 (= call!10841 call!10837)))

(declare-fun b!103349 () Bool)

(assert (=> b!103349 (= e!67335 (= (apply!97 lt!52612 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun d!27679 () Bool)

(assert (=> d!27679 e!67334))

(declare-fun res!51599 () Bool)

(assert (=> d!27679 (=> (not res!51599) (not e!67334))))

(assert (=> d!27679 (= res!51599 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun lt!52607 () ListLongMap!1539)

(assert (=> d!27679 (= lt!52612 lt!52607)))

(declare-fun lt!52610 () Unit!3141)

(assert (=> d!27679 (= lt!52610 e!67338)))

(declare-fun c!17783 () Bool)

(assert (=> d!27679 (= c!17783 e!67340)))

(declare-fun res!51601 () Bool)

(assert (=> d!27679 (=> (not res!51601) (not e!67340))))

(assert (=> d!27679 (= res!51601 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!27679 (= lt!52607 e!67343)))

(assert (=> d!27679 (= c!17779 (and (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27679 (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992))))))

(assert (=> d!27679 (= (getCurrentListMap!462 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) lt!52612)))

(declare-fun b!103350 () Bool)

(assert (=> b!103350 (= e!67343 (+!134 call!10842 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103351 () Bool)

(declare-fun res!51597 () Bool)

(assert (=> b!103351 (=> (not res!51597) (not e!67334))))

(assert (=> b!103351 (= res!51597 e!67337)))

(declare-fun c!17781 () Bool)

(assert (=> b!103351 (= c!17781 (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103352 () Bool)

(assert (=> b!103352 (= e!67337 e!67339)))

(declare-fun res!51594 () Bool)

(assert (=> b!103352 (= res!51594 call!10836)))

(assert (=> b!103352 (=> (not res!51594) (not e!67339))))

(declare-fun b!103353 () Bool)

(declare-fun call!10840 () ListLongMap!1539)

(assert (=> b!103353 (= e!67341 call!10840)))

(declare-fun bm!10838 () Bool)

(assert (=> bm!10838 (= call!10840 call!10842)))

(declare-fun b!103354 () Bool)

(declare-fun Unit!3150 () Unit!3141)

(assert (=> b!103354 (= e!67338 Unit!3150)))

(declare-fun b!103355 () Bool)

(assert (=> b!103355 (= e!67334 e!67332)))

(declare-fun c!17784 () Bool)

(assert (=> b!103355 (= c!17784 (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103356 () Bool)

(assert (=> b!103356 (= e!67342 call!10840)))

(declare-fun b!103357 () Bool)

(assert (=> b!103357 (= e!67332 (not call!10838))))

(declare-fun b!103358 () Bool)

(assert (=> b!103358 (= e!67342 call!10841)))

(declare-fun b!103359 () Bool)

(assert (=> b!103359 (= e!67333 e!67336)))

(declare-fun res!51600 () Bool)

(assert (=> b!103359 (=> (not res!51600) (not e!67336))))

(assert (=> b!103359 (= res!51600 (contains!816 lt!52612 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103359 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun bm!10839 () Bool)

(assert (=> bm!10839 (= call!10836 (contains!816 lt!52612 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27679 c!17779) b!103350))

(assert (= (and d!27679 (not c!17779)) b!103343))

(assert (= (and b!103343 c!17780) b!103353))

(assert (= (and b!103343 (not c!17780)) b!103340))

(assert (= (and b!103340 c!17782) b!103356))

(assert (= (and b!103340 (not c!17782)) b!103358))

(assert (= (or b!103356 b!103358) bm!10837))

(assert (= (or b!103353 bm!10837) bm!10835))

(assert (= (or b!103353 b!103356) bm!10838))

(assert (= (or b!103350 bm!10835) bm!10833))

(assert (= (or b!103350 bm!10838) bm!10834))

(assert (= (and d!27679 res!51601) b!103346))

(assert (= (and d!27679 c!17783) b!103344))

(assert (= (and d!27679 (not c!17783)) b!103354))

(assert (= (and d!27679 res!51599) b!103348))

(assert (= (and b!103348 res!51593) b!103339))

(assert (= (and b!103348 (not res!51598)) b!103359))

(assert (= (and b!103359 res!51600) b!103342))

(assert (= (and b!103348 res!51596) b!103351))

(assert (= (and b!103351 c!17781) b!103352))

(assert (= (and b!103351 (not c!17781)) b!103341))

(assert (= (and b!103352 res!51594) b!103347))

(assert (= (or b!103352 b!103341) bm!10839))

(assert (= (and b!103351 res!51597) b!103355))

(assert (= (and b!103355 c!17784) b!103345))

(assert (= (and b!103355 (not c!17784)) b!103357))

(assert (= (and b!103345 res!51595) b!103349))

(assert (= (or b!103345 b!103357) bm!10836))

(declare-fun b_lambda!4605 () Bool)

(assert (=> (not b_lambda!4605) (not b!103342)))

(assert (=> b!103342 t!5662))

(declare-fun b_and!6385 () Bool)

(assert (= b_and!6381 (and (=> t!5662 result!3411) b_and!6385)))

(assert (=> b!103342 t!5664))

(declare-fun b_and!6387 () Bool)

(assert (= b_and!6383 (and (=> t!5664 result!3415) b_and!6387)))

(declare-fun m!113875 () Bool)

(assert (=> bm!10839 m!113875))

(declare-fun m!113877 () Bool)

(assert (=> b!103344 m!113877))

(declare-fun m!113879 () Bool)

(assert (=> b!103344 m!113879))

(declare-fun m!113881 () Bool)

(assert (=> b!103344 m!113881))

(declare-fun m!113883 () Bool)

(assert (=> b!103344 m!113883))

(declare-fun m!113885 () Bool)

(assert (=> b!103344 m!113885))

(declare-fun m!113887 () Bool)

(assert (=> b!103344 m!113887))

(assert (=> b!103344 m!113877))

(declare-fun m!113889 () Bool)

(assert (=> b!103344 m!113889))

(declare-fun m!113891 () Bool)

(assert (=> b!103344 m!113891))

(declare-fun m!113893 () Bool)

(assert (=> b!103344 m!113893))

(assert (=> b!103344 m!113559))

(assert (=> b!103344 m!113707))

(assert (=> b!103344 m!113887))

(declare-fun m!113895 () Bool)

(assert (=> b!103344 m!113895))

(declare-fun m!113897 () Bool)

(assert (=> b!103344 m!113897))

(assert (=> b!103344 m!113885))

(declare-fun m!113899 () Bool)

(assert (=> b!103344 m!113899))

(assert (=> b!103344 m!113881))

(declare-fun m!113901 () Bool)

(assert (=> b!103344 m!113901))

(declare-fun m!113903 () Bool)

(assert (=> b!103344 m!113903))

(declare-fun m!113905 () Bool)

(assert (=> b!103344 m!113905))

(declare-fun m!113907 () Bool)

(assert (=> bm!10834 m!113907))

(assert (=> d!27679 m!113563))

(assert (=> b!103342 m!113539))

(assert (=> b!103342 m!113707))

(declare-fun m!113909 () Bool)

(assert (=> b!103342 m!113909))

(assert (=> b!103342 m!113729))

(assert (=> b!103342 m!113539))

(assert (=> b!103342 m!113733))

(assert (=> b!103342 m!113707))

(assert (=> b!103342 m!113729))

(assert (=> b!103359 m!113707))

(assert (=> b!103359 m!113707))

(declare-fun m!113911 () Bool)

(assert (=> b!103359 m!113911))

(assert (=> b!103346 m!113707))

(assert (=> b!103346 m!113707))

(assert (=> b!103346 m!113719))

(declare-fun m!113913 () Bool)

(assert (=> b!103349 m!113913))

(assert (=> b!103339 m!113707))

(assert (=> b!103339 m!113707))

(assert (=> b!103339 m!113719))

(declare-fun m!113915 () Bool)

(assert (=> bm!10836 m!113915))

(declare-fun m!113917 () Bool)

(assert (=> b!103347 m!113917))

(assert (=> bm!10833 m!113559))

(declare-fun m!113919 () Bool)

(assert (=> b!103350 m!113919))

(assert (=> b!102943 d!27679))

(declare-fun d!27681 () Bool)

(declare-fun c!17787 () Bool)

(assert (=> d!27681 (= c!17787 ((_ is ValueCellFull!992) (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun e!67347 () V!3209)

(assert (=> d!27681 (= (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67347)))

(declare-fun b!103364 () Bool)

(declare-fun get!1326 (ValueCell!992 V!3209) V!3209)

(assert (=> b!103364 (= e!67347 (get!1326 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103365 () Bool)

(declare-fun get!1327 (ValueCell!992 V!3209) V!3209)

(assert (=> b!103365 (= e!67347 (get!1327 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27681 c!17787) b!103364))

(assert (= (and d!27681 (not c!17787)) b!103365))

(assert (=> b!103364 m!113537))

(assert (=> b!103364 m!113539))

(declare-fun m!113921 () Bool)

(assert (=> b!103364 m!113921))

(assert (=> b!103365 m!113537))

(assert (=> b!103365 m!113539))

(declare-fun m!113923 () Bool)

(assert (=> b!103365 m!113923))

(assert (=> b!102938 d!27681))

(declare-fun d!27683 () Bool)

(assert (=> d!27683 (= (valid!418 thiss!992) (valid!419 (v!2867 (underlying!352 thiss!992))))))

(declare-fun bs!4225 () Bool)

(assert (= bs!4225 d!27683))

(declare-fun m!113925 () Bool)

(assert (=> bs!4225 m!113925))

(assert (=> start!12192 d!27683))

(declare-fun d!27685 () Bool)

(assert (=> d!27685 (= (array_inv!1289 (_keys!4261 newMap!16)) (bvsge (size!2299 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!102934 d!27685))

(declare-fun d!27687 () Bool)

(assert (=> d!27687 (= (array_inv!1290 (_values!2543 newMap!16)) (bvsge (size!2300 (_values!2543 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!102934 d!27687))

(declare-fun condMapEmpty!3913 () Bool)

(declare-fun mapDefault!3913 () ValueCell!992)

(assert (=> mapNonEmpty!3897 (= condMapEmpty!3913 (= mapRest!3898 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3913)))))

(declare-fun e!67353 () Bool)

(declare-fun mapRes!3913 () Bool)

(assert (=> mapNonEmpty!3897 (= tp!9844 (and e!67353 mapRes!3913))))

(declare-fun b!103373 () Bool)

(assert (=> b!103373 (= e!67353 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3913 () Bool)

(declare-fun tp!9871 () Bool)

(declare-fun e!67352 () Bool)

(assert (=> mapNonEmpty!3913 (= mapRes!3913 (and tp!9871 e!67352))))

(declare-fun mapValue!3913 () ValueCell!992)

(declare-fun mapRest!3913 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapKey!3913 () (_ BitVec 32))

(assert (=> mapNonEmpty!3913 (= mapRest!3898 (store mapRest!3913 mapKey!3913 mapValue!3913))))

(declare-fun b!103372 () Bool)

(assert (=> b!103372 (= e!67352 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3913 () Bool)

(assert (=> mapIsEmpty!3913 mapRes!3913))

(assert (= (and mapNonEmpty!3897 condMapEmpty!3913) mapIsEmpty!3913))

(assert (= (and mapNonEmpty!3897 (not condMapEmpty!3913)) mapNonEmpty!3913))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!992) mapValue!3913)) b!103372))

(assert (= (and mapNonEmpty!3897 ((_ is ValueCellFull!992) mapDefault!3913)) b!103373))

(declare-fun m!113927 () Bool)

(assert (=> mapNonEmpty!3913 m!113927))

(declare-fun condMapEmpty!3914 () Bool)

(declare-fun mapDefault!3914 () ValueCell!992)

(assert (=> mapNonEmpty!3898 (= condMapEmpty!3914 (= mapRest!3897 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3914)))))

(declare-fun e!67355 () Bool)

(declare-fun mapRes!3914 () Bool)

(assert (=> mapNonEmpty!3898 (= tp!9842 (and e!67355 mapRes!3914))))

(declare-fun b!103375 () Bool)

(assert (=> b!103375 (= e!67355 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3914 () Bool)

(declare-fun tp!9872 () Bool)

(declare-fun e!67354 () Bool)

(assert (=> mapNonEmpty!3914 (= mapRes!3914 (and tp!9872 e!67354))))

(declare-fun mapRest!3914 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapValue!3914 () ValueCell!992)

(declare-fun mapKey!3914 () (_ BitVec 32))

(assert (=> mapNonEmpty!3914 (= mapRest!3897 (store mapRest!3914 mapKey!3914 mapValue!3914))))

(declare-fun b!103374 () Bool)

(assert (=> b!103374 (= e!67354 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3914 () Bool)

(assert (=> mapIsEmpty!3914 mapRes!3914))

(assert (= (and mapNonEmpty!3898 condMapEmpty!3914) mapIsEmpty!3914))

(assert (= (and mapNonEmpty!3898 (not condMapEmpty!3914)) mapNonEmpty!3914))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!992) mapValue!3914)) b!103374))

(assert (= (and mapNonEmpty!3898 ((_ is ValueCellFull!992) mapDefault!3914)) b!103375))

(declare-fun m!113929 () Bool)

(assert (=> mapNonEmpty!3914 m!113929))

(declare-fun b_lambda!4607 () Bool)

(assert (= b_lambda!4601 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4607)))

(declare-fun b_lambda!4609 () Bool)

(assert (= b_lambda!4605 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4609)))

(declare-fun b_lambda!4611 () Bool)

(assert (= b_lambda!4603 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4611)))

(check-sat (not bm!10796) (not mapNonEmpty!3913) (not b!103151) (not b!103145) (not b!103262) (not b_lambda!4599) (not b_next!2509) (not d!27657) (not d!27677) (not d!27653) (not b!103149) (not bm!10839) (not b!103147) (not d!27655) (not b!103339) (not d!27661) (not b!103140) (not bm!10816) (not bm!10833) (not b!103146) (not b!103346) (not b!103292) b_and!6387 (not d!27643) (not b!103276) (not b!103138) (not b_next!2511) (not bm!10815) (not bm!10806) (not b!103129) (not b!103256) (not b!103152) (not b!103139) (not b!103137) (not b!103344) (not b!103257) (not d!27663) (not b!103365) (not b!103161) (not bm!10805) (not b!103135) (not bm!10795) (not d!27645) (not bm!10743) (not d!27675) (not b_lambda!4607) (not bm!10809) (not b!103342) (not bm!10836) (not d!27667) (not d!27659) (not d!27649) (not b!103100) (not b!103083) (not bm!10746) (not b!103160) (not b!103359) (not b!103364) (not b!103148) (not b!103132) (not bm!10797) (not b!103259) (not bm!10834) (not d!27673) (not b!103277) (not b!103170) (not b!103104) (not d!27683) (not bm!10800) (not bm!10810) (not b!103350) (not b!103168) (not b_lambda!4611) (not b!103150) (not b!103349) (not mapNonEmpty!3914) (not b_lambda!4609) (not b!103159) (not b!103088) (not bm!10798) (not b!103347) (not b!103133) (not b!103285) b_and!6385 (not d!27679) (not bm!10812) tp_is_empty!2671 (not b!103102))
(check-sat b_and!6385 b_and!6387 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun d!27689 () Bool)

(declare-fun res!51602 () Bool)

(declare-fun e!67356 () Bool)

(assert (=> d!27689 (=> (not res!51602) (not e!67356))))

(assert (=> d!27689 (= res!51602 (simpleValid!73 (_2!1198 lt!52557)))))

(assert (=> d!27689 (= (valid!419 (_2!1198 lt!52557)) e!67356)))

(declare-fun b!103376 () Bool)

(declare-fun res!51603 () Bool)

(assert (=> b!103376 (=> (not res!51603) (not e!67356))))

(assert (=> b!103376 (= res!51603 (= (arrayCountValidKeys!0 (_keys!4261 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))) (_size!495 (_2!1198 lt!52557))))))

(declare-fun b!103377 () Bool)

(declare-fun res!51604 () Bool)

(assert (=> b!103377 (=> (not res!51604) (not e!67356))))

(assert (=> b!103377 (= res!51604 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557))))))

(declare-fun b!103378 () Bool)

(assert (=> b!103378 (= e!67356 (arrayNoDuplicates!0 (_keys!4261 (_2!1198 lt!52557)) #b00000000000000000000000000000000 Nil!1610))))

(assert (= (and d!27689 res!51602) b!103376))

(assert (= (and b!103376 res!51603) b!103377))

(assert (= (and b!103377 res!51604) b!103378))

(declare-fun m!113931 () Bool)

(assert (=> d!27689 m!113931))

(declare-fun m!113933 () Bool)

(assert (=> b!103376 m!113933))

(declare-fun m!113935 () Bool)

(assert (=> b!103377 m!113935))

(declare-fun m!113937 () Bool)

(assert (=> b!103378 m!113937))

(assert (=> d!27675 d!27689))

(assert (=> d!27675 d!27667))

(declare-fun d!27691 () Bool)

(declare-fun e!67358 () Bool)

(assert (=> d!27691 e!67358))

(declare-fun res!51605 () Bool)

(assert (=> d!27691 (=> res!51605 e!67358)))

(declare-fun lt!52626 () Bool)

(assert (=> d!27691 (= res!51605 (not lt!52626))))

(declare-fun lt!52625 () Bool)

(assert (=> d!27691 (= lt!52626 lt!52625)))

(declare-fun lt!52627 () Unit!3141)

(declare-fun e!67357 () Unit!3141)

(assert (=> d!27691 (= lt!52627 e!67357)))

(declare-fun c!17788 () Bool)

(assert (=> d!27691 (= c!17788 lt!52625)))

(assert (=> d!27691 (= lt!52625 (containsKey!157 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27691 (= (contains!816 call!10800 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!52626)))

(declare-fun b!103379 () Bool)

(declare-fun lt!52624 () Unit!3141)

(assert (=> b!103379 (= e!67357 lt!52624)))

(assert (=> b!103379 (= lt!52624 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!103379 (isDefined!107 (getValueByKey!153 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103380 () Bool)

(declare-fun Unit!3151 () Unit!3141)

(assert (=> b!103380 (= e!67357 Unit!3151)))

(declare-fun b!103381 () Bool)

(assert (=> b!103381 (= e!67358 (isDefined!107 (getValueByKey!153 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (= (and d!27691 c!17788) b!103379))

(assert (= (and d!27691 (not c!17788)) b!103380))

(assert (= (and d!27691 (not res!51605)) b!103381))

(assert (=> d!27691 m!113535))

(declare-fun m!113939 () Bool)

(assert (=> d!27691 m!113939))

(assert (=> b!103379 m!113535))

(declare-fun m!113941 () Bool)

(assert (=> b!103379 m!113941))

(assert (=> b!103379 m!113535))

(declare-fun m!113943 () Bool)

(assert (=> b!103379 m!113943))

(assert (=> b!103379 m!113943))

(declare-fun m!113945 () Bool)

(assert (=> b!103379 m!113945))

(assert (=> b!103381 m!113535))

(assert (=> b!103381 m!113943))

(assert (=> b!103381 m!113943))

(assert (=> b!103381 m!113945))

(assert (=> b!103259 d!27691))

(declare-fun b!103382 () Bool)

(declare-fun e!67371 () Bool)

(assert (=> b!103382 (= e!67371 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103383 () Bool)

(declare-fun c!17792 () Bool)

(assert (=> b!103383 (= c!17792 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67368 () ListLongMap!1539)

(declare-fun e!67369 () ListLongMap!1539)

(assert (=> b!103383 (= e!67368 e!67369)))

(declare-fun b!103384 () Bool)

(declare-fun e!67364 () Bool)

(declare-fun call!10843 () Bool)

(assert (=> b!103384 (= e!67364 (not call!10843))))

(declare-fun bm!10840 () Bool)

(declare-fun call!10846 () ListLongMap!1539)

(assert (=> bm!10840 (= call!10846 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun b!103385 () Bool)

(declare-fun e!67363 () Bool)

(declare-fun lt!52638 () ListLongMap!1539)

(assert (=> b!103385 (= e!67363 (= (apply!97 lt!52638 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103385 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (_values!2543 newMap!16))))))

(assert (=> b!103385 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103386 () Bool)

(declare-fun e!67370 () ListLongMap!1539)

(assert (=> b!103386 (= e!67370 e!67368)))

(declare-fun c!17790 () Bool)

(assert (=> b!103386 (= c!17790 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103387 () Bool)

(declare-fun e!67365 () Unit!3141)

(declare-fun lt!52642 () Unit!3141)

(assert (=> b!103387 (= e!67365 lt!52642)))

(declare-fun lt!52629 () ListLongMap!1539)

(assert (=> b!103387 (= lt!52629 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52631 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52631 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52647 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52647 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52649 () Unit!3141)

(assert (=> b!103387 (= lt!52649 (addStillContains!73 lt!52629 lt!52631 (zeroValue!2437 newMap!16) lt!52647))))

(assert (=> b!103387 (contains!816 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))) lt!52647)))

(declare-fun lt!52645 () Unit!3141)

(assert (=> b!103387 (= lt!52645 lt!52649)))

(declare-fun lt!52640 () ListLongMap!1539)

(assert (=> b!103387 (= lt!52640 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52648 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52648 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52630 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52630 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52635 () Unit!3141)

(assert (=> b!103387 (= lt!52635 (addApplyDifferent!73 lt!52640 lt!52648 (minValue!2437 newMap!16) lt!52630))))

(assert (=> b!103387 (= (apply!97 (+!134 lt!52640 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))) lt!52630) (apply!97 lt!52640 lt!52630))))

(declare-fun lt!52628 () Unit!3141)

(assert (=> b!103387 (= lt!52628 lt!52635)))

(declare-fun lt!52646 () ListLongMap!1539)

(assert (=> b!103387 (= lt!52646 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52641 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52641 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52643 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52643 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52632 () Unit!3141)

(assert (=> b!103387 (= lt!52632 (addApplyDifferent!73 lt!52646 lt!52641 (zeroValue!2437 newMap!16) lt!52643))))

(assert (=> b!103387 (= (apply!97 (+!134 lt!52646 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))) lt!52643) (apply!97 lt!52646 lt!52643))))

(declare-fun lt!52637 () Unit!3141)

(assert (=> b!103387 (= lt!52637 lt!52632)))

(declare-fun lt!52639 () ListLongMap!1539)

(assert (=> b!103387 (= lt!52639 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52644 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52644 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52634 () (_ BitVec 64))

(assert (=> b!103387 (= lt!52634 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103387 (= lt!52642 (addApplyDifferent!73 lt!52639 lt!52644 (minValue!2437 newMap!16) lt!52634))))

(assert (=> b!103387 (= (apply!97 (+!134 lt!52639 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))) lt!52634) (apply!97 lt!52639 lt!52634))))

(declare-fun b!103388 () Bool)

(declare-fun e!67359 () Bool)

(declare-fun e!67362 () Bool)

(assert (=> b!103388 (= e!67359 e!67362)))

(declare-fun res!51608 () Bool)

(declare-fun call!10845 () Bool)

(assert (=> b!103388 (= res!51608 call!10845)))

(assert (=> b!103388 (=> (not res!51608) (not e!67362))))

(declare-fun b!103389 () Bool)

(declare-fun e!67367 () Bool)

(assert (=> b!103389 (= e!67367 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103390 () Bool)

(declare-fun e!67366 () Bool)

(assert (=> b!103390 (= e!67366 (= (apply!97 lt!52638 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun c!17789 () Bool)

(declare-fun bm!10841 () Bool)

(declare-fun call!10849 () ListLongMap!1539)

(declare-fun call!10848 () ListLongMap!1539)

(declare-fun call!10844 () ListLongMap!1539)

(assert (=> bm!10841 (= call!10849 (+!134 (ite c!17789 call!10846 (ite c!17790 call!10844 call!10848)) (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!10842 () Bool)

(assert (=> bm!10842 (= call!10844 call!10846)))

(declare-fun b!103391 () Bool)

(declare-fun res!51609 () Bool)

(declare-fun e!67361 () Bool)

(assert (=> b!103391 (=> (not res!51609) (not e!67361))))

(declare-fun e!67360 () Bool)

(assert (=> b!103391 (= res!51609 e!67360)))

(declare-fun res!51611 () Bool)

(assert (=> b!103391 (=> res!51611 e!67360)))

(assert (=> b!103391 (= res!51611 (not e!67371))))

(declare-fun res!51606 () Bool)

(assert (=> b!103391 (=> (not res!51606) (not e!67371))))

(assert (=> b!103391 (= res!51606 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10843 () Bool)

(assert (=> bm!10843 (= call!10845 (contains!816 lt!52638 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10844 () Bool)

(assert (=> bm!10844 (= call!10848 call!10844)))

(declare-fun b!103392 () Bool)

(assert (=> b!103392 (= e!67362 (= (apply!97 lt!52638 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!27693 () Bool)

(assert (=> d!27693 e!67361))

(declare-fun res!51612 () Bool)

(assert (=> d!27693 (=> (not res!51612) (not e!67361))))

(assert (=> d!27693 (= res!51612 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!52633 () ListLongMap!1539)

(assert (=> d!27693 (= lt!52638 lt!52633)))

(declare-fun lt!52636 () Unit!3141)

(assert (=> d!27693 (= lt!52636 e!67365)))

(declare-fun c!17793 () Bool)

(assert (=> d!27693 (= c!17793 e!67367)))

(declare-fun res!51614 () Bool)

(assert (=> d!27693 (=> (not res!51614) (not e!67367))))

(assert (=> d!27693 (= res!51614 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27693 (= lt!52633 e!67370)))

(assert (=> d!27693 (= c!17789 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27693 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27693 (= (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!52638)))

(declare-fun b!103393 () Bool)

(assert (=> b!103393 (= e!67370 (+!134 call!10849 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!103394 () Bool)

(declare-fun res!51610 () Bool)

(assert (=> b!103394 (=> (not res!51610) (not e!67361))))

(assert (=> b!103394 (= res!51610 e!67364)))

(declare-fun c!17791 () Bool)

(assert (=> b!103394 (= c!17791 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103395 () Bool)

(assert (=> b!103395 (= e!67364 e!67366)))

(declare-fun res!51607 () Bool)

(assert (=> b!103395 (= res!51607 call!10843)))

(assert (=> b!103395 (=> (not res!51607) (not e!67366))))

(declare-fun b!103396 () Bool)

(declare-fun call!10847 () ListLongMap!1539)

(assert (=> b!103396 (= e!67368 call!10847)))

(declare-fun bm!10845 () Bool)

(assert (=> bm!10845 (= call!10847 call!10849)))

(declare-fun b!103397 () Bool)

(declare-fun Unit!3152 () Unit!3141)

(assert (=> b!103397 (= e!67365 Unit!3152)))

(declare-fun b!103398 () Bool)

(assert (=> b!103398 (= e!67361 e!67359)))

(declare-fun c!17794 () Bool)

(assert (=> b!103398 (= c!17794 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103399 () Bool)

(assert (=> b!103399 (= e!67369 call!10847)))

(declare-fun b!103400 () Bool)

(assert (=> b!103400 (= e!67359 (not call!10845))))

(declare-fun b!103401 () Bool)

(assert (=> b!103401 (= e!67369 call!10848)))

(declare-fun b!103402 () Bool)

(assert (=> b!103402 (= e!67360 e!67363)))

(declare-fun res!51613 () Bool)

(assert (=> b!103402 (=> (not res!51613) (not e!67363))))

(assert (=> b!103402 (= res!51613 (contains!816 lt!52638 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103402 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10846 () Bool)

(assert (=> bm!10846 (= call!10843 (contains!816 lt!52638 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27693 c!17789) b!103393))

(assert (= (and d!27693 (not c!17789)) b!103386))

(assert (= (and b!103386 c!17790) b!103396))

(assert (= (and b!103386 (not c!17790)) b!103383))

(assert (= (and b!103383 c!17792) b!103399))

(assert (= (and b!103383 (not c!17792)) b!103401))

(assert (= (or b!103399 b!103401) bm!10844))

(assert (= (or b!103396 bm!10844) bm!10842))

(assert (= (or b!103396 b!103399) bm!10845))

(assert (= (or b!103393 bm!10842) bm!10840))

(assert (= (or b!103393 bm!10845) bm!10841))

(assert (= (and d!27693 res!51614) b!103389))

(assert (= (and d!27693 c!17793) b!103387))

(assert (= (and d!27693 (not c!17793)) b!103397))

(assert (= (and d!27693 res!51612) b!103391))

(assert (= (and b!103391 res!51606) b!103382))

(assert (= (and b!103391 (not res!51611)) b!103402))

(assert (= (and b!103402 res!51613) b!103385))

(assert (= (and b!103391 res!51609) b!103394))

(assert (= (and b!103394 c!17791) b!103395))

(assert (= (and b!103394 (not c!17791)) b!103384))

(assert (= (and b!103395 res!51607) b!103390))

(assert (= (or b!103395 b!103384) bm!10846))

(assert (= (and b!103394 res!51610) b!103398))

(assert (= (and b!103398 c!17794) b!103388))

(assert (= (and b!103398 (not c!17794)) b!103400))

(assert (= (and b!103388 res!51608) b!103392))

(assert (= (or b!103388 b!103400) bm!10843))

(declare-fun b_lambda!4613 () Bool)

(assert (=> (not b_lambda!4613) (not b!103385)))

(declare-fun t!5677 () Bool)

(declare-fun tb!2033 () Bool)

(assert (=> (and b!102942 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16)) t!5677) tb!2033))

(declare-fun result!3431 () Bool)

(assert (=> tb!2033 (= result!3431 tp_is_empty!2671)))

(assert (=> b!103385 t!5677))

(declare-fun b_and!6389 () Bool)

(assert (= b_and!6385 (and (=> t!5677 result!3431) b_and!6389)))

(declare-fun t!5679 () Bool)

(declare-fun tb!2035 () Bool)

(assert (=> (and b!102934 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 newMap!16)) t!5679) tb!2035))

(declare-fun result!3433 () Bool)

(assert (= result!3433 result!3431))

(assert (=> b!103385 t!5679))

(declare-fun b_and!6391 () Bool)

(assert (= b_and!6387 (and (=> t!5679 result!3433) b_and!6391)))

(declare-fun m!113947 () Bool)

(assert (=> bm!10846 m!113947))

(declare-fun m!113949 () Bool)

(assert (=> b!103387 m!113949))

(declare-fun m!113951 () Bool)

(assert (=> b!103387 m!113951))

(declare-fun m!113953 () Bool)

(assert (=> b!103387 m!113953))

(declare-fun m!113955 () Bool)

(assert (=> b!103387 m!113955))

(declare-fun m!113957 () Bool)

(assert (=> b!103387 m!113957))

(declare-fun m!113959 () Bool)

(assert (=> b!103387 m!113959))

(assert (=> b!103387 m!113949))

(declare-fun m!113961 () Bool)

(assert (=> b!103387 m!113961))

(declare-fun m!113963 () Bool)

(assert (=> b!103387 m!113963))

(declare-fun m!113965 () Bool)

(assert (=> b!103387 m!113965))

(declare-fun m!113967 () Bool)

(assert (=> b!103387 m!113967))

(declare-fun m!113969 () Bool)

(assert (=> b!103387 m!113969))

(assert (=> b!103387 m!113959))

(declare-fun m!113971 () Bool)

(assert (=> b!103387 m!113971))

(declare-fun m!113973 () Bool)

(assert (=> b!103387 m!113973))

(assert (=> b!103387 m!113957))

(declare-fun m!113975 () Bool)

(assert (=> b!103387 m!113975))

(assert (=> b!103387 m!113953))

(declare-fun m!113977 () Bool)

(assert (=> b!103387 m!113977))

(declare-fun m!113979 () Bool)

(assert (=> b!103387 m!113979))

(declare-fun m!113981 () Bool)

(assert (=> b!103387 m!113981))

(declare-fun m!113983 () Bool)

(assert (=> bm!10841 m!113983))

(declare-fun m!113985 () Bool)

(assert (=> d!27693 m!113985))

(declare-fun m!113987 () Bool)

(assert (=> b!103385 m!113987))

(assert (=> b!103385 m!113969))

(declare-fun m!113989 () Bool)

(assert (=> b!103385 m!113989))

(declare-fun m!113991 () Bool)

(assert (=> b!103385 m!113991))

(assert (=> b!103385 m!113987))

(declare-fun m!113993 () Bool)

(assert (=> b!103385 m!113993))

(assert (=> b!103385 m!113969))

(assert (=> b!103385 m!113991))

(assert (=> b!103402 m!113969))

(assert (=> b!103402 m!113969))

(declare-fun m!113995 () Bool)

(assert (=> b!103402 m!113995))

(assert (=> b!103389 m!113969))

(assert (=> b!103389 m!113969))

(declare-fun m!113997 () Bool)

(assert (=> b!103389 m!113997))

(declare-fun m!113999 () Bool)

(assert (=> b!103392 m!113999))

(assert (=> b!103382 m!113969))

(assert (=> b!103382 m!113969))

(assert (=> b!103382 m!113997))

(declare-fun m!114001 () Bool)

(assert (=> bm!10843 m!114001))

(declare-fun m!114003 () Bool)

(assert (=> b!103390 m!114003))

(assert (=> bm!10840 m!113967))

(declare-fun m!114005 () Bool)

(assert (=> b!103393 m!114005))

(assert (=> b!103285 d!27693))

(declare-fun d!27695 () Bool)

(declare-fun c!17795 () Bool)

(assert (=> d!27695 (= c!17795 ((_ is ValueCellFull!992) (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67372 () V!3209)

(assert (=> d!27695 (= (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67372)))

(declare-fun b!103403 () Bool)

(assert (=> b!103403 (= e!67372 (get!1326 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103404 () Bool)

(assert (=> b!103404 (= e!67372 (get!1327 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27695 c!17795) b!103403))

(assert (= (and d!27695 (not c!17795)) b!103404))

(assert (=> b!103403 m!113729))

(assert (=> b!103403 m!113539))

(declare-fun m!114007 () Bool)

(assert (=> b!103403 m!114007))

(assert (=> b!103404 m!113729))

(assert (=> b!103404 m!113539))

(declare-fun m!114009 () Bool)

(assert (=> b!103404 m!114009))

(assert (=> b!103135 d!27695))

(declare-fun d!27697 () Bool)

(declare-fun e!67373 () Bool)

(assert (=> d!27697 e!67373))

(declare-fun res!51616 () Bool)

(assert (=> d!27697 (=> (not res!51616) (not e!67373))))

(declare-fun lt!52653 () ListLongMap!1539)

(assert (=> d!27697 (= res!51616 (contains!816 lt!52653 (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun lt!52651 () List!1612)

(assert (=> d!27697 (= lt!52653 (ListLongMap!1540 lt!52651))))

(declare-fun lt!52650 () Unit!3141)

(declare-fun lt!52652 () Unit!3141)

(assert (=> d!27697 (= lt!52650 lt!52652)))

(assert (=> d!27697 (= (getValueByKey!153 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433))) (Some!158 (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))

(assert (=> d!27697 (= lt!52652 (lemmaContainsTupThenGetReturnValue!72 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))

(assert (=> d!27697 (= lt!52651 (insertStrictlySorted!75 (toList!785 lt!52436) (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))

(assert (=> d!27697 (= (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)) lt!52653)))

(declare-fun b!103405 () Bool)

(declare-fun res!51615 () Bool)

(assert (=> b!103405 (=> (not res!51615) (not e!67373))))

(assert (=> b!103405 (= res!51615 (= (getValueByKey!153 (toList!785 lt!52653) (_1!1197 (tuple2!2373 lt!52431 lt!52433))) (Some!158 (_2!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(declare-fun b!103406 () Bool)

(assert (=> b!103406 (= e!67373 (contains!819 (toList!785 lt!52653) (tuple2!2373 lt!52431 lt!52433)))))

(assert (= (and d!27697 res!51616) b!103405))

(assert (= (and b!103405 res!51615) b!103406))

(declare-fun m!114011 () Bool)

(assert (=> d!27697 m!114011))

(declare-fun m!114013 () Bool)

(assert (=> d!27697 m!114013))

(declare-fun m!114015 () Bool)

(assert (=> d!27697 m!114015))

(declare-fun m!114017 () Bool)

(assert (=> d!27697 m!114017))

(declare-fun m!114019 () Bool)

(assert (=> b!103405 m!114019))

(declare-fun m!114021 () Bool)

(assert (=> b!103406 m!114021))

(assert (=> b!103135 d!27697))

(declare-fun d!27699 () Bool)

(assert (=> d!27699 (not (contains!816 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)) lt!52437))))

(declare-fun lt!52656 () Unit!3141)

(declare-fun choose!646 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3141)

(assert (=> d!27699 (= lt!52656 (choose!646 lt!52436 lt!52431 lt!52433 lt!52437))))

(declare-fun e!67376 () Bool)

(assert (=> d!27699 e!67376))

(declare-fun res!51619 () Bool)

(assert (=> d!27699 (=> (not res!51619) (not e!67376))))

(assert (=> d!27699 (= res!51619 (not (contains!816 lt!52436 lt!52437)))))

(assert (=> d!27699 (= (addStillNotContains!46 lt!52436 lt!52431 lt!52433 lt!52437) lt!52656)))

(declare-fun b!103410 () Bool)

(assert (=> b!103410 (= e!67376 (not (= lt!52431 lt!52437)))))

(assert (= (and d!27699 res!51619) b!103410))

(assert (=> d!27699 m!113739))

(assert (=> d!27699 m!113739))

(assert (=> d!27699 m!113741))

(declare-fun m!114023 () Bool)

(assert (=> d!27699 m!114023))

(declare-fun m!114025 () Bool)

(assert (=> d!27699 m!114025))

(assert (=> b!103135 d!27699))

(declare-fun d!27701 () Bool)

(declare-fun e!67378 () Bool)

(assert (=> d!27701 e!67378))

(declare-fun res!51620 () Bool)

(assert (=> d!27701 (=> res!51620 e!67378)))

(declare-fun lt!52659 () Bool)

(assert (=> d!27701 (= res!51620 (not lt!52659))))

(declare-fun lt!52658 () Bool)

(assert (=> d!27701 (= lt!52659 lt!52658)))

(declare-fun lt!52660 () Unit!3141)

(declare-fun e!67377 () Unit!3141)

(assert (=> d!27701 (= lt!52660 e!67377)))

(declare-fun c!17796 () Bool)

(assert (=> d!27701 (= c!17796 lt!52658)))

(assert (=> d!27701 (= lt!52658 (containsKey!157 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))

(assert (=> d!27701 (= (contains!816 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)) lt!52437) lt!52659)))

(declare-fun b!103411 () Bool)

(declare-fun lt!52657 () Unit!3141)

(assert (=> b!103411 (= e!67377 lt!52657)))

(assert (=> b!103411 (= lt!52657 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))

(assert (=> b!103411 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))

(declare-fun b!103412 () Bool)

(declare-fun Unit!3153 () Unit!3141)

(assert (=> b!103412 (= e!67377 Unit!3153)))

(declare-fun b!103413 () Bool)

(assert (=> b!103413 (= e!67378 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437)))))

(assert (= (and d!27701 c!17796) b!103411))

(assert (= (and d!27701 (not c!17796)) b!103412))

(assert (= (and d!27701 (not res!51620)) b!103413))

(declare-fun m!114027 () Bool)

(assert (=> d!27701 m!114027))

(declare-fun m!114029 () Bool)

(assert (=> b!103411 m!114029))

(declare-fun m!114031 () Bool)

(assert (=> b!103411 m!114031))

(assert (=> b!103411 m!114031))

(declare-fun m!114033 () Bool)

(assert (=> b!103411 m!114033))

(assert (=> b!103413 m!114031))

(assert (=> b!103413 m!114031))

(assert (=> b!103413 m!114033))

(assert (=> b!103135 d!27701))

(declare-fun d!27703 () Bool)

(declare-fun e!67379 () Bool)

(assert (=> d!27703 e!67379))

(declare-fun res!51622 () Bool)

(assert (=> d!27703 (=> (not res!51622) (not e!67379))))

(declare-fun lt!52664 () ListLongMap!1539)

(assert (=> d!27703 (= res!51622 (contains!816 lt!52664 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!52662 () List!1612)

(assert (=> d!27703 (= lt!52664 (ListLongMap!1540 lt!52662))))

(declare-fun lt!52661 () Unit!3141)

(declare-fun lt!52663 () Unit!3141)

(assert (=> d!27703 (= lt!52661 lt!52663)))

(assert (=> d!27703 (= (getValueByKey!153 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27703 (= lt!52663 (lemmaContainsTupThenGetReturnValue!72 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27703 (= lt!52662 (insertStrictlySorted!75 (toList!785 call!10749) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27703 (= (+!134 call!10749 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!52664)))

(declare-fun b!103414 () Bool)

(declare-fun res!51621 () Bool)

(assert (=> b!103414 (=> (not res!51621) (not e!67379))))

(assert (=> b!103414 (= res!51621 (= (getValueByKey!153 (toList!785 lt!52664) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!103415 () Bool)

(assert (=> b!103415 (= e!67379 (contains!819 (toList!785 lt!52664) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!27703 res!51622) b!103414))

(assert (= (and b!103414 res!51621) b!103415))

(declare-fun m!114035 () Bool)

(assert (=> d!27703 m!114035))

(declare-fun m!114037 () Bool)

(assert (=> d!27703 m!114037))

(declare-fun m!114039 () Bool)

(assert (=> d!27703 m!114039))

(declare-fun m!114041 () Bool)

(assert (=> d!27703 m!114041))

(declare-fun m!114043 () Bool)

(assert (=> b!103414 m!114043))

(declare-fun m!114045 () Bool)

(assert (=> b!103415 m!114045))

(assert (=> b!103135 d!27703))

(declare-fun d!27705 () Bool)

(assert (=> d!27705 (= (map!1266 (_2!1198 lt!52557)) (getCurrentListMap!462 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))))))

(declare-fun bs!4226 () Bool)

(assert (= bs!4226 d!27705))

(declare-fun m!114047 () Bool)

(assert (=> bs!4226 m!114047))

(assert (=> bm!10806 d!27705))

(declare-fun d!27707 () Bool)

(declare-fun e!67381 () Bool)

(assert (=> d!27707 e!67381))

(declare-fun res!51623 () Bool)

(assert (=> d!27707 (=> res!51623 e!67381)))

(declare-fun lt!52667 () Bool)

(assert (=> d!27707 (= res!51623 (not lt!52667))))

(declare-fun lt!52666 () Bool)

(assert (=> d!27707 (= lt!52667 lt!52666)))

(declare-fun lt!52668 () Unit!3141)

(declare-fun e!67380 () Unit!3141)

(assert (=> d!27707 (= lt!52668 e!67380)))

(declare-fun c!17797 () Bool)

(assert (=> d!27707 (= c!17797 lt!52666)))

(assert (=> d!27707 (= lt!52666 (containsKey!157 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (=> d!27707 (= (contains!816 call!10801 (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))) lt!52667)))

(declare-fun b!103416 () Bool)

(declare-fun lt!52665 () Unit!3141)

(assert (=> b!103416 (= e!67380 lt!52665)))

(assert (=> b!103416 (= lt!52665 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (=> b!103416 (isDefined!107 (getValueByKey!153 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(declare-fun b!103417 () Bool)

(declare-fun Unit!3154 () Unit!3141)

(assert (=> b!103417 (= e!67380 Unit!3154)))

(declare-fun b!103418 () Bool)

(assert (=> b!103418 (= e!67381 (isDefined!107 (getValueByKey!153 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))))

(assert (= (and d!27707 c!17797) b!103416))

(assert (= (and d!27707 (not c!17797)) b!103417))

(assert (= (and d!27707 (not res!51623)) b!103418))

(assert (=> d!27707 m!113833))

(declare-fun m!114049 () Bool)

(assert (=> d!27707 m!114049))

(assert (=> b!103416 m!113833))

(declare-fun m!114051 () Bool)

(assert (=> b!103416 m!114051))

(assert (=> b!103416 m!113833))

(declare-fun m!114053 () Bool)

(assert (=> b!103416 m!114053))

(assert (=> b!103416 m!114053))

(declare-fun m!114055 () Bool)

(assert (=> b!103416 m!114055))

(assert (=> b!103418 m!113833))

(assert (=> b!103418 m!114053))

(assert (=> b!103418 m!114053))

(assert (=> b!103418 m!114055))

(assert (=> b!103257 d!27707))

(declare-fun d!27709 () Bool)

(declare-fun e!67384 () Bool)

(assert (=> d!27709 e!67384))

(declare-fun res!51626 () Bool)

(assert (=> d!27709 (=> (not res!51626) (not e!67384))))

(assert (=> d!27709 (= res!51626 (and (bvsge (index!3192 lt!52554) #b00000000000000000000000000000000) (bvslt (index!3192 lt!52554) (size!2299 (_keys!4261 newMap!16)))))))

(declare-fun lt!52671 () Unit!3141)

(declare-fun choose!647 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) Unit!3141)

(assert (=> d!27709 (= lt!52671 (choose!647 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27709 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27709 (= (lemmaValidKeyInArrayIsInListMap!105 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (defaultEntry!2560 newMap!16)) lt!52671)))

(declare-fun b!103421 () Bool)

(assert (=> b!103421 (= e!67384 (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (= (and d!27709 res!51626) b!103421))

(declare-fun m!114057 () Bool)

(assert (=> d!27709 m!114057))

(assert (=> d!27709 m!113985))

(declare-fun m!114059 () Bool)

(assert (=> b!103421 m!114059))

(assert (=> b!103421 m!113833))

(assert (=> b!103421 m!114059))

(assert (=> b!103421 m!113833))

(declare-fun m!114061 () Bool)

(assert (=> b!103421 m!114061))

(assert (=> b!103257 d!27709))

(declare-fun d!27711 () Bool)

(declare-fun e!67387 () Bool)

(assert (=> d!27711 e!67387))

(declare-fun res!51629 () Bool)

(assert (=> d!27711 (=> (not res!51629) (not e!67387))))

(assert (=> d!27711 (= res!51629 (and (bvsge (index!3192 lt!52554) #b00000000000000000000000000000000) (bvslt (index!3192 lt!52554) (size!2300 (_values!2543 newMap!16)))))))

(declare-fun lt!52674 () Unit!3141)

(declare-fun choose!648 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3141)

(assert (=> d!27711 (= lt!52674 (choose!648 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)))))

(assert (=> d!27711 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27711 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)) lt!52674)))

(declare-fun b!103424 () Bool)

(assert (=> b!103424 (= e!67387 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (getCurrentListMap!462 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))))))

(assert (= (and d!27711 res!51629) b!103424))

(assert (=> d!27711 m!113535))

(declare-fun m!114063 () Bool)

(assert (=> d!27711 m!114063))

(assert (=> d!27711 m!113985))

(assert (=> b!103424 m!113847))

(assert (=> b!103424 m!113847))

(declare-fun m!114065 () Bool)

(assert (=> b!103424 m!114065))

(assert (=> b!103424 m!113831))

(declare-fun m!114067 () Bool)

(assert (=> b!103424 m!114067))

(assert (=> b!103257 d!27711))

(declare-fun bm!10847 () Bool)

(declare-fun call!10850 () Bool)

(declare-fun c!17798 () Bool)

(assert (=> bm!10847 (= call!10850 (arrayNoDuplicates!0 (_keys!4261 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17798 (Cons!1609 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) Nil!1610) Nil!1610)))))

(declare-fun b!103425 () Bool)

(declare-fun e!67390 () Bool)

(declare-fun e!67391 () Bool)

(assert (=> b!103425 (= e!67390 e!67391)))

(assert (=> b!103425 (= c!17798 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103426 () Bool)

(assert (=> b!103426 (= e!67391 call!10850)))

(declare-fun d!27713 () Bool)

(declare-fun res!51631 () Bool)

(declare-fun e!67389 () Bool)

(assert (=> d!27713 (=> res!51631 e!67389)))

(assert (=> d!27713 (= res!51631 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27713 (= (arrayNoDuplicates!0 (_keys!4261 newMap!16) #b00000000000000000000000000000000 Nil!1610) e!67389)))

(declare-fun b!103427 () Bool)

(assert (=> b!103427 (= e!67389 e!67390)))

(declare-fun res!51632 () Bool)

(assert (=> b!103427 (=> (not res!51632) (not e!67390))))

(declare-fun e!67388 () Bool)

(assert (=> b!103427 (= res!51632 (not e!67388))))

(declare-fun res!51630 () Bool)

(assert (=> b!103427 (=> (not res!51630) (not e!67388))))

(assert (=> b!103427 (= res!51630 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103428 () Bool)

(assert (=> b!103428 (= e!67391 call!10850)))

(declare-fun b!103429 () Bool)

(assert (=> b!103429 (= e!67388 (contains!818 Nil!1610 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!27713 (not res!51631)) b!103427))

(assert (= (and b!103427 res!51630) b!103429))

(assert (= (and b!103427 res!51632) b!103425))

(assert (= (and b!103425 c!17798) b!103426))

(assert (= (and b!103425 (not c!17798)) b!103428))

(assert (= (or b!103426 b!103428) bm!10847))

(assert (=> bm!10847 m!113969))

(declare-fun m!114069 () Bool)

(assert (=> bm!10847 m!114069))

(assert (=> b!103425 m!113969))

(assert (=> b!103425 m!113969))

(assert (=> b!103425 m!113997))

(assert (=> b!103427 m!113969))

(assert (=> b!103427 m!113969))

(assert (=> b!103427 m!113997))

(assert (=> b!103429 m!113969))

(assert (=> b!103429 m!113969))

(declare-fun m!114071 () Bool)

(assert (=> b!103429 m!114071))

(assert (=> b!103161 d!27713))

(declare-fun d!27715 () Bool)

(assert (=> d!27715 (= (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103339 d!27715))

(assert (=> b!103133 d!27715))

(declare-fun b!103440 () Bool)

(declare-fun e!67397 () Option!159)

(assert (=> b!103440 (= e!67397 (getValueByKey!153 (t!5665 (toList!785 lt!52464)) (_1!1197 lt!52331)))))

(declare-fun b!103438 () Bool)

(declare-fun e!67396 () Option!159)

(assert (=> b!103438 (= e!67396 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52464)))))))

(declare-fun d!27717 () Bool)

(declare-fun c!17803 () Bool)

(assert (=> d!27717 (= c!17803 (and ((_ is Cons!1608) (toList!785 lt!52464)) (= (_1!1197 (h!2204 (toList!785 lt!52464))) (_1!1197 lt!52331))))))

(assert (=> d!27717 (= (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331)) e!67396)))

(declare-fun b!103439 () Bool)

(assert (=> b!103439 (= e!67396 e!67397)))

(declare-fun c!17804 () Bool)

(assert (=> b!103439 (= c!17804 (and ((_ is Cons!1608) (toList!785 lt!52464)) (not (= (_1!1197 (h!2204 (toList!785 lt!52464))) (_1!1197 lt!52331)))))))

(declare-fun b!103441 () Bool)

(assert (=> b!103441 (= e!67397 None!157)))

(assert (= (and d!27717 c!17803) b!103438))

(assert (= (and d!27717 (not c!17803)) b!103439))

(assert (= (and b!103439 c!17804) b!103440))

(assert (= (and b!103439 (not c!17804)) b!103441))

(declare-fun m!114073 () Bool)

(assert (=> b!103440 m!114073))

(assert (=> b!103151 d!27717))

(declare-fun b!103450 () Bool)

(declare-fun e!67403 () (_ BitVec 32))

(assert (=> b!103450 (= e!67403 #b00000000000000000000000000000000)))

(declare-fun bm!10850 () Bool)

(declare-fun call!10853 () (_ BitVec 32))

(assert (=> bm!10850 (= call!10853 (arrayCountValidKeys!0 (_keys!4261 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103451 () Bool)

(declare-fun e!67402 () (_ BitVec 32))

(assert (=> b!103451 (= e!67402 call!10853)))

(declare-fun d!27719 () Bool)

(declare-fun lt!52677 () (_ BitVec 32))

(assert (=> d!27719 (and (bvsge lt!52677 #b00000000000000000000000000000000) (bvsle lt!52677 (bvsub (size!2299 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!27719 (= lt!52677 e!67403)))

(declare-fun c!17809 () Bool)

(assert (=> d!27719 (= c!17809 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27719 (and (bvsle #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2299 (_keys!4261 newMap!16)) (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27719 (= (arrayCountValidKeys!0 (_keys!4261 newMap!16) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) lt!52677)))

(declare-fun b!103452 () Bool)

(assert (=> b!103452 (= e!67403 e!67402)))

(declare-fun c!17810 () Bool)

(assert (=> b!103452 (= c!17810 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103453 () Bool)

(assert (=> b!103453 (= e!67402 (bvadd #b00000000000000000000000000000001 call!10853))))

(assert (= (and d!27719 c!17809) b!103450))

(assert (= (and d!27719 (not c!17809)) b!103452))

(assert (= (and b!103452 c!17810) b!103453))

(assert (= (and b!103452 (not c!17810)) b!103451))

(assert (= (or b!103453 b!103451) bm!10850))

(declare-fun m!114075 () Bool)

(assert (=> bm!10850 m!114075))

(assert (=> b!103452 m!113969))

(assert (=> b!103452 m!113969))

(assert (=> b!103452 m!113997))

(assert (=> b!103159 d!27719))

(declare-fun d!27721 () Bool)

(declare-fun res!51633 () Bool)

(declare-fun e!67404 () Bool)

(assert (=> d!27721 (=> (not res!51633) (not e!67404))))

(assert (=> d!27721 (= res!51633 (simpleValid!73 (v!2867 (underlying!352 thiss!992))))))

(assert (=> d!27721 (= (valid!419 (v!2867 (underlying!352 thiss!992))) e!67404)))

(declare-fun b!103454 () Bool)

(declare-fun res!51634 () Bool)

(assert (=> b!103454 (=> (not res!51634) (not e!67404))))

(assert (=> b!103454 (= res!51634 (= (arrayCountValidKeys!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))) (_size!495 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!103455 () Bool)

(declare-fun res!51635 () Bool)

(assert (=> b!103455 (=> (not res!51635) (not e!67404))))

(assert (=> b!103455 (= res!51635 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!103456 () Bool)

(assert (=> b!103456 (= e!67404 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 Nil!1610))))

(assert (= (and d!27721 res!51633) b!103454))

(assert (= (and b!103454 res!51634) b!103455))

(assert (= (and b!103455 res!51635) b!103456))

(declare-fun m!114077 () Bool)

(assert (=> d!27721 m!114077))

(declare-fun m!114079 () Bool)

(assert (=> b!103454 m!114079))

(declare-fun m!114081 () Bool)

(assert (=> b!103455 m!114081))

(declare-fun m!114083 () Bool)

(assert (=> b!103456 m!114083))

(assert (=> d!27683 d!27721))

(assert (=> bm!10795 d!27677))

(assert (=> b!103088 d!27647))

(declare-fun b!103459 () Bool)

(declare-fun e!67406 () Option!159)

(assert (=> b!103459 (= e!67406 (getValueByKey!153 (t!5665 (toList!785 lt!52457)) (_1!1197 lt!52331)))))

(declare-fun b!103457 () Bool)

(declare-fun e!67405 () Option!159)

(assert (=> b!103457 (= e!67405 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52457)))))))

(declare-fun d!27723 () Bool)

(declare-fun c!17811 () Bool)

(assert (=> d!27723 (= c!17811 (and ((_ is Cons!1608) (toList!785 lt!52457)) (= (_1!1197 (h!2204 (toList!785 lt!52457))) (_1!1197 lt!52331))))))

(assert (=> d!27723 (= (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331)) e!67405)))

(declare-fun b!103458 () Bool)

(assert (=> b!103458 (= e!67405 e!67406)))

(declare-fun c!17812 () Bool)

(assert (=> b!103458 (= c!17812 (and ((_ is Cons!1608) (toList!785 lt!52457)) (not (= (_1!1197 (h!2204 (toList!785 lt!52457))) (_1!1197 lt!52331)))))))

(declare-fun b!103460 () Bool)

(assert (=> b!103460 (= e!67406 None!157)))

(assert (= (and d!27723 c!17811) b!103457))

(assert (= (and d!27723 (not c!17811)) b!103458))

(assert (= (and b!103458 c!17812) b!103459))

(assert (= (and b!103458 (not c!17812)) b!103460))

(declare-fun m!114085 () Bool)

(assert (=> b!103459 m!114085))

(assert (=> b!103149 d!27723))

(declare-fun d!27725 () Bool)

(declare-fun isEmpty!372 (List!1612) Bool)

(assert (=> d!27725 (= (isEmpty!371 lt!52435) (isEmpty!372 (toList!785 lt!52435)))))

(declare-fun bs!4227 () Bool)

(assert (= bs!4227 d!27725))

(declare-fun m!114087 () Bool)

(assert (=> bs!4227 m!114087))

(assert (=> b!103129 d!27725))

(declare-fun d!27727 () Bool)

(declare-fun e!67408 () Bool)

(assert (=> d!27727 e!67408))

(declare-fun res!51636 () Bool)

(assert (=> d!27727 (=> res!51636 e!67408)))

(declare-fun lt!52680 () Bool)

(assert (=> d!27727 (= res!51636 (not lt!52680))))

(declare-fun lt!52679 () Bool)

(assert (=> d!27727 (= lt!52680 lt!52679)))

(declare-fun lt!52681 () Unit!3141)

(declare-fun e!67407 () Unit!3141)

(assert (=> d!27727 (= lt!52681 e!67407)))

(declare-fun c!17813 () Bool)

(assert (=> d!27727 (= c!17813 lt!52679)))

(assert (=> d!27727 (= lt!52679 (containsKey!157 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27727 (= (contains!816 lt!52435 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52680)))

(declare-fun b!103461 () Bool)

(declare-fun lt!52678 () Unit!3141)

(assert (=> b!103461 (= e!67407 lt!52678)))

(assert (=> b!103461 (= lt!52678 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103461 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103462 () Bool)

(declare-fun Unit!3155 () Unit!3141)

(assert (=> b!103462 (= e!67407 Unit!3155)))

(declare-fun b!103463 () Bool)

(assert (=> b!103463 (= e!67408 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27727 c!17813) b!103461))

(assert (= (and d!27727 (not c!17813)) b!103462))

(assert (= (and d!27727 (not res!51636)) b!103463))

(declare-fun m!114089 () Bool)

(assert (=> d!27727 m!114089))

(declare-fun m!114091 () Bool)

(assert (=> b!103461 m!114091))

(declare-fun m!114093 () Bool)

(assert (=> b!103461 m!114093))

(assert (=> b!103461 m!114093))

(declare-fun m!114095 () Bool)

(assert (=> b!103461 m!114095))

(assert (=> b!103463 m!114093))

(assert (=> b!103463 m!114093))

(assert (=> b!103463 m!114095))

(assert (=> d!27653 d!27727))

(assert (=> d!27653 d!27665))

(declare-fun d!27729 () Bool)

(declare-fun get!1328 (Option!159) V!3209)

(assert (=> d!27729 (= (apply!97 lt!52612 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4228 () Bool)

(assert (= bs!4228 d!27729))

(declare-fun m!114097 () Bool)

(assert (=> bs!4228 m!114097))

(assert (=> bs!4228 m!114097))

(declare-fun m!114099 () Bool)

(assert (=> bs!4228 m!114099))

(assert (=> b!103349 d!27729))

(declare-fun d!27731 () Bool)

(declare-fun e!67409 () Bool)

(assert (=> d!27731 e!67409))

(declare-fun res!51638 () Bool)

(assert (=> d!27731 (=> (not res!51638) (not e!67409))))

(declare-fun lt!52685 () ListLongMap!1539)

(assert (=> d!27731 (= res!51638 (contains!816 lt!52685 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun lt!52683 () List!1612)

(assert (=> d!27731 (= lt!52685 (ListLongMap!1540 lt!52683))))

(declare-fun lt!52682 () Unit!3141)

(declare-fun lt!52684 () Unit!3141)

(assert (=> d!27731 (= lt!52682 lt!52684)))

(assert (=> d!27731 (= (getValueByKey!153 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (Some!158 (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!27731 (= lt!52684 (lemmaContainsTupThenGetReturnValue!72 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!27731 (= lt!52683 (insertStrictlySorted!75 (toList!785 e!67299) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!27731 (= (+!134 e!67299 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!52685)))

(declare-fun b!103464 () Bool)

(declare-fun res!51637 () Bool)

(assert (=> b!103464 (=> (not res!51637) (not e!67409))))

(assert (=> b!103464 (= res!51637 (= (getValueByKey!153 (toList!785 lt!52685) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (Some!158 (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!103465 () Bool)

(assert (=> b!103465 (= e!67409 (contains!819 (toList!785 lt!52685) (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (= (and d!27731 res!51638) b!103464))

(assert (= (and b!103464 res!51637) b!103465))

(declare-fun m!114101 () Bool)

(assert (=> d!27731 m!114101))

(declare-fun m!114103 () Bool)

(assert (=> d!27731 m!114103))

(declare-fun m!114105 () Bool)

(assert (=> d!27731 m!114105))

(declare-fun m!114107 () Bool)

(assert (=> d!27731 m!114107))

(declare-fun m!114109 () Bool)

(assert (=> b!103464 m!114109))

(declare-fun m!114111 () Bool)

(assert (=> b!103465 m!114111))

(assert (=> bm!10810 d!27731))

(declare-fun b!103468 () Bool)

(declare-fun e!67411 () Option!159)

(assert (=> b!103468 (= e!67411 (getValueByKey!153 (t!5665 (toList!785 lt!52453)) (_1!1197 lt!52325)))))

(declare-fun b!103466 () Bool)

(declare-fun e!67410 () Option!159)

(assert (=> b!103466 (= e!67410 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52453)))))))

(declare-fun d!27733 () Bool)

(declare-fun c!17814 () Bool)

(assert (=> d!27733 (= c!17814 (and ((_ is Cons!1608) (toList!785 lt!52453)) (= (_1!1197 (h!2204 (toList!785 lt!52453))) (_1!1197 lt!52325))))))

(assert (=> d!27733 (= (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325)) e!67410)))

(declare-fun b!103467 () Bool)

(assert (=> b!103467 (= e!67410 e!67411)))

(declare-fun c!17815 () Bool)

(assert (=> b!103467 (= c!17815 (and ((_ is Cons!1608) (toList!785 lt!52453)) (not (= (_1!1197 (h!2204 (toList!785 lt!52453))) (_1!1197 lt!52325)))))))

(declare-fun b!103469 () Bool)

(assert (=> b!103469 (= e!67411 None!157)))

(assert (= (and d!27733 c!17814) b!103466))

(assert (= (and d!27733 (not c!17814)) b!103467))

(assert (= (and b!103467 c!17815) b!103468))

(assert (= (and b!103467 (not c!17815)) b!103469))

(declare-fun m!114113 () Bool)

(assert (=> b!103468 m!114113))

(assert (=> b!103147 d!27733))

(assert (=> d!27645 d!27651))

(declare-fun d!27735 () Bool)

(assert (=> d!27735 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) from!355 Nil!1610)))

(assert (=> d!27735 true))

(declare-fun _$71!144 () Unit!3141)

(assert (=> d!27735 (= (choose!39 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!144)))

(declare-fun bs!4229 () Bool)

(assert (= bs!4229 d!27735))

(assert (=> bs!4229 m!113579))

(assert (=> d!27645 d!27735))

(declare-fun b!103470 () Bool)

(declare-fun e!67424 () Bool)

(assert (=> b!103470 (= e!67424 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103471 () Bool)

(declare-fun c!17819 () Bool)

(assert (=> b!103471 (= c!17819 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67421 () ListLongMap!1539)

(declare-fun e!67422 () ListLongMap!1539)

(assert (=> b!103471 (= e!67421 e!67422)))

(declare-fun b!103472 () Bool)

(declare-fun e!67417 () Bool)

(declare-fun call!10854 () Bool)

(assert (=> b!103472 (= e!67417 (not call!10854))))

(declare-fun bm!10851 () Bool)

(declare-fun call!10857 () ListLongMap!1539)

(assert (=> bm!10851 (= call!10857 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52696 () ListLongMap!1539)

(declare-fun e!67416 () Bool)

(declare-fun b!103473 () Bool)

(assert (=> b!103473 (= e!67416 (= (apply!97 lt!52696 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (ite c!17763 (_values!2543 newMap!16) lt!52532))))))

(assert (=> b!103473 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103474 () Bool)

(declare-fun e!67423 () ListLongMap!1539)

(assert (=> b!103474 (= e!67423 e!67421)))

(declare-fun c!17817 () Bool)

(assert (=> b!103474 (= c!17817 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103475 () Bool)

(declare-fun e!67418 () Unit!3141)

(declare-fun lt!52700 () Unit!3141)

(assert (=> b!103475 (= e!67418 lt!52700)))

(declare-fun lt!52687 () ListLongMap!1539)

(assert (=> b!103475 (= lt!52687 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52689 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52689 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52705 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52705 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52707 () Unit!3141)

(assert (=> b!103475 (= lt!52707 (addStillContains!73 lt!52687 lt!52689 (zeroValue!2437 newMap!16) lt!52705))))

(assert (=> b!103475 (contains!816 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))) lt!52705)))

(declare-fun lt!52703 () Unit!3141)

(assert (=> b!103475 (= lt!52703 lt!52707)))

(declare-fun lt!52698 () ListLongMap!1539)

(assert (=> b!103475 (= lt!52698 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52706 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52706 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52688 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52688 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52693 () Unit!3141)

(assert (=> b!103475 (= lt!52693 (addApplyDifferent!73 lt!52698 lt!52706 (minValue!2437 newMap!16) lt!52688))))

(assert (=> b!103475 (= (apply!97 (+!134 lt!52698 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))) lt!52688) (apply!97 lt!52698 lt!52688))))

(declare-fun lt!52686 () Unit!3141)

(assert (=> b!103475 (= lt!52686 lt!52693)))

(declare-fun lt!52704 () ListLongMap!1539)

(assert (=> b!103475 (= lt!52704 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52699 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52699 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52701 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52701 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52690 () Unit!3141)

(assert (=> b!103475 (= lt!52690 (addApplyDifferent!73 lt!52704 lt!52699 (zeroValue!2437 newMap!16) lt!52701))))

(assert (=> b!103475 (= (apply!97 (+!134 lt!52704 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))) lt!52701) (apply!97 lt!52704 lt!52701))))

(declare-fun lt!52695 () Unit!3141)

(assert (=> b!103475 (= lt!52695 lt!52690)))

(declare-fun lt!52697 () ListLongMap!1539)

(assert (=> b!103475 (= lt!52697 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52702 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52702 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52692 () (_ BitVec 64))

(assert (=> b!103475 (= lt!52692 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103475 (= lt!52700 (addApplyDifferent!73 lt!52697 lt!52702 (minValue!2437 newMap!16) lt!52692))))

(assert (=> b!103475 (= (apply!97 (+!134 lt!52697 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))) lt!52692) (apply!97 lt!52697 lt!52692))))

(declare-fun b!103476 () Bool)

(declare-fun e!67412 () Bool)

(declare-fun e!67415 () Bool)

(assert (=> b!103476 (= e!67412 e!67415)))

(declare-fun res!51641 () Bool)

(declare-fun call!10856 () Bool)

(assert (=> b!103476 (= res!51641 call!10856)))

(assert (=> b!103476 (=> (not res!51641) (not e!67415))))

(declare-fun b!103477 () Bool)

(declare-fun e!67420 () Bool)

(assert (=> b!103477 (= e!67420 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103478 () Bool)

(declare-fun e!67419 () Bool)

(assert (=> b!103478 (= e!67419 (= (apply!97 lt!52696 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun call!10859 () ListLongMap!1539)

(declare-fun call!10855 () ListLongMap!1539)

(declare-fun bm!10852 () Bool)

(declare-fun c!17816 () Bool)

(declare-fun call!10860 () ListLongMap!1539)

(assert (=> bm!10852 (= call!10860 (+!134 (ite c!17816 call!10857 (ite c!17817 call!10855 call!10859)) (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!10853 () Bool)

(assert (=> bm!10853 (= call!10855 call!10857)))

(declare-fun b!103479 () Bool)

(declare-fun res!51642 () Bool)

(declare-fun e!67414 () Bool)

(assert (=> b!103479 (=> (not res!51642) (not e!67414))))

(declare-fun e!67413 () Bool)

(assert (=> b!103479 (= res!51642 e!67413)))

(declare-fun res!51644 () Bool)

(assert (=> b!103479 (=> res!51644 e!67413)))

(assert (=> b!103479 (= res!51644 (not e!67424))))

(declare-fun res!51639 () Bool)

(assert (=> b!103479 (=> (not res!51639) (not e!67424))))

(assert (=> b!103479 (= res!51639 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10854 () Bool)

(assert (=> bm!10854 (= call!10856 (contains!816 lt!52696 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10855 () Bool)

(assert (=> bm!10855 (= call!10859 call!10855)))

(declare-fun b!103480 () Bool)

(assert (=> b!103480 (= e!67415 (= (apply!97 lt!52696 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!27737 () Bool)

(assert (=> d!27737 e!67414))

(declare-fun res!51645 () Bool)

(assert (=> d!27737 (=> (not res!51645) (not e!67414))))

(assert (=> d!27737 (= res!51645 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!52691 () ListLongMap!1539)

(assert (=> d!27737 (= lt!52696 lt!52691)))

(declare-fun lt!52694 () Unit!3141)

(assert (=> d!27737 (= lt!52694 e!67418)))

(declare-fun c!17820 () Bool)

(assert (=> d!27737 (= c!17820 e!67420)))

(declare-fun res!51647 () Bool)

(assert (=> d!27737 (=> (not res!51647) (not e!67420))))

(assert (=> d!27737 (= res!51647 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27737 (= lt!52691 e!67423)))

(assert (=> d!27737 (= c!17816 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27737 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27737 (= (getCurrentListMap!462 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!52696)))

(declare-fun b!103481 () Bool)

(assert (=> b!103481 (= e!67423 (+!134 call!10860 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!103482 () Bool)

(declare-fun res!51643 () Bool)

(assert (=> b!103482 (=> (not res!51643) (not e!67414))))

(assert (=> b!103482 (= res!51643 e!67417)))

(declare-fun c!17818 () Bool)

(assert (=> b!103482 (= c!17818 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103483 () Bool)

(assert (=> b!103483 (= e!67417 e!67419)))

(declare-fun res!51640 () Bool)

(assert (=> b!103483 (= res!51640 call!10854)))

(assert (=> b!103483 (=> (not res!51640) (not e!67419))))

(declare-fun b!103484 () Bool)

(declare-fun call!10858 () ListLongMap!1539)

(assert (=> b!103484 (= e!67421 call!10858)))

(declare-fun bm!10856 () Bool)

(assert (=> bm!10856 (= call!10858 call!10860)))

(declare-fun b!103485 () Bool)

(declare-fun Unit!3156 () Unit!3141)

(assert (=> b!103485 (= e!67418 Unit!3156)))

(declare-fun b!103486 () Bool)

(assert (=> b!103486 (= e!67414 e!67412)))

(declare-fun c!17821 () Bool)

(assert (=> b!103486 (= c!17821 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103487 () Bool)

(assert (=> b!103487 (= e!67422 call!10858)))

(declare-fun b!103488 () Bool)

(assert (=> b!103488 (= e!67412 (not call!10856))))

(declare-fun b!103489 () Bool)

(assert (=> b!103489 (= e!67422 call!10859)))

(declare-fun b!103490 () Bool)

(assert (=> b!103490 (= e!67413 e!67416)))

(declare-fun res!51646 () Bool)

(assert (=> b!103490 (=> (not res!51646) (not e!67416))))

(assert (=> b!103490 (= res!51646 (contains!816 lt!52696 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103490 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10857 () Bool)

(assert (=> bm!10857 (= call!10854 (contains!816 lt!52696 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27737 c!17816) b!103481))

(assert (= (and d!27737 (not c!17816)) b!103474))

(assert (= (and b!103474 c!17817) b!103484))

(assert (= (and b!103474 (not c!17817)) b!103471))

(assert (= (and b!103471 c!17819) b!103487))

(assert (= (and b!103471 (not c!17819)) b!103489))

(assert (= (or b!103487 b!103489) bm!10855))

(assert (= (or b!103484 bm!10855) bm!10853))

(assert (= (or b!103484 b!103487) bm!10856))

(assert (= (or b!103481 bm!10853) bm!10851))

(assert (= (or b!103481 bm!10856) bm!10852))

(assert (= (and d!27737 res!51647) b!103477))

(assert (= (and d!27737 c!17820) b!103475))

(assert (= (and d!27737 (not c!17820)) b!103485))

(assert (= (and d!27737 res!51645) b!103479))

(assert (= (and b!103479 res!51639) b!103470))

(assert (= (and b!103479 (not res!51644)) b!103490))

(assert (= (and b!103490 res!51646) b!103473))

(assert (= (and b!103479 res!51642) b!103482))

(assert (= (and b!103482 c!17818) b!103483))

(assert (= (and b!103482 (not c!17818)) b!103472))

(assert (= (and b!103483 res!51640) b!103478))

(assert (= (or b!103483 b!103472) bm!10857))

(assert (= (and b!103482 res!51643) b!103486))

(assert (= (and b!103486 c!17821) b!103476))

(assert (= (and b!103486 (not c!17821)) b!103488))

(assert (= (and b!103476 res!51641) b!103480))

(assert (= (or b!103476 b!103488) bm!10854))

(declare-fun b_lambda!4615 () Bool)

(assert (=> (not b_lambda!4615) (not b!103473)))

(assert (=> b!103473 t!5677))

(declare-fun b_and!6393 () Bool)

(assert (= b_and!6389 (and (=> t!5677 result!3431) b_and!6393)))

(assert (=> b!103473 t!5679))

(declare-fun b_and!6395 () Bool)

(assert (= b_and!6391 (and (=> t!5679 result!3433) b_and!6395)))

(declare-fun m!114115 () Bool)

(assert (=> bm!10857 m!114115))

(declare-fun m!114117 () Bool)

(assert (=> b!103475 m!114117))

(declare-fun m!114119 () Bool)

(assert (=> b!103475 m!114119))

(declare-fun m!114121 () Bool)

(assert (=> b!103475 m!114121))

(declare-fun m!114123 () Bool)

(assert (=> b!103475 m!114123))

(declare-fun m!114125 () Bool)

(assert (=> b!103475 m!114125))

(declare-fun m!114127 () Bool)

(assert (=> b!103475 m!114127))

(assert (=> b!103475 m!114117))

(declare-fun m!114129 () Bool)

(assert (=> b!103475 m!114129))

(declare-fun m!114131 () Bool)

(assert (=> b!103475 m!114131))

(declare-fun m!114133 () Bool)

(assert (=> b!103475 m!114133))

(declare-fun m!114135 () Bool)

(assert (=> b!103475 m!114135))

(assert (=> b!103475 m!113969))

(assert (=> b!103475 m!114127))

(declare-fun m!114137 () Bool)

(assert (=> b!103475 m!114137))

(declare-fun m!114139 () Bool)

(assert (=> b!103475 m!114139))

(assert (=> b!103475 m!114125))

(declare-fun m!114141 () Bool)

(assert (=> b!103475 m!114141))

(assert (=> b!103475 m!114121))

(declare-fun m!114143 () Bool)

(assert (=> b!103475 m!114143))

(declare-fun m!114145 () Bool)

(assert (=> b!103475 m!114145))

(declare-fun m!114147 () Bool)

(assert (=> b!103475 m!114147))

(declare-fun m!114149 () Bool)

(assert (=> bm!10852 m!114149))

(assert (=> d!27737 m!113985))

(assert (=> b!103473 m!113987))

(assert (=> b!103473 m!113969))

(declare-fun m!114151 () Bool)

(assert (=> b!103473 m!114151))

(declare-fun m!114153 () Bool)

(assert (=> b!103473 m!114153))

(assert (=> b!103473 m!113987))

(declare-fun m!114155 () Bool)

(assert (=> b!103473 m!114155))

(assert (=> b!103473 m!113969))

(assert (=> b!103473 m!114153))

(assert (=> b!103490 m!113969))

(assert (=> b!103490 m!113969))

(declare-fun m!114157 () Bool)

(assert (=> b!103490 m!114157))

(assert (=> b!103477 m!113969))

(assert (=> b!103477 m!113969))

(assert (=> b!103477 m!113997))

(declare-fun m!114159 () Bool)

(assert (=> b!103480 m!114159))

(assert (=> b!103470 m!113969))

(assert (=> b!103470 m!113969))

(assert (=> b!103470 m!113997))

(declare-fun m!114161 () Bool)

(assert (=> bm!10854 m!114161))

(declare-fun m!114163 () Bool)

(assert (=> b!103478 m!114163))

(assert (=> bm!10851 m!114135))

(declare-fun m!114165 () Bool)

(assert (=> b!103481 m!114165))

(assert (=> bm!10816 d!27737))

(declare-fun d!27739 () Bool)

(declare-fun isEmpty!373 (Option!159) Bool)

(assert (=> d!27739 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun bs!4230 () Bool)

(assert (= bs!4230 d!27739))

(assert (=> bs!4230 m!113815))

(declare-fun m!114167 () Bool)

(assert (=> bs!4230 m!114167))

(assert (=> b!103170 d!27739))

(declare-fun e!67426 () Option!159)

(declare-fun b!103493 () Bool)

(assert (=> b!103493 (= e!67426 (getValueByKey!153 (t!5665 (toList!785 lt!52327)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103491 () Bool)

(declare-fun e!67425 () Option!159)

(assert (=> b!103491 (= e!67425 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52327)))))))

(declare-fun c!17822 () Bool)

(declare-fun d!27741 () Bool)

(assert (=> d!27741 (= c!17822 (and ((_ is Cons!1608) (toList!785 lt!52327)) (= (_1!1197 (h!2204 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!27741 (= (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!67425)))

(declare-fun b!103492 () Bool)

(assert (=> b!103492 (= e!67425 e!67426)))

(declare-fun c!17823 () Bool)

(assert (=> b!103492 (= c!17823 (and ((_ is Cons!1608) (toList!785 lt!52327)) (not (= (_1!1197 (h!2204 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun b!103494 () Bool)

(assert (=> b!103494 (= e!67426 None!157)))

(assert (= (and d!27741 c!17822) b!103491))

(assert (= (and d!27741 (not c!17822)) b!103492))

(assert (= (and b!103492 c!17823) b!103493))

(assert (= (and b!103492 (not c!17823)) b!103494))

(assert (=> b!103493 m!113535))

(declare-fun m!114169 () Bool)

(assert (=> b!103493 m!114169))

(assert (=> b!103170 d!27741))

(declare-fun d!27743 () Bool)

(declare-fun e!67429 () Bool)

(assert (=> d!27743 e!67429))

(declare-fun c!17826 () Bool)

(assert (=> d!27743 (= c!17826 (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!27743 true))

(declare-fun _$29!138 () Unit!3141)

(assert (=> d!27743 (= (choose!644 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) _$29!138)))

(declare-fun b!103499 () Bool)

(assert (=> b!103499 (= e!67429 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103500 () Bool)

(assert (=> b!103500 (= e!67429 (ite (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27743 c!17826) b!103499))

(assert (= (and d!27743 (not c!17826)) b!103500))

(assert (=> b!103499 m!113535))

(assert (=> b!103499 m!113583))

(assert (=> d!27649 d!27743))

(assert (=> d!27649 d!27665))

(declare-fun b!103503 () Bool)

(declare-fun e!67431 () Option!159)

(assert (=> b!103503 (= e!67431 (getValueByKey!153 (t!5665 (toList!785 lt!52449)) (_1!1197 lt!52325)))))

(declare-fun b!103501 () Bool)

(declare-fun e!67430 () Option!159)

(assert (=> b!103501 (= e!67430 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52449)))))))

(declare-fun d!27745 () Bool)

(declare-fun c!17827 () Bool)

(assert (=> d!27745 (= c!17827 (and ((_ is Cons!1608) (toList!785 lt!52449)) (= (_1!1197 (h!2204 (toList!785 lt!52449))) (_1!1197 lt!52325))))))

(assert (=> d!27745 (= (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325)) e!67430)))

(declare-fun b!103502 () Bool)

(assert (=> b!103502 (= e!67430 e!67431)))

(declare-fun c!17828 () Bool)

(assert (=> b!103502 (= c!17828 (and ((_ is Cons!1608) (toList!785 lt!52449)) (not (= (_1!1197 (h!2204 (toList!785 lt!52449))) (_1!1197 lt!52325)))))))

(declare-fun b!103504 () Bool)

(assert (=> b!103504 (= e!67431 None!157)))

(assert (= (and d!27745 c!17827) b!103501))

(assert (= (and d!27745 (not c!17827)) b!103502))

(assert (= (and b!103502 c!17828) b!103503))

(assert (= (and b!103502 (not c!17828)) b!103504))

(declare-fun m!114171 () Bool)

(assert (=> b!103503 m!114171))

(assert (=> b!103145 d!27745))

(declare-fun d!27747 () Bool)

(declare-fun e!67433 () Bool)

(assert (=> d!27747 e!67433))

(declare-fun res!51648 () Bool)

(assert (=> d!27747 (=> res!51648 e!67433)))

(declare-fun lt!52710 () Bool)

(assert (=> d!27747 (= res!51648 (not lt!52710))))

(declare-fun lt!52709 () Bool)

(assert (=> d!27747 (= lt!52710 lt!52709)))

(declare-fun lt!52711 () Unit!3141)

(declare-fun e!67432 () Unit!3141)

(assert (=> d!27747 (= lt!52711 e!67432)))

(declare-fun c!17829 () Bool)

(assert (=> d!27747 (= c!17829 lt!52709)))

(assert (=> d!27747 (= lt!52709 (containsKey!157 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27747 (= (contains!816 lt!52612 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52710)))

(declare-fun b!103505 () Bool)

(declare-fun lt!52708 () Unit!3141)

(assert (=> b!103505 (= e!67432 lt!52708)))

(assert (=> b!103505 (= lt!52708 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103505 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103506 () Bool)

(declare-fun Unit!3157 () Unit!3141)

(assert (=> b!103506 (= e!67432 Unit!3157)))

(declare-fun b!103507 () Bool)

(assert (=> b!103507 (= e!67433 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27747 c!17829) b!103505))

(assert (= (and d!27747 (not c!17829)) b!103506))

(assert (= (and d!27747 (not res!51648)) b!103507))

(declare-fun m!114173 () Bool)

(assert (=> d!27747 m!114173))

(declare-fun m!114175 () Bool)

(assert (=> b!103505 m!114175))

(assert (=> b!103505 m!114097))

(assert (=> b!103505 m!114097))

(declare-fun m!114177 () Bool)

(assert (=> b!103505 m!114177))

(assert (=> b!103507 m!114097))

(assert (=> b!103507 m!114097))

(assert (=> b!103507 m!114177))

(assert (=> bm!10836 d!27747))

(declare-fun d!27749 () Bool)

(declare-fun e!67435 () Bool)

(assert (=> d!27749 e!67435))

(declare-fun res!51649 () Bool)

(assert (=> d!27749 (=> res!51649 e!67435)))

(declare-fun lt!52714 () Bool)

(assert (=> d!27749 (= res!51649 (not lt!52714))))

(declare-fun lt!52713 () Bool)

(assert (=> d!27749 (= lt!52714 lt!52713)))

(declare-fun lt!52715 () Unit!3141)

(declare-fun e!67434 () Unit!3141)

(assert (=> d!27749 (= lt!52715 e!67434)))

(declare-fun c!17830 () Bool)

(assert (=> d!27749 (= c!17830 lt!52713)))

(assert (=> d!27749 (= lt!52713 (containsKey!157 (toList!785 lt!52464) (_1!1197 lt!52331)))))

(assert (=> d!27749 (= (contains!816 lt!52464 (_1!1197 lt!52331)) lt!52714)))

(declare-fun b!103508 () Bool)

(declare-fun lt!52712 () Unit!3141)

(assert (=> b!103508 (= e!67434 lt!52712)))

(assert (=> b!103508 (= lt!52712 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52464) (_1!1197 lt!52331)))))

(assert (=> b!103508 (isDefined!107 (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331)))))

(declare-fun b!103509 () Bool)

(declare-fun Unit!3158 () Unit!3141)

(assert (=> b!103509 (= e!67434 Unit!3158)))

(declare-fun b!103510 () Bool)

(assert (=> b!103510 (= e!67435 (isDefined!107 (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331))))))

(assert (= (and d!27749 c!17830) b!103508))

(assert (= (and d!27749 (not c!17830)) b!103509))

(assert (= (and d!27749 (not res!51649)) b!103510))

(declare-fun m!114179 () Bool)

(assert (=> d!27749 m!114179))

(declare-fun m!114181 () Bool)

(assert (=> b!103508 m!114181))

(assert (=> b!103508 m!113799))

(assert (=> b!103508 m!113799))

(declare-fun m!114183 () Bool)

(assert (=> b!103508 m!114183))

(assert (=> b!103510 m!113799))

(assert (=> b!103510 m!113799))

(assert (=> b!103510 m!114183))

(assert (=> d!27663 d!27749))

(declare-fun b!103513 () Bool)

(declare-fun e!67437 () Option!159)

(assert (=> b!103513 (= e!67437 (getValueByKey!153 (t!5665 lt!52462) (_1!1197 lt!52331)))))

(declare-fun b!103511 () Bool)

(declare-fun e!67436 () Option!159)

(assert (=> b!103511 (= e!67436 (Some!158 (_2!1197 (h!2204 lt!52462))))))

(declare-fun d!27751 () Bool)

(declare-fun c!17831 () Bool)

(assert (=> d!27751 (= c!17831 (and ((_ is Cons!1608) lt!52462) (= (_1!1197 (h!2204 lt!52462)) (_1!1197 lt!52331))))))

(assert (=> d!27751 (= (getValueByKey!153 lt!52462 (_1!1197 lt!52331)) e!67436)))

(declare-fun b!103512 () Bool)

(assert (=> b!103512 (= e!67436 e!67437)))

(declare-fun c!17832 () Bool)

(assert (=> b!103512 (= c!17832 (and ((_ is Cons!1608) lt!52462) (not (= (_1!1197 (h!2204 lt!52462)) (_1!1197 lt!52331)))))))

(declare-fun b!103514 () Bool)

(assert (=> b!103514 (= e!67437 None!157)))

(assert (= (and d!27751 c!17831) b!103511))

(assert (= (and d!27751 (not c!17831)) b!103512))

(assert (= (and b!103512 c!17832) b!103513))

(assert (= (and b!103512 (not c!17832)) b!103514))

(declare-fun m!114185 () Bool)

(assert (=> b!103513 m!114185))

(assert (=> d!27663 d!27751))

(declare-fun d!27753 () Bool)

(assert (=> d!27753 (= (getValueByKey!153 lt!52462 (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331)))))

(declare-fun lt!52718 () Unit!3141)

(declare-fun choose!649 (List!1612 (_ BitVec 64) V!3209) Unit!3141)

(assert (=> d!27753 (= lt!52718 (choose!649 lt!52462 (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(declare-fun e!67440 () Bool)

(assert (=> d!27753 e!67440))

(declare-fun res!51654 () Bool)

(assert (=> d!27753 (=> (not res!51654) (not e!67440))))

(declare-fun isStrictlySorted!303 (List!1612) Bool)

(assert (=> d!27753 (= res!51654 (isStrictlySorted!303 lt!52462))))

(assert (=> d!27753 (= (lemmaContainsTupThenGetReturnValue!72 lt!52462 (_1!1197 lt!52331) (_2!1197 lt!52331)) lt!52718)))

(declare-fun b!103519 () Bool)

(declare-fun res!51655 () Bool)

(assert (=> b!103519 (=> (not res!51655) (not e!67440))))

(assert (=> b!103519 (= res!51655 (containsKey!157 lt!52462 (_1!1197 lt!52331)))))

(declare-fun b!103520 () Bool)

(assert (=> b!103520 (= e!67440 (contains!819 lt!52462 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(assert (= (and d!27753 res!51654) b!103519))

(assert (= (and b!103519 res!51655) b!103520))

(assert (=> d!27753 m!113793))

(declare-fun m!114187 () Bool)

(assert (=> d!27753 m!114187))

(declare-fun m!114189 () Bool)

(assert (=> d!27753 m!114189))

(declare-fun m!114191 () Bool)

(assert (=> b!103519 m!114191))

(declare-fun m!114193 () Bool)

(assert (=> b!103520 m!114193))

(assert (=> d!27663 d!27753))

(declare-fun b!103541 () Bool)

(declare-fun e!67452 () List!1612)

(declare-fun call!10869 () List!1612)

(assert (=> b!103541 (= e!67452 call!10869)))

(declare-fun b!103542 () Bool)

(declare-fun e!67453 () List!1612)

(assert (=> b!103542 (= e!67453 (insertStrictlySorted!75 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))) (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(declare-fun b!103543 () Bool)

(declare-fun res!51660 () Bool)

(declare-fun e!67455 () Bool)

(assert (=> b!103543 (=> (not res!51660) (not e!67455))))

(declare-fun lt!52721 () List!1612)

(assert (=> b!103543 (= res!51660 (containsKey!157 lt!52721 (_1!1197 lt!52331)))))

(declare-fun bm!10864 () Bool)

(declare-fun call!10867 () List!1612)

(assert (=> bm!10864 (= call!10867 call!10869)))

(declare-fun b!103544 () Bool)

(declare-fun e!67451 () List!1612)

(assert (=> b!103544 (= e!67451 call!10867)))

(declare-fun b!103545 () Bool)

(declare-fun c!17843 () Bool)

(declare-fun c!17841 () Bool)

(assert (=> b!103545 (= e!67453 (ite c!17843 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))) (ite c!17841 (Cons!1608 (h!2204 (toList!785 (+!134 lt!52333 lt!52325))) (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) Nil!1609)))))

(declare-fun d!27755 () Bool)

(assert (=> d!27755 e!67455))

(declare-fun res!51661 () Bool)

(assert (=> d!27755 (=> (not res!51661) (not e!67455))))

(assert (=> d!27755 (= res!51661 (isStrictlySorted!303 lt!52721))))

(declare-fun e!67454 () List!1612)

(assert (=> d!27755 (= lt!52721 e!67454)))

(declare-fun c!17844 () Bool)

(assert (=> d!27755 (= c!17844 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 lt!52325))) (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52325)))) (_1!1197 lt!52331))))))

(assert (=> d!27755 (isStrictlySorted!303 (toList!785 (+!134 lt!52333 lt!52325)))))

(assert (=> d!27755 (= (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 lt!52325)) (_1!1197 lt!52331) (_2!1197 lt!52331)) lt!52721)))

(declare-fun b!103546 () Bool)

(assert (=> b!103546 (= c!17841 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 lt!52325))) (bvsgt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52325)))) (_1!1197 lt!52331))))))

(assert (=> b!103546 (= e!67452 e!67451)))

(declare-fun bm!10865 () Bool)

(declare-fun call!10868 () List!1612)

(declare-fun $colon$colon!79 (List!1612 tuple2!2372) List!1612)

(assert (=> bm!10865 (= call!10868 ($colon$colon!79 e!67453 (ite c!17844 (h!2204 (toList!785 (+!134 lt!52333 lt!52325))) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331)))))))

(declare-fun c!17842 () Bool)

(assert (=> bm!10865 (= c!17842 c!17844)))

(declare-fun b!103547 () Bool)

(assert (=> b!103547 (= e!67455 (contains!819 lt!52721 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!103548 () Bool)

(assert (=> b!103548 (= e!67454 call!10868)))

(declare-fun bm!10866 () Bool)

(assert (=> bm!10866 (= call!10869 call!10868)))

(declare-fun b!103549 () Bool)

(assert (=> b!103549 (= e!67451 call!10867)))

(declare-fun b!103550 () Bool)

(assert (=> b!103550 (= e!67454 e!67452)))

(assert (=> b!103550 (= c!17843 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 lt!52325))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52325)))) (_1!1197 lt!52331))))))

(assert (= (and d!27755 c!17844) b!103548))

(assert (= (and d!27755 (not c!17844)) b!103550))

(assert (= (and b!103550 c!17843) b!103541))

(assert (= (and b!103550 (not c!17843)) b!103546))

(assert (= (and b!103546 c!17841) b!103549))

(assert (= (and b!103546 (not c!17841)) b!103544))

(assert (= (or b!103549 b!103544) bm!10864))

(assert (= (or b!103541 bm!10864) bm!10866))

(assert (= (or b!103548 bm!10866) bm!10865))

(assert (= (and bm!10865 c!17842) b!103542))

(assert (= (and bm!10865 (not c!17842)) b!103545))

(assert (= (and d!27755 res!51661) b!103543))

(assert (= (and b!103543 res!51660) b!103547))

(declare-fun m!114195 () Bool)

(assert (=> b!103547 m!114195))

(declare-fun m!114197 () Bool)

(assert (=> d!27755 m!114197))

(declare-fun m!114199 () Bool)

(assert (=> d!27755 m!114199))

(declare-fun m!114201 () Bool)

(assert (=> b!103543 m!114201))

(declare-fun m!114203 () Bool)

(assert (=> b!103542 m!114203))

(declare-fun m!114205 () Bool)

(assert (=> bm!10865 m!114205))

(assert (=> d!27663 d!27755))

(declare-fun d!27757 () Bool)

(assert (=> d!27757 (isDefined!107 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun lt!52724 () Unit!3141)

(declare-fun choose!650 (List!1612 (_ BitVec 64)) Unit!3141)

(assert (=> d!27757 (= lt!52724 (choose!650 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun e!67458 () Bool)

(assert (=> d!27757 e!67458))

(declare-fun res!51664 () Bool)

(assert (=> d!27757 (=> (not res!51664) (not e!67458))))

(assert (=> d!27757 (= res!51664 (isStrictlySorted!303 (toList!785 lt!52327)))))

(assert (=> d!27757 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!52724)))

(declare-fun b!103553 () Bool)

(assert (=> b!103553 (= e!67458 (containsKey!157 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27757 res!51664) b!103553))

(assert (=> d!27757 m!113535))

(assert (=> d!27757 m!113815))

(assert (=> d!27757 m!113815))

(assert (=> d!27757 m!113817))

(assert (=> d!27757 m!113535))

(declare-fun m!114207 () Bool)

(assert (=> d!27757 m!114207))

(declare-fun m!114209 () Bool)

(assert (=> d!27757 m!114209))

(assert (=> b!103553 m!113535))

(assert (=> b!103553 m!113811))

(assert (=> b!103168 d!27757))

(assert (=> b!103168 d!27739))

(assert (=> b!103168 d!27741))

(declare-fun d!27759 () Bool)

(assert (=> d!27759 (= (get!1327 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103365 d!27759))

(declare-fun d!27761 () Bool)

(declare-fun res!51665 () Bool)

(declare-fun e!67459 () Bool)

(assert (=> d!27761 (=> res!51665 e!67459)))

(assert (=> d!27761 (= res!51665 (= (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27761 (= (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000) e!67459)))

(declare-fun b!103554 () Bool)

(declare-fun e!67460 () Bool)

(assert (=> b!103554 (= e!67459 e!67460)))

(declare-fun res!51666 () Bool)

(assert (=> b!103554 (=> (not res!51666) (not e!67460))))

(assert (=> b!103554 (= res!51666 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103555 () Bool)

(assert (=> b!103555 (= e!67460 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!27761 (not res!51665)) b!103554))

(assert (= (and b!103554 res!51666) b!103555))

(assert (=> d!27761 m!113969))

(assert (=> b!103555 m!113535))

(declare-fun m!114211 () Bool)

(assert (=> b!103555 m!114211))

(assert (=> bm!10809 d!27761))

(declare-fun b!103568 () Bool)

(declare-fun c!17853 () Bool)

(declare-fun lt!52732 () (_ BitVec 64))

(assert (=> b!103568 (= c!17853 (= lt!52732 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67467 () SeekEntryResult!261)

(declare-fun e!67468 () SeekEntryResult!261)

(assert (=> b!103568 (= e!67467 e!67468)))

(declare-fun b!103569 () Bool)

(declare-fun lt!52733 () SeekEntryResult!261)

(assert (=> b!103569 (= e!67467 (Found!261 (index!3193 lt!52733)))))

(declare-fun d!27763 () Bool)

(declare-fun lt!52731 () SeekEntryResult!261)

(assert (=> d!27763 (and (or ((_ is Undefined!261) lt!52731) (not ((_ is Found!261) lt!52731)) (and (bvsge (index!3192 lt!52731) #b00000000000000000000000000000000) (bvslt (index!3192 lt!52731) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!52731) ((_ is Found!261) lt!52731) (not ((_ is MissingZero!261) lt!52731)) (and (bvsge (index!3191 lt!52731) #b00000000000000000000000000000000) (bvslt (index!3191 lt!52731) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!52731) ((_ is Found!261) lt!52731) ((_ is MissingZero!261) lt!52731) (not ((_ is MissingVacant!261) lt!52731)) (and (bvsge (index!3194 lt!52731) #b00000000000000000000000000000000) (bvslt (index!3194 lt!52731) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!52731) (ite ((_ is Found!261) lt!52731) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52731)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite ((_ is MissingZero!261) lt!52731) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!52731)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!261) lt!52731) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!52731)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!67469 () SeekEntryResult!261)

(assert (=> d!27763 (= lt!52731 e!67469)))

(declare-fun c!17852 () Bool)

(assert (=> d!27763 (= c!17852 (and ((_ is Intermediate!261) lt!52733) (undefined!1073 lt!52733)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4311 (_ BitVec 32)) SeekEntryResult!261)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!27763 (= lt!52733 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(assert (=> d!27763 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27763 (= (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)) lt!52731)))

(declare-fun b!103570 () Bool)

(assert (=> b!103570 (= e!67469 Undefined!261)))

(declare-fun b!103571 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4311 (_ BitVec 32)) SeekEntryResult!261)

(assert (=> b!103571 (= e!67468 (seekKeyOrZeroReturnVacant!0 (x!13502 lt!52733) (index!3193 lt!52733) (index!3193 lt!52733) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!103572 () Bool)

(assert (=> b!103572 (= e!67468 (MissingZero!261 (index!3193 lt!52733)))))

(declare-fun b!103573 () Bool)

(assert (=> b!103573 (= e!67469 e!67467)))

(assert (=> b!103573 (= lt!52732 (select (arr!2044 (_keys!4261 newMap!16)) (index!3193 lt!52733)))))

(declare-fun c!17851 () Bool)

(assert (=> b!103573 (= c!17851 (= lt!52732 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27763 c!17852) b!103570))

(assert (= (and d!27763 (not c!17852)) b!103573))

(assert (= (and b!103573 c!17851) b!103569))

(assert (= (and b!103573 (not c!17851)) b!103568))

(assert (= (and b!103568 c!17853) b!103572))

(assert (= (and b!103568 (not c!17853)) b!103571))

(declare-fun m!114213 () Bool)

(assert (=> d!27763 m!114213))

(declare-fun m!114215 () Bool)

(assert (=> d!27763 m!114215))

(declare-fun m!114217 () Bool)

(assert (=> d!27763 m!114217))

(assert (=> d!27763 m!113535))

(declare-fun m!114219 () Bool)

(assert (=> d!27763 m!114219))

(declare-fun m!114221 () Bool)

(assert (=> d!27763 m!114221))

(assert (=> d!27763 m!113535))

(assert (=> d!27763 m!114217))

(assert (=> d!27763 m!113985))

(assert (=> b!103571 m!113535))

(declare-fun m!114223 () Bool)

(assert (=> b!103571 m!114223))

(declare-fun m!114225 () Bool)

(assert (=> b!103573 m!114225))

(assert (=> b!103292 d!27763))

(declare-fun d!27765 () Bool)

(declare-fun e!67470 () Bool)

(assert (=> d!27765 e!67470))

(declare-fun res!51668 () Bool)

(assert (=> d!27765 (=> (not res!51668) (not e!67470))))

(declare-fun lt!52737 () ListLongMap!1539)

(assert (=> d!27765 (= res!51668 (contains!816 lt!52737 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!52735 () List!1612)

(assert (=> d!27765 (= lt!52737 (ListLongMap!1540 lt!52735))))

(declare-fun lt!52734 () Unit!3141)

(declare-fun lt!52736 () Unit!3141)

(assert (=> d!27765 (= lt!52734 lt!52736)))

(assert (=> d!27765 (= (getValueByKey!153 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27765 (= lt!52736 (lemmaContainsTupThenGetReturnValue!72 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27765 (= lt!52735 (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27765 (= (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!52737)))

(declare-fun b!103574 () Bool)

(declare-fun res!51667 () Bool)

(assert (=> b!103574 (=> (not res!51667) (not e!67470))))

(assert (=> b!103574 (= res!51667 (= (getValueByKey!153 (toList!785 lt!52737) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!103575 () Bool)

(assert (=> b!103575 (= e!67470 (contains!819 (toList!785 lt!52737) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!27765 res!51668) b!103574))

(assert (= (and b!103574 res!51667) b!103575))

(declare-fun m!114227 () Bool)

(assert (=> d!27765 m!114227))

(declare-fun m!114229 () Bool)

(assert (=> d!27765 m!114229))

(declare-fun m!114231 () Bool)

(assert (=> d!27765 m!114231))

(declare-fun m!114233 () Bool)

(assert (=> d!27765 m!114233))

(declare-fun m!114235 () Bool)

(assert (=> b!103574 m!114235))

(declare-fun m!114237 () Bool)

(assert (=> b!103575 m!114237))

(assert (=> d!27661 d!27765))

(declare-fun d!27767 () Bool)

(declare-fun e!67471 () Bool)

(assert (=> d!27767 e!67471))

(declare-fun res!51670 () Bool)

(assert (=> d!27767 (=> (not res!51670) (not e!67471))))

(declare-fun lt!52741 () ListLongMap!1539)

(assert (=> d!27767 (= res!51670 (contains!816 lt!52741 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!52739 () List!1612)

(assert (=> d!27767 (= lt!52741 (ListLongMap!1540 lt!52739))))

(declare-fun lt!52738 () Unit!3141)

(declare-fun lt!52740 () Unit!3141)

(assert (=> d!27767 (= lt!52738 lt!52740)))

(assert (=> d!27767 (= (getValueByKey!153 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27767 (= lt!52740 (lemmaContainsTupThenGetReturnValue!72 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27767 (= lt!52739 (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27767 (= (+!134 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!52741)))

(declare-fun b!103576 () Bool)

(declare-fun res!51669 () Bool)

(assert (=> b!103576 (=> (not res!51669) (not e!67471))))

(assert (=> b!103576 (= res!51669 (= (getValueByKey!153 (toList!785 lt!52741) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!103577 () Bool)

(assert (=> b!103577 (= e!67471 (contains!819 (toList!785 lt!52741) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!27767 res!51670) b!103576))

(assert (= (and b!103576 res!51669) b!103577))

(declare-fun m!114239 () Bool)

(assert (=> d!27767 m!114239))

(declare-fun m!114241 () Bool)

(assert (=> d!27767 m!114241))

(declare-fun m!114243 () Bool)

(assert (=> d!27767 m!114243))

(declare-fun m!114245 () Bool)

(assert (=> d!27767 m!114245))

(declare-fun m!114247 () Bool)

(assert (=> b!103576 m!114247))

(declare-fun m!114249 () Bool)

(assert (=> b!103577 m!114249))

(assert (=> d!27661 d!27767))

(declare-fun d!27769 () Bool)

(assert (=> d!27769 (= (+!134 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (+!134 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (=> d!27769 true))

(declare-fun _$28!158 () Unit!3141)

(assert (=> d!27769 (= (choose!645 lt!52333 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) _$28!158)))

(declare-fun bs!4231 () Bool)

(assert (= bs!4231 d!27769))

(assert (=> bs!4231 m!113787))

(assert (=> bs!4231 m!113787))

(assert (=> bs!4231 m!113789))

(assert (=> bs!4231 m!113781))

(assert (=> bs!4231 m!113781))

(assert (=> bs!4231 m!113783))

(assert (=> d!27661 d!27769))

(declare-fun d!27771 () Bool)

(declare-fun e!67472 () Bool)

(assert (=> d!27771 e!67472))

(declare-fun res!51672 () Bool)

(assert (=> d!27771 (=> (not res!51672) (not e!67472))))

(declare-fun lt!52745 () ListLongMap!1539)

(assert (=> d!27771 (= res!51672 (contains!816 lt!52745 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52743 () List!1612)

(assert (=> d!27771 (= lt!52745 (ListLongMap!1540 lt!52743))))

(declare-fun lt!52742 () Unit!3141)

(declare-fun lt!52744 () Unit!3141)

(assert (=> d!27771 (= lt!52742 lt!52744)))

(assert (=> d!27771 (= (getValueByKey!153 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27771 (= lt!52744 (lemmaContainsTupThenGetReturnValue!72 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27771 (= lt!52743 (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27771 (= (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52745)))

(declare-fun b!103578 () Bool)

(declare-fun res!51671 () Bool)

(assert (=> b!103578 (=> (not res!51671) (not e!67472))))

(assert (=> b!103578 (= res!51671 (= (getValueByKey!153 (toList!785 lt!52745) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103579 () Bool)

(assert (=> b!103579 (= e!67472 (contains!819 (toList!785 lt!52745) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27771 res!51672) b!103578))

(assert (= (and b!103578 res!51671) b!103579))

(declare-fun m!114251 () Bool)

(assert (=> d!27771 m!114251))

(declare-fun m!114253 () Bool)

(assert (=> d!27771 m!114253))

(declare-fun m!114255 () Bool)

(assert (=> d!27771 m!114255))

(declare-fun m!114257 () Bool)

(assert (=> d!27771 m!114257))

(declare-fun m!114259 () Bool)

(assert (=> b!103578 m!114259))

(declare-fun m!114261 () Bool)

(assert (=> b!103579 m!114261))

(assert (=> d!27661 d!27771))

(declare-fun d!27773 () Bool)

(declare-fun e!67473 () Bool)

(assert (=> d!27773 e!67473))

(declare-fun res!51674 () Bool)

(assert (=> d!27773 (=> (not res!51674) (not e!67473))))

(declare-fun lt!52749 () ListLongMap!1539)

(assert (=> d!27773 (= res!51674 (contains!816 lt!52749 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52747 () List!1612)

(assert (=> d!27773 (= lt!52749 (ListLongMap!1540 lt!52747))))

(declare-fun lt!52746 () Unit!3141)

(declare-fun lt!52748 () Unit!3141)

(assert (=> d!27773 (= lt!52746 lt!52748)))

(assert (=> d!27773 (= (getValueByKey!153 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27773 (= lt!52748 (lemmaContainsTupThenGetReturnValue!72 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27773 (= lt!52747 (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27773 (= (+!134 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52749)))

(declare-fun b!103580 () Bool)

(declare-fun res!51673 () Bool)

(assert (=> b!103580 (=> (not res!51673) (not e!67473))))

(assert (=> b!103580 (= res!51673 (= (getValueByKey!153 (toList!785 lt!52749) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103581 () Bool)

(assert (=> b!103581 (= e!67473 (contains!819 (toList!785 lt!52749) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27773 res!51674) b!103580))

(assert (= (and b!103580 res!51673) b!103581))

(declare-fun m!114263 () Bool)

(assert (=> d!27773 m!114263))

(declare-fun m!114265 () Bool)

(assert (=> d!27773 m!114265))

(declare-fun m!114267 () Bool)

(assert (=> d!27773 m!114267))

(declare-fun m!114269 () Bool)

(assert (=> d!27773 m!114269))

(declare-fun m!114271 () Bool)

(assert (=> b!103580 m!114271))

(declare-fun m!114273 () Bool)

(assert (=> b!103581 m!114273))

(assert (=> d!27661 d!27773))

(declare-fun d!27775 () Bool)

(declare-fun e!67475 () Bool)

(assert (=> d!27775 e!67475))

(declare-fun res!51675 () Bool)

(assert (=> d!27775 (=> res!51675 e!67475)))

(declare-fun lt!52752 () Bool)

(assert (=> d!27775 (= res!51675 (not lt!52752))))

(declare-fun lt!52751 () Bool)

(assert (=> d!27775 (= lt!52752 lt!52751)))

(declare-fun lt!52753 () Unit!3141)

(declare-fun e!67474 () Unit!3141)

(assert (=> d!27775 (= lt!52753 e!67474)))

(declare-fun c!17854 () Bool)

(assert (=> d!27775 (= c!17854 lt!52751)))

(assert (=> d!27775 (= lt!52751 (containsKey!157 (toList!785 lt!52457) (_1!1197 lt!52331)))))

(assert (=> d!27775 (= (contains!816 lt!52457 (_1!1197 lt!52331)) lt!52752)))

(declare-fun b!103582 () Bool)

(declare-fun lt!52750 () Unit!3141)

(assert (=> b!103582 (= e!67474 lt!52750)))

(assert (=> b!103582 (= lt!52750 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52457) (_1!1197 lt!52331)))))

(assert (=> b!103582 (isDefined!107 (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331)))))

(declare-fun b!103583 () Bool)

(declare-fun Unit!3159 () Unit!3141)

(assert (=> b!103583 (= e!67474 Unit!3159)))

(declare-fun b!103584 () Bool)

(assert (=> b!103584 (= e!67475 (isDefined!107 (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331))))))

(assert (= (and d!27775 c!17854) b!103582))

(assert (= (and d!27775 (not c!17854)) b!103583))

(assert (= (and d!27775 (not res!51675)) b!103584))

(declare-fun m!114275 () Bool)

(assert (=> d!27775 m!114275))

(declare-fun m!114277 () Bool)

(assert (=> b!103582 m!114277))

(assert (=> b!103582 m!113777))

(assert (=> b!103582 m!113777))

(declare-fun m!114279 () Bool)

(assert (=> b!103582 m!114279))

(assert (=> b!103584 m!113777))

(assert (=> b!103584 m!113777))

(assert (=> b!103584 m!114279))

(assert (=> d!27659 d!27775))

(declare-fun b!103587 () Bool)

(declare-fun e!67477 () Option!159)

(assert (=> b!103587 (= e!67477 (getValueByKey!153 (t!5665 lt!52455) (_1!1197 lt!52331)))))

(declare-fun b!103585 () Bool)

(declare-fun e!67476 () Option!159)

(assert (=> b!103585 (= e!67476 (Some!158 (_2!1197 (h!2204 lt!52455))))))

(declare-fun d!27777 () Bool)

(declare-fun c!17855 () Bool)

(assert (=> d!27777 (= c!17855 (and ((_ is Cons!1608) lt!52455) (= (_1!1197 (h!2204 lt!52455)) (_1!1197 lt!52331))))))

(assert (=> d!27777 (= (getValueByKey!153 lt!52455 (_1!1197 lt!52331)) e!67476)))

(declare-fun b!103586 () Bool)

(assert (=> b!103586 (= e!67476 e!67477)))

(declare-fun c!17856 () Bool)

(assert (=> b!103586 (= c!17856 (and ((_ is Cons!1608) lt!52455) (not (= (_1!1197 (h!2204 lt!52455)) (_1!1197 lt!52331)))))))

(declare-fun b!103588 () Bool)

(assert (=> b!103588 (= e!67477 None!157)))

(assert (= (and d!27777 c!17855) b!103585))

(assert (= (and d!27777 (not c!17855)) b!103586))

(assert (= (and b!103586 c!17856) b!103587))

(assert (= (and b!103586 (not c!17856)) b!103588))

(declare-fun m!114281 () Bool)

(assert (=> b!103587 m!114281))

(assert (=> d!27659 d!27777))

(declare-fun d!27779 () Bool)

(assert (=> d!27779 (= (getValueByKey!153 lt!52455 (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331)))))

(declare-fun lt!52754 () Unit!3141)

(assert (=> d!27779 (= lt!52754 (choose!649 lt!52455 (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(declare-fun e!67478 () Bool)

(assert (=> d!27779 e!67478))

(declare-fun res!51676 () Bool)

(assert (=> d!27779 (=> (not res!51676) (not e!67478))))

(assert (=> d!27779 (= res!51676 (isStrictlySorted!303 lt!52455))))

(assert (=> d!27779 (= (lemmaContainsTupThenGetReturnValue!72 lt!52455 (_1!1197 lt!52331) (_2!1197 lt!52331)) lt!52754)))

(declare-fun b!103589 () Bool)

(declare-fun res!51677 () Bool)

(assert (=> b!103589 (=> (not res!51677) (not e!67478))))

(assert (=> b!103589 (= res!51677 (containsKey!157 lt!52455 (_1!1197 lt!52331)))))

(declare-fun b!103590 () Bool)

(assert (=> b!103590 (= e!67478 (contains!819 lt!52455 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(assert (= (and d!27779 res!51676) b!103589))

(assert (= (and b!103589 res!51677) b!103590))

(assert (=> d!27779 m!113771))

(declare-fun m!114283 () Bool)

(assert (=> d!27779 m!114283))

(declare-fun m!114285 () Bool)

(assert (=> d!27779 m!114285))

(declare-fun m!114287 () Bool)

(assert (=> b!103589 m!114287))

(declare-fun m!114289 () Bool)

(assert (=> b!103590 m!114289))

(assert (=> d!27659 d!27779))

(declare-fun b!103591 () Bool)

(declare-fun e!67480 () List!1612)

(declare-fun call!10872 () List!1612)

(assert (=> b!103591 (= e!67480 call!10872)))

(declare-fun b!103592 () Bool)

(declare-fun e!67481 () List!1612)

(assert (=> b!103592 (= e!67481 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52333)) (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(declare-fun b!103593 () Bool)

(declare-fun res!51678 () Bool)

(declare-fun e!67483 () Bool)

(assert (=> b!103593 (=> (not res!51678) (not e!67483))))

(declare-fun lt!52755 () List!1612)

(assert (=> b!103593 (= res!51678 (containsKey!157 lt!52755 (_1!1197 lt!52331)))))

(declare-fun bm!10867 () Bool)

(declare-fun call!10870 () List!1612)

(assert (=> bm!10867 (= call!10870 call!10872)))

(declare-fun b!103594 () Bool)

(declare-fun e!67479 () List!1612)

(assert (=> b!103594 (= e!67479 call!10870)))

(declare-fun c!17857 () Bool)

(declare-fun c!17859 () Bool)

(declare-fun b!103595 () Bool)

(assert (=> b!103595 (= e!67481 (ite c!17859 (t!5665 (toList!785 lt!52333)) (ite c!17857 (Cons!1608 (h!2204 (toList!785 lt!52333)) (t!5665 (toList!785 lt!52333))) Nil!1609)))))

(declare-fun d!27781 () Bool)

(assert (=> d!27781 e!67483))

(declare-fun res!51679 () Bool)

(assert (=> d!27781 (=> (not res!51679) (not e!67483))))

(assert (=> d!27781 (= res!51679 (isStrictlySorted!303 lt!52755))))

(declare-fun e!67482 () List!1612)

(assert (=> d!27781 (= lt!52755 e!67482)))

(declare-fun c!17860 () Bool)

(assert (=> d!27781 (= c!17860 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 lt!52331))))))

(assert (=> d!27781 (isStrictlySorted!303 (toList!785 lt!52333))))

(assert (=> d!27781 (= (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 lt!52331) (_2!1197 lt!52331)) lt!52755)))

(declare-fun b!103596 () Bool)

(assert (=> b!103596 (= c!17857 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 lt!52331))))))

(assert (=> b!103596 (= e!67480 e!67479)))

(declare-fun call!10871 () List!1612)

(declare-fun bm!10868 () Bool)

(assert (=> bm!10868 (= call!10871 ($colon$colon!79 e!67481 (ite c!17860 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331)))))))

(declare-fun c!17858 () Bool)

(assert (=> bm!10868 (= c!17858 c!17860)))

(declare-fun b!103597 () Bool)

(assert (=> b!103597 (= e!67483 (contains!819 lt!52755 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!103598 () Bool)

(assert (=> b!103598 (= e!67482 call!10871)))

(declare-fun bm!10869 () Bool)

(assert (=> bm!10869 (= call!10872 call!10871)))

(declare-fun b!103599 () Bool)

(assert (=> b!103599 (= e!67479 call!10870)))

(declare-fun b!103600 () Bool)

(assert (=> b!103600 (= e!67482 e!67480)))

(assert (=> b!103600 (= c!17859 (and ((_ is Cons!1608) (toList!785 lt!52333)) (= (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 lt!52331))))))

(assert (= (and d!27781 c!17860) b!103598))

(assert (= (and d!27781 (not c!17860)) b!103600))

(assert (= (and b!103600 c!17859) b!103591))

(assert (= (and b!103600 (not c!17859)) b!103596))

(assert (= (and b!103596 c!17857) b!103599))

(assert (= (and b!103596 (not c!17857)) b!103594))

(assert (= (or b!103599 b!103594) bm!10867))

(assert (= (or b!103591 bm!10867) bm!10869))

(assert (= (or b!103598 bm!10869) bm!10868))

(assert (= (and bm!10868 c!17858) b!103592))

(assert (= (and bm!10868 (not c!17858)) b!103595))

(assert (= (and d!27781 res!51679) b!103593))

(assert (= (and b!103593 res!51678) b!103597))

(declare-fun m!114291 () Bool)

(assert (=> b!103597 m!114291))

(declare-fun m!114293 () Bool)

(assert (=> d!27781 m!114293))

(declare-fun m!114295 () Bool)

(assert (=> d!27781 m!114295))

(declare-fun m!114297 () Bool)

(assert (=> b!103593 m!114297))

(declare-fun m!114299 () Bool)

(assert (=> b!103592 m!114299))

(declare-fun m!114301 () Bool)

(assert (=> bm!10868 m!114301))

(assert (=> d!27659 d!27781))

(assert (=> bm!10800 d!27763))

(declare-fun d!27783 () Bool)

(assert (=> d!27783 (= (apply!97 lt!52612 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4232 () Bool)

(assert (= bs!4232 d!27783))

(declare-fun m!114303 () Bool)

(assert (=> bs!4232 m!114303))

(assert (=> bs!4232 m!114303))

(declare-fun m!114305 () Bool)

(assert (=> bs!4232 m!114305))

(assert (=> b!103347 d!27783))

(declare-fun d!27785 () Bool)

(declare-fun lt!52758 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!107 (List!1613) (InoxSet (_ BitVec 64)))

(assert (=> d!27785 (= lt!52758 (select (content!107 Nil!1610) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun e!67488 () Bool)

(assert (=> d!27785 (= lt!52758 e!67488)))

(declare-fun res!51685 () Bool)

(assert (=> d!27785 (=> (not res!51685) (not e!67488))))

(assert (=> d!27785 (= res!51685 ((_ is Cons!1609) Nil!1610))))

(assert (=> d!27785 (= (contains!818 Nil!1610 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!52758)))

(declare-fun b!103605 () Bool)

(declare-fun e!67489 () Bool)

(assert (=> b!103605 (= e!67488 e!67489)))

(declare-fun res!51684 () Bool)

(assert (=> b!103605 (=> res!51684 e!67489)))

(assert (=> b!103605 (= res!51684 (= (h!2205 Nil!1610) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103606 () Bool)

(assert (=> b!103606 (= e!67489 (contains!818 (t!5666 Nil!1610) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27785 res!51685) b!103605))

(assert (= (and b!103605 (not res!51684)) b!103606))

(declare-fun m!114307 () Bool)

(assert (=> d!27785 m!114307))

(assert (=> d!27785 m!113535))

(declare-fun m!114309 () Bool)

(assert (=> d!27785 m!114309))

(assert (=> b!103606 m!113535))

(declare-fun m!114311 () Bool)

(assert (=> b!103606 m!114311))

(assert (=> b!103104 d!27785))

(declare-fun d!27787 () Bool)

(declare-fun res!51686 () Bool)

(declare-fun e!67490 () Bool)

(assert (=> d!27787 (=> res!51686 e!67490)))

(assert (=> d!27787 (= res!51686 (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27787 (= (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!67490)))

(declare-fun b!103607 () Bool)

(declare-fun e!67491 () Bool)

(assert (=> b!103607 (= e!67490 e!67491)))

(declare-fun res!51687 () Bool)

(assert (=> b!103607 (=> (not res!51687) (not e!67491))))

(assert (=> b!103607 (= res!51687 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103608 () Bool)

(assert (=> b!103608 (= e!67491 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!27787 (not res!51686)) b!103607))

(assert (= (and b!103607 res!51687) b!103608))

(declare-fun m!114313 () Bool)

(assert (=> d!27787 m!114313))

(assert (=> b!103608 m!113535))

(declare-fun m!114315 () Bool)

(assert (=> b!103608 m!114315))

(assert (=> b!103083 d!27787))

(declare-fun d!27789 () Bool)

(declare-fun e!67493 () Bool)

(assert (=> d!27789 e!67493))

(declare-fun res!51688 () Bool)

(assert (=> d!27789 (=> res!51688 e!67493)))

(declare-fun lt!52761 () Bool)

(assert (=> d!27789 (= res!51688 (not lt!52761))))

(declare-fun lt!52760 () Bool)

(assert (=> d!27789 (= lt!52761 lt!52760)))

(declare-fun lt!52762 () Unit!3141)

(declare-fun e!67492 () Unit!3141)

(assert (=> d!27789 (= lt!52762 e!67492)))

(declare-fun c!17861 () Bool)

(assert (=> d!27789 (= c!17861 lt!52760)))

(assert (=> d!27789 (= lt!52760 (containsKey!157 (toList!785 lt!52453) (_1!1197 lt!52325)))))

(assert (=> d!27789 (= (contains!816 lt!52453 (_1!1197 lt!52325)) lt!52761)))

(declare-fun b!103609 () Bool)

(declare-fun lt!52759 () Unit!3141)

(assert (=> b!103609 (= e!67492 lt!52759)))

(assert (=> b!103609 (= lt!52759 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52453) (_1!1197 lt!52325)))))

(assert (=> b!103609 (isDefined!107 (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325)))))

(declare-fun b!103610 () Bool)

(declare-fun Unit!3160 () Unit!3141)

(assert (=> b!103610 (= e!67492 Unit!3160)))

(declare-fun b!103611 () Bool)

(assert (=> b!103611 (= e!67493 (isDefined!107 (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325))))))

(assert (= (and d!27789 c!17861) b!103609))

(assert (= (and d!27789 (not c!17861)) b!103610))

(assert (= (and d!27789 (not res!51688)) b!103611))

(declare-fun m!114317 () Bool)

(assert (=> d!27789 m!114317))

(declare-fun m!114319 () Bool)

(assert (=> b!103609 m!114319))

(assert (=> b!103609 m!113765))

(assert (=> b!103609 m!113765))

(declare-fun m!114321 () Bool)

(assert (=> b!103609 m!114321))

(assert (=> b!103611 m!113765))

(assert (=> b!103611 m!113765))

(assert (=> b!103611 m!114321))

(assert (=> d!27657 d!27789))

(declare-fun b!103614 () Bool)

(declare-fun e!67495 () Option!159)

(assert (=> b!103614 (= e!67495 (getValueByKey!153 (t!5665 lt!52451) (_1!1197 lt!52325)))))

(declare-fun b!103612 () Bool)

(declare-fun e!67494 () Option!159)

(assert (=> b!103612 (= e!67494 (Some!158 (_2!1197 (h!2204 lt!52451))))))

(declare-fun d!27791 () Bool)

(declare-fun c!17862 () Bool)

(assert (=> d!27791 (= c!17862 (and ((_ is Cons!1608) lt!52451) (= (_1!1197 (h!2204 lt!52451)) (_1!1197 lt!52325))))))

(assert (=> d!27791 (= (getValueByKey!153 lt!52451 (_1!1197 lt!52325)) e!67494)))

(declare-fun b!103613 () Bool)

(assert (=> b!103613 (= e!67494 e!67495)))

(declare-fun c!17863 () Bool)

(assert (=> b!103613 (= c!17863 (and ((_ is Cons!1608) lt!52451) (not (= (_1!1197 (h!2204 lt!52451)) (_1!1197 lt!52325)))))))

(declare-fun b!103615 () Bool)

(assert (=> b!103615 (= e!67495 None!157)))

(assert (= (and d!27791 c!17862) b!103612))

(assert (= (and d!27791 (not c!17862)) b!103613))

(assert (= (and b!103613 c!17863) b!103614))

(assert (= (and b!103613 (not c!17863)) b!103615))

(declare-fun m!114323 () Bool)

(assert (=> b!103614 m!114323))

(assert (=> d!27657 d!27791))

(declare-fun d!27793 () Bool)

(assert (=> d!27793 (= (getValueByKey!153 lt!52451 (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325)))))

(declare-fun lt!52763 () Unit!3141)

(assert (=> d!27793 (= lt!52763 (choose!649 lt!52451 (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun e!67496 () Bool)

(assert (=> d!27793 e!67496))

(declare-fun res!51689 () Bool)

(assert (=> d!27793 (=> (not res!51689) (not e!67496))))

(assert (=> d!27793 (= res!51689 (isStrictlySorted!303 lt!52451))))

(assert (=> d!27793 (= (lemmaContainsTupThenGetReturnValue!72 lt!52451 (_1!1197 lt!52325) (_2!1197 lt!52325)) lt!52763)))

(declare-fun b!103616 () Bool)

(declare-fun res!51690 () Bool)

(assert (=> b!103616 (=> (not res!51690) (not e!67496))))

(assert (=> b!103616 (= res!51690 (containsKey!157 lt!52451 (_1!1197 lt!52325)))))

(declare-fun b!103617 () Bool)

(assert (=> b!103617 (= e!67496 (contains!819 lt!52451 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(assert (= (and d!27793 res!51689) b!103616))

(assert (= (and b!103616 res!51690) b!103617))

(assert (=> d!27793 m!113759))

(declare-fun m!114325 () Bool)

(assert (=> d!27793 m!114325))

(declare-fun m!114327 () Bool)

(assert (=> d!27793 m!114327))

(declare-fun m!114329 () Bool)

(assert (=> b!103616 m!114329))

(declare-fun m!114331 () Bool)

(assert (=> b!103617 m!114331))

(assert (=> d!27657 d!27793))

(declare-fun b!103618 () Bool)

(declare-fun e!67498 () List!1612)

(declare-fun call!10875 () List!1612)

(assert (=> b!103618 (= e!67498 call!10875)))

(declare-fun b!103619 () Bool)

(declare-fun e!67499 () List!1612)

(assert (=> b!103619 (= e!67499 (insertStrictlySorted!75 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))) (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun b!103620 () Bool)

(declare-fun res!51691 () Bool)

(declare-fun e!67501 () Bool)

(assert (=> b!103620 (=> (not res!51691) (not e!67501))))

(declare-fun lt!52764 () List!1612)

(assert (=> b!103620 (= res!51691 (containsKey!157 lt!52764 (_1!1197 lt!52325)))))

(declare-fun bm!10870 () Bool)

(declare-fun call!10873 () List!1612)

(assert (=> bm!10870 (= call!10873 call!10875)))

(declare-fun b!103621 () Bool)

(declare-fun e!67497 () List!1612)

(assert (=> b!103621 (= e!67497 call!10873)))

(declare-fun c!17866 () Bool)

(declare-fun c!17864 () Bool)

(declare-fun b!103622 () Bool)

(assert (=> b!103622 (= e!67499 (ite c!17866 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))) (ite c!17864 (Cons!1608 (h!2204 (toList!785 (+!134 lt!52333 lt!52331))) (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) Nil!1609)))))

(declare-fun d!27795 () Bool)

(assert (=> d!27795 e!67501))

(declare-fun res!51692 () Bool)

(assert (=> d!27795 (=> (not res!51692) (not e!67501))))

(assert (=> d!27795 (= res!51692 (isStrictlySorted!303 lt!52764))))

(declare-fun e!67500 () List!1612)

(assert (=> d!27795 (= lt!52764 e!67500)))

(declare-fun c!17867 () Bool)

(assert (=> d!27795 (= c!17867 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 lt!52331))) (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52331)))) (_1!1197 lt!52325))))))

(assert (=> d!27795 (isStrictlySorted!303 (toList!785 (+!134 lt!52333 lt!52331)))))

(assert (=> d!27795 (= (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 lt!52331)) (_1!1197 lt!52325) (_2!1197 lt!52325)) lt!52764)))

(declare-fun b!103623 () Bool)

(assert (=> b!103623 (= c!17864 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 lt!52331))) (bvsgt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52331)))) (_1!1197 lt!52325))))))

(assert (=> b!103623 (= e!67498 e!67497)))

(declare-fun call!10874 () List!1612)

(declare-fun bm!10871 () Bool)

(assert (=> bm!10871 (= call!10874 ($colon$colon!79 e!67499 (ite c!17867 (h!2204 (toList!785 (+!134 lt!52333 lt!52331))) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325)))))))

(declare-fun c!17865 () Bool)

(assert (=> bm!10871 (= c!17865 c!17867)))

(declare-fun b!103624 () Bool)

(assert (=> b!103624 (= e!67501 (contains!819 lt!52764 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!103625 () Bool)

(assert (=> b!103625 (= e!67500 call!10874)))

(declare-fun bm!10872 () Bool)

(assert (=> bm!10872 (= call!10875 call!10874)))

(declare-fun b!103626 () Bool)

(assert (=> b!103626 (= e!67497 call!10873)))

(declare-fun b!103627 () Bool)

(assert (=> b!103627 (= e!67500 e!67498)))

(assert (=> b!103627 (= c!17866 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 lt!52331))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52331)))) (_1!1197 lt!52325))))))

(assert (= (and d!27795 c!17867) b!103625))

(assert (= (and d!27795 (not c!17867)) b!103627))

(assert (= (and b!103627 c!17866) b!103618))

(assert (= (and b!103627 (not c!17866)) b!103623))

(assert (= (and b!103623 c!17864) b!103626))

(assert (= (and b!103623 (not c!17864)) b!103621))

(assert (= (or b!103626 b!103621) bm!10870))

(assert (= (or b!103618 bm!10870) bm!10872))

(assert (= (or b!103625 bm!10872) bm!10871))

(assert (= (and bm!10871 c!17865) b!103619))

(assert (= (and bm!10871 (not c!17865)) b!103622))

(assert (= (and d!27795 res!51692) b!103620))

(assert (= (and b!103620 res!51691) b!103624))

(declare-fun m!114333 () Bool)

(assert (=> b!103624 m!114333))

(declare-fun m!114335 () Bool)

(assert (=> d!27795 m!114335))

(declare-fun m!114337 () Bool)

(assert (=> d!27795 m!114337))

(declare-fun m!114339 () Bool)

(assert (=> b!103620 m!114339))

(declare-fun m!114341 () Bool)

(assert (=> b!103619 m!114341))

(declare-fun m!114343 () Bool)

(assert (=> bm!10871 m!114343))

(assert (=> d!27657 d!27795))

(assert (=> b!103139 d!27715))

(declare-fun d!27797 () Bool)

(assert (=> d!27797 (= (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103102 d!27797))

(declare-fun d!27799 () Bool)

(declare-fun e!67503 () Bool)

(assert (=> d!27799 e!67503))

(declare-fun res!51693 () Bool)

(assert (=> d!27799 (=> res!51693 e!67503)))

(declare-fun lt!52767 () Bool)

(assert (=> d!27799 (= res!51693 (not lt!52767))))

(declare-fun lt!52766 () Bool)

(assert (=> d!27799 (= lt!52767 lt!52766)))

(declare-fun lt!52768 () Unit!3141)

(declare-fun e!67502 () Unit!3141)

(assert (=> d!27799 (= lt!52768 e!67502)))

(declare-fun c!17868 () Bool)

(assert (=> d!27799 (= c!17868 lt!52766)))

(assert (=> d!27799 (= lt!52766 (containsKey!157 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27799 (= (contains!816 lt!52612 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!52767)))

(declare-fun b!103628 () Bool)

(declare-fun lt!52765 () Unit!3141)

(assert (=> b!103628 (= e!67502 lt!52765)))

(assert (=> b!103628 (= lt!52765 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103628 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103629 () Bool)

(declare-fun Unit!3161 () Unit!3141)

(assert (=> b!103629 (= e!67502 Unit!3161)))

(declare-fun b!103630 () Bool)

(assert (=> b!103630 (= e!67503 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27799 c!17868) b!103628))

(assert (= (and d!27799 (not c!17868)) b!103629))

(assert (= (and d!27799 (not res!51693)) b!103630))

(assert (=> d!27799 m!113707))

(declare-fun m!114345 () Bool)

(assert (=> d!27799 m!114345))

(assert (=> b!103628 m!113707))

(declare-fun m!114347 () Bool)

(assert (=> b!103628 m!114347))

(assert (=> b!103628 m!113707))

(declare-fun m!114349 () Bool)

(assert (=> b!103628 m!114349))

(assert (=> b!103628 m!114349))

(declare-fun m!114351 () Bool)

(assert (=> b!103628 m!114351))

(assert (=> b!103630 m!113707))

(assert (=> b!103630 m!114349))

(assert (=> b!103630 m!114349))

(assert (=> b!103630 m!114351))

(assert (=> b!103359 d!27799))

(declare-fun call!10884 () Bool)

(declare-fun bm!10881 () Bool)

(assert (=> bm!10881 (= call!10884 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103665 () Bool)

(declare-fun res!51720 () Bool)

(declare-fun e!67523 () Bool)

(assert (=> b!103665 (=> (not res!51720) (not e!67523))))

(declare-fun lt!52835 () SeekEntryResult!261)

(assert (=> b!103665 (= res!51720 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!52835)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103666 () Bool)

(declare-fun e!67520 () Bool)

(assert (=> b!103666 (= e!67520 (not call!10884))))

(declare-fun b!103668 () Bool)

(declare-fun res!51714 () Bool)

(assert (=> b!103668 (= res!51714 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!52835)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103668 (=> (not res!51714) (not e!67520))))

(declare-fun lt!52854 () SeekEntryResult!261)

(declare-fun b!103669 () Bool)

(declare-fun e!67525 () Bool)

(assert (=> b!103669 (= e!67525 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52854)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103670 () Bool)

(declare-fun res!51719 () Bool)

(declare-fun call!10885 () Bool)

(assert (=> b!103670 (= res!51719 call!10885)))

(assert (=> b!103670 (=> (not res!51719) (not e!67525))))

(declare-fun b!103671 () Bool)

(declare-fun res!51718 () Bool)

(declare-fun e!67522 () Bool)

(assert (=> b!103671 (=> (not res!51718) (not e!67522))))

(declare-fun lt!52848 () tuple2!2374)

(assert (=> b!103671 (= res!51718 (valid!419 (_2!1198 lt!52848)))))

(declare-fun b!103672 () Bool)

(declare-fun c!17880 () Bool)

(assert (=> b!103672 (= c!17880 ((_ is MissingVacant!261) lt!52835))))

(declare-fun e!67527 () Bool)

(declare-fun e!67521 () Bool)

(assert (=> b!103672 (= e!67527 e!67521)))

(declare-fun b!103673 () Bool)

(declare-fun res!51717 () Bool)

(assert (=> b!103673 (=> (not res!51717) (not e!67522))))

(assert (=> b!103673 (= res!51717 (contains!816 (map!1266 (_2!1198 lt!52848)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103674 () Bool)

(assert (=> b!103674 (= e!67521 ((_ is Undefined!261) lt!52835))))

(declare-fun bm!10882 () Bool)

(declare-fun call!10886 () Bool)

(assert (=> bm!10882 (= call!10886 call!10885)))

(declare-fun b!103675 () Bool)

(declare-fun e!67524 () Unit!3141)

(declare-fun Unit!3162 () Unit!3141)

(assert (=> b!103675 (= e!67524 Unit!3162)))

(declare-fun lt!52837 () Unit!3141)

(assert (=> b!103675 (= lt!52837 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun call!10887 () SeekEntryResult!261)

(assert (=> b!103675 (= lt!52854 call!10887)))

(declare-fun res!51716 () Bool)

(assert (=> b!103675 (= res!51716 ((_ is Found!261) lt!52854))))

(assert (=> b!103675 (=> (not res!51716) (not e!67525))))

(assert (=> b!103675 e!67525))

(declare-fun lt!52833 () Unit!3141)

(assert (=> b!103675 (= lt!52833 lt!52837)))

(assert (=> b!103675 false))

(declare-fun b!103676 () Bool)

(assert (=> b!103676 (= e!67521 e!67520)))

(declare-fun res!51713 () Bool)

(assert (=> b!103676 (= res!51713 call!10886)))

(assert (=> b!103676 (=> (not res!51713) (not e!67520))))

(declare-fun bm!10883 () Bool)

(declare-fun c!17877 () Bool)

(declare-fun c!17878 () Bool)

(assert (=> bm!10883 (= call!10885 (inRange!0 (ite c!17878 (index!3192 lt!52854) (ite c!17877 (index!3191 lt!52835) (index!3194 lt!52835))) (mask!6695 newMap!16)))))

(declare-fun b!103667 () Bool)

(declare-fun lt!52857 () Unit!3141)

(assert (=> b!103667 (= e!67524 lt!52857)))

(assert (=> b!103667 (= lt!52857 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(assert (=> b!103667 (= lt!52835 call!10887)))

(assert (=> b!103667 (= c!17877 ((_ is MissingZero!261) lt!52835))))

(assert (=> b!103667 e!67527))

(declare-fun d!27801 () Bool)

(assert (=> d!27801 e!67522))

(declare-fun res!51715 () Bool)

(assert (=> d!27801 (=> (not res!51715) (not e!67522))))

(assert (=> d!27801 (= res!51715 (_1!1198 lt!52848))))

(assert (=> d!27801 (= lt!52848 (tuple2!2375 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd (_size!495 newMap!16) #b00000000000000000000000000000001) (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (_vacant!495 newMap!16))))))

(declare-fun lt!52849 () Unit!3141)

(declare-fun lt!52858 () Unit!3141)

(assert (=> d!27801 (= lt!52849 lt!52858)))

(declare-fun lt!52831 () array!4313)

(declare-fun lt!52852 () array!4311)

(assert (=> d!27801 (contains!816 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))

(assert (=> d!27801 (= lt!52858 (lemmaValidKeyInArrayIsInListMap!105 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27801 (= lt!52831 (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))))

(assert (=> d!27801 (= lt!52852 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun lt!52851 () Unit!3141)

(declare-fun lt!52841 () Unit!3141)

(assert (=> d!27801 (= lt!52851 lt!52841)))

(declare-fun lt!52840 () array!4311)

(assert (=> d!27801 (= (arrayCountValidKeys!0 lt!52840 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4311 (_ BitVec 32)) Unit!3141)

(assert (=> d!27801 (= lt!52841 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!52840 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))

(assert (=> d!27801 (= lt!52840 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun lt!52843 () Unit!3141)

(declare-fun lt!52853 () Unit!3141)

(assert (=> d!27801 (= lt!52843 lt!52853)))

(declare-fun lt!52847 () array!4311)

(assert (=> d!27801 (arrayContainsKey!0 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4311 (_ BitVec 64) (_ BitVec 32)) Unit!3141)

(assert (=> d!27801 (= lt!52853 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))

(assert (=> d!27801 (= lt!52847 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun lt!52836 () Unit!3141)

(declare-fun lt!52830 () Unit!3141)

(assert (=> d!27801 (= lt!52836 lt!52830)))

(assert (=> d!27801 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (getCurrentListMap!462 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!29 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3141)

(assert (=> d!27801 (= lt!52830 (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52855 () Unit!3141)

(declare-fun lt!52846 () Unit!3141)

(assert (=> d!27801 (= lt!52855 lt!52846)))

(assert (=> d!27801 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (mask!6695 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4311 (_ BitVec 32) (_ BitVec 32)) Unit!3141)

(assert (=> d!27801 (= lt!52846 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (mask!6695 newMap!16)))))

(declare-fun lt!52832 () Unit!3141)

(declare-fun lt!52845 () Unit!3141)

(assert (=> d!27801 (= lt!52832 lt!52845)))

(assert (=> d!27801 (= (arrayCountValidKeys!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4261 newMap!16) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4311 (_ BitVec 32) (_ BitVec 64)) Unit!3141)

(assert (=> d!27801 (= lt!52845 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4261 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun lt!52850 () Unit!3141)

(declare-fun lt!52856 () Unit!3141)

(assert (=> d!27801 (= lt!52850 lt!52856)))

(declare-fun lt!52842 () List!1613)

(declare-fun lt!52834 () (_ BitVec 32))

(assert (=> d!27801 (arrayNoDuplicates!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) lt!52834 lt!52842)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4311 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1613) Unit!3141)

(assert (=> d!27801 (= lt!52856 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) lt!52834 lt!52842))))

(assert (=> d!27801 (= lt!52842 Nil!1610)))

(assert (=> d!27801 (= lt!52834 #b00000000000000000000000000000000)))

(declare-fun lt!52829 () Unit!3141)

(declare-fun e!67526 () Unit!3141)

(assert (=> d!27801 (= lt!52829 e!67526)))

(declare-fun c!17879 () Bool)

(assert (=> d!27801 (= c!17879 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!52844 () Unit!3141)

(assert (=> d!27801 (= lt!52844 e!67524)))

(assert (=> d!27801 (= c!17878 (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27801 (valid!419 newMap!16)))

(assert (=> d!27801 (= (updateHelperNewKey!46 newMap!16 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))) lt!52848)))

(declare-fun b!103677 () Bool)

(assert (=> b!103677 (= e!67523 (not call!10884))))

(declare-fun b!103678 () Bool)

(declare-fun Unit!3163 () Unit!3141)

(assert (=> b!103678 (= e!67526 Unit!3163)))

(declare-fun b!103679 () Bool)

(assert (=> b!103679 (= e!67522 (= (map!1266 (_2!1198 lt!52848)) (+!134 (map!1266 newMap!16) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103680 () Bool)

(declare-fun Unit!3164 () Unit!3141)

(assert (=> b!103680 (= e!67526 Unit!3164)))

(declare-fun lt!52838 () Unit!3141)

(declare-fun lemmaArrayContainsKeyThenInListMap!29 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3141)

(assert (=> b!103680 (= lt!52838 (lemmaArrayContainsKeyThenInListMap!29 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> b!103680 (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))

(declare-fun lt!52839 () Unit!3141)

(assert (=> b!103680 (= lt!52839 lt!52838)))

(assert (=> b!103680 false))

(declare-fun bm!10884 () Bool)

(assert (=> bm!10884 (= call!10887 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!103681 () Bool)

(declare-fun res!51712 () Bool)

(assert (=> b!103681 (=> (not res!51712) (not e!67523))))

(assert (=> b!103681 (= res!51712 call!10886)))

(assert (=> b!103681 (= e!67527 e!67523)))

(assert (= (and d!27801 c!17878) b!103675))

(assert (= (and d!27801 (not c!17878)) b!103667))

(assert (= (and b!103675 res!51716) b!103670))

(assert (= (and b!103670 res!51719) b!103669))

(assert (= (and b!103667 c!17877) b!103681))

(assert (= (and b!103667 (not c!17877)) b!103672))

(assert (= (and b!103681 res!51712) b!103665))

(assert (= (and b!103665 res!51720) b!103677))

(assert (= (and b!103672 c!17880) b!103676))

(assert (= (and b!103672 (not c!17880)) b!103674))

(assert (= (and b!103676 res!51713) b!103668))

(assert (= (and b!103668 res!51714) b!103666))

(assert (= (or b!103681 b!103676) bm!10882))

(assert (= (or b!103677 b!103666) bm!10881))

(assert (= (or b!103670 bm!10882) bm!10883))

(assert (= (or b!103675 b!103667) bm!10884))

(assert (= (and d!27801 c!17879) b!103680))

(assert (= (and d!27801 (not c!17879)) b!103678))

(assert (= (and d!27801 res!51715) b!103671))

(assert (= (and b!103671 res!51718) b!103673))

(assert (= (and b!103673 res!51717) b!103679))

(declare-fun m!114353 () Bool)

(assert (=> b!103673 m!114353))

(assert (=> b!103673 m!114353))

(assert (=> b!103673 m!113535))

(declare-fun m!114355 () Bool)

(assert (=> b!103673 m!114355))

(declare-fun m!114357 () Bool)

(assert (=> b!103671 m!114357))

(declare-fun m!114359 () Bool)

(assert (=> bm!10883 m!114359))

(assert (=> bm!10884 m!113535))

(assert (=> bm!10884 m!113823))

(assert (=> b!103675 m!113535))

(assert (=> b!103675 m!113865))

(declare-fun m!114361 () Bool)

(assert (=> b!103668 m!114361))

(assert (=> bm!10881 m!113535))

(assert (=> bm!10881 m!113841))

(assert (=> b!103679 m!114353))

(assert (=> b!103679 m!113543))

(assert (=> b!103679 m!113543))

(declare-fun m!114363 () Bool)

(assert (=> b!103679 m!114363))

(assert (=> b!103680 m!113535))

(declare-fun m!114365 () Bool)

(assert (=> b!103680 m!114365))

(assert (=> b!103680 m!113847))

(assert (=> b!103680 m!113847))

(assert (=> b!103680 m!113535))

(declare-fun m!114367 () Bool)

(assert (=> b!103680 m!114367))

(declare-fun m!114369 () Bool)

(assert (=> d!27801 m!114369))

(declare-fun m!114371 () Bool)

(assert (=> d!27801 m!114371))

(assert (=> d!27801 m!113535))

(assert (=> d!27801 m!113841))

(declare-fun m!114373 () Bool)

(assert (=> d!27801 m!114373))

(declare-fun m!114375 () Bool)

(assert (=> d!27801 m!114375))

(declare-fun m!114377 () Bool)

(assert (=> d!27801 m!114377))

(assert (=> d!27801 m!114373))

(declare-fun m!114379 () Bool)

(assert (=> d!27801 m!114379))

(assert (=> d!27801 m!113535))

(declare-fun m!114381 () Bool)

(assert (=> d!27801 m!114381))

(assert (=> d!27801 m!114377))

(assert (=> d!27801 m!113847))

(assert (=> d!27801 m!114065))

(declare-fun m!114383 () Bool)

(assert (=> d!27801 m!114383))

(assert (=> d!27801 m!113535))

(declare-fun m!114385 () Bool)

(assert (=> d!27801 m!114385))

(assert (=> d!27801 m!113535))

(declare-fun m!114387 () Bool)

(assert (=> d!27801 m!114387))

(assert (=> d!27801 m!113805))

(assert (=> d!27801 m!113847))

(declare-fun m!114389 () Bool)

(assert (=> d!27801 m!114389))

(declare-fun m!114391 () Bool)

(assert (=> d!27801 m!114391))

(assert (=> d!27801 m!113535))

(declare-fun m!114393 () Bool)

(assert (=> d!27801 m!114393))

(declare-fun m!114395 () Bool)

(assert (=> d!27801 m!114395))

(declare-fun m!114397 () Bool)

(assert (=> d!27801 m!114397))

(assert (=> d!27801 m!113535))

(declare-fun m!114399 () Bool)

(assert (=> d!27801 m!114399))

(declare-fun m!114401 () Bool)

(assert (=> d!27801 m!114401))

(assert (=> d!27801 m!113589))

(assert (=> d!27801 m!113847))

(assert (=> d!27801 m!113535))

(assert (=> d!27801 m!114367))

(assert (=> d!27801 m!113535))

(declare-fun m!114403 () Bool)

(assert (=> d!27801 m!114403))

(assert (=> b!103667 m!113535))

(assert (=> b!103667 m!113861))

(declare-fun m!114405 () Bool)

(assert (=> b!103669 m!114405))

(declare-fun m!114407 () Bool)

(assert (=> b!103665 m!114407))

(assert (=> bm!10797 d!27801))

(declare-fun b!103682 () Bool)

(declare-fun e!67529 () Bool)

(declare-fun lt!52863 () ListLongMap!1539)

(assert (=> b!103682 (= e!67529 (isEmpty!371 lt!52863))))

(declare-fun d!27803 () Bool)

(declare-fun e!67534 () Bool)

(assert (=> d!27803 e!67534))

(declare-fun res!51721 () Bool)

(assert (=> d!27803 (=> (not res!51721) (not e!67534))))

(assert (=> d!27803 (= res!51721 (not (contains!816 lt!52863 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67530 () ListLongMap!1539)

(assert (=> d!27803 (= lt!52863 e!67530)))

(declare-fun c!17884 () Bool)

(assert (=> d!27803 (= c!17884 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!27803 (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992))))))

(assert (=> d!27803 (= (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) lt!52863)))

(declare-fun b!103683 () Bool)

(declare-fun e!67532 () Bool)

(assert (=> b!103683 (= e!67532 e!67529)))

(declare-fun c!17882 () Bool)

(assert (=> b!103683 (= c!17882 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103684 () Bool)

(assert (=> b!103684 (= e!67530 (ListLongMap!1540 Nil!1609))))

(declare-fun b!103685 () Bool)

(assert (=> b!103685 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> b!103685 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67528 () Bool)

(assert (=> b!103685 (= e!67528 (= (apply!97 lt!52863 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103686 () Bool)

(declare-fun e!67531 () Bool)

(assert (=> b!103686 (= e!67531 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103686 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!103687 () Bool)

(assert (=> b!103687 (= e!67534 e!67532)))

(declare-fun c!17883 () Bool)

(assert (=> b!103687 (= c!17883 e!67531)))

(declare-fun res!51724 () Bool)

(assert (=> b!103687 (=> (not res!51724) (not e!67531))))

(assert (=> b!103687 (= res!51724 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103688 () Bool)

(declare-fun lt!52860 () Unit!3141)

(declare-fun lt!52862 () Unit!3141)

(assert (=> b!103688 (= lt!52860 lt!52862)))

(declare-fun lt!52865 () (_ BitVec 64))

(declare-fun lt!52864 () ListLongMap!1539)

(declare-fun lt!52859 () (_ BitVec 64))

(declare-fun lt!52861 () V!3209)

(assert (=> b!103688 (not (contains!816 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861)) lt!52865))))

(assert (=> b!103688 (= lt!52862 (addStillNotContains!46 lt!52864 lt!52859 lt!52861 lt!52865))))

(assert (=> b!103688 (= lt!52865 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103688 (= lt!52861 (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103688 (= lt!52859 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!10888 () ListLongMap!1539)

(assert (=> b!103688 (= lt!52864 call!10888)))

(declare-fun e!67533 () ListLongMap!1539)

(assert (=> b!103688 (= e!67533 (+!134 call!10888 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!103689 () Bool)

(assert (=> b!103689 (= e!67533 call!10888)))

(declare-fun b!103690 () Bool)

(assert (=> b!103690 (= e!67532 e!67528)))

(assert (=> b!103690 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun res!51723 () Bool)

(assert (=> b!103690 (= res!51723 (contains!816 lt!52863 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103690 (=> (not res!51723) (not e!67528))))

(declare-fun bm!10885 () Bool)

(assert (=> bm!10885 (= call!10888 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!103691 () Bool)

(assert (=> b!103691 (= e!67529 (= lt!52863 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103692 () Bool)

(assert (=> b!103692 (= e!67530 e!67533)))

(declare-fun c!17881 () Bool)

(assert (=> b!103692 (= c!17881 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103693 () Bool)

(declare-fun res!51722 () Bool)

(assert (=> b!103693 (=> (not res!51722) (not e!67534))))

(assert (=> b!103693 (= res!51722 (not (contains!816 lt!52863 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27803 c!17884) b!103684))

(assert (= (and d!27803 (not c!17884)) b!103692))

(assert (= (and b!103692 c!17881) b!103688))

(assert (= (and b!103692 (not c!17881)) b!103689))

(assert (= (or b!103688 b!103689) bm!10885))

(assert (= (and d!27803 res!51721) b!103693))

(assert (= (and b!103693 res!51722) b!103687))

(assert (= (and b!103687 res!51724) b!103686))

(assert (= (and b!103687 c!17883) b!103690))

(assert (= (and b!103687 (not c!17883)) b!103683))

(assert (= (and b!103690 res!51723) b!103685))

(assert (= (and b!103683 c!17882) b!103691))

(assert (= (and b!103683 (not c!17882)) b!103682))

(declare-fun b_lambda!4617 () Bool)

(assert (=> (not b_lambda!4617) (not b!103685)))

(assert (=> b!103685 t!5662))

(declare-fun b_and!6397 () Bool)

(assert (= b_and!6393 (and (=> t!5662 result!3411) b_and!6397)))

(assert (=> b!103685 t!5664))

(declare-fun b_and!6399 () Bool)

(assert (= b_and!6395 (and (=> t!5664 result!3415) b_and!6399)))

(declare-fun b_lambda!4619 () Bool)

(assert (=> (not b_lambda!4619) (not b!103688)))

(assert (=> b!103688 t!5662))

(declare-fun b_and!6401 () Bool)

(assert (= b_and!6397 (and (=> t!5662 result!3411) b_and!6401)))

(assert (=> b!103688 t!5664))

(declare-fun b_and!6403 () Bool)

(assert (= b_and!6399 (and (=> t!5664 result!3415) b_and!6403)))

(assert (=> b!103686 m!114313))

(assert (=> b!103686 m!114313))

(declare-fun m!114409 () Bool)

(assert (=> b!103686 m!114409))

(declare-fun m!114411 () Bool)

(assert (=> b!103682 m!114411))

(assert (=> b!103690 m!114313))

(assert (=> b!103690 m!114313))

(declare-fun m!114413 () Bool)

(assert (=> b!103690 m!114413))

(declare-fun m!114415 () Bool)

(assert (=> d!27803 m!114415))

(assert (=> d!27803 m!113563))

(declare-fun m!114417 () Bool)

(assert (=> b!103693 m!114417))

(declare-fun m!114419 () Bool)

(assert (=> b!103685 m!114419))

(assert (=> b!103685 m!114313))

(declare-fun m!114421 () Bool)

(assert (=> b!103685 m!114421))

(assert (=> b!103685 m!113539))

(assert (=> b!103685 m!114419))

(assert (=> b!103685 m!113539))

(declare-fun m!114423 () Bool)

(assert (=> b!103685 m!114423))

(assert (=> b!103685 m!114313))

(declare-fun m!114425 () Bool)

(assert (=> bm!10885 m!114425))

(assert (=> b!103691 m!114425))

(assert (=> b!103692 m!114313))

(assert (=> b!103692 m!114313))

(assert (=> b!103692 m!114409))

(assert (=> b!103688 m!114419))

(declare-fun m!114427 () Bool)

(assert (=> b!103688 m!114427))

(assert (=> b!103688 m!114419))

(assert (=> b!103688 m!113539))

(assert (=> b!103688 m!114423))

(declare-fun m!114429 () Bool)

(assert (=> b!103688 m!114429))

(declare-fun m!114431 () Bool)

(assert (=> b!103688 m!114431))

(assert (=> b!103688 m!114313))

(declare-fun m!114433 () Bool)

(assert (=> b!103688 m!114433))

(assert (=> b!103688 m!113539))

(assert (=> b!103688 m!114429))

(assert (=> bm!10746 d!27803))

(assert (=> b!103100 d!27797))

(assert (=> bm!10833 d!27653))

(declare-fun b!103694 () Bool)

(declare-fun e!67547 () Bool)

(assert (=> b!103694 (= e!67547 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun c!17888 () Bool)

(declare-fun b!103695 () Bool)

(assert (=> b!103695 (= c!17888 (and (not (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67544 () ListLongMap!1539)

(declare-fun e!67545 () ListLongMap!1539)

(assert (=> b!103695 (= e!67544 e!67545)))

(declare-fun b!103696 () Bool)

(declare-fun e!67540 () Bool)

(declare-fun call!10889 () Bool)

(assert (=> b!103696 (= e!67540 (not call!10889))))

(declare-fun bm!10886 () Bool)

(declare-fun call!10892 () ListLongMap!1539)

(assert (=> bm!10886 (= call!10892 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52876 () ListLongMap!1539)

(declare-fun e!67539 () Bool)

(declare-fun b!103697 () Bool)

(assert (=> b!103697 (= e!67539 (= (apply!97 lt!52876 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103697 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))))))))

(assert (=> b!103697 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103698 () Bool)

(declare-fun e!67546 () ListLongMap!1539)

(assert (=> b!103698 (= e!67546 e!67544)))

(declare-fun c!17886 () Bool)

(assert (=> b!103698 (= c!17886 (and (not (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103699 () Bool)

(declare-fun e!67541 () Unit!3141)

(declare-fun lt!52880 () Unit!3141)

(assert (=> b!103699 (= e!67541 lt!52880)))

(declare-fun lt!52867 () ListLongMap!1539)

(assert (=> b!103699 (= lt!52867 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52869 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52869 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52885 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52885 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52887 () Unit!3141)

(assert (=> b!103699 (= lt!52887 (addStillContains!73 lt!52867 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) lt!52885))))

(assert (=> b!103699 (contains!816 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!52885)))

(declare-fun lt!52883 () Unit!3141)

(assert (=> b!103699 (= lt!52883 lt!52887)))

(declare-fun lt!52878 () ListLongMap!1539)

(assert (=> b!103699 (= lt!52878 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52886 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52886 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52868 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52868 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52873 () Unit!3141)

(assert (=> b!103699 (= lt!52873 (addApplyDifferent!73 lt!52878 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) lt!52868))))

(assert (=> b!103699 (= (apply!97 (+!134 lt!52878 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!52868) (apply!97 lt!52878 lt!52868))))

(declare-fun lt!52866 () Unit!3141)

(assert (=> b!103699 (= lt!52866 lt!52873)))

(declare-fun lt!52884 () ListLongMap!1539)

(assert (=> b!103699 (= lt!52884 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52879 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52879 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52881 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52881 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52870 () Unit!3141)

(assert (=> b!103699 (= lt!52870 (addApplyDifferent!73 lt!52884 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) lt!52881))))

(assert (=> b!103699 (= (apply!97 (+!134 lt!52884 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!52881) (apply!97 lt!52884 lt!52881))))

(declare-fun lt!52875 () Unit!3141)

(assert (=> b!103699 (= lt!52875 lt!52870)))

(declare-fun lt!52877 () ListLongMap!1539)

(assert (=> b!103699 (= lt!52877 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52882 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52882 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52872 () (_ BitVec 64))

(assert (=> b!103699 (= lt!52872 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103699 (= lt!52880 (addApplyDifferent!73 lt!52877 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) lt!52872))))

(assert (=> b!103699 (= (apply!97 (+!134 lt!52877 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!52872) (apply!97 lt!52877 lt!52872))))

(declare-fun b!103700 () Bool)

(declare-fun e!67535 () Bool)

(declare-fun e!67538 () Bool)

(assert (=> b!103700 (= e!67535 e!67538)))

(declare-fun res!51727 () Bool)

(declare-fun call!10891 () Bool)

(assert (=> b!103700 (= res!51727 call!10891)))

(assert (=> b!103700 (=> (not res!51727) (not e!67538))))

(declare-fun b!103701 () Bool)

(declare-fun e!67543 () Bool)

(assert (=> b!103701 (= e!67543 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!67542 () Bool)

(declare-fun b!103702 () Bool)

(assert (=> b!103702 (= e!67542 (= (apply!97 lt!52876 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))

(declare-fun call!10895 () ListLongMap!1539)

(declare-fun c!17885 () Bool)

(declare-fun call!10894 () ListLongMap!1539)

(declare-fun call!10890 () ListLongMap!1539)

(declare-fun bm!10887 () Bool)

(assert (=> bm!10887 (= call!10895 (+!134 (ite c!17885 call!10892 (ite c!17886 call!10890 call!10894)) (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(declare-fun bm!10888 () Bool)

(assert (=> bm!10888 (= call!10890 call!10892)))

(declare-fun b!103703 () Bool)

(declare-fun res!51728 () Bool)

(declare-fun e!67537 () Bool)

(assert (=> b!103703 (=> (not res!51728) (not e!67537))))

(declare-fun e!67536 () Bool)

(assert (=> b!103703 (= res!51728 e!67536)))

(declare-fun res!51730 () Bool)

(assert (=> b!103703 (=> res!51730 e!67536)))

(assert (=> b!103703 (= res!51730 (not e!67547))))

(declare-fun res!51725 () Bool)

(assert (=> b!103703 (=> (not res!51725) (not e!67547))))

(assert (=> b!103703 (= res!51725 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10889 () Bool)

(assert (=> bm!10889 (= call!10891 (contains!816 lt!52876 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10890 () Bool)

(assert (=> bm!10890 (= call!10894 call!10890)))

(declare-fun b!103704 () Bool)

(assert (=> b!103704 (= e!67538 (= (apply!97 lt!52876 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))

(declare-fun d!27805 () Bool)

(assert (=> d!27805 e!67537))

(declare-fun res!51731 () Bool)

(assert (=> d!27805 (=> (not res!51731) (not e!67537))))

(assert (=> d!27805 (= res!51731 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!52871 () ListLongMap!1539)

(assert (=> d!27805 (= lt!52876 lt!52871)))

(declare-fun lt!52874 () Unit!3141)

(assert (=> d!27805 (= lt!52874 e!67541)))

(declare-fun c!17889 () Bool)

(assert (=> d!27805 (= c!17889 e!67543)))

(declare-fun res!51733 () Bool)

(assert (=> d!27805 (=> (not res!51733) (not e!67543))))

(assert (=> d!27805 (= res!51733 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27805 (= lt!52871 e!67546)))

(assert (=> d!27805 (= c!17885 (and (not (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27805 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27805 (= (getCurrentListMap!462 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!52876)))

(declare-fun b!103705 () Bool)

(assert (=> b!103705 (= e!67546 (+!134 call!10895 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))

(declare-fun b!103706 () Bool)

(declare-fun res!51729 () Bool)

(assert (=> b!103706 (=> (not res!51729) (not e!67537))))

(assert (=> b!103706 (= res!51729 e!67540)))

(declare-fun c!17887 () Bool)

(assert (=> b!103706 (= c!17887 (not (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!103707 () Bool)

(assert (=> b!103707 (= e!67540 e!67542)))

(declare-fun res!51726 () Bool)

(assert (=> b!103707 (= res!51726 call!10889)))

(assert (=> b!103707 (=> (not res!51726) (not e!67542))))

(declare-fun b!103708 () Bool)

(declare-fun call!10893 () ListLongMap!1539)

(assert (=> b!103708 (= e!67544 call!10893)))

(declare-fun bm!10891 () Bool)

(assert (=> bm!10891 (= call!10893 call!10895)))

(declare-fun b!103709 () Bool)

(declare-fun Unit!3165 () Unit!3141)

(assert (=> b!103709 (= e!67541 Unit!3165)))

(declare-fun b!103710 () Bool)

(assert (=> b!103710 (= e!67537 e!67535)))

(declare-fun c!17890 () Bool)

(assert (=> b!103710 (= c!17890 (not (= (bvand (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103711 () Bool)

(assert (=> b!103711 (= e!67545 call!10893)))

(declare-fun b!103712 () Bool)

(assert (=> b!103712 (= e!67535 (not call!10891))))

(declare-fun b!103713 () Bool)

(assert (=> b!103713 (= e!67545 call!10894)))

(declare-fun b!103714 () Bool)

(assert (=> b!103714 (= e!67536 e!67539)))

(declare-fun res!51732 () Bool)

(assert (=> b!103714 (=> (not res!51732) (not e!67539))))

(assert (=> b!103714 (= res!51732 (contains!816 lt!52876 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103714 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10892 () Bool)

(assert (=> bm!10892 (= call!10889 (contains!816 lt!52876 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27805 c!17885) b!103705))

(assert (= (and d!27805 (not c!17885)) b!103698))

(assert (= (and b!103698 c!17886) b!103708))

(assert (= (and b!103698 (not c!17886)) b!103695))

(assert (= (and b!103695 c!17888) b!103711))

(assert (= (and b!103695 (not c!17888)) b!103713))

(assert (= (or b!103711 b!103713) bm!10890))

(assert (= (or b!103708 bm!10890) bm!10888))

(assert (= (or b!103708 b!103711) bm!10891))

(assert (= (or b!103705 bm!10888) bm!10886))

(assert (= (or b!103705 bm!10891) bm!10887))

(assert (= (and d!27805 res!51733) b!103701))

(assert (= (and d!27805 c!17889) b!103699))

(assert (= (and d!27805 (not c!17889)) b!103709))

(assert (= (and d!27805 res!51731) b!103703))

(assert (= (and b!103703 res!51725) b!103694))

(assert (= (and b!103703 (not res!51730)) b!103714))

(assert (= (and b!103714 res!51732) b!103697))

(assert (= (and b!103703 res!51728) b!103706))

(assert (= (and b!103706 c!17887) b!103707))

(assert (= (and b!103706 (not c!17887)) b!103696))

(assert (= (and b!103707 res!51726) b!103702))

(assert (= (or b!103707 b!103696) bm!10892))

(assert (= (and b!103706 res!51729) b!103710))

(assert (= (and b!103710 c!17890) b!103700))

(assert (= (and b!103710 (not c!17890)) b!103712))

(assert (= (and b!103700 res!51727) b!103704))

(assert (= (or b!103700 b!103712) bm!10889))

(declare-fun b_lambda!4621 () Bool)

(assert (=> (not b_lambda!4621) (not b!103697)))

(assert (=> b!103697 t!5677))

(declare-fun b_and!6405 () Bool)

(assert (= b_and!6401 (and (=> t!5677 result!3431) b_and!6405)))

(assert (=> b!103697 t!5679))

(declare-fun b_and!6407 () Bool)

(assert (= b_and!6403 (and (=> t!5679 result!3433) b_and!6407)))

(declare-fun m!114435 () Bool)

(assert (=> bm!10892 m!114435))

(declare-fun m!114437 () Bool)

(assert (=> b!103699 m!114437))

(declare-fun m!114439 () Bool)

(assert (=> b!103699 m!114439))

(declare-fun m!114441 () Bool)

(assert (=> b!103699 m!114441))

(declare-fun m!114443 () Bool)

(assert (=> b!103699 m!114443))

(declare-fun m!114445 () Bool)

(assert (=> b!103699 m!114445))

(declare-fun m!114447 () Bool)

(assert (=> b!103699 m!114447))

(assert (=> b!103699 m!114437))

(declare-fun m!114449 () Bool)

(assert (=> b!103699 m!114449))

(declare-fun m!114451 () Bool)

(assert (=> b!103699 m!114451))

(declare-fun m!114453 () Bool)

(assert (=> b!103699 m!114453))

(declare-fun m!114455 () Bool)

(assert (=> b!103699 m!114455))

(assert (=> b!103699 m!113969))

(assert (=> b!103699 m!114447))

(declare-fun m!114457 () Bool)

(assert (=> b!103699 m!114457))

(declare-fun m!114459 () Bool)

(assert (=> b!103699 m!114459))

(assert (=> b!103699 m!114445))

(declare-fun m!114461 () Bool)

(assert (=> b!103699 m!114461))

(assert (=> b!103699 m!114441))

(declare-fun m!114463 () Bool)

(assert (=> b!103699 m!114463))

(declare-fun m!114465 () Bool)

(assert (=> b!103699 m!114465))

(declare-fun m!114467 () Bool)

(assert (=> b!103699 m!114467))

(declare-fun m!114469 () Bool)

(assert (=> bm!10887 m!114469))

(assert (=> d!27805 m!113985))

(assert (=> b!103697 m!113987))

(assert (=> b!103697 m!113969))

(declare-fun m!114471 () Bool)

(assert (=> b!103697 m!114471))

(declare-fun m!114473 () Bool)

(assert (=> b!103697 m!114473))

(assert (=> b!103697 m!113987))

(declare-fun m!114475 () Bool)

(assert (=> b!103697 m!114475))

(assert (=> b!103697 m!113969))

(assert (=> b!103697 m!114473))

(assert (=> b!103714 m!113969))

(assert (=> b!103714 m!113969))

(declare-fun m!114477 () Bool)

(assert (=> b!103714 m!114477))

(assert (=> b!103701 m!113969))

(assert (=> b!103701 m!113969))

(assert (=> b!103701 m!113997))

(declare-fun m!114479 () Bool)

(assert (=> b!103704 m!114479))

(assert (=> b!103694 m!113969))

(assert (=> b!103694 m!113969))

(assert (=> b!103694 m!113997))

(declare-fun m!114481 () Bool)

(assert (=> bm!10889 m!114481))

(declare-fun m!114483 () Bool)

(assert (=> b!103702 m!114483))

(assert (=> bm!10886 m!114455))

(declare-fun m!114485 () Bool)

(assert (=> b!103705 m!114485))

(assert (=> bm!10805 d!27805))

(assert (=> d!27643 d!27647))

(declare-fun d!27807 () Bool)

(assert (=> d!27807 (not (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!27807 true))

(declare-fun _$68!103 () Unit!3141)

(assert (=> d!27807 (= (choose!68 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610)) _$68!103)))

(declare-fun bs!4233 () Bool)

(assert (= bs!4233 d!27807))

(assert (=> bs!4233 m!113535))

(assert (=> bs!4233 m!113583))

(assert (=> d!27643 d!27807))

(declare-fun d!27809 () Bool)

(declare-fun lt!52890 () Bool)

(declare-fun content!108 (List!1612) (InoxSet tuple2!2372))

(assert (=> d!27809 (= lt!52890 (select (content!108 (toList!785 lt!52464)) lt!52331))))

(declare-fun e!67552 () Bool)

(assert (=> d!27809 (= lt!52890 e!67552)))

(declare-fun res!51738 () Bool)

(assert (=> d!27809 (=> (not res!51738) (not e!67552))))

(assert (=> d!27809 (= res!51738 ((_ is Cons!1608) (toList!785 lt!52464)))))

(assert (=> d!27809 (= (contains!819 (toList!785 lt!52464) lt!52331) lt!52890)))

(declare-fun b!103719 () Bool)

(declare-fun e!67553 () Bool)

(assert (=> b!103719 (= e!67552 e!67553)))

(declare-fun res!51739 () Bool)

(assert (=> b!103719 (=> res!51739 e!67553)))

(assert (=> b!103719 (= res!51739 (= (h!2204 (toList!785 lt!52464)) lt!52331))))

(declare-fun b!103720 () Bool)

(assert (=> b!103720 (= e!67553 (contains!819 (t!5665 (toList!785 lt!52464)) lt!52331))))

(assert (= (and d!27809 res!51738) b!103719))

(assert (= (and b!103719 (not res!51739)) b!103720))

(declare-fun m!114487 () Bool)

(assert (=> d!27809 m!114487))

(declare-fun m!114489 () Bool)

(assert (=> d!27809 m!114489))

(declare-fun m!114491 () Bool)

(assert (=> b!103720 m!114491))

(assert (=> b!103152 d!27809))

(declare-fun d!27811 () Bool)

(declare-fun res!51744 () Bool)

(declare-fun e!67558 () Bool)

(assert (=> d!27811 (=> res!51744 e!67558)))

(assert (=> d!27811 (= res!51744 (and ((_ is Cons!1608) (toList!785 lt!52327)) (= (_1!1197 (h!2204 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!27811 (= (containsKey!157 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!67558)))

(declare-fun b!103725 () Bool)

(declare-fun e!67559 () Bool)

(assert (=> b!103725 (= e!67558 e!67559)))

(declare-fun res!51745 () Bool)

(assert (=> b!103725 (=> (not res!51745) (not e!67559))))

(assert (=> b!103725 (= res!51745 (and (or (not ((_ is Cons!1608) (toList!785 lt!52327))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) ((_ is Cons!1608) (toList!785 lt!52327)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(declare-fun b!103726 () Bool)

(assert (=> b!103726 (= e!67559 (containsKey!157 (t!5665 (toList!785 lt!52327)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27811 (not res!51744)) b!103725))

(assert (= (and b!103725 res!51745) b!103726))

(assert (=> b!103726 m!113535))

(declare-fun m!114493 () Bool)

(assert (=> b!103726 m!114493))

(assert (=> d!27673 d!27811))

(declare-fun d!27813 () Bool)

(declare-fun e!67560 () Bool)

(assert (=> d!27813 e!67560))

(declare-fun res!51747 () Bool)

(assert (=> d!27813 (=> (not res!51747) (not e!67560))))

(declare-fun lt!52894 () ListLongMap!1539)

(assert (=> d!27813 (= res!51747 (contains!816 lt!52894 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!52892 () List!1612)

(assert (=> d!27813 (= lt!52894 (ListLongMap!1540 lt!52892))))

(declare-fun lt!52891 () Unit!3141)

(declare-fun lt!52893 () Unit!3141)

(assert (=> d!27813 (= lt!52891 lt!52893)))

(assert (=> d!27813 (= (getValueByKey!153 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27813 (= lt!52893 (lemmaContainsTupThenGetReturnValue!72 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27813 (= lt!52892 (insertStrictlySorted!75 (toList!785 call!10807) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27813 (= (+!134 call!10807 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!52894)))

(declare-fun b!103727 () Bool)

(declare-fun res!51746 () Bool)

(assert (=> b!103727 (=> (not res!51746) (not e!67560))))

(assert (=> b!103727 (= res!51746 (= (getValueByKey!153 (toList!785 lt!52894) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!103728 () Bool)

(assert (=> b!103728 (= e!67560 (contains!819 (toList!785 lt!52894) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!27813 res!51747) b!103727))

(assert (= (and b!103727 res!51746) b!103728))

(declare-fun m!114495 () Bool)

(assert (=> d!27813 m!114495))

(declare-fun m!114497 () Bool)

(assert (=> d!27813 m!114497))

(declare-fun m!114499 () Bool)

(assert (=> d!27813 m!114499))

(declare-fun m!114501 () Bool)

(assert (=> d!27813 m!114501))

(declare-fun m!114503 () Bool)

(assert (=> b!103727 m!114503))

(declare-fun m!114505 () Bool)

(assert (=> b!103728 m!114505))

(assert (=> b!103256 d!27813))

(declare-fun b!103737 () Bool)

(declare-fun e!67568 () Bool)

(declare-fun e!67569 () Bool)

(assert (=> b!103737 (= e!67568 e!67569)))

(declare-fun lt!52901 () (_ BitVec 64))

(assert (=> b!103737 (= lt!52901 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52902 () Unit!3141)

(assert (=> b!103737 (= lt!52902 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4261 newMap!16) lt!52901 #b00000000000000000000000000000000))))

(assert (=> b!103737 (arrayContainsKey!0 (_keys!4261 newMap!16) lt!52901 #b00000000000000000000000000000000)))

(declare-fun lt!52903 () Unit!3141)

(assert (=> b!103737 (= lt!52903 lt!52902)))

(declare-fun res!51753 () Bool)

(assert (=> b!103737 (= res!51753 (= (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (_keys!4261 newMap!16) (mask!6695 newMap!16)) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!103737 (=> (not res!51753) (not e!67569))))

(declare-fun bm!10895 () Bool)

(declare-fun call!10898 () Bool)

(assert (=> bm!10895 (= call!10898 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!103738 () Bool)

(declare-fun e!67567 () Bool)

(assert (=> b!103738 (= e!67567 e!67568)))

(declare-fun c!17893 () Bool)

(assert (=> b!103738 (= c!17893 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103739 () Bool)

(assert (=> b!103739 (= e!67569 call!10898)))

(declare-fun d!27815 () Bool)

(declare-fun res!51752 () Bool)

(assert (=> d!27815 (=> res!51752 e!67567)))

(assert (=> d!27815 (= res!51752 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27815 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 newMap!16) (mask!6695 newMap!16)) e!67567)))

(declare-fun b!103740 () Bool)

(assert (=> b!103740 (= e!67568 call!10898)))

(assert (= (and d!27815 (not res!51752)) b!103738))

(assert (= (and b!103738 c!17893) b!103737))

(assert (= (and b!103738 (not c!17893)) b!103740))

(assert (= (and b!103737 res!51753) b!103739))

(assert (= (or b!103739 b!103740) bm!10895))

(assert (=> b!103737 m!113969))

(declare-fun m!114507 () Bool)

(assert (=> b!103737 m!114507))

(declare-fun m!114509 () Bool)

(assert (=> b!103737 m!114509))

(assert (=> b!103737 m!113969))

(declare-fun m!114511 () Bool)

(assert (=> b!103737 m!114511))

(declare-fun m!114513 () Bool)

(assert (=> bm!10895 m!114513))

(assert (=> b!103738 m!113969))

(assert (=> b!103738 m!113969))

(assert (=> b!103738 m!113997))

(assert (=> b!103160 d!27815))

(declare-fun d!27817 () Bool)

(assert (=> d!27817 (= (apply!97 lt!52435 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1328 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4234 () Bool)

(assert (= bs!4234 d!27817))

(assert (=> bs!4234 m!113707))

(declare-fun m!114515 () Bool)

(assert (=> bs!4234 m!114515))

(assert (=> bs!4234 m!114515))

(declare-fun m!114517 () Bool)

(assert (=> bs!4234 m!114517))

(assert (=> b!103132 d!27817))

(assert (=> b!103132 d!27695))

(declare-fun d!27819 () Bool)

(declare-fun e!67571 () Bool)

(assert (=> d!27819 e!67571))

(declare-fun res!51754 () Bool)

(assert (=> d!27819 (=> res!51754 e!67571)))

(declare-fun lt!52906 () Bool)

(assert (=> d!27819 (= res!51754 (not lt!52906))))

(declare-fun lt!52905 () Bool)

(assert (=> d!27819 (= lt!52906 lt!52905)))

(declare-fun lt!52907 () Unit!3141)

(declare-fun e!67570 () Unit!3141)

(assert (=> d!27819 (= lt!52907 e!67570)))

(declare-fun c!17894 () Bool)

(assert (=> d!27819 (= c!17894 lt!52905)))

(assert (=> d!27819 (= lt!52905 (containsKey!157 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!27819 (= (contains!816 e!67286 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!52906)))

(declare-fun b!103741 () Bool)

(declare-fun lt!52904 () Unit!3141)

(assert (=> b!103741 (= e!67570 lt!52904)))

(assert (=> b!103741 (= lt!52904 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!103741 (isDefined!107 (getValueByKey!153 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103742 () Bool)

(declare-fun Unit!3166 () Unit!3141)

(assert (=> b!103742 (= e!67570 Unit!3166)))

(declare-fun b!103743 () Bool)

(assert (=> b!103743 (= e!67571 (isDefined!107 (getValueByKey!153 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (= (and d!27819 c!17894) b!103741))

(assert (= (and d!27819 (not c!17894)) b!103742))

(assert (= (and d!27819 (not res!51754)) b!103743))

(assert (=> d!27819 m!113535))

(declare-fun m!114519 () Bool)

(assert (=> d!27819 m!114519))

(assert (=> b!103741 m!113535))

(declare-fun m!114521 () Bool)

(assert (=> b!103741 m!114521))

(assert (=> b!103741 m!113535))

(declare-fun m!114523 () Bool)

(assert (=> b!103741 m!114523))

(assert (=> b!103741 m!114523))

(declare-fun m!114525 () Bool)

(assert (=> b!103741 m!114525))

(assert (=> b!103743 m!113535))

(assert (=> b!103743 m!114523))

(assert (=> b!103743 m!114523))

(assert (=> b!103743 m!114525))

(assert (=> bm!10812 d!27819))

(declare-fun b!103755 () Bool)

(declare-fun e!67574 () Bool)

(assert (=> b!103755 (= e!67574 (and (bvsge (extraKeys!2369 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2369 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!495 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!27821 () Bool)

(declare-fun res!51764 () Bool)

(assert (=> d!27821 (=> (not res!51764) (not e!67574))))

(assert (=> d!27821 (= res!51764 (validMask!0 (mask!6695 newMap!16)))))

(assert (=> d!27821 (= (simpleValid!73 newMap!16) e!67574)))

(declare-fun b!103754 () Bool)

(declare-fun res!51763 () Bool)

(assert (=> b!103754 (=> (not res!51763) (not e!67574))))

(declare-fun size!2305 (LongMapFixedSize!892) (_ BitVec 32))

(assert (=> b!103754 (= res!51763 (= (size!2305 newMap!16) (bvadd (_size!495 newMap!16) (bvsdiv (bvadd (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!103752 () Bool)

(declare-fun res!51765 () Bool)

(assert (=> b!103752 (=> (not res!51765) (not e!67574))))

(assert (=> b!103752 (= res!51765 (and (= (size!2300 (_values!2543 newMap!16)) (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001)) (= (size!2299 (_keys!4261 newMap!16)) (size!2300 (_values!2543 newMap!16))) (bvsge (_size!495 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!495 newMap!16) (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!103753 () Bool)

(declare-fun res!51766 () Bool)

(assert (=> b!103753 (=> (not res!51766) (not e!67574))))

(assert (=> b!103753 (= res!51766 (bvsge (size!2305 newMap!16) (_size!495 newMap!16)))))

(assert (= (and d!27821 res!51764) b!103752))

(assert (= (and b!103752 res!51765) b!103753))

(assert (= (and b!103753 res!51766) b!103754))

(assert (= (and b!103754 res!51763) b!103755))

(assert (=> d!27821 m!113985))

(declare-fun m!114527 () Bool)

(assert (=> b!103754 m!114527))

(assert (=> b!103753 m!114527))

(assert (=> d!27667 d!27821))

(assert (=> d!27679 d!27665))

(declare-fun b!103772 () Bool)

(declare-fun e!67584 () Bool)

(declare-fun e!67585 () Bool)

(assert (=> b!103772 (= e!67584 e!67585)))

(declare-fun c!17900 () Bool)

(declare-fun lt!52912 () SeekEntryResult!261)

(assert (=> b!103772 (= c!17900 ((_ is MissingVacant!261) lt!52912))))

(declare-fun d!27823 () Bool)

(assert (=> d!27823 e!67584))

(declare-fun c!17899 () Bool)

(assert (=> d!27823 (= c!17899 ((_ is MissingZero!261) lt!52912))))

(assert (=> d!27823 (= lt!52912 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun lt!52913 () Unit!3141)

(declare-fun choose!651 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3141)

(assert (=> d!27823 (= lt!52913 (choose!651 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27823 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27823 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) lt!52913)))

(declare-fun b!103773 () Bool)

(assert (=> b!103773 (and (bvsge (index!3191 lt!52912) #b00000000000000000000000000000000) (bvslt (index!3191 lt!52912) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun res!51775 () Bool)

(assert (=> b!103773 (= res!51775 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!52912)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67583 () Bool)

(assert (=> b!103773 (=> (not res!51775) (not e!67583))))

(declare-fun b!103774 () Bool)

(declare-fun res!51776 () Bool)

(declare-fun e!67586 () Bool)

(assert (=> b!103774 (=> (not res!51776) (not e!67586))))

(assert (=> b!103774 (= res!51776 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!52912)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103774 (and (bvsge (index!3194 lt!52912) #b00000000000000000000000000000000) (bvslt (index!3194 lt!52912) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103775 () Bool)

(assert (=> b!103775 (= e!67584 e!67583)))

(declare-fun res!51777 () Bool)

(declare-fun call!10903 () Bool)

(assert (=> b!103775 (= res!51777 call!10903)))

(assert (=> b!103775 (=> (not res!51777) (not e!67583))))

(declare-fun b!103776 () Bool)

(declare-fun call!10904 () Bool)

(assert (=> b!103776 (= e!67586 (not call!10904))))

(declare-fun bm!10900 () Bool)

(assert (=> bm!10900 (= call!10903 (inRange!0 (ite c!17899 (index!3191 lt!52912) (index!3194 lt!52912)) (mask!6695 newMap!16)))))

(declare-fun b!103777 () Bool)

(declare-fun res!51778 () Bool)

(assert (=> b!103777 (=> (not res!51778) (not e!67586))))

(assert (=> b!103777 (= res!51778 call!10903)))

(assert (=> b!103777 (= e!67585 e!67586)))

(declare-fun b!103778 () Bool)

(assert (=> b!103778 (= e!67583 (not call!10904))))

(declare-fun bm!10901 () Bool)

(assert (=> bm!10901 (= call!10904 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103779 () Bool)

(assert (=> b!103779 (= e!67585 ((_ is Undefined!261) lt!52912))))

(assert (= (and d!27823 c!17899) b!103775))

(assert (= (and d!27823 (not c!17899)) b!103772))

(assert (= (and b!103775 res!51777) b!103773))

(assert (= (and b!103773 res!51775) b!103778))

(assert (= (and b!103772 c!17900) b!103777))

(assert (= (and b!103772 (not c!17900)) b!103779))

(assert (= (and b!103777 res!51778) b!103774))

(assert (= (and b!103774 res!51776) b!103776))

(assert (= (or b!103775 b!103777) bm!10900))

(assert (= (or b!103778 b!103776) bm!10901))

(declare-fun m!114529 () Bool)

(assert (=> bm!10900 m!114529))

(declare-fun m!114531 () Bool)

(assert (=> b!103773 m!114531))

(declare-fun m!114533 () Bool)

(assert (=> b!103774 m!114533))

(assert (=> d!27823 m!113535))

(assert (=> d!27823 m!113823))

(assert (=> d!27823 m!113535))

(declare-fun m!114535 () Bool)

(assert (=> d!27823 m!114535))

(assert (=> d!27823 m!113985))

(assert (=> bm!10901 m!113535))

(assert (=> bm!10901 m!113841))

(assert (=> bm!10796 d!27823))

(declare-fun d!27825 () Bool)

(declare-fun lt!52914 () Bool)

(assert (=> d!27825 (= lt!52914 (select (content!108 (toList!785 lt!52457)) lt!52331))))

(declare-fun e!67587 () Bool)

(assert (=> d!27825 (= lt!52914 e!67587)))

(declare-fun res!51779 () Bool)

(assert (=> d!27825 (=> (not res!51779) (not e!67587))))

(assert (=> d!27825 (= res!51779 ((_ is Cons!1608) (toList!785 lt!52457)))))

(assert (=> d!27825 (= (contains!819 (toList!785 lt!52457) lt!52331) lt!52914)))

(declare-fun b!103780 () Bool)

(declare-fun e!67588 () Bool)

(assert (=> b!103780 (= e!67587 e!67588)))

(declare-fun res!51780 () Bool)

(assert (=> b!103780 (=> res!51780 e!67588)))

(assert (=> b!103780 (= res!51780 (= (h!2204 (toList!785 lt!52457)) lt!52331))))

(declare-fun b!103781 () Bool)

(assert (=> b!103781 (= e!67588 (contains!819 (t!5665 (toList!785 lt!52457)) lt!52331))))

(assert (= (and d!27825 res!51779) b!103780))

(assert (= (and b!103780 (not res!51780)) b!103781))

(declare-fun m!114537 () Bool)

(assert (=> d!27825 m!114537))

(declare-fun m!114539 () Bool)

(assert (=> d!27825 m!114539))

(declare-fun m!114541 () Bool)

(assert (=> b!103781 m!114541))

(assert (=> b!103150 d!27825))

(declare-fun d!27827 () Bool)

(declare-fun lt!52915 () Bool)

(assert (=> d!27827 (= lt!52915 (select (content!108 (toList!785 lt!52453)) lt!52325))))

(declare-fun e!67589 () Bool)

(assert (=> d!27827 (= lt!52915 e!67589)))

(declare-fun res!51781 () Bool)

(assert (=> d!27827 (=> (not res!51781) (not e!67589))))

(assert (=> d!27827 (= res!51781 ((_ is Cons!1608) (toList!785 lt!52453)))))

(assert (=> d!27827 (= (contains!819 (toList!785 lt!52453) lt!52325) lt!52915)))

(declare-fun b!103782 () Bool)

(declare-fun e!67590 () Bool)

(assert (=> b!103782 (= e!67589 e!67590)))

(declare-fun res!51782 () Bool)

(assert (=> b!103782 (=> res!51782 e!67590)))

(assert (=> b!103782 (= res!51782 (= (h!2204 (toList!785 lt!52453)) lt!52325))))

(declare-fun b!103783 () Bool)

(assert (=> b!103783 (= e!67590 (contains!819 (t!5665 (toList!785 lt!52453)) lt!52325))))

(assert (= (and d!27827 res!51781) b!103782))

(assert (= (and b!103782 (not res!51782)) b!103783))

(declare-fun m!114543 () Bool)

(assert (=> d!27827 m!114543))

(declare-fun m!114545 () Bool)

(assert (=> d!27827 m!114545))

(declare-fun m!114547 () Bool)

(assert (=> b!103783 m!114547))

(assert (=> b!103148 d!27827))

(declare-fun d!27829 () Bool)

(declare-fun e!67591 () Bool)

(assert (=> d!27829 e!67591))

(declare-fun res!51784 () Bool)

(assert (=> d!27829 (=> (not res!51784) (not e!67591))))

(declare-fun lt!52919 () ListLongMap!1539)

(assert (=> d!27829 (= res!51784 (contains!816 lt!52919 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52917 () List!1612)

(assert (=> d!27829 (= lt!52919 (ListLongMap!1540 lt!52917))))

(declare-fun lt!52916 () Unit!3141)

(declare-fun lt!52918 () Unit!3141)

(assert (=> d!27829 (= lt!52916 lt!52918)))

(assert (=> d!27829 (= (getValueByKey!153 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27829 (= lt!52918 (lemmaContainsTupThenGetReturnValue!72 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27829 (= lt!52917 (insertStrictlySorted!75 (toList!785 call!10842) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27829 (= (+!134 call!10842 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52919)))

(declare-fun b!103784 () Bool)

(declare-fun res!51783 () Bool)

(assert (=> b!103784 (=> (not res!51783) (not e!67591))))

(assert (=> b!103784 (= res!51783 (= (getValueByKey!153 (toList!785 lt!52919) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103785 () Bool)

(assert (=> b!103785 (= e!67591 (contains!819 (toList!785 lt!52919) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27829 res!51784) b!103784))

(assert (= (and b!103784 res!51783) b!103785))

(declare-fun m!114549 () Bool)

(assert (=> d!27829 m!114549))

(declare-fun m!114551 () Bool)

(assert (=> d!27829 m!114551))

(declare-fun m!114553 () Bool)

(assert (=> d!27829 m!114553))

(declare-fun m!114555 () Bool)

(assert (=> d!27829 m!114555))

(declare-fun m!114557 () Bool)

(assert (=> b!103784 m!114557))

(declare-fun m!114559 () Bool)

(assert (=> b!103785 m!114559))

(assert (=> b!103350 d!27829))

(declare-fun d!27831 () Bool)

(declare-fun lt!52920 () Bool)

(assert (=> d!27831 (= lt!52920 (select (content!108 (toList!785 lt!52449)) lt!52325))))

(declare-fun e!67592 () Bool)

(assert (=> d!27831 (= lt!52920 e!67592)))

(declare-fun res!51785 () Bool)

(assert (=> d!27831 (=> (not res!51785) (not e!67592))))

(assert (=> d!27831 (= res!51785 ((_ is Cons!1608) (toList!785 lt!52449)))))

(assert (=> d!27831 (= (contains!819 (toList!785 lt!52449) lt!52325) lt!52920)))

(declare-fun b!103786 () Bool)

(declare-fun e!67593 () Bool)

(assert (=> b!103786 (= e!67592 e!67593)))

(declare-fun res!51786 () Bool)

(assert (=> b!103786 (=> res!51786 e!67593)))

(assert (=> b!103786 (= res!51786 (= (h!2204 (toList!785 lt!52449)) lt!52325))))

(declare-fun b!103787 () Bool)

(assert (=> b!103787 (= e!67593 (contains!819 (t!5665 (toList!785 lt!52449)) lt!52325))))

(assert (= (and d!27831 res!51785) b!103786))

(assert (= (and b!103786 (not res!51786)) b!103787))

(declare-fun m!114561 () Bool)

(assert (=> d!27831 m!114561))

(declare-fun m!114563 () Bool)

(assert (=> d!27831 m!114563))

(declare-fun m!114565 () Bool)

(assert (=> b!103787 m!114565))

(assert (=> b!103146 d!27831))

(assert (=> d!27677 d!27693))

(declare-fun d!27833 () Bool)

(assert (=> d!27833 (= (inRange!0 (ite c!17753 (ite c!17762 (index!3192 lt!52539) (ite c!17756 (index!3191 lt!52545) (index!3194 lt!52545))) (ite c!17755 (index!3192 lt!52543) (ite c!17760 (index!3191 lt!52548) (index!3194 lt!52548)))) (mask!6695 newMap!16)) (and (bvsge (ite c!17753 (ite c!17762 (index!3192 lt!52539) (ite c!17756 (index!3191 lt!52545) (index!3194 lt!52545))) (ite c!17755 (index!3192 lt!52543) (ite c!17760 (index!3191 lt!52548) (index!3194 lt!52548)))) #b00000000000000000000000000000000) (bvslt (ite c!17753 (ite c!17762 (index!3192 lt!52539) (ite c!17756 (index!3191 lt!52545) (index!3194 lt!52545))) (ite c!17755 (index!3192 lt!52543) (ite c!17760 (index!3191 lt!52548) (index!3194 lt!52548)))) (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10815 d!27833))

(declare-fun d!27835 () Bool)

(assert (=> d!27835 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52923 () Unit!3141)

(declare-fun choose!652 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3141)

(assert (=> d!27835 (= lt!52923 (choose!652 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52534 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52329 (defaultEntry!2560 newMap!16)))))

(assert (=> d!27835 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27835 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52534 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52329 (defaultEntry!2560 newMap!16)) lt!52923)))

(declare-fun bs!4235 () Bool)

(assert (= bs!4235 d!27835))

(assert (=> bs!4235 m!113847))

(declare-fun m!114567 () Bool)

(assert (=> bs!4235 m!114567))

(declare-fun m!114569 () Bool)

(assert (=> bs!4235 m!114569))

(declare-fun m!114571 () Bool)

(assert (=> bs!4235 m!114571))

(assert (=> bs!4235 m!113985))

(assert (=> bs!4235 m!113847))

(assert (=> b!103277 d!27835))

(declare-fun d!27837 () Bool)

(declare-fun e!67594 () Bool)

(assert (=> d!27837 e!67594))

(declare-fun res!51788 () Bool)

(assert (=> d!27837 (=> (not res!51788) (not e!67594))))

(declare-fun lt!52927 () ListLongMap!1539)

(assert (=> d!27837 (= res!51788 (contains!816 lt!52927 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun lt!52925 () List!1612)

(assert (=> d!27837 (= lt!52927 (ListLongMap!1540 lt!52925))))

(declare-fun lt!52924 () Unit!3141)

(declare-fun lt!52926 () Unit!3141)

(assert (=> d!27837 (= lt!52924 lt!52926)))

(assert (=> d!27837 (= (getValueByKey!153 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (Some!158 (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!27837 (= lt!52926 (lemmaContainsTupThenGetReturnValue!72 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!27837 (= lt!52925 (insertStrictlySorted!75 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!27837 (= (+!134 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52927)))

(declare-fun b!103788 () Bool)

(declare-fun res!51787 () Bool)

(assert (=> b!103788 (=> (not res!51787) (not e!67594))))

(assert (=> b!103788 (= res!51787 (= (getValueByKey!153 (toList!785 lt!52927) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (Some!158 (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!103789 () Bool)

(assert (=> b!103789 (= e!67594 (contains!819 (toList!785 lt!52927) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (= (and d!27837 res!51788) b!103788))

(assert (= (and b!103788 res!51787) b!103789))

(declare-fun m!114573 () Bool)

(assert (=> d!27837 m!114573))

(declare-fun m!114575 () Bool)

(assert (=> d!27837 m!114575))

(declare-fun m!114577 () Bool)

(assert (=> d!27837 m!114577))

(declare-fun m!114579 () Bool)

(assert (=> d!27837 m!114579))

(declare-fun m!114581 () Bool)

(assert (=> b!103788 m!114581))

(declare-fun m!114583 () Bool)

(assert (=> b!103789 m!114583))

(assert (=> bm!10834 d!27837))

(declare-fun d!27839 () Bool)

(assert (=> d!27839 (= (get!1326 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2866 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!103364 d!27839))

(assert (=> b!103276 d!27693))

(declare-fun d!27841 () Bool)

(assert (=> d!27841 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52930 () Unit!3141)

(declare-fun choose!653 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3141)

(assert (=> d!27841 (= lt!52930 (choose!653 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52552 (zeroValue!2437 newMap!16) lt!52329 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27841 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27841 (= (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52552 (zeroValue!2437 newMap!16) lt!52329 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)) lt!52930)))

(declare-fun bs!4236 () Bool)

(assert (= bs!4236 d!27841))

(declare-fun m!114585 () Bool)

(assert (=> bs!4236 m!114585))

(declare-fun m!114587 () Bool)

(assert (=> bs!4236 m!114587))

(assert (=> bs!4236 m!113847))

(declare-fun m!114589 () Bool)

(assert (=> bs!4236 m!114589))

(assert (=> bs!4236 m!113847))

(assert (=> bs!4236 m!113985))

(assert (=> b!103262 d!27841))

(assert (=> b!103346 d!27715))

(declare-fun d!27843 () Bool)

(declare-fun e!67596 () Bool)

(assert (=> d!27843 e!67596))

(declare-fun res!51789 () Bool)

(assert (=> d!27843 (=> res!51789 e!67596)))

(declare-fun lt!52933 () Bool)

(assert (=> d!27843 (= res!51789 (not lt!52933))))

(declare-fun lt!52932 () Bool)

(assert (=> d!27843 (= lt!52933 lt!52932)))

(declare-fun lt!52934 () Unit!3141)

(declare-fun e!67595 () Unit!3141)

(assert (=> d!27843 (= lt!52934 e!67595)))

(declare-fun c!17901 () Bool)

(assert (=> d!27843 (= c!17901 lt!52932)))

(assert (=> d!27843 (= lt!52932 (containsKey!157 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27843 (= (contains!816 lt!52435 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52933)))

(declare-fun b!103790 () Bool)

(declare-fun lt!52931 () Unit!3141)

(assert (=> b!103790 (= e!67595 lt!52931)))

(assert (=> b!103790 (= lt!52931 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103790 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103791 () Bool)

(declare-fun Unit!3167 () Unit!3141)

(assert (=> b!103791 (= e!67595 Unit!3167)))

(declare-fun b!103792 () Bool)

(assert (=> b!103792 (= e!67596 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27843 c!17901) b!103790))

(assert (= (and d!27843 (not c!17901)) b!103791))

(assert (= (and d!27843 (not res!51789)) b!103792))

(declare-fun m!114591 () Bool)

(assert (=> d!27843 m!114591))

(declare-fun m!114593 () Bool)

(assert (=> b!103790 m!114593))

(declare-fun m!114595 () Bool)

(assert (=> b!103790 m!114595))

(assert (=> b!103790 m!114595))

(declare-fun m!114597 () Bool)

(assert (=> b!103790 m!114597))

(assert (=> b!103792 m!114595))

(assert (=> b!103792 m!114595))

(assert (=> b!103792 m!114597))

(assert (=> b!103140 d!27843))

(declare-fun d!27845 () Bool)

(assert (=> d!27845 (contains!816 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52621)))

(declare-fun lt!52937 () Unit!3141)

(declare-fun choose!654 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3141)

(assert (=> d!27845 (= lt!52937 (choose!654 lt!52603 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52621))))

(assert (=> d!27845 (contains!816 lt!52603 lt!52621)))

(assert (=> d!27845 (= (addStillContains!73 lt!52603 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52621) lt!52937)))

(declare-fun bs!4237 () Bool)

(assert (= bs!4237 d!27845))

(assert (=> bs!4237 m!113885))

(assert (=> bs!4237 m!113885))

(assert (=> bs!4237 m!113899))

(declare-fun m!114599 () Bool)

(assert (=> bs!4237 m!114599))

(declare-fun m!114601 () Bool)

(assert (=> bs!4237 m!114601))

(assert (=> b!103344 d!27845))

(declare-fun d!27847 () Bool)

(declare-fun e!67598 () Bool)

(assert (=> d!27847 e!67598))

(declare-fun res!51790 () Bool)

(assert (=> d!27847 (=> res!51790 e!67598)))

(declare-fun lt!52940 () Bool)

(assert (=> d!27847 (= res!51790 (not lt!52940))))

(declare-fun lt!52939 () Bool)

(assert (=> d!27847 (= lt!52940 lt!52939)))

(declare-fun lt!52941 () Unit!3141)

(declare-fun e!67597 () Unit!3141)

(assert (=> d!27847 (= lt!52941 e!67597)))

(declare-fun c!17902 () Bool)

(assert (=> d!27847 (= c!17902 lt!52939)))

(assert (=> d!27847 (= lt!52939 (containsKey!157 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))

(assert (=> d!27847 (= (contains!816 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52621) lt!52940)))

(declare-fun b!103794 () Bool)

(declare-fun lt!52938 () Unit!3141)

(assert (=> b!103794 (= e!67597 lt!52938)))

(assert (=> b!103794 (= lt!52938 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))

(assert (=> b!103794 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))

(declare-fun b!103795 () Bool)

(declare-fun Unit!3168 () Unit!3141)

(assert (=> b!103795 (= e!67597 Unit!3168)))

(declare-fun b!103796 () Bool)

(assert (=> b!103796 (= e!67598 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621)))))

(assert (= (and d!27847 c!17902) b!103794))

(assert (= (and d!27847 (not c!17902)) b!103795))

(assert (= (and d!27847 (not res!51790)) b!103796))

(declare-fun m!114603 () Bool)

(assert (=> d!27847 m!114603))

(declare-fun m!114605 () Bool)

(assert (=> b!103794 m!114605))

(declare-fun m!114607 () Bool)

(assert (=> b!103794 m!114607))

(assert (=> b!103794 m!114607))

(declare-fun m!114609 () Bool)

(assert (=> b!103794 m!114609))

(assert (=> b!103796 m!114607))

(assert (=> b!103796 m!114607))

(assert (=> b!103796 m!114609))

(assert (=> b!103344 d!27847))

(declare-fun d!27849 () Bool)

(assert (=> d!27849 (= (apply!97 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52604) (apply!97 lt!52614 lt!52604))))

(declare-fun lt!52944 () Unit!3141)

(declare-fun choose!655 (ListLongMap!1539 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3141)

(assert (=> d!27849 (= lt!52944 (choose!655 lt!52614 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52604))))

(declare-fun e!67601 () Bool)

(assert (=> d!27849 e!67601))

(declare-fun res!51793 () Bool)

(assert (=> d!27849 (=> (not res!51793) (not e!67601))))

(assert (=> d!27849 (= res!51793 (contains!816 lt!52614 lt!52604))))

(assert (=> d!27849 (= (addApplyDifferent!73 lt!52614 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52604) lt!52944)))

(declare-fun b!103800 () Bool)

(assert (=> b!103800 (= e!67601 (not (= lt!52604 lt!52622)))))

(assert (= (and d!27849 res!51793) b!103800))

(assert (=> d!27849 m!113887))

(declare-fun m!114611 () Bool)

(assert (=> d!27849 m!114611))

(assert (=> d!27849 m!113887))

(assert (=> d!27849 m!113895))

(assert (=> d!27849 m!113901))

(declare-fun m!114613 () Bool)

(assert (=> d!27849 m!114613))

(assert (=> b!103344 d!27849))

(declare-fun d!27851 () Bool)

(assert (=> d!27851 (= (apply!97 lt!52613 lt!52608) (get!1328 (getValueByKey!153 (toList!785 lt!52613) lt!52608)))))

(declare-fun bs!4238 () Bool)

(assert (= bs!4238 d!27851))

(declare-fun m!114615 () Bool)

(assert (=> bs!4238 m!114615))

(assert (=> bs!4238 m!114615))

(declare-fun m!114617 () Bool)

(assert (=> bs!4238 m!114617))

(assert (=> b!103344 d!27851))

(declare-fun d!27853 () Bool)

(assert (=> d!27853 (= (apply!97 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52617) (apply!97 lt!52620 lt!52617))))

(declare-fun lt!52945 () Unit!3141)

(assert (=> d!27853 (= lt!52945 (choose!655 lt!52620 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52617))))

(declare-fun e!67602 () Bool)

(assert (=> d!27853 e!67602))

(declare-fun res!51794 () Bool)

(assert (=> d!27853 (=> (not res!51794) (not e!67602))))

(assert (=> d!27853 (= res!51794 (contains!816 lt!52620 lt!52617))))

(assert (=> d!27853 (= (addApplyDifferent!73 lt!52620 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52617) lt!52945)))

(declare-fun b!103801 () Bool)

(assert (=> b!103801 (= e!67602 (not (= lt!52617 lt!52615)))))

(assert (= (and d!27853 res!51794) b!103801))

(assert (=> d!27853 m!113881))

(declare-fun m!114619 () Bool)

(assert (=> d!27853 m!114619))

(assert (=> d!27853 m!113881))

(assert (=> d!27853 m!113883))

(assert (=> d!27853 m!113905))

(declare-fun m!114621 () Bool)

(assert (=> d!27853 m!114621))

(assert (=> b!103344 d!27853))

(declare-fun d!27855 () Bool)

(assert (=> d!27855 (= (apply!97 lt!52614 lt!52604) (get!1328 (getValueByKey!153 (toList!785 lt!52614) lt!52604)))))

(declare-fun bs!4239 () Bool)

(assert (= bs!4239 d!27855))

(declare-fun m!114623 () Bool)

(assert (=> bs!4239 m!114623))

(assert (=> bs!4239 m!114623))

(declare-fun m!114625 () Bool)

(assert (=> bs!4239 m!114625))

(assert (=> b!103344 d!27855))

(declare-fun d!27857 () Bool)

(declare-fun e!67603 () Bool)

(assert (=> d!27857 e!67603))

(declare-fun res!51796 () Bool)

(assert (=> d!27857 (=> (not res!51796) (not e!67603))))

(declare-fun lt!52949 () ListLongMap!1539)

(assert (=> d!27857 (= res!51796 (contains!816 lt!52949 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52947 () List!1612)

(assert (=> d!27857 (= lt!52949 (ListLongMap!1540 lt!52947))))

(declare-fun lt!52946 () Unit!3141)

(declare-fun lt!52948 () Unit!3141)

(assert (=> d!27857 (= lt!52946 lt!52948)))

(assert (=> d!27857 (= (getValueByKey!153 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27857 (= lt!52948 (lemmaContainsTupThenGetReturnValue!72 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27857 (= lt!52947 (insertStrictlySorted!75 (toList!785 lt!52614) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27857 (= (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52949)))

(declare-fun b!103802 () Bool)

(declare-fun res!51795 () Bool)

(assert (=> b!103802 (=> (not res!51795) (not e!67603))))

(assert (=> b!103802 (= res!51795 (= (getValueByKey!153 (toList!785 lt!52949) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103803 () Bool)

(assert (=> b!103803 (= e!67603 (contains!819 (toList!785 lt!52949) (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27857 res!51796) b!103802))

(assert (= (and b!103802 res!51795) b!103803))

(declare-fun m!114627 () Bool)

(assert (=> d!27857 m!114627))

(declare-fun m!114629 () Bool)

(assert (=> d!27857 m!114629))

(declare-fun m!114631 () Bool)

(assert (=> d!27857 m!114631))

(declare-fun m!114633 () Bool)

(assert (=> d!27857 m!114633))

(declare-fun m!114635 () Bool)

(assert (=> b!103802 m!114635))

(declare-fun m!114637 () Bool)

(assert (=> b!103803 m!114637))

(assert (=> b!103344 d!27857))

(declare-fun d!27859 () Bool)

(assert (=> d!27859 (= (apply!97 lt!52620 lt!52617) (get!1328 (getValueByKey!153 (toList!785 lt!52620) lt!52617)))))

(declare-fun bs!4240 () Bool)

(assert (= bs!4240 d!27859))

(declare-fun m!114639 () Bool)

(assert (=> bs!4240 m!114639))

(assert (=> bs!4240 m!114639))

(declare-fun m!114641 () Bool)

(assert (=> bs!4240 m!114641))

(assert (=> b!103344 d!27859))

(declare-fun d!27861 () Bool)

(declare-fun e!67604 () Bool)

(assert (=> d!27861 e!67604))

(declare-fun res!51798 () Bool)

(assert (=> d!27861 (=> (not res!51798) (not e!67604))))

(declare-fun lt!52953 () ListLongMap!1539)

(assert (=> d!27861 (= res!51798 (contains!816 lt!52953 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52951 () List!1612)

(assert (=> d!27861 (= lt!52953 (ListLongMap!1540 lt!52951))))

(declare-fun lt!52950 () Unit!3141)

(declare-fun lt!52952 () Unit!3141)

(assert (=> d!27861 (= lt!52950 lt!52952)))

(assert (=> d!27861 (= (getValueByKey!153 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27861 (= lt!52952 (lemmaContainsTupThenGetReturnValue!72 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27861 (= lt!52951 (insertStrictlySorted!75 (toList!785 lt!52603) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27861 (= (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52953)))

(declare-fun b!103804 () Bool)

(declare-fun res!51797 () Bool)

(assert (=> b!103804 (=> (not res!51797) (not e!67604))))

(assert (=> b!103804 (= res!51797 (= (getValueByKey!153 (toList!785 lt!52953) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103805 () Bool)

(assert (=> b!103805 (= e!67604 (contains!819 (toList!785 lt!52953) (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27861 res!51798) b!103804))

(assert (= (and b!103804 res!51797) b!103805))

(declare-fun m!114643 () Bool)

(assert (=> d!27861 m!114643))

(declare-fun m!114645 () Bool)

(assert (=> d!27861 m!114645))

(declare-fun m!114647 () Bool)

(assert (=> d!27861 m!114647))

(declare-fun m!114649 () Bool)

(assert (=> d!27861 m!114649))

(declare-fun m!114651 () Bool)

(assert (=> b!103804 m!114651))

(declare-fun m!114653 () Bool)

(assert (=> b!103805 m!114653))

(assert (=> b!103344 d!27861))

(assert (=> b!103344 d!27653))

(declare-fun d!27863 () Bool)

(assert (=> d!27863 (= (apply!97 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52608) (apply!97 lt!52613 lt!52608))))

(declare-fun lt!52954 () Unit!3141)

(assert (=> d!27863 (= lt!52954 (choose!655 lt!52613 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52608))))

(declare-fun e!67605 () Bool)

(assert (=> d!27863 e!67605))

(declare-fun res!51799 () Bool)

(assert (=> d!27863 (=> (not res!51799) (not e!67605))))

(assert (=> d!27863 (= res!51799 (contains!816 lt!52613 lt!52608))))

(assert (=> d!27863 (= (addApplyDifferent!73 lt!52613 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52608) lt!52954)))

(declare-fun b!103806 () Bool)

(assert (=> b!103806 (= e!67605 (not (= lt!52608 lt!52618)))))

(assert (= (and d!27863 res!51799) b!103806))

(assert (=> d!27863 m!113877))

(declare-fun m!114655 () Bool)

(assert (=> d!27863 m!114655))

(assert (=> d!27863 m!113877))

(assert (=> d!27863 m!113879))

(assert (=> d!27863 m!113891))

(declare-fun m!114657 () Bool)

(assert (=> d!27863 m!114657))

(assert (=> b!103344 d!27863))

(declare-fun d!27865 () Bool)

(assert (=> d!27865 (= (apply!97 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52604) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52604)))))

(declare-fun bs!4241 () Bool)

(assert (= bs!4241 d!27865))

(declare-fun m!114659 () Bool)

(assert (=> bs!4241 m!114659))

(assert (=> bs!4241 m!114659))

(declare-fun m!114661 () Bool)

(assert (=> bs!4241 m!114661))

(assert (=> b!103344 d!27865))

(declare-fun d!27867 () Bool)

(declare-fun e!67606 () Bool)

(assert (=> d!27867 e!67606))

(declare-fun res!51801 () Bool)

(assert (=> d!27867 (=> (not res!51801) (not e!67606))))

(declare-fun lt!52958 () ListLongMap!1539)

(assert (=> d!27867 (= res!51801 (contains!816 lt!52958 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52956 () List!1612)

(assert (=> d!27867 (= lt!52958 (ListLongMap!1540 lt!52956))))

(declare-fun lt!52955 () Unit!3141)

(declare-fun lt!52957 () Unit!3141)

(assert (=> d!27867 (= lt!52955 lt!52957)))

(assert (=> d!27867 (= (getValueByKey!153 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27867 (= lt!52957 (lemmaContainsTupThenGetReturnValue!72 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27867 (= lt!52956 (insertStrictlySorted!75 (toList!785 lt!52620) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27867 (= (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52958)))

(declare-fun b!103807 () Bool)

(declare-fun res!51800 () Bool)

(assert (=> b!103807 (=> (not res!51800) (not e!67606))))

(assert (=> b!103807 (= res!51800 (= (getValueByKey!153 (toList!785 lt!52958) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103808 () Bool)

(assert (=> b!103808 (= e!67606 (contains!819 (toList!785 lt!52958) (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27867 res!51801) b!103807))

(assert (= (and b!103807 res!51800) b!103808))

(declare-fun m!114663 () Bool)

(assert (=> d!27867 m!114663))

(declare-fun m!114665 () Bool)

(assert (=> d!27867 m!114665))

(declare-fun m!114667 () Bool)

(assert (=> d!27867 m!114667))

(declare-fun m!114669 () Bool)

(assert (=> d!27867 m!114669))

(declare-fun m!114671 () Bool)

(assert (=> b!103807 m!114671))

(declare-fun m!114673 () Bool)

(assert (=> b!103808 m!114673))

(assert (=> b!103344 d!27867))

(declare-fun d!27869 () Bool)

(assert (=> d!27869 (= (apply!97 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52608) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52608)))))

(declare-fun bs!4242 () Bool)

(assert (= bs!4242 d!27869))

(declare-fun m!114675 () Bool)

(assert (=> bs!4242 m!114675))

(assert (=> bs!4242 m!114675))

(declare-fun m!114677 () Bool)

(assert (=> bs!4242 m!114677))

(assert (=> b!103344 d!27869))

(declare-fun d!27871 () Bool)

(assert (=> d!27871 (= (apply!97 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52617) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52617)))))

(declare-fun bs!4243 () Bool)

(assert (= bs!4243 d!27871))

(declare-fun m!114679 () Bool)

(assert (=> bs!4243 m!114679))

(assert (=> bs!4243 m!114679))

(declare-fun m!114681 () Bool)

(assert (=> bs!4243 m!114681))

(assert (=> b!103344 d!27871))

(declare-fun d!27873 () Bool)

(declare-fun e!67607 () Bool)

(assert (=> d!27873 e!67607))

(declare-fun res!51803 () Bool)

(assert (=> d!27873 (=> (not res!51803) (not e!67607))))

(declare-fun lt!52962 () ListLongMap!1539)

(assert (=> d!27873 (= res!51803 (contains!816 lt!52962 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!52960 () List!1612)

(assert (=> d!27873 (= lt!52962 (ListLongMap!1540 lt!52960))))

(declare-fun lt!52959 () Unit!3141)

(declare-fun lt!52961 () Unit!3141)

(assert (=> d!27873 (= lt!52959 lt!52961)))

(assert (=> d!27873 (= (getValueByKey!153 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27873 (= lt!52961 (lemmaContainsTupThenGetReturnValue!72 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27873 (= lt!52960 (insertStrictlySorted!75 (toList!785 lt!52613) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27873 (= (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52962)))

(declare-fun b!103809 () Bool)

(declare-fun res!51802 () Bool)

(assert (=> b!103809 (=> (not res!51802) (not e!67607))))

(assert (=> b!103809 (= res!51802 (= (getValueByKey!153 (toList!785 lt!52962) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103810 () Bool)

(assert (=> b!103810 (= e!67607 (contains!819 (toList!785 lt!52962) (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27873 res!51803) b!103809))

(assert (= (and b!103809 res!51802) b!103810))

(declare-fun m!114683 () Bool)

(assert (=> d!27873 m!114683))

(declare-fun m!114685 () Bool)

(assert (=> d!27873 m!114685))

(declare-fun m!114687 () Bool)

(assert (=> d!27873 m!114687))

(declare-fun m!114689 () Bool)

(assert (=> d!27873 m!114689))

(declare-fun m!114691 () Bool)

(assert (=> b!103809 m!114691))

(declare-fun m!114693 () Bool)

(assert (=> b!103810 m!114693))

(assert (=> b!103344 d!27873))

(declare-fun d!27875 () Bool)

(declare-fun e!67609 () Bool)

(assert (=> d!27875 e!67609))

(declare-fun res!51804 () Bool)

(assert (=> d!27875 (=> res!51804 e!67609)))

(declare-fun lt!52965 () Bool)

(assert (=> d!27875 (= res!51804 (not lt!52965))))

(declare-fun lt!52964 () Bool)

(assert (=> d!27875 (= lt!52965 lt!52964)))

(declare-fun lt!52966 () Unit!3141)

(declare-fun e!67608 () Unit!3141)

(assert (=> d!27875 (= lt!52966 e!67608)))

(declare-fun c!17903 () Bool)

(assert (=> d!27875 (= c!17903 lt!52964)))

(assert (=> d!27875 (= lt!52964 (containsKey!157 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27875 (= (contains!816 lt!52612 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52965)))

(declare-fun b!103811 () Bool)

(declare-fun lt!52963 () Unit!3141)

(assert (=> b!103811 (= e!67608 lt!52963)))

(assert (=> b!103811 (= lt!52963 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103811 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103812 () Bool)

(declare-fun Unit!3169 () Unit!3141)

(assert (=> b!103812 (= e!67608 Unit!3169)))

(declare-fun b!103813 () Bool)

(assert (=> b!103813 (= e!67609 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27875 c!17903) b!103811))

(assert (= (and d!27875 (not c!17903)) b!103812))

(assert (= (and d!27875 (not res!51804)) b!103813))

(declare-fun m!114695 () Bool)

(assert (=> d!27875 m!114695))

(declare-fun m!114697 () Bool)

(assert (=> b!103811 m!114697))

(assert (=> b!103811 m!114303))

(assert (=> b!103811 m!114303))

(declare-fun m!114699 () Bool)

(assert (=> b!103811 m!114699))

(assert (=> b!103813 m!114303))

(assert (=> b!103813 m!114303))

(assert (=> b!103813 m!114699))

(assert (=> bm!10839 d!27875))

(declare-fun d!27877 () Bool)

(declare-fun e!67612 () Bool)

(assert (=> d!27877 e!67612))

(declare-fun res!51809 () Bool)

(assert (=> d!27877 (=> (not res!51809) (not e!67612))))

(declare-fun lt!52971 () SeekEntryResult!261)

(assert (=> d!27877 (= res!51809 ((_ is Found!261) lt!52971))))

(assert (=> d!27877 (= lt!52971 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun lt!52972 () Unit!3141)

(declare-fun choose!656 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3141)

(assert (=> d!27877 (= lt!52972 (choose!656 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27877 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27877 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) lt!52972)))

(declare-fun b!103818 () Bool)

(declare-fun res!51810 () Bool)

(assert (=> b!103818 (=> (not res!51810) (not e!67612))))

(assert (=> b!103818 (= res!51810 (inRange!0 (index!3192 lt!52971) (mask!6695 newMap!16)))))

(declare-fun b!103819 () Bool)

(assert (=> b!103819 (= e!67612 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52971)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!103819 (and (bvsge (index!3192 lt!52971) #b00000000000000000000000000000000) (bvslt (index!3192 lt!52971) (size!2299 (_keys!4261 newMap!16))))))

(assert (= (and d!27877 res!51809) b!103818))

(assert (= (and b!103818 res!51810) b!103819))

(assert (=> d!27877 m!113535))

(assert (=> d!27877 m!113823))

(assert (=> d!27877 m!113535))

(declare-fun m!114701 () Bool)

(assert (=> d!27877 m!114701))

(assert (=> d!27877 m!113985))

(declare-fun m!114703 () Bool)

(assert (=> b!103818 m!114703))

(declare-fun m!114705 () Bool)

(assert (=> b!103819 m!114705))

(assert (=> bm!10798 d!27877))

(assert (=> b!103138 d!27803))

(declare-fun d!27879 () Bool)

(declare-fun e!67614 () Bool)

(assert (=> d!27879 e!67614))

(declare-fun res!51811 () Bool)

(assert (=> d!27879 (=> res!51811 e!67614)))

(declare-fun lt!52975 () Bool)

(assert (=> d!27879 (= res!51811 (not lt!52975))))

(declare-fun lt!52974 () Bool)

(assert (=> d!27879 (= lt!52975 lt!52974)))

(declare-fun lt!52976 () Unit!3141)

(declare-fun e!67613 () Unit!3141)

(assert (=> d!27879 (= lt!52976 e!67613)))

(declare-fun c!17904 () Bool)

(assert (=> d!27879 (= c!17904 lt!52974)))

(assert (=> d!27879 (= lt!52974 (containsKey!157 (toList!785 lt!52449) (_1!1197 lt!52325)))))

(assert (=> d!27879 (= (contains!816 lt!52449 (_1!1197 lt!52325)) lt!52975)))

(declare-fun b!103820 () Bool)

(declare-fun lt!52973 () Unit!3141)

(assert (=> b!103820 (= e!67613 lt!52973)))

(assert (=> b!103820 (= lt!52973 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52449) (_1!1197 lt!52325)))))

(assert (=> b!103820 (isDefined!107 (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325)))))

(declare-fun b!103821 () Bool)

(declare-fun Unit!3170 () Unit!3141)

(assert (=> b!103821 (= e!67613 Unit!3170)))

(declare-fun b!103822 () Bool)

(assert (=> b!103822 (= e!67614 (isDefined!107 (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325))))))

(assert (= (and d!27879 c!17904) b!103820))

(assert (= (and d!27879 (not c!17904)) b!103821))

(assert (= (and d!27879 (not res!51811)) b!103822))

(declare-fun m!114707 () Bool)

(assert (=> d!27879 m!114707))

(declare-fun m!114709 () Bool)

(assert (=> b!103820 m!114709))

(assert (=> b!103820 m!113753))

(assert (=> b!103820 m!113753))

(declare-fun m!114711 () Bool)

(assert (=> b!103820 m!114711))

(assert (=> b!103822 m!113753))

(assert (=> b!103822 m!113753))

(assert (=> b!103822 m!114711))

(assert (=> d!27655 d!27879))

(declare-fun b!103825 () Bool)

(declare-fun e!67616 () Option!159)

(assert (=> b!103825 (= e!67616 (getValueByKey!153 (t!5665 lt!52447) (_1!1197 lt!52325)))))

(declare-fun b!103823 () Bool)

(declare-fun e!67615 () Option!159)

(assert (=> b!103823 (= e!67615 (Some!158 (_2!1197 (h!2204 lt!52447))))))

(declare-fun d!27881 () Bool)

(declare-fun c!17905 () Bool)

(assert (=> d!27881 (= c!17905 (and ((_ is Cons!1608) lt!52447) (= (_1!1197 (h!2204 lt!52447)) (_1!1197 lt!52325))))))

(assert (=> d!27881 (= (getValueByKey!153 lt!52447 (_1!1197 lt!52325)) e!67615)))

(declare-fun b!103824 () Bool)

(assert (=> b!103824 (= e!67615 e!67616)))

(declare-fun c!17906 () Bool)

(assert (=> b!103824 (= c!17906 (and ((_ is Cons!1608) lt!52447) (not (= (_1!1197 (h!2204 lt!52447)) (_1!1197 lt!52325)))))))

(declare-fun b!103826 () Bool)

(assert (=> b!103826 (= e!67616 None!157)))

(assert (= (and d!27881 c!17905) b!103823))

(assert (= (and d!27881 (not c!17905)) b!103824))

(assert (= (and b!103824 c!17906) b!103825))

(assert (= (and b!103824 (not c!17906)) b!103826))

(declare-fun m!114713 () Bool)

(assert (=> b!103825 m!114713))

(assert (=> d!27655 d!27881))

(declare-fun d!27883 () Bool)

(assert (=> d!27883 (= (getValueByKey!153 lt!52447 (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325)))))

(declare-fun lt!52977 () Unit!3141)

(assert (=> d!27883 (= lt!52977 (choose!649 lt!52447 (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun e!67617 () Bool)

(assert (=> d!27883 e!67617))

(declare-fun res!51812 () Bool)

(assert (=> d!27883 (=> (not res!51812) (not e!67617))))

(assert (=> d!27883 (= res!51812 (isStrictlySorted!303 lt!52447))))

(assert (=> d!27883 (= (lemmaContainsTupThenGetReturnValue!72 lt!52447 (_1!1197 lt!52325) (_2!1197 lt!52325)) lt!52977)))

(declare-fun b!103827 () Bool)

(declare-fun res!51813 () Bool)

(assert (=> b!103827 (=> (not res!51813) (not e!67617))))

(assert (=> b!103827 (= res!51813 (containsKey!157 lt!52447 (_1!1197 lt!52325)))))

(declare-fun b!103828 () Bool)

(assert (=> b!103828 (= e!67617 (contains!819 lt!52447 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(assert (= (and d!27883 res!51812) b!103827))

(assert (= (and b!103827 res!51813) b!103828))

(assert (=> d!27883 m!113747))

(declare-fun m!114715 () Bool)

(assert (=> d!27883 m!114715))

(declare-fun m!114717 () Bool)

(assert (=> d!27883 m!114717))

(declare-fun m!114719 () Bool)

(assert (=> b!103827 m!114719))

(declare-fun m!114721 () Bool)

(assert (=> b!103828 m!114721))

(assert (=> d!27655 d!27883))

(declare-fun b!103829 () Bool)

(declare-fun e!67619 () List!1612)

(declare-fun call!10907 () List!1612)

(assert (=> b!103829 (= e!67619 call!10907)))

(declare-fun b!103830 () Bool)

(declare-fun e!67620 () List!1612)

(assert (=> b!103830 (= e!67620 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52333)) (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun b!103831 () Bool)

(declare-fun res!51814 () Bool)

(declare-fun e!67622 () Bool)

(assert (=> b!103831 (=> (not res!51814) (not e!67622))))

(declare-fun lt!52978 () List!1612)

(assert (=> b!103831 (= res!51814 (containsKey!157 lt!52978 (_1!1197 lt!52325)))))

(declare-fun bm!10902 () Bool)

(declare-fun call!10905 () List!1612)

(assert (=> bm!10902 (= call!10905 call!10907)))

(declare-fun b!103832 () Bool)

(declare-fun e!67618 () List!1612)

(assert (=> b!103832 (= e!67618 call!10905)))

(declare-fun c!17909 () Bool)

(declare-fun b!103833 () Bool)

(declare-fun c!17907 () Bool)

(assert (=> b!103833 (= e!67620 (ite c!17909 (t!5665 (toList!785 lt!52333)) (ite c!17907 (Cons!1608 (h!2204 (toList!785 lt!52333)) (t!5665 (toList!785 lt!52333))) Nil!1609)))))

(declare-fun d!27885 () Bool)

(assert (=> d!27885 e!67622))

(declare-fun res!51815 () Bool)

(assert (=> d!27885 (=> (not res!51815) (not e!67622))))

(assert (=> d!27885 (= res!51815 (isStrictlySorted!303 lt!52978))))

(declare-fun e!67621 () List!1612)

(assert (=> d!27885 (= lt!52978 e!67621)))

(declare-fun c!17910 () Bool)

(assert (=> d!27885 (= c!17910 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 lt!52325))))))

(assert (=> d!27885 (isStrictlySorted!303 (toList!785 lt!52333))))

(assert (=> d!27885 (= (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 lt!52325) (_2!1197 lt!52325)) lt!52978)))

(declare-fun b!103834 () Bool)

(assert (=> b!103834 (= c!17907 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 lt!52325))))))

(assert (=> b!103834 (= e!67619 e!67618)))

(declare-fun call!10906 () List!1612)

(declare-fun bm!10903 () Bool)

(assert (=> bm!10903 (= call!10906 ($colon$colon!79 e!67620 (ite c!17910 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325)))))))

(declare-fun c!17908 () Bool)

(assert (=> bm!10903 (= c!17908 c!17910)))

(declare-fun b!103835 () Bool)

(assert (=> b!103835 (= e!67622 (contains!819 lt!52978 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!103836 () Bool)

(assert (=> b!103836 (= e!67621 call!10906)))

(declare-fun bm!10904 () Bool)

(assert (=> bm!10904 (= call!10907 call!10906)))

(declare-fun b!103837 () Bool)

(assert (=> b!103837 (= e!67618 call!10905)))

(declare-fun b!103838 () Bool)

(assert (=> b!103838 (= e!67621 e!67619)))

(assert (=> b!103838 (= c!17909 (and ((_ is Cons!1608) (toList!785 lt!52333)) (= (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 lt!52325))))))

(assert (= (and d!27885 c!17910) b!103836))

(assert (= (and d!27885 (not c!17910)) b!103838))

(assert (= (and b!103838 c!17909) b!103829))

(assert (= (and b!103838 (not c!17909)) b!103834))

(assert (= (and b!103834 c!17907) b!103837))

(assert (= (and b!103834 (not c!17907)) b!103832))

(assert (= (or b!103837 b!103832) bm!10902))

(assert (= (or b!103829 bm!10902) bm!10904))

(assert (= (or b!103836 bm!10904) bm!10903))

(assert (= (and bm!10903 c!17908) b!103830))

(assert (= (and bm!10903 (not c!17908)) b!103833))

(assert (= (and d!27885 res!51815) b!103831))

(assert (= (and b!103831 res!51814) b!103835))

(declare-fun m!114723 () Bool)

(assert (=> b!103835 m!114723))

(declare-fun m!114725 () Bool)

(assert (=> d!27885 m!114725))

(assert (=> d!27885 m!114295))

(declare-fun m!114727 () Bool)

(assert (=> b!103831 m!114727))

(declare-fun m!114729 () Bool)

(assert (=> b!103830 m!114729))

(declare-fun m!114731 () Bool)

(assert (=> bm!10903 m!114731))

(assert (=> d!27655 d!27885))

(declare-fun d!27887 () Bool)

(assert (=> d!27887 (= (apply!97 lt!52612 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1328 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4244 () Bool)

(assert (= bs!4244 d!27887))

(assert (=> bs!4244 m!113707))

(assert (=> bs!4244 m!114349))

(assert (=> bs!4244 m!114349))

(declare-fun m!114733 () Bool)

(assert (=> bs!4244 m!114733))

(assert (=> b!103342 d!27887))

(assert (=> b!103342 d!27695))

(declare-fun d!27889 () Bool)

(declare-fun e!67624 () Bool)

(assert (=> d!27889 e!67624))

(declare-fun res!51816 () Bool)

(assert (=> d!27889 (=> res!51816 e!67624)))

(declare-fun lt!52981 () Bool)

(assert (=> d!27889 (= res!51816 (not lt!52981))))

(declare-fun lt!52980 () Bool)

(assert (=> d!27889 (= lt!52981 lt!52980)))

(declare-fun lt!52982 () Unit!3141)

(declare-fun e!67623 () Unit!3141)

(assert (=> d!27889 (= lt!52982 e!67623)))

(declare-fun c!17911 () Bool)

(assert (=> d!27889 (= c!17911 lt!52980)))

(assert (=> d!27889 (= lt!52980 (containsKey!157 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27889 (= (contains!816 lt!52435 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!52981)))

(declare-fun b!103839 () Bool)

(declare-fun lt!52979 () Unit!3141)

(assert (=> b!103839 (= e!67623 lt!52979)))

(assert (=> b!103839 (= lt!52979 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103839 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103840 () Bool)

(declare-fun Unit!3171 () Unit!3141)

(assert (=> b!103840 (= e!67623 Unit!3171)))

(declare-fun b!103841 () Bool)

(assert (=> b!103841 (= e!67624 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27889 c!17911) b!103839))

(assert (= (and d!27889 (not c!17911)) b!103840))

(assert (= (and d!27889 (not res!51816)) b!103841))

(assert (=> d!27889 m!113707))

(declare-fun m!114735 () Bool)

(assert (=> d!27889 m!114735))

(assert (=> b!103839 m!113707))

(declare-fun m!114737 () Bool)

(assert (=> b!103839 m!114737))

(assert (=> b!103839 m!113707))

(assert (=> b!103839 m!114515))

(assert (=> b!103839 m!114515))

(declare-fun m!114739 () Bool)

(assert (=> b!103839 m!114739))

(assert (=> b!103841 m!113707))

(assert (=> b!103841 m!114515))

(assert (=> b!103841 m!114515))

(assert (=> b!103841 m!114739))

(assert (=> b!103137 d!27889))

(declare-fun call!10908 () Bool)

(declare-fun c!17912 () Bool)

(declare-fun bm!10905 () Bool)

(assert (=> bm!10905 (= call!10908 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17912 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610))))))

(declare-fun b!103842 () Bool)

(declare-fun e!67627 () Bool)

(declare-fun e!67628 () Bool)

(assert (=> b!103842 (= e!67627 e!67628)))

(assert (=> b!103842 (= c!17912 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103843 () Bool)

(assert (=> b!103843 (= e!67628 call!10908)))

(declare-fun d!27891 () Bool)

(declare-fun res!51818 () Bool)

(declare-fun e!67626 () Bool)

(assert (=> d!27891 (=> res!51818 e!67626)))

(assert (=> d!27891 (= res!51818 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!27891 (= (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) e!67626)))

(declare-fun b!103844 () Bool)

(assert (=> b!103844 (= e!67626 e!67627)))

(declare-fun res!51819 () Bool)

(assert (=> b!103844 (=> (not res!51819) (not e!67627))))

(declare-fun e!67625 () Bool)

(assert (=> b!103844 (= res!51819 (not e!67625))))

(declare-fun res!51817 () Bool)

(assert (=> b!103844 (=> (not res!51817) (not e!67625))))

(assert (=> b!103844 (= res!51817 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103845 () Bool)

(assert (=> b!103845 (= e!67628 call!10908)))

(declare-fun b!103846 () Bool)

(assert (=> b!103846 (= e!67625 (contains!818 (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!27891 (not res!51818)) b!103844))

(assert (= (and b!103844 res!51817) b!103846))

(assert (= (and b!103844 res!51819) b!103842))

(assert (= (and b!103842 c!17912) b!103843))

(assert (= (and b!103842 (not c!17912)) b!103845))

(assert (= (or b!103843 b!103845) bm!10905))

(declare-fun m!114741 () Bool)

(assert (=> bm!10905 m!114741))

(declare-fun m!114743 () Bool)

(assert (=> bm!10905 m!114743))

(assert (=> b!103842 m!114741))

(assert (=> b!103842 m!114741))

(declare-fun m!114745 () Bool)

(assert (=> b!103842 m!114745))

(assert (=> b!103844 m!114741))

(assert (=> b!103844 m!114741))

(assert (=> b!103844 m!114745))

(assert (=> b!103846 m!114741))

(assert (=> b!103846 m!114741))

(declare-fun m!114747 () Bool)

(assert (=> b!103846 m!114747))

(assert (=> bm!10743 d!27891))

(declare-fun condMapEmpty!3915 () Bool)

(declare-fun mapDefault!3915 () ValueCell!992)

(assert (=> mapNonEmpty!3914 (= condMapEmpty!3915 (= mapRest!3914 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3915)))))

(declare-fun e!67630 () Bool)

(declare-fun mapRes!3915 () Bool)

(assert (=> mapNonEmpty!3914 (= tp!9872 (and e!67630 mapRes!3915))))

(declare-fun b!103848 () Bool)

(assert (=> b!103848 (= e!67630 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3915 () Bool)

(declare-fun tp!9873 () Bool)

(declare-fun e!67629 () Bool)

(assert (=> mapNonEmpty!3915 (= mapRes!3915 (and tp!9873 e!67629))))

(declare-fun mapRest!3915 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapValue!3915 () ValueCell!992)

(declare-fun mapKey!3915 () (_ BitVec 32))

(assert (=> mapNonEmpty!3915 (= mapRest!3914 (store mapRest!3915 mapKey!3915 mapValue!3915))))

(declare-fun b!103847 () Bool)

(assert (=> b!103847 (= e!67629 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3915 () Bool)

(assert (=> mapIsEmpty!3915 mapRes!3915))

(assert (= (and mapNonEmpty!3914 condMapEmpty!3915) mapIsEmpty!3915))

(assert (= (and mapNonEmpty!3914 (not condMapEmpty!3915)) mapNonEmpty!3915))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!992) mapValue!3915)) b!103847))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!992) mapDefault!3915)) b!103848))

(declare-fun m!114749 () Bool)

(assert (=> mapNonEmpty!3915 m!114749))

(declare-fun condMapEmpty!3916 () Bool)

(declare-fun mapDefault!3916 () ValueCell!992)

(assert (=> mapNonEmpty!3913 (= condMapEmpty!3916 (= mapRest!3913 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3916)))))

(declare-fun e!67632 () Bool)

(declare-fun mapRes!3916 () Bool)

(assert (=> mapNonEmpty!3913 (= tp!9871 (and e!67632 mapRes!3916))))

(declare-fun b!103850 () Bool)

(assert (=> b!103850 (= e!67632 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3916 () Bool)

(declare-fun tp!9874 () Bool)

(declare-fun e!67631 () Bool)

(assert (=> mapNonEmpty!3916 (= mapRes!3916 (and tp!9874 e!67631))))

(declare-fun mapRest!3916 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapKey!3916 () (_ BitVec 32))

(declare-fun mapValue!3916 () ValueCell!992)

(assert (=> mapNonEmpty!3916 (= mapRest!3913 (store mapRest!3916 mapKey!3916 mapValue!3916))))

(declare-fun b!103849 () Bool)

(assert (=> b!103849 (= e!67631 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3916 () Bool)

(assert (=> mapIsEmpty!3916 mapRes!3916))

(assert (= (and mapNonEmpty!3913 condMapEmpty!3916) mapIsEmpty!3916))

(assert (= (and mapNonEmpty!3913 (not condMapEmpty!3916)) mapNonEmpty!3916))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!992) mapValue!3916)) b!103849))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!992) mapDefault!3916)) b!103850))

(declare-fun m!114751 () Bool)

(assert (=> mapNonEmpty!3916 m!114751))

(declare-fun b_lambda!4623 () Bool)

(assert (= b_lambda!4613 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4623)))

(declare-fun b_lambda!4625 () Bool)

(assert (= b_lambda!4617 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4625)))

(declare-fun b_lambda!4627 () Bool)

(assert (= b_lambda!4619 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4627)))

(declare-fun b_lambda!4629 () Bool)

(assert (= b_lambda!4615 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4629)))

(declare-fun b_lambda!4631 () Bool)

(assert (= b_lambda!4621 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4631)))

(check-sat (not d!27697) (not b!103785) (not b!103455) (not b!103508) (not b!103619) (not d!27889) (not b!103499) (not b!103630) (not mapNonEmpty!3916) (not b!103781) (not d!27765) (not b!103828) (not b_next!2509) (not b!103805) (not bm!10895) (not b!103813) (not bm!10841) (not b!103789) (not b!103418) (not b!103825) (not d!27879) (not b!103702) (not d!27725) (not b!103620) (not b!103803) (not b_lambda!4625) (not b!103790) (not b!103576) (not b!103810) (not b!103714) (not d!27789) (not b!103701) (not b!103842) (not b!103617) (not b!103727) (not b!103429) (not d!27873) (not b!103830) (not d!27779) (not bm!10883) (not b!103587) (not b!103704) (not bm!10881) (not b!103392) (not b!103390) (not mapNonEmpty!3915) (not b!103822) (not d!27803) (not bm!10843) (not bm!10868) (not bm!10851) (not b!103691) (not d!27747) (not d!27729) (not b!103411) (not b!103402) (not b!103477) (not b!103577) (not b!103796) (not d!27773) (not d!27843) (not b!103389) (not b!103802) (not b!103831) (not b!103788) (not b!103614) (not b!103519) (not b!103507) (not b!103671) (not b!103784) (not d!27823) (not b!103505) (not b!103841) (not d!27701) (not b!103737) (not b!103592) (not b!103478) (not d!27837) (not b_lambda!4627) (not d!27711) (not b!103685) (not b!103699) (not b!103582) (not b!103382) (not b!103584) (not b!103590) (not b!103728) (not b!103581) (not d!27807) (not d!27861) (not d!27757) (not b!103406) (not b!103510) (not b!103463) (not bm!10884) (not d!27841) (not b!103424) (not b!103593) (not b!103783) (not b_next!2511) (not d!27739) (not b!103481) (not b!103503) (not b!103415) (not d!27783) (not b!103611) (not b!103520) (not b!103807) (not d!27813) (not d!27825) (not b!103414) (not b!103693) (not b!103543) (not b!103461) (not b!103376) (not bm!10887) (not b!103379) (not bm!10840) (not b!103381) (not d!27721) (not d!27731) (not bm!10900) (not bm!10847) b_and!6405 (not b!103754) (not d!27865) (not b!103404) (not b!103393) (not b!103667) (not bm!10850) (not b!103694) (not b!103490) (not b!103792) (not b_lambda!4607) (not b!103597) (not b!103844) (not b!103403) (not d!27819) (not d!27867) (not b!103473) (not b!103624) (not bm!10871) (not b!103818) (not b!103682) (not d!27699) (not d!27795) (not d!27859) (not d!27821) (not d!27827) (not d!27885) (not d!27709) (not d!27847) (not bm!10889) (not b!103839) (not b!103427) (not d!27749) (not bm!10901) (not d!27691) (not bm!10857) (not b!103413) (not b!103820) (not b!103741) (not d!27799) (not b!103575) (not b!103456) (not b!103580) (not b!103378) (not b!103692) (not d!27887) (not b!103680) (not d!27793) (not b!103493) (not d!27763) (not b!103513) (not d!27883) b_and!6407 (not bm!10905) (not b!103743) (not b!103470) (not b!103465) (not d!27771) (not bm!10854) (not d!27693) (not d!27689) (not bm!10846) (not d!27703) (not b!103808) (not d!27845) (not b!103579) (not b!103542) (not d!27817) (not b!103616) (not d!27785) (not b!103571) (not b!103468) (not d!27705) (not d!27877) (not d!27737) (not b!103480) (not b!103589) (not d!27835) (not d!27753) (not b!103405) (not b!103452) (not d!27875) (not b!103809) (not b!103454) (not b_lambda!4623) (not b!103464) (not bm!10892) (not d!27829) (not b!103846) (not b!103794) (not b!103688) (not b!103387) (not b!103574) (not d!27755) (not b!103385) (not b!103675) (not b!103705) (not d!27869) (not d!27727) (not b_lambda!4611) (not b!103578) (not d!27707) (not b!103679) (not d!27767) (not bm!10886) (not b!103726) (not b!103606) (not d!27801) (not b!103811) (not d!27849) (not b!103377) (not b!103738) (not b!103804) (not b!103686) (not b!103753) (not b!103628) (not d!27851) (not d!27855) (not b!103835) (not d!27831) (not d!27805) (not d!27809) (not d!27857) (not d!27871) (not b_lambda!4609) (not d!27781) (not bm!10885) (not bm!10865) (not bm!10903) (not b!103827) (not b!103690) (not d!27863) (not b!103673) (not b!103609) (not d!27775) (not b_lambda!4599) (not b!103697) (not d!27769) (not d!27853) (not b!103787) (not b!103459) (not b!103608) (not b!103421) (not b!103425) (not b!103416) (not b!103475) (not b!103720) (not b!103440) (not b!103555) (not b_lambda!4631) (not d!27735) (not b!103547) (not bm!10852) tp_is_empty!2671 (not b_lambda!4629) (not b!103553))
(check-sat b_and!6405 b_and!6407 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun d!27893 () Bool)

(declare-fun e!67633 () Bool)

(assert (=> d!27893 e!67633))

(declare-fun res!51821 () Bool)

(assert (=> d!27893 (=> (not res!51821) (not e!67633))))

(declare-fun lt!52986 () ListLongMap!1539)

(assert (=> d!27893 (= res!51821 (contains!816 lt!52986 (_1!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun lt!52984 () List!1612)

(assert (=> d!27893 (= lt!52986 (ListLongMap!1540 lt!52984))))

(declare-fun lt!52983 () Unit!3141)

(declare-fun lt!52985 () Unit!3141)

(assert (=> d!27893 (= lt!52983 lt!52985)))

(assert (=> d!27893 (= (getValueByKey!153 lt!52984 (_1!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!27893 (= lt!52985 (lemmaContainsTupThenGetReturnValue!72 lt!52984 (_1!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!27893 (= lt!52984 (insertStrictlySorted!75 (toList!785 (ite c!17789 call!10846 (ite c!17790 call!10844 call!10848))) (_1!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!27893 (= (+!134 (ite c!17789 call!10846 (ite c!17790 call!10844 call!10848)) (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) lt!52986)))

(declare-fun b!103851 () Bool)

(declare-fun res!51820 () Bool)

(assert (=> b!103851 (=> (not res!51820) (not e!67633))))

(assert (=> b!103851 (= res!51820 (= (getValueByKey!153 (toList!785 lt!52986) (_1!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))))

(declare-fun b!103852 () Bool)

(assert (=> b!103852 (= e!67633 (contains!819 (toList!785 lt!52986) (ite (or c!17789 c!17790) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (= (and d!27893 res!51821) b!103851))

(assert (= (and b!103851 res!51820) b!103852))

(declare-fun m!114753 () Bool)

(assert (=> d!27893 m!114753))

(declare-fun m!114755 () Bool)

(assert (=> d!27893 m!114755))

(declare-fun m!114757 () Bool)

(assert (=> d!27893 m!114757))

(declare-fun m!114759 () Bool)

(assert (=> d!27893 m!114759))

(declare-fun m!114761 () Bool)

(assert (=> b!103851 m!114761))

(declare-fun m!114763 () Bool)

(assert (=> b!103852 m!114763))

(assert (=> bm!10841 d!27893))

(declare-fun b!103865 () Bool)

(declare-fun e!67640 () SeekEntryResult!261)

(declare-fun e!67642 () SeekEntryResult!261)

(assert (=> b!103865 (= e!67640 e!67642)))

(declare-fun lt!52992 () (_ BitVec 64))

(declare-fun c!17920 () Bool)

(assert (=> b!103865 (= c!17920 (= lt!52992 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103866 () Bool)

(assert (=> b!103866 (= e!67640 Undefined!261)))

(declare-fun d!27895 () Bool)

(declare-fun lt!52991 () SeekEntryResult!261)

(assert (=> d!27895 (and (or ((_ is Undefined!261) lt!52991) (not ((_ is Found!261) lt!52991)) (and (bvsge (index!3192 lt!52991) #b00000000000000000000000000000000) (bvslt (index!3192 lt!52991) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!52991) ((_ is Found!261) lt!52991) (not ((_ is MissingVacant!261) lt!52991)) (not (= (index!3194 lt!52991) (index!3193 lt!52733))) (and (bvsge (index!3194 lt!52991) #b00000000000000000000000000000000) (bvslt (index!3194 lt!52991) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!52991) (ite ((_ is Found!261) lt!52991) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52991)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (and ((_ is MissingVacant!261) lt!52991) (= (index!3194 lt!52991) (index!3193 lt!52733)) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!52991)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!27895 (= lt!52991 e!67640)))

(declare-fun c!17921 () Bool)

(assert (=> d!27895 (= c!17921 (bvsge (x!13502 lt!52733) #b01111111111111111111111111111110))))

(assert (=> d!27895 (= lt!52992 (select (arr!2044 (_keys!4261 newMap!16)) (index!3193 lt!52733)))))

(assert (=> d!27895 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27895 (= (seekKeyOrZeroReturnVacant!0 (x!13502 lt!52733) (index!3193 lt!52733) (index!3193 lt!52733) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)) lt!52991)))

(declare-fun b!103867 () Bool)

(declare-fun c!17919 () Bool)

(assert (=> b!103867 (= c!17919 (= lt!52992 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67641 () SeekEntryResult!261)

(assert (=> b!103867 (= e!67642 e!67641)))

(declare-fun b!103868 () Bool)

(assert (=> b!103868 (= e!67641 (MissingVacant!261 (index!3193 lt!52733)))))

(declare-fun b!103869 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!103869 (= e!67641 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13502 lt!52733) #b00000000000000000000000000000001) (nextIndex!0 (index!3193 lt!52733) (x!13502 lt!52733) (mask!6695 newMap!16)) (index!3193 lt!52733) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!103870 () Bool)

(assert (=> b!103870 (= e!67642 (Found!261 (index!3193 lt!52733)))))

(assert (= (and d!27895 c!17921) b!103866))

(assert (= (and d!27895 (not c!17921)) b!103865))

(assert (= (and b!103865 c!17920) b!103870))

(assert (= (and b!103865 (not c!17920)) b!103867))

(assert (= (and b!103867 c!17919) b!103868))

(assert (= (and b!103867 (not c!17919)) b!103869))

(declare-fun m!114765 () Bool)

(assert (=> d!27895 m!114765))

(declare-fun m!114767 () Bool)

(assert (=> d!27895 m!114767))

(assert (=> d!27895 m!114225))

(assert (=> d!27895 m!113985))

(declare-fun m!114769 () Bool)

(assert (=> b!103869 m!114769))

(assert (=> b!103869 m!114769))

(assert (=> b!103869 m!113535))

(declare-fun m!114771 () Bool)

(assert (=> b!103869 m!114771))

(assert (=> b!103571 d!27895))

(declare-fun d!27897 () Bool)

(assert (=> d!27897 (= (apply!97 lt!52876 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (getValueByKey!153 (toList!785 lt!52876) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4245 () Bool)

(assert (= bs!4245 d!27897))

(assert (=> bs!4245 m!113969))

(declare-fun m!114773 () Bool)

(assert (=> bs!4245 m!114773))

(assert (=> bs!4245 m!114773))

(declare-fun m!114775 () Bool)

(assert (=> bs!4245 m!114775))

(assert (=> b!103697 d!27897))

(declare-fun c!17922 () Bool)

(declare-fun d!27899 () Bool)

(assert (=> d!27899 (= c!17922 ((_ is ValueCellFull!992) (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!67643 () V!3209)

(assert (=> d!27899 (= (get!1325 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67643)))

(declare-fun b!103871 () Bool)

(assert (=> b!103871 (= e!67643 (get!1326 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103872 () Bool)

(assert (=> b!103872 (= e!67643 (get!1327 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27899 c!17922) b!103871))

(assert (= (and d!27899 (not c!17922)) b!103872))

(assert (=> b!103871 m!114473))

(assert (=> b!103871 m!113987))

(declare-fun m!114777 () Bool)

(assert (=> b!103871 m!114777))

(assert (=> b!103872 m!114473))

(assert (=> b!103872 m!113987))

(declare-fun m!114779 () Bool)

(assert (=> b!103872 m!114779))

(assert (=> b!103697 d!27899))

(declare-fun b!103873 () Bool)

(declare-fun e!67645 () List!1612)

(declare-fun call!10911 () List!1612)

(assert (=> b!103873 (= e!67645 call!10911)))

(declare-fun b!103874 () Bool)

(declare-fun e!67646 () List!1612)

(assert (=> b!103874 (= e!67646 (insertStrictlySorted!75 (t!5665 (t!5665 (toList!785 lt!52333))) (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun b!103875 () Bool)

(declare-fun res!51822 () Bool)

(declare-fun e!67648 () Bool)

(assert (=> b!103875 (=> (not res!51822) (not e!67648))))

(declare-fun lt!52993 () List!1612)

(assert (=> b!103875 (= res!51822 (containsKey!157 lt!52993 (_1!1197 lt!52325)))))

(declare-fun bm!10906 () Bool)

(declare-fun call!10909 () List!1612)

(assert (=> bm!10906 (= call!10909 call!10911)))

(declare-fun b!103876 () Bool)

(declare-fun e!67644 () List!1612)

(assert (=> b!103876 (= e!67644 call!10909)))

(declare-fun c!17925 () Bool)

(declare-fun b!103877 () Bool)

(declare-fun c!17923 () Bool)

(assert (=> b!103877 (= e!67646 (ite c!17925 (t!5665 (t!5665 (toList!785 lt!52333))) (ite c!17923 (Cons!1608 (h!2204 (t!5665 (toList!785 lt!52333))) (t!5665 (t!5665 (toList!785 lt!52333)))) Nil!1609)))))

(declare-fun d!27901 () Bool)

(assert (=> d!27901 e!67648))

(declare-fun res!51823 () Bool)

(assert (=> d!27901 (=> (not res!51823) (not e!67648))))

(assert (=> d!27901 (= res!51823 (isStrictlySorted!303 lt!52993))))

(declare-fun e!67647 () List!1612)

(assert (=> d!27901 (= lt!52993 e!67647)))

(declare-fun c!17926 () Bool)

(assert (=> d!27901 (= c!17926 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52333))) (bvslt (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333)))) (_1!1197 lt!52325))))))

(assert (=> d!27901 (isStrictlySorted!303 (t!5665 (toList!785 lt!52333)))))

(assert (=> d!27901 (= (insertStrictlySorted!75 (t!5665 (toList!785 lt!52333)) (_1!1197 lt!52325) (_2!1197 lt!52325)) lt!52993)))

(declare-fun b!103878 () Bool)

(assert (=> b!103878 (= c!17923 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52333))) (bvsgt (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333)))) (_1!1197 lt!52325))))))

(assert (=> b!103878 (= e!67645 e!67644)))

(declare-fun call!10910 () List!1612)

(declare-fun bm!10907 () Bool)

(assert (=> bm!10907 (= call!10910 ($colon$colon!79 e!67646 (ite c!17926 (h!2204 (t!5665 (toList!785 lt!52333))) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325)))))))

(declare-fun c!17924 () Bool)

(assert (=> bm!10907 (= c!17924 c!17926)))

(declare-fun b!103879 () Bool)

(assert (=> b!103879 (= e!67648 (contains!819 lt!52993 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!103880 () Bool)

(assert (=> b!103880 (= e!67647 call!10910)))

(declare-fun bm!10908 () Bool)

(assert (=> bm!10908 (= call!10911 call!10910)))

(declare-fun b!103881 () Bool)

(assert (=> b!103881 (= e!67644 call!10909)))

(declare-fun b!103882 () Bool)

(assert (=> b!103882 (= e!67647 e!67645)))

(assert (=> b!103882 (= c!17925 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52333))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333)))) (_1!1197 lt!52325))))))

(assert (= (and d!27901 c!17926) b!103880))

(assert (= (and d!27901 (not c!17926)) b!103882))

(assert (= (and b!103882 c!17925) b!103873))

(assert (= (and b!103882 (not c!17925)) b!103878))

(assert (= (and b!103878 c!17923) b!103881))

(assert (= (and b!103878 (not c!17923)) b!103876))

(assert (= (or b!103881 b!103876) bm!10906))

(assert (= (or b!103873 bm!10906) bm!10908))

(assert (= (or b!103880 bm!10908) bm!10907))

(assert (= (and bm!10907 c!17924) b!103874))

(assert (= (and bm!10907 (not c!17924)) b!103877))

(assert (= (and d!27901 res!51823) b!103875))

(assert (= (and b!103875 res!51822) b!103879))

(declare-fun m!114781 () Bool)

(assert (=> b!103879 m!114781))

(declare-fun m!114783 () Bool)

(assert (=> d!27901 m!114783))

(declare-fun m!114785 () Bool)

(assert (=> d!27901 m!114785))

(declare-fun m!114787 () Bool)

(assert (=> b!103875 m!114787))

(declare-fun m!114789 () Bool)

(assert (=> b!103874 m!114789))

(declare-fun m!114791 () Bool)

(assert (=> bm!10907 m!114791))

(assert (=> b!103830 d!27901))

(declare-fun d!27903 () Bool)

(assert (=> d!27903 (= (get!1328 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2873 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27729 d!27903))

(declare-fun b!103885 () Bool)

(declare-fun e!67650 () Option!159)

(assert (=> b!103885 (= e!67650 (getValueByKey!153 (t!5665 (toList!785 lt!52612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103883 () Bool)

(declare-fun e!67649 () Option!159)

(assert (=> b!103883 (= e!67649 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52612)))))))

(declare-fun d!27905 () Bool)

(declare-fun c!17927 () Bool)

(assert (=> d!27905 (= c!17927 (and ((_ is Cons!1608) (toList!785 lt!52612)) (= (_1!1197 (h!2204 (toList!785 lt!52612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27905 (= (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000) e!67649)))

(declare-fun b!103884 () Bool)

(assert (=> b!103884 (= e!67649 e!67650)))

(declare-fun c!17928 () Bool)

(assert (=> b!103884 (= c!17928 (and ((_ is Cons!1608) (toList!785 lt!52612)) (not (= (_1!1197 (h!2204 (toList!785 lt!52612))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103886 () Bool)

(assert (=> b!103886 (= e!67650 None!157)))

(assert (= (and d!27905 c!17927) b!103883))

(assert (= (and d!27905 (not c!17927)) b!103884))

(assert (= (and b!103884 c!17928) b!103885))

(assert (= (and b!103884 (not c!17928)) b!103886))

(declare-fun m!114793 () Bool)

(assert (=> b!103885 m!114793))

(assert (=> d!27729 d!27905))

(declare-fun d!27907 () Bool)

(declare-fun e!67652 () Bool)

(assert (=> d!27907 e!67652))

(declare-fun res!51824 () Bool)

(assert (=> d!27907 (=> res!51824 e!67652)))

(declare-fun lt!52996 () Bool)

(assert (=> d!27907 (= res!51824 (not lt!52996))))

(declare-fun lt!52995 () Bool)

(assert (=> d!27907 (= lt!52996 lt!52995)))

(declare-fun lt!52997 () Unit!3141)

(declare-fun e!67651 () Unit!3141)

(assert (=> d!27907 (= lt!52997 e!67651)))

(declare-fun c!17929 () Bool)

(assert (=> d!27907 (= c!17929 lt!52995)))

(assert (=> d!27907 (= lt!52995 (containsKey!157 (toList!785 lt!52638) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27907 (= (contains!816 lt!52638 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52996)))

(declare-fun b!103887 () Bool)

(declare-fun lt!52994 () Unit!3141)

(assert (=> b!103887 (= e!67651 lt!52994)))

(assert (=> b!103887 (= lt!52994 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52638) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103887 (isDefined!107 (getValueByKey!153 (toList!785 lt!52638) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103888 () Bool)

(declare-fun Unit!3172 () Unit!3141)

(assert (=> b!103888 (= e!67651 Unit!3172)))

(declare-fun b!103889 () Bool)

(assert (=> b!103889 (= e!67652 (isDefined!107 (getValueByKey!153 (toList!785 lt!52638) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27907 c!17929) b!103887))

(assert (= (and d!27907 (not c!17929)) b!103888))

(assert (= (and d!27907 (not res!51824)) b!103889))

(declare-fun m!114795 () Bool)

(assert (=> d!27907 m!114795))

(declare-fun m!114797 () Bool)

(assert (=> b!103887 m!114797))

(declare-fun m!114799 () Bool)

(assert (=> b!103887 m!114799))

(assert (=> b!103887 m!114799))

(declare-fun m!114801 () Bool)

(assert (=> b!103887 m!114801))

(assert (=> b!103889 m!114799))

(assert (=> b!103889 m!114799))

(assert (=> b!103889 m!114801))

(assert (=> bm!10846 d!27907))

(declare-fun d!27909 () Bool)

(assert (=> d!27909 (= (get!1327 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103404 d!27909))

(declare-fun d!27911 () Bool)

(assert (=> d!27911 (= (size!2305 newMap!16) (bvadd (_size!495 newMap!16) (bvsdiv (bvadd (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!103754 d!27911))

(declare-fun d!27913 () Bool)

(declare-fun res!51829 () Bool)

(declare-fun e!67657 () Bool)

(assert (=> d!27913 (=> res!51829 e!67657)))

(assert (=> d!27913 (= res!51829 (or ((_ is Nil!1609) lt!52764) ((_ is Nil!1609) (t!5665 lt!52764))))))

(assert (=> d!27913 (= (isStrictlySorted!303 lt!52764) e!67657)))

(declare-fun b!103894 () Bool)

(declare-fun e!67658 () Bool)

(assert (=> b!103894 (= e!67657 e!67658)))

(declare-fun res!51830 () Bool)

(assert (=> b!103894 (=> (not res!51830) (not e!67658))))

(assert (=> b!103894 (= res!51830 (bvslt (_1!1197 (h!2204 lt!52764)) (_1!1197 (h!2204 (t!5665 lt!52764)))))))

(declare-fun b!103895 () Bool)

(assert (=> b!103895 (= e!67658 (isStrictlySorted!303 (t!5665 lt!52764)))))

(assert (= (and d!27913 (not res!51829)) b!103894))

(assert (= (and b!103894 res!51830) b!103895))

(declare-fun m!114803 () Bool)

(assert (=> b!103895 m!114803))

(assert (=> d!27795 d!27913))

(declare-fun d!27915 () Bool)

(declare-fun res!51831 () Bool)

(declare-fun e!67659 () Bool)

(assert (=> d!27915 (=> res!51831 e!67659)))

(assert (=> d!27915 (= res!51831 (or ((_ is Nil!1609) (toList!785 (+!134 lt!52333 lt!52331))) ((_ is Nil!1609) (t!5665 (toList!785 (+!134 lt!52333 lt!52331))))))))

(assert (=> d!27915 (= (isStrictlySorted!303 (toList!785 (+!134 lt!52333 lt!52331))) e!67659)))

(declare-fun b!103896 () Bool)

(declare-fun e!67660 () Bool)

(assert (=> b!103896 (= e!67659 e!67660)))

(declare-fun res!51832 () Bool)

(assert (=> b!103896 (=> (not res!51832) (not e!67660))))

(assert (=> b!103896 (= res!51832 (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52331)))) (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))))))))

(declare-fun b!103897 () Bool)

(assert (=> b!103897 (= e!67660 (isStrictlySorted!303 (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))))))

(assert (= (and d!27915 (not res!51831)) b!103896))

(assert (= (and b!103896 res!51832) b!103897))

(declare-fun m!114805 () Bool)

(assert (=> b!103897 m!114805))

(assert (=> d!27795 d!27915))

(declare-fun d!27917 () Bool)

(declare-fun lt!52998 () Bool)

(assert (=> d!27917 (= lt!52998 (select (content!108 lt!52455) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun e!67661 () Bool)

(assert (=> d!27917 (= lt!52998 e!67661)))

(declare-fun res!51833 () Bool)

(assert (=> d!27917 (=> (not res!51833) (not e!67661))))

(assert (=> d!27917 (= res!51833 ((_ is Cons!1608) lt!52455))))

(assert (=> d!27917 (= (contains!819 lt!52455 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))) lt!52998)))

(declare-fun b!103898 () Bool)

(declare-fun e!67662 () Bool)

(assert (=> b!103898 (= e!67661 e!67662)))

(declare-fun res!51834 () Bool)

(assert (=> b!103898 (=> res!51834 e!67662)))

(assert (=> b!103898 (= res!51834 (= (h!2204 lt!52455) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!103899 () Bool)

(assert (=> b!103899 (= e!67662 (contains!819 (t!5665 lt!52455) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(assert (= (and d!27917 res!51833) b!103898))

(assert (= (and b!103898 (not res!51834)) b!103899))

(declare-fun m!114807 () Bool)

(assert (=> d!27917 m!114807))

(declare-fun m!114809 () Bool)

(assert (=> d!27917 m!114809))

(declare-fun m!114811 () Bool)

(assert (=> b!103899 m!114811))

(assert (=> b!103590 d!27917))

(declare-fun d!27919 () Bool)

(assert (=> d!27919 (= (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52608)) (v!2873 (getValueByKey!153 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52608)))))

(assert (=> d!27869 d!27919))

(declare-fun e!67664 () Option!159)

(declare-fun b!103902 () Bool)

(assert (=> b!103902 (= e!67664 (getValueByKey!153 (t!5665 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!52608))))

(declare-fun b!103900 () Bool)

(declare-fun e!67663 () Option!159)

(assert (=> b!103900 (= e!67663 (Some!158 (_2!1197 (h!2204 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun d!27921 () Bool)

(declare-fun c!17930 () Bool)

(assert (=> d!27921 (= c!17930 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52608)))))

(assert (=> d!27921 (= (getValueByKey!153 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52608) e!67663)))

(declare-fun b!103901 () Bool)

(assert (=> b!103901 (= e!67663 e!67664)))

(declare-fun c!17931 () Bool)

(assert (=> b!103901 (= c!17931 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (not (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52608))))))

(declare-fun b!103903 () Bool)

(assert (=> b!103903 (= e!67664 None!157)))

(assert (= (and d!27921 c!17930) b!103900))

(assert (= (and d!27921 (not c!17930)) b!103901))

(assert (= (and b!103901 c!17931) b!103902))

(assert (= (and b!103901 (not c!17931)) b!103903))

(declare-fun m!114813 () Bool)

(assert (=> b!103902 m!114813))

(assert (=> d!27869 d!27921))

(declare-fun d!27923 () Bool)

(assert (not d!27923))

(assert (=> b!103606 d!27923))

(declare-fun lt!52999 () Bool)

(declare-fun d!27925 () Bool)

(assert (=> d!27925 (= lt!52999 (select (content!108 (toList!785 lt!52949)) (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67665 () Bool)

(assert (=> d!27925 (= lt!52999 e!67665)))

(declare-fun res!51835 () Bool)

(assert (=> d!27925 (=> (not res!51835) (not e!67665))))

(assert (=> d!27925 (= res!51835 ((_ is Cons!1608) (toList!785 lt!52949)))))

(assert (=> d!27925 (= (contains!819 (toList!785 lt!52949) (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52999)))

(declare-fun b!103904 () Bool)

(declare-fun e!67666 () Bool)

(assert (=> b!103904 (= e!67665 e!67666)))

(declare-fun res!51836 () Bool)

(assert (=> b!103904 (=> res!51836 e!67666)))

(assert (=> b!103904 (= res!51836 (= (h!2204 (toList!785 lt!52949)) (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!103905 () Bool)

(assert (=> b!103905 (= e!67666 (contains!819 (t!5665 (toList!785 lt!52949)) (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!27925 res!51835) b!103904))

(assert (= (and b!103904 (not res!51836)) b!103905))

(declare-fun m!114815 () Bool)

(assert (=> d!27925 m!114815))

(declare-fun m!114817 () Bool)

(assert (=> d!27925 m!114817))

(declare-fun m!114819 () Bool)

(assert (=> b!103905 m!114819))

(assert (=> b!103803 d!27925))

(declare-fun b!103906 () Bool)

(declare-fun e!67668 () Bool)

(declare-fun lt!53004 () ListLongMap!1539)

(assert (=> b!103906 (= e!67668 (isEmpty!371 lt!53004))))

(declare-fun d!27927 () Bool)

(declare-fun e!67673 () Bool)

(assert (=> d!27927 e!67673))

(declare-fun res!51837 () Bool)

(assert (=> d!27927 (=> (not res!51837) (not e!67673))))

(assert (=> d!27927 (= res!51837 (not (contains!816 lt!53004 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67669 () ListLongMap!1539)

(assert (=> d!27927 (= lt!53004 e!67669)))

(declare-fun c!17935 () Bool)

(assert (=> d!27927 (= c!17935 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27927 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27927 (= (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53004)))

(declare-fun b!103907 () Bool)

(declare-fun e!67671 () Bool)

(assert (=> b!103907 (= e!67671 e!67668)))

(declare-fun c!17933 () Bool)

(assert (=> b!103907 (= c!17933 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103908 () Bool)

(assert (=> b!103908 (= e!67669 (ListLongMap!1540 Nil!1609))))

(declare-fun b!103909 () Bool)

(assert (=> b!103909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> b!103909 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (ite c!17763 (_values!2543 newMap!16) lt!52532))))))

(declare-fun e!67667 () Bool)

(assert (=> b!103909 (= e!67667 (= (apply!97 lt!53004 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103910 () Bool)

(declare-fun e!67670 () Bool)

(assert (=> b!103910 (= e!67670 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103910 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!103911 () Bool)

(assert (=> b!103911 (= e!67673 e!67671)))

(declare-fun c!17934 () Bool)

(assert (=> b!103911 (= c!17934 e!67670)))

(declare-fun res!51840 () Bool)

(assert (=> b!103911 (=> (not res!51840) (not e!67670))))

(assert (=> b!103911 (= res!51840 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!103912 () Bool)

(declare-fun lt!53001 () Unit!3141)

(declare-fun lt!53003 () Unit!3141)

(assert (=> b!103912 (= lt!53001 lt!53003)))

(declare-fun lt!53005 () ListLongMap!1539)

(declare-fun lt!53006 () (_ BitVec 64))

(declare-fun lt!53002 () V!3209)

(declare-fun lt!53000 () (_ BitVec 64))

(assert (=> b!103912 (not (contains!816 (+!134 lt!53005 (tuple2!2373 lt!53000 lt!53002)) lt!53006))))

(assert (=> b!103912 (= lt!53003 (addStillNotContains!46 lt!53005 lt!53000 lt!53002 lt!53006))))

(assert (=> b!103912 (= lt!53006 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103912 (= lt!53002 (get!1325 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103912 (= lt!53000 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10912 () ListLongMap!1539)

(assert (=> b!103912 (= lt!53005 call!10912)))

(declare-fun e!67672 () ListLongMap!1539)

(assert (=> b!103912 (= e!67672 (+!134 call!10912 (tuple2!2373 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (get!1325 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!103913 () Bool)

(assert (=> b!103913 (= e!67672 call!10912)))

(declare-fun b!103914 () Bool)

(assert (=> b!103914 (= e!67671 e!67667)))

(assert (=> b!103914 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun res!51839 () Bool)

(assert (=> b!103914 (= res!51839 (contains!816 lt!53004 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103914 (=> (not res!51839) (not e!67667))))

(declare-fun bm!10909 () Bool)

(assert (=> bm!10909 (= call!10912 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16)))))

(declare-fun b!103915 () Bool)

(assert (=> b!103915 (= e!67668 (= lt!53004 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite c!17763 (_values!2543 newMap!16) lt!52532) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16))))))

(declare-fun b!103916 () Bool)

(assert (=> b!103916 (= e!67669 e!67672)))

(declare-fun c!17932 () Bool)

(assert (=> b!103916 (= c!17932 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103917 () Bool)

(declare-fun res!51838 () Bool)

(assert (=> b!103917 (=> (not res!51838) (not e!67673))))

(assert (=> b!103917 (= res!51838 (not (contains!816 lt!53004 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27927 c!17935) b!103908))

(assert (= (and d!27927 (not c!17935)) b!103916))

(assert (= (and b!103916 c!17932) b!103912))

(assert (= (and b!103916 (not c!17932)) b!103913))

(assert (= (or b!103912 b!103913) bm!10909))

(assert (= (and d!27927 res!51837) b!103917))

(assert (= (and b!103917 res!51838) b!103911))

(assert (= (and b!103911 res!51840) b!103910))

(assert (= (and b!103911 c!17934) b!103914))

(assert (= (and b!103911 (not c!17934)) b!103907))

(assert (= (and b!103914 res!51839) b!103909))

(assert (= (and b!103907 c!17933) b!103915))

(assert (= (and b!103907 (not c!17933)) b!103906))

(declare-fun b_lambda!4633 () Bool)

(assert (=> (not b_lambda!4633) (not b!103909)))

(assert (=> b!103909 t!5677))

(declare-fun b_and!6409 () Bool)

(assert (= b_and!6405 (and (=> t!5677 result!3431) b_and!6409)))

(assert (=> b!103909 t!5679))

(declare-fun b_and!6411 () Bool)

(assert (= b_and!6407 (and (=> t!5679 result!3433) b_and!6411)))

(declare-fun b_lambda!4635 () Bool)

(assert (=> (not b_lambda!4635) (not b!103912)))

(assert (=> b!103912 t!5677))

(declare-fun b_and!6413 () Bool)

(assert (= b_and!6409 (and (=> t!5677 result!3431) b_and!6413)))

(assert (=> b!103912 t!5679))

(declare-fun b_and!6415 () Bool)

(assert (= b_and!6411 (and (=> t!5679 result!3433) b_and!6415)))

(assert (=> b!103910 m!113969))

(assert (=> b!103910 m!113969))

(assert (=> b!103910 m!113997))

(declare-fun m!114821 () Bool)

(assert (=> b!103906 m!114821))

(assert (=> b!103914 m!113969))

(assert (=> b!103914 m!113969))

(declare-fun m!114823 () Bool)

(assert (=> b!103914 m!114823))

(declare-fun m!114825 () Bool)

(assert (=> d!27927 m!114825))

(assert (=> d!27927 m!113985))

(declare-fun m!114827 () Bool)

(assert (=> b!103917 m!114827))

(assert (=> b!103909 m!114153))

(assert (=> b!103909 m!113969))

(declare-fun m!114829 () Bool)

(assert (=> b!103909 m!114829))

(assert (=> b!103909 m!113987))

(assert (=> b!103909 m!114153))

(assert (=> b!103909 m!113987))

(assert (=> b!103909 m!114155))

(assert (=> b!103909 m!113969))

(declare-fun m!114831 () Bool)

(assert (=> bm!10909 m!114831))

(assert (=> b!103915 m!114831))

(assert (=> b!103916 m!113969))

(assert (=> b!103916 m!113969))

(assert (=> b!103916 m!113997))

(assert (=> b!103912 m!114153))

(declare-fun m!114833 () Bool)

(assert (=> b!103912 m!114833))

(assert (=> b!103912 m!114153))

(assert (=> b!103912 m!113987))

(assert (=> b!103912 m!114155))

(declare-fun m!114835 () Bool)

(assert (=> b!103912 m!114835))

(declare-fun m!114837 () Bool)

(assert (=> b!103912 m!114837))

(assert (=> b!103912 m!113969))

(declare-fun m!114839 () Bool)

(assert (=> b!103912 m!114839))

(assert (=> b!103912 m!113987))

(assert (=> b!103912 m!114835))

(assert (=> bm!10851 d!27927))

(assert (=> d!27883 d!27881))

(declare-fun d!27929 () Bool)

(assert (=> d!27929 (= (getValueByKey!153 lt!52447 (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325)))))

(assert (=> d!27929 true))

(declare-fun _$22!427 () Unit!3141)

(assert (=> d!27929 (= (choose!649 lt!52447 (_1!1197 lt!52325) (_2!1197 lt!52325)) _$22!427)))

(declare-fun bs!4246 () Bool)

(assert (= bs!4246 d!27929))

(assert (=> bs!4246 m!113747))

(assert (=> d!27883 d!27929))

(declare-fun d!27931 () Bool)

(declare-fun res!51841 () Bool)

(declare-fun e!67674 () Bool)

(assert (=> d!27931 (=> res!51841 e!67674)))

(assert (=> d!27931 (= res!51841 (or ((_ is Nil!1609) lt!52447) ((_ is Nil!1609) (t!5665 lt!52447))))))

(assert (=> d!27931 (= (isStrictlySorted!303 lt!52447) e!67674)))

(declare-fun b!103918 () Bool)

(declare-fun e!67675 () Bool)

(assert (=> b!103918 (= e!67674 e!67675)))

(declare-fun res!51842 () Bool)

(assert (=> b!103918 (=> (not res!51842) (not e!67675))))

(assert (=> b!103918 (= res!51842 (bvslt (_1!1197 (h!2204 lt!52447)) (_1!1197 (h!2204 (t!5665 lt!52447)))))))

(declare-fun b!103919 () Bool)

(assert (=> b!103919 (= e!67675 (isStrictlySorted!303 (t!5665 lt!52447)))))

(assert (= (and d!27931 (not res!51841)) b!103918))

(assert (= (and b!103918 res!51842) b!103919))

(declare-fun m!114841 () Bool)

(assert (=> b!103919 m!114841))

(assert (=> d!27883 d!27931))

(declare-fun b!103920 () Bool)

(declare-fun e!67677 () List!1612)

(declare-fun call!10915 () List!1612)

(assert (=> b!103920 (= e!67677 call!10915)))

(declare-fun b!103921 () Bool)

(declare-fun e!67678 () List!1612)

(assert (=> b!103921 (= e!67678 (insertStrictlySorted!75 (t!5665 (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (_1!1197 lt!52325) (_2!1197 lt!52325)))))

(declare-fun b!103922 () Bool)

(declare-fun res!51843 () Bool)

(declare-fun e!67680 () Bool)

(assert (=> b!103922 (=> (not res!51843) (not e!67680))))

(declare-fun lt!53007 () List!1612)

(assert (=> b!103922 (= res!51843 (containsKey!157 lt!53007 (_1!1197 lt!52325)))))

(declare-fun bm!10910 () Bool)

(declare-fun call!10913 () List!1612)

(assert (=> bm!10910 (= call!10913 call!10915)))

(declare-fun b!103923 () Bool)

(declare-fun e!67676 () List!1612)

(assert (=> b!103923 (= e!67676 call!10913)))

(declare-fun c!17936 () Bool)

(declare-fun b!103924 () Bool)

(declare-fun c!17938 () Bool)

(assert (=> b!103924 (= e!67678 (ite c!17938 (t!5665 (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (ite c!17936 (Cons!1608 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (t!5665 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))))) Nil!1609)))))

(declare-fun d!27933 () Bool)

(assert (=> d!27933 e!67680))

(declare-fun res!51844 () Bool)

(assert (=> d!27933 (=> (not res!51844) (not e!67680))))

(assert (=> d!27933 (= res!51844 (isStrictlySorted!303 lt!53007))))

(declare-fun e!67679 () List!1612)

(assert (=> d!27933 (= lt!53007 e!67679)))

(declare-fun c!17939 () Bool)

(assert (=> d!27933 (= c!17939 (and ((_ is Cons!1608) (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (bvslt (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))))) (_1!1197 lt!52325))))))

(assert (=> d!27933 (isStrictlySorted!303 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))))))

(assert (=> d!27933 (= (insertStrictlySorted!75 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))) (_1!1197 lt!52325) (_2!1197 lt!52325)) lt!53007)))

(declare-fun b!103925 () Bool)

(assert (=> b!103925 (= c!17936 (and ((_ is Cons!1608) (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (bvsgt (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))))) (_1!1197 lt!52325))))))

(assert (=> b!103925 (= e!67677 e!67676)))

(declare-fun bm!10911 () Bool)

(declare-fun call!10914 () List!1612)

(assert (=> bm!10911 (= call!10914 ($colon$colon!79 e!67678 (ite c!17939 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325)))))))

(declare-fun c!17937 () Bool)

(assert (=> bm!10911 (= c!17937 c!17939)))

(declare-fun b!103926 () Bool)

(assert (=> b!103926 (= e!67680 (contains!819 lt!53007 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!103927 () Bool)

(assert (=> b!103927 (= e!67679 call!10914)))

(declare-fun bm!10912 () Bool)

(assert (=> bm!10912 (= call!10915 call!10914)))

(declare-fun b!103928 () Bool)

(assert (=> b!103928 (= e!67676 call!10913)))

(declare-fun b!103929 () Bool)

(assert (=> b!103929 (= e!67679 e!67677)))

(assert (=> b!103929 (= c!17938 (and ((_ is Cons!1608) (t!5665 (toList!785 (+!134 lt!52333 lt!52331)))) (= (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52331))))) (_1!1197 lt!52325))))))

(assert (= (and d!27933 c!17939) b!103927))

(assert (= (and d!27933 (not c!17939)) b!103929))

(assert (= (and b!103929 c!17938) b!103920))

(assert (= (and b!103929 (not c!17938)) b!103925))

(assert (= (and b!103925 c!17936) b!103928))

(assert (= (and b!103925 (not c!17936)) b!103923))

(assert (= (or b!103928 b!103923) bm!10910))

(assert (= (or b!103920 bm!10910) bm!10912))

(assert (= (or b!103927 bm!10912) bm!10911))

(assert (= (and bm!10911 c!17937) b!103921))

(assert (= (and bm!10911 (not c!17937)) b!103924))

(assert (= (and d!27933 res!51844) b!103922))

(assert (= (and b!103922 res!51843) b!103926))

(declare-fun m!114843 () Bool)

(assert (=> b!103926 m!114843))

(declare-fun m!114845 () Bool)

(assert (=> d!27933 m!114845))

(assert (=> d!27933 m!114805))

(declare-fun m!114847 () Bool)

(assert (=> b!103922 m!114847))

(declare-fun m!114849 () Bool)

(assert (=> b!103921 m!114849))

(declare-fun m!114851 () Bool)

(assert (=> bm!10911 m!114851))

(assert (=> b!103619 d!27933))

(declare-fun d!27935 () Bool)

(assert (=> d!27935 (= (isEmpty!373 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) (not ((_ is Some!158) (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(assert (=> d!27739 d!27935))

(declare-fun b!103930 () Bool)

(declare-fun e!67682 () Bool)

(declare-fun e!67683 () Bool)

(assert (=> b!103930 (= e!67682 e!67683)))

(declare-fun lt!53008 () (_ BitVec 64))

(assert (=> b!103930 (= lt!53008 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000))))

(declare-fun lt!53009 () Unit!3141)

(assert (=> b!103930 (= lt!53009 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4261 (_2!1198 lt!52557)) lt!53008 #b00000000000000000000000000000000))))

(assert (=> b!103930 (arrayContainsKey!0 (_keys!4261 (_2!1198 lt!52557)) lt!53008 #b00000000000000000000000000000000)))

(declare-fun lt!53010 () Unit!3141)

(assert (=> b!103930 (= lt!53010 lt!53009)))

(declare-fun res!51846 () Bool)

(assert (=> b!103930 (= res!51846 (= (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000) (_keys!4261 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557))) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!103930 (=> (not res!51846) (not e!67683))))

(declare-fun bm!10913 () Bool)

(declare-fun call!10916 () Bool)

(assert (=> bm!10913 (= call!10916 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4261 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557))))))

(declare-fun b!103931 () Bool)

(declare-fun e!67681 () Bool)

(assert (=> b!103931 (= e!67681 e!67682)))

(declare-fun c!17940 () Bool)

(assert (=> b!103931 (= c!17940 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(declare-fun b!103932 () Bool)

(assert (=> b!103932 (= e!67683 call!10916)))

(declare-fun d!27937 () Bool)

(declare-fun res!51845 () Bool)

(assert (=> d!27937 (=> res!51845 e!67681)))

(assert (=> d!27937 (= res!51845 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(assert (=> d!27937 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557))) e!67681)))

(declare-fun b!103933 () Bool)

(assert (=> b!103933 (= e!67682 call!10916)))

(assert (= (and d!27937 (not res!51845)) b!103931))

(assert (= (and b!103931 c!17940) b!103930))

(assert (= (and b!103931 (not c!17940)) b!103933))

(assert (= (and b!103930 res!51846) b!103932))

(assert (= (or b!103932 b!103933) bm!10913))

(declare-fun m!114853 () Bool)

(assert (=> b!103930 m!114853))

(declare-fun m!114855 () Bool)

(assert (=> b!103930 m!114855))

(declare-fun m!114857 () Bool)

(assert (=> b!103930 m!114857))

(assert (=> b!103930 m!114853))

(declare-fun m!114859 () Bool)

(assert (=> b!103930 m!114859))

(declare-fun m!114861 () Bool)

(assert (=> bm!10913 m!114861))

(assert (=> b!103931 m!114853))

(assert (=> b!103931 m!114853))

(declare-fun m!114863 () Bool)

(assert (=> b!103931 m!114863))

(assert (=> b!103377 d!27937))

(declare-fun d!27939 () Bool)

(assert (=> d!27939 (= (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621)) (not (isEmpty!373 (getValueByKey!153 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))))

(declare-fun bs!4247 () Bool)

(assert (= bs!4247 d!27939))

(assert (=> bs!4247 m!114607))

(declare-fun m!114865 () Bool)

(assert (=> bs!4247 m!114865))

(assert (=> b!103796 d!27939))

(declare-fun b!103936 () Bool)

(declare-fun e!67685 () Option!159)

(assert (=> b!103936 (= e!67685 (getValueByKey!153 (t!5665 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!52621))))

(declare-fun b!103934 () Bool)

(declare-fun e!67684 () Option!159)

(assert (=> b!103934 (= e!67684 (Some!158 (_2!1197 (h!2204 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun d!27941 () Bool)

(declare-fun c!17941 () Bool)

(assert (=> d!27941 (= c!17941 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52621)))))

(assert (=> d!27941 (= (getValueByKey!153 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621) e!67684)))

(declare-fun b!103935 () Bool)

(assert (=> b!103935 (= e!67684 e!67685)))

(declare-fun c!17942 () Bool)

(assert (=> b!103935 (= c!17942 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (not (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52621))))))

(declare-fun b!103937 () Bool)

(assert (=> b!103937 (= e!67685 None!157)))

(assert (= (and d!27941 c!17941) b!103934))

(assert (= (and d!27941 (not c!17941)) b!103935))

(assert (= (and b!103935 c!17942) b!103936))

(assert (= (and b!103935 (not c!17942)) b!103937))

(declare-fun m!114867 () Bool)

(assert (=> b!103936 m!114867))

(assert (=> b!103796 d!27941))

(declare-fun e!67687 () Option!159)

(declare-fun b!103940 () Bool)

(assert (=> b!103940 (= e!67687 (getValueByKey!153 (t!5665 (toList!785 lt!52737)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103938 () Bool)

(declare-fun e!67686 () Option!159)

(assert (=> b!103938 (= e!67686 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52737)))))))

(declare-fun d!27943 () Bool)

(declare-fun c!17943 () Bool)

(assert (=> d!27943 (= c!17943 (and ((_ is Cons!1608) (toList!785 lt!52737)) (= (_1!1197 (h!2204 (toList!785 lt!52737))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!27943 (= (getValueByKey!153 (toList!785 lt!52737) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) e!67686)))

(declare-fun b!103939 () Bool)

(assert (=> b!103939 (= e!67686 e!67687)))

(declare-fun c!17944 () Bool)

(assert (=> b!103939 (= c!17944 (and ((_ is Cons!1608) (toList!785 lt!52737)) (not (= (_1!1197 (h!2204 (toList!785 lt!52737))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!103941 () Bool)

(assert (=> b!103941 (= e!67687 None!157)))

(assert (= (and d!27943 c!17943) b!103938))

(assert (= (and d!27943 (not c!17943)) b!103939))

(assert (= (and b!103939 c!17944) b!103940))

(assert (= (and b!103939 (not c!17944)) b!103941))

(declare-fun m!114869 () Bool)

(assert (=> b!103940 m!114869))

(assert (=> b!103574 d!27943))

(declare-fun d!27945 () Bool)

(declare-fun e!67689 () Bool)

(assert (=> d!27945 e!67689))

(declare-fun res!51847 () Bool)

(assert (=> d!27945 (=> res!51847 e!67689)))

(declare-fun lt!53013 () Bool)

(assert (=> d!27945 (= res!51847 (not lt!53013))))

(declare-fun lt!53012 () Bool)

(assert (=> d!27945 (= lt!53013 lt!53012)))

(declare-fun lt!53014 () Unit!3141)

(declare-fun e!67688 () Unit!3141)

(assert (=> d!27945 (= lt!53014 e!67688)))

(declare-fun c!17945 () Bool)

(assert (=> d!27945 (= c!17945 lt!53012)))

(assert (=> d!27945 (= lt!53012 (containsKey!157 (toList!785 lt!52876) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27945 (= (contains!816 lt!52876 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53013)))

(declare-fun b!103942 () Bool)

(declare-fun lt!53011 () Unit!3141)

(assert (=> b!103942 (= e!67688 lt!53011)))

(assert (=> b!103942 (= lt!53011 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52876) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103942 (isDefined!107 (getValueByKey!153 (toList!785 lt!52876) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103943 () Bool)

(declare-fun Unit!3173 () Unit!3141)

(assert (=> b!103943 (= e!67688 Unit!3173)))

(declare-fun b!103944 () Bool)

(assert (=> b!103944 (= e!67689 (isDefined!107 (getValueByKey!153 (toList!785 lt!52876) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27945 c!17945) b!103942))

(assert (= (and d!27945 (not c!17945)) b!103943))

(assert (= (and d!27945 (not res!51847)) b!103944))

(declare-fun m!114871 () Bool)

(assert (=> d!27945 m!114871))

(declare-fun m!114873 () Bool)

(assert (=> b!103942 m!114873))

(declare-fun m!114875 () Bool)

(assert (=> b!103942 m!114875))

(assert (=> b!103942 m!114875))

(declare-fun m!114877 () Bool)

(assert (=> b!103942 m!114877))

(assert (=> b!103944 m!114875))

(assert (=> b!103944 m!114875))

(assert (=> b!103944 m!114877))

(assert (=> bm!10889 d!27945))

(declare-fun d!27947 () Bool)

(assert (=> d!27947 (= (content!107 Nil!1610) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!27785 d!27947))

(declare-fun d!27949 () Bool)

(declare-fun res!51848 () Bool)

(declare-fun e!67690 () Bool)

(assert (=> d!27949 (=> res!51848 e!67690)))

(assert (=> d!27949 (= res!51848 (and ((_ is Cons!1608) (toList!785 e!67286)) (= (_1!1197 (h!2204 (toList!785 e!67286))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!27949 (= (containsKey!157 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!67690)))

(declare-fun b!103945 () Bool)

(declare-fun e!67691 () Bool)

(assert (=> b!103945 (= e!67690 e!67691)))

(declare-fun res!51849 () Bool)

(assert (=> b!103945 (=> (not res!51849) (not e!67691))))

(assert (=> b!103945 (= res!51849 (and (or (not ((_ is Cons!1608) (toList!785 e!67286))) (bvsle (_1!1197 (h!2204 (toList!785 e!67286))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) ((_ is Cons!1608) (toList!785 e!67286)) (bvslt (_1!1197 (h!2204 (toList!785 e!67286))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(declare-fun b!103946 () Bool)

(assert (=> b!103946 (= e!67691 (containsKey!157 (t!5665 (toList!785 e!67286)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27949 (not res!51848)) b!103945))

(assert (= (and b!103945 res!51849) b!103946))

(assert (=> b!103946 m!113535))

(declare-fun m!114879 () Bool)

(assert (=> b!103946 m!114879))

(assert (=> d!27819 d!27949))

(declare-fun b!103950 () Bool)

(declare-fun e!67692 () Bool)

(assert (=> b!103950 (= e!67692 (and (bvsge (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!495 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!27951 () Bool)

(declare-fun res!51851 () Bool)

(assert (=> d!27951 (=> (not res!51851) (not e!67692))))

(assert (=> d!27951 (= res!51851 (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992)))))))

(assert (=> d!27951 (= (simpleValid!73 (v!2867 (underlying!352 thiss!992))) e!67692)))

(declare-fun b!103949 () Bool)

(declare-fun res!51850 () Bool)

(assert (=> b!103949 (=> (not res!51850) (not e!67692))))

(assert (=> b!103949 (= res!51850 (= (size!2305 (v!2867 (underlying!352 thiss!992))) (bvadd (_size!495 (v!2867 (underlying!352 thiss!992))) (bvsdiv (bvadd (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!103947 () Bool)

(declare-fun res!51852 () Bool)

(assert (=> b!103947 (=> (not res!51852) (not e!67692))))

(assert (=> b!103947 (= res!51852 (and (= (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001)) (= (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992))))) (bvsge (_size!495 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!495 (v!2867 (underlying!352 thiss!992))) (bvadd (mask!6695 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!103948 () Bool)

(declare-fun res!51853 () Bool)

(assert (=> b!103948 (=> (not res!51853) (not e!67692))))

(assert (=> b!103948 (= res!51853 (bvsge (size!2305 (v!2867 (underlying!352 thiss!992))) (_size!495 (v!2867 (underlying!352 thiss!992)))))))

(assert (= (and d!27951 res!51851) b!103947))

(assert (= (and b!103947 res!51852) b!103948))

(assert (= (and b!103948 res!51853) b!103949))

(assert (= (and b!103949 res!51850) b!103950))

(assert (=> d!27951 m!113563))

(declare-fun m!114881 () Bool)

(assert (=> b!103949 m!114881))

(assert (=> b!103948 m!114881))

(assert (=> d!27721 d!27951))

(declare-fun d!27953 () Bool)

(declare-fun lt!53015 () Bool)

(assert (=> d!27953 (= lt!53015 (select (content!108 lt!52755) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun e!67693 () Bool)

(assert (=> d!27953 (= lt!53015 e!67693)))

(declare-fun res!51854 () Bool)

(assert (=> d!27953 (=> (not res!51854) (not e!67693))))

(assert (=> d!27953 (= res!51854 ((_ is Cons!1608) lt!52755))))

(assert (=> d!27953 (= (contains!819 lt!52755 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))) lt!53015)))

(declare-fun b!103951 () Bool)

(declare-fun e!67694 () Bool)

(assert (=> b!103951 (= e!67693 e!67694)))

(declare-fun res!51855 () Bool)

(assert (=> b!103951 (=> res!51855 e!67694)))

(assert (=> b!103951 (= res!51855 (= (h!2204 lt!52755) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!103952 () Bool)

(assert (=> b!103952 (= e!67694 (contains!819 (t!5665 lt!52755) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(assert (= (and d!27953 res!51854) b!103951))

(assert (= (and b!103951 (not res!51855)) b!103952))

(declare-fun m!114883 () Bool)

(assert (=> d!27953 m!114883))

(declare-fun m!114885 () Bool)

(assert (=> d!27953 m!114885))

(declare-fun m!114887 () Bool)

(assert (=> b!103952 m!114887))

(assert (=> b!103597 d!27953))

(declare-fun b!103955 () Bool)

(declare-fun e!67696 () Option!159)

(assert (=> b!103955 (= e!67696 (getValueByKey!153 (t!5665 (toList!785 lt!52927)) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!103953 () Bool)

(declare-fun e!67695 () Option!159)

(assert (=> b!103953 (= e!67695 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52927)))))))

(declare-fun c!17946 () Bool)

(declare-fun d!27955 () Bool)

(assert (=> d!27955 (= c!17946 (and ((_ is Cons!1608) (toList!785 lt!52927)) (= (_1!1197 (h!2204 (toList!785 lt!52927))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (=> d!27955 (= (getValueByKey!153 (toList!785 lt!52927) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) e!67695)))

(declare-fun b!103954 () Bool)

(assert (=> b!103954 (= e!67695 e!67696)))

(declare-fun c!17947 () Bool)

(assert (=> b!103954 (= c!17947 (and ((_ is Cons!1608) (toList!785 lt!52927)) (not (= (_1!1197 (h!2204 (toList!785 lt!52927))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun b!103956 () Bool)

(assert (=> b!103956 (= e!67696 None!157)))

(assert (= (and d!27955 c!17946) b!103953))

(assert (= (and d!27955 (not c!17946)) b!103954))

(assert (= (and b!103954 c!17947) b!103955))

(assert (= (and b!103954 (not c!17947)) b!103956))

(declare-fun m!114889 () Bool)

(assert (=> b!103955 m!114889))

(assert (=> b!103788 d!27955))

(declare-fun d!27957 () Bool)

(declare-fun e!67698 () Bool)

(assert (=> d!27957 e!67698))

(declare-fun res!51856 () Bool)

(assert (=> d!27957 (=> res!51856 e!67698)))

(declare-fun lt!53018 () Bool)

(assert (=> d!27957 (= res!51856 (not lt!53018))))

(declare-fun lt!53017 () Bool)

(assert (=> d!27957 (= lt!53018 lt!53017)))

(declare-fun lt!53019 () Unit!3141)

(declare-fun e!67697 () Unit!3141)

(assert (=> d!27957 (= lt!53019 e!67697)))

(declare-fun c!17948 () Bool)

(assert (=> d!27957 (= c!17948 lt!53017)))

(assert (=> d!27957 (= lt!53017 (containsKey!157 (toList!785 lt!52863) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27957 (= (contains!816 lt!52863 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53018)))

(declare-fun b!103957 () Bool)

(declare-fun lt!53016 () Unit!3141)

(assert (=> b!103957 (= e!67697 lt!53016)))

(assert (=> b!103957 (= lt!53016 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52863) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103957 (isDefined!107 (getValueByKey!153 (toList!785 lt!52863) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103958 () Bool)

(declare-fun Unit!3174 () Unit!3141)

(assert (=> b!103958 (= e!67697 Unit!3174)))

(declare-fun b!103959 () Bool)

(assert (=> b!103959 (= e!67698 (isDefined!107 (getValueByKey!153 (toList!785 lt!52863) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27957 c!17948) b!103957))

(assert (= (and d!27957 (not c!17948)) b!103958))

(assert (= (and d!27957 (not res!51856)) b!103959))

(declare-fun m!114891 () Bool)

(assert (=> d!27957 m!114891))

(declare-fun m!114893 () Bool)

(assert (=> b!103957 m!114893))

(declare-fun m!114895 () Bool)

(assert (=> b!103957 m!114895))

(assert (=> b!103957 m!114895))

(declare-fun m!114897 () Bool)

(assert (=> b!103957 m!114897))

(assert (=> b!103959 m!114895))

(assert (=> b!103959 m!114895))

(assert (=> b!103959 m!114897))

(assert (=> b!103693 d!27957))

(declare-fun e!67700 () Option!159)

(declare-fun b!103962 () Bool)

(assert (=> b!103962 (= e!67700 (getValueByKey!153 (t!5665 (t!5665 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!103960 () Bool)

(declare-fun e!67699 () Option!159)

(assert (=> b!103960 (= e!67699 (Some!158 (_2!1197 (h!2204 (t!5665 (toList!785 lt!52327))))))))

(declare-fun d!27959 () Bool)

(declare-fun c!17949 () Bool)

(assert (=> d!27959 (= c!17949 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52327))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52327)))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!27959 (= (getValueByKey!153 (t!5665 (toList!785 lt!52327)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!67699)))

(declare-fun b!103961 () Bool)

(assert (=> b!103961 (= e!67699 e!67700)))

(declare-fun c!17950 () Bool)

(assert (=> b!103961 (= c!17950 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52327))) (not (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52327)))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun b!103963 () Bool)

(assert (=> b!103963 (= e!67700 None!157)))

(assert (= (and d!27959 c!17949) b!103960))

(assert (= (and d!27959 (not c!17949)) b!103961))

(assert (= (and b!103961 c!17950) b!103962))

(assert (= (and b!103961 (not c!17950)) b!103963))

(assert (=> b!103962 m!113535))

(declare-fun m!114899 () Bool)

(assert (=> b!103962 m!114899))

(assert (=> b!103493 d!27959))

(declare-fun d!27961 () Bool)

(assert (=> d!27961 (= (apply!97 lt!52638 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52638) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4248 () Bool)

(assert (= bs!4248 d!27961))

(assert (=> bs!4248 m!114799))

(assert (=> bs!4248 m!114799))

(declare-fun m!114901 () Bool)

(assert (=> bs!4248 m!114901))

(assert (=> b!103390 d!27961))

(declare-fun d!27963 () Bool)

(declare-fun e!67702 () Bool)

(assert (=> d!27963 e!67702))

(declare-fun res!51857 () Bool)

(assert (=> d!27963 (=> res!51857 e!67702)))

(declare-fun lt!53022 () Bool)

(assert (=> d!27963 (= res!51857 (not lt!53022))))

(declare-fun lt!53021 () Bool)

(assert (=> d!27963 (= lt!53022 lt!53021)))

(declare-fun lt!53023 () Unit!3141)

(declare-fun e!67701 () Unit!3141)

(assert (=> d!27963 (= lt!53023 e!67701)))

(declare-fun c!17951 () Bool)

(assert (=> d!27963 (= c!17951 lt!53021)))

(assert (=> d!27963 (= lt!53021 (containsKey!157 (toList!785 lt!52741) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27963 (= (contains!816 lt!52741 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53022)))

(declare-fun b!103964 () Bool)

(declare-fun lt!53020 () Unit!3141)

(assert (=> b!103964 (= e!67701 lt!53020)))

(assert (=> b!103964 (= lt!53020 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52741) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> b!103964 (isDefined!107 (getValueByKey!153 (toList!785 lt!52741) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103965 () Bool)

(declare-fun Unit!3175 () Unit!3141)

(assert (=> b!103965 (= e!67701 Unit!3175)))

(declare-fun b!103966 () Bool)

(assert (=> b!103966 (= e!67702 (isDefined!107 (getValueByKey!153 (toList!785 lt!52741) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!27963 c!17951) b!103964))

(assert (= (and d!27963 (not c!17951)) b!103965))

(assert (= (and d!27963 (not res!51857)) b!103966))

(declare-fun m!114903 () Bool)

(assert (=> d!27963 m!114903))

(declare-fun m!114905 () Bool)

(assert (=> b!103964 m!114905))

(assert (=> b!103964 m!114247))

(assert (=> b!103964 m!114247))

(declare-fun m!114907 () Bool)

(assert (=> b!103964 m!114907))

(assert (=> b!103966 m!114247))

(assert (=> b!103966 m!114247))

(assert (=> b!103966 m!114907))

(assert (=> d!27767 d!27963))

(declare-fun e!67704 () Option!159)

(declare-fun b!103969 () Bool)

(assert (=> b!103969 (= e!67704 (getValueByKey!153 (t!5665 lt!52739) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103967 () Bool)

(declare-fun e!67703 () Option!159)

(assert (=> b!103967 (= e!67703 (Some!158 (_2!1197 (h!2204 lt!52739))))))

(declare-fun c!17952 () Bool)

(declare-fun d!27965 () Bool)

(assert (=> d!27965 (= c!17952 (and ((_ is Cons!1608) lt!52739) (= (_1!1197 (h!2204 lt!52739)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!27965 (= (getValueByKey!153 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) e!67703)))

(declare-fun b!103968 () Bool)

(assert (=> b!103968 (= e!67703 e!67704)))

(declare-fun c!17953 () Bool)

(assert (=> b!103968 (= c!17953 (and ((_ is Cons!1608) lt!52739) (not (= (_1!1197 (h!2204 lt!52739)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!103970 () Bool)

(assert (=> b!103970 (= e!67704 None!157)))

(assert (= (and d!27965 c!17952) b!103967))

(assert (= (and d!27965 (not c!17952)) b!103968))

(assert (= (and b!103968 c!17953) b!103969))

(assert (= (and b!103968 (not c!17953)) b!103970))

(declare-fun m!114909 () Bool)

(assert (=> b!103969 m!114909))

(assert (=> d!27767 d!27965))

(declare-fun d!27967 () Bool)

(assert (=> d!27967 (= (getValueByKey!153 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!53024 () Unit!3141)

(assert (=> d!27967 (= lt!53024 (choose!649 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun e!67705 () Bool)

(assert (=> d!27967 e!67705))

(declare-fun res!51858 () Bool)

(assert (=> d!27967 (=> (not res!51858) (not e!67705))))

(assert (=> d!27967 (= res!51858 (isStrictlySorted!303 lt!52739))))

(assert (=> d!27967 (= (lemmaContainsTupThenGetReturnValue!72 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53024)))

(declare-fun b!103971 () Bool)

(declare-fun res!51859 () Bool)

(assert (=> b!103971 (=> (not res!51859) (not e!67705))))

(assert (=> b!103971 (= res!51859 (containsKey!157 lt!52739 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103972 () Bool)

(assert (=> b!103972 (= e!67705 (contains!819 lt!52739 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!27967 res!51858) b!103971))

(assert (= (and b!103971 res!51859) b!103972))

(assert (=> d!27967 m!114241))

(declare-fun m!114911 () Bool)

(assert (=> d!27967 m!114911))

(declare-fun m!114913 () Bool)

(assert (=> d!27967 m!114913))

(declare-fun m!114915 () Bool)

(assert (=> b!103971 m!114915))

(declare-fun m!114917 () Bool)

(assert (=> b!103972 m!114917))

(assert (=> d!27767 d!27967))

(declare-fun b!103973 () Bool)

(declare-fun e!67707 () List!1612)

(declare-fun call!10919 () List!1612)

(assert (=> b!103973 (= e!67707 call!10919)))

(declare-fun e!67708 () List!1612)

(declare-fun b!103974 () Bool)

(assert (=> b!103974 (= e!67708 (insertStrictlySorted!75 (t!5665 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!103975 () Bool)

(declare-fun res!51860 () Bool)

(declare-fun e!67710 () Bool)

(assert (=> b!103975 (=> (not res!51860) (not e!67710))))

(declare-fun lt!53025 () List!1612)

(assert (=> b!103975 (= res!51860 (containsKey!157 lt!53025 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun bm!10914 () Bool)

(declare-fun call!10917 () List!1612)

(assert (=> bm!10914 (= call!10917 call!10919)))

(declare-fun b!103976 () Bool)

(declare-fun e!67706 () List!1612)

(assert (=> b!103976 (= e!67706 call!10917)))

(declare-fun c!17956 () Bool)

(declare-fun c!17954 () Bool)

(declare-fun b!103977 () Bool)

(assert (=> b!103977 (= e!67708 (ite c!17956 (t!5665 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (ite c!17954 (Cons!1608 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (t!5665 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) Nil!1609)))))

(declare-fun d!27969 () Bool)

(assert (=> d!27969 e!67710))

(declare-fun res!51861 () Bool)

(assert (=> d!27969 (=> (not res!51861) (not e!67710))))

(assert (=> d!27969 (= res!51861 (isStrictlySorted!303 lt!53025))))

(declare-fun e!67709 () List!1612)

(assert (=> d!27969 (= lt!53025 e!67709)))

(declare-fun c!17957 () Bool)

(assert (=> d!27969 (= c!17957 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!27969 (isStrictlySorted!303 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27969 (= (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53025)))

(declare-fun b!103978 () Bool)

(assert (=> b!103978 (= c!17954 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (bvsgt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> b!103978 (= e!67707 e!67706)))

(declare-fun bm!10915 () Bool)

(declare-fun call!10918 () List!1612)

(assert (=> bm!10915 (= call!10918 ($colon$colon!79 e!67708 (ite c!17957 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun c!17955 () Bool)

(assert (=> bm!10915 (= c!17955 c!17957)))

(declare-fun b!103979 () Bool)

(assert (=> b!103979 (= e!67710 (contains!819 lt!53025 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!103980 () Bool)

(assert (=> b!103980 (= e!67709 call!10918)))

(declare-fun bm!10916 () Bool)

(assert (=> bm!10916 (= call!10919 call!10918)))

(declare-fun b!103981 () Bool)

(assert (=> b!103981 (= e!67706 call!10917)))

(declare-fun b!103982 () Bool)

(assert (=> b!103982 (= e!67709 e!67707)))

(assert (=> b!103982 (= c!17956 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!27969 c!17957) b!103980))

(assert (= (and d!27969 (not c!17957)) b!103982))

(assert (= (and b!103982 c!17956) b!103973))

(assert (= (and b!103982 (not c!17956)) b!103978))

(assert (= (and b!103978 c!17954) b!103981))

(assert (= (and b!103978 (not c!17954)) b!103976))

(assert (= (or b!103981 b!103976) bm!10914))

(assert (= (or b!103973 bm!10914) bm!10916))

(assert (= (or b!103980 bm!10916) bm!10915))

(assert (= (and bm!10915 c!17955) b!103974))

(assert (= (and bm!10915 (not c!17955)) b!103977))

(assert (= (and d!27969 res!51861) b!103975))

(assert (= (and b!103975 res!51860) b!103979))

(declare-fun m!114919 () Bool)

(assert (=> b!103979 m!114919))

(declare-fun m!114921 () Bool)

(assert (=> d!27969 m!114921))

(declare-fun m!114923 () Bool)

(assert (=> d!27969 m!114923))

(declare-fun m!114925 () Bool)

(assert (=> b!103975 m!114925))

(declare-fun m!114927 () Bool)

(assert (=> b!103974 m!114927))

(declare-fun m!114929 () Bool)

(assert (=> bm!10915 m!114929))

(assert (=> d!27767 d!27969))

(declare-fun d!27971 () Bool)

(declare-fun res!51862 () Bool)

(declare-fun e!67711 () Bool)

(assert (=> d!27971 (=> res!51862 e!67711)))

(assert (=> d!27971 (= res!51862 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52327))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52327)))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!27971 (= (containsKey!157 (t!5665 (toList!785 lt!52327)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!67711)))

(declare-fun b!103983 () Bool)

(declare-fun e!67712 () Bool)

(assert (=> b!103983 (= e!67711 e!67712)))

(declare-fun res!51863 () Bool)

(assert (=> b!103983 (=> (not res!51863) (not e!67712))))

(assert (=> b!103983 (= res!51863 (and (or (not ((_ is Cons!1608) (t!5665 (toList!785 lt!52327)))) (bvsle (_1!1197 (h!2204 (t!5665 (toList!785 lt!52327)))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) ((_ is Cons!1608) (t!5665 (toList!785 lt!52327))) (bvslt (_1!1197 (h!2204 (t!5665 (toList!785 lt!52327)))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(declare-fun b!103984 () Bool)

(assert (=> b!103984 (= e!67712 (containsKey!157 (t!5665 (t!5665 (toList!785 lt!52327))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!27971 (not res!51862)) b!103983))

(assert (= (and b!103983 res!51863) b!103984))

(assert (=> b!103984 m!113535))

(declare-fun m!114931 () Bool)

(assert (=> b!103984 m!114931))

(assert (=> b!103726 d!27971))

(declare-fun d!27973 () Bool)

(assert (=> d!27973 (= (validMask!0 (mask!6695 newMap!16)) (and (or (= (mask!6695 newMap!16) #b00000000000000000000000000000111) (= (mask!6695 newMap!16) #b00000000000000000000000000001111) (= (mask!6695 newMap!16) #b00000000000000000000000000011111) (= (mask!6695 newMap!16) #b00000000000000000000000000111111) (= (mask!6695 newMap!16) #b00000000000000000000000001111111) (= (mask!6695 newMap!16) #b00000000000000000000000011111111) (= (mask!6695 newMap!16) #b00000000000000000000000111111111) (= (mask!6695 newMap!16) #b00000000000000000000001111111111) (= (mask!6695 newMap!16) #b00000000000000000000011111111111) (= (mask!6695 newMap!16) #b00000000000000000000111111111111) (= (mask!6695 newMap!16) #b00000000000000000001111111111111) (= (mask!6695 newMap!16) #b00000000000000000011111111111111) (= (mask!6695 newMap!16) #b00000000000000000111111111111111) (= (mask!6695 newMap!16) #b00000000000000001111111111111111) (= (mask!6695 newMap!16) #b00000000000000011111111111111111) (= (mask!6695 newMap!16) #b00000000000000111111111111111111) (= (mask!6695 newMap!16) #b00000000000001111111111111111111) (= (mask!6695 newMap!16) #b00000000000011111111111111111111) (= (mask!6695 newMap!16) #b00000000000111111111111111111111) (= (mask!6695 newMap!16) #b00000000001111111111111111111111) (= (mask!6695 newMap!16) #b00000000011111111111111111111111) (= (mask!6695 newMap!16) #b00000000111111111111111111111111) (= (mask!6695 newMap!16) #b00000001111111111111111111111111) (= (mask!6695 newMap!16) #b00000011111111111111111111111111) (= (mask!6695 newMap!16) #b00000111111111111111111111111111) (= (mask!6695 newMap!16) #b00001111111111111111111111111111) (= (mask!6695 newMap!16) #b00011111111111111111111111111111) (= (mask!6695 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6695 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!27693 d!27973))

(declare-fun d!27975 () Bool)

(declare-fun e!67714 () Bool)

(assert (=> d!27975 e!67714))

(declare-fun res!51864 () Bool)

(assert (=> d!27975 (=> res!51864 e!67714)))

(declare-fun lt!53028 () Bool)

(assert (=> d!27975 (= res!51864 (not lt!53028))))

(declare-fun lt!53027 () Bool)

(assert (=> d!27975 (= lt!53028 lt!53027)))

(declare-fun lt!53029 () Unit!3141)

(declare-fun e!67713 () Unit!3141)

(assert (=> d!27975 (= lt!53029 e!67713)))

(declare-fun c!17958 () Bool)

(assert (=> d!27975 (= c!17958 lt!53027)))

(assert (=> d!27975 (= lt!53027 (containsKey!157 (toList!785 lt!52638) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!27975 (= (contains!816 lt!52638 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) lt!53028)))

(declare-fun b!103985 () Bool)

(declare-fun lt!53026 () Unit!3141)

(assert (=> b!103985 (= e!67713 lt!53026)))

(assert (=> b!103985 (= lt!53026 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52638) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103985 (isDefined!107 (getValueByKey!153 (toList!785 lt!52638) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103986 () Bool)

(declare-fun Unit!3176 () Unit!3141)

(assert (=> b!103986 (= e!67713 Unit!3176)))

(declare-fun b!103987 () Bool)

(assert (=> b!103987 (= e!67714 (isDefined!107 (getValueByKey!153 (toList!785 lt!52638) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!27975 c!17958) b!103985))

(assert (= (and d!27975 (not c!17958)) b!103986))

(assert (= (and d!27975 (not res!51864)) b!103987))

(assert (=> d!27975 m!113969))

(declare-fun m!114933 () Bool)

(assert (=> d!27975 m!114933))

(assert (=> b!103985 m!113969))

(declare-fun m!114935 () Bool)

(assert (=> b!103985 m!114935))

(assert (=> b!103985 m!113969))

(declare-fun m!114937 () Bool)

(assert (=> b!103985 m!114937))

(assert (=> b!103985 m!114937))

(declare-fun m!114939 () Bool)

(assert (=> b!103985 m!114939))

(assert (=> b!103987 m!113969))

(assert (=> b!103987 m!114937))

(assert (=> b!103987 m!114937))

(assert (=> b!103987 m!114939))

(assert (=> b!103402 d!27975))

(assert (=> d!27807 d!27647))

(declare-fun b!103990 () Bool)

(declare-fun e!67716 () Option!159)

(assert (=> b!103990 (= e!67716 (getValueByKey!153 (t!5665 (t!5665 (toList!785 lt!52453))) (_1!1197 lt!52325)))))

(declare-fun b!103988 () Bool)

(declare-fun e!67715 () Option!159)

(assert (=> b!103988 (= e!67715 (Some!158 (_2!1197 (h!2204 (t!5665 (toList!785 lt!52453))))))))

(declare-fun d!27977 () Bool)

(declare-fun c!17959 () Bool)

(assert (=> d!27977 (= c!17959 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52453))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52453)))) (_1!1197 lt!52325))))))

(assert (=> d!27977 (= (getValueByKey!153 (t!5665 (toList!785 lt!52453)) (_1!1197 lt!52325)) e!67715)))

(declare-fun b!103989 () Bool)

(assert (=> b!103989 (= e!67715 e!67716)))

(declare-fun c!17960 () Bool)

(assert (=> b!103989 (= c!17960 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52453))) (not (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52453)))) (_1!1197 lt!52325)))))))

(declare-fun b!103991 () Bool)

(assert (=> b!103991 (= e!67716 None!157)))

(assert (= (and d!27977 c!17959) b!103988))

(assert (= (and d!27977 (not c!17959)) b!103989))

(assert (= (and b!103989 c!17960) b!103990))

(assert (= (and b!103989 (not c!17960)) b!103991))

(declare-fun m!114941 () Bool)

(assert (=> b!103990 m!114941))

(assert (=> b!103468 d!27977))

(declare-fun d!27979 () Bool)

(assert (=> d!27979 (= (get!1326 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2866 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103403 d!27979))

(declare-fun d!27981 () Bool)

(assert (=> d!27981 (= (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52617)) (v!2873 (getValueByKey!153 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52617)))))

(assert (=> d!27871 d!27981))

(declare-fun b!103994 () Bool)

(declare-fun e!67718 () Option!159)

(assert (=> b!103994 (= e!67718 (getValueByKey!153 (t!5665 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!52617))))

(declare-fun e!67717 () Option!159)

(declare-fun b!103992 () Bool)

(assert (=> b!103992 (= e!67717 (Some!158 (_2!1197 (h!2204 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun c!17961 () Bool)

(declare-fun d!27983 () Bool)

(assert (=> d!27983 (= c!17961 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52617)))))

(assert (=> d!27983 (= (getValueByKey!153 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52617) e!67717)))

(declare-fun b!103993 () Bool)

(assert (=> b!103993 (= e!67717 e!67718)))

(declare-fun c!17962 () Bool)

(assert (=> b!103993 (= c!17962 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (not (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52617))))))

(declare-fun b!103995 () Bool)

(assert (=> b!103995 (= e!67718 None!157)))

(assert (= (and d!27983 c!17961) b!103992))

(assert (= (and d!27983 (not c!17961)) b!103993))

(assert (= (and b!103993 c!17962) b!103994))

(assert (= (and b!103993 (not c!17962)) b!103995))

(declare-fun m!114943 () Bool)

(assert (=> b!103994 m!114943))

(assert (=> d!27871 d!27983))

(declare-fun d!27985 () Bool)

(declare-fun e!67720 () Bool)

(assert (=> d!27985 e!67720))

(declare-fun res!51865 () Bool)

(assert (=> d!27985 (=> res!51865 e!67720)))

(declare-fun lt!53032 () Bool)

(assert (=> d!27985 (= res!51865 (not lt!53032))))

(declare-fun lt!53031 () Bool)

(assert (=> d!27985 (= lt!53032 lt!53031)))

(declare-fun lt!53033 () Unit!3141)

(declare-fun e!67719 () Unit!3141)

(assert (=> d!27985 (= lt!53033 e!67719)))

(declare-fun c!17963 () Bool)

(assert (=> d!27985 (= c!17963 lt!53031)))

(assert (=> d!27985 (= lt!53031 (containsKey!157 (toList!785 lt!52749) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!27985 (= (contains!816 lt!52749 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53032)))

(declare-fun b!103996 () Bool)

(declare-fun lt!53030 () Unit!3141)

(assert (=> b!103996 (= e!67719 lt!53030)))

(assert (=> b!103996 (= lt!53030 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52749) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!103996 (isDefined!107 (getValueByKey!153 (toList!785 lt!52749) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!103997 () Bool)

(declare-fun Unit!3177 () Unit!3141)

(assert (=> b!103997 (= e!67719 Unit!3177)))

(declare-fun b!103998 () Bool)

(assert (=> b!103998 (= e!67720 (isDefined!107 (getValueByKey!153 (toList!785 lt!52749) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!27985 c!17963) b!103996))

(assert (= (and d!27985 (not c!17963)) b!103997))

(assert (= (and d!27985 (not res!51865)) b!103998))

(declare-fun m!114945 () Bool)

(assert (=> d!27985 m!114945))

(declare-fun m!114947 () Bool)

(assert (=> b!103996 m!114947))

(assert (=> b!103996 m!114271))

(assert (=> b!103996 m!114271))

(declare-fun m!114949 () Bool)

(assert (=> b!103996 m!114949))

(assert (=> b!103998 m!114271))

(assert (=> b!103998 m!114271))

(assert (=> b!103998 m!114949))

(assert (=> d!27773 d!27985))

(declare-fun b!104001 () Bool)

(declare-fun e!67722 () Option!159)

(assert (=> b!104001 (= e!67722 (getValueByKey!153 (t!5665 lt!52747) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!103999 () Bool)

(declare-fun e!67721 () Option!159)

(assert (=> b!103999 (= e!67721 (Some!158 (_2!1197 (h!2204 lt!52747))))))

(declare-fun d!27987 () Bool)

(declare-fun c!17964 () Bool)

(assert (=> d!27987 (= c!17964 (and ((_ is Cons!1608) lt!52747) (= (_1!1197 (h!2204 lt!52747)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!27987 (= (getValueByKey!153 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!67721)))

(declare-fun b!104000 () Bool)

(assert (=> b!104000 (= e!67721 e!67722)))

(declare-fun c!17965 () Bool)

(assert (=> b!104000 (= c!17965 (and ((_ is Cons!1608) lt!52747) (not (= (_1!1197 (h!2204 lt!52747)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104002 () Bool)

(assert (=> b!104002 (= e!67722 None!157)))

(assert (= (and d!27987 c!17964) b!103999))

(assert (= (and d!27987 (not c!17964)) b!104000))

(assert (= (and b!104000 c!17965) b!104001))

(assert (= (and b!104000 (not c!17965)) b!104002))

(declare-fun m!114951 () Bool)

(assert (=> b!104001 m!114951))

(assert (=> d!27773 d!27987))

(declare-fun d!27989 () Bool)

(assert (=> d!27989 (= (getValueByKey!153 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53034 () Unit!3141)

(assert (=> d!27989 (= lt!53034 (choose!649 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!67723 () Bool)

(assert (=> d!27989 e!67723))

(declare-fun res!51866 () Bool)

(assert (=> d!27989 (=> (not res!51866) (not e!67723))))

(assert (=> d!27989 (= res!51866 (isStrictlySorted!303 lt!52747))))

(assert (=> d!27989 (= (lemmaContainsTupThenGetReturnValue!72 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53034)))

(declare-fun b!104003 () Bool)

(declare-fun res!51867 () Bool)

(assert (=> b!104003 (=> (not res!51867) (not e!67723))))

(assert (=> b!104003 (= res!51867 (containsKey!157 lt!52747 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104004 () Bool)

(assert (=> b!104004 (= e!67723 (contains!819 lt!52747 (tuple2!2373 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!27989 res!51866) b!104003))

(assert (= (and b!104003 res!51867) b!104004))

(assert (=> d!27989 m!114265))

(declare-fun m!114953 () Bool)

(assert (=> d!27989 m!114953))

(declare-fun m!114955 () Bool)

(assert (=> d!27989 m!114955))

(declare-fun m!114957 () Bool)

(assert (=> b!104003 m!114957))

(declare-fun m!114959 () Bool)

(assert (=> b!104004 m!114959))

(assert (=> d!27773 d!27989))

(declare-fun b!104005 () Bool)

(declare-fun e!67725 () List!1612)

(declare-fun call!10922 () List!1612)

(assert (=> b!104005 (= e!67725 call!10922)))

(declare-fun b!104006 () Bool)

(declare-fun e!67726 () List!1612)

(assert (=> b!104006 (= e!67726 (insertStrictlySorted!75 (t!5665 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104007 () Bool)

(declare-fun res!51868 () Bool)

(declare-fun e!67728 () Bool)

(assert (=> b!104007 (=> (not res!51868) (not e!67728))))

(declare-fun lt!53035 () List!1612)

(assert (=> b!104007 (= res!51868 (containsKey!157 lt!53035 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!10917 () Bool)

(declare-fun call!10920 () List!1612)

(assert (=> bm!10917 (= call!10920 call!10922)))

(declare-fun b!104008 () Bool)

(declare-fun e!67724 () List!1612)

(assert (=> b!104008 (= e!67724 call!10920)))

(declare-fun b!104009 () Bool)

(declare-fun c!17968 () Bool)

(declare-fun c!17966 () Bool)

(assert (=> b!104009 (= e!67726 (ite c!17968 (t!5665 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (ite c!17966 (Cons!1608 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (t!5665 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))) Nil!1609)))))

(declare-fun d!27991 () Bool)

(assert (=> d!27991 e!67728))

(declare-fun res!51869 () Bool)

(assert (=> d!27991 (=> (not res!51869) (not e!67728))))

(assert (=> d!27991 (= res!51869 (isStrictlySorted!303 lt!53035))))

(declare-fun e!67727 () List!1612)

(assert (=> d!27991 (= lt!53035 e!67727)))

(declare-fun c!17969 () Bool)

(assert (=> d!27991 (= c!17969 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!27991 (isStrictlySorted!303 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!27991 (= (insertStrictlySorted!75 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53035)))

(declare-fun b!104010 () Bool)

(assert (=> b!104010 (= c!17966 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (bvsgt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104010 (= e!67725 e!67724)))

(declare-fun bm!10918 () Bool)

(declare-fun call!10921 () List!1612)

(assert (=> bm!10918 (= call!10921 ($colon$colon!79 e!67726 (ite c!17969 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (tuple2!2373 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!17967 () Bool)

(assert (=> bm!10918 (= c!17967 c!17969)))

(declare-fun b!104011 () Bool)

(assert (=> b!104011 (= e!67728 (contains!819 lt!53035 (tuple2!2373 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104012 () Bool)

(assert (=> b!104012 (= e!67727 call!10921)))

(declare-fun bm!10919 () Bool)

(assert (=> bm!10919 (= call!10922 call!10921)))

(declare-fun b!104013 () Bool)

(assert (=> b!104013 (= e!67724 call!10920)))

(declare-fun b!104014 () Bool)

(assert (=> b!104014 (= e!67727 e!67725)))

(assert (=> b!104014 (= c!17968 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!27991 c!17969) b!104012))

(assert (= (and d!27991 (not c!17969)) b!104014))

(assert (= (and b!104014 c!17968) b!104005))

(assert (= (and b!104014 (not c!17968)) b!104010))

(assert (= (and b!104010 c!17966) b!104013))

(assert (= (and b!104010 (not c!17966)) b!104008))

(assert (= (or b!104013 b!104008) bm!10917))

(assert (= (or b!104005 bm!10917) bm!10919))

(assert (= (or b!104012 bm!10919) bm!10918))

(assert (= (and bm!10918 c!17967) b!104006))

(assert (= (and bm!10918 (not c!17967)) b!104009))

(assert (= (and d!27991 res!51869) b!104007))

(assert (= (and b!104007 res!51868) b!104011))

(declare-fun m!114961 () Bool)

(assert (=> b!104011 m!114961))

(declare-fun m!114963 () Bool)

(assert (=> d!27991 m!114963))

(declare-fun m!114965 () Bool)

(assert (=> d!27991 m!114965))

(declare-fun m!114967 () Bool)

(assert (=> b!104007 m!114967))

(declare-fun m!114969 () Bool)

(assert (=> b!104006 m!114969))

(declare-fun m!114971 () Bool)

(assert (=> bm!10918 m!114971))

(assert (=> d!27773 d!27991))

(declare-fun b!104015 () Bool)

(declare-fun e!67730 () Bool)

(declare-fun lt!53040 () ListLongMap!1539)

(assert (=> b!104015 (= e!67730 (isEmpty!371 lt!53040))))

(declare-fun d!27993 () Bool)

(declare-fun e!67735 () Bool)

(assert (=> d!27993 e!67735))

(declare-fun res!51870 () Bool)

(assert (=> d!27993 (=> (not res!51870) (not e!67735))))

(assert (=> d!27993 (= res!51870 (not (contains!816 lt!53040 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67731 () ListLongMap!1539)

(assert (=> d!27993 (= lt!53040 e!67731)))

(declare-fun c!17973 () Bool)

(assert (=> d!27993 (= c!17973 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!27993 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!27993 (= (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53040)))

(declare-fun b!104016 () Bool)

(declare-fun e!67733 () Bool)

(assert (=> b!104016 (= e!67733 e!67730)))

(declare-fun c!17971 () Bool)

(assert (=> b!104016 (= c!17971 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104017 () Bool)

(assert (=> b!104017 (= e!67731 (ListLongMap!1540 Nil!1609))))

(declare-fun b!104018 () Bool)

(assert (=> b!104018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> b!104018 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))))))))

(declare-fun e!67729 () Bool)

(assert (=> b!104018 (= e!67729 (= (apply!97 lt!53040 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104019 () Bool)

(declare-fun e!67732 () Bool)

(assert (=> b!104019 (= e!67732 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104019 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104020 () Bool)

(assert (=> b!104020 (= e!67735 e!67733)))

(declare-fun c!17972 () Bool)

(assert (=> b!104020 (= c!17972 e!67732)))

(declare-fun res!51873 () Bool)

(assert (=> b!104020 (=> (not res!51873) (not e!67732))))

(assert (=> b!104020 (= res!51873 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104021 () Bool)

(declare-fun lt!53037 () Unit!3141)

(declare-fun lt!53039 () Unit!3141)

(assert (=> b!104021 (= lt!53037 lt!53039)))

(declare-fun lt!53041 () ListLongMap!1539)

(declare-fun lt!53036 () (_ BitVec 64))

(declare-fun lt!53038 () V!3209)

(declare-fun lt!53042 () (_ BitVec 64))

(assert (=> b!104021 (not (contains!816 (+!134 lt!53041 (tuple2!2373 lt!53036 lt!53038)) lt!53042))))

(assert (=> b!104021 (= lt!53039 (addStillNotContains!46 lt!53041 lt!53036 lt!53038 lt!53042))))

(assert (=> b!104021 (= lt!53042 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104021 (= lt!53038 (get!1325 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104021 (= lt!53036 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10923 () ListLongMap!1539)

(assert (=> b!104021 (= lt!53041 call!10923)))

(declare-fun e!67734 () ListLongMap!1539)

(assert (=> b!104021 (= e!67734 (+!134 call!10923 (tuple2!2373 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (get!1325 (select (arr!2045 (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104022 () Bool)

(assert (=> b!104022 (= e!67734 call!10923)))

(declare-fun b!104023 () Bool)

(assert (=> b!104023 (= e!67733 e!67729)))

(assert (=> b!104023 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun res!51872 () Bool)

(assert (=> b!104023 (= res!51872 (contains!816 lt!53040 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104023 (=> (not res!51872) (not e!67729))))

(declare-fun bm!10920 () Bool)

(assert (=> bm!10920 (= call!10923 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16)))))

(declare-fun b!104024 () Bool)

(assert (=> b!104024 (= e!67730 (= lt!53040 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (ite (or c!17763 c!17753) (_values!2543 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) (mask!6695 newMap!16) (ite c!17763 (ite c!17759 lt!52552 lt!52534) (extraKeys!2369 newMap!16)) (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16))))))

(declare-fun b!104025 () Bool)

(assert (=> b!104025 (= e!67731 e!67734)))

(declare-fun c!17970 () Bool)

(assert (=> b!104025 (= c!17970 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104026 () Bool)

(declare-fun res!51871 () Bool)

(assert (=> b!104026 (=> (not res!51871) (not e!67735))))

(assert (=> b!104026 (= res!51871 (not (contains!816 lt!53040 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27993 c!17973) b!104017))

(assert (= (and d!27993 (not c!17973)) b!104025))

(assert (= (and b!104025 c!17970) b!104021))

(assert (= (and b!104025 (not c!17970)) b!104022))

(assert (= (or b!104021 b!104022) bm!10920))

(assert (= (and d!27993 res!51870) b!104026))

(assert (= (and b!104026 res!51871) b!104020))

(assert (= (and b!104020 res!51873) b!104019))

(assert (= (and b!104020 c!17972) b!104023))

(assert (= (and b!104020 (not c!17972)) b!104016))

(assert (= (and b!104023 res!51872) b!104018))

(assert (= (and b!104016 c!17971) b!104024))

(assert (= (and b!104016 (not c!17971)) b!104015))

(declare-fun b_lambda!4637 () Bool)

(assert (=> (not b_lambda!4637) (not b!104018)))

(assert (=> b!104018 t!5677))

(declare-fun b_and!6417 () Bool)

(assert (= b_and!6413 (and (=> t!5677 result!3431) b_and!6417)))

(assert (=> b!104018 t!5679))

(declare-fun b_and!6419 () Bool)

(assert (= b_and!6415 (and (=> t!5679 result!3433) b_and!6419)))

(declare-fun b_lambda!4639 () Bool)

(assert (=> (not b_lambda!4639) (not b!104021)))

(assert (=> b!104021 t!5677))

(declare-fun b_and!6421 () Bool)

(assert (= b_and!6417 (and (=> t!5677 result!3431) b_and!6421)))

(assert (=> b!104021 t!5679))

(declare-fun b_and!6423 () Bool)

(assert (= b_and!6419 (and (=> t!5679 result!3433) b_and!6423)))

(assert (=> b!104019 m!113969))

(assert (=> b!104019 m!113969))

(assert (=> b!104019 m!113997))

(declare-fun m!114973 () Bool)

(assert (=> b!104015 m!114973))

(assert (=> b!104023 m!113969))

(assert (=> b!104023 m!113969))

(declare-fun m!114975 () Bool)

(assert (=> b!104023 m!114975))

(declare-fun m!114977 () Bool)

(assert (=> d!27993 m!114977))

(assert (=> d!27993 m!113985))

(declare-fun m!114979 () Bool)

(assert (=> b!104026 m!114979))

(assert (=> b!104018 m!114473))

(assert (=> b!104018 m!113969))

(declare-fun m!114981 () Bool)

(assert (=> b!104018 m!114981))

(assert (=> b!104018 m!113987))

(assert (=> b!104018 m!114473))

(assert (=> b!104018 m!113987))

(assert (=> b!104018 m!114475))

(assert (=> b!104018 m!113969))

(declare-fun m!114983 () Bool)

(assert (=> bm!10920 m!114983))

(assert (=> b!104024 m!114983))

(assert (=> b!104025 m!113969))

(assert (=> b!104025 m!113969))

(assert (=> b!104025 m!113997))

(assert (=> b!104021 m!114473))

(declare-fun m!114985 () Bool)

(assert (=> b!104021 m!114985))

(assert (=> b!104021 m!114473))

(assert (=> b!104021 m!113987))

(assert (=> b!104021 m!114475))

(declare-fun m!114987 () Bool)

(assert (=> b!104021 m!114987))

(declare-fun m!114989 () Bool)

(assert (=> b!104021 m!114989))

(assert (=> b!104021 m!113969))

(declare-fun m!114991 () Bool)

(assert (=> b!104021 m!114991))

(assert (=> b!104021 m!113987))

(assert (=> b!104021 m!114987))

(assert (=> bm!10886 d!27993))

(declare-fun d!27995 () Bool)

(declare-fun e!67736 () Bool)

(assert (=> d!27995 e!67736))

(declare-fun res!51875 () Bool)

(assert (=> d!27995 (=> (not res!51875) (not e!67736))))

(declare-fun lt!53046 () ListLongMap!1539)

(assert (=> d!27995 (= res!51875 (contains!816 lt!53046 (_1!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun lt!53044 () List!1612)

(assert (=> d!27995 (= lt!53046 (ListLongMap!1540 lt!53044))))

(declare-fun lt!53043 () Unit!3141)

(declare-fun lt!53045 () Unit!3141)

(assert (=> d!27995 (= lt!53043 lt!53045)))

(assert (=> d!27995 (= (getValueByKey!153 lt!53044 (_1!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!27995 (= lt!53045 (lemmaContainsTupThenGetReturnValue!72 lt!53044 (_1!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!27995 (= lt!53044 (insertStrictlySorted!75 (toList!785 (ite c!17816 call!10857 (ite c!17817 call!10855 call!10859))) (_1!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!27995 (= (+!134 (ite c!17816 call!10857 (ite c!17817 call!10855 call!10859)) (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) lt!53046)))

(declare-fun b!104027 () Bool)

(declare-fun res!51874 () Bool)

(assert (=> b!104027 (=> (not res!51874) (not e!67736))))

(assert (=> b!104027 (= res!51874 (= (getValueByKey!153 (toList!785 lt!53046) (_1!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))))

(declare-fun b!104028 () Bool)

(assert (=> b!104028 (= e!67736 (contains!819 (toList!785 lt!53046) (ite (or c!17816 c!17817) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (= (and d!27995 res!51875) b!104027))

(assert (= (and b!104027 res!51874) b!104028))

(declare-fun m!114993 () Bool)

(assert (=> d!27995 m!114993))

(declare-fun m!114995 () Bool)

(assert (=> d!27995 m!114995))

(declare-fun m!114997 () Bool)

(assert (=> d!27995 m!114997))

(declare-fun m!114999 () Bool)

(assert (=> d!27995 m!114999))

(declare-fun m!115001 () Bool)

(assert (=> b!104027 m!115001))

(declare-fun m!115003 () Bool)

(assert (=> b!104028 m!115003))

(assert (=> bm!10852 d!27995))

(declare-fun d!27997 () Bool)

(declare-fun lt!53047 () Bool)

(assert (=> d!27997 (= lt!53047 (select (content!108 lt!52764) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun e!67737 () Bool)

(assert (=> d!27997 (= lt!53047 e!67737)))

(declare-fun res!51876 () Bool)

(assert (=> d!27997 (=> (not res!51876) (not e!67737))))

(assert (=> d!27997 (= res!51876 ((_ is Cons!1608) lt!52764))))

(assert (=> d!27997 (= (contains!819 lt!52764 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))) lt!53047)))

(declare-fun b!104029 () Bool)

(declare-fun e!67738 () Bool)

(assert (=> b!104029 (= e!67737 e!67738)))

(declare-fun res!51877 () Bool)

(assert (=> b!104029 (=> res!51877 e!67738)))

(assert (=> b!104029 (= res!51877 (= (h!2204 lt!52764) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!104030 () Bool)

(assert (=> b!104030 (= e!67738 (contains!819 (t!5665 lt!52764) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(assert (= (and d!27997 res!51876) b!104029))

(assert (= (and b!104029 (not res!51877)) b!104030))

(declare-fun m!115005 () Bool)

(assert (=> d!27997 m!115005))

(declare-fun m!115007 () Bool)

(assert (=> d!27997 m!115007))

(declare-fun m!115009 () Bool)

(assert (=> b!104030 m!115009))

(assert (=> b!103624 d!27997))

(declare-fun d!27999 () Bool)

(declare-fun lt!53048 () Bool)

(assert (=> d!27999 (= lt!53048 (select (content!108 (toList!785 lt!52664)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!67739 () Bool)

(assert (=> d!27999 (= lt!53048 e!67739)))

(declare-fun res!51878 () Bool)

(assert (=> d!27999 (=> (not res!51878) (not e!67739))))

(assert (=> d!27999 (= res!51878 ((_ is Cons!1608) (toList!785 lt!52664)))))

(assert (=> d!27999 (= (contains!819 (toList!785 lt!52664) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53048)))

(declare-fun b!104031 () Bool)

(declare-fun e!67740 () Bool)

(assert (=> b!104031 (= e!67739 e!67740)))

(declare-fun res!51879 () Bool)

(assert (=> b!104031 (=> res!51879 e!67740)))

(assert (=> b!104031 (= res!51879 (= (h!2204 (toList!785 lt!52664)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104032 () Bool)

(assert (=> b!104032 (= e!67740 (contains!819 (t!5665 (toList!785 lt!52664)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!27999 res!51878) b!104031))

(assert (= (and b!104031 (not res!51879)) b!104032))

(declare-fun m!115011 () Bool)

(assert (=> d!27999 m!115011))

(declare-fun m!115013 () Bool)

(assert (=> d!27999 m!115013))

(declare-fun m!115015 () Bool)

(assert (=> b!104032 m!115015))

(assert (=> b!103415 d!27999))

(declare-fun d!28001 () Bool)

(declare-fun e!67752 () Bool)

(assert (=> d!28001 e!67752))

(declare-fun c!17981 () Bool)

(declare-fun lt!53054 () SeekEntryResult!261)

(assert (=> d!28001 (= c!17981 (and ((_ is Intermediate!261) lt!53054) (undefined!1073 lt!53054)))))

(declare-fun e!67755 () SeekEntryResult!261)

(assert (=> d!28001 (= lt!53054 e!67755)))

(declare-fun c!17980 () Bool)

(assert (=> d!28001 (= c!17980 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!53053 () (_ BitVec 64))

(assert (=> d!28001 (= lt!53053 (select (arr!2044 (_keys!4261 newMap!16)) (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16))))))

(assert (=> d!28001 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28001 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)) lt!53054)))

(declare-fun b!104051 () Bool)

(assert (=> b!104051 (and (bvsge (index!3193 lt!53054) #b00000000000000000000000000000000) (bvslt (index!3193 lt!53054) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun res!51887 () Bool)

(assert (=> b!104051 (= res!51887 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3193 lt!53054)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun e!67753 () Bool)

(assert (=> b!104051 (=> res!51887 e!67753)))

(declare-fun e!67751 () Bool)

(assert (=> b!104051 (= e!67751 e!67753)))

(declare-fun b!104052 () Bool)

(assert (=> b!104052 (and (bvsge (index!3193 lt!53054) #b00000000000000000000000000000000) (bvslt (index!3193 lt!53054) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun res!51886 () Bool)

(assert (=> b!104052 (= res!51886 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3193 lt!53054)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104052 (=> res!51886 e!67753)))

(declare-fun b!104053 () Bool)

(assert (=> b!104053 (= e!67752 e!67751)))

(declare-fun res!51888 () Bool)

(assert (=> b!104053 (= res!51888 (and ((_ is Intermediate!261) lt!53054) (not (undefined!1073 lt!53054)) (bvslt (x!13502 lt!53054) #b01111111111111111111111111111110) (bvsge (x!13502 lt!53054) #b00000000000000000000000000000000) (bvsge (x!13502 lt!53054) #b00000000000000000000000000000000)))))

(assert (=> b!104053 (=> (not res!51888) (not e!67751))))

(declare-fun b!104054 () Bool)

(declare-fun e!67754 () SeekEntryResult!261)

(assert (=> b!104054 (= e!67754 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16)) #b00000000000000000000000000000000 (mask!6695 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!104055 () Bool)

(assert (=> b!104055 (and (bvsge (index!3193 lt!53054) #b00000000000000000000000000000000) (bvslt (index!3193 lt!53054) (size!2299 (_keys!4261 newMap!16))))))

(assert (=> b!104055 (= e!67753 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3193 lt!53054)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104056 () Bool)

(assert (=> b!104056 (= e!67752 (bvsge (x!13502 lt!53054) #b01111111111111111111111111111110))))

(declare-fun b!104057 () Bool)

(assert (=> b!104057 (= e!67755 e!67754)))

(declare-fun c!17982 () Bool)

(assert (=> b!104057 (= c!17982 (or (= lt!53053 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (= (bvadd lt!53053 lt!53053) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104058 () Bool)

(assert (=> b!104058 (= e!67754 (Intermediate!261 false (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!104059 () Bool)

(assert (=> b!104059 (= e!67755 (Intermediate!261 true (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!28001 c!17980) b!104059))

(assert (= (and d!28001 (not c!17980)) b!104057))

(assert (= (and b!104057 c!17982) b!104058))

(assert (= (and b!104057 (not c!17982)) b!104054))

(assert (= (and d!28001 c!17981) b!104056))

(assert (= (and d!28001 (not c!17981)) b!104053))

(assert (= (and b!104053 res!51888) b!104051))

(assert (= (and b!104051 (not res!51887)) b!104052))

(assert (= (and b!104052 (not res!51886)) b!104055))

(assert (=> b!104054 m!114217))

(declare-fun m!115017 () Bool)

(assert (=> b!104054 m!115017))

(assert (=> b!104054 m!115017))

(assert (=> b!104054 m!113535))

(declare-fun m!115019 () Bool)

(assert (=> b!104054 m!115019))

(declare-fun m!115021 () Bool)

(assert (=> b!104055 m!115021))

(assert (=> d!28001 m!114217))

(declare-fun m!115023 () Bool)

(assert (=> d!28001 m!115023))

(assert (=> d!28001 m!113985))

(assert (=> b!104052 m!115021))

(assert (=> b!104051 m!115021))

(assert (=> d!27763 d!28001))

(declare-fun d!28003 () Bool)

(declare-fun lt!53060 () (_ BitVec 32))

(declare-fun lt!53059 () (_ BitVec 32))

(assert (=> d!28003 (= lt!53060 (bvmul (bvxor lt!53059 (bvlshr lt!53059 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!28003 (= lt!53059 ((_ extract 31 0) (bvand (bvxor (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvlshr (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!28003 (and (bvsge (mask!6695 newMap!16) #b00000000000000000000000000000000) (let ((res!51889 (let ((h!2207 ((_ extract 31 0) (bvand (bvxor (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvlshr (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13605 (bvmul (bvxor h!2207 (bvlshr h!2207 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13605 (bvlshr x!13605 #b00000000000000000000000000001101)) (mask!6695 newMap!16)))))) (and (bvslt res!51889 (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001)) (bvsge res!51889 #b00000000000000000000000000000000))))))

(assert (=> d!28003 (= (toIndex!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (mask!6695 newMap!16)) (bvand (bvxor lt!53060 (bvlshr lt!53060 #b00000000000000000000000000001101)) (mask!6695 newMap!16)))))

(assert (=> d!27763 d!28003))

(assert (=> d!27763 d!27973))

(declare-fun d!28005 () Bool)

(assert (=> d!28005 (= (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103686 d!28005))

(declare-fun d!28007 () Bool)

(declare-fun lt!53061 () Bool)

(assert (=> d!28007 (= lt!53061 (select (content!108 lt!52462) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun e!67756 () Bool)

(assert (=> d!28007 (= lt!53061 e!67756)))

(declare-fun res!51890 () Bool)

(assert (=> d!28007 (=> (not res!51890) (not e!67756))))

(assert (=> d!28007 (= res!51890 ((_ is Cons!1608) lt!52462))))

(assert (=> d!28007 (= (contains!819 lt!52462 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))) lt!53061)))

(declare-fun b!104060 () Bool)

(declare-fun e!67757 () Bool)

(assert (=> b!104060 (= e!67756 e!67757)))

(declare-fun res!51891 () Bool)

(assert (=> b!104060 (=> res!51891 e!67757)))

(assert (=> b!104060 (= res!51891 (= (h!2204 lt!52462) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!104061 () Bool)

(assert (=> b!104061 (= e!67757 (contains!819 (t!5665 lt!52462) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(assert (= (and d!28007 res!51890) b!104060))

(assert (= (and b!104060 (not res!51891)) b!104061))

(declare-fun m!115025 () Bool)

(assert (=> d!28007 m!115025))

(declare-fun m!115027 () Bool)

(assert (=> d!28007 m!115027))

(declare-fun m!115029 () Bool)

(assert (=> b!104061 m!115029))

(assert (=> b!103520 d!28007))

(declare-fun d!28009 () Bool)

(assert (=> d!28009 (= (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103842 d!28009))

(declare-fun d!28011 () Bool)

(declare-fun c!17985 () Bool)

(assert (=> d!28011 (= c!17985 ((_ is Nil!1609) (toList!785 lt!52449)))))

(declare-fun e!67760 () (InoxSet tuple2!2372))

(assert (=> d!28011 (= (content!108 (toList!785 lt!52449)) e!67760)))

(declare-fun b!104066 () Bool)

(assert (=> b!104066 (= e!67760 ((as const (Array tuple2!2372 Bool)) false))))

(declare-fun b!104067 () Bool)

(assert (=> b!104067 (= e!67760 ((_ map or) (store ((as const (Array tuple2!2372 Bool)) false) (h!2204 (toList!785 lt!52449)) true) (content!108 (t!5665 (toList!785 lt!52449)))))))

(assert (= (and d!28011 c!17985) b!104066))

(assert (= (and d!28011 (not c!17985)) b!104067))

(declare-fun m!115031 () Bool)

(assert (=> b!104067 m!115031))

(declare-fun m!115033 () Bool)

(assert (=> b!104067 m!115033))

(assert (=> d!27831 d!28011))

(declare-fun d!28013 () Bool)

(declare-fun e!67762 () Bool)

(assert (=> d!28013 e!67762))

(declare-fun res!51892 () Bool)

(assert (=> d!28013 (=> res!51892 e!67762)))

(declare-fun lt!53064 () Bool)

(assert (=> d!28013 (= res!51892 (not lt!53064))))

(declare-fun lt!53063 () Bool)

(assert (=> d!28013 (= lt!53064 lt!53063)))

(declare-fun lt!53065 () Unit!3141)

(declare-fun e!67761 () Unit!3141)

(assert (=> d!28013 (= lt!53065 e!67761)))

(declare-fun c!17986 () Bool)

(assert (=> d!28013 (= c!17986 lt!53063)))

(assert (=> d!28013 (= lt!53063 (containsKey!157 (toList!785 lt!52696) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28013 (= (contains!816 lt!52696 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53064)))

(declare-fun b!104068 () Bool)

(declare-fun lt!53062 () Unit!3141)

(assert (=> b!104068 (= e!67761 lt!53062)))

(assert (=> b!104068 (= lt!53062 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52696) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104068 (isDefined!107 (getValueByKey!153 (toList!785 lt!52696) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104069 () Bool)

(declare-fun Unit!3178 () Unit!3141)

(assert (=> b!104069 (= e!67761 Unit!3178)))

(declare-fun b!104070 () Bool)

(assert (=> b!104070 (= e!67762 (isDefined!107 (getValueByKey!153 (toList!785 lt!52696) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28013 c!17986) b!104068))

(assert (= (and d!28013 (not c!17986)) b!104069))

(assert (= (and d!28013 (not res!51892)) b!104070))

(declare-fun m!115035 () Bool)

(assert (=> d!28013 m!115035))

(declare-fun m!115037 () Bool)

(assert (=> b!104068 m!115037))

(declare-fun m!115039 () Bool)

(assert (=> b!104068 m!115039))

(assert (=> b!104068 m!115039))

(declare-fun m!115041 () Bool)

(assert (=> b!104068 m!115041))

(assert (=> b!104070 m!115039))

(assert (=> b!104070 m!115039))

(assert (=> b!104070 m!115041))

(assert (=> bm!10857 d!28013))

(declare-fun d!28015 () Bool)

(assert (=> d!28015 (= (inRange!0 (ite c!17899 (index!3191 lt!52912) (index!3194 lt!52912)) (mask!6695 newMap!16)) (and (bvsge (ite c!17899 (index!3191 lt!52912) (index!3194 lt!52912)) #b00000000000000000000000000000000) (bvslt (ite c!17899 (index!3191 lt!52912) (index!3194 lt!52912)) (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10900 d!28015))

(declare-fun e!67764 () Option!159)

(declare-fun b!104073 () Bool)

(assert (=> b!104073 (= e!67764 (getValueByKey!153 (t!5665 (toList!785 lt!52949)) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104071 () Bool)

(declare-fun e!67763 () Option!159)

(assert (=> b!104071 (= e!67763 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52949)))))))

(declare-fun d!28017 () Bool)

(declare-fun c!17987 () Bool)

(assert (=> d!28017 (= c!17987 (and ((_ is Cons!1608) (toList!785 lt!52949)) (= (_1!1197 (h!2204 (toList!785 lt!52949))) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28017 (= (getValueByKey!153 (toList!785 lt!52949) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!67763)))

(declare-fun b!104072 () Bool)

(assert (=> b!104072 (= e!67763 e!67764)))

(declare-fun c!17988 () Bool)

(assert (=> b!104072 (= c!17988 (and ((_ is Cons!1608) (toList!785 lt!52949)) (not (= (_1!1197 (h!2204 (toList!785 lt!52949))) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104074 () Bool)

(assert (=> b!104074 (= e!67764 None!157)))

(assert (= (and d!28017 c!17987) b!104071))

(assert (= (and d!28017 (not c!17987)) b!104072))

(assert (= (and b!104072 c!17988) b!104073))

(assert (= (and b!104072 (not c!17988)) b!104074))

(declare-fun m!115043 () Bool)

(assert (=> b!104073 m!115043))

(assert (=> b!103802 d!28017))

(assert (=> b!103753 d!27911))

(declare-fun bm!10921 () Bool)

(declare-fun call!10924 () Bool)

(declare-fun c!17989 () Bool)

(assert (=> bm!10921 (= call!10924 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17989 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000) Nil!1610) Nil!1610)))))

(declare-fun b!104075 () Bool)

(declare-fun e!67767 () Bool)

(declare-fun e!67768 () Bool)

(assert (=> b!104075 (= e!67767 e!67768)))

(assert (=> b!104075 (= c!17989 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104076 () Bool)

(assert (=> b!104076 (= e!67768 call!10924)))

(declare-fun d!28019 () Bool)

(declare-fun res!51894 () Bool)

(declare-fun e!67766 () Bool)

(assert (=> d!28019 (=> res!51894 e!67766)))

(assert (=> d!28019 (= res!51894 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!28019 (= (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 Nil!1610) e!67766)))

(declare-fun b!104077 () Bool)

(assert (=> b!104077 (= e!67766 e!67767)))

(declare-fun res!51895 () Bool)

(assert (=> b!104077 (=> (not res!51895) (not e!67767))))

(declare-fun e!67765 () Bool)

(assert (=> b!104077 (= res!51895 (not e!67765))))

(declare-fun res!51893 () Bool)

(assert (=> b!104077 (=> (not res!51893) (not e!67765))))

(assert (=> b!104077 (= res!51893 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104078 () Bool)

(assert (=> b!104078 (= e!67768 call!10924)))

(declare-fun b!104079 () Bool)

(assert (=> b!104079 (= e!67765 (contains!818 Nil!1610 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!28019 (not res!51894)) b!104077))

(assert (= (and b!104077 res!51893) b!104079))

(assert (= (and b!104077 res!51895) b!104075))

(assert (= (and b!104075 c!17989) b!104076))

(assert (= (and b!104075 (not c!17989)) b!104078))

(assert (= (or b!104076 b!104078) bm!10921))

(declare-fun m!115045 () Bool)

(assert (=> bm!10921 m!115045))

(declare-fun m!115047 () Bool)

(assert (=> bm!10921 m!115047))

(assert (=> b!104075 m!115045))

(assert (=> b!104075 m!115045))

(declare-fun m!115049 () Bool)

(assert (=> b!104075 m!115049))

(assert (=> b!104077 m!115045))

(assert (=> b!104077 m!115045))

(assert (=> b!104077 m!115049))

(assert (=> b!104079 m!115045))

(assert (=> b!104079 m!115045))

(declare-fun m!115051 () Bool)

(assert (=> b!104079 m!115051))

(assert (=> b!103456 d!28019))

(declare-fun d!28021 () Bool)

(declare-fun res!51896 () Bool)

(declare-fun e!67769 () Bool)

(assert (=> d!28021 (=> res!51896 e!67769)))

(assert (=> d!28021 (= res!51896 (and ((_ is Cons!1608) lt!52455) (= (_1!1197 (h!2204 lt!52455)) (_1!1197 lt!52331))))))

(assert (=> d!28021 (= (containsKey!157 lt!52455 (_1!1197 lt!52331)) e!67769)))

(declare-fun b!104080 () Bool)

(declare-fun e!67770 () Bool)

(assert (=> b!104080 (= e!67769 e!67770)))

(declare-fun res!51897 () Bool)

(assert (=> b!104080 (=> (not res!51897) (not e!67770))))

(assert (=> b!104080 (= res!51897 (and (or (not ((_ is Cons!1608) lt!52455)) (bvsle (_1!1197 (h!2204 lt!52455)) (_1!1197 lt!52331))) ((_ is Cons!1608) lt!52455) (bvslt (_1!1197 (h!2204 lt!52455)) (_1!1197 lt!52331))))))

(declare-fun b!104081 () Bool)

(assert (=> b!104081 (= e!67770 (containsKey!157 (t!5665 lt!52455) (_1!1197 lt!52331)))))

(assert (= (and d!28021 (not res!51896)) b!104080))

(assert (= (and b!104080 res!51897) b!104081))

(declare-fun m!115053 () Bool)

(assert (=> b!104081 m!115053))

(assert (=> b!103589 d!28021))

(declare-fun d!28023 () Bool)

(declare-fun lt!53066 () Bool)

(assert (=> d!28023 (= lt!53066 (select (content!108 (toList!785 lt!52741)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun e!67771 () Bool)

(assert (=> d!28023 (= lt!53066 e!67771)))

(declare-fun res!51898 () Bool)

(assert (=> d!28023 (=> (not res!51898) (not e!67771))))

(assert (=> d!28023 (= res!51898 ((_ is Cons!1608) (toList!785 lt!52741)))))

(assert (=> d!28023 (= (contains!819 (toList!785 lt!52741) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!53066)))

(declare-fun b!104082 () Bool)

(declare-fun e!67772 () Bool)

(assert (=> b!104082 (= e!67771 e!67772)))

(declare-fun res!51899 () Bool)

(assert (=> b!104082 (=> res!51899 e!67772)))

(assert (=> b!104082 (= res!51899 (= (h!2204 (toList!785 lt!52741)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun b!104083 () Bool)

(assert (=> b!104083 (= e!67772 (contains!819 (t!5665 (toList!785 lt!52741)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!28023 res!51898) b!104082))

(assert (= (and b!104082 (not res!51899)) b!104083))

(declare-fun m!115055 () Bool)

(assert (=> d!28023 m!115055))

(declare-fun m!115057 () Bool)

(assert (=> d!28023 m!115057))

(declare-fun m!115059 () Bool)

(assert (=> b!104083 m!115059))

(assert (=> b!103577 d!28023))

(declare-fun d!28025 () Bool)

(assert (=> d!28025 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331)))))))

(declare-fun bs!4249 () Bool)

(assert (= bs!4249 d!28025))

(assert (=> bs!4249 m!113777))

(declare-fun m!115061 () Bool)

(assert (=> bs!4249 m!115061))

(assert (=> b!103584 d!28025))

(assert (=> b!103584 d!27723))

(declare-fun d!28027 () Bool)

(assert (=> d!28027 (= (inRange!0 (ite c!17878 (index!3192 lt!52854) (ite c!17877 (index!3191 lt!52835) (index!3194 lt!52835))) (mask!6695 newMap!16)) (and (bvsge (ite c!17878 (index!3192 lt!52854) (ite c!17877 (index!3191 lt!52835) (index!3194 lt!52835))) #b00000000000000000000000000000000) (bvslt (ite c!17878 (index!3192 lt!52854) (ite c!17877 (index!3191 lt!52835) (index!3194 lt!52835))) (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10883 d!28027))

(declare-fun b!104086 () Bool)

(declare-fun e!67774 () Option!159)

(assert (=> b!104086 (= e!67774 (getValueByKey!153 (t!5665 (t!5665 (toList!785 lt!52457))) (_1!1197 lt!52331)))))

(declare-fun b!104084 () Bool)

(declare-fun e!67773 () Option!159)

(assert (=> b!104084 (= e!67773 (Some!158 (_2!1197 (h!2204 (t!5665 (toList!785 lt!52457))))))))

(declare-fun d!28029 () Bool)

(declare-fun c!17990 () Bool)

(assert (=> d!28029 (= c!17990 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52457))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52457)))) (_1!1197 lt!52331))))))

(assert (=> d!28029 (= (getValueByKey!153 (t!5665 (toList!785 lt!52457)) (_1!1197 lt!52331)) e!67773)))

(declare-fun b!104085 () Bool)

(assert (=> b!104085 (= e!67773 e!67774)))

(declare-fun c!17991 () Bool)

(assert (=> b!104085 (= c!17991 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52457))) (not (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52457)))) (_1!1197 lt!52331)))))))

(declare-fun b!104087 () Bool)

(assert (=> b!104087 (= e!67774 None!157)))

(assert (= (and d!28029 c!17990) b!104084))

(assert (= (and d!28029 (not c!17990)) b!104085))

(assert (= (and b!104085 c!17991) b!104086))

(assert (= (and b!104085 (not c!17991)) b!104087))

(declare-fun m!115063 () Bool)

(assert (=> b!104086 m!115063))

(assert (=> b!103459 d!28029))

(declare-fun b!104088 () Bool)

(declare-fun e!67776 () (_ BitVec 32))

(assert (=> b!104088 (= e!67776 #b00000000000000000000000000000000)))

(declare-fun bm!10922 () Bool)

(declare-fun call!10925 () (_ BitVec 32))

(assert (=> bm!10922 (= call!10925 (arrayCountValidKeys!0 (_keys!4261 (_2!1198 lt!52557)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(declare-fun b!104089 () Bool)

(declare-fun e!67775 () (_ BitVec 32))

(assert (=> b!104089 (= e!67775 call!10925)))

(declare-fun d!28031 () Bool)

(declare-fun lt!53067 () (_ BitVec 32))

(assert (=> d!28031 (and (bvsge lt!53067 #b00000000000000000000000000000000) (bvsle lt!53067 (bvsub (size!2299 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(assert (=> d!28031 (= lt!53067 e!67776)))

(declare-fun c!17992 () Bool)

(assert (=> d!28031 (= c!17992 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(assert (=> d!28031 (and (bvsle #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2299 (_keys!4261 (_2!1198 lt!52557))) (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(assert (=> d!28031 (= (arrayCountValidKeys!0 (_keys!4261 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))) lt!53067)))

(declare-fun b!104090 () Bool)

(assert (=> b!104090 (= e!67776 e!67775)))

(declare-fun c!17993 () Bool)

(assert (=> b!104090 (= c!17993 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(declare-fun b!104091 () Bool)

(assert (=> b!104091 (= e!67775 (bvadd #b00000000000000000000000000000001 call!10925))))

(assert (= (and d!28031 c!17992) b!104088))

(assert (= (and d!28031 (not c!17992)) b!104090))

(assert (= (and b!104090 c!17993) b!104091))

(assert (= (and b!104090 (not c!17993)) b!104089))

(assert (= (or b!104091 b!104089) bm!10922))

(declare-fun m!115065 () Bool)

(assert (=> bm!10922 m!115065))

(assert (=> b!104090 m!114853))

(assert (=> b!104090 m!114853))

(assert (=> b!104090 m!114863))

(assert (=> b!103376 d!28031))

(declare-fun d!28033 () Bool)

(assert (=> d!28033 (= (apply!97 (+!134 lt!52620 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52617) (apply!97 lt!52620 lt!52617))))

(assert (=> d!28033 true))

(declare-fun _$34!879 () Unit!3141)

(assert (=> d!28033 (= (choose!655 lt!52620 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52617) _$34!879)))

(declare-fun bs!4250 () Bool)

(assert (= bs!4250 d!28033))

(assert (=> bs!4250 m!113881))

(assert (=> bs!4250 m!113881))

(assert (=> bs!4250 m!113883))

(assert (=> bs!4250 m!113905))

(assert (=> d!27853 d!28033))

(assert (=> d!27853 d!27859))

(declare-fun d!28035 () Bool)

(declare-fun e!67778 () Bool)

(assert (=> d!28035 e!67778))

(declare-fun res!51900 () Bool)

(assert (=> d!28035 (=> res!51900 e!67778)))

(declare-fun lt!53070 () Bool)

(assert (=> d!28035 (= res!51900 (not lt!53070))))

(declare-fun lt!53069 () Bool)

(assert (=> d!28035 (= lt!53070 lt!53069)))

(declare-fun lt!53071 () Unit!3141)

(declare-fun e!67777 () Unit!3141)

(assert (=> d!28035 (= lt!53071 e!67777)))

(declare-fun c!17994 () Bool)

(assert (=> d!28035 (= c!17994 lt!53069)))

(assert (=> d!28035 (= lt!53069 (containsKey!157 (toList!785 lt!52620) lt!52617))))

(assert (=> d!28035 (= (contains!816 lt!52620 lt!52617) lt!53070)))

(declare-fun b!104093 () Bool)

(declare-fun lt!53068 () Unit!3141)

(assert (=> b!104093 (= e!67777 lt!53068)))

(assert (=> b!104093 (= lt!53068 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52620) lt!52617))))

(assert (=> b!104093 (isDefined!107 (getValueByKey!153 (toList!785 lt!52620) lt!52617))))

(declare-fun b!104094 () Bool)

(declare-fun Unit!3179 () Unit!3141)

(assert (=> b!104094 (= e!67777 Unit!3179)))

(declare-fun b!104095 () Bool)

(assert (=> b!104095 (= e!67778 (isDefined!107 (getValueByKey!153 (toList!785 lt!52620) lt!52617)))))

(assert (= (and d!28035 c!17994) b!104093))

(assert (= (and d!28035 (not c!17994)) b!104094))

(assert (= (and d!28035 (not res!51900)) b!104095))

(declare-fun m!115067 () Bool)

(assert (=> d!28035 m!115067))

(declare-fun m!115069 () Bool)

(assert (=> b!104093 m!115069))

(assert (=> b!104093 m!114639))

(assert (=> b!104093 m!114639))

(declare-fun m!115071 () Bool)

(assert (=> b!104093 m!115071))

(assert (=> b!104095 m!114639))

(assert (=> b!104095 m!114639))

(assert (=> b!104095 m!115071))

(assert (=> d!27853 d!28035))

(assert (=> d!27853 d!27867))

(assert (=> d!27853 d!27871))

(declare-fun d!28037 () Bool)

(declare-fun res!51901 () Bool)

(declare-fun e!67779 () Bool)

(assert (=> d!28037 (=> res!51901 e!67779)))

(assert (=> d!28037 (= res!51901 (or ((_ is Nil!1609) lt!52978) ((_ is Nil!1609) (t!5665 lt!52978))))))

(assert (=> d!28037 (= (isStrictlySorted!303 lt!52978) e!67779)))

(declare-fun b!104096 () Bool)

(declare-fun e!67780 () Bool)

(assert (=> b!104096 (= e!67779 e!67780)))

(declare-fun res!51902 () Bool)

(assert (=> b!104096 (=> (not res!51902) (not e!67780))))

(assert (=> b!104096 (= res!51902 (bvslt (_1!1197 (h!2204 lt!52978)) (_1!1197 (h!2204 (t!5665 lt!52978)))))))

(declare-fun b!104097 () Bool)

(assert (=> b!104097 (= e!67780 (isStrictlySorted!303 (t!5665 lt!52978)))))

(assert (= (and d!28037 (not res!51901)) b!104096))

(assert (= (and b!104096 res!51902) b!104097))

(declare-fun m!115073 () Bool)

(assert (=> b!104097 m!115073))

(assert (=> d!27885 d!28037))

(declare-fun d!28039 () Bool)

(declare-fun res!51903 () Bool)

(declare-fun e!67781 () Bool)

(assert (=> d!28039 (=> res!51903 e!67781)))

(assert (=> d!28039 (= res!51903 (or ((_ is Nil!1609) (toList!785 lt!52333)) ((_ is Nil!1609) (t!5665 (toList!785 lt!52333)))))))

(assert (=> d!28039 (= (isStrictlySorted!303 (toList!785 lt!52333)) e!67781)))

(declare-fun b!104098 () Bool)

(declare-fun e!67782 () Bool)

(assert (=> b!104098 (= e!67781 e!67782)))

(declare-fun res!51904 () Bool)

(assert (=> b!104098 (=> (not res!51904) (not e!67782))))

(assert (=> b!104098 (= res!51904 (bvslt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333))))))))

(declare-fun b!104099 () Bool)

(assert (=> b!104099 (= e!67782 (isStrictlySorted!303 (t!5665 (toList!785 lt!52333))))))

(assert (= (and d!28039 (not res!51903)) b!104098))

(assert (= (and b!104098 res!51904) b!104099))

(assert (=> b!104099 m!114785))

(assert (=> d!27885 d!28039))

(declare-fun d!28041 () Bool)

(declare-fun lt!53072 () Bool)

(assert (=> d!28041 (= lt!53072 (select (content!108 (toList!785 lt!52749)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67783 () Bool)

(assert (=> d!28041 (= lt!53072 e!67783)))

(declare-fun res!51905 () Bool)

(assert (=> d!28041 (=> (not res!51905) (not e!67783))))

(assert (=> d!28041 (= res!51905 ((_ is Cons!1608) (toList!785 lt!52749)))))

(assert (=> d!28041 (= (contains!819 (toList!785 lt!52749) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!53072)))

(declare-fun b!104100 () Bool)

(declare-fun e!67784 () Bool)

(assert (=> b!104100 (= e!67783 e!67784)))

(declare-fun res!51906 () Bool)

(assert (=> b!104100 (=> res!51906 e!67784)))

(assert (=> b!104100 (= res!51906 (= (h!2204 (toList!785 lt!52749)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104101 () Bool)

(assert (=> b!104101 (= e!67784 (contains!819 (t!5665 (toList!785 lt!52749)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!28041 res!51905) b!104100))

(assert (= (and b!104100 (not res!51906)) b!104101))

(declare-fun m!115075 () Bool)

(assert (=> d!28041 m!115075))

(declare-fun m!115077 () Bool)

(assert (=> d!28041 m!115077))

(declare-fun m!115079 () Bool)

(assert (=> b!104101 m!115079))

(assert (=> b!103581 d!28041))

(declare-fun d!28043 () Bool)

(declare-fun e!67786 () Bool)

(assert (=> d!28043 e!67786))

(declare-fun res!51907 () Bool)

(assert (=> d!28043 (=> res!51907 e!67786)))

(declare-fun lt!53075 () Bool)

(assert (=> d!28043 (= res!51907 (not lt!53075))))

(declare-fun lt!53074 () Bool)

(assert (=> d!28043 (= lt!53075 lt!53074)))

(declare-fun lt!53076 () Unit!3141)

(declare-fun e!67785 () Unit!3141)

(assert (=> d!28043 (= lt!53076 e!67785)))

(declare-fun c!17995 () Bool)

(assert (=> d!28043 (= c!17995 lt!53074)))

(assert (=> d!28043 (= lt!53074 (containsKey!157 (toList!785 lt!52949) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!28043 (= (contains!816 lt!52949 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53075)))

(declare-fun b!104102 () Bool)

(declare-fun lt!53073 () Unit!3141)

(assert (=> b!104102 (= e!67785 lt!53073)))

(assert (=> b!104102 (= lt!53073 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52949) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!104102 (isDefined!107 (getValueByKey!153 (toList!785 lt!52949) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104103 () Bool)

(declare-fun Unit!3180 () Unit!3141)

(assert (=> b!104103 (= e!67785 Unit!3180)))

(declare-fun b!104104 () Bool)

(assert (=> b!104104 (= e!67786 (isDefined!107 (getValueByKey!153 (toList!785 lt!52949) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28043 c!17995) b!104102))

(assert (= (and d!28043 (not c!17995)) b!104103))

(assert (= (and d!28043 (not res!51907)) b!104104))

(declare-fun m!115081 () Bool)

(assert (=> d!28043 m!115081))

(declare-fun m!115083 () Bool)

(assert (=> b!104102 m!115083))

(assert (=> b!104102 m!114635))

(assert (=> b!104102 m!114635))

(declare-fun m!115085 () Bool)

(assert (=> b!104102 m!115085))

(assert (=> b!104104 m!114635))

(assert (=> b!104104 m!114635))

(assert (=> b!104104 m!115085))

(assert (=> d!27857 d!28043))

(declare-fun b!104107 () Bool)

(declare-fun e!67788 () Option!159)

(assert (=> b!104107 (= e!67788 (getValueByKey!153 (t!5665 lt!52947) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104105 () Bool)

(declare-fun e!67787 () Option!159)

(assert (=> b!104105 (= e!67787 (Some!158 (_2!1197 (h!2204 lt!52947))))))

(declare-fun d!28045 () Bool)

(declare-fun c!17996 () Bool)

(assert (=> d!28045 (= c!17996 (and ((_ is Cons!1608) lt!52947) (= (_1!1197 (h!2204 lt!52947)) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28045 (= (getValueByKey!153 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!67787)))

(declare-fun b!104106 () Bool)

(assert (=> b!104106 (= e!67787 e!67788)))

(declare-fun c!17997 () Bool)

(assert (=> b!104106 (= c!17997 (and ((_ is Cons!1608) lt!52947) (not (= (_1!1197 (h!2204 lt!52947)) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104108 () Bool)

(assert (=> b!104108 (= e!67788 None!157)))

(assert (= (and d!28045 c!17996) b!104105))

(assert (= (and d!28045 (not c!17996)) b!104106))

(assert (= (and b!104106 c!17997) b!104107))

(assert (= (and b!104106 (not c!17997)) b!104108))

(declare-fun m!115087 () Bool)

(assert (=> b!104107 m!115087))

(assert (=> d!27857 d!28045))

(declare-fun d!28047 () Bool)

(assert (=> d!28047 (= (getValueByKey!153 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53077 () Unit!3141)

(assert (=> d!28047 (= lt!53077 (choose!649 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!67789 () Bool)

(assert (=> d!28047 e!67789))

(declare-fun res!51908 () Bool)

(assert (=> d!28047 (=> (not res!51908) (not e!67789))))

(assert (=> d!28047 (= res!51908 (isStrictlySorted!303 lt!52947))))

(assert (=> d!28047 (= (lemmaContainsTupThenGetReturnValue!72 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53077)))

(declare-fun b!104109 () Bool)

(declare-fun res!51909 () Bool)

(assert (=> b!104109 (=> (not res!51909) (not e!67789))))

(assert (=> b!104109 (= res!51909 (containsKey!157 lt!52947 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104110 () Bool)

(assert (=> b!104110 (= e!67789 (contains!819 lt!52947 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28047 res!51908) b!104109))

(assert (= (and b!104109 res!51909) b!104110))

(assert (=> d!28047 m!114629))

(declare-fun m!115089 () Bool)

(assert (=> d!28047 m!115089))

(declare-fun m!115091 () Bool)

(assert (=> d!28047 m!115091))

(declare-fun m!115093 () Bool)

(assert (=> b!104109 m!115093))

(declare-fun m!115095 () Bool)

(assert (=> b!104110 m!115095))

(assert (=> d!27857 d!28047))

(declare-fun b!104111 () Bool)

(declare-fun e!67791 () List!1612)

(declare-fun call!10928 () List!1612)

(assert (=> b!104111 (= e!67791 call!10928)))

(declare-fun b!104112 () Bool)

(declare-fun e!67792 () List!1612)

(assert (=> b!104112 (= e!67792 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52614)) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104113 () Bool)

(declare-fun res!51910 () Bool)

(declare-fun e!67794 () Bool)

(assert (=> b!104113 (=> (not res!51910) (not e!67794))))

(declare-fun lt!53078 () List!1612)

(assert (=> b!104113 (= res!51910 (containsKey!157 lt!53078 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!10923 () Bool)

(declare-fun call!10926 () List!1612)

(assert (=> bm!10923 (= call!10926 call!10928)))

(declare-fun b!104114 () Bool)

(declare-fun e!67790 () List!1612)

(assert (=> b!104114 (= e!67790 call!10926)))

(declare-fun c!18000 () Bool)

(declare-fun c!17998 () Bool)

(declare-fun b!104115 () Bool)

(assert (=> b!104115 (= e!67792 (ite c!18000 (t!5665 (toList!785 lt!52614)) (ite c!17998 (Cons!1608 (h!2204 (toList!785 lt!52614)) (t!5665 (toList!785 lt!52614))) Nil!1609)))))

(declare-fun d!28049 () Bool)

(assert (=> d!28049 e!67794))

(declare-fun res!51911 () Bool)

(assert (=> d!28049 (=> (not res!51911) (not e!67794))))

(assert (=> d!28049 (= res!51911 (isStrictlySorted!303 lt!53078))))

(declare-fun e!67793 () List!1612)

(assert (=> d!28049 (= lt!53078 e!67793)))

(declare-fun c!18001 () Bool)

(assert (=> d!28049 (= c!18001 (and ((_ is Cons!1608) (toList!785 lt!52614)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52614))) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28049 (isStrictlySorted!303 (toList!785 lt!52614))))

(assert (=> d!28049 (= (insertStrictlySorted!75 (toList!785 lt!52614) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53078)))

(declare-fun b!104116 () Bool)

(assert (=> b!104116 (= c!17998 (and ((_ is Cons!1608) (toList!785 lt!52614)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52614))) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104116 (= e!67791 e!67790)))

(declare-fun call!10927 () List!1612)

(declare-fun bm!10924 () Bool)

(assert (=> bm!10924 (= call!10927 ($colon$colon!79 e!67792 (ite c!18001 (h!2204 (toList!785 lt!52614)) (tuple2!2373 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!17999 () Bool)

(assert (=> bm!10924 (= c!17999 c!18001)))

(declare-fun b!104117 () Bool)

(assert (=> b!104117 (= e!67794 (contains!819 lt!53078 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104118 () Bool)

(assert (=> b!104118 (= e!67793 call!10927)))

(declare-fun bm!10925 () Bool)

(assert (=> bm!10925 (= call!10928 call!10927)))

(declare-fun b!104119 () Bool)

(assert (=> b!104119 (= e!67790 call!10926)))

(declare-fun b!104120 () Bool)

(assert (=> b!104120 (= e!67793 e!67791)))

(assert (=> b!104120 (= c!18000 (and ((_ is Cons!1608) (toList!785 lt!52614)) (= (_1!1197 (h!2204 (toList!785 lt!52614))) (_1!1197 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28049 c!18001) b!104118))

(assert (= (and d!28049 (not c!18001)) b!104120))

(assert (= (and b!104120 c!18000) b!104111))

(assert (= (and b!104120 (not c!18000)) b!104116))

(assert (= (and b!104116 c!17998) b!104119))

(assert (= (and b!104116 (not c!17998)) b!104114))

(assert (= (or b!104119 b!104114) bm!10923))

(assert (= (or b!104111 bm!10923) bm!10925))

(assert (= (or b!104118 bm!10925) bm!10924))

(assert (= (and bm!10924 c!17999) b!104112))

(assert (= (and bm!10924 (not c!17999)) b!104115))

(assert (= (and d!28049 res!51911) b!104113))

(assert (= (and b!104113 res!51910) b!104117))

(declare-fun m!115097 () Bool)

(assert (=> b!104117 m!115097))

(declare-fun m!115099 () Bool)

(assert (=> d!28049 m!115099))

(declare-fun m!115101 () Bool)

(assert (=> d!28049 m!115101))

(declare-fun m!115103 () Bool)

(assert (=> b!104113 m!115103))

(declare-fun m!115105 () Bool)

(assert (=> b!104112 m!115105))

(declare-fun m!115107 () Bool)

(assert (=> bm!10924 m!115107))

(assert (=> d!27857 d!28049))

(declare-fun d!28051 () Bool)

(declare-fun lt!53079 () Bool)

(assert (=> d!28051 (= lt!53079 (select (content!107 Nil!1610) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!67795 () Bool)

(assert (=> d!28051 (= lt!53079 e!67795)))

(declare-fun res!51913 () Bool)

(assert (=> d!28051 (=> (not res!51913) (not e!67795))))

(assert (=> d!28051 (= res!51913 ((_ is Cons!1609) Nil!1610))))

(assert (=> d!28051 (= (contains!818 Nil!1610 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) lt!53079)))

(declare-fun b!104121 () Bool)

(declare-fun e!67796 () Bool)

(assert (=> b!104121 (= e!67795 e!67796)))

(declare-fun res!51912 () Bool)

(assert (=> b!104121 (=> res!51912 e!67796)))

(assert (=> b!104121 (= res!51912 (= (h!2205 Nil!1610) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104122 () Bool)

(assert (=> b!104122 (= e!67796 (contains!818 (t!5666 Nil!1610) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28051 res!51913) b!104121))

(assert (= (and b!104121 (not res!51912)) b!104122))

(assert (=> d!28051 m!114307))

(assert (=> d!28051 m!113969))

(declare-fun m!115109 () Bool)

(assert (=> d!28051 m!115109))

(assert (=> b!104122 m!113969))

(declare-fun m!115111 () Bool)

(assert (=> b!104122 m!115111))

(assert (=> b!103429 d!28051))

(declare-fun d!28053 () Bool)

(assert (=> d!28053 (= ($colon$colon!79 e!67481 (ite c!17860 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331)))) (Cons!1608 (ite c!17860 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))) e!67481))))

(assert (=> bm!10868 d!28053))

(declare-fun d!28055 () Bool)

(declare-fun e!67798 () Bool)

(assert (=> d!28055 e!67798))

(declare-fun res!51914 () Bool)

(assert (=> d!28055 (=> res!51914 e!67798)))

(declare-fun lt!53082 () Bool)

(assert (=> d!28055 (= res!51914 (not lt!53082))))

(declare-fun lt!53081 () Bool)

(assert (=> d!28055 (= lt!53082 lt!53081)))

(declare-fun lt!53083 () Unit!3141)

(declare-fun e!67797 () Unit!3141)

(assert (=> d!28055 (= lt!53083 e!67797)))

(declare-fun c!18002 () Bool)

(assert (=> d!28055 (= c!18002 lt!53081)))

(assert (=> d!28055 (= lt!53081 (containsKey!157 (toList!785 lt!52653) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(assert (=> d!28055 (= (contains!816 lt!52653 (_1!1197 (tuple2!2373 lt!52431 lt!52433))) lt!53082)))

(declare-fun b!104123 () Bool)

(declare-fun lt!53080 () Unit!3141)

(assert (=> b!104123 (= e!67797 lt!53080)))

(assert (=> b!104123 (= lt!53080 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52653) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(assert (=> b!104123 (isDefined!107 (getValueByKey!153 (toList!785 lt!52653) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun b!104124 () Bool)

(declare-fun Unit!3181 () Unit!3141)

(assert (=> b!104124 (= e!67797 Unit!3181)))

(declare-fun b!104125 () Bool)

(assert (=> b!104125 (= e!67798 (isDefined!107 (getValueByKey!153 (toList!785 lt!52653) (_1!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (= (and d!28055 c!18002) b!104123))

(assert (= (and d!28055 (not c!18002)) b!104124))

(assert (= (and d!28055 (not res!51914)) b!104125))

(declare-fun m!115113 () Bool)

(assert (=> d!28055 m!115113))

(declare-fun m!115115 () Bool)

(assert (=> b!104123 m!115115))

(assert (=> b!104123 m!114019))

(assert (=> b!104123 m!114019))

(declare-fun m!115117 () Bool)

(assert (=> b!104123 m!115117))

(assert (=> b!104125 m!114019))

(assert (=> b!104125 m!114019))

(assert (=> b!104125 m!115117))

(assert (=> d!27697 d!28055))

(declare-fun e!67800 () Option!159)

(declare-fun b!104128 () Bool)

(assert (=> b!104128 (= e!67800 (getValueByKey!153 (t!5665 lt!52651) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun b!104126 () Bool)

(declare-fun e!67799 () Option!159)

(assert (=> b!104126 (= e!67799 (Some!158 (_2!1197 (h!2204 lt!52651))))))

(declare-fun d!28057 () Bool)

(declare-fun c!18003 () Bool)

(assert (=> d!28057 (= c!18003 (and ((_ is Cons!1608) lt!52651) (= (_1!1197 (h!2204 lt!52651)) (_1!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (=> d!28057 (= (getValueByKey!153 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433))) e!67799)))

(declare-fun b!104127 () Bool)

(assert (=> b!104127 (= e!67799 e!67800)))

(declare-fun c!18004 () Bool)

(assert (=> b!104127 (= c!18004 (and ((_ is Cons!1608) lt!52651) (not (= (_1!1197 (h!2204 lt!52651)) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))))

(declare-fun b!104129 () Bool)

(assert (=> b!104129 (= e!67800 None!157)))

(assert (= (and d!28057 c!18003) b!104126))

(assert (= (and d!28057 (not c!18003)) b!104127))

(assert (= (and b!104127 c!18004) b!104128))

(assert (= (and b!104127 (not c!18004)) b!104129))

(declare-fun m!115119 () Bool)

(assert (=> b!104128 m!115119))

(assert (=> d!27697 d!28057))

(declare-fun d!28059 () Bool)

(assert (=> d!28059 (= (getValueByKey!153 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433))) (Some!158 (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun lt!53084 () Unit!3141)

(assert (=> d!28059 (= lt!53084 (choose!649 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun e!67801 () Bool)

(assert (=> d!28059 e!67801))

(declare-fun res!51915 () Bool)

(assert (=> d!28059 (=> (not res!51915) (not e!67801))))

(assert (=> d!28059 (= res!51915 (isStrictlySorted!303 lt!52651))))

(assert (=> d!28059 (= (lemmaContainsTupThenGetReturnValue!72 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))) lt!53084)))

(declare-fun b!104130 () Bool)

(declare-fun res!51916 () Bool)

(assert (=> b!104130 (=> (not res!51916) (not e!67801))))

(assert (=> b!104130 (= res!51916 (containsKey!157 lt!52651 (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun b!104131 () Bool)

(assert (=> b!104131 (= e!67801 (contains!819 lt!52651 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (= (and d!28059 res!51915) b!104130))

(assert (= (and b!104130 res!51916) b!104131))

(assert (=> d!28059 m!114013))

(declare-fun m!115121 () Bool)

(assert (=> d!28059 m!115121))

(declare-fun m!115123 () Bool)

(assert (=> d!28059 m!115123))

(declare-fun m!115125 () Bool)

(assert (=> b!104130 m!115125))

(declare-fun m!115127 () Bool)

(assert (=> b!104131 m!115127))

(assert (=> d!27697 d!28059))

(declare-fun b!104132 () Bool)

(declare-fun e!67803 () List!1612)

(declare-fun call!10931 () List!1612)

(assert (=> b!104132 (= e!67803 call!10931)))

(declare-fun b!104133 () Bool)

(declare-fun e!67804 () List!1612)

(assert (=> b!104133 (= e!67804 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52436)) (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun b!104134 () Bool)

(declare-fun res!51917 () Bool)

(declare-fun e!67806 () Bool)

(assert (=> b!104134 (=> (not res!51917) (not e!67806))))

(declare-fun lt!53085 () List!1612)

(assert (=> b!104134 (= res!51917 (containsKey!157 lt!53085 (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun bm!10926 () Bool)

(declare-fun call!10929 () List!1612)

(assert (=> bm!10926 (= call!10929 call!10931)))

(declare-fun b!104135 () Bool)

(declare-fun e!67802 () List!1612)

(assert (=> b!104135 (= e!67802 call!10929)))

(declare-fun b!104136 () Bool)

(declare-fun c!18005 () Bool)

(declare-fun c!18007 () Bool)

(assert (=> b!104136 (= e!67804 (ite c!18007 (t!5665 (toList!785 lt!52436)) (ite c!18005 (Cons!1608 (h!2204 (toList!785 lt!52436)) (t!5665 (toList!785 lt!52436))) Nil!1609)))))

(declare-fun d!28061 () Bool)

(assert (=> d!28061 e!67806))

(declare-fun res!51918 () Bool)

(assert (=> d!28061 (=> (not res!51918) (not e!67806))))

(assert (=> d!28061 (= res!51918 (isStrictlySorted!303 lt!53085))))

(declare-fun e!67805 () List!1612)

(assert (=> d!28061 (= lt!53085 e!67805)))

(declare-fun c!18008 () Bool)

(assert (=> d!28061 (= c!18008 (and ((_ is Cons!1608) (toList!785 lt!52436)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52436))) (_1!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (=> d!28061 (isStrictlySorted!303 (toList!785 lt!52436))))

(assert (=> d!28061 (= (insertStrictlySorted!75 (toList!785 lt!52436) (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))) lt!53085)))

(declare-fun b!104137 () Bool)

(assert (=> b!104137 (= c!18005 (and ((_ is Cons!1608) (toList!785 lt!52436)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52436))) (_1!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (=> b!104137 (= e!67803 e!67802)))

(declare-fun call!10930 () List!1612)

(declare-fun bm!10927 () Bool)

(assert (=> bm!10927 (= call!10930 ($colon$colon!79 e!67804 (ite c!18008 (h!2204 (toList!785 lt!52436)) (tuple2!2373 (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433))))))))

(declare-fun c!18006 () Bool)

(assert (=> bm!10927 (= c!18006 c!18008)))

(declare-fun b!104138 () Bool)

(assert (=> b!104138 (= e!67806 (contains!819 lt!53085 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52431 lt!52433)) (_2!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(declare-fun b!104139 () Bool)

(assert (=> b!104139 (= e!67805 call!10930)))

(declare-fun bm!10928 () Bool)

(assert (=> bm!10928 (= call!10931 call!10930)))

(declare-fun b!104140 () Bool)

(assert (=> b!104140 (= e!67802 call!10929)))

(declare-fun b!104141 () Bool)

(assert (=> b!104141 (= e!67805 e!67803)))

(assert (=> b!104141 (= c!18007 (and ((_ is Cons!1608) (toList!785 lt!52436)) (= (_1!1197 (h!2204 (toList!785 lt!52436))) (_1!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (= (and d!28061 c!18008) b!104139))

(assert (= (and d!28061 (not c!18008)) b!104141))

(assert (= (and b!104141 c!18007) b!104132))

(assert (= (and b!104141 (not c!18007)) b!104137))

(assert (= (and b!104137 c!18005) b!104140))

(assert (= (and b!104137 (not c!18005)) b!104135))

(assert (= (or b!104140 b!104135) bm!10926))

(assert (= (or b!104132 bm!10926) bm!10928))

(assert (= (or b!104139 bm!10928) bm!10927))

(assert (= (and bm!10927 c!18006) b!104133))

(assert (= (and bm!10927 (not c!18006)) b!104136))

(assert (= (and d!28061 res!51918) b!104134))

(assert (= (and b!104134 res!51917) b!104138))

(declare-fun m!115129 () Bool)

(assert (=> b!104138 m!115129))

(declare-fun m!115131 () Bool)

(assert (=> d!28061 m!115131))

(declare-fun m!115133 () Bool)

(assert (=> d!28061 m!115133))

(declare-fun m!115135 () Bool)

(assert (=> b!104134 m!115135))

(declare-fun m!115137 () Bool)

(assert (=> b!104133 m!115137))

(declare-fun m!115139 () Bool)

(assert (=> bm!10927 m!115139))

(assert (=> d!27697 d!28061))

(declare-fun d!28063 () Bool)

(assert (=> d!28063 (= (get!1328 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2873 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27887 d!28063))

(declare-fun e!67808 () Option!159)

(declare-fun b!104144 () Bool)

(assert (=> b!104144 (= e!67808 (getValueByKey!153 (t!5665 (toList!785 lt!52612)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!104142 () Bool)

(declare-fun e!67807 () Option!159)

(assert (=> b!104142 (= e!67807 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52612)))))))

(declare-fun c!18009 () Bool)

(declare-fun d!28065 () Bool)

(assert (=> d!28065 (= c!18009 (and ((_ is Cons!1608) (toList!785 lt!52612)) (= (_1!1197 (h!2204 (toList!785 lt!52612))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28065 (= (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67807)))

(declare-fun b!104143 () Bool)

(assert (=> b!104143 (= e!67807 e!67808)))

(declare-fun c!18010 () Bool)

(assert (=> b!104143 (= c!18010 (and ((_ is Cons!1608) (toList!785 lt!52612)) (not (= (_1!1197 (h!2204 (toList!785 lt!52612))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104145 () Bool)

(assert (=> b!104145 (= e!67808 None!157)))

(assert (= (and d!28065 c!18009) b!104142))

(assert (= (and d!28065 (not c!18009)) b!104143))

(assert (= (and b!104143 c!18010) b!104144))

(assert (= (and b!104143 (not c!18010)) b!104145))

(assert (=> b!104144 m!113707))

(declare-fun m!115141 () Bool)

(assert (=> b!104144 m!115141))

(assert (=> d!27887 d!28065))

(declare-fun b!104148 () Bool)

(declare-fun e!67810 () Option!159)

(assert (=> b!104148 (= e!67810 (getValueByKey!153 (t!5665 (t!5665 lt!52455)) (_1!1197 lt!52331)))))

(declare-fun b!104146 () Bool)

(declare-fun e!67809 () Option!159)

(assert (=> b!104146 (= e!67809 (Some!158 (_2!1197 (h!2204 (t!5665 lt!52455)))))))

(declare-fun d!28067 () Bool)

(declare-fun c!18011 () Bool)

(assert (=> d!28067 (= c!18011 (and ((_ is Cons!1608) (t!5665 lt!52455)) (= (_1!1197 (h!2204 (t!5665 lt!52455))) (_1!1197 lt!52331))))))

(assert (=> d!28067 (= (getValueByKey!153 (t!5665 lt!52455) (_1!1197 lt!52331)) e!67809)))

(declare-fun b!104147 () Bool)

(assert (=> b!104147 (= e!67809 e!67810)))

(declare-fun c!18012 () Bool)

(assert (=> b!104147 (= c!18012 (and ((_ is Cons!1608) (t!5665 lt!52455)) (not (= (_1!1197 (h!2204 (t!5665 lt!52455))) (_1!1197 lt!52331)))))))

(declare-fun b!104149 () Bool)

(assert (=> b!104149 (= e!67810 None!157)))

(assert (= (and d!28067 c!18011) b!104146))

(assert (= (and d!28067 (not c!18011)) b!104147))

(assert (= (and b!104147 c!18012) b!104148))

(assert (= (and b!104147 (not c!18012)) b!104149))

(declare-fun m!115143 () Bool)

(assert (=> b!104148 m!115143))

(assert (=> b!103587 d!28067))

(declare-fun d!28069 () Bool)

(declare-fun lt!53086 () Bool)

(assert (=> d!28069 (= lt!53086 (select (content!108 (t!5665 (toList!785 lt!52449))) lt!52325))))

(declare-fun e!67811 () Bool)

(assert (=> d!28069 (= lt!53086 e!67811)))

(declare-fun res!51919 () Bool)

(assert (=> d!28069 (=> (not res!51919) (not e!67811))))

(assert (=> d!28069 (= res!51919 ((_ is Cons!1608) (t!5665 (toList!785 lt!52449))))))

(assert (=> d!28069 (= (contains!819 (t!5665 (toList!785 lt!52449)) lt!52325) lt!53086)))

(declare-fun b!104150 () Bool)

(declare-fun e!67812 () Bool)

(assert (=> b!104150 (= e!67811 e!67812)))

(declare-fun res!51920 () Bool)

(assert (=> b!104150 (=> res!51920 e!67812)))

(assert (=> b!104150 (= res!51920 (= (h!2204 (t!5665 (toList!785 lt!52449))) lt!52325))))

(declare-fun b!104151 () Bool)

(assert (=> b!104151 (= e!67812 (contains!819 (t!5665 (t!5665 (toList!785 lt!52449))) lt!52325))))

(assert (= (and d!28069 res!51919) b!104150))

(assert (= (and b!104150 (not res!51920)) b!104151))

(assert (=> d!28069 m!115033))

(declare-fun m!115145 () Bool)

(assert (=> d!28069 m!115145))

(declare-fun m!115147 () Bool)

(assert (=> b!104151 m!115147))

(assert (=> b!103787 d!28069))

(assert (=> b!103692 d!28005))

(declare-fun d!28071 () Bool)

(declare-fun res!51921 () Bool)

(declare-fun e!67813 () Bool)

(assert (=> d!28071 (=> res!51921 e!67813)))

(assert (=> d!28071 (= res!51921 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52621)))))

(assert (=> d!28071 (= (containsKey!157 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621) e!67813)))

(declare-fun b!104152 () Bool)

(declare-fun e!67814 () Bool)

(assert (=> b!104152 (= e!67813 e!67814)))

(declare-fun res!51922 () Bool)

(assert (=> b!104152 (=> (not res!51922) (not e!67814))))

(assert (=> b!104152 (= res!51922 (and (or (not ((_ is Cons!1608) (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) (bvsle (_1!1197 (h!2204 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52621)) ((_ is Cons!1608) (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52621)))))

(declare-fun b!104153 () Bool)

(assert (=> b!104153 (= e!67814 (containsKey!157 (t!5665 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!52621))))

(assert (= (and d!28071 (not res!51921)) b!104152))

(assert (= (and b!104152 res!51922) b!104153))

(declare-fun m!115149 () Bool)

(assert (=> b!104153 m!115149))

(assert (=> d!27847 d!28071))

(declare-fun d!28073 () Bool)

(assert (=> d!28073 (= (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103389 d!28073))

(declare-fun d!28075 () Bool)

(assert (=> d!28075 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325)))))))

(declare-fun bs!4251 () Bool)

(assert (= bs!4251 d!28075))

(assert (=> bs!4251 m!113765))

(declare-fun m!115151 () Bool)

(assert (=> bs!4251 m!115151))

(assert (=> b!103611 d!28075))

(assert (=> b!103611 d!27733))

(declare-fun d!28077 () Bool)

(declare-fun e!67816 () Bool)

(assert (=> d!28077 e!67816))

(declare-fun res!51923 () Bool)

(assert (=> d!28077 (=> res!51923 e!67816)))

(declare-fun lt!53089 () Bool)

(assert (=> d!28077 (= res!51923 (not lt!53089))))

(declare-fun lt!53088 () Bool)

(assert (=> d!28077 (= lt!53089 lt!53088)))

(declare-fun lt!53090 () Unit!3141)

(declare-fun e!67815 () Unit!3141)

(assert (=> d!28077 (= lt!53090 e!67815)))

(declare-fun c!18013 () Bool)

(assert (=> d!28077 (= c!18013 lt!53088)))

(assert (=> d!28077 (= lt!53088 (containsKey!157 (toList!785 lt!52876) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28077 (= (contains!816 lt!52876 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53089)))

(declare-fun b!104154 () Bool)

(declare-fun lt!53087 () Unit!3141)

(assert (=> b!104154 (= e!67815 lt!53087)))

(assert (=> b!104154 (= lt!53087 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52876) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104154 (isDefined!107 (getValueByKey!153 (toList!785 lt!52876) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104155 () Bool)

(declare-fun Unit!3182 () Unit!3141)

(assert (=> b!104155 (= e!67815 Unit!3182)))

(declare-fun b!104156 () Bool)

(assert (=> b!104156 (= e!67816 (isDefined!107 (getValueByKey!153 (toList!785 lt!52876) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28077 c!18013) b!104154))

(assert (= (and d!28077 (not c!18013)) b!104155))

(assert (= (and d!28077 (not res!51923)) b!104156))

(declare-fun m!115153 () Bool)

(assert (=> d!28077 m!115153))

(declare-fun m!115155 () Bool)

(assert (=> b!104154 m!115155))

(declare-fun m!115157 () Bool)

(assert (=> b!104154 m!115157))

(assert (=> b!104154 m!115157))

(declare-fun m!115159 () Bool)

(assert (=> b!104154 m!115159))

(assert (=> b!104156 m!115157))

(assert (=> b!104156 m!115157))

(assert (=> b!104156 m!115159))

(assert (=> bm!10892 d!28077))

(declare-fun d!28079 () Bool)

(assert (=> d!28079 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4252 () Bool)

(assert (= bs!4252 d!28079))

(assert (=> bs!4252 m!114303))

(declare-fun m!115161 () Bool)

(assert (=> bs!4252 m!115161))

(assert (=> b!103813 d!28079))

(declare-fun b!104159 () Bool)

(declare-fun e!67818 () Option!159)

(assert (=> b!104159 (= e!67818 (getValueByKey!153 (t!5665 (toList!785 lt!52612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104157 () Bool)

(declare-fun e!67817 () Option!159)

(assert (=> b!104157 (= e!67817 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52612)))))))

(declare-fun d!28081 () Bool)

(declare-fun c!18014 () Bool)

(assert (=> d!28081 (= c!18014 (and ((_ is Cons!1608) (toList!785 lt!52612)) (= (_1!1197 (h!2204 (toList!785 lt!52612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28081 (= (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000) e!67817)))

(declare-fun b!104158 () Bool)

(assert (=> b!104158 (= e!67817 e!67818)))

(declare-fun c!18015 () Bool)

(assert (=> b!104158 (= c!18015 (and ((_ is Cons!1608) (toList!785 lt!52612)) (not (= (_1!1197 (h!2204 (toList!785 lt!52612))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104160 () Bool)

(assert (=> b!104160 (= e!67818 None!157)))

(assert (= (and d!28081 c!18014) b!104157))

(assert (= (and d!28081 (not c!18014)) b!104158))

(assert (= (and b!104158 c!18015) b!104159))

(assert (= (and b!104158 (not c!18015)) b!104160))

(declare-fun m!115163 () Bool)

(assert (=> b!104159 m!115163))

(assert (=> b!103813 d!28081))

(declare-fun d!28083 () Bool)

(assert (=> d!28083 (= ($colon$colon!79 e!67499 (ite c!17867 (h!2204 (toList!785 (+!134 lt!52333 lt!52331))) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325)))) (Cons!1608 (ite c!17867 (h!2204 (toList!785 (+!134 lt!52333 lt!52331))) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))) e!67499))))

(assert (=> bm!10871 d!28083))

(declare-fun d!28085 () Bool)

(assert (=> d!28085 (= (apply!97 lt!52696 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52696) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4253 () Bool)

(assert (= bs!4253 d!28085))

(assert (=> bs!4253 m!115039))

(assert (=> bs!4253 m!115039))

(declare-fun m!115165 () Bool)

(assert (=> bs!4253 m!115165))

(assert (=> b!103478 d!28085))

(declare-fun d!28087 () Bool)

(declare-fun e!67819 () Bool)

(assert (=> d!28087 e!67819))

(declare-fun res!51924 () Bool)

(assert (=> d!28087 (=> (not res!51924) (not e!67819))))

(assert (=> d!28087 (= res!51924 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 lt!52852))))))

(declare-fun lt!53091 () Unit!3141)

(assert (=> d!28087 (= lt!53091 (choose!647 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (defaultEntry!2560 newMap!16)))))

(assert (=> d!28087 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28087 (= (lemmaValidKeyInArrayIsInListMap!105 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (defaultEntry!2560 newMap!16)) lt!53091)))

(declare-fun b!104161 () Bool)

(assert (=> b!104161 (= e!67819 (contains!816 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 lt!52852) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(assert (= (and d!28087 res!51924) b!104161))

(declare-fun m!115167 () Bool)

(assert (=> d!28087 m!115167))

(assert (=> d!28087 m!113985))

(assert (=> b!104161 m!114377))

(declare-fun m!115169 () Bool)

(assert (=> b!104161 m!115169))

(assert (=> b!104161 m!114377))

(assert (=> b!104161 m!115169))

(declare-fun m!115171 () Bool)

(assert (=> b!104161 m!115171))

(assert (=> d!27801 d!28087))

(declare-fun b!104162 () Bool)

(declare-fun e!67821 () (_ BitVec 32))

(assert (=> b!104162 (= e!67821 #b00000000000000000000000000000000)))

(declare-fun bm!10929 () Bool)

(declare-fun call!10932 () (_ BitVec 32))

(assert (=> bm!10929 (= call!10932 (arrayCountValidKeys!0 lt!52840 (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001) (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001)))))

(declare-fun b!104163 () Bool)

(declare-fun e!67820 () (_ BitVec 32))

(assert (=> b!104163 (= e!67820 call!10932)))

(declare-fun lt!53092 () (_ BitVec 32))

(declare-fun d!28089 () Bool)

(assert (=> d!28089 (and (bvsge lt!53092 #b00000000000000000000000000000000) (bvsle lt!53092 (bvsub (size!2299 lt!52840) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(assert (=> d!28089 (= lt!53092 e!67821)))

(declare-fun c!18016 () Bool)

(assert (=> d!28089 (= c!18016 (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001)))))

(assert (=> d!28089 (and (bvsle (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001)) (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001) (size!2299 lt!52840)))))

(assert (=> d!28089 (= (arrayCountValidKeys!0 lt!52840 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001)) lt!53092)))

(declare-fun b!104164 () Bool)

(assert (=> b!104164 (= e!67821 e!67820)))

(declare-fun c!18017 () Bool)

(assert (=> b!104164 (= c!18017 (validKeyInArray!0 (select (arr!2044 lt!52840) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(declare-fun b!104165 () Bool)

(assert (=> b!104165 (= e!67820 (bvadd #b00000000000000000000000000000001 call!10932))))

(assert (= (and d!28089 c!18016) b!104162))

(assert (= (and d!28089 (not c!18016)) b!104164))

(assert (= (and b!104164 c!18017) b!104165))

(assert (= (and b!104164 (not c!18017)) b!104163))

(assert (= (or b!104165 b!104163) bm!10929))

(declare-fun m!115173 () Bool)

(assert (=> bm!10929 m!115173))

(declare-fun m!115175 () Bool)

(assert (=> b!104164 m!115175))

(assert (=> b!104164 m!115175))

(declare-fun m!115177 () Bool)

(assert (=> b!104164 m!115177))

(assert (=> d!27801 d!28089))

(declare-fun c!18018 () Bool)

(declare-fun call!10933 () Bool)

(declare-fun bm!10930 () Bool)

(assert (=> bm!10930 (= call!10933 (arrayNoDuplicates!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (bvadd lt!52834 #b00000000000000000000000000000001) (ite c!18018 (Cons!1609 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) lt!52834) lt!52842) lt!52842)))))

(declare-fun b!104166 () Bool)

(declare-fun e!67824 () Bool)

(declare-fun e!67825 () Bool)

(assert (=> b!104166 (= e!67824 e!67825)))

(assert (=> b!104166 (= c!18018 (validKeyInArray!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) lt!52834)))))

(declare-fun b!104167 () Bool)

(assert (=> b!104167 (= e!67825 call!10933)))

(declare-fun d!28091 () Bool)

(declare-fun res!51926 () Bool)

(declare-fun e!67823 () Bool)

(assert (=> d!28091 (=> res!51926 e!67823)))

(assert (=> d!28091 (= res!51926 (bvsge lt!52834 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(assert (=> d!28091 (= (arrayNoDuplicates!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) lt!52834 lt!52842) e!67823)))

(declare-fun b!104168 () Bool)

(assert (=> b!104168 (= e!67823 e!67824)))

(declare-fun res!51927 () Bool)

(assert (=> b!104168 (=> (not res!51927) (not e!67824))))

(declare-fun e!67822 () Bool)

(assert (=> b!104168 (= res!51927 (not e!67822))))

(declare-fun res!51925 () Bool)

(assert (=> b!104168 (=> (not res!51925) (not e!67822))))

(assert (=> b!104168 (= res!51925 (validKeyInArray!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) lt!52834)))))

(declare-fun b!104169 () Bool)

(assert (=> b!104169 (= e!67825 call!10933)))

(declare-fun b!104170 () Bool)

(assert (=> b!104170 (= e!67822 (contains!818 lt!52842 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) lt!52834)))))

(assert (= (and d!28091 (not res!51926)) b!104168))

(assert (= (and b!104168 res!51925) b!104170))

(assert (= (and b!104168 res!51927) b!104166))

(assert (= (and b!104166 c!18018) b!104167))

(assert (= (and b!104166 (not c!18018)) b!104169))

(assert (= (or b!104167 b!104169) bm!10930))

(declare-fun m!115179 () Bool)

(assert (=> bm!10930 m!115179))

(declare-fun m!115181 () Bool)

(assert (=> bm!10930 m!115181))

(assert (=> b!104166 m!115179))

(assert (=> b!104166 m!115179))

(declare-fun m!115183 () Bool)

(assert (=> b!104166 m!115183))

(assert (=> b!104168 m!115179))

(assert (=> b!104168 m!115179))

(assert (=> b!104168 m!115183))

(assert (=> b!104170 m!115179))

(assert (=> b!104170 m!115179))

(declare-fun m!115185 () Bool)

(assert (=> b!104170 m!115185))

(assert (=> d!27801 d!28091))

(declare-fun b!104179 () Bool)

(declare-fun res!51939 () Bool)

(declare-fun e!67830 () Bool)

(assert (=> b!104179 (=> (not res!51939) (not e!67830))))

(assert (=> b!104179 (= res!51939 (not (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))))

(declare-fun b!104181 () Bool)

(assert (=> b!104181 (= e!67830 (bvslt (size!2299 (_keys!4261 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun d!28093 () Bool)

(declare-fun e!67831 () Bool)

(assert (=> d!28093 e!67831))

(declare-fun res!51936 () Bool)

(assert (=> d!28093 (=> (not res!51936) (not e!67831))))

(assert (=> d!28093 (= res!51936 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 (_keys!4261 newMap!16)))))))

(declare-fun lt!53095 () Unit!3141)

(declare-fun choose!1 (array!4311 (_ BitVec 32) (_ BitVec 64)) Unit!3141)

(assert (=> d!28093 (= lt!53095 (choose!1 (_keys!4261 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28093 e!67830))

(declare-fun res!51938 () Bool)

(assert (=> d!28093 (=> (not res!51938) (not e!67830))))

(assert (=> d!28093 (= res!51938 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 (_keys!4261 newMap!16)))))))

(assert (=> d!28093 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4261 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!53095)))

(declare-fun b!104182 () Bool)

(assert (=> b!104182 (= e!67831 (= (arrayCountValidKeys!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4261 newMap!16) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!104180 () Bool)

(declare-fun res!51937 () Bool)

(assert (=> b!104180 (=> (not res!51937) (not e!67830))))

(assert (=> b!104180 (= res!51937 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!28093 res!51938) b!104179))

(assert (= (and b!104179 res!51939) b!104180))

(assert (= (and b!104180 res!51937) b!104181))

(assert (= (and d!28093 res!51936) b!104182))

(declare-fun m!115187 () Bool)

(assert (=> b!104179 m!115187))

(assert (=> b!104179 m!115187))

(declare-fun m!115189 () Bool)

(assert (=> b!104179 m!115189))

(assert (=> d!28093 m!113535))

(declare-fun m!115191 () Bool)

(assert (=> d!28093 m!115191))

(assert (=> b!104182 m!114371))

(assert (=> b!104182 m!114401))

(assert (=> b!104182 m!113805))

(assert (=> b!104180 m!113535))

(assert (=> b!104180 m!113715))

(assert (=> d!27801 d!28093))

(declare-fun d!28095 () Bool)

(declare-fun e!67833 () Bool)

(assert (=> d!28095 e!67833))

(declare-fun res!51940 () Bool)

(assert (=> d!28095 (=> res!51940 e!67833)))

(declare-fun lt!53098 () Bool)

(assert (=> d!28095 (= res!51940 (not lt!53098))))

(declare-fun lt!53097 () Bool)

(assert (=> d!28095 (= lt!53098 lt!53097)))

(declare-fun lt!53099 () Unit!3141)

(declare-fun e!67832 () Unit!3141)

(assert (=> d!28095 (= lt!53099 e!67832)))

(declare-fun c!18019 () Bool)

(assert (=> d!28095 (= c!18019 lt!53097)))

(assert (=> d!28095 (= lt!53097 (containsKey!157 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28095 (= (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!53098)))

(declare-fun b!104183 () Bool)

(declare-fun lt!53096 () Unit!3141)

(assert (=> b!104183 (= e!67832 lt!53096)))

(assert (=> b!104183 (= lt!53096 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!104183 (isDefined!107 (getValueByKey!153 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!104184 () Bool)

(declare-fun Unit!3183 () Unit!3141)

(assert (=> b!104184 (= e!67832 Unit!3183)))

(declare-fun b!104185 () Bool)

(assert (=> b!104185 (= e!67833 (isDefined!107 (getValueByKey!153 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (= (and d!28095 c!18019) b!104183))

(assert (= (and d!28095 (not c!18019)) b!104184))

(assert (= (and d!28095 (not res!51940)) b!104185))

(assert (=> d!28095 m!113535))

(declare-fun m!115193 () Bool)

(assert (=> d!28095 m!115193))

(assert (=> b!104183 m!113535))

(declare-fun m!115195 () Bool)

(assert (=> b!104183 m!115195))

(assert (=> b!104183 m!113535))

(declare-fun m!115197 () Bool)

(assert (=> b!104183 m!115197))

(assert (=> b!104183 m!115197))

(declare-fun m!115199 () Bool)

(assert (=> b!104183 m!115199))

(assert (=> b!104185 m!113535))

(assert (=> b!104185 m!115197))

(assert (=> b!104185 m!115197))

(assert (=> b!104185 m!115199))

(assert (=> d!27801 d!28095))

(assert (=> d!27801 d!27693))

(assert (=> d!27801 d!27667))

(declare-fun d!28097 () Bool)

(declare-fun e!67835 () Bool)

(assert (=> d!28097 e!67835))

(declare-fun res!51941 () Bool)

(assert (=> d!28097 (=> res!51941 e!67835)))

(declare-fun lt!53102 () Bool)

(assert (=> d!28097 (= res!51941 (not lt!53102))))

(declare-fun lt!53101 () Bool)

(assert (=> d!28097 (= lt!53102 lt!53101)))

(declare-fun lt!53103 () Unit!3141)

(declare-fun e!67834 () Unit!3141)

(assert (=> d!28097 (= lt!53103 e!67834)))

(declare-fun c!18020 () Bool)

(assert (=> d!28097 (= c!18020 lt!53101)))

(assert (=> d!28097 (= lt!53101 (containsKey!157 (toList!785 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(assert (=> d!28097 (= (contains!816 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))) lt!53102)))

(declare-fun b!104186 () Bool)

(declare-fun lt!53100 () Unit!3141)

(assert (=> b!104186 (= e!67834 lt!53100)))

(assert (=> b!104186 (= lt!53100 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(assert (=> b!104186 (isDefined!107 (getValueByKey!153 (toList!785 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(declare-fun b!104187 () Bool)

(declare-fun Unit!3184 () Unit!3141)

(assert (=> b!104187 (= e!67834 Unit!3184)))

(declare-fun b!104188 () Bool)

(assert (=> b!104188 (= e!67835 (isDefined!107 (getValueByKey!153 (toList!785 (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))))

(assert (= (and d!28097 c!18020) b!104186))

(assert (= (and d!28097 (not c!18020)) b!104187))

(assert (= (and d!28097 (not res!51941)) b!104188))

(assert (=> d!28097 m!114373))

(declare-fun m!115201 () Bool)

(assert (=> d!28097 m!115201))

(assert (=> b!104186 m!114373))

(declare-fun m!115203 () Bool)

(assert (=> b!104186 m!115203))

(assert (=> b!104186 m!114373))

(declare-fun m!115205 () Bool)

(assert (=> b!104186 m!115205))

(assert (=> b!104186 m!115205))

(declare-fun m!115207 () Bool)

(assert (=> b!104186 m!115207))

(assert (=> b!104188 m!114373))

(assert (=> b!104188 m!115205))

(assert (=> b!104188 m!115205))

(assert (=> b!104188 m!115207))

(assert (=> d!27801 d!28097))

(assert (=> d!27801 d!27761))

(declare-fun d!28099 () Bool)

(assert (=> d!28099 (arrayContainsKey!0 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!53106 () Unit!3141)

(declare-fun choose!13 (array!4311 (_ BitVec 64) (_ BitVec 32)) Unit!3141)

(assert (=> d!28099 (= lt!53106 (choose!13 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))

(assert (=> d!28099 (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000)))

(assert (=> d!28099 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))) lt!53106)))

(declare-fun bs!4254 () Bool)

(assert (= bs!4254 d!28099))

(assert (=> bs!4254 m!113535))

(assert (=> bs!4254 m!114381))

(assert (=> bs!4254 m!113535))

(declare-fun m!115209 () Bool)

(assert (=> bs!4254 m!115209))

(assert (=> d!27801 d!28099))

(assert (=> d!27801 d!27719))

(declare-fun d!28101 () Bool)

(declare-fun e!67838 () Bool)

(assert (=> d!28101 e!67838))

(declare-fun res!51944 () Bool)

(assert (=> d!28101 (=> (not res!51944) (not e!67838))))

(assert (=> d!28101 (= res!51944 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 (_keys!4261 newMap!16)))))))

(declare-fun lt!53109 () Unit!3141)

(declare-fun choose!41 (array!4311 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1613) Unit!3141)

(assert (=> d!28101 (= lt!53109 (choose!41 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) lt!52834 lt!52842))))

(assert (=> d!28101 (bvslt (size!2299 (_keys!4261 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!28101 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) lt!52834 lt!52842) lt!53109)))

(declare-fun b!104191 () Bool)

(assert (=> b!104191 (= e!67838 (arrayNoDuplicates!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) lt!52834 lt!52842))))

(assert (= (and d!28101 res!51944) b!104191))

(assert (=> d!28101 m!113535))

(declare-fun m!115211 () Bool)

(assert (=> d!28101 m!115211))

(assert (=> b!104191 m!114371))

(assert (=> b!104191 m!114395))

(assert (=> d!27801 d!28101))

(declare-fun d!28103 () Bool)

(declare-fun e!67841 () Bool)

(assert (=> d!28103 e!67841))

(declare-fun res!51947 () Bool)

(assert (=> d!28103 (=> (not res!51947) (not e!67841))))

(assert (=> d!28103 (= res!51947 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 (_keys!4261 newMap!16))) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2300 (_values!2543 newMap!16)))))))

(declare-fun lt!53112 () Unit!3141)

(declare-fun choose!657 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3141)

(assert (=> d!28103 (= lt!53112 (choose!657 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28103 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28103 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)) lt!53112)))

(declare-fun b!104194 () Bool)

(assert (=> b!104194 (= e!67841 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (getCurrentListMap!462 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))))))

(assert (= (and d!28103 res!51947) b!104194))

(assert (=> d!28103 m!113535))

(declare-fun m!115213 () Bool)

(assert (=> d!28103 m!115213))

(assert (=> d!28103 m!113985))

(assert (=> b!104194 m!114389))

(assert (=> b!104194 m!114397))

(assert (=> b!104194 m!114371))

(assert (=> b!104194 m!113847))

(assert (=> b!104194 m!114065))

(assert (=> b!104194 m!113847))

(assert (=> d!27801 d!28103))

(declare-fun d!28105 () Bool)

(declare-fun res!51948 () Bool)

(declare-fun e!67842 () Bool)

(assert (=> d!28105 (=> res!51948 e!67842)))

(assert (=> d!28105 (= res!51948 (= (select (arr!2044 lt!52847) #b00000000000000000000000000000000) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28105 (= (arrayContainsKey!0 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000) e!67842)))

(declare-fun b!104195 () Bool)

(declare-fun e!67843 () Bool)

(assert (=> b!104195 (= e!67842 e!67843)))

(declare-fun res!51949 () Bool)

(assert (=> b!104195 (=> (not res!51949) (not e!67843))))

(assert (=> b!104195 (= res!51949 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 lt!52847)))))

(declare-fun b!104196 () Bool)

(assert (=> b!104196 (= e!67843 (arrayContainsKey!0 lt!52847 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28105 (not res!51948)) b!104195))

(assert (= (and b!104195 res!51949) b!104196))

(declare-fun m!115215 () Bool)

(assert (=> d!28105 m!115215))

(assert (=> b!104196 m!113535))

(declare-fun m!115217 () Bool)

(assert (=> b!104196 m!115217))

(assert (=> d!27801 d!28105))

(declare-fun d!28107 () Bool)

(assert (=> d!28107 (= (arrayCountValidKeys!0 lt!52840 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (bvadd (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!53115 () Unit!3141)

(declare-fun choose!2 (array!4311 (_ BitVec 32)) Unit!3141)

(assert (=> d!28107 (= lt!53115 (choose!2 lt!52840 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))))))

(declare-fun e!67846 () Bool)

(assert (=> d!28107 e!67846))

(declare-fun res!51954 () Bool)

(assert (=> d!28107 (=> (not res!51954) (not e!67846))))

(assert (=> d!28107 (= res!51954 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 lt!52840))))))

(assert (=> d!28107 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!52840 (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554))) lt!53115)))

(declare-fun b!104201 () Bool)

(declare-fun res!51955 () Bool)

(assert (=> b!104201 (=> (not res!51955) (not e!67846))))

(assert (=> b!104201 (= res!51955 (validKeyInArray!0 (select (arr!2044 lt!52840) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)))))))

(declare-fun b!104202 () Bool)

(assert (=> b!104202 (= e!67846 (bvslt (size!2299 lt!52840) #b01111111111111111111111111111111))))

(assert (= (and d!28107 res!51954) b!104201))

(assert (= (and b!104201 res!51955) b!104202))

(assert (=> d!28107 m!114391))

(declare-fun m!115219 () Bool)

(assert (=> d!28107 m!115219))

(assert (=> b!104201 m!115175))

(assert (=> b!104201 m!115175))

(assert (=> b!104201 m!115177))

(assert (=> d!27801 d!28107))

(declare-fun e!67859 () Bool)

(declare-fun b!104203 () Bool)

(assert (=> b!104203 (= e!67859 (validKeyInArray!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104204 () Bool)

(declare-fun c!18024 () Bool)

(assert (=> b!104204 (= c!18024 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67856 () ListLongMap!1539)

(declare-fun e!67857 () ListLongMap!1539)

(assert (=> b!104204 (= e!67856 e!67857)))

(declare-fun b!104205 () Bool)

(declare-fun e!67852 () Bool)

(declare-fun call!10934 () Bool)

(assert (=> b!104205 (= e!67852 (not call!10934))))

(declare-fun call!10937 () ListLongMap!1539)

(declare-fun bm!10931 () Bool)

(assert (=> bm!10931 (= call!10937 (getCurrentListMapNoExtraKeys!99 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53126 () ListLongMap!1539)

(declare-fun b!104206 () Bool)

(declare-fun e!67851 () Bool)

(assert (=> b!104206 (= e!67851 (= (apply!97 lt!53126 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104206 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))))))

(assert (=> b!104206 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun b!104207 () Bool)

(declare-fun e!67858 () ListLongMap!1539)

(assert (=> b!104207 (= e!67858 e!67856)))

(declare-fun c!18022 () Bool)

(assert (=> b!104207 (= c!18022 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104208 () Bool)

(declare-fun e!67853 () Unit!3141)

(declare-fun lt!53130 () Unit!3141)

(assert (=> b!104208 (= e!67853 lt!53130)))

(declare-fun lt!53117 () ListLongMap!1539)

(assert (=> b!104208 (= lt!53117 (getCurrentListMapNoExtraKeys!99 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53119 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53119 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53135 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53135 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53137 () Unit!3141)

(assert (=> b!104208 (= lt!53137 (addStillContains!73 lt!53117 lt!53119 (zeroValue!2437 newMap!16) lt!53135))))

(assert (=> b!104208 (contains!816 (+!134 lt!53117 (tuple2!2373 lt!53119 (zeroValue!2437 newMap!16))) lt!53135)))

(declare-fun lt!53133 () Unit!3141)

(assert (=> b!104208 (= lt!53133 lt!53137)))

(declare-fun lt!53128 () ListLongMap!1539)

(assert (=> b!104208 (= lt!53128 (getCurrentListMapNoExtraKeys!99 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53136 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53136 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53118 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53118 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53123 () Unit!3141)

(assert (=> b!104208 (= lt!53123 (addApplyDifferent!73 lt!53128 lt!53136 (minValue!2437 newMap!16) lt!53118))))

(assert (=> b!104208 (= (apply!97 (+!134 lt!53128 (tuple2!2373 lt!53136 (minValue!2437 newMap!16))) lt!53118) (apply!97 lt!53128 lt!53118))))

(declare-fun lt!53116 () Unit!3141)

(assert (=> b!104208 (= lt!53116 lt!53123)))

(declare-fun lt!53134 () ListLongMap!1539)

(assert (=> b!104208 (= lt!53134 (getCurrentListMapNoExtraKeys!99 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53129 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53131 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53131 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53120 () Unit!3141)

(assert (=> b!104208 (= lt!53120 (addApplyDifferent!73 lt!53134 lt!53129 (zeroValue!2437 newMap!16) lt!53131))))

(assert (=> b!104208 (= (apply!97 (+!134 lt!53134 (tuple2!2373 lt!53129 (zeroValue!2437 newMap!16))) lt!53131) (apply!97 lt!53134 lt!53131))))

(declare-fun lt!53125 () Unit!3141)

(assert (=> b!104208 (= lt!53125 lt!53120)))

(declare-fun lt!53127 () ListLongMap!1539)

(assert (=> b!104208 (= lt!53127 (getCurrentListMapNoExtraKeys!99 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53132 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53132 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53122 () (_ BitVec 64))

(assert (=> b!104208 (= lt!53122 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!104208 (= lt!53130 (addApplyDifferent!73 lt!53127 lt!53132 (minValue!2437 newMap!16) lt!53122))))

(assert (=> b!104208 (= (apply!97 (+!134 lt!53127 (tuple2!2373 lt!53132 (minValue!2437 newMap!16))) lt!53122) (apply!97 lt!53127 lt!53122))))

(declare-fun b!104209 () Bool)

(declare-fun e!67847 () Bool)

(declare-fun e!67850 () Bool)

(assert (=> b!104209 (= e!67847 e!67850)))

(declare-fun res!51958 () Bool)

(declare-fun call!10936 () Bool)

(assert (=> b!104209 (= res!51958 call!10936)))

(assert (=> b!104209 (=> (not res!51958) (not e!67850))))

(declare-fun b!104210 () Bool)

(declare-fun e!67855 () Bool)

(assert (=> b!104210 (= e!67855 (validKeyInArray!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104211 () Bool)

(declare-fun e!67854 () Bool)

(assert (=> b!104211 (= e!67854 (= (apply!97 lt!53126 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun bm!10932 () Bool)

(declare-fun call!10940 () ListLongMap!1539)

(declare-fun call!10939 () ListLongMap!1539)

(declare-fun c!18021 () Bool)

(declare-fun call!10935 () ListLongMap!1539)

(assert (=> bm!10932 (= call!10940 (+!134 (ite c!18021 call!10937 (ite c!18022 call!10935 call!10939)) (ite (or c!18021 c!18022) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!10933 () Bool)

(assert (=> bm!10933 (= call!10935 call!10937)))

(declare-fun b!104212 () Bool)

(declare-fun res!51959 () Bool)

(declare-fun e!67849 () Bool)

(assert (=> b!104212 (=> (not res!51959) (not e!67849))))

(declare-fun e!67848 () Bool)

(assert (=> b!104212 (= res!51959 e!67848)))

(declare-fun res!51961 () Bool)

(assert (=> b!104212 (=> res!51961 e!67848)))

(assert (=> b!104212 (= res!51961 (not e!67859))))

(declare-fun res!51956 () Bool)

(assert (=> b!104212 (=> (not res!51956) (not e!67859))))

(assert (=> b!104212 (= res!51956 (bvslt #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun bm!10934 () Bool)

(assert (=> bm!10934 (= call!10936 (contains!816 lt!53126 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10935 () Bool)

(assert (=> bm!10935 (= call!10939 call!10935)))

(declare-fun b!104213 () Bool)

(assert (=> b!104213 (= e!67850 (= (apply!97 lt!53126 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!28109 () Bool)

(assert (=> d!28109 e!67849))

(declare-fun res!51962 () Bool)

(assert (=> d!28109 (=> (not res!51962) (not e!67849))))

(assert (=> d!28109 (= res!51962 (or (bvsge #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))))

(declare-fun lt!53121 () ListLongMap!1539)

(assert (=> d!28109 (= lt!53126 lt!53121)))

(declare-fun lt!53124 () Unit!3141)

(assert (=> d!28109 (= lt!53124 e!67853)))

(declare-fun c!18025 () Bool)

(assert (=> d!28109 (= c!18025 e!67855)))

(declare-fun res!51964 () Bool)

(assert (=> d!28109 (=> (not res!51964) (not e!67855))))

(assert (=> d!28109 (= res!51964 (bvslt #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(assert (=> d!28109 (= lt!53121 e!67858)))

(assert (=> d!28109 (= c!18021 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28109 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28109 (= (getCurrentListMap!462 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53126)))

(declare-fun b!104214 () Bool)

(assert (=> b!104214 (= e!67858 (+!134 call!10940 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!104215 () Bool)

(declare-fun res!51960 () Bool)

(assert (=> b!104215 (=> (not res!51960) (not e!67849))))

(assert (=> b!104215 (= res!51960 e!67852)))

(declare-fun c!18023 () Bool)

(assert (=> b!104215 (= c!18023 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104216 () Bool)

(assert (=> b!104216 (= e!67852 e!67854)))

(declare-fun res!51957 () Bool)

(assert (=> b!104216 (= res!51957 call!10934)))

(assert (=> b!104216 (=> (not res!51957) (not e!67854))))

(declare-fun b!104217 () Bool)

(declare-fun call!10938 () ListLongMap!1539)

(assert (=> b!104217 (= e!67856 call!10938)))

(declare-fun bm!10936 () Bool)

(assert (=> bm!10936 (= call!10938 call!10940)))

(declare-fun b!104218 () Bool)

(declare-fun Unit!3185 () Unit!3141)

(assert (=> b!104218 (= e!67853 Unit!3185)))

(declare-fun b!104219 () Bool)

(assert (=> b!104219 (= e!67849 e!67847)))

(declare-fun c!18026 () Bool)

(assert (=> b!104219 (= c!18026 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104220 () Bool)

(assert (=> b!104220 (= e!67857 call!10938)))

(declare-fun b!104221 () Bool)

(assert (=> b!104221 (= e!67847 (not call!10936))))

(declare-fun b!104222 () Bool)

(assert (=> b!104222 (= e!67857 call!10939)))

(declare-fun b!104223 () Bool)

(assert (=> b!104223 (= e!67848 e!67851)))

(declare-fun res!51963 () Bool)

(assert (=> b!104223 (=> (not res!51963) (not e!67851))))

(assert (=> b!104223 (= res!51963 (contains!816 lt!53126 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!104223 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun bm!10937 () Bool)

(assert (=> bm!10937 (= call!10934 (contains!816 lt!53126 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28109 c!18021) b!104214))

(assert (= (and d!28109 (not c!18021)) b!104207))

(assert (= (and b!104207 c!18022) b!104217))

(assert (= (and b!104207 (not c!18022)) b!104204))

(assert (= (and b!104204 c!18024) b!104220))

(assert (= (and b!104204 (not c!18024)) b!104222))

(assert (= (or b!104220 b!104222) bm!10935))

(assert (= (or b!104217 bm!10935) bm!10933))

(assert (= (or b!104217 b!104220) bm!10936))

(assert (= (or b!104214 bm!10933) bm!10931))

(assert (= (or b!104214 bm!10936) bm!10932))

(assert (= (and d!28109 res!51964) b!104210))

(assert (= (and d!28109 c!18025) b!104208))

(assert (= (and d!28109 (not c!18025)) b!104218))

(assert (= (and d!28109 res!51962) b!104212))

(assert (= (and b!104212 res!51956) b!104203))

(assert (= (and b!104212 (not res!51961)) b!104223))

(assert (= (and b!104223 res!51963) b!104206))

(assert (= (and b!104212 res!51959) b!104215))

(assert (= (and b!104215 c!18023) b!104216))

(assert (= (and b!104215 (not c!18023)) b!104205))

(assert (= (and b!104216 res!51957) b!104211))

(assert (= (or b!104216 b!104205) bm!10937))

(assert (= (and b!104215 res!51960) b!104219))

(assert (= (and b!104219 c!18026) b!104209))

(assert (= (and b!104219 (not c!18026)) b!104221))

(assert (= (and b!104209 res!51958) b!104213))

(assert (= (or b!104209 b!104221) bm!10934))

(declare-fun b_lambda!4641 () Bool)

(assert (=> (not b_lambda!4641) (not b!104206)))

(assert (=> b!104206 t!5677))

(declare-fun b_and!6425 () Bool)

(assert (= b_and!6421 (and (=> t!5677 result!3431) b_and!6425)))

(assert (=> b!104206 t!5679))

(declare-fun b_and!6427 () Bool)

(assert (= b_and!6423 (and (=> t!5679 result!3433) b_and!6427)))

(declare-fun m!115221 () Bool)

(assert (=> bm!10937 m!115221))

(declare-fun m!115223 () Bool)

(assert (=> b!104208 m!115223))

(declare-fun m!115225 () Bool)

(assert (=> b!104208 m!115225))

(declare-fun m!115227 () Bool)

(assert (=> b!104208 m!115227))

(declare-fun m!115229 () Bool)

(assert (=> b!104208 m!115229))

(declare-fun m!115231 () Bool)

(assert (=> b!104208 m!115231))

(declare-fun m!115233 () Bool)

(assert (=> b!104208 m!115233))

(assert (=> b!104208 m!115223))

(declare-fun m!115235 () Bool)

(assert (=> b!104208 m!115235))

(declare-fun m!115237 () Bool)

(assert (=> b!104208 m!115237))

(declare-fun m!115239 () Bool)

(assert (=> b!104208 m!115239))

(declare-fun m!115241 () Bool)

(assert (=> b!104208 m!115241))

(declare-fun m!115243 () Bool)

(assert (=> b!104208 m!115243))

(assert (=> b!104208 m!115233))

(declare-fun m!115245 () Bool)

(assert (=> b!104208 m!115245))

(declare-fun m!115247 () Bool)

(assert (=> b!104208 m!115247))

(assert (=> b!104208 m!115231))

(declare-fun m!115249 () Bool)

(assert (=> b!104208 m!115249))

(assert (=> b!104208 m!115227))

(declare-fun m!115251 () Bool)

(assert (=> b!104208 m!115251))

(declare-fun m!115253 () Bool)

(assert (=> b!104208 m!115253))

(declare-fun m!115255 () Bool)

(assert (=> b!104208 m!115255))

(declare-fun m!115257 () Bool)

(assert (=> bm!10932 m!115257))

(assert (=> d!28109 m!113985))

(assert (=> b!104206 m!113987))

(assert (=> b!104206 m!115243))

(declare-fun m!115259 () Bool)

(assert (=> b!104206 m!115259))

(declare-fun m!115261 () Bool)

(assert (=> b!104206 m!115261))

(assert (=> b!104206 m!113987))

(declare-fun m!115263 () Bool)

(assert (=> b!104206 m!115263))

(assert (=> b!104206 m!115243))

(assert (=> b!104206 m!115261))

(assert (=> b!104223 m!115243))

(assert (=> b!104223 m!115243))

(declare-fun m!115265 () Bool)

(assert (=> b!104223 m!115265))

(assert (=> b!104210 m!115243))

(assert (=> b!104210 m!115243))

(declare-fun m!115267 () Bool)

(assert (=> b!104210 m!115267))

(declare-fun m!115269 () Bool)

(assert (=> b!104213 m!115269))

(assert (=> b!104203 m!115243))

(assert (=> b!104203 m!115243))

(assert (=> b!104203 m!115267))

(declare-fun m!115271 () Bool)

(assert (=> bm!10934 m!115271))

(declare-fun m!115273 () Bool)

(assert (=> b!104211 m!115273))

(assert (=> bm!10931 m!115241))

(declare-fun m!115275 () Bool)

(assert (=> b!104214 m!115275))

(assert (=> d!27801 d!28109))

(declare-fun b!104224 () Bool)

(declare-fun e!67861 () (_ BitVec 32))

(assert (=> b!104224 (= e!67861 #b00000000000000000000000000000000)))

(declare-fun call!10941 () (_ BitVec 32))

(declare-fun bm!10938 () Bool)

(assert (=> bm!10938 (= call!10941 (arrayCountValidKeys!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104225 () Bool)

(declare-fun e!67860 () (_ BitVec 32))

(assert (=> b!104225 (= e!67860 call!10941)))

(declare-fun lt!53138 () (_ BitVec 32))

(declare-fun d!28111 () Bool)

(assert (=> d!28111 (and (bvsge lt!53138 #b00000000000000000000000000000000) (bvsle lt!53138 (bvsub (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!28111 (= lt!53138 e!67861)))

(declare-fun c!18027 () Bool)

(assert (=> d!28111 (= c!18027 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28111 (and (bvsle #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2299 (_keys!4261 newMap!16)) (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(assert (=> d!28111 (= (arrayCountValidKeys!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) lt!53138)))

(declare-fun b!104226 () Bool)

(assert (=> b!104226 (= e!67861 e!67860)))

(declare-fun c!18028 () Bool)

(assert (=> b!104226 (= c!18028 (validKeyInArray!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104227 () Bool)

(assert (=> b!104227 (= e!67860 (bvadd #b00000000000000000000000000000001 call!10941))))

(assert (= (and d!28111 c!18027) b!104224))

(assert (= (and d!28111 (not c!18027)) b!104226))

(assert (= (and b!104226 c!18028) b!104227))

(assert (= (and b!104226 (not c!18028)) b!104225))

(assert (= (or b!104227 b!104225) bm!10938))

(declare-fun m!115277 () Bool)

(assert (=> bm!10938 m!115277))

(assert (=> b!104226 m!115243))

(assert (=> b!104226 m!115243))

(assert (=> b!104226 m!115267))

(assert (=> d!27801 d!28111))

(declare-fun d!28113 () Bool)

(declare-fun e!67864 () Bool)

(assert (=> d!28113 e!67864))

(declare-fun res!51967 () Bool)

(assert (=> d!28113 (=> (not res!51967) (not e!67864))))

(assert (=> d!28113 (= res!51967 (and (bvsge (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) #b00000000000000000000000000000000) (bvslt (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (size!2299 (_keys!4261 newMap!16)))))))

(declare-fun lt!53141 () Unit!3141)

(declare-fun choose!102 ((_ BitVec 64) array!4311 (_ BitVec 32) (_ BitVec 32)) Unit!3141)

(assert (=> d!28113 (= lt!53141 (choose!102 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (mask!6695 newMap!16)))))

(assert (=> d!28113 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28113 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (mask!6695 newMap!16)) lt!53141)))

(declare-fun b!104230 () Bool)

(assert (=> b!104230 (= e!67864 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (mask!6695 newMap!16)))))

(assert (= (and d!28113 res!51967) b!104230))

(assert (=> d!28113 m!113535))

(declare-fun m!115279 () Bool)

(assert (=> d!28113 m!115279))

(assert (=> d!28113 m!113985))

(assert (=> b!104230 m!114371))

(assert (=> b!104230 m!114369))

(assert (=> d!27801 d!28113))

(declare-fun b!104231 () Bool)

(declare-fun e!67877 () Bool)

(assert (=> b!104231 (= e!67877 (validKeyInArray!0 (select (arr!2044 lt!52852) #b00000000000000000000000000000000)))))

(declare-fun b!104232 () Bool)

(declare-fun c!18032 () Bool)

(assert (=> b!104232 (= c!18032 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67874 () ListLongMap!1539)

(declare-fun e!67875 () ListLongMap!1539)

(assert (=> b!104232 (= e!67874 e!67875)))

(declare-fun b!104233 () Bool)

(declare-fun e!67870 () Bool)

(declare-fun call!10942 () Bool)

(assert (=> b!104233 (= e!67870 (not call!10942))))

(declare-fun call!10945 () ListLongMap!1539)

(declare-fun bm!10939 () Bool)

(assert (=> bm!10939 (= call!10945 (getCurrentListMapNoExtraKeys!99 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun e!67869 () Bool)

(declare-fun lt!53152 () ListLongMap!1539)

(declare-fun b!104234 () Bool)

(assert (=> b!104234 (= e!67869 (= (apply!97 lt!53152 (select (arr!2044 lt!52852) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 lt!52831) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 lt!52831)))))

(assert (=> b!104234 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 lt!52852)))))

(declare-fun b!104235 () Bool)

(declare-fun e!67876 () ListLongMap!1539)

(assert (=> b!104235 (= e!67876 e!67874)))

(declare-fun c!18030 () Bool)

(assert (=> b!104235 (= c!18030 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104236 () Bool)

(declare-fun e!67871 () Unit!3141)

(declare-fun lt!53156 () Unit!3141)

(assert (=> b!104236 (= e!67871 lt!53156)))

(declare-fun lt!53143 () ListLongMap!1539)

(assert (=> b!104236 (= lt!53143 (getCurrentListMapNoExtraKeys!99 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53145 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53145 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53161 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53161 (select (arr!2044 lt!52852) #b00000000000000000000000000000000))))

(declare-fun lt!53163 () Unit!3141)

(assert (=> b!104236 (= lt!53163 (addStillContains!73 lt!53143 lt!53145 (zeroValue!2437 newMap!16) lt!53161))))

(assert (=> b!104236 (contains!816 (+!134 lt!53143 (tuple2!2373 lt!53145 (zeroValue!2437 newMap!16))) lt!53161)))

(declare-fun lt!53159 () Unit!3141)

(assert (=> b!104236 (= lt!53159 lt!53163)))

(declare-fun lt!53154 () ListLongMap!1539)

(assert (=> b!104236 (= lt!53154 (getCurrentListMapNoExtraKeys!99 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53162 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53162 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53144 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53144 (select (arr!2044 lt!52852) #b00000000000000000000000000000000))))

(declare-fun lt!53149 () Unit!3141)

(assert (=> b!104236 (= lt!53149 (addApplyDifferent!73 lt!53154 lt!53162 (minValue!2437 newMap!16) lt!53144))))

(assert (=> b!104236 (= (apply!97 (+!134 lt!53154 (tuple2!2373 lt!53162 (minValue!2437 newMap!16))) lt!53144) (apply!97 lt!53154 lt!53144))))

(declare-fun lt!53142 () Unit!3141)

(assert (=> b!104236 (= lt!53142 lt!53149)))

(declare-fun lt!53160 () ListLongMap!1539)

(assert (=> b!104236 (= lt!53160 (getCurrentListMapNoExtraKeys!99 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53155 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53155 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53157 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53157 (select (arr!2044 lt!52852) #b00000000000000000000000000000000))))

(declare-fun lt!53146 () Unit!3141)

(assert (=> b!104236 (= lt!53146 (addApplyDifferent!73 lt!53160 lt!53155 (zeroValue!2437 newMap!16) lt!53157))))

(assert (=> b!104236 (= (apply!97 (+!134 lt!53160 (tuple2!2373 lt!53155 (zeroValue!2437 newMap!16))) lt!53157) (apply!97 lt!53160 lt!53157))))

(declare-fun lt!53151 () Unit!3141)

(assert (=> b!104236 (= lt!53151 lt!53146)))

(declare-fun lt!53153 () ListLongMap!1539)

(assert (=> b!104236 (= lt!53153 (getCurrentListMapNoExtraKeys!99 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53158 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53158 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53148 () (_ BitVec 64))

(assert (=> b!104236 (= lt!53148 (select (arr!2044 lt!52852) #b00000000000000000000000000000000))))

(assert (=> b!104236 (= lt!53156 (addApplyDifferent!73 lt!53153 lt!53158 (minValue!2437 newMap!16) lt!53148))))

(assert (=> b!104236 (= (apply!97 (+!134 lt!53153 (tuple2!2373 lt!53158 (minValue!2437 newMap!16))) lt!53148) (apply!97 lt!53153 lt!53148))))

(declare-fun b!104237 () Bool)

(declare-fun e!67865 () Bool)

(declare-fun e!67868 () Bool)

(assert (=> b!104237 (= e!67865 e!67868)))

(declare-fun res!51970 () Bool)

(declare-fun call!10944 () Bool)

(assert (=> b!104237 (= res!51970 call!10944)))

(assert (=> b!104237 (=> (not res!51970) (not e!67868))))

(declare-fun b!104238 () Bool)

(declare-fun e!67873 () Bool)

(assert (=> b!104238 (= e!67873 (validKeyInArray!0 (select (arr!2044 lt!52852) #b00000000000000000000000000000000)))))

(declare-fun b!104239 () Bool)

(declare-fun e!67872 () Bool)

(assert (=> b!104239 (= e!67872 (= (apply!97 lt!53152 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun c!18029 () Bool)

(declare-fun call!10947 () ListLongMap!1539)

(declare-fun call!10948 () ListLongMap!1539)

(declare-fun bm!10940 () Bool)

(declare-fun call!10943 () ListLongMap!1539)

(assert (=> bm!10940 (= call!10948 (+!134 (ite c!18029 call!10945 (ite c!18030 call!10943 call!10947)) (ite (or c!18029 c!18030) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!10941 () Bool)

(assert (=> bm!10941 (= call!10943 call!10945)))

(declare-fun b!104240 () Bool)

(declare-fun res!51971 () Bool)

(declare-fun e!67867 () Bool)

(assert (=> b!104240 (=> (not res!51971) (not e!67867))))

(declare-fun e!67866 () Bool)

(assert (=> b!104240 (= res!51971 e!67866)))

(declare-fun res!51973 () Bool)

(assert (=> b!104240 (=> res!51973 e!67866)))

(assert (=> b!104240 (= res!51973 (not e!67877))))

(declare-fun res!51968 () Bool)

(assert (=> b!104240 (=> (not res!51968) (not e!67877))))

(assert (=> b!104240 (= res!51968 (bvslt #b00000000000000000000000000000000 (size!2299 lt!52852)))))

(declare-fun bm!10942 () Bool)

(assert (=> bm!10942 (= call!10944 (contains!816 lt!53152 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10943 () Bool)

(assert (=> bm!10943 (= call!10947 call!10943)))

(declare-fun b!104241 () Bool)

(assert (=> b!104241 (= e!67868 (= (apply!97 lt!53152 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!28115 () Bool)

(assert (=> d!28115 e!67867))

(declare-fun res!51974 () Bool)

(assert (=> d!28115 (=> (not res!51974) (not e!67867))))

(assert (=> d!28115 (= res!51974 (or (bvsge #b00000000000000000000000000000000 (size!2299 lt!52852)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 lt!52852)))))))

(declare-fun lt!53147 () ListLongMap!1539)

(assert (=> d!28115 (= lt!53152 lt!53147)))

(declare-fun lt!53150 () Unit!3141)

(assert (=> d!28115 (= lt!53150 e!67871)))

(declare-fun c!18033 () Bool)

(assert (=> d!28115 (= c!18033 e!67873)))

(declare-fun res!51976 () Bool)

(assert (=> d!28115 (=> (not res!51976) (not e!67873))))

(assert (=> d!28115 (= res!51976 (bvslt #b00000000000000000000000000000000 (size!2299 lt!52852)))))

(assert (=> d!28115 (= lt!53147 e!67876)))

(assert (=> d!28115 (= c!18029 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28115 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28115 (= (getCurrentListMap!462 lt!52852 lt!52831 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53152)))

(declare-fun b!104242 () Bool)

(assert (=> b!104242 (= e!67876 (+!134 call!10948 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!104243 () Bool)

(declare-fun res!51972 () Bool)

(assert (=> b!104243 (=> (not res!51972) (not e!67867))))

(assert (=> b!104243 (= res!51972 e!67870)))

(declare-fun c!18031 () Bool)

(assert (=> b!104243 (= c!18031 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104244 () Bool)

(assert (=> b!104244 (= e!67870 e!67872)))

(declare-fun res!51969 () Bool)

(assert (=> b!104244 (= res!51969 call!10942)))

(assert (=> b!104244 (=> (not res!51969) (not e!67872))))

(declare-fun b!104245 () Bool)

(declare-fun call!10946 () ListLongMap!1539)

(assert (=> b!104245 (= e!67874 call!10946)))

(declare-fun bm!10944 () Bool)

(assert (=> bm!10944 (= call!10946 call!10948)))

(declare-fun b!104246 () Bool)

(declare-fun Unit!3186 () Unit!3141)

(assert (=> b!104246 (= e!67871 Unit!3186)))

(declare-fun b!104247 () Bool)

(assert (=> b!104247 (= e!67867 e!67865)))

(declare-fun c!18034 () Bool)

(assert (=> b!104247 (= c!18034 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104248 () Bool)

(assert (=> b!104248 (= e!67875 call!10946)))

(declare-fun b!104249 () Bool)

(assert (=> b!104249 (= e!67865 (not call!10944))))

(declare-fun b!104250 () Bool)

(assert (=> b!104250 (= e!67875 call!10947)))

(declare-fun b!104251 () Bool)

(assert (=> b!104251 (= e!67866 e!67869)))

(declare-fun res!51975 () Bool)

(assert (=> b!104251 (=> (not res!51975) (not e!67869))))

(assert (=> b!104251 (= res!51975 (contains!816 lt!53152 (select (arr!2044 lt!52852) #b00000000000000000000000000000000)))))

(assert (=> b!104251 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 lt!52852)))))

(declare-fun bm!10945 () Bool)

(assert (=> bm!10945 (= call!10942 (contains!816 lt!53152 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28115 c!18029) b!104242))

(assert (= (and d!28115 (not c!18029)) b!104235))

(assert (= (and b!104235 c!18030) b!104245))

(assert (= (and b!104235 (not c!18030)) b!104232))

(assert (= (and b!104232 c!18032) b!104248))

(assert (= (and b!104232 (not c!18032)) b!104250))

(assert (= (or b!104248 b!104250) bm!10943))

(assert (= (or b!104245 bm!10943) bm!10941))

(assert (= (or b!104245 b!104248) bm!10944))

(assert (= (or b!104242 bm!10941) bm!10939))

(assert (= (or b!104242 bm!10944) bm!10940))

(assert (= (and d!28115 res!51976) b!104238))

(assert (= (and d!28115 c!18033) b!104236))

(assert (= (and d!28115 (not c!18033)) b!104246))

(assert (= (and d!28115 res!51974) b!104240))

(assert (= (and b!104240 res!51968) b!104231))

(assert (= (and b!104240 (not res!51973)) b!104251))

(assert (= (and b!104251 res!51975) b!104234))

(assert (= (and b!104240 res!51971) b!104243))

(assert (= (and b!104243 c!18031) b!104244))

(assert (= (and b!104243 (not c!18031)) b!104233))

(assert (= (and b!104244 res!51969) b!104239))

(assert (= (or b!104244 b!104233) bm!10945))

(assert (= (and b!104243 res!51972) b!104247))

(assert (= (and b!104247 c!18034) b!104237))

(assert (= (and b!104247 (not c!18034)) b!104249))

(assert (= (and b!104237 res!51970) b!104241))

(assert (= (or b!104237 b!104249) bm!10942))

(declare-fun b_lambda!4643 () Bool)

(assert (=> (not b_lambda!4643) (not b!104234)))

(assert (=> b!104234 t!5677))

(declare-fun b_and!6429 () Bool)

(assert (= b_and!6425 (and (=> t!5677 result!3431) b_and!6429)))

(assert (=> b!104234 t!5679))

(declare-fun b_and!6431 () Bool)

(assert (= b_and!6427 (and (=> t!5679 result!3433) b_and!6431)))

(declare-fun m!115281 () Bool)

(assert (=> bm!10945 m!115281))

(declare-fun m!115283 () Bool)

(assert (=> b!104236 m!115283))

(declare-fun m!115285 () Bool)

(assert (=> b!104236 m!115285))

(declare-fun m!115287 () Bool)

(assert (=> b!104236 m!115287))

(declare-fun m!115289 () Bool)

(assert (=> b!104236 m!115289))

(declare-fun m!115291 () Bool)

(assert (=> b!104236 m!115291))

(declare-fun m!115293 () Bool)

(assert (=> b!104236 m!115293))

(assert (=> b!104236 m!115283))

(declare-fun m!115295 () Bool)

(assert (=> b!104236 m!115295))

(declare-fun m!115297 () Bool)

(assert (=> b!104236 m!115297))

(declare-fun m!115299 () Bool)

(assert (=> b!104236 m!115299))

(declare-fun m!115301 () Bool)

(assert (=> b!104236 m!115301))

(declare-fun m!115303 () Bool)

(assert (=> b!104236 m!115303))

(assert (=> b!104236 m!115293))

(declare-fun m!115305 () Bool)

(assert (=> b!104236 m!115305))

(declare-fun m!115307 () Bool)

(assert (=> b!104236 m!115307))

(assert (=> b!104236 m!115291))

(declare-fun m!115309 () Bool)

(assert (=> b!104236 m!115309))

(assert (=> b!104236 m!115287))

(declare-fun m!115311 () Bool)

(assert (=> b!104236 m!115311))

(declare-fun m!115313 () Bool)

(assert (=> b!104236 m!115313))

(declare-fun m!115315 () Bool)

(assert (=> b!104236 m!115315))

(declare-fun m!115317 () Bool)

(assert (=> bm!10940 m!115317))

(assert (=> d!28115 m!113985))

(assert (=> b!104234 m!113987))

(assert (=> b!104234 m!115303))

(declare-fun m!115319 () Bool)

(assert (=> b!104234 m!115319))

(declare-fun m!115321 () Bool)

(assert (=> b!104234 m!115321))

(assert (=> b!104234 m!113987))

(declare-fun m!115323 () Bool)

(assert (=> b!104234 m!115323))

(assert (=> b!104234 m!115303))

(assert (=> b!104234 m!115321))

(assert (=> b!104251 m!115303))

(assert (=> b!104251 m!115303))

(declare-fun m!115325 () Bool)

(assert (=> b!104251 m!115325))

(assert (=> b!104238 m!115303))

(assert (=> b!104238 m!115303))

(declare-fun m!115327 () Bool)

(assert (=> b!104238 m!115327))

(declare-fun m!115329 () Bool)

(assert (=> b!104241 m!115329))

(assert (=> b!104231 m!115303))

(assert (=> b!104231 m!115303))

(assert (=> b!104231 m!115327))

(declare-fun m!115331 () Bool)

(assert (=> bm!10942 m!115331))

(declare-fun m!115333 () Bool)

(assert (=> b!104239 m!115333))

(assert (=> bm!10939 m!115301))

(declare-fun m!115335 () Bool)

(assert (=> b!104242 m!115335))

(assert (=> d!27801 d!28115))

(declare-fun d!28117 () Bool)

(declare-fun e!67878 () Bool)

(assert (=> d!28117 e!67878))

(declare-fun res!51978 () Bool)

(assert (=> d!28117 (=> (not res!51978) (not e!67878))))

(declare-fun lt!53167 () ListLongMap!1539)

(assert (=> d!28117 (= res!51978 (contains!816 lt!53167 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!53165 () List!1612)

(assert (=> d!28117 (= lt!53167 (ListLongMap!1540 lt!53165))))

(declare-fun lt!53164 () Unit!3141)

(declare-fun lt!53166 () Unit!3141)

(assert (=> d!28117 (= lt!53164 lt!53166)))

(assert (=> d!28117 (= (getValueByKey!153 lt!53165 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28117 (= lt!53166 (lemmaContainsTupThenGetReturnValue!72 lt!53165 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28117 (= lt!53165 (insertStrictlySorted!75 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28117 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!53167)))

(declare-fun b!104252 () Bool)

(declare-fun res!51977 () Bool)

(assert (=> b!104252 (=> (not res!51977) (not e!67878))))

(assert (=> b!104252 (= res!51977 (= (getValueByKey!153 (toList!785 lt!53167) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104253 () Bool)

(assert (=> b!104253 (= e!67878 (contains!819 (toList!785 lt!53167) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!28117 res!51978) b!104252))

(assert (= (and b!104252 res!51977) b!104253))

(declare-fun m!115337 () Bool)

(assert (=> d!28117 m!115337))

(declare-fun m!115339 () Bool)

(assert (=> d!28117 m!115339))

(declare-fun m!115341 () Bool)

(assert (=> d!28117 m!115341))

(declare-fun m!115343 () Bool)

(assert (=> d!28117 m!115343))

(declare-fun m!115345 () Bool)

(assert (=> b!104252 m!115345))

(declare-fun m!115347 () Bool)

(assert (=> b!104253 m!115347))

(assert (=> d!27801 d!28117))

(declare-fun b!104254 () Bool)

(declare-fun e!67880 () Bool)

(declare-fun e!67881 () Bool)

(assert (=> b!104254 (= e!67880 e!67881)))

(declare-fun lt!53168 () (_ BitVec 64))

(assert (=> b!104254 (= lt!53168 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53169 () Unit!3141)

(assert (=> b!104254 (= lt!53169 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) lt!53168 #b00000000000000000000000000000000))))

(assert (=> b!104254 (arrayContainsKey!0 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) lt!53168 #b00000000000000000000000000000000)))

(declare-fun lt!53170 () Unit!3141)

(assert (=> b!104254 (= lt!53170 lt!53169)))

(declare-fun res!51980 () Bool)

(assert (=> b!104254 (= res!51980 (= (seekEntryOrOpen!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000) (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (mask!6695 newMap!16)) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!104254 (=> (not res!51980) (not e!67881))))

(declare-fun call!10949 () Bool)

(declare-fun bm!10946 () Bool)

(assert (=> bm!10946 (= call!10949 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (mask!6695 newMap!16)))))

(declare-fun b!104255 () Bool)

(declare-fun e!67879 () Bool)

(assert (=> b!104255 (= e!67879 e!67880)))

(declare-fun c!18035 () Bool)

(assert (=> b!104255 (= c!18035 (validKeyInArray!0 (select (arr!2044 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104256 () Bool)

(assert (=> b!104256 (= e!67881 call!10949)))

(declare-fun d!28119 () Bool)

(declare-fun res!51979 () Bool)

(assert (=> d!28119 (=> res!51979 e!67879)))

(assert (=> d!28119 (= res!51979 (bvsge #b00000000000000000000000000000000 (size!2299 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))))))))

(assert (=> d!28119 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4312 (store (arr!2044 (_keys!4261 newMap!16)) (ite c!17757 (index!3194 lt!52554) (index!3191 lt!52554)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) (size!2299 (_keys!4261 newMap!16))) (mask!6695 newMap!16)) e!67879)))

(declare-fun b!104257 () Bool)

(assert (=> b!104257 (= e!67880 call!10949)))

(assert (= (and d!28119 (not res!51979)) b!104255))

(assert (= (and b!104255 c!18035) b!104254))

(assert (= (and b!104255 (not c!18035)) b!104257))

(assert (= (and b!104254 res!51980) b!104256))

(assert (= (or b!104256 b!104257) bm!10946))

(assert (=> b!104254 m!115243))

(declare-fun m!115349 () Bool)

(assert (=> b!104254 m!115349))

(declare-fun m!115351 () Bool)

(assert (=> b!104254 m!115351))

(assert (=> b!104254 m!115243))

(declare-fun m!115353 () Bool)

(assert (=> b!104254 m!115353))

(declare-fun m!115355 () Bool)

(assert (=> bm!10946 m!115355))

(assert (=> b!104255 m!115243))

(assert (=> b!104255 m!115243))

(assert (=> b!104255 m!115267))

(assert (=> d!27801 d!28119))

(declare-fun bm!10947 () Bool)

(declare-fun call!10950 () Bool)

(declare-fun c!18036 () Bool)

(assert (=> bm!10947 (= call!10950 (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18036 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!17912 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610))) (ite c!17912 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)))))))

(declare-fun b!104258 () Bool)

(declare-fun e!67884 () Bool)

(declare-fun e!67885 () Bool)

(assert (=> b!104258 (= e!67884 e!67885)))

(assert (=> b!104258 (= c!18036 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104259 () Bool)

(assert (=> b!104259 (= e!67885 call!10950)))

(declare-fun d!28121 () Bool)

(declare-fun res!51982 () Bool)

(declare-fun e!67883 () Bool)

(assert (=> d!28121 (=> res!51982 e!67883)))

(assert (=> d!28121 (= res!51982 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!28121 (= (arrayNoDuplicates!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17912 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610))) e!67883)))

(declare-fun b!104260 () Bool)

(assert (=> b!104260 (= e!67883 e!67884)))

(declare-fun res!51983 () Bool)

(assert (=> b!104260 (=> (not res!51983) (not e!67884))))

(declare-fun e!67882 () Bool)

(assert (=> b!104260 (= res!51983 (not e!67882))))

(declare-fun res!51981 () Bool)

(assert (=> b!104260 (=> (not res!51981) (not e!67882))))

(assert (=> b!104260 (= res!51981 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104261 () Bool)

(assert (=> b!104261 (= e!67885 call!10950)))

(declare-fun b!104262 () Bool)

(assert (=> b!104262 (= e!67882 (contains!818 (ite c!17912 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!28121 (not res!51982)) b!104260))

(assert (= (and b!104260 res!51981) b!104262))

(assert (= (and b!104260 res!51983) b!104258))

(assert (= (and b!104258 c!18036) b!104259))

(assert (= (and b!104258 (not c!18036)) b!104261))

(assert (= (or b!104259 b!104261) bm!10947))

(declare-fun m!115357 () Bool)

(assert (=> bm!10947 m!115357))

(declare-fun m!115359 () Bool)

(assert (=> bm!10947 m!115359))

(assert (=> b!104258 m!115357))

(assert (=> b!104258 m!115357))

(declare-fun m!115361 () Bool)

(assert (=> b!104258 m!115361))

(assert (=> b!104260 m!115357))

(assert (=> b!104260 m!115357))

(assert (=> b!104260 m!115361))

(assert (=> b!104262 m!115357))

(assert (=> b!104262 m!115357))

(declare-fun m!115363 () Bool)

(assert (=> b!104262 m!115363))

(assert (=> bm!10905 d!28121))

(declare-fun b!104265 () Bool)

(declare-fun e!67887 () Option!159)

(assert (=> b!104265 (= e!67887 (getValueByKey!153 (t!5665 (toList!785 lt!52664)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104263 () Bool)

(declare-fun e!67886 () Option!159)

(assert (=> b!104263 (= e!67886 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52664)))))))

(declare-fun c!18037 () Bool)

(declare-fun d!28123 () Bool)

(assert (=> d!28123 (= c!18037 (and ((_ is Cons!1608) (toList!785 lt!52664)) (= (_1!1197 (h!2204 (toList!785 lt!52664))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28123 (= (getValueByKey!153 (toList!785 lt!52664) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!67886)))

(declare-fun b!104264 () Bool)

(assert (=> b!104264 (= e!67886 e!67887)))

(declare-fun c!18038 () Bool)

(assert (=> b!104264 (= c!18038 (and ((_ is Cons!1608) (toList!785 lt!52664)) (not (= (_1!1197 (h!2204 (toList!785 lt!52664))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104266 () Bool)

(assert (=> b!104266 (= e!67887 None!157)))

(assert (= (and d!28123 c!18037) b!104263))

(assert (= (and d!28123 (not c!18037)) b!104264))

(assert (= (and b!104264 c!18038) b!104265))

(assert (= (and b!104264 (not c!18038)) b!104266))

(declare-fun m!115365 () Bool)

(assert (=> b!104265 m!115365))

(assert (=> b!103414 d!28123))

(declare-fun d!28125 () Bool)

(declare-fun lt!53171 () Bool)

(assert (=> d!28125 (= lt!53171 (select (content!108 lt!52447) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun e!67888 () Bool)

(assert (=> d!28125 (= lt!53171 e!67888)))

(declare-fun res!51984 () Bool)

(assert (=> d!28125 (=> (not res!51984) (not e!67888))))

(assert (=> d!28125 (= res!51984 ((_ is Cons!1608) lt!52447))))

(assert (=> d!28125 (= (contains!819 lt!52447 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))) lt!53171)))

(declare-fun b!104267 () Bool)

(declare-fun e!67889 () Bool)

(assert (=> b!104267 (= e!67888 e!67889)))

(declare-fun res!51985 () Bool)

(assert (=> b!104267 (=> res!51985 e!67889)))

(assert (=> b!104267 (= res!51985 (= (h!2204 lt!52447) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!104268 () Bool)

(assert (=> b!104268 (= e!67889 (contains!819 (t!5665 lt!52447) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(assert (= (and d!28125 res!51984) b!104267))

(assert (= (and b!104267 (not res!51985)) b!104268))

(declare-fun m!115367 () Bool)

(assert (=> d!28125 m!115367))

(declare-fun m!115369 () Bool)

(assert (=> d!28125 m!115369))

(declare-fun m!115371 () Bool)

(assert (=> b!104268 m!115371))

(assert (=> b!103828 d!28125))

(declare-fun d!28127 () Bool)

(assert (=> d!28127 (= (apply!97 lt!52863 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1328 (getValueByKey!153 (toList!785 lt!52863) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4255 () Bool)

(assert (= bs!4255 d!28127))

(assert (=> bs!4255 m!114313))

(declare-fun m!115373 () Bool)

(assert (=> bs!4255 m!115373))

(assert (=> bs!4255 m!115373))

(declare-fun m!115375 () Bool)

(assert (=> bs!4255 m!115375))

(assert (=> b!103685 d!28127))

(declare-fun d!28129 () Bool)

(declare-fun c!18039 () Bool)

(assert (=> d!28129 (= c!18039 ((_ is ValueCellFull!992) (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!67890 () V!3209)

(assert (=> d!28129 (= (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67890)))

(declare-fun b!104269 () Bool)

(assert (=> b!104269 (= e!67890 (get!1326 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104270 () Bool)

(assert (=> b!104270 (= e!67890 (get!1327 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28129 c!18039) b!104269))

(assert (= (and d!28129 (not c!18039)) b!104270))

(assert (=> b!104269 m!114419))

(assert (=> b!104269 m!113539))

(declare-fun m!115377 () Bool)

(assert (=> b!104269 m!115377))

(assert (=> b!104270 m!114419))

(assert (=> b!104270 m!113539))

(declare-fun m!115379 () Bool)

(assert (=> b!104270 m!115379))

(assert (=> b!103685 d!28129))

(declare-fun d!28131 () Bool)

(declare-fun res!51986 () Bool)

(declare-fun e!67891 () Bool)

(assert (=> d!28131 (=> res!51986 e!67891)))

(assert (=> d!28131 (= res!51986 (and ((_ is Cons!1608) lt!52462) (= (_1!1197 (h!2204 lt!52462)) (_1!1197 lt!52331))))))

(assert (=> d!28131 (= (containsKey!157 lt!52462 (_1!1197 lt!52331)) e!67891)))

(declare-fun b!104271 () Bool)

(declare-fun e!67892 () Bool)

(assert (=> b!104271 (= e!67891 e!67892)))

(declare-fun res!51987 () Bool)

(assert (=> b!104271 (=> (not res!51987) (not e!67892))))

(assert (=> b!104271 (= res!51987 (and (or (not ((_ is Cons!1608) lt!52462)) (bvsle (_1!1197 (h!2204 lt!52462)) (_1!1197 lt!52331))) ((_ is Cons!1608) lt!52462) (bvslt (_1!1197 (h!2204 lt!52462)) (_1!1197 lt!52331))))))

(declare-fun b!104272 () Bool)

(assert (=> b!104272 (= e!67892 (containsKey!157 (t!5665 lt!52462) (_1!1197 lt!52331)))))

(assert (= (and d!28131 (not res!51986)) b!104271))

(assert (= (and b!104271 res!51987) b!104272))

(declare-fun m!115381 () Bool)

(assert (=> b!104272 m!115381))

(assert (=> b!103519 d!28131))

(assert (=> d!27737 d!27973))

(assert (=> b!103382 d!28073))

(declare-fun d!28133 () Bool)

(assert (=> d!28133 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331)))))))

(declare-fun bs!4256 () Bool)

(assert (= bs!4256 d!28133))

(assert (=> bs!4256 m!113799))

(declare-fun m!115383 () Bool)

(assert (=> bs!4256 m!115383))

(assert (=> b!103510 d!28133))

(assert (=> b!103510 d!27717))

(declare-fun lt!53172 () Bool)

(declare-fun d!28135 () Bool)

(assert (=> d!28135 (= lt!53172 (select (content!108 (toList!785 lt!52653)) (tuple2!2373 lt!52431 lt!52433)))))

(declare-fun e!67893 () Bool)

(assert (=> d!28135 (= lt!53172 e!67893)))

(declare-fun res!51988 () Bool)

(assert (=> d!28135 (=> (not res!51988) (not e!67893))))

(assert (=> d!28135 (= res!51988 ((_ is Cons!1608) (toList!785 lt!52653)))))

(assert (=> d!28135 (= (contains!819 (toList!785 lt!52653) (tuple2!2373 lt!52431 lt!52433)) lt!53172)))

(declare-fun b!104273 () Bool)

(declare-fun e!67894 () Bool)

(assert (=> b!104273 (= e!67893 e!67894)))

(declare-fun res!51989 () Bool)

(assert (=> b!104273 (=> res!51989 e!67894)))

(assert (=> b!104273 (= res!51989 (= (h!2204 (toList!785 lt!52653)) (tuple2!2373 lt!52431 lt!52433)))))

(declare-fun b!104274 () Bool)

(assert (=> b!104274 (= e!67894 (contains!819 (t!5665 (toList!785 lt!52653)) (tuple2!2373 lt!52431 lt!52433)))))

(assert (= (and d!28135 res!51988) b!104273))

(assert (= (and b!104273 (not res!51989)) b!104274))

(declare-fun m!115385 () Bool)

(assert (=> d!28135 m!115385))

(declare-fun m!115387 () Bool)

(assert (=> d!28135 m!115387))

(declare-fun m!115389 () Bool)

(assert (=> b!104274 m!115389))

(assert (=> b!103406 d!28135))

(declare-fun d!28137 () Bool)

(declare-fun lt!53173 () Bool)

(assert (=> d!28137 (= lt!53173 (select (content!108 (toList!785 lt!52962)) (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67895 () Bool)

(assert (=> d!28137 (= lt!53173 e!67895)))

(declare-fun res!51990 () Bool)

(assert (=> d!28137 (=> (not res!51990) (not e!67895))))

(assert (=> d!28137 (= res!51990 ((_ is Cons!1608) (toList!785 lt!52962)))))

(assert (=> d!28137 (= (contains!819 (toList!785 lt!52962) (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!53173)))

(declare-fun b!104275 () Bool)

(declare-fun e!67896 () Bool)

(assert (=> b!104275 (= e!67895 e!67896)))

(declare-fun res!51991 () Bool)

(assert (=> b!104275 (=> res!51991 e!67896)))

(assert (=> b!104275 (= res!51991 (= (h!2204 (toList!785 lt!52962)) (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104276 () Bool)

(assert (=> b!104276 (= e!67896 (contains!819 (t!5665 (toList!785 lt!52962)) (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!28137 res!51990) b!104275))

(assert (= (and b!104275 (not res!51991)) b!104276))

(declare-fun m!115391 () Bool)

(assert (=> d!28137 m!115391))

(declare-fun m!115393 () Bool)

(assert (=> d!28137 m!115393))

(declare-fun m!115395 () Bool)

(assert (=> b!104276 m!115395))

(assert (=> b!103810 d!28137))

(declare-fun d!28139 () Bool)

(declare-fun e!67898 () Bool)

(assert (=> d!28139 e!67898))

(declare-fun res!51992 () Bool)

(assert (=> d!28139 (=> res!51992 e!67898)))

(declare-fun lt!53176 () Bool)

(assert (=> d!28139 (= res!51992 (not lt!53176))))

(declare-fun lt!53175 () Bool)

(assert (=> d!28139 (= lt!53176 lt!53175)))

(declare-fun lt!53177 () Unit!3141)

(declare-fun e!67897 () Unit!3141)

(assert (=> d!28139 (= lt!53177 e!67897)))

(declare-fun c!18040 () Bool)

(assert (=> d!28139 (= c!18040 lt!53175)))

(assert (=> d!28139 (= lt!53175 (containsKey!157 (toList!785 lt!52696) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28139 (= (contains!816 lt!52696 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) lt!53176)))

(declare-fun b!104277 () Bool)

(declare-fun lt!53174 () Unit!3141)

(assert (=> b!104277 (= e!67897 lt!53174)))

(assert (=> b!104277 (= lt!53174 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52696) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104277 (isDefined!107 (getValueByKey!153 (toList!785 lt!52696) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104278 () Bool)

(declare-fun Unit!3187 () Unit!3141)

(assert (=> b!104278 (= e!67897 Unit!3187)))

(declare-fun b!104279 () Bool)

(assert (=> b!104279 (= e!67898 (isDefined!107 (getValueByKey!153 (toList!785 lt!52696) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28139 c!18040) b!104277))

(assert (= (and d!28139 (not c!18040)) b!104278))

(assert (= (and d!28139 (not res!51992)) b!104279))

(assert (=> d!28139 m!113969))

(declare-fun m!115397 () Bool)

(assert (=> d!28139 m!115397))

(assert (=> b!104277 m!113969))

(declare-fun m!115399 () Bool)

(assert (=> b!104277 m!115399))

(assert (=> b!104277 m!113969))

(declare-fun m!115401 () Bool)

(assert (=> b!104277 m!115401))

(assert (=> b!104277 m!115401))

(declare-fun m!115403 () Bool)

(assert (=> b!104277 m!115403))

(assert (=> b!104279 m!113969))

(assert (=> b!104279 m!115401))

(assert (=> b!104279 m!115401))

(assert (=> b!104279 m!115403))

(assert (=> b!103490 d!28139))

(declare-fun d!28141 () Bool)

(assert (=> d!28141 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4257 () Bool)

(assert (= bs!4257 d!28141))

(assert (=> bs!4257 m!114093))

(declare-fun m!115405 () Bool)

(assert (=> bs!4257 m!115405))

(assert (=> b!103463 d!28141))

(declare-fun b!104282 () Bool)

(declare-fun e!67900 () Option!159)

(assert (=> b!104282 (= e!67900 (getValueByKey!153 (t!5665 (toList!785 lt!52435)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104280 () Bool)

(declare-fun e!67899 () Option!159)

(assert (=> b!104280 (= e!67899 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52435)))))))

(declare-fun d!28143 () Bool)

(declare-fun c!18041 () Bool)

(assert (=> d!28143 (= c!18041 (and ((_ is Cons!1608) (toList!785 lt!52435)) (= (_1!1197 (h!2204 (toList!785 lt!52435))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28143 (= (getValueByKey!153 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000) e!67899)))

(declare-fun b!104281 () Bool)

(assert (=> b!104281 (= e!67899 e!67900)))

(declare-fun c!18042 () Bool)

(assert (=> b!104281 (= c!18042 (and ((_ is Cons!1608) (toList!785 lt!52435)) (not (= (_1!1197 (h!2204 (toList!785 lt!52435))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104283 () Bool)

(assert (=> b!104283 (= e!67900 None!157)))

(assert (= (and d!28143 c!18041) b!104280))

(assert (= (and d!28143 (not c!18041)) b!104281))

(assert (= (and b!104281 c!18042) b!104282))

(assert (= (and b!104281 (not c!18042)) b!104283))

(declare-fun m!115407 () Bool)

(assert (=> b!104282 m!115407))

(assert (=> b!103463 d!28143))

(assert (=> b!103738 d!28073))

(declare-fun b!104284 () Bool)

(declare-fun e!67902 () Bool)

(declare-fun e!67903 () Bool)

(assert (=> b!104284 (= e!67902 e!67903)))

(declare-fun lt!53178 () (_ BitVec 64))

(assert (=> b!104284 (= lt!53178 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!53179 () Unit!3141)

(assert (=> b!104284 (= lt!53179 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) lt!53178 #b00000000000000000000000000000000))))

(assert (=> b!104284 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) lt!53178 #b00000000000000000000000000000000)))

(declare-fun lt!53180 () Unit!3141)

(assert (=> b!104284 (= lt!53180 lt!53179)))

(declare-fun res!51994 () Bool)

(assert (=> b!104284 (= res!51994 (= (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000) (_keys!4261 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992)))) (Found!261 #b00000000000000000000000000000000)))))

(assert (=> b!104284 (=> (not res!51994) (not e!67903))))

(declare-fun bm!10948 () Bool)

(declare-fun call!10951 () Bool)

(assert (=> bm!10948 (= call!10951 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4261 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!104285 () Bool)

(declare-fun e!67901 () Bool)

(assert (=> b!104285 (= e!67901 e!67902)))

(declare-fun c!18043 () Bool)

(assert (=> b!104285 (= c!18043 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104286 () Bool)

(assert (=> b!104286 (= e!67903 call!10951)))

(declare-fun d!28145 () Bool)

(declare-fun res!51993 () Bool)

(assert (=> d!28145 (=> res!51993 e!67901)))

(assert (=> d!28145 (= res!51993 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!28145 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992)))) e!67901)))

(declare-fun b!104287 () Bool)

(assert (=> b!104287 (= e!67902 call!10951)))

(assert (= (and d!28145 (not res!51993)) b!104285))

(assert (= (and b!104285 c!18043) b!104284))

(assert (= (and b!104285 (not c!18043)) b!104287))

(assert (= (and b!104284 res!51994) b!104286))

(assert (= (or b!104286 b!104287) bm!10948))

(assert (=> b!104284 m!115045))

(declare-fun m!115409 () Bool)

(assert (=> b!104284 m!115409))

(declare-fun m!115411 () Bool)

(assert (=> b!104284 m!115411))

(assert (=> b!104284 m!115045))

(declare-fun m!115413 () Bool)

(assert (=> b!104284 m!115413))

(declare-fun m!115415 () Bool)

(assert (=> bm!10948 m!115415))

(assert (=> b!104285 m!115045))

(assert (=> b!104285 m!115045))

(assert (=> b!104285 m!115049))

(assert (=> b!103455 d!28145))

(declare-fun e!67905 () Option!159)

(declare-fun b!104290 () Bool)

(assert (=> b!104290 (= e!67905 (getValueByKey!153 (t!5665 (toList!785 lt!52741)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104288 () Bool)

(declare-fun e!67904 () Option!159)

(assert (=> b!104288 (= e!67904 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52741)))))))

(declare-fun d!28147 () Bool)

(declare-fun c!18044 () Bool)

(assert (=> d!28147 (= c!18044 (and ((_ is Cons!1608) (toList!785 lt!52741)) (= (_1!1197 (h!2204 (toList!785 lt!52741))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28147 (= (getValueByKey!153 (toList!785 lt!52741) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) e!67904)))

(declare-fun b!104289 () Bool)

(assert (=> b!104289 (= e!67904 e!67905)))

(declare-fun c!18045 () Bool)

(assert (=> b!104289 (= c!18045 (and ((_ is Cons!1608) (toList!785 lt!52741)) (not (= (_1!1197 (h!2204 (toList!785 lt!52741))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!104291 () Bool)

(assert (=> b!104291 (= e!67905 None!157)))

(assert (= (and d!28147 c!18044) b!104288))

(assert (= (and d!28147 (not c!18044)) b!104289))

(assert (= (and b!104289 c!18045) b!104290))

(assert (= (and b!104289 (not c!18045)) b!104291))

(declare-fun m!115417 () Bool)

(assert (=> b!104290 m!115417))

(assert (=> b!103576 d!28147))

(declare-fun d!28149 () Bool)

(declare-fun lt!53181 () Bool)

(assert (=> d!28149 (= lt!53181 (select (content!108 lt!52978) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun e!67906 () Bool)

(assert (=> d!28149 (= lt!53181 e!67906)))

(declare-fun res!51995 () Bool)

(assert (=> d!28149 (=> (not res!51995) (not e!67906))))

(assert (=> d!28149 (= res!51995 ((_ is Cons!1608) lt!52978))))

(assert (=> d!28149 (= (contains!819 lt!52978 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))) lt!53181)))

(declare-fun b!104292 () Bool)

(declare-fun e!67907 () Bool)

(assert (=> b!104292 (= e!67906 e!67907)))

(declare-fun res!51996 () Bool)

(assert (=> b!104292 (=> res!51996 e!67907)))

(assert (=> b!104292 (= res!51996 (= (h!2204 lt!52978) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!104293 () Bool)

(assert (=> b!104293 (= e!67907 (contains!819 (t!5665 lt!52978) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(assert (= (and d!28149 res!51995) b!104292))

(assert (= (and b!104292 (not res!51996)) b!104293))

(declare-fun m!115419 () Bool)

(assert (=> d!28149 m!115419))

(declare-fun m!115421 () Bool)

(assert (=> d!28149 m!115421))

(declare-fun m!115423 () Bool)

(assert (=> b!104293 m!115423))

(assert (=> b!103835 d!28149))

(declare-fun d!28151 () Bool)

(declare-fun e!67909 () Bool)

(assert (=> d!28151 e!67909))

(declare-fun res!51997 () Bool)

(assert (=> d!28151 (=> res!51997 e!67909)))

(declare-fun lt!53184 () Bool)

(assert (=> d!28151 (= res!51997 (not lt!53184))))

(declare-fun lt!53183 () Bool)

(assert (=> d!28151 (= lt!53184 lt!53183)))

(declare-fun lt!53185 () Unit!3141)

(declare-fun e!67908 () Unit!3141)

(assert (=> d!28151 (= lt!53185 e!67908)))

(declare-fun c!18046 () Bool)

(assert (=> d!28151 (= c!18046 lt!53183)))

(assert (=> d!28151 (= lt!53183 (containsKey!157 (toList!785 lt!52664) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28151 (= (contains!816 lt!52664 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53184)))

(declare-fun b!104294 () Bool)

(declare-fun lt!53182 () Unit!3141)

(assert (=> b!104294 (= e!67908 lt!53182)))

(assert (=> b!104294 (= lt!53182 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52664) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!104294 (isDefined!107 (getValueByKey!153 (toList!785 lt!52664) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104295 () Bool)

(declare-fun Unit!3188 () Unit!3141)

(assert (=> b!104295 (= e!67908 Unit!3188)))

(declare-fun b!104296 () Bool)

(assert (=> b!104296 (= e!67909 (isDefined!107 (getValueByKey!153 (toList!785 lt!52664) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28151 c!18046) b!104294))

(assert (= (and d!28151 (not c!18046)) b!104295))

(assert (= (and d!28151 (not res!51997)) b!104296))

(declare-fun m!115425 () Bool)

(assert (=> d!28151 m!115425))

(declare-fun m!115427 () Bool)

(assert (=> b!104294 m!115427))

(assert (=> b!104294 m!114043))

(assert (=> b!104294 m!114043))

(declare-fun m!115429 () Bool)

(assert (=> b!104294 m!115429))

(assert (=> b!104296 m!114043))

(assert (=> b!104296 m!114043))

(assert (=> b!104296 m!115429))

(assert (=> d!27703 d!28151))

(declare-fun e!67911 () Option!159)

(declare-fun b!104299 () Bool)

(assert (=> b!104299 (= e!67911 (getValueByKey!153 (t!5665 lt!52662) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104297 () Bool)

(declare-fun e!67910 () Option!159)

(assert (=> b!104297 (= e!67910 (Some!158 (_2!1197 (h!2204 lt!52662))))))

(declare-fun d!28153 () Bool)

(declare-fun c!18047 () Bool)

(assert (=> d!28153 (= c!18047 (and ((_ is Cons!1608) lt!52662) (= (_1!1197 (h!2204 lt!52662)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28153 (= (getValueByKey!153 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!67910)))

(declare-fun b!104298 () Bool)

(assert (=> b!104298 (= e!67910 e!67911)))

(declare-fun c!18048 () Bool)

(assert (=> b!104298 (= c!18048 (and ((_ is Cons!1608) lt!52662) (not (= (_1!1197 (h!2204 lt!52662)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104300 () Bool)

(assert (=> b!104300 (= e!67911 None!157)))

(assert (= (and d!28153 c!18047) b!104297))

(assert (= (and d!28153 (not c!18047)) b!104298))

(assert (= (and b!104298 c!18048) b!104299))

(assert (= (and b!104298 (not c!18048)) b!104300))

(declare-fun m!115431 () Bool)

(assert (=> b!104299 m!115431))

(assert (=> d!27703 d!28153))

(declare-fun d!28155 () Bool)

(assert (=> d!28155 (= (getValueByKey!153 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53186 () Unit!3141)

(assert (=> d!28155 (= lt!53186 (choose!649 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!67912 () Bool)

(assert (=> d!28155 e!67912))

(declare-fun res!51998 () Bool)

(assert (=> d!28155 (=> (not res!51998) (not e!67912))))

(assert (=> d!28155 (= res!51998 (isStrictlySorted!303 lt!52662))))

(assert (=> d!28155 (= (lemmaContainsTupThenGetReturnValue!72 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53186)))

(declare-fun b!104301 () Bool)

(declare-fun res!51999 () Bool)

(assert (=> b!104301 (=> (not res!51999) (not e!67912))))

(assert (=> b!104301 (= res!51999 (containsKey!157 lt!52662 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104302 () Bool)

(assert (=> b!104302 (= e!67912 (contains!819 lt!52662 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28155 res!51998) b!104301))

(assert (= (and b!104301 res!51999) b!104302))

(assert (=> d!28155 m!114037))

(declare-fun m!115433 () Bool)

(assert (=> d!28155 m!115433))

(declare-fun m!115435 () Bool)

(assert (=> d!28155 m!115435))

(declare-fun m!115437 () Bool)

(assert (=> b!104301 m!115437))

(declare-fun m!115439 () Bool)

(assert (=> b!104302 m!115439))

(assert (=> d!27703 d!28155))

(declare-fun b!104303 () Bool)

(declare-fun e!67914 () List!1612)

(declare-fun call!10954 () List!1612)

(assert (=> b!104303 (= e!67914 call!10954)))

(declare-fun e!67915 () List!1612)

(declare-fun b!104304 () Bool)

(assert (=> b!104304 (= e!67915 (insertStrictlySorted!75 (t!5665 (toList!785 call!10749)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104305 () Bool)

(declare-fun res!52000 () Bool)

(declare-fun e!67917 () Bool)

(assert (=> b!104305 (=> (not res!52000) (not e!67917))))

(declare-fun lt!53187 () List!1612)

(assert (=> b!104305 (= res!52000 (containsKey!157 lt!53187 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!10949 () Bool)

(declare-fun call!10952 () List!1612)

(assert (=> bm!10949 (= call!10952 call!10954)))

(declare-fun b!104306 () Bool)

(declare-fun e!67913 () List!1612)

(assert (=> b!104306 (= e!67913 call!10952)))

(declare-fun c!18051 () Bool)

(declare-fun c!18049 () Bool)

(declare-fun b!104307 () Bool)

(assert (=> b!104307 (= e!67915 (ite c!18051 (t!5665 (toList!785 call!10749)) (ite c!18049 (Cons!1608 (h!2204 (toList!785 call!10749)) (t!5665 (toList!785 call!10749))) Nil!1609)))))

(declare-fun d!28157 () Bool)

(assert (=> d!28157 e!67917))

(declare-fun res!52001 () Bool)

(assert (=> d!28157 (=> (not res!52001) (not e!67917))))

(assert (=> d!28157 (= res!52001 (isStrictlySorted!303 lt!53187))))

(declare-fun e!67916 () List!1612)

(assert (=> d!28157 (= lt!53187 e!67916)))

(declare-fun c!18052 () Bool)

(assert (=> d!28157 (= c!18052 (and ((_ is Cons!1608) (toList!785 call!10749)) (bvslt (_1!1197 (h!2204 (toList!785 call!10749))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28157 (isStrictlySorted!303 (toList!785 call!10749))))

(assert (=> d!28157 (= (insertStrictlySorted!75 (toList!785 call!10749) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53187)))

(declare-fun b!104308 () Bool)

(assert (=> b!104308 (= c!18049 (and ((_ is Cons!1608) (toList!785 call!10749)) (bvsgt (_1!1197 (h!2204 (toList!785 call!10749))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!104308 (= e!67914 e!67913)))

(declare-fun bm!10950 () Bool)

(declare-fun call!10953 () List!1612)

(assert (=> bm!10950 (= call!10953 ($colon$colon!79 e!67915 (ite c!18052 (h!2204 (toList!785 call!10749)) (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18050 () Bool)

(assert (=> bm!10950 (= c!18050 c!18052)))

(declare-fun b!104309 () Bool)

(assert (=> b!104309 (= e!67917 (contains!819 lt!53187 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104310 () Bool)

(assert (=> b!104310 (= e!67916 call!10953)))

(declare-fun bm!10951 () Bool)

(assert (=> bm!10951 (= call!10954 call!10953)))

(declare-fun b!104311 () Bool)

(assert (=> b!104311 (= e!67913 call!10952)))

(declare-fun b!104312 () Bool)

(assert (=> b!104312 (= e!67916 e!67914)))

(assert (=> b!104312 (= c!18051 (and ((_ is Cons!1608) (toList!785 call!10749)) (= (_1!1197 (h!2204 (toList!785 call!10749))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28157 c!18052) b!104310))

(assert (= (and d!28157 (not c!18052)) b!104312))

(assert (= (and b!104312 c!18051) b!104303))

(assert (= (and b!104312 (not c!18051)) b!104308))

(assert (= (and b!104308 c!18049) b!104311))

(assert (= (and b!104308 (not c!18049)) b!104306))

(assert (= (or b!104311 b!104306) bm!10949))

(assert (= (or b!104303 bm!10949) bm!10951))

(assert (= (or b!104310 bm!10951) bm!10950))

(assert (= (and bm!10950 c!18050) b!104304))

(assert (= (and bm!10950 (not c!18050)) b!104307))

(assert (= (and d!28157 res!52001) b!104305))

(assert (= (and b!104305 res!52000) b!104309))

(declare-fun m!115441 () Bool)

(assert (=> b!104309 m!115441))

(declare-fun m!115443 () Bool)

(assert (=> d!28157 m!115443))

(declare-fun m!115445 () Bool)

(assert (=> d!28157 m!115445))

(declare-fun m!115447 () Bool)

(assert (=> b!104305 m!115447))

(declare-fun m!115449 () Bool)

(assert (=> b!104304 m!115449))

(declare-fun m!115451 () Bool)

(assert (=> bm!10950 m!115451))

(assert (=> d!27703 d!28157))

(declare-fun d!28159 () Bool)

(assert (=> d!28159 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))

(declare-fun lt!53188 () Unit!3141)

(assert (=> d!28159 (= lt!53188 (choose!650 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))

(declare-fun e!67918 () Bool)

(assert (=> d!28159 e!67918))

(declare-fun res!52002 () Bool)

(assert (=> d!28159 (=> (not res!52002) (not e!67918))))

(assert (=> d!28159 (= res!52002 (isStrictlySorted!303 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28159 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621) lt!53188)))

(declare-fun b!104313 () Bool)

(assert (=> b!104313 (= e!67918 (containsKey!157 (toList!785 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52621))))

(assert (= (and d!28159 res!52002) b!104313))

(assert (=> d!28159 m!114607))

(assert (=> d!28159 m!114607))

(assert (=> d!28159 m!114609))

(declare-fun m!115453 () Bool)

(assert (=> d!28159 m!115453))

(declare-fun m!115455 () Bool)

(assert (=> d!28159 m!115455))

(assert (=> b!104313 m!114603))

(assert (=> b!103794 d!28159))

(assert (=> b!103794 d!27939))

(assert (=> b!103794 d!27941))

(assert (=> d!27845 d!27847))

(assert (=> d!27845 d!27861))

(declare-fun d!28161 () Bool)

(assert (=> d!28161 (contains!816 (+!134 lt!52603 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52621)))

(assert (=> d!28161 true))

(declare-fun _$35!345 () Unit!3141)

(assert (=> d!28161 (= (choose!654 lt!52603 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52621) _$35!345)))

(declare-fun bs!4258 () Bool)

(assert (= bs!4258 d!28161))

(assert (=> bs!4258 m!113885))

(assert (=> bs!4258 m!113885))

(assert (=> bs!4258 m!113899))

(assert (=> d!27845 d!28161))

(declare-fun d!28163 () Bool)

(declare-fun e!67920 () Bool)

(assert (=> d!28163 e!67920))

(declare-fun res!52003 () Bool)

(assert (=> d!28163 (=> res!52003 e!67920)))

(declare-fun lt!53191 () Bool)

(assert (=> d!28163 (= res!52003 (not lt!53191))))

(declare-fun lt!53190 () Bool)

(assert (=> d!28163 (= lt!53191 lt!53190)))

(declare-fun lt!53192 () Unit!3141)

(declare-fun e!67919 () Unit!3141)

(assert (=> d!28163 (= lt!53192 e!67919)))

(declare-fun c!18053 () Bool)

(assert (=> d!28163 (= c!18053 lt!53190)))

(assert (=> d!28163 (= lt!53190 (containsKey!157 (toList!785 lt!52603) lt!52621))))

(assert (=> d!28163 (= (contains!816 lt!52603 lt!52621) lt!53191)))

(declare-fun b!104315 () Bool)

(declare-fun lt!53189 () Unit!3141)

(assert (=> b!104315 (= e!67919 lt!53189)))

(assert (=> b!104315 (= lt!53189 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52603) lt!52621))))

(assert (=> b!104315 (isDefined!107 (getValueByKey!153 (toList!785 lt!52603) lt!52621))))

(declare-fun b!104316 () Bool)

(declare-fun Unit!3189 () Unit!3141)

(assert (=> b!104316 (= e!67919 Unit!3189)))

(declare-fun b!104317 () Bool)

(assert (=> b!104317 (= e!67920 (isDefined!107 (getValueByKey!153 (toList!785 lt!52603) lt!52621)))))

(assert (= (and d!28163 c!18053) b!104315))

(assert (= (and d!28163 (not c!18053)) b!104316))

(assert (= (and d!28163 (not res!52003)) b!104317))

(declare-fun m!115457 () Bool)

(assert (=> d!28163 m!115457))

(declare-fun m!115459 () Bool)

(assert (=> b!104315 m!115459))

(declare-fun m!115461 () Bool)

(assert (=> b!104315 m!115461))

(assert (=> b!104315 m!115461))

(declare-fun m!115463 () Bool)

(assert (=> b!104315 m!115463))

(assert (=> b!104317 m!115461))

(assert (=> b!104317 m!115461))

(assert (=> b!104317 m!115463))

(assert (=> d!27845 d!28163))

(declare-fun d!28165 () Bool)

(declare-fun lt!53193 () Bool)

(assert (=> d!28165 (= lt!53193 (select (content!108 lt!52451) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun e!67921 () Bool)

(assert (=> d!28165 (= lt!53193 e!67921)))

(declare-fun res!52004 () Bool)

(assert (=> d!28165 (=> (not res!52004) (not e!67921))))

(assert (=> d!28165 (= res!52004 ((_ is Cons!1608) lt!52451))))

(assert (=> d!28165 (= (contains!819 lt!52451 (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))) lt!53193)))

(declare-fun b!104318 () Bool)

(declare-fun e!67922 () Bool)

(assert (=> b!104318 (= e!67921 e!67922)))

(declare-fun res!52005 () Bool)

(assert (=> b!104318 (=> res!52005 e!67922)))

(assert (=> b!104318 (= res!52005 (= (h!2204 lt!52451) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(declare-fun b!104319 () Bool)

(assert (=> b!104319 (= e!67922 (contains!819 (t!5665 lt!52451) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))))))

(assert (= (and d!28165 res!52004) b!104318))

(assert (= (and b!104318 (not res!52005)) b!104319))

(declare-fun m!115465 () Bool)

(assert (=> d!28165 m!115465))

(declare-fun m!115467 () Bool)

(assert (=> d!28165 m!115467))

(declare-fun m!115469 () Bool)

(assert (=> b!104319 m!115469))

(assert (=> b!103617 d!28165))

(declare-fun b!104322 () Bool)

(declare-fun e!67924 () Option!159)

(assert (=> b!104322 (= e!67924 (getValueByKey!153 (t!5665 (toList!785 lt!52749)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104320 () Bool)

(declare-fun e!67923 () Option!159)

(assert (=> b!104320 (= e!67923 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52749)))))))

(declare-fun d!28167 () Bool)

(declare-fun c!18054 () Bool)

(assert (=> d!28167 (= c!18054 (and ((_ is Cons!1608) (toList!785 lt!52749)) (= (_1!1197 (h!2204 (toList!785 lt!52749))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28167 (= (getValueByKey!153 (toList!785 lt!52749) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!67923)))

(declare-fun b!104321 () Bool)

(assert (=> b!104321 (= e!67923 e!67924)))

(declare-fun c!18055 () Bool)

(assert (=> b!104321 (= c!18055 (and ((_ is Cons!1608) (toList!785 lt!52749)) (not (= (_1!1197 (h!2204 (toList!785 lt!52749))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104323 () Bool)

(assert (=> b!104323 (= e!67924 None!157)))

(assert (= (and d!28167 c!18054) b!104320))

(assert (= (and d!28167 (not c!18054)) b!104321))

(assert (= (and b!104321 c!18055) b!104322))

(assert (= (and b!104321 (not c!18055)) b!104323))

(declare-fun m!115471 () Bool)

(assert (=> b!104322 m!115471))

(assert (=> b!103580 d!28167))

(declare-fun d!28169 () Bool)

(declare-fun e!67925 () Bool)

(assert (=> d!28169 e!67925))

(declare-fun res!52007 () Bool)

(assert (=> d!28169 (=> (not res!52007) (not e!67925))))

(declare-fun lt!53197 () ListLongMap!1539)

(assert (=> d!28169 (= res!52007 (contains!816 lt!53197 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun lt!53195 () List!1612)

(assert (=> d!28169 (= lt!53197 (ListLongMap!1540 lt!53195))))

(declare-fun lt!53194 () Unit!3141)

(declare-fun lt!53196 () Unit!3141)

(assert (=> d!28169 (= lt!53194 lt!53196)))

(assert (=> d!28169 (= (getValueByKey!153 lt!53195 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28169 (= lt!53196 (lemmaContainsTupThenGetReturnValue!72 lt!53195 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28169 (= lt!53195 (insertStrictlySorted!75 (toList!785 call!10860) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28169 (= (+!134 call!10860 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) lt!53197)))

(declare-fun b!104324 () Bool)

(declare-fun res!52006 () Bool)

(assert (=> b!104324 (=> (not res!52006) (not e!67925))))

(assert (=> b!104324 (= res!52006 (= (getValueByKey!153 (toList!785 lt!53197) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun b!104325 () Bool)

(assert (=> b!104325 (= e!67925 (contains!819 (toList!785 lt!53197) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(assert (= (and d!28169 res!52007) b!104324))

(assert (= (and b!104324 res!52006) b!104325))

(declare-fun m!115473 () Bool)

(assert (=> d!28169 m!115473))

(declare-fun m!115475 () Bool)

(assert (=> d!28169 m!115475))

(declare-fun m!115477 () Bool)

(assert (=> d!28169 m!115477))

(declare-fun m!115479 () Bool)

(assert (=> d!28169 m!115479))

(declare-fun m!115481 () Bool)

(assert (=> b!104324 m!115481))

(declare-fun m!115483 () Bool)

(assert (=> b!104325 m!115483))

(assert (=> b!103481 d!28169))

(assert (=> d!27769 d!27773))

(assert (=> d!27769 d!27765))

(assert (=> d!27769 d!27767))

(assert (=> d!27769 d!27771))

(declare-fun b!104326 () Bool)

(declare-fun e!67927 () Bool)

(declare-fun lt!53202 () ListLongMap!1539)

(assert (=> b!104326 (= e!67927 (isEmpty!371 lt!53202))))

(declare-fun d!28171 () Bool)

(declare-fun e!67932 () Bool)

(assert (=> d!28171 e!67932))

(declare-fun res!52008 () Bool)

(assert (=> d!28171 (=> (not res!52008) (not e!67932))))

(assert (=> d!28171 (= res!52008 (not (contains!816 lt!53202 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67928 () ListLongMap!1539)

(assert (=> d!28171 (= lt!53202 e!67928)))

(declare-fun c!18059 () Bool)

(assert (=> d!28171 (= c!18059 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!28171 (validMask!0 (mask!6695 (v!2867 (underlying!352 thiss!992))))))

(assert (=> d!28171 (= (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))) lt!53202)))

(declare-fun b!104327 () Bool)

(declare-fun e!67930 () Bool)

(assert (=> b!104327 (= e!67930 e!67927)))

(declare-fun c!18057 () Bool)

(assert (=> b!104327 (= c!18057 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104328 () Bool)

(assert (=> b!104328 (= e!67928 (ListLongMap!1540 Nil!1609))))

(declare-fun b!104329 () Bool)

(assert (=> b!104329 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> b!104329 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2300 (_values!2543 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67926 () Bool)

(assert (=> b!104329 (= e!67926 (= (apply!97 lt!53202 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104330 () Bool)

(declare-fun e!67929 () Bool)

(assert (=> b!104330 (= e!67929 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104330 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!104331 () Bool)

(assert (=> b!104331 (= e!67932 e!67930)))

(declare-fun c!18058 () Bool)

(assert (=> b!104331 (= c!18058 e!67929)))

(declare-fun res!52011 () Bool)

(assert (=> b!104331 (=> (not res!52011) (not e!67929))))

(assert (=> b!104331 (= res!52011 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104332 () Bool)

(declare-fun lt!53199 () Unit!3141)

(declare-fun lt!53201 () Unit!3141)

(assert (=> b!104332 (= lt!53199 lt!53201)))

(declare-fun lt!53200 () V!3209)

(declare-fun lt!53198 () (_ BitVec 64))

(declare-fun lt!53203 () ListLongMap!1539)

(declare-fun lt!53204 () (_ BitVec 64))

(assert (=> b!104332 (not (contains!816 (+!134 lt!53203 (tuple2!2373 lt!53198 lt!53200)) lt!53204))))

(assert (=> b!104332 (= lt!53201 (addStillNotContains!46 lt!53203 lt!53198 lt!53200 lt!53204))))

(assert (=> b!104332 (= lt!53204 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104332 (= lt!53200 (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104332 (= lt!53198 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!10955 () ListLongMap!1539)

(assert (=> b!104332 (= lt!53203 call!10955)))

(declare-fun e!67931 () ListLongMap!1539)

(assert (=> b!104332 (= e!67931 (+!134 call!10955 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104333 () Bool)

(assert (=> b!104333 (= e!67931 call!10955)))

(declare-fun b!104334 () Bool)

(assert (=> b!104334 (= e!67930 e!67926)))

(assert (=> b!104334 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun res!52010 () Bool)

(assert (=> b!104334 (= res!52010 (contains!816 lt!53202 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104334 (=> (not res!52010) (not e!67926))))

(declare-fun bm!10952 () Bool)

(assert (=> bm!10952 (= call!10955 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992)))))))

(declare-fun b!104335 () Bool)

(assert (=> b!104335 (= e!67927 (= lt!53202 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (_values!2543 (v!2867 (underlying!352 thiss!992))) (mask!6695 (v!2867 (underlying!352 thiss!992))) (extraKeys!2369 (v!2867 (underlying!352 thiss!992))) (zeroValue!2437 (v!2867 (underlying!352 thiss!992))) (minValue!2437 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104336 () Bool)

(assert (=> b!104336 (= e!67928 e!67931)))

(declare-fun c!18056 () Bool)

(assert (=> b!104336 (= c!18056 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104337 () Bool)

(declare-fun res!52009 () Bool)

(assert (=> b!104337 (=> (not res!52009) (not e!67932))))

(assert (=> b!104337 (= res!52009 (not (contains!816 lt!53202 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28171 c!18059) b!104328))

(assert (= (and d!28171 (not c!18059)) b!104336))

(assert (= (and b!104336 c!18056) b!104332))

(assert (= (and b!104336 (not c!18056)) b!104333))

(assert (= (or b!104332 b!104333) bm!10952))

(assert (= (and d!28171 res!52008) b!104337))

(assert (= (and b!104337 res!52009) b!104331))

(assert (= (and b!104331 res!52011) b!104330))

(assert (= (and b!104331 c!18058) b!104334))

(assert (= (and b!104331 (not c!18058)) b!104327))

(assert (= (and b!104334 res!52010) b!104329))

(assert (= (and b!104327 c!18057) b!104335))

(assert (= (and b!104327 (not c!18057)) b!104326))

(declare-fun b_lambda!4645 () Bool)

(assert (=> (not b_lambda!4645) (not b!104329)))

(assert (=> b!104329 t!5662))

(declare-fun b_and!6433 () Bool)

(assert (= b_and!6429 (and (=> t!5662 result!3411) b_and!6433)))

(assert (=> b!104329 t!5664))

(declare-fun b_and!6435 () Bool)

(assert (= b_and!6431 (and (=> t!5664 result!3415) b_and!6435)))

(declare-fun b_lambda!4647 () Bool)

(assert (=> (not b_lambda!4647) (not b!104332)))

(assert (=> b!104332 t!5662))

(declare-fun b_and!6437 () Bool)

(assert (= b_and!6433 (and (=> t!5662 result!3411) b_and!6437)))

(assert (=> b!104332 t!5664))

(declare-fun b_and!6439 () Bool)

(assert (= b_and!6435 (and (=> t!5664 result!3415) b_and!6439)))

(declare-fun m!115485 () Bool)

(assert (=> b!104330 m!115485))

(assert (=> b!104330 m!115485))

(declare-fun m!115487 () Bool)

(assert (=> b!104330 m!115487))

(declare-fun m!115489 () Bool)

(assert (=> b!104326 m!115489))

(assert (=> b!104334 m!115485))

(assert (=> b!104334 m!115485))

(declare-fun m!115491 () Bool)

(assert (=> b!104334 m!115491))

(declare-fun m!115493 () Bool)

(assert (=> d!28171 m!115493))

(assert (=> d!28171 m!113563))

(declare-fun m!115495 () Bool)

(assert (=> b!104337 m!115495))

(declare-fun m!115497 () Bool)

(assert (=> b!104329 m!115497))

(assert (=> b!104329 m!115485))

(declare-fun m!115499 () Bool)

(assert (=> b!104329 m!115499))

(assert (=> b!104329 m!113539))

(assert (=> b!104329 m!115497))

(assert (=> b!104329 m!113539))

(declare-fun m!115501 () Bool)

(assert (=> b!104329 m!115501))

(assert (=> b!104329 m!115485))

(declare-fun m!115503 () Bool)

(assert (=> bm!10952 m!115503))

(assert (=> b!104335 m!115503))

(assert (=> b!104336 m!115485))

(assert (=> b!104336 m!115485))

(assert (=> b!104336 m!115487))

(assert (=> b!104332 m!115497))

(declare-fun m!115505 () Bool)

(assert (=> b!104332 m!115505))

(assert (=> b!104332 m!115497))

(assert (=> b!104332 m!113539))

(assert (=> b!104332 m!115501))

(declare-fun m!115507 () Bool)

(assert (=> b!104332 m!115507))

(declare-fun m!115509 () Bool)

(assert (=> b!104332 m!115509))

(assert (=> b!104332 m!115485))

(declare-fun m!115511 () Bool)

(assert (=> b!104332 m!115511))

(assert (=> b!104332 m!113539))

(assert (=> b!104332 m!115507))

(assert (=> b!103691 d!28171))

(declare-fun b!104338 () Bool)

(declare-fun e!67945 () Bool)

(assert (=> b!104338 (= e!67945 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104339 () Bool)

(declare-fun c!18063 () Bool)

(assert (=> b!104339 (= c!18063 (and (not (= (bvand lt!52552 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52552 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!67942 () ListLongMap!1539)

(declare-fun e!67943 () ListLongMap!1539)

(assert (=> b!104339 (= e!67942 e!67943)))

(declare-fun b!104340 () Bool)

(declare-fun e!67938 () Bool)

(declare-fun call!10956 () Bool)

(assert (=> b!104340 (= e!67938 (not call!10956))))

(declare-fun call!10959 () ListLongMap!1539)

(declare-fun bm!10953 () Bool)

(assert (=> bm!10953 (= call!10959 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun b!104341 () Bool)

(declare-fun e!67937 () Bool)

(declare-fun lt!53215 () ListLongMap!1539)

(assert (=> b!104341 (= e!67937 (= (apply!97 lt!53215 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104341 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (_values!2543 newMap!16))))))

(assert (=> b!104341 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104342 () Bool)

(declare-fun e!67944 () ListLongMap!1539)

(assert (=> b!104342 (= e!67944 e!67942)))

(declare-fun c!18061 () Bool)

(assert (=> b!104342 (= c!18061 (and (not (= (bvand lt!52552 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52552 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104343 () Bool)

(declare-fun e!67939 () Unit!3141)

(declare-fun lt!53219 () Unit!3141)

(assert (=> b!104343 (= e!67939 lt!53219)))

(declare-fun lt!53206 () ListLongMap!1539)

(assert (=> b!104343 (= lt!53206 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53208 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53208 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53224 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53224 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53226 () Unit!3141)

(assert (=> b!104343 (= lt!53226 (addStillContains!73 lt!53206 lt!53208 lt!52329 lt!53224))))

(assert (=> b!104343 (contains!816 (+!134 lt!53206 (tuple2!2373 lt!53208 lt!52329)) lt!53224)))

(declare-fun lt!53222 () Unit!3141)

(assert (=> b!104343 (= lt!53222 lt!53226)))

(declare-fun lt!53217 () ListLongMap!1539)

(assert (=> b!104343 (= lt!53217 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53225 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53225 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53207 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53207 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53212 () Unit!3141)

(assert (=> b!104343 (= lt!53212 (addApplyDifferent!73 lt!53217 lt!53225 (minValue!2437 newMap!16) lt!53207))))

(assert (=> b!104343 (= (apply!97 (+!134 lt!53217 (tuple2!2373 lt!53225 (minValue!2437 newMap!16))) lt!53207) (apply!97 lt!53217 lt!53207))))

(declare-fun lt!53205 () Unit!3141)

(assert (=> b!104343 (= lt!53205 lt!53212)))

(declare-fun lt!53223 () ListLongMap!1539)

(assert (=> b!104343 (= lt!53223 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53218 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53218 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53220 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53220 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53209 () Unit!3141)

(assert (=> b!104343 (= lt!53209 (addApplyDifferent!73 lt!53223 lt!53218 lt!52329 lt!53220))))

(assert (=> b!104343 (= (apply!97 (+!134 lt!53223 (tuple2!2373 lt!53218 lt!52329)) lt!53220) (apply!97 lt!53223 lt!53220))))

(declare-fun lt!53214 () Unit!3141)

(assert (=> b!104343 (= lt!53214 lt!53209)))

(declare-fun lt!53216 () ListLongMap!1539)

(assert (=> b!104343 (= lt!53216 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53221 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53221 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53211 () (_ BitVec 64))

(assert (=> b!104343 (= lt!53211 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104343 (= lt!53219 (addApplyDifferent!73 lt!53216 lt!53221 (minValue!2437 newMap!16) lt!53211))))

(assert (=> b!104343 (= (apply!97 (+!134 lt!53216 (tuple2!2373 lt!53221 (minValue!2437 newMap!16))) lt!53211) (apply!97 lt!53216 lt!53211))))

(declare-fun b!104344 () Bool)

(declare-fun e!67933 () Bool)

(declare-fun e!67936 () Bool)

(assert (=> b!104344 (= e!67933 e!67936)))

(declare-fun res!52014 () Bool)

(declare-fun call!10958 () Bool)

(assert (=> b!104344 (= res!52014 call!10958)))

(assert (=> b!104344 (=> (not res!52014) (not e!67936))))

(declare-fun b!104345 () Bool)

(declare-fun e!67941 () Bool)

(assert (=> b!104345 (= e!67941 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104346 () Bool)

(declare-fun e!67940 () Bool)

(assert (=> b!104346 (= e!67940 (= (apply!97 lt!53215 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52329))))

(declare-fun call!10957 () ListLongMap!1539)

(declare-fun bm!10954 () Bool)

(declare-fun call!10961 () ListLongMap!1539)

(declare-fun call!10962 () ListLongMap!1539)

(declare-fun c!18060 () Bool)

(assert (=> bm!10954 (= call!10962 (+!134 (ite c!18060 call!10959 (ite c!18061 call!10957 call!10961)) (ite (or c!18060 c!18061) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!10955 () Bool)

(assert (=> bm!10955 (= call!10957 call!10959)))

(declare-fun b!104347 () Bool)

(declare-fun res!52015 () Bool)

(declare-fun e!67935 () Bool)

(assert (=> b!104347 (=> (not res!52015) (not e!67935))))

(declare-fun e!67934 () Bool)

(assert (=> b!104347 (= res!52015 e!67934)))

(declare-fun res!52017 () Bool)

(assert (=> b!104347 (=> res!52017 e!67934)))

(assert (=> b!104347 (= res!52017 (not e!67945))))

(declare-fun res!52012 () Bool)

(assert (=> b!104347 (=> (not res!52012) (not e!67945))))

(assert (=> b!104347 (= res!52012 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10956 () Bool)

(assert (=> bm!10956 (= call!10958 (contains!816 lt!53215 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10957 () Bool)

(assert (=> bm!10957 (= call!10961 call!10957)))

(declare-fun b!104348 () Bool)

(assert (=> b!104348 (= e!67936 (= (apply!97 lt!53215 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!28173 () Bool)

(assert (=> d!28173 e!67935))

(declare-fun res!52018 () Bool)

(assert (=> d!28173 (=> (not res!52018) (not e!67935))))

(assert (=> d!28173 (= res!52018 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!53210 () ListLongMap!1539)

(assert (=> d!28173 (= lt!53215 lt!53210)))

(declare-fun lt!53213 () Unit!3141)

(assert (=> d!28173 (= lt!53213 e!67939)))

(declare-fun c!18064 () Bool)

(assert (=> d!28173 (= c!18064 e!67941)))

(declare-fun res!52020 () Bool)

(assert (=> d!28173 (=> (not res!52020) (not e!67941))))

(assert (=> d!28173 (= res!52020 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28173 (= lt!53210 e!67944)))

(assert (=> d!28173 (= c!18060 (and (not (= (bvand lt!52552 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52552 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28173 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28173 (= (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53215)))

(declare-fun b!104349 () Bool)

(assert (=> b!104349 (= e!67944 (+!134 call!10962 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!104350 () Bool)

(declare-fun res!52016 () Bool)

(assert (=> b!104350 (=> (not res!52016) (not e!67935))))

(assert (=> b!104350 (= res!52016 e!67938)))

(declare-fun c!18062 () Bool)

(assert (=> b!104350 (= c!18062 (not (= (bvand lt!52552 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104351 () Bool)

(assert (=> b!104351 (= e!67938 e!67940)))

(declare-fun res!52013 () Bool)

(assert (=> b!104351 (= res!52013 call!10956)))

(assert (=> b!104351 (=> (not res!52013) (not e!67940))))

(declare-fun b!104352 () Bool)

(declare-fun call!10960 () ListLongMap!1539)

(assert (=> b!104352 (= e!67942 call!10960)))

(declare-fun bm!10958 () Bool)

(assert (=> bm!10958 (= call!10960 call!10962)))

(declare-fun b!104353 () Bool)

(declare-fun Unit!3190 () Unit!3141)

(assert (=> b!104353 (= e!67939 Unit!3190)))

(declare-fun b!104354 () Bool)

(assert (=> b!104354 (= e!67935 e!67933)))

(declare-fun c!18065 () Bool)

(assert (=> b!104354 (= c!18065 (not (= (bvand lt!52552 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104355 () Bool)

(assert (=> b!104355 (= e!67943 call!10960)))

(declare-fun b!104356 () Bool)

(assert (=> b!104356 (= e!67933 (not call!10958))))

(declare-fun b!104357 () Bool)

(assert (=> b!104357 (= e!67943 call!10961)))

(declare-fun b!104358 () Bool)

(assert (=> b!104358 (= e!67934 e!67937)))

(declare-fun res!52019 () Bool)

(assert (=> b!104358 (=> (not res!52019) (not e!67937))))

(assert (=> b!104358 (= res!52019 (contains!816 lt!53215 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104358 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10959 () Bool)

(assert (=> bm!10959 (= call!10956 (contains!816 lt!53215 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28173 c!18060) b!104349))

(assert (= (and d!28173 (not c!18060)) b!104342))

(assert (= (and b!104342 c!18061) b!104352))

(assert (= (and b!104342 (not c!18061)) b!104339))

(assert (= (and b!104339 c!18063) b!104355))

(assert (= (and b!104339 (not c!18063)) b!104357))

(assert (= (or b!104355 b!104357) bm!10957))

(assert (= (or b!104352 bm!10957) bm!10955))

(assert (= (or b!104352 b!104355) bm!10958))

(assert (= (or b!104349 bm!10955) bm!10953))

(assert (= (or b!104349 bm!10958) bm!10954))

(assert (= (and d!28173 res!52020) b!104345))

(assert (= (and d!28173 c!18064) b!104343))

(assert (= (and d!28173 (not c!18064)) b!104353))

(assert (= (and d!28173 res!52018) b!104347))

(assert (= (and b!104347 res!52012) b!104338))

(assert (= (and b!104347 (not res!52017)) b!104358))

(assert (= (and b!104358 res!52019) b!104341))

(assert (= (and b!104347 res!52015) b!104350))

(assert (= (and b!104350 c!18062) b!104351))

(assert (= (and b!104350 (not c!18062)) b!104340))

(assert (= (and b!104351 res!52013) b!104346))

(assert (= (or b!104351 b!104340) bm!10959))

(assert (= (and b!104350 res!52016) b!104354))

(assert (= (and b!104354 c!18065) b!104344))

(assert (= (and b!104354 (not c!18065)) b!104356))

(assert (= (and b!104344 res!52014) b!104348))

(assert (= (or b!104344 b!104356) bm!10956))

(declare-fun b_lambda!4649 () Bool)

(assert (=> (not b_lambda!4649) (not b!104341)))

(assert (=> b!104341 t!5677))

(declare-fun b_and!6441 () Bool)

(assert (= b_and!6437 (and (=> t!5677 result!3431) b_and!6441)))

(assert (=> b!104341 t!5679))

(declare-fun b_and!6443 () Bool)

(assert (= b_and!6439 (and (=> t!5679 result!3433) b_and!6443)))

(declare-fun m!115513 () Bool)

(assert (=> bm!10959 m!115513))

(declare-fun m!115515 () Bool)

(assert (=> b!104343 m!115515))

(declare-fun m!115517 () Bool)

(assert (=> b!104343 m!115517))

(declare-fun m!115519 () Bool)

(assert (=> b!104343 m!115519))

(declare-fun m!115521 () Bool)

(assert (=> b!104343 m!115521))

(declare-fun m!115523 () Bool)

(assert (=> b!104343 m!115523))

(declare-fun m!115525 () Bool)

(assert (=> b!104343 m!115525))

(assert (=> b!104343 m!115515))

(declare-fun m!115527 () Bool)

(assert (=> b!104343 m!115527))

(declare-fun m!115529 () Bool)

(assert (=> b!104343 m!115529))

(declare-fun m!115531 () Bool)

(assert (=> b!104343 m!115531))

(declare-fun m!115533 () Bool)

(assert (=> b!104343 m!115533))

(assert (=> b!104343 m!113969))

(assert (=> b!104343 m!115525))

(declare-fun m!115535 () Bool)

(assert (=> b!104343 m!115535))

(declare-fun m!115537 () Bool)

(assert (=> b!104343 m!115537))

(assert (=> b!104343 m!115523))

(declare-fun m!115539 () Bool)

(assert (=> b!104343 m!115539))

(assert (=> b!104343 m!115519))

(declare-fun m!115541 () Bool)

(assert (=> b!104343 m!115541))

(declare-fun m!115543 () Bool)

(assert (=> b!104343 m!115543))

(declare-fun m!115545 () Bool)

(assert (=> b!104343 m!115545))

(declare-fun m!115547 () Bool)

(assert (=> bm!10954 m!115547))

(assert (=> d!28173 m!113985))

(assert (=> b!104341 m!113987))

(assert (=> b!104341 m!113969))

(declare-fun m!115549 () Bool)

(assert (=> b!104341 m!115549))

(assert (=> b!104341 m!113991))

(assert (=> b!104341 m!113987))

(assert (=> b!104341 m!113993))

(assert (=> b!104341 m!113969))

(assert (=> b!104341 m!113991))

(assert (=> b!104358 m!113969))

(assert (=> b!104358 m!113969))

(declare-fun m!115551 () Bool)

(assert (=> b!104358 m!115551))

(assert (=> b!104345 m!113969))

(assert (=> b!104345 m!113969))

(assert (=> b!104345 m!113997))

(declare-fun m!115553 () Bool)

(assert (=> b!104348 m!115553))

(assert (=> b!104338 m!113969))

(assert (=> b!104338 m!113969))

(assert (=> b!104338 m!113997))

(declare-fun m!115555 () Bool)

(assert (=> bm!10956 m!115555))

(declare-fun m!115557 () Bool)

(assert (=> b!104346 m!115557))

(assert (=> bm!10953 m!115533))

(declare-fun m!115559 () Bool)

(assert (=> b!104349 m!115559))

(assert (=> d!27841 d!28173))

(declare-fun d!28175 () Bool)

(declare-fun e!67946 () Bool)

(assert (=> d!28175 e!67946))

(declare-fun res!52022 () Bool)

(assert (=> d!28175 (=> (not res!52022) (not e!67946))))

(declare-fun lt!53230 () ListLongMap!1539)

(assert (=> d!28175 (= res!52022 (contains!816 lt!53230 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(declare-fun lt!53228 () List!1612)

(assert (=> d!28175 (= lt!53230 (ListLongMap!1540 lt!53228))))

(declare-fun lt!53227 () Unit!3141)

(declare-fun lt!53229 () Unit!3141)

(assert (=> d!28175 (= lt!53227 lt!53229)))

(assert (=> d!28175 (= (getValueByKey!153 lt!53228 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(assert (=> d!28175 (= lt!53229 (lemmaContainsTupThenGetReturnValue!72 lt!53228 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(assert (=> d!28175 (= lt!53228 (insertStrictlySorted!75 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(assert (=> d!28175 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)) lt!53230)))

(declare-fun b!104359 () Bool)

(declare-fun res!52021 () Bool)

(assert (=> b!104359 (=> (not res!52021) (not e!67946))))

(assert (=> b!104359 (= res!52021 (= (getValueByKey!153 (toList!785 lt!53230) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)))))))

(declare-fun b!104360 () Bool)

(assert (=> b!104360 (= e!67946 (contains!819 (toList!785 lt!53230) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)))))

(assert (= (and d!28175 res!52022) b!104359))

(assert (= (and b!104359 res!52021) b!104360))

(declare-fun m!115561 () Bool)

(assert (=> d!28175 m!115561))

(declare-fun m!115563 () Bool)

(assert (=> d!28175 m!115563))

(declare-fun m!115565 () Bool)

(assert (=> d!28175 m!115565))

(declare-fun m!115567 () Bool)

(assert (=> d!28175 m!115567))

(declare-fun m!115569 () Bool)

(assert (=> b!104359 m!115569))

(declare-fun m!115571 () Bool)

(assert (=> b!104360 m!115571))

(assert (=> d!27841 d!28175))

(assert (=> d!27841 d!27693))

(declare-fun d!28177 () Bool)

(assert (=> d!28177 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52552 lt!52329 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28177 true))

(declare-fun _$7!89 () Unit!3141)

(assert (=> d!28177 (= (choose!653 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52552 (zeroValue!2437 newMap!16) lt!52329 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)) _$7!89)))

(declare-fun bs!4259 () Bool)

(assert (= bs!4259 d!28177))

(assert (=> bs!4259 m!113847))

(assert (=> bs!4259 m!113847))

(assert (=> bs!4259 m!114589))

(assert (=> bs!4259 m!114585))

(assert (=> d!27841 d!28177))

(assert (=> d!27841 d!27973))

(declare-fun d!28179 () Bool)

(assert (=> d!28179 (= (apply!97 lt!52876 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52876) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4260 () Bool)

(assert (= bs!4260 d!28179))

(assert (=> bs!4260 m!115157))

(assert (=> bs!4260 m!115157))

(declare-fun m!115573 () Bool)

(assert (=> bs!4260 m!115573))

(assert (=> b!103702 d!28179))

(declare-fun d!28181 () Bool)

(declare-fun e!67948 () Bool)

(assert (=> d!28181 e!67948))

(declare-fun res!52023 () Bool)

(assert (=> d!28181 (=> res!52023 e!67948)))

(declare-fun lt!53233 () Bool)

(assert (=> d!28181 (= res!52023 (not lt!53233))))

(declare-fun lt!53232 () Bool)

(assert (=> d!28181 (= lt!53233 lt!53232)))

(declare-fun lt!53234 () Unit!3141)

(declare-fun e!67947 () Unit!3141)

(assert (=> d!28181 (= lt!53234 e!67947)))

(declare-fun c!18066 () Bool)

(assert (=> d!28181 (= c!18066 lt!53232)))

(assert (=> d!28181 (= lt!53232 (containsKey!157 (toList!785 lt!52876) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28181 (= (contains!816 lt!52876 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) lt!53233)))

(declare-fun b!104361 () Bool)

(declare-fun lt!53231 () Unit!3141)

(assert (=> b!104361 (= e!67947 lt!53231)))

(assert (=> b!104361 (= lt!53231 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52876) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104361 (isDefined!107 (getValueByKey!153 (toList!785 lt!52876) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104362 () Bool)

(declare-fun Unit!3191 () Unit!3141)

(assert (=> b!104362 (= e!67947 Unit!3191)))

(declare-fun b!104363 () Bool)

(assert (=> b!104363 (= e!67948 (isDefined!107 (getValueByKey!153 (toList!785 lt!52876) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28181 c!18066) b!104361))

(assert (= (and d!28181 (not c!18066)) b!104362))

(assert (= (and d!28181 (not res!52023)) b!104363))

(assert (=> d!28181 m!113969))

(declare-fun m!115575 () Bool)

(assert (=> d!28181 m!115575))

(assert (=> b!104361 m!113969))

(declare-fun m!115577 () Bool)

(assert (=> b!104361 m!115577))

(assert (=> b!104361 m!113969))

(assert (=> b!104361 m!114773))

(assert (=> b!104361 m!114773))

(declare-fun m!115579 () Bool)

(assert (=> b!104361 m!115579))

(assert (=> b!104363 m!113969))

(assert (=> b!104363 m!114773))

(assert (=> b!104363 m!114773))

(assert (=> b!104363 m!115579))

(assert (=> b!103714 d!28181))

(assert (=> d!27805 d!27973))

(declare-fun b!104366 () Bool)

(declare-fun e!67950 () Option!159)

(assert (=> b!104366 (= e!67950 (getValueByKey!153 (t!5665 (t!5665 (toList!785 lt!52449))) (_1!1197 lt!52325)))))

(declare-fun b!104364 () Bool)

(declare-fun e!67949 () Option!159)

(assert (=> b!104364 (= e!67949 (Some!158 (_2!1197 (h!2204 (t!5665 (toList!785 lt!52449))))))))

(declare-fun d!28183 () Bool)

(declare-fun c!18067 () Bool)

(assert (=> d!28183 (= c!18067 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52449))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52449)))) (_1!1197 lt!52325))))))

(assert (=> d!28183 (= (getValueByKey!153 (t!5665 (toList!785 lt!52449)) (_1!1197 lt!52325)) e!67949)))

(declare-fun b!104365 () Bool)

(assert (=> b!104365 (= e!67949 e!67950)))

(declare-fun c!18068 () Bool)

(assert (=> b!104365 (= c!18068 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52449))) (not (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52449)))) (_1!1197 lt!52325)))))))

(declare-fun b!104367 () Bool)

(assert (=> b!104367 (= e!67950 None!157)))

(assert (= (and d!28183 c!18067) b!104364))

(assert (= (and d!28183 (not c!18067)) b!104365))

(assert (= (and b!104365 c!18068) b!104366))

(assert (= (and b!104365 (not c!18068)) b!104367))

(declare-fun m!115581 () Bool)

(assert (=> b!104366 m!115581))

(assert (=> b!103503 d!28183))

(assert (=> d!27823 d!27763))

(declare-fun b!104384 () Bool)

(declare-fun res!52034 () Bool)

(declare-fun lt!53237 () SeekEntryResult!261)

(assert (=> b!104384 (= res!52034 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!53237)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67962 () Bool)

(assert (=> b!104384 (=> (not res!52034) (not e!67962))))

(declare-fun b!104385 () Bool)

(declare-fun e!67961 () Bool)

(declare-fun call!10967 () Bool)

(assert (=> b!104385 (= e!67961 (not call!10967))))

(declare-fun d!28185 () Bool)

(declare-fun e!67960 () Bool)

(assert (=> d!28185 e!67960))

(declare-fun c!18073 () Bool)

(assert (=> d!28185 (= c!18073 ((_ is MissingZero!261) lt!53237))))

(assert (=> d!28185 (= lt!53237 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(assert (=> d!28185 true))

(declare-fun _$34!882 () Unit!3141)

(assert (=> d!28185 (= (choose!651 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) _$34!882)))

(declare-fun b!104386 () Bool)

(declare-fun e!67959 () Bool)

(assert (=> b!104386 (= e!67960 e!67959)))

(declare-fun c!18074 () Bool)

(assert (=> b!104386 (= c!18074 ((_ is MissingVacant!261) lt!53237))))

(declare-fun b!104387 () Bool)

(declare-fun res!52032 () Bool)

(assert (=> b!104387 (=> (not res!52032) (not e!67961))))

(declare-fun call!10968 () Bool)

(assert (=> b!104387 (= res!52032 call!10968)))

(assert (=> b!104387 (= e!67959 e!67961)))

(declare-fun b!104388 () Bool)

(assert (=> b!104388 (= e!67962 (not call!10967))))

(declare-fun bm!10964 () Bool)

(assert (=> bm!10964 (= call!10967 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!10965 () Bool)

(assert (=> bm!10965 (= call!10968 (inRange!0 (ite c!18073 (index!3191 lt!53237) (index!3194 lt!53237)) (mask!6695 newMap!16)))))

(declare-fun b!104389 () Bool)

(assert (=> b!104389 (= e!67959 ((_ is Undefined!261) lt!53237))))

(declare-fun b!104390 () Bool)

(declare-fun res!52035 () Bool)

(assert (=> b!104390 (=> (not res!52035) (not e!67961))))

(assert (=> b!104390 (= res!52035 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!53237)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104391 () Bool)

(assert (=> b!104391 (= e!67960 e!67962)))

(declare-fun res!52033 () Bool)

(assert (=> b!104391 (= res!52033 call!10968)))

(assert (=> b!104391 (=> (not res!52033) (not e!67962))))

(assert (= (and d!28185 c!18073) b!104391))

(assert (= (and d!28185 (not c!18073)) b!104386))

(assert (= (and b!104391 res!52033) b!104384))

(assert (= (and b!104384 res!52034) b!104388))

(assert (= (and b!104386 c!18074) b!104387))

(assert (= (and b!104386 (not c!18074)) b!104389))

(assert (= (and b!104387 res!52032) b!104390))

(assert (= (and b!104390 res!52035) b!104385))

(assert (= (or b!104391 b!104387) bm!10965))

(assert (= (or b!104388 b!104385) bm!10964))

(declare-fun m!115583 () Bool)

(assert (=> b!104390 m!115583))

(assert (=> bm!10964 m!113535))

(assert (=> bm!10964 m!113841))

(declare-fun m!115585 () Bool)

(assert (=> bm!10965 m!115585))

(assert (=> d!28185 m!113535))

(assert (=> d!28185 m!113823))

(declare-fun m!115587 () Bool)

(assert (=> b!104384 m!115587))

(assert (=> d!27823 d!28185))

(assert (=> d!27823 d!27973))

(declare-fun lt!53238 () Bool)

(declare-fun d!28187 () Bool)

(assert (=> d!28187 (= lt!53238 (select (content!108 (toList!785 lt!52953)) (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!67963 () Bool)

(assert (=> d!28187 (= lt!53238 e!67963)))

(declare-fun res!52036 () Bool)

(assert (=> d!28187 (=> (not res!52036) (not e!67963))))

(assert (=> d!28187 (= res!52036 ((_ is Cons!1608) (toList!785 lt!52953)))))

(assert (=> d!28187 (= (contains!819 (toList!785 lt!52953) (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!53238)))

(declare-fun b!104392 () Bool)

(declare-fun e!67964 () Bool)

(assert (=> b!104392 (= e!67963 e!67964)))

(declare-fun res!52037 () Bool)

(assert (=> b!104392 (=> res!52037 e!67964)))

(assert (=> b!104392 (= res!52037 (= (h!2204 (toList!785 lt!52953)) (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104393 () Bool)

(assert (=> b!104393 (= e!67964 (contains!819 (t!5665 (toList!785 lt!52953)) (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!28187 res!52036) b!104392))

(assert (= (and b!104392 (not res!52037)) b!104393))

(declare-fun m!115589 () Bool)

(assert (=> d!28187 m!115589))

(declare-fun m!115591 () Bool)

(assert (=> d!28187 m!115591))

(declare-fun m!115593 () Bool)

(assert (=> b!104393 m!115593))

(assert (=> b!103805 d!28187))

(assert (=> b!103667 d!27823))

(declare-fun d!28189 () Bool)

(assert (=> d!28189 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4261 () Bool)

(assert (= bs!4261 d!28189))

(assert (=> bs!4261 m!114515))

(declare-fun m!115595 () Bool)

(assert (=> bs!4261 m!115595))

(assert (=> b!103841 d!28189))

(declare-fun e!67966 () Option!159)

(declare-fun b!104396 () Bool)

(assert (=> b!104396 (= e!67966 (getValueByKey!153 (t!5665 (toList!785 lt!52435)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!104394 () Bool)

(declare-fun e!67965 () Option!159)

(assert (=> b!104394 (= e!67965 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52435)))))))

(declare-fun d!28191 () Bool)

(declare-fun c!18075 () Bool)

(assert (=> d!28191 (= c!18075 (and ((_ is Cons!1608) (toList!785 lt!52435)) (= (_1!1197 (h!2204 (toList!785 lt!52435))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28191 (= (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67965)))

(declare-fun b!104395 () Bool)

(assert (=> b!104395 (= e!67965 e!67966)))

(declare-fun c!18076 () Bool)

(assert (=> b!104395 (= c!18076 (and ((_ is Cons!1608) (toList!785 lt!52435)) (not (= (_1!1197 (h!2204 (toList!785 lt!52435))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104397 () Bool)

(assert (=> b!104397 (= e!67966 None!157)))

(assert (= (and d!28191 c!18075) b!104394))

(assert (= (and d!28191 (not c!18075)) b!104395))

(assert (= (and b!104395 c!18076) b!104396))

(assert (= (and b!104395 (not c!18076)) b!104397))

(assert (=> b!104396 m!113707))

(declare-fun m!115597 () Bool)

(assert (=> b!104396 m!115597))

(assert (=> b!103841 d!28191))

(declare-fun d!28193 () Bool)

(declare-fun res!52038 () Bool)

(declare-fun e!67967 () Bool)

(assert (=> d!28193 (=> res!52038 e!67967)))

(assert (=> d!28193 (= res!52038 (and ((_ is Cons!1608) (toList!785 lt!52457)) (= (_1!1197 (h!2204 (toList!785 lt!52457))) (_1!1197 lt!52331))))))

(assert (=> d!28193 (= (containsKey!157 (toList!785 lt!52457) (_1!1197 lt!52331)) e!67967)))

(declare-fun b!104398 () Bool)

(declare-fun e!67968 () Bool)

(assert (=> b!104398 (= e!67967 e!67968)))

(declare-fun res!52039 () Bool)

(assert (=> b!104398 (=> (not res!52039) (not e!67968))))

(assert (=> b!104398 (= res!52039 (and (or (not ((_ is Cons!1608) (toList!785 lt!52457))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52457))) (_1!1197 lt!52331))) ((_ is Cons!1608) (toList!785 lt!52457)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52457))) (_1!1197 lt!52331))))))

(declare-fun b!104399 () Bool)

(assert (=> b!104399 (= e!67968 (containsKey!157 (t!5665 (toList!785 lt!52457)) (_1!1197 lt!52331)))))

(assert (= (and d!28193 (not res!52038)) b!104398))

(assert (= (and b!104398 res!52039) b!104399))

(declare-fun m!115599 () Bool)

(assert (=> b!104399 m!115599))

(assert (=> d!27775 d!28193))

(declare-fun d!28195 () Bool)

(assert (=> d!28195 (= (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437)) (not (isEmpty!373 (getValueByKey!153 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))))

(declare-fun bs!4262 () Bool)

(assert (= bs!4262 d!28195))

(assert (=> bs!4262 m!114031))

(declare-fun m!115601 () Bool)

(assert (=> bs!4262 m!115601))

(assert (=> b!103413 d!28195))

(declare-fun b!104402 () Bool)

(declare-fun e!67970 () Option!159)

(assert (=> b!104402 (= e!67970 (getValueByKey!153 (t!5665 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))) lt!52437))))

(declare-fun e!67969 () Option!159)

(declare-fun b!104400 () Bool)

(assert (=> b!104400 (= e!67969 (Some!158 (_2!1197 (h!2204 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))))))))

(declare-fun c!18077 () Bool)

(declare-fun d!28197 () Bool)

(assert (=> d!28197 (= c!18077 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))))) lt!52437)))))

(assert (=> d!28197 (= (getValueByKey!153 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437) e!67969)))

(declare-fun b!104401 () Bool)

(assert (=> b!104401 (= e!67969 e!67970)))

(declare-fun c!18078 () Bool)

(assert (=> b!104401 (= c!18078 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))) (not (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))))) lt!52437))))))

(declare-fun b!104403 () Bool)

(assert (=> b!104403 (= e!67970 None!157)))

(assert (= (and d!28197 c!18077) b!104400))

(assert (= (and d!28197 (not c!18077)) b!104401))

(assert (= (and b!104401 c!18078) b!104402))

(assert (= (and b!104401 (not c!18078)) b!104403))

(declare-fun m!115603 () Bool)

(assert (=> b!104402 m!115603))

(assert (=> b!103413 d!28197))

(assert (=> b!103477 d!28073))

(declare-fun d!28199 () Bool)

(declare-fun res!52040 () Bool)

(declare-fun e!67971 () Bool)

(assert (=> d!28199 (=> res!52040 e!67971)))

(assert (=> d!28199 (= res!52040 (and ((_ is Cons!1608) lt!52447) (= (_1!1197 (h!2204 lt!52447)) (_1!1197 lt!52325))))))

(assert (=> d!28199 (= (containsKey!157 lt!52447 (_1!1197 lt!52325)) e!67971)))

(declare-fun b!104404 () Bool)

(declare-fun e!67972 () Bool)

(assert (=> b!104404 (= e!67971 e!67972)))

(declare-fun res!52041 () Bool)

(assert (=> b!104404 (=> (not res!52041) (not e!67972))))

(assert (=> b!104404 (= res!52041 (and (or (not ((_ is Cons!1608) lt!52447)) (bvsle (_1!1197 (h!2204 lt!52447)) (_1!1197 lt!52325))) ((_ is Cons!1608) lt!52447) (bvslt (_1!1197 (h!2204 lt!52447)) (_1!1197 lt!52325))))))

(declare-fun b!104405 () Bool)

(assert (=> b!104405 (= e!67972 (containsKey!157 (t!5665 lt!52447) (_1!1197 lt!52325)))))

(assert (= (and d!28199 (not res!52040)) b!104404))

(assert (= (and b!104404 res!52041) b!104405))

(declare-fun m!115605 () Bool)

(assert (=> b!104405 m!115605))

(assert (=> b!103827 d!28199))

(declare-fun d!28201 () Bool)

(assert (=> d!28201 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4263 () Bool)

(assert (= bs!4263 d!28201))

(assert (=> bs!4263 m!114595))

(declare-fun m!115607 () Bool)

(assert (=> bs!4263 m!115607))

(assert (=> b!103792 d!28201))

(declare-fun b!104408 () Bool)

(declare-fun e!67974 () Option!159)

(assert (=> b!104408 (= e!67974 (getValueByKey!153 (t!5665 (toList!785 lt!52435)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104406 () Bool)

(declare-fun e!67973 () Option!159)

(assert (=> b!104406 (= e!67973 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52435)))))))

(declare-fun d!28203 () Bool)

(declare-fun c!18079 () Bool)

(assert (=> d!28203 (= c!18079 (and ((_ is Cons!1608) (toList!785 lt!52435)) (= (_1!1197 (h!2204 (toList!785 lt!52435))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28203 (= (getValueByKey!153 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000) e!67973)))

(declare-fun b!104407 () Bool)

(assert (=> b!104407 (= e!67973 e!67974)))

(declare-fun c!18080 () Bool)

(assert (=> b!104407 (= c!18080 (and ((_ is Cons!1608) (toList!785 lt!52435)) (not (= (_1!1197 (h!2204 (toList!785 lt!52435))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104409 () Bool)

(assert (=> b!104409 (= e!67974 None!157)))

(assert (= (and d!28203 c!18079) b!104406))

(assert (= (and d!28203 (not c!18079)) b!104407))

(assert (= (and b!104407 c!18080) b!104408))

(assert (= (and b!104407 (not c!18080)) b!104409))

(declare-fun m!115609 () Bool)

(assert (=> b!104408 m!115609))

(assert (=> b!103792 d!28203))

(declare-fun e!67976 () Option!159)

(declare-fun b!104412 () Bool)

(assert (=> b!104412 (= e!67976 (getValueByKey!153 (t!5665 (toList!785 lt!52962)) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104410 () Bool)

(declare-fun e!67975 () Option!159)

(assert (=> b!104410 (= e!67975 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52962)))))))

(declare-fun d!28205 () Bool)

(declare-fun c!18081 () Bool)

(assert (=> d!28205 (= c!18081 (and ((_ is Cons!1608) (toList!785 lt!52962)) (= (_1!1197 (h!2204 (toList!785 lt!52962))) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28205 (= (getValueByKey!153 (toList!785 lt!52962) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!67975)))

(declare-fun b!104411 () Bool)

(assert (=> b!104411 (= e!67975 e!67976)))

(declare-fun c!18082 () Bool)

(assert (=> b!104411 (= c!18082 (and ((_ is Cons!1608) (toList!785 lt!52962)) (not (= (_1!1197 (h!2204 (toList!785 lt!52962))) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104413 () Bool)

(assert (=> b!104413 (= e!67976 None!157)))

(assert (= (and d!28205 c!18081) b!104410))

(assert (= (and d!28205 (not c!18081)) b!104411))

(assert (= (and b!104411 c!18082) b!104412))

(assert (= (and b!104411 (not c!18082)) b!104413))

(declare-fun m!115611 () Bool)

(assert (=> b!104412 m!115611))

(assert (=> b!103809 d!28205))

(declare-fun d!28207 () Bool)

(assert (=> d!28207 (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))

(assert (=> d!28207 true))

(declare-fun _$16!123 () Unit!3141)

(assert (=> d!28207 (= (choose!647 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (defaultEntry!2560 newMap!16)) _$16!123)))

(declare-fun bs!4264 () Bool)

(assert (= bs!4264 d!28207))

(assert (=> bs!4264 m!114059))

(assert (=> bs!4264 m!113833))

(assert (=> bs!4264 m!114059))

(assert (=> bs!4264 m!113833))

(assert (=> bs!4264 m!114061))

(assert (=> d!27709 d!28207))

(assert (=> d!27709 d!27973))

(declare-fun b!104416 () Bool)

(declare-fun e!67978 () Option!159)

(assert (=> b!104416 (= e!67978 (getValueByKey!153 (t!5665 (toList!785 lt!52653)) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))

(declare-fun b!104414 () Bool)

(declare-fun e!67977 () Option!159)

(assert (=> b!104414 (= e!67977 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52653)))))))

(declare-fun c!18083 () Bool)

(declare-fun d!28209 () Bool)

(assert (=> d!28209 (= c!18083 (and ((_ is Cons!1608) (toList!785 lt!52653)) (= (_1!1197 (h!2204 (toList!785 lt!52653))) (_1!1197 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (=> d!28209 (= (getValueByKey!153 (toList!785 lt!52653) (_1!1197 (tuple2!2373 lt!52431 lt!52433))) e!67977)))

(declare-fun b!104415 () Bool)

(assert (=> b!104415 (= e!67977 e!67978)))

(declare-fun c!18084 () Bool)

(assert (=> b!104415 (= c!18084 (and ((_ is Cons!1608) (toList!785 lt!52653)) (not (= (_1!1197 (h!2204 (toList!785 lt!52653))) (_1!1197 (tuple2!2373 lt!52431 lt!52433))))))))

(declare-fun b!104417 () Bool)

(assert (=> b!104417 (= e!67978 None!157)))

(assert (= (and d!28209 c!18083) b!104414))

(assert (= (and d!28209 (not c!18083)) b!104415))

(assert (= (and b!104415 c!18084) b!104416))

(assert (= (and b!104415 (not c!18084)) b!104417))

(declare-fun m!115613 () Bool)

(assert (=> b!104416 m!115613))

(assert (=> b!103405 d!28209))

(declare-fun b!104418 () Bool)

(declare-fun e!67980 () (_ BitVec 32))

(assert (=> b!104418 (= e!67980 #b00000000000000000000000000000000)))

(declare-fun bm!10966 () Bool)

(declare-fun call!10969 () (_ BitVec 32))

(assert (=> bm!10966 (= call!10969 (arrayCountValidKeys!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104419 () Bool)

(declare-fun e!67979 () (_ BitVec 32))

(assert (=> b!104419 (= e!67979 call!10969)))

(declare-fun d!28211 () Bool)

(declare-fun lt!53239 () (_ BitVec 32))

(assert (=> d!28211 (and (bvsge lt!53239 #b00000000000000000000000000000000) (bvsle lt!53239 (bvsub (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!28211 (= lt!53239 e!67980)))

(declare-fun c!18085 () Bool)

(assert (=> d!28211 (= c!18085 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!28211 (and (bvsle #b00000000000000000000000000000000 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(assert (=> d!28211 (= (arrayCountValidKeys!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) #b00000000000000000000000000000000 (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))) lt!53239)))

(declare-fun b!104420 () Bool)

(assert (=> b!104420 (= e!67980 e!67979)))

(declare-fun c!18086 () Bool)

(assert (=> b!104420 (= c!18086 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104421 () Bool)

(assert (=> b!104421 (= e!67979 (bvadd #b00000000000000000000000000000001 call!10969))))

(assert (= (and d!28211 c!18085) b!104418))

(assert (= (and d!28211 (not c!18085)) b!104420))

(assert (= (and b!104420 c!18086) b!104421))

(assert (= (and b!104420 (not c!18086)) b!104419))

(assert (= (or b!104421 b!104419) bm!10966))

(declare-fun m!115615 () Bool)

(assert (=> bm!10966 m!115615))

(assert (=> b!104420 m!115045))

(assert (=> b!104420 m!115045))

(assert (=> b!104420 m!115049))

(assert (=> b!103454 d!28211))

(declare-fun b!104422 () Bool)

(declare-fun e!67982 () Bool)

(declare-fun e!67983 () Bool)

(assert (=> b!104422 (= e!67982 e!67983)))

(declare-fun lt!53240 () (_ BitVec 64))

(assert (=> b!104422 (= lt!53240 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!53241 () Unit!3141)

(assert (=> b!104422 (= lt!53241 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4261 newMap!16) lt!53240 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!104422 (arrayContainsKey!0 (_keys!4261 newMap!16) lt!53240 #b00000000000000000000000000000000)))

(declare-fun lt!53242 () Unit!3141)

(assert (=> b!104422 (= lt!53242 lt!53241)))

(declare-fun res!52043 () Bool)

(assert (=> b!104422 (= res!52043 (= (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4261 newMap!16) (mask!6695 newMap!16)) (Found!261 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!104422 (=> (not res!52043) (not e!67983))))

(declare-fun bm!10967 () Bool)

(declare-fun call!10970 () Bool)

(assert (=> bm!10967 (= call!10970 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!104423 () Bool)

(declare-fun e!67981 () Bool)

(assert (=> b!104423 (= e!67981 e!67982)))

(declare-fun c!18087 () Bool)

(assert (=> b!104423 (= c!18087 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104424 () Bool)

(assert (=> b!104424 (= e!67983 call!10970)))

(declare-fun d!28213 () Bool)

(declare-fun res!52042 () Bool)

(assert (=> d!28213 (=> res!52042 e!67981)))

(assert (=> d!28213 (= res!52042 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28213 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4261 newMap!16) (mask!6695 newMap!16)) e!67981)))

(declare-fun b!104425 () Bool)

(assert (=> b!104425 (= e!67982 call!10970)))

(assert (= (and d!28213 (not res!52042)) b!104423))

(assert (= (and b!104423 c!18087) b!104422))

(assert (= (and b!104423 (not c!18087)) b!104425))

(assert (= (and b!104422 res!52043) b!104424))

(assert (= (or b!104424 b!104425) bm!10967))

(declare-fun m!115617 () Bool)

(assert (=> b!104422 m!115617))

(declare-fun m!115619 () Bool)

(assert (=> b!104422 m!115619))

(declare-fun m!115621 () Bool)

(assert (=> b!104422 m!115621))

(assert (=> b!104422 m!115617))

(declare-fun m!115623 () Bool)

(assert (=> b!104422 m!115623))

(declare-fun m!115625 () Bool)

(assert (=> bm!10967 m!115625))

(assert (=> b!104423 m!115617))

(assert (=> b!104423 m!115617))

(declare-fun m!115627 () Bool)

(assert (=> b!104423 m!115627))

(assert (=> bm!10895 d!28213))

(declare-fun d!28215 () Bool)

(assert (=> d!28215 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325)))))))

(declare-fun bs!4265 () Bool)

(assert (= bs!4265 d!28215))

(assert (=> bs!4265 m!113753))

(declare-fun m!115629 () Bool)

(assert (=> bs!4265 m!115629))

(assert (=> b!103822 d!28215))

(assert (=> b!103822 d!27745))

(declare-fun d!28217 () Bool)

(assert (=> d!28217 (= (isDefined!107 (getValueByKey!153 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) (not (isEmpty!373 (getValueByKey!153 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun bs!4266 () Bool)

(assert (= bs!4266 d!28217))

(assert (=> bs!4266 m!113943))

(declare-fun m!115631 () Bool)

(assert (=> bs!4266 m!115631))

(assert (=> b!103381 d!28217))

(declare-fun e!67985 () Option!159)

(declare-fun b!104428 () Bool)

(assert (=> b!104428 (= e!67985 (getValueByKey!153 (t!5665 (toList!785 call!10800)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!104426 () Bool)

(declare-fun e!67984 () Option!159)

(assert (=> b!104426 (= e!67984 (Some!158 (_2!1197 (h!2204 (toList!785 call!10800)))))))

(declare-fun c!18088 () Bool)

(declare-fun d!28219 () Bool)

(assert (=> d!28219 (= c!18088 (and ((_ is Cons!1608) (toList!785 call!10800)) (= (_1!1197 (h!2204 (toList!785 call!10800))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!28219 (= (getValueByKey!153 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!67984)))

(declare-fun b!104427 () Bool)

(assert (=> b!104427 (= e!67984 e!67985)))

(declare-fun c!18089 () Bool)

(assert (=> b!104427 (= c!18089 (and ((_ is Cons!1608) (toList!785 call!10800)) (not (= (_1!1197 (h!2204 (toList!785 call!10800))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun b!104429 () Bool)

(assert (=> b!104429 (= e!67985 None!157)))

(assert (= (and d!28219 c!18088) b!104426))

(assert (= (and d!28219 (not c!18088)) b!104427))

(assert (= (and b!104427 c!18089) b!104428))

(assert (= (and b!104427 (not c!18089)) b!104429))

(assert (=> b!104428 m!113535))

(declare-fun m!115633 () Bool)

(assert (=> b!104428 m!115633))

(assert (=> b!103381 d!28219))

(assert (=> b!103675 d!27877))

(assert (=> b!103470 d!28073))

(declare-fun d!28221 () Bool)

(declare-fun e!67986 () Bool)

(assert (=> d!28221 e!67986))

(declare-fun res!52045 () Bool)

(assert (=> d!28221 (=> (not res!52045) (not e!67986))))

(declare-fun lt!53246 () ListLongMap!1539)

(assert (=> d!28221 (= res!52045 (contains!816 lt!53246 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun lt!53244 () List!1612)

(assert (=> d!28221 (= lt!53246 (ListLongMap!1540 lt!53244))))

(declare-fun lt!53243 () Unit!3141)

(declare-fun lt!53245 () Unit!3141)

(assert (=> d!28221 (= lt!53243 lt!53245)))

(assert (=> d!28221 (= (getValueByKey!153 lt!53244 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28221 (= lt!53245 (lemmaContainsTupThenGetReturnValue!72 lt!53244 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28221 (= lt!53244 (insertStrictlySorted!75 (toList!785 call!10849) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28221 (= (+!134 call!10849 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) lt!53246)))

(declare-fun b!104430 () Bool)

(declare-fun res!52044 () Bool)

(assert (=> b!104430 (=> (not res!52044) (not e!67986))))

(assert (=> b!104430 (= res!52044 (= (getValueByKey!153 (toList!785 lt!53246) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun b!104431 () Bool)

(assert (=> b!104431 (= e!67986 (contains!819 (toList!785 lt!53246) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(assert (= (and d!28221 res!52045) b!104430))

(assert (= (and b!104430 res!52044) b!104431))

(declare-fun m!115635 () Bool)

(assert (=> d!28221 m!115635))

(declare-fun m!115637 () Bool)

(assert (=> d!28221 m!115637))

(declare-fun m!115639 () Bool)

(assert (=> d!28221 m!115639))

(declare-fun m!115641 () Bool)

(assert (=> d!28221 m!115641))

(declare-fun m!115643 () Bool)

(assert (=> b!104430 m!115643))

(declare-fun m!115645 () Bool)

(assert (=> b!104431 m!115645))

(assert (=> b!103393 d!28221))

(declare-fun d!28223 () Bool)

(assert (=> d!28223 (= ($colon$colon!79 e!67620 (ite c!17910 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325)))) (Cons!1608 (ite c!17910 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 lt!52325) (_2!1197 lt!52325))) e!67620))))

(assert (=> bm!10903 d!28223))

(declare-fun d!28225 () Bool)

(assert (=> d!28225 (isDefined!107 (getValueByKey!153 (toList!785 lt!52457) (_1!1197 lt!52331)))))

(declare-fun lt!53247 () Unit!3141)

(assert (=> d!28225 (= lt!53247 (choose!650 (toList!785 lt!52457) (_1!1197 lt!52331)))))

(declare-fun e!67987 () Bool)

(assert (=> d!28225 e!67987))

(declare-fun res!52046 () Bool)

(assert (=> d!28225 (=> (not res!52046) (not e!67987))))

(assert (=> d!28225 (= res!52046 (isStrictlySorted!303 (toList!785 lt!52457)))))

(assert (=> d!28225 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52457) (_1!1197 lt!52331)) lt!53247)))

(declare-fun b!104432 () Bool)

(assert (=> b!104432 (= e!67987 (containsKey!157 (toList!785 lt!52457) (_1!1197 lt!52331)))))

(assert (= (and d!28225 res!52046) b!104432))

(assert (=> d!28225 m!113777))

(assert (=> d!28225 m!113777))

(assert (=> d!28225 m!114279))

(declare-fun m!115647 () Bool)

(assert (=> d!28225 m!115647))

(declare-fun m!115649 () Bool)

(assert (=> d!28225 m!115649))

(assert (=> b!104432 m!114275))

(assert (=> b!103582 d!28225))

(assert (=> b!103582 d!28025))

(assert (=> b!103582 d!27723))

(declare-fun d!28227 () Bool)

(declare-fun res!52047 () Bool)

(declare-fun e!67988 () Bool)

(assert (=> d!28227 (=> res!52047 e!67988)))

(assert (=> d!28227 (= res!52047 (= (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28227 (= (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!67988)))

(declare-fun b!104433 () Bool)

(declare-fun e!67989 () Bool)

(assert (=> b!104433 (= e!67988 e!67989)))

(declare-fun res!52048 () Bool)

(assert (=> b!104433 (=> (not res!52048) (not e!67989))))

(assert (=> b!104433 (= res!52048 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104434 () Bool)

(assert (=> b!104434 (= e!67989 (arrayContainsKey!0 (_keys!4261 (v!2867 (underlying!352 thiss!992))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28227 (not res!52047)) b!104433))

(assert (= (and b!104433 res!52048) b!104434))

(assert (=> d!28227 m!115485))

(assert (=> b!104434 m!113535))

(declare-fun m!115651 () Bool)

(assert (=> b!104434 m!115651))

(assert (=> b!103608 d!28227))

(declare-fun d!28229 () Bool)

(declare-fun e!67991 () Bool)

(assert (=> d!28229 e!67991))

(declare-fun res!52049 () Bool)

(assert (=> d!28229 (=> res!52049 e!67991)))

(declare-fun lt!53250 () Bool)

(assert (=> d!28229 (= res!52049 (not lt!53250))))

(declare-fun lt!53249 () Bool)

(assert (=> d!28229 (= lt!53250 lt!53249)))

(declare-fun lt!53251 () Unit!3141)

(declare-fun e!67990 () Unit!3141)

(assert (=> d!28229 (= lt!53251 e!67990)))

(declare-fun c!18090 () Bool)

(assert (=> d!28229 (= c!18090 lt!53249)))

(assert (=> d!28229 (= lt!53249 (containsKey!157 (toList!785 lt!52962) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!28229 (= (contains!816 lt!52962 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53250)))

(declare-fun b!104435 () Bool)

(declare-fun lt!53248 () Unit!3141)

(assert (=> b!104435 (= e!67990 lt!53248)))

(assert (=> b!104435 (= lt!53248 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52962) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!104435 (isDefined!107 (getValueByKey!153 (toList!785 lt!52962) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104436 () Bool)

(declare-fun Unit!3192 () Unit!3141)

(assert (=> b!104436 (= e!67990 Unit!3192)))

(declare-fun b!104437 () Bool)

(assert (=> b!104437 (= e!67991 (isDefined!107 (getValueByKey!153 (toList!785 lt!52962) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28229 c!18090) b!104435))

(assert (= (and d!28229 (not c!18090)) b!104436))

(assert (= (and d!28229 (not res!52049)) b!104437))

(declare-fun m!115653 () Bool)

(assert (=> d!28229 m!115653))

(declare-fun m!115655 () Bool)

(assert (=> b!104435 m!115655))

(assert (=> b!104435 m!114691))

(assert (=> b!104435 m!114691))

(declare-fun m!115657 () Bool)

(assert (=> b!104435 m!115657))

(assert (=> b!104437 m!114691))

(assert (=> b!104437 m!114691))

(assert (=> b!104437 m!115657))

(assert (=> d!27873 d!28229))

(declare-fun e!67993 () Option!159)

(declare-fun b!104440 () Bool)

(assert (=> b!104440 (= e!67993 (getValueByKey!153 (t!5665 lt!52960) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104438 () Bool)

(declare-fun e!67992 () Option!159)

(assert (=> b!104438 (= e!67992 (Some!158 (_2!1197 (h!2204 lt!52960))))))

(declare-fun c!18091 () Bool)

(declare-fun d!28231 () Bool)

(assert (=> d!28231 (= c!18091 (and ((_ is Cons!1608) lt!52960) (= (_1!1197 (h!2204 lt!52960)) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28231 (= (getValueByKey!153 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!67992)))

(declare-fun b!104439 () Bool)

(assert (=> b!104439 (= e!67992 e!67993)))

(declare-fun c!18092 () Bool)

(assert (=> b!104439 (= c!18092 (and ((_ is Cons!1608) lt!52960) (not (= (_1!1197 (h!2204 lt!52960)) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104441 () Bool)

(assert (=> b!104441 (= e!67993 None!157)))

(assert (= (and d!28231 c!18091) b!104438))

(assert (= (and d!28231 (not c!18091)) b!104439))

(assert (= (and b!104439 c!18092) b!104440))

(assert (= (and b!104439 (not c!18092)) b!104441))

(declare-fun m!115659 () Bool)

(assert (=> b!104440 m!115659))

(assert (=> d!27873 d!28231))

(declare-fun d!28233 () Bool)

(assert (=> d!28233 (= (getValueByKey!153 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53252 () Unit!3141)

(assert (=> d!28233 (= lt!53252 (choose!649 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!67994 () Bool)

(assert (=> d!28233 e!67994))

(declare-fun res!52050 () Bool)

(assert (=> d!28233 (=> (not res!52050) (not e!67994))))

(assert (=> d!28233 (= res!52050 (isStrictlySorted!303 lt!52960))))

(assert (=> d!28233 (= (lemmaContainsTupThenGetReturnValue!72 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53252)))

(declare-fun b!104442 () Bool)

(declare-fun res!52051 () Bool)

(assert (=> b!104442 (=> (not res!52051) (not e!67994))))

(assert (=> b!104442 (= res!52051 (containsKey!157 lt!52960 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104443 () Bool)

(assert (=> b!104443 (= e!67994 (contains!819 lt!52960 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28233 res!52050) b!104442))

(assert (= (and b!104442 res!52051) b!104443))

(assert (=> d!28233 m!114685))

(declare-fun m!115661 () Bool)

(assert (=> d!28233 m!115661))

(declare-fun m!115663 () Bool)

(assert (=> d!28233 m!115663))

(declare-fun m!115665 () Bool)

(assert (=> b!104442 m!115665))

(declare-fun m!115667 () Bool)

(assert (=> b!104443 m!115667))

(assert (=> d!27873 d!28233))

(declare-fun b!104444 () Bool)

(declare-fun e!67996 () List!1612)

(declare-fun call!10973 () List!1612)

(assert (=> b!104444 (= e!67996 call!10973)))

(declare-fun b!104445 () Bool)

(declare-fun e!67997 () List!1612)

(assert (=> b!104445 (= e!67997 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52613)) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104446 () Bool)

(declare-fun res!52052 () Bool)

(declare-fun e!67999 () Bool)

(assert (=> b!104446 (=> (not res!52052) (not e!67999))))

(declare-fun lt!53253 () List!1612)

(assert (=> b!104446 (= res!52052 (containsKey!157 lt!53253 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!10968 () Bool)

(declare-fun call!10971 () List!1612)

(assert (=> bm!10968 (= call!10971 call!10973)))

(declare-fun b!104447 () Bool)

(declare-fun e!67995 () List!1612)

(assert (=> b!104447 (= e!67995 call!10971)))

(declare-fun c!18095 () Bool)

(declare-fun c!18093 () Bool)

(declare-fun b!104448 () Bool)

(assert (=> b!104448 (= e!67997 (ite c!18095 (t!5665 (toList!785 lt!52613)) (ite c!18093 (Cons!1608 (h!2204 (toList!785 lt!52613)) (t!5665 (toList!785 lt!52613))) Nil!1609)))))

(declare-fun d!28235 () Bool)

(assert (=> d!28235 e!67999))

(declare-fun res!52053 () Bool)

(assert (=> d!28235 (=> (not res!52053) (not e!67999))))

(assert (=> d!28235 (= res!52053 (isStrictlySorted!303 lt!53253))))

(declare-fun e!67998 () List!1612)

(assert (=> d!28235 (= lt!53253 e!67998)))

(declare-fun c!18096 () Bool)

(assert (=> d!28235 (= c!18096 (and ((_ is Cons!1608) (toList!785 lt!52613)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52613))) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28235 (isStrictlySorted!303 (toList!785 lt!52613))))

(assert (=> d!28235 (= (insertStrictlySorted!75 (toList!785 lt!52613) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53253)))

(declare-fun b!104449 () Bool)

(assert (=> b!104449 (= c!18093 (and ((_ is Cons!1608) (toList!785 lt!52613)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52613))) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104449 (= e!67996 e!67995)))

(declare-fun call!10972 () List!1612)

(declare-fun bm!10969 () Bool)

(assert (=> bm!10969 (= call!10972 ($colon$colon!79 e!67997 (ite c!18096 (h!2204 (toList!785 lt!52613)) (tuple2!2373 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!18094 () Bool)

(assert (=> bm!10969 (= c!18094 c!18096)))

(declare-fun b!104450 () Bool)

(assert (=> b!104450 (= e!67999 (contains!819 lt!53253 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104451 () Bool)

(assert (=> b!104451 (= e!67998 call!10972)))

(declare-fun bm!10970 () Bool)

(assert (=> bm!10970 (= call!10973 call!10972)))

(declare-fun b!104452 () Bool)

(assert (=> b!104452 (= e!67995 call!10971)))

(declare-fun b!104453 () Bool)

(assert (=> b!104453 (= e!67998 e!67996)))

(assert (=> b!104453 (= c!18095 (and ((_ is Cons!1608) (toList!785 lt!52613)) (= (_1!1197 (h!2204 (toList!785 lt!52613))) (_1!1197 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28235 c!18096) b!104451))

(assert (= (and d!28235 (not c!18096)) b!104453))

(assert (= (and b!104453 c!18095) b!104444))

(assert (= (and b!104453 (not c!18095)) b!104449))

(assert (= (and b!104449 c!18093) b!104452))

(assert (= (and b!104449 (not c!18093)) b!104447))

(assert (= (or b!104452 b!104447) bm!10968))

(assert (= (or b!104444 bm!10968) bm!10970))

(assert (= (or b!104451 bm!10970) bm!10969))

(assert (= (and bm!10969 c!18094) b!104445))

(assert (= (and bm!10969 (not c!18094)) b!104448))

(assert (= (and d!28235 res!52053) b!104446))

(assert (= (and b!104446 res!52052) b!104450))

(declare-fun m!115669 () Bool)

(assert (=> b!104450 m!115669))

(declare-fun m!115671 () Bool)

(assert (=> d!28235 m!115671))

(declare-fun m!115673 () Bool)

(assert (=> d!28235 m!115673))

(declare-fun m!115675 () Bool)

(assert (=> b!104446 m!115675))

(declare-fun m!115677 () Bool)

(assert (=> b!104445 m!115677))

(declare-fun m!115679 () Bool)

(assert (=> bm!10969 m!115679))

(assert (=> d!27873 d!28235))

(declare-fun d!28237 () Bool)

(declare-fun e!68000 () Bool)

(assert (=> d!28237 e!68000))

(declare-fun res!52055 () Bool)

(assert (=> d!28237 (=> (not res!52055) (not e!68000))))

(declare-fun lt!53257 () ListLongMap!1539)

(assert (=> d!28237 (= res!52055 (contains!816 lt!53257 (_1!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(declare-fun lt!53255 () List!1612)

(assert (=> d!28237 (= lt!53257 (ListLongMap!1540 lt!53255))))

(declare-fun lt!53254 () Unit!3141)

(declare-fun lt!53256 () Unit!3141)

(assert (=> d!28237 (= lt!53254 lt!53256)))

(assert (=> d!28237 (= (getValueByKey!153 lt!53255 (_1!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))) (Some!158 (_2!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(assert (=> d!28237 (= lt!53256 (lemmaContainsTupThenGetReturnValue!72 lt!53255 (_1!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (_2!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(assert (=> d!28237 (= lt!53255 (insertStrictlySorted!75 (toList!785 (ite c!17885 call!10892 (ite c!17886 call!10890 call!10894))) (_1!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (_2!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(assert (=> d!28237 (= (+!134 (ite c!17885 call!10892 (ite c!17886 call!10890 call!10894)) (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) lt!53257)))

(declare-fun b!104454 () Bool)

(declare-fun res!52054 () Bool)

(assert (=> b!104454 (=> (not res!52054) (not e!68000))))

(assert (=> b!104454 (= res!52054 (= (getValueByKey!153 (toList!785 lt!53257) (_1!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))) (Some!158 (_2!1197 (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))))

(declare-fun b!104455 () Bool)

(assert (=> b!104455 (= e!68000 (contains!819 (toList!785 lt!53257) (ite (or c!17885 c!17886) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (= (and d!28237 res!52055) b!104454))

(assert (= (and b!104454 res!52054) b!104455))

(declare-fun m!115681 () Bool)

(assert (=> d!28237 m!115681))

(declare-fun m!115683 () Bool)

(assert (=> d!28237 m!115683))

(declare-fun m!115685 () Bool)

(assert (=> d!28237 m!115685))

(declare-fun m!115687 () Bool)

(assert (=> d!28237 m!115687))

(declare-fun m!115689 () Bool)

(assert (=> b!104454 m!115689))

(declare-fun m!115691 () Bool)

(assert (=> b!104455 m!115691))

(assert (=> bm!10887 d!28237))

(assert (=> d!27877 d!27763))

(declare-fun d!28239 () Bool)

(declare-fun e!68003 () Bool)

(assert (=> d!28239 e!68003))

(declare-fun res!52060 () Bool)

(assert (=> d!28239 (=> (not res!52060) (not e!68003))))

(declare-fun lt!53260 () SeekEntryResult!261)

(assert (=> d!28239 (= res!52060 ((_ is Found!261) lt!53260))))

(assert (=> d!28239 (= lt!53260 (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(assert (=> d!28239 true))

(declare-fun _$33!87 () Unit!3141)

(assert (=> d!28239 (= (choose!656 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) _$33!87)))

(declare-fun b!104460 () Bool)

(declare-fun res!52061 () Bool)

(assert (=> b!104460 (=> (not res!52061) (not e!68003))))

(assert (=> b!104460 (= res!52061 (inRange!0 (index!3192 lt!53260) (mask!6695 newMap!16)))))

(declare-fun b!104461 () Bool)

(assert (=> b!104461 (= e!68003 (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!53260)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!28239 res!52060) b!104460))

(assert (= (and b!104460 res!52061) b!104461))

(assert (=> d!28239 m!113535))

(assert (=> d!28239 m!113823))

(declare-fun m!115693 () Bool)

(assert (=> b!104460 m!115693))

(declare-fun m!115695 () Bool)

(assert (=> b!104461 m!115695))

(assert (=> d!27877 d!28239))

(assert (=> d!27877 d!27973))

(declare-fun d!28241 () Bool)

(assert (=> d!28241 (= (get!1328 (getValueByKey!153 (toList!785 lt!52620) lt!52617)) (v!2873 (getValueByKey!153 (toList!785 lt!52620) lt!52617)))))

(assert (=> d!27859 d!28241))

(declare-fun b!104464 () Bool)

(declare-fun e!68005 () Option!159)

(assert (=> b!104464 (= e!68005 (getValueByKey!153 (t!5665 (toList!785 lt!52620)) lt!52617))))

(declare-fun b!104462 () Bool)

(declare-fun e!68004 () Option!159)

(assert (=> b!104462 (= e!68004 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52620)))))))

(declare-fun d!28243 () Bool)

(declare-fun c!18097 () Bool)

(assert (=> d!28243 (= c!18097 (and ((_ is Cons!1608) (toList!785 lt!52620)) (= (_1!1197 (h!2204 (toList!785 lt!52620))) lt!52617)))))

(assert (=> d!28243 (= (getValueByKey!153 (toList!785 lt!52620) lt!52617) e!68004)))

(declare-fun b!104463 () Bool)

(assert (=> b!104463 (= e!68004 e!68005)))

(declare-fun c!18098 () Bool)

(assert (=> b!104463 (= c!18098 (and ((_ is Cons!1608) (toList!785 lt!52620)) (not (= (_1!1197 (h!2204 (toList!785 lt!52620))) lt!52617))))))

(declare-fun b!104465 () Bool)

(assert (=> b!104465 (= e!68005 None!157)))

(assert (= (and d!28243 c!18097) b!104462))

(assert (= (and d!28243 (not c!18097)) b!104463))

(assert (= (and b!104463 c!18098) b!104464))

(assert (= (and b!104463 (not c!18098)) b!104465))

(declare-fun m!115697 () Bool)

(assert (=> b!104464 m!115697))

(assert (=> d!27859 d!28243))

(assert (=> b!103427 d!28073))

(declare-fun d!28245 () Bool)

(declare-fun res!52062 () Bool)

(declare-fun e!68006 () Bool)

(assert (=> d!28245 (=> res!52062 e!68006)))

(assert (=> d!28245 (= res!52062 (and ((_ is Cons!1608) lt!52451) (= (_1!1197 (h!2204 lt!52451)) (_1!1197 lt!52325))))))

(assert (=> d!28245 (= (containsKey!157 lt!52451 (_1!1197 lt!52325)) e!68006)))

(declare-fun b!104466 () Bool)

(declare-fun e!68007 () Bool)

(assert (=> b!104466 (= e!68006 e!68007)))

(declare-fun res!52063 () Bool)

(assert (=> b!104466 (=> (not res!52063) (not e!68007))))

(assert (=> b!104466 (= res!52063 (and (or (not ((_ is Cons!1608) lt!52451)) (bvsle (_1!1197 (h!2204 lt!52451)) (_1!1197 lt!52325))) ((_ is Cons!1608) lt!52451) (bvslt (_1!1197 (h!2204 lt!52451)) (_1!1197 lt!52325))))))

(declare-fun b!104467 () Bool)

(assert (=> b!104467 (= e!68007 (containsKey!157 (t!5665 lt!52451) (_1!1197 lt!52325)))))

(assert (= (and d!28245 (not res!52062)) b!104466))

(assert (= (and b!104466 res!52063) b!104467))

(declare-fun m!115699 () Bool)

(assert (=> b!104467 m!115699))

(assert (=> b!103616 d!28245))

(assert (=> d!27735 d!27651))

(declare-fun d!28247 () Bool)

(declare-fun res!52064 () Bool)

(declare-fun e!68008 () Bool)

(assert (=> d!28247 (=> res!52064 e!68008)))

(assert (=> d!28247 (= res!52064 (and ((_ is Cons!1608) (toList!785 lt!52464)) (= (_1!1197 (h!2204 (toList!785 lt!52464))) (_1!1197 lt!52331))))))

(assert (=> d!28247 (= (containsKey!157 (toList!785 lt!52464) (_1!1197 lt!52331)) e!68008)))

(declare-fun b!104468 () Bool)

(declare-fun e!68009 () Bool)

(assert (=> b!104468 (= e!68008 e!68009)))

(declare-fun res!52065 () Bool)

(assert (=> b!104468 (=> (not res!52065) (not e!68009))))

(assert (=> b!104468 (= res!52065 (and (or (not ((_ is Cons!1608) (toList!785 lt!52464))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52464))) (_1!1197 lt!52331))) ((_ is Cons!1608) (toList!785 lt!52464)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52464))) (_1!1197 lt!52331))))))

(declare-fun b!104469 () Bool)

(assert (=> b!104469 (= e!68009 (containsKey!157 (t!5665 (toList!785 lt!52464)) (_1!1197 lt!52331)))))

(assert (= (and d!28247 (not res!52064)) b!104468))

(assert (= (and b!104468 res!52065) b!104469))

(declare-fun m!115701 () Bool)

(assert (=> b!104469 m!115701))

(assert (=> d!27749 d!28247))

(declare-fun d!28249 () Bool)

(assert (=> d!28249 (= (isDefined!107 (getValueByKey!153 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))) (not (isEmpty!373 (getValueByKey!153 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))))

(declare-fun bs!4267 () Bool)

(assert (= bs!4267 d!28249))

(assert (=> bs!4267 m!114053))

(declare-fun m!115703 () Bool)

(assert (=> bs!4267 m!115703))

(assert (=> b!103418 d!28249))

(declare-fun b!104472 () Bool)

(declare-fun e!68011 () Option!159)

(assert (=> b!104472 (= e!68011 (getValueByKey!153 (t!5665 (toList!785 call!10801)) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(declare-fun b!104470 () Bool)

(declare-fun e!68010 () Option!159)

(assert (=> b!104470 (= e!68010 (Some!158 (_2!1197 (h!2204 (toList!785 call!10801)))))))

(declare-fun d!28251 () Bool)

(declare-fun c!18099 () Bool)

(assert (=> d!28251 (= c!18099 (and ((_ is Cons!1608) (toList!785 call!10801)) (= (_1!1197 (h!2204 (toList!785 call!10801))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))))

(assert (=> d!28251 (= (getValueByKey!153 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))) e!68010)))

(declare-fun b!104471 () Bool)

(assert (=> b!104471 (= e!68010 e!68011)))

(declare-fun c!18100 () Bool)

(assert (=> b!104471 (= c!18100 (and ((_ is Cons!1608) (toList!785 call!10801)) (not (= (_1!1197 (h!2204 (toList!785 call!10801))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))))

(declare-fun b!104473 () Bool)

(assert (=> b!104473 (= e!68011 None!157)))

(assert (= (and d!28251 c!18099) b!104470))

(assert (= (and d!28251 (not c!18099)) b!104471))

(assert (= (and b!104471 c!18100) b!104472))

(assert (= (and b!104471 (not c!18100)) b!104473))

(assert (=> b!104472 m!113833))

(declare-fun m!115705 () Bool)

(assert (=> b!104472 m!115705))

(assert (=> b!103418 d!28251))

(declare-fun d!28253 () Bool)

(assert (=> d!28253 (= (apply!97 lt!52696 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52696) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4268 () Bool)

(assert (= bs!4268 d!28253))

(declare-fun m!115707 () Bool)

(assert (=> bs!4268 m!115707))

(assert (=> bs!4268 m!115707))

(declare-fun m!115709 () Bool)

(assert (=> bs!4268 m!115709))

(assert (=> b!103480 d!28253))

(declare-fun d!28255 () Bool)

(assert (=> d!28255 (= (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52604)) (v!2873 (getValueByKey!153 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52604)))))

(assert (=> d!27865 d!28255))

(declare-fun e!68013 () Option!159)

(declare-fun b!104476 () Bool)

(assert (=> b!104476 (= e!68013 (getValueByKey!153 (t!5665 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!52604))))

(declare-fun b!104474 () Bool)

(declare-fun e!68012 () Option!159)

(assert (=> b!104474 (= e!68012 (Some!158 (_2!1197 (h!2204 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun d!28257 () Bool)

(declare-fun c!18101 () Bool)

(assert (=> d!28257 (= c!18101 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52604)))))

(assert (=> d!28257 (= (getValueByKey!153 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!52604) e!68012)))

(declare-fun b!104475 () Bool)

(assert (=> b!104475 (= e!68012 e!68013)))

(declare-fun c!18102 () Bool)

(assert (=> b!104475 (= c!18102 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (not (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))) lt!52604))))))

(declare-fun b!104477 () Bool)

(assert (=> b!104477 (= e!68013 None!157)))

(assert (= (and d!28257 c!18101) b!104474))

(assert (= (and d!28257 (not c!18101)) b!104475))

(assert (= (and b!104475 c!18102) b!104476))

(assert (= (and b!104475 (not c!18102)) b!104477))

(declare-fun m!115711 () Bool)

(assert (=> b!104476 m!115711))

(assert (=> d!27865 d!28257))

(declare-fun b!104480 () Bool)

(declare-fun e!68015 () Option!159)

(assert (=> b!104480 (= e!68015 (getValueByKey!153 (t!5665 (t!5665 (toList!785 lt!52464))) (_1!1197 lt!52331)))))

(declare-fun b!104478 () Bool)

(declare-fun e!68014 () Option!159)

(assert (=> b!104478 (= e!68014 (Some!158 (_2!1197 (h!2204 (t!5665 (toList!785 lt!52464))))))))

(declare-fun d!28259 () Bool)

(declare-fun c!18103 () Bool)

(assert (=> d!28259 (= c!18103 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52464))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52464)))) (_1!1197 lt!52331))))))

(assert (=> d!28259 (= (getValueByKey!153 (t!5665 (toList!785 lt!52464)) (_1!1197 lt!52331)) e!68014)))

(declare-fun b!104479 () Bool)

(assert (=> b!104479 (= e!68014 e!68015)))

(declare-fun c!18104 () Bool)

(assert (=> b!104479 (= c!18104 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52464))) (not (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52464)))) (_1!1197 lt!52331)))))))

(declare-fun b!104481 () Bool)

(assert (=> b!104481 (= e!68015 None!157)))

(assert (= (and d!28259 c!18103) b!104478))

(assert (= (and d!28259 (not c!18103)) b!104479))

(assert (= (and b!104479 c!18104) b!104480))

(assert (= (and b!104479 (not c!18104)) b!104481))

(declare-fun m!115713 () Bool)

(assert (=> b!104480 m!115713))

(assert (=> b!103440 d!28259))

(assert (=> b!103425 d!28073))

(assert (=> b!103701 d!28073))

(declare-fun d!28261 () Bool)

(declare-fun res!52066 () Bool)

(declare-fun e!68016 () Bool)

(assert (=> d!28261 (=> res!52066 e!68016)))

(assert (=> d!28261 (= res!52066 (and ((_ is Cons!1608) (toList!785 lt!52435)) (= (_1!1197 (h!2204 (toList!785 lt!52435))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28261 (= (containsKey!157 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000) e!68016)))

(declare-fun b!104482 () Bool)

(declare-fun e!68017 () Bool)

(assert (=> b!104482 (= e!68016 e!68017)))

(declare-fun res!52067 () Bool)

(assert (=> b!104482 (=> (not res!52067) (not e!68017))))

(assert (=> b!104482 (= res!52067 (and (or (not ((_ is Cons!1608) (toList!785 lt!52435))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52435))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1608) (toList!785 lt!52435)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52435))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104483 () Bool)

(assert (=> b!104483 (= e!68017 (containsKey!157 (t!5665 (toList!785 lt!52435)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28261 (not res!52066)) b!104482))

(assert (= (and b!104482 res!52067) b!104483))

(declare-fun m!115715 () Bool)

(assert (=> b!104483 m!115715))

(assert (=> d!27727 d!28261))

(assert (=> bm!10885 d!28171))

(assert (=> b!103452 d!28073))

(declare-fun d!28263 () Bool)

(declare-fun e!68018 () Bool)

(assert (=> d!28263 e!68018))

(declare-fun res!52069 () Bool)

(assert (=> d!28263 (=> (not res!52069) (not e!68018))))

(declare-fun lt!53264 () ListLongMap!1539)

(assert (=> d!28263 (= res!52069 (contains!816 lt!53264 (_1!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))))))

(declare-fun lt!53262 () List!1612)

(assert (=> d!28263 (= lt!53264 (ListLongMap!1540 lt!53262))))

(declare-fun lt!53261 () Unit!3141)

(declare-fun lt!53263 () Unit!3141)

(assert (=> d!28263 (= lt!53261 lt!53263)))

(assert (=> d!28263 (= (getValueByKey!153 lt!53262 (_1!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))))))

(assert (=> d!28263 (= lt!53263 (lemmaContainsTupThenGetReturnValue!72 lt!53262 (_1!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))))))

(assert (=> d!28263 (= lt!53262 (insertStrictlySorted!75 (toList!785 lt!52639) (_1!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))))))

(assert (=> d!28263 (= (+!134 lt!52639 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))) lt!53264)))

(declare-fun b!104484 () Bool)

(declare-fun res!52068 () Bool)

(assert (=> b!104484 (=> (not res!52068) (not e!68018))))

(assert (=> b!104484 (= res!52068 (= (getValueByKey!153 (toList!785 lt!53264) (_1!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))))))))

(declare-fun b!104485 () Bool)

(assert (=> b!104485 (= e!68018 (contains!819 (toList!785 lt!53264) (tuple2!2373 lt!52644 (minValue!2437 newMap!16))))))

(assert (= (and d!28263 res!52069) b!104484))

(assert (= (and b!104484 res!52068) b!104485))

(declare-fun m!115717 () Bool)

(assert (=> d!28263 m!115717))

(declare-fun m!115719 () Bool)

(assert (=> d!28263 m!115719))

(declare-fun m!115721 () Bool)

(assert (=> d!28263 m!115721))

(declare-fun m!115723 () Bool)

(assert (=> d!28263 m!115723))

(declare-fun m!115725 () Bool)

(assert (=> b!104484 m!115725))

(declare-fun m!115727 () Bool)

(assert (=> b!104485 m!115727))

(assert (=> b!103387 d!28263))

(declare-fun d!28265 () Bool)

(declare-fun e!68020 () Bool)

(assert (=> d!28265 e!68020))

(declare-fun res!52070 () Bool)

(assert (=> d!28265 (=> res!52070 e!68020)))

(declare-fun lt!53267 () Bool)

(assert (=> d!28265 (= res!52070 (not lt!53267))))

(declare-fun lt!53266 () Bool)

(assert (=> d!28265 (= lt!53267 lt!53266)))

(declare-fun lt!53268 () Unit!3141)

(declare-fun e!68019 () Unit!3141)

(assert (=> d!28265 (= lt!53268 e!68019)))

(declare-fun c!18105 () Bool)

(assert (=> d!28265 (= c!18105 lt!53266)))

(assert (=> d!28265 (= lt!53266 (containsKey!157 (toList!785 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))) lt!52647))))

(assert (=> d!28265 (= (contains!816 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))) lt!52647) lt!53267)))

(declare-fun b!104486 () Bool)

(declare-fun lt!53265 () Unit!3141)

(assert (=> b!104486 (= e!68019 lt!53265)))

(assert (=> b!104486 (= lt!53265 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))) lt!52647))))

(assert (=> b!104486 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))) lt!52647))))

(declare-fun b!104487 () Bool)

(declare-fun Unit!3193 () Unit!3141)

(assert (=> b!104487 (= e!68019 Unit!3193)))

(declare-fun b!104488 () Bool)

(assert (=> b!104488 (= e!68020 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))) lt!52647)))))

(assert (= (and d!28265 c!18105) b!104486))

(assert (= (and d!28265 (not c!18105)) b!104487))

(assert (= (and d!28265 (not res!52070)) b!104488))

(declare-fun m!115729 () Bool)

(assert (=> d!28265 m!115729))

(declare-fun m!115731 () Bool)

(assert (=> b!104486 m!115731))

(declare-fun m!115733 () Bool)

(assert (=> b!104486 m!115733))

(assert (=> b!104486 m!115733))

(declare-fun m!115735 () Bool)

(assert (=> b!104486 m!115735))

(assert (=> b!104488 m!115733))

(assert (=> b!104488 m!115733))

(assert (=> b!104488 m!115735))

(assert (=> b!103387 d!28265))

(declare-fun d!28267 () Bool)

(declare-fun e!68021 () Bool)

(assert (=> d!28267 e!68021))

(declare-fun res!52072 () Bool)

(assert (=> d!28267 (=> (not res!52072) (not e!68021))))

(declare-fun lt!53272 () ListLongMap!1539)

(assert (=> d!28267 (= res!52072 (contains!816 lt!53272 (_1!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53270 () List!1612)

(assert (=> d!28267 (= lt!53272 (ListLongMap!1540 lt!53270))))

(declare-fun lt!53269 () Unit!3141)

(declare-fun lt!53271 () Unit!3141)

(assert (=> d!28267 (= lt!53269 lt!53271)))

(assert (=> d!28267 (= (getValueByKey!153 lt!53270 (_1!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28267 (= lt!53271 (lemmaContainsTupThenGetReturnValue!72 lt!53270 (_1!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28267 (= lt!53270 (insertStrictlySorted!75 (toList!785 lt!52629) (_1!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28267 (= (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))) lt!53272)))

(declare-fun b!104489 () Bool)

(declare-fun res!52071 () Bool)

(assert (=> b!104489 (=> (not res!52071) (not e!68021))))

(assert (=> b!104489 (= res!52071 (= (getValueByKey!153 (toList!785 lt!53272) (_1!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104490 () Bool)

(assert (=> b!104490 (= e!68021 (contains!819 (toList!785 lt!53272) (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28267 res!52072) b!104489))

(assert (= (and b!104489 res!52071) b!104490))

(declare-fun m!115737 () Bool)

(assert (=> d!28267 m!115737))

(declare-fun m!115739 () Bool)

(assert (=> d!28267 m!115739))

(declare-fun m!115741 () Bool)

(assert (=> d!28267 m!115741))

(declare-fun m!115743 () Bool)

(assert (=> d!28267 m!115743))

(declare-fun m!115745 () Bool)

(assert (=> b!104489 m!115745))

(declare-fun m!115747 () Bool)

(assert (=> b!104490 m!115747))

(assert (=> b!103387 d!28267))

(declare-fun d!28269 () Bool)

(assert (=> d!28269 (= (apply!97 lt!52640 lt!52630) (get!1328 (getValueByKey!153 (toList!785 lt!52640) lt!52630)))))

(declare-fun bs!4269 () Bool)

(assert (= bs!4269 d!28269))

(declare-fun m!115749 () Bool)

(assert (=> bs!4269 m!115749))

(assert (=> bs!4269 m!115749))

(declare-fun m!115751 () Bool)

(assert (=> bs!4269 m!115751))

(assert (=> b!103387 d!28269))

(declare-fun d!28271 () Bool)

(assert (=> d!28271 (= (apply!97 (+!134 lt!52646 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))) lt!52643) (apply!97 lt!52646 lt!52643))))

(declare-fun lt!53273 () Unit!3141)

(assert (=> d!28271 (= lt!53273 (choose!655 lt!52646 lt!52641 (zeroValue!2437 newMap!16) lt!52643))))

(declare-fun e!68022 () Bool)

(assert (=> d!28271 e!68022))

(declare-fun res!52073 () Bool)

(assert (=> d!28271 (=> (not res!52073) (not e!68022))))

(assert (=> d!28271 (= res!52073 (contains!816 lt!52646 lt!52643))))

(assert (=> d!28271 (= (addApplyDifferent!73 lt!52646 lt!52641 (zeroValue!2437 newMap!16) lt!52643) lt!53273)))

(declare-fun b!104491 () Bool)

(assert (=> b!104491 (= e!68022 (not (= lt!52643 lt!52641)))))

(assert (= (and d!28271 res!52073) b!104491))

(assert (=> d!28271 m!113953))

(declare-fun m!115753 () Bool)

(assert (=> d!28271 m!115753))

(assert (=> d!28271 m!113953))

(assert (=> d!28271 m!113955))

(assert (=> d!28271 m!113981))

(declare-fun m!115755 () Bool)

(assert (=> d!28271 m!115755))

(assert (=> b!103387 d!28271))

(declare-fun d!28273 () Bool)

(assert (=> d!28273 (= (apply!97 (+!134 lt!52640 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))) lt!52630) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52640 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))) lt!52630)))))

(declare-fun bs!4270 () Bool)

(assert (= bs!4270 d!28273))

(declare-fun m!115757 () Bool)

(assert (=> bs!4270 m!115757))

(assert (=> bs!4270 m!115757))

(declare-fun m!115759 () Bool)

(assert (=> bs!4270 m!115759))

(assert (=> b!103387 d!28273))

(declare-fun d!28275 () Bool)

(assert (=> d!28275 (= (apply!97 (+!134 lt!52646 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))) lt!52643) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52646 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))) lt!52643)))))

(declare-fun bs!4271 () Bool)

(assert (= bs!4271 d!28275))

(declare-fun m!115761 () Bool)

(assert (=> bs!4271 m!115761))

(assert (=> bs!4271 m!115761))

(declare-fun m!115763 () Bool)

(assert (=> bs!4271 m!115763))

(assert (=> b!103387 d!28275))

(declare-fun d!28277 () Bool)

(assert (=> d!28277 (= (apply!97 lt!52646 lt!52643) (get!1328 (getValueByKey!153 (toList!785 lt!52646) lt!52643)))))

(declare-fun bs!4272 () Bool)

(assert (= bs!4272 d!28277))

(declare-fun m!115765 () Bool)

(assert (=> bs!4272 m!115765))

(assert (=> bs!4272 m!115765))

(declare-fun m!115767 () Bool)

(assert (=> bs!4272 m!115767))

(assert (=> b!103387 d!28277))

(declare-fun d!28279 () Bool)

(declare-fun e!68023 () Bool)

(assert (=> d!28279 e!68023))

(declare-fun res!52075 () Bool)

(assert (=> d!28279 (=> (not res!52075) (not e!68023))))

(declare-fun lt!53277 () ListLongMap!1539)

(assert (=> d!28279 (= res!52075 (contains!816 lt!53277 (_1!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53275 () List!1612)

(assert (=> d!28279 (= lt!53277 (ListLongMap!1540 lt!53275))))

(declare-fun lt!53274 () Unit!3141)

(declare-fun lt!53276 () Unit!3141)

(assert (=> d!28279 (= lt!53274 lt!53276)))

(assert (=> d!28279 (= (getValueByKey!153 lt!53275 (_1!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28279 (= lt!53276 (lemmaContainsTupThenGetReturnValue!72 lt!53275 (_1!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28279 (= lt!53275 (insertStrictlySorted!75 (toList!785 lt!52646) (_1!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28279 (= (+!134 lt!52646 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))) lt!53277)))

(declare-fun b!104492 () Bool)

(declare-fun res!52074 () Bool)

(assert (=> b!104492 (=> (not res!52074) (not e!68023))))

(assert (=> b!104492 (= res!52074 (= (getValueByKey!153 (toList!785 lt!53277) (_1!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104493 () Bool)

(assert (=> b!104493 (= e!68023 (contains!819 (toList!785 lt!53277) (tuple2!2373 lt!52641 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28279 res!52075) b!104492))

(assert (= (and b!104492 res!52074) b!104493))

(declare-fun m!115769 () Bool)

(assert (=> d!28279 m!115769))

(declare-fun m!115771 () Bool)

(assert (=> d!28279 m!115771))

(declare-fun m!115773 () Bool)

(assert (=> d!28279 m!115773))

(declare-fun m!115775 () Bool)

(assert (=> d!28279 m!115775))

(declare-fun m!115777 () Bool)

(assert (=> b!104492 m!115777))

(declare-fun m!115779 () Bool)

(assert (=> b!104493 m!115779))

(assert (=> b!103387 d!28279))

(declare-fun b!104494 () Bool)

(declare-fun e!68025 () Bool)

(declare-fun lt!53282 () ListLongMap!1539)

(assert (=> b!104494 (= e!68025 (isEmpty!371 lt!53282))))

(declare-fun d!28281 () Bool)

(declare-fun e!68030 () Bool)

(assert (=> d!28281 e!68030))

(declare-fun res!52076 () Bool)

(assert (=> d!28281 (=> (not res!52076) (not e!68030))))

(assert (=> d!28281 (= res!52076 (not (contains!816 lt!53282 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68026 () ListLongMap!1539)

(assert (=> d!28281 (= lt!53282 e!68026)))

(declare-fun c!18109 () Bool)

(assert (=> d!28281 (= c!18109 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28281 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28281 (= (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53282)))

(declare-fun b!104495 () Bool)

(declare-fun e!68028 () Bool)

(assert (=> b!104495 (= e!68028 e!68025)))

(declare-fun c!18107 () Bool)

(assert (=> b!104495 (= c!18107 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104496 () Bool)

(assert (=> b!104496 (= e!68026 (ListLongMap!1540 Nil!1609))))

(declare-fun b!104497 () Bool)

(assert (=> b!104497 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> b!104497 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (_values!2543 newMap!16))))))

(declare-fun e!68024 () Bool)

(assert (=> b!104497 (= e!68024 (= (apply!97 lt!53282 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104498 () Bool)

(declare-fun e!68027 () Bool)

(assert (=> b!104498 (= e!68027 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104498 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104499 () Bool)

(assert (=> b!104499 (= e!68030 e!68028)))

(declare-fun c!18108 () Bool)

(assert (=> b!104499 (= c!18108 e!68027)))

(declare-fun res!52079 () Bool)

(assert (=> b!104499 (=> (not res!52079) (not e!68027))))

(assert (=> b!104499 (= res!52079 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104500 () Bool)

(declare-fun lt!53279 () Unit!3141)

(declare-fun lt!53281 () Unit!3141)

(assert (=> b!104500 (= lt!53279 lt!53281)))

(declare-fun lt!53280 () V!3209)

(declare-fun lt!53284 () (_ BitVec 64))

(declare-fun lt!53278 () (_ BitVec 64))

(declare-fun lt!53283 () ListLongMap!1539)

(assert (=> b!104500 (not (contains!816 (+!134 lt!53283 (tuple2!2373 lt!53278 lt!53280)) lt!53284))))

(assert (=> b!104500 (= lt!53281 (addStillNotContains!46 lt!53283 lt!53278 lt!53280 lt!53284))))

(assert (=> b!104500 (= lt!53284 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104500 (= lt!53280 (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104500 (= lt!53278 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10974 () ListLongMap!1539)

(assert (=> b!104500 (= lt!53283 call!10974)))

(declare-fun e!68029 () ListLongMap!1539)

(assert (=> b!104500 (= e!68029 (+!134 call!10974 (tuple2!2373 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104501 () Bool)

(assert (=> b!104501 (= e!68029 call!10974)))

(declare-fun b!104502 () Bool)

(assert (=> b!104502 (= e!68028 e!68024)))

(assert (=> b!104502 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun res!52078 () Bool)

(assert (=> b!104502 (= res!52078 (contains!816 lt!53282 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104502 (=> (not res!52078) (not e!68024))))

(declare-fun bm!10971 () Bool)

(assert (=> bm!10971 (= call!10974 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16)))))

(declare-fun b!104503 () Bool)

(assert (=> b!104503 (= e!68025 (= lt!53282 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16))))))

(declare-fun b!104504 () Bool)

(assert (=> b!104504 (= e!68026 e!68029)))

(declare-fun c!18106 () Bool)

(assert (=> b!104504 (= c!18106 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104505 () Bool)

(declare-fun res!52077 () Bool)

(assert (=> b!104505 (=> (not res!52077) (not e!68030))))

(assert (=> b!104505 (= res!52077 (not (contains!816 lt!53282 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28281 c!18109) b!104496))

(assert (= (and d!28281 (not c!18109)) b!104504))

(assert (= (and b!104504 c!18106) b!104500))

(assert (= (and b!104504 (not c!18106)) b!104501))

(assert (= (or b!104500 b!104501) bm!10971))

(assert (= (and d!28281 res!52076) b!104505))

(assert (= (and b!104505 res!52077) b!104499))

(assert (= (and b!104499 res!52079) b!104498))

(assert (= (and b!104499 c!18108) b!104502))

(assert (= (and b!104499 (not c!18108)) b!104495))

(assert (= (and b!104502 res!52078) b!104497))

(assert (= (and b!104495 c!18107) b!104503))

(assert (= (and b!104495 (not c!18107)) b!104494))

(declare-fun b_lambda!4651 () Bool)

(assert (=> (not b_lambda!4651) (not b!104497)))

(assert (=> b!104497 t!5677))

(declare-fun b_and!6445 () Bool)

(assert (= b_and!6441 (and (=> t!5677 result!3431) b_and!6445)))

(assert (=> b!104497 t!5679))

(declare-fun b_and!6447 () Bool)

(assert (= b_and!6443 (and (=> t!5679 result!3433) b_and!6447)))

(declare-fun b_lambda!4653 () Bool)

(assert (=> (not b_lambda!4653) (not b!104500)))

(assert (=> b!104500 t!5677))

(declare-fun b_and!6449 () Bool)

(assert (= b_and!6445 (and (=> t!5677 result!3431) b_and!6449)))

(assert (=> b!104500 t!5679))

(declare-fun b_and!6451 () Bool)

(assert (= b_and!6447 (and (=> t!5679 result!3433) b_and!6451)))

(assert (=> b!104498 m!113969))

(assert (=> b!104498 m!113969))

(assert (=> b!104498 m!113997))

(declare-fun m!115781 () Bool)

(assert (=> b!104494 m!115781))

(assert (=> b!104502 m!113969))

(assert (=> b!104502 m!113969))

(declare-fun m!115783 () Bool)

(assert (=> b!104502 m!115783))

(declare-fun m!115785 () Bool)

(assert (=> d!28281 m!115785))

(assert (=> d!28281 m!113985))

(declare-fun m!115787 () Bool)

(assert (=> b!104505 m!115787))

(assert (=> b!104497 m!113991))

(assert (=> b!104497 m!113969))

(declare-fun m!115789 () Bool)

(assert (=> b!104497 m!115789))

(assert (=> b!104497 m!113987))

(assert (=> b!104497 m!113991))

(assert (=> b!104497 m!113987))

(assert (=> b!104497 m!113993))

(assert (=> b!104497 m!113969))

(declare-fun m!115791 () Bool)

(assert (=> bm!10971 m!115791))

(assert (=> b!104503 m!115791))

(assert (=> b!104504 m!113969))

(assert (=> b!104504 m!113969))

(assert (=> b!104504 m!113997))

(assert (=> b!104500 m!113991))

(declare-fun m!115793 () Bool)

(assert (=> b!104500 m!115793))

(assert (=> b!104500 m!113991))

(assert (=> b!104500 m!113987))

(assert (=> b!104500 m!113993))

(declare-fun m!115795 () Bool)

(assert (=> b!104500 m!115795))

(declare-fun m!115797 () Bool)

(assert (=> b!104500 m!115797))

(assert (=> b!104500 m!113969))

(declare-fun m!115799 () Bool)

(assert (=> b!104500 m!115799))

(assert (=> b!104500 m!113987))

(assert (=> b!104500 m!115795))

(assert (=> b!103387 d!28281))

(declare-fun d!28283 () Bool)

(assert (=> d!28283 (contains!816 (+!134 lt!52629 (tuple2!2373 lt!52631 (zeroValue!2437 newMap!16))) lt!52647)))

(declare-fun lt!53285 () Unit!3141)

(assert (=> d!28283 (= lt!53285 (choose!654 lt!52629 lt!52631 (zeroValue!2437 newMap!16) lt!52647))))

(assert (=> d!28283 (contains!816 lt!52629 lt!52647)))

(assert (=> d!28283 (= (addStillContains!73 lt!52629 lt!52631 (zeroValue!2437 newMap!16) lt!52647) lt!53285)))

(declare-fun bs!4273 () Bool)

(assert (= bs!4273 d!28283))

(assert (=> bs!4273 m!113957))

(assert (=> bs!4273 m!113957))

(assert (=> bs!4273 m!113975))

(declare-fun m!115801 () Bool)

(assert (=> bs!4273 m!115801))

(declare-fun m!115803 () Bool)

(assert (=> bs!4273 m!115803))

(assert (=> b!103387 d!28283))

(declare-fun d!28285 () Bool)

(assert (=> d!28285 (= (apply!97 (+!134 lt!52640 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))) lt!52630) (apply!97 lt!52640 lt!52630))))

(declare-fun lt!53286 () Unit!3141)

(assert (=> d!28285 (= lt!53286 (choose!655 lt!52640 lt!52648 (minValue!2437 newMap!16) lt!52630))))

(declare-fun e!68031 () Bool)

(assert (=> d!28285 e!68031))

(declare-fun res!52080 () Bool)

(assert (=> d!28285 (=> (not res!52080) (not e!68031))))

(assert (=> d!28285 (= res!52080 (contains!816 lt!52640 lt!52630))))

(assert (=> d!28285 (= (addApplyDifferent!73 lt!52640 lt!52648 (minValue!2437 newMap!16) lt!52630) lt!53286)))

(declare-fun b!104506 () Bool)

(assert (=> b!104506 (= e!68031 (not (= lt!52630 lt!52648)))))

(assert (= (and d!28285 res!52080) b!104506))

(assert (=> d!28285 m!113959))

(declare-fun m!115805 () Bool)

(assert (=> d!28285 m!115805))

(assert (=> d!28285 m!113959))

(assert (=> d!28285 m!113971))

(assert (=> d!28285 m!113977))

(declare-fun m!115807 () Bool)

(assert (=> d!28285 m!115807))

(assert (=> b!103387 d!28285))

(declare-fun d!28287 () Bool)

(declare-fun e!68032 () Bool)

(assert (=> d!28287 e!68032))

(declare-fun res!52082 () Bool)

(assert (=> d!28287 (=> (not res!52082) (not e!68032))))

(declare-fun lt!53290 () ListLongMap!1539)

(assert (=> d!28287 (= res!52082 (contains!816 lt!53290 (_1!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))))))

(declare-fun lt!53288 () List!1612)

(assert (=> d!28287 (= lt!53290 (ListLongMap!1540 lt!53288))))

(declare-fun lt!53287 () Unit!3141)

(declare-fun lt!53289 () Unit!3141)

(assert (=> d!28287 (= lt!53287 lt!53289)))

(assert (=> d!28287 (= (getValueByKey!153 lt!53288 (_1!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))))))

(assert (=> d!28287 (= lt!53289 (lemmaContainsTupThenGetReturnValue!72 lt!53288 (_1!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))))))

(assert (=> d!28287 (= lt!53288 (insertStrictlySorted!75 (toList!785 lt!52640) (_1!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))))))

(assert (=> d!28287 (= (+!134 lt!52640 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))) lt!53290)))

(declare-fun b!104507 () Bool)

(declare-fun res!52081 () Bool)

(assert (=> b!104507 (=> (not res!52081) (not e!68032))))

(assert (=> b!104507 (= res!52081 (= (getValueByKey!153 (toList!785 lt!53290) (_1!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52648 (minValue!2437 newMap!16))))))))

(declare-fun b!104508 () Bool)

(assert (=> b!104508 (= e!68032 (contains!819 (toList!785 lt!53290) (tuple2!2373 lt!52648 (minValue!2437 newMap!16))))))

(assert (= (and d!28287 res!52082) b!104507))

(assert (= (and b!104507 res!52081) b!104508))

(declare-fun m!115809 () Bool)

(assert (=> d!28287 m!115809))

(declare-fun m!115811 () Bool)

(assert (=> d!28287 m!115811))

(declare-fun m!115813 () Bool)

(assert (=> d!28287 m!115813))

(declare-fun m!115815 () Bool)

(assert (=> d!28287 m!115815))

(declare-fun m!115817 () Bool)

(assert (=> b!104507 m!115817))

(declare-fun m!115819 () Bool)

(assert (=> b!104508 m!115819))

(assert (=> b!103387 d!28287))

(declare-fun d!28289 () Bool)

(assert (=> d!28289 (= (apply!97 lt!52639 lt!52634) (get!1328 (getValueByKey!153 (toList!785 lt!52639) lt!52634)))))

(declare-fun bs!4274 () Bool)

(assert (= bs!4274 d!28289))

(declare-fun m!115821 () Bool)

(assert (=> bs!4274 m!115821))

(assert (=> bs!4274 m!115821))

(declare-fun m!115823 () Bool)

(assert (=> bs!4274 m!115823))

(assert (=> b!103387 d!28289))

(declare-fun d!28291 () Bool)

(assert (=> d!28291 (= (apply!97 (+!134 lt!52639 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))) lt!52634) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52639 (tuple2!2373 lt!52644 (minValue!2437 newMap!16)))) lt!52634)))))

(declare-fun bs!4275 () Bool)

(assert (= bs!4275 d!28291))

(declare-fun m!115825 () Bool)

(assert (=> bs!4275 m!115825))

(assert (=> bs!4275 m!115825))

(declare-fun m!115827 () Bool)

(assert (=> bs!4275 m!115827))

(assert (=> b!103387 d!28291))

(declare-fun d!28293 () Bool)

(assert (=> d!28293 (= (apply!97 (+!134 lt!52639 (tuple2!2373 lt!52644 (minValue!2437 newMap!16))) lt!52634) (apply!97 lt!52639 lt!52634))))

(declare-fun lt!53291 () Unit!3141)

(assert (=> d!28293 (= lt!53291 (choose!655 lt!52639 lt!52644 (minValue!2437 newMap!16) lt!52634))))

(declare-fun e!68033 () Bool)

(assert (=> d!28293 e!68033))

(declare-fun res!52083 () Bool)

(assert (=> d!28293 (=> (not res!52083) (not e!68033))))

(assert (=> d!28293 (= res!52083 (contains!816 lt!52639 lt!52634))))

(assert (=> d!28293 (= (addApplyDifferent!73 lt!52639 lt!52644 (minValue!2437 newMap!16) lt!52634) lt!53291)))

(declare-fun b!104509 () Bool)

(assert (=> b!104509 (= e!68033 (not (= lt!52634 lt!52644)))))

(assert (= (and d!28293 res!52083) b!104509))

(assert (=> d!28293 m!113949))

(declare-fun m!115829 () Bool)

(assert (=> d!28293 m!115829))

(assert (=> d!28293 m!113949))

(assert (=> d!28293 m!113951))

(assert (=> d!28293 m!113963))

(declare-fun m!115831 () Bool)

(assert (=> d!28293 m!115831))

(assert (=> b!103387 d!28293))

(declare-fun d!28295 () Bool)

(assert (=> d!28295 (isDefined!107 (getValueByKey!153 (toList!785 lt!52453) (_1!1197 lt!52325)))))

(declare-fun lt!53292 () Unit!3141)

(assert (=> d!28295 (= lt!53292 (choose!650 (toList!785 lt!52453) (_1!1197 lt!52325)))))

(declare-fun e!68034 () Bool)

(assert (=> d!28295 e!68034))

(declare-fun res!52084 () Bool)

(assert (=> d!28295 (=> (not res!52084) (not e!68034))))

(assert (=> d!28295 (= res!52084 (isStrictlySorted!303 (toList!785 lt!52453)))))

(assert (=> d!28295 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52453) (_1!1197 lt!52325)) lt!53292)))

(declare-fun b!104510 () Bool)

(assert (=> b!104510 (= e!68034 (containsKey!157 (toList!785 lt!52453) (_1!1197 lt!52325)))))

(assert (= (and d!28295 res!52084) b!104510))

(assert (=> d!28295 m!113765))

(assert (=> d!28295 m!113765))

(assert (=> d!28295 m!114321))

(declare-fun m!115833 () Bool)

(assert (=> d!28295 m!115833))

(declare-fun m!115835 () Bool)

(assert (=> d!28295 m!115835))

(assert (=> b!104510 m!114317))

(assert (=> b!103609 d!28295))

(assert (=> b!103609 d!28075))

(assert (=> b!103609 d!27733))

(declare-fun b!104513 () Bool)

(declare-fun e!68036 () Option!159)

(assert (=> b!104513 (= e!68036 (getValueByKey!153 (t!5665 (toList!785 lt!52953)) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104511 () Bool)

(declare-fun e!68035 () Option!159)

(assert (=> b!104511 (= e!68035 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52953)))))))

(declare-fun d!28297 () Bool)

(declare-fun c!18110 () Bool)

(assert (=> d!28297 (= c!18110 (and ((_ is Cons!1608) (toList!785 lt!52953)) (= (_1!1197 (h!2204 (toList!785 lt!52953))) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28297 (= (getValueByKey!153 (toList!785 lt!52953) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68035)))

(declare-fun b!104512 () Bool)

(assert (=> b!104512 (= e!68035 e!68036)))

(declare-fun c!18111 () Bool)

(assert (=> b!104512 (= c!18111 (and ((_ is Cons!1608) (toList!785 lt!52953)) (not (= (_1!1197 (h!2204 (toList!785 lt!52953))) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104514 () Bool)

(assert (=> b!104514 (= e!68036 None!157)))

(assert (= (and d!28297 c!18110) b!104511))

(assert (= (and d!28297 (not c!18110)) b!104512))

(assert (= (and b!104512 c!18111) b!104513))

(assert (= (and b!104512 (not c!18111)) b!104514))

(declare-fun m!115837 () Bool)

(assert (=> b!104513 m!115837))

(assert (=> b!103804 d!28297))

(declare-fun d!28299 () Bool)

(declare-fun res!52085 () Bool)

(declare-fun e!68037 () Bool)

(assert (=> d!28299 (=> res!52085 e!68037)))

(assert (=> d!28299 (= res!52085 (and ((_ is Cons!1608) lt!52721) (= (_1!1197 (h!2204 lt!52721)) (_1!1197 lt!52331))))))

(assert (=> d!28299 (= (containsKey!157 lt!52721 (_1!1197 lt!52331)) e!68037)))

(declare-fun b!104515 () Bool)

(declare-fun e!68038 () Bool)

(assert (=> b!104515 (= e!68037 e!68038)))

(declare-fun res!52086 () Bool)

(assert (=> b!104515 (=> (not res!52086) (not e!68038))))

(assert (=> b!104515 (= res!52086 (and (or (not ((_ is Cons!1608) lt!52721)) (bvsle (_1!1197 (h!2204 lt!52721)) (_1!1197 lt!52331))) ((_ is Cons!1608) lt!52721) (bvslt (_1!1197 (h!2204 lt!52721)) (_1!1197 lt!52331))))))

(declare-fun b!104516 () Bool)

(assert (=> b!104516 (= e!68038 (containsKey!157 (t!5665 lt!52721) (_1!1197 lt!52331)))))

(assert (= (and d!28299 (not res!52085)) b!104515))

(assert (= (and b!104515 res!52086) b!104516))

(declare-fun m!115839 () Bool)

(assert (=> b!104516 m!115839))

(assert (=> b!103543 d!28299))

(declare-fun b!104519 () Bool)

(declare-fun e!68040 () Option!159)

(assert (=> b!104519 (= e!68040 (getValueByKey!153 (t!5665 (t!5665 lt!52451)) (_1!1197 lt!52325)))))

(declare-fun b!104517 () Bool)

(declare-fun e!68039 () Option!159)

(assert (=> b!104517 (= e!68039 (Some!158 (_2!1197 (h!2204 (t!5665 lt!52451)))))))

(declare-fun d!28301 () Bool)

(declare-fun c!18112 () Bool)

(assert (=> d!28301 (= c!18112 (and ((_ is Cons!1608) (t!5665 lt!52451)) (= (_1!1197 (h!2204 (t!5665 lt!52451))) (_1!1197 lt!52325))))))

(assert (=> d!28301 (= (getValueByKey!153 (t!5665 lt!52451) (_1!1197 lt!52325)) e!68039)))

(declare-fun b!104518 () Bool)

(assert (=> b!104518 (= e!68039 e!68040)))

(declare-fun c!18113 () Bool)

(assert (=> b!104518 (= c!18113 (and ((_ is Cons!1608) (t!5665 lt!52451)) (not (= (_1!1197 (h!2204 (t!5665 lt!52451))) (_1!1197 lt!52325)))))))

(declare-fun b!104520 () Bool)

(assert (=> b!104520 (= e!68040 None!157)))

(assert (= (and d!28301 c!18112) b!104517))

(assert (= (and d!28301 (not c!18112)) b!104518))

(assert (= (and b!104518 c!18113) b!104519))

(assert (= (and b!104518 (not c!18113)) b!104520))

(declare-fun m!115841 () Bool)

(assert (=> b!104519 m!115841))

(assert (=> b!103614 d!28301))

(declare-fun d!28303 () Bool)

(assert (=> d!28303 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53293 () Unit!3141)

(assert (=> d!28303 (= lt!53293 (choose!650 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68041 () Bool)

(assert (=> d!28303 e!68041))

(declare-fun res!52087 () Bool)

(assert (=> d!28303 (=> (not res!52087) (not e!68041))))

(assert (=> d!28303 (= res!52087 (isStrictlySorted!303 (toList!785 lt!52612)))))

(assert (=> d!28303 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53293)))

(declare-fun b!104521 () Bool)

(assert (=> b!104521 (= e!68041 (containsKey!157 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28303 res!52087) b!104521))

(assert (=> d!28303 m!114303))

(assert (=> d!28303 m!114303))

(assert (=> d!28303 m!114699))

(declare-fun m!115843 () Bool)

(assert (=> d!28303 m!115843))

(declare-fun m!115845 () Bool)

(assert (=> d!28303 m!115845))

(assert (=> b!104521 m!114695))

(assert (=> b!103811 d!28303))

(assert (=> b!103811 d!28079))

(assert (=> b!103811 d!28081))

(declare-fun d!28305 () Bool)

(assert (=> d!28305 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4276 () Bool)

(assert (= bs!4276 d!28305))

(assert (=> bs!4276 m!114097))

(declare-fun m!115847 () Bool)

(assert (=> bs!4276 m!115847))

(assert (=> b!103507 d!28305))

(assert (=> b!103507 d!27905))

(assert (=> bm!10884 d!27763))

(assert (=> b!103694 d!28073))

(declare-fun d!28307 () Bool)

(assert (=> d!28307 (= (isEmpty!372 (toList!785 lt!52435)) ((_ is Nil!1609) (toList!785 lt!52435)))))

(assert (=> d!27725 d!28307))

(declare-fun d!28309 () Bool)

(assert (=> d!28309 (isDefined!107 (getValueByKey!153 (toList!785 lt!52464) (_1!1197 lt!52331)))))

(declare-fun lt!53294 () Unit!3141)

(assert (=> d!28309 (= lt!53294 (choose!650 (toList!785 lt!52464) (_1!1197 lt!52331)))))

(declare-fun e!68042 () Bool)

(assert (=> d!28309 e!68042))

(declare-fun res!52088 () Bool)

(assert (=> d!28309 (=> (not res!52088) (not e!68042))))

(assert (=> d!28309 (= res!52088 (isStrictlySorted!303 (toList!785 lt!52464)))))

(assert (=> d!28309 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52464) (_1!1197 lt!52331)) lt!53294)))

(declare-fun b!104522 () Bool)

(assert (=> b!104522 (= e!68042 (containsKey!157 (toList!785 lt!52464) (_1!1197 lt!52331)))))

(assert (= (and d!28309 res!52088) b!104522))

(assert (=> d!28309 m!113799))

(assert (=> d!28309 m!113799))

(assert (=> d!28309 m!114183))

(declare-fun m!115849 () Bool)

(assert (=> d!28309 m!115849))

(declare-fun m!115851 () Bool)

(assert (=> d!28309 m!115851))

(assert (=> b!104522 m!114179))

(assert (=> b!103508 d!28309))

(assert (=> b!103508 d!28133))

(assert (=> b!103508 d!27717))

(declare-fun d!28311 () Bool)

(declare-fun e!68044 () Bool)

(assert (=> d!28311 e!68044))

(declare-fun res!52089 () Bool)

(assert (=> d!28311 (=> res!52089 e!68044)))

(declare-fun lt!53297 () Bool)

(assert (=> d!28311 (= res!52089 (not lt!53297))))

(declare-fun lt!53296 () Bool)

(assert (=> d!28311 (= lt!53297 lt!53296)))

(declare-fun lt!53298 () Unit!3141)

(declare-fun e!68043 () Unit!3141)

(assert (=> d!28311 (= lt!53298 e!68043)))

(declare-fun c!18114 () Bool)

(assert (=> d!28311 (= c!18114 lt!53296)))

(assert (=> d!28311 (= lt!53296 (containsKey!157 (toList!785 lt!52953) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!28311 (= (contains!816 lt!52953 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53297)))

(declare-fun b!104523 () Bool)

(declare-fun lt!53295 () Unit!3141)

(assert (=> b!104523 (= e!68043 lt!53295)))

(assert (=> b!104523 (= lt!53295 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52953) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!104523 (isDefined!107 (getValueByKey!153 (toList!785 lt!52953) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104524 () Bool)

(declare-fun Unit!3194 () Unit!3141)

(assert (=> b!104524 (= e!68043 Unit!3194)))

(declare-fun b!104525 () Bool)

(assert (=> b!104525 (= e!68044 (isDefined!107 (getValueByKey!153 (toList!785 lt!52953) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28311 c!18114) b!104523))

(assert (= (and d!28311 (not c!18114)) b!104524))

(assert (= (and d!28311 (not res!52089)) b!104525))

(declare-fun m!115853 () Bool)

(assert (=> d!28311 m!115853))

(declare-fun m!115855 () Bool)

(assert (=> b!104523 m!115855))

(assert (=> b!104523 m!114651))

(assert (=> b!104523 m!114651))

(declare-fun m!115857 () Bool)

(assert (=> b!104523 m!115857))

(assert (=> b!104525 m!114651))

(assert (=> b!104525 m!114651))

(assert (=> b!104525 m!115857))

(assert (=> d!27861 d!28311))

(declare-fun e!68046 () Option!159)

(declare-fun b!104528 () Bool)

(assert (=> b!104528 (= e!68046 (getValueByKey!153 (t!5665 lt!52951) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104526 () Bool)

(declare-fun e!68045 () Option!159)

(assert (=> b!104526 (= e!68045 (Some!158 (_2!1197 (h!2204 lt!52951))))))

(declare-fun d!28313 () Bool)

(declare-fun c!18115 () Bool)

(assert (=> d!28313 (= c!18115 (and ((_ is Cons!1608) lt!52951) (= (_1!1197 (h!2204 lt!52951)) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28313 (= (getValueByKey!153 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68045)))

(declare-fun b!104527 () Bool)

(assert (=> b!104527 (= e!68045 e!68046)))

(declare-fun c!18116 () Bool)

(assert (=> b!104527 (= c!18116 (and ((_ is Cons!1608) lt!52951) (not (= (_1!1197 (h!2204 lt!52951)) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104529 () Bool)

(assert (=> b!104529 (= e!68046 None!157)))

(assert (= (and d!28313 c!18115) b!104526))

(assert (= (and d!28313 (not c!18115)) b!104527))

(assert (= (and b!104527 c!18116) b!104528))

(assert (= (and b!104527 (not c!18116)) b!104529))

(declare-fun m!115859 () Bool)

(assert (=> b!104528 m!115859))

(assert (=> d!27861 d!28313))

(declare-fun d!28315 () Bool)

(assert (=> d!28315 (= (getValueByKey!153 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53299 () Unit!3141)

(assert (=> d!28315 (= lt!53299 (choose!649 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!68047 () Bool)

(assert (=> d!28315 e!68047))

(declare-fun res!52090 () Bool)

(assert (=> d!28315 (=> (not res!52090) (not e!68047))))

(assert (=> d!28315 (= res!52090 (isStrictlySorted!303 lt!52951))))

(assert (=> d!28315 (= (lemmaContainsTupThenGetReturnValue!72 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53299)))

(declare-fun b!104530 () Bool)

(declare-fun res!52091 () Bool)

(assert (=> b!104530 (=> (not res!52091) (not e!68047))))

(assert (=> b!104530 (= res!52091 (containsKey!157 lt!52951 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104531 () Bool)

(assert (=> b!104531 (= e!68047 (contains!819 lt!52951 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28315 res!52090) b!104530))

(assert (= (and b!104530 res!52091) b!104531))

(assert (=> d!28315 m!114645))

(declare-fun m!115861 () Bool)

(assert (=> d!28315 m!115861))

(declare-fun m!115863 () Bool)

(assert (=> d!28315 m!115863))

(declare-fun m!115865 () Bool)

(assert (=> b!104530 m!115865))

(declare-fun m!115867 () Bool)

(assert (=> b!104531 m!115867))

(assert (=> d!27861 d!28315))

(declare-fun b!104532 () Bool)

(declare-fun e!68049 () List!1612)

(declare-fun call!10977 () List!1612)

(assert (=> b!104532 (= e!68049 call!10977)))

(declare-fun b!104533 () Bool)

(declare-fun e!68050 () List!1612)

(assert (=> b!104533 (= e!68050 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52603)) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104534 () Bool)

(declare-fun res!52092 () Bool)

(declare-fun e!68052 () Bool)

(assert (=> b!104534 (=> (not res!52092) (not e!68052))))

(declare-fun lt!53300 () List!1612)

(assert (=> b!104534 (= res!52092 (containsKey!157 lt!53300 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!10972 () Bool)

(declare-fun call!10975 () List!1612)

(assert (=> bm!10972 (= call!10975 call!10977)))

(declare-fun b!104535 () Bool)

(declare-fun e!68048 () List!1612)

(assert (=> b!104535 (= e!68048 call!10975)))

(declare-fun b!104536 () Bool)

(declare-fun c!18119 () Bool)

(declare-fun c!18117 () Bool)

(assert (=> b!104536 (= e!68050 (ite c!18119 (t!5665 (toList!785 lt!52603)) (ite c!18117 (Cons!1608 (h!2204 (toList!785 lt!52603)) (t!5665 (toList!785 lt!52603))) Nil!1609)))))

(declare-fun d!28317 () Bool)

(assert (=> d!28317 e!68052))

(declare-fun res!52093 () Bool)

(assert (=> d!28317 (=> (not res!52093) (not e!68052))))

(assert (=> d!28317 (= res!52093 (isStrictlySorted!303 lt!53300))))

(declare-fun e!68051 () List!1612)

(assert (=> d!28317 (= lt!53300 e!68051)))

(declare-fun c!18120 () Bool)

(assert (=> d!28317 (= c!18120 (and ((_ is Cons!1608) (toList!785 lt!52603)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52603))) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28317 (isStrictlySorted!303 (toList!785 lt!52603))))

(assert (=> d!28317 (= (insertStrictlySorted!75 (toList!785 lt!52603) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53300)))

(declare-fun b!104537 () Bool)

(assert (=> b!104537 (= c!18117 (and ((_ is Cons!1608) (toList!785 lt!52603)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52603))) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104537 (= e!68049 e!68048)))

(declare-fun bm!10973 () Bool)

(declare-fun call!10976 () List!1612)

(assert (=> bm!10973 (= call!10976 ($colon$colon!79 e!68050 (ite c!18120 (h!2204 (toList!785 lt!52603)) (tuple2!2373 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!18118 () Bool)

(assert (=> bm!10973 (= c!18118 c!18120)))

(declare-fun b!104538 () Bool)

(assert (=> b!104538 (= e!68052 (contains!819 lt!53300 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104539 () Bool)

(assert (=> b!104539 (= e!68051 call!10976)))

(declare-fun bm!10974 () Bool)

(assert (=> bm!10974 (= call!10977 call!10976)))

(declare-fun b!104540 () Bool)

(assert (=> b!104540 (= e!68048 call!10975)))

(declare-fun b!104541 () Bool)

(assert (=> b!104541 (= e!68051 e!68049)))

(assert (=> b!104541 (= c!18119 (and ((_ is Cons!1608) (toList!785 lt!52603)) (= (_1!1197 (h!2204 (toList!785 lt!52603))) (_1!1197 (tuple2!2373 lt!52605 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28317 c!18120) b!104539))

(assert (= (and d!28317 (not c!18120)) b!104541))

(assert (= (and b!104541 c!18119) b!104532))

(assert (= (and b!104541 (not c!18119)) b!104537))

(assert (= (and b!104537 c!18117) b!104540))

(assert (= (and b!104537 (not c!18117)) b!104535))

(assert (= (or b!104540 b!104535) bm!10972))

(assert (= (or b!104532 bm!10972) bm!10974))

(assert (= (or b!104539 bm!10974) bm!10973))

(assert (= (and bm!10973 c!18118) b!104533))

(assert (= (and bm!10973 (not c!18118)) b!104536))

(assert (= (and d!28317 res!52093) b!104534))

(assert (= (and b!104534 res!52092) b!104538))

(declare-fun m!115869 () Bool)

(assert (=> b!104538 m!115869))

(declare-fun m!115871 () Bool)

(assert (=> d!28317 m!115871))

(declare-fun m!115873 () Bool)

(assert (=> d!28317 m!115873))

(declare-fun m!115875 () Bool)

(assert (=> b!104534 m!115875))

(declare-fun m!115877 () Bool)

(assert (=> b!104533 m!115877))

(declare-fun m!115879 () Bool)

(assert (=> bm!10973 m!115879))

(assert (=> d!27861 d!28317))

(declare-fun d!28319 () Bool)

(declare-fun e!68054 () Bool)

(assert (=> d!28319 e!68054))

(declare-fun res!52094 () Bool)

(assert (=> d!28319 (=> res!52094 e!68054)))

(declare-fun lt!53303 () Bool)

(assert (=> d!28319 (= res!52094 (not lt!53303))))

(declare-fun lt!53302 () Bool)

(assert (=> d!28319 (= lt!53303 lt!53302)))

(declare-fun lt!53304 () Unit!3141)

(declare-fun e!68053 () Unit!3141)

(assert (=> d!28319 (= lt!53304 e!68053)))

(declare-fun c!18121 () Bool)

(assert (=> d!28319 (= c!18121 lt!53302)))

(assert (=> d!28319 (= lt!53302 (containsKey!157 (toList!785 lt!52863) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28319 (= (contains!816 lt!52863 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53303)))

(declare-fun b!104542 () Bool)

(declare-fun lt!53301 () Unit!3141)

(assert (=> b!104542 (= e!68053 lt!53301)))

(assert (=> b!104542 (= lt!53301 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52863) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104542 (isDefined!107 (getValueByKey!153 (toList!785 lt!52863) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104543 () Bool)

(declare-fun Unit!3195 () Unit!3141)

(assert (=> b!104543 (= e!68053 Unit!3195)))

(declare-fun b!104544 () Bool)

(assert (=> b!104544 (= e!68054 (isDefined!107 (getValueByKey!153 (toList!785 lt!52863) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28319 c!18121) b!104542))

(assert (= (and d!28319 (not c!18121)) b!104543))

(assert (= (and d!28319 (not res!52094)) b!104544))

(declare-fun m!115881 () Bool)

(assert (=> d!28319 m!115881))

(declare-fun m!115883 () Bool)

(assert (=> b!104542 m!115883))

(declare-fun m!115885 () Bool)

(assert (=> b!104542 m!115885))

(assert (=> b!104542 m!115885))

(declare-fun m!115887 () Bool)

(assert (=> b!104542 m!115887))

(assert (=> b!104544 m!115885))

(assert (=> b!104544 m!115885))

(assert (=> b!104544 m!115887))

(assert (=> d!27803 d!28319))

(assert (=> d!27803 d!27665))

(declare-fun b!104547 () Bool)

(declare-fun e!68056 () Option!159)

(assert (=> b!104547 (= e!68056 (getValueByKey!153 (t!5665 (t!5665 lt!52462)) (_1!1197 lt!52331)))))

(declare-fun b!104545 () Bool)

(declare-fun e!68055 () Option!159)

(assert (=> b!104545 (= e!68055 (Some!158 (_2!1197 (h!2204 (t!5665 lt!52462)))))))

(declare-fun d!28321 () Bool)

(declare-fun c!18122 () Bool)

(assert (=> d!28321 (= c!18122 (and ((_ is Cons!1608) (t!5665 lt!52462)) (= (_1!1197 (h!2204 (t!5665 lt!52462))) (_1!1197 lt!52331))))))

(assert (=> d!28321 (= (getValueByKey!153 (t!5665 lt!52462) (_1!1197 lt!52331)) e!68055)))

(declare-fun b!104546 () Bool)

(assert (=> b!104546 (= e!68055 e!68056)))

(declare-fun c!18123 () Bool)

(assert (=> b!104546 (= c!18123 (and ((_ is Cons!1608) (t!5665 lt!52462)) (not (= (_1!1197 (h!2204 (t!5665 lt!52462))) (_1!1197 lt!52331)))))))

(declare-fun b!104548 () Bool)

(assert (=> b!104548 (= e!68056 None!157)))

(assert (= (and d!28321 c!18122) b!104545))

(assert (= (and d!28321 (not c!18122)) b!104546))

(assert (= (and b!104546 c!18123) b!104547))

(assert (= (and b!104546 (not c!18123)) b!104548))

(declare-fun m!115889 () Bool)

(assert (=> b!104547 m!115889))

(assert (=> b!103513 d!28321))

(assert (=> d!27821 d!27973))

(declare-fun d!28323 () Bool)

(assert (=> d!28323 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53305 () Unit!3141)

(assert (=> d!28323 (= lt!53305 (choose!650 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68057 () Bool)

(assert (=> d!28323 e!68057))

(declare-fun res!52095 () Bool)

(assert (=> d!28323 (=> (not res!52095) (not e!68057))))

(assert (=> d!28323 (= res!52095 (isStrictlySorted!303 (toList!785 lt!52435)))))

(assert (=> d!28323 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53305)))

(declare-fun b!104549 () Bool)

(assert (=> b!104549 (= e!68057 (containsKey!157 (toList!785 lt!52435) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28323 res!52095) b!104549))

(assert (=> d!28323 m!114093))

(assert (=> d!28323 m!114093))

(assert (=> d!28323 m!114095))

(declare-fun m!115891 () Bool)

(assert (=> d!28323 m!115891))

(declare-fun m!115893 () Bool)

(assert (=> d!28323 m!115893))

(assert (=> b!104549 m!114089))

(assert (=> b!103461 d!28323))

(assert (=> b!103461 d!28141))

(assert (=> b!103461 d!28143))

(declare-fun b!104550 () Bool)

(declare-fun e!68070 () Bool)

(assert (=> b!104550 (= e!68070 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(declare-fun b!104551 () Bool)

(declare-fun c!18127 () Bool)

(assert (=> b!104551 (= c!18127 (and (not (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68067 () ListLongMap!1539)

(declare-fun e!68068 () ListLongMap!1539)

(assert (=> b!104551 (= e!68067 e!68068)))

(declare-fun b!104552 () Bool)

(declare-fun e!68063 () Bool)

(declare-fun call!10978 () Bool)

(assert (=> b!104552 (= e!68063 (not call!10978))))

(declare-fun bm!10975 () Bool)

(declare-fun call!10981 () ListLongMap!1539)

(assert (=> bm!10975 (= call!10981 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))))))

(declare-fun b!104553 () Bool)

(declare-fun e!68062 () Bool)

(declare-fun lt!53316 () ListLongMap!1539)

(assert (=> b!104553 (= e!68062 (= (apply!97 lt!53316 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (_values!2543 (_2!1198 lt!52557))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 (_2!1198 lt!52557)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (_values!2543 (_2!1198 lt!52557)))))))

(assert (=> b!104553 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(declare-fun b!104554 () Bool)

(declare-fun e!68069 () ListLongMap!1539)

(assert (=> b!104554 (= e!68069 e!68067)))

(declare-fun c!18125 () Bool)

(assert (=> b!104554 (= c!18125 (and (not (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104555 () Bool)

(declare-fun e!68064 () Unit!3141)

(declare-fun lt!53320 () Unit!3141)

(assert (=> b!104555 (= e!68064 lt!53320)))

(declare-fun lt!53307 () ListLongMap!1539)

(assert (=> b!104555 (= lt!53307 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))))))

(declare-fun lt!53309 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53309 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53325 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53325 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000))))

(declare-fun lt!53327 () Unit!3141)

(assert (=> b!104555 (= lt!53327 (addStillContains!73 lt!53307 lt!53309 (zeroValue!2437 (_2!1198 lt!52557)) lt!53325))))

(assert (=> b!104555 (contains!816 (+!134 lt!53307 (tuple2!2373 lt!53309 (zeroValue!2437 (_2!1198 lt!52557)))) lt!53325)))

(declare-fun lt!53323 () Unit!3141)

(assert (=> b!104555 (= lt!53323 lt!53327)))

(declare-fun lt!53318 () ListLongMap!1539)

(assert (=> b!104555 (= lt!53318 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))))))

(declare-fun lt!53326 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53326 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53308 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53308 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000))))

(declare-fun lt!53313 () Unit!3141)

(assert (=> b!104555 (= lt!53313 (addApplyDifferent!73 lt!53318 lt!53326 (minValue!2437 (_2!1198 lt!52557)) lt!53308))))

(assert (=> b!104555 (= (apply!97 (+!134 lt!53318 (tuple2!2373 lt!53326 (minValue!2437 (_2!1198 lt!52557)))) lt!53308) (apply!97 lt!53318 lt!53308))))

(declare-fun lt!53306 () Unit!3141)

(assert (=> b!104555 (= lt!53306 lt!53313)))

(declare-fun lt!53324 () ListLongMap!1539)

(assert (=> b!104555 (= lt!53324 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))))))

(declare-fun lt!53319 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53319 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53321 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53321 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000))))

(declare-fun lt!53310 () Unit!3141)

(assert (=> b!104555 (= lt!53310 (addApplyDifferent!73 lt!53324 lt!53319 (zeroValue!2437 (_2!1198 lt!52557)) lt!53321))))

(assert (=> b!104555 (= (apply!97 (+!134 lt!53324 (tuple2!2373 lt!53319 (zeroValue!2437 (_2!1198 lt!52557)))) lt!53321) (apply!97 lt!53324 lt!53321))))

(declare-fun lt!53315 () Unit!3141)

(assert (=> b!104555 (= lt!53315 lt!53310)))

(declare-fun lt!53317 () ListLongMap!1539)

(assert (=> b!104555 (= lt!53317 (getCurrentListMapNoExtraKeys!99 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))))))

(declare-fun lt!53322 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53322 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53312 () (_ BitVec 64))

(assert (=> b!104555 (= lt!53312 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000))))

(assert (=> b!104555 (= lt!53320 (addApplyDifferent!73 lt!53317 lt!53322 (minValue!2437 (_2!1198 lt!52557)) lt!53312))))

(assert (=> b!104555 (= (apply!97 (+!134 lt!53317 (tuple2!2373 lt!53322 (minValue!2437 (_2!1198 lt!52557)))) lt!53312) (apply!97 lt!53317 lt!53312))))

(declare-fun b!104556 () Bool)

(declare-fun e!68058 () Bool)

(declare-fun e!68061 () Bool)

(assert (=> b!104556 (= e!68058 e!68061)))

(declare-fun res!52098 () Bool)

(declare-fun call!10980 () Bool)

(assert (=> b!104556 (= res!52098 call!10980)))

(assert (=> b!104556 (=> (not res!52098) (not e!68061))))

(declare-fun b!104557 () Bool)

(declare-fun e!68066 () Bool)

(assert (=> b!104557 (= e!68066 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(declare-fun b!104558 () Bool)

(declare-fun e!68065 () Bool)

(assert (=> b!104558 (= e!68065 (= (apply!97 lt!53316 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 (_2!1198 lt!52557))))))

(declare-fun call!10979 () ListLongMap!1539)

(declare-fun call!10984 () ListLongMap!1539)

(declare-fun c!18124 () Bool)

(declare-fun call!10983 () ListLongMap!1539)

(declare-fun bm!10976 () Bool)

(assert (=> bm!10976 (= call!10984 (+!134 (ite c!18124 call!10981 (ite c!18125 call!10979 call!10983)) (ite (or c!18124 c!18125) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (_2!1198 lt!52557))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (_2!1198 lt!52557))))))))

(declare-fun bm!10977 () Bool)

(assert (=> bm!10977 (= call!10979 call!10981)))

(declare-fun b!104559 () Bool)

(declare-fun res!52099 () Bool)

(declare-fun e!68060 () Bool)

(assert (=> b!104559 (=> (not res!52099) (not e!68060))))

(declare-fun e!68059 () Bool)

(assert (=> b!104559 (= res!52099 e!68059)))

(declare-fun res!52101 () Bool)

(assert (=> b!104559 (=> res!52101 e!68059)))

(assert (=> b!104559 (= res!52101 (not e!68070))))

(declare-fun res!52096 () Bool)

(assert (=> b!104559 (=> (not res!52096) (not e!68070))))

(assert (=> b!104559 (= res!52096 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(declare-fun bm!10978 () Bool)

(assert (=> bm!10978 (= call!10980 (contains!816 lt!53316 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10979 () Bool)

(assert (=> bm!10979 (= call!10983 call!10979)))

(declare-fun b!104560 () Bool)

(assert (=> b!104560 (= e!68061 (= (apply!97 lt!53316 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 (_2!1198 lt!52557))))))

(declare-fun d!28325 () Bool)

(assert (=> d!28325 e!68060))

(declare-fun res!52102 () Bool)

(assert (=> d!28325 (=> (not res!52102) (not e!68060))))

(assert (=> d!28325 (= res!52102 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))))

(declare-fun lt!53311 () ListLongMap!1539)

(assert (=> d!28325 (= lt!53316 lt!53311)))

(declare-fun lt!53314 () Unit!3141)

(assert (=> d!28325 (= lt!53314 e!68064)))

(declare-fun c!18128 () Bool)

(assert (=> d!28325 (= c!18128 e!68066)))

(declare-fun res!52104 () Bool)

(assert (=> d!28325 (=> (not res!52104) (not e!68066))))

(assert (=> d!28325 (= res!52104 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(assert (=> d!28325 (= lt!53311 e!68069)))

(assert (=> d!28325 (= c!18124 (and (not (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28325 (validMask!0 (mask!6695 (_2!1198 lt!52557)))))

(assert (=> d!28325 (= (getCurrentListMap!462 (_keys!4261 (_2!1198 lt!52557)) (_values!2543 (_2!1198 lt!52557)) (mask!6695 (_2!1198 lt!52557)) (extraKeys!2369 (_2!1198 lt!52557)) (zeroValue!2437 (_2!1198 lt!52557)) (minValue!2437 (_2!1198 lt!52557)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52557))) lt!53316)))

(declare-fun b!104561 () Bool)

(assert (=> b!104561 (= e!68069 (+!134 call!10984 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (_2!1198 lt!52557)))))))

(declare-fun b!104562 () Bool)

(declare-fun res!52100 () Bool)

(assert (=> b!104562 (=> (not res!52100) (not e!68060))))

(assert (=> b!104562 (= res!52100 e!68063)))

(declare-fun c!18126 () Bool)

(assert (=> b!104562 (= c!18126 (not (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104563 () Bool)

(assert (=> b!104563 (= e!68063 e!68065)))

(declare-fun res!52097 () Bool)

(assert (=> b!104563 (= res!52097 call!10978)))

(assert (=> b!104563 (=> (not res!52097) (not e!68065))))

(declare-fun b!104564 () Bool)

(declare-fun call!10982 () ListLongMap!1539)

(assert (=> b!104564 (= e!68067 call!10982)))

(declare-fun bm!10980 () Bool)

(assert (=> bm!10980 (= call!10982 call!10984)))

(declare-fun b!104565 () Bool)

(declare-fun Unit!3196 () Unit!3141)

(assert (=> b!104565 (= e!68064 Unit!3196)))

(declare-fun b!104566 () Bool)

(assert (=> b!104566 (= e!68060 e!68058)))

(declare-fun c!18129 () Bool)

(assert (=> b!104566 (= c!18129 (not (= (bvand (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104567 () Bool)

(assert (=> b!104567 (= e!68068 call!10982)))

(declare-fun b!104568 () Bool)

(assert (=> b!104568 (= e!68058 (not call!10980))))

(declare-fun b!104569 () Bool)

(assert (=> b!104569 (= e!68068 call!10983)))

(declare-fun b!104570 () Bool)

(assert (=> b!104570 (= e!68059 e!68062)))

(declare-fun res!52103 () Bool)

(assert (=> b!104570 (=> (not res!52103) (not e!68062))))

(assert (=> b!104570 (= res!52103 (contains!816 lt!53316 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(assert (=> b!104570 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(declare-fun bm!10981 () Bool)

(assert (=> bm!10981 (= call!10978 (contains!816 lt!53316 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28325 c!18124) b!104561))

(assert (= (and d!28325 (not c!18124)) b!104554))

(assert (= (and b!104554 c!18125) b!104564))

(assert (= (and b!104554 (not c!18125)) b!104551))

(assert (= (and b!104551 c!18127) b!104567))

(assert (= (and b!104551 (not c!18127)) b!104569))

(assert (= (or b!104567 b!104569) bm!10979))

(assert (= (or b!104564 bm!10979) bm!10977))

(assert (= (or b!104564 b!104567) bm!10980))

(assert (= (or b!104561 bm!10977) bm!10975))

(assert (= (or b!104561 bm!10980) bm!10976))

(assert (= (and d!28325 res!52104) b!104557))

(assert (= (and d!28325 c!18128) b!104555))

(assert (= (and d!28325 (not c!18128)) b!104565))

(assert (= (and d!28325 res!52102) b!104559))

(assert (= (and b!104559 res!52096) b!104550))

(assert (= (and b!104559 (not res!52101)) b!104570))

(assert (= (and b!104570 res!52103) b!104553))

(assert (= (and b!104559 res!52099) b!104562))

(assert (= (and b!104562 c!18126) b!104563))

(assert (= (and b!104562 (not c!18126)) b!104552))

(assert (= (and b!104563 res!52097) b!104558))

(assert (= (or b!104563 b!104552) bm!10981))

(assert (= (and b!104562 res!52100) b!104566))

(assert (= (and b!104566 c!18129) b!104556))

(assert (= (and b!104566 (not c!18129)) b!104568))

(assert (= (and b!104556 res!52098) b!104560))

(assert (= (or b!104556 b!104568) bm!10978))

(declare-fun b_lambda!4655 () Bool)

(assert (=> (not b_lambda!4655) (not b!104553)))

(declare-fun tb!2037 () Bool)

(declare-fun t!5682 () Bool)

(assert (=> (and b!102942 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 (_2!1198 lt!52557))) t!5682) tb!2037))

(declare-fun result!3435 () Bool)

(assert (=> tb!2037 (= result!3435 tp_is_empty!2671)))

(assert (=> b!104553 t!5682))

(declare-fun b_and!6453 () Bool)

(assert (= b_and!6449 (and (=> t!5682 result!3435) b_and!6453)))

(declare-fun t!5684 () Bool)

(declare-fun tb!2039 () Bool)

(assert (=> (and b!102934 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (_2!1198 lt!52557))) t!5684) tb!2039))

(declare-fun result!3437 () Bool)

(assert (= result!3437 result!3435))

(assert (=> b!104553 t!5684))

(declare-fun b_and!6455 () Bool)

(assert (= b_and!6451 (and (=> t!5684 result!3437) b_and!6455)))

(declare-fun m!115895 () Bool)

(assert (=> bm!10981 m!115895))

(declare-fun m!115897 () Bool)

(assert (=> b!104555 m!115897))

(declare-fun m!115899 () Bool)

(assert (=> b!104555 m!115899))

(declare-fun m!115901 () Bool)

(assert (=> b!104555 m!115901))

(declare-fun m!115903 () Bool)

(assert (=> b!104555 m!115903))

(declare-fun m!115905 () Bool)

(assert (=> b!104555 m!115905))

(declare-fun m!115907 () Bool)

(assert (=> b!104555 m!115907))

(assert (=> b!104555 m!115897))

(declare-fun m!115909 () Bool)

(assert (=> b!104555 m!115909))

(declare-fun m!115911 () Bool)

(assert (=> b!104555 m!115911))

(declare-fun m!115913 () Bool)

(assert (=> b!104555 m!115913))

(declare-fun m!115915 () Bool)

(assert (=> b!104555 m!115915))

(assert (=> b!104555 m!114853))

(assert (=> b!104555 m!115907))

(declare-fun m!115917 () Bool)

(assert (=> b!104555 m!115917))

(declare-fun m!115919 () Bool)

(assert (=> b!104555 m!115919))

(assert (=> b!104555 m!115905))

(declare-fun m!115921 () Bool)

(assert (=> b!104555 m!115921))

(assert (=> b!104555 m!115901))

(declare-fun m!115923 () Bool)

(assert (=> b!104555 m!115923))

(declare-fun m!115925 () Bool)

(assert (=> b!104555 m!115925))

(declare-fun m!115927 () Bool)

(assert (=> b!104555 m!115927))

(declare-fun m!115929 () Bool)

(assert (=> bm!10976 m!115929))

(declare-fun m!115931 () Bool)

(assert (=> d!28325 m!115931))

(declare-fun m!115933 () Bool)

(assert (=> b!104553 m!115933))

(assert (=> b!104553 m!114853))

(declare-fun m!115935 () Bool)

(assert (=> b!104553 m!115935))

(declare-fun m!115937 () Bool)

(assert (=> b!104553 m!115937))

(assert (=> b!104553 m!115933))

(declare-fun m!115939 () Bool)

(assert (=> b!104553 m!115939))

(assert (=> b!104553 m!114853))

(assert (=> b!104553 m!115937))

(assert (=> b!104570 m!114853))

(assert (=> b!104570 m!114853))

(declare-fun m!115941 () Bool)

(assert (=> b!104570 m!115941))

(assert (=> b!104557 m!114853))

(assert (=> b!104557 m!114853))

(assert (=> b!104557 m!114863))

(declare-fun m!115943 () Bool)

(assert (=> b!104560 m!115943))

(assert (=> b!104550 m!114853))

(assert (=> b!104550 m!114853))

(assert (=> b!104550 m!114863))

(declare-fun m!115945 () Bool)

(assert (=> bm!10978 m!115945))

(declare-fun m!115947 () Bool)

(assert (=> b!104558 m!115947))

(assert (=> bm!10975 m!115915))

(declare-fun m!115949 () Bool)

(assert (=> b!104561 m!115949))

(assert (=> d!27705 d!28325))

(declare-fun d!28327 () Bool)

(assert (=> d!28327 (= (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!373 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4277 () Bool)

(assert (= bs!4277 d!28327))

(assert (=> bs!4277 m!114349))

(declare-fun m!115951 () Bool)

(assert (=> bs!4277 m!115951))

(assert (=> b!103630 d!28327))

(assert (=> b!103630 d!28065))

(declare-fun d!28329 () Bool)

(assert (=> d!28329 (= (apply!97 lt!52638 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52638) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4278 () Bool)

(assert (= bs!4278 d!28329))

(declare-fun m!115953 () Bool)

(assert (=> bs!4278 m!115953))

(assert (=> bs!4278 m!115953))

(declare-fun m!115955 () Bool)

(assert (=> bs!4278 m!115955))

(assert (=> b!103392 d!28329))

(declare-fun d!28331 () Bool)

(assert (=> d!28331 (arrayContainsKey!0 (_keys!4261 newMap!16) lt!52901 #b00000000000000000000000000000000)))

(declare-fun lt!53328 () Unit!3141)

(assert (=> d!28331 (= lt!53328 (choose!13 (_keys!4261 newMap!16) lt!52901 #b00000000000000000000000000000000))))

(assert (=> d!28331 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!28331 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4261 newMap!16) lt!52901 #b00000000000000000000000000000000) lt!53328)))

(declare-fun bs!4279 () Bool)

(assert (= bs!4279 d!28331))

(assert (=> bs!4279 m!114509))

(declare-fun m!115957 () Bool)

(assert (=> bs!4279 m!115957))

(assert (=> b!103737 d!28331))

(declare-fun d!28333 () Bool)

(declare-fun res!52105 () Bool)

(declare-fun e!68071 () Bool)

(assert (=> d!28333 (=> res!52105 e!68071)))

(assert (=> d!28333 (= res!52105 (= (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) lt!52901))))

(assert (=> d!28333 (= (arrayContainsKey!0 (_keys!4261 newMap!16) lt!52901 #b00000000000000000000000000000000) e!68071)))

(declare-fun b!104571 () Bool)

(declare-fun e!68072 () Bool)

(assert (=> b!104571 (= e!68071 e!68072)))

(declare-fun res!52106 () Bool)

(assert (=> b!104571 (=> (not res!52106) (not e!68072))))

(assert (=> b!104571 (= res!52106 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104572 () Bool)

(assert (=> b!104572 (= e!68072 (arrayContainsKey!0 (_keys!4261 newMap!16) lt!52901 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28333 (not res!52105)) b!104571))

(assert (= (and b!104571 res!52106) b!104572))

(assert (=> d!28333 m!113969))

(declare-fun m!115959 () Bool)

(assert (=> b!104572 m!115959))

(assert (=> b!103737 d!28333))

(declare-fun b!104573 () Bool)

(declare-fun c!18132 () Bool)

(declare-fun lt!53330 () (_ BitVec 64))

(assert (=> b!104573 (= c!18132 (= lt!53330 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68073 () SeekEntryResult!261)

(declare-fun e!68074 () SeekEntryResult!261)

(assert (=> b!104573 (= e!68073 e!68074)))

(declare-fun b!104574 () Bool)

(declare-fun lt!53331 () SeekEntryResult!261)

(assert (=> b!104574 (= e!68073 (Found!261 (index!3193 lt!53331)))))

(declare-fun d!28335 () Bool)

(declare-fun lt!53329 () SeekEntryResult!261)

(assert (=> d!28335 (and (or ((_ is Undefined!261) lt!53329) (not ((_ is Found!261) lt!53329)) (and (bvsge (index!3192 lt!53329) #b00000000000000000000000000000000) (bvslt (index!3192 lt!53329) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!53329) ((_ is Found!261) lt!53329) (not ((_ is MissingZero!261) lt!53329)) (and (bvsge (index!3191 lt!53329) #b00000000000000000000000000000000) (bvslt (index!3191 lt!53329) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!53329) ((_ is Found!261) lt!53329) ((_ is MissingZero!261) lt!53329) (not ((_ is MissingVacant!261) lt!53329)) (and (bvsge (index!3194 lt!53329) #b00000000000000000000000000000000) (bvslt (index!3194 lt!53329) (size!2299 (_keys!4261 newMap!16))))) (or ((_ is Undefined!261) lt!53329) (ite ((_ is Found!261) lt!53329) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!53329)) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!261) lt!53329) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3191 lt!53329)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!261) lt!53329) (= (select (arr!2044 (_keys!4261 newMap!16)) (index!3194 lt!53329)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!68075 () SeekEntryResult!261)

(assert (=> d!28335 (= lt!53329 e!68075)))

(declare-fun c!18131 () Bool)

(assert (=> d!28335 (= c!18131 (and ((_ is Intermediate!261) lt!53331) (undefined!1073 lt!53331)))))

(assert (=> d!28335 (= lt!53331 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (mask!6695 newMap!16)) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(assert (=> d!28335 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28335 (= (seekEntryOrOpen!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (_keys!4261 newMap!16) (mask!6695 newMap!16)) lt!53329)))

(declare-fun b!104575 () Bool)

(assert (=> b!104575 (= e!68075 Undefined!261)))

(declare-fun b!104576 () Bool)

(assert (=> b!104576 (= e!68074 (seekKeyOrZeroReturnVacant!0 (x!13502 lt!53331) (index!3193 lt!53331) (index!3193 lt!53331) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) (_keys!4261 newMap!16) (mask!6695 newMap!16)))))

(declare-fun b!104577 () Bool)

(assert (=> b!104577 (= e!68074 (MissingZero!261 (index!3193 lt!53331)))))

(declare-fun b!104578 () Bool)

(assert (=> b!104578 (= e!68075 e!68073)))

(assert (=> b!104578 (= lt!53330 (select (arr!2044 (_keys!4261 newMap!16)) (index!3193 lt!53331)))))

(declare-fun c!18130 () Bool)

(assert (=> b!104578 (= c!18130 (= lt!53330 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28335 c!18131) b!104575))

(assert (= (and d!28335 (not c!18131)) b!104578))

(assert (= (and b!104578 c!18130) b!104574))

(assert (= (and b!104578 (not c!18130)) b!104573))

(assert (= (and b!104573 c!18132) b!104577))

(assert (= (and b!104573 (not c!18132)) b!104576))

(declare-fun m!115961 () Bool)

(assert (=> d!28335 m!115961))

(declare-fun m!115963 () Bool)

(assert (=> d!28335 m!115963))

(declare-fun m!115965 () Bool)

(assert (=> d!28335 m!115965))

(assert (=> d!28335 m!113969))

(declare-fun m!115967 () Bool)

(assert (=> d!28335 m!115967))

(declare-fun m!115969 () Bool)

(assert (=> d!28335 m!115969))

(assert (=> d!28335 m!113969))

(assert (=> d!28335 m!115965))

(assert (=> d!28335 m!113985))

(assert (=> b!104576 m!113969))

(declare-fun m!115971 () Bool)

(assert (=> b!104576 m!115971))

(declare-fun m!115973 () Bool)

(assert (=> b!104578 m!115973))

(assert (=> b!103737 d!28335))

(declare-fun d!28337 () Bool)

(declare-fun c!18133 () Bool)

(assert (=> d!28337 (= c!18133 ((_ is Nil!1609) (toList!785 lt!52457)))))

(declare-fun e!68076 () (InoxSet tuple2!2372))

(assert (=> d!28337 (= (content!108 (toList!785 lt!52457)) e!68076)))

(declare-fun b!104579 () Bool)

(assert (=> b!104579 (= e!68076 ((as const (Array tuple2!2372 Bool)) false))))

(declare-fun b!104580 () Bool)

(assert (=> b!104580 (= e!68076 ((_ map or) (store ((as const (Array tuple2!2372 Bool)) false) (h!2204 (toList!785 lt!52457)) true) (content!108 (t!5665 (toList!785 lt!52457)))))))

(assert (= (and d!28337 c!18133) b!104579))

(assert (= (and d!28337 (not c!18133)) b!104580))

(declare-fun m!115975 () Bool)

(assert (=> b!104580 m!115975))

(declare-fun m!115977 () Bool)

(assert (=> b!104580 m!115977))

(assert (=> d!27825 d!28337))

(declare-fun b!104584 () Bool)

(declare-fun e!68077 () Bool)

(assert (=> b!104584 (= e!68077 (and (bvsge (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000000) (bvsle (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000011) (bvsge (_vacant!495 (_2!1198 lt!52557)) #b00000000000000000000000000000000)))))

(declare-fun d!28339 () Bool)

(declare-fun res!52108 () Bool)

(assert (=> d!28339 (=> (not res!52108) (not e!68077))))

(assert (=> d!28339 (= res!52108 (validMask!0 (mask!6695 (_2!1198 lt!52557))))))

(assert (=> d!28339 (= (simpleValid!73 (_2!1198 lt!52557)) e!68077)))

(declare-fun b!104583 () Bool)

(declare-fun res!52107 () Bool)

(assert (=> b!104583 (=> (not res!52107) (not e!68077))))

(assert (=> b!104583 (= res!52107 (= (size!2305 (_2!1198 lt!52557)) (bvadd (_size!495 (_2!1198 lt!52557)) (bvsdiv (bvadd (extraKeys!2369 (_2!1198 lt!52557)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!104581 () Bool)

(declare-fun res!52109 () Bool)

(assert (=> b!104581 (=> (not res!52109) (not e!68077))))

(assert (=> b!104581 (= res!52109 (and (= (size!2300 (_values!2543 (_2!1198 lt!52557))) (bvadd (mask!6695 (_2!1198 lt!52557)) #b00000000000000000000000000000001)) (= (size!2299 (_keys!4261 (_2!1198 lt!52557))) (size!2300 (_values!2543 (_2!1198 lt!52557)))) (bvsge (_size!495 (_2!1198 lt!52557)) #b00000000000000000000000000000000) (bvsle (_size!495 (_2!1198 lt!52557)) (bvadd (mask!6695 (_2!1198 lt!52557)) #b00000000000000000000000000000001))))))

(declare-fun b!104582 () Bool)

(declare-fun res!52110 () Bool)

(assert (=> b!104582 (=> (not res!52110) (not e!68077))))

(assert (=> b!104582 (= res!52110 (bvsge (size!2305 (_2!1198 lt!52557)) (_size!495 (_2!1198 lt!52557))))))

(assert (= (and d!28339 res!52108) b!104581))

(assert (= (and b!104581 res!52109) b!104582))

(assert (= (and b!104582 res!52110) b!104583))

(assert (= (and b!104583 res!52107) b!104584))

(assert (=> d!28339 m!115931))

(declare-fun m!115979 () Bool)

(assert (=> b!104583 m!115979))

(assert (=> b!104582 m!115979))

(assert (=> d!27689 d!28339))

(declare-fun d!28341 () Bool)

(declare-fun e!68079 () Bool)

(assert (=> d!28341 e!68079))

(declare-fun res!52111 () Bool)

(assert (=> d!28341 (=> res!52111 e!68079)))

(declare-fun lt!53334 () Bool)

(assert (=> d!28341 (= res!52111 (not lt!53334))))

(declare-fun lt!53333 () Bool)

(assert (=> d!28341 (= lt!53334 lt!53333)))

(declare-fun lt!53335 () Unit!3141)

(declare-fun e!68078 () Unit!3141)

(assert (=> d!28341 (= lt!53335 e!68078)))

(declare-fun c!18134 () Bool)

(assert (=> d!28341 (= c!18134 lt!53333)))

(assert (=> d!28341 (= lt!53333 (containsKey!157 (toList!785 lt!52894) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28341 (= (contains!816 lt!52894 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53334)))

(declare-fun b!104585 () Bool)

(declare-fun lt!53332 () Unit!3141)

(assert (=> b!104585 (= e!68078 lt!53332)))

(assert (=> b!104585 (= lt!53332 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52894) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> b!104585 (isDefined!107 (getValueByKey!153 (toList!785 lt!52894) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104586 () Bool)

(declare-fun Unit!3197 () Unit!3141)

(assert (=> b!104586 (= e!68078 Unit!3197)))

(declare-fun b!104587 () Bool)

(assert (=> b!104587 (= e!68079 (isDefined!107 (getValueByKey!153 (toList!785 lt!52894) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!28341 c!18134) b!104585))

(assert (= (and d!28341 (not c!18134)) b!104586))

(assert (= (and d!28341 (not res!52111)) b!104587))

(declare-fun m!115981 () Bool)

(assert (=> d!28341 m!115981))

(declare-fun m!115983 () Bool)

(assert (=> b!104585 m!115983))

(assert (=> b!104585 m!114503))

(assert (=> b!104585 m!114503))

(declare-fun m!115985 () Bool)

(assert (=> b!104585 m!115985))

(assert (=> b!104587 m!114503))

(assert (=> b!104587 m!114503))

(assert (=> b!104587 m!115985))

(assert (=> d!27813 d!28341))

(declare-fun b!104590 () Bool)

(declare-fun e!68081 () Option!159)

(assert (=> b!104590 (= e!68081 (getValueByKey!153 (t!5665 lt!52892) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104588 () Bool)

(declare-fun e!68080 () Option!159)

(assert (=> b!104588 (= e!68080 (Some!158 (_2!1197 (h!2204 lt!52892))))))

(declare-fun d!28343 () Bool)

(declare-fun c!18135 () Bool)

(assert (=> d!28343 (= c!18135 (and ((_ is Cons!1608) lt!52892) (= (_1!1197 (h!2204 lt!52892)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28343 (= (getValueByKey!153 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) e!68080)))

(declare-fun b!104589 () Bool)

(assert (=> b!104589 (= e!68080 e!68081)))

(declare-fun c!18136 () Bool)

(assert (=> b!104589 (= c!18136 (and ((_ is Cons!1608) lt!52892) (not (= (_1!1197 (h!2204 lt!52892)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!104591 () Bool)

(assert (=> b!104591 (= e!68081 None!157)))

(assert (= (and d!28343 c!18135) b!104588))

(assert (= (and d!28343 (not c!18135)) b!104589))

(assert (= (and b!104589 c!18136) b!104590))

(assert (= (and b!104589 (not c!18136)) b!104591))

(declare-fun m!115987 () Bool)

(assert (=> b!104590 m!115987))

(assert (=> d!27813 d!28343))

(declare-fun d!28345 () Bool)

(assert (=> d!28345 (= (getValueByKey!153 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!53336 () Unit!3141)

(assert (=> d!28345 (= lt!53336 (choose!649 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun e!68082 () Bool)

(assert (=> d!28345 e!68082))

(declare-fun res!52112 () Bool)

(assert (=> d!28345 (=> (not res!52112) (not e!68082))))

(assert (=> d!28345 (= res!52112 (isStrictlySorted!303 lt!52892))))

(assert (=> d!28345 (= (lemmaContainsTupThenGetReturnValue!72 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53336)))

(declare-fun b!104592 () Bool)

(declare-fun res!52113 () Bool)

(assert (=> b!104592 (=> (not res!52113) (not e!68082))))

(assert (=> b!104592 (= res!52113 (containsKey!157 lt!52892 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104593 () Bool)

(assert (=> b!104593 (= e!68082 (contains!819 lt!52892 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!28345 res!52112) b!104592))

(assert (= (and b!104592 res!52113) b!104593))

(assert (=> d!28345 m!114497))

(declare-fun m!115989 () Bool)

(assert (=> d!28345 m!115989))

(declare-fun m!115991 () Bool)

(assert (=> d!28345 m!115991))

(declare-fun m!115993 () Bool)

(assert (=> b!104592 m!115993))

(declare-fun m!115995 () Bool)

(assert (=> b!104593 m!115995))

(assert (=> d!27813 d!28345))

(declare-fun b!104594 () Bool)

(declare-fun e!68084 () List!1612)

(declare-fun call!10987 () List!1612)

(assert (=> b!104594 (= e!68084 call!10987)))

(declare-fun b!104595 () Bool)

(declare-fun e!68085 () List!1612)

(assert (=> b!104595 (= e!68085 (insertStrictlySorted!75 (t!5665 (toList!785 call!10807)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104596 () Bool)

(declare-fun res!52114 () Bool)

(declare-fun e!68087 () Bool)

(assert (=> b!104596 (=> (not res!52114) (not e!68087))))

(declare-fun lt!53337 () List!1612)

(assert (=> b!104596 (= res!52114 (containsKey!157 lt!53337 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun bm!10982 () Bool)

(declare-fun call!10985 () List!1612)

(assert (=> bm!10982 (= call!10985 call!10987)))

(declare-fun b!104597 () Bool)

(declare-fun e!68083 () List!1612)

(assert (=> b!104597 (= e!68083 call!10985)))

(declare-fun c!18137 () Bool)

(declare-fun c!18139 () Bool)

(declare-fun b!104598 () Bool)

(assert (=> b!104598 (= e!68085 (ite c!18139 (t!5665 (toList!785 call!10807)) (ite c!18137 (Cons!1608 (h!2204 (toList!785 call!10807)) (t!5665 (toList!785 call!10807))) Nil!1609)))))

(declare-fun d!28347 () Bool)

(assert (=> d!28347 e!68087))

(declare-fun res!52115 () Bool)

(assert (=> d!28347 (=> (not res!52115) (not e!68087))))

(assert (=> d!28347 (= res!52115 (isStrictlySorted!303 lt!53337))))

(declare-fun e!68086 () List!1612)

(assert (=> d!28347 (= lt!53337 e!68086)))

(declare-fun c!18140 () Bool)

(assert (=> d!28347 (= c!18140 (and ((_ is Cons!1608) (toList!785 call!10807)) (bvslt (_1!1197 (h!2204 (toList!785 call!10807))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28347 (isStrictlySorted!303 (toList!785 call!10807))))

(assert (=> d!28347 (= (insertStrictlySorted!75 (toList!785 call!10807) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53337)))

(declare-fun b!104599 () Bool)

(assert (=> b!104599 (= c!18137 (and ((_ is Cons!1608) (toList!785 call!10807)) (bvsgt (_1!1197 (h!2204 (toList!785 call!10807))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> b!104599 (= e!68084 e!68083)))

(declare-fun call!10986 () List!1612)

(declare-fun bm!10983 () Bool)

(assert (=> bm!10983 (= call!10986 ($colon$colon!79 e!68085 (ite c!18140 (h!2204 (toList!785 call!10807)) (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun c!18138 () Bool)

(assert (=> bm!10983 (= c!18138 c!18140)))

(declare-fun b!104600 () Bool)

(assert (=> b!104600 (= e!68087 (contains!819 lt!53337 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104601 () Bool)

(assert (=> b!104601 (= e!68086 call!10986)))

(declare-fun bm!10984 () Bool)

(assert (=> bm!10984 (= call!10987 call!10986)))

(declare-fun b!104602 () Bool)

(assert (=> b!104602 (= e!68083 call!10985)))

(declare-fun b!104603 () Bool)

(assert (=> b!104603 (= e!68086 e!68084)))

(assert (=> b!104603 (= c!18139 (and ((_ is Cons!1608) (toList!785 call!10807)) (= (_1!1197 (h!2204 (toList!785 call!10807))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!28347 c!18140) b!104601))

(assert (= (and d!28347 (not c!18140)) b!104603))

(assert (= (and b!104603 c!18139) b!104594))

(assert (= (and b!104603 (not c!18139)) b!104599))

(assert (= (and b!104599 c!18137) b!104602))

(assert (= (and b!104599 (not c!18137)) b!104597))

(assert (= (or b!104602 b!104597) bm!10982))

(assert (= (or b!104594 bm!10982) bm!10984))

(assert (= (or b!104601 bm!10984) bm!10983))

(assert (= (and bm!10983 c!18138) b!104595))

(assert (= (and bm!10983 (not c!18138)) b!104598))

(assert (= (and d!28347 res!52115) b!104596))

(assert (= (and b!104596 res!52114) b!104600))

(declare-fun m!115997 () Bool)

(assert (=> b!104600 m!115997))

(declare-fun m!115999 () Bool)

(assert (=> d!28347 m!115999))

(declare-fun m!116001 () Bool)

(assert (=> d!28347 m!116001))

(declare-fun m!116003 () Bool)

(assert (=> b!104596 m!116003))

(declare-fun m!116005 () Bool)

(assert (=> b!104595 m!116005))

(declare-fun m!116007 () Bool)

(assert (=> bm!10983 m!116007))

(assert (=> d!27813 d!28347))

(declare-fun d!28349 () Bool)

(declare-fun c!18141 () Bool)

(assert (=> d!28349 (= c!18141 ((_ is Nil!1609) (toList!785 lt!52453)))))

(declare-fun e!68088 () (InoxSet tuple2!2372))

(assert (=> d!28349 (= (content!108 (toList!785 lt!52453)) e!68088)))

(declare-fun b!104604 () Bool)

(assert (=> b!104604 (= e!68088 ((as const (Array tuple2!2372 Bool)) false))))

(declare-fun b!104605 () Bool)

(assert (=> b!104605 (= e!68088 ((_ map or) (store ((as const (Array tuple2!2372 Bool)) false) (h!2204 (toList!785 lt!52453)) true) (content!108 (t!5665 (toList!785 lt!52453)))))))

(assert (= (and d!28349 c!18141) b!104604))

(assert (= (and d!28349 (not c!18141)) b!104605))

(declare-fun m!116009 () Bool)

(assert (=> b!104605 m!116009))

(declare-fun m!116011 () Bool)

(assert (=> b!104605 m!116011))

(assert (=> d!27827 d!28349))

(declare-fun bm!10985 () Bool)

(declare-fun c!18142 () Bool)

(declare-fun call!10988 () Bool)

(assert (=> bm!10985 (= call!10988 (arrayNoDuplicates!0 (_keys!4261 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18142 (Cons!1609 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!17798 (Cons!1609 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) Nil!1610) Nil!1610)) (ite c!17798 (Cons!1609 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) Nil!1610) Nil!1610))))))

(declare-fun b!104606 () Bool)

(declare-fun e!68091 () Bool)

(declare-fun e!68092 () Bool)

(assert (=> b!104606 (= e!68091 e!68092)))

(assert (=> b!104606 (= c!18142 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104607 () Bool)

(assert (=> b!104607 (= e!68092 call!10988)))

(declare-fun d!28351 () Bool)

(declare-fun res!52117 () Bool)

(declare-fun e!68090 () Bool)

(assert (=> d!28351 (=> res!52117 e!68090)))

(assert (=> d!28351 (= res!52117 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28351 (= (arrayNoDuplicates!0 (_keys!4261 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17798 (Cons!1609 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) Nil!1610) Nil!1610)) e!68090)))

(declare-fun b!104608 () Bool)

(assert (=> b!104608 (= e!68090 e!68091)))

(declare-fun res!52118 () Bool)

(assert (=> b!104608 (=> (not res!52118) (not e!68091))))

(declare-fun e!68089 () Bool)

(assert (=> b!104608 (= res!52118 (not e!68089))))

(declare-fun res!52116 () Bool)

(assert (=> b!104608 (=> (not res!52116) (not e!68089))))

(assert (=> b!104608 (= res!52116 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104609 () Bool)

(assert (=> b!104609 (= e!68092 call!10988)))

(declare-fun b!104610 () Bool)

(assert (=> b!104610 (= e!68089 (contains!818 (ite c!17798 (Cons!1609 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000) Nil!1610) Nil!1610) (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!28351 (not res!52117)) b!104608))

(assert (= (and b!104608 res!52116) b!104610))

(assert (= (and b!104608 res!52118) b!104606))

(assert (= (and b!104606 c!18142) b!104607))

(assert (= (and b!104606 (not c!18142)) b!104609))

(assert (= (or b!104607 b!104609) bm!10985))

(assert (=> bm!10985 m!115617))

(declare-fun m!116013 () Bool)

(assert (=> bm!10985 m!116013))

(assert (=> b!104606 m!115617))

(assert (=> b!104606 m!115617))

(assert (=> b!104606 m!115627))

(assert (=> b!104608 m!115617))

(assert (=> b!104608 m!115617))

(assert (=> b!104608 m!115627))

(assert (=> b!104610 m!115617))

(assert (=> b!104610 m!115617))

(declare-fun m!116015 () Bool)

(assert (=> b!104610 m!116015))

(assert (=> bm!10847 d!28351))

(declare-fun d!28353 () Bool)

(declare-fun lt!53338 () Bool)

(assert (=> d!28353 (= lt!53338 (select (content!107 (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!68093 () Bool)

(assert (=> d!28353 (= lt!53338 e!68093)))

(declare-fun res!52120 () Bool)

(assert (=> d!28353 (=> (not res!52120) (not e!68093))))

(assert (=> d!28353 (= res!52120 ((_ is Cons!1609) (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)))))

(assert (=> d!28353 (= (contains!818 (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!53338)))

(declare-fun b!104611 () Bool)

(declare-fun e!68094 () Bool)

(assert (=> b!104611 (= e!68093 e!68094)))

(declare-fun res!52119 () Bool)

(assert (=> b!104611 (=> res!52119 e!68094)))

(assert (=> b!104611 (= res!52119 (= (h!2205 (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104612 () Bool)

(assert (=> b!104612 (= e!68094 (contains!818 (t!5666 (ite c!17709 (Cons!1609 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) Nil!1610) Nil!1610)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!28353 res!52120) b!104611))

(assert (= (and b!104611 (not res!52119)) b!104612))

(declare-fun m!116017 () Bool)

(assert (=> d!28353 m!116017))

(assert (=> d!28353 m!114741))

(declare-fun m!116019 () Bool)

(assert (=> d!28353 m!116019))

(assert (=> b!104612 m!114741))

(declare-fun m!116021 () Bool)

(assert (=> b!104612 m!116021))

(assert (=> b!103846 d!28353))

(declare-fun d!28355 () Bool)

(declare-fun res!52121 () Bool)

(declare-fun e!68095 () Bool)

(assert (=> d!28355 (=> res!52121 e!68095)))

(assert (=> d!28355 (= res!52121 (and ((_ is Cons!1608) (toList!785 call!10800)) (= (_1!1197 (h!2204 (toList!785 call!10800))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!28355 (= (containsKey!157 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!68095)))

(declare-fun b!104613 () Bool)

(declare-fun e!68096 () Bool)

(assert (=> b!104613 (= e!68095 e!68096)))

(declare-fun res!52122 () Bool)

(assert (=> b!104613 (=> (not res!52122) (not e!68096))))

(assert (=> b!104613 (= res!52122 (and (or (not ((_ is Cons!1608) (toList!785 call!10800))) (bvsle (_1!1197 (h!2204 (toList!785 call!10800))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) ((_ is Cons!1608) (toList!785 call!10800)) (bvslt (_1!1197 (h!2204 (toList!785 call!10800))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(declare-fun b!104614 () Bool)

(assert (=> b!104614 (= e!68096 (containsKey!157 (t!5665 (toList!785 call!10800)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!28355 (not res!52121)) b!104613))

(assert (= (and b!104613 res!52122) b!104614))

(assert (=> b!104614 m!113535))

(declare-fun m!116023 () Bool)

(assert (=> b!104614 m!116023))

(assert (=> d!27691 d!28355))

(declare-fun d!28357 () Bool)

(declare-fun res!52123 () Bool)

(declare-fun e!68097 () Bool)

(assert (=> d!28357 (=> res!52123 e!68097)))

(assert (=> d!28357 (= res!52123 (and ((_ is Cons!1608) (toList!785 lt!52449)) (= (_1!1197 (h!2204 (toList!785 lt!52449))) (_1!1197 lt!52325))))))

(assert (=> d!28357 (= (containsKey!157 (toList!785 lt!52449) (_1!1197 lt!52325)) e!68097)))

(declare-fun b!104615 () Bool)

(declare-fun e!68098 () Bool)

(assert (=> b!104615 (= e!68097 e!68098)))

(declare-fun res!52124 () Bool)

(assert (=> b!104615 (=> (not res!52124) (not e!68098))))

(assert (=> b!104615 (= res!52124 (and (or (not ((_ is Cons!1608) (toList!785 lt!52449))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52449))) (_1!1197 lt!52325))) ((_ is Cons!1608) (toList!785 lt!52449)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52449))) (_1!1197 lt!52325))))))

(declare-fun b!104616 () Bool)

(assert (=> b!104616 (= e!68098 (containsKey!157 (t!5665 (toList!785 lt!52449)) (_1!1197 lt!52325)))))

(assert (= (and d!28357 (not res!52123)) b!104615))

(assert (= (and b!104615 res!52124) b!104616))

(declare-fun m!116025 () Bool)

(assert (=> b!104616 m!116025))

(assert (=> d!27879 d!28357))

(declare-fun d!28359 () Bool)

(declare-fun e!68100 () Bool)

(assert (=> d!28359 e!68100))

(declare-fun res!52125 () Bool)

(assert (=> d!28359 (=> res!52125 e!68100)))

(declare-fun lt!53341 () Bool)

(assert (=> d!28359 (= res!52125 (not lt!53341))))

(declare-fun lt!53340 () Bool)

(assert (=> d!28359 (= lt!53341 lt!53340)))

(declare-fun lt!53342 () Unit!3141)

(declare-fun e!68099 () Unit!3141)

(assert (=> d!28359 (= lt!53342 e!68099)))

(declare-fun c!18143 () Bool)

(assert (=> d!28359 (= c!18143 lt!53340)))

(assert (=> d!28359 (= lt!53340 (containsKey!157 (toList!785 lt!52863) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!28359 (= (contains!816 lt!52863 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!53341)))

(declare-fun b!104617 () Bool)

(declare-fun lt!53339 () Unit!3141)

(assert (=> b!104617 (= e!68099 lt!53339)))

(assert (=> b!104617 (= lt!53339 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52863) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!104617 (isDefined!107 (getValueByKey!153 (toList!785 lt!52863) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104618 () Bool)

(declare-fun Unit!3198 () Unit!3141)

(assert (=> b!104618 (= e!68099 Unit!3198)))

(declare-fun b!104619 () Bool)

(assert (=> b!104619 (= e!68100 (isDefined!107 (getValueByKey!153 (toList!785 lt!52863) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!28359 c!18143) b!104617))

(assert (= (and d!28359 (not c!18143)) b!104618))

(assert (= (and d!28359 (not res!52125)) b!104619))

(assert (=> d!28359 m!114313))

(declare-fun m!116027 () Bool)

(assert (=> d!28359 m!116027))

(assert (=> b!104617 m!114313))

(declare-fun m!116029 () Bool)

(assert (=> b!104617 m!116029))

(assert (=> b!104617 m!114313))

(assert (=> b!104617 m!115373))

(assert (=> b!104617 m!115373))

(declare-fun m!116031 () Bool)

(assert (=> b!104617 m!116031))

(assert (=> b!104619 m!114313))

(assert (=> b!104619 m!115373))

(assert (=> b!104619 m!115373))

(assert (=> b!104619 m!116031))

(assert (=> b!103690 d!28359))

(declare-fun d!28361 () Bool)

(declare-fun res!52126 () Bool)

(declare-fun e!68101 () Bool)

(assert (=> d!28361 (=> res!52126 e!68101)))

(assert (=> d!28361 (= res!52126 (and ((_ is Cons!1608) lt!52755) (= (_1!1197 (h!2204 lt!52755)) (_1!1197 lt!52331))))))

(assert (=> d!28361 (= (containsKey!157 lt!52755 (_1!1197 lt!52331)) e!68101)))

(declare-fun b!104620 () Bool)

(declare-fun e!68102 () Bool)

(assert (=> b!104620 (= e!68101 e!68102)))

(declare-fun res!52127 () Bool)

(assert (=> b!104620 (=> (not res!52127) (not e!68102))))

(assert (=> b!104620 (= res!52127 (and (or (not ((_ is Cons!1608) lt!52755)) (bvsle (_1!1197 (h!2204 lt!52755)) (_1!1197 lt!52331))) ((_ is Cons!1608) lt!52755) (bvslt (_1!1197 (h!2204 lt!52755)) (_1!1197 lt!52331))))))

(declare-fun b!104621 () Bool)

(assert (=> b!104621 (= e!68102 (containsKey!157 (t!5665 lt!52755) (_1!1197 lt!52331)))))

(assert (= (and d!28361 (not res!52126)) b!104620))

(assert (= (and b!104620 res!52127) b!104621))

(declare-fun m!116033 () Bool)

(assert (=> b!104621 m!116033))

(assert (=> b!103593 d!28361))

(assert (=> d!27757 d!27739))

(assert (=> d!27757 d!27741))

(declare-fun d!28363 () Bool)

(assert (=> d!28363 (isDefined!107 (getValueByKey!153 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28363 true))

(declare-fun _$12!350 () Unit!3141)

(assert (=> d!28363 (= (choose!650 (toList!785 lt!52327) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) _$12!350)))

(declare-fun bs!4280 () Bool)

(assert (= bs!4280 d!28363))

(assert (=> bs!4280 m!113535))

(assert (=> bs!4280 m!113815))

(assert (=> bs!4280 m!113815))

(assert (=> bs!4280 m!113817))

(assert (=> d!27757 d!28363))

(declare-fun d!28365 () Bool)

(declare-fun res!52128 () Bool)

(declare-fun e!68103 () Bool)

(assert (=> d!28365 (=> res!52128 e!68103)))

(assert (=> d!28365 (= res!52128 (or ((_ is Nil!1609) (toList!785 lt!52327)) ((_ is Nil!1609) (t!5665 (toList!785 lt!52327)))))))

(assert (=> d!28365 (= (isStrictlySorted!303 (toList!785 lt!52327)) e!68103)))

(declare-fun b!104622 () Bool)

(declare-fun e!68104 () Bool)

(assert (=> b!104622 (= e!68103 e!68104)))

(declare-fun res!52129 () Bool)

(assert (=> b!104622 (=> (not res!52129) (not e!68104))))

(assert (=> b!104622 (= res!52129 (bvslt (_1!1197 (h!2204 (toList!785 lt!52327))) (_1!1197 (h!2204 (t!5665 (toList!785 lt!52327))))))))

(declare-fun b!104623 () Bool)

(assert (=> b!104623 (= e!68104 (isStrictlySorted!303 (t!5665 (toList!785 lt!52327))))))

(assert (= (and d!28365 (not res!52128)) b!104622))

(assert (= (and b!104622 res!52129) b!104623))

(declare-fun m!116035 () Bool)

(assert (=> b!104623 m!116035))

(assert (=> d!27757 d!28365))

(declare-fun d!28367 () Bool)

(declare-fun lt!53343 () Bool)

(assert (=> d!28367 (= lt!53343 (select (content!108 (toList!785 lt!52685)) (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun e!68105 () Bool)

(assert (=> d!28367 (= lt!53343 e!68105)))

(declare-fun res!52130 () Bool)

(assert (=> d!28367 (=> (not res!52130) (not e!68105))))

(assert (=> d!28367 (= res!52130 ((_ is Cons!1608) (toList!785 lt!52685)))))

(assert (=> d!28367 (= (contains!819 (toList!785 lt!52685) (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53343)))

(declare-fun b!104624 () Bool)

(declare-fun e!68106 () Bool)

(assert (=> b!104624 (= e!68105 e!68106)))

(declare-fun res!52131 () Bool)

(assert (=> b!104624 (=> res!52131 e!68106)))

(assert (=> b!104624 (= res!52131 (= (h!2204 (toList!785 lt!52685)) (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104625 () Bool)

(assert (=> b!104625 (= e!68106 (contains!819 (t!5665 (toList!785 lt!52685)) (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (= (and d!28367 res!52130) b!104624))

(assert (= (and b!104624 (not res!52131)) b!104625))

(declare-fun m!116037 () Bool)

(assert (=> d!28367 m!116037))

(declare-fun m!116039 () Bool)

(assert (=> d!28367 m!116039))

(declare-fun m!116041 () Bool)

(assert (=> b!104625 m!116041))

(assert (=> b!103465 d!28367))

(declare-fun b!104626 () Bool)

(declare-fun e!68108 () List!1612)

(declare-fun call!10991 () List!1612)

(assert (=> b!104626 (= e!68108 call!10991)))

(declare-fun e!68109 () List!1612)

(declare-fun b!104627 () Bool)

(assert (=> b!104627 (= e!68109 (insertStrictlySorted!75 (t!5665 (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(declare-fun b!104628 () Bool)

(declare-fun res!52132 () Bool)

(declare-fun e!68111 () Bool)

(assert (=> b!104628 (=> (not res!52132) (not e!68111))))

(declare-fun lt!53344 () List!1612)

(assert (=> b!104628 (= res!52132 (containsKey!157 lt!53344 (_1!1197 lt!52331)))))

(declare-fun bm!10986 () Bool)

(declare-fun call!10989 () List!1612)

(assert (=> bm!10986 (= call!10989 call!10991)))

(declare-fun b!104629 () Bool)

(declare-fun e!68107 () List!1612)

(assert (=> b!104629 (= e!68107 call!10989)))

(declare-fun c!18144 () Bool)

(declare-fun b!104630 () Bool)

(declare-fun c!18146 () Bool)

(assert (=> b!104630 (= e!68109 (ite c!18146 (t!5665 (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (ite c!18144 (Cons!1608 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (t!5665 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))))) Nil!1609)))))

(declare-fun d!28369 () Bool)

(assert (=> d!28369 e!68111))

(declare-fun res!52133 () Bool)

(assert (=> d!28369 (=> (not res!52133) (not e!68111))))

(assert (=> d!28369 (= res!52133 (isStrictlySorted!303 lt!53344))))

(declare-fun e!68110 () List!1612)

(assert (=> d!28369 (= lt!53344 e!68110)))

(declare-fun c!18147 () Bool)

(assert (=> d!28369 (= c!18147 (and ((_ is Cons!1608) (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (bvslt (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))))) (_1!1197 lt!52331))))))

(assert (=> d!28369 (isStrictlySorted!303 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))))))

(assert (=> d!28369 (= (insertStrictlySorted!75 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))) (_1!1197 lt!52331) (_2!1197 lt!52331)) lt!53344)))

(declare-fun b!104631 () Bool)

(assert (=> b!104631 (= c!18144 (and ((_ is Cons!1608) (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (bvsgt (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))))) (_1!1197 lt!52331))))))

(assert (=> b!104631 (= e!68108 e!68107)))

(declare-fun call!10990 () List!1612)

(declare-fun bm!10987 () Bool)

(assert (=> bm!10987 (= call!10990 ($colon$colon!79 e!68109 (ite c!18147 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331)))))))

(declare-fun c!18145 () Bool)

(assert (=> bm!10987 (= c!18145 c!18147)))

(declare-fun b!104632 () Bool)

(assert (=> b!104632 (= e!68111 (contains!819 lt!53344 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!104633 () Bool)

(assert (=> b!104633 (= e!68110 call!10990)))

(declare-fun bm!10988 () Bool)

(assert (=> bm!10988 (= call!10991 call!10990)))

(declare-fun b!104634 () Bool)

(assert (=> b!104634 (= e!68107 call!10989)))

(declare-fun b!104635 () Bool)

(assert (=> b!104635 (= e!68110 e!68108)))

(assert (=> b!104635 (= c!18146 (and ((_ is Cons!1608) (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))) (= (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52325))))) (_1!1197 lt!52331))))))

(assert (= (and d!28369 c!18147) b!104633))

(assert (= (and d!28369 (not c!18147)) b!104635))

(assert (= (and b!104635 c!18146) b!104626))

(assert (= (and b!104635 (not c!18146)) b!104631))

(assert (= (and b!104631 c!18144) b!104634))

(assert (= (and b!104631 (not c!18144)) b!104629))

(assert (= (or b!104634 b!104629) bm!10986))

(assert (= (or b!104626 bm!10986) bm!10988))

(assert (= (or b!104633 bm!10988) bm!10987))

(assert (= (and bm!10987 c!18145) b!104627))

(assert (= (and bm!10987 (not c!18145)) b!104630))

(assert (= (and d!28369 res!52133) b!104628))

(assert (= (and b!104628 res!52132) b!104632))

(declare-fun m!116043 () Bool)

(assert (=> b!104632 m!116043))

(declare-fun m!116045 () Bool)

(assert (=> d!28369 m!116045))

(declare-fun m!116047 () Bool)

(assert (=> d!28369 m!116047))

(declare-fun m!116049 () Bool)

(assert (=> b!104628 m!116049))

(declare-fun m!116051 () Bool)

(assert (=> b!104627 m!116051))

(declare-fun m!116053 () Bool)

(assert (=> bm!10987 m!116053))

(assert (=> b!103542 d!28369))

(declare-fun d!28371 () Bool)

(declare-fun lt!53345 () Bool)

(assert (=> d!28371 (= lt!53345 (select (content!108 (toList!785 lt!52958)) (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!68112 () Bool)

(assert (=> d!28371 (= lt!53345 e!68112)))

(declare-fun res!52134 () Bool)

(assert (=> d!28371 (=> (not res!52134) (not e!68112))))

(assert (=> d!28371 (= res!52134 ((_ is Cons!1608) (toList!785 lt!52958)))))

(assert (=> d!28371 (= (contains!819 (toList!785 lt!52958) (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!53345)))

(declare-fun b!104636 () Bool)

(declare-fun e!68113 () Bool)

(assert (=> b!104636 (= e!68112 e!68113)))

(declare-fun res!52135 () Bool)

(assert (=> b!104636 (=> res!52135 e!68113)))

(assert (=> b!104636 (= res!52135 (= (h!2204 (toList!785 lt!52958)) (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104637 () Bool)

(assert (=> b!104637 (= e!68113 (contains!819 (t!5665 (toList!785 lt!52958)) (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!28371 res!52134) b!104636))

(assert (= (and b!104636 (not res!52135)) b!104637))

(declare-fun m!116055 () Bool)

(assert (=> d!28371 m!116055))

(declare-fun m!116057 () Bool)

(assert (=> d!28371 m!116057))

(declare-fun m!116059 () Bool)

(assert (=> b!104637 m!116059))

(assert (=> b!103808 d!28371))

(declare-fun d!28373 () Bool)

(assert (=> d!28373 (= (isDefined!107 (getValueByKey!153 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))) (not (isEmpty!373 (getValueByKey!153 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun bs!4281 () Bool)

(assert (= bs!4281 d!28373))

(assert (=> bs!4281 m!114523))

(declare-fun m!116061 () Bool)

(assert (=> bs!4281 m!116061))

(assert (=> b!103743 d!28373))

(declare-fun b!104640 () Bool)

(declare-fun e!68115 () Option!159)

(assert (=> b!104640 (= e!68115 (getValueByKey!153 (t!5665 (toList!785 e!67286)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!104638 () Bool)

(declare-fun e!68114 () Option!159)

(assert (=> b!104638 (= e!68114 (Some!158 (_2!1197 (h!2204 (toList!785 e!67286)))))))

(declare-fun c!18148 () Bool)

(declare-fun d!28375 () Bool)

(assert (=> d!28375 (= c!18148 (and ((_ is Cons!1608) (toList!785 e!67286)) (= (_1!1197 (h!2204 (toList!785 e!67286))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (=> d!28375 (= (getValueByKey!153 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) e!68114)))

(declare-fun b!104639 () Bool)

(assert (=> b!104639 (= e!68114 e!68115)))

(declare-fun c!18149 () Bool)

(assert (=> b!104639 (= c!18149 (and ((_ is Cons!1608) (toList!785 e!67286)) (not (= (_1!1197 (h!2204 (toList!785 e!67286))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))))

(declare-fun b!104641 () Bool)

(assert (=> b!104641 (= e!68115 None!157)))

(assert (= (and d!28375 c!18148) b!104638))

(assert (= (and d!28375 (not c!18148)) b!104639))

(assert (= (and b!104639 c!18149) b!104640))

(assert (= (and b!104639 (not c!18149)) b!104641))

(assert (=> b!104640 m!113535))

(declare-fun m!116063 () Bool)

(assert (=> b!104640 m!116063))

(assert (=> b!103743 d!28375))

(declare-fun d!28377 () Bool)

(assert (=> d!28377 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))

(declare-fun lt!53346 () Unit!3141)

(assert (=> d!28377 (= lt!53346 (choose!650 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))

(declare-fun e!68116 () Bool)

(assert (=> d!28377 e!68116))

(declare-fun res!52136 () Bool)

(assert (=> d!28377 (=> (not res!52136) (not e!68116))))

(assert (=> d!28377 (= res!52136 (isStrictlySorted!303 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))))))

(assert (=> d!28377 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437) lt!53346)))

(declare-fun b!104642 () Bool)

(assert (=> b!104642 (= e!68116 (containsKey!157 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437))))

(assert (= (and d!28377 res!52136) b!104642))

(assert (=> d!28377 m!114031))

(assert (=> d!28377 m!114031))

(assert (=> d!28377 m!114033))

(declare-fun m!116065 () Bool)

(assert (=> d!28377 m!116065))

(declare-fun m!116067 () Bool)

(assert (=> d!28377 m!116067))

(assert (=> b!104642 m!114027))

(assert (=> b!103411 d!28377))

(assert (=> b!103411 d!28195))

(assert (=> b!103411 d!28197))

(declare-fun d!28379 () Bool)

(assert (=> d!28379 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28379 true))

(declare-fun _$8!91 () Unit!3141)

(assert (=> d!28379 (= (choose!652 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) lt!52534 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52329 (defaultEntry!2560 newMap!16)) _$8!91)))

(declare-fun bs!4282 () Bool)

(assert (= bs!4282 d!28379))

(assert (=> bs!4282 m!113847))

(assert (=> bs!4282 m!113847))

(assert (=> bs!4282 m!114567))

(assert (=> bs!4282 m!114569))

(assert (=> d!27835 d!28379))

(declare-fun d!28381 () Bool)

(declare-fun e!68117 () Bool)

(assert (=> d!28381 e!68117))

(declare-fun res!52138 () Bool)

(assert (=> d!28381 (=> (not res!52138) (not e!68117))))

(declare-fun lt!53350 () ListLongMap!1539)

(assert (=> d!28381 (= res!52138 (contains!816 lt!53350 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(declare-fun lt!53348 () List!1612)

(assert (=> d!28381 (= lt!53350 (ListLongMap!1540 lt!53348))))

(declare-fun lt!53347 () Unit!3141)

(declare-fun lt!53349 () Unit!3141)

(assert (=> d!28381 (= lt!53347 lt!53349)))

(assert (=> d!28381 (= (getValueByKey!153 lt!53348 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(assert (=> d!28381 (= lt!53349 (lemmaContainsTupThenGetReturnValue!72 lt!53348 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(assert (=> d!28381 (= lt!53348 (insertStrictlySorted!75 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(assert (=> d!28381 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) lt!53350)))

(declare-fun b!104643 () Bool)

(declare-fun res!52137 () Bool)

(assert (=> b!104643 (=> (not res!52137) (not e!68117))))

(assert (=> b!104643 (= res!52137 (= (getValueByKey!153 (toList!785 lt!53350) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)))))))

(declare-fun b!104644 () Bool)

(assert (=> b!104644 (= e!68117 (contains!819 (toList!785 lt!53350) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)))))

(assert (= (and d!28381 res!52138) b!104643))

(assert (= (and b!104643 res!52137) b!104644))

(declare-fun m!116069 () Bool)

(assert (=> d!28381 m!116069))

(declare-fun m!116071 () Bool)

(assert (=> d!28381 m!116071))

(declare-fun m!116073 () Bool)

(assert (=> d!28381 m!116073))

(declare-fun m!116075 () Bool)

(assert (=> d!28381 m!116075))

(declare-fun m!116077 () Bool)

(assert (=> b!104643 m!116077))

(declare-fun m!116079 () Bool)

(assert (=> b!104644 m!116079))

(assert (=> d!27835 d!28381))

(assert (=> d!27835 d!27693))

(assert (=> d!27835 d!27973))

(declare-fun b!104645 () Bool)

(declare-fun e!68130 () Bool)

(assert (=> b!104645 (= e!68130 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104646 () Bool)

(declare-fun c!18153 () Bool)

(assert (=> b!104646 (= c!18153 (and (not (= (bvand lt!52534 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52534 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68127 () ListLongMap!1539)

(declare-fun e!68128 () ListLongMap!1539)

(assert (=> b!104646 (= e!68127 e!68128)))

(declare-fun b!104647 () Bool)

(declare-fun e!68123 () Bool)

(declare-fun call!10992 () Bool)

(assert (=> b!104647 (= e!68123 (not call!10992))))

(declare-fun call!10995 () ListLongMap!1539)

(declare-fun bm!10989 () Bool)

(assert (=> bm!10989 (= call!10995 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun b!104648 () Bool)

(declare-fun e!68122 () Bool)

(declare-fun lt!53361 () ListLongMap!1539)

(assert (=> b!104648 (= e!68122 (= (apply!97 lt!53361 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (_values!2543 newMap!16))))))

(assert (=> b!104648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104649 () Bool)

(declare-fun e!68129 () ListLongMap!1539)

(assert (=> b!104649 (= e!68129 e!68127)))

(declare-fun c!18151 () Bool)

(assert (=> b!104649 (= c!18151 (and (not (= (bvand lt!52534 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52534 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104650 () Bool)

(declare-fun e!68124 () Unit!3141)

(declare-fun lt!53365 () Unit!3141)

(assert (=> b!104650 (= e!68124 lt!53365)))

(declare-fun lt!53352 () ListLongMap!1539)

(assert (=> b!104650 (= lt!53352 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53354 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53354 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53370 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53370 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53372 () Unit!3141)

(assert (=> b!104650 (= lt!53372 (addStillContains!73 lt!53352 lt!53354 (zeroValue!2437 newMap!16) lt!53370))))

(assert (=> b!104650 (contains!816 (+!134 lt!53352 (tuple2!2373 lt!53354 (zeroValue!2437 newMap!16))) lt!53370)))

(declare-fun lt!53368 () Unit!3141)

(assert (=> b!104650 (= lt!53368 lt!53372)))

(declare-fun lt!53363 () ListLongMap!1539)

(assert (=> b!104650 (= lt!53363 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53371 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53371 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53353 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53353 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53358 () Unit!3141)

(assert (=> b!104650 (= lt!53358 (addApplyDifferent!73 lt!53363 lt!53371 lt!52329 lt!53353))))

(assert (=> b!104650 (= (apply!97 (+!134 lt!53363 (tuple2!2373 lt!53371 lt!52329)) lt!53353) (apply!97 lt!53363 lt!53353))))

(declare-fun lt!53351 () Unit!3141)

(assert (=> b!104650 (= lt!53351 lt!53358)))

(declare-fun lt!53369 () ListLongMap!1539)

(assert (=> b!104650 (= lt!53369 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53364 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53364 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53366 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53366 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53355 () Unit!3141)

(assert (=> b!104650 (= lt!53355 (addApplyDifferent!73 lt!53369 lt!53364 (zeroValue!2437 newMap!16) lt!53366))))

(assert (=> b!104650 (= (apply!97 (+!134 lt!53369 (tuple2!2373 lt!53364 (zeroValue!2437 newMap!16))) lt!53366) (apply!97 lt!53369 lt!53366))))

(declare-fun lt!53360 () Unit!3141)

(assert (=> b!104650 (= lt!53360 lt!53355)))

(declare-fun lt!53362 () ListLongMap!1539)

(assert (=> b!104650 (= lt!53362 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53367 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53367 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53357 () (_ BitVec 64))

(assert (=> b!104650 (= lt!53357 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104650 (= lt!53365 (addApplyDifferent!73 lt!53362 lt!53367 lt!52329 lt!53357))))

(assert (=> b!104650 (= (apply!97 (+!134 lt!53362 (tuple2!2373 lt!53367 lt!52329)) lt!53357) (apply!97 lt!53362 lt!53357))))

(declare-fun b!104651 () Bool)

(declare-fun e!68118 () Bool)

(declare-fun e!68121 () Bool)

(assert (=> b!104651 (= e!68118 e!68121)))

(declare-fun res!52141 () Bool)

(declare-fun call!10994 () Bool)

(assert (=> b!104651 (= res!52141 call!10994)))

(assert (=> b!104651 (=> (not res!52141) (not e!68121))))

(declare-fun b!104652 () Bool)

(declare-fun e!68126 () Bool)

(assert (=> b!104652 (= e!68126 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104653 () Bool)

(declare-fun e!68125 () Bool)

(assert (=> b!104653 (= e!68125 (= (apply!97 lt!53361 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun bm!10990 () Bool)

(declare-fun c!18150 () Bool)

(declare-fun call!10998 () ListLongMap!1539)

(declare-fun call!10993 () ListLongMap!1539)

(declare-fun call!10997 () ListLongMap!1539)

(assert (=> bm!10990 (= call!10998 (+!134 (ite c!18150 call!10995 (ite c!18151 call!10993 call!10997)) (ite (or c!18150 c!18151) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329))))))

(declare-fun bm!10991 () Bool)

(assert (=> bm!10991 (= call!10993 call!10995)))

(declare-fun b!104654 () Bool)

(declare-fun res!52142 () Bool)

(declare-fun e!68120 () Bool)

(assert (=> b!104654 (=> (not res!52142) (not e!68120))))

(declare-fun e!68119 () Bool)

(assert (=> b!104654 (= res!52142 e!68119)))

(declare-fun res!52144 () Bool)

(assert (=> b!104654 (=> res!52144 e!68119)))

(assert (=> b!104654 (= res!52144 (not e!68130))))

(declare-fun res!52139 () Bool)

(assert (=> b!104654 (=> (not res!52139) (not e!68130))))

(assert (=> b!104654 (= res!52139 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10992 () Bool)

(assert (=> bm!10992 (= call!10994 (contains!816 lt!53361 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10993 () Bool)

(assert (=> bm!10993 (= call!10997 call!10993)))

(declare-fun b!104655 () Bool)

(assert (=> b!104655 (= e!68121 (= (apply!97 lt!53361 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52329))))

(declare-fun d!28383 () Bool)

(assert (=> d!28383 e!68120))

(declare-fun res!52145 () Bool)

(assert (=> d!28383 (=> (not res!52145) (not e!68120))))

(assert (=> d!28383 (= res!52145 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!53356 () ListLongMap!1539)

(assert (=> d!28383 (= lt!53361 lt!53356)))

(declare-fun lt!53359 () Unit!3141)

(assert (=> d!28383 (= lt!53359 e!68124)))

(declare-fun c!18154 () Bool)

(assert (=> d!28383 (= c!18154 e!68126)))

(declare-fun res!52147 () Bool)

(assert (=> d!28383 (=> (not res!52147) (not e!68126))))

(assert (=> d!28383 (= res!52147 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28383 (= lt!53356 e!68129)))

(assert (=> d!28383 (= c!18150 (and (not (= (bvand lt!52534 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52534 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28383 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28383 (= (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) lt!52534 (zeroValue!2437 newMap!16) lt!52329 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53361)))

(declare-fun b!104656 () Bool)

(assert (=> b!104656 (= e!68129 (+!134 call!10998 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)))))

(declare-fun b!104657 () Bool)

(declare-fun res!52143 () Bool)

(assert (=> b!104657 (=> (not res!52143) (not e!68120))))

(assert (=> b!104657 (= res!52143 e!68123)))

(declare-fun c!18152 () Bool)

(assert (=> b!104657 (= c!18152 (not (= (bvand lt!52534 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104658 () Bool)

(assert (=> b!104658 (= e!68123 e!68125)))

(declare-fun res!52140 () Bool)

(assert (=> b!104658 (= res!52140 call!10992)))

(assert (=> b!104658 (=> (not res!52140) (not e!68125))))

(declare-fun b!104659 () Bool)

(declare-fun call!10996 () ListLongMap!1539)

(assert (=> b!104659 (= e!68127 call!10996)))

(declare-fun bm!10994 () Bool)

(assert (=> bm!10994 (= call!10996 call!10998)))

(declare-fun b!104660 () Bool)

(declare-fun Unit!3199 () Unit!3141)

(assert (=> b!104660 (= e!68124 Unit!3199)))

(declare-fun b!104661 () Bool)

(assert (=> b!104661 (= e!68120 e!68118)))

(declare-fun c!18155 () Bool)

(assert (=> b!104661 (= c!18155 (not (= (bvand lt!52534 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104662 () Bool)

(assert (=> b!104662 (= e!68128 call!10996)))

(declare-fun b!104663 () Bool)

(assert (=> b!104663 (= e!68118 (not call!10994))))

(declare-fun b!104664 () Bool)

(assert (=> b!104664 (= e!68128 call!10997)))

(declare-fun b!104665 () Bool)

(assert (=> b!104665 (= e!68119 e!68122)))

(declare-fun res!52146 () Bool)

(assert (=> b!104665 (=> (not res!52146) (not e!68122))))

(assert (=> b!104665 (= res!52146 (contains!816 lt!53361 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104665 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!10995 () Bool)

(assert (=> bm!10995 (= call!10992 (contains!816 lt!53361 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28383 c!18150) b!104656))

(assert (= (and d!28383 (not c!18150)) b!104649))

(assert (= (and b!104649 c!18151) b!104659))

(assert (= (and b!104649 (not c!18151)) b!104646))

(assert (= (and b!104646 c!18153) b!104662))

(assert (= (and b!104646 (not c!18153)) b!104664))

(assert (= (or b!104662 b!104664) bm!10993))

(assert (= (or b!104659 bm!10993) bm!10991))

(assert (= (or b!104659 b!104662) bm!10994))

(assert (= (or b!104656 bm!10991) bm!10989))

(assert (= (or b!104656 bm!10994) bm!10990))

(assert (= (and d!28383 res!52147) b!104652))

(assert (= (and d!28383 c!18154) b!104650))

(assert (= (and d!28383 (not c!18154)) b!104660))

(assert (= (and d!28383 res!52145) b!104654))

(assert (= (and b!104654 res!52139) b!104645))

(assert (= (and b!104654 (not res!52144)) b!104665))

(assert (= (and b!104665 res!52146) b!104648))

(assert (= (and b!104654 res!52142) b!104657))

(assert (= (and b!104657 c!18152) b!104658))

(assert (= (and b!104657 (not c!18152)) b!104647))

(assert (= (and b!104658 res!52140) b!104653))

(assert (= (or b!104658 b!104647) bm!10995))

(assert (= (and b!104657 res!52143) b!104661))

(assert (= (and b!104661 c!18155) b!104651))

(assert (= (and b!104661 (not c!18155)) b!104663))

(assert (= (and b!104651 res!52141) b!104655))

(assert (= (or b!104651 b!104663) bm!10992))

(declare-fun b_lambda!4657 () Bool)

(assert (=> (not b_lambda!4657) (not b!104648)))

(assert (=> b!104648 t!5677))

(declare-fun b_and!6457 () Bool)

(assert (= b_and!6453 (and (=> t!5677 result!3431) b_and!6457)))

(assert (=> b!104648 t!5679))

(declare-fun b_and!6459 () Bool)

(assert (= b_and!6455 (and (=> t!5679 result!3433) b_and!6459)))

(declare-fun m!116081 () Bool)

(assert (=> bm!10995 m!116081))

(declare-fun m!116083 () Bool)

(assert (=> b!104650 m!116083))

(declare-fun m!116085 () Bool)

(assert (=> b!104650 m!116085))

(declare-fun m!116087 () Bool)

(assert (=> b!104650 m!116087))

(declare-fun m!116089 () Bool)

(assert (=> b!104650 m!116089))

(declare-fun m!116091 () Bool)

(assert (=> b!104650 m!116091))

(declare-fun m!116093 () Bool)

(assert (=> b!104650 m!116093))

(assert (=> b!104650 m!116083))

(declare-fun m!116095 () Bool)

(assert (=> b!104650 m!116095))

(declare-fun m!116097 () Bool)

(assert (=> b!104650 m!116097))

(declare-fun m!116099 () Bool)

(assert (=> b!104650 m!116099))

(declare-fun m!116101 () Bool)

(assert (=> b!104650 m!116101))

(assert (=> b!104650 m!113969))

(assert (=> b!104650 m!116093))

(declare-fun m!116103 () Bool)

(assert (=> b!104650 m!116103))

(declare-fun m!116105 () Bool)

(assert (=> b!104650 m!116105))

(assert (=> b!104650 m!116091))

(declare-fun m!116107 () Bool)

(assert (=> b!104650 m!116107))

(assert (=> b!104650 m!116087))

(declare-fun m!116109 () Bool)

(assert (=> b!104650 m!116109))

(declare-fun m!116111 () Bool)

(assert (=> b!104650 m!116111))

(declare-fun m!116113 () Bool)

(assert (=> b!104650 m!116113))

(declare-fun m!116115 () Bool)

(assert (=> bm!10990 m!116115))

(assert (=> d!28383 m!113985))

(assert (=> b!104648 m!113987))

(assert (=> b!104648 m!113969))

(declare-fun m!116117 () Bool)

(assert (=> b!104648 m!116117))

(assert (=> b!104648 m!113991))

(assert (=> b!104648 m!113987))

(assert (=> b!104648 m!113993))

(assert (=> b!104648 m!113969))

(assert (=> b!104648 m!113991))

(assert (=> b!104665 m!113969))

(assert (=> b!104665 m!113969))

(declare-fun m!116119 () Bool)

(assert (=> b!104665 m!116119))

(assert (=> b!104652 m!113969))

(assert (=> b!104652 m!113969))

(assert (=> b!104652 m!113997))

(declare-fun m!116121 () Bool)

(assert (=> b!104655 m!116121))

(assert (=> b!104645 m!113969))

(assert (=> b!104645 m!113969))

(assert (=> b!104645 m!113997))

(declare-fun m!116123 () Bool)

(assert (=> bm!10992 m!116123))

(declare-fun m!116125 () Bool)

(assert (=> b!104653 m!116125))

(assert (=> bm!10989 m!116101))

(declare-fun m!116127 () Bool)

(assert (=> b!104656 m!116127))

(assert (=> d!27835 d!28383))

(declare-fun d!28385 () Bool)

(assert (=> d!28385 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53373 () Unit!3141)

(assert (=> d!28385 (= lt!53373 (choose!650 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68131 () Bool)

(assert (=> d!28385 e!68131))

(declare-fun res!52148 () Bool)

(assert (=> d!28385 (=> (not res!52148) (not e!68131))))

(assert (=> d!28385 (= res!52148 (isStrictlySorted!303 (toList!785 lt!52435)))))

(assert (=> d!28385 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53373)))

(declare-fun b!104666 () Bool)

(assert (=> b!104666 (= e!68131 (containsKey!157 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28385 res!52148) b!104666))

(assert (=> d!28385 m!113707))

(assert (=> d!28385 m!114515))

(assert (=> d!28385 m!114515))

(assert (=> d!28385 m!114739))

(assert (=> d!28385 m!113707))

(declare-fun m!116129 () Bool)

(assert (=> d!28385 m!116129))

(assert (=> d!28385 m!115893))

(assert (=> b!104666 m!113707))

(assert (=> b!104666 m!114735))

(assert (=> b!103839 d!28385))

(assert (=> b!103839 d!28189))

(assert (=> b!103839 d!28191))

(declare-fun d!28387 () Bool)

(declare-fun lt!53374 () Bool)

(assert (=> d!28387 (= lt!53374 (select (content!108 (t!5665 (toList!785 lt!52457))) lt!52331))))

(declare-fun e!68132 () Bool)

(assert (=> d!28387 (= lt!53374 e!68132)))

(declare-fun res!52149 () Bool)

(assert (=> d!28387 (=> (not res!52149) (not e!68132))))

(assert (=> d!28387 (= res!52149 ((_ is Cons!1608) (t!5665 (toList!785 lt!52457))))))

(assert (=> d!28387 (= (contains!819 (t!5665 (toList!785 lt!52457)) lt!52331) lt!53374)))

(declare-fun b!104667 () Bool)

(declare-fun e!68133 () Bool)

(assert (=> b!104667 (= e!68132 e!68133)))

(declare-fun res!52150 () Bool)

(assert (=> b!104667 (=> res!52150 e!68133)))

(assert (=> b!104667 (= res!52150 (= (h!2204 (t!5665 (toList!785 lt!52457))) lt!52331))))

(declare-fun b!104668 () Bool)

(assert (=> b!104668 (= e!68133 (contains!819 (t!5665 (t!5665 (toList!785 lt!52457))) lt!52331))))

(assert (= (and d!28387 res!52149) b!104667))

(assert (= (and b!104667 (not res!52150)) b!104668))

(assert (=> d!28387 m!115977))

(declare-fun m!116131 () Bool)

(assert (=> d!28387 m!116131))

(declare-fun m!116133 () Bool)

(assert (=> b!104668 m!116133))

(assert (=> b!103781 d!28387))

(declare-fun d!28389 () Bool)

(assert (=> d!28389 (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))

(declare-fun lt!53377 () Unit!3141)

(declare-fun choose!658 (array!4311 array!4313 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3141)

(assert (=> d!28389 (= lt!53377 (choose!658 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28389 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28389 (= (lemmaArrayContainsKeyThenInListMap!29 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53377)))

(declare-fun bs!4283 () Bool)

(assert (= bs!4283 d!28389))

(assert (=> bs!4283 m!113847))

(assert (=> bs!4283 m!113847))

(assert (=> bs!4283 m!113535))

(assert (=> bs!4283 m!114367))

(assert (=> bs!4283 m!113535))

(declare-fun m!116135 () Bool)

(assert (=> bs!4283 m!116135))

(assert (=> bs!4283 m!113985))

(assert (=> b!103680 d!28389))

(assert (=> b!103680 d!28095))

(assert (=> b!103680 d!27693))

(declare-fun d!28391 () Bool)

(declare-fun lt!53378 () Bool)

(assert (=> d!28391 (= lt!53378 (select (content!108 (toList!785 lt!52894)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun e!68134 () Bool)

(assert (=> d!28391 (= lt!53378 e!68134)))

(declare-fun res!52151 () Bool)

(assert (=> d!28391 (=> (not res!52151) (not e!68134))))

(assert (=> d!28391 (= res!52151 ((_ is Cons!1608) (toList!785 lt!52894)))))

(assert (=> d!28391 (= (contains!819 (toList!785 lt!52894) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!53378)))

(declare-fun b!104669 () Bool)

(declare-fun e!68135 () Bool)

(assert (=> b!104669 (= e!68134 e!68135)))

(declare-fun res!52152 () Bool)

(assert (=> b!104669 (=> res!52152 e!68135)))

(assert (=> b!104669 (= res!52152 (= (h!2204 (toList!785 lt!52894)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun b!104670 () Bool)

(assert (=> b!104670 (= e!68135 (contains!819 (t!5665 (toList!785 lt!52894)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!28391 res!52151) b!104669))

(assert (= (and b!104669 (not res!52152)) b!104670))

(declare-fun m!116137 () Bool)

(assert (=> d!28391 m!116137))

(declare-fun m!116139 () Bool)

(assert (=> d!28391 m!116139))

(declare-fun m!116141 () Bool)

(assert (=> b!104670 m!116141))

(assert (=> b!103728 d!28391))

(declare-fun d!28393 () Bool)

(assert (=> d!28393 (contains!816 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))) lt!52705)))

(declare-fun lt!53379 () Unit!3141)

(assert (=> d!28393 (= lt!53379 (choose!654 lt!52687 lt!52689 (zeroValue!2437 newMap!16) lt!52705))))

(assert (=> d!28393 (contains!816 lt!52687 lt!52705)))

(assert (=> d!28393 (= (addStillContains!73 lt!52687 lt!52689 (zeroValue!2437 newMap!16) lt!52705) lt!53379)))

(declare-fun bs!4284 () Bool)

(assert (= bs!4284 d!28393))

(assert (=> bs!4284 m!114125))

(assert (=> bs!4284 m!114125))

(assert (=> bs!4284 m!114141))

(declare-fun m!116143 () Bool)

(assert (=> bs!4284 m!116143))

(declare-fun m!116145 () Bool)

(assert (=> bs!4284 m!116145))

(assert (=> b!103475 d!28393))

(declare-fun d!28395 () Bool)

(assert (=> d!28395 (= (apply!97 (+!134 lt!52698 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))) lt!52688) (apply!97 lt!52698 lt!52688))))

(declare-fun lt!53380 () Unit!3141)

(assert (=> d!28395 (= lt!53380 (choose!655 lt!52698 lt!52706 (minValue!2437 newMap!16) lt!52688))))

(declare-fun e!68136 () Bool)

(assert (=> d!28395 e!68136))

(declare-fun res!52153 () Bool)

(assert (=> d!28395 (=> (not res!52153) (not e!68136))))

(assert (=> d!28395 (= res!52153 (contains!816 lt!52698 lt!52688))))

(assert (=> d!28395 (= (addApplyDifferent!73 lt!52698 lt!52706 (minValue!2437 newMap!16) lt!52688) lt!53380)))

(declare-fun b!104671 () Bool)

(assert (=> b!104671 (= e!68136 (not (= lt!52688 lt!52706)))))

(assert (= (and d!28395 res!52153) b!104671))

(assert (=> d!28395 m!114127))

(declare-fun m!116147 () Bool)

(assert (=> d!28395 m!116147))

(assert (=> d!28395 m!114127))

(assert (=> d!28395 m!114137))

(assert (=> d!28395 m!114143))

(declare-fun m!116149 () Bool)

(assert (=> d!28395 m!116149))

(assert (=> b!103475 d!28395))

(declare-fun d!28397 () Bool)

(assert (=> d!28397 (= (apply!97 lt!52698 lt!52688) (get!1328 (getValueByKey!153 (toList!785 lt!52698) lt!52688)))))

(declare-fun bs!4285 () Bool)

(assert (= bs!4285 d!28397))

(declare-fun m!116151 () Bool)

(assert (=> bs!4285 m!116151))

(assert (=> bs!4285 m!116151))

(declare-fun m!116153 () Bool)

(assert (=> bs!4285 m!116153))

(assert (=> b!103475 d!28397))

(declare-fun d!28399 () Bool)

(assert (=> d!28399 (= (apply!97 lt!52697 lt!52692) (get!1328 (getValueByKey!153 (toList!785 lt!52697) lt!52692)))))

(declare-fun bs!4286 () Bool)

(assert (= bs!4286 d!28399))

(declare-fun m!116155 () Bool)

(assert (=> bs!4286 m!116155))

(assert (=> bs!4286 m!116155))

(declare-fun m!116157 () Bool)

(assert (=> bs!4286 m!116157))

(assert (=> b!103475 d!28399))

(declare-fun d!28401 () Bool)

(assert (=> d!28401 (= (apply!97 (+!134 lt!52698 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))) lt!52688) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52698 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))) lt!52688)))))

(declare-fun bs!4287 () Bool)

(assert (= bs!4287 d!28401))

(declare-fun m!116159 () Bool)

(assert (=> bs!4287 m!116159))

(assert (=> bs!4287 m!116159))

(declare-fun m!116161 () Bool)

(assert (=> bs!4287 m!116161))

(assert (=> b!103475 d!28401))

(declare-fun d!28403 () Bool)

(assert (=> d!28403 (= (apply!97 (+!134 lt!52697 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))) lt!52692) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52697 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))) lt!52692)))))

(declare-fun bs!4288 () Bool)

(assert (= bs!4288 d!28403))

(declare-fun m!116163 () Bool)

(assert (=> bs!4288 m!116163))

(assert (=> bs!4288 m!116163))

(declare-fun m!116165 () Bool)

(assert (=> bs!4288 m!116165))

(assert (=> b!103475 d!28403))

(declare-fun d!28405 () Bool)

(assert (=> d!28405 (= (apply!97 (+!134 lt!52697 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))) lt!52692) (apply!97 lt!52697 lt!52692))))

(declare-fun lt!53381 () Unit!3141)

(assert (=> d!28405 (= lt!53381 (choose!655 lt!52697 lt!52702 (minValue!2437 newMap!16) lt!52692))))

(declare-fun e!68137 () Bool)

(assert (=> d!28405 e!68137))

(declare-fun res!52154 () Bool)

(assert (=> d!28405 (=> (not res!52154) (not e!68137))))

(assert (=> d!28405 (= res!52154 (contains!816 lt!52697 lt!52692))))

(assert (=> d!28405 (= (addApplyDifferent!73 lt!52697 lt!52702 (minValue!2437 newMap!16) lt!52692) lt!53381)))

(declare-fun b!104672 () Bool)

(assert (=> b!104672 (= e!68137 (not (= lt!52692 lt!52702)))))

(assert (= (and d!28405 res!52154) b!104672))

(assert (=> d!28405 m!114117))

(declare-fun m!116167 () Bool)

(assert (=> d!28405 m!116167))

(assert (=> d!28405 m!114117))

(assert (=> d!28405 m!114119))

(assert (=> d!28405 m!114131))

(declare-fun m!116169 () Bool)

(assert (=> d!28405 m!116169))

(assert (=> b!103475 d!28405))

(declare-fun d!28407 () Bool)

(declare-fun e!68138 () Bool)

(assert (=> d!28407 e!68138))

(declare-fun res!52156 () Bool)

(assert (=> d!28407 (=> (not res!52156) (not e!68138))))

(declare-fun lt!53385 () ListLongMap!1539)

(assert (=> d!28407 (= res!52156 (contains!816 lt!53385 (_1!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53383 () List!1612)

(assert (=> d!28407 (= lt!53385 (ListLongMap!1540 lt!53383))))

(declare-fun lt!53382 () Unit!3141)

(declare-fun lt!53384 () Unit!3141)

(assert (=> d!28407 (= lt!53382 lt!53384)))

(assert (=> d!28407 (= (getValueByKey!153 lt!53383 (_1!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28407 (= lt!53384 (lemmaContainsTupThenGetReturnValue!72 lt!53383 (_1!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28407 (= lt!53383 (insertStrictlySorted!75 (toList!785 lt!52704) (_1!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28407 (= (+!134 lt!52704 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))) lt!53385)))

(declare-fun b!104673 () Bool)

(declare-fun res!52155 () Bool)

(assert (=> b!104673 (=> (not res!52155) (not e!68138))))

(assert (=> b!104673 (= res!52155 (= (getValueByKey!153 (toList!785 lt!53385) (_1!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104674 () Bool)

(assert (=> b!104674 (= e!68138 (contains!819 (toList!785 lt!53385) (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28407 res!52156) b!104673))

(assert (= (and b!104673 res!52155) b!104674))

(declare-fun m!116171 () Bool)

(assert (=> d!28407 m!116171))

(declare-fun m!116173 () Bool)

(assert (=> d!28407 m!116173))

(declare-fun m!116175 () Bool)

(assert (=> d!28407 m!116175))

(declare-fun m!116177 () Bool)

(assert (=> d!28407 m!116177))

(declare-fun m!116179 () Bool)

(assert (=> b!104673 m!116179))

(declare-fun m!116181 () Bool)

(assert (=> b!104674 m!116181))

(assert (=> b!103475 d!28407))

(declare-fun d!28409 () Bool)

(assert (=> d!28409 (= (apply!97 lt!52704 lt!52701) (get!1328 (getValueByKey!153 (toList!785 lt!52704) lt!52701)))))

(declare-fun bs!4289 () Bool)

(assert (= bs!4289 d!28409))

(declare-fun m!116183 () Bool)

(assert (=> bs!4289 m!116183))

(assert (=> bs!4289 m!116183))

(declare-fun m!116185 () Bool)

(assert (=> bs!4289 m!116185))

(assert (=> b!103475 d!28409))

(declare-fun d!28411 () Bool)

(declare-fun e!68139 () Bool)

(assert (=> d!28411 e!68139))

(declare-fun res!52158 () Bool)

(assert (=> d!28411 (=> (not res!52158) (not e!68139))))

(declare-fun lt!53389 () ListLongMap!1539)

(assert (=> d!28411 (= res!52158 (contains!816 lt!53389 (_1!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))))))

(declare-fun lt!53387 () List!1612)

(assert (=> d!28411 (= lt!53389 (ListLongMap!1540 lt!53387))))

(declare-fun lt!53386 () Unit!3141)

(declare-fun lt!53388 () Unit!3141)

(assert (=> d!28411 (= lt!53386 lt!53388)))

(assert (=> d!28411 (= (getValueByKey!153 lt!53387 (_1!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))))))

(assert (=> d!28411 (= lt!53388 (lemmaContainsTupThenGetReturnValue!72 lt!53387 (_1!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))))))

(assert (=> d!28411 (= lt!53387 (insertStrictlySorted!75 (toList!785 lt!52698) (_1!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))))))

(assert (=> d!28411 (= (+!134 lt!52698 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))) lt!53389)))

(declare-fun b!104675 () Bool)

(declare-fun res!52157 () Bool)

(assert (=> b!104675 (=> (not res!52157) (not e!68139))))

(assert (=> b!104675 (= res!52157 (= (getValueByKey!153 (toList!785 lt!53389) (_1!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52706 (minValue!2437 newMap!16))))))))

(declare-fun b!104676 () Bool)

(assert (=> b!104676 (= e!68139 (contains!819 (toList!785 lt!53389) (tuple2!2373 lt!52706 (minValue!2437 newMap!16))))))

(assert (= (and d!28411 res!52158) b!104675))

(assert (= (and b!104675 res!52157) b!104676))

(declare-fun m!116187 () Bool)

(assert (=> d!28411 m!116187))

(declare-fun m!116189 () Bool)

(assert (=> d!28411 m!116189))

(declare-fun m!116191 () Bool)

(assert (=> d!28411 m!116191))

(declare-fun m!116193 () Bool)

(assert (=> d!28411 m!116193))

(declare-fun m!116195 () Bool)

(assert (=> b!104675 m!116195))

(declare-fun m!116197 () Bool)

(assert (=> b!104676 m!116197))

(assert (=> b!103475 d!28411))

(assert (=> b!103475 d!27927))

(declare-fun d!28413 () Bool)

(assert (=> d!28413 (= (apply!97 (+!134 lt!52704 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))) lt!52701) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52704 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16)))) lt!52701)))))

(declare-fun bs!4290 () Bool)

(assert (= bs!4290 d!28413))

(declare-fun m!116199 () Bool)

(assert (=> bs!4290 m!116199))

(assert (=> bs!4290 m!116199))

(declare-fun m!116201 () Bool)

(assert (=> bs!4290 m!116201))

(assert (=> b!103475 d!28413))

(declare-fun d!28415 () Bool)

(assert (=> d!28415 (= (apply!97 (+!134 lt!52704 (tuple2!2373 lt!52699 (zeroValue!2437 newMap!16))) lt!52701) (apply!97 lt!52704 lt!52701))))

(declare-fun lt!53390 () Unit!3141)

(assert (=> d!28415 (= lt!53390 (choose!655 lt!52704 lt!52699 (zeroValue!2437 newMap!16) lt!52701))))

(declare-fun e!68140 () Bool)

(assert (=> d!28415 e!68140))

(declare-fun res!52159 () Bool)

(assert (=> d!28415 (=> (not res!52159) (not e!68140))))

(assert (=> d!28415 (= res!52159 (contains!816 lt!52704 lt!52701))))

(assert (=> d!28415 (= (addApplyDifferent!73 lt!52704 lt!52699 (zeroValue!2437 newMap!16) lt!52701) lt!53390)))

(declare-fun b!104677 () Bool)

(assert (=> b!104677 (= e!68140 (not (= lt!52701 lt!52699)))))

(assert (= (and d!28415 res!52159) b!104677))

(assert (=> d!28415 m!114121))

(declare-fun m!116203 () Bool)

(assert (=> d!28415 m!116203))

(assert (=> d!28415 m!114121))

(assert (=> d!28415 m!114123))

(assert (=> d!28415 m!114147))

(declare-fun m!116205 () Bool)

(assert (=> d!28415 m!116205))

(assert (=> b!103475 d!28415))

(declare-fun d!28417 () Bool)

(declare-fun e!68141 () Bool)

(assert (=> d!28417 e!68141))

(declare-fun res!52161 () Bool)

(assert (=> d!28417 (=> (not res!52161) (not e!68141))))

(declare-fun lt!53394 () ListLongMap!1539)

(assert (=> d!28417 (= res!52161 (contains!816 lt!53394 (_1!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))))))

(declare-fun lt!53392 () List!1612)

(assert (=> d!28417 (= lt!53394 (ListLongMap!1540 lt!53392))))

(declare-fun lt!53391 () Unit!3141)

(declare-fun lt!53393 () Unit!3141)

(assert (=> d!28417 (= lt!53391 lt!53393)))

(assert (=> d!28417 (= (getValueByKey!153 lt!53392 (_1!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))))))

(assert (=> d!28417 (= lt!53393 (lemmaContainsTupThenGetReturnValue!72 lt!53392 (_1!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))))))

(assert (=> d!28417 (= lt!53392 (insertStrictlySorted!75 (toList!785 lt!52697) (_1!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))))))

(assert (=> d!28417 (= (+!134 lt!52697 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))) lt!53394)))

(declare-fun b!104678 () Bool)

(declare-fun res!52160 () Bool)

(assert (=> b!104678 (=> (not res!52160) (not e!68141))))

(assert (=> b!104678 (= res!52160 (= (getValueByKey!153 (toList!785 lt!53394) (_1!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52702 (minValue!2437 newMap!16))))))))

(declare-fun b!104679 () Bool)

(assert (=> b!104679 (= e!68141 (contains!819 (toList!785 lt!53394) (tuple2!2373 lt!52702 (minValue!2437 newMap!16))))))

(assert (= (and d!28417 res!52161) b!104678))

(assert (= (and b!104678 res!52160) b!104679))

(declare-fun m!116207 () Bool)

(assert (=> d!28417 m!116207))

(declare-fun m!116209 () Bool)

(assert (=> d!28417 m!116209))

(declare-fun m!116211 () Bool)

(assert (=> d!28417 m!116211))

(declare-fun m!116213 () Bool)

(assert (=> d!28417 m!116213))

(declare-fun m!116215 () Bool)

(assert (=> b!104678 m!116215))

(declare-fun m!116217 () Bool)

(assert (=> b!104679 m!116217))

(assert (=> b!103475 d!28417))

(declare-fun d!28419 () Bool)

(declare-fun e!68143 () Bool)

(assert (=> d!28419 e!68143))

(declare-fun res!52162 () Bool)

(assert (=> d!28419 (=> res!52162 e!68143)))

(declare-fun lt!53397 () Bool)

(assert (=> d!28419 (= res!52162 (not lt!53397))))

(declare-fun lt!53396 () Bool)

(assert (=> d!28419 (= lt!53397 lt!53396)))

(declare-fun lt!53398 () Unit!3141)

(declare-fun e!68142 () Unit!3141)

(assert (=> d!28419 (= lt!53398 e!68142)))

(declare-fun c!18156 () Bool)

(assert (=> d!28419 (= c!18156 lt!53396)))

(assert (=> d!28419 (= lt!53396 (containsKey!157 (toList!785 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))) lt!52705))))

(assert (=> d!28419 (= (contains!816 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))) lt!52705) lt!53397)))

(declare-fun b!104680 () Bool)

(declare-fun lt!53395 () Unit!3141)

(assert (=> b!104680 (= e!68142 lt!53395)))

(assert (=> b!104680 (= lt!53395 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))) lt!52705))))

(assert (=> b!104680 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))) lt!52705))))

(declare-fun b!104681 () Bool)

(declare-fun Unit!3200 () Unit!3141)

(assert (=> b!104681 (= e!68142 Unit!3200)))

(declare-fun b!104682 () Bool)

(assert (=> b!104682 (= e!68143 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))) lt!52705)))))

(assert (= (and d!28419 c!18156) b!104680))

(assert (= (and d!28419 (not c!18156)) b!104681))

(assert (= (and d!28419 (not res!52162)) b!104682))

(declare-fun m!116219 () Bool)

(assert (=> d!28419 m!116219))

(declare-fun m!116221 () Bool)

(assert (=> b!104680 m!116221))

(declare-fun m!116223 () Bool)

(assert (=> b!104680 m!116223))

(assert (=> b!104680 m!116223))

(declare-fun m!116225 () Bool)

(assert (=> b!104680 m!116225))

(assert (=> b!104682 m!116223))

(assert (=> b!104682 m!116223))

(assert (=> b!104682 m!116225))

(assert (=> b!103475 d!28419))

(declare-fun d!28421 () Bool)

(declare-fun e!68144 () Bool)

(assert (=> d!28421 e!68144))

(declare-fun res!52164 () Bool)

(assert (=> d!28421 (=> (not res!52164) (not e!68144))))

(declare-fun lt!53402 () ListLongMap!1539)

(assert (=> d!28421 (= res!52164 (contains!816 lt!53402 (_1!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53400 () List!1612)

(assert (=> d!28421 (= lt!53402 (ListLongMap!1540 lt!53400))))

(declare-fun lt!53399 () Unit!3141)

(declare-fun lt!53401 () Unit!3141)

(assert (=> d!28421 (= lt!53399 lt!53401)))

(assert (=> d!28421 (= (getValueByKey!153 lt!53400 (_1!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28421 (= lt!53401 (lemmaContainsTupThenGetReturnValue!72 lt!53400 (_1!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28421 (= lt!53400 (insertStrictlySorted!75 (toList!785 lt!52687) (_1!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))) (_2!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28421 (= (+!134 lt!52687 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))) lt!53402)))

(declare-fun b!104683 () Bool)

(declare-fun res!52163 () Bool)

(assert (=> b!104683 (=> (not res!52163) (not e!68144))))

(assert (=> b!104683 (= res!52163 (= (getValueByKey!153 (toList!785 lt!53402) (_1!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16)))) (Some!158 (_2!1197 (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104684 () Bool)

(assert (=> b!104684 (= e!68144 (contains!819 (toList!785 lt!53402) (tuple2!2373 lt!52689 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28421 res!52164) b!104683))

(assert (= (and b!104683 res!52163) b!104684))

(declare-fun m!116227 () Bool)

(assert (=> d!28421 m!116227))

(declare-fun m!116229 () Bool)

(assert (=> d!28421 m!116229))

(declare-fun m!116231 () Bool)

(assert (=> d!28421 m!116231))

(declare-fun m!116233 () Bool)

(assert (=> d!28421 m!116233))

(declare-fun m!116235 () Bool)

(assert (=> b!104683 m!116235))

(declare-fun m!116237 () Bool)

(assert (=> b!104684 m!116237))

(assert (=> b!103475 d!28421))

(assert (=> b!103499 d!27647))

(declare-fun d!28423 () Bool)

(assert (=> d!28423 (isDefined!107 (getValueByKey!153 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53403 () Unit!3141)

(assert (=> d!28423 (= lt!53403 (choose!650 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68145 () Bool)

(assert (=> d!28423 e!68145))

(declare-fun res!52165 () Bool)

(assert (=> d!28423 (=> (not res!52165) (not e!68145))))

(assert (=> d!28423 (= res!52165 (isStrictlySorted!303 (toList!785 lt!52435)))))

(assert (=> d!28423 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53403)))

(declare-fun b!104685 () Bool)

(assert (=> b!104685 (= e!68145 (containsKey!157 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28423 res!52165) b!104685))

(assert (=> d!28423 m!114595))

(assert (=> d!28423 m!114595))

(assert (=> d!28423 m!114597))

(declare-fun m!116239 () Bool)

(assert (=> d!28423 m!116239))

(assert (=> d!28423 m!115893))

(assert (=> b!104685 m!114591))

(assert (=> b!103790 d!28423))

(assert (=> b!103790 d!28201))

(assert (=> b!103790 d!28203))

(declare-fun d!28425 () Bool)

(declare-fun res!52166 () Bool)

(declare-fun e!68146 () Bool)

(assert (=> d!28425 (=> res!52166 e!68146)))

(assert (=> d!28425 (= res!52166 (= (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28425 (= (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!68146)))

(declare-fun b!104686 () Bool)

(declare-fun e!68147 () Bool)

(assert (=> b!104686 (= e!68146 e!68147)))

(declare-fun res!52167 () Bool)

(assert (=> b!104686 (=> (not res!52167) (not e!68147))))

(assert (=> b!104686 (= res!52167 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104687 () Bool)

(assert (=> b!104687 (= e!68147 (arrayContainsKey!0 (_keys!4261 newMap!16) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28425 (not res!52166)) b!104686))

(assert (= (and b!104686 res!52167) b!104687))

(assert (=> d!28425 m!115617))

(assert (=> b!104687 m!113535))

(declare-fun m!116241 () Bool)

(assert (=> b!104687 m!116241))

(assert (=> b!103555 d!28425))

(declare-fun d!28427 () Bool)

(assert (=> d!28427 (= (isEmpty!371 lt!52863) (isEmpty!372 (toList!785 lt!52863)))))

(declare-fun bs!4291 () Bool)

(assert (= bs!4291 d!28427))

(declare-fun m!116243 () Bool)

(assert (=> bs!4291 m!116243))

(assert (=> b!103682 d!28427))

(declare-fun d!28429 () Bool)

(declare-fun res!52168 () Bool)

(declare-fun e!68148 () Bool)

(assert (=> d!28429 (=> res!52168 e!68148)))

(assert (=> d!28429 (= res!52168 (and ((_ is Cons!1608) (toList!785 lt!52453)) (= (_1!1197 (h!2204 (toList!785 lt!52453))) (_1!1197 lt!52325))))))

(assert (=> d!28429 (= (containsKey!157 (toList!785 lt!52453) (_1!1197 lt!52325)) e!68148)))

(declare-fun b!104688 () Bool)

(declare-fun e!68149 () Bool)

(assert (=> b!104688 (= e!68148 e!68149)))

(declare-fun res!52169 () Bool)

(assert (=> b!104688 (=> (not res!52169) (not e!68149))))

(assert (=> b!104688 (= res!52169 (and (or (not ((_ is Cons!1608) (toList!785 lt!52453))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52453))) (_1!1197 lt!52325))) ((_ is Cons!1608) (toList!785 lt!52453)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52453))) (_1!1197 lt!52325))))))

(declare-fun b!104689 () Bool)

(assert (=> b!104689 (= e!68149 (containsKey!157 (t!5665 (toList!785 lt!52453)) (_1!1197 lt!52325)))))

(assert (= (and d!28429 (not res!52168)) b!104688))

(assert (= (and b!104688 res!52169) b!104689))

(declare-fun m!116245 () Bool)

(assert (=> b!104689 m!116245))

(assert (=> d!27789 d!28429))

(declare-fun d!28431 () Bool)

(assert (=> d!28431 (isDefined!107 (getValueByKey!153 (toList!785 lt!52449) (_1!1197 lt!52325)))))

(declare-fun lt!53404 () Unit!3141)

(assert (=> d!28431 (= lt!53404 (choose!650 (toList!785 lt!52449) (_1!1197 lt!52325)))))

(declare-fun e!68150 () Bool)

(assert (=> d!28431 e!68150))

(declare-fun res!52170 () Bool)

(assert (=> d!28431 (=> (not res!52170) (not e!68150))))

(assert (=> d!28431 (= res!52170 (isStrictlySorted!303 (toList!785 lt!52449)))))

(assert (=> d!28431 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52449) (_1!1197 lt!52325)) lt!53404)))

(declare-fun b!104690 () Bool)

(assert (=> b!104690 (= e!68150 (containsKey!157 (toList!785 lt!52449) (_1!1197 lt!52325)))))

(assert (= (and d!28431 res!52170) b!104690))

(assert (=> d!28431 m!113753))

(assert (=> d!28431 m!113753))

(assert (=> d!28431 m!114711))

(declare-fun m!116247 () Bool)

(assert (=> d!28431 m!116247))

(declare-fun m!116249 () Bool)

(assert (=> d!28431 m!116249))

(assert (=> b!104690 m!114707))

(assert (=> b!103820 d!28431))

(assert (=> b!103820 d!28215))

(assert (=> b!103820 d!27745))

(declare-fun d!28433 () Bool)

(declare-fun e!68151 () Bool)

(assert (=> d!28433 e!68151))

(declare-fun res!52172 () Bool)

(assert (=> d!28433 (=> (not res!52172) (not e!68151))))

(declare-fun lt!53408 () ListLongMap!1539)

(assert (=> d!28433 (= res!52172 (contains!816 lt!53408 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(declare-fun lt!53406 () List!1612)

(assert (=> d!28433 (= lt!53408 (ListLongMap!1540 lt!53406))))

(declare-fun lt!53405 () Unit!3141)

(declare-fun lt!53407 () Unit!3141)

(assert (=> d!28433 (= lt!53405 lt!53407)))

(assert (=> d!28433 (= (getValueByKey!153 lt!53406 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28433 (= lt!53407 (lemmaContainsTupThenGetReturnValue!72 lt!53406 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28433 (= lt!53406 (insertStrictlySorted!75 (toList!785 call!10895) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28433 (= (+!134 call!10895 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!53408)))

(declare-fun b!104691 () Bool)

(declare-fun res!52171 () Bool)

(assert (=> b!104691 (=> (not res!52171) (not e!68151))))

(assert (=> b!104691 (= res!52171 (= (getValueByKey!153 (toList!785 lt!53408) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(declare-fun b!104692 () Bool)

(assert (=> b!104692 (= e!68151 (contains!819 (toList!785 lt!53408) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))

(assert (= (and d!28433 res!52172) b!104691))

(assert (= (and b!104691 res!52171) b!104692))

(declare-fun m!116251 () Bool)

(assert (=> d!28433 m!116251))

(declare-fun m!116253 () Bool)

(assert (=> d!28433 m!116253))

(declare-fun m!116255 () Bool)

(assert (=> d!28433 m!116255))

(declare-fun m!116257 () Bool)

(assert (=> d!28433 m!116257))

(declare-fun m!116259 () Bool)

(assert (=> b!104691 m!116259))

(declare-fun m!116261 () Bool)

(assert (=> b!104692 m!116261))

(assert (=> b!103705 d!28433))

(declare-fun d!28435 () Bool)

(assert (=> d!28435 (isDefined!107 (getValueByKey!153 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun lt!53409 () Unit!3141)

(assert (=> d!28435 (= lt!53409 (choose!650 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun e!68152 () Bool)

(assert (=> d!28435 e!68152))

(declare-fun res!52173 () Bool)

(assert (=> d!28435 (=> (not res!52173) (not e!68152))))

(assert (=> d!28435 (= res!52173 (isStrictlySorted!303 (toList!785 call!10800)))))

(assert (=> d!28435 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!53409)))

(declare-fun b!104693 () Bool)

(assert (=> b!104693 (= e!68152 (containsKey!157 (toList!785 call!10800) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!28435 res!52173) b!104693))

(assert (=> d!28435 m!113535))

(assert (=> d!28435 m!113943))

(assert (=> d!28435 m!113943))

(assert (=> d!28435 m!113945))

(assert (=> d!28435 m!113535))

(declare-fun m!116263 () Bool)

(assert (=> d!28435 m!116263))

(declare-fun m!116265 () Bool)

(assert (=> d!28435 m!116265))

(assert (=> b!104693 m!113535))

(assert (=> b!104693 m!113939))

(assert (=> b!103379 d!28435))

(assert (=> b!103379 d!28217))

(assert (=> b!103379 d!28219))

(declare-fun d!28437 () Bool)

(declare-fun res!52174 () Bool)

(declare-fun e!68153 () Bool)

(assert (=> d!28437 (=> res!52174 e!68153)))

(assert (=> d!28437 (= res!52174 (and ((_ is Cons!1608) (toList!785 lt!52612)) (= (_1!1197 (h!2204 (toList!785 lt!52612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28437 (= (containsKey!157 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000) e!68153)))

(declare-fun b!104694 () Bool)

(declare-fun e!68154 () Bool)

(assert (=> b!104694 (= e!68153 e!68154)))

(declare-fun res!52175 () Bool)

(assert (=> b!104694 (=> (not res!52175) (not e!68154))))

(assert (=> b!104694 (= res!52175 (and (or (not ((_ is Cons!1608) (toList!785 lt!52612))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52612))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1608) (toList!785 lt!52612)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52612))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104695 () Bool)

(assert (=> b!104695 (= e!68154 (containsKey!157 (t!5665 (toList!785 lt!52612)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28437 (not res!52174)) b!104694))

(assert (= (and b!104694 res!52175) b!104695))

(declare-fun m!116267 () Bool)

(assert (=> b!104695 m!116267))

(assert (=> d!27875 d!28437))

(assert (=> d!27699 d!27701))

(assert (=> d!27699 d!27697))

(declare-fun d!28439 () Bool)

(assert (=> d!28439 (not (contains!816 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)) lt!52437))))

(assert (=> d!28439 true))

(declare-fun _$36!316 () Unit!3141)

(assert (=> d!28439 (= (choose!646 lt!52436 lt!52431 lt!52433 lt!52437) _$36!316)))

(declare-fun bs!4292 () Bool)

(assert (= bs!4292 d!28439))

(assert (=> bs!4292 m!113739))

(assert (=> bs!4292 m!113739))

(assert (=> bs!4292 m!113741))

(assert (=> d!27699 d!28439))

(declare-fun d!28441 () Bool)

(declare-fun e!68156 () Bool)

(assert (=> d!28441 e!68156))

(declare-fun res!52176 () Bool)

(assert (=> d!28441 (=> res!52176 e!68156)))

(declare-fun lt!53412 () Bool)

(assert (=> d!28441 (= res!52176 (not lt!53412))))

(declare-fun lt!53411 () Bool)

(assert (=> d!28441 (= lt!53412 lt!53411)))

(declare-fun lt!53413 () Unit!3141)

(declare-fun e!68155 () Unit!3141)

(assert (=> d!28441 (= lt!53413 e!68155)))

(declare-fun c!18157 () Bool)

(assert (=> d!28441 (= c!18157 lt!53411)))

(assert (=> d!28441 (= lt!53411 (containsKey!157 (toList!785 lt!52436) lt!52437))))

(assert (=> d!28441 (= (contains!816 lt!52436 lt!52437) lt!53412)))

(declare-fun b!104697 () Bool)

(declare-fun lt!53410 () Unit!3141)

(assert (=> b!104697 (= e!68155 lt!53410)))

(assert (=> b!104697 (= lt!53410 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52436) lt!52437))))

(assert (=> b!104697 (isDefined!107 (getValueByKey!153 (toList!785 lt!52436) lt!52437))))

(declare-fun b!104698 () Bool)

(declare-fun Unit!3201 () Unit!3141)

(assert (=> b!104698 (= e!68155 Unit!3201)))

(declare-fun b!104699 () Bool)

(assert (=> b!104699 (= e!68156 (isDefined!107 (getValueByKey!153 (toList!785 lt!52436) lt!52437)))))

(assert (= (and d!28441 c!18157) b!104697))

(assert (= (and d!28441 (not c!18157)) b!104698))

(assert (= (and d!28441 (not res!52176)) b!104699))

(declare-fun m!116269 () Bool)

(assert (=> d!28441 m!116269))

(declare-fun m!116271 () Bool)

(assert (=> b!104697 m!116271))

(declare-fun m!116273 () Bool)

(assert (=> b!104697 m!116273))

(assert (=> b!104697 m!116273))

(declare-fun m!116275 () Bool)

(assert (=> b!104697 m!116275))

(assert (=> b!104699 m!116273))

(assert (=> b!104699 m!116273))

(assert (=> b!104699 m!116275))

(assert (=> d!27699 d!28441))

(declare-fun b!104702 () Bool)

(declare-fun e!68158 () Option!159)

(assert (=> b!104702 (= e!68158 (getValueByKey!153 (t!5665 (t!5665 lt!52447)) (_1!1197 lt!52325)))))

(declare-fun b!104700 () Bool)

(declare-fun e!68157 () Option!159)

(assert (=> b!104700 (= e!68157 (Some!158 (_2!1197 (h!2204 (t!5665 lt!52447)))))))

(declare-fun d!28443 () Bool)

(declare-fun c!18158 () Bool)

(assert (=> d!28443 (= c!18158 (and ((_ is Cons!1608) (t!5665 lt!52447)) (= (_1!1197 (h!2204 (t!5665 lt!52447))) (_1!1197 lt!52325))))))

(assert (=> d!28443 (= (getValueByKey!153 (t!5665 lt!52447) (_1!1197 lt!52325)) e!68157)))

(declare-fun b!104701 () Bool)

(assert (=> b!104701 (= e!68157 e!68158)))

(declare-fun c!18159 () Bool)

(assert (=> b!104701 (= c!18159 (and ((_ is Cons!1608) (t!5665 lt!52447)) (not (= (_1!1197 (h!2204 (t!5665 lt!52447))) (_1!1197 lt!52325)))))))

(declare-fun b!104703 () Bool)

(assert (=> b!104703 (= e!68158 None!157)))

(assert (= (and d!28443 c!18158) b!104700))

(assert (= (and d!28443 (not c!18158)) b!104701))

(assert (= (and b!104701 c!18159) b!104702))

(assert (= (and b!104701 (not c!18159)) b!104703))

(declare-fun m!116277 () Bool)

(assert (=> b!104702 m!116277))

(assert (=> b!103825 d!28443))

(declare-fun d!28445 () Bool)

(declare-fun res!52177 () Bool)

(declare-fun e!68159 () Bool)

(assert (=> d!28445 (=> res!52177 e!68159)))

(assert (=> d!28445 (= res!52177 (or ((_ is Nil!1609) lt!52755) ((_ is Nil!1609) (t!5665 lt!52755))))))

(assert (=> d!28445 (= (isStrictlySorted!303 lt!52755) e!68159)))

(declare-fun b!104704 () Bool)

(declare-fun e!68160 () Bool)

(assert (=> b!104704 (= e!68159 e!68160)))

(declare-fun res!52178 () Bool)

(assert (=> b!104704 (=> (not res!52178) (not e!68160))))

(assert (=> b!104704 (= res!52178 (bvslt (_1!1197 (h!2204 lt!52755)) (_1!1197 (h!2204 (t!5665 lt!52755)))))))

(declare-fun b!104705 () Bool)

(assert (=> b!104705 (= e!68160 (isStrictlySorted!303 (t!5665 lt!52755)))))

(assert (= (and d!28445 (not res!52177)) b!104704))

(assert (= (and b!104704 res!52178) b!104705))

(declare-fun m!116279 () Bool)

(assert (=> b!104705 m!116279))

(assert (=> d!27781 d!28445))

(assert (=> d!27781 d!28039))

(declare-fun d!28447 () Bool)

(declare-fun lt!53414 () Bool)

(assert (=> d!28447 (= lt!53414 (select (content!108 lt!52721) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun e!68161 () Bool)

(assert (=> d!28447 (= lt!53414 e!68161)))

(declare-fun res!52179 () Bool)

(assert (=> d!28447 (=> (not res!52179) (not e!68161))))

(assert (=> d!28447 (= res!52179 ((_ is Cons!1608) lt!52721))))

(assert (=> d!28447 (= (contains!819 lt!52721 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))) lt!53414)))

(declare-fun b!104706 () Bool)

(declare-fun e!68162 () Bool)

(assert (=> b!104706 (= e!68161 e!68162)))

(declare-fun res!52180 () Bool)

(assert (=> b!104706 (=> res!52180 e!68162)))

(assert (=> b!104706 (= res!52180 (= (h!2204 lt!52721) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!104707 () Bool)

(assert (=> b!104707 (= e!68162 (contains!819 (t!5665 lt!52721) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(assert (= (and d!28447 res!52179) b!104706))

(assert (= (and b!104706 (not res!52180)) b!104707))

(declare-fun m!116281 () Bool)

(assert (=> d!28447 m!116281))

(declare-fun m!116283 () Bool)

(assert (=> d!28447 m!116283))

(declare-fun m!116285 () Bool)

(assert (=> b!104707 m!116285))

(assert (=> b!103547 d!28447))

(declare-fun d!28449 () Bool)

(declare-fun lt!53415 () Bool)

(assert (=> d!28449 (= lt!53415 (select (content!108 (toList!785 lt!52919)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!68163 () Bool)

(assert (=> d!28449 (= lt!53415 e!68163)))

(declare-fun res!52181 () Bool)

(assert (=> d!28449 (=> (not res!52181) (not e!68163))))

(assert (=> d!28449 (= res!52181 ((_ is Cons!1608) (toList!785 lt!52919)))))

(assert (=> d!28449 (= (contains!819 (toList!785 lt!52919) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!53415)))

(declare-fun b!104708 () Bool)

(declare-fun e!68164 () Bool)

(assert (=> b!104708 (= e!68163 e!68164)))

(declare-fun res!52182 () Bool)

(assert (=> b!104708 (=> res!52182 e!68164)))

(assert (=> b!104708 (= res!52182 (= (h!2204 (toList!785 lt!52919)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!104709 () Bool)

(assert (=> b!104709 (= e!68164 (contains!819 (t!5665 (toList!785 lt!52919)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!28449 res!52181) b!104708))

(assert (= (and b!104708 (not res!52182)) b!104709))

(declare-fun m!116287 () Bool)

(assert (=> d!28449 m!116287))

(declare-fun m!116289 () Bool)

(assert (=> d!28449 m!116289))

(declare-fun m!116291 () Bool)

(assert (=> b!104709 m!116291))

(assert (=> b!103785 d!28449))

(declare-fun d!28451 () Bool)

(assert (=> d!28451 (isDefined!107 (getValueByKey!153 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(declare-fun lt!53416 () Unit!3141)

(assert (=> d!28451 (= lt!53416 (choose!650 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(declare-fun e!68165 () Bool)

(assert (=> d!28451 e!68165))

(declare-fun res!52183 () Bool)

(assert (=> d!28451 (=> (not res!52183) (not e!68165))))

(assert (=> d!28451 (= res!52183 (isStrictlySorted!303 (toList!785 call!10801)))))

(assert (=> d!28451 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))) lt!53416)))

(declare-fun b!104710 () Bool)

(assert (=> b!104710 (= e!68165 (containsKey!157 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (= (and d!28451 res!52183) b!104710))

(assert (=> d!28451 m!113833))

(assert (=> d!28451 m!114053))

(assert (=> d!28451 m!114053))

(assert (=> d!28451 m!114055))

(assert (=> d!28451 m!113833))

(declare-fun m!116293 () Bool)

(assert (=> d!28451 m!116293))

(declare-fun m!116295 () Bool)

(assert (=> d!28451 m!116295))

(assert (=> b!104710 m!113833))

(assert (=> b!104710 m!114049))

(assert (=> b!103416 d!28451))

(assert (=> b!103416 d!28249))

(assert (=> b!103416 d!28251))

(declare-fun d!28453 () Bool)

(assert (=> d!28453 (= (get!1328 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2873 (getValueByKey!153 (toList!785 lt!52612) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27783 d!28453))

(assert (=> d!27783 d!28081))

(assert (=> d!27849 d!27855))

(assert (=> d!27849 d!27857))

(declare-fun d!28455 () Bool)

(declare-fun e!68167 () Bool)

(assert (=> d!28455 e!68167))

(declare-fun res!52184 () Bool)

(assert (=> d!28455 (=> res!52184 e!68167)))

(declare-fun lt!53419 () Bool)

(assert (=> d!28455 (= res!52184 (not lt!53419))))

(declare-fun lt!53418 () Bool)

(assert (=> d!28455 (= lt!53419 lt!53418)))

(declare-fun lt!53420 () Unit!3141)

(declare-fun e!68166 () Unit!3141)

(assert (=> d!28455 (= lt!53420 e!68166)))

(declare-fun c!18160 () Bool)

(assert (=> d!28455 (= c!18160 lt!53418)))

(assert (=> d!28455 (= lt!53418 (containsKey!157 (toList!785 lt!52614) lt!52604))))

(assert (=> d!28455 (= (contains!816 lt!52614 lt!52604) lt!53419)))

(declare-fun b!104711 () Bool)

(declare-fun lt!53417 () Unit!3141)

(assert (=> b!104711 (= e!68166 lt!53417)))

(assert (=> b!104711 (= lt!53417 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52614) lt!52604))))

(assert (=> b!104711 (isDefined!107 (getValueByKey!153 (toList!785 lt!52614) lt!52604))))

(declare-fun b!104712 () Bool)

(declare-fun Unit!3202 () Unit!3141)

(assert (=> b!104712 (= e!68166 Unit!3202)))

(declare-fun b!104713 () Bool)

(assert (=> b!104713 (= e!68167 (isDefined!107 (getValueByKey!153 (toList!785 lt!52614) lt!52604)))))

(assert (= (and d!28455 c!18160) b!104711))

(assert (= (and d!28455 (not c!18160)) b!104712))

(assert (= (and d!28455 (not res!52184)) b!104713))

(declare-fun m!116297 () Bool)

(assert (=> d!28455 m!116297))

(declare-fun m!116299 () Bool)

(assert (=> b!104711 m!116299))

(assert (=> b!104711 m!114623))

(assert (=> b!104711 m!114623))

(declare-fun m!116301 () Bool)

(assert (=> b!104711 m!116301))

(assert (=> b!104713 m!114623))

(assert (=> b!104713 m!114623))

(assert (=> b!104713 m!116301))

(assert (=> d!27849 d!28455))

(declare-fun d!28457 () Bool)

(assert (=> d!28457 (= (apply!97 (+!134 lt!52614 (tuple2!2373 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52604) (apply!97 lt!52614 lt!52604))))

(assert (=> d!28457 true))

(declare-fun _$34!883 () Unit!3141)

(assert (=> d!28457 (= (choose!655 lt!52614 lt!52622 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52604) _$34!883)))

(declare-fun bs!4293 () Bool)

(assert (= bs!4293 d!28457))

(assert (=> bs!4293 m!113887))

(assert (=> bs!4293 m!113887))

(assert (=> bs!4293 m!113895))

(assert (=> bs!4293 m!113901))

(assert (=> d!27849 d!28457))

(assert (=> d!27849 d!27865))

(declare-fun d!28459 () Bool)

(assert (=> d!28459 (= (+!134 (getCurrentListMap!462 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (getCurrentListMap!462 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28459 true))

(declare-fun _$5!107 () Unit!3141)

(assert (=> d!28459 (= (choose!648 (_keys!4261 newMap!16) (_values!2543 newMap!16) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3192 lt!52554) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329 (defaultEntry!2560 newMap!16)) _$5!107)))

(declare-fun bs!4294 () Bool)

(assert (= bs!4294 d!28459))

(assert (=> bs!4294 m!113847))

(assert (=> bs!4294 m!113847))

(assert (=> bs!4294 m!114065))

(assert (=> bs!4294 m!113831))

(assert (=> bs!4294 m!114067))

(assert (=> d!27711 d!28459))

(assert (=> d!27711 d!27973))

(declare-fun d!28461 () Bool)

(assert (=> d!28461 (= (get!1328 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2873 (getValueByKey!153 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27817 d!28461))

(assert (=> d!27817 d!28191))

(declare-fun b!104714 () Bool)

(declare-fun e!68169 () (_ BitVec 32))

(assert (=> b!104714 (= e!68169 #b00000000000000000000000000000000)))

(declare-fun bm!10996 () Bool)

(declare-fun call!10999 () (_ BitVec 32))

(assert (=> bm!10996 (= call!10999 (arrayCountValidKeys!0 (_keys!4261 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104715 () Bool)

(declare-fun e!68168 () (_ BitVec 32))

(assert (=> b!104715 (= e!68168 call!10999)))

(declare-fun d!28463 () Bool)

(declare-fun lt!53421 () (_ BitVec 32))

(assert (=> d!28463 (and (bvsge lt!53421 #b00000000000000000000000000000000) (bvsle lt!53421 (bvsub (size!2299 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!28463 (= lt!53421 e!68169)))

(declare-fun c!18161 () Bool)

(assert (=> d!28463 (= c!18161 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28463 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2299 (_keys!4261 newMap!16)) (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28463 (= (arrayCountValidKeys!0 (_keys!4261 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2299 (_keys!4261 newMap!16))) lt!53421)))

(declare-fun b!104716 () Bool)

(assert (=> b!104716 (= e!68169 e!68168)))

(declare-fun c!18162 () Bool)

(assert (=> b!104716 (= c!18162 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104717 () Bool)

(assert (=> b!104717 (= e!68168 (bvadd #b00000000000000000000000000000001 call!10999))))

(assert (= (and d!28463 c!18161) b!104714))

(assert (= (and d!28463 (not c!18161)) b!104716))

(assert (= (and b!104716 c!18162) b!104717))

(assert (= (and b!104716 (not c!18162)) b!104715))

(assert (= (or b!104717 b!104715) bm!10996))

(declare-fun m!116303 () Bool)

(assert (=> bm!10996 m!116303))

(assert (=> b!104716 m!115617))

(assert (=> b!104716 m!115617))

(assert (=> b!104716 m!115627))

(assert (=> bm!10850 d!28463))

(declare-fun d!28465 () Bool)

(declare-fun e!68171 () Bool)

(assert (=> d!28465 e!68171))

(declare-fun res!52185 () Bool)

(assert (=> d!28465 (=> res!52185 e!68171)))

(declare-fun lt!53424 () Bool)

(assert (=> d!28465 (= res!52185 (not lt!53424))))

(declare-fun lt!53423 () Bool)

(assert (=> d!28465 (= lt!53424 lt!53423)))

(declare-fun lt!53425 () Unit!3141)

(declare-fun e!68170 () Unit!3141)

(assert (=> d!28465 (= lt!53425 e!68170)))

(declare-fun c!18163 () Bool)

(assert (=> d!28465 (= c!18163 lt!53423)))

(assert (=> d!28465 (= lt!53423 (containsKey!157 (toList!785 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) lt!52885))))

(assert (=> d!28465 (= (contains!816 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!52885) lt!53424)))

(declare-fun b!104718 () Bool)

(declare-fun lt!53422 () Unit!3141)

(assert (=> b!104718 (= e!68170 lt!53422)))

(assert (=> b!104718 (= lt!53422 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) lt!52885))))

(assert (=> b!104718 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) lt!52885))))

(declare-fun b!104719 () Bool)

(declare-fun Unit!3203 () Unit!3141)

(assert (=> b!104719 (= e!68170 Unit!3203)))

(declare-fun b!104720 () Bool)

(assert (=> b!104720 (= e!68171 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) lt!52885)))))

(assert (= (and d!28465 c!18163) b!104718))

(assert (= (and d!28465 (not c!18163)) b!104719))

(assert (= (and d!28465 (not res!52185)) b!104720))

(declare-fun m!116305 () Bool)

(assert (=> d!28465 m!116305))

(declare-fun m!116307 () Bool)

(assert (=> b!104718 m!116307))

(declare-fun m!116309 () Bool)

(assert (=> b!104718 m!116309))

(assert (=> b!104718 m!116309))

(declare-fun m!116311 () Bool)

(assert (=> b!104718 m!116311))

(assert (=> b!104720 m!116309))

(assert (=> b!104720 m!116309))

(assert (=> b!104720 m!116311))

(assert (=> b!103699 d!28465))

(declare-fun d!28467 () Bool)

(assert (=> d!28467 (= (apply!97 (+!134 lt!52878 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!52868) (apply!97 lt!52878 lt!52868))))

(declare-fun lt!53426 () Unit!3141)

(assert (=> d!28467 (= lt!53426 (choose!655 lt!52878 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) lt!52868))))

(declare-fun e!68172 () Bool)

(assert (=> d!28467 e!68172))

(declare-fun res!52186 () Bool)

(assert (=> d!28467 (=> (not res!52186) (not e!68172))))

(assert (=> d!28467 (= res!52186 (contains!816 lt!52878 lt!52868))))

(assert (=> d!28467 (= (addApplyDifferent!73 lt!52878 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) lt!52868) lt!53426)))

(declare-fun b!104721 () Bool)

(assert (=> b!104721 (= e!68172 (not (= lt!52868 lt!52886)))))

(assert (= (and d!28467 res!52186) b!104721))

(assert (=> d!28467 m!114447))

(declare-fun m!116313 () Bool)

(assert (=> d!28467 m!116313))

(assert (=> d!28467 m!114447))

(assert (=> d!28467 m!114457))

(assert (=> d!28467 m!114463))

(declare-fun m!116315 () Bool)

(assert (=> d!28467 m!116315))

(assert (=> b!103699 d!28467))

(declare-fun d!28469 () Bool)

(declare-fun e!68173 () Bool)

(assert (=> d!28469 e!68173))

(declare-fun res!52188 () Bool)

(assert (=> d!28469 (=> (not res!52188) (not e!68173))))

(declare-fun lt!53430 () ListLongMap!1539)

(assert (=> d!28469 (= res!52188 (contains!816 lt!53430 (_1!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(declare-fun lt!53428 () List!1612)

(assert (=> d!28469 (= lt!53430 (ListLongMap!1540 lt!53428))))

(declare-fun lt!53427 () Unit!3141)

(declare-fun lt!53429 () Unit!3141)

(assert (=> d!28469 (= lt!53427 lt!53429)))

(assert (=> d!28469 (= (getValueByKey!153 lt!53428 (_1!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28469 (= lt!53429 (lemmaContainsTupThenGetReturnValue!72 lt!53428 (_1!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28469 (= lt!53428 (insertStrictlySorted!75 (toList!785 lt!52878) (_1!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28469 (= (+!134 lt!52878 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!53430)))

(declare-fun b!104722 () Bool)

(declare-fun res!52187 () Bool)

(assert (=> b!104722 (=> (not res!52187) (not e!68173))))

(assert (=> b!104722 (= res!52187 (= (getValueByKey!153 (toList!785 lt!53430) (_1!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(declare-fun b!104723 () Bool)

(assert (=> b!104723 (= e!68173 (contains!819 (toList!785 lt!53430) (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))

(assert (= (and d!28469 res!52188) b!104722))

(assert (= (and b!104722 res!52187) b!104723))

(declare-fun m!116317 () Bool)

(assert (=> d!28469 m!116317))

(declare-fun m!116319 () Bool)

(assert (=> d!28469 m!116319))

(declare-fun m!116321 () Bool)

(assert (=> d!28469 m!116321))

(declare-fun m!116323 () Bool)

(assert (=> d!28469 m!116323))

(declare-fun m!116325 () Bool)

(assert (=> b!104722 m!116325))

(declare-fun m!116327 () Bool)

(assert (=> b!104723 m!116327))

(assert (=> b!103699 d!28469))

(assert (=> b!103699 d!27993))

(declare-fun d!28471 () Bool)

(assert (=> d!28471 (= (apply!97 lt!52884 lt!52881) (get!1328 (getValueByKey!153 (toList!785 lt!52884) lt!52881)))))

(declare-fun bs!4295 () Bool)

(assert (= bs!4295 d!28471))

(declare-fun m!116329 () Bool)

(assert (=> bs!4295 m!116329))

(assert (=> bs!4295 m!116329))

(declare-fun m!116331 () Bool)

(assert (=> bs!4295 m!116331))

(assert (=> b!103699 d!28471))

(declare-fun d!28473 () Bool)

(assert (=> d!28473 (= (apply!97 lt!52878 lt!52868) (get!1328 (getValueByKey!153 (toList!785 lt!52878) lt!52868)))))

(declare-fun bs!4296 () Bool)

(assert (= bs!4296 d!28473))

(declare-fun m!116333 () Bool)

(assert (=> bs!4296 m!116333))

(assert (=> bs!4296 m!116333))

(declare-fun m!116335 () Bool)

(assert (=> bs!4296 m!116335))

(assert (=> b!103699 d!28473))

(declare-fun d!28475 () Bool)

(assert (=> d!28475 (= (apply!97 (+!134 lt!52877 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!52872) (apply!97 lt!52877 lt!52872))))

(declare-fun lt!53431 () Unit!3141)

(assert (=> d!28475 (= lt!53431 (choose!655 lt!52877 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) lt!52872))))

(declare-fun e!68174 () Bool)

(assert (=> d!28475 e!68174))

(declare-fun res!52189 () Bool)

(assert (=> d!28475 (=> (not res!52189) (not e!68174))))

(assert (=> d!28475 (= res!52189 (contains!816 lt!52877 lt!52872))))

(assert (=> d!28475 (= (addApplyDifferent!73 lt!52877 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)) lt!52872) lt!53431)))

(declare-fun b!104724 () Bool)

(assert (=> b!104724 (= e!68174 (not (= lt!52872 lt!52882)))))

(assert (= (and d!28475 res!52189) b!104724))

(assert (=> d!28475 m!114437))

(declare-fun m!116337 () Bool)

(assert (=> d!28475 m!116337))

(assert (=> d!28475 m!114437))

(assert (=> d!28475 m!114439))

(assert (=> d!28475 m!114451))

(declare-fun m!116339 () Bool)

(assert (=> d!28475 m!116339))

(assert (=> b!103699 d!28475))

(declare-fun d!28477 () Bool)

(declare-fun e!68175 () Bool)

(assert (=> d!28477 e!68175))

(declare-fun res!52191 () Bool)

(assert (=> d!28477 (=> (not res!52191) (not e!68175))))

(declare-fun lt!53435 () ListLongMap!1539)

(assert (=> d!28477 (= res!52191 (contains!816 lt!53435 (_1!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(declare-fun lt!53433 () List!1612)

(assert (=> d!28477 (= lt!53435 (ListLongMap!1540 lt!53433))))

(declare-fun lt!53432 () Unit!3141)

(declare-fun lt!53434 () Unit!3141)

(assert (=> d!28477 (= lt!53432 lt!53434)))

(assert (=> d!28477 (= (getValueByKey!153 lt!53433 (_1!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28477 (= lt!53434 (lemmaContainsTupThenGetReturnValue!72 lt!53433 (_1!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28477 (= lt!53433 (insertStrictlySorted!75 (toList!785 lt!52877) (_1!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))))))

(assert (=> d!28477 (= (+!134 lt!52877 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!53435)))

(declare-fun b!104725 () Bool)

(declare-fun res!52190 () Bool)

(assert (=> b!104725 (=> (not res!52190) (not e!68175))))

(assert (=> b!104725 (= res!52190 (= (getValueByKey!153 (toList!785 lt!53435) (_1!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))))

(declare-fun b!104726 () Bool)

(assert (=> b!104726 (= e!68175 (contains!819 (toList!785 lt!53435) (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))))))

(assert (= (and d!28477 res!52191) b!104725))

(assert (= (and b!104725 res!52190) b!104726))

(declare-fun m!116341 () Bool)

(assert (=> d!28477 m!116341))

(declare-fun m!116343 () Bool)

(assert (=> d!28477 m!116343))

(declare-fun m!116345 () Bool)

(assert (=> d!28477 m!116345))

(declare-fun m!116347 () Bool)

(assert (=> d!28477 m!116347))

(declare-fun m!116349 () Bool)

(assert (=> b!104725 m!116349))

(declare-fun m!116351 () Bool)

(assert (=> b!104726 m!116351))

(assert (=> b!103699 d!28477))

(declare-fun d!28479 () Bool)

(assert (=> d!28479 (= (apply!97 (+!134 lt!52884 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!52881) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52884 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) lt!52881)))))

(declare-fun bs!4297 () Bool)

(assert (= bs!4297 d!28479))

(declare-fun m!116353 () Bool)

(assert (=> bs!4297 m!116353))

(assert (=> bs!4297 m!116353))

(declare-fun m!116355 () Bool)

(assert (=> bs!4297 m!116355))

(assert (=> b!103699 d!28479))

(declare-fun d!28481 () Bool)

(assert (=> d!28481 (= (apply!97 (+!134 lt!52878 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!52868) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52878 (tuple2!2373 lt!52886 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) lt!52868)))))

(declare-fun bs!4298 () Bool)

(assert (= bs!4298 d!28481))

(declare-fun m!116357 () Bool)

(assert (=> bs!4298 m!116357))

(assert (=> bs!4298 m!116357))

(declare-fun m!116359 () Bool)

(assert (=> bs!4298 m!116359))

(assert (=> b!103699 d!28481))

(declare-fun d!28483 () Bool)

(assert (=> d!28483 (contains!816 (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!52885)))

(declare-fun lt!53436 () Unit!3141)

(assert (=> d!28483 (= lt!53436 (choose!654 lt!52867 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) lt!52885))))

(assert (=> d!28483 (contains!816 lt!52867 lt!52885)))

(assert (=> d!28483 (= (addStillContains!73 lt!52867 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) lt!52885) lt!53436)))

(declare-fun bs!4299 () Bool)

(assert (= bs!4299 d!28483))

(assert (=> bs!4299 m!114445))

(assert (=> bs!4299 m!114445))

(assert (=> bs!4299 m!114461))

(declare-fun m!116361 () Bool)

(assert (=> bs!4299 m!116361))

(declare-fun m!116363 () Bool)

(assert (=> bs!4299 m!116363))

(assert (=> b!103699 d!28483))

(declare-fun d!28485 () Bool)

(assert (=> d!28485 (= (apply!97 (+!134 lt!52884 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!52881) (apply!97 lt!52884 lt!52881))))

(declare-fun lt!53437 () Unit!3141)

(assert (=> d!28485 (= lt!53437 (choose!655 lt!52884 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) lt!52881))))

(declare-fun e!68176 () Bool)

(assert (=> d!28485 e!68176))

(declare-fun res!52192 () Bool)

(assert (=> d!28485 (=> (not res!52192) (not e!68176))))

(assert (=> d!28485 (= res!52192 (contains!816 lt!52884 lt!52881))))

(assert (=> d!28485 (= (addApplyDifferent!73 lt!52884 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)) lt!52881) lt!53437)))

(declare-fun b!104727 () Bool)

(assert (=> b!104727 (= e!68176 (not (= lt!52881 lt!52879)))))

(assert (= (and d!28485 res!52192) b!104727))

(assert (=> d!28485 m!114441))

(declare-fun m!116365 () Bool)

(assert (=> d!28485 m!116365))

(assert (=> d!28485 m!114441))

(assert (=> d!28485 m!114443))

(assert (=> d!28485 m!114467))

(declare-fun m!116367 () Bool)

(assert (=> d!28485 m!116367))

(assert (=> b!103699 d!28485))

(declare-fun d!28487 () Bool)

(assert (=> d!28487 (= (apply!97 (+!134 lt!52877 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16)))) lt!52872) (get!1328 (getValueByKey!153 (toList!785 (+!134 lt!52877 (tuple2!2373 lt!52882 (ite c!17763 (ite c!17759 (minValue!2437 newMap!16) lt!52329) (minValue!2437 newMap!16))))) lt!52872)))))

(declare-fun bs!4300 () Bool)

(assert (= bs!4300 d!28487))

(declare-fun m!116369 () Bool)

(assert (=> bs!4300 m!116369))

(assert (=> bs!4300 m!116369))

(declare-fun m!116371 () Bool)

(assert (=> bs!4300 m!116371))

(assert (=> b!103699 d!28487))

(declare-fun d!28489 () Bool)

(declare-fun e!68177 () Bool)

(assert (=> d!28489 e!68177))

(declare-fun res!52194 () Bool)

(assert (=> d!28489 (=> (not res!52194) (not e!68177))))

(declare-fun lt!53441 () ListLongMap!1539)

(assert (=> d!28489 (= res!52194 (contains!816 lt!53441 (_1!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(declare-fun lt!53439 () List!1612)

(assert (=> d!28489 (= lt!53441 (ListLongMap!1540 lt!53439))))

(declare-fun lt!53438 () Unit!3141)

(declare-fun lt!53440 () Unit!3141)

(assert (=> d!28489 (= lt!53438 lt!53440)))

(assert (=> d!28489 (= (getValueByKey!153 lt!53439 (_1!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28489 (= lt!53440 (lemmaContainsTupThenGetReturnValue!72 lt!53439 (_1!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28489 (= lt!53439 (insertStrictlySorted!75 (toList!785 lt!52867) (_1!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28489 (= (+!134 lt!52867 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!53441)))

(declare-fun b!104728 () Bool)

(declare-fun res!52193 () Bool)

(assert (=> b!104728 (=> (not res!52193) (not e!68177))))

(assert (=> b!104728 (= res!52193 (= (getValueByKey!153 (toList!785 lt!53441) (_1!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))))))))

(declare-fun b!104729 () Bool)

(assert (=> b!104729 (= e!68177 (contains!819 (toList!785 lt!53441) (tuple2!2373 lt!52869 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))))))

(assert (= (and d!28489 res!52194) b!104728))

(assert (= (and b!104728 res!52193) b!104729))

(declare-fun m!116373 () Bool)

(assert (=> d!28489 m!116373))

(declare-fun m!116375 () Bool)

(assert (=> d!28489 m!116375))

(declare-fun m!116377 () Bool)

(assert (=> d!28489 m!116377))

(declare-fun m!116379 () Bool)

(assert (=> d!28489 m!116379))

(declare-fun m!116381 () Bool)

(assert (=> b!104728 m!116381))

(declare-fun m!116383 () Bool)

(assert (=> b!104729 m!116383))

(assert (=> b!103699 d!28489))

(declare-fun d!28491 () Bool)

(declare-fun e!68178 () Bool)

(assert (=> d!28491 e!68178))

(declare-fun res!52196 () Bool)

(assert (=> d!28491 (=> (not res!52196) (not e!68178))))

(declare-fun lt!53445 () ListLongMap!1539)

(assert (=> d!28491 (= res!52196 (contains!816 lt!53445 (_1!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(declare-fun lt!53443 () List!1612)

(assert (=> d!28491 (= lt!53445 (ListLongMap!1540 lt!53443))))

(declare-fun lt!53442 () Unit!3141)

(declare-fun lt!53444 () Unit!3141)

(assert (=> d!28491 (= lt!53442 lt!53444)))

(assert (=> d!28491 (= (getValueByKey!153 lt!53443 (_1!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28491 (= lt!53444 (lemmaContainsTupThenGetReturnValue!72 lt!53443 (_1!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28491 (= lt!53443 (insertStrictlySorted!75 (toList!785 lt!52884) (_1!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) (_2!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28491 (= (+!134 lt!52884 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))) lt!53445)))

(declare-fun b!104730 () Bool)

(declare-fun res!52195 () Bool)

(assert (=> b!104730 (=> (not res!52195) (not e!68178))))

(assert (=> b!104730 (= res!52195 (= (getValueByKey!153 (toList!785 lt!53445) (_1!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16))))) (Some!158 (_2!1197 (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))))))))

(declare-fun b!104731 () Bool)

(assert (=> b!104731 (= e!68178 (contains!819 (toList!785 lt!53445) (tuple2!2373 lt!52879 (ite (and c!17763 c!17759) lt!52329 (zeroValue!2437 newMap!16)))))))

(assert (= (and d!28491 res!52196) b!104730))

(assert (= (and b!104730 res!52195) b!104731))

(declare-fun m!116385 () Bool)

(assert (=> d!28491 m!116385))

(declare-fun m!116387 () Bool)

(assert (=> d!28491 m!116387))

(declare-fun m!116389 () Bool)

(assert (=> d!28491 m!116389))

(declare-fun m!116391 () Bool)

(assert (=> d!28491 m!116391))

(declare-fun m!116393 () Bool)

(assert (=> b!104730 m!116393))

(declare-fun m!116395 () Bool)

(assert (=> b!104731 m!116395))

(assert (=> b!103699 d!28491))

(declare-fun d!28493 () Bool)

(assert (=> d!28493 (= (apply!97 lt!52877 lt!52872) (get!1328 (getValueByKey!153 (toList!785 lt!52877) lt!52872)))))

(declare-fun bs!4301 () Bool)

(assert (= bs!4301 d!28493))

(declare-fun m!116397 () Bool)

(assert (=> bs!4301 m!116397))

(assert (=> bs!4301 m!116397))

(declare-fun m!116399 () Bool)

(assert (=> bs!4301 m!116399))

(assert (=> b!103699 d!28493))

(declare-fun d!28495 () Bool)

(declare-fun e!68180 () Bool)

(assert (=> d!28495 e!68180))

(declare-fun res!52197 () Bool)

(assert (=> d!28495 (=> res!52197 e!68180)))

(declare-fun lt!53448 () Bool)

(assert (=> d!28495 (= res!52197 (not lt!53448))))

(declare-fun lt!53447 () Bool)

(assert (=> d!28495 (= lt!53448 lt!53447)))

(declare-fun lt!53449 () Unit!3141)

(declare-fun e!68179 () Unit!3141)

(assert (=> d!28495 (= lt!53449 e!68179)))

(declare-fun c!18164 () Bool)

(assert (=> d!28495 (= c!18164 lt!53447)))

(assert (=> d!28495 (= lt!53447 (containsKey!157 (toList!785 lt!52696) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28495 (= (contains!816 lt!52696 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53448)))

(declare-fun b!104732 () Bool)

(declare-fun lt!53446 () Unit!3141)

(assert (=> b!104732 (= e!68179 lt!53446)))

(assert (=> b!104732 (= lt!53446 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52696) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104732 (isDefined!107 (getValueByKey!153 (toList!785 lt!52696) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104733 () Bool)

(declare-fun Unit!3204 () Unit!3141)

(assert (=> b!104733 (= e!68179 Unit!3204)))

(declare-fun b!104734 () Bool)

(assert (=> b!104734 (= e!68180 (isDefined!107 (getValueByKey!153 (toList!785 lt!52696) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28495 c!18164) b!104732))

(assert (= (and d!28495 (not c!18164)) b!104733))

(assert (= (and d!28495 (not res!52197)) b!104734))

(declare-fun m!116401 () Bool)

(assert (=> d!28495 m!116401))

(declare-fun m!116403 () Bool)

(assert (=> b!104732 m!116403))

(assert (=> b!104732 m!115707))

(assert (=> b!104732 m!115707))

(declare-fun m!116405 () Bool)

(assert (=> b!104732 m!116405))

(assert (=> b!104734 m!115707))

(assert (=> b!104734 m!115707))

(assert (=> b!104734 m!116405))

(assert (=> bm!10854 d!28495))

(declare-fun b!104737 () Bool)

(declare-fun e!68182 () Option!159)

(assert (=> b!104737 (= e!68182 (getValueByKey!153 (t!5665 (toList!785 lt!52685)) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104735 () Bool)

(declare-fun e!68181 () Option!159)

(assert (=> b!104735 (= e!68181 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52685)))))))

(declare-fun d!28497 () Bool)

(declare-fun c!18165 () Bool)

(assert (=> d!28497 (= c!18165 (and ((_ is Cons!1608) (toList!785 lt!52685)) (= (_1!1197 (h!2204 (toList!785 lt!52685))) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (=> d!28497 (= (getValueByKey!153 (toList!785 lt!52685) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) e!68181)))

(declare-fun b!104736 () Bool)

(assert (=> b!104736 (= e!68181 e!68182)))

(declare-fun c!18166 () Bool)

(assert (=> b!104736 (= c!18166 (and ((_ is Cons!1608) (toList!785 lt!52685)) (not (= (_1!1197 (h!2204 (toList!785 lt!52685))) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))))

(declare-fun b!104738 () Bool)

(assert (=> b!104738 (= e!68182 None!157)))

(assert (= (and d!28497 c!18165) b!104735))

(assert (= (and d!28497 (not c!18165)) b!104736))

(assert (= (and b!104736 c!18166) b!104737))

(assert (= (and b!104736 (not c!18166)) b!104738))

(declare-fun m!116407 () Bool)

(assert (=> b!104737 m!116407))

(assert (=> b!103464 d!28497))

(declare-fun b!104739 () Bool)

(declare-fun e!68184 () List!1612)

(declare-fun call!11002 () List!1612)

(assert (=> b!104739 (= e!68184 call!11002)))

(declare-fun b!104740 () Bool)

(declare-fun e!68185 () List!1612)

(assert (=> b!104740 (= e!68185 (insertStrictlySorted!75 (t!5665 (t!5665 (toList!785 lt!52333))) (_1!1197 lt!52331) (_2!1197 lt!52331)))))

(declare-fun b!104741 () Bool)

(declare-fun res!52198 () Bool)

(declare-fun e!68187 () Bool)

(assert (=> b!104741 (=> (not res!52198) (not e!68187))))

(declare-fun lt!53450 () List!1612)

(assert (=> b!104741 (= res!52198 (containsKey!157 lt!53450 (_1!1197 lt!52331)))))

(declare-fun bm!10997 () Bool)

(declare-fun call!11000 () List!1612)

(assert (=> bm!10997 (= call!11000 call!11002)))

(declare-fun b!104742 () Bool)

(declare-fun e!68183 () List!1612)

(assert (=> b!104742 (= e!68183 call!11000)))

(declare-fun b!104743 () Bool)

(declare-fun c!18167 () Bool)

(declare-fun c!18169 () Bool)

(assert (=> b!104743 (= e!68185 (ite c!18169 (t!5665 (t!5665 (toList!785 lt!52333))) (ite c!18167 (Cons!1608 (h!2204 (t!5665 (toList!785 lt!52333))) (t!5665 (t!5665 (toList!785 lt!52333)))) Nil!1609)))))

(declare-fun d!28499 () Bool)

(assert (=> d!28499 e!68187))

(declare-fun res!52199 () Bool)

(assert (=> d!28499 (=> (not res!52199) (not e!68187))))

(assert (=> d!28499 (= res!52199 (isStrictlySorted!303 lt!53450))))

(declare-fun e!68186 () List!1612)

(assert (=> d!28499 (= lt!53450 e!68186)))

(declare-fun c!18170 () Bool)

(assert (=> d!28499 (= c!18170 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52333))) (bvslt (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333)))) (_1!1197 lt!52331))))))

(assert (=> d!28499 (isStrictlySorted!303 (t!5665 (toList!785 lt!52333)))))

(assert (=> d!28499 (= (insertStrictlySorted!75 (t!5665 (toList!785 lt!52333)) (_1!1197 lt!52331) (_2!1197 lt!52331)) lt!53450)))

(declare-fun b!104744 () Bool)

(assert (=> b!104744 (= c!18167 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52333))) (bvsgt (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333)))) (_1!1197 lt!52331))))))

(assert (=> b!104744 (= e!68184 e!68183)))

(declare-fun bm!10998 () Bool)

(declare-fun call!11001 () List!1612)

(assert (=> bm!10998 (= call!11001 ($colon$colon!79 e!68185 (ite c!18170 (h!2204 (t!5665 (toList!785 lt!52333))) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331)))))))

(declare-fun c!18168 () Bool)

(assert (=> bm!10998 (= c!18168 c!18170)))

(declare-fun b!104745 () Bool)

(assert (=> b!104745 (= e!68187 (contains!819 lt!53450 (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))))))

(declare-fun b!104746 () Bool)

(assert (=> b!104746 (= e!68186 call!11001)))

(declare-fun bm!10999 () Bool)

(assert (=> bm!10999 (= call!11002 call!11001)))

(declare-fun b!104747 () Bool)

(assert (=> b!104747 (= e!68183 call!11000)))

(declare-fun b!104748 () Bool)

(assert (=> b!104748 (= e!68186 e!68184)))

(assert (=> b!104748 (= c!18169 (and ((_ is Cons!1608) (t!5665 (toList!785 lt!52333))) (= (_1!1197 (h!2204 (t!5665 (toList!785 lt!52333)))) (_1!1197 lt!52331))))))

(assert (= (and d!28499 c!18170) b!104746))

(assert (= (and d!28499 (not c!18170)) b!104748))

(assert (= (and b!104748 c!18169) b!104739))

(assert (= (and b!104748 (not c!18169)) b!104744))

(assert (= (and b!104744 c!18167) b!104747))

(assert (= (and b!104744 (not c!18167)) b!104742))

(assert (= (or b!104747 b!104742) bm!10997))

(assert (= (or b!104739 bm!10997) bm!10999))

(assert (= (or b!104746 bm!10999) bm!10998))

(assert (= (and bm!10998 c!18168) b!104740))

(assert (= (and bm!10998 (not c!18168)) b!104743))

(assert (= (and d!28499 res!52199) b!104741))

(assert (= (and b!104741 res!52198) b!104745))

(declare-fun m!116409 () Bool)

(assert (=> b!104745 m!116409))

(declare-fun m!116411 () Bool)

(assert (=> d!28499 m!116411))

(assert (=> d!28499 m!114785))

(declare-fun m!116413 () Bool)

(assert (=> b!104741 m!116413))

(declare-fun m!116415 () Bool)

(assert (=> b!104740 m!116415))

(declare-fun m!116417 () Bool)

(assert (=> bm!10998 m!116417))

(assert (=> b!103592 d!28499))

(assert (=> bm!10881 d!27761))

(declare-fun d!28501 () Bool)

(assert (=> d!28501 (= (apply!97 lt!52638 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (getValueByKey!153 (toList!785 lt!52638) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4302 () Bool)

(assert (= bs!4302 d!28501))

(assert (=> bs!4302 m!113969))

(assert (=> bs!4302 m!114937))

(assert (=> bs!4302 m!114937))

(declare-fun m!116419 () Bool)

(assert (=> bs!4302 m!116419))

(assert (=> b!103385 d!28501))

(declare-fun d!28503 () Bool)

(declare-fun c!18171 () Bool)

(assert (=> d!28503 (= c!18171 ((_ is ValueCellFull!992) (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!68188 () V!3209)

(assert (=> d!28503 (= (get!1325 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68188)))

(declare-fun b!104749 () Bool)

(assert (=> b!104749 (= e!68188 (get!1326 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104750 () Bool)

(assert (=> b!104750 (= e!68188 (get!1327 (select (arr!2045 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28503 c!18171) b!104749))

(assert (= (and d!28503 (not c!18171)) b!104750))

(assert (=> b!104749 m!113991))

(assert (=> b!104749 m!113987))

(declare-fun m!116421 () Bool)

(assert (=> b!104749 m!116421))

(assert (=> b!104750 m!113991))

(assert (=> b!104750 m!113987))

(declare-fun m!116423 () Bool)

(assert (=> b!104750 m!116423))

(assert (=> b!103385 d!28503))

(declare-fun e!68190 () Option!159)

(declare-fun b!104753 () Bool)

(assert (=> b!104753 (= e!68190 (getValueByKey!153 (t!5665 (toList!785 lt!52958)) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104751 () Bool)

(declare-fun e!68189 () Option!159)

(assert (=> b!104751 (= e!68189 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52958)))))))

(declare-fun d!28505 () Bool)

(declare-fun c!18172 () Bool)

(assert (=> d!28505 (= c!18172 (and ((_ is Cons!1608) (toList!785 lt!52958)) (= (_1!1197 (h!2204 (toList!785 lt!52958))) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28505 (= (getValueByKey!153 (toList!785 lt!52958) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68189)))

(declare-fun b!104752 () Bool)

(assert (=> b!104752 (= e!68189 e!68190)))

(declare-fun c!18173 () Bool)

(assert (=> b!104752 (= c!18173 (and ((_ is Cons!1608) (toList!785 lt!52958)) (not (= (_1!1197 (h!2204 (toList!785 lt!52958))) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104754 () Bool)

(assert (=> b!104754 (= e!68190 None!157)))

(assert (= (and d!28505 c!18172) b!104751))

(assert (= (and d!28505 (not c!18172)) b!104752))

(assert (= (and b!104752 c!18173) b!104753))

(assert (= (and b!104752 (not c!18173)) b!104754))

(declare-fun m!116425 () Bool)

(assert (=> b!104753 m!116425))

(assert (=> b!103807 d!28505))

(assert (=> d!27863 d!27851))

(declare-fun d!28507 () Bool)

(declare-fun e!68192 () Bool)

(assert (=> d!28507 e!68192))

(declare-fun res!52200 () Bool)

(assert (=> d!28507 (=> res!52200 e!68192)))

(declare-fun lt!53453 () Bool)

(assert (=> d!28507 (= res!52200 (not lt!53453))))

(declare-fun lt!53452 () Bool)

(assert (=> d!28507 (= lt!53453 lt!53452)))

(declare-fun lt!53454 () Unit!3141)

(declare-fun e!68191 () Unit!3141)

(assert (=> d!28507 (= lt!53454 e!68191)))

(declare-fun c!18174 () Bool)

(assert (=> d!28507 (= c!18174 lt!53452)))

(assert (=> d!28507 (= lt!53452 (containsKey!157 (toList!785 lt!52613) lt!52608))))

(assert (=> d!28507 (= (contains!816 lt!52613 lt!52608) lt!53453)))

(declare-fun b!104755 () Bool)

(declare-fun lt!53451 () Unit!3141)

(assert (=> b!104755 (= e!68191 lt!53451)))

(assert (=> b!104755 (= lt!53451 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52613) lt!52608))))

(assert (=> b!104755 (isDefined!107 (getValueByKey!153 (toList!785 lt!52613) lt!52608))))

(declare-fun b!104756 () Bool)

(declare-fun Unit!3205 () Unit!3141)

(assert (=> b!104756 (= e!68191 Unit!3205)))

(declare-fun b!104757 () Bool)

(assert (=> b!104757 (= e!68192 (isDefined!107 (getValueByKey!153 (toList!785 lt!52613) lt!52608)))))

(assert (= (and d!28507 c!18174) b!104755))

(assert (= (and d!28507 (not c!18174)) b!104756))

(assert (= (and d!28507 (not res!52200)) b!104757))

(declare-fun m!116427 () Bool)

(assert (=> d!28507 m!116427))

(declare-fun m!116429 () Bool)

(assert (=> b!104755 m!116429))

(assert (=> b!104755 m!114615))

(assert (=> b!104755 m!114615))

(declare-fun m!116431 () Bool)

(assert (=> b!104755 m!116431))

(assert (=> b!104757 m!114615))

(assert (=> b!104757 m!114615))

(assert (=> b!104757 m!116431))

(assert (=> d!27863 d!28507))

(declare-fun d!28509 () Bool)

(assert (=> d!28509 (= (apply!97 (+!134 lt!52613 (tuple2!2373 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!52608) (apply!97 lt!52613 lt!52608))))

(assert (=> d!28509 true))

(declare-fun _$34!884 () Unit!3141)

(assert (=> d!28509 (= (choose!655 lt!52613 lt!52618 (minValue!2437 (v!2867 (underlying!352 thiss!992))) lt!52608) _$34!884)))

(declare-fun bs!4303 () Bool)

(assert (= bs!4303 d!28509))

(assert (=> bs!4303 m!113877))

(assert (=> bs!4303 m!113877))

(assert (=> bs!4303 m!113879))

(assert (=> bs!4303 m!113891))

(assert (=> d!27863 d!28509))

(assert (=> d!27863 d!27869))

(assert (=> d!27863 d!27873))

(declare-fun d!28511 () Bool)

(declare-fun res!52201 () Bool)

(declare-fun e!68193 () Bool)

(assert (=> d!28511 (=> res!52201 e!68193)))

(assert (=> d!28511 (= res!52201 (and ((_ is Cons!1608) (toList!785 lt!52612)) (= (_1!1197 (h!2204 (toList!785 lt!52612))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28511 (= (containsKey!157 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68193)))

(declare-fun b!104758 () Bool)

(declare-fun e!68194 () Bool)

(assert (=> b!104758 (= e!68193 e!68194)))

(declare-fun res!52202 () Bool)

(assert (=> b!104758 (=> (not res!52202) (not e!68194))))

(assert (=> b!104758 (= res!52202 (and (or (not ((_ is Cons!1608) (toList!785 lt!52612))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52612))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1608) (toList!785 lt!52612)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52612))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104759 () Bool)

(assert (=> b!104759 (= e!68194 (containsKey!157 (t!5665 (toList!785 lt!52612)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28511 (not res!52201)) b!104758))

(assert (= (and b!104758 res!52202) b!104759))

(assert (=> b!104759 m!113707))

(declare-fun m!116433 () Bool)

(assert (=> b!104759 m!116433))

(assert (=> d!27799 d!28511))

(declare-fun d!28513 () Bool)

(assert (=> d!28513 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53455 () Unit!3141)

(assert (=> d!28513 (= lt!53455 (choose!650 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68195 () Bool)

(assert (=> d!28513 e!68195))

(declare-fun res!52203 () Bool)

(assert (=> d!28513 (=> (not res!52203) (not e!68195))))

(assert (=> d!28513 (= res!52203 (isStrictlySorted!303 (toList!785 lt!52612)))))

(assert (=> d!28513 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53455)))

(declare-fun b!104760 () Bool)

(assert (=> b!104760 (= e!68195 (containsKey!157 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28513 res!52203) b!104760))

(assert (=> d!28513 m!114097))

(assert (=> d!28513 m!114097))

(assert (=> d!28513 m!114177))

(declare-fun m!116435 () Bool)

(assert (=> d!28513 m!116435))

(assert (=> d!28513 m!115845))

(assert (=> b!104760 m!114173))

(assert (=> b!103505 d!28513))

(assert (=> b!103505 d!28305))

(assert (=> b!103505 d!27905))

(assert (=> b!103553 d!27811))

(assert (=> bm!10901 d!27761))

(declare-fun d!28515 () Bool)

(assert (=> d!28515 (= (inRange!0 (index!3192 lt!52971) (mask!6695 newMap!16)) (and (bvsge (index!3192 lt!52971) #b00000000000000000000000000000000) (bvslt (index!3192 lt!52971) (bvadd (mask!6695 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!103818 d!28515))

(declare-fun d!28517 () Bool)

(declare-fun e!68197 () Bool)

(assert (=> d!28517 e!68197))

(declare-fun res!52204 () Bool)

(assert (=> d!28517 (=> res!52204 e!68197)))

(declare-fun lt!53458 () Bool)

(assert (=> d!28517 (= res!52204 (not lt!53458))))

(declare-fun lt!53457 () Bool)

(assert (=> d!28517 (= lt!53458 lt!53457)))

(declare-fun lt!53459 () Unit!3141)

(declare-fun e!68196 () Unit!3141)

(assert (=> d!28517 (= lt!53459 e!68196)))

(declare-fun c!18175 () Bool)

(assert (=> d!28517 (= c!18175 lt!53457)))

(assert (=> d!28517 (= lt!53457 (containsKey!157 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (=> d!28517 (= (contains!816 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))) lt!53458)))

(declare-fun b!104761 () Bool)

(declare-fun lt!53456 () Unit!3141)

(assert (=> b!104761 (= e!68196 lt!53456)))

(assert (=> b!104761 (= lt!53456 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (=> b!104761 (isDefined!107 (getValueByKey!153 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(declare-fun b!104762 () Bool)

(declare-fun Unit!3206 () Unit!3141)

(assert (=> b!104762 (= e!68196 Unit!3206)))

(declare-fun b!104763 () Bool)

(assert (=> b!104763 (= e!68197 (isDefined!107 (getValueByKey!153 (toList!785 (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))))

(assert (= (and d!28517 c!18175) b!104761))

(assert (= (and d!28517 (not c!18175)) b!104762))

(assert (= (and d!28517 (not res!52204)) b!104763))

(assert (=> d!28517 m!113833))

(declare-fun m!116437 () Bool)

(assert (=> d!28517 m!116437))

(assert (=> b!104761 m!113833))

(declare-fun m!116439 () Bool)

(assert (=> b!104761 m!116439))

(assert (=> b!104761 m!113833))

(declare-fun m!116441 () Bool)

(assert (=> b!104761 m!116441))

(assert (=> b!104761 m!116441))

(declare-fun m!116443 () Bool)

(assert (=> b!104761 m!116443))

(assert (=> b!104763 m!113833))

(assert (=> b!104763 m!116441))

(assert (=> b!104763 m!116441))

(assert (=> b!104763 m!116443))

(assert (=> b!103421 d!28517))

(declare-fun b!104764 () Bool)

(declare-fun e!68210 () Bool)

(assert (=> b!104764 (= e!68210 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104765 () Bool)

(declare-fun c!18179 () Bool)

(assert (=> b!104765 (= c!18179 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68207 () ListLongMap!1539)

(declare-fun e!68208 () ListLongMap!1539)

(assert (=> b!104765 (= e!68207 e!68208)))

(declare-fun b!104766 () Bool)

(declare-fun e!68203 () Bool)

(declare-fun call!11003 () Bool)

(assert (=> b!104766 (= e!68203 (not call!11003))))

(declare-fun bm!11000 () Bool)

(declare-fun call!11006 () ListLongMap!1539)

(assert (=> bm!11000 (= call!11006 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun e!68202 () Bool)

(declare-fun b!104767 () Bool)

(declare-fun lt!53470 () ListLongMap!1539)

(assert (=> b!104767 (= e!68202 (= (apply!97 lt!53470 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 lt!52532) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 lt!52532)))))

(assert (=> b!104767 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104768 () Bool)

(declare-fun e!68209 () ListLongMap!1539)

(assert (=> b!104768 (= e!68209 e!68207)))

(declare-fun c!18177 () Bool)

(assert (=> b!104768 (= c!18177 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104769 () Bool)

(declare-fun e!68204 () Unit!3141)

(declare-fun lt!53474 () Unit!3141)

(assert (=> b!104769 (= e!68204 lt!53474)))

(declare-fun lt!53461 () ListLongMap!1539)

(assert (=> b!104769 (= lt!53461 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53463 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53463 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53479 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53479 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53481 () Unit!3141)

(assert (=> b!104769 (= lt!53481 (addStillContains!73 lt!53461 lt!53463 (zeroValue!2437 newMap!16) lt!53479))))

(assert (=> b!104769 (contains!816 (+!134 lt!53461 (tuple2!2373 lt!53463 (zeroValue!2437 newMap!16))) lt!53479)))

(declare-fun lt!53477 () Unit!3141)

(assert (=> b!104769 (= lt!53477 lt!53481)))

(declare-fun lt!53472 () ListLongMap!1539)

(assert (=> b!104769 (= lt!53472 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53480 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53480 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53462 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53462 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53467 () Unit!3141)

(assert (=> b!104769 (= lt!53467 (addApplyDifferent!73 lt!53472 lt!53480 (minValue!2437 newMap!16) lt!53462))))

(assert (=> b!104769 (= (apply!97 (+!134 lt!53472 (tuple2!2373 lt!53480 (minValue!2437 newMap!16))) lt!53462) (apply!97 lt!53472 lt!53462))))

(declare-fun lt!53460 () Unit!3141)

(assert (=> b!104769 (= lt!53460 lt!53467)))

(declare-fun lt!53478 () ListLongMap!1539)

(assert (=> b!104769 (= lt!53478 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53473 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53473 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53475 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53475 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53464 () Unit!3141)

(assert (=> b!104769 (= lt!53464 (addApplyDifferent!73 lt!53478 lt!53473 (zeroValue!2437 newMap!16) lt!53475))))

(assert (=> b!104769 (= (apply!97 (+!134 lt!53478 (tuple2!2373 lt!53473 (zeroValue!2437 newMap!16))) lt!53475) (apply!97 lt!53478 lt!53475))))

(declare-fun lt!53469 () Unit!3141)

(assert (=> b!104769 (= lt!53469 lt!53464)))

(declare-fun lt!53471 () ListLongMap!1539)

(assert (=> b!104769 (= lt!53471 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53476 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53476 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53466 () (_ BitVec 64))

(assert (=> b!104769 (= lt!53466 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104769 (= lt!53474 (addApplyDifferent!73 lt!53471 lt!53476 (minValue!2437 newMap!16) lt!53466))))

(assert (=> b!104769 (= (apply!97 (+!134 lt!53471 (tuple2!2373 lt!53476 (minValue!2437 newMap!16))) lt!53466) (apply!97 lt!53471 lt!53466))))

(declare-fun b!104770 () Bool)

(declare-fun e!68198 () Bool)

(declare-fun e!68201 () Bool)

(assert (=> b!104770 (= e!68198 e!68201)))

(declare-fun res!52207 () Bool)

(declare-fun call!11005 () Bool)

(assert (=> b!104770 (= res!52207 call!11005)))

(assert (=> b!104770 (=> (not res!52207) (not e!68201))))

(declare-fun b!104771 () Bool)

(declare-fun e!68206 () Bool)

(assert (=> b!104771 (= e!68206 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104772 () Bool)

(declare-fun e!68205 () Bool)

(assert (=> b!104772 (= e!68205 (= (apply!97 lt!53470 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun call!11009 () ListLongMap!1539)

(declare-fun call!11004 () ListLongMap!1539)

(declare-fun c!18176 () Bool)

(declare-fun call!11008 () ListLongMap!1539)

(declare-fun bm!11001 () Bool)

(assert (=> bm!11001 (= call!11009 (+!134 (ite c!18176 call!11006 (ite c!18177 call!11004 call!11008)) (ite (or c!18176 c!18177) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!11002 () Bool)

(assert (=> bm!11002 (= call!11004 call!11006)))

(declare-fun b!104773 () Bool)

(declare-fun res!52208 () Bool)

(declare-fun e!68200 () Bool)

(assert (=> b!104773 (=> (not res!52208) (not e!68200))))

(declare-fun e!68199 () Bool)

(assert (=> b!104773 (= res!52208 e!68199)))

(declare-fun res!52210 () Bool)

(assert (=> b!104773 (=> res!52210 e!68199)))

(assert (=> b!104773 (= res!52210 (not e!68210))))

(declare-fun res!52205 () Bool)

(assert (=> b!104773 (=> (not res!52205) (not e!68210))))

(assert (=> b!104773 (= res!52205 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!11003 () Bool)

(assert (=> bm!11003 (= call!11005 (contains!816 lt!53470 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11004 () Bool)

(assert (=> bm!11004 (= call!11008 call!11004)))

(declare-fun b!104774 () Bool)

(assert (=> b!104774 (= e!68201 (= (apply!97 lt!53470 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!28519 () Bool)

(assert (=> d!28519 e!68200))

(declare-fun res!52211 () Bool)

(assert (=> d!28519 (=> (not res!52211) (not e!68200))))

(assert (=> d!28519 (= res!52211 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!53465 () ListLongMap!1539)

(assert (=> d!28519 (= lt!53470 lt!53465)))

(declare-fun lt!53468 () Unit!3141)

(assert (=> d!28519 (= lt!53468 e!68204)))

(declare-fun c!18180 () Bool)

(assert (=> d!28519 (= c!18180 e!68206)))

(declare-fun res!52213 () Bool)

(assert (=> d!28519 (=> (not res!52213) (not e!68206))))

(assert (=> d!28519 (= res!52213 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28519 (= lt!53465 e!68209)))

(assert (=> d!28519 (= c!18176 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28519 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28519 (= (getCurrentListMap!462 (_keys!4261 newMap!16) lt!52532 (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53470)))

(declare-fun b!104775 () Bool)

(assert (=> b!104775 (= e!68209 (+!134 call!11009 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!104776 () Bool)

(declare-fun res!52209 () Bool)

(assert (=> b!104776 (=> (not res!52209) (not e!68200))))

(assert (=> b!104776 (= res!52209 e!68203)))

(declare-fun c!18178 () Bool)

(assert (=> b!104776 (= c!18178 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104777 () Bool)

(assert (=> b!104777 (= e!68203 e!68205)))

(declare-fun res!52206 () Bool)

(assert (=> b!104777 (= res!52206 call!11003)))

(assert (=> b!104777 (=> (not res!52206) (not e!68205))))

(declare-fun b!104778 () Bool)

(declare-fun call!11007 () ListLongMap!1539)

(assert (=> b!104778 (= e!68207 call!11007)))

(declare-fun bm!11005 () Bool)

(assert (=> bm!11005 (= call!11007 call!11009)))

(declare-fun b!104779 () Bool)

(declare-fun Unit!3207 () Unit!3141)

(assert (=> b!104779 (= e!68204 Unit!3207)))

(declare-fun b!104780 () Bool)

(assert (=> b!104780 (= e!68200 e!68198)))

(declare-fun c!18181 () Bool)

(assert (=> b!104780 (= c!18181 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104781 () Bool)

(assert (=> b!104781 (= e!68208 call!11007)))

(declare-fun b!104782 () Bool)

(assert (=> b!104782 (= e!68198 (not call!11005))))

(declare-fun b!104783 () Bool)

(assert (=> b!104783 (= e!68208 call!11008)))

(declare-fun b!104784 () Bool)

(assert (=> b!104784 (= e!68199 e!68202)))

(declare-fun res!52212 () Bool)

(assert (=> b!104784 (=> (not res!52212) (not e!68202))))

(assert (=> b!104784 (= res!52212 (contains!816 lt!53470 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104784 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!11006 () Bool)

(assert (=> bm!11006 (= call!11003 (contains!816 lt!53470 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28519 c!18176) b!104775))

(assert (= (and d!28519 (not c!18176)) b!104768))

(assert (= (and b!104768 c!18177) b!104778))

(assert (= (and b!104768 (not c!18177)) b!104765))

(assert (= (and b!104765 c!18179) b!104781))

(assert (= (and b!104765 (not c!18179)) b!104783))

(assert (= (or b!104781 b!104783) bm!11004))

(assert (= (or b!104778 bm!11004) bm!11002))

(assert (= (or b!104778 b!104781) bm!11005))

(assert (= (or b!104775 bm!11002) bm!11000))

(assert (= (or b!104775 bm!11005) bm!11001))

(assert (= (and d!28519 res!52213) b!104771))

(assert (= (and d!28519 c!18180) b!104769))

(assert (= (and d!28519 (not c!18180)) b!104779))

(assert (= (and d!28519 res!52211) b!104773))

(assert (= (and b!104773 res!52205) b!104764))

(assert (= (and b!104773 (not res!52210)) b!104784))

(assert (= (and b!104784 res!52212) b!104767))

(assert (= (and b!104773 res!52208) b!104776))

(assert (= (and b!104776 c!18178) b!104777))

(assert (= (and b!104776 (not c!18178)) b!104766))

(assert (= (and b!104777 res!52206) b!104772))

(assert (= (or b!104777 b!104766) bm!11006))

(assert (= (and b!104776 res!52209) b!104780))

(assert (= (and b!104780 c!18181) b!104770))

(assert (= (and b!104780 (not c!18181)) b!104782))

(assert (= (and b!104770 res!52207) b!104774))

(assert (= (or b!104770 b!104782) bm!11003))

(declare-fun b_lambda!4659 () Bool)

(assert (=> (not b_lambda!4659) (not b!104767)))

(assert (=> b!104767 t!5677))

(declare-fun b_and!6461 () Bool)

(assert (= b_and!6457 (and (=> t!5677 result!3431) b_and!6461)))

(assert (=> b!104767 t!5679))

(declare-fun b_and!6463 () Bool)

(assert (= b_and!6459 (and (=> t!5679 result!3433) b_and!6463)))

(declare-fun m!116445 () Bool)

(assert (=> bm!11006 m!116445))

(declare-fun m!116447 () Bool)

(assert (=> b!104769 m!116447))

(declare-fun m!116449 () Bool)

(assert (=> b!104769 m!116449))

(declare-fun m!116451 () Bool)

(assert (=> b!104769 m!116451))

(declare-fun m!116453 () Bool)

(assert (=> b!104769 m!116453))

(declare-fun m!116455 () Bool)

(assert (=> b!104769 m!116455))

(declare-fun m!116457 () Bool)

(assert (=> b!104769 m!116457))

(assert (=> b!104769 m!116447))

(declare-fun m!116459 () Bool)

(assert (=> b!104769 m!116459))

(declare-fun m!116461 () Bool)

(assert (=> b!104769 m!116461))

(declare-fun m!116463 () Bool)

(assert (=> b!104769 m!116463))

(declare-fun m!116465 () Bool)

(assert (=> b!104769 m!116465))

(assert (=> b!104769 m!113969))

(assert (=> b!104769 m!116457))

(declare-fun m!116467 () Bool)

(assert (=> b!104769 m!116467))

(declare-fun m!116469 () Bool)

(assert (=> b!104769 m!116469))

(assert (=> b!104769 m!116455))

(declare-fun m!116471 () Bool)

(assert (=> b!104769 m!116471))

(assert (=> b!104769 m!116451))

(declare-fun m!116473 () Bool)

(assert (=> b!104769 m!116473))

(declare-fun m!116475 () Bool)

(assert (=> b!104769 m!116475))

(declare-fun m!116477 () Bool)

(assert (=> b!104769 m!116477))

(declare-fun m!116479 () Bool)

(assert (=> bm!11001 m!116479))

(assert (=> d!28519 m!113985))

(assert (=> b!104767 m!113987))

(assert (=> b!104767 m!113969))

(declare-fun m!116481 () Bool)

(assert (=> b!104767 m!116481))

(declare-fun m!116483 () Bool)

(assert (=> b!104767 m!116483))

(assert (=> b!104767 m!113987))

(declare-fun m!116485 () Bool)

(assert (=> b!104767 m!116485))

(assert (=> b!104767 m!113969))

(assert (=> b!104767 m!116483))

(assert (=> b!104784 m!113969))

(assert (=> b!104784 m!113969))

(declare-fun m!116487 () Bool)

(assert (=> b!104784 m!116487))

(assert (=> b!104771 m!113969))

(assert (=> b!104771 m!113969))

(assert (=> b!104771 m!113997))

(declare-fun m!116489 () Bool)

(assert (=> b!104774 m!116489))

(assert (=> b!104764 m!113969))

(assert (=> b!104764 m!113969))

(assert (=> b!104764 m!113997))

(declare-fun m!116491 () Bool)

(assert (=> bm!11003 m!116491))

(declare-fun m!116493 () Bool)

(assert (=> b!104772 m!116493))

(assert (=> bm!11000 m!116465))

(declare-fun m!116495 () Bool)

(assert (=> b!104775 m!116495))

(assert (=> b!103421 d!28519))

(declare-fun d!28521 () Bool)

(declare-fun lt!53482 () Bool)

(assert (=> d!28521 (= lt!53482 (select (content!108 (t!5665 (toList!785 lt!52464))) lt!52331))))

(declare-fun e!68211 () Bool)

(assert (=> d!28521 (= lt!53482 e!68211)))

(declare-fun res!52214 () Bool)

(assert (=> d!28521 (=> (not res!52214) (not e!68211))))

(assert (=> d!28521 (= res!52214 ((_ is Cons!1608) (t!5665 (toList!785 lt!52464))))))

(assert (=> d!28521 (= (contains!819 (t!5665 (toList!785 lt!52464)) lt!52331) lt!53482)))

(declare-fun b!104785 () Bool)

(declare-fun e!68212 () Bool)

(assert (=> b!104785 (= e!68211 e!68212)))

(declare-fun res!52215 () Bool)

(assert (=> b!104785 (=> res!52215 e!68212)))

(assert (=> b!104785 (= res!52215 (= (h!2204 (t!5665 (toList!785 lt!52464))) lt!52331))))

(declare-fun b!104786 () Bool)

(assert (=> b!104786 (= e!68212 (contains!819 (t!5665 (t!5665 (toList!785 lt!52464))) lt!52331))))

(assert (= (and d!28521 res!52214) b!104785))

(assert (= (and b!104785 (not res!52215)) b!104786))

(declare-fun m!116497 () Bool)

(assert (=> d!28521 m!116497))

(declare-fun m!116499 () Bool)

(assert (=> d!28521 m!116499))

(declare-fun m!116501 () Bool)

(assert (=> b!104786 m!116501))

(assert (=> b!103720 d!28521))

(declare-fun d!28523 () Bool)

(assert (=> d!28523 (= (map!1266 (_2!1198 lt!52848)) (getCurrentListMap!462 (_keys!4261 (_2!1198 lt!52848)) (_values!2543 (_2!1198 lt!52848)) (mask!6695 (_2!1198 lt!52848)) (extraKeys!2369 (_2!1198 lt!52848)) (zeroValue!2437 (_2!1198 lt!52848)) (minValue!2437 (_2!1198 lt!52848)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1198 lt!52848))))))

(declare-fun bs!4304 () Bool)

(assert (= bs!4304 d!28523))

(declare-fun m!116503 () Bool)

(assert (=> bs!4304 m!116503))

(assert (=> b!103679 d!28523))

(declare-fun d!28525 () Bool)

(declare-fun e!68213 () Bool)

(assert (=> d!28525 e!68213))

(declare-fun res!52217 () Bool)

(assert (=> d!28525 (=> (not res!52217) (not e!68213))))

(declare-fun lt!53486 () ListLongMap!1539)

(assert (=> d!28525 (= res!52217 (contains!816 lt!53486 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!53484 () List!1612)

(assert (=> d!28525 (= lt!53486 (ListLongMap!1540 lt!53484))))

(declare-fun lt!53483 () Unit!3141)

(declare-fun lt!53485 () Unit!3141)

(assert (=> d!28525 (= lt!53483 lt!53485)))

(assert (=> d!28525 (= (getValueByKey!153 lt!53484 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28525 (= lt!53485 (lemmaContainsTupThenGetReturnValue!72 lt!53484 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28525 (= lt!53484 (insertStrictlySorted!75 (toList!785 (map!1266 newMap!16)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28525 (= (+!134 (map!1266 newMap!16) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!53486)))

(declare-fun b!104787 () Bool)

(declare-fun res!52216 () Bool)

(assert (=> b!104787 (=> (not res!52216) (not e!68213))))

(assert (=> b!104787 (= res!52216 (= (getValueByKey!153 (toList!785 lt!53486) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104788 () Bool)

(assert (=> b!104788 (= e!68213 (contains!819 (toList!785 lt!53486) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!28525 res!52217) b!104787))

(assert (= (and b!104787 res!52216) b!104788))

(declare-fun m!116505 () Bool)

(assert (=> d!28525 m!116505))

(declare-fun m!116507 () Bool)

(assert (=> d!28525 m!116507))

(declare-fun m!116509 () Bool)

(assert (=> d!28525 m!116509))

(declare-fun m!116511 () Bool)

(assert (=> d!28525 m!116511))

(declare-fun m!116513 () Bool)

(assert (=> b!104787 m!116513))

(declare-fun m!116515 () Bool)

(assert (=> b!104788 m!116515))

(assert (=> b!103679 d!28525))

(assert (=> b!103679 d!27677))

(declare-fun d!28527 () Bool)

(declare-fun e!68215 () Bool)

(assert (=> d!28527 e!68215))

(declare-fun res!52218 () Bool)

(assert (=> d!28527 (=> res!52218 e!68215)))

(declare-fun lt!53489 () Bool)

(assert (=> d!28527 (= res!52218 (not lt!53489))))

(declare-fun lt!53488 () Bool)

(assert (=> d!28527 (= lt!53489 lt!53488)))

(declare-fun lt!53490 () Unit!3141)

(declare-fun e!68214 () Unit!3141)

(assert (=> d!28527 (= lt!53490 e!68214)))

(declare-fun c!18182 () Bool)

(assert (=> d!28527 (= c!18182 lt!53488)))

(assert (=> d!28527 (= lt!53488 (containsKey!157 (toList!785 lt!52685) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28527 (= (contains!816 lt!52685 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) lt!53489)))

(declare-fun b!104789 () Bool)

(declare-fun lt!53487 () Unit!3141)

(assert (=> b!104789 (= e!68214 lt!53487)))

(assert (=> b!104789 (= lt!53487 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52685) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> b!104789 (isDefined!107 (getValueByKey!153 (toList!785 lt!52685) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104790 () Bool)

(declare-fun Unit!3208 () Unit!3141)

(assert (=> b!104790 (= e!68214 Unit!3208)))

(declare-fun b!104791 () Bool)

(assert (=> b!104791 (= e!68215 (isDefined!107 (getValueByKey!153 (toList!785 lt!52685) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (= (and d!28527 c!18182) b!104789))

(assert (= (and d!28527 (not c!18182)) b!104790))

(assert (= (and d!28527 (not res!52218)) b!104791))

(declare-fun m!116517 () Bool)

(assert (=> d!28527 m!116517))

(declare-fun m!116519 () Bool)

(assert (=> b!104789 m!116519))

(assert (=> b!104789 m!114109))

(assert (=> b!104789 m!114109))

(declare-fun m!116521 () Bool)

(assert (=> b!104789 m!116521))

(assert (=> b!104791 m!114109))

(assert (=> b!104791 m!114109))

(assert (=> b!104791 m!116521))

(assert (=> d!27731 d!28527))

(declare-fun e!68217 () Option!159)

(declare-fun b!104794 () Bool)

(assert (=> b!104794 (= e!68217 (getValueByKey!153 (t!5665 lt!52683) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104792 () Bool)

(declare-fun e!68216 () Option!159)

(assert (=> b!104792 (= e!68216 (Some!158 (_2!1197 (h!2204 lt!52683))))))

(declare-fun c!18183 () Bool)

(declare-fun d!28529 () Bool)

(assert (=> d!28529 (= c!18183 (and ((_ is Cons!1608) lt!52683) (= (_1!1197 (h!2204 lt!52683)) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (=> d!28529 (= (getValueByKey!153 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) e!68216)))

(declare-fun b!104793 () Bool)

(assert (=> b!104793 (= e!68216 e!68217)))

(declare-fun c!18184 () Bool)

(assert (=> b!104793 (= c!18184 (and ((_ is Cons!1608) lt!52683) (not (= (_1!1197 (h!2204 lt!52683)) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))))

(declare-fun b!104795 () Bool)

(assert (=> b!104795 (= e!68217 None!157)))

(assert (= (and d!28529 c!18183) b!104792))

(assert (= (and d!28529 (not c!18183)) b!104793))

(assert (= (and b!104793 c!18184) b!104794))

(assert (= (and b!104793 (not c!18184)) b!104795))

(declare-fun m!116523 () Bool)

(assert (=> b!104794 m!116523))

(assert (=> d!27731 d!28529))

(declare-fun d!28531 () Bool)

(assert (=> d!28531 (= (getValueByKey!153 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) (Some!158 (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun lt!53491 () Unit!3141)

(assert (=> d!28531 (= lt!53491 (choose!649 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun e!68218 () Bool)

(assert (=> d!28531 e!68218))

(declare-fun res!52219 () Bool)

(assert (=> d!28531 (=> (not res!52219) (not e!68218))))

(assert (=> d!28531 (= res!52219 (isStrictlySorted!303 lt!52683))))

(assert (=> d!28531 (= (lemmaContainsTupThenGetReturnValue!72 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) lt!53491)))

(declare-fun b!104796 () Bool)

(declare-fun res!52220 () Bool)

(assert (=> b!104796 (=> (not res!52220) (not e!68218))))

(assert (=> b!104796 (= res!52220 (containsKey!157 lt!52683 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104797 () Bool)

(assert (=> b!104797 (= e!68218 (contains!819 lt!52683 (tuple2!2373 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (= (and d!28531 res!52219) b!104796))

(assert (= (and b!104796 res!52220) b!104797))

(assert (=> d!28531 m!114103))

(declare-fun m!116525 () Bool)

(assert (=> d!28531 m!116525))

(declare-fun m!116527 () Bool)

(assert (=> d!28531 m!116527))

(declare-fun m!116529 () Bool)

(assert (=> b!104796 m!116529))

(declare-fun m!116531 () Bool)

(assert (=> b!104797 m!116531))

(assert (=> d!27731 d!28531))

(declare-fun b!104798 () Bool)

(declare-fun e!68220 () List!1612)

(declare-fun call!11012 () List!1612)

(assert (=> b!104798 (= e!68220 call!11012)))

(declare-fun b!104799 () Bool)

(declare-fun e!68221 () List!1612)

(assert (=> b!104799 (= e!68221 (insertStrictlySorted!75 (t!5665 (toList!785 e!67299)) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104800 () Bool)

(declare-fun res!52221 () Bool)

(declare-fun e!68223 () Bool)

(assert (=> b!104800 (=> (not res!52221) (not e!68223))))

(declare-fun lt!53492 () List!1612)

(assert (=> b!104800 (= res!52221 (containsKey!157 lt!53492 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun bm!11007 () Bool)

(declare-fun call!11010 () List!1612)

(assert (=> bm!11007 (= call!11010 call!11012)))

(declare-fun b!104801 () Bool)

(declare-fun e!68219 () List!1612)

(assert (=> b!104801 (= e!68219 call!11010)))

(declare-fun c!18187 () Bool)

(declare-fun c!18185 () Bool)

(declare-fun b!104802 () Bool)

(assert (=> b!104802 (= e!68221 (ite c!18187 (t!5665 (toList!785 e!67299)) (ite c!18185 (Cons!1608 (h!2204 (toList!785 e!67299)) (t!5665 (toList!785 e!67299))) Nil!1609)))))

(declare-fun d!28533 () Bool)

(assert (=> d!28533 e!68223))

(declare-fun res!52222 () Bool)

(assert (=> d!28533 (=> (not res!52222) (not e!68223))))

(assert (=> d!28533 (= res!52222 (isStrictlySorted!303 lt!53492))))

(declare-fun e!68222 () List!1612)

(assert (=> d!28533 (= lt!53492 e!68222)))

(declare-fun c!18188 () Bool)

(assert (=> d!28533 (= c!18188 (and ((_ is Cons!1608) (toList!785 e!67299)) (bvslt (_1!1197 (h!2204 (toList!785 e!67299))) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (=> d!28533 (isStrictlySorted!303 (toList!785 e!67299))))

(assert (=> d!28533 (= (insertStrictlySorted!75 (toList!785 e!67299) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))) lt!53492)))

(declare-fun b!104803 () Bool)

(assert (=> b!104803 (= c!18185 (and ((_ is Cons!1608) (toList!785 e!67299)) (bvsgt (_1!1197 (h!2204 (toList!785 e!67299))) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (=> b!104803 (= e!68220 e!68219)))

(declare-fun bm!11008 () Bool)

(declare-fun call!11011 () List!1612)

(assert (=> bm!11008 (= call!11011 ($colon$colon!79 e!68221 (ite c!18188 (h!2204 (toList!785 e!67299)) (tuple2!2373 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))))

(declare-fun c!18186 () Bool)

(assert (=> bm!11008 (= c!18186 c!18188)))

(declare-fun b!104804 () Bool)

(assert (=> b!104804 (= e!68223 (contains!819 lt!53492 (tuple2!2373 (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (_2!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!104805 () Bool)

(assert (=> b!104805 (= e!68222 call!11011)))

(declare-fun bm!11009 () Bool)

(assert (=> bm!11009 (= call!11012 call!11011)))

(declare-fun b!104806 () Bool)

(assert (=> b!104806 (= e!68219 call!11010)))

(declare-fun b!104807 () Bool)

(assert (=> b!104807 (= e!68222 e!68220)))

(assert (=> b!104807 (= c!18187 (and ((_ is Cons!1608) (toList!785 e!67299)) (= (_1!1197 (h!2204 (toList!785 e!67299))) (_1!1197 (ite c!17763 (ite c!17759 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52329) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52329)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(assert (= (and d!28533 c!18188) b!104805))

(assert (= (and d!28533 (not c!18188)) b!104807))

(assert (= (and b!104807 c!18187) b!104798))

(assert (= (and b!104807 (not c!18187)) b!104803))

(assert (= (and b!104803 c!18185) b!104806))

(assert (= (and b!104803 (not c!18185)) b!104801))

(assert (= (or b!104806 b!104801) bm!11007))

(assert (= (or b!104798 bm!11007) bm!11009))

(assert (= (or b!104805 bm!11009) bm!11008))

(assert (= (and bm!11008 c!18186) b!104799))

(assert (= (and bm!11008 (not c!18186)) b!104802))

(assert (= (and d!28533 res!52222) b!104800))

(assert (= (and b!104800 res!52221) b!104804))

(declare-fun m!116533 () Bool)

(assert (=> b!104804 m!116533))

(declare-fun m!116535 () Bool)

(assert (=> d!28533 m!116535))

(declare-fun m!116537 () Bool)

(assert (=> d!28533 m!116537))

(declare-fun m!116539 () Bool)

(assert (=> b!104800 m!116539))

(declare-fun m!116541 () Bool)

(assert (=> b!104799 m!116541))

(declare-fun m!116543 () Bool)

(assert (=> bm!11008 m!116543))

(assert (=> d!27731 d!28533))

(declare-fun d!28535 () Bool)

(assert (=> d!28535 (= (apply!97 lt!52876 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1328 (getValueByKey!153 (toList!785 lt!52876) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4305 () Bool)

(assert (= bs!4305 d!28535))

(assert (=> bs!4305 m!114875))

(assert (=> bs!4305 m!114875))

(declare-fun m!116545 () Bool)

(assert (=> bs!4305 m!116545))

(assert (=> b!103704 d!28535))

(declare-fun b!104810 () Bool)

(declare-fun e!68225 () Option!159)

(assert (=> b!104810 (= e!68225 (getValueByKey!153 (t!5665 (toList!785 lt!52894)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104808 () Bool)

(declare-fun e!68224 () Option!159)

(assert (=> b!104808 (= e!68224 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52894)))))))

(declare-fun c!18189 () Bool)

(declare-fun d!28537 () Bool)

(assert (=> d!28537 (= c!18189 (and ((_ is Cons!1608) (toList!785 lt!52894)) (= (_1!1197 (h!2204 (toList!785 lt!52894))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28537 (= (getValueByKey!153 (toList!785 lt!52894) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) e!68224)))

(declare-fun b!104809 () Bool)

(assert (=> b!104809 (= e!68224 e!68225)))

(declare-fun c!18190 () Bool)

(assert (=> b!104809 (= c!18190 (and ((_ is Cons!1608) (toList!785 lt!52894)) (not (= (_1!1197 (h!2204 (toList!785 lt!52894))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!104811 () Bool)

(assert (=> b!104811 (= e!68225 None!157)))

(assert (= (and d!28537 c!18189) b!104808))

(assert (= (and d!28537 (not c!18189)) b!104809))

(assert (= (and b!104809 c!18190) b!104810))

(assert (= (and b!104809 (not c!18190)) b!104811))

(declare-fun m!116547 () Bool)

(assert (=> b!104810 m!116547))

(assert (=> b!103727 d!28537))

(declare-fun d!28539 () Bool)

(declare-fun e!68227 () Bool)

(assert (=> d!28539 e!68227))

(declare-fun res!52223 () Bool)

(assert (=> d!28539 (=> res!52223 e!68227)))

(declare-fun lt!53495 () Bool)

(assert (=> d!28539 (= res!52223 (not lt!53495))))

(declare-fun lt!53494 () Bool)

(assert (=> d!28539 (= lt!53495 lt!53494)))

(declare-fun lt!53496 () Unit!3141)

(declare-fun e!68226 () Unit!3141)

(assert (=> d!28539 (= lt!53496 e!68226)))

(declare-fun c!18191 () Bool)

(assert (=> d!28539 (= c!18191 lt!53494)))

(assert (=> d!28539 (= lt!53494 (containsKey!157 (toList!785 lt!52958) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!28539 (= (contains!816 lt!52958 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53495)))

(declare-fun b!104812 () Bool)

(declare-fun lt!53493 () Unit!3141)

(assert (=> b!104812 (= e!68226 lt!53493)))

(assert (=> b!104812 (= lt!53493 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52958) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!104812 (isDefined!107 (getValueByKey!153 (toList!785 lt!52958) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104813 () Bool)

(declare-fun Unit!3209 () Unit!3141)

(assert (=> b!104813 (= e!68226 Unit!3209)))

(declare-fun b!104814 () Bool)

(assert (=> b!104814 (= e!68227 (isDefined!107 (getValueByKey!153 (toList!785 lt!52958) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28539 c!18191) b!104812))

(assert (= (and d!28539 (not c!18191)) b!104813))

(assert (= (and d!28539 (not res!52223)) b!104814))

(declare-fun m!116549 () Bool)

(assert (=> d!28539 m!116549))

(declare-fun m!116551 () Bool)

(assert (=> b!104812 m!116551))

(assert (=> b!104812 m!114671))

(assert (=> b!104812 m!114671))

(declare-fun m!116553 () Bool)

(assert (=> b!104812 m!116553))

(assert (=> b!104814 m!114671))

(assert (=> b!104814 m!114671))

(assert (=> b!104814 m!116553))

(assert (=> d!27867 d!28539))

(declare-fun b!104817 () Bool)

(declare-fun e!68229 () Option!159)

(assert (=> b!104817 (= e!68229 (getValueByKey!153 (t!5665 lt!52956) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104815 () Bool)

(declare-fun e!68228 () Option!159)

(assert (=> b!104815 (= e!68228 (Some!158 (_2!1197 (h!2204 lt!52956))))))

(declare-fun d!28541 () Bool)

(declare-fun c!18192 () Bool)

(assert (=> d!28541 (= c!18192 (and ((_ is Cons!1608) lt!52956) (= (_1!1197 (h!2204 lt!52956)) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28541 (= (getValueByKey!153 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68228)))

(declare-fun b!104816 () Bool)

(assert (=> b!104816 (= e!68228 e!68229)))

(declare-fun c!18193 () Bool)

(assert (=> b!104816 (= c!18193 (and ((_ is Cons!1608) lt!52956) (not (= (_1!1197 (h!2204 lt!52956)) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104818 () Bool)

(assert (=> b!104818 (= e!68229 None!157)))

(assert (= (and d!28541 c!18192) b!104815))

(assert (= (and d!28541 (not c!18192)) b!104816))

(assert (= (and b!104816 c!18193) b!104817))

(assert (= (and b!104816 (not c!18193)) b!104818))

(declare-fun m!116555 () Bool)

(assert (=> b!104817 m!116555))

(assert (=> d!27867 d!28541))

(declare-fun d!28543 () Bool)

(assert (=> d!28543 (= (getValueByKey!153 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53497 () Unit!3141)

(assert (=> d!28543 (= lt!53497 (choose!649 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!68230 () Bool)

(assert (=> d!28543 e!68230))

(declare-fun res!52224 () Bool)

(assert (=> d!28543 (=> (not res!52224) (not e!68230))))

(assert (=> d!28543 (= res!52224 (isStrictlySorted!303 lt!52956))))

(assert (=> d!28543 (= (lemmaContainsTupThenGetReturnValue!72 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53497)))

(declare-fun b!104819 () Bool)

(declare-fun res!52225 () Bool)

(assert (=> b!104819 (=> (not res!52225) (not e!68230))))

(assert (=> b!104819 (= res!52225 (containsKey!157 lt!52956 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104820 () Bool)

(assert (=> b!104820 (= e!68230 (contains!819 lt!52956 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28543 res!52224) b!104819))

(assert (= (and b!104819 res!52225) b!104820))

(assert (=> d!28543 m!114665))

(declare-fun m!116557 () Bool)

(assert (=> d!28543 m!116557))

(declare-fun m!116559 () Bool)

(assert (=> d!28543 m!116559))

(declare-fun m!116561 () Bool)

(assert (=> b!104819 m!116561))

(declare-fun m!116563 () Bool)

(assert (=> b!104820 m!116563))

(assert (=> d!27867 d!28543))

(declare-fun b!104821 () Bool)

(declare-fun e!68232 () List!1612)

(declare-fun call!11015 () List!1612)

(assert (=> b!104821 (= e!68232 call!11015)))

(declare-fun b!104822 () Bool)

(declare-fun e!68233 () List!1612)

(assert (=> b!104822 (= e!68233 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52620)) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104823 () Bool)

(declare-fun res!52226 () Bool)

(declare-fun e!68235 () Bool)

(assert (=> b!104823 (=> (not res!52226) (not e!68235))))

(declare-fun lt!53498 () List!1612)

(assert (=> b!104823 (= res!52226 (containsKey!157 lt!53498 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!11010 () Bool)

(declare-fun call!11013 () List!1612)

(assert (=> bm!11010 (= call!11013 call!11015)))

(declare-fun b!104824 () Bool)

(declare-fun e!68231 () List!1612)

(assert (=> b!104824 (= e!68231 call!11013)))

(declare-fun c!18196 () Bool)

(declare-fun b!104825 () Bool)

(declare-fun c!18194 () Bool)

(assert (=> b!104825 (= e!68233 (ite c!18196 (t!5665 (toList!785 lt!52620)) (ite c!18194 (Cons!1608 (h!2204 (toList!785 lt!52620)) (t!5665 (toList!785 lt!52620))) Nil!1609)))))

(declare-fun d!28545 () Bool)

(assert (=> d!28545 e!68235))

(declare-fun res!52227 () Bool)

(assert (=> d!28545 (=> (not res!52227) (not e!68235))))

(assert (=> d!28545 (= res!52227 (isStrictlySorted!303 lt!53498))))

(declare-fun e!68234 () List!1612)

(assert (=> d!28545 (= lt!53498 e!68234)))

(declare-fun c!18197 () Bool)

(assert (=> d!28545 (= c!18197 (and ((_ is Cons!1608) (toList!785 lt!52620)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52620))) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28545 (isStrictlySorted!303 (toList!785 lt!52620))))

(assert (=> d!28545 (= (insertStrictlySorted!75 (toList!785 lt!52620) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53498)))

(declare-fun b!104826 () Bool)

(assert (=> b!104826 (= c!18194 (and ((_ is Cons!1608) (toList!785 lt!52620)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52620))) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104826 (= e!68232 e!68231)))

(declare-fun call!11014 () List!1612)

(declare-fun bm!11011 () Bool)

(assert (=> bm!11011 (= call!11014 ($colon$colon!79 e!68233 (ite c!18197 (h!2204 (toList!785 lt!52620)) (tuple2!2373 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!18195 () Bool)

(assert (=> bm!11011 (= c!18195 c!18197)))

(declare-fun b!104827 () Bool)

(assert (=> b!104827 (= e!68235 (contains!819 lt!53498 (tuple2!2373 (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104828 () Bool)

(assert (=> b!104828 (= e!68234 call!11014)))

(declare-fun bm!11012 () Bool)

(assert (=> bm!11012 (= call!11015 call!11014)))

(declare-fun b!104829 () Bool)

(assert (=> b!104829 (= e!68231 call!11013)))

(declare-fun b!104830 () Bool)

(assert (=> b!104830 (= e!68234 e!68232)))

(assert (=> b!104830 (= c!18196 (and ((_ is Cons!1608) (toList!785 lt!52620)) (= (_1!1197 (h!2204 (toList!785 lt!52620))) (_1!1197 (tuple2!2373 lt!52615 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28545 c!18197) b!104828))

(assert (= (and d!28545 (not c!18197)) b!104830))

(assert (= (and b!104830 c!18196) b!104821))

(assert (= (and b!104830 (not c!18196)) b!104826))

(assert (= (and b!104826 c!18194) b!104829))

(assert (= (and b!104826 (not c!18194)) b!104824))

(assert (= (or b!104829 b!104824) bm!11010))

(assert (= (or b!104821 bm!11010) bm!11012))

(assert (= (or b!104828 bm!11012) bm!11011))

(assert (= (and bm!11011 c!18195) b!104822))

(assert (= (and bm!11011 (not c!18195)) b!104825))

(assert (= (and d!28545 res!52227) b!104823))

(assert (= (and b!104823 res!52226) b!104827))

(declare-fun m!116565 () Bool)

(assert (=> b!104827 m!116565))

(declare-fun m!116567 () Bool)

(assert (=> d!28545 m!116567))

(declare-fun m!116569 () Bool)

(assert (=> d!28545 m!116569))

(declare-fun m!116571 () Bool)

(assert (=> b!104823 m!116571))

(declare-fun m!116573 () Bool)

(assert (=> b!104822 m!116573))

(declare-fun m!116575 () Bool)

(assert (=> bm!11011 m!116575))

(assert (=> d!27867 d!28545))

(assert (=> d!27779 d!27777))

(declare-fun d!28547 () Bool)

(assert (=> d!28547 (= (getValueByKey!153 lt!52455 (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331)))))

(assert (=> d!28547 true))

(declare-fun _$22!428 () Unit!3141)

(assert (=> d!28547 (= (choose!649 lt!52455 (_1!1197 lt!52331) (_2!1197 lt!52331)) _$22!428)))

(declare-fun bs!4306 () Bool)

(assert (= bs!4306 d!28547))

(assert (=> bs!4306 m!113771))

(assert (=> d!27779 d!28547))

(declare-fun d!28549 () Bool)

(declare-fun res!52228 () Bool)

(declare-fun e!68236 () Bool)

(assert (=> d!28549 (=> res!52228 e!68236)))

(assert (=> d!28549 (= res!52228 (or ((_ is Nil!1609) lt!52455) ((_ is Nil!1609) (t!5665 lt!52455))))))

(assert (=> d!28549 (= (isStrictlySorted!303 lt!52455) e!68236)))

(declare-fun b!104831 () Bool)

(declare-fun e!68237 () Bool)

(assert (=> b!104831 (= e!68236 e!68237)))

(declare-fun res!52229 () Bool)

(assert (=> b!104831 (=> (not res!52229) (not e!68237))))

(assert (=> b!104831 (= res!52229 (bvslt (_1!1197 (h!2204 lt!52455)) (_1!1197 (h!2204 (t!5665 lt!52455)))))))

(declare-fun b!104832 () Bool)

(assert (=> b!104832 (= e!68237 (isStrictlySorted!303 (t!5665 lt!52455)))))

(assert (= (and d!28549 (not res!52228)) b!104831))

(assert (= (and b!104831 res!52229) b!104832))

(declare-fun m!116577 () Bool)

(assert (=> b!104832 m!116577))

(assert (=> d!27779 d!28549))

(declare-fun d!28551 () Bool)

(declare-fun res!52230 () Bool)

(declare-fun e!68238 () Bool)

(assert (=> d!28551 (=> res!52230 e!68238)))

(assert (=> d!28551 (= res!52230 (and ((_ is Cons!1608) (toList!785 lt!52435)) (= (_1!1197 (h!2204 (toList!785 lt!52435))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28551 (= (containsKey!157 (toList!785 lt!52435) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68238)))

(declare-fun b!104833 () Bool)

(declare-fun e!68239 () Bool)

(assert (=> b!104833 (= e!68238 e!68239)))

(declare-fun res!52231 () Bool)

(assert (=> b!104833 (=> (not res!52231) (not e!68239))))

(assert (=> b!104833 (= res!52231 (and (or (not ((_ is Cons!1608) (toList!785 lt!52435))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52435))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1608) (toList!785 lt!52435)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52435))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104834 () Bool)

(assert (=> b!104834 (= e!68239 (containsKey!157 (t!5665 (toList!785 lt!52435)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28551 (not res!52230)) b!104833))

(assert (= (and b!104833 res!52231) b!104834))

(assert (=> b!104834 m!113707))

(declare-fun m!116579 () Bool)

(assert (=> b!104834 m!116579))

(assert (=> d!27889 d!28551))

(declare-fun d!28553 () Bool)

(declare-fun c!18198 () Bool)

(assert (=> d!28553 (= c!18198 ((_ is Nil!1609) (toList!785 lt!52464)))))

(declare-fun e!68240 () (InoxSet tuple2!2372))

(assert (=> d!28553 (= (content!108 (toList!785 lt!52464)) e!68240)))

(declare-fun b!104835 () Bool)

(assert (=> b!104835 (= e!68240 ((as const (Array tuple2!2372 Bool)) false))))

(declare-fun b!104836 () Bool)

(assert (=> b!104836 (= e!68240 ((_ map or) (store ((as const (Array tuple2!2372 Bool)) false) (h!2204 (toList!785 lt!52464)) true) (content!108 (t!5665 (toList!785 lt!52464)))))))

(assert (= (and d!28553 c!18198) b!104835))

(assert (= (and d!28553 (not c!18198)) b!104836))

(declare-fun m!116581 () Bool)

(assert (=> b!104836 m!116581))

(assert (=> b!104836 m!116497))

(assert (=> d!27809 d!28553))

(declare-fun d!28555 () Bool)

(declare-fun res!52232 () Bool)

(declare-fun e!68241 () Bool)

(assert (=> d!28555 (=> res!52232 e!68241)))

(assert (=> d!28555 (= res!52232 (and ((_ is Cons!1608) (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))) (= (_1!1197 (h!2204 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))))) lt!52437)))))

(assert (=> d!28555 (= (containsKey!157 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))) lt!52437) e!68241)))

(declare-fun b!104837 () Bool)

(declare-fun e!68242 () Bool)

(assert (=> b!104837 (= e!68241 e!68242)))

(declare-fun res!52233 () Bool)

(assert (=> b!104837 (=> (not res!52233) (not e!68242))))

(assert (=> b!104837 (= res!52233 (and (or (not ((_ is Cons!1608) (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))))) (bvsle (_1!1197 (h!2204 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))))) lt!52437)) ((_ is Cons!1608) (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))) (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433))))) lt!52437)))))

(declare-fun b!104838 () Bool)

(assert (=> b!104838 (= e!68242 (containsKey!157 (t!5665 (toList!785 (+!134 lt!52436 (tuple2!2373 lt!52431 lt!52433)))) lt!52437))))

(assert (= (and d!28555 (not res!52232)) b!104837))

(assert (= (and b!104837 res!52233) b!104838))

(declare-fun m!116583 () Bool)

(assert (=> b!104838 m!116583))

(assert (=> d!27701 d!28555))

(declare-fun d!28557 () Bool)

(declare-fun e!68244 () Bool)

(assert (=> d!28557 e!68244))

(declare-fun res!52234 () Bool)

(assert (=> d!28557 (=> res!52234 e!68244)))

(declare-fun lt!53501 () Bool)

(assert (=> d!28557 (= res!52234 (not lt!53501))))

(declare-fun lt!53500 () Bool)

(assert (=> d!28557 (= lt!53501 lt!53500)))

(declare-fun lt!53502 () Unit!3141)

(declare-fun e!68243 () Unit!3141)

(assert (=> d!28557 (= lt!53502 e!68243)))

(declare-fun c!18199 () Bool)

(assert (=> d!28557 (= c!18199 lt!53500)))

(assert (=> d!28557 (= lt!53500 (containsKey!157 (toList!785 lt!52638) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28557 (= (contains!816 lt!52638 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53501)))

(declare-fun b!104839 () Bool)

(declare-fun lt!53499 () Unit!3141)

(assert (=> b!104839 (= e!68243 lt!53499)))

(assert (=> b!104839 (= lt!53499 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52638) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104839 (isDefined!107 (getValueByKey!153 (toList!785 lt!52638) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104840 () Bool)

(declare-fun Unit!3210 () Unit!3141)

(assert (=> b!104840 (= e!68243 Unit!3210)))

(declare-fun b!104841 () Bool)

(assert (=> b!104841 (= e!68244 (isDefined!107 (getValueByKey!153 (toList!785 lt!52638) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28557 c!18199) b!104839))

(assert (= (and d!28557 (not c!18199)) b!104840))

(assert (= (and d!28557 (not res!52234)) b!104841))

(declare-fun m!116585 () Bool)

(assert (=> d!28557 m!116585))

(declare-fun m!116587 () Bool)

(assert (=> b!104839 m!116587))

(assert (=> b!104839 m!115953))

(assert (=> b!104839 m!115953))

(declare-fun m!116589 () Bool)

(assert (=> b!104839 m!116589))

(assert (=> b!104841 m!115953))

(assert (=> b!104841 m!115953))

(assert (=> b!104841 m!116589))

(assert (=> bm!10843 d!28557))

(declare-fun d!28559 () Bool)

(assert (=> d!28559 (isDefined!107 (getValueByKey!153 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53503 () Unit!3141)

(assert (=> d!28559 (= lt!53503 (choose!650 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68245 () Bool)

(assert (=> d!28559 e!68245))

(declare-fun res!52235 () Bool)

(assert (=> d!28559 (=> (not res!52235) (not e!68245))))

(assert (=> d!28559 (= res!52235 (isStrictlySorted!303 (toList!785 lt!52612)))))

(assert (=> d!28559 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53503)))

(declare-fun b!104842 () Bool)

(assert (=> b!104842 (= e!68245 (containsKey!157 (toList!785 lt!52612) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28559 res!52235) b!104842))

(assert (=> d!28559 m!113707))

(assert (=> d!28559 m!114349))

(assert (=> d!28559 m!114349))

(assert (=> d!28559 m!114351))

(assert (=> d!28559 m!113707))

(declare-fun m!116591 () Bool)

(assert (=> d!28559 m!116591))

(assert (=> d!28559 m!115845))

(assert (=> b!104842 m!113707))

(assert (=> b!104842 m!114345))

(assert (=> b!103628 d!28559))

(assert (=> b!103628 d!28327))

(assert (=> b!103628 d!28065))

(declare-fun d!28561 () Bool)

(declare-fun e!68247 () Bool)

(assert (=> d!28561 e!68247))

(declare-fun res!52236 () Bool)

(assert (=> d!28561 (=> res!52236 e!68247)))

(declare-fun lt!53506 () Bool)

(assert (=> d!28561 (= res!52236 (not lt!53506))))

(declare-fun lt!53505 () Bool)

(assert (=> d!28561 (= lt!53506 lt!53505)))

(declare-fun lt!53507 () Unit!3141)

(declare-fun e!68246 () Unit!3141)

(assert (=> d!28561 (= lt!53507 e!68246)))

(declare-fun c!18200 () Bool)

(assert (=> d!28561 (= c!18200 lt!53505)))

(assert (=> d!28561 (= lt!53505 (containsKey!157 (toList!785 (map!1266 (_2!1198 lt!52848))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> d!28561 (= (contains!816 (map!1266 (_2!1198 lt!52848)) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!53506)))

(declare-fun b!104843 () Bool)

(declare-fun lt!53504 () Unit!3141)

(assert (=> b!104843 (= e!68246 lt!53504)))

(assert (=> b!104843 (= lt!53504 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (map!1266 (_2!1198 lt!52848))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (=> b!104843 (isDefined!107 (getValueByKey!153 (toList!785 (map!1266 (_2!1198 lt!52848))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun b!104844 () Bool)

(declare-fun Unit!3211 () Unit!3141)

(assert (=> b!104844 (= e!68246 Unit!3211)))

(declare-fun b!104845 () Bool)

(assert (=> b!104845 (= e!68247 (isDefined!107 (getValueByKey!153 (toList!785 (map!1266 (_2!1198 lt!52848))) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355))))))

(assert (= (and d!28561 c!18200) b!104843))

(assert (= (and d!28561 (not c!18200)) b!104844))

(assert (= (and d!28561 (not res!52236)) b!104845))

(assert (=> d!28561 m!113535))

(declare-fun m!116593 () Bool)

(assert (=> d!28561 m!116593))

(assert (=> b!104843 m!113535))

(declare-fun m!116595 () Bool)

(assert (=> b!104843 m!116595))

(assert (=> b!104843 m!113535))

(declare-fun m!116597 () Bool)

(assert (=> b!104843 m!116597))

(assert (=> b!104843 m!116597))

(declare-fun m!116599 () Bool)

(assert (=> b!104843 m!116599))

(assert (=> b!104845 m!113535))

(assert (=> b!104845 m!116597))

(assert (=> b!104845 m!116597))

(assert (=> b!104845 m!116599))

(assert (=> b!103673 d!28561))

(assert (=> b!103673 d!28523))

(declare-fun d!28563 () Bool)

(declare-fun res!52237 () Bool)

(declare-fun e!68248 () Bool)

(assert (=> d!28563 (=> res!52237 e!68248)))

(assert (=> d!28563 (= res!52237 (and ((_ is Cons!1608) (toList!785 lt!52435)) (= (_1!1197 (h!2204 (toList!785 lt!52435))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28563 (= (containsKey!157 (toList!785 lt!52435) #b1000000000000000000000000000000000000000000000000000000000000000) e!68248)))

(declare-fun b!104846 () Bool)

(declare-fun e!68249 () Bool)

(assert (=> b!104846 (= e!68248 e!68249)))

(declare-fun res!52238 () Bool)

(assert (=> b!104846 (=> (not res!52238) (not e!68249))))

(assert (=> b!104846 (= res!52238 (and (or (not ((_ is Cons!1608) (toList!785 lt!52435))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52435))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1608) (toList!785 lt!52435)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52435))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104847 () Bool)

(assert (=> b!104847 (= e!68249 (containsKey!157 (t!5665 (toList!785 lt!52435)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28563 (not res!52237)) b!104846))

(assert (= (and b!104846 res!52238) b!104847))

(declare-fun m!116601 () Bool)

(assert (=> b!104847 m!116601))

(assert (=> d!27843 d!28563))

(declare-fun d!28565 () Bool)

(declare-fun res!52239 () Bool)

(declare-fun e!68250 () Bool)

(assert (=> d!28565 (=> (not res!52239) (not e!68250))))

(assert (=> d!28565 (= res!52239 (simpleValid!73 (_2!1198 lt!52848)))))

(assert (=> d!28565 (= (valid!419 (_2!1198 lt!52848)) e!68250)))

(declare-fun b!104848 () Bool)

(declare-fun res!52240 () Bool)

(assert (=> b!104848 (=> (not res!52240) (not e!68250))))

(assert (=> b!104848 (= res!52240 (= (arrayCountValidKeys!0 (_keys!4261 (_2!1198 lt!52848)) #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52848)))) (_size!495 (_2!1198 lt!52848))))))

(declare-fun b!104849 () Bool)

(declare-fun res!52241 () Bool)

(assert (=> b!104849 (=> (not res!52241) (not e!68250))))

(assert (=> b!104849 (= res!52241 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4261 (_2!1198 lt!52848)) (mask!6695 (_2!1198 lt!52848))))))

(declare-fun b!104850 () Bool)

(assert (=> b!104850 (= e!68250 (arrayNoDuplicates!0 (_keys!4261 (_2!1198 lt!52848)) #b00000000000000000000000000000000 Nil!1610))))

(assert (= (and d!28565 res!52239) b!104848))

(assert (= (and b!104848 res!52240) b!104849))

(assert (= (and b!104849 res!52241) b!104850))

(declare-fun m!116603 () Bool)

(assert (=> d!28565 m!116603))

(declare-fun m!116605 () Bool)

(assert (=> b!104848 m!116605))

(declare-fun m!116607 () Bool)

(assert (=> b!104849 m!116607))

(declare-fun m!116609 () Bool)

(assert (=> b!104850 m!116609))

(assert (=> b!103671 d!28565))

(declare-fun b!104853 () Bool)

(declare-fun e!68252 () Option!159)

(assert (=> b!104853 (= e!68252 (getValueByKey!153 (t!5665 (toList!785 lt!52745)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104851 () Bool)

(declare-fun e!68251 () Option!159)

(assert (=> b!104851 (= e!68251 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52745)))))))

(declare-fun d!28567 () Bool)

(declare-fun c!18201 () Bool)

(assert (=> d!28567 (= c!18201 (and ((_ is Cons!1608) (toList!785 lt!52745)) (= (_1!1197 (h!2204 (toList!785 lt!52745))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28567 (= (getValueByKey!153 (toList!785 lt!52745) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68251)))

(declare-fun b!104852 () Bool)

(assert (=> b!104852 (= e!68251 e!68252)))

(declare-fun c!18202 () Bool)

(assert (=> b!104852 (= c!18202 (and ((_ is Cons!1608) (toList!785 lt!52745)) (not (= (_1!1197 (h!2204 (toList!785 lt!52745))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104854 () Bool)

(assert (=> b!104854 (= e!68252 None!157)))

(assert (= (and d!28567 c!18201) b!104851))

(assert (= (and d!28567 (not c!18201)) b!104852))

(assert (= (and b!104852 c!18202) b!104853))

(assert (= (and b!104852 (not c!18202)) b!104854))

(declare-fun m!116611 () Bool)

(assert (=> b!104853 m!116611))

(assert (=> b!103578 d!28567))

(declare-fun d!28569 () Bool)

(assert (=> d!28569 (= (get!1328 (getValueByKey!153 (toList!785 lt!52613) lt!52608)) (v!2873 (getValueByKey!153 (toList!785 lt!52613) lt!52608)))))

(assert (=> d!27851 d!28569))

(declare-fun b!104857 () Bool)

(declare-fun e!68254 () Option!159)

(assert (=> b!104857 (= e!68254 (getValueByKey!153 (t!5665 (toList!785 lt!52613)) lt!52608))))

(declare-fun b!104855 () Bool)

(declare-fun e!68253 () Option!159)

(assert (=> b!104855 (= e!68253 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52613)))))))

(declare-fun d!28571 () Bool)

(declare-fun c!18203 () Bool)

(assert (=> d!28571 (= c!18203 (and ((_ is Cons!1608) (toList!785 lt!52613)) (= (_1!1197 (h!2204 (toList!785 lt!52613))) lt!52608)))))

(assert (=> d!28571 (= (getValueByKey!153 (toList!785 lt!52613) lt!52608) e!68253)))

(declare-fun b!104856 () Bool)

(assert (=> b!104856 (= e!68253 e!68254)))

(declare-fun c!18204 () Bool)

(assert (=> b!104856 (= c!18204 (and ((_ is Cons!1608) (toList!785 lt!52613)) (not (= (_1!1197 (h!2204 (toList!785 lt!52613))) lt!52608))))))

(declare-fun b!104858 () Bool)

(assert (=> b!104858 (= e!68254 None!157)))

(assert (= (and d!28571 c!18203) b!104855))

(assert (= (and d!28571 (not c!18203)) b!104856))

(assert (= (and b!104856 c!18204) b!104857))

(assert (= (and b!104856 (not c!18204)) b!104858))

(declare-fun m!116613 () Bool)

(assert (=> b!104857 m!116613))

(assert (=> d!27851 d!28571))

(declare-fun d!28573 () Bool)

(declare-fun res!52242 () Bool)

(declare-fun e!68255 () Bool)

(assert (=> d!28573 (=> res!52242 e!68255)))

(assert (=> d!28573 (= res!52242 (or ((_ is Nil!1609) lt!52721) ((_ is Nil!1609) (t!5665 lt!52721))))))

(assert (=> d!28573 (= (isStrictlySorted!303 lt!52721) e!68255)))

(declare-fun b!104859 () Bool)

(declare-fun e!68256 () Bool)

(assert (=> b!104859 (= e!68255 e!68256)))

(declare-fun res!52243 () Bool)

(assert (=> b!104859 (=> (not res!52243) (not e!68256))))

(assert (=> b!104859 (= res!52243 (bvslt (_1!1197 (h!2204 lt!52721)) (_1!1197 (h!2204 (t!5665 lt!52721)))))))

(declare-fun b!104860 () Bool)

(assert (=> b!104860 (= e!68256 (isStrictlySorted!303 (t!5665 lt!52721)))))

(assert (= (and d!28573 (not res!52242)) b!104859))

(assert (= (and b!104859 res!52243) b!104860))

(declare-fun m!116615 () Bool)

(assert (=> b!104860 m!116615))

(assert (=> d!27755 d!28573))

(declare-fun d!28575 () Bool)

(declare-fun res!52244 () Bool)

(declare-fun e!68257 () Bool)

(assert (=> d!28575 (=> res!52244 e!68257)))

(assert (=> d!28575 (= res!52244 (or ((_ is Nil!1609) (toList!785 (+!134 lt!52333 lt!52325))) ((_ is Nil!1609) (t!5665 (toList!785 (+!134 lt!52333 lt!52325))))))))

(assert (=> d!28575 (= (isStrictlySorted!303 (toList!785 (+!134 lt!52333 lt!52325))) e!68257)))

(declare-fun b!104861 () Bool)

(declare-fun e!68258 () Bool)

(assert (=> b!104861 (= e!68257 e!68258)))

(declare-fun res!52245 () Bool)

(assert (=> b!104861 (=> (not res!52245) (not e!68258))))

(assert (=> b!104861 (= res!52245 (bvslt (_1!1197 (h!2204 (toList!785 (+!134 lt!52333 lt!52325)))) (_1!1197 (h!2204 (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))))))))

(declare-fun b!104862 () Bool)

(assert (=> b!104862 (= e!68258 (isStrictlySorted!303 (t!5665 (toList!785 (+!134 lt!52333 lt!52325)))))))

(assert (= (and d!28575 (not res!52244)) b!104861))

(assert (= (and b!104861 res!52245) b!104862))

(assert (=> b!104862 m!116047))

(assert (=> d!27755 d!28575))

(declare-fun d!28577 () Bool)

(declare-fun res!52246 () Bool)

(declare-fun e!68259 () Bool)

(assert (=> d!28577 (=> res!52246 e!68259)))

(assert (=> d!28577 (= res!52246 (and ((_ is Cons!1608) lt!52978) (= (_1!1197 (h!2204 lt!52978)) (_1!1197 lt!52325))))))

(assert (=> d!28577 (= (containsKey!157 lt!52978 (_1!1197 lt!52325)) e!68259)))

(declare-fun b!104863 () Bool)

(declare-fun e!68260 () Bool)

(assert (=> b!104863 (= e!68259 e!68260)))

(declare-fun res!52247 () Bool)

(assert (=> b!104863 (=> (not res!52247) (not e!68260))))

(assert (=> b!104863 (= res!52247 (and (or (not ((_ is Cons!1608) lt!52978)) (bvsle (_1!1197 (h!2204 lt!52978)) (_1!1197 lt!52325))) ((_ is Cons!1608) lt!52978) (bvslt (_1!1197 (h!2204 lt!52978)) (_1!1197 lt!52325))))))

(declare-fun b!104864 () Bool)

(assert (=> b!104864 (= e!68260 (containsKey!157 (t!5665 lt!52978) (_1!1197 lt!52325)))))

(assert (= (and d!28577 (not res!52246)) b!104863))

(assert (= (and b!104863 res!52247) b!104864))

(declare-fun m!116617 () Bool)

(assert (=> b!104864 m!116617))

(assert (=> b!103831 d!28577))

(declare-fun d!28579 () Bool)

(assert (=> d!28579 (= ($colon$colon!79 e!67453 (ite c!17844 (h!2204 (toList!785 (+!134 lt!52333 lt!52325))) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331)))) (Cons!1608 (ite c!17844 (h!2204 (toList!785 (+!134 lt!52333 lt!52325))) (tuple2!2373 (_1!1197 lt!52331) (_2!1197 lt!52331))) e!67453))))

(assert (=> bm!10865 d!28579))

(declare-fun d!28581 () Bool)

(declare-fun e!68262 () Bool)

(assert (=> d!28581 e!68262))

(declare-fun res!52248 () Bool)

(assert (=> d!28581 (=> res!52248 e!68262)))

(declare-fun lt!53510 () Bool)

(assert (=> d!28581 (= res!52248 (not lt!53510))))

(declare-fun lt!53509 () Bool)

(assert (=> d!28581 (= lt!53510 lt!53509)))

(declare-fun lt!53511 () Unit!3141)

(declare-fun e!68261 () Unit!3141)

(assert (=> d!28581 (= lt!53511 e!68261)))

(declare-fun c!18205 () Bool)

(assert (=> d!28581 (= c!18205 lt!53509)))

(assert (=> d!28581 (= lt!53509 (containsKey!157 (toList!785 lt!52737) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> d!28581 (= (contains!816 lt!52737 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53510)))

(declare-fun b!104865 () Bool)

(declare-fun lt!53508 () Unit!3141)

(assert (=> b!104865 (= e!68261 lt!53508)))

(assert (=> b!104865 (= lt!53508 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52737) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(assert (=> b!104865 (isDefined!107 (getValueByKey!153 (toList!785 lt!52737) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104866 () Bool)

(declare-fun Unit!3212 () Unit!3141)

(assert (=> b!104866 (= e!68261 Unit!3212)))

(declare-fun b!104867 () Bool)

(assert (=> b!104867 (= e!68262 (isDefined!107 (getValueByKey!153 (toList!785 lt!52737) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!28581 c!18205) b!104865))

(assert (= (and d!28581 (not c!18205)) b!104866))

(assert (= (and d!28581 (not res!52248)) b!104867))

(declare-fun m!116619 () Bool)

(assert (=> d!28581 m!116619))

(declare-fun m!116621 () Bool)

(assert (=> b!104865 m!116621))

(assert (=> b!104865 m!114235))

(assert (=> b!104865 m!114235))

(declare-fun m!116623 () Bool)

(assert (=> b!104865 m!116623))

(assert (=> b!104867 m!114235))

(assert (=> b!104867 m!114235))

(assert (=> b!104867 m!116623))

(assert (=> d!27765 d!28581))

(declare-fun b!104870 () Bool)

(declare-fun e!68264 () Option!159)

(assert (=> b!104870 (= e!68264 (getValueByKey!153 (t!5665 lt!52735) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104868 () Bool)

(declare-fun e!68263 () Option!159)

(assert (=> b!104868 (= e!68263 (Some!158 (_2!1197 (h!2204 lt!52735))))))

(declare-fun d!28583 () Bool)

(declare-fun c!18206 () Bool)

(assert (=> d!28583 (= c!18206 (and ((_ is Cons!1608) lt!52735) (= (_1!1197 (h!2204 lt!52735)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28583 (= (getValueByKey!153 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) e!68263)))

(declare-fun b!104869 () Bool)

(assert (=> b!104869 (= e!68263 e!68264)))

(declare-fun c!18207 () Bool)

(assert (=> b!104869 (= c!18207 (and ((_ is Cons!1608) lt!52735) (not (= (_1!1197 (h!2204 lt!52735)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun b!104871 () Bool)

(assert (=> b!104871 (= e!68264 None!157)))

(assert (= (and d!28583 c!18206) b!104868))

(assert (= (and d!28583 (not c!18206)) b!104869))

(assert (= (and b!104869 c!18207) b!104870))

(assert (= (and b!104869 (not c!18207)) b!104871))

(declare-fun m!116625 () Bool)

(assert (=> b!104870 m!116625))

(assert (=> d!27765 d!28583))

(declare-fun d!28585 () Bool)

(assert (=> d!28585 (= (getValueByKey!153 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun lt!53512 () Unit!3141)

(assert (=> d!28585 (= lt!53512 (choose!649 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun e!68265 () Bool)

(assert (=> d!28585 e!68265))

(declare-fun res!52249 () Bool)

(assert (=> d!28585 (=> (not res!52249) (not e!68265))))

(assert (=> d!28585 (= res!52249 (isStrictlySorted!303 lt!52735))))

(assert (=> d!28585 (= (lemmaContainsTupThenGetReturnValue!72 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53512)))

(declare-fun b!104872 () Bool)

(declare-fun res!52250 () Bool)

(assert (=> b!104872 (=> (not res!52250) (not e!68265))))

(assert (=> b!104872 (= res!52250 (containsKey!157 lt!52735 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104873 () Bool)

(assert (=> b!104873 (= e!68265 (contains!819 lt!52735 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!28585 res!52249) b!104872))

(assert (= (and b!104872 res!52250) b!104873))

(assert (=> d!28585 m!114229))

(declare-fun m!116627 () Bool)

(assert (=> d!28585 m!116627))

(declare-fun m!116629 () Bool)

(assert (=> d!28585 m!116629))

(declare-fun m!116631 () Bool)

(assert (=> b!104872 m!116631))

(declare-fun m!116633 () Bool)

(assert (=> b!104873 m!116633))

(assert (=> d!27765 d!28585))

(declare-fun b!104874 () Bool)

(declare-fun e!68267 () List!1612)

(declare-fun call!11018 () List!1612)

(assert (=> b!104874 (= e!68267 call!11018)))

(declare-fun b!104875 () Bool)

(declare-fun e!68268 () List!1612)

(assert (=> b!104875 (= e!68268 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52333)) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun b!104876 () Bool)

(declare-fun res!52251 () Bool)

(declare-fun e!68270 () Bool)

(assert (=> b!104876 (=> (not res!52251) (not e!68270))))

(declare-fun lt!53513 () List!1612)

(assert (=> b!104876 (= res!52251 (containsKey!157 lt!53513 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))

(declare-fun bm!11013 () Bool)

(declare-fun call!11016 () List!1612)

(assert (=> bm!11013 (= call!11016 call!11018)))

(declare-fun b!104877 () Bool)

(declare-fun e!68266 () List!1612)

(assert (=> b!104877 (= e!68266 call!11016)))

(declare-fun c!18208 () Bool)

(declare-fun c!18210 () Bool)

(declare-fun b!104878 () Bool)

(assert (=> b!104878 (= e!68268 (ite c!18210 (t!5665 (toList!785 lt!52333)) (ite c!18208 (Cons!1608 (h!2204 (toList!785 lt!52333)) (t!5665 (toList!785 lt!52333))) Nil!1609)))))

(declare-fun d!28587 () Bool)

(assert (=> d!28587 e!68270))

(declare-fun res!52252 () Bool)

(assert (=> d!28587 (=> (not res!52252) (not e!68270))))

(assert (=> d!28587 (= res!52252 (isStrictlySorted!303 lt!53513))))

(declare-fun e!68269 () List!1612)

(assert (=> d!28587 (= lt!53513 e!68269)))

(declare-fun c!18211 () Bool)

(assert (=> d!28587 (= c!18211 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> d!28587 (isStrictlySorted!303 (toList!785 lt!52333))))

(assert (=> d!28587 (= (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))) lt!53513)))

(declare-fun b!104879 () Bool)

(assert (=> b!104879 (= c!18208 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (=> b!104879 (= e!68267 e!68266)))

(declare-fun bm!11014 () Bool)

(declare-fun call!11017 () List!1612)

(assert (=> bm!11014 (= call!11017 ($colon$colon!79 e!68268 (ite c!18211 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329))))))))

(declare-fun c!18209 () Bool)

(assert (=> bm!11014 (= c!18209 c!18211)))

(declare-fun b!104880 () Bool)

(assert (=> b!104880 (= e!68270 (contains!819 lt!53513 (tuple2!2373 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(declare-fun b!104881 () Bool)

(assert (=> b!104881 (= e!68269 call!11017)))

(declare-fun bm!11015 () Bool)

(assert (=> bm!11015 (= call!11018 call!11017)))

(declare-fun b!104882 () Bool)

(assert (=> b!104882 (= e!68266 call!11016)))

(declare-fun b!104883 () Bool)

(assert (=> b!104883 (= e!68269 e!68267)))

(assert (=> b!104883 (= c!18210 (and ((_ is Cons!1608) (toList!785 lt!52333)) (= (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))))

(assert (= (and d!28587 c!18211) b!104881))

(assert (= (and d!28587 (not c!18211)) b!104883))

(assert (= (and b!104883 c!18210) b!104874))

(assert (= (and b!104883 (not c!18210)) b!104879))

(assert (= (and b!104879 c!18208) b!104882))

(assert (= (and b!104879 (not c!18208)) b!104877))

(assert (= (or b!104882 b!104877) bm!11013))

(assert (= (or b!104874 bm!11013) bm!11015))

(assert (= (or b!104881 bm!11015) bm!11014))

(assert (= (and bm!11014 c!18209) b!104875))

(assert (= (and bm!11014 (not c!18209)) b!104878))

(assert (= (and d!28587 res!52252) b!104876))

(assert (= (and b!104876 res!52251) b!104880))

(declare-fun m!116635 () Bool)

(assert (=> b!104880 m!116635))

(declare-fun m!116637 () Bool)

(assert (=> d!28587 m!116637))

(assert (=> d!28587 m!114295))

(declare-fun m!116639 () Bool)

(assert (=> b!104876 m!116639))

(declare-fun m!116641 () Bool)

(assert (=> b!104875 m!116641))

(declare-fun m!116643 () Bool)

(assert (=> bm!11014 m!116643))

(assert (=> d!27765 d!28587))

(declare-fun b!104886 () Bool)

(declare-fun e!68272 () Option!159)

(assert (=> b!104886 (= e!68272 (getValueByKey!153 (t!5665 (toList!785 lt!52919)) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104884 () Bool)

(declare-fun e!68271 () Option!159)

(assert (=> b!104884 (= e!68271 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52919)))))))

(declare-fun d!28589 () Bool)

(declare-fun c!18212 () Bool)

(assert (=> d!28589 (= c!18212 (and ((_ is Cons!1608) (toList!785 lt!52919)) (= (_1!1197 (h!2204 (toList!785 lt!52919))) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28589 (= (getValueByKey!153 (toList!785 lt!52919) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68271)))

(declare-fun b!104885 () Bool)

(assert (=> b!104885 (= e!68271 e!68272)))

(declare-fun c!18213 () Bool)

(assert (=> b!104885 (= c!18213 (and ((_ is Cons!1608) (toList!785 lt!52919)) (not (= (_1!1197 (h!2204 (toList!785 lt!52919))) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104887 () Bool)

(assert (=> b!104887 (= e!68272 None!157)))

(assert (= (and d!28589 c!18212) b!104884))

(assert (= (and d!28589 (not c!18212)) b!104885))

(assert (= (and b!104885 c!18213) b!104886))

(assert (= (and b!104885 (not c!18213)) b!104887))

(declare-fun m!116645 () Bool)

(assert (=> b!104886 m!116645))

(assert (=> b!103784 d!28589))

(assert (=> d!27793 d!27791))

(declare-fun d!28591 () Bool)

(assert (=> d!28591 (= (getValueByKey!153 lt!52451 (_1!1197 lt!52325)) (Some!158 (_2!1197 lt!52325)))))

(assert (=> d!28591 true))

(declare-fun _$22!429 () Unit!3141)

(assert (=> d!28591 (= (choose!649 lt!52451 (_1!1197 lt!52325) (_2!1197 lt!52325)) _$22!429)))

(declare-fun bs!4307 () Bool)

(assert (= bs!4307 d!28591))

(assert (=> bs!4307 m!113759))

(assert (=> d!27793 d!28591))

(declare-fun d!28593 () Bool)

(declare-fun res!52253 () Bool)

(declare-fun e!68273 () Bool)

(assert (=> d!28593 (=> res!52253 e!68273)))

(assert (=> d!28593 (= res!52253 (or ((_ is Nil!1609) lt!52451) ((_ is Nil!1609) (t!5665 lt!52451))))))

(assert (=> d!28593 (= (isStrictlySorted!303 lt!52451) e!68273)))

(declare-fun b!104888 () Bool)

(declare-fun e!68274 () Bool)

(assert (=> b!104888 (= e!68273 e!68274)))

(declare-fun res!52254 () Bool)

(assert (=> b!104888 (=> (not res!52254) (not e!68274))))

(assert (=> b!104888 (= res!52254 (bvslt (_1!1197 (h!2204 lt!52451)) (_1!1197 (h!2204 (t!5665 lt!52451)))))))

(declare-fun b!104889 () Bool)

(assert (=> b!104889 (= e!68274 (isStrictlySorted!303 (t!5665 lt!52451)))))

(assert (= (and d!28593 (not res!52253)) b!104888))

(assert (= (and b!104888 res!52254) b!104889))

(declare-fun m!116647 () Bool)

(assert (=> b!104889 m!116647))

(assert (=> d!27793 d!28593))

(assert (=> b!103688 d!28129))

(declare-fun d!28595 () Bool)

(declare-fun e!68276 () Bool)

(assert (=> d!28595 e!68276))

(declare-fun res!52255 () Bool)

(assert (=> d!28595 (=> res!52255 e!68276)))

(declare-fun lt!53516 () Bool)

(assert (=> d!28595 (= res!52255 (not lt!53516))))

(declare-fun lt!53515 () Bool)

(assert (=> d!28595 (= lt!53516 lt!53515)))

(declare-fun lt!53517 () Unit!3141)

(declare-fun e!68275 () Unit!3141)

(assert (=> d!28595 (= lt!53517 e!68275)))

(declare-fun c!18214 () Bool)

(assert (=> d!28595 (= c!18214 lt!53515)))

(assert (=> d!28595 (= lt!53515 (containsKey!157 (toList!785 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861))) lt!52865))))

(assert (=> d!28595 (= (contains!816 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861)) lt!52865) lt!53516)))

(declare-fun b!104890 () Bool)

(declare-fun lt!53514 () Unit!3141)

(assert (=> b!104890 (= e!68275 lt!53514)))

(assert (=> b!104890 (= lt!53514 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861))) lt!52865))))

(assert (=> b!104890 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861))) lt!52865))))

(declare-fun b!104891 () Bool)

(declare-fun Unit!3213 () Unit!3141)

(assert (=> b!104891 (= e!68275 Unit!3213)))

(declare-fun b!104892 () Bool)

(assert (=> b!104892 (= e!68276 (isDefined!107 (getValueByKey!153 (toList!785 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861))) lt!52865)))))

(assert (= (and d!28595 c!18214) b!104890))

(assert (= (and d!28595 (not c!18214)) b!104891))

(assert (= (and d!28595 (not res!52255)) b!104892))

(declare-fun m!116649 () Bool)

(assert (=> d!28595 m!116649))

(declare-fun m!116651 () Bool)

(assert (=> b!104890 m!116651))

(declare-fun m!116653 () Bool)

(assert (=> b!104890 m!116653))

(assert (=> b!104890 m!116653))

(declare-fun m!116655 () Bool)

(assert (=> b!104890 m!116655))

(assert (=> b!104892 m!116653))

(assert (=> b!104892 m!116653))

(assert (=> b!104892 m!116655))

(assert (=> b!103688 d!28595))

(declare-fun d!28597 () Bool)

(assert (=> d!28597 (not (contains!816 (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861)) lt!52865))))

(declare-fun lt!53518 () Unit!3141)

(assert (=> d!28597 (= lt!53518 (choose!646 lt!52864 lt!52859 lt!52861 lt!52865))))

(declare-fun e!68277 () Bool)

(assert (=> d!28597 e!68277))

(declare-fun res!52256 () Bool)

(assert (=> d!28597 (=> (not res!52256) (not e!68277))))

(assert (=> d!28597 (= res!52256 (not (contains!816 lt!52864 lt!52865)))))

(assert (=> d!28597 (= (addStillNotContains!46 lt!52864 lt!52859 lt!52861 lt!52865) lt!53518)))

(declare-fun b!104893 () Bool)

(assert (=> b!104893 (= e!68277 (not (= lt!52859 lt!52865)))))

(assert (= (and d!28597 res!52256) b!104893))

(assert (=> d!28597 m!114429))

(assert (=> d!28597 m!114429))

(assert (=> d!28597 m!114431))

(declare-fun m!116657 () Bool)

(assert (=> d!28597 m!116657))

(declare-fun m!116659 () Bool)

(assert (=> d!28597 m!116659))

(assert (=> b!103688 d!28597))

(declare-fun d!28599 () Bool)

(declare-fun e!68278 () Bool)

(assert (=> d!28599 e!68278))

(declare-fun res!52258 () Bool)

(assert (=> d!28599 (=> (not res!52258) (not e!68278))))

(declare-fun lt!53522 () ListLongMap!1539)

(assert (=> d!28599 (= res!52258 (contains!816 lt!53522 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53520 () List!1612)

(assert (=> d!28599 (= lt!53522 (ListLongMap!1540 lt!53520))))

(declare-fun lt!53519 () Unit!3141)

(declare-fun lt!53521 () Unit!3141)

(assert (=> d!28599 (= lt!53519 lt!53521)))

(assert (=> d!28599 (= (getValueByKey!153 lt!53520 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28599 (= lt!53521 (lemmaContainsTupThenGetReturnValue!72 lt!53520 (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28599 (= lt!53520 (insertStrictlySorted!75 (toList!785 call!10888) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28599 (= (+!134 call!10888 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53522)))

(declare-fun b!104894 () Bool)

(declare-fun res!52257 () Bool)

(assert (=> b!104894 (=> (not res!52257) (not e!68278))))

(assert (=> b!104894 (= res!52257 (= (getValueByKey!153 (toList!785 lt!53522) (_1!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!158 (_2!1197 (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104895 () Bool)

(assert (=> b!104895 (= e!68278 (contains!819 (toList!785 lt!53522) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1325 (select (arr!2045 (_values!2543 (v!2867 (underlying!352 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28599 res!52258) b!104894))

(assert (= (and b!104894 res!52257) b!104895))

(declare-fun m!116661 () Bool)

(assert (=> d!28599 m!116661))

(declare-fun m!116663 () Bool)

(assert (=> d!28599 m!116663))

(declare-fun m!116665 () Bool)

(assert (=> d!28599 m!116665))

(declare-fun m!116667 () Bool)

(assert (=> d!28599 m!116667))

(declare-fun m!116669 () Bool)

(assert (=> b!104894 m!116669))

(declare-fun m!116671 () Bool)

(assert (=> b!104895 m!116671))

(assert (=> b!103688 d!28599))

(declare-fun d!28601 () Bool)

(declare-fun e!68279 () Bool)

(assert (=> d!28601 e!68279))

(declare-fun res!52260 () Bool)

(assert (=> d!28601 (=> (not res!52260) (not e!68279))))

(declare-fun lt!53526 () ListLongMap!1539)

(assert (=> d!28601 (= res!52260 (contains!816 lt!53526 (_1!1197 (tuple2!2373 lt!52859 lt!52861))))))

(declare-fun lt!53524 () List!1612)

(assert (=> d!28601 (= lt!53526 (ListLongMap!1540 lt!53524))))

(declare-fun lt!53523 () Unit!3141)

(declare-fun lt!53525 () Unit!3141)

(assert (=> d!28601 (= lt!53523 lt!53525)))

(assert (=> d!28601 (= (getValueByKey!153 lt!53524 (_1!1197 (tuple2!2373 lt!52859 lt!52861))) (Some!158 (_2!1197 (tuple2!2373 lt!52859 lt!52861))))))

(assert (=> d!28601 (= lt!53525 (lemmaContainsTupThenGetReturnValue!72 lt!53524 (_1!1197 (tuple2!2373 lt!52859 lt!52861)) (_2!1197 (tuple2!2373 lt!52859 lt!52861))))))

(assert (=> d!28601 (= lt!53524 (insertStrictlySorted!75 (toList!785 lt!52864) (_1!1197 (tuple2!2373 lt!52859 lt!52861)) (_2!1197 (tuple2!2373 lt!52859 lt!52861))))))

(assert (=> d!28601 (= (+!134 lt!52864 (tuple2!2373 lt!52859 lt!52861)) lt!53526)))

(declare-fun b!104896 () Bool)

(declare-fun res!52259 () Bool)

(assert (=> b!104896 (=> (not res!52259) (not e!68279))))

(assert (=> b!104896 (= res!52259 (= (getValueByKey!153 (toList!785 lt!53526) (_1!1197 (tuple2!2373 lt!52859 lt!52861))) (Some!158 (_2!1197 (tuple2!2373 lt!52859 lt!52861)))))))

(declare-fun b!104897 () Bool)

(assert (=> b!104897 (= e!68279 (contains!819 (toList!785 lt!53526) (tuple2!2373 lt!52859 lt!52861)))))

(assert (= (and d!28601 res!52260) b!104896))

(assert (= (and b!104896 res!52259) b!104897))

(declare-fun m!116673 () Bool)

(assert (=> d!28601 m!116673))

(declare-fun m!116675 () Bool)

(assert (=> d!28601 m!116675))

(declare-fun m!116677 () Bool)

(assert (=> d!28601 m!116677))

(declare-fun m!116679 () Bool)

(assert (=> d!28601 m!116679))

(declare-fun m!116681 () Bool)

(assert (=> b!104896 m!116681))

(declare-fun m!116683 () Bool)

(assert (=> b!104897 m!116683))

(assert (=> b!103688 d!28601))

(assert (=> b!103844 d!28009))

(declare-fun d!28603 () Bool)

(declare-fun e!68281 () Bool)

(assert (=> d!28603 e!68281))

(declare-fun res!52261 () Bool)

(assert (=> d!28603 (=> res!52261 e!68281)))

(declare-fun lt!53529 () Bool)

(assert (=> d!28603 (= res!52261 (not lt!53529))))

(declare-fun lt!53528 () Bool)

(assert (=> d!28603 (= lt!53529 lt!53528)))

(declare-fun lt!53530 () Unit!3141)

(declare-fun e!68280 () Unit!3141)

(assert (=> d!28603 (= lt!53530 e!68280)))

(declare-fun c!18215 () Bool)

(assert (=> d!28603 (= c!18215 lt!53528)))

(assert (=> d!28603 (= lt!53528 (containsKey!157 (toList!785 lt!52927) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28603 (= (contains!816 lt!52927 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!53529)))

(declare-fun b!104898 () Bool)

(declare-fun lt!53527 () Unit!3141)

(assert (=> b!104898 (= e!68280 lt!53527)))

(assert (=> b!104898 (= lt!53527 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52927) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104898 (isDefined!107 (getValueByKey!153 (toList!785 lt!52927) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104899 () Bool)

(declare-fun Unit!3214 () Unit!3141)

(assert (=> b!104899 (= e!68280 Unit!3214)))

(declare-fun b!104900 () Bool)

(assert (=> b!104900 (= e!68281 (isDefined!107 (getValueByKey!153 (toList!785 lt!52927) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (= (and d!28603 c!18215) b!104898))

(assert (= (and d!28603 (not c!18215)) b!104899))

(assert (= (and d!28603 (not res!52261)) b!104900))

(declare-fun m!116685 () Bool)

(assert (=> d!28603 m!116685))

(declare-fun m!116687 () Bool)

(assert (=> b!104898 m!116687))

(assert (=> b!104898 m!114581))

(assert (=> b!104898 m!114581))

(declare-fun m!116689 () Bool)

(assert (=> b!104898 m!116689))

(assert (=> b!104900 m!114581))

(assert (=> b!104900 m!114581))

(assert (=> b!104900 m!116689))

(assert (=> d!27837 d!28603))

(declare-fun b!104903 () Bool)

(declare-fun e!68283 () Option!159)

(assert (=> b!104903 (= e!68283 (getValueByKey!153 (t!5665 lt!52925) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104901 () Bool)

(declare-fun e!68282 () Option!159)

(assert (=> b!104901 (= e!68282 (Some!158 (_2!1197 (h!2204 lt!52925))))))

(declare-fun c!18216 () Bool)

(declare-fun d!28605 () Bool)

(assert (=> d!28605 (= c!18216 (and ((_ is Cons!1608) lt!52925) (= (_1!1197 (h!2204 lt!52925)) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (=> d!28605 (= (getValueByKey!153 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) e!68282)))

(declare-fun b!104902 () Bool)

(assert (=> b!104902 (= e!68282 e!68283)))

(declare-fun c!18217 () Bool)

(assert (=> b!104902 (= c!18217 (and ((_ is Cons!1608) lt!52925) (not (= (_1!1197 (h!2204 lt!52925)) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun b!104904 () Bool)

(assert (=> b!104904 (= e!68283 None!157)))

(assert (= (and d!28605 c!18216) b!104901))

(assert (= (and d!28605 (not c!18216)) b!104902))

(assert (= (and b!104902 c!18217) b!104903))

(assert (= (and b!104902 (not c!18217)) b!104904))

(declare-fun m!116691 () Bool)

(assert (=> b!104903 m!116691))

(assert (=> d!27837 d!28605))

(declare-fun d!28607 () Bool)

(assert (=> d!28607 (= (getValueByKey!153 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) (Some!158 (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun lt!53531 () Unit!3141)

(assert (=> d!28607 (= lt!53531 (choose!649 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun e!68284 () Bool)

(assert (=> d!28607 e!68284))

(declare-fun res!52262 () Bool)

(assert (=> d!28607 (=> (not res!52262) (not e!68284))))

(assert (=> d!28607 (= res!52262 (isStrictlySorted!303 lt!52925))))

(assert (=> d!28607 (= (lemmaContainsTupThenGetReturnValue!72 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!53531)))

(declare-fun b!104905 () Bool)

(declare-fun res!52263 () Bool)

(assert (=> b!104905 (=> (not res!52263) (not e!68284))))

(assert (=> b!104905 (= res!52263 (containsKey!157 lt!52925 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104906 () Bool)

(assert (=> b!104906 (= e!68284 (contains!819 lt!52925 (tuple2!2373 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (= (and d!28607 res!52262) b!104905))

(assert (= (and b!104905 res!52263) b!104906))

(assert (=> d!28607 m!114575))

(declare-fun m!116693 () Bool)

(assert (=> d!28607 m!116693))

(declare-fun m!116695 () Bool)

(assert (=> d!28607 m!116695))

(declare-fun m!116697 () Bool)

(assert (=> b!104905 m!116697))

(declare-fun m!116699 () Bool)

(assert (=> b!104906 m!116699))

(assert (=> d!27837 d!28607))

(declare-fun b!104907 () Bool)

(declare-fun e!68286 () List!1612)

(declare-fun call!11021 () List!1612)

(assert (=> b!104907 (= e!68286 call!11021)))

(declare-fun e!68287 () List!1612)

(declare-fun b!104908 () Bool)

(assert (=> b!104908 (= e!68287 (insertStrictlySorted!75 (t!5665 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104909 () Bool)

(declare-fun res!52264 () Bool)

(declare-fun e!68289 () Bool)

(assert (=> b!104909 (=> (not res!52264) (not e!68289))))

(declare-fun lt!53532 () List!1612)

(assert (=> b!104909 (= res!52264 (containsKey!157 lt!53532 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun bm!11016 () Bool)

(declare-fun call!11019 () List!1612)

(assert (=> bm!11016 (= call!11019 call!11021)))

(declare-fun b!104910 () Bool)

(declare-fun e!68285 () List!1612)

(assert (=> b!104910 (= e!68285 call!11019)))

(declare-fun c!18220 () Bool)

(declare-fun b!104911 () Bool)

(declare-fun c!18218 () Bool)

(assert (=> b!104911 (= e!68287 (ite c!18220 (t!5665 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (ite c!18218 (Cons!1608 (h!2204 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (t!5665 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))))) Nil!1609)))))

(declare-fun d!28609 () Bool)

(assert (=> d!28609 e!68289))

(declare-fun res!52265 () Bool)

(assert (=> d!28609 (=> (not res!52265) (not e!68289))))

(assert (=> d!28609 (= res!52265 (isStrictlySorted!303 lt!53532))))

(declare-fun e!68288 () List!1612)

(assert (=> d!28609 (= lt!53532 e!68288)))

(declare-fun c!18221 () Bool)

(assert (=> d!28609 (= c!18221 (and ((_ is Cons!1608) (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (bvslt (_1!1197 (h!2204 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (=> d!28609 (isStrictlySorted!303 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))))))

(assert (=> d!28609 (= (insertStrictlySorted!75 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))) lt!53532)))

(declare-fun b!104912 () Bool)

(assert (=> b!104912 (= c!18218 (and ((_ is Cons!1608) (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (bvsgt (_1!1197 (h!2204 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (=> b!104912 (= e!68286 e!68285)))

(declare-fun bm!11017 () Bool)

(declare-fun call!11020 () List!1612)

(assert (=> bm!11017 (= call!11020 ($colon$colon!79 e!68287 (ite c!18221 (h!2204 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (tuple2!2373 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))))

(declare-fun c!18219 () Bool)

(assert (=> bm!11017 (= c!18219 c!18221)))

(declare-fun b!104913 () Bool)

(assert (=> b!104913 (= e!68289 (contains!819 lt!53532 (tuple2!2373 (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (_2!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104914 () Bool)

(assert (=> b!104914 (= e!68288 call!11020)))

(declare-fun bm!11018 () Bool)

(assert (=> bm!11018 (= call!11021 call!11020)))

(declare-fun b!104915 () Bool)

(assert (=> b!104915 (= e!68285 call!11019)))

(declare-fun b!104916 () Bool)

(assert (=> b!104916 (= e!68288 e!68286)))

(assert (=> b!104916 (= c!18220 (and ((_ is Cons!1608) (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841)))) (= (_1!1197 (h!2204 (toList!785 (ite c!17779 call!10839 (ite c!17780 call!10837 call!10841))))) (_1!1197 (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(assert (= (and d!28609 c!18221) b!104914))

(assert (= (and d!28609 (not c!18221)) b!104916))

(assert (= (and b!104916 c!18220) b!104907))

(assert (= (and b!104916 (not c!18220)) b!104912))

(assert (= (and b!104912 c!18218) b!104915))

(assert (= (and b!104912 (not c!18218)) b!104910))

(assert (= (or b!104915 b!104910) bm!11016))

(assert (= (or b!104907 bm!11016) bm!11018))

(assert (= (or b!104914 bm!11018) bm!11017))

(assert (= (and bm!11017 c!18219) b!104908))

(assert (= (and bm!11017 (not c!18219)) b!104911))

(assert (= (and d!28609 res!52265) b!104909))

(assert (= (and b!104909 res!52264) b!104913))

(declare-fun m!116701 () Bool)

(assert (=> b!104913 m!116701))

(declare-fun m!116703 () Bool)

(assert (=> d!28609 m!116703))

(declare-fun m!116705 () Bool)

(assert (=> d!28609 m!116705))

(declare-fun m!116707 () Bool)

(assert (=> b!104909 m!116707))

(declare-fun m!116709 () Bool)

(assert (=> b!104908 m!116709))

(declare-fun m!116711 () Bool)

(assert (=> bm!11017 m!116711))

(assert (=> d!27837 d!28609))

(declare-fun d!28611 () Bool)

(assert (=> d!28611 (= (get!1328 (getValueByKey!153 (toList!785 lt!52614) lt!52604)) (v!2873 (getValueByKey!153 (toList!785 lt!52614) lt!52604)))))

(assert (=> d!27855 d!28611))

(declare-fun b!104919 () Bool)

(declare-fun e!68291 () Option!159)

(assert (=> b!104919 (= e!68291 (getValueByKey!153 (t!5665 (toList!785 lt!52614)) lt!52604))))

(declare-fun b!104917 () Bool)

(declare-fun e!68290 () Option!159)

(assert (=> b!104917 (= e!68290 (Some!158 (_2!1197 (h!2204 (toList!785 lt!52614)))))))

(declare-fun d!28613 () Bool)

(declare-fun c!18222 () Bool)

(assert (=> d!28613 (= c!18222 (and ((_ is Cons!1608) (toList!785 lt!52614)) (= (_1!1197 (h!2204 (toList!785 lt!52614))) lt!52604)))))

(assert (=> d!28613 (= (getValueByKey!153 (toList!785 lt!52614) lt!52604) e!68290)))

(declare-fun b!104918 () Bool)

(assert (=> b!104918 (= e!68290 e!68291)))

(declare-fun c!18223 () Bool)

(assert (=> b!104918 (= c!18223 (and ((_ is Cons!1608) (toList!785 lt!52614)) (not (= (_1!1197 (h!2204 (toList!785 lt!52614))) lt!52604))))))

(declare-fun b!104920 () Bool)

(assert (=> b!104920 (= e!68291 None!157)))

(assert (= (and d!28613 c!18222) b!104917))

(assert (= (and d!28613 (not c!18222)) b!104918))

(assert (= (and b!104918 c!18223) b!104919))

(assert (= (and b!104918 (not c!18223)) b!104920))

(declare-fun m!116713 () Bool)

(assert (=> b!104919 m!116713))

(assert (=> d!27855 d!28613))

(declare-fun d!28615 () Bool)

(declare-fun e!68293 () Bool)

(assert (=> d!28615 e!68293))

(declare-fun res!52266 () Bool)

(assert (=> d!28615 (=> res!52266 e!68293)))

(declare-fun lt!53535 () Bool)

(assert (=> d!28615 (= res!52266 (not lt!53535))))

(declare-fun lt!53534 () Bool)

(assert (=> d!28615 (= lt!53535 lt!53534)))

(declare-fun lt!53536 () Unit!3141)

(declare-fun e!68292 () Unit!3141)

(assert (=> d!28615 (= lt!53536 e!68292)))

(declare-fun c!18224 () Bool)

(assert (=> d!28615 (= c!18224 lt!53534)))

(assert (=> d!28615 (= lt!53534 (containsKey!157 (toList!785 lt!52745) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!28615 (= (contains!816 lt!52745 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53535)))

(declare-fun b!104921 () Bool)

(declare-fun lt!53533 () Unit!3141)

(assert (=> b!104921 (= e!68292 lt!53533)))

(assert (=> b!104921 (= lt!53533 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52745) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!104921 (isDefined!107 (getValueByKey!153 (toList!785 lt!52745) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104922 () Bool)

(declare-fun Unit!3215 () Unit!3141)

(assert (=> b!104922 (= e!68292 Unit!3215)))

(declare-fun b!104923 () Bool)

(assert (=> b!104923 (= e!68293 (isDefined!107 (getValueByKey!153 (toList!785 lt!52745) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28615 c!18224) b!104921))

(assert (= (and d!28615 (not c!18224)) b!104922))

(assert (= (and d!28615 (not res!52266)) b!104923))

(declare-fun m!116715 () Bool)

(assert (=> d!28615 m!116715))

(declare-fun m!116717 () Bool)

(assert (=> b!104921 m!116717))

(assert (=> b!104921 m!114259))

(assert (=> b!104921 m!114259))

(declare-fun m!116719 () Bool)

(assert (=> b!104921 m!116719))

(assert (=> b!104923 m!114259))

(assert (=> b!104923 m!114259))

(assert (=> b!104923 m!116719))

(assert (=> d!27771 d!28615))

(declare-fun b!104926 () Bool)

(declare-fun e!68295 () Option!159)

(assert (=> b!104926 (= e!68295 (getValueByKey!153 (t!5665 lt!52743) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104924 () Bool)

(declare-fun e!68294 () Option!159)

(assert (=> b!104924 (= e!68294 (Some!158 (_2!1197 (h!2204 lt!52743))))))

(declare-fun d!28617 () Bool)

(declare-fun c!18225 () Bool)

(assert (=> d!28617 (= c!18225 (and ((_ is Cons!1608) lt!52743) (= (_1!1197 (h!2204 lt!52743)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28617 (= (getValueByKey!153 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68294)))

(declare-fun b!104925 () Bool)

(assert (=> b!104925 (= e!68294 e!68295)))

(declare-fun c!18226 () Bool)

(assert (=> b!104925 (= c!18226 (and ((_ is Cons!1608) lt!52743) (not (= (_1!1197 (h!2204 lt!52743)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104927 () Bool)

(assert (=> b!104927 (= e!68295 None!157)))

(assert (= (and d!28617 c!18225) b!104924))

(assert (= (and d!28617 (not c!18225)) b!104925))

(assert (= (and b!104925 c!18226) b!104926))

(assert (= (and b!104925 (not c!18226)) b!104927))

(declare-fun m!116721 () Bool)

(assert (=> b!104926 m!116721))

(assert (=> d!27771 d!28617))

(declare-fun d!28619 () Bool)

(assert (=> d!28619 (= (getValueByKey!153 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53537 () Unit!3141)

(assert (=> d!28619 (= lt!53537 (choose!649 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!68296 () Bool)

(assert (=> d!28619 e!68296))

(declare-fun res!52267 () Bool)

(assert (=> d!28619 (=> (not res!52267) (not e!68296))))

(assert (=> d!28619 (= res!52267 (isStrictlySorted!303 lt!52743))))

(assert (=> d!28619 (= (lemmaContainsTupThenGetReturnValue!72 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53537)))

(declare-fun b!104928 () Bool)

(declare-fun res!52268 () Bool)

(assert (=> b!104928 (=> (not res!52268) (not e!68296))))

(assert (=> b!104928 (= res!52268 (containsKey!157 lt!52743 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104929 () Bool)

(assert (=> b!104929 (= e!68296 (contains!819 lt!52743 (tuple2!2373 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28619 res!52267) b!104928))

(assert (= (and b!104928 res!52268) b!104929))

(assert (=> d!28619 m!114253))

(declare-fun m!116723 () Bool)

(assert (=> d!28619 m!116723))

(declare-fun m!116725 () Bool)

(assert (=> d!28619 m!116725))

(declare-fun m!116727 () Bool)

(assert (=> b!104928 m!116727))

(declare-fun m!116729 () Bool)

(assert (=> b!104929 m!116729))

(assert (=> d!27771 d!28619))

(declare-fun b!104930 () Bool)

(declare-fun e!68298 () List!1612)

(declare-fun call!11024 () List!1612)

(assert (=> b!104930 (= e!68298 call!11024)))

(declare-fun b!104931 () Bool)

(declare-fun e!68299 () List!1612)

(assert (=> b!104931 (= e!68299 (insertStrictlySorted!75 (t!5665 (toList!785 lt!52333)) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104932 () Bool)

(declare-fun res!52269 () Bool)

(declare-fun e!68301 () Bool)

(assert (=> b!104932 (=> (not res!52269) (not e!68301))))

(declare-fun lt!53538 () List!1612)

(assert (=> b!104932 (= res!52269 (containsKey!157 lt!53538 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!11019 () Bool)

(declare-fun call!11022 () List!1612)

(assert (=> bm!11019 (= call!11022 call!11024)))

(declare-fun b!104933 () Bool)

(declare-fun e!68297 () List!1612)

(assert (=> b!104933 (= e!68297 call!11022)))

(declare-fun c!18227 () Bool)

(declare-fun c!18229 () Bool)

(declare-fun b!104934 () Bool)

(assert (=> b!104934 (= e!68299 (ite c!18229 (t!5665 (toList!785 lt!52333)) (ite c!18227 (Cons!1608 (h!2204 (toList!785 lt!52333)) (t!5665 (toList!785 lt!52333))) Nil!1609)))))

(declare-fun d!28621 () Bool)

(assert (=> d!28621 e!68301))

(declare-fun res!52270 () Bool)

(assert (=> d!28621 (=> (not res!52270) (not e!68301))))

(assert (=> d!28621 (= res!52270 (isStrictlySorted!303 lt!53538))))

(declare-fun e!68300 () List!1612)

(assert (=> d!28621 (= lt!53538 e!68300)))

(declare-fun c!18230 () Bool)

(assert (=> d!28621 (= c!18230 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28621 (isStrictlySorted!303 (toList!785 lt!52333))))

(assert (=> d!28621 (= (insertStrictlySorted!75 (toList!785 lt!52333) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53538)))

(declare-fun b!104935 () Bool)

(assert (=> b!104935 (= c!18227 (and ((_ is Cons!1608) (toList!785 lt!52333)) (bvsgt (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104935 (= e!68298 e!68297)))

(declare-fun bm!11020 () Bool)

(declare-fun call!11023 () List!1612)

(assert (=> bm!11020 (= call!11023 ($colon$colon!79 e!68299 (ite c!18230 (h!2204 (toList!785 lt!52333)) (tuple2!2373 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!18228 () Bool)

(assert (=> bm!11020 (= c!18228 c!18230)))

(declare-fun b!104936 () Bool)

(assert (=> b!104936 (= e!68301 (contains!819 lt!53538 (tuple2!2373 (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104937 () Bool)

(assert (=> b!104937 (= e!68300 call!11023)))

(declare-fun bm!11021 () Bool)

(assert (=> bm!11021 (= call!11024 call!11023)))

(declare-fun b!104938 () Bool)

(assert (=> b!104938 (= e!68297 call!11022)))

(declare-fun b!104939 () Bool)

(assert (=> b!104939 (= e!68300 e!68298)))

(assert (=> b!104939 (= c!18229 (and ((_ is Cons!1608) (toList!785 lt!52333)) (= (_1!1197 (h!2204 (toList!785 lt!52333))) (_1!1197 (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28621 c!18230) b!104937))

(assert (= (and d!28621 (not c!18230)) b!104939))

(assert (= (and b!104939 c!18229) b!104930))

(assert (= (and b!104939 (not c!18229)) b!104935))

(assert (= (and b!104935 c!18227) b!104938))

(assert (= (and b!104935 (not c!18227)) b!104933))

(assert (= (or b!104938 b!104933) bm!11019))

(assert (= (or b!104930 bm!11019) bm!11021))

(assert (= (or b!104937 bm!11021) bm!11020))

(assert (= (and bm!11020 c!18228) b!104931))

(assert (= (and bm!11020 (not c!18228)) b!104934))

(assert (= (and d!28621 res!52270) b!104932))

(assert (= (and b!104932 res!52269) b!104936))

(declare-fun m!116731 () Bool)

(assert (=> b!104936 m!116731))

(declare-fun m!116733 () Bool)

(assert (=> d!28621 m!116733))

(assert (=> d!28621 m!114295))

(declare-fun m!116735 () Bool)

(assert (=> b!104932 m!116735))

(declare-fun m!116737 () Bool)

(assert (=> b!104931 m!116737))

(declare-fun m!116739 () Bool)

(assert (=> bm!11020 m!116739))

(assert (=> d!27771 d!28621))

(assert (=> bm!10840 d!28281))

(declare-fun d!28623 () Bool)

(assert (=> d!28623 (isDefined!107 (getValueByKey!153 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun lt!53539 () Unit!3141)

(assert (=> d!28623 (= lt!53539 (choose!650 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(declare-fun e!68302 () Bool)

(assert (=> d!28623 e!68302))

(declare-fun res!52271 () Bool)

(assert (=> d!28623 (=> (not res!52271) (not e!68302))))

(assert (=> d!28623 (= res!52271 (isStrictlySorted!303 (toList!785 e!67286)))))

(assert (=> d!28623 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)) lt!53539)))

(declare-fun b!104940 () Bool)

(assert (=> b!104940 (= e!68302 (containsKey!157 (toList!785 e!67286) (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355)))))

(assert (= (and d!28623 res!52271) b!104940))

(assert (=> d!28623 m!113535))

(assert (=> d!28623 m!114523))

(assert (=> d!28623 m!114523))

(assert (=> d!28623 m!114525))

(assert (=> d!28623 m!113535))

(declare-fun m!116741 () Bool)

(assert (=> d!28623 m!116741))

(declare-fun m!116743 () Bool)

(assert (=> d!28623 m!116743))

(assert (=> b!104940 m!113535))

(assert (=> b!104940 m!114519))

(assert (=> b!103741 d!28623))

(assert (=> b!103741 d!28373))

(assert (=> b!103741 d!28375))

(declare-fun d!28625 () Bool)

(declare-fun res!52272 () Bool)

(declare-fun e!68303 () Bool)

(assert (=> d!28625 (=> res!52272 e!68303)))

(assert (=> d!28625 (= res!52272 (and ((_ is Cons!1608) (toList!785 call!10801)) (= (_1!1197 (h!2204 (toList!785 call!10801))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))))

(assert (=> d!28625 (= (containsKey!157 (toList!785 call!10801) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))) e!68303)))

(declare-fun b!104941 () Bool)

(declare-fun e!68304 () Bool)

(assert (=> b!104941 (= e!68303 e!68304)))

(declare-fun res!52273 () Bool)

(assert (=> b!104941 (=> (not res!52273) (not e!68304))))

(assert (=> b!104941 (= res!52273 (and (or (not ((_ is Cons!1608) (toList!785 call!10801))) (bvsle (_1!1197 (h!2204 (toList!785 call!10801))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))) ((_ is Cons!1608) (toList!785 call!10801)) (bvslt (_1!1197 (h!2204 (toList!785 call!10801))) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554)))))))

(declare-fun b!104942 () Bool)

(assert (=> b!104942 (= e!68304 (containsKey!157 (t!5665 (toList!785 call!10801)) (select (arr!2044 (_keys!4261 newMap!16)) (index!3192 lt!52554))))))

(assert (= (and d!28625 (not res!52272)) b!104941))

(assert (= (and b!104941 res!52273) b!104942))

(assert (=> b!104942 m!113833))

(declare-fun m!116745 () Bool)

(assert (=> b!104942 m!116745))

(assert (=> d!27707 d!28625))

(declare-fun d!28627 () Bool)

(declare-fun e!68306 () Bool)

(assert (=> d!28627 e!68306))

(declare-fun res!52274 () Bool)

(assert (=> d!28627 (=> res!52274 e!68306)))

(declare-fun lt!53542 () Bool)

(assert (=> d!28627 (= res!52274 (not lt!53542))))

(declare-fun lt!53541 () Bool)

(assert (=> d!28627 (= lt!53542 lt!53541)))

(declare-fun lt!53543 () Unit!3141)

(declare-fun e!68305 () Unit!3141)

(assert (=> d!28627 (= lt!53543 e!68305)))

(declare-fun c!18231 () Bool)

(assert (=> d!28627 (= c!18231 lt!53541)))

(assert (=> d!28627 (= lt!53541 (containsKey!157 (toList!785 lt!52919) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> d!28627 (= (contains!816 lt!52919 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53542)))

(declare-fun b!104943 () Bool)

(declare-fun lt!53540 () Unit!3141)

(assert (=> b!104943 (= e!68305 lt!53540)))

(assert (=> b!104943 (= lt!53540 (lemmaContainsKeyImpliesGetValueByKeyDefined!106 (toList!785 lt!52919) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (=> b!104943 (isDefined!107 (getValueByKey!153 (toList!785 lt!52919) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104944 () Bool)

(declare-fun Unit!3216 () Unit!3141)

(assert (=> b!104944 (= e!68305 Unit!3216)))

(declare-fun b!104945 () Bool)

(assert (=> b!104945 (= e!68306 (isDefined!107 (getValueByKey!153 (toList!785 lt!52919) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28627 c!18231) b!104943))

(assert (= (and d!28627 (not c!18231)) b!104944))

(assert (= (and d!28627 (not res!52274)) b!104945))

(declare-fun m!116747 () Bool)

(assert (=> d!28627 m!116747))

(declare-fun m!116749 () Bool)

(assert (=> b!104943 m!116749))

(assert (=> b!104943 m!114557))

(assert (=> b!104943 m!114557))

(declare-fun m!116751 () Bool)

(assert (=> b!104943 m!116751))

(assert (=> b!104945 m!114557))

(assert (=> b!104945 m!114557))

(assert (=> b!104945 m!116751))

(assert (=> d!27829 d!28627))

(declare-fun b!104948 () Bool)

(declare-fun e!68308 () Option!159)

(assert (=> b!104948 (= e!68308 (getValueByKey!153 (t!5665 lt!52917) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104946 () Bool)

(declare-fun e!68307 () Option!159)

(assert (=> b!104946 (= e!68307 (Some!158 (_2!1197 (h!2204 lt!52917))))))

(declare-fun d!28629 () Bool)

(declare-fun c!18232 () Bool)

(assert (=> d!28629 (= c!18232 (and ((_ is Cons!1608) lt!52917) (= (_1!1197 (h!2204 lt!52917)) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28629 (= (getValueByKey!153 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) e!68307)))

(declare-fun b!104947 () Bool)

(assert (=> b!104947 (= e!68307 e!68308)))

(declare-fun c!18233 () Bool)

(assert (=> b!104947 (= c!18233 (and ((_ is Cons!1608) lt!52917) (not (= (_1!1197 (h!2204 lt!52917)) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun b!104949 () Bool)

(assert (=> b!104949 (= e!68308 None!157)))

(assert (= (and d!28629 c!18232) b!104946))

(assert (= (and d!28629 (not c!18232)) b!104947))

(assert (= (and b!104947 c!18233) b!104948))

(assert (= (and b!104947 (not c!18233)) b!104949))

(declare-fun m!116753 () Bool)

(assert (=> b!104948 m!116753))

(assert (=> d!27829 d!28629))

(declare-fun d!28631 () Bool)

(assert (=> d!28631 (= (getValueByKey!153 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) (Some!158 (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun lt!53544 () Unit!3141)

(assert (=> d!28631 (= lt!53544 (choose!649 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!68309 () Bool)

(assert (=> d!28631 e!68309))

(declare-fun res!52275 () Bool)

(assert (=> d!28631 (=> (not res!52275) (not e!68309))))

(assert (=> d!28631 (= res!52275 (isStrictlySorted!303 lt!52917))))

(assert (=> d!28631 (= (lemmaContainsTupThenGetReturnValue!72 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53544)))

(declare-fun b!104950 () Bool)

(declare-fun res!52276 () Bool)

(assert (=> b!104950 (=> (not res!52276) (not e!68309))))

(assert (=> b!104950 (= res!52276 (containsKey!157 lt!52917 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104951 () Bool)

(assert (=> b!104951 (= e!68309 (contains!819 lt!52917 (tuple2!2373 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28631 res!52275) b!104950))

(assert (= (and b!104950 res!52276) b!104951))

(assert (=> d!28631 m!114551))

(declare-fun m!116755 () Bool)

(assert (=> d!28631 m!116755))

(declare-fun m!116757 () Bool)

(assert (=> d!28631 m!116757))

(declare-fun m!116759 () Bool)

(assert (=> b!104950 m!116759))

(declare-fun m!116761 () Bool)

(assert (=> b!104951 m!116761))

(assert (=> d!27829 d!28631))

(declare-fun b!104952 () Bool)

(declare-fun e!68311 () List!1612)

(declare-fun call!11027 () List!1612)

(assert (=> b!104952 (= e!68311 call!11027)))

(declare-fun b!104953 () Bool)

(declare-fun e!68312 () List!1612)

(assert (=> b!104953 (= e!68312 (insertStrictlySorted!75 (t!5665 (toList!785 call!10842)) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104954 () Bool)

(declare-fun res!52277 () Bool)

(declare-fun e!68314 () Bool)

(assert (=> b!104954 (=> (not res!52277) (not e!68314))))

(declare-fun lt!53545 () List!1612)

(assert (=> b!104954 (= res!52277 (containsKey!157 lt!53545 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun bm!11022 () Bool)

(declare-fun call!11025 () List!1612)

(assert (=> bm!11022 (= call!11025 call!11027)))

(declare-fun b!104955 () Bool)

(declare-fun e!68310 () List!1612)

(assert (=> b!104955 (= e!68310 call!11025)))

(declare-fun c!18236 () Bool)

(declare-fun c!18234 () Bool)

(declare-fun b!104956 () Bool)

(assert (=> b!104956 (= e!68312 (ite c!18236 (t!5665 (toList!785 call!10842)) (ite c!18234 (Cons!1608 (h!2204 (toList!785 call!10842)) (t!5665 (toList!785 call!10842))) Nil!1609)))))

(declare-fun d!28633 () Bool)

(assert (=> d!28633 e!68314))

(declare-fun res!52278 () Bool)

(assert (=> d!28633 (=> (not res!52278) (not e!68314))))

(assert (=> d!28633 (= res!52278 (isStrictlySorted!303 lt!53545))))

(declare-fun e!68313 () List!1612)

(assert (=> d!28633 (= lt!53545 e!68313)))

(declare-fun c!18237 () Bool)

(assert (=> d!28633 (= c!18237 (and ((_ is Cons!1608) (toList!785 call!10842)) (bvslt (_1!1197 (h!2204 (toList!785 call!10842))) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> d!28633 (isStrictlySorted!303 (toList!785 call!10842))))

(assert (=> d!28633 (= (insertStrictlySorted!75 (toList!785 call!10842) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53545)))

(declare-fun b!104957 () Bool)

(assert (=> b!104957 (= c!18234 (and ((_ is Cons!1608) (toList!785 call!10842)) (bvsgt (_1!1197 (h!2204 (toList!785 call!10842))) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (=> b!104957 (= e!68311 e!68310)))

(declare-fun bm!11023 () Bool)

(declare-fun call!11026 () List!1612)

(assert (=> bm!11023 (= call!11026 ($colon$colon!79 e!68312 (ite c!18237 (h!2204 (toList!785 call!10842)) (tuple2!2373 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))))

(declare-fun c!18235 () Bool)

(assert (=> bm!11023 (= c!18235 c!18237)))

(declare-fun b!104958 () Bool)

(assert (=> b!104958 (= e!68314 (contains!819 lt!53545 (tuple2!2373 (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))) (_2!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(declare-fun b!104959 () Bool)

(assert (=> b!104959 (= e!68313 call!11026)))

(declare-fun bm!11024 () Bool)

(assert (=> bm!11024 (= call!11027 call!11026)))

(declare-fun b!104960 () Bool)

(assert (=> b!104960 (= e!68310 call!11025)))

(declare-fun b!104961 () Bool)

(assert (=> b!104961 (= e!68313 e!68311)))

(assert (=> b!104961 (= c!18236 (and ((_ is Cons!1608) (toList!785 call!10842)) (= (_1!1197 (h!2204 (toList!785 call!10842))) (_1!1197 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992))))))))))

(assert (= (and d!28633 c!18237) b!104959))

(assert (= (and d!28633 (not c!18237)) b!104961))

(assert (= (and b!104961 c!18236) b!104952))

(assert (= (and b!104961 (not c!18236)) b!104957))

(assert (= (and b!104957 c!18234) b!104960))

(assert (= (and b!104957 (not c!18234)) b!104955))

(assert (= (or b!104960 b!104955) bm!11022))

(assert (= (or b!104952 bm!11022) bm!11024))

(assert (= (or b!104959 bm!11024) bm!11023))

(assert (= (and bm!11023 c!18235) b!104953))

(assert (= (and bm!11023 (not c!18235)) b!104956))

(assert (= (and d!28633 res!52278) b!104954))

(assert (= (and b!104954 res!52277) b!104958))

(declare-fun m!116763 () Bool)

(assert (=> b!104958 m!116763))

(declare-fun m!116765 () Bool)

(assert (=> d!28633 m!116765))

(declare-fun m!116767 () Bool)

(assert (=> d!28633 m!116767))

(declare-fun m!116769 () Bool)

(assert (=> b!104954 m!116769))

(declare-fun m!116771 () Bool)

(assert (=> b!104953 m!116771))

(declare-fun m!116773 () Bool)

(assert (=> bm!11023 m!116773))

(assert (=> d!27829 d!28633))

(declare-fun d!28635 () Bool)

(assert (=> d!28635 (= (apply!97 lt!52696 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (getValueByKey!153 (toList!785 lt!52696) (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4308 () Bool)

(assert (= bs!4308 d!28635))

(assert (=> bs!4308 m!113969))

(assert (=> bs!4308 m!115401))

(assert (=> bs!4308 m!115401))

(declare-fun m!116775 () Bool)

(assert (=> bs!4308 m!116775))

(assert (=> b!103473 d!28635))

(declare-fun d!28637 () Bool)

(declare-fun c!18238 () Bool)

(assert (=> d!28637 (= c!18238 ((_ is ValueCellFull!992) (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000)))))

(declare-fun e!68315 () V!3209)

(assert (=> d!28637 (= (get!1325 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68315)))

(declare-fun b!104962 () Bool)

(assert (=> b!104962 (= e!68315 (get!1326 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104963 () Bool)

(assert (=> b!104963 (= e!68315 (get!1327 (select (arr!2045 (ite c!17763 (_values!2543 newMap!16) lt!52532)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28637 c!18238) b!104962))

(assert (= (and d!28637 (not c!18238)) b!104963))

(assert (=> b!104962 m!114153))

(assert (=> b!104962 m!113987))

(declare-fun m!116777 () Bool)

(assert (=> b!104962 m!116777))

(assert (=> b!104963 m!114153))

(assert (=> b!104963 m!113987))

(declare-fun m!116779 () Bool)

(assert (=> b!104963 m!116779))

(assert (=> b!103473 d!28637))

(declare-fun d!28639 () Bool)

(declare-fun res!52279 () Bool)

(declare-fun e!68316 () Bool)

(assert (=> d!28639 (=> res!52279 e!68316)))

(assert (=> d!28639 (= res!52279 (and ((_ is Cons!1608) lt!52764) (= (_1!1197 (h!2204 lt!52764)) (_1!1197 lt!52325))))))

(assert (=> d!28639 (= (containsKey!157 lt!52764 (_1!1197 lt!52325)) e!68316)))

(declare-fun b!104964 () Bool)

(declare-fun e!68317 () Bool)

(assert (=> b!104964 (= e!68316 e!68317)))

(declare-fun res!52280 () Bool)

(assert (=> b!104964 (=> (not res!52280) (not e!68317))))

(assert (=> b!104964 (= res!52280 (and (or (not ((_ is Cons!1608) lt!52764)) (bvsle (_1!1197 (h!2204 lt!52764)) (_1!1197 lt!52325))) ((_ is Cons!1608) lt!52764) (bvslt (_1!1197 (h!2204 lt!52764)) (_1!1197 lt!52325))))))

(declare-fun b!104965 () Bool)

(assert (=> b!104965 (= e!68317 (containsKey!157 (t!5665 lt!52764) (_1!1197 lt!52325)))))

(assert (= (and d!28639 (not res!52279)) b!104964))

(assert (= (and b!104964 res!52280) b!104965))

(declare-fun m!116781 () Bool)

(assert (=> b!104965 m!116781))

(assert (=> b!103620 d!28639))

(assert (=> d!27753 d!27751))

(declare-fun d!28641 () Bool)

(assert (=> d!28641 (= (getValueByKey!153 lt!52462 (_1!1197 lt!52331)) (Some!158 (_2!1197 lt!52331)))))

(assert (=> d!28641 true))

(declare-fun _$22!430 () Unit!3141)

(assert (=> d!28641 (= (choose!649 lt!52462 (_1!1197 lt!52331) (_2!1197 lt!52331)) _$22!430)))

(declare-fun bs!4309 () Bool)

(assert (= bs!4309 d!28641))

(assert (=> bs!4309 m!113793))

(assert (=> d!27753 d!28641))

(declare-fun d!28643 () Bool)

(declare-fun res!52281 () Bool)

(declare-fun e!68318 () Bool)

(assert (=> d!28643 (=> res!52281 e!68318)))

(assert (=> d!28643 (= res!52281 (or ((_ is Nil!1609) lt!52462) ((_ is Nil!1609) (t!5665 lt!52462))))))

(assert (=> d!28643 (= (isStrictlySorted!303 lt!52462) e!68318)))

(declare-fun b!104966 () Bool)

(declare-fun e!68319 () Bool)

(assert (=> b!104966 (= e!68318 e!68319)))

(declare-fun res!52282 () Bool)

(assert (=> b!104966 (=> (not res!52282) (not e!68319))))

(assert (=> b!104966 (= res!52282 (bvslt (_1!1197 (h!2204 lt!52462)) (_1!1197 (h!2204 (t!5665 lt!52462)))))))

(declare-fun b!104967 () Bool)

(assert (=> b!104967 (= e!68319 (isStrictlySorted!303 (t!5665 lt!52462)))))

(assert (= (and d!28643 (not res!52281)) b!104966))

(assert (= (and b!104966 res!52282) b!104967))

(declare-fun m!116783 () Bool)

(assert (=> b!104967 m!116783))

(assert (=> d!27753 d!28643))

(declare-fun bm!11025 () Bool)

(declare-fun call!11028 () Bool)

(declare-fun c!18239 () Bool)

(assert (=> bm!11025 (= call!11028 (arrayNoDuplicates!0 (_keys!4261 (_2!1198 lt!52557)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18239 (Cons!1609 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000) Nil!1610) Nil!1610)))))

(declare-fun b!104968 () Bool)

(declare-fun e!68322 () Bool)

(declare-fun e!68323 () Bool)

(assert (=> b!104968 (= e!68322 e!68323)))

(assert (=> b!104968 (= c!18239 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(declare-fun b!104969 () Bool)

(assert (=> b!104969 (= e!68323 call!11028)))

(declare-fun d!28645 () Bool)

(declare-fun res!52284 () Bool)

(declare-fun e!68321 () Bool)

(assert (=> d!28645 (=> res!52284 e!68321)))

(assert (=> d!28645 (= res!52284 (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 (_2!1198 lt!52557)))))))

(assert (=> d!28645 (= (arrayNoDuplicates!0 (_keys!4261 (_2!1198 lt!52557)) #b00000000000000000000000000000000 Nil!1610) e!68321)))

(declare-fun b!104970 () Bool)

(assert (=> b!104970 (= e!68321 e!68322)))

(declare-fun res!52285 () Bool)

(assert (=> b!104970 (=> (not res!52285) (not e!68322))))

(declare-fun e!68320 () Bool)

(assert (=> b!104970 (= res!52285 (not e!68320))))

(declare-fun res!52283 () Bool)

(assert (=> b!104970 (=> (not res!52283) (not e!68320))))

(assert (=> b!104970 (= res!52283 (validKeyInArray!0 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(declare-fun b!104971 () Bool)

(assert (=> b!104971 (= e!68323 call!11028)))

(declare-fun b!104972 () Bool)

(assert (=> b!104972 (= e!68320 (contains!818 Nil!1610 (select (arr!2044 (_keys!4261 (_2!1198 lt!52557))) #b00000000000000000000000000000000)))))

(assert (= (and d!28645 (not res!52284)) b!104970))

(assert (= (and b!104970 res!52283) b!104972))

(assert (= (and b!104970 res!52285) b!104968))

(assert (= (and b!104968 c!18239) b!104969))

(assert (= (and b!104968 (not c!18239)) b!104971))

(assert (= (or b!104969 b!104971) bm!11025))

(assert (=> bm!11025 m!114853))

(declare-fun m!116785 () Bool)

(assert (=> bm!11025 m!116785))

(assert (=> b!104968 m!114853))

(assert (=> b!104968 m!114853))

(assert (=> b!104968 m!114863))

(assert (=> b!104970 m!114853))

(assert (=> b!104970 m!114853))

(assert (=> b!104970 m!114863))

(assert (=> b!104972 m!114853))

(assert (=> b!104972 m!114853))

(declare-fun m!116787 () Bool)

(assert (=> b!104972 m!116787))

(assert (=> b!103378 d!28645))

(declare-fun d!28647 () Bool)

(declare-fun lt!53546 () Bool)

(assert (=> d!28647 (= lt!53546 (select (content!108 (toList!785 lt!52737)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun e!68324 () Bool)

(assert (=> d!28647 (= lt!53546 e!68324)))

(declare-fun res!52286 () Bool)

(assert (=> d!28647 (=> (not res!52286) (not e!68324))))

(assert (=> d!28647 (= res!52286 ((_ is Cons!1608) (toList!785 lt!52737)))))

(assert (=> d!28647 (= (contains!819 (toList!785 lt!52737) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)) lt!53546)))

(declare-fun b!104973 () Bool)

(declare-fun e!68325 () Bool)

(assert (=> b!104973 (= e!68324 e!68325)))

(declare-fun res!52287 () Bool)

(assert (=> b!104973 (=> res!52287 e!68325)))

(assert (=> b!104973 (= res!52287 (= (h!2204 (toList!785 lt!52737)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(declare-fun b!104974 () Bool)

(assert (=> b!104974 (= e!68325 (contains!819 (t!5665 (toList!785 lt!52737)) (tuple2!2373 (select (arr!2044 (_keys!4261 (v!2867 (underlying!352 thiss!992)))) from!355) lt!52329)))))

(assert (= (and d!28647 res!52286) b!104973))

(assert (= (and b!104973 (not res!52287)) b!104974))

(declare-fun m!116789 () Bool)

(assert (=> d!28647 m!116789))

(declare-fun m!116791 () Bool)

(assert (=> d!28647 m!116791))

(declare-fun m!116793 () Bool)

(assert (=> b!104974 m!116793))

(assert (=> b!103575 d!28647))

(declare-fun lt!53547 () Bool)

(declare-fun d!28649 () Bool)

(assert (=> d!28649 (= lt!53547 (select (content!108 (toList!785 lt!52927)) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun e!68326 () Bool)

(assert (=> d!28649 (= lt!53547 e!68326)))

(declare-fun res!52288 () Bool)

(assert (=> d!28649 (=> (not res!52288) (not e!68326))))

(assert (=> d!28649 (= res!52288 ((_ is Cons!1608) (toList!785 lt!52927)))))

(assert (=> d!28649 (= (contains!819 (toList!785 lt!52927) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))) lt!53547)))

(declare-fun b!104975 () Bool)

(declare-fun e!68327 () Bool)

(assert (=> b!104975 (= e!68326 e!68327)))

(declare-fun res!52289 () Bool)

(assert (=> b!104975 (=> res!52289 e!68327)))

(assert (=> b!104975 (= res!52289 (= (h!2204 (toList!785 lt!52927)) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(declare-fun b!104976 () Bool)

(assert (=> b!104976 (= e!68327 (contains!819 (t!5665 (toList!785 lt!52927)) (ite (or c!17779 c!17780) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992)))) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2867 (underlying!352 thiss!992)))))))))

(assert (= (and d!28649 res!52288) b!104975))

(assert (= (and b!104975 (not res!52289)) b!104976))

(declare-fun m!116795 () Bool)

(assert (=> d!28649 m!116795))

(declare-fun m!116797 () Bool)

(assert (=> d!28649 m!116797))

(declare-fun m!116799 () Bool)

(assert (=> b!104976 m!116799))

(assert (=> b!103789 d!28649))

(declare-fun d!28651 () Bool)

(declare-fun res!52290 () Bool)

(declare-fun e!68328 () Bool)

(assert (=> d!28651 (=> res!52290 e!68328)))

(assert (=> d!28651 (= res!52290 (and ((_ is Cons!1608) (toList!785 lt!52612)) (= (_1!1197 (h!2204 (toList!785 lt!52612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28651 (= (containsKey!157 (toList!785 lt!52612) #b1000000000000000000000000000000000000000000000000000000000000000) e!68328)))

(declare-fun b!104977 () Bool)

(declare-fun e!68329 () Bool)

(assert (=> b!104977 (= e!68328 e!68329)))

(declare-fun res!52291 () Bool)

(assert (=> b!104977 (=> (not res!52291) (not e!68329))))

(assert (=> b!104977 (= res!52291 (and (or (not ((_ is Cons!1608) (toList!785 lt!52612))) (bvsle (_1!1197 (h!2204 (toList!785 lt!52612))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1608) (toList!785 lt!52612)) (bvslt (_1!1197 (h!2204 (toList!785 lt!52612))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104978 () Bool)

(assert (=> b!104978 (= e!68329 (containsKey!157 (t!5665 (toList!785 lt!52612)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28651 (not res!52290)) b!104977))

(assert (= (and b!104977 res!52291) b!104978))

(declare-fun m!116801 () Bool)

(assert (=> b!104978 m!116801))

(assert (=> d!27747 d!28651))

(assert (=> b!103424 d!28117))

(assert (=> b!103424 d!27693))

(declare-fun b!104979 () Bool)

(declare-fun e!68342 () Bool)

(assert (=> b!104979 (= e!68342 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104980 () Bool)

(declare-fun c!18243 () Bool)

(assert (=> b!104980 (= c!18243 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!68339 () ListLongMap!1539)

(declare-fun e!68340 () ListLongMap!1539)

(assert (=> b!104980 (= e!68339 e!68340)))

(declare-fun b!104981 () Bool)

(declare-fun e!68335 () Bool)

(declare-fun call!11029 () Bool)

(assert (=> b!104981 (= e!68335 (not call!11029))))

(declare-fun call!11032 () ListLongMap!1539)

(declare-fun bm!11026 () Bool)

(assert (=> bm!11026 (= call!11032 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun e!68334 () Bool)

(declare-fun lt!53558 () ListLongMap!1539)

(declare-fun b!104982 () Bool)

(assert (=> b!104982 (= e!68334 (= (apply!97 lt!53558 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)) (get!1325 (select (arr!2045 (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104982 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2300 (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))))))))

(assert (=> b!104982 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun b!104983 () Bool)

(declare-fun e!68341 () ListLongMap!1539)

(assert (=> b!104983 (= e!68341 e!68339)))

(declare-fun c!18241 () Bool)

(assert (=> b!104983 (= c!18241 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104984 () Bool)

(declare-fun e!68336 () Unit!3141)

(declare-fun lt!53562 () Unit!3141)

(assert (=> b!104984 (= e!68336 lt!53562)))

(declare-fun lt!53549 () ListLongMap!1539)

(assert (=> b!104984 (= lt!53549 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53551 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53551 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53567 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53567 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53569 () Unit!3141)

(assert (=> b!104984 (= lt!53569 (addStillContains!73 lt!53549 lt!53551 (zeroValue!2437 newMap!16) lt!53567))))

(assert (=> b!104984 (contains!816 (+!134 lt!53549 (tuple2!2373 lt!53551 (zeroValue!2437 newMap!16))) lt!53567)))

(declare-fun lt!53565 () Unit!3141)

(assert (=> b!104984 (= lt!53565 lt!53569)))

(declare-fun lt!53560 () ListLongMap!1539)

(assert (=> b!104984 (= lt!53560 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53568 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53568 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53550 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53550 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53555 () Unit!3141)

(assert (=> b!104984 (= lt!53555 (addApplyDifferent!73 lt!53560 lt!53568 (minValue!2437 newMap!16) lt!53550))))

(assert (=> b!104984 (= (apply!97 (+!134 lt!53560 (tuple2!2373 lt!53568 (minValue!2437 newMap!16))) lt!53550) (apply!97 lt!53560 lt!53550))))

(declare-fun lt!53548 () Unit!3141)

(assert (=> b!104984 (= lt!53548 lt!53555)))

(declare-fun lt!53566 () ListLongMap!1539)

(assert (=> b!104984 (= lt!53566 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53561 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53561 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53563 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53563 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53552 () Unit!3141)

(assert (=> b!104984 (= lt!53552 (addApplyDifferent!73 lt!53566 lt!53561 (zeroValue!2437 newMap!16) lt!53563))))

(assert (=> b!104984 (= (apply!97 (+!134 lt!53566 (tuple2!2373 lt!53561 (zeroValue!2437 newMap!16))) lt!53563) (apply!97 lt!53566 lt!53563))))

(declare-fun lt!53557 () Unit!3141)

(assert (=> b!104984 (= lt!53557 lt!53552)))

(declare-fun lt!53559 () ListLongMap!1539)

(assert (=> b!104984 (= lt!53559 (getCurrentListMapNoExtraKeys!99 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53564 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53564 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53554 () (_ BitVec 64))

(assert (=> b!104984 (= lt!53554 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104984 (= lt!53562 (addApplyDifferent!73 lt!53559 lt!53564 (minValue!2437 newMap!16) lt!53554))))

(assert (=> b!104984 (= (apply!97 (+!134 lt!53559 (tuple2!2373 lt!53564 (minValue!2437 newMap!16))) lt!53554) (apply!97 lt!53559 lt!53554))))

(declare-fun b!104985 () Bool)

(declare-fun e!68330 () Bool)

(declare-fun e!68333 () Bool)

(assert (=> b!104985 (= e!68330 e!68333)))

(declare-fun res!52294 () Bool)

(declare-fun call!11031 () Bool)

(assert (=> b!104985 (= res!52294 call!11031)))

(assert (=> b!104985 (=> (not res!52294) (not e!68333))))

(declare-fun b!104986 () Bool)

(declare-fun e!68338 () Bool)

(assert (=> b!104986 (= e!68338 (validKeyInArray!0 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104987 () Bool)

(declare-fun e!68337 () Bool)

(assert (=> b!104987 (= e!68337 (= (apply!97 lt!53558 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun call!11034 () ListLongMap!1539)

(declare-fun call!11035 () ListLongMap!1539)

(declare-fun bm!11027 () Bool)

(declare-fun call!11030 () ListLongMap!1539)

(declare-fun c!18240 () Bool)

(assert (=> bm!11027 (= call!11035 (+!134 (ite c!18240 call!11032 (ite c!18241 call!11030 call!11034)) (ite (or c!18240 c!18241) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun bm!11028 () Bool)

(assert (=> bm!11028 (= call!11030 call!11032)))

(declare-fun b!104988 () Bool)

(declare-fun res!52295 () Bool)

(declare-fun e!68332 () Bool)

(assert (=> b!104988 (=> (not res!52295) (not e!68332))))

(declare-fun e!68331 () Bool)

(assert (=> b!104988 (= res!52295 e!68331)))

(declare-fun res!52297 () Bool)

(assert (=> b!104988 (=> res!52297 e!68331)))

(assert (=> b!104988 (= res!52297 (not e!68342))))

(declare-fun res!52292 () Bool)

(assert (=> b!104988 (=> (not res!52292) (not e!68342))))

(assert (=> b!104988 (= res!52292 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!11029 () Bool)

(assert (=> bm!11029 (= call!11031 (contains!816 lt!53558 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11030 () Bool)

(assert (=> bm!11030 (= call!11034 call!11030)))

(declare-fun b!104989 () Bool)

(assert (=> b!104989 (= e!68333 (= (apply!97 lt!53558 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun d!28653 () Bool)

(assert (=> d!28653 e!68332))

(declare-fun res!52298 () Bool)

(assert (=> d!28653 (=> (not res!52298) (not e!68332))))

(assert (=> d!28653 (= res!52298 (or (bvsge #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))))

(declare-fun lt!53553 () ListLongMap!1539)

(assert (=> d!28653 (= lt!53558 lt!53553)))

(declare-fun lt!53556 () Unit!3141)

(assert (=> d!28653 (= lt!53556 e!68336)))

(declare-fun c!18244 () Bool)

(assert (=> d!28653 (= c!18244 e!68338)))

(declare-fun res!52300 () Bool)

(assert (=> d!28653 (=> (not res!52300) (not e!68338))))

(assert (=> d!28653 (= res!52300 (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(assert (=> d!28653 (= lt!53553 e!68341)))

(assert (=> d!28653 (= c!18240 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28653 (validMask!0 (mask!6695 newMap!16))))

(assert (=> d!28653 (= (getCurrentListMap!462 (_keys!4261 newMap!16) (array!4314 (store (arr!2045 (_values!2543 newMap!16)) (index!3192 lt!52554) (ValueCellFull!992 lt!52329)) (size!2300 (_values!2543 newMap!16))) (mask!6695 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53558)))

(declare-fun b!104990 () Bool)

(assert (=> b!104990 (= e!68341 (+!134 call!11035 (tuple2!2373 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun b!104991 () Bool)

(declare-fun res!52296 () Bool)

(assert (=> b!104991 (=> (not res!52296) (not e!68332))))

(assert (=> b!104991 (= res!52296 e!68335)))

(declare-fun c!18242 () Bool)

(assert (=> b!104991 (= c!18242 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!104992 () Bool)

(assert (=> b!104992 (= e!68335 e!68337)))

(declare-fun res!52293 () Bool)

(assert (=> b!104992 (= res!52293 call!11029)))

(assert (=> b!104992 (=> (not res!52293) (not e!68337))))

(declare-fun b!104993 () Bool)

(declare-fun call!11033 () ListLongMap!1539)

(assert (=> b!104993 (= e!68339 call!11033)))

(declare-fun bm!11031 () Bool)

(assert (=> bm!11031 (= call!11033 call!11035)))

(declare-fun b!104994 () Bool)

(declare-fun Unit!3217 () Unit!3141)

(assert (=> b!104994 (= e!68336 Unit!3217)))

(declare-fun b!104995 () Bool)

(assert (=> b!104995 (= e!68332 e!68330)))

(declare-fun c!18245 () Bool)

(assert (=> b!104995 (= c!18245 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104996 () Bool)

(assert (=> b!104996 (= e!68340 call!11033)))

(declare-fun b!104997 () Bool)

(assert (=> b!104997 (= e!68330 (not call!11031))))

(declare-fun b!104998 () Bool)

(assert (=> b!104998 (= e!68340 call!11034)))

(declare-fun b!104999 () Bool)

(assert (=> b!104999 (= e!68331 e!68334)))

(declare-fun res!52299 () Bool)

(assert (=> b!104999 (=> (not res!52299) (not e!68334))))

(assert (=> b!104999 (= res!52299 (contains!816 lt!53558 (select (arr!2044 (_keys!4261 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104999 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2299 (_keys!4261 newMap!16))))))

(declare-fun bm!11032 () Bool)

(assert (=> bm!11032 (= call!11029 (contains!816 lt!53558 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28653 c!18240) b!104990))

(assert (= (and d!28653 (not c!18240)) b!104983))

(assert (= (and b!104983 c!18241) b!104993))

(assert (= (and b!104983 (not c!18241)) b!104980))

(assert (= (and b!104980 c!18243) b!104996))

(assert (= (and b!104980 (not c!18243)) b!104998))

(assert (= (or b!104996 b!104998) bm!11030))

(assert (= (or b!104993 bm!11030) bm!11028))

(assert (= (or b!104993 b!104996) bm!11031))

(assert (= (or b!104990 bm!11028) bm!11026))

(assert (= (or b!104990 bm!11031) bm!11027))

(assert (= (and d!28653 res!52300) b!104986))

(assert (= (and d!28653 c!18244) b!104984))

(assert (= (and d!28653 (not c!18244)) b!104994))

(assert (= (and d!28653 res!52298) b!104988))

(assert (= (and b!104988 res!52292) b!104979))

(assert (= (and b!104988 (not res!52297)) b!104999))

(assert (= (and b!104999 res!52299) b!104982))

(assert (= (and b!104988 res!52295) b!104991))

(assert (= (and b!104991 c!18242) b!104992))

(assert (= (and b!104991 (not c!18242)) b!104981))

(assert (= (and b!104992 res!52293) b!104987))

(assert (= (or b!104992 b!104981) bm!11032))

(assert (= (and b!104991 res!52296) b!104995))

(assert (= (and b!104995 c!18245) b!104985))

(assert (= (and b!104995 (not c!18245)) b!104997))

(assert (= (and b!104985 res!52294) b!104989))

(assert (= (or b!104985 b!104997) bm!11029))

(declare-fun b_lambda!4661 () Bool)

(assert (=> (not b_lambda!4661) (not b!104982)))

(assert (=> b!104982 t!5677))

(declare-fun b_and!6465 () Bool)

(assert (= b_and!6461 (and (=> t!5677 result!3431) b_and!6465)))

(assert (=> b!104982 t!5679))

(declare-fun b_and!6467 () Bool)

(assert (= b_and!6463 (and (=> t!5679 result!3433) b_and!6467)))

(declare-fun m!116803 () Bool)

(assert (=> bm!11032 m!116803))

(declare-fun m!116805 () Bool)

(assert (=> b!104984 m!116805))

(declare-fun m!116807 () Bool)

(assert (=> b!104984 m!116807))

(declare-fun m!116809 () Bool)

(assert (=> b!104984 m!116809))

(declare-fun m!116811 () Bool)

(assert (=> b!104984 m!116811))

(declare-fun m!116813 () Bool)

(assert (=> b!104984 m!116813))

(declare-fun m!116815 () Bool)

(assert (=> b!104984 m!116815))

(assert (=> b!104984 m!116805))

(declare-fun m!116817 () Bool)

(assert (=> b!104984 m!116817))

(declare-fun m!116819 () Bool)

(assert (=> b!104984 m!116819))

(declare-fun m!116821 () Bool)

(assert (=> b!104984 m!116821))

(declare-fun m!116823 () Bool)

(assert (=> b!104984 m!116823))

(assert (=> b!104984 m!113969))

(assert (=> b!104984 m!116815))

(declare-fun m!116825 () Bool)

(assert (=> b!104984 m!116825))

(declare-fun m!116827 () Bool)

(assert (=> b!104984 m!116827))

(assert (=> b!104984 m!116813))

(declare-fun m!116829 () Bool)

(assert (=> b!104984 m!116829))

(assert (=> b!104984 m!116809))

(declare-fun m!116831 () Bool)

(assert (=> b!104984 m!116831))

(declare-fun m!116833 () Bool)

(assert (=> b!104984 m!116833))

(declare-fun m!116835 () Bool)

(assert (=> b!104984 m!116835))

(declare-fun m!116837 () Bool)

(assert (=> bm!11027 m!116837))

(assert (=> d!28653 m!113985))

(assert (=> b!104982 m!113987))

(assert (=> b!104982 m!113969))

(declare-fun m!116839 () Bool)

(assert (=> b!104982 m!116839))

(declare-fun m!116841 () Bool)

(assert (=> b!104982 m!116841))

(assert (=> b!104982 m!113987))

(declare-fun m!116843 () Bool)

(assert (=> b!104982 m!116843))

(assert (=> b!104982 m!113969))

(assert (=> b!104982 m!116841))

(assert (=> b!104999 m!113969))

(assert (=> b!104999 m!113969))

(declare-fun m!116845 () Bool)

(assert (=> b!104999 m!116845))

(assert (=> b!104986 m!113969))

(assert (=> b!104986 m!113969))

(assert (=> b!104986 m!113997))

(declare-fun m!116847 () Bool)

(assert (=> b!104989 m!116847))

(assert (=> b!104979 m!113969))

(assert (=> b!104979 m!113969))

(assert (=> b!104979 m!113997))

(declare-fun m!116849 () Bool)

(assert (=> bm!11029 m!116849))

(declare-fun m!116851 () Bool)

(assert (=> b!104987 m!116851))

(assert (=> bm!11026 m!116823))

(declare-fun m!116853 () Bool)

(assert (=> b!104990 m!116853))

(assert (=> b!103424 d!28653))

(declare-fun d!28655 () Bool)

(declare-fun lt!53570 () Bool)

(assert (=> d!28655 (= lt!53570 (select (content!108 (toList!785 lt!52745)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun e!68343 () Bool)

(assert (=> d!28655 (= lt!53570 e!68343)))

(declare-fun res!52301 () Bool)

(assert (=> d!28655 (=> (not res!52301) (not e!68343))))

(assert (=> d!28655 (= res!52301 ((_ is Cons!1608) (toList!785 lt!52745)))))

(assert (=> d!28655 (= (contains!819 (toList!785 lt!52745) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))) lt!53570)))

(declare-fun b!105000 () Bool)

(declare-fun e!68344 () Bool)

(assert (=> b!105000 (= e!68343 e!68344)))

(declare-fun res!52302 () Bool)

(assert (=> b!105000 (=> res!52302 e!68344)))

(assert (=> b!105000 (= res!52302 (= (h!2204 (toList!785 lt!52745)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(declare-fun b!105001 () Bool)

(assert (=> b!105001 (= e!68344 (contains!819 (t!5665 (toList!785 lt!52745)) (tuple2!2373 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2867 (underlying!352 thiss!992))))))))

(assert (= (and d!28655 res!52301) b!105000))

(assert (= (and b!105000 (not res!52302)) b!105001))

(declare-fun m!116855 () Bool)

(assert (=> d!28655 m!116855))

(declare-fun m!116857 () Bool)

(assert (=> d!28655 m!116857))

(declare-fun m!116859 () Bool)

(assert (=> b!105001 m!116859))

(assert (=> b!103579 d!28655))

(declare-fun d!28657 () Bool)

(declare-fun lt!53571 () Bool)

(assert (=> d!28657 (= lt!53571 (select (content!108 (t!5665 (toList!785 lt!52453))) lt!52325))))

(declare-fun e!68345 () Bool)

(assert (=> d!28657 (= lt!53571 e!68345)))

(declare-fun res!52303 () Bool)

(assert (=> d!28657 (=> (not res!52303) (not e!68345))))

(assert (=> d!28657 (= res!52303 ((_ is Cons!1608) (t!5665 (toList!785 lt!52453))))))

(assert (=> d!28657 (= (contains!819 (t!5665 (toList!785 lt!52453)) lt!52325) lt!53571)))

(declare-fun b!105002 () Bool)

(declare-fun e!68346 () Bool)

(assert (=> b!105002 (= e!68345 e!68346)))

(declare-fun res!52304 () Bool)

(assert (=> b!105002 (=> res!52304 e!68346)))

(assert (=> b!105002 (= res!52304 (= (h!2204 (t!5665 (toList!785 lt!52453))) lt!52325))))

(declare-fun b!105003 () Bool)

(assert (=> b!105003 (= e!68346 (contains!819 (t!5665 (t!5665 (toList!785 lt!52453))) lt!52325))))

(assert (= (and d!28657 res!52303) b!105002))

(assert (= (and b!105002 (not res!52304)) b!105003))

(assert (=> d!28657 m!116011))

(declare-fun m!116861 () Bool)

(assert (=> d!28657 m!116861))

(declare-fun m!116863 () Bool)

(assert (=> b!105003 m!116863))

(assert (=> b!103783 d!28657))

(declare-fun condMapEmpty!3917 () Bool)

(declare-fun mapDefault!3917 () ValueCell!992)

(assert (=> mapNonEmpty!3915 (= condMapEmpty!3917 (= mapRest!3915 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3917)))))

(declare-fun e!68348 () Bool)

(declare-fun mapRes!3917 () Bool)

(assert (=> mapNonEmpty!3915 (= tp!9873 (and e!68348 mapRes!3917))))

(declare-fun b!105005 () Bool)

(assert (=> b!105005 (= e!68348 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3917 () Bool)

(declare-fun tp!9875 () Bool)

(declare-fun e!68347 () Bool)

(assert (=> mapNonEmpty!3917 (= mapRes!3917 (and tp!9875 e!68347))))

(declare-fun mapKey!3917 () (_ BitVec 32))

(declare-fun mapValue!3917 () ValueCell!992)

(declare-fun mapRest!3917 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3917 (= mapRest!3915 (store mapRest!3917 mapKey!3917 mapValue!3917))))

(declare-fun b!105004 () Bool)

(assert (=> b!105004 (= e!68347 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3917 () Bool)

(assert (=> mapIsEmpty!3917 mapRes!3917))

(assert (= (and mapNonEmpty!3915 condMapEmpty!3917) mapIsEmpty!3917))

(assert (= (and mapNonEmpty!3915 (not condMapEmpty!3917)) mapNonEmpty!3917))

(assert (= (and mapNonEmpty!3917 ((_ is ValueCellFull!992) mapValue!3917)) b!105004))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!992) mapDefault!3917)) b!105005))

(declare-fun m!116865 () Bool)

(assert (=> mapNonEmpty!3917 m!116865))

(declare-fun condMapEmpty!3918 () Bool)

(declare-fun mapDefault!3918 () ValueCell!992)

(assert (=> mapNonEmpty!3916 (= condMapEmpty!3918 (= mapRest!3916 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3918)))))

(declare-fun e!68350 () Bool)

(declare-fun mapRes!3918 () Bool)

(assert (=> mapNonEmpty!3916 (= tp!9874 (and e!68350 mapRes!3918))))

(declare-fun b!105007 () Bool)

(assert (=> b!105007 (= e!68350 tp_is_empty!2671)))

(declare-fun mapNonEmpty!3918 () Bool)

(declare-fun tp!9876 () Bool)

(declare-fun e!68349 () Bool)

(assert (=> mapNonEmpty!3918 (= mapRes!3918 (and tp!9876 e!68349))))

(declare-fun mapValue!3918 () ValueCell!992)

(declare-fun mapKey!3918 () (_ BitVec 32))

(declare-fun mapRest!3918 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3918 (= mapRest!3916 (store mapRest!3918 mapKey!3918 mapValue!3918))))

(declare-fun b!105006 () Bool)

(assert (=> b!105006 (= e!68349 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3918 () Bool)

(assert (=> mapIsEmpty!3918 mapRes!3918))

(assert (= (and mapNonEmpty!3916 condMapEmpty!3918) mapIsEmpty!3918))

(assert (= (and mapNonEmpty!3916 (not condMapEmpty!3918)) mapNonEmpty!3918))

(assert (= (and mapNonEmpty!3918 ((_ is ValueCellFull!992) mapValue!3918)) b!105006))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!992) mapDefault!3918)) b!105007))

(declare-fun m!116867 () Bool)

(assert (=> mapNonEmpty!3918 m!116867))

(declare-fun b_lambda!4663 () Bool)

(assert (= b_lambda!4639 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4663)))

(declare-fun b_lambda!4665 () Bool)

(assert (= b_lambda!4641 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4665)))

(declare-fun b_lambda!4667 () Bool)

(assert (= b_lambda!4647 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4667)))

(declare-fun b_lambda!4669 () Bool)

(assert (= b_lambda!4649 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4669)))

(declare-fun b_lambda!4671 () Bool)

(assert (= b_lambda!4643 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4671)))

(declare-fun b_lambda!4673 () Bool)

(assert (= b_lambda!4645 (or (and b!102942 b_free!2509) (and b!102934 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))))) b_lambda!4673)))

(declare-fun b_lambda!4675 () Bool)

(assert (= b_lambda!4651 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4675)))

(declare-fun b_lambda!4677 () Bool)

(assert (= b_lambda!4637 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4677)))

(declare-fun b_lambda!4679 () Bool)

(assert (= b_lambda!4659 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4679)))

(declare-fun b_lambda!4681 () Bool)

(assert (= b_lambda!4633 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4681)))

(declare-fun b_lambda!4683 () Bool)

(assert (= b_lambda!4661 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4683)))

(declare-fun b_lambda!4685 () Bool)

(assert (= b_lambda!4635 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4685)))

(declare-fun b_lambda!4687 () Bool)

(assert (= b_lambda!4657 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4687)))

(declare-fun b_lambda!4689 () Bool)

(assert (= b_lambda!4653 (or (and b!102942 b_free!2509 (= (defaultEntry!2560 (v!2867 (underlying!352 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!102934 b_free!2511) b_lambda!4689)))

(check-sat (not b!104528) (not b!104832) (not b!104023) (not b!104560) (not b!104725) (not d!28401) (not bm!11011) (not d!28165) (not d!27967) (not b!103889) (not d!28423) (not b!104576) (not b!104718) (not d!28341) (not b!104741) (not b!104191) (not d!28023) (not b!104079) (not d!27961) (not b!104315) (not d!28283) (not b!104908) (not d!28377) (not b!104319) (not b!104430) (not d!28059) (not b!104886) (not b!104359) (not b!104600) (not b_next!2509) (not b!104787) (not b!104234) (not b!104325) (not d!28489) (not b!104898) (not d!27993) (not d!28113) (not bm!10966) (not b!104123) (not d!28279) (not b!104112) (not d!28137) (not b!104214) (not d!28403) (not b!104592) (not b!104820) (not b!104483) (not d!28581) (not b!104179) (not d!28281) (not d!28025) (not d!28233) (not b!104763) (not bm!10934) (not b!104125) (not d!28389) (not d!28407) (not b_lambda!4625) (not d!28125) (not d!28135) (not d!27989) (not b!104276) (not b!104422) (not d!28649) (not b!104531) (not b!104073) (not b!104434) (not d!28635) (not b!104334) (not b!104606) (not bm!11023) (not b!104104) b_and!6467 (not b!104236) (not d!28163) (not b!104239) (not bm!10954) (not b!104722) (not b!104753) (not b!104255) (not b!104360) (not b!104322) (not b!103948) (not b!104616) (not b!104542) (not d!28319) (not b!104729) (not d!28225) (not d!28477) (not bm!10971) (not b!103957) (not b!103987) (not d!28399) (not b!104467) (not b!103946) (not b!104402) (not b!104030) (not b!104432) (not b!104921) (not d!28595) (not b!104979) (not d!28051) (not b!104772) (not b!104986) (not b!104853) (not b!104361) (not b!103996) (not b_lambda!4663) (not b!103879) (not b!104632) (not b!104138) (not b!104159) (not b!104740) (not bm!10989) (not b!104435) (not d!28615) (not b!103930) (not b!104522) (not b_lambda!4687) (not d!28215) (not b!104817) (not d!28269) (not b!104101) (not d!28363) (not b!104166) (not d!28155) (not b!104612) (not d!28475) (not bm!10931) (not b!104674) (not b!104645) (not b!104549) (not d!28535) (not b!103885) (not bm!10930) (not b_lambda!4685) (not b!104336) (not b!104788) (not b!104443) (not d!28115) (not d!28609) (not b!104582) (not d!28007) (not b!103931) (not b!103871) (not b!104416) (not d!28487) (not bm!10922) (not b!104254) (not d!28499) (not b!104502) (not b!104007) (not b!104268) (not d!28117) (not d!28543) (not bm!10987) (not d!27975) (not d!28421) (not b!104583) (not b!104860) (not b!103851) (not d!28531) (not b!104889) (not d!28631) (not b!104170) (not d!28267) (not d!28391) (not b!103964) (not b!104296) (not b!104508) (not b!104693) (not b!104692) (not b!104945) (not b!104015) (not d!28439) (not b!104755) (not b!105001) (not b!104185) (not b!104962) (not d!28109) (not bm!11014) (not b!104823) (not d!28381) (not bm!10942) (not d!28655) (not b!104767) (not b!104557) (not b!104480) (not b!104974) (not b!104210) (not d!28237) (not b!104490) (not b!104253) (not b!104274) (not b!104873) (not d!28201) (not b!104791) (not d!27917) (not b!103852) (not b!104019) (not b_lambda!4627) (not b!104428) (not d!28265) (not b!104841) (not d!28099) (not b!104865) (not b!104644) (not b_lambda!4689) (not b!104656) (not b!104128) (not b!104845) (not b!104713) (not b!104690) (not d!28289) (not b!104260) (not b!104420) (not b!104538) (not b!103905) (not b!104608) (not d!28075) (not bm!10927) (not bm!10959) (not b!104338) (not b!104759) (not b!104619) (not d!28311) (not b!104110) (not b!104454) (not d!28471) (not b!104028) (not d!28013) (not b!104737) (not b!104133) (not d!28603) (not d!28329) (not b!104442) (not b!103887) (not b!104122) (not b!104687) (not d!28523) (not b!104800) (not d!28431) (not b!104951) (not b!104775) (not d!28303) (not b!104580) (not b!104827) (not d!28033) (not b!104208) (not b!104734) (not d!28419) (not b!104440) (not b!104732) (not d!28457) (not d!28327) (not b!104113) (not b!104834) (not b!104068) (not b_lambda!4683) (not b!104358) (not d!28501) (not b!104943) (not b!104507) (not b!103922) (not b!104894) (not b!104067) (not d!28305) (not bm!11006) (not b!104153) (not b!103936) (not b!104500) (not d!28413) (not d!27953) (not bm!10967) (not b_next!2511) (not d!27929) (not b!104547) (not d!28175) (not bm!10921) (not bm!11020) (not d!28325) (not b!104086) (not b!104446) (not bm!10907) (not b!104804) (not b!104749) (not b!104027) (not b!104349) (not b!104976) (not b!104494) (not bm!10913) (not b!103962) (not d!28623) (not b!104213) (not b!104343) (not b!104789) (not d!28469) (not d!27897) (not bm!10932) (not b!104967) (not b!104505) (not d!28139) (not bm!10937) (not bm!10990) (not b!104309) (not d!28647) (not d!27969) (not b!103979) (not b!104131) (not b!104848) (not b!104182) (not b!104188) (not d!28273) (not b!104329) (not b!104913) (not bm!11001) (not b!104272) (not b!103975) (not d!28347) (not d!28561) (not b!104472) (not d!28335) (not b!104761) (not d!28217) (not b!104011) (not bm!10976) (not b!103869) (not b!103921) (not b!104637) (not d!28653) (not d!28417) (not b!104107) (not b!104450) (not d!28387) (not b!104697) (not b!104445) (not d!27907) (not d!28627) (not d!28235) (not b!104151) (not b!104156) (not bm!11032) (not d!28427) (not b!104201) (not mapNonEmpty!3918) (not b!104485) (not d!28069) (not b!104486) (not b!104978) (not b!103972) (not b!104561) (not b!104764) (not b!104625) (not d!27933) (not b!104077) (not b!104972) (not b!103942) (not b_lambda!4669) (not b!104642) (not b!104269) (not d!27925) (not d!28621) (not b!104337) (not b!104668) (not d!28479) (not b!104643) (not bm!10947) (not b!104464) (not b!104723) (not b!104970) (not d!28465) (not b!104081) (not b!103926) (not b!104241) (not d!28353) (not b!104510) (not d!28171) (not b!104948) (not d!28483) (not b!104968) (not b!104784) (not b!104238) (not b!104769) (not b!104857) (not b!104530) (not b!103994) (not d!28383) (not b_lambda!4655) (not d!28395) (not b!104617) (not b!104001) (not b!104689) (not b!104335) (not b!104231) (not b!104923) (not b!104026) (not bm!10985) (not d!28315) (not d!27895) (not b!104627) (not d!28159) (not b!104144) (not b!103959) (not b!104258) (not d!28087) (not b!104870) (not b_lambda!4607) (not b!103949) (not b!103874) (not b!104999) (not d!28601) (not b!104760) (not d!28229) (not bm!11008) (not d!28085) (not b!103899) (not b!104931) (not d!28253) (not bm!10920) (not b!104796) (not b!104903) (not bm!11027) (not b!104987) (not b!104408) (not b!104211) (not d!28103) (not mapNonEmpty!3917) (not b!104610) (not d!28323) (not b!104544) (not d!28049) (not b!103969) (not b!104799) (not bm!10953) (not bm!10946) (not d!28187) (not d!28607) (not d!28547) (not d!28371) (not bm!10929) (not b!103985) (not b!104083) (not d!27957) (not bm!10938) (not b!104284) (not d!28275) (not b!104585) (not b!104196) (not b!104265) (not bm!11026) (not d!28107) (not b!104652) (not b!104054) (not d!28041) (not b!104572) (not b!104148) (not b!104965) (not d!28369) (not bm!10952) (not b!104839) (not b!104226) (not b!104862) (not b!103910) (not b!103902) (not bm!10915) (not d!28435) (not b!104251) (not b!104682) (not d!28519) (not b!104061) (not b!103974) (not b!104716) (not b!103872) (not b!104940) (not bm!10973) (not b!104890) (not b!104363) (not bm!11000) (not b!104553) (not d!28367) (not b!104958) (not d!28177) (not b!104437) (not b!104666) (not b!104476) (not b!104876) (not b!104990) (not d!28459) (not bm!10948) (not bm!11017) (not b!104814) (not d!28149) (not b!104812) (not b!104942) (not d!28141) (not d!28077) (not d!28295) (not d!28599) (not d!28473) (not b!104504) (not d!28207) (not b!104412) (not d!28411) (not b!104293) (not d!28035) (not b!104731) (not d!28409) (not b!103940) (not b!104032) (not d!28509) (not d!28157) (not b!104676) (not b!104750) (not d!28169) (not b!104282) (not b!104730) (not d!28093) (not b!104705) (not b_lambda!4681) (not b!104021) (not d!28467) (not b!104097) (not d!28491) (not b!104595) (not d!27991) (not d!28405) (not b!104341) (not b!104655) (not d!28455) (not bm!10996) (not d!28513) (not bm!10939) (not b!104117) (not d!28189) (not b!103906) (not b_lambda!4673) (not b!104070) (not b!104489) (not b!104895) (not b!104596) (not b!104018) (not b!104003) (not b!104679) (not b!104513) (not b!103998) (not b!104090) (not bm!10950) (not b!104134) (not b!104301) (not b!104843) (not b!104928) (not d!28151) (not b!104492) (not bm!10992) (not d!28185) (not b!105003) (not b!104423) (not b!104906) (not b!104605) (not b_lambda!4671) b_and!6465 (not d!28441) (not b!103919) (not b!104905) (not d!28293) (not d!28263) (not d!28557) (not b!104366) (not b_lambda!4667) (not d!28447) (not b!103944) (not b!104521) (not b!104880) (not b!104279) (not b!104305) (not d!28397) (not b!104223) (not b!103915) (not b!104650) (not b!104897) (not bm!10945) (not d!28095) (not b!104849) (not b!104555) (not b!104675) (not b!104680) (not b_lambda!4623) (not d!28079) (not b!104726) (not d!28249) (not b_lambda!4677) (not b!104872) (not bm!10978) (not b!104154) (not b!104665) (not d!28285) (not d!28061) (not b_lambda!4665) (not b!104702) (not b!104909) (not b!104954) (not b!104875) (not d!27927) (not b!104396) (not b!104393) (not b!104989) (not b!104691) (not bm!10911) (not b!104299) (not b!104707) (not b!104842) (not b!104095) (not d!28565) (not d!28101) (not b!103875) (not b!104431) (not d!28433) (not b!104277) (not d!28507) (not b!104346) (not b!104900) (not b_lambda!4679) (not d!28179) (not d!27997) (not d!28525) (not bm!10998) (not b!104709) (not b_lambda!4611) (not b!104953) (not b!104399) (not b_lambda!4675) (not b!104405) (not b!104757) (not d!28633) (not b!104892) (not b!104498) (not bm!10975) (not b!104332) (not b!104304) (not d!28559) (not d!28001) (not b!104230) (not b!104324) (not bm!10918) (not d!28291) (not b!104550) (not d!27985) (not d!28047) (not b!104640) (not d!28339) (not d!28533) (not d!28485) (not b!104203) (not d!28521) (not d!28587) (not d!28181) (not b!104006) (not bm!11003) (not d!28597) (not b!104004) (not d!28591) (not b!104932) (not b!104570) (not b!104838) (not bm!10964) (not b!104683) (not b!104186) (not b!104075) (not d!28517) (not d!28345) (not d!28585) (not d!28271) (not d!28619) (not d!27963) (not d!28539) (not bm!11029) (not d!28545) (not d!27995) (not d!28415) (not d!28495) (not bm!10983) (not b!104516) (not b!104252) (not b!104534) (not b!104771) (not b!104850) (not b!104590) (not b!103897) (not b!104720) (not d!28287) (not b_lambda!4609) (not b!103955) (not b!104929) (not b!104455) (not d!27939) (not b!104695) (not b!104242) (not d!27893) (not b!103971) (not b!103895) (not d!28493) (not b!104093) (not d!28239) (not b!103990) (not d!28449) (not b!104345) (not bm!10981) (not b!104786) (not b!103966) (not d!28221) (not b!104670) (not b!104313) (not b!104867) (not d!28481) (not b!104936) (not b!104558) (not d!28527) (not b!104024) (not b!104819) (not b!104348) (not b!104270) (not b!104484) (not b!104503) (not b!104836) (not d!28173) (not b!103912) (not b!104685) (not d!28133) (not b!103917) (not b!104533) (not b!104774) (not b!104794) (not b!104728) (not d!28127) (not b!104525) (not d!28097) (not d!28317) (not b!104684) (not b!104963) (not b!104710) (not b!104810) (not d!28641) (not b!104469) (not bm!10956) (not b!104699) (not b!104982) (not b!104628) (not b!104290) (not d!28331) (not b!104864) (not b!103952) (not b!104847) (not d!28359) (not d!28195) (not bm!10940) (not d!28277) (not b!104102) (not bm!10995) (not b!103984) (not b!104926) (not b!104497) (not b_lambda!4599) (not b!104183) (not b!103909) (not bm!10909) (not b!104130) (not b!104593) (not b!104614) (not b!104168) (not b!103916) (not b!104099) (not b!104678) (not d!27945) (not b!104164) (not b!104745) (not b!104673) (not b!104302) (not b!104493) (not b!104623) (not d!27901) (not d!28393) (not d!28451) (not b!104180) (not b_lambda!4631) (not b!104919) (not d!28373) (not d!28309) (not b!104262) (not d!28161) (not d!27951) (not b!104460) (not b!104317) (not b!104488) (not b!104194) (not b!104294) (not bm!10969) (not b!104822) (not b!104984) (not d!27999) (not b!104330) (not d!28043) (not b!104285) (not b!104109) (not b!104621) (not b!104896) (not b!103914) (not b!104025) (not b!104950) (not d!28657) (not b!104523) (not d!28379) (not bm!10924) (not b!104161) (not b!104653) (not d!28385) (not b!104206) tp_is_empty!2671 (not bm!10965) (not b!104711) (not b!104648) (not b!104797) (not b_lambda!4629) (not d!28055) (not bm!11025) (not b!104326) (not b!104519) (not b!104587))
(check-sat b_and!6465 b_and!6467 (not b_next!2509) (not b_next!2511))
