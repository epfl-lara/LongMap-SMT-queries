; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12192 () Bool)

(assert start!12192)

(declare-fun b!103061 () Bool)

(declare-fun b_free!2509 () Bool)

(declare-fun b_next!2509 () Bool)

(assert (=> b!103061 (= b_free!2509 (not b_next!2509))))

(declare-fun tp!9843 () Bool)

(declare-fun b_and!6373 () Bool)

(assert (=> b!103061 (= tp!9843 b_and!6373)))

(declare-fun b!103053 () Bool)

(declare-fun b_free!2511 () Bool)

(declare-fun b_next!2511 () Bool)

(assert (=> b!103053 (= b_free!2511 (not b_next!2511))))

(declare-fun tp!9842 () Bool)

(declare-fun b_and!6375 () Bool)

(assert (=> b!103053 (= tp!9842 b_and!6375)))

(declare-fun b!103052 () Bool)

(declare-fun res!51485 () Bool)

(declare-fun e!67142 () Bool)

(assert (=> b!103052 (=> (not res!51485) (not e!67142))))

(declare-fun from!355 () (_ BitVec 32))

(declare-datatypes ((V!3209 0))(
  ( (V!3210 (val!1380 Int)) )
))
(declare-datatypes ((array!4317 0))(
  ( (array!4318 (arr!2048 (Array (_ BitVec 32) (_ BitVec 64))) (size!2302 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!992 0))(
  ( (ValueCellFull!992 (v!2875 V!3209)) (EmptyCell!992) )
))
(declare-datatypes ((array!4319 0))(
  ( (array!4320 (arr!2049 (Array (_ BitVec 32) ValueCell!992)) (size!2303 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!892 0))(
  ( (LongMapFixedSize!893 (defaultEntry!2560 Int) (mask!6696 (_ BitVec 32)) (extraKeys!2369 (_ BitVec 32)) (zeroValue!2437 V!3209) (minValue!2437 V!3209) (_size!495 (_ BitVec 32)) (_keys!4262 array!4317) (_values!2543 array!4319) (_vacant!495 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!694 0))(
  ( (Cell!695 (v!2876 LongMapFixedSize!892)) )
))
(declare-datatypes ((LongMap!694 0))(
  ( (LongMap!695 (underlying!358 Cell!694)) )
))
(declare-fun thiss!992 () LongMap!694)

(assert (=> b!103052 (= res!51485 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun tp_is_empty!2671 () Bool)

(declare-fun newMap!16 () LongMapFixedSize!892)

(declare-fun e!67140 () Bool)

(declare-fun e!67145 () Bool)

(declare-fun array_inv!1263 (array!4317) Bool)

(declare-fun array_inv!1264 (array!4319) Bool)

(assert (=> b!103053 (= e!67140 (and tp!9842 tp_is_empty!2671 (array_inv!1263 (_keys!4262 newMap!16)) (array_inv!1264 (_values!2543 newMap!16)) e!67145))))

(declare-fun b!103054 () Bool)

(declare-datatypes ((Unit!3132 0))(
  ( (Unit!3133) )
))
(declare-fun e!67134 () Unit!3132)

(declare-fun Unit!3134 () Unit!3132)

(assert (=> b!103054 (= e!67134 Unit!3134)))

(declare-fun mapNonEmpty!3897 () Bool)

(declare-fun mapRes!3897 () Bool)

(declare-fun tp!9844 () Bool)

(declare-fun e!67135 () Bool)

(assert (=> mapNonEmpty!3897 (= mapRes!3897 (and tp!9844 e!67135))))

(declare-fun mapValue!3897 () ValueCell!992)

(declare-fun mapKey!3897 () (_ BitVec 32))

(declare-fun mapRest!3898 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3897 (= (arr!2049 (_values!2543 newMap!16)) (store mapRest!3898 mapKey!3897 mapValue!3897))))

(declare-fun mapNonEmpty!3898 () Bool)

(declare-fun mapRes!3898 () Bool)

(declare-fun tp!9841 () Bool)

(declare-fun e!67132 () Bool)

(assert (=> mapNonEmpty!3898 (= mapRes!3898 (and tp!9841 e!67132))))

(declare-fun mapValue!3898 () ValueCell!992)

(declare-fun mapKey!3898 () (_ BitVec 32))

(declare-fun mapRest!3897 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3898 (= (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (store mapRest!3897 mapKey!3898 mapValue!3898))))

(declare-fun b!103055 () Bool)

(declare-fun e!67147 () Bool)

(declare-fun e!67133 () Bool)

(assert (=> b!103055 (= e!67147 e!67133)))

(declare-fun res!51484 () Bool)

(assert (=> b!103055 (=> (not res!51484) (not e!67133))))

(assert (=> b!103055 (= res!51484 (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!52447 () V!3209)

(declare-fun get!1328 (ValueCell!992 V!3209) V!3209)

(declare-fun dynLambda!382 (Int (_ BitVec 64)) V!3209)

(assert (=> b!103055 (= lt!52447 (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103056 () Bool)

(declare-fun e!67146 () Bool)

(assert (=> b!103056 (= e!67133 e!67146)))

(declare-fun res!51489 () Bool)

(assert (=> b!103056 (=> (not res!51489) (not e!67146))))

(declare-datatypes ((tuple2!2352 0))(
  ( (tuple2!2353 (_1!1187 Bool) (_2!1187 LongMapFixedSize!892)) )
))
(declare-fun lt!52445 () tuple2!2352)

(assert (=> b!103056 (= res!51489 (and (_1!1187 lt!52445) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!52446 () Unit!3132)

(assert (=> b!103056 (= lt!52446 e!67134)))

(declare-datatypes ((tuple2!2354 0))(
  ( (tuple2!2355 (_1!1188 (_ BitVec 64)) (_2!1188 V!3209)) )
))
(declare-datatypes ((List!1592 0))(
  ( (Nil!1589) (Cons!1588 (h!2184 tuple2!2354) (t!5646 List!1592)) )
))
(declare-datatypes ((ListLongMap!1527 0))(
  ( (ListLongMap!1528 (toList!779 List!1592)) )
))
(declare-fun lt!52449 () ListLongMap!1527)

(declare-fun c!17728 () Bool)

(declare-fun contains!811 (ListLongMap!1527 (_ BitVec 64)) Bool)

(assert (=> b!103056 (= c!17728 (contains!811 lt!52449 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun update!158 (LongMapFixedSize!892 (_ BitVec 64) V!3209) tuple2!2352)

(assert (=> b!103056 (= lt!52445 (update!158 newMap!16 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))

(declare-fun b!103057 () Bool)

(assert (=> b!103057 (= e!67132 tp_is_empty!2671)))

(declare-fun b!103058 () Bool)

(declare-fun e!67136 () Bool)

(declare-fun e!67141 () Bool)

(assert (=> b!103058 (= e!67136 e!67141)))

(declare-fun b!103059 () Bool)

(declare-fun res!51488 () Bool)

(assert (=> b!103059 (=> (not res!51488) (not e!67142))))

(assert (=> b!103059 (= res!51488 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6696 newMap!16)) (_size!495 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103060 () Bool)

(declare-fun e!67143 () Bool)

(assert (=> b!103060 (= e!67141 e!67143)))

(declare-fun mapIsEmpty!3897 () Bool)

(assert (=> mapIsEmpty!3897 mapRes!3898))

(declare-fun e!67139 () Bool)

(assert (=> b!103061 (= e!67143 (and tp!9843 tp_is_empty!2671 (array_inv!1263 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (array_inv!1264 (_values!2543 (v!2876 (underlying!358 thiss!992)))) e!67139))))

(declare-fun b!103062 () Bool)

(declare-fun Unit!3135 () Unit!3132)

(assert (=> b!103062 (= e!67134 Unit!3135)))

(declare-fun lt!52439 () Unit!3132)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!98 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3132)

(assert (=> b!103062 (= lt!52439 (lemmaListMapContainsThenArrayContainsFrom!98 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4317 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!103062 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!52448 () Unit!3132)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4317 (_ BitVec 32) (_ BitVec 32)) Unit!3132)

(assert (=> b!103062 (= lt!52448 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1593 0))(
  ( (Nil!1590) (Cons!1589 (h!2185 (_ BitVec 64)) (t!5647 List!1593)) )
))
(declare-fun arrayNoDuplicates!0 (array!4317 (_ BitVec 32) List!1593) Bool)

(assert (=> b!103062 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1590)))

(declare-fun lt!52450 () Unit!3132)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4317 (_ BitVec 32) (_ BitVec 64) List!1593) Unit!3132)

(assert (=> b!103062 (= lt!52450 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590)))))

(assert (=> b!103062 false))

(declare-fun mapIsEmpty!3898 () Bool)

(assert (=> mapIsEmpty!3898 mapRes!3897))

(declare-fun b!103063 () Bool)

(declare-fun e!67138 () Bool)

(assert (=> b!103063 (= e!67138 tp_is_empty!2671)))

(declare-fun b!103064 () Bool)

(assert (=> b!103064 (= e!67135 tp_is_empty!2671)))

(declare-fun b!103065 () Bool)

(assert (=> b!103065 (= e!67142 e!67147)))

(declare-fun res!51490 () Bool)

(assert (=> b!103065 (=> (not res!51490) (not e!67147))))

(declare-fun lt!52443 () ListLongMap!1527)

(assert (=> b!103065 (= res!51490 (= lt!52443 lt!52449))))

(declare-fun map!1279 (LongMapFixedSize!892) ListLongMap!1527)

(assert (=> b!103065 (= lt!52449 (map!1279 newMap!16))))

(declare-fun getCurrentListMap!467 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) ListLongMap!1527)

(assert (=> b!103065 (= lt!52443 (getCurrentListMap!467 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103066 () Bool)

(declare-fun res!51491 () Bool)

(assert (=> b!103066 (=> (not res!51491) (not e!67142))))

(declare-fun valid!418 (LongMapFixedSize!892) Bool)

(assert (=> b!103066 (= res!51491 (valid!418 newMap!16))))

(declare-fun b!103067 () Bool)

(declare-fun e!67144 () Bool)

(assert (=> b!103067 (= e!67146 (not e!67144))))

(declare-fun res!51487 () Bool)

(assert (=> b!103067 (=> res!51487 e!67144)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!103067 (= res!51487 (not (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun lt!52441 () ListLongMap!1527)

(declare-fun lt!52442 () tuple2!2354)

(declare-fun lt!52444 () tuple2!2354)

(declare-fun +!137 (ListLongMap!1527 tuple2!2354) ListLongMap!1527)

(assert (=> b!103067 (= (+!137 (+!137 lt!52441 lt!52442) lt!52444) (+!137 (+!137 lt!52441 lt!52444) lt!52442))))

(assert (=> b!103067 (= lt!52444 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> b!103067 (= lt!52442 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))

(declare-fun lt!52440 () Unit!3132)

(declare-fun addCommutativeForDiffKeys!50 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64) V!3209) Unit!3132)

(assert (=> b!103067 (= lt!52440 (addCommutativeForDiffKeys!50 lt!52441 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!104 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) ListLongMap!1527)

(assert (=> b!103067 (= lt!52441 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103068 () Bool)

(assert (=> b!103068 (= e!67144 (= (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6696 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103069 () Bool)

(assert (=> b!103069 (= e!67139 (and e!67138 mapRes!3898))))

(declare-fun condMapEmpty!3898 () Bool)

(declare-fun mapDefault!3898 () ValueCell!992)

(assert (=> b!103069 (= condMapEmpty!3898 (= (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3898)))))

(declare-fun b!103070 () Bool)

(declare-fun e!67137 () Bool)

(assert (=> b!103070 (= e!67145 (and e!67137 mapRes!3897))))

(declare-fun condMapEmpty!3897 () Bool)

(declare-fun mapDefault!3897 () ValueCell!992)

(assert (=> b!103070 (= condMapEmpty!3897 (= (arr!2049 (_values!2543 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3897)))))

(declare-fun b!103071 () Bool)

(assert (=> b!103071 (= e!67137 tp_is_empty!2671)))

(declare-fun res!51486 () Bool)

(assert (=> start!12192 (=> (not res!51486) (not e!67142))))

(declare-fun valid!419 (LongMap!694) Bool)

(assert (=> start!12192 (= res!51486 (valid!419 thiss!992))))

(assert (=> start!12192 e!67142))

(assert (=> start!12192 e!67136))

(assert (=> start!12192 true))

(assert (=> start!12192 e!67140))

(assert (= (and start!12192 res!51486) b!103052))

(assert (= (and b!103052 res!51485) b!103066))

(assert (= (and b!103066 res!51491) b!103059))

(assert (= (and b!103059 res!51488) b!103065))

(assert (= (and b!103065 res!51490) b!103055))

(assert (= (and b!103055 res!51484) b!103056))

(assert (= (and b!103056 c!17728) b!103062))

(assert (= (and b!103056 (not c!17728)) b!103054))

(assert (= (and b!103056 res!51489) b!103067))

(assert (= (and b!103067 (not res!51487)) b!103068))

(assert (= (and b!103069 condMapEmpty!3898) mapIsEmpty!3897))

(assert (= (and b!103069 (not condMapEmpty!3898)) mapNonEmpty!3898))

(get-info :version)

(assert (= (and mapNonEmpty!3898 ((_ is ValueCellFull!992) mapValue!3898)) b!103057))

(assert (= (and b!103069 ((_ is ValueCellFull!992) mapDefault!3898)) b!103063))

(assert (= b!103061 b!103069))

(assert (= b!103060 b!103061))

(assert (= b!103058 b!103060))

(assert (= start!12192 b!103058))

(assert (= (and b!103070 condMapEmpty!3897) mapIsEmpty!3898))

(assert (= (and b!103070 (not condMapEmpty!3897)) mapNonEmpty!3897))

(assert (= (and mapNonEmpty!3897 ((_ is ValueCellFull!992) mapValue!3897)) b!103064))

(assert (= (and b!103070 ((_ is ValueCellFull!992) mapDefault!3897)) b!103071))

(assert (= b!103053 b!103070))

(assert (= start!12192 b!103053))

(declare-fun b_lambda!4613 () Bool)

(assert (=> (not b_lambda!4613) (not b!103055)))

(declare-fun t!5643 () Bool)

(declare-fun tb!2021 () Bool)

(assert (=> (and b!103061 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) t!5643) tb!2021))

(declare-fun result!3411 () Bool)

(assert (=> tb!2021 (= result!3411 tp_is_empty!2671)))

(assert (=> b!103055 t!5643))

(declare-fun b_and!6377 () Bool)

(assert (= b_and!6373 (and (=> t!5643 result!3411) b_and!6377)))

(declare-fun t!5645 () Bool)

(declare-fun tb!2023 () Bool)

(assert (=> (and b!103053 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) t!5645) tb!2023))

(declare-fun result!3415 () Bool)

(assert (= result!3415 result!3411))

(assert (=> b!103055 t!5645))

(declare-fun b_and!6379 () Bool)

(assert (= b_and!6375 (and (=> t!5645 result!3415) b_and!6379)))

(declare-fun m!113915 () Bool)

(assert (=> b!103056 m!113915))

(assert (=> b!103056 m!113915))

(declare-fun m!113917 () Bool)

(assert (=> b!103056 m!113917))

(assert (=> b!103056 m!113915))

(declare-fun m!113919 () Bool)

(assert (=> b!103056 m!113919))

(declare-fun m!113921 () Bool)

(assert (=> b!103065 m!113921))

(declare-fun m!113923 () Bool)

(assert (=> b!103065 m!113923))

(declare-fun m!113925 () Bool)

(assert (=> mapNonEmpty!3898 m!113925))

(declare-fun m!113927 () Bool)

(assert (=> start!12192 m!113927))

(declare-fun m!113929 () Bool)

(assert (=> b!103062 m!113929))

(declare-fun m!113931 () Bool)

(assert (=> b!103062 m!113931))

(assert (=> b!103062 m!113915))

(declare-fun m!113933 () Bool)

(assert (=> b!103062 m!113933))

(assert (=> b!103062 m!113915))

(assert (=> b!103062 m!113915))

(declare-fun m!113935 () Bool)

(assert (=> b!103062 m!113935))

(assert (=> b!103062 m!113915))

(declare-fun m!113937 () Bool)

(assert (=> b!103062 m!113937))

(declare-fun m!113939 () Bool)

(assert (=> b!103053 m!113939))

(declare-fun m!113941 () Bool)

(assert (=> b!103053 m!113941))

(assert (=> b!103055 m!113915))

(declare-fun m!113943 () Bool)

(assert (=> b!103055 m!113943))

(declare-fun m!113945 () Bool)

(assert (=> b!103055 m!113945))

(assert (=> b!103055 m!113943))

(assert (=> b!103055 m!113945))

(declare-fun m!113947 () Bool)

(assert (=> b!103055 m!113947))

(declare-fun m!113949 () Bool)

(assert (=> mapNonEmpty!3897 m!113949))

(declare-fun m!113951 () Bool)

(assert (=> b!103067 m!113951))

(declare-fun m!113953 () Bool)

(assert (=> b!103067 m!113953))

(assert (=> b!103067 m!113951))

(declare-fun m!113955 () Bool)

(assert (=> b!103067 m!113955))

(assert (=> b!103067 m!113915))

(declare-fun m!113957 () Bool)

(assert (=> b!103067 m!113957))

(assert (=> b!103067 m!113915))

(declare-fun m!113959 () Bool)

(assert (=> b!103067 m!113959))

(declare-fun m!113961 () Bool)

(assert (=> b!103067 m!113961))

(declare-fun m!113963 () Bool)

(assert (=> b!103067 m!113963))

(assert (=> b!103067 m!113961))

(declare-fun m!113965 () Bool)

(assert (=> b!103066 m!113965))

(declare-fun m!113967 () Bool)

(assert (=> b!103061 m!113967))

(declare-fun m!113969 () Bool)

(assert (=> b!103061 m!113969))

(check-sat (not b!103056) (not b_next!2509) (not mapNonEmpty!3897) (not mapNonEmpty!3898) (not b!103053) (not b!103066) (not b_next!2511) (not start!12192) tp_is_empty!2671 b_and!6379 (not b!103065) b_and!6377 (not b_lambda!4613) (not b!103062) (not b!103061) (not b!103055) (not b!103067))
(check-sat b_and!6377 b_and!6379 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun b_lambda!4619 () Bool)

(assert (= b_lambda!4613 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4619)))

(check-sat (not b_next!2509) (not mapNonEmpty!3897) (not mapNonEmpty!3898) (not b!103053) (not b!103066) (not b_next!2511) (not start!12192) tp_is_empty!2671 b_and!6379 (not b_lambda!4619) (not b!103056) (not b!103065) b_and!6377 (not b!103062) (not b!103061) (not b!103055) (not b!103067))
(check-sat b_and!6377 b_and!6379 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun d!27753 () Bool)

(declare-fun c!17737 () Bool)

(assert (=> d!27753 (= c!17737 ((_ is ValueCellFull!992) (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67260 () V!3209)

(assert (=> d!27753 (= (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67260)))

(declare-fun b!103202 () Bool)

(declare-fun get!1329 (ValueCell!992 V!3209) V!3209)

(assert (=> b!103202 (= e!67260 (get!1329 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103203 () Bool)

(declare-fun get!1330 (ValueCell!992 V!3209) V!3209)

(assert (=> b!103203 (= e!67260 (get!1330 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27753 c!17737) b!103202))

(assert (= (and d!27753 (not c!17737)) b!103203))

(assert (=> b!103202 m!113943))

(assert (=> b!103202 m!113945))

(declare-fun m!114083 () Bool)

(assert (=> b!103202 m!114083))

(assert (=> b!103203 m!113943))

(assert (=> b!103203 m!113945))

(declare-fun m!114085 () Bool)

(assert (=> b!103203 m!114085))

(assert (=> b!103055 d!27753))

(declare-fun d!27755 () Bool)

(declare-fun e!67263 () Bool)

(assert (=> d!27755 e!67263))

(declare-fun res!51544 () Bool)

(assert (=> d!27755 (=> (not res!51544) (not e!67263))))

(declare-fun lt!52533 () ListLongMap!1527)

(assert (=> d!27755 (= res!51544 (contains!811 lt!52533 (_1!1188 lt!52442)))))

(declare-fun lt!52532 () List!1592)

(assert (=> d!27755 (= lt!52533 (ListLongMap!1528 lt!52532))))

(declare-fun lt!52531 () Unit!3132)

(declare-fun lt!52534 () Unit!3132)

(assert (=> d!27755 (= lt!52531 lt!52534)))

(declare-datatypes ((Option!162 0))(
  ( (Some!161 (v!2882 V!3209)) (None!160) )
))
(declare-fun getValueByKey!156 (List!1592 (_ BitVec 64)) Option!162)

(assert (=> d!27755 (= (getValueByKey!156 lt!52532 (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442)))))

(declare-fun lemmaContainsTupThenGetReturnValue!72 (List!1592 (_ BitVec 64) V!3209) Unit!3132)

(assert (=> d!27755 (= lt!52534 (lemmaContainsTupThenGetReturnValue!72 lt!52532 (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun insertStrictlySorted!75 (List!1592 (_ BitVec 64) V!3209) List!1592)

(assert (=> d!27755 (= lt!52532 (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 lt!52444)) (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(assert (=> d!27755 (= (+!137 (+!137 lt!52441 lt!52444) lt!52442) lt!52533)))

(declare-fun b!103208 () Bool)

(declare-fun res!51545 () Bool)

(assert (=> b!103208 (=> (not res!51545) (not e!67263))))

(assert (=> b!103208 (= res!51545 (= (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442))))))

(declare-fun b!103209 () Bool)

(declare-fun contains!812 (List!1592 tuple2!2354) Bool)

(assert (=> b!103209 (= e!67263 (contains!812 (toList!779 lt!52533) lt!52442))))

(assert (= (and d!27755 res!51544) b!103208))

(assert (= (and b!103208 res!51545) b!103209))

(declare-fun m!114087 () Bool)

(assert (=> d!27755 m!114087))

(declare-fun m!114089 () Bool)

(assert (=> d!27755 m!114089))

(declare-fun m!114091 () Bool)

(assert (=> d!27755 m!114091))

(declare-fun m!114093 () Bool)

(assert (=> d!27755 m!114093))

(declare-fun m!114095 () Bool)

(assert (=> b!103208 m!114095))

(declare-fun m!114097 () Bool)

(assert (=> b!103209 m!114097))

(assert (=> b!103067 d!27755))

(declare-fun b!103234 () Bool)

(assert (=> b!103234 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!103234 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun lt!52553 () ListLongMap!1527)

(declare-fun e!67280 () Bool)

(declare-fun apply!97 (ListLongMap!1527 (_ BitVec 64)) V!3209)

(assert (=> b!103234 (= e!67280 (= (apply!97 lt!52553 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!27757 () Bool)

(declare-fun e!67278 () Bool)

(assert (=> d!27757 e!67278))

(declare-fun res!51557 () Bool)

(assert (=> d!27757 (=> (not res!51557) (not e!67278))))

(assert (=> d!27757 (= res!51557 (not (contains!811 lt!52553 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67281 () ListLongMap!1527)

(assert (=> d!27757 (= lt!52553 e!67281)))

(declare-fun c!17748 () Bool)

(assert (=> d!27757 (= c!17748 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27757 (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27757 (= (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) lt!52553)))

(declare-fun b!103235 () Bool)

(assert (=> b!103235 (= e!67281 (ListLongMap!1528 Nil!1589))))

(declare-fun b!103236 () Bool)

(declare-fun res!51556 () Bool)

(assert (=> b!103236 (=> (not res!51556) (not e!67278))))

(assert (=> b!103236 (= res!51556 (not (contains!811 lt!52553 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103237 () Bool)

(declare-fun e!67282 () Bool)

(declare-fun isEmpty!373 (ListLongMap!1527) Bool)

(assert (=> b!103237 (= e!67282 (isEmpty!373 lt!52553))))

(declare-fun b!103238 () Bool)

(declare-fun lt!52551 () Unit!3132)

(declare-fun lt!52554 () Unit!3132)

(assert (=> b!103238 (= lt!52551 lt!52554)))

(declare-fun lt!52552 () (_ BitVec 64))

(declare-fun lt!52555 () ListLongMap!1527)

(declare-fun lt!52550 () V!3209)

(declare-fun lt!52549 () (_ BitVec 64))

(assert (=> b!103238 (not (contains!811 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)) lt!52549))))

(declare-fun addStillNotContains!47 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3132)

(assert (=> b!103238 (= lt!52554 (addStillNotContains!47 lt!52555 lt!52552 lt!52550 lt!52549))))

(assert (=> b!103238 (= lt!52549 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103238 (= lt!52550 (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103238 (= lt!52552 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun call!10749 () ListLongMap!1527)

(assert (=> b!103238 (= lt!52555 call!10749)))

(declare-fun e!67283 () ListLongMap!1527)

(assert (=> b!103238 (= e!67283 (+!137 call!10749 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10746 () Bool)

(assert (=> bm!10746 (= call!10749 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103239 () Bool)

(declare-fun e!67279 () Bool)

(assert (=> b!103239 (= e!67279 e!67282)))

(declare-fun c!17747 () Bool)

(assert (=> b!103239 (= c!17747 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103240 () Bool)

(assert (=> b!103240 (= e!67281 e!67283)))

(declare-fun c!17749 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!103240 (= c!17749 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103241 () Bool)

(assert (=> b!103241 (= e!67279 e!67280)))

(assert (=> b!103241 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun res!51555 () Bool)

(assert (=> b!103241 (= res!51555 (contains!811 lt!52553 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103241 (=> (not res!51555) (not e!67280))))

(declare-fun b!103242 () Bool)

(declare-fun e!67284 () Bool)

(assert (=> b!103242 (= e!67284 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103242 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!103243 () Bool)

(assert (=> b!103243 (= e!67283 call!10749)))

(declare-fun b!103244 () Bool)

(assert (=> b!103244 (= e!67282 (= lt!52553 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103245 () Bool)

(assert (=> b!103245 (= e!67278 e!67279)))

(declare-fun c!17746 () Bool)

(assert (=> b!103245 (= c!17746 e!67284)))

(declare-fun res!51554 () Bool)

(assert (=> b!103245 (=> (not res!51554) (not e!67284))))

(assert (=> b!103245 (= res!51554 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27757 c!17748) b!103235))

(assert (= (and d!27757 (not c!17748)) b!103240))

(assert (= (and b!103240 c!17749) b!103238))

(assert (= (and b!103240 (not c!17749)) b!103243))

(assert (= (or b!103238 b!103243) bm!10746))

(assert (= (and d!27757 res!51557) b!103236))

(assert (= (and b!103236 res!51556) b!103245))

(assert (= (and b!103245 res!51554) b!103242))

(assert (= (and b!103245 c!17746) b!103241))

(assert (= (and b!103245 (not c!17746)) b!103239))

(assert (= (and b!103241 res!51555) b!103234))

(assert (= (and b!103239 c!17747) b!103244))

(assert (= (and b!103239 (not c!17747)) b!103237))

(declare-fun b_lambda!4621 () Bool)

(assert (=> (not b_lambda!4621) (not b!103234)))

(assert (=> b!103234 t!5643))

(declare-fun b_and!6397 () Bool)

(assert (= b_and!6377 (and (=> t!5643 result!3411) b_and!6397)))

(assert (=> b!103234 t!5645))

(declare-fun b_and!6399 () Bool)

(assert (= b_and!6379 (and (=> t!5645 result!3415) b_and!6399)))

(declare-fun b_lambda!4623 () Bool)

(assert (=> (not b_lambda!4623) (not b!103238)))

(assert (=> b!103238 t!5643))

(declare-fun b_and!6401 () Bool)

(assert (= b_and!6397 (and (=> t!5643 result!3411) b_and!6401)))

(assert (=> b!103238 t!5645))

(declare-fun b_and!6403 () Bool)

(assert (= b_and!6399 (and (=> t!5645 result!3415) b_and!6403)))

(declare-fun m!114099 () Bool)

(assert (=> d!27757 m!114099))

(assert (=> d!27757 m!113953))

(declare-fun m!114101 () Bool)

(assert (=> b!103237 m!114101))

(declare-fun m!114103 () Bool)

(assert (=> b!103240 m!114103))

(assert (=> b!103240 m!114103))

(declare-fun m!114105 () Bool)

(assert (=> b!103240 m!114105))

(assert (=> b!103241 m!114103))

(assert (=> b!103241 m!114103))

(declare-fun m!114107 () Bool)

(assert (=> b!103241 m!114107))

(assert (=> b!103242 m!114103))

(assert (=> b!103242 m!114103))

(assert (=> b!103242 m!114105))

(assert (=> b!103234 m!114103))

(declare-fun m!114109 () Bool)

(assert (=> b!103234 m!114109))

(declare-fun m!114111 () Bool)

(assert (=> b!103234 m!114111))

(assert (=> b!103234 m!114103))

(assert (=> b!103234 m!113945))

(assert (=> b!103234 m!114111))

(assert (=> b!103234 m!113945))

(declare-fun m!114113 () Bool)

(assert (=> b!103234 m!114113))

(declare-fun m!114115 () Bool)

(assert (=> b!103238 m!114115))

(assert (=> b!103238 m!114115))

(declare-fun m!114117 () Bool)

(assert (=> b!103238 m!114117))

(assert (=> b!103238 m!114111))

(assert (=> b!103238 m!114103))

(assert (=> b!103238 m!113945))

(declare-fun m!114119 () Bool)

(assert (=> b!103238 m!114119))

(assert (=> b!103238 m!114111))

(assert (=> b!103238 m!113945))

(assert (=> b!103238 m!114113))

(declare-fun m!114121 () Bool)

(assert (=> b!103238 m!114121))

(declare-fun m!114123 () Bool)

(assert (=> b!103244 m!114123))

(declare-fun m!114125 () Bool)

(assert (=> b!103236 m!114125))

(assert (=> bm!10746 m!114123))

(assert (=> b!103067 d!27757))

(declare-fun d!27759 () Bool)

(declare-fun e!67285 () Bool)

(assert (=> d!27759 e!67285))

(declare-fun res!51558 () Bool)

(assert (=> d!27759 (=> (not res!51558) (not e!67285))))

(declare-fun lt!52558 () ListLongMap!1527)

(assert (=> d!27759 (= res!51558 (contains!811 lt!52558 (_1!1188 lt!52444)))))

(declare-fun lt!52557 () List!1592)

(assert (=> d!27759 (= lt!52558 (ListLongMap!1528 lt!52557))))

(declare-fun lt!52556 () Unit!3132)

(declare-fun lt!52559 () Unit!3132)

(assert (=> d!27759 (= lt!52556 lt!52559)))

(assert (=> d!27759 (= (getValueByKey!156 lt!52557 (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444)))))

(assert (=> d!27759 (= lt!52559 (lemmaContainsTupThenGetReturnValue!72 lt!52557 (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(assert (=> d!27759 (= lt!52557 (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(assert (=> d!27759 (= (+!137 lt!52441 lt!52444) lt!52558)))

(declare-fun b!103246 () Bool)

(declare-fun res!51559 () Bool)

(assert (=> b!103246 (=> (not res!51559) (not e!67285))))

(assert (=> b!103246 (= res!51559 (= (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444))))))

(declare-fun b!103247 () Bool)

(assert (=> b!103247 (= e!67285 (contains!812 (toList!779 lt!52558) lt!52444))))

(assert (= (and d!27759 res!51558) b!103246))

(assert (= (and b!103246 res!51559) b!103247))

(declare-fun m!114127 () Bool)

(assert (=> d!27759 m!114127))

(declare-fun m!114129 () Bool)

(assert (=> d!27759 m!114129))

(declare-fun m!114131 () Bool)

(assert (=> d!27759 m!114131))

(declare-fun m!114133 () Bool)

(assert (=> d!27759 m!114133))

(declare-fun m!114135 () Bool)

(assert (=> b!103246 m!114135))

(declare-fun m!114137 () Bool)

(assert (=> b!103247 m!114137))

(assert (=> b!103067 d!27759))

(declare-fun d!27761 () Bool)

(declare-fun e!67286 () Bool)

(assert (=> d!27761 e!67286))

(declare-fun res!51560 () Bool)

(assert (=> d!27761 (=> (not res!51560) (not e!67286))))

(declare-fun lt!52562 () ListLongMap!1527)

(assert (=> d!27761 (= res!51560 (contains!811 lt!52562 (_1!1188 lt!52442)))))

(declare-fun lt!52561 () List!1592)

(assert (=> d!27761 (= lt!52562 (ListLongMap!1528 lt!52561))))

(declare-fun lt!52560 () Unit!3132)

(declare-fun lt!52563 () Unit!3132)

(assert (=> d!27761 (= lt!52560 lt!52563)))

(assert (=> d!27761 (= (getValueByKey!156 lt!52561 (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442)))))

(assert (=> d!27761 (= lt!52563 (lemmaContainsTupThenGetReturnValue!72 lt!52561 (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(assert (=> d!27761 (= lt!52561 (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(assert (=> d!27761 (= (+!137 lt!52441 lt!52442) lt!52562)))

(declare-fun b!103248 () Bool)

(declare-fun res!51561 () Bool)

(assert (=> b!103248 (=> (not res!51561) (not e!67286))))

(assert (=> b!103248 (= res!51561 (= (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442))))))

(declare-fun b!103249 () Bool)

(assert (=> b!103249 (= e!67286 (contains!812 (toList!779 lt!52562) lt!52442))))

(assert (= (and d!27761 res!51560) b!103248))

(assert (= (and b!103248 res!51561) b!103249))

(declare-fun m!114139 () Bool)

(assert (=> d!27761 m!114139))

(declare-fun m!114141 () Bool)

(assert (=> d!27761 m!114141))

(declare-fun m!114143 () Bool)

(assert (=> d!27761 m!114143))

(declare-fun m!114145 () Bool)

(assert (=> d!27761 m!114145))

(declare-fun m!114147 () Bool)

(assert (=> b!103248 m!114147))

(declare-fun m!114149 () Bool)

(assert (=> b!103249 m!114149))

(assert (=> b!103067 d!27761))

(declare-fun d!27763 () Bool)

(assert (=> d!27763 (= (+!137 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (+!137 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun lt!52566 () Unit!3132)

(declare-fun choose!644 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64) V!3209) Unit!3132)

(assert (=> d!27763 (= lt!52566 (choose!644 lt!52441 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> d!27763 (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27763 (= (addCommutativeForDiffKeys!50 lt!52441 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) lt!52566)))

(declare-fun bs!4243 () Bool)

(assert (= bs!4243 d!27763))

(declare-fun m!114151 () Bool)

(assert (=> bs!4243 m!114151))

(declare-fun m!114153 () Bool)

(assert (=> bs!4243 m!114153))

(assert (=> bs!4243 m!114151))

(declare-fun m!114155 () Bool)

(assert (=> bs!4243 m!114155))

(assert (=> bs!4243 m!113915))

(declare-fun m!114157 () Bool)

(assert (=> bs!4243 m!114157))

(assert (=> bs!4243 m!114153))

(declare-fun m!114159 () Bool)

(assert (=> bs!4243 m!114159))

(assert (=> b!103067 d!27763))

(declare-fun d!27765 () Bool)

(declare-fun e!67287 () Bool)

(assert (=> d!27765 e!67287))

(declare-fun res!51562 () Bool)

(assert (=> d!27765 (=> (not res!51562) (not e!67287))))

(declare-fun lt!52569 () ListLongMap!1527)

(assert (=> d!27765 (= res!51562 (contains!811 lt!52569 (_1!1188 lt!52444)))))

(declare-fun lt!52568 () List!1592)

(assert (=> d!27765 (= lt!52569 (ListLongMap!1528 lt!52568))))

(declare-fun lt!52567 () Unit!3132)

(declare-fun lt!52570 () Unit!3132)

(assert (=> d!27765 (= lt!52567 lt!52570)))

(assert (=> d!27765 (= (getValueByKey!156 lt!52568 (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444)))))

(assert (=> d!27765 (= lt!52570 (lemmaContainsTupThenGetReturnValue!72 lt!52568 (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(assert (=> d!27765 (= lt!52568 (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 lt!52442)) (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(assert (=> d!27765 (= (+!137 (+!137 lt!52441 lt!52442) lt!52444) lt!52569)))

(declare-fun b!103250 () Bool)

(declare-fun res!51563 () Bool)

(assert (=> b!103250 (=> (not res!51563) (not e!67287))))

(assert (=> b!103250 (= res!51563 (= (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444))))))

(declare-fun b!103251 () Bool)

(assert (=> b!103251 (= e!67287 (contains!812 (toList!779 lt!52569) lt!52444))))

(assert (= (and d!27765 res!51562) b!103250))

(assert (= (and b!103250 res!51563) b!103251))

(declare-fun m!114161 () Bool)

(assert (=> d!27765 m!114161))

(declare-fun m!114163 () Bool)

(assert (=> d!27765 m!114163))

(declare-fun m!114165 () Bool)

(assert (=> d!27765 m!114165))

(declare-fun m!114167 () Bool)

(assert (=> d!27765 m!114167))

(declare-fun m!114169 () Bool)

(assert (=> b!103250 m!114169))

(declare-fun m!114171 () Bool)

(assert (=> b!103251 m!114171))

(assert (=> b!103067 d!27765))

(declare-fun d!27767 () Bool)

(assert (=> d!27767 (= (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992)))) (and (or (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000001111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000011111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000001111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000011111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000001111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000011111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000001111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000011111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000001111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000011111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000001111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000011111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000001111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000011111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000111111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000001111111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000011111111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000111111111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00001111111111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00011111111111111111111111111111) (= (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!103067 d!27767))

(declare-fun d!27769 () Bool)

(assert (=> d!27769 (= (valid!419 thiss!992) (valid!418 (v!2876 (underlying!358 thiss!992))))))

(declare-fun bs!4244 () Bool)

(assert (= bs!4244 d!27769))

(declare-fun m!114173 () Bool)

(assert (=> bs!4244 m!114173))

(assert (=> start!12192 d!27769))

(declare-fun d!27771 () Bool)

(assert (=> d!27771 (not (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52573 () Unit!3132)

(declare-fun choose!68 (array!4317 (_ BitVec 32) (_ BitVec 64) List!1593) Unit!3132)

(assert (=> d!27771 (= lt!52573 (choose!68 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590)))))

(assert (=> d!27771 (bvslt (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27771 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590)) lt!52573)))

(declare-fun bs!4245 () Bool)

(assert (= bs!4245 d!27771))

(assert (=> bs!4245 m!113915))

(assert (=> bs!4245 m!113935))

(assert (=> bs!4245 m!113915))

(declare-fun m!114175 () Bool)

(assert (=> bs!4245 m!114175))

(assert (=> b!103062 d!27771))

(declare-fun d!27773 () Bool)

(assert (=> d!27773 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1590)))

(declare-fun lt!52576 () Unit!3132)

(declare-fun choose!39 (array!4317 (_ BitVec 32) (_ BitVec 32)) Unit!3132)

(assert (=> d!27773 (= lt!52576 (choose!39 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!27773 (bvslt (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27773 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355) lt!52576)))

(declare-fun bs!4246 () Bool)

(assert (= bs!4246 d!27773))

(assert (=> bs!4246 m!113931))

(declare-fun m!114177 () Bool)

(assert (=> bs!4246 m!114177))

(assert (=> b!103062 d!27773))

(declare-fun d!27775 () Bool)

(declare-fun res!51568 () Bool)

(declare-fun e!67292 () Bool)

(assert (=> d!27775 (=> res!51568 e!67292)))

(assert (=> d!27775 (= res!51568 (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27775 (= (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!67292)))

(declare-fun b!103256 () Bool)

(declare-fun e!67293 () Bool)

(assert (=> b!103256 (= e!67292 e!67293)))

(declare-fun res!51569 () Bool)

(assert (=> b!103256 (=> (not res!51569) (not e!67293))))

(assert (=> b!103256 (= res!51569 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103257 () Bool)

(assert (=> b!103257 (= e!67293 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!27775 (not res!51568)) b!103256))

(assert (= (and b!103256 res!51569) b!103257))

(assert (=> d!27775 m!114103))

(assert (=> b!103257 m!113915))

(declare-fun m!114179 () Bool)

(assert (=> b!103257 m!114179))

(assert (=> b!103062 d!27775))

(declare-fun d!27777 () Bool)

(declare-fun e!67296 () Bool)

(assert (=> d!27777 e!67296))

(declare-fun c!17752 () Bool)

(assert (=> d!27777 (= c!17752 (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!52579 () Unit!3132)

(declare-fun choose!645 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3132)

(assert (=> d!27777 (= lt!52579 (choose!645 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> d!27777 (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27777 (= (lemmaListMapContainsThenArrayContainsFrom!98 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) lt!52579)))

(declare-fun b!103262 () Bool)

(assert (=> b!103262 (= e!67296 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103263 () Bool)

(assert (=> b!103263 (= e!67296 (ite (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27777 c!17752) b!103262))

(assert (= (and d!27777 (not c!17752)) b!103263))

(assert (=> d!27777 m!113915))

(declare-fun m!114181 () Bool)

(assert (=> d!27777 m!114181))

(assert (=> d!27777 m!113953))

(assert (=> b!103262 m!113915))

(assert (=> b!103262 m!113935))

(assert (=> b!103062 d!27777))

(declare-fun b!103274 () Bool)

(declare-fun e!67308 () Bool)

(declare-fun e!67306 () Bool)

(assert (=> b!103274 (= e!67308 e!67306)))

(declare-fun res!51577 () Bool)

(assert (=> b!103274 (=> (not res!51577) (not e!67306))))

(declare-fun e!67305 () Bool)

(assert (=> b!103274 (= res!51577 (not e!67305))))

(declare-fun res!51576 () Bool)

(assert (=> b!103274 (=> (not res!51576) (not e!67305))))

(assert (=> b!103274 (= res!51576 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103275 () Bool)

(declare-fun e!67307 () Bool)

(declare-fun call!10752 () Bool)

(assert (=> b!103275 (= e!67307 call!10752)))

(declare-fun b!103276 () Bool)

(assert (=> b!103276 (= e!67306 e!67307)))

(declare-fun c!17755 () Bool)

(assert (=> b!103276 (= c!17755 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103277 () Bool)

(assert (=> b!103277 (= e!67307 call!10752)))

(declare-fun d!27779 () Bool)

(declare-fun res!51578 () Bool)

(assert (=> d!27779 (=> res!51578 e!67308)))

(assert (=> d!27779 (= res!51578 (bvsge from!355 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27779 (= (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1590) e!67308)))

(declare-fun b!103278 () Bool)

(declare-fun contains!813 (List!1593 (_ BitVec 64)) Bool)

(assert (=> b!103278 (= e!67305 (contains!813 Nil!1590 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun bm!10749 () Bool)

(assert (=> bm!10749 (= call!10752 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)))))

(assert (= (and d!27779 (not res!51578)) b!103274))

(assert (= (and b!103274 res!51576) b!103278))

(assert (= (and b!103274 res!51577) b!103276))

(assert (= (and b!103276 c!17755) b!103277))

(assert (= (and b!103276 (not c!17755)) b!103275))

(assert (= (or b!103277 b!103275) bm!10749))

(assert (=> b!103274 m!113915))

(assert (=> b!103274 m!113915))

(declare-fun m!114183 () Bool)

(assert (=> b!103274 m!114183))

(assert (=> b!103276 m!113915))

(assert (=> b!103276 m!113915))

(assert (=> b!103276 m!114183))

(assert (=> b!103278 m!113915))

(assert (=> b!103278 m!113915))

(declare-fun m!114185 () Bool)

(assert (=> b!103278 m!114185))

(assert (=> bm!10749 m!113915))

(declare-fun m!114187 () Bool)

(assert (=> bm!10749 m!114187))

(assert (=> b!103062 d!27779))

(declare-fun d!27781 () Bool)

(declare-fun res!51585 () Bool)

(declare-fun e!67311 () Bool)

(assert (=> d!27781 (=> (not res!51585) (not e!67311))))

(declare-fun simpleValid!73 (LongMapFixedSize!892) Bool)

(assert (=> d!27781 (= res!51585 (simpleValid!73 newMap!16))))

(assert (=> d!27781 (= (valid!418 newMap!16) e!67311)))

(declare-fun b!103285 () Bool)

(declare-fun res!51586 () Bool)

(assert (=> b!103285 (=> (not res!51586) (not e!67311))))

(declare-fun arrayCountValidKeys!0 (array!4317 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!103285 (= res!51586 (= (arrayCountValidKeys!0 (_keys!4262 newMap!16) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (_size!495 newMap!16)))))

(declare-fun b!103286 () Bool)

(declare-fun res!51587 () Bool)

(assert (=> b!103286 (=> (not res!51587) (not e!67311))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4317 (_ BitVec 32)) Bool)

(assert (=> b!103286 (= res!51587 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun b!103287 () Bool)

(assert (=> b!103287 (= e!67311 (arrayNoDuplicates!0 (_keys!4262 newMap!16) #b00000000000000000000000000000000 Nil!1590))))

(assert (= (and d!27781 res!51585) b!103285))

(assert (= (and b!103285 res!51586) b!103286))

(assert (= (and b!103286 res!51587) b!103287))

(declare-fun m!114189 () Bool)

(assert (=> d!27781 m!114189))

(declare-fun m!114191 () Bool)

(assert (=> b!103285 m!114191))

(declare-fun m!114193 () Bool)

(assert (=> b!103286 m!114193))

(declare-fun m!114195 () Bool)

(assert (=> b!103287 m!114195))

(assert (=> b!103066 d!27781))

(declare-fun d!27783 () Bool)

(assert (=> d!27783 (= (array_inv!1263 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvsge (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!103061 d!27783))

(declare-fun d!27785 () Bool)

(assert (=> d!27785 (= (array_inv!1264 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvsge (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!103061 d!27785))

(declare-fun d!27787 () Bool)

(assert (=> d!27787 (= (map!1279 newMap!16) (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bs!4247 () Bool)

(assert (= bs!4247 d!27787))

(declare-fun m!114197 () Bool)

(assert (=> bs!4247 m!114197))

(assert (=> b!103065 d!27787))

(declare-fun bm!10764 () Bool)

(declare-fun call!10773 () ListLongMap!1527)

(assert (=> bm!10764 (= call!10773 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun bm!10765 () Bool)

(declare-fun call!10770 () ListLongMap!1527)

(declare-fun call!10771 () ListLongMap!1527)

(assert (=> bm!10765 (= call!10770 call!10771)))

(declare-fun b!103330 () Bool)

(declare-fun e!67338 () Unit!3132)

(declare-fun lt!52638 () Unit!3132)

(assert (=> b!103330 (= e!67338 lt!52638)))

(declare-fun lt!52640 () ListLongMap!1527)

(assert (=> b!103330 (= lt!52640 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52645 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52645 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52624 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52624 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52642 () Unit!3132)

(declare-fun addStillContains!73 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3132)

(assert (=> b!103330 (= lt!52642 (addStillContains!73 lt!52640 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52624))))

(assert (=> b!103330 (contains!811 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52624)))

(declare-fun lt!52629 () Unit!3132)

(assert (=> b!103330 (= lt!52629 lt!52642)))

(declare-fun lt!52634 () ListLongMap!1527)

(assert (=> b!103330 (= lt!52634 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52632 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52632 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52636 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52636 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52625 () Unit!3132)

(declare-fun addApplyDifferent!73 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3132)

(assert (=> b!103330 (= lt!52625 (addApplyDifferent!73 lt!52634 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52636))))

(assert (=> b!103330 (= (apply!97 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52636) (apply!97 lt!52634 lt!52636))))

(declare-fun lt!52644 () Unit!3132)

(assert (=> b!103330 (= lt!52644 lt!52625)))

(declare-fun lt!52639 () ListLongMap!1527)

(assert (=> b!103330 (= lt!52639 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52637 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52637 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52627 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52627 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52643 () Unit!3132)

(assert (=> b!103330 (= lt!52643 (addApplyDifferent!73 lt!52639 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52627))))

(assert (=> b!103330 (= (apply!97 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52627) (apply!97 lt!52639 lt!52627))))

(declare-fun lt!52626 () Unit!3132)

(assert (=> b!103330 (= lt!52626 lt!52643)))

(declare-fun lt!52633 () ListLongMap!1527)

(assert (=> b!103330 (= lt!52633 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52635 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52635 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52631 () (_ BitVec 64))

(assert (=> b!103330 (= lt!52631 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!103330 (= lt!52638 (addApplyDifferent!73 lt!52633 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52631))))

(assert (=> b!103330 (= (apply!97 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52631) (apply!97 lt!52633 lt!52631))))

(declare-fun b!103331 () Bool)

(declare-fun e!67342 () Bool)

(declare-fun call!10767 () Bool)

(assert (=> b!103331 (= e!67342 (not call!10767))))

(declare-fun b!103332 () Bool)

(declare-fun e!67343 () Bool)

(declare-fun lt!52641 () ListLongMap!1527)

(assert (=> b!103332 (= e!67343 (= (apply!97 lt!52641 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103332 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!103332 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103333 () Bool)

(declare-fun e!67344 () ListLongMap!1527)

(declare-fun call!10768 () ListLongMap!1527)

(assert (=> b!103333 (= e!67344 call!10768)))

(declare-fun b!103334 () Bool)

(declare-fun Unit!3141 () Unit!3132)

(assert (=> b!103334 (= e!67338 Unit!3141)))

(declare-fun b!103335 () Bool)

(declare-fun e!67341 () ListLongMap!1527)

(assert (=> b!103335 (= e!67341 call!10770)))

(declare-fun b!103337 () Bool)

(declare-fun e!67339 () Bool)

(declare-fun call!10769 () Bool)

(assert (=> b!103337 (= e!67339 (not call!10769))))

(declare-fun b!103338 () Bool)

(declare-fun e!67340 () Bool)

(assert (=> b!103338 (= e!67340 e!67343)))

(declare-fun res!51608 () Bool)

(assert (=> b!103338 (=> (not res!51608) (not e!67343))))

(assert (=> b!103338 (= res!51608 (contains!811 lt!52641 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103338 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103339 () Bool)

(declare-fun e!67347 () Bool)

(assert (=> b!103339 (= e!67347 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103340 () Bool)

(declare-fun res!51606 () Bool)

(declare-fun e!67345 () Bool)

(assert (=> b!103340 (=> (not res!51606) (not e!67345))))

(assert (=> b!103340 (= res!51606 e!67339)))

(declare-fun c!17768 () Bool)

(assert (=> b!103340 (= c!17768 (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!17773 () Bool)

(declare-fun c!17771 () Bool)

(declare-fun bm!10766 () Bool)

(declare-fun call!10772 () ListLongMap!1527)

(assert (=> bm!10766 (= call!10772 (+!137 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103341 () Bool)

(declare-fun e!67346 () ListLongMap!1527)

(assert (=> b!103341 (= e!67346 e!67344)))

(assert (=> b!103341 (= c!17773 (and (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103342 () Bool)

(assert (=> b!103342 (= e!67341 call!10768)))

(declare-fun bm!10767 () Bool)

(assert (=> bm!10767 (= call!10768 call!10772)))

(declare-fun b!103343 () Bool)

(declare-fun c!17772 () Bool)

(assert (=> b!103343 (= c!17772 (and (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103343 (= e!67344 e!67341)))

(declare-fun b!103344 () Bool)

(assert (=> b!103344 (= e!67346 (+!137 call!10772 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun bm!10768 () Bool)

(assert (=> bm!10768 (= call!10771 call!10773)))

(declare-fun b!103345 () Bool)

(declare-fun res!51614 () Bool)

(assert (=> b!103345 (=> (not res!51614) (not e!67345))))

(assert (=> b!103345 (= res!51614 e!67340)))

(declare-fun res!51610 () Bool)

(assert (=> b!103345 (=> res!51610 e!67340)))

(declare-fun e!67348 () Bool)

(assert (=> b!103345 (= res!51610 (not e!67348))))

(declare-fun res!51609 () Bool)

(assert (=> b!103345 (=> (not res!51609) (not e!67348))))

(assert (=> b!103345 (= res!51609 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103346 () Bool)

(declare-fun e!67350 () Bool)

(assert (=> b!103346 (= e!67350 (= (apply!97 lt!52641 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun bm!10769 () Bool)

(assert (=> bm!10769 (= call!10769 (contains!811 lt!52641 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10770 () Bool)

(assert (=> bm!10770 (= call!10767 (contains!811 lt!52641 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103336 () Bool)

(assert (=> b!103336 (= e!67342 e!67350)))

(declare-fun res!51612 () Bool)

(assert (=> b!103336 (= res!51612 call!10767)))

(assert (=> b!103336 (=> (not res!51612) (not e!67350))))

(declare-fun d!27789 () Bool)

(assert (=> d!27789 e!67345))

(declare-fun res!51613 () Bool)

(assert (=> d!27789 (=> (not res!51613) (not e!67345))))

(assert (=> d!27789 (= res!51613 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun lt!52628 () ListLongMap!1527)

(assert (=> d!27789 (= lt!52641 lt!52628)))

(declare-fun lt!52630 () Unit!3132)

(assert (=> d!27789 (= lt!52630 e!67338)))

(declare-fun c!17770 () Bool)

(assert (=> d!27789 (= c!17770 e!67347)))

(declare-fun res!51611 () Bool)

(assert (=> d!27789 (=> (not res!51611) (not e!67347))))

(assert (=> d!27789 (= res!51611 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27789 (= lt!52628 e!67346)))

(assert (=> d!27789 (= c!17771 (and (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27789 (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27789 (= (getCurrentListMap!467 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) lt!52641)))

(declare-fun b!103347 () Bool)

(assert (=> b!103347 (= e!67348 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103348 () Bool)

(declare-fun e!67349 () Bool)

(assert (=> b!103348 (= e!67339 e!67349)))

(declare-fun res!51607 () Bool)

(assert (=> b!103348 (= res!51607 call!10769)))

(assert (=> b!103348 (=> (not res!51607) (not e!67349))))

(declare-fun b!103349 () Bool)

(assert (=> b!103349 (= e!67349 (= (apply!97 lt!52641 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103350 () Bool)

(assert (=> b!103350 (= e!67345 e!67342)))

(declare-fun c!17769 () Bool)

(assert (=> b!103350 (= c!17769 (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!27789 c!17771) b!103344))

(assert (= (and d!27789 (not c!17771)) b!103341))

(assert (= (and b!103341 c!17773) b!103333))

(assert (= (and b!103341 (not c!17773)) b!103343))

(assert (= (and b!103343 c!17772) b!103342))

(assert (= (and b!103343 (not c!17772)) b!103335))

(assert (= (or b!103342 b!103335) bm!10765))

(assert (= (or b!103333 bm!10765) bm!10768))

(assert (= (or b!103333 b!103342) bm!10767))

(assert (= (or b!103344 bm!10768) bm!10764))

(assert (= (or b!103344 bm!10767) bm!10766))

(assert (= (and d!27789 res!51611) b!103339))

(assert (= (and d!27789 c!17770) b!103330))

(assert (= (and d!27789 (not c!17770)) b!103334))

(assert (= (and d!27789 res!51613) b!103345))

(assert (= (and b!103345 res!51609) b!103347))

(assert (= (and b!103345 (not res!51610)) b!103338))

(assert (= (and b!103338 res!51608) b!103332))

(assert (= (and b!103345 res!51614) b!103340))

(assert (= (and b!103340 c!17768) b!103348))

(assert (= (and b!103340 (not c!17768)) b!103337))

(assert (= (and b!103348 res!51607) b!103349))

(assert (= (or b!103348 b!103337) bm!10769))

(assert (= (and b!103340 res!51606) b!103350))

(assert (= (and b!103350 c!17769) b!103336))

(assert (= (and b!103350 (not c!17769)) b!103331))

(assert (= (and b!103336 res!51612) b!103346))

(assert (= (or b!103336 b!103331) bm!10770))

(declare-fun b_lambda!4625 () Bool)

(assert (=> (not b_lambda!4625) (not b!103332)))

(assert (=> b!103332 t!5643))

(declare-fun b_and!6405 () Bool)

(assert (= b_and!6401 (and (=> t!5643 result!3411) b_and!6405)))

(assert (=> b!103332 t!5645))

(declare-fun b_and!6407 () Bool)

(assert (= b_and!6403 (and (=> t!5645 result!3415) b_and!6407)))

(declare-fun m!114199 () Bool)

(assert (=> b!103344 m!114199))

(assert (=> d!27789 m!113953))

(assert (=> bm!10764 m!113959))

(assert (=> b!103347 m!114103))

(assert (=> b!103347 m!114103))

(assert (=> b!103347 m!114105))

(declare-fun m!114201 () Bool)

(assert (=> bm!10770 m!114201))

(assert (=> b!103338 m!114103))

(assert (=> b!103338 m!114103))

(declare-fun m!114203 () Bool)

(assert (=> b!103338 m!114203))

(assert (=> b!103332 m!113945))

(assert (=> b!103332 m!114103))

(declare-fun m!114205 () Bool)

(assert (=> b!103332 m!114205))

(assert (=> b!103332 m!114103))

(assert (=> b!103332 m!114111))

(assert (=> b!103332 m!114111))

(assert (=> b!103332 m!113945))

(assert (=> b!103332 m!114113))

(declare-fun m!114207 () Bool)

(assert (=> bm!10766 m!114207))

(declare-fun m!114209 () Bool)

(assert (=> b!103349 m!114209))

(declare-fun m!114211 () Bool)

(assert (=> bm!10769 m!114211))

(declare-fun m!114213 () Bool)

(assert (=> b!103330 m!114213))

(declare-fun m!114215 () Bool)

(assert (=> b!103330 m!114215))

(declare-fun m!114217 () Bool)

(assert (=> b!103330 m!114217))

(assert (=> b!103330 m!114103))

(declare-fun m!114219 () Bool)

(assert (=> b!103330 m!114219))

(assert (=> b!103330 m!113959))

(declare-fun m!114221 () Bool)

(assert (=> b!103330 m!114221))

(declare-fun m!114223 () Bool)

(assert (=> b!103330 m!114223))

(declare-fun m!114225 () Bool)

(assert (=> b!103330 m!114225))

(declare-fun m!114227 () Bool)

(assert (=> b!103330 m!114227))

(declare-fun m!114229 () Bool)

(assert (=> b!103330 m!114229))

(declare-fun m!114231 () Bool)

(assert (=> b!103330 m!114231))

(assert (=> b!103330 m!114225))

(declare-fun m!114233 () Bool)

(assert (=> b!103330 m!114233))

(assert (=> b!103330 m!114219))

(declare-fun m!114235 () Bool)

(assert (=> b!103330 m!114235))

(assert (=> b!103330 m!114217))

(declare-fun m!114237 () Bool)

(assert (=> b!103330 m!114237))

(declare-fun m!114239 () Bool)

(assert (=> b!103330 m!114239))

(assert (=> b!103330 m!114229))

(declare-fun m!114241 () Bool)

(assert (=> b!103330 m!114241))

(assert (=> b!103339 m!114103))

(assert (=> b!103339 m!114103))

(assert (=> b!103339 m!114105))

(declare-fun m!114243 () Bool)

(assert (=> b!103346 m!114243))

(assert (=> b!103065 d!27789))

(declare-fun d!27791 () Bool)

(assert (=> d!27791 (= (array_inv!1263 (_keys!4262 newMap!16)) (bvsge (size!2302 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103053 d!27791))

(declare-fun d!27793 () Bool)

(assert (=> d!27793 (= (array_inv!1264 (_values!2543 newMap!16)) (bvsge (size!2303 (_values!2543 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103053 d!27793))

(declare-fun d!27795 () Bool)

(declare-fun e!67356 () Bool)

(assert (=> d!27795 e!67356))

(declare-fun res!51617 () Bool)

(assert (=> d!27795 (=> res!51617 e!67356)))

(declare-fun lt!52657 () Bool)

(assert (=> d!27795 (= res!51617 (not lt!52657))))

(declare-fun lt!52654 () Bool)

(assert (=> d!27795 (= lt!52657 lt!52654)))

(declare-fun lt!52655 () Unit!3132)

(declare-fun e!67355 () Unit!3132)

(assert (=> d!27795 (= lt!52655 e!67355)))

(declare-fun c!17776 () Bool)

(assert (=> d!27795 (= c!17776 lt!52654)))

(declare-fun containsKey!159 (List!1592 (_ BitVec 64)) Bool)

(assert (=> d!27795 (= lt!52654 (containsKey!159 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27795 (= (contains!811 lt!52449 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!52657)))

(declare-fun b!103357 () Bool)

(declare-fun lt!52656 () Unit!3132)

(assert (=> b!103357 (= e!67355 lt!52656)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!107 (List!1592 (_ BitVec 64)) Unit!3132)

(assert (=> b!103357 (= lt!52656 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun isDefined!108 (Option!162) Bool)

(assert (=> b!103357 (isDefined!108 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103358 () Bool)

(declare-fun Unit!3142 () Unit!3132)

(assert (=> b!103358 (= e!67355 Unit!3142)))

(declare-fun b!103359 () Bool)

(assert (=> b!103359 (= e!67356 (isDefined!108 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!27795 c!17776) b!103357))

(assert (= (and d!27795 (not c!17776)) b!103358))

(assert (= (and d!27795 (not res!51617)) b!103359))

(assert (=> d!27795 m!113915))

(declare-fun m!114245 () Bool)

(assert (=> d!27795 m!114245))

(assert (=> b!103357 m!113915))

(declare-fun m!114247 () Bool)

(assert (=> b!103357 m!114247))

(assert (=> b!103357 m!113915))

(declare-fun m!114249 () Bool)

(assert (=> b!103357 m!114249))

(assert (=> b!103357 m!114249))

(declare-fun m!114251 () Bool)

(assert (=> b!103357 m!114251))

(assert (=> b!103359 m!113915))

(assert (=> b!103359 m!114249))

(assert (=> b!103359 m!114249))

(assert (=> b!103359 m!114251))

(assert (=> b!103056 d!27795))

(declare-fun b!103444 () Bool)

(declare-fun e!67419 () Bool)

(declare-fun e!67405 () Bool)

(assert (=> b!103444 (= e!67419 e!67405)))

(declare-fun c!17814 () Bool)

(declare-fun lt!52716 () tuple2!2352)

(assert (=> b!103444 (= c!17814 (_1!1187 lt!52716))))

(declare-fun b!103445 () Bool)

(declare-fun res!51657 () Bool)

(declare-fun call!10840 () Bool)

(assert (=> b!103445 (= res!51657 call!10840)))

(declare-fun e!67401 () Bool)

(assert (=> b!103445 (=> (not res!51657) (not e!67401))))

(declare-fun b!103446 () Bool)

(declare-fun lt!52727 () Unit!3132)

(declare-fun lt!52728 () Unit!3132)

(assert (=> b!103446 (= lt!52727 lt!52728)))

(declare-fun call!10829 () ListLongMap!1527)

(declare-datatypes ((SeekEntryResult!252 0))(
  ( (MissingZero!252 (index!3155 (_ BitVec 32))) (Found!252 (index!3156 (_ BitVec 32))) (Intermediate!252 (undefined!1064 Bool) (index!3157 (_ BitVec 32)) (x!13494 (_ BitVec 32))) (Undefined!252) (MissingVacant!252 (index!3158 (_ BitVec 32))) )
))
(declare-fun lt!52724 () SeekEntryResult!252)

(assert (=> b!103446 (contains!811 call!10829 (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))

(declare-fun lt!52731 () array!4319)

(declare-fun lemmaValidKeyInArrayIsInListMap!106 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) Unit!3132)

(assert (=> b!103446 (= lt!52728 (lemmaValidKeyInArrayIsInListMap!106 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (defaultEntry!2560 newMap!16)))))

(assert (=> b!103446 (= lt!52731 (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))))

(declare-fun lt!52715 () Unit!3132)

(declare-fun lt!52718 () Unit!3132)

(assert (=> b!103446 (= lt!52715 lt!52718)))

(declare-fun call!10831 () ListLongMap!1527)

(declare-fun call!10830 () ListLongMap!1527)

(assert (=> b!103446 (= call!10831 call!10830)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3132)

(assert (=> b!103446 (= lt!52718 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52714 () Unit!3132)

(declare-fun e!67410 () Unit!3132)

(assert (=> b!103446 (= lt!52714 e!67410)))

(declare-fun c!17810 () Bool)

(declare-fun call!10842 () Bool)

(assert (=> b!103446 (= c!17810 call!10842)))

(declare-fun e!67416 () tuple2!2352)

(assert (=> b!103446 (= e!67416 (tuple2!2353 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (_size!495 newMap!16) (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (_vacant!495 newMap!16))))))

(declare-fun b!103447 () Bool)

(declare-fun e!67414 () Bool)

(declare-fun lt!52722 () SeekEntryResult!252)

(assert (=> b!103447 (= e!67414 ((_ is Undefined!252) lt!52722))))

(declare-fun b!103448 () Bool)

(declare-fun e!67403 () Bool)

(declare-fun call!10826 () Bool)

(assert (=> b!103448 (= e!67403 (not call!10826))))

(declare-fun c!17808 () Bool)

(declare-fun c!17811 () Bool)

(declare-fun lt!52735 () (_ BitVec 32))

(declare-fun bm!10819 () Bool)

(assert (=> bm!10819 (= call!10830 (getCurrentListMap!467 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10820 () Bool)

(declare-fun call!10835 () Unit!3132)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3132)

(assert (=> bm!10820 (= call!10835 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun b!103449 () Bool)

(declare-fun res!51655 () Bool)

(declare-fun e!67406 () Bool)

(assert (=> b!103449 (=> (not res!51655) (not e!67406))))

(assert (=> b!103449 (= res!51655 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!52722)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103450 () Bool)

(declare-fun res!51648 () Bool)

(assert (=> b!103450 (= res!51648 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!52722)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103450 (=> (not res!51648) (not e!67403))))

(declare-fun bm!10821 () Bool)

(declare-fun call!10825 () ListLongMap!1527)

(assert (=> bm!10821 (= call!10825 call!10831)))

(declare-fun b!103451 () Bool)

(declare-fun res!51651 () Bool)

(declare-fun call!10827 () Bool)

(assert (=> b!103451 (= res!51651 call!10827)))

(declare-fun e!67417 () Bool)

(assert (=> b!103451 (=> (not res!51651) (not e!67417))))

(declare-fun b!103452 () Bool)

(declare-fun res!51650 () Bool)

(declare-fun e!67408 () Bool)

(assert (=> b!103452 (=> (not res!51650) (not e!67408))))

(declare-fun call!10833 () Bool)

(assert (=> b!103452 (= res!51650 call!10833)))

(declare-fun e!67415 () Bool)

(assert (=> b!103452 (= e!67415 e!67408)))

(declare-fun call!10824 () Bool)

(declare-fun lt!52738 () SeekEntryResult!252)

(declare-fun bm!10822 () Bool)

(declare-fun lt!52730 () SeekEntryResult!252)

(declare-fun c!17812 () Bool)

(declare-fun lt!52736 () SeekEntryResult!252)

(declare-fun c!17805 () Bool)

(declare-fun c!17807 () Bool)

(declare-fun c!17815 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!10822 (= call!10824 (inRange!0 (ite c!17815 (ite c!17812 (index!3156 lt!52738) (ite c!17805 (index!3155 lt!52736) (index!3158 lt!52736))) (ite c!17810 (index!3156 lt!52730) (ite c!17807 (index!3155 lt!52722) (index!3158 lt!52722)))) (mask!6696 newMap!16)))))

(declare-fun b!103453 () Bool)

(declare-fun res!51647 () Bool)

(assert (=> b!103453 (=> (not res!51647) (not e!67406))))

(declare-fun call!10828 () Bool)

(assert (=> b!103453 (= res!51647 call!10828)))

(declare-fun e!67409 () Bool)

(assert (=> b!103453 (= e!67409 e!67406)))

(declare-fun bm!10823 () Bool)

(declare-fun call!10839 () ListLongMap!1527)

(assert (=> bm!10823 (= call!10829 call!10839)))

(declare-fun e!67413 () ListLongMap!1527)

(declare-fun bm!10824 () Bool)

(assert (=> bm!10824 (= call!10831 (+!137 e!67413 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun c!17813 () Bool)

(assert (=> bm!10824 (= c!17813 c!17808)))

(declare-fun bm!10825 () Bool)

(declare-fun call!10823 () ListLongMap!1527)

(assert (=> bm!10825 (= call!10823 (map!1279 newMap!16))))

(declare-fun c!17806 () Bool)

(declare-fun bm!10826 () Bool)

(declare-fun call!10832 () tuple2!2352)

(declare-fun updateHelperNewKey!46 (LongMapFixedSize!892 (_ BitVec 64) V!3209 (_ BitVec 32)) tuple2!2352)

(assert (=> bm!10826 (= call!10832 (updateHelperNewKey!46 newMap!16 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))

(declare-fun b!103454 () Bool)

(declare-fun e!67404 () Unit!3132)

(declare-fun Unit!3143 () Unit!3132)

(assert (=> b!103454 (= e!67404 Unit!3143)))

(declare-fun lt!52720 () Unit!3132)

(assert (=> b!103454 (= lt!52720 call!10835)))

(declare-fun call!10841 () SeekEntryResult!252)

(assert (=> b!103454 (= lt!52738 call!10841)))

(declare-fun res!51653 () Bool)

(assert (=> b!103454 (= res!51653 ((_ is Found!252) lt!52738))))

(assert (=> b!103454 (=> (not res!51653) (not e!67401))))

(assert (=> b!103454 e!67401))

(declare-fun lt!52713 () Unit!3132)

(assert (=> b!103454 (= lt!52713 lt!52720)))

(assert (=> b!103454 false))

(declare-fun d!27797 () Bool)

(assert (=> d!27797 e!67419))

(declare-fun res!51659 () Bool)

(assert (=> d!27797 (=> (not res!51659) (not e!67419))))

(assert (=> d!27797 (= res!51659 (valid!418 (_2!1187 lt!52716)))))

(declare-fun e!67402 () tuple2!2352)

(assert (=> d!27797 (= lt!52716 e!67402)))

(assert (=> d!27797 (= c!17808 (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvneg (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!27797 (valid!418 newMap!16)))

(assert (=> d!27797 (= (update!158 newMap!16 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447) lt!52716)))

(declare-fun bm!10827 () Bool)

(declare-fun call!10843 () ListLongMap!1527)

(assert (=> bm!10827 (= call!10843 call!10830)))

(declare-fun call!10844 () Unit!3132)

(declare-fun bm!10828 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3132)

(assert (=> bm!10828 (= call!10844 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun b!103455 () Bool)

(assert (=> b!103455 (= e!67401 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52738)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103456 () Bool)

(declare-fun call!10845 () ListLongMap!1527)

(assert (=> b!103456 (= e!67405 (= call!10845 call!10823))))

(declare-fun b!103457 () Bool)

(declare-fun e!67412 () Bool)

(assert (=> b!103457 (= e!67412 ((_ is Undefined!252) lt!52736))))

(declare-fun bm!10829 () Bool)

(assert (=> bm!10829 (= call!10828 call!10827)))

(declare-fun b!103458 () Bool)

(declare-fun c!17816 () Bool)

(assert (=> b!103458 (= c!17816 ((_ is MissingVacant!252) lt!52722))))

(assert (=> b!103458 (= e!67409 e!67414)))

(declare-fun b!103459 () Bool)

(declare-fun call!10822 () Bool)

(assert (=> b!103459 (= e!67408 (not call!10822))))

(declare-fun b!103460 () Bool)

(assert (=> b!103460 (= e!67406 (not call!10826))))

(declare-fun bm!10830 () Bool)

(declare-fun call!10838 () SeekEntryResult!252)

(assert (=> bm!10830 (= call!10841 call!10838)))

(declare-fun lt!52712 () (_ BitVec 32))

(declare-fun bm!10831 () Bool)

(assert (=> bm!10831 (= call!10839 (getCurrentListMap!467 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10832 () Bool)

(declare-fun call!10837 () Bool)

(assert (=> bm!10832 (= call!10822 call!10837)))

(declare-fun b!103461 () Bool)

(declare-fun lt!52717 () tuple2!2352)

(assert (=> b!103461 (= lt!52717 call!10832)))

(assert (=> b!103461 (= e!67416 (tuple2!2353 (_1!1187 lt!52717) (_2!1187 lt!52717)))))

(declare-fun bm!10833 () Bool)

(declare-fun call!10836 () SeekEntryResult!252)

(assert (=> bm!10833 (= call!10836 call!10838)))

(declare-fun b!103462 () Bool)

(declare-fun e!67420 () ListLongMap!1527)

(assert (=> b!103462 (= e!67420 call!10829)))

(declare-fun b!103463 () Bool)

(declare-fun lt!52723 () Unit!3132)

(assert (=> b!103463 (= lt!52723 e!67404)))

(assert (=> b!103463 (= c!17812 call!10842)))

(declare-fun e!67411 () tuple2!2352)

(assert (=> b!103463 (= e!67411 (tuple2!2353 false newMap!16))))

(declare-fun b!103464 () Bool)

(declare-fun c!17817 () Bool)

(assert (=> b!103464 (= c!17817 ((_ is MissingVacant!252) lt!52736))))

(assert (=> b!103464 (= e!67415 e!67412)))

(declare-fun bm!10834 () Bool)

(assert (=> bm!10834 (= call!10826 call!10837)))

(declare-fun bm!10835 () Bool)

(assert (=> bm!10835 (= call!10837 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103465 () Bool)

(declare-fun lt!52725 () Unit!3132)

(declare-fun lt!52726 () Unit!3132)

(assert (=> b!103465 (= lt!52725 lt!52726)))

(declare-fun call!10834 () ListLongMap!1527)

(assert (=> b!103465 (= call!10825 call!10834)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3132)

(assert (=> b!103465 (= lt!52726 (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52712 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52447 (defaultEntry!2560 newMap!16)))))

(assert (=> b!103465 (= lt!52712 (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000010))))

(declare-fun e!67421 () tuple2!2352)

(assert (=> b!103465 (= e!67421 (tuple2!2353 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6696 newMap!16) (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) (zeroValue!2437 newMap!16) lt!52447 (_size!495 newMap!16) (_keys!4262 newMap!16) (_values!2543 newMap!16) (_vacant!495 newMap!16))))))

(declare-fun b!103466 () Bool)

(declare-fun lt!52719 () Unit!3132)

(declare-fun lt!52737 () Unit!3132)

(assert (=> b!103466 (= lt!52719 lt!52737)))

(assert (=> b!103466 (= call!10825 call!10843)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!46 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3132)

(assert (=> b!103466 (= lt!52737 (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52735 (zeroValue!2437 newMap!16) lt!52447 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)))))

(assert (=> b!103466 (= lt!52735 (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!103466 (= e!67421 (tuple2!2353 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6696 newMap!16) (bvor (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) lt!52447 (minValue!2437 newMap!16) (_size!495 newMap!16) (_keys!4262 newMap!16) (_values!2543 newMap!16) (_vacant!495 newMap!16))))))

(declare-fun b!103467 () Bool)

(assert (=> b!103467 (= e!67414 e!67403)))

(declare-fun res!51652 () Bool)

(assert (=> b!103467 (= res!51652 call!10828)))

(assert (=> b!103467 (=> (not res!51652) (not e!67403))))

(declare-fun bm!10836 () Bool)

(assert (=> bm!10836 (= call!10845 (map!1279 (_2!1187 lt!52716)))))

(declare-fun bm!10837 () Bool)

(declare-fun c!17818 () Bool)

(assert (=> bm!10837 (= c!17818 c!17815)))

(assert (=> bm!10837 (= call!10842 (contains!811 e!67420 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103468 () Bool)

(declare-fun res!51649 () Bool)

(assert (=> b!103468 (= res!51649 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!52736)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67422 () Bool)

(assert (=> b!103468 (=> (not res!51649) (not e!67422))))

(declare-fun b!103469 () Bool)

(assert (=> b!103469 (= c!17806 ((_ is MissingVacant!252) lt!52724))))

(declare-fun e!67407 () tuple2!2352)

(assert (=> b!103469 (= e!67411 e!67407)))

(declare-fun b!103470 () Bool)

(assert (=> b!103470 (= e!67417 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52730)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun bm!10838 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4317 (_ BitVec 32)) SeekEntryResult!252)

(assert (=> bm!10838 (= call!10838 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun b!103471 () Bool)

(assert (=> b!103471 (= e!67413 (ite c!17811 call!10834 call!10843))))

(declare-fun e!67418 () Bool)

(declare-fun b!103472 () Bool)

(assert (=> b!103472 (= e!67418 (= call!10845 (+!137 call!10823 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun bm!10839 () Bool)

(assert (=> bm!10839 (= call!10833 call!10840)))

(declare-fun b!103473 () Bool)

(declare-fun res!51646 () Bool)

(assert (=> b!103473 (=> (not res!51646) (not e!67408))))

(assert (=> b!103473 (= res!51646 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!52736)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103474 () Bool)

(declare-fun lt!52734 () Unit!3132)

(assert (=> b!103474 (= e!67410 lt!52734)))

(assert (=> b!103474 (= lt!52734 call!10835)))

(assert (=> b!103474 (= lt!52730 call!10836)))

(declare-fun res!51656 () Bool)

(assert (=> b!103474 (= res!51656 ((_ is Found!252) lt!52730))))

(assert (=> b!103474 (=> (not res!51656) (not e!67417))))

(assert (=> b!103474 e!67417))

(declare-fun b!103475 () Bool)

(assert (=> b!103475 (= e!67407 e!67416)))

(declare-fun c!17809 () Bool)

(assert (=> b!103475 (= c!17809 ((_ is MissingZero!252) lt!52724))))

(declare-fun bm!10840 () Bool)

(assert (=> bm!10840 (= call!10827 call!10824)))

(declare-fun b!103476 () Bool)

(assert (=> b!103476 (= e!67402 e!67421)))

(assert (=> b!103476 (= c!17811 (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103477 () Bool)

(assert (=> b!103477 (= e!67402 e!67411)))

(assert (=> b!103477 (= lt!52724 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(assert (=> b!103477 (= c!17815 ((_ is Undefined!252) lt!52724))))

(declare-fun b!103478 () Bool)

(assert (=> b!103478 (= e!67422 (not call!10822))))

(declare-fun b!103479 () Bool)

(declare-fun lt!52721 () Unit!3132)

(assert (=> b!103479 (= e!67404 lt!52721)))

(assert (=> b!103479 (= lt!52721 call!10844)))

(assert (=> b!103479 (= lt!52736 call!10841)))

(assert (=> b!103479 (= c!17805 ((_ is MissingZero!252) lt!52736))))

(assert (=> b!103479 e!67415))

(declare-fun b!103480 () Bool)

(declare-fun Unit!3144 () Unit!3132)

(assert (=> b!103480 (= e!67410 Unit!3144)))

(declare-fun lt!52733 () Unit!3132)

(assert (=> b!103480 (= lt!52733 call!10844)))

(assert (=> b!103480 (= lt!52722 call!10836)))

(assert (=> b!103480 (= c!17807 ((_ is MissingZero!252) lt!52722))))

(assert (=> b!103480 e!67409))

(declare-fun lt!52729 () Unit!3132)

(assert (=> b!103480 (= lt!52729 lt!52733)))

(assert (=> b!103480 false))

(declare-fun b!103481 () Bool)

(declare-fun lt!52732 () tuple2!2352)

(assert (=> b!103481 (= e!67407 (tuple2!2353 (_1!1187 lt!52732) (_2!1187 lt!52732)))))

(assert (=> b!103481 (= lt!52732 call!10832)))

(declare-fun b!103482 () Bool)

(assert (=> b!103482 (= e!67420 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10841 () Bool)

(assert (=> bm!10841 (= call!10834 call!10839)))

(declare-fun bm!10842 () Bool)

(assert (=> bm!10842 (= call!10840 call!10824)))

(declare-fun b!103483 () Bool)

(assert (=> b!103483 (= e!67413 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun b!103484 () Bool)

(assert (=> b!103484 (= e!67405 e!67418)))

(declare-fun res!51654 () Bool)

(assert (=> b!103484 (= res!51654 (contains!811 call!10845 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103484 (=> (not res!51654) (not e!67418))))

(declare-fun b!103485 () Bool)

(assert (=> b!103485 (= e!67412 e!67422)))

(declare-fun res!51658 () Bool)

(assert (=> b!103485 (= res!51658 call!10833)))

(assert (=> b!103485 (=> (not res!51658) (not e!67422))))

(assert (= (and d!27797 c!17808) b!103476))

(assert (= (and d!27797 (not c!17808)) b!103477))

(assert (= (and b!103476 c!17811) b!103466))

(assert (= (and b!103476 (not c!17811)) b!103465))

(assert (= (or b!103466 b!103465) bm!10841))

(assert (= (or b!103466 b!103465) bm!10827))

(assert (= (or b!103466 b!103465) bm!10821))

(assert (= (and b!103477 c!17815) b!103463))

(assert (= (and b!103477 (not c!17815)) b!103469))

(assert (= (and b!103463 c!17812) b!103454))

(assert (= (and b!103463 (not c!17812)) b!103479))

(assert (= (and b!103454 res!51653) b!103445))

(assert (= (and b!103445 res!51657) b!103455))

(assert (= (and b!103479 c!17805) b!103452))

(assert (= (and b!103479 (not c!17805)) b!103464))

(assert (= (and b!103452 res!51650) b!103473))

(assert (= (and b!103473 res!51646) b!103459))

(assert (= (and b!103464 c!17817) b!103485))

(assert (= (and b!103464 (not c!17817)) b!103457))

(assert (= (and b!103485 res!51658) b!103468))

(assert (= (and b!103468 res!51649) b!103478))

(assert (= (or b!103452 b!103485) bm!10839))

(assert (= (or b!103459 b!103478) bm!10832))

(assert (= (or b!103445 bm!10839) bm!10842))

(assert (= (or b!103454 b!103479) bm!10830))

(assert (= (and b!103469 c!17806) b!103481))

(assert (= (and b!103469 (not c!17806)) b!103475))

(assert (= (and b!103475 c!17809) b!103461))

(assert (= (and b!103475 (not c!17809)) b!103446))

(assert (= (and b!103446 c!17810) b!103474))

(assert (= (and b!103446 (not c!17810)) b!103480))

(assert (= (and b!103474 res!51656) b!103451))

(assert (= (and b!103451 res!51651) b!103470))

(assert (= (and b!103480 c!17807) b!103453))

(assert (= (and b!103480 (not c!17807)) b!103458))

(assert (= (and b!103453 res!51647) b!103449))

(assert (= (and b!103449 res!51655) b!103460))

(assert (= (and b!103458 c!17816) b!103467))

(assert (= (and b!103458 (not c!17816)) b!103447))

(assert (= (and b!103467 res!51652) b!103450))

(assert (= (and b!103450 res!51648) b!103448))

(assert (= (or b!103453 b!103467) bm!10829))

(assert (= (or b!103460 b!103448) bm!10834))

(assert (= (or b!103451 bm!10829) bm!10840))

(assert (= (or b!103474 b!103480) bm!10833))

(assert (= (or b!103481 b!103461) bm!10826))

(assert (= (or bm!10842 bm!10840) bm!10822))

(assert (= (or b!103479 b!103480) bm!10828))

(assert (= (or bm!10832 bm!10834) bm!10835))

(assert (= (or b!103463 b!103446) bm!10823))

(assert (= (or bm!10830 bm!10833) bm!10838))

(assert (= (or b!103454 b!103474) bm!10820))

(assert (= (or b!103463 b!103446) bm!10837))

(assert (= (and bm!10837 c!17818) b!103462))

(assert (= (and bm!10837 (not c!17818)) b!103482))

(assert (= (or bm!10827 b!103446) bm!10819))

(assert (= (or bm!10841 bm!10823) bm!10831))

(assert (= (or bm!10821 b!103446) bm!10824))

(assert (= (and bm!10824 c!17813) b!103471))

(assert (= (and bm!10824 (not c!17813)) b!103483))

(assert (= (and d!27797 res!51659) b!103444))

(assert (= (and b!103444 c!17814) b!103484))

(assert (= (and b!103444 (not c!17814)) b!103456))

(assert (= (and b!103484 res!51654) b!103472))

(assert (= (or b!103472 b!103456) bm!10825))

(assert (= (or b!103484 b!103472 b!103456) bm!10836))

(declare-fun m!114253 () Bool)

(assert (=> b!103450 m!114253))

(assert (=> bm!10826 m!113915))

(declare-fun m!114255 () Bool)

(assert (=> bm!10826 m!114255))

(declare-fun m!114257 () Bool)

(assert (=> b!103446 m!114257))

(declare-fun m!114259 () Bool)

(assert (=> b!103446 m!114259))

(declare-fun m!114261 () Bool)

(assert (=> b!103446 m!114261))

(assert (=> b!103446 m!113915))

(declare-fun m!114263 () Bool)

(assert (=> b!103446 m!114263))

(assert (=> b!103446 m!114261))

(declare-fun m!114265 () Bool)

(assert (=> b!103446 m!114265))

(declare-fun m!114267 () Bool)

(assert (=> bm!10824 m!114267))

(assert (=> bm!10820 m!113915))

(declare-fun m!114269 () Bool)

(assert (=> bm!10820 m!114269))

(assert (=> bm!10828 m!113915))

(declare-fun m!114271 () Bool)

(assert (=> bm!10828 m!114271))

(declare-fun m!114273 () Bool)

(assert (=> b!103470 m!114273))

(declare-fun m!114275 () Bool)

(assert (=> b!103465 m!114275))

(assert (=> b!103483 m!114197))

(assert (=> bm!10835 m!113915))

(declare-fun m!114277 () Bool)

(assert (=> bm!10835 m!114277))

(assert (=> b!103477 m!113915))

(declare-fun m!114279 () Bool)

(assert (=> b!103477 m!114279))

(declare-fun m!114281 () Bool)

(assert (=> bm!10831 m!114281))

(assert (=> bm!10838 m!113915))

(assert (=> bm!10838 m!114279))

(declare-fun m!114283 () Bool)

(assert (=> b!103466 m!114283))

(declare-fun m!114285 () Bool)

(assert (=> b!103468 m!114285))

(declare-fun m!114287 () Bool)

(assert (=> b!103449 m!114287))

(declare-fun m!114289 () Bool)

(assert (=> b!103473 m!114289))

(assert (=> bm!10837 m!113915))

(declare-fun m!114291 () Bool)

(assert (=> bm!10837 m!114291))

(assert (=> bm!10825 m!113921))

(declare-fun m!114293 () Bool)

(assert (=> bm!10822 m!114293))

(assert (=> b!103482 m!114197))

(declare-fun m!114295 () Bool)

(assert (=> b!103455 m!114295))

(declare-fun m!114297 () Bool)

(assert (=> d!27797 m!114297))

(assert (=> d!27797 m!113965))

(declare-fun m!114299 () Bool)

(assert (=> bm!10836 m!114299))

(declare-fun m!114301 () Bool)

(assert (=> b!103472 m!114301))

(assert (=> b!103484 m!113915))

(declare-fun m!114303 () Bool)

(assert (=> b!103484 m!114303))

(assert (=> bm!10819 m!114259))

(declare-fun m!114305 () Bool)

(assert (=> bm!10819 m!114305))

(assert (=> b!103056 d!27797))

(declare-fun condMapEmpty!3913 () Bool)

(declare-fun mapDefault!3913 () ValueCell!992)

(assert (=> mapNonEmpty!3898 (= condMapEmpty!3913 (= mapRest!3897 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3913)))))

(declare-fun e!67428 () Bool)

(declare-fun mapRes!3913 () Bool)

(assert (=> mapNonEmpty!3898 (= tp!9841 (and e!67428 mapRes!3913))))

(declare-fun b!103493 () Bool)

(assert (=> b!103493 (= e!67428 tp_is_empty!2671)))

(declare-fun b!103492 () Bool)

(declare-fun e!67427 () Bool)

(assert (=> b!103492 (= e!67427 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3913 () Bool)

(assert (=> mapIsEmpty!3913 mapRes!3913))

(declare-fun mapNonEmpty!3913 () Bool)

(declare-fun tp!9871 () Bool)

(assert (=> mapNonEmpty!3913 (= mapRes!3913 (and tp!9871 e!67427))))

(declare-fun mapValue!3913 () ValueCell!992)

(declare-fun mapKey!3913 () (_ BitVec 32))

(declare-fun mapRest!3913 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3913 (= mapRest!3897 (store mapRest!3913 mapKey!3913 mapValue!3913))))

(assert (= (and mapNonEmpty!3898 condMapEmpty!3913) mapIsEmpty!3913))

(assert (= (and mapNonEmpty!3898 (not condMapEmpty!3913)) mapNonEmpty!3913))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!992) mapValue!3913)) b!103492))

(assert (= (and mapNonEmpty!3898 ((_ is ValueCellFull!992) mapDefault!3913)) b!103493))

(declare-fun m!114307 () Bool)

(assert (=> mapNonEmpty!3913 m!114307))

(declare-fun condMapEmpty!3914 () Bool)

(declare-fun mapDefault!3914 () ValueCell!992)

(assert (=> mapNonEmpty!3897 (= condMapEmpty!3914 (= mapRest!3898 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3914)))))

(declare-fun e!67430 () Bool)

(declare-fun mapRes!3914 () Bool)

(assert (=> mapNonEmpty!3897 (= tp!9844 (and e!67430 mapRes!3914))))

(declare-fun b!103495 () Bool)

(assert (=> b!103495 (= e!67430 tp_is_empty!2671)))

(declare-fun b!103494 () Bool)

(declare-fun e!67429 () Bool)

(assert (=> b!103494 (= e!67429 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3914 () Bool)

(assert (=> mapIsEmpty!3914 mapRes!3914))

(declare-fun mapNonEmpty!3914 () Bool)

(declare-fun tp!9872 () Bool)

(assert (=> mapNonEmpty!3914 (= mapRes!3914 (and tp!9872 e!67429))))

(declare-fun mapKey!3914 () (_ BitVec 32))

(declare-fun mapValue!3914 () ValueCell!992)

(declare-fun mapRest!3914 () (Array (_ BitVec 32) ValueCell!992))

(assert (=> mapNonEmpty!3914 (= mapRest!3898 (store mapRest!3914 mapKey!3914 mapValue!3914))))

(assert (= (and mapNonEmpty!3897 condMapEmpty!3914) mapIsEmpty!3914))

(assert (= (and mapNonEmpty!3897 (not condMapEmpty!3914)) mapNonEmpty!3914))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!992) mapValue!3914)) b!103494))

(assert (= (and mapNonEmpty!3897 ((_ is ValueCellFull!992) mapDefault!3914)) b!103495))

(declare-fun m!114309 () Bool)

(assert (=> mapNonEmpty!3914 m!114309))

(declare-fun b_lambda!4627 () Bool)

(assert (= b_lambda!4621 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4627)))

(declare-fun b_lambda!4629 () Bool)

(assert (= b_lambda!4623 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4629)))

(declare-fun b_lambda!4631 () Bool)

(assert (= b_lambda!4625 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4631)))

(check-sat (not b!103483) (not bm!10819) (not d!27795) (not b!103274) (not b!103332) (not d!27789) tp_is_empty!2671 (not b!103349) (not b!103330) (not bm!10764) (not d!27755) (not b!103208) (not d!27757) (not b!103347) (not b!103238) (not bm!10838) (not d!27781) (not bm!10822) (not b!103276) (not b!103465) (not bm!10746) (not b_lambda!4631) (not b_lambda!4619) (not b!103240) (not b!103250) (not d!27761) (not b!103477) (not bm!10769) (not bm!10835) (not bm!10820) (not d!27771) (not bm!10836) (not b!103357) (not b!103472) (not bm!10824) (not b!103287) (not bm!10825) (not mapNonEmpty!3913) (not b!103286) (not b_next!2509) (not bm!10766) (not b!103278) (not d!27765) (not d!27763) (not b!103482) (not bm!10770) (not bm!10749) (not b!103359) (not b!103262) (not b!103246) (not d!27777) (not b!103339) (not d!27769) (not b!103234) (not b!103466) (not bm!10826) (not b!103203) (not b!103285) (not d!27797) (not bm!10837) (not d!27759) (not bm!10831) (not b!103236) (not b!103237) (not mapNonEmpty!3914) (not b!103244) (not b!103248) (not d!27787) (not b!103446) (not b!103247) (not b!103338) (not b!103257) (not b!103346) (not b_lambda!4629) (not b!103242) b_and!6407 (not d!27773) (not b!103249) (not b!103202) (not b!103209) (not b!103241) (not b!103484) (not b_next!2511) (not b!103251) (not b_lambda!4627) (not b!103344) b_and!6405 (not bm!10828))
(check-sat b_and!6405 b_and!6407 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun d!27799 () Bool)

(assert (=> d!27799 (= (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103276 d!27799))

(declare-fun d!27801 () Bool)

(declare-fun e!67432 () Bool)

(assert (=> d!27801 e!67432))

(declare-fun res!51660 () Bool)

(assert (=> d!27801 (=> res!51660 e!67432)))

(declare-fun lt!52742 () Bool)

(assert (=> d!27801 (= res!51660 (not lt!52742))))

(declare-fun lt!52739 () Bool)

(assert (=> d!27801 (= lt!52742 lt!52739)))

(declare-fun lt!52740 () Unit!3132)

(declare-fun e!67431 () Unit!3132)

(assert (=> d!27801 (= lt!52740 e!67431)))

(declare-fun c!17819 () Bool)

(assert (=> d!27801 (= c!17819 lt!52739)))

(assert (=> d!27801 (= lt!52739 (containsKey!159 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27801 (= (contains!811 call!10845 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!52742)))

(declare-fun b!103496 () Bool)

(declare-fun lt!52741 () Unit!3132)

(assert (=> b!103496 (= e!67431 lt!52741)))

(assert (=> b!103496 (= lt!52741 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103496 (isDefined!108 (getValueByKey!156 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103497 () Bool)

(declare-fun Unit!3145 () Unit!3132)

(assert (=> b!103497 (= e!67431 Unit!3145)))

(declare-fun b!103498 () Bool)

(assert (=> b!103498 (= e!67432 (isDefined!108 (getValueByKey!156 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!27801 c!17819) b!103496))

(assert (= (and d!27801 (not c!17819)) b!103497))

(assert (= (and d!27801 (not res!51660)) b!103498))

(assert (=> d!27801 m!113915))

(declare-fun m!114311 () Bool)

(assert (=> d!27801 m!114311))

(assert (=> b!103496 m!113915))

(declare-fun m!114313 () Bool)

(assert (=> b!103496 m!114313))

(assert (=> b!103496 m!113915))

(declare-fun m!114315 () Bool)

(assert (=> b!103496 m!114315))

(assert (=> b!103496 m!114315))

(declare-fun m!114317 () Bool)

(assert (=> b!103496 m!114317))

(assert (=> b!103498 m!113915))

(assert (=> b!103498 m!114315))

(assert (=> b!103498 m!114315))

(assert (=> b!103498 m!114317))

(assert (=> b!103484 d!27801))

(assert (=> d!27789 d!27767))

(declare-fun d!27803 () Bool)

(assert (=> d!27803 (= (get!1329 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2875 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103202 d!27803))

(declare-fun b!103515 () Bool)

(declare-fun e!67442 () Bool)

(declare-fun e!67441 () Bool)

(assert (=> b!103515 (= e!67442 e!67441)))

(declare-fun res!51670 () Bool)

(declare-fun call!10850 () Bool)

(assert (=> b!103515 (= res!51670 call!10850)))

(assert (=> b!103515 (=> (not res!51670) (not e!67441))))

(declare-fun b!103516 () Bool)

(declare-fun res!51672 () Bool)

(declare-fun e!67444 () Bool)

(assert (=> b!103516 (=> (not res!51672) (not e!67444))))

(declare-fun lt!52748 () SeekEntryResult!252)

(assert (=> b!103516 (= res!51672 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!52748)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103516 (and (bvsge (index!3158 lt!52748) #b00000000000000000000000000000000) (bvslt (index!3158 lt!52748) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103517 () Bool)

(assert (=> b!103517 (and (bvsge (index!3155 lt!52748) #b00000000000000000000000000000000) (bvslt (index!3155 lt!52748) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun res!51669 () Bool)

(assert (=> b!103517 (= res!51669 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!52748)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103517 (=> (not res!51669) (not e!67441))))

(declare-fun b!103518 () Bool)

(declare-fun e!67443 () Bool)

(assert (=> b!103518 (= e!67442 e!67443)))

(declare-fun c!17825 () Bool)

(assert (=> b!103518 (= c!17825 ((_ is MissingVacant!252) lt!52748))))

(declare-fun bm!10848 () Bool)

(declare-fun c!17824 () Bool)

(assert (=> bm!10848 (= call!10850 (inRange!0 (ite c!17824 (index!3155 lt!52748) (index!3158 lt!52748)) (mask!6696 newMap!16)))))

(declare-fun b!103519 () Bool)

(declare-fun call!10851 () Bool)

(assert (=> b!103519 (= e!67441 (not call!10851))))

(declare-fun b!103520 () Bool)

(assert (=> b!103520 (= e!67444 (not call!10851))))

(declare-fun b!103521 () Bool)

(declare-fun res!51671 () Bool)

(assert (=> b!103521 (=> (not res!51671) (not e!67444))))

(assert (=> b!103521 (= res!51671 call!10850)))

(assert (=> b!103521 (= e!67443 e!67444)))

(declare-fun b!103522 () Bool)

(assert (=> b!103522 (= e!67443 ((_ is Undefined!252) lt!52748))))

(declare-fun bm!10847 () Bool)

(assert (=> bm!10847 (= call!10851 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!27805 () Bool)

(assert (=> d!27805 e!67442))

(assert (=> d!27805 (= c!17824 ((_ is MissingZero!252) lt!52748))))

(assert (=> d!27805 (= lt!52748 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun lt!52747 () Unit!3132)

(declare-fun choose!646 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3132)

(assert (=> d!27805 (= lt!52747 (choose!646 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27805 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27805 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) lt!52747)))

(assert (= (and d!27805 c!17824) b!103515))

(assert (= (and d!27805 (not c!17824)) b!103518))

(assert (= (and b!103515 res!51670) b!103517))

(assert (= (and b!103517 res!51669) b!103519))

(assert (= (and b!103518 c!17825) b!103521))

(assert (= (and b!103518 (not c!17825)) b!103522))

(assert (= (and b!103521 res!51671) b!103516))

(assert (= (and b!103516 res!51672) b!103520))

(assert (= (or b!103515 b!103521) bm!10848))

(assert (= (or b!103519 b!103520) bm!10847))

(assert (=> d!27805 m!113915))

(assert (=> d!27805 m!114279))

(assert (=> d!27805 m!113915))

(declare-fun m!114319 () Bool)

(assert (=> d!27805 m!114319))

(declare-fun m!114321 () Bool)

(assert (=> d!27805 m!114321))

(declare-fun m!114323 () Bool)

(assert (=> b!103517 m!114323))

(assert (=> bm!10847 m!113915))

(assert (=> bm!10847 m!114277))

(declare-fun m!114325 () Bool)

(assert (=> bm!10848 m!114325))

(declare-fun m!114327 () Bool)

(assert (=> b!103516 m!114327))

(assert (=> bm!10828 d!27805))

(assert (=> b!103274 d!27799))

(declare-fun d!27807 () Bool)

(declare-fun e!67445 () Bool)

(assert (=> d!27807 e!67445))

(declare-fun res!51673 () Bool)

(assert (=> d!27807 (=> (not res!51673) (not e!67445))))

(declare-fun lt!52751 () ListLongMap!1527)

(assert (=> d!27807 (= res!51673 (contains!811 lt!52751 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52750 () List!1592)

(assert (=> d!27807 (= lt!52751 (ListLongMap!1528 lt!52750))))

(declare-fun lt!52749 () Unit!3132)

(declare-fun lt!52752 () Unit!3132)

(assert (=> d!27807 (= lt!52749 lt!52752)))

(assert (=> d!27807 (= (getValueByKey!156 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27807 (= lt!52752 (lemmaContainsTupThenGetReturnValue!72 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27807 (= lt!52750 (insertStrictlySorted!75 (toList!779 call!10772) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27807 (= (+!137 call!10772 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52751)))

(declare-fun b!103523 () Bool)

(declare-fun res!51674 () Bool)

(assert (=> b!103523 (=> (not res!51674) (not e!67445))))

(assert (=> b!103523 (= res!51674 (= (getValueByKey!156 (toList!779 lt!52751) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103524 () Bool)

(assert (=> b!103524 (= e!67445 (contains!812 (toList!779 lt!52751) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27807 res!51673) b!103523))

(assert (= (and b!103523 res!51674) b!103524))

(declare-fun m!114329 () Bool)

(assert (=> d!27807 m!114329))

(declare-fun m!114331 () Bool)

(assert (=> d!27807 m!114331))

(declare-fun m!114333 () Bool)

(assert (=> d!27807 m!114333))

(declare-fun m!114335 () Bool)

(assert (=> d!27807 m!114335))

(declare-fun m!114337 () Bool)

(assert (=> b!103523 m!114337))

(declare-fun m!114339 () Bool)

(assert (=> b!103524 m!114339))

(assert (=> b!103344 d!27807))

(declare-fun b!103525 () Bool)

(assert (=> b!103525 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!103525 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67448 () Bool)

(declare-fun lt!52757 () ListLongMap!1527)

(assert (=> b!103525 (= e!67448 (= (apply!97 lt!52757 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!27809 () Bool)

(declare-fun e!67446 () Bool)

(assert (=> d!27809 e!67446))

(declare-fun res!51678 () Bool)

(assert (=> d!27809 (=> (not res!51678) (not e!67446))))

(assert (=> d!27809 (= res!51678 (not (contains!811 lt!52757 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67449 () ListLongMap!1527)

(assert (=> d!27809 (= lt!52757 e!67449)))

(declare-fun c!17828 () Bool)

(assert (=> d!27809 (= c!17828 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27809 (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27809 (= (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) lt!52757)))

(declare-fun b!103526 () Bool)

(assert (=> b!103526 (= e!67449 (ListLongMap!1528 Nil!1589))))

(declare-fun b!103527 () Bool)

(declare-fun res!51677 () Bool)

(assert (=> b!103527 (=> (not res!51677) (not e!67446))))

(assert (=> b!103527 (= res!51677 (not (contains!811 lt!52757 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103528 () Bool)

(declare-fun e!67450 () Bool)

(assert (=> b!103528 (= e!67450 (isEmpty!373 lt!52757))))

(declare-fun b!103529 () Bool)

(declare-fun lt!52755 () Unit!3132)

(declare-fun lt!52758 () Unit!3132)

(assert (=> b!103529 (= lt!52755 lt!52758)))

(declare-fun lt!52756 () (_ BitVec 64))

(declare-fun lt!52754 () V!3209)

(declare-fun lt!52759 () ListLongMap!1527)

(declare-fun lt!52753 () (_ BitVec 64))

(assert (=> b!103529 (not (contains!811 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754)) lt!52753))))

(assert (=> b!103529 (= lt!52758 (addStillNotContains!47 lt!52759 lt!52756 lt!52754 lt!52753))))

(assert (=> b!103529 (= lt!52753 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103529 (= lt!52754 (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103529 (= lt!52756 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(declare-fun call!10852 () ListLongMap!1527)

(assert (=> b!103529 (= lt!52759 call!10852)))

(declare-fun e!67451 () ListLongMap!1527)

(assert (=> b!103529 (= e!67451 (+!137 call!10852 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10849 () Bool)

(assert (=> bm!10849 (= call!10852 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103530 () Bool)

(declare-fun e!67447 () Bool)

(assert (=> b!103530 (= e!67447 e!67450)))

(declare-fun c!17827 () Bool)

(assert (=> b!103530 (= c!17827 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103531 () Bool)

(assert (=> b!103531 (= e!67449 e!67451)))

(declare-fun c!17829 () Bool)

(assert (=> b!103531 (= c!17829 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103532 () Bool)

(assert (=> b!103532 (= e!67447 e!67448)))

(assert (=> b!103532 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun res!51676 () Bool)

(assert (=> b!103532 (= res!51676 (contains!811 lt!52757 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103532 (=> (not res!51676) (not e!67448))))

(declare-fun b!103533 () Bool)

(declare-fun e!67452 () Bool)

(assert (=> b!103533 (= e!67452 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103533 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!103534 () Bool)

(assert (=> b!103534 (= e!67451 call!10852)))

(declare-fun b!103535 () Bool)

(assert (=> b!103535 (= e!67450 (= lt!52757 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103536 () Bool)

(assert (=> b!103536 (= e!67446 e!67447)))

(declare-fun c!17826 () Bool)

(assert (=> b!103536 (= c!17826 e!67452)))

(declare-fun res!51675 () Bool)

(assert (=> b!103536 (=> (not res!51675) (not e!67452))))

(assert (=> b!103536 (= res!51675 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27809 c!17828) b!103526))

(assert (= (and d!27809 (not c!17828)) b!103531))

(assert (= (and b!103531 c!17829) b!103529))

(assert (= (and b!103531 (not c!17829)) b!103534))

(assert (= (or b!103529 b!103534) bm!10849))

(assert (= (and d!27809 res!51678) b!103527))

(assert (= (and b!103527 res!51677) b!103536))

(assert (= (and b!103536 res!51675) b!103533))

(assert (= (and b!103536 c!17826) b!103532))

(assert (= (and b!103536 (not c!17826)) b!103530))

(assert (= (and b!103532 res!51676) b!103525))

(assert (= (and b!103530 c!17827) b!103535))

(assert (= (and b!103530 (not c!17827)) b!103528))

(declare-fun b_lambda!4633 () Bool)

(assert (=> (not b_lambda!4633) (not b!103525)))

(assert (=> b!103525 t!5643))

(declare-fun b_and!6409 () Bool)

(assert (= b_and!6405 (and (=> t!5643 result!3411) b_and!6409)))

(assert (=> b!103525 t!5645))

(declare-fun b_and!6411 () Bool)

(assert (= b_and!6407 (and (=> t!5645 result!3415) b_and!6411)))

(declare-fun b_lambda!4635 () Bool)

(assert (=> (not b_lambda!4635) (not b!103529)))

(assert (=> b!103529 t!5643))

(declare-fun b_and!6413 () Bool)

(assert (= b_and!6409 (and (=> t!5643 result!3411) b_and!6413)))

(assert (=> b!103529 t!5645))

(declare-fun b_and!6415 () Bool)

(assert (= b_and!6411 (and (=> t!5645 result!3415) b_and!6415)))

(declare-fun m!114341 () Bool)

(assert (=> d!27809 m!114341))

(assert (=> d!27809 m!113953))

(declare-fun m!114343 () Bool)

(assert (=> b!103528 m!114343))

(declare-fun m!114345 () Bool)

(assert (=> b!103531 m!114345))

(assert (=> b!103531 m!114345))

(declare-fun m!114347 () Bool)

(assert (=> b!103531 m!114347))

(assert (=> b!103532 m!114345))

(assert (=> b!103532 m!114345))

(declare-fun m!114349 () Bool)

(assert (=> b!103532 m!114349))

(assert (=> b!103533 m!114345))

(assert (=> b!103533 m!114345))

(assert (=> b!103533 m!114347))

(assert (=> b!103525 m!114345))

(declare-fun m!114351 () Bool)

(assert (=> b!103525 m!114351))

(declare-fun m!114353 () Bool)

(assert (=> b!103525 m!114353))

(assert (=> b!103525 m!114345))

(assert (=> b!103525 m!113945))

(assert (=> b!103525 m!114353))

(assert (=> b!103525 m!113945))

(declare-fun m!114355 () Bool)

(assert (=> b!103525 m!114355))

(declare-fun m!114357 () Bool)

(assert (=> b!103529 m!114357))

(assert (=> b!103529 m!114357))

(declare-fun m!114359 () Bool)

(assert (=> b!103529 m!114359))

(assert (=> b!103529 m!114353))

(assert (=> b!103529 m!114345))

(assert (=> b!103529 m!113945))

(declare-fun m!114361 () Bool)

(assert (=> b!103529 m!114361))

(assert (=> b!103529 m!114353))

(assert (=> b!103529 m!113945))

(assert (=> b!103529 m!114355))

(declare-fun m!114363 () Bool)

(assert (=> b!103529 m!114363))

(declare-fun m!114365 () Bool)

(assert (=> b!103535 m!114365))

(declare-fun m!114367 () Bool)

(assert (=> b!103527 m!114367))

(assert (=> bm!10849 m!114365))

(assert (=> b!103244 d!27809))

(declare-fun d!27811 () Bool)

(assert (=> d!27811 (= (map!1279 (_2!1187 lt!52716)) (getCurrentListMap!467 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))))))

(declare-fun bs!4248 () Bool)

(assert (= bs!4248 d!27811))

(declare-fun m!114369 () Bool)

(assert (=> bs!4248 m!114369))

(assert (=> bm!10836 d!27811))

(declare-fun d!27813 () Bool)

(assert (=> d!27813 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52762 () Unit!3132)

(declare-fun choose!647 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3132)

(assert (=> d!27813 (= lt!52762 (choose!647 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52735 (zeroValue!2437 newMap!16) lt!52447 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27813 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27813 (= (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52735 (zeroValue!2437 newMap!16) lt!52447 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)) lt!52762)))

(declare-fun bs!4249 () Bool)

(assert (= bs!4249 d!27813))

(declare-fun m!114371 () Bool)

(assert (=> bs!4249 m!114371))

(assert (=> bs!4249 m!114197))

(declare-fun m!114373 () Bool)

(assert (=> bs!4249 m!114373))

(assert (=> bs!4249 m!114321))

(assert (=> bs!4249 m!114197))

(declare-fun m!114375 () Bool)

(assert (=> bs!4249 m!114375))

(assert (=> b!103466 d!27813))

(declare-fun d!27815 () Bool)

(assert (=> d!27815 (= (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103242 d!27815))

(declare-fun bm!10850 () Bool)

(declare-fun call!10859 () ListLongMap!1527)

(assert (=> bm!10850 (= call!10859 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10851 () Bool)

(declare-fun call!10856 () ListLongMap!1527)

(declare-fun call!10857 () ListLongMap!1527)

(assert (=> bm!10851 (= call!10856 call!10857)))

(declare-fun b!103537 () Bool)

(declare-fun e!67453 () Unit!3132)

(declare-fun lt!52777 () Unit!3132)

(assert (=> b!103537 (= e!67453 lt!52777)))

(declare-fun lt!52779 () ListLongMap!1527)

(assert (=> b!103537 (= lt!52779 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52784 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52784 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52763 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52763 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52781 () Unit!3132)

(assert (=> b!103537 (= lt!52781 (addStillContains!73 lt!52779 lt!52784 (zeroValue!2437 newMap!16) lt!52763))))

(assert (=> b!103537 (contains!811 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))) lt!52763)))

(declare-fun lt!52768 () Unit!3132)

(assert (=> b!103537 (= lt!52768 lt!52781)))

(declare-fun lt!52773 () ListLongMap!1527)

(assert (=> b!103537 (= lt!52773 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52771 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52771 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52775 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52775 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52764 () Unit!3132)

(assert (=> b!103537 (= lt!52764 (addApplyDifferent!73 lt!52773 lt!52771 (minValue!2437 newMap!16) lt!52775))))

(assert (=> b!103537 (= (apply!97 (+!137 lt!52773 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))) lt!52775) (apply!97 lt!52773 lt!52775))))

(declare-fun lt!52783 () Unit!3132)

(assert (=> b!103537 (= lt!52783 lt!52764)))

(declare-fun lt!52778 () ListLongMap!1527)

(assert (=> b!103537 (= lt!52778 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52776 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52776 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52766 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52766 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52782 () Unit!3132)

(assert (=> b!103537 (= lt!52782 (addApplyDifferent!73 lt!52778 lt!52776 (zeroValue!2437 newMap!16) lt!52766))))

(assert (=> b!103537 (= (apply!97 (+!137 lt!52778 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))) lt!52766) (apply!97 lt!52778 lt!52766))))

(declare-fun lt!52765 () Unit!3132)

(assert (=> b!103537 (= lt!52765 lt!52782)))

(declare-fun lt!52772 () ListLongMap!1527)

(assert (=> b!103537 (= lt!52772 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52774 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52774 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52770 () (_ BitVec 64))

(assert (=> b!103537 (= lt!52770 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103537 (= lt!52777 (addApplyDifferent!73 lt!52772 lt!52774 (minValue!2437 newMap!16) lt!52770))))

(assert (=> b!103537 (= (apply!97 (+!137 lt!52772 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))) lt!52770) (apply!97 lt!52772 lt!52770))))

(declare-fun b!103538 () Bool)

(declare-fun e!67457 () Bool)

(declare-fun call!10853 () Bool)

(assert (=> b!103538 (= e!67457 (not call!10853))))

(declare-fun b!103539 () Bool)

(declare-fun e!67458 () Bool)

(declare-fun lt!52780 () ListLongMap!1527)

(assert (=> b!103539 (= e!67458 (= (apply!97 lt!52780 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (_values!2543 newMap!16))))))

(assert (=> b!103539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103540 () Bool)

(declare-fun e!67459 () ListLongMap!1527)

(declare-fun call!10854 () ListLongMap!1527)

(assert (=> b!103540 (= e!67459 call!10854)))

(declare-fun b!103541 () Bool)

(declare-fun Unit!3146 () Unit!3132)

(assert (=> b!103541 (= e!67453 Unit!3146)))

(declare-fun b!103542 () Bool)

(declare-fun e!67456 () ListLongMap!1527)

(assert (=> b!103542 (= e!67456 call!10856)))

(declare-fun b!103544 () Bool)

(declare-fun e!67454 () Bool)

(declare-fun call!10855 () Bool)

(assert (=> b!103544 (= e!67454 (not call!10855))))

(declare-fun b!103545 () Bool)

(declare-fun e!67455 () Bool)

(assert (=> b!103545 (= e!67455 e!67458)))

(declare-fun res!51681 () Bool)

(assert (=> b!103545 (=> (not res!51681) (not e!67458))))

(assert (=> b!103545 (= res!51681 (contains!811 lt!52780 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103545 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103546 () Bool)

(declare-fun e!67462 () Bool)

(assert (=> b!103546 (= e!67462 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103547 () Bool)

(declare-fun res!51679 () Bool)

(declare-fun e!67460 () Bool)

(assert (=> b!103547 (=> (not res!51679) (not e!67460))))

(assert (=> b!103547 (= res!51679 e!67454)))

(declare-fun c!17830 () Bool)

(assert (=> b!103547 (= c!17830 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!17833 () Bool)

(declare-fun bm!10852 () Bool)

(declare-fun c!17835 () Bool)

(declare-fun call!10858 () ListLongMap!1527)

(assert (=> bm!10852 (= call!10858 (+!137 (ite c!17833 call!10859 (ite c!17835 call!10857 call!10856)) (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!103548 () Bool)

(declare-fun e!67461 () ListLongMap!1527)

(assert (=> b!103548 (= e!67461 e!67459)))

(assert (=> b!103548 (= c!17835 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103549 () Bool)

(assert (=> b!103549 (= e!67456 call!10854)))

(declare-fun bm!10853 () Bool)

(assert (=> bm!10853 (= call!10854 call!10858)))

(declare-fun b!103550 () Bool)

(declare-fun c!17834 () Bool)

(assert (=> b!103550 (= c!17834 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103550 (= e!67459 e!67456)))

(declare-fun b!103551 () Bool)

(assert (=> b!103551 (= e!67461 (+!137 call!10858 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!10854 () Bool)

(assert (=> bm!10854 (= call!10857 call!10859)))

(declare-fun b!103552 () Bool)

(declare-fun res!51687 () Bool)

(assert (=> b!103552 (=> (not res!51687) (not e!67460))))

(assert (=> b!103552 (= res!51687 e!67455)))

(declare-fun res!51683 () Bool)

(assert (=> b!103552 (=> res!51683 e!67455)))

(declare-fun e!67463 () Bool)

(assert (=> b!103552 (= res!51683 (not e!67463))))

(declare-fun res!51682 () Bool)

(assert (=> b!103552 (=> (not res!51682) (not e!67463))))

(assert (=> b!103552 (= res!51682 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103553 () Bool)

(declare-fun e!67465 () Bool)

(assert (=> b!103553 (= e!67465 (= (apply!97 lt!52780 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!10855 () Bool)

(assert (=> bm!10855 (= call!10855 (contains!811 lt!52780 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10856 () Bool)

(assert (=> bm!10856 (= call!10853 (contains!811 lt!52780 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103543 () Bool)

(assert (=> b!103543 (= e!67457 e!67465)))

(declare-fun res!51685 () Bool)

(assert (=> b!103543 (= res!51685 call!10853)))

(assert (=> b!103543 (=> (not res!51685) (not e!67465))))

(declare-fun d!27817 () Bool)

(assert (=> d!27817 e!67460))

(declare-fun res!51686 () Bool)

(assert (=> d!27817 (=> (not res!51686) (not e!67460))))

(assert (=> d!27817 (= res!51686 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!52767 () ListLongMap!1527)

(assert (=> d!27817 (= lt!52780 lt!52767)))

(declare-fun lt!52769 () Unit!3132)

(assert (=> d!27817 (= lt!52769 e!67453)))

(declare-fun c!17832 () Bool)

(assert (=> d!27817 (= c!17832 e!67462)))

(declare-fun res!51684 () Bool)

(assert (=> d!27817 (=> (not res!51684) (not e!67462))))

(assert (=> d!27817 (= res!51684 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27817 (= lt!52767 e!67461)))

(assert (=> d!27817 (= c!17833 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27817 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27817 (= (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!52780)))

(declare-fun b!103554 () Bool)

(assert (=> b!103554 (= e!67463 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103555 () Bool)

(declare-fun e!67464 () Bool)

(assert (=> b!103555 (= e!67454 e!67464)))

(declare-fun res!51680 () Bool)

(assert (=> b!103555 (= res!51680 call!10855)))

(assert (=> b!103555 (=> (not res!51680) (not e!67464))))

(declare-fun b!103556 () Bool)

(assert (=> b!103556 (= e!67464 (= (apply!97 lt!52780 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!103557 () Bool)

(assert (=> b!103557 (= e!67460 e!67457)))

(declare-fun c!17831 () Bool)

(assert (=> b!103557 (= c!17831 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!27817 c!17833) b!103551))

(assert (= (and d!27817 (not c!17833)) b!103548))

(assert (= (and b!103548 c!17835) b!103540))

(assert (= (and b!103548 (not c!17835)) b!103550))

(assert (= (and b!103550 c!17834) b!103549))

(assert (= (and b!103550 (not c!17834)) b!103542))

(assert (= (or b!103549 b!103542) bm!10851))

(assert (= (or b!103540 bm!10851) bm!10854))

(assert (= (or b!103540 b!103549) bm!10853))

(assert (= (or b!103551 bm!10854) bm!10850))

(assert (= (or b!103551 bm!10853) bm!10852))

(assert (= (and d!27817 res!51684) b!103546))

(assert (= (and d!27817 c!17832) b!103537))

(assert (= (and d!27817 (not c!17832)) b!103541))

(assert (= (and d!27817 res!51686) b!103552))

(assert (= (and b!103552 res!51682) b!103554))

(assert (= (and b!103552 (not res!51683)) b!103545))

(assert (= (and b!103545 res!51681) b!103539))

(assert (= (and b!103552 res!51687) b!103547))

(assert (= (and b!103547 c!17830) b!103555))

(assert (= (and b!103547 (not c!17830)) b!103544))

(assert (= (and b!103555 res!51680) b!103556))

(assert (= (or b!103555 b!103544) bm!10855))

(assert (= (and b!103547 res!51679) b!103557))

(assert (= (and b!103557 c!17831) b!103543))

(assert (= (and b!103557 (not c!17831)) b!103538))

(assert (= (and b!103543 res!51685) b!103553))

(assert (= (or b!103543 b!103538) bm!10856))

(declare-fun b_lambda!4637 () Bool)

(assert (=> (not b_lambda!4637) (not b!103539)))

(declare-fun t!5659 () Bool)

(declare-fun tb!2033 () Bool)

(assert (=> (and b!103061 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16)) t!5659) tb!2033))

(declare-fun result!3431 () Bool)

(assert (=> tb!2033 (= result!3431 tp_is_empty!2671)))

(assert (=> b!103539 t!5659))

(declare-fun b_and!6417 () Bool)

(assert (= b_and!6413 (and (=> t!5659 result!3431) b_and!6417)))

(declare-fun t!5661 () Bool)

(declare-fun tb!2035 () Bool)

(assert (=> (and b!103053 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 newMap!16)) t!5661) tb!2035))

(declare-fun result!3433 () Bool)

(assert (= result!3433 result!3431))

(assert (=> b!103539 t!5661))

(declare-fun b_and!6419 () Bool)

(assert (= b_and!6415 (and (=> t!5661 result!3433) b_and!6419)))

(declare-fun m!114377 () Bool)

(assert (=> b!103551 m!114377))

(assert (=> d!27817 m!114321))

(declare-fun m!114379 () Bool)

(assert (=> bm!10850 m!114379))

(declare-fun m!114381 () Bool)

(assert (=> b!103554 m!114381))

(assert (=> b!103554 m!114381))

(declare-fun m!114383 () Bool)

(assert (=> b!103554 m!114383))

(declare-fun m!114385 () Bool)

(assert (=> bm!10856 m!114385))

(assert (=> b!103545 m!114381))

(assert (=> b!103545 m!114381))

(declare-fun m!114387 () Bool)

(assert (=> b!103545 m!114387))

(declare-fun m!114389 () Bool)

(assert (=> b!103539 m!114389))

(assert (=> b!103539 m!114381))

(declare-fun m!114391 () Bool)

(assert (=> b!103539 m!114391))

(assert (=> b!103539 m!114381))

(declare-fun m!114393 () Bool)

(assert (=> b!103539 m!114393))

(assert (=> b!103539 m!114393))

(assert (=> b!103539 m!114389))

(declare-fun m!114395 () Bool)

(assert (=> b!103539 m!114395))

(declare-fun m!114397 () Bool)

(assert (=> bm!10852 m!114397))

(declare-fun m!114399 () Bool)

(assert (=> b!103556 m!114399))

(declare-fun m!114401 () Bool)

(assert (=> bm!10855 m!114401))

(declare-fun m!114403 () Bool)

(assert (=> b!103537 m!114403))

(declare-fun m!114405 () Bool)

(assert (=> b!103537 m!114405))

(declare-fun m!114407 () Bool)

(assert (=> b!103537 m!114407))

(assert (=> b!103537 m!114381))

(declare-fun m!114409 () Bool)

(assert (=> b!103537 m!114409))

(assert (=> b!103537 m!114379))

(declare-fun m!114411 () Bool)

(assert (=> b!103537 m!114411))

(declare-fun m!114413 () Bool)

(assert (=> b!103537 m!114413))

(declare-fun m!114415 () Bool)

(assert (=> b!103537 m!114415))

(declare-fun m!114417 () Bool)

(assert (=> b!103537 m!114417))

(declare-fun m!114419 () Bool)

(assert (=> b!103537 m!114419))

(declare-fun m!114421 () Bool)

(assert (=> b!103537 m!114421))

(assert (=> b!103537 m!114415))

(declare-fun m!114423 () Bool)

(assert (=> b!103537 m!114423))

(assert (=> b!103537 m!114409))

(declare-fun m!114425 () Bool)

(assert (=> b!103537 m!114425))

(assert (=> b!103537 m!114407))

(declare-fun m!114427 () Bool)

(assert (=> b!103537 m!114427))

(declare-fun m!114429 () Bool)

(assert (=> b!103537 m!114429))

(assert (=> b!103537 m!114419))

(declare-fun m!114431 () Bool)

(assert (=> b!103537 m!114431))

(assert (=> b!103546 m!114381))

(assert (=> b!103546 m!114381))

(assert (=> b!103546 m!114383))

(declare-fun m!114433 () Bool)

(assert (=> b!103553 m!114433))

(assert (=> b!103482 d!27817))

(assert (=> bm!10825 d!27787))

(assert (=> b!103240 d!27815))

(declare-fun d!27819 () Bool)

(declare-fun lt!52787 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!108 (List!1592) (InoxSet tuple2!2354))

(assert (=> d!27819 (= lt!52787 (select (content!108 (toList!779 lt!52533)) lt!52442))))

(declare-fun e!67470 () Bool)

(assert (=> d!27819 (= lt!52787 e!67470)))

(declare-fun res!51692 () Bool)

(assert (=> d!27819 (=> (not res!51692) (not e!67470))))

(assert (=> d!27819 (= res!51692 ((_ is Cons!1588) (toList!779 lt!52533)))))

(assert (=> d!27819 (= (contains!812 (toList!779 lt!52533) lt!52442) lt!52787)))

(declare-fun b!103562 () Bool)

(declare-fun e!67471 () Bool)

(assert (=> b!103562 (= e!67470 e!67471)))

(declare-fun res!51693 () Bool)

(assert (=> b!103562 (=> res!51693 e!67471)))

(assert (=> b!103562 (= res!51693 (= (h!2184 (toList!779 lt!52533)) lt!52442))))

(declare-fun b!103563 () Bool)

(assert (=> b!103563 (= e!67471 (contains!812 (t!5646 (toList!779 lt!52533)) lt!52442))))

(assert (= (and d!27819 res!51692) b!103562))

(assert (= (and b!103562 (not res!51693)) b!103563))

(declare-fun m!114435 () Bool)

(assert (=> d!27819 m!114435))

(declare-fun m!114437 () Bool)

(assert (=> d!27819 m!114437))

(declare-fun m!114439 () Bool)

(assert (=> b!103563 m!114439))

(assert (=> b!103209 d!27819))

(declare-fun d!27821 () Bool)

(declare-fun res!51694 () Bool)

(declare-fun e!67472 () Bool)

(assert (=> d!27821 (=> res!51694 e!67472)))

(assert (=> d!27821 (= res!51694 (= (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27821 (= (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000) e!67472)))

(declare-fun b!103564 () Bool)

(declare-fun e!67473 () Bool)

(assert (=> b!103564 (= e!67472 e!67473)))

(declare-fun res!51695 () Bool)

(assert (=> b!103564 (=> (not res!51695) (not e!67473))))

(assert (=> b!103564 (= res!51695 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103565 () Bool)

(assert (=> b!103565 (= e!67473 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!27821 (not res!51694)) b!103564))

(assert (= (and b!103564 res!51695) b!103565))

(assert (=> d!27821 m!114381))

(assert (=> b!103565 m!113915))

(declare-fun m!114441 () Bool)

(assert (=> b!103565 m!114441))

(assert (=> bm!10835 d!27821))

(assert (=> bm!10746 d!27809))

(declare-fun b!103574 () Bool)

(declare-fun e!67482 () Bool)

(declare-fun call!10862 () Bool)

(assert (=> b!103574 (= e!67482 call!10862)))

(declare-fun d!27823 () Bool)

(declare-fun res!51700 () Bool)

(declare-fun e!67481 () Bool)

(assert (=> d!27823 (=> res!51700 e!67481)))

(assert (=> d!27823 (= res!51700 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27823 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 newMap!16) (mask!6696 newMap!16)) e!67481)))

(declare-fun b!103575 () Bool)

(declare-fun e!67480 () Bool)

(assert (=> b!103575 (= e!67480 call!10862)))

(declare-fun b!103576 () Bool)

(assert (=> b!103576 (= e!67481 e!67480)))

(declare-fun c!17838 () Bool)

(assert (=> b!103576 (= c!17838 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10859 () Bool)

(assert (=> bm!10859 (= call!10862 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun b!103577 () Bool)

(assert (=> b!103577 (= e!67480 e!67482)))

(declare-fun lt!52795 () (_ BitVec 64))

(assert (=> b!103577 (= lt!52795 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52796 () Unit!3132)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4317 (_ BitVec 64) (_ BitVec 32)) Unit!3132)

(assert (=> b!103577 (= lt!52796 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4262 newMap!16) lt!52795 #b00000000000000000000000000000000))))

(assert (=> b!103577 (arrayContainsKey!0 (_keys!4262 newMap!16) lt!52795 #b00000000000000000000000000000000)))

(declare-fun lt!52794 () Unit!3132)

(assert (=> b!103577 (= lt!52794 lt!52796)))

(declare-fun res!51701 () Bool)

(assert (=> b!103577 (= res!51701 (= (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (_keys!4262 newMap!16) (mask!6696 newMap!16)) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!103577 (=> (not res!51701) (not e!67482))))

(assert (= (and d!27823 (not res!51700)) b!103576))

(assert (= (and b!103576 c!17838) b!103577))

(assert (= (and b!103576 (not c!17838)) b!103575))

(assert (= (and b!103577 res!51701) b!103574))

(assert (= (or b!103574 b!103575) bm!10859))

(assert (=> b!103576 m!114381))

(assert (=> b!103576 m!114381))

(assert (=> b!103576 m!114383))

(declare-fun m!114443 () Bool)

(assert (=> bm!10859 m!114443))

(assert (=> b!103577 m!114381))

(declare-fun m!114445 () Bool)

(assert (=> b!103577 m!114445))

(declare-fun m!114447 () Bool)

(assert (=> b!103577 m!114447))

(assert (=> b!103577 m!114381))

(declare-fun m!114449 () Bool)

(assert (=> b!103577 m!114449))

(assert (=> b!103286 d!27823))

(assert (=> b!103262 d!27775))

(assert (=> d!27787 d!27817))

(declare-fun d!27825 () Bool)

(assert (=> d!27825 (= (inRange!0 (ite c!17815 (ite c!17812 (index!3156 lt!52738) (ite c!17805 (index!3155 lt!52736) (index!3158 lt!52736))) (ite c!17810 (index!3156 lt!52730) (ite c!17807 (index!3155 lt!52722) (index!3158 lt!52722)))) (mask!6696 newMap!16)) (and (bvsge (ite c!17815 (ite c!17812 (index!3156 lt!52738) (ite c!17805 (index!3155 lt!52736) (index!3158 lt!52736))) (ite c!17810 (index!3156 lt!52730) (ite c!17807 (index!3155 lt!52722) (index!3158 lt!52722)))) #b00000000000000000000000000000000) (bvslt (ite c!17815 (ite c!17812 (index!3156 lt!52738) (ite c!17805 (index!3155 lt!52736) (index!3158 lt!52736))) (ite c!17810 (index!3156 lt!52730) (ite c!17807 (index!3155 lt!52722) (index!3158 lt!52722)))) (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10822 d!27825))

(declare-fun d!27827 () Bool)

(declare-fun e!67484 () Bool)

(assert (=> d!27827 e!67484))

(declare-fun res!51702 () Bool)

(assert (=> d!27827 (=> res!51702 e!67484)))

(declare-fun lt!52800 () Bool)

(assert (=> d!27827 (= res!51702 (not lt!52800))))

(declare-fun lt!52797 () Bool)

(assert (=> d!27827 (= lt!52800 lt!52797)))

(declare-fun lt!52798 () Unit!3132)

(declare-fun e!67483 () Unit!3132)

(assert (=> d!27827 (= lt!52798 e!67483)))

(declare-fun c!17839 () Bool)

(assert (=> d!27827 (= c!17839 lt!52797)))

(assert (=> d!27827 (= lt!52797 (containsKey!159 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27827 (= (contains!811 lt!52641 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!52800)))

(declare-fun b!103578 () Bool)

(declare-fun lt!52799 () Unit!3132)

(assert (=> b!103578 (= e!67483 lt!52799)))

(assert (=> b!103578 (= lt!52799 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103578 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103579 () Bool)

(declare-fun Unit!3147 () Unit!3132)

(assert (=> b!103579 (= e!67483 Unit!3147)))

(declare-fun b!103580 () Bool)

(assert (=> b!103580 (= e!67484 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27827 c!17839) b!103578))

(assert (= (and d!27827 (not c!17839)) b!103579))

(assert (= (and d!27827 (not res!51702)) b!103580))

(assert (=> d!27827 m!114103))

(declare-fun m!114451 () Bool)

(assert (=> d!27827 m!114451))

(assert (=> b!103578 m!114103))

(declare-fun m!114453 () Bool)

(assert (=> b!103578 m!114453))

(assert (=> b!103578 m!114103))

(declare-fun m!114455 () Bool)

(assert (=> b!103578 m!114455))

(assert (=> b!103578 m!114455))

(declare-fun m!114457 () Bool)

(assert (=> b!103578 m!114457))

(assert (=> b!103580 m!114103))

(assert (=> b!103580 m!114455))

(assert (=> b!103580 m!114455))

(assert (=> b!103580 m!114457))

(assert (=> b!103338 d!27827))

(declare-fun b!103591 () Bool)

(declare-fun e!67490 () Option!162)

(assert (=> b!103591 (= e!67490 (getValueByKey!156 (t!5646 (toList!779 lt!52569)) (_1!1188 lt!52444)))))

(declare-fun b!103590 () Bool)

(declare-fun e!67489 () Option!162)

(assert (=> b!103590 (= e!67489 e!67490)))

(declare-fun c!17845 () Bool)

(assert (=> b!103590 (= c!17845 (and ((_ is Cons!1588) (toList!779 lt!52569)) (not (= (_1!1188 (h!2184 (toList!779 lt!52569))) (_1!1188 lt!52444)))))))

(declare-fun b!103589 () Bool)

(assert (=> b!103589 (= e!67489 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52569)))))))

(declare-fun d!27829 () Bool)

(declare-fun c!17844 () Bool)

(assert (=> d!27829 (= c!17844 (and ((_ is Cons!1588) (toList!779 lt!52569)) (= (_1!1188 (h!2184 (toList!779 lt!52569))) (_1!1188 lt!52444))))))

(assert (=> d!27829 (= (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444)) e!67489)))

(declare-fun b!103592 () Bool)

(assert (=> b!103592 (= e!67490 None!160)))

(assert (= (and d!27829 c!17844) b!103589))

(assert (= (and d!27829 (not c!17844)) b!103590))

(assert (= (and b!103590 c!17845) b!103591))

(assert (= (and b!103590 (not c!17845)) b!103592))

(declare-fun m!114459 () Bool)

(assert (=> b!103591 m!114459))

(assert (=> b!103250 d!27829))

(declare-fun d!27831 () Bool)

(declare-fun isEmpty!374 (List!1592) Bool)

(assert (=> d!27831 (= (isEmpty!373 lt!52553) (isEmpty!374 (toList!779 lt!52553)))))

(declare-fun bs!4250 () Bool)

(assert (= bs!4250 d!27831))

(declare-fun m!114461 () Bool)

(assert (=> bs!4250 m!114461))

(assert (=> b!103237 d!27831))

(assert (=> d!27773 d!27779))

(declare-fun d!27833 () Bool)

(assert (=> d!27833 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1590)))

(assert (=> d!27833 true))

(declare-fun _$71!144 () Unit!3132)

(assert (=> d!27833 (= (choose!39 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!144)))

(declare-fun bs!4251 () Bool)

(assert (= bs!4251 d!27833))

(assert (=> bs!4251 m!113931))

(assert (=> d!27773 d!27833))

(declare-fun d!27835 () Bool)

(declare-fun res!51711 () Bool)

(declare-fun e!67493 () Bool)

(assert (=> d!27835 (=> (not res!51711) (not e!67493))))

(assert (=> d!27835 (= res!51711 (validMask!0 (mask!6696 newMap!16)))))

(assert (=> d!27835 (= (simpleValid!73 newMap!16) e!67493)))

(declare-fun b!103603 () Bool)

(declare-fun res!51713 () Bool)

(assert (=> b!103603 (=> (not res!51713) (not e!67493))))

(declare-fun size!2308 (LongMapFixedSize!892) (_ BitVec 32))

(assert (=> b!103603 (= res!51713 (= (size!2308 newMap!16) (bvadd (_size!495 newMap!16) (bvsdiv (bvadd (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!103602 () Bool)

(declare-fun res!51712 () Bool)

(assert (=> b!103602 (=> (not res!51712) (not e!67493))))

(assert (=> b!103602 (= res!51712 (bvsge (size!2308 newMap!16) (_size!495 newMap!16)))))

(declare-fun b!103604 () Bool)

(assert (=> b!103604 (= e!67493 (and (bvsge (extraKeys!2369 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2369 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!495 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!103601 () Bool)

(declare-fun res!51714 () Bool)

(assert (=> b!103601 (=> (not res!51714) (not e!67493))))

(assert (=> b!103601 (= res!51714 (and (= (size!2303 (_values!2543 newMap!16)) (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001)) (= (size!2302 (_keys!4262 newMap!16)) (size!2303 (_values!2543 newMap!16))) (bvsge (_size!495 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!495 newMap!16) (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001))))))

(assert (= (and d!27835 res!51711) b!103601))

(assert (= (and b!103601 res!51714) b!103602))

(assert (= (and b!103602 res!51712) b!103603))

(assert (= (and b!103603 res!51713) b!103604))

(assert (=> d!27835 m!114321))

(declare-fun m!114463 () Bool)

(assert (=> b!103603 m!114463))

(assert (=> b!103602 m!114463))

(assert (=> d!27781 d!27835))

(declare-fun d!27837 () Bool)

(declare-fun e!67496 () Bool)

(assert (=> d!27837 e!67496))

(declare-fun c!17848 () Bool)

(assert (=> d!27837 (= c!17848 (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!27837 true))

(declare-fun _$29!138 () Unit!3132)

(assert (=> d!27837 (= (choose!645 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) _$29!138)))

(declare-fun b!103609 () Bool)

(assert (=> b!103609 (= e!67496 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103610 () Bool)

(assert (=> b!103610 (= e!67496 (ite (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27837 c!17848) b!103609))

(assert (= (and d!27837 (not c!17848)) b!103610))

(assert (=> b!103609 m!113915))

(assert (=> b!103609 m!113935))

(assert (=> d!27777 d!27837))

(assert (=> d!27777 d!27767))

(declare-fun b!103613 () Bool)

(declare-fun e!67498 () Option!162)

(assert (=> b!103613 (= e!67498 (getValueByKey!156 (t!5646 (toList!779 lt!52562)) (_1!1188 lt!52442)))))

(declare-fun b!103612 () Bool)

(declare-fun e!67497 () Option!162)

(assert (=> b!103612 (= e!67497 e!67498)))

(declare-fun c!17850 () Bool)

(assert (=> b!103612 (= c!17850 (and ((_ is Cons!1588) (toList!779 lt!52562)) (not (= (_1!1188 (h!2184 (toList!779 lt!52562))) (_1!1188 lt!52442)))))))

(declare-fun b!103611 () Bool)

(assert (=> b!103611 (= e!67497 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52562)))))))

(declare-fun d!27839 () Bool)

(declare-fun c!17849 () Bool)

(assert (=> d!27839 (= c!17849 (and ((_ is Cons!1588) (toList!779 lt!52562)) (= (_1!1188 (h!2184 (toList!779 lt!52562))) (_1!1188 lt!52442))))))

(assert (=> d!27839 (= (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442)) e!67497)))

(declare-fun b!103614 () Bool)

(assert (=> b!103614 (= e!67498 None!160)))

(assert (= (and d!27839 c!17849) b!103611))

(assert (= (and d!27839 (not c!17849)) b!103612))

(assert (= (and b!103612 c!17850) b!103613))

(assert (= (and b!103612 (not c!17850)) b!103614))

(declare-fun m!114465 () Bool)

(assert (=> b!103613 m!114465))

(assert (=> b!103248 d!27839))

(declare-fun b!103617 () Bool)

(declare-fun e!67500 () Option!162)

(assert (=> b!103617 (= e!67500 (getValueByKey!156 (t!5646 (toList!779 lt!52558)) (_1!1188 lt!52444)))))

(declare-fun b!103616 () Bool)

(declare-fun e!67499 () Option!162)

(assert (=> b!103616 (= e!67499 e!67500)))

(declare-fun c!17852 () Bool)

(assert (=> b!103616 (= c!17852 (and ((_ is Cons!1588) (toList!779 lt!52558)) (not (= (_1!1188 (h!2184 (toList!779 lt!52558))) (_1!1188 lt!52444)))))))

(declare-fun b!103615 () Bool)

(assert (=> b!103615 (= e!67499 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52558)))))))

(declare-fun d!27841 () Bool)

(declare-fun c!17851 () Bool)

(assert (=> d!27841 (= c!17851 (and ((_ is Cons!1588) (toList!779 lt!52558)) (= (_1!1188 (h!2184 (toList!779 lt!52558))) (_1!1188 lt!52444))))))

(assert (=> d!27841 (= (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444)) e!67499)))

(declare-fun b!103618 () Bool)

(assert (=> b!103618 (= e!67500 None!160)))

(assert (= (and d!27841 c!17851) b!103615))

(assert (= (and d!27841 (not c!17851)) b!103616))

(assert (= (and b!103616 c!17852) b!103617))

(assert (= (and b!103616 (not c!17852)) b!103618))

(declare-fun m!114467 () Bool)

(assert (=> b!103617 m!114467))

(assert (=> b!103246 d!27841))

(declare-fun d!27843 () Bool)

(declare-fun res!51715 () Bool)

(declare-fun e!67501 () Bool)

(assert (=> d!27843 (=> (not res!51715) (not e!67501))))

(assert (=> d!27843 (= res!51715 (simpleValid!73 (_2!1187 lt!52716)))))

(assert (=> d!27843 (= (valid!418 (_2!1187 lt!52716)) e!67501)))

(declare-fun b!103619 () Bool)

(declare-fun res!51716 () Bool)

(assert (=> b!103619 (=> (not res!51716) (not e!67501))))

(assert (=> b!103619 (= res!51716 (= (arrayCountValidKeys!0 (_keys!4262 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))) (_size!495 (_2!1187 lt!52716))))))

(declare-fun b!103620 () Bool)

(declare-fun res!51717 () Bool)

(assert (=> b!103620 (=> (not res!51717) (not e!67501))))

(assert (=> b!103620 (= res!51717 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716))))))

(declare-fun b!103621 () Bool)

(assert (=> b!103621 (= e!67501 (arrayNoDuplicates!0 (_keys!4262 (_2!1187 lt!52716)) #b00000000000000000000000000000000 Nil!1590))))

(assert (= (and d!27843 res!51715) b!103619))

(assert (= (and b!103619 res!51716) b!103620))

(assert (= (and b!103620 res!51717) b!103621))

(declare-fun m!114469 () Bool)

(assert (=> d!27843 m!114469))

(declare-fun m!114471 () Bool)

(assert (=> b!103619 m!114471))

(declare-fun m!114473 () Bool)

(assert (=> b!103620 m!114473))

(declare-fun m!114475 () Bool)

(assert (=> b!103621 m!114475))

(assert (=> d!27797 d!27843))

(assert (=> d!27797 d!27781))

(declare-fun d!27845 () Bool)

(declare-fun get!1331 (Option!162) V!3209)

(assert (=> d!27845 (= (apply!97 lt!52641 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1331 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4252 () Bool)

(assert (= bs!4252 d!27845))

(assert (=> bs!4252 m!114103))

(assert (=> bs!4252 m!114455))

(assert (=> bs!4252 m!114455))

(declare-fun m!114477 () Bool)

(assert (=> bs!4252 m!114477))

(assert (=> b!103332 d!27845))

(declare-fun d!27847 () Bool)

(declare-fun c!17853 () Bool)

(assert (=> d!27847 (= c!17853 ((_ is ValueCellFull!992) (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67502 () V!3209)

(assert (=> d!27847 (= (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67502)))

(declare-fun b!103622 () Bool)

(assert (=> b!103622 (= e!67502 (get!1329 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103623 () Bool)

(assert (=> b!103623 (= e!67502 (get!1330 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27847 c!17853) b!103622))

(assert (= (and d!27847 (not c!17853)) b!103623))

(assert (=> b!103622 m!114111))

(assert (=> b!103622 m!113945))

(declare-fun m!114479 () Bool)

(assert (=> b!103622 m!114479))

(assert (=> b!103623 m!114111))

(assert (=> b!103623 m!113945))

(declare-fun m!114481 () Bool)

(assert (=> b!103623 m!114481))

(assert (=> b!103332 d!27847))

(declare-fun d!27849 () Bool)

(declare-fun e!67504 () Bool)

(assert (=> d!27849 e!67504))

(declare-fun res!51718 () Bool)

(assert (=> d!27849 (=> res!51718 e!67504)))

(declare-fun lt!52804 () Bool)

(assert (=> d!27849 (= res!51718 (not lt!52804))))

(declare-fun lt!52801 () Bool)

(assert (=> d!27849 (= lt!52804 lt!52801)))

(declare-fun lt!52802 () Unit!3132)

(declare-fun e!67503 () Unit!3132)

(assert (=> d!27849 (= lt!52802 e!67503)))

(declare-fun c!17854 () Bool)

(assert (=> d!27849 (= c!17854 lt!52801)))

(assert (=> d!27849 (= lt!52801 (containsKey!159 (toList!779 lt!52533) (_1!1188 lt!52442)))))

(assert (=> d!27849 (= (contains!811 lt!52533 (_1!1188 lt!52442)) lt!52804)))

(declare-fun b!103624 () Bool)

(declare-fun lt!52803 () Unit!3132)

(assert (=> b!103624 (= e!67503 lt!52803)))

(assert (=> b!103624 (= lt!52803 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52533) (_1!1188 lt!52442)))))

(assert (=> b!103624 (isDefined!108 (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442)))))

(declare-fun b!103625 () Bool)

(declare-fun Unit!3148 () Unit!3132)

(assert (=> b!103625 (= e!67503 Unit!3148)))

(declare-fun b!103626 () Bool)

(assert (=> b!103626 (= e!67504 (isDefined!108 (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442))))))

(assert (= (and d!27849 c!17854) b!103624))

(assert (= (and d!27849 (not c!17854)) b!103625))

(assert (= (and d!27849 (not res!51718)) b!103626))

(declare-fun m!114483 () Bool)

(assert (=> d!27849 m!114483))

(declare-fun m!114485 () Bool)

(assert (=> b!103624 m!114485))

(assert (=> b!103624 m!114095))

(assert (=> b!103624 m!114095))

(declare-fun m!114487 () Bool)

(assert (=> b!103624 m!114487))

(assert (=> b!103626 m!114095))

(assert (=> b!103626 m!114095))

(assert (=> b!103626 m!114487))

(assert (=> d!27755 d!27849))

(declare-fun b!103629 () Bool)

(declare-fun e!67506 () Option!162)

(assert (=> b!103629 (= e!67506 (getValueByKey!156 (t!5646 lt!52532) (_1!1188 lt!52442)))))

(declare-fun b!103628 () Bool)

(declare-fun e!67505 () Option!162)

(assert (=> b!103628 (= e!67505 e!67506)))

(declare-fun c!17856 () Bool)

(assert (=> b!103628 (= c!17856 (and ((_ is Cons!1588) lt!52532) (not (= (_1!1188 (h!2184 lt!52532)) (_1!1188 lt!52442)))))))

(declare-fun b!103627 () Bool)

(assert (=> b!103627 (= e!67505 (Some!161 (_2!1188 (h!2184 lt!52532))))))

(declare-fun d!27851 () Bool)

(declare-fun c!17855 () Bool)

(assert (=> d!27851 (= c!17855 (and ((_ is Cons!1588) lt!52532) (= (_1!1188 (h!2184 lt!52532)) (_1!1188 lt!52442))))))

(assert (=> d!27851 (= (getValueByKey!156 lt!52532 (_1!1188 lt!52442)) e!67505)))

(declare-fun b!103630 () Bool)

(assert (=> b!103630 (= e!67506 None!160)))

(assert (= (and d!27851 c!17855) b!103627))

(assert (= (and d!27851 (not c!17855)) b!103628))

(assert (= (and b!103628 c!17856) b!103629))

(assert (= (and b!103628 (not c!17856)) b!103630))

(declare-fun m!114489 () Bool)

(assert (=> b!103629 m!114489))

(assert (=> d!27755 d!27851))

(declare-fun d!27853 () Bool)

(assert (=> d!27853 (= (getValueByKey!156 lt!52532 (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442)))))

(declare-fun lt!52807 () Unit!3132)

(declare-fun choose!648 (List!1592 (_ BitVec 64) V!3209) Unit!3132)

(assert (=> d!27853 (= lt!52807 (choose!648 lt!52532 (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun e!67509 () Bool)

(assert (=> d!27853 e!67509))

(declare-fun res!51723 () Bool)

(assert (=> d!27853 (=> (not res!51723) (not e!67509))))

(declare-fun isStrictlySorted!295 (List!1592) Bool)

(assert (=> d!27853 (= res!51723 (isStrictlySorted!295 lt!52532))))

(assert (=> d!27853 (= (lemmaContainsTupThenGetReturnValue!72 lt!52532 (_1!1188 lt!52442) (_2!1188 lt!52442)) lt!52807)))

(declare-fun b!103635 () Bool)

(declare-fun res!51724 () Bool)

(assert (=> b!103635 (=> (not res!51724) (not e!67509))))

(assert (=> b!103635 (= res!51724 (containsKey!159 lt!52532 (_1!1188 lt!52442)))))

(declare-fun b!103636 () Bool)

(assert (=> b!103636 (= e!67509 (contains!812 lt!52532 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(assert (= (and d!27853 res!51723) b!103635))

(assert (= (and b!103635 res!51724) b!103636))

(assert (=> d!27853 m!114089))

(declare-fun m!114491 () Bool)

(assert (=> d!27853 m!114491))

(declare-fun m!114493 () Bool)

(assert (=> d!27853 m!114493))

(declare-fun m!114495 () Bool)

(assert (=> b!103635 m!114495))

(declare-fun m!114497 () Bool)

(assert (=> b!103636 m!114497))

(assert (=> d!27755 d!27853))

(declare-fun b!103657 () Bool)

(declare-fun e!67520 () List!1592)

(declare-fun call!10870 () List!1592)

(assert (=> b!103657 (= e!67520 call!10870)))

(declare-fun b!103658 () Bool)

(declare-fun e!67523 () List!1592)

(assert (=> b!103658 (= e!67523 (insertStrictlySorted!75 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))) (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun b!103659 () Bool)

(declare-fun e!67521 () List!1592)

(declare-fun call!10871 () List!1592)

(assert (=> b!103659 (= e!67521 call!10871)))

(declare-fun d!27855 () Bool)

(declare-fun e!67522 () Bool)

(assert (=> d!27855 e!67522))

(declare-fun res!51730 () Bool)

(assert (=> d!27855 (=> (not res!51730) (not e!67522))))

(declare-fun lt!52810 () List!1592)

(assert (=> d!27855 (= res!51730 (isStrictlySorted!295 lt!52810))))

(declare-fun e!67524 () List!1592)

(assert (=> d!27855 (= lt!52810 e!67524)))

(declare-fun c!17865 () Bool)

(assert (=> d!27855 (= c!17865 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 lt!52444))) (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52444)))) (_1!1188 lt!52442))))))

(assert (=> d!27855 (isStrictlySorted!295 (toList!779 (+!137 lt!52441 lt!52444)))))

(assert (=> d!27855 (= (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 lt!52444)) (_1!1188 lt!52442) (_2!1188 lt!52442)) lt!52810)))

(declare-fun call!10869 () List!1592)

(declare-fun bm!10866 () Bool)

(declare-fun $colon$colon!79 (List!1592 tuple2!2354) List!1592)

(assert (=> bm!10866 (= call!10869 ($colon$colon!79 e!67523 (ite c!17865 (h!2184 (toList!779 (+!137 lt!52441 lt!52444))) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442)))))))

(declare-fun c!17867 () Bool)

(assert (=> bm!10866 (= c!17867 c!17865)))

(declare-fun c!17868 () Bool)

(declare-fun c!17866 () Bool)

(declare-fun b!103660 () Bool)

(assert (=> b!103660 (= e!67523 (ite c!17868 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))) (ite c!17866 (Cons!1588 (h!2184 (toList!779 (+!137 lt!52441 lt!52444))) (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) Nil!1589)))))

(declare-fun b!103661 () Bool)

(assert (=> b!103661 (= c!17866 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 lt!52444))) (bvsgt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52444)))) (_1!1188 lt!52442))))))

(assert (=> b!103661 (= e!67521 e!67520)))

(declare-fun bm!10867 () Bool)

(assert (=> bm!10867 (= call!10870 call!10871)))

(declare-fun b!103662 () Bool)

(assert (=> b!103662 (= e!67520 call!10870)))

(declare-fun bm!10868 () Bool)

(assert (=> bm!10868 (= call!10871 call!10869)))

(declare-fun b!103663 () Bool)

(assert (=> b!103663 (= e!67522 (contains!812 lt!52810 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!103664 () Bool)

(declare-fun res!51729 () Bool)

(assert (=> b!103664 (=> (not res!51729) (not e!67522))))

(assert (=> b!103664 (= res!51729 (containsKey!159 lt!52810 (_1!1188 lt!52442)))))

(declare-fun b!103665 () Bool)

(assert (=> b!103665 (= e!67524 e!67521)))

(assert (=> b!103665 (= c!17868 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 lt!52444))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52444)))) (_1!1188 lt!52442))))))

(declare-fun b!103666 () Bool)

(assert (=> b!103666 (= e!67524 call!10869)))

(assert (= (and d!27855 c!17865) b!103666))

(assert (= (and d!27855 (not c!17865)) b!103665))

(assert (= (and b!103665 c!17868) b!103659))

(assert (= (and b!103665 (not c!17868)) b!103661))

(assert (= (and b!103661 c!17866) b!103662))

(assert (= (and b!103661 (not c!17866)) b!103657))

(assert (= (or b!103662 b!103657) bm!10867))

(assert (= (or b!103659 bm!10867) bm!10868))

(assert (= (or b!103666 bm!10868) bm!10866))

(assert (= (and bm!10866 c!17867) b!103658))

(assert (= (and bm!10866 (not c!17867)) b!103660))

(assert (= (and d!27855 res!51730) b!103664))

(assert (= (and b!103664 res!51729) b!103663))

(declare-fun m!114499 () Bool)

(assert (=> d!27855 m!114499))

(declare-fun m!114501 () Bool)

(assert (=> d!27855 m!114501))

(declare-fun m!114503 () Bool)

(assert (=> b!103663 m!114503))

(declare-fun m!114505 () Bool)

(assert (=> b!103664 m!114505))

(declare-fun m!114507 () Bool)

(assert (=> b!103658 m!114507))

(declare-fun m!114509 () Bool)

(assert (=> bm!10866 m!114509))

(assert (=> d!27755 d!27855))

(declare-fun bm!10869 () Bool)

(declare-fun call!10878 () ListLongMap!1527)

(assert (=> bm!10869 (= call!10878 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10870 () Bool)

(declare-fun call!10875 () ListLongMap!1527)

(declare-fun call!10876 () ListLongMap!1527)

(assert (=> bm!10870 (= call!10875 call!10876)))

(declare-fun b!103667 () Bool)

(declare-fun e!67525 () Unit!3132)

(declare-fun lt!52825 () Unit!3132)

(assert (=> b!103667 (= e!67525 lt!52825)))

(declare-fun lt!52827 () ListLongMap!1527)

(assert (=> b!103667 (= lt!52827 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52832 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52832 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52811 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52811 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52829 () Unit!3132)

(assert (=> b!103667 (= lt!52829 (addStillContains!73 lt!52827 lt!52832 (zeroValue!2437 newMap!16) lt!52811))))

(assert (=> b!103667 (contains!811 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))) lt!52811)))

(declare-fun lt!52816 () Unit!3132)

(assert (=> b!103667 (= lt!52816 lt!52829)))

(declare-fun lt!52821 () ListLongMap!1527)

(assert (=> b!103667 (= lt!52821 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52819 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52819 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52823 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52823 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52812 () Unit!3132)

(assert (=> b!103667 (= lt!52812 (addApplyDifferent!73 lt!52821 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) lt!52823))))

(assert (=> b!103667 (= (apply!97 (+!137 lt!52821 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!52823) (apply!97 lt!52821 lt!52823))))

(declare-fun lt!52831 () Unit!3132)

(assert (=> b!103667 (= lt!52831 lt!52812)))

(declare-fun lt!52826 () ListLongMap!1527)

(assert (=> b!103667 (= lt!52826 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52824 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52824 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52814 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52814 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52830 () Unit!3132)

(assert (=> b!103667 (= lt!52830 (addApplyDifferent!73 lt!52826 lt!52824 (zeroValue!2437 newMap!16) lt!52814))))

(assert (=> b!103667 (= (apply!97 (+!137 lt!52826 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))) lt!52814) (apply!97 lt!52826 lt!52814))))

(declare-fun lt!52813 () Unit!3132)

(assert (=> b!103667 (= lt!52813 lt!52830)))

(declare-fun lt!52820 () ListLongMap!1527)

(assert (=> b!103667 (= lt!52820 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!52822 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52822 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52818 () (_ BitVec 64))

(assert (=> b!103667 (= lt!52818 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103667 (= lt!52825 (addApplyDifferent!73 lt!52820 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) lt!52818))))

(assert (=> b!103667 (= (apply!97 (+!137 lt!52820 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!52818) (apply!97 lt!52820 lt!52818))))

(declare-fun b!103668 () Bool)

(declare-fun e!67529 () Bool)

(declare-fun call!10872 () Bool)

(assert (=> b!103668 (= e!67529 (not call!10872))))

(declare-fun lt!52828 () ListLongMap!1527)

(declare-fun e!67530 () Bool)

(declare-fun b!103669 () Bool)

(assert (=> b!103669 (= e!67530 (= (apply!97 lt!52828 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103669 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731))))))

(assert (=> b!103669 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103670 () Bool)

(declare-fun e!67531 () ListLongMap!1527)

(declare-fun call!10873 () ListLongMap!1527)

(assert (=> b!103670 (= e!67531 call!10873)))

(declare-fun b!103671 () Bool)

(declare-fun Unit!3149 () Unit!3132)

(assert (=> b!103671 (= e!67525 Unit!3149)))

(declare-fun b!103672 () Bool)

(declare-fun e!67528 () ListLongMap!1527)

(assert (=> b!103672 (= e!67528 call!10875)))

(declare-fun b!103674 () Bool)

(declare-fun e!67526 () Bool)

(declare-fun call!10874 () Bool)

(assert (=> b!103674 (= e!67526 (not call!10874))))

(declare-fun b!103675 () Bool)

(declare-fun e!67527 () Bool)

(assert (=> b!103675 (= e!67527 e!67530)))

(declare-fun res!51733 () Bool)

(assert (=> b!103675 (=> (not res!51733) (not e!67530))))

(assert (=> b!103675 (= res!51733 (contains!811 lt!52828 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103675 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103676 () Bool)

(declare-fun e!67534 () Bool)

(assert (=> b!103676 (= e!67534 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103677 () Bool)

(declare-fun res!51731 () Bool)

(declare-fun e!67532 () Bool)

(assert (=> b!103677 (=> (not res!51731) (not e!67532))))

(assert (=> b!103677 (= res!51731 e!67526)))

(declare-fun c!17869 () Bool)

(assert (=> b!103677 (= c!17869 (not (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!17874 () Bool)

(declare-fun call!10877 () ListLongMap!1527)

(declare-fun c!17872 () Bool)

(declare-fun bm!10871 () Bool)

(assert (=> bm!10871 (= call!10877 (+!137 (ite c!17872 call!10878 (ite c!17874 call!10876 call!10875)) (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(declare-fun b!103678 () Bool)

(declare-fun e!67533 () ListLongMap!1527)

(assert (=> b!103678 (= e!67533 e!67531)))

(assert (=> b!103678 (= c!17874 (and (not (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103679 () Bool)

(assert (=> b!103679 (= e!67528 call!10873)))

(declare-fun bm!10872 () Bool)

(assert (=> bm!10872 (= call!10873 call!10877)))

(declare-fun b!103680 () Bool)

(declare-fun c!17873 () Bool)

(assert (=> b!103680 (= c!17873 (and (not (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103680 (= e!67531 e!67528)))

(declare-fun b!103681 () Bool)

(assert (=> b!103681 (= e!67533 (+!137 call!10877 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))

(declare-fun bm!10873 () Bool)

(assert (=> bm!10873 (= call!10876 call!10878)))

(declare-fun b!103682 () Bool)

(declare-fun res!51739 () Bool)

(assert (=> b!103682 (=> (not res!51739) (not e!67532))))

(assert (=> b!103682 (= res!51739 e!67527)))

(declare-fun res!51735 () Bool)

(assert (=> b!103682 (=> res!51735 e!67527)))

(declare-fun e!67535 () Bool)

(assert (=> b!103682 (= res!51735 (not e!67535))))

(declare-fun res!51734 () Bool)

(assert (=> b!103682 (=> (not res!51734) (not e!67535))))

(assert (=> b!103682 (= res!51734 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103683 () Bool)

(declare-fun e!67537 () Bool)

(assert (=> b!103683 (= e!67537 (= (apply!97 lt!52828 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))

(declare-fun bm!10874 () Bool)

(assert (=> bm!10874 (= call!10874 (contains!811 lt!52828 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10875 () Bool)

(assert (=> bm!10875 (= call!10872 (contains!811 lt!52828 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103673 () Bool)

(assert (=> b!103673 (= e!67529 e!67537)))

(declare-fun res!51737 () Bool)

(assert (=> b!103673 (= res!51737 call!10872)))

(assert (=> b!103673 (=> (not res!51737) (not e!67537))))

(declare-fun d!27857 () Bool)

(assert (=> d!27857 e!67532))

(declare-fun res!51738 () Bool)

(assert (=> d!27857 (=> (not res!51738) (not e!67532))))

(assert (=> d!27857 (= res!51738 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!52815 () ListLongMap!1527)

(assert (=> d!27857 (= lt!52828 lt!52815)))

(declare-fun lt!52817 () Unit!3132)

(assert (=> d!27857 (= lt!52817 e!67525)))

(declare-fun c!17871 () Bool)

(assert (=> d!27857 (= c!17871 e!67534)))

(declare-fun res!51736 () Bool)

(assert (=> d!27857 (=> (not res!51736) (not e!67534))))

(assert (=> d!27857 (= res!51736 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27857 (= lt!52815 e!67533)))

(assert (=> d!27857 (= c!17872 (and (not (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27857 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27857 (= (getCurrentListMap!467 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!52828)))

(declare-fun b!103684 () Bool)

(assert (=> b!103684 (= e!67535 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103685 () Bool)

(declare-fun e!67536 () Bool)

(assert (=> b!103685 (= e!67526 e!67536)))

(declare-fun res!51732 () Bool)

(assert (=> b!103685 (= res!51732 call!10874)))

(assert (=> b!103685 (=> (not res!51732) (not e!67536))))

(declare-fun b!103686 () Bool)

(assert (=> b!103686 (= e!67536 (= (apply!97 lt!52828 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!103687 () Bool)

(assert (=> b!103687 (= e!67532 e!67529)))

(declare-fun c!17870 () Bool)

(assert (=> b!103687 (= c!17870 (not (= (bvand (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!27857 c!17872) b!103681))

(assert (= (and d!27857 (not c!17872)) b!103678))

(assert (= (and b!103678 c!17874) b!103670))

(assert (= (and b!103678 (not c!17874)) b!103680))

(assert (= (and b!103680 c!17873) b!103679))

(assert (= (and b!103680 (not c!17873)) b!103672))

(assert (= (or b!103679 b!103672) bm!10870))

(assert (= (or b!103670 bm!10870) bm!10873))

(assert (= (or b!103670 b!103679) bm!10872))

(assert (= (or b!103681 bm!10873) bm!10869))

(assert (= (or b!103681 bm!10872) bm!10871))

(assert (= (and d!27857 res!51736) b!103676))

(assert (= (and d!27857 c!17871) b!103667))

(assert (= (and d!27857 (not c!17871)) b!103671))

(assert (= (and d!27857 res!51738) b!103682))

(assert (= (and b!103682 res!51734) b!103684))

(assert (= (and b!103682 (not res!51735)) b!103675))

(assert (= (and b!103675 res!51733) b!103669))

(assert (= (and b!103682 res!51739) b!103677))

(assert (= (and b!103677 c!17869) b!103685))

(assert (= (and b!103677 (not c!17869)) b!103674))

(assert (= (and b!103685 res!51732) b!103686))

(assert (= (or b!103685 b!103674) bm!10874))

(assert (= (and b!103677 res!51731) b!103687))

(assert (= (and b!103687 c!17870) b!103673))

(assert (= (and b!103687 (not c!17870)) b!103668))

(assert (= (and b!103673 res!51737) b!103683))

(assert (= (or b!103673 b!103668) bm!10875))

(declare-fun b_lambda!4639 () Bool)

(assert (=> (not b_lambda!4639) (not b!103669)))

(assert (=> b!103669 t!5659))

(declare-fun b_and!6421 () Bool)

(assert (= b_and!6417 (and (=> t!5659 result!3431) b_and!6421)))

(assert (=> b!103669 t!5661))

(declare-fun b_and!6423 () Bool)

(assert (= b_and!6419 (and (=> t!5661 result!3433) b_and!6423)))

(declare-fun m!114511 () Bool)

(assert (=> b!103681 m!114511))

(assert (=> d!27857 m!114321))

(declare-fun m!114513 () Bool)

(assert (=> bm!10869 m!114513))

(assert (=> b!103684 m!114381))

(assert (=> b!103684 m!114381))

(assert (=> b!103684 m!114383))

(declare-fun m!114515 () Bool)

(assert (=> bm!10875 m!114515))

(assert (=> b!103675 m!114381))

(assert (=> b!103675 m!114381))

(declare-fun m!114517 () Bool)

(assert (=> b!103675 m!114517))

(assert (=> b!103669 m!114389))

(assert (=> b!103669 m!114381))

(declare-fun m!114519 () Bool)

(assert (=> b!103669 m!114519))

(assert (=> b!103669 m!114381))

(declare-fun m!114521 () Bool)

(assert (=> b!103669 m!114521))

(assert (=> b!103669 m!114521))

(assert (=> b!103669 m!114389))

(declare-fun m!114523 () Bool)

(assert (=> b!103669 m!114523))

(declare-fun m!114525 () Bool)

(assert (=> bm!10871 m!114525))

(declare-fun m!114527 () Bool)

(assert (=> b!103686 m!114527))

(declare-fun m!114529 () Bool)

(assert (=> bm!10874 m!114529))

(declare-fun m!114531 () Bool)

(assert (=> b!103667 m!114531))

(declare-fun m!114533 () Bool)

(assert (=> b!103667 m!114533))

(declare-fun m!114535 () Bool)

(assert (=> b!103667 m!114535))

(assert (=> b!103667 m!114381))

(declare-fun m!114537 () Bool)

(assert (=> b!103667 m!114537))

(assert (=> b!103667 m!114513))

(declare-fun m!114539 () Bool)

(assert (=> b!103667 m!114539))

(declare-fun m!114541 () Bool)

(assert (=> b!103667 m!114541))

(declare-fun m!114543 () Bool)

(assert (=> b!103667 m!114543))

(declare-fun m!114545 () Bool)

(assert (=> b!103667 m!114545))

(declare-fun m!114547 () Bool)

(assert (=> b!103667 m!114547))

(declare-fun m!114549 () Bool)

(assert (=> b!103667 m!114549))

(assert (=> b!103667 m!114543))

(declare-fun m!114551 () Bool)

(assert (=> b!103667 m!114551))

(assert (=> b!103667 m!114537))

(declare-fun m!114553 () Bool)

(assert (=> b!103667 m!114553))

(assert (=> b!103667 m!114535))

(declare-fun m!114555 () Bool)

(assert (=> b!103667 m!114555))

(declare-fun m!114557 () Bool)

(assert (=> b!103667 m!114557))

(assert (=> b!103667 m!114547))

(declare-fun m!114559 () Bool)

(assert (=> b!103667 m!114559))

(assert (=> b!103676 m!114381))

(assert (=> b!103676 m!114381))

(assert (=> b!103676 m!114383))

(declare-fun m!114561 () Bool)

(assert (=> b!103683 m!114561))

(assert (=> bm!10831 d!27857))

(declare-fun d!27859 () Bool)

(declare-fun e!67538 () Bool)

(assert (=> d!27859 e!67538))

(declare-fun res!51740 () Bool)

(assert (=> d!27859 (=> (not res!51740) (not e!67538))))

(declare-fun lt!52835 () ListLongMap!1527)

(assert (=> d!27859 (= res!51740 (contains!811 lt!52835 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!52834 () List!1592)

(assert (=> d!27859 (= lt!52835 (ListLongMap!1528 lt!52834))))

(declare-fun lt!52833 () Unit!3132)

(declare-fun lt!52836 () Unit!3132)

(assert (=> d!27859 (= lt!52833 lt!52836)))

(assert (=> d!27859 (= (getValueByKey!156 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27859 (= lt!52836 (lemmaContainsTupThenGetReturnValue!72 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27859 (= lt!52834 (insertStrictlySorted!75 (toList!779 call!10823) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27859 (= (+!137 call!10823 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!52835)))

(declare-fun b!103688 () Bool)

(declare-fun res!51741 () Bool)

(assert (=> b!103688 (=> (not res!51741) (not e!67538))))

(assert (=> b!103688 (= res!51741 (= (getValueByKey!156 (toList!779 lt!52835) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!103689 () Bool)

(assert (=> b!103689 (= e!67538 (contains!812 (toList!779 lt!52835) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!27859 res!51740) b!103688))

(assert (= (and b!103688 res!51741) b!103689))

(declare-fun m!114563 () Bool)

(assert (=> d!27859 m!114563))

(declare-fun m!114565 () Bool)

(assert (=> d!27859 m!114565))

(declare-fun m!114567 () Bool)

(assert (=> d!27859 m!114567))

(declare-fun m!114569 () Bool)

(assert (=> d!27859 m!114569))

(declare-fun m!114571 () Bool)

(assert (=> b!103688 m!114571))

(declare-fun m!114573 () Bool)

(assert (=> b!103689 m!114573))

(assert (=> b!103472 d!27859))

(declare-fun d!27861 () Bool)

(declare-fun e!67541 () Bool)

(assert (=> d!27861 e!67541))

(declare-fun res!51746 () Bool)

(assert (=> d!27861 (=> (not res!51746) (not e!67541))))

(declare-fun lt!52841 () SeekEntryResult!252)

(assert (=> d!27861 (= res!51746 ((_ is Found!252) lt!52841))))

(assert (=> d!27861 (= lt!52841 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun lt!52842 () Unit!3132)

(declare-fun choose!649 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) Int) Unit!3132)

(assert (=> d!27861 (= lt!52842 (choose!649 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27861 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27861 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) lt!52842)))

(declare-fun b!103694 () Bool)

(declare-fun res!51747 () Bool)

(assert (=> b!103694 (=> (not res!51747) (not e!67541))))

(assert (=> b!103694 (= res!51747 (inRange!0 (index!3156 lt!52841) (mask!6696 newMap!16)))))

(declare-fun b!103695 () Bool)

(assert (=> b!103695 (= e!67541 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52841)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103695 (and (bvsge (index!3156 lt!52841) #b00000000000000000000000000000000) (bvslt (index!3156 lt!52841) (size!2302 (_keys!4262 newMap!16))))))

(assert (= (and d!27861 res!51746) b!103694))

(assert (= (and b!103694 res!51747) b!103695))

(assert (=> d!27861 m!113915))

(assert (=> d!27861 m!114279))

(assert (=> d!27861 m!113915))

(declare-fun m!114575 () Bool)

(assert (=> d!27861 m!114575))

(assert (=> d!27861 m!114321))

(declare-fun m!114577 () Bool)

(assert (=> b!103694 m!114577))

(declare-fun m!114579 () Bool)

(assert (=> b!103695 m!114579))

(assert (=> bm!10820 d!27861))

(declare-fun d!27863 () Bool)

(declare-fun res!51748 () Bool)

(declare-fun e!67542 () Bool)

(assert (=> d!27863 (=> res!51748 e!67542)))

(assert (=> d!27863 (= res!51748 (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27863 (= (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!67542)))

(declare-fun b!103696 () Bool)

(declare-fun e!67543 () Bool)

(assert (=> b!103696 (= e!67542 e!67543)))

(declare-fun res!51749 () Bool)

(assert (=> b!103696 (=> (not res!51749) (not e!67543))))

(assert (=> b!103696 (= res!51749 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103697 () Bool)

(assert (=> b!103697 (= e!67543 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!27863 (not res!51748)) b!103696))

(assert (= (and b!103696 res!51749) b!103697))

(assert (=> d!27863 m!114345))

(assert (=> b!103697 m!113915))

(declare-fun m!114581 () Bool)

(assert (=> b!103697 m!114581))

(assert (=> b!103257 d!27863))

(declare-fun d!27865 () Bool)

(assert (=> d!27865 (= (apply!97 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52636) (apply!97 lt!52634 lt!52636))))

(declare-fun lt!52845 () Unit!3132)

(declare-fun choose!650 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3132)

(assert (=> d!27865 (= lt!52845 (choose!650 lt!52634 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52636))))

(declare-fun e!67546 () Bool)

(assert (=> d!27865 e!67546))

(declare-fun res!51752 () Bool)

(assert (=> d!27865 (=> (not res!51752) (not e!67546))))

(assert (=> d!27865 (= res!51752 (contains!811 lt!52634 lt!52636))))

(assert (=> d!27865 (= (addApplyDifferent!73 lt!52634 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52636) lt!52845)))

(declare-fun b!103701 () Bool)

(assert (=> b!103701 (= e!67546 (not (= lt!52636 lt!52632)))))

(assert (= (and d!27865 res!51752) b!103701))

(declare-fun m!114583 () Bool)

(assert (=> d!27865 m!114583))

(assert (=> d!27865 m!114233))

(assert (=> d!27865 m!114217))

(assert (=> d!27865 m!114237))

(assert (=> d!27865 m!114217))

(declare-fun m!114585 () Bool)

(assert (=> d!27865 m!114585))

(assert (=> b!103330 d!27865))

(declare-fun d!27867 () Bool)

(assert (=> d!27867 (= (apply!97 lt!52634 lt!52636) (get!1331 (getValueByKey!156 (toList!779 lt!52634) lt!52636)))))

(declare-fun bs!4253 () Bool)

(assert (= bs!4253 d!27867))

(declare-fun m!114587 () Bool)

(assert (=> bs!4253 m!114587))

(assert (=> bs!4253 m!114587))

(declare-fun m!114589 () Bool)

(assert (=> bs!4253 m!114589))

(assert (=> b!103330 d!27867))

(declare-fun d!27869 () Bool)

(assert (=> d!27869 (= (apply!97 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52631) (apply!97 lt!52633 lt!52631))))

(declare-fun lt!52846 () Unit!3132)

(assert (=> d!27869 (= lt!52846 (choose!650 lt!52633 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52631))))

(declare-fun e!67547 () Bool)

(assert (=> d!27869 e!67547))

(declare-fun res!51753 () Bool)

(assert (=> d!27869 (=> (not res!51753) (not e!67547))))

(assert (=> d!27869 (= res!51753 (contains!811 lt!52633 lt!52631))))

(assert (=> d!27869 (= (addApplyDifferent!73 lt!52633 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52631) lt!52846)))

(declare-fun b!103702 () Bool)

(assert (=> b!103702 (= e!67547 (not (= lt!52631 lt!52635)))))

(assert (= (and d!27869 res!51753) b!103702))

(declare-fun m!114591 () Bool)

(assert (=> d!27869 m!114591))

(assert (=> d!27869 m!114215))

(assert (=> d!27869 m!114229))

(assert (=> d!27869 m!114241))

(assert (=> d!27869 m!114229))

(declare-fun m!114593 () Bool)

(assert (=> d!27869 m!114593))

(assert (=> b!103330 d!27869))

(declare-fun d!27871 () Bool)

(declare-fun e!67549 () Bool)

(assert (=> d!27871 e!67549))

(declare-fun res!51754 () Bool)

(assert (=> d!27871 (=> res!51754 e!67549)))

(declare-fun lt!52850 () Bool)

(assert (=> d!27871 (= res!51754 (not lt!52850))))

(declare-fun lt!52847 () Bool)

(assert (=> d!27871 (= lt!52850 lt!52847)))

(declare-fun lt!52848 () Unit!3132)

(declare-fun e!67548 () Unit!3132)

(assert (=> d!27871 (= lt!52848 e!67548)))

(declare-fun c!17875 () Bool)

(assert (=> d!27871 (= c!17875 lt!52847)))

(assert (=> d!27871 (= lt!52847 (containsKey!159 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))

(assert (=> d!27871 (= (contains!811 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52624) lt!52850)))

(declare-fun b!103703 () Bool)

(declare-fun lt!52849 () Unit!3132)

(assert (=> b!103703 (= e!67548 lt!52849)))

(assert (=> b!103703 (= lt!52849 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))

(assert (=> b!103703 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))

(declare-fun b!103704 () Bool)

(declare-fun Unit!3150 () Unit!3132)

(assert (=> b!103704 (= e!67548 Unit!3150)))

(declare-fun b!103705 () Bool)

(assert (=> b!103705 (= e!67549 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624)))))

(assert (= (and d!27871 c!17875) b!103703))

(assert (= (and d!27871 (not c!17875)) b!103704))

(assert (= (and d!27871 (not res!51754)) b!103705))

(declare-fun m!114595 () Bool)

(assert (=> d!27871 m!114595))

(declare-fun m!114597 () Bool)

(assert (=> b!103703 m!114597))

(declare-fun m!114599 () Bool)

(assert (=> b!103703 m!114599))

(assert (=> b!103703 m!114599))

(declare-fun m!114601 () Bool)

(assert (=> b!103703 m!114601))

(assert (=> b!103705 m!114599))

(assert (=> b!103705 m!114599))

(assert (=> b!103705 m!114601))

(assert (=> b!103330 d!27871))

(declare-fun d!27873 () Bool)

(assert (=> d!27873 (= (apply!97 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52627) (apply!97 lt!52639 lt!52627))))

(declare-fun lt!52851 () Unit!3132)

(assert (=> d!27873 (= lt!52851 (choose!650 lt!52639 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52627))))

(declare-fun e!67550 () Bool)

(assert (=> d!27873 e!67550))

(declare-fun res!51755 () Bool)

(assert (=> d!27873 (=> (not res!51755) (not e!67550))))

(assert (=> d!27873 (= res!51755 (contains!811 lt!52639 lt!52627))))

(assert (=> d!27873 (= (addApplyDifferent!73 lt!52639 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52627) lt!52851)))

(declare-fun b!103706 () Bool)

(assert (=> b!103706 (= e!67550 (not (= lt!52627 lt!52637)))))

(assert (= (and d!27873 res!51755) b!103706))

(declare-fun m!114603 () Bool)

(assert (=> d!27873 m!114603))

(assert (=> d!27873 m!114231))

(assert (=> d!27873 m!114225))

(assert (=> d!27873 m!114227))

(assert (=> d!27873 m!114225))

(declare-fun m!114605 () Bool)

(assert (=> d!27873 m!114605))

(assert (=> b!103330 d!27873))

(declare-fun d!27875 () Bool)

(assert (=> d!27875 (= (apply!97 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52631) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52631)))))

(declare-fun bs!4254 () Bool)

(assert (= bs!4254 d!27875))

(declare-fun m!114607 () Bool)

(assert (=> bs!4254 m!114607))

(assert (=> bs!4254 m!114607))

(declare-fun m!114609 () Bool)

(assert (=> bs!4254 m!114609))

(assert (=> b!103330 d!27875))

(declare-fun d!27877 () Bool)

(declare-fun e!67551 () Bool)

(assert (=> d!27877 e!67551))

(declare-fun res!51756 () Bool)

(assert (=> d!27877 (=> (not res!51756) (not e!67551))))

(declare-fun lt!52854 () ListLongMap!1527)

(assert (=> d!27877 (= res!51756 (contains!811 lt!52854 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52853 () List!1592)

(assert (=> d!27877 (= lt!52854 (ListLongMap!1528 lt!52853))))

(declare-fun lt!52852 () Unit!3132)

(declare-fun lt!52855 () Unit!3132)

(assert (=> d!27877 (= lt!52852 lt!52855)))

(assert (=> d!27877 (= (getValueByKey!156 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27877 (= lt!52855 (lemmaContainsTupThenGetReturnValue!72 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27877 (= lt!52853 (insertStrictlySorted!75 (toList!779 lt!52639) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27877 (= (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52854)))

(declare-fun b!103707 () Bool)

(declare-fun res!51757 () Bool)

(assert (=> b!103707 (=> (not res!51757) (not e!67551))))

(assert (=> b!103707 (= res!51757 (= (getValueByKey!156 (toList!779 lt!52854) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103708 () Bool)

(assert (=> b!103708 (= e!67551 (contains!812 (toList!779 lt!52854) (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27877 res!51756) b!103707))

(assert (= (and b!103707 res!51757) b!103708))

(declare-fun m!114611 () Bool)

(assert (=> d!27877 m!114611))

(declare-fun m!114613 () Bool)

(assert (=> d!27877 m!114613))

(declare-fun m!114615 () Bool)

(assert (=> d!27877 m!114615))

(declare-fun m!114617 () Bool)

(assert (=> d!27877 m!114617))

(declare-fun m!114619 () Bool)

(assert (=> b!103707 m!114619))

(declare-fun m!114621 () Bool)

(assert (=> b!103708 m!114621))

(assert (=> b!103330 d!27877))

(declare-fun d!27879 () Bool)

(declare-fun e!67552 () Bool)

(assert (=> d!27879 e!67552))

(declare-fun res!51758 () Bool)

(assert (=> d!27879 (=> (not res!51758) (not e!67552))))

(declare-fun lt!52858 () ListLongMap!1527)

(assert (=> d!27879 (= res!51758 (contains!811 lt!52858 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52857 () List!1592)

(assert (=> d!27879 (= lt!52858 (ListLongMap!1528 lt!52857))))

(declare-fun lt!52856 () Unit!3132)

(declare-fun lt!52859 () Unit!3132)

(assert (=> d!27879 (= lt!52856 lt!52859)))

(assert (=> d!27879 (= (getValueByKey!156 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27879 (= lt!52859 (lemmaContainsTupThenGetReturnValue!72 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27879 (= lt!52857 (insertStrictlySorted!75 (toList!779 lt!52640) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27879 (= (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52858)))

(declare-fun b!103709 () Bool)

(declare-fun res!51759 () Bool)

(assert (=> b!103709 (=> (not res!51759) (not e!67552))))

(assert (=> b!103709 (= res!51759 (= (getValueByKey!156 (toList!779 lt!52858) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103710 () Bool)

(assert (=> b!103710 (= e!67552 (contains!812 (toList!779 lt!52858) (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27879 res!51758) b!103709))

(assert (= (and b!103709 res!51759) b!103710))

(declare-fun m!114623 () Bool)

(assert (=> d!27879 m!114623))

(declare-fun m!114625 () Bool)

(assert (=> d!27879 m!114625))

(declare-fun m!114627 () Bool)

(assert (=> d!27879 m!114627))

(declare-fun m!114629 () Bool)

(assert (=> d!27879 m!114629))

(declare-fun m!114631 () Bool)

(assert (=> b!103709 m!114631))

(declare-fun m!114633 () Bool)

(assert (=> b!103710 m!114633))

(assert (=> b!103330 d!27879))

(declare-fun d!27881 () Bool)

(declare-fun e!67553 () Bool)

(assert (=> d!27881 e!67553))

(declare-fun res!51760 () Bool)

(assert (=> d!27881 (=> (not res!51760) (not e!67553))))

(declare-fun lt!52862 () ListLongMap!1527)

(assert (=> d!27881 (= res!51760 (contains!811 lt!52862 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52861 () List!1592)

(assert (=> d!27881 (= lt!52862 (ListLongMap!1528 lt!52861))))

(declare-fun lt!52860 () Unit!3132)

(declare-fun lt!52863 () Unit!3132)

(assert (=> d!27881 (= lt!52860 lt!52863)))

(assert (=> d!27881 (= (getValueByKey!156 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27881 (= lt!52863 (lemmaContainsTupThenGetReturnValue!72 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27881 (= lt!52861 (insertStrictlySorted!75 (toList!779 lt!52633) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27881 (= (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52862)))

(declare-fun b!103711 () Bool)

(declare-fun res!51761 () Bool)

(assert (=> b!103711 (=> (not res!51761) (not e!67553))))

(assert (=> b!103711 (= res!51761 (= (getValueByKey!156 (toList!779 lt!52862) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103712 () Bool)

(assert (=> b!103712 (= e!67553 (contains!812 (toList!779 lt!52862) (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27881 res!51760) b!103711))

(assert (= (and b!103711 res!51761) b!103712))

(declare-fun m!114635 () Bool)

(assert (=> d!27881 m!114635))

(declare-fun m!114637 () Bool)

(assert (=> d!27881 m!114637))

(declare-fun m!114639 () Bool)

(assert (=> d!27881 m!114639))

(declare-fun m!114641 () Bool)

(assert (=> d!27881 m!114641))

(declare-fun m!114643 () Bool)

(assert (=> b!103711 m!114643))

(declare-fun m!114645 () Bool)

(assert (=> b!103712 m!114645))

(assert (=> b!103330 d!27881))

(declare-fun d!27883 () Bool)

(declare-fun e!67554 () Bool)

(assert (=> d!27883 e!67554))

(declare-fun res!51762 () Bool)

(assert (=> d!27883 (=> (not res!51762) (not e!67554))))

(declare-fun lt!52866 () ListLongMap!1527)

(assert (=> d!27883 (= res!51762 (contains!811 lt!52866 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52865 () List!1592)

(assert (=> d!27883 (= lt!52866 (ListLongMap!1528 lt!52865))))

(declare-fun lt!52864 () Unit!3132)

(declare-fun lt!52867 () Unit!3132)

(assert (=> d!27883 (= lt!52864 lt!52867)))

(assert (=> d!27883 (= (getValueByKey!156 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27883 (= lt!52867 (lemmaContainsTupThenGetReturnValue!72 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27883 (= lt!52865 (insertStrictlySorted!75 (toList!779 lt!52634) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27883 (= (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52866)))

(declare-fun b!103713 () Bool)

(declare-fun res!51763 () Bool)

(assert (=> b!103713 (=> (not res!51763) (not e!67554))))

(assert (=> b!103713 (= res!51763 (= (getValueByKey!156 (toList!779 lt!52866) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103714 () Bool)

(assert (=> b!103714 (= e!67554 (contains!812 (toList!779 lt!52866) (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27883 res!51762) b!103713))

(assert (= (and b!103713 res!51763) b!103714))

(declare-fun m!114647 () Bool)

(assert (=> d!27883 m!114647))

(declare-fun m!114649 () Bool)

(assert (=> d!27883 m!114649))

(declare-fun m!114651 () Bool)

(assert (=> d!27883 m!114651))

(declare-fun m!114653 () Bool)

(assert (=> d!27883 m!114653))

(declare-fun m!114655 () Bool)

(assert (=> b!103713 m!114655))

(declare-fun m!114657 () Bool)

(assert (=> b!103714 m!114657))

(assert (=> b!103330 d!27883))

(declare-fun d!27885 () Bool)

(assert (=> d!27885 (= (apply!97 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52627) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52627)))))

(declare-fun bs!4255 () Bool)

(assert (= bs!4255 d!27885))

(declare-fun m!114659 () Bool)

(assert (=> bs!4255 m!114659))

(assert (=> bs!4255 m!114659))

(declare-fun m!114661 () Bool)

(assert (=> bs!4255 m!114661))

(assert (=> b!103330 d!27885))

(assert (=> b!103330 d!27757))

(declare-fun d!27887 () Bool)

(assert (=> d!27887 (= (apply!97 lt!52639 lt!52627) (get!1331 (getValueByKey!156 (toList!779 lt!52639) lt!52627)))))

(declare-fun bs!4256 () Bool)

(assert (= bs!4256 d!27887))

(declare-fun m!114663 () Bool)

(assert (=> bs!4256 m!114663))

(assert (=> bs!4256 m!114663))

(declare-fun m!114665 () Bool)

(assert (=> bs!4256 m!114665))

(assert (=> b!103330 d!27887))

(declare-fun d!27889 () Bool)

(assert (=> d!27889 (contains!811 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52624)))

(declare-fun lt!52870 () Unit!3132)

(declare-fun choose!651 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3132)

(assert (=> d!27889 (= lt!52870 (choose!651 lt!52640 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52624))))

(assert (=> d!27889 (contains!811 lt!52640 lt!52624)))

(assert (=> d!27889 (= (addStillContains!73 lt!52640 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52624) lt!52870)))

(declare-fun bs!4257 () Bool)

(assert (= bs!4257 d!27889))

(assert (=> bs!4257 m!114219))

(assert (=> bs!4257 m!114219))

(assert (=> bs!4257 m!114235))

(declare-fun m!114667 () Bool)

(assert (=> bs!4257 m!114667))

(declare-fun m!114669 () Bool)

(assert (=> bs!4257 m!114669))

(assert (=> b!103330 d!27889))

(declare-fun d!27891 () Bool)

(assert (=> d!27891 (= (apply!97 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52636) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52636)))))

(declare-fun bs!4258 () Bool)

(assert (= bs!4258 d!27891))

(declare-fun m!114671 () Bool)

(assert (=> bs!4258 m!114671))

(assert (=> bs!4258 m!114671))

(declare-fun m!114673 () Bool)

(assert (=> bs!4258 m!114673))

(assert (=> b!103330 d!27891))

(declare-fun d!27893 () Bool)

(assert (=> d!27893 (= (apply!97 lt!52633 lt!52631) (get!1331 (getValueByKey!156 (toList!779 lt!52633) lt!52631)))))

(declare-fun bs!4259 () Bool)

(assert (= bs!4259 d!27893))

(declare-fun m!114675 () Bool)

(assert (=> bs!4259 m!114675))

(assert (=> bs!4259 m!114675))

(declare-fun m!114677 () Bool)

(assert (=> bs!4259 m!114677))

(assert (=> b!103330 d!27893))

(declare-fun d!27895 () Bool)

(declare-fun e!67556 () Bool)

(assert (=> d!27895 e!67556))

(declare-fun res!51764 () Bool)

(assert (=> d!27895 (=> res!51764 e!67556)))

(declare-fun lt!52874 () Bool)

(assert (=> d!27895 (= res!51764 (not lt!52874))))

(declare-fun lt!52871 () Bool)

(assert (=> d!27895 (= lt!52874 lt!52871)))

(declare-fun lt!52872 () Unit!3132)

(declare-fun e!67555 () Unit!3132)

(assert (=> d!27895 (= lt!52872 e!67555)))

(declare-fun c!17876 () Bool)

(assert (=> d!27895 (= c!17876 lt!52871)))

(assert (=> d!27895 (= lt!52871 (containsKey!159 (toList!779 lt!52569) (_1!1188 lt!52444)))))

(assert (=> d!27895 (= (contains!811 lt!52569 (_1!1188 lt!52444)) lt!52874)))

(declare-fun b!103716 () Bool)

(declare-fun lt!52873 () Unit!3132)

(assert (=> b!103716 (= e!67555 lt!52873)))

(assert (=> b!103716 (= lt!52873 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52569) (_1!1188 lt!52444)))))

(assert (=> b!103716 (isDefined!108 (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444)))))

(declare-fun b!103717 () Bool)

(declare-fun Unit!3151 () Unit!3132)

(assert (=> b!103717 (= e!67555 Unit!3151)))

(declare-fun b!103718 () Bool)

(assert (=> b!103718 (= e!67556 (isDefined!108 (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444))))))

(assert (= (and d!27895 c!17876) b!103716))

(assert (= (and d!27895 (not c!17876)) b!103717))

(assert (= (and d!27895 (not res!51764)) b!103718))

(declare-fun m!114679 () Bool)

(assert (=> d!27895 m!114679))

(declare-fun m!114681 () Bool)

(assert (=> b!103716 m!114681))

(assert (=> b!103716 m!114169))

(assert (=> b!103716 m!114169))

(declare-fun m!114683 () Bool)

(assert (=> b!103716 m!114683))

(assert (=> b!103718 m!114169))

(assert (=> b!103718 m!114169))

(assert (=> b!103718 m!114683))

(assert (=> d!27765 d!27895))

(declare-fun b!103721 () Bool)

(declare-fun e!67558 () Option!162)

(assert (=> b!103721 (= e!67558 (getValueByKey!156 (t!5646 lt!52568) (_1!1188 lt!52444)))))

(declare-fun b!103720 () Bool)

(declare-fun e!67557 () Option!162)

(assert (=> b!103720 (= e!67557 e!67558)))

(declare-fun c!17878 () Bool)

(assert (=> b!103720 (= c!17878 (and ((_ is Cons!1588) lt!52568) (not (= (_1!1188 (h!2184 lt!52568)) (_1!1188 lt!52444)))))))

(declare-fun b!103719 () Bool)

(assert (=> b!103719 (= e!67557 (Some!161 (_2!1188 (h!2184 lt!52568))))))

(declare-fun d!27897 () Bool)

(declare-fun c!17877 () Bool)

(assert (=> d!27897 (= c!17877 (and ((_ is Cons!1588) lt!52568) (= (_1!1188 (h!2184 lt!52568)) (_1!1188 lt!52444))))))

(assert (=> d!27897 (= (getValueByKey!156 lt!52568 (_1!1188 lt!52444)) e!67557)))

(declare-fun b!103722 () Bool)

(assert (=> b!103722 (= e!67558 None!160)))

(assert (= (and d!27897 c!17877) b!103719))

(assert (= (and d!27897 (not c!17877)) b!103720))

(assert (= (and b!103720 c!17878) b!103721))

(assert (= (and b!103720 (not c!17878)) b!103722))

(declare-fun m!114685 () Bool)

(assert (=> b!103721 m!114685))

(assert (=> d!27765 d!27897))

(declare-fun d!27899 () Bool)

(assert (=> d!27899 (= (getValueByKey!156 lt!52568 (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444)))))

(declare-fun lt!52875 () Unit!3132)

(assert (=> d!27899 (= lt!52875 (choose!648 lt!52568 (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(declare-fun e!67559 () Bool)

(assert (=> d!27899 e!67559))

(declare-fun res!51765 () Bool)

(assert (=> d!27899 (=> (not res!51765) (not e!67559))))

(assert (=> d!27899 (= res!51765 (isStrictlySorted!295 lt!52568))))

(assert (=> d!27899 (= (lemmaContainsTupThenGetReturnValue!72 lt!52568 (_1!1188 lt!52444) (_2!1188 lt!52444)) lt!52875)))

(declare-fun b!103723 () Bool)

(declare-fun res!51766 () Bool)

(assert (=> b!103723 (=> (not res!51766) (not e!67559))))

(assert (=> b!103723 (= res!51766 (containsKey!159 lt!52568 (_1!1188 lt!52444)))))

(declare-fun b!103724 () Bool)

(assert (=> b!103724 (= e!67559 (contains!812 lt!52568 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(assert (= (and d!27899 res!51765) b!103723))

(assert (= (and b!103723 res!51766) b!103724))

(assert (=> d!27899 m!114163))

(declare-fun m!114687 () Bool)

(assert (=> d!27899 m!114687))

(declare-fun m!114689 () Bool)

(assert (=> d!27899 m!114689))

(declare-fun m!114691 () Bool)

(assert (=> b!103723 m!114691))

(declare-fun m!114693 () Bool)

(assert (=> b!103724 m!114693))

(assert (=> d!27765 d!27899))

(declare-fun b!103725 () Bool)

(declare-fun e!67560 () List!1592)

(declare-fun call!10880 () List!1592)

(assert (=> b!103725 (= e!67560 call!10880)))

(declare-fun b!103726 () Bool)

(declare-fun e!67563 () List!1592)

(assert (=> b!103726 (= e!67563 (insertStrictlySorted!75 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))) (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(declare-fun b!103727 () Bool)

(declare-fun e!67561 () List!1592)

(declare-fun call!10881 () List!1592)

(assert (=> b!103727 (= e!67561 call!10881)))

(declare-fun d!27901 () Bool)

(declare-fun e!67562 () Bool)

(assert (=> d!27901 e!67562))

(declare-fun res!51768 () Bool)

(assert (=> d!27901 (=> (not res!51768) (not e!67562))))

(declare-fun lt!52876 () List!1592)

(assert (=> d!27901 (= res!51768 (isStrictlySorted!295 lt!52876))))

(declare-fun e!67564 () List!1592)

(assert (=> d!27901 (= lt!52876 e!67564)))

(declare-fun c!17879 () Bool)

(assert (=> d!27901 (= c!17879 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 lt!52442))) (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52442)))) (_1!1188 lt!52444))))))

(assert (=> d!27901 (isStrictlySorted!295 (toList!779 (+!137 lt!52441 lt!52442)))))

(assert (=> d!27901 (= (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 lt!52442)) (_1!1188 lt!52444) (_2!1188 lt!52444)) lt!52876)))

(declare-fun call!10879 () List!1592)

(declare-fun bm!10876 () Bool)

(assert (=> bm!10876 (= call!10879 ($colon$colon!79 e!67563 (ite c!17879 (h!2184 (toList!779 (+!137 lt!52441 lt!52442))) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444)))))))

(declare-fun c!17881 () Bool)

(assert (=> bm!10876 (= c!17881 c!17879)))

(declare-fun c!17880 () Bool)

(declare-fun c!17882 () Bool)

(declare-fun b!103728 () Bool)

(assert (=> b!103728 (= e!67563 (ite c!17882 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))) (ite c!17880 (Cons!1588 (h!2184 (toList!779 (+!137 lt!52441 lt!52442))) (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) Nil!1589)))))

(declare-fun b!103729 () Bool)

(assert (=> b!103729 (= c!17880 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 lt!52442))) (bvsgt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52442)))) (_1!1188 lt!52444))))))

(assert (=> b!103729 (= e!67561 e!67560)))

(declare-fun bm!10877 () Bool)

(assert (=> bm!10877 (= call!10880 call!10881)))

(declare-fun b!103730 () Bool)

(assert (=> b!103730 (= e!67560 call!10880)))

(declare-fun bm!10878 () Bool)

(assert (=> bm!10878 (= call!10881 call!10879)))

(declare-fun b!103731 () Bool)

(assert (=> b!103731 (= e!67562 (contains!812 lt!52876 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!103732 () Bool)

(declare-fun res!51767 () Bool)

(assert (=> b!103732 (=> (not res!51767) (not e!67562))))

(assert (=> b!103732 (= res!51767 (containsKey!159 lt!52876 (_1!1188 lt!52444)))))

(declare-fun b!103733 () Bool)

(assert (=> b!103733 (= e!67564 e!67561)))

(assert (=> b!103733 (= c!17882 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 lt!52442))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52442)))) (_1!1188 lt!52444))))))

(declare-fun b!103734 () Bool)

(assert (=> b!103734 (= e!67564 call!10879)))

(assert (= (and d!27901 c!17879) b!103734))

(assert (= (and d!27901 (not c!17879)) b!103733))

(assert (= (and b!103733 c!17882) b!103727))

(assert (= (and b!103733 (not c!17882)) b!103729))

(assert (= (and b!103729 c!17880) b!103730))

(assert (= (and b!103729 (not c!17880)) b!103725))

(assert (= (or b!103730 b!103725) bm!10877))

(assert (= (or b!103727 bm!10877) bm!10878))

(assert (= (or b!103734 bm!10878) bm!10876))

(assert (= (and bm!10876 c!17881) b!103726))

(assert (= (and bm!10876 (not c!17881)) b!103728))

(assert (= (and d!27901 res!51768) b!103732))

(assert (= (and b!103732 res!51767) b!103731))

(declare-fun m!114695 () Bool)

(assert (=> d!27901 m!114695))

(declare-fun m!114697 () Bool)

(assert (=> d!27901 m!114697))

(declare-fun m!114699 () Bool)

(assert (=> b!103731 m!114699))

(declare-fun m!114701 () Bool)

(assert (=> b!103732 m!114701))

(declare-fun m!114703 () Bool)

(assert (=> b!103726 m!114703))

(declare-fun m!114705 () Bool)

(assert (=> bm!10876 m!114705))

(assert (=> d!27765 d!27901))

(declare-fun d!27903 () Bool)

(declare-fun e!67566 () Bool)

(assert (=> d!27903 e!67566))

(declare-fun res!51769 () Bool)

(assert (=> d!27903 (=> res!51769 e!67566)))

(declare-fun lt!52880 () Bool)

(assert (=> d!27903 (= res!51769 (not lt!52880))))

(declare-fun lt!52877 () Bool)

(assert (=> d!27903 (= lt!52880 lt!52877)))

(declare-fun lt!52878 () Unit!3132)

(declare-fun e!67565 () Unit!3132)

(assert (=> d!27903 (= lt!52878 e!67565)))

(declare-fun c!17883 () Bool)

(assert (=> d!27903 (= c!17883 lt!52877)))

(assert (=> d!27903 (= lt!52877 (containsKey!159 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27903 (= (contains!811 lt!52641 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52880)))

(declare-fun b!103735 () Bool)

(declare-fun lt!52879 () Unit!3132)

(assert (=> b!103735 (= e!67565 lt!52879)))

(assert (=> b!103735 (= lt!52879 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103735 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103736 () Bool)

(declare-fun Unit!3152 () Unit!3132)

(assert (=> b!103736 (= e!67565 Unit!3152)))

(declare-fun b!103737 () Bool)

(assert (=> b!103737 (= e!67566 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27903 c!17883) b!103735))

(assert (= (and d!27903 (not c!17883)) b!103736))

(assert (= (and d!27903 (not res!51769)) b!103737))

(declare-fun m!114707 () Bool)

(assert (=> d!27903 m!114707))

(declare-fun m!114709 () Bool)

(assert (=> b!103735 m!114709))

(declare-fun m!114711 () Bool)

(assert (=> b!103735 m!114711))

(assert (=> b!103735 m!114711))

(declare-fun m!114713 () Bool)

(assert (=> b!103735 m!114713))

(assert (=> b!103737 m!114711))

(assert (=> b!103737 m!114711))

(assert (=> b!103737 m!114713))

(assert (=> bm!10770 d!27903))

(assert (=> bm!10764 d!27757))

(declare-fun b!103738 () Bool)

(declare-fun e!67570 () Bool)

(declare-fun e!67568 () Bool)

(assert (=> b!103738 (= e!67570 e!67568)))

(declare-fun res!51771 () Bool)

(assert (=> b!103738 (=> (not res!51771) (not e!67568))))

(declare-fun e!67567 () Bool)

(assert (=> b!103738 (= res!51771 (not e!67567))))

(declare-fun res!51770 () Bool)

(assert (=> b!103738 (=> (not res!51770) (not e!67567))))

(assert (=> b!103738 (= res!51770 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103739 () Bool)

(declare-fun e!67569 () Bool)

(declare-fun call!10882 () Bool)

(assert (=> b!103739 (= e!67569 call!10882)))

(declare-fun b!103740 () Bool)

(assert (=> b!103740 (= e!67568 e!67569)))

(declare-fun c!17884 () Bool)

(assert (=> b!103740 (= c!17884 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103741 () Bool)

(assert (=> b!103741 (= e!67569 call!10882)))

(declare-fun d!27905 () Bool)

(declare-fun res!51772 () Bool)

(assert (=> d!27905 (=> res!51772 e!67570)))

(assert (=> d!27905 (= res!51772 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27905 (= (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) e!67570)))

(declare-fun b!103742 () Bool)

(assert (=> b!103742 (= e!67567 (contains!813 (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun bm!10879 () Bool)

(assert (=> bm!10879 (= call!10882 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17884 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590))))))

(assert (= (and d!27905 (not res!51772)) b!103738))

(assert (= (and b!103738 res!51770) b!103742))

(assert (= (and b!103738 res!51771) b!103740))

(assert (= (and b!103740 c!17884) b!103741))

(assert (= (and b!103740 (not c!17884)) b!103739))

(assert (= (or b!103741 b!103739) bm!10879))

(declare-fun m!114715 () Bool)

(assert (=> b!103738 m!114715))

(assert (=> b!103738 m!114715))

(declare-fun m!114717 () Bool)

(assert (=> b!103738 m!114717))

(assert (=> b!103740 m!114715))

(assert (=> b!103740 m!114715))

(assert (=> b!103740 m!114717))

(assert (=> b!103742 m!114715))

(assert (=> b!103742 m!114715))

(declare-fun m!114719 () Bool)

(assert (=> b!103742 m!114719))

(assert (=> bm!10879 m!114715))

(declare-fun m!114721 () Bool)

(assert (=> bm!10879 m!114721))

(assert (=> bm!10749 d!27905))

(declare-fun d!27907 () Bool)

(assert (=> d!27907 (= (apply!97 lt!52641 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4260 () Bool)

(assert (= bs!4260 d!27907))

(assert (=> bs!4260 m!114711))

(assert (=> bs!4260 m!114711))

(declare-fun m!114723 () Bool)

(assert (=> bs!4260 m!114723))

(assert (=> b!103346 d!27907))

(declare-fun d!27909 () Bool)

(declare-fun e!67571 () Bool)

(assert (=> d!27909 e!67571))

(declare-fun res!51773 () Bool)

(assert (=> d!27909 (=> (not res!51773) (not e!67571))))

(declare-fun lt!52883 () ListLongMap!1527)

(assert (=> d!27909 (= res!51773 (contains!811 lt!52883 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52882 () List!1592)

(assert (=> d!27909 (= lt!52883 (ListLongMap!1528 lt!52882))))

(declare-fun lt!52881 () Unit!3132)

(declare-fun lt!52884 () Unit!3132)

(assert (=> d!27909 (= lt!52881 lt!52884)))

(assert (=> d!27909 (= (getValueByKey!156 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27909 (= lt!52884 (lemmaContainsTupThenGetReturnValue!72 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27909 (= lt!52882 (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27909 (= (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52883)))

(declare-fun b!103743 () Bool)

(declare-fun res!51774 () Bool)

(assert (=> b!103743 (=> (not res!51774) (not e!67571))))

(assert (=> b!103743 (= res!51774 (= (getValueByKey!156 (toList!779 lt!52883) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103744 () Bool)

(assert (=> b!103744 (= e!67571 (contains!812 (toList!779 lt!52883) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27909 res!51773) b!103743))

(assert (= (and b!103743 res!51774) b!103744))

(declare-fun m!114725 () Bool)

(assert (=> d!27909 m!114725))

(declare-fun m!114727 () Bool)

(assert (=> d!27909 m!114727))

(declare-fun m!114729 () Bool)

(assert (=> d!27909 m!114729))

(declare-fun m!114731 () Bool)

(assert (=> d!27909 m!114731))

(declare-fun m!114733 () Bool)

(assert (=> b!103743 m!114733))

(declare-fun m!114735 () Bool)

(assert (=> b!103744 m!114735))

(assert (=> d!27763 d!27909))

(declare-fun d!27911 () Bool)

(declare-fun e!67572 () Bool)

(assert (=> d!27911 e!67572))

(declare-fun res!51775 () Bool)

(assert (=> d!27911 (=> (not res!51775) (not e!67572))))

(declare-fun lt!52887 () ListLongMap!1527)

(assert (=> d!27911 (= res!51775 (contains!811 lt!52887 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!52886 () List!1592)

(assert (=> d!27911 (= lt!52887 (ListLongMap!1528 lt!52886))))

(declare-fun lt!52885 () Unit!3132)

(declare-fun lt!52888 () Unit!3132)

(assert (=> d!27911 (= lt!52885 lt!52888)))

(assert (=> d!27911 (= (getValueByKey!156 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27911 (= lt!52888 (lemmaContainsTupThenGetReturnValue!72 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27911 (= lt!52886 (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27911 (= (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!52887)))

(declare-fun b!103745 () Bool)

(declare-fun res!51776 () Bool)

(assert (=> b!103745 (=> (not res!51776) (not e!67572))))

(assert (=> b!103745 (= res!51776 (= (getValueByKey!156 (toList!779 lt!52887) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!103746 () Bool)

(assert (=> b!103746 (= e!67572 (contains!812 (toList!779 lt!52887) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!27911 res!51775) b!103745))

(assert (= (and b!103745 res!51776) b!103746))

(declare-fun m!114737 () Bool)

(assert (=> d!27911 m!114737))

(declare-fun m!114739 () Bool)

(assert (=> d!27911 m!114739))

(declare-fun m!114741 () Bool)

(assert (=> d!27911 m!114741))

(declare-fun m!114743 () Bool)

(assert (=> d!27911 m!114743))

(declare-fun m!114745 () Bool)

(assert (=> b!103745 m!114745))

(declare-fun m!114747 () Bool)

(assert (=> b!103746 m!114747))

(assert (=> d!27763 d!27911))

(declare-fun d!27913 () Bool)

(declare-fun e!67573 () Bool)

(assert (=> d!27913 e!67573))

(declare-fun res!51777 () Bool)

(assert (=> d!27913 (=> (not res!51777) (not e!67573))))

(declare-fun lt!52891 () ListLongMap!1527)

(assert (=> d!27913 (= res!51777 (contains!811 lt!52891 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!52890 () List!1592)

(assert (=> d!27913 (= lt!52891 (ListLongMap!1528 lt!52890))))

(declare-fun lt!52889 () Unit!3132)

(declare-fun lt!52892 () Unit!3132)

(assert (=> d!27913 (= lt!52889 lt!52892)))

(assert (=> d!27913 (= (getValueByKey!156 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27913 (= lt!52892 (lemmaContainsTupThenGetReturnValue!72 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27913 (= lt!52890 (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!27913 (= (+!137 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!52891)))

(declare-fun b!103747 () Bool)

(declare-fun res!51778 () Bool)

(assert (=> b!103747 (=> (not res!51778) (not e!67573))))

(assert (=> b!103747 (= res!51778 (= (getValueByKey!156 (toList!779 lt!52891) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!103748 () Bool)

(assert (=> b!103748 (= e!67573 (contains!812 (toList!779 lt!52891) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!27913 res!51777) b!103747))

(assert (= (and b!103747 res!51778) b!103748))

(declare-fun m!114749 () Bool)

(assert (=> d!27913 m!114749))

(declare-fun m!114751 () Bool)

(assert (=> d!27913 m!114751))

(declare-fun m!114753 () Bool)

(assert (=> d!27913 m!114753))

(declare-fun m!114755 () Bool)

(assert (=> d!27913 m!114755))

(declare-fun m!114757 () Bool)

(assert (=> b!103747 m!114757))

(declare-fun m!114759 () Bool)

(assert (=> b!103748 m!114759))

(assert (=> d!27763 d!27913))

(declare-fun d!27915 () Bool)

(assert (=> d!27915 (= (+!137 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (+!137 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (=> d!27915 true))

(declare-fun _$28!158 () Unit!3132)

(assert (=> d!27915 (= (choose!644 lt!52441 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) _$28!158)))

(declare-fun bs!4261 () Bool)

(assert (= bs!4261 d!27915))

(assert (=> bs!4261 m!114151))

(assert (=> bs!4261 m!114151))

(assert (=> bs!4261 m!114155))

(assert (=> bs!4261 m!114153))

(assert (=> bs!4261 m!114153))

(assert (=> bs!4261 m!114159))

(assert (=> d!27763 d!27915))

(declare-fun d!27917 () Bool)

(declare-fun e!67574 () Bool)

(assert (=> d!27917 e!67574))

(declare-fun res!51779 () Bool)

(assert (=> d!27917 (=> (not res!51779) (not e!67574))))

(declare-fun lt!52895 () ListLongMap!1527)

(assert (=> d!27917 (= res!51779 (contains!811 lt!52895 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!52894 () List!1592)

(assert (=> d!27917 (= lt!52895 (ListLongMap!1528 lt!52894))))

(declare-fun lt!52893 () Unit!3132)

(declare-fun lt!52896 () Unit!3132)

(assert (=> d!27917 (= lt!52893 lt!52896)))

(assert (=> d!27917 (= (getValueByKey!156 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27917 (= lt!52896 (lemmaContainsTupThenGetReturnValue!72 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27917 (= lt!52894 (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27917 (= (+!137 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52895)))

(declare-fun b!103749 () Bool)

(declare-fun res!51780 () Bool)

(assert (=> b!103749 (=> (not res!51780) (not e!67574))))

(assert (=> b!103749 (= res!51780 (= (getValueByKey!156 (toList!779 lt!52895) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103750 () Bool)

(assert (=> b!103750 (= e!67574 (contains!812 (toList!779 lt!52895) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27917 res!51779) b!103749))

(assert (= (and b!103749 res!51780) b!103750))

(declare-fun m!114761 () Bool)

(assert (=> d!27917 m!114761))

(declare-fun m!114763 () Bool)

(assert (=> d!27917 m!114763))

(declare-fun m!114765 () Bool)

(assert (=> d!27917 m!114765))

(declare-fun m!114767 () Bool)

(assert (=> d!27917 m!114767))

(declare-fun m!114769 () Bool)

(assert (=> b!103749 m!114769))

(declare-fun m!114771 () Bool)

(assert (=> b!103750 m!114771))

(assert (=> d!27763 d!27917))

(declare-fun b!103763 () Bool)

(declare-fun c!17891 () Bool)

(declare-fun lt!52903 () (_ BitVec 64))

(assert (=> b!103763 (= c!17891 (= lt!52903 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67582 () SeekEntryResult!252)

(declare-fun e!67581 () SeekEntryResult!252)

(assert (=> b!103763 (= e!67582 e!67581)))

(declare-fun b!103764 () Bool)

(declare-fun e!67583 () SeekEntryResult!252)

(assert (=> b!103764 (= e!67583 e!67582)))

(declare-fun lt!52905 () SeekEntryResult!252)

(assert (=> b!103764 (= lt!52903 (select (arr!2048 (_keys!4262 newMap!16)) (index!3157 lt!52905)))))

(declare-fun c!17892 () Bool)

(assert (=> b!103764 (= c!17892 (= lt!52903 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun d!27919 () Bool)

(declare-fun lt!52904 () SeekEntryResult!252)

(assert (=> d!27919 (and (or ((_ is Undefined!252) lt!52904) (not ((_ is Found!252) lt!52904)) (and (bvsge (index!3156 lt!52904) #b00000000000000000000000000000000) (bvslt (index!3156 lt!52904) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!52904) ((_ is Found!252) lt!52904) (not ((_ is MissingZero!252) lt!52904)) (and (bvsge (index!3155 lt!52904) #b00000000000000000000000000000000) (bvslt (index!3155 lt!52904) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!52904) ((_ is Found!252) lt!52904) ((_ is MissingZero!252) lt!52904) (not ((_ is MissingVacant!252) lt!52904)) (and (bvsge (index!3158 lt!52904) #b00000000000000000000000000000000) (bvslt (index!3158 lt!52904) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!52904) (ite ((_ is Found!252) lt!52904) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52904)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite ((_ is MissingZero!252) lt!52904) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!52904)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!252) lt!52904) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!52904)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27919 (= lt!52904 e!67583)))

(declare-fun c!17893 () Bool)

(assert (=> d!27919 (= c!17893 (and ((_ is Intermediate!252) lt!52905) (undefined!1064 lt!52905)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4317 (_ BitVec 32)) SeekEntryResult!252)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!27919 (= lt!52905 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(assert (=> d!27919 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27919 (= (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)) lt!52904)))

(declare-fun b!103765 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4317 (_ BitVec 32)) SeekEntryResult!252)

(assert (=> b!103765 (= e!67581 (seekKeyOrZeroReturnVacant!0 (x!13494 lt!52905) (index!3157 lt!52905) (index!3157 lt!52905) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun b!103766 () Bool)

(assert (=> b!103766 (= e!67583 Undefined!252)))

(declare-fun b!103767 () Bool)

(assert (=> b!103767 (= e!67582 (Found!252 (index!3157 lt!52905)))))

(declare-fun b!103768 () Bool)

(assert (=> b!103768 (= e!67581 (MissingZero!252 (index!3157 lt!52905)))))

(assert (= (and d!27919 c!17893) b!103766))

(assert (= (and d!27919 (not c!17893)) b!103764))

(assert (= (and b!103764 c!17892) b!103767))

(assert (= (and b!103764 (not c!17892)) b!103763))

(assert (= (and b!103763 c!17891) b!103768))

(assert (= (and b!103763 (not c!17891)) b!103765))

(declare-fun m!114773 () Bool)

(assert (=> b!103764 m!114773))

(declare-fun m!114775 () Bool)

(assert (=> d!27919 m!114775))

(assert (=> d!27919 m!113915))

(declare-fun m!114777 () Bool)

(assert (=> d!27919 m!114777))

(assert (=> d!27919 m!114321))

(declare-fun m!114779 () Bool)

(assert (=> d!27919 m!114779))

(declare-fun m!114781 () Bool)

(assert (=> d!27919 m!114781))

(assert (=> d!27919 m!114777))

(assert (=> d!27919 m!113915))

(declare-fun m!114783 () Bool)

(assert (=> d!27919 m!114783))

(assert (=> b!103765 m!113915))

(declare-fun m!114785 () Bool)

(assert (=> b!103765 m!114785))

(assert (=> bm!10838 d!27919))

(declare-fun d!27921 () Bool)

(declare-fun e!67585 () Bool)

(assert (=> d!27921 e!67585))

(declare-fun res!51781 () Bool)

(assert (=> d!27921 (=> res!51781 e!67585)))

(declare-fun lt!52909 () Bool)

(assert (=> d!27921 (= res!51781 (not lt!52909))))

(declare-fun lt!52906 () Bool)

(assert (=> d!27921 (= lt!52909 lt!52906)))

(declare-fun lt!52907 () Unit!3132)

(declare-fun e!67584 () Unit!3132)

(assert (=> d!27921 (= lt!52907 e!67584)))

(declare-fun c!17894 () Bool)

(assert (=> d!27921 (= c!17894 lt!52906)))

(assert (=> d!27921 (= lt!52906 (containsKey!159 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (=> d!27921 (= (contains!811 call!10829 (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))) lt!52909)))

(declare-fun b!103769 () Bool)

(declare-fun lt!52908 () Unit!3132)

(assert (=> b!103769 (= e!67584 lt!52908)))

(assert (=> b!103769 (= lt!52908 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (=> b!103769 (isDefined!108 (getValueByKey!156 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(declare-fun b!103770 () Bool)

(declare-fun Unit!3153 () Unit!3132)

(assert (=> b!103770 (= e!67584 Unit!3153)))

(declare-fun b!103771 () Bool)

(assert (=> b!103771 (= e!67585 (isDefined!108 (getValueByKey!156 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))))

(assert (= (and d!27921 c!17894) b!103769))

(assert (= (and d!27921 (not c!17894)) b!103770))

(assert (= (and d!27921 (not res!51781)) b!103771))

(assert (=> d!27921 m!114261))

(declare-fun m!114787 () Bool)

(assert (=> d!27921 m!114787))

(assert (=> b!103769 m!114261))

(declare-fun m!114789 () Bool)

(assert (=> b!103769 m!114789))

(assert (=> b!103769 m!114261))

(declare-fun m!114791 () Bool)

(assert (=> b!103769 m!114791))

(assert (=> b!103769 m!114791))

(declare-fun m!114793 () Bool)

(assert (=> b!103769 m!114793))

(assert (=> b!103771 m!114261))

(assert (=> b!103771 m!114791))

(assert (=> b!103771 m!114791))

(assert (=> b!103771 m!114793))

(assert (=> b!103446 d!27921))

(declare-fun d!27923 () Bool)

(declare-fun e!67588 () Bool)

(assert (=> d!27923 e!67588))

(declare-fun res!51784 () Bool)

(assert (=> d!27923 (=> (not res!51784) (not e!67588))))

(assert (=> d!27923 (= res!51784 (and (bvsge (index!3156 lt!52724) #b00000000000000000000000000000000) (bvslt (index!3156 lt!52724) (size!2302 (_keys!4262 newMap!16)))))))

(declare-fun lt!52912 () Unit!3132)

(declare-fun choose!652 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) Int) Unit!3132)

(assert (=> d!27923 (= lt!52912 (choose!652 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27923 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27923 (= (lemmaValidKeyInArrayIsInListMap!106 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (defaultEntry!2560 newMap!16)) lt!52912)))

(declare-fun b!103774 () Bool)

(assert (=> b!103774 (= e!67588 (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (= (and d!27923 res!51784) b!103774))

(declare-fun m!114795 () Bool)

(assert (=> d!27923 m!114795))

(assert (=> d!27923 m!114321))

(declare-fun m!114797 () Bool)

(assert (=> b!103774 m!114797))

(assert (=> b!103774 m!114261))

(assert (=> b!103774 m!114797))

(assert (=> b!103774 m!114261))

(declare-fun m!114799 () Bool)

(assert (=> b!103774 m!114799))

(assert (=> b!103446 d!27923))

(declare-fun d!27925 () Bool)

(declare-fun e!67591 () Bool)

(assert (=> d!27925 e!67591))

(declare-fun res!51787 () Bool)

(assert (=> d!27925 (=> (not res!51787) (not e!67591))))

(assert (=> d!27925 (= res!51787 (and (bvsge (index!3156 lt!52724) #b00000000000000000000000000000000) (bvslt (index!3156 lt!52724) (size!2303 (_values!2543 newMap!16)))))))

(declare-fun lt!52915 () Unit!3132)

(declare-fun choose!653 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3132)

(assert (=> d!27925 (= lt!52915 (choose!653 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)))))

(assert (=> d!27925 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27925 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)) lt!52915)))

(declare-fun b!103777 () Bool)

(assert (=> b!103777 (= e!67591 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (getCurrentListMap!467 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))))))

(assert (= (and d!27925 res!51787) b!103777))

(assert (=> d!27925 m!113915))

(declare-fun m!114801 () Bool)

(assert (=> d!27925 m!114801))

(assert (=> d!27925 m!114321))

(assert (=> b!103777 m!114197))

(assert (=> b!103777 m!114197))

(declare-fun m!114803 () Bool)

(assert (=> b!103777 m!114803))

(assert (=> b!103777 m!114259))

(declare-fun m!114805 () Bool)

(assert (=> b!103777 m!114805))

(assert (=> b!103446 d!27925))

(declare-fun d!27927 () Bool)

(assert (=> d!27927 (= (get!1330 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103203 d!27927))

(declare-fun d!27929 () Bool)

(declare-fun e!67593 () Bool)

(assert (=> d!27929 e!67593))

(declare-fun res!51788 () Bool)

(assert (=> d!27929 (=> res!51788 e!67593)))

(declare-fun lt!52919 () Bool)

(assert (=> d!27929 (= res!51788 (not lt!52919))))

(declare-fun lt!52916 () Bool)

(assert (=> d!27929 (= lt!52919 lt!52916)))

(declare-fun lt!52917 () Unit!3132)

(declare-fun e!67592 () Unit!3132)

(assert (=> d!27929 (= lt!52917 e!67592)))

(declare-fun c!17895 () Bool)

(assert (=> d!27929 (= c!17895 lt!52916)))

(assert (=> d!27929 (= lt!52916 (containsKey!159 (toList!779 lt!52562) (_1!1188 lt!52442)))))

(assert (=> d!27929 (= (contains!811 lt!52562 (_1!1188 lt!52442)) lt!52919)))

(declare-fun b!103778 () Bool)

(declare-fun lt!52918 () Unit!3132)

(assert (=> b!103778 (= e!67592 lt!52918)))

(assert (=> b!103778 (= lt!52918 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52562) (_1!1188 lt!52442)))))

(assert (=> b!103778 (isDefined!108 (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442)))))

(declare-fun b!103779 () Bool)

(declare-fun Unit!3154 () Unit!3132)

(assert (=> b!103779 (= e!67592 Unit!3154)))

(declare-fun b!103780 () Bool)

(assert (=> b!103780 (= e!67593 (isDefined!108 (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442))))))

(assert (= (and d!27929 c!17895) b!103778))

(assert (= (and d!27929 (not c!17895)) b!103779))

(assert (= (and d!27929 (not res!51788)) b!103780))

(declare-fun m!114807 () Bool)

(assert (=> d!27929 m!114807))

(declare-fun m!114809 () Bool)

(assert (=> b!103778 m!114809))

(assert (=> b!103778 m!114147))

(assert (=> b!103778 m!114147))

(declare-fun m!114811 () Bool)

(assert (=> b!103778 m!114811))

(assert (=> b!103780 m!114147))

(assert (=> b!103780 m!114147))

(assert (=> b!103780 m!114811))

(assert (=> d!27761 d!27929))

(declare-fun b!103783 () Bool)

(declare-fun e!67595 () Option!162)

(assert (=> b!103783 (= e!67595 (getValueByKey!156 (t!5646 lt!52561) (_1!1188 lt!52442)))))

(declare-fun b!103782 () Bool)

(declare-fun e!67594 () Option!162)

(assert (=> b!103782 (= e!67594 e!67595)))

(declare-fun c!17897 () Bool)

(assert (=> b!103782 (= c!17897 (and ((_ is Cons!1588) lt!52561) (not (= (_1!1188 (h!2184 lt!52561)) (_1!1188 lt!52442)))))))

(declare-fun b!103781 () Bool)

(assert (=> b!103781 (= e!67594 (Some!161 (_2!1188 (h!2184 lt!52561))))))

(declare-fun d!27931 () Bool)

(declare-fun c!17896 () Bool)

(assert (=> d!27931 (= c!17896 (and ((_ is Cons!1588) lt!52561) (= (_1!1188 (h!2184 lt!52561)) (_1!1188 lt!52442))))))

(assert (=> d!27931 (= (getValueByKey!156 lt!52561 (_1!1188 lt!52442)) e!67594)))

(declare-fun b!103784 () Bool)

(assert (=> b!103784 (= e!67595 None!160)))

(assert (= (and d!27931 c!17896) b!103781))

(assert (= (and d!27931 (not c!17896)) b!103782))

(assert (= (and b!103782 c!17897) b!103783))

(assert (= (and b!103782 (not c!17897)) b!103784))

(declare-fun m!114813 () Bool)

(assert (=> b!103783 m!114813))

(assert (=> d!27761 d!27931))

(declare-fun d!27933 () Bool)

(assert (=> d!27933 (= (getValueByKey!156 lt!52561 (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442)))))

(declare-fun lt!52920 () Unit!3132)

(assert (=> d!27933 (= lt!52920 (choose!648 lt!52561 (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun e!67596 () Bool)

(assert (=> d!27933 e!67596))

(declare-fun res!51789 () Bool)

(assert (=> d!27933 (=> (not res!51789) (not e!67596))))

(assert (=> d!27933 (= res!51789 (isStrictlySorted!295 lt!52561))))

(assert (=> d!27933 (= (lemmaContainsTupThenGetReturnValue!72 lt!52561 (_1!1188 lt!52442) (_2!1188 lt!52442)) lt!52920)))

(declare-fun b!103785 () Bool)

(declare-fun res!51790 () Bool)

(assert (=> b!103785 (=> (not res!51790) (not e!67596))))

(assert (=> b!103785 (= res!51790 (containsKey!159 lt!52561 (_1!1188 lt!52442)))))

(declare-fun b!103786 () Bool)

(assert (=> b!103786 (= e!67596 (contains!812 lt!52561 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(assert (= (and d!27933 res!51789) b!103785))

(assert (= (and b!103785 res!51790) b!103786))

(assert (=> d!27933 m!114141))

(declare-fun m!114815 () Bool)

(assert (=> d!27933 m!114815))

(declare-fun m!114817 () Bool)

(assert (=> d!27933 m!114817))

(declare-fun m!114819 () Bool)

(assert (=> b!103785 m!114819))

(declare-fun m!114821 () Bool)

(assert (=> b!103786 m!114821))

(assert (=> d!27761 d!27933))

(declare-fun b!103787 () Bool)

(declare-fun e!67597 () List!1592)

(declare-fun call!10884 () List!1592)

(assert (=> b!103787 (= e!67597 call!10884)))

(declare-fun b!103788 () Bool)

(declare-fun e!67600 () List!1592)

(assert (=> b!103788 (= e!67600 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52441)) (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun b!103789 () Bool)

(declare-fun e!67598 () List!1592)

(declare-fun call!10885 () List!1592)

(assert (=> b!103789 (= e!67598 call!10885)))

(declare-fun d!27935 () Bool)

(declare-fun e!67599 () Bool)

(assert (=> d!27935 e!67599))

(declare-fun res!51792 () Bool)

(assert (=> d!27935 (=> (not res!51792) (not e!67599))))

(declare-fun lt!52921 () List!1592)

(assert (=> d!27935 (= res!51792 (isStrictlySorted!295 lt!52921))))

(declare-fun e!67601 () List!1592)

(assert (=> d!27935 (= lt!52921 e!67601)))

(declare-fun c!17898 () Bool)

(assert (=> d!27935 (= c!17898 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 lt!52442))))))

(assert (=> d!27935 (isStrictlySorted!295 (toList!779 lt!52441))))

(assert (=> d!27935 (= (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 lt!52442) (_2!1188 lt!52442)) lt!52921)))

(declare-fun bm!10880 () Bool)

(declare-fun call!10883 () List!1592)

(assert (=> bm!10880 (= call!10883 ($colon$colon!79 e!67600 (ite c!17898 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442)))))))

(declare-fun c!17900 () Bool)

(assert (=> bm!10880 (= c!17900 c!17898)))

(declare-fun c!17899 () Bool)

(declare-fun c!17901 () Bool)

(declare-fun b!103790 () Bool)

(assert (=> b!103790 (= e!67600 (ite c!17901 (t!5646 (toList!779 lt!52441)) (ite c!17899 (Cons!1588 (h!2184 (toList!779 lt!52441)) (t!5646 (toList!779 lt!52441))) Nil!1589)))))

(declare-fun b!103791 () Bool)

(assert (=> b!103791 (= c!17899 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 lt!52442))))))

(assert (=> b!103791 (= e!67598 e!67597)))

(declare-fun bm!10881 () Bool)

(assert (=> bm!10881 (= call!10884 call!10885)))

(declare-fun b!103792 () Bool)

(assert (=> b!103792 (= e!67597 call!10884)))

(declare-fun bm!10882 () Bool)

(assert (=> bm!10882 (= call!10885 call!10883)))

(declare-fun b!103793 () Bool)

(assert (=> b!103793 (= e!67599 (contains!812 lt!52921 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!103794 () Bool)

(declare-fun res!51791 () Bool)

(assert (=> b!103794 (=> (not res!51791) (not e!67599))))

(assert (=> b!103794 (= res!51791 (containsKey!159 lt!52921 (_1!1188 lt!52442)))))

(declare-fun b!103795 () Bool)

(assert (=> b!103795 (= e!67601 e!67598)))

(assert (=> b!103795 (= c!17901 (and ((_ is Cons!1588) (toList!779 lt!52441)) (= (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 lt!52442))))))

(declare-fun b!103796 () Bool)

(assert (=> b!103796 (= e!67601 call!10883)))

(assert (= (and d!27935 c!17898) b!103796))

(assert (= (and d!27935 (not c!17898)) b!103795))

(assert (= (and b!103795 c!17901) b!103789))

(assert (= (and b!103795 (not c!17901)) b!103791))

(assert (= (and b!103791 c!17899) b!103792))

(assert (= (and b!103791 (not c!17899)) b!103787))

(assert (= (or b!103792 b!103787) bm!10881))

(assert (= (or b!103789 bm!10881) bm!10882))

(assert (= (or b!103796 bm!10882) bm!10880))

(assert (= (and bm!10880 c!17900) b!103788))

(assert (= (and bm!10880 (not c!17900)) b!103790))

(assert (= (and d!27935 res!51792) b!103794))

(assert (= (and b!103794 res!51791) b!103793))

(declare-fun m!114823 () Bool)

(assert (=> d!27935 m!114823))

(declare-fun m!114825 () Bool)

(assert (=> d!27935 m!114825))

(declare-fun m!114827 () Bool)

(assert (=> b!103793 m!114827))

(declare-fun m!114829 () Bool)

(assert (=> b!103794 m!114829))

(declare-fun m!114831 () Bool)

(assert (=> b!103788 m!114831))

(declare-fun m!114833 () Bool)

(assert (=> bm!10880 m!114833))

(assert (=> d!27761 d!27935))

(declare-fun d!27937 () Bool)

(declare-fun e!67603 () Bool)

(assert (=> d!27937 e!67603))

(declare-fun res!51793 () Bool)

(assert (=> d!27937 (=> res!51793 e!67603)))

(declare-fun lt!52925 () Bool)

(assert (=> d!27937 (= res!51793 (not lt!52925))))

(declare-fun lt!52922 () Bool)

(assert (=> d!27937 (= lt!52925 lt!52922)))

(declare-fun lt!52923 () Unit!3132)

(declare-fun e!67602 () Unit!3132)

(assert (=> d!27937 (= lt!52923 e!67602)))

(declare-fun c!17902 () Bool)

(assert (=> d!27937 (= c!17902 lt!52922)))

(assert (=> d!27937 (= lt!52922 (containsKey!159 (toList!779 lt!52558) (_1!1188 lt!52444)))))

(assert (=> d!27937 (= (contains!811 lt!52558 (_1!1188 lt!52444)) lt!52925)))

(declare-fun b!103797 () Bool)

(declare-fun lt!52924 () Unit!3132)

(assert (=> b!103797 (= e!67602 lt!52924)))

(assert (=> b!103797 (= lt!52924 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52558) (_1!1188 lt!52444)))))

(assert (=> b!103797 (isDefined!108 (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444)))))

(declare-fun b!103798 () Bool)

(declare-fun Unit!3155 () Unit!3132)

(assert (=> b!103798 (= e!67602 Unit!3155)))

(declare-fun b!103799 () Bool)

(assert (=> b!103799 (= e!67603 (isDefined!108 (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444))))))

(assert (= (and d!27937 c!17902) b!103797))

(assert (= (and d!27937 (not c!17902)) b!103798))

(assert (= (and d!27937 (not res!51793)) b!103799))

(declare-fun m!114835 () Bool)

(assert (=> d!27937 m!114835))

(declare-fun m!114837 () Bool)

(assert (=> b!103797 m!114837))

(assert (=> b!103797 m!114135))

(assert (=> b!103797 m!114135))

(declare-fun m!114839 () Bool)

(assert (=> b!103797 m!114839))

(assert (=> b!103799 m!114135))

(assert (=> b!103799 m!114135))

(assert (=> b!103799 m!114839))

(assert (=> d!27759 d!27937))

(declare-fun b!103802 () Bool)

(declare-fun e!67605 () Option!162)

(assert (=> b!103802 (= e!67605 (getValueByKey!156 (t!5646 lt!52557) (_1!1188 lt!52444)))))

(declare-fun b!103801 () Bool)

(declare-fun e!67604 () Option!162)

(assert (=> b!103801 (= e!67604 e!67605)))

(declare-fun c!17904 () Bool)

(assert (=> b!103801 (= c!17904 (and ((_ is Cons!1588) lt!52557) (not (= (_1!1188 (h!2184 lt!52557)) (_1!1188 lt!52444)))))))

(declare-fun b!103800 () Bool)

(assert (=> b!103800 (= e!67604 (Some!161 (_2!1188 (h!2184 lt!52557))))))

(declare-fun d!27939 () Bool)

(declare-fun c!17903 () Bool)

(assert (=> d!27939 (= c!17903 (and ((_ is Cons!1588) lt!52557) (= (_1!1188 (h!2184 lt!52557)) (_1!1188 lt!52444))))))

(assert (=> d!27939 (= (getValueByKey!156 lt!52557 (_1!1188 lt!52444)) e!67604)))

(declare-fun b!103803 () Bool)

(assert (=> b!103803 (= e!67605 None!160)))

(assert (= (and d!27939 c!17903) b!103800))

(assert (= (and d!27939 (not c!17903)) b!103801))

(assert (= (and b!103801 c!17904) b!103802))

(assert (= (and b!103801 (not c!17904)) b!103803))

(declare-fun m!114841 () Bool)

(assert (=> b!103802 m!114841))

(assert (=> d!27759 d!27939))

(declare-fun d!27941 () Bool)

(assert (=> d!27941 (= (getValueByKey!156 lt!52557 (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444)))))

(declare-fun lt!52926 () Unit!3132)

(assert (=> d!27941 (= lt!52926 (choose!648 lt!52557 (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(declare-fun e!67606 () Bool)

(assert (=> d!27941 e!67606))

(declare-fun res!51794 () Bool)

(assert (=> d!27941 (=> (not res!51794) (not e!67606))))

(assert (=> d!27941 (= res!51794 (isStrictlySorted!295 lt!52557))))

(assert (=> d!27941 (= (lemmaContainsTupThenGetReturnValue!72 lt!52557 (_1!1188 lt!52444) (_2!1188 lt!52444)) lt!52926)))

(declare-fun b!103804 () Bool)

(declare-fun res!51795 () Bool)

(assert (=> b!103804 (=> (not res!51795) (not e!67606))))

(assert (=> b!103804 (= res!51795 (containsKey!159 lt!52557 (_1!1188 lt!52444)))))

(declare-fun b!103805 () Bool)

(assert (=> b!103805 (= e!67606 (contains!812 lt!52557 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(assert (= (and d!27941 res!51794) b!103804))

(assert (= (and b!103804 res!51795) b!103805))

(assert (=> d!27941 m!114129))

(declare-fun m!114843 () Bool)

(assert (=> d!27941 m!114843))

(declare-fun m!114845 () Bool)

(assert (=> d!27941 m!114845))

(declare-fun m!114847 () Bool)

(assert (=> b!103804 m!114847))

(declare-fun m!114849 () Bool)

(assert (=> b!103805 m!114849))

(assert (=> d!27759 d!27941))

(declare-fun b!103806 () Bool)

(declare-fun e!67607 () List!1592)

(declare-fun call!10887 () List!1592)

(assert (=> b!103806 (= e!67607 call!10887)))

(declare-fun b!103807 () Bool)

(declare-fun e!67610 () List!1592)

(assert (=> b!103807 (= e!67610 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52441)) (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(declare-fun b!103808 () Bool)

(declare-fun e!67608 () List!1592)

(declare-fun call!10888 () List!1592)

(assert (=> b!103808 (= e!67608 call!10888)))

(declare-fun d!27943 () Bool)

(declare-fun e!67609 () Bool)

(assert (=> d!27943 e!67609))

(declare-fun res!51797 () Bool)

(assert (=> d!27943 (=> (not res!51797) (not e!67609))))

(declare-fun lt!52927 () List!1592)

(assert (=> d!27943 (= res!51797 (isStrictlySorted!295 lt!52927))))

(declare-fun e!67611 () List!1592)

(assert (=> d!27943 (= lt!52927 e!67611)))

(declare-fun c!17905 () Bool)

(assert (=> d!27943 (= c!17905 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 lt!52444))))))

(assert (=> d!27943 (isStrictlySorted!295 (toList!779 lt!52441))))

(assert (=> d!27943 (= (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 lt!52444) (_2!1188 lt!52444)) lt!52927)))

(declare-fun call!10886 () List!1592)

(declare-fun bm!10883 () Bool)

(assert (=> bm!10883 (= call!10886 ($colon$colon!79 e!67610 (ite c!17905 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444)))))))

(declare-fun c!17907 () Bool)

(assert (=> bm!10883 (= c!17907 c!17905)))

(declare-fun c!17908 () Bool)

(declare-fun b!103809 () Bool)

(declare-fun c!17906 () Bool)

(assert (=> b!103809 (= e!67610 (ite c!17908 (t!5646 (toList!779 lt!52441)) (ite c!17906 (Cons!1588 (h!2184 (toList!779 lt!52441)) (t!5646 (toList!779 lt!52441))) Nil!1589)))))

(declare-fun b!103810 () Bool)

(assert (=> b!103810 (= c!17906 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 lt!52444))))))

(assert (=> b!103810 (= e!67608 e!67607)))

(declare-fun bm!10884 () Bool)

(assert (=> bm!10884 (= call!10887 call!10888)))

(declare-fun b!103811 () Bool)

(assert (=> b!103811 (= e!67607 call!10887)))

(declare-fun bm!10885 () Bool)

(assert (=> bm!10885 (= call!10888 call!10886)))

(declare-fun b!103812 () Bool)

(assert (=> b!103812 (= e!67609 (contains!812 lt!52927 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!103813 () Bool)

(declare-fun res!51796 () Bool)

(assert (=> b!103813 (=> (not res!51796) (not e!67609))))

(assert (=> b!103813 (= res!51796 (containsKey!159 lt!52927 (_1!1188 lt!52444)))))

(declare-fun b!103814 () Bool)

(assert (=> b!103814 (= e!67611 e!67608)))

(assert (=> b!103814 (= c!17908 (and ((_ is Cons!1588) (toList!779 lt!52441)) (= (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 lt!52444))))))

(declare-fun b!103815 () Bool)

(assert (=> b!103815 (= e!67611 call!10886)))

(assert (= (and d!27943 c!17905) b!103815))

(assert (= (and d!27943 (not c!17905)) b!103814))

(assert (= (and b!103814 c!17908) b!103808))

(assert (= (and b!103814 (not c!17908)) b!103810))

(assert (= (and b!103810 c!17906) b!103811))

(assert (= (and b!103810 (not c!17906)) b!103806))

(assert (= (or b!103811 b!103806) bm!10884))

(assert (= (or b!103808 bm!10884) bm!10885))

(assert (= (or b!103815 bm!10885) bm!10883))

(assert (= (and bm!10883 c!17907) b!103807))

(assert (= (and bm!10883 (not c!17907)) b!103809))

(assert (= (and d!27943 res!51797) b!103813))

(assert (= (and b!103813 res!51796) b!103812))

(declare-fun m!114851 () Bool)

(assert (=> d!27943 m!114851))

(assert (=> d!27943 m!114825))

(declare-fun m!114853 () Bool)

(assert (=> b!103812 m!114853))

(declare-fun m!114855 () Bool)

(assert (=> b!103813 m!114855))

(declare-fun m!114857 () Bool)

(assert (=> b!103807 m!114857))

(declare-fun m!114859 () Bool)

(assert (=> bm!10883 m!114859))

(assert (=> d!27759 d!27943))

(assert (=> b!103483 d!27817))

(declare-fun d!27945 () Bool)

(declare-fun e!67613 () Bool)

(assert (=> d!27945 e!67613))

(declare-fun res!51798 () Bool)

(assert (=> d!27945 (=> res!51798 e!67613)))

(declare-fun lt!52931 () Bool)

(assert (=> d!27945 (= res!51798 (not lt!52931))))

(declare-fun lt!52928 () Bool)

(assert (=> d!27945 (= lt!52931 lt!52928)))

(declare-fun lt!52929 () Unit!3132)

(declare-fun e!67612 () Unit!3132)

(assert (=> d!27945 (= lt!52929 e!67612)))

(declare-fun c!17909 () Bool)

(assert (=> d!27945 (= c!17909 lt!52928)))

(assert (=> d!27945 (= lt!52928 (containsKey!159 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27945 (= (contains!811 e!67420 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!52931)))

(declare-fun b!103816 () Bool)

(declare-fun lt!52930 () Unit!3132)

(assert (=> b!103816 (= e!67612 lt!52930)))

(assert (=> b!103816 (= lt!52930 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103816 (isDefined!108 (getValueByKey!156 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103817 () Bool)

(declare-fun Unit!3156 () Unit!3132)

(assert (=> b!103817 (= e!67612 Unit!3156)))

(declare-fun b!103818 () Bool)

(assert (=> b!103818 (= e!67613 (isDefined!108 (getValueByKey!156 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!27945 c!17909) b!103816))

(assert (= (and d!27945 (not c!17909)) b!103817))

(assert (= (and d!27945 (not res!51798)) b!103818))

(assert (=> d!27945 m!113915))

(declare-fun m!114861 () Bool)

(assert (=> d!27945 m!114861))

(assert (=> b!103816 m!113915))

(declare-fun m!114863 () Bool)

(assert (=> b!103816 m!114863))

(assert (=> b!103816 m!113915))

(declare-fun m!114865 () Bool)

(assert (=> b!103816 m!114865))

(assert (=> b!103816 m!114865))

(declare-fun m!114867 () Bool)

(assert (=> b!103816 m!114867))

(assert (=> b!103818 m!113915))

(assert (=> b!103818 m!114865))

(assert (=> b!103818 m!114865))

(assert (=> b!103818 m!114867))

(assert (=> bm!10837 d!27945))

(assert (=> d!27771 d!27775))

(declare-fun d!27947 () Bool)

(assert (=> d!27947 (not (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!27947 true))

(declare-fun _$68!103 () Unit!3132)

(assert (=> d!27947 (= (choose!68 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590)) _$68!103)))

(declare-fun bs!4262 () Bool)

(assert (= bs!4262 d!27947))

(assert (=> bs!4262 m!113915))

(assert (=> bs!4262 m!113935))

(assert (=> d!27771 d!27947))

(declare-fun d!27949 () Bool)

(declare-fun e!67615 () Bool)

(assert (=> d!27949 e!67615))

(declare-fun res!51799 () Bool)

(assert (=> d!27949 (=> res!51799 e!67615)))

(declare-fun lt!52935 () Bool)

(assert (=> d!27949 (= res!51799 (not lt!52935))))

(declare-fun lt!52932 () Bool)

(assert (=> d!27949 (= lt!52935 lt!52932)))

(declare-fun lt!52933 () Unit!3132)

(declare-fun e!67614 () Unit!3132)

(assert (=> d!27949 (= lt!52933 e!67614)))

(declare-fun c!17910 () Bool)

(assert (=> d!27949 (= c!17910 lt!52932)))

(assert (=> d!27949 (= lt!52932 (containsKey!159 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27949 (= (contains!811 lt!52553 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!52935)))

(declare-fun b!103819 () Bool)

(declare-fun lt!52934 () Unit!3132)

(assert (=> b!103819 (= e!67614 lt!52934)))

(assert (=> b!103819 (= lt!52934 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103819 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103820 () Bool)

(declare-fun Unit!3157 () Unit!3132)

(assert (=> b!103820 (= e!67614 Unit!3157)))

(declare-fun b!103821 () Bool)

(assert (=> b!103821 (= e!67615 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27949 c!17910) b!103819))

(assert (= (and d!27949 (not c!17910)) b!103820))

(assert (= (and d!27949 (not res!51799)) b!103821))

(assert (=> d!27949 m!114103))

(declare-fun m!114869 () Bool)

(assert (=> d!27949 m!114869))

(assert (=> b!103819 m!114103))

(declare-fun m!114871 () Bool)

(assert (=> b!103819 m!114871))

(assert (=> b!103819 m!114103))

(declare-fun m!114873 () Bool)

(assert (=> b!103819 m!114873))

(assert (=> b!103819 m!114873))

(declare-fun m!114875 () Bool)

(assert (=> b!103819 m!114875))

(assert (=> b!103821 m!114103))

(assert (=> b!103821 m!114873))

(assert (=> b!103821 m!114873))

(assert (=> b!103821 m!114875))

(assert (=> b!103241 d!27949))

(declare-fun d!27951 () Bool)

(declare-fun isEmpty!375 (Option!162) Bool)

(assert (=> d!27951 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun bs!4263 () Bool)

(assert (= bs!4263 d!27951))

(assert (=> bs!4263 m!114249))

(declare-fun m!114877 () Bool)

(assert (=> bs!4263 m!114877))

(assert (=> b!103359 d!27951))

(declare-fun e!67617 () Option!162)

(declare-fun b!103824 () Bool)

(assert (=> b!103824 (= e!67617 (getValueByKey!156 (t!5646 (toList!779 lt!52449)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103823 () Bool)

(declare-fun e!67616 () Option!162)

(assert (=> b!103823 (= e!67616 e!67617)))

(declare-fun c!17912 () Bool)

(assert (=> b!103823 (= c!17912 (and ((_ is Cons!1588) (toList!779 lt!52449)) (not (= (_1!1188 (h!2184 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!103822 () Bool)

(assert (=> b!103822 (= e!67616 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52449)))))))

(declare-fun c!17911 () Bool)

(declare-fun d!27953 () Bool)

(assert (=> d!27953 (= c!17911 (and ((_ is Cons!1588) (toList!779 lt!52449)) (= (_1!1188 (h!2184 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!27953 (= (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67616)))

(declare-fun b!103825 () Bool)

(assert (=> b!103825 (= e!67617 None!160)))

(assert (= (and d!27953 c!17911) b!103822))

(assert (= (and d!27953 (not c!17911)) b!103823))

(assert (= (and b!103823 c!17912) b!103824))

(assert (= (and b!103823 (not c!17912)) b!103825))

(assert (=> b!103824 m!113915))

(declare-fun m!114879 () Bool)

(assert (=> b!103824 m!114879))

(assert (=> b!103359 d!27953))

(declare-fun d!27955 () Bool)

(assert (=> d!27955 (isDefined!108 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!52938 () Unit!3132)

(declare-fun choose!654 (List!1592 (_ BitVec 64)) Unit!3132)

(assert (=> d!27955 (= lt!52938 (choose!654 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67620 () Bool)

(assert (=> d!27955 e!67620))

(declare-fun res!51802 () Bool)

(assert (=> d!27955 (=> (not res!51802) (not e!67620))))

(assert (=> d!27955 (= res!51802 (isStrictlySorted!295 (toList!779 lt!52449)))))

(assert (=> d!27955 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!52938)))

(declare-fun b!103828 () Bool)

(assert (=> b!103828 (= e!67620 (containsKey!159 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!27955 res!51802) b!103828))

(assert (=> d!27955 m!113915))

(assert (=> d!27955 m!114249))

(assert (=> d!27955 m!114249))

(assert (=> d!27955 m!114251))

(assert (=> d!27955 m!113915))

(declare-fun m!114881 () Bool)

(assert (=> d!27955 m!114881))

(declare-fun m!114883 () Bool)

(assert (=> d!27955 m!114883))

(assert (=> b!103828 m!113915))

(assert (=> b!103828 m!114245))

(assert (=> b!103357 d!27955))

(assert (=> b!103357 d!27951))

(assert (=> b!103357 d!27953))

(declare-fun d!27957 () Bool)

(declare-fun e!67621 () Bool)

(assert (=> d!27957 e!67621))

(declare-fun res!51803 () Bool)

(assert (=> d!27957 (=> (not res!51803) (not e!67621))))

(declare-fun lt!52941 () ListLongMap!1527)

(assert (=> d!27957 (= res!51803 (contains!811 lt!52941 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun lt!52940 () List!1592)

(assert (=> d!27957 (= lt!52941 (ListLongMap!1528 lt!52940))))

(declare-fun lt!52939 () Unit!3132)

(declare-fun lt!52942 () Unit!3132)

(assert (=> d!27957 (= lt!52939 lt!52942)))

(assert (=> d!27957 (= (getValueByKey!156 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (Some!161 (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!27957 (= lt!52942 (lemmaContainsTupThenGetReturnValue!72 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!27957 (= lt!52940 (insertStrictlySorted!75 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!27957 (= (+!137 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52941)))

(declare-fun b!103829 () Bool)

(declare-fun res!51804 () Bool)

(assert (=> b!103829 (=> (not res!51804) (not e!67621))))

(assert (=> b!103829 (= res!51804 (= (getValueByKey!156 (toList!779 lt!52941) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (Some!161 (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!103830 () Bool)

(assert (=> b!103830 (= e!67621 (contains!812 (toList!779 lt!52941) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!27957 res!51803) b!103829))

(assert (= (and b!103829 res!51804) b!103830))

(declare-fun m!114885 () Bool)

(assert (=> d!27957 m!114885))

(declare-fun m!114887 () Bool)

(assert (=> d!27957 m!114887))

(declare-fun m!114889 () Bool)

(assert (=> d!27957 m!114889))

(declare-fun m!114891 () Bool)

(assert (=> d!27957 m!114891))

(declare-fun m!114893 () Bool)

(assert (=> b!103829 m!114893))

(declare-fun m!114895 () Bool)

(assert (=> b!103830 m!114895))

(assert (=> bm!10766 d!27957))

(declare-fun b!103865 () Bool)

(declare-fun res!51830 () Bool)

(declare-fun call!10897 () Bool)

(assert (=> b!103865 (= res!51830 call!10897)))

(declare-fun e!67638 () Bool)

(assert (=> b!103865 (=> (not res!51830) (not e!67638))))

(declare-fun d!27959 () Bool)

(declare-fun e!67644 () Bool)

(assert (=> d!27959 e!67644))

(declare-fun res!51827 () Bool)

(assert (=> d!27959 (=> (not res!51827) (not e!67644))))

(declare-fun lt!53029 () tuple2!2352)

(assert (=> d!27959 (= res!51827 (_1!1187 lt!53029))))

(assert (=> d!27959 (= lt!53029 (tuple2!2353 true (LongMapFixedSize!893 (defaultEntry!2560 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd (_size!495 newMap!16) #b00000000000000000000000000000001) (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (_vacant!495 newMap!16))))))

(declare-fun lt!53006 () Unit!3132)

(declare-fun lt!53008 () Unit!3132)

(assert (=> d!27959 (= lt!53006 lt!53008)))

(declare-fun lt!53016 () array!4317)

(declare-fun lt!53023 () array!4319)

(assert (=> d!27959 (contains!811 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))

(assert (=> d!27959 (= lt!53008 (lemmaValidKeyInArrayIsInListMap!106 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (defaultEntry!2560 newMap!16)))))

(assert (=> d!27959 (= lt!53023 (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))))

(assert (=> d!27959 (= lt!53016 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun lt!53021 () Unit!3132)

(declare-fun lt!53005 () Unit!3132)

(assert (=> d!27959 (= lt!53021 lt!53005)))

(declare-fun lt!53024 () array!4317)

(assert (=> d!27959 (= (arrayCountValidKeys!0 lt!53024 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4317 (_ BitVec 32)) Unit!3132)

(assert (=> d!27959 (= lt!53005 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!53024 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))

(assert (=> d!27959 (= lt!53024 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun lt!53017 () Unit!3132)

(declare-fun lt!53028 () Unit!3132)

(assert (=> d!27959 (= lt!53017 lt!53028)))

(declare-fun lt!53013 () array!4317)

(assert (=> d!27959 (arrayContainsKey!0 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!27959 (= lt!53028 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))

(assert (=> d!27959 (= lt!53013 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun lt!53019 () Unit!3132)

(declare-fun lt!53026 () Unit!3132)

(assert (=> d!27959 (= lt!53019 lt!53026)))

(assert (=> d!27959 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (getCurrentListMap!467 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!29 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3132)

(assert (=> d!27959 (= lt!53026 (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53031 () Unit!3132)

(declare-fun lt!53010 () Unit!3132)

(assert (=> d!27959 (= lt!53031 lt!53010)))

(assert (=> d!27959 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (mask!6696 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4317 (_ BitVec 32) (_ BitVec 32)) Unit!3132)

(assert (=> d!27959 (= lt!53010 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (mask!6696 newMap!16)))))

(declare-fun lt!53018 () Unit!3132)

(declare-fun lt!53004 () Unit!3132)

(assert (=> d!27959 (= lt!53018 lt!53004)))

(assert (=> d!27959 (= (arrayCountValidKeys!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4262 newMap!16) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4317 (_ BitVec 32) (_ BitVec 64)) Unit!3132)

(assert (=> d!27959 (= lt!53004 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4262 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!53025 () Unit!3132)

(declare-fun lt!53020 () Unit!3132)

(assert (=> d!27959 (= lt!53025 lt!53020)))

(declare-fun lt!53012 () List!1593)

(declare-fun lt!53030 () (_ BitVec 32))

(assert (=> d!27959 (arrayNoDuplicates!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) lt!53030 lt!53012)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4317 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1593) Unit!3132)

(assert (=> d!27959 (= lt!53020 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) lt!53030 lt!53012))))

(assert (=> d!27959 (= lt!53012 Nil!1590)))

(assert (=> d!27959 (= lt!53030 #b00000000000000000000000000000000)))

(declare-fun lt!53014 () Unit!3132)

(declare-fun e!67641 () Unit!3132)

(assert (=> d!27959 (= lt!53014 e!67641)))

(declare-fun c!17924 () Bool)

(assert (=> d!27959 (= c!17924 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!53003 () Unit!3132)

(declare-fun e!67639 () Unit!3132)

(assert (=> d!27959 (= lt!53003 e!67639)))

(declare-fun c!17921 () Bool)

(assert (=> d!27959 (= c!17921 (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27959 (valid!418 newMap!16)))

(assert (=> d!27959 (= (updateHelperNewKey!46 newMap!16 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))) lt!53029)))

(declare-fun b!103866 () Bool)

(declare-fun lt!53022 () Unit!3132)

(assert (=> b!103866 (= e!67639 lt!53022)))

(assert (=> b!103866 (= lt!53022 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53027 () SeekEntryResult!252)

(declare-fun call!10899 () SeekEntryResult!252)

(assert (=> b!103866 (= lt!53027 call!10899)))

(declare-fun c!17922 () Bool)

(assert (=> b!103866 (= c!17922 ((_ is MissingZero!252) lt!53027))))

(declare-fun e!67643 () Bool)

(assert (=> b!103866 e!67643))

(declare-fun bm!10894 () Bool)

(declare-fun call!10900 () Bool)

(assert (=> bm!10894 (= call!10900 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!10895 () Bool)

(declare-fun call!10898 () Bool)

(assert (=> bm!10895 (= call!10898 call!10897)))

(declare-fun b!103867 () Bool)

(declare-fun e!67640 () Bool)

(assert (=> b!103867 (= e!67640 ((_ is Undefined!252) lt!53027))))

(declare-fun b!103868 () Bool)

(declare-fun e!67645 () Bool)

(assert (=> b!103868 (= e!67640 e!67645)))

(declare-fun res!51825 () Bool)

(assert (=> b!103868 (= res!51825 call!10898)))

(assert (=> b!103868 (=> (not res!51825) (not e!67645))))

(declare-fun b!103869 () Bool)

(declare-fun Unit!3158 () Unit!3132)

(assert (=> b!103869 (= e!67641 Unit!3158)))

(declare-fun b!103870 () Bool)

(declare-fun c!17923 () Bool)

(assert (=> b!103870 (= c!17923 ((_ is MissingVacant!252) lt!53027))))

(assert (=> b!103870 (= e!67643 e!67640)))

(declare-fun b!103871 () Bool)

(declare-fun res!51824 () Bool)

(assert (=> b!103871 (=> (not res!51824) (not e!67644))))

(assert (=> b!103871 (= res!51824 (valid!418 (_2!1187 lt!53029)))))

(declare-fun b!103872 () Bool)

(declare-fun res!51826 () Bool)

(declare-fun e!67642 () Bool)

(assert (=> b!103872 (=> (not res!51826) (not e!67642))))

(assert (=> b!103872 (= res!51826 call!10898)))

(assert (=> b!103872 (= e!67643 e!67642)))

(declare-fun b!103873 () Bool)

(declare-fun Unit!3159 () Unit!3132)

(assert (=> b!103873 (= e!67639 Unit!3159)))

(declare-fun lt!53007 () Unit!3132)

(assert (=> b!103873 (= lt!53007 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53011 () SeekEntryResult!252)

(assert (=> b!103873 (= lt!53011 call!10899)))

(declare-fun res!51823 () Bool)

(assert (=> b!103873 (= res!51823 ((_ is Found!252) lt!53011))))

(assert (=> b!103873 (=> (not res!51823) (not e!67638))))

(assert (=> b!103873 e!67638))

(declare-fun lt!53032 () Unit!3132)

(assert (=> b!103873 (= lt!53032 lt!53007)))

(assert (=> b!103873 false))

(declare-fun b!103874 () Bool)

(assert (=> b!103874 (= e!67644 (= (map!1279 (_2!1187 lt!53029)) (+!137 (map!1279 newMap!16) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!103875 () Bool)

(declare-fun res!51831 () Bool)

(assert (=> b!103875 (= res!51831 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!53027)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103875 (=> (not res!51831) (not e!67645))))

(declare-fun b!103876 () Bool)

(assert (=> b!103876 (= e!67638 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!53011)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103877 () Bool)

(declare-fun res!51828 () Bool)

(assert (=> b!103877 (=> (not res!51828) (not e!67644))))

(assert (=> b!103877 (= res!51828 (contains!811 (map!1279 (_2!1187 lt!53029)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103878 () Bool)

(declare-fun res!51829 () Bool)

(assert (=> b!103878 (=> (not res!51829) (not e!67642))))

(assert (=> b!103878 (= res!51829 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!53027)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103879 () Bool)

(assert (=> b!103879 (= e!67642 (not call!10900))))

(declare-fun b!103880 () Bool)

(assert (=> b!103880 (= e!67645 (not call!10900))))

(declare-fun bm!10896 () Bool)

(assert (=> bm!10896 (= call!10899 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun bm!10897 () Bool)

(assert (=> bm!10897 (= call!10897 (inRange!0 (ite c!17921 (index!3156 lt!53011) (ite c!17922 (index!3155 lt!53027) (index!3158 lt!53027))) (mask!6696 newMap!16)))))

(declare-fun b!103881 () Bool)

(declare-fun Unit!3160 () Unit!3132)

(assert (=> b!103881 (= e!67641 Unit!3160)))

(declare-fun lt!53015 () Unit!3132)

(declare-fun lemmaArrayContainsKeyThenInListMap!29 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3132)

(assert (=> b!103881 (= lt!53015 (lemmaArrayContainsKeyThenInListMap!29 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> b!103881 (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))

(declare-fun lt!53009 () Unit!3132)

(assert (=> b!103881 (= lt!53009 lt!53015)))

(assert (=> b!103881 false))

(assert (= (and d!27959 c!17921) b!103873))

(assert (= (and d!27959 (not c!17921)) b!103866))

(assert (= (and b!103873 res!51823) b!103865))

(assert (= (and b!103865 res!51830) b!103876))

(assert (= (and b!103866 c!17922) b!103872))

(assert (= (and b!103866 (not c!17922)) b!103870))

(assert (= (and b!103872 res!51826) b!103878))

(assert (= (and b!103878 res!51829) b!103879))

(assert (= (and b!103870 c!17923) b!103868))

(assert (= (and b!103870 (not c!17923)) b!103867))

(assert (= (and b!103868 res!51825) b!103875))

(assert (= (and b!103875 res!51831) b!103880))

(assert (= (or b!103872 b!103868) bm!10895))

(assert (= (or b!103879 b!103880) bm!10894))

(assert (= (or b!103865 bm!10895) bm!10897))

(assert (= (or b!103873 b!103866) bm!10896))

(assert (= (and d!27959 c!17924) b!103881))

(assert (= (and d!27959 (not c!17924)) b!103869))

(assert (= (and d!27959 res!51827) b!103871))

(assert (= (and b!103871 res!51824) b!103877))

(assert (= (and b!103877 res!51828) b!103874))

(assert (=> b!103873 m!113915))

(assert (=> b!103873 m!114269))

(declare-fun m!114897 () Bool)

(assert (=> d!27959 m!114897))

(declare-fun m!114899 () Bool)

(assert (=> d!27959 m!114899))

(declare-fun m!114901 () Bool)

(assert (=> d!27959 m!114901))

(assert (=> d!27959 m!114197))

(declare-fun m!114903 () Bool)

(assert (=> d!27959 m!114903))

(assert (=> d!27959 m!113915))

(declare-fun m!114905 () Bool)

(assert (=> d!27959 m!114905))

(declare-fun m!114907 () Bool)

(assert (=> d!27959 m!114907))

(assert (=> d!27959 m!113915))

(declare-fun m!114909 () Bool)

(assert (=> d!27959 m!114909))

(assert (=> d!27959 m!113915))

(declare-fun m!114911 () Bool)

(assert (=> d!27959 m!114911))

(assert (=> d!27959 m!114197))

(assert (=> d!27959 m!114803))

(declare-fun m!114913 () Bool)

(assert (=> d!27959 m!114913))

(declare-fun m!114915 () Bool)

(assert (=> d!27959 m!114915))

(assert (=> d!27959 m!114191))

(declare-fun m!114917 () Bool)

(assert (=> d!27959 m!114917))

(assert (=> d!27959 m!113915))

(declare-fun m!114919 () Bool)

(assert (=> d!27959 m!114919))

(assert (=> d!27959 m!114197))

(assert (=> d!27959 m!113915))

(declare-fun m!114921 () Bool)

(assert (=> d!27959 m!114921))

(declare-fun m!114923 () Bool)

(assert (=> d!27959 m!114923))

(assert (=> d!27959 m!114903))

(declare-fun m!114925 () Bool)

(assert (=> d!27959 m!114925))

(assert (=> d!27959 m!114923))

(assert (=> d!27959 m!113915))

(declare-fun m!114927 () Bool)

(assert (=> d!27959 m!114927))

(assert (=> d!27959 m!113915))

(assert (=> d!27959 m!114277))

(declare-fun m!114929 () Bool)

(assert (=> d!27959 m!114929))

(declare-fun m!114931 () Bool)

(assert (=> d!27959 m!114931))

(assert (=> d!27959 m!113965))

(assert (=> d!27959 m!113915))

(declare-fun m!114933 () Bool)

(assert (=> d!27959 m!114933))

(declare-fun m!114935 () Bool)

(assert (=> b!103877 m!114935))

(assert (=> b!103877 m!114935))

(assert (=> b!103877 m!113915))

(declare-fun m!114937 () Bool)

(assert (=> b!103877 m!114937))

(declare-fun m!114939 () Bool)

(assert (=> b!103876 m!114939))

(assert (=> bm!10894 m!113915))

(assert (=> bm!10894 m!114277))

(assert (=> b!103874 m!114935))

(assert (=> b!103874 m!113921))

(assert (=> b!103874 m!113921))

(declare-fun m!114941 () Bool)

(assert (=> b!103874 m!114941))

(assert (=> b!103881 m!113915))

(declare-fun m!114943 () Bool)

(assert (=> b!103881 m!114943))

(assert (=> b!103881 m!114197))

(assert (=> b!103881 m!114197))

(assert (=> b!103881 m!113915))

(assert (=> b!103881 m!114921))

(declare-fun m!114945 () Bool)

(assert (=> bm!10897 m!114945))

(declare-fun m!114947 () Bool)

(assert (=> b!103871 m!114947))

(declare-fun m!114949 () Bool)

(assert (=> b!103875 m!114949))

(assert (=> bm!10896 m!113915))

(assert (=> bm!10896 m!114279))

(assert (=> b!103866 m!113915))

(assert (=> b!103866 m!114271))

(declare-fun m!114951 () Bool)

(assert (=> b!103878 m!114951))

(assert (=> bm!10826 d!27959))

(declare-fun d!27961 () Bool)

(assert (=> d!27961 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53035 () Unit!3132)

(declare-fun choose!655 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 V!3209 Int) Unit!3132)

(assert (=> d!27961 (= lt!53035 (choose!655 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52712 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52447 (defaultEntry!2560 newMap!16)))))

(assert (=> d!27961 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27961 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52712 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52447 (defaultEntry!2560 newMap!16)) lt!53035)))

(declare-fun bs!4264 () Bool)

(assert (= bs!4264 d!27961))

(assert (=> bs!4264 m!114197))

(declare-fun m!114953 () Bool)

(assert (=> bs!4264 m!114953))

(assert (=> bs!4264 m!114321))

(assert (=> bs!4264 m!114197))

(declare-fun m!114955 () Bool)

(assert (=> bs!4264 m!114955))

(declare-fun m!114957 () Bool)

(assert (=> bs!4264 m!114957))

(assert (=> b!103465 d!27961))

(declare-fun b!103884 () Bool)

(declare-fun e!67647 () Option!162)

(assert (=> b!103884 (= e!67647 (getValueByKey!156 (t!5646 (toList!779 lt!52533)) (_1!1188 lt!52442)))))

(declare-fun b!103883 () Bool)

(declare-fun e!67646 () Option!162)

(assert (=> b!103883 (= e!67646 e!67647)))

(declare-fun c!17926 () Bool)

(assert (=> b!103883 (= c!17926 (and ((_ is Cons!1588) (toList!779 lt!52533)) (not (= (_1!1188 (h!2184 (toList!779 lt!52533))) (_1!1188 lt!52442)))))))

(declare-fun b!103882 () Bool)

(assert (=> b!103882 (= e!67646 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52533)))))))

(declare-fun d!27963 () Bool)

(declare-fun c!17925 () Bool)

(assert (=> d!27963 (= c!17925 (and ((_ is Cons!1588) (toList!779 lt!52533)) (= (_1!1188 (h!2184 (toList!779 lt!52533))) (_1!1188 lt!52442))))))

(assert (=> d!27963 (= (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442)) e!67646)))

(declare-fun b!103885 () Bool)

(assert (=> b!103885 (= e!67647 None!160)))

(assert (= (and d!27963 c!17925) b!103882))

(assert (= (and d!27963 (not c!17925)) b!103883))

(assert (= (and b!103883 c!17926) b!103884))

(assert (= (and b!103883 (not c!17926)) b!103885))

(declare-fun m!114959 () Bool)

(assert (=> b!103884 m!114959))

(assert (=> b!103208 d!27963))

(declare-fun d!27965 () Bool)

(declare-fun e!67648 () Bool)

(assert (=> d!27965 e!67648))

(declare-fun res!51832 () Bool)

(assert (=> d!27965 (=> (not res!51832) (not e!67648))))

(declare-fun lt!53038 () ListLongMap!1527)

(assert (=> d!27965 (= res!51832 (contains!811 lt!53038 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun lt!53037 () List!1592)

(assert (=> d!27965 (= lt!53038 (ListLongMap!1528 lt!53037))))

(declare-fun lt!53036 () Unit!3132)

(declare-fun lt!53039 () Unit!3132)

(assert (=> d!27965 (= lt!53036 lt!53039)))

(assert (=> d!27965 (= (getValueByKey!156 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (Some!161 (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!27965 (= lt!53039 (lemmaContainsTupThenGetReturnValue!72 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!27965 (= lt!53037 (insertStrictlySorted!75 (toList!779 e!67413) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!27965 (= (+!137 e!67413 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53038)))

(declare-fun b!103886 () Bool)

(declare-fun res!51833 () Bool)

(assert (=> b!103886 (=> (not res!51833) (not e!67648))))

(assert (=> b!103886 (= res!51833 (= (getValueByKey!156 (toList!779 lt!53038) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (Some!161 (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!103887 () Bool)

(assert (=> b!103887 (= e!67648 (contains!812 (toList!779 lt!53038) (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (= (and d!27965 res!51832) b!103886))

(assert (= (and b!103886 res!51833) b!103887))

(declare-fun m!114961 () Bool)

(assert (=> d!27965 m!114961))

(declare-fun m!114963 () Bool)

(assert (=> d!27965 m!114963))

(declare-fun m!114965 () Bool)

(assert (=> d!27965 m!114965))

(declare-fun m!114967 () Bool)

(assert (=> d!27965 m!114967))

(declare-fun m!114969 () Bool)

(assert (=> b!103886 m!114969))

(declare-fun m!114971 () Bool)

(assert (=> b!103887 m!114971))

(assert (=> bm!10824 d!27965))

(declare-fun b!103888 () Bool)

(declare-fun e!67652 () Bool)

(declare-fun e!67650 () Bool)

(assert (=> b!103888 (= e!67652 e!67650)))

(declare-fun res!51835 () Bool)

(assert (=> b!103888 (=> (not res!51835) (not e!67650))))

(declare-fun e!67649 () Bool)

(assert (=> b!103888 (= res!51835 (not e!67649))))

(declare-fun res!51834 () Bool)

(assert (=> b!103888 (=> (not res!51834) (not e!67649))))

(assert (=> b!103888 (= res!51834 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103889 () Bool)

(declare-fun e!67651 () Bool)

(declare-fun call!10901 () Bool)

(assert (=> b!103889 (= e!67651 call!10901)))

(declare-fun b!103890 () Bool)

(assert (=> b!103890 (= e!67650 e!67651)))

(declare-fun c!17927 () Bool)

(assert (=> b!103890 (= c!17927 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103891 () Bool)

(assert (=> b!103891 (= e!67651 call!10901)))

(declare-fun d!27967 () Bool)

(declare-fun res!51836 () Bool)

(assert (=> d!27967 (=> res!51836 e!67652)))

(assert (=> d!27967 (= res!51836 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27967 (= (arrayNoDuplicates!0 (_keys!4262 newMap!16) #b00000000000000000000000000000000 Nil!1590) e!67652)))

(declare-fun b!103892 () Bool)

(assert (=> b!103892 (= e!67649 (contains!813 Nil!1590 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10898 () Bool)

(assert (=> bm!10898 (= call!10901 (arrayNoDuplicates!0 (_keys!4262 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17927 (Cons!1589 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) Nil!1590) Nil!1590)))))

(assert (= (and d!27967 (not res!51836)) b!103888))

(assert (= (and b!103888 res!51834) b!103892))

(assert (= (and b!103888 res!51835) b!103890))

(assert (= (and b!103890 c!17927) b!103891))

(assert (= (and b!103890 (not c!17927)) b!103889))

(assert (= (or b!103891 b!103889) bm!10898))

(assert (=> b!103888 m!114381))

(assert (=> b!103888 m!114381))

(assert (=> b!103888 m!114383))

(assert (=> b!103890 m!114381))

(assert (=> b!103890 m!114381))

(assert (=> b!103890 m!114383))

(assert (=> b!103892 m!114381))

(assert (=> b!103892 m!114381))

(declare-fun m!114973 () Bool)

(assert (=> b!103892 m!114973))

(assert (=> bm!10898 m!114381))

(declare-fun m!114975 () Bool)

(assert (=> bm!10898 m!114975))

(assert (=> b!103287 d!27967))

(declare-fun d!27969 () Bool)

(declare-fun lt!53040 () Bool)

(assert (=> d!27969 (= lt!53040 (select (content!108 (toList!779 lt!52569)) lt!52444))))

(declare-fun e!67653 () Bool)

(assert (=> d!27969 (= lt!53040 e!67653)))

(declare-fun res!51837 () Bool)

(assert (=> d!27969 (=> (not res!51837) (not e!67653))))

(assert (=> d!27969 (= res!51837 ((_ is Cons!1588) (toList!779 lt!52569)))))

(assert (=> d!27969 (= (contains!812 (toList!779 lt!52569) lt!52444) lt!53040)))

(declare-fun b!103893 () Bool)

(declare-fun e!67654 () Bool)

(assert (=> b!103893 (= e!67653 e!67654)))

(declare-fun res!51838 () Bool)

(assert (=> b!103893 (=> res!51838 e!67654)))

(assert (=> b!103893 (= res!51838 (= (h!2184 (toList!779 lt!52569)) lt!52444))))

(declare-fun b!103894 () Bool)

(assert (=> b!103894 (= e!67654 (contains!812 (t!5646 (toList!779 lt!52569)) lt!52444))))

(assert (= (and d!27969 res!51837) b!103893))

(assert (= (and b!103893 (not res!51838)) b!103894))

(declare-fun m!114977 () Bool)

(assert (=> d!27969 m!114977))

(declare-fun m!114979 () Bool)

(assert (=> d!27969 m!114979))

(declare-fun m!114981 () Bool)

(assert (=> b!103894 m!114981))

(assert (=> b!103251 d!27969))

(declare-fun d!27971 () Bool)

(declare-fun e!67655 () Bool)

(assert (=> d!27971 e!67655))

(declare-fun res!51839 () Bool)

(assert (=> d!27971 (=> (not res!51839) (not e!67655))))

(declare-fun lt!53043 () ListLongMap!1527)

(assert (=> d!27971 (= res!51839 (contains!811 lt!53043 (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun lt!53042 () List!1592)

(assert (=> d!27971 (= lt!53043 (ListLongMap!1528 lt!53042))))

(declare-fun lt!53041 () Unit!3132)

(declare-fun lt!53044 () Unit!3132)

(assert (=> d!27971 (= lt!53041 lt!53044)))

(assert (=> d!27971 (= (getValueByKey!156 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550))) (Some!161 (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))

(assert (=> d!27971 (= lt!53044 (lemmaContainsTupThenGetReturnValue!72 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))

(assert (=> d!27971 (= lt!53042 (insertStrictlySorted!75 (toList!779 lt!52555) (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))

(assert (=> d!27971 (= (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)) lt!53043)))

(declare-fun b!103895 () Bool)

(declare-fun res!51840 () Bool)

(assert (=> b!103895 (=> (not res!51840) (not e!67655))))

(assert (=> b!103895 (= res!51840 (= (getValueByKey!156 (toList!779 lt!53043) (_1!1188 (tuple2!2355 lt!52552 lt!52550))) (Some!161 (_2!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(declare-fun b!103896 () Bool)

(assert (=> b!103896 (= e!67655 (contains!812 (toList!779 lt!53043) (tuple2!2355 lt!52552 lt!52550)))))

(assert (= (and d!27971 res!51839) b!103895))

(assert (= (and b!103895 res!51840) b!103896))

(declare-fun m!114983 () Bool)

(assert (=> d!27971 m!114983))

(declare-fun m!114985 () Bool)

(assert (=> d!27971 m!114985))

(declare-fun m!114987 () Bool)

(assert (=> d!27971 m!114987))

(declare-fun m!114989 () Bool)

(assert (=> d!27971 m!114989))

(declare-fun m!114991 () Bool)

(assert (=> b!103895 m!114991))

(declare-fun m!114993 () Bool)

(assert (=> b!103896 m!114993))

(assert (=> b!103238 d!27971))

(assert (=> b!103238 d!27847))

(declare-fun d!27973 () Bool)

(declare-fun e!67657 () Bool)

(assert (=> d!27973 e!67657))

(declare-fun res!51841 () Bool)

(assert (=> d!27973 (=> res!51841 e!67657)))

(declare-fun lt!53048 () Bool)

(assert (=> d!27973 (= res!51841 (not lt!53048))))

(declare-fun lt!53045 () Bool)

(assert (=> d!27973 (= lt!53048 lt!53045)))

(declare-fun lt!53046 () Unit!3132)

(declare-fun e!67656 () Unit!3132)

(assert (=> d!27973 (= lt!53046 e!67656)))

(declare-fun c!17928 () Bool)

(assert (=> d!27973 (= c!17928 lt!53045)))

(assert (=> d!27973 (= lt!53045 (containsKey!159 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))

(assert (=> d!27973 (= (contains!811 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)) lt!52549) lt!53048)))

(declare-fun b!103897 () Bool)

(declare-fun lt!53047 () Unit!3132)

(assert (=> b!103897 (= e!67656 lt!53047)))

(assert (=> b!103897 (= lt!53047 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))

(assert (=> b!103897 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))

(declare-fun b!103898 () Bool)

(declare-fun Unit!3161 () Unit!3132)

(assert (=> b!103898 (= e!67656 Unit!3161)))

(declare-fun b!103899 () Bool)

(assert (=> b!103899 (= e!67657 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549)))))

(assert (= (and d!27973 c!17928) b!103897))

(assert (= (and d!27973 (not c!17928)) b!103898))

(assert (= (and d!27973 (not res!51841)) b!103899))

(declare-fun m!114995 () Bool)

(assert (=> d!27973 m!114995))

(declare-fun m!114997 () Bool)

(assert (=> b!103897 m!114997))

(declare-fun m!114999 () Bool)

(assert (=> b!103897 m!114999))

(assert (=> b!103897 m!114999))

(declare-fun m!115001 () Bool)

(assert (=> b!103897 m!115001))

(assert (=> b!103899 m!114999))

(assert (=> b!103899 m!114999))

(assert (=> b!103899 m!115001))

(assert (=> b!103238 d!27973))

(declare-fun d!27975 () Bool)

(assert (=> d!27975 (not (contains!811 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)) lt!52549))))

(declare-fun lt!53051 () Unit!3132)

(declare-fun choose!656 (ListLongMap!1527 (_ BitVec 64) V!3209 (_ BitVec 64)) Unit!3132)

(assert (=> d!27975 (= lt!53051 (choose!656 lt!52555 lt!52552 lt!52550 lt!52549))))

(declare-fun e!67660 () Bool)

(assert (=> d!27975 e!67660))

(declare-fun res!51844 () Bool)

(assert (=> d!27975 (=> (not res!51844) (not e!67660))))

(assert (=> d!27975 (= res!51844 (not (contains!811 lt!52555 lt!52549)))))

(assert (=> d!27975 (= (addStillNotContains!47 lt!52555 lt!52552 lt!52550 lt!52549) lt!53051)))

(declare-fun b!103903 () Bool)

(assert (=> b!103903 (= e!67660 (not (= lt!52552 lt!52549)))))

(assert (= (and d!27975 res!51844) b!103903))

(assert (=> d!27975 m!114115))

(assert (=> d!27975 m!114115))

(assert (=> d!27975 m!114117))

(declare-fun m!115003 () Bool)

(assert (=> d!27975 m!115003))

(declare-fun m!115005 () Bool)

(assert (=> d!27975 m!115005))

(assert (=> b!103238 d!27975))

(declare-fun d!27977 () Bool)

(declare-fun e!67661 () Bool)

(assert (=> d!27977 e!67661))

(declare-fun res!51845 () Bool)

(assert (=> d!27977 (=> (not res!51845) (not e!67661))))

(declare-fun lt!53054 () ListLongMap!1527)

(assert (=> d!27977 (= res!51845 (contains!811 lt!53054 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53053 () List!1592)

(assert (=> d!27977 (= lt!53054 (ListLongMap!1528 lt!53053))))

(declare-fun lt!53052 () Unit!3132)

(declare-fun lt!53055 () Unit!3132)

(assert (=> d!27977 (= lt!53052 lt!53055)))

(assert (=> d!27977 (= (getValueByKey!156 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27977 (= lt!53055 (lemmaContainsTupThenGetReturnValue!72 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27977 (= lt!53053 (insertStrictlySorted!75 (toList!779 call!10749) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27977 (= (+!137 call!10749 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53054)))

(declare-fun b!103904 () Bool)

(declare-fun res!51846 () Bool)

(assert (=> b!103904 (=> (not res!51846) (not e!67661))))

(assert (=> b!103904 (= res!51846 (= (getValueByKey!156 (toList!779 lt!53054) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!103905 () Bool)

(assert (=> b!103905 (= e!67661 (contains!812 (toList!779 lt!53054) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!27977 res!51845) b!103904))

(assert (= (and b!103904 res!51846) b!103905))

(declare-fun m!115007 () Bool)

(assert (=> d!27977 m!115007))

(declare-fun m!115009 () Bool)

(assert (=> d!27977 m!115009))

(declare-fun m!115011 () Bool)

(assert (=> d!27977 m!115011))

(declare-fun m!115013 () Bool)

(assert (=> d!27977 m!115013))

(declare-fun m!115015 () Bool)

(assert (=> b!103904 m!115015))

(declare-fun m!115017 () Bool)

(assert (=> b!103905 m!115017))

(assert (=> b!103238 d!27977))

(assert (=> b!103339 d!27815))

(assert (=> b!103477 d!27919))

(declare-fun bm!10901 () Bool)

(declare-fun call!10904 () (_ BitVec 32))

(assert (=> bm!10901 (= call!10904 (arrayCountValidKeys!0 (_keys!4262 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103915 () Bool)

(declare-fun e!67666 () (_ BitVec 32))

(assert (=> b!103915 (= e!67666 #b00000000000000000000000000000000)))

(declare-fun b!103916 () Bool)

(declare-fun e!67667 () (_ BitVec 32))

(assert (=> b!103916 (= e!67666 e!67667)))

(declare-fun c!17933 () Bool)

(assert (=> b!103916 (= c!17933 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103917 () Bool)

(assert (=> b!103917 (= e!67667 call!10904)))

(declare-fun d!27979 () Bool)

(declare-fun lt!53058 () (_ BitVec 32))

(assert (=> d!27979 (and (bvsge lt!53058 #b00000000000000000000000000000000) (bvsle lt!53058 (bvsub (size!2302 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!27979 (= lt!53058 e!67666)))

(declare-fun c!17934 () Bool)

(assert (=> d!27979 (= c!17934 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27979 (and (bvsle #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2302 (_keys!4262 newMap!16)) (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27979 (= (arrayCountValidKeys!0 (_keys!4262 newMap!16) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) lt!53058)))

(declare-fun b!103914 () Bool)

(assert (=> b!103914 (= e!67667 (bvadd #b00000000000000000000000000000001 call!10904))))

(assert (= (and d!27979 c!17934) b!103915))

(assert (= (and d!27979 (not c!17934)) b!103916))

(assert (= (and b!103916 c!17933) b!103914))

(assert (= (and b!103916 (not c!17933)) b!103917))

(assert (= (or b!103914 b!103917) bm!10901))

(declare-fun m!115019 () Bool)

(assert (=> bm!10901 m!115019))

(assert (=> b!103916 m!114381))

(assert (=> b!103916 m!114381))

(assert (=> b!103916 m!114383))

(assert (=> b!103285 d!27979))

(declare-fun d!27981 () Bool)

(declare-fun e!67669 () Bool)

(assert (=> d!27981 e!67669))

(declare-fun res!51847 () Bool)

(assert (=> d!27981 (=> res!51847 e!67669)))

(declare-fun lt!53062 () Bool)

(assert (=> d!27981 (= res!51847 (not lt!53062))))

(declare-fun lt!53059 () Bool)

(assert (=> d!27981 (= lt!53062 lt!53059)))

(declare-fun lt!53060 () Unit!3132)

(declare-fun e!67668 () Unit!3132)

(assert (=> d!27981 (= lt!53060 e!67668)))

(declare-fun c!17935 () Bool)

(assert (=> d!27981 (= c!17935 lt!53059)))

(assert (=> d!27981 (= lt!53059 (containsKey!159 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27981 (= (contains!811 lt!52553 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53062)))

(declare-fun b!103918 () Bool)

(declare-fun lt!53061 () Unit!3132)

(assert (=> b!103918 (= e!67668 lt!53061)))

(assert (=> b!103918 (= lt!53061 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103918 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103919 () Bool)

(declare-fun Unit!3162 () Unit!3132)

(assert (=> b!103919 (= e!67668 Unit!3162)))

(declare-fun b!103920 () Bool)

(assert (=> b!103920 (= e!67669 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27981 c!17935) b!103918))

(assert (= (and d!27981 (not c!17935)) b!103919))

(assert (= (and d!27981 (not res!51847)) b!103920))

(declare-fun m!115021 () Bool)

(assert (=> d!27981 m!115021))

(declare-fun m!115023 () Bool)

(assert (=> b!103918 m!115023))

(declare-fun m!115025 () Bool)

(assert (=> b!103918 m!115025))

(assert (=> b!103918 m!115025))

(declare-fun m!115027 () Bool)

(assert (=> b!103918 m!115027))

(assert (=> b!103920 m!115025))

(assert (=> b!103920 m!115025))

(assert (=> b!103920 m!115027))

(assert (=> b!103236 d!27981))

(declare-fun d!27983 () Bool)

(declare-fun res!51848 () Bool)

(declare-fun e!67670 () Bool)

(assert (=> d!27983 (=> (not res!51848) (not e!67670))))

(assert (=> d!27983 (= res!51848 (simpleValid!73 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27983 (= (valid!418 (v!2876 (underlying!358 thiss!992))) e!67670)))

(declare-fun b!103921 () Bool)

(declare-fun res!51849 () Bool)

(assert (=> b!103921 (=> (not res!51849) (not e!67670))))

(assert (=> b!103921 (= res!51849 (= (arrayCountValidKeys!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))) (_size!495 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103922 () Bool)

(declare-fun res!51850 () Bool)

(assert (=> b!103922 (=> (not res!51850) (not e!67670))))

(assert (=> b!103922 (= res!51850 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103923 () Bool)

(assert (=> b!103923 (= e!67670 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 Nil!1590))))

(assert (= (and d!27983 res!51848) b!103921))

(assert (= (and b!103921 res!51849) b!103922))

(assert (= (and b!103922 res!51850) b!103923))

(declare-fun m!115029 () Bool)

(assert (=> d!27983 m!115029))

(declare-fun m!115031 () Bool)

(assert (=> b!103921 m!115031))

(declare-fun m!115033 () Bool)

(assert (=> b!103922 m!115033))

(declare-fun m!115035 () Bool)

(assert (=> b!103923 m!115035))

(assert (=> d!27769 d!27983))

(declare-fun d!27985 () Bool)

(declare-fun lt!53063 () Bool)

(assert (=> d!27985 (= lt!53063 (select (content!108 (toList!779 lt!52562)) lt!52442))))

(declare-fun e!67671 () Bool)

(assert (=> d!27985 (= lt!53063 e!67671)))

(declare-fun res!51851 () Bool)

(assert (=> d!27985 (=> (not res!51851) (not e!67671))))

(assert (=> d!27985 (= res!51851 ((_ is Cons!1588) (toList!779 lt!52562)))))

(assert (=> d!27985 (= (contains!812 (toList!779 lt!52562) lt!52442) lt!53063)))

(declare-fun b!103924 () Bool)

(declare-fun e!67672 () Bool)

(assert (=> b!103924 (= e!67671 e!67672)))

(declare-fun res!51852 () Bool)

(assert (=> b!103924 (=> res!51852 e!67672)))

(assert (=> b!103924 (= res!51852 (= (h!2184 (toList!779 lt!52562)) lt!52442))))

(declare-fun b!103925 () Bool)

(assert (=> b!103925 (= e!67672 (contains!812 (t!5646 (toList!779 lt!52562)) lt!52442))))

(assert (= (and d!27985 res!51851) b!103924))

(assert (= (and b!103924 (not res!51852)) b!103925))

(declare-fun m!115037 () Bool)

(assert (=> d!27985 m!115037))

(declare-fun m!115039 () Bool)

(assert (=> d!27985 m!115039))

(declare-fun m!115041 () Bool)

(assert (=> b!103925 m!115041))

(assert (=> b!103249 d!27985))

(declare-fun d!27987 () Bool)

(assert (=> d!27987 (= (apply!97 lt!52553 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1331 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4265 () Bool)

(assert (= bs!4265 d!27987))

(assert (=> bs!4265 m!114103))

(assert (=> bs!4265 m!114873))

(assert (=> bs!4265 m!114873))

(declare-fun m!115043 () Bool)

(assert (=> bs!4265 m!115043))

(assert (=> b!103234 d!27987))

(assert (=> b!103234 d!27847))

(declare-fun d!27989 () Bool)

(declare-fun e!67674 () Bool)

(assert (=> d!27989 e!67674))

(declare-fun res!51853 () Bool)

(assert (=> d!27989 (=> res!51853 e!67674)))

(declare-fun lt!53067 () Bool)

(assert (=> d!27989 (= res!51853 (not lt!53067))))

(declare-fun lt!53064 () Bool)

(assert (=> d!27989 (= lt!53067 lt!53064)))

(declare-fun lt!53065 () Unit!3132)

(declare-fun e!67673 () Unit!3132)

(assert (=> d!27989 (= lt!53065 e!67673)))

(declare-fun c!17936 () Bool)

(assert (=> d!27989 (= c!17936 lt!53064)))

(assert (=> d!27989 (= lt!53064 (containsKey!159 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27989 (= (contains!811 lt!52553 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53067)))

(declare-fun b!103926 () Bool)

(declare-fun lt!53066 () Unit!3132)

(assert (=> b!103926 (= e!67673 lt!53066)))

(assert (=> b!103926 (= lt!53066 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103926 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103927 () Bool)

(declare-fun Unit!3163 () Unit!3132)

(assert (=> b!103927 (= e!67673 Unit!3163)))

(declare-fun b!103928 () Bool)

(assert (=> b!103928 (= e!67674 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27989 c!17936) b!103926))

(assert (= (and d!27989 (not c!17936)) b!103927))

(assert (= (and d!27989 (not res!51853)) b!103928))

(declare-fun m!115045 () Bool)

(assert (=> d!27989 m!115045))

(declare-fun m!115047 () Bool)

(assert (=> b!103926 m!115047))

(declare-fun m!115049 () Bool)

(assert (=> b!103926 m!115049))

(assert (=> b!103926 m!115049))

(declare-fun m!115051 () Bool)

(assert (=> b!103926 m!115051))

(assert (=> b!103928 m!115049))

(assert (=> b!103928 m!115049))

(assert (=> b!103928 m!115051))

(assert (=> d!27757 d!27989))

(assert (=> d!27757 d!27767))

(declare-fun d!27991 () Bool)

(declare-fun lt!53068 () Bool)

(assert (=> d!27991 (= lt!53068 (select (content!108 (toList!779 lt!52558)) lt!52444))))

(declare-fun e!67675 () Bool)

(assert (=> d!27991 (= lt!53068 e!67675)))

(declare-fun res!51854 () Bool)

(assert (=> d!27991 (=> (not res!51854) (not e!67675))))

(assert (=> d!27991 (= res!51854 ((_ is Cons!1588) (toList!779 lt!52558)))))

(assert (=> d!27991 (= (contains!812 (toList!779 lt!52558) lt!52444) lt!53068)))

(declare-fun b!103929 () Bool)

(declare-fun e!67676 () Bool)

(assert (=> b!103929 (= e!67675 e!67676)))

(declare-fun res!51855 () Bool)

(assert (=> b!103929 (=> res!51855 e!67676)))

(assert (=> b!103929 (= res!51855 (= (h!2184 (toList!779 lt!52558)) lt!52444))))

(declare-fun b!103930 () Bool)

(assert (=> b!103930 (= e!67676 (contains!812 (t!5646 (toList!779 lt!52558)) lt!52444))))

(assert (= (and d!27991 res!51854) b!103929))

(assert (= (and b!103929 (not res!51855)) b!103930))

(declare-fun m!115053 () Bool)

(assert (=> d!27991 m!115053))

(declare-fun m!115055 () Bool)

(assert (=> d!27991 m!115055))

(declare-fun m!115057 () Bool)

(assert (=> b!103930 m!115057))

(assert (=> b!103247 d!27991))

(declare-fun d!27993 () Bool)

(assert (=> d!27993 (= (apply!97 lt!52641 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4266 () Bool)

(assert (= bs!4266 d!27993))

(declare-fun m!115059 () Bool)

(assert (=> bs!4266 m!115059))

(assert (=> bs!4266 m!115059))

(declare-fun m!115061 () Bool)

(assert (=> bs!4266 m!115061))

(assert (=> b!103349 d!27993))

(assert (=> b!103347 d!27815))

(declare-fun call!10911 () ListLongMap!1527)

(declare-fun bm!10902 () Bool)

(assert (=> bm!10902 (= call!10911 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10903 () Bool)

(declare-fun call!10908 () ListLongMap!1527)

(declare-fun call!10909 () ListLongMap!1527)

(assert (=> bm!10903 (= call!10908 call!10909)))

(declare-fun b!103931 () Bool)

(declare-fun e!67677 () Unit!3132)

(declare-fun lt!53083 () Unit!3132)

(assert (=> b!103931 (= e!67677 lt!53083)))

(declare-fun lt!53085 () ListLongMap!1527)

(assert (=> b!103931 (= lt!53085 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53090 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53090 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53069 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53069 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53087 () Unit!3132)

(assert (=> b!103931 (= lt!53087 (addStillContains!73 lt!53085 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) lt!53069))))

(assert (=> b!103931 (contains!811 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53069)))

(declare-fun lt!53074 () Unit!3132)

(assert (=> b!103931 (= lt!53074 lt!53087)))

(declare-fun lt!53079 () ListLongMap!1527)

(assert (=> b!103931 (= lt!53079 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53077 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53077 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53081 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53081 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53070 () Unit!3132)

(assert (=> b!103931 (= lt!53070 (addApplyDifferent!73 lt!53079 lt!53077 (minValue!2437 newMap!16) lt!53081))))

(assert (=> b!103931 (= (apply!97 (+!137 lt!53079 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))) lt!53081) (apply!97 lt!53079 lt!53081))))

(declare-fun lt!53089 () Unit!3132)

(assert (=> b!103931 (= lt!53089 lt!53070)))

(declare-fun lt!53084 () ListLongMap!1527)

(assert (=> b!103931 (= lt!53084 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53082 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53082 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53072 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53072 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53088 () Unit!3132)

(assert (=> b!103931 (= lt!53088 (addApplyDifferent!73 lt!53084 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) lt!53072))))

(assert (=> b!103931 (= (apply!97 (+!137 lt!53084 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53072) (apply!97 lt!53084 lt!53072))))

(declare-fun lt!53071 () Unit!3132)

(assert (=> b!103931 (= lt!53071 lt!53088)))

(declare-fun lt!53078 () ListLongMap!1527)

(assert (=> b!103931 (= lt!53078 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53080 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53080 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53076 () (_ BitVec 64))

(assert (=> b!103931 (= lt!53076 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103931 (= lt!53083 (addApplyDifferent!73 lt!53078 lt!53080 (minValue!2437 newMap!16) lt!53076))))

(assert (=> b!103931 (= (apply!97 (+!137 lt!53078 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))) lt!53076) (apply!97 lt!53078 lt!53076))))

(declare-fun b!103932 () Bool)

(declare-fun e!67681 () Bool)

(declare-fun call!10905 () Bool)

(assert (=> b!103932 (= e!67681 (not call!10905))))

(declare-fun lt!53086 () ListLongMap!1527)

(declare-fun b!103933 () Bool)

(declare-fun e!67682 () Bool)

(assert (=> b!103933 (= e!67682 (= (apply!97 lt!53086 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103933 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))))))))

(assert (=> b!103933 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103934 () Bool)

(declare-fun e!67683 () ListLongMap!1527)

(declare-fun call!10906 () ListLongMap!1527)

(assert (=> b!103934 (= e!67683 call!10906)))

(declare-fun b!103935 () Bool)

(declare-fun Unit!3164 () Unit!3132)

(assert (=> b!103935 (= e!67677 Unit!3164)))

(declare-fun b!103936 () Bool)

(declare-fun e!67680 () ListLongMap!1527)

(assert (=> b!103936 (= e!67680 call!10908)))

(declare-fun b!103938 () Bool)

(declare-fun e!67678 () Bool)

(declare-fun call!10907 () Bool)

(assert (=> b!103938 (= e!67678 (not call!10907))))

(declare-fun b!103939 () Bool)

(declare-fun e!67679 () Bool)

(assert (=> b!103939 (= e!67679 e!67682)))

(declare-fun res!51858 () Bool)

(assert (=> b!103939 (=> (not res!51858) (not e!67682))))

(assert (=> b!103939 (= res!51858 (contains!811 lt!53086 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103939 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103940 () Bool)

(declare-fun e!67686 () Bool)

(assert (=> b!103940 (= e!67686 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103941 () Bool)

(declare-fun res!51856 () Bool)

(declare-fun e!67684 () Bool)

(assert (=> b!103941 (=> (not res!51856) (not e!67684))))

(assert (=> b!103941 (= res!51856 e!67678)))

(declare-fun c!17937 () Bool)

(assert (=> b!103941 (= c!17937 (not (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!10904 () Bool)

(declare-fun c!17942 () Bool)

(declare-fun call!10910 () ListLongMap!1527)

(declare-fun c!17940 () Bool)

(assert (=> bm!10904 (= call!10910 (+!137 (ite c!17940 call!10911 (ite c!17942 call!10909 call!10908)) (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!103942 () Bool)

(declare-fun e!67685 () ListLongMap!1527)

(assert (=> b!103942 (= e!67685 e!67683)))

(assert (=> b!103942 (= c!17942 (and (not (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103943 () Bool)

(assert (=> b!103943 (= e!67680 call!10906)))

(declare-fun bm!10905 () Bool)

(assert (=> bm!10905 (= call!10906 call!10910)))

(declare-fun c!17941 () Bool)

(declare-fun b!103944 () Bool)

(assert (=> b!103944 (= c!17941 (and (not (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103944 (= e!67683 e!67680)))

(declare-fun b!103945 () Bool)

(assert (=> b!103945 (= e!67685 (+!137 call!10910 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!10906 () Bool)

(assert (=> bm!10906 (= call!10909 call!10911)))

(declare-fun b!103946 () Bool)

(declare-fun res!51864 () Bool)

(assert (=> b!103946 (=> (not res!51864) (not e!67684))))

(assert (=> b!103946 (= res!51864 e!67679)))

(declare-fun res!51860 () Bool)

(assert (=> b!103946 (=> res!51860 e!67679)))

(declare-fun e!67687 () Bool)

(assert (=> b!103946 (= res!51860 (not e!67687))))

(declare-fun res!51859 () Bool)

(assert (=> b!103946 (=> (not res!51859) (not e!67687))))

(assert (=> b!103946 (= res!51859 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!103947 () Bool)

(declare-fun e!67689 () Bool)

(assert (=> b!103947 (= e!67689 (= (apply!97 lt!53086 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!10907 () Bool)

(assert (=> bm!10907 (= call!10907 (contains!811 lt!53086 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10908 () Bool)

(assert (=> bm!10908 (= call!10905 (contains!811 lt!53086 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103937 () Bool)

(assert (=> b!103937 (= e!67681 e!67689)))

(declare-fun res!51862 () Bool)

(assert (=> b!103937 (= res!51862 call!10905)))

(assert (=> b!103937 (=> (not res!51862) (not e!67689))))

(declare-fun d!27995 () Bool)

(assert (=> d!27995 e!67684))

(declare-fun res!51863 () Bool)

(assert (=> d!27995 (=> (not res!51863) (not e!67684))))

(assert (=> d!27995 (= res!51863 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!53073 () ListLongMap!1527)

(assert (=> d!27995 (= lt!53086 lt!53073)))

(declare-fun lt!53075 () Unit!3132)

(assert (=> d!27995 (= lt!53075 e!67677)))

(declare-fun c!17939 () Bool)

(assert (=> d!27995 (= c!17939 e!67686)))

(declare-fun res!51861 () Bool)

(assert (=> d!27995 (=> (not res!51861) (not e!67686))))

(assert (=> d!27995 (= res!51861 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!27995 (= lt!53073 e!67685)))

(assert (=> d!27995 (= c!17940 (and (not (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27995 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!27995 (= (getCurrentListMap!467 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53086)))

(declare-fun b!103948 () Bool)

(assert (=> b!103948 (= e!67687 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103949 () Bool)

(declare-fun e!67688 () Bool)

(assert (=> b!103949 (= e!67678 e!67688)))

(declare-fun res!51857 () Bool)

(assert (=> b!103949 (= res!51857 call!10907)))

(assert (=> b!103949 (=> (not res!51857) (not e!67688))))

(declare-fun b!103950 () Bool)

(assert (=> b!103950 (= e!67688 (= (apply!97 lt!53086 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))

(declare-fun b!103951 () Bool)

(assert (=> b!103951 (= e!67684 e!67681)))

(declare-fun c!17938 () Bool)

(assert (=> b!103951 (= c!17938 (not (= (bvand (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!27995 c!17940) b!103945))

(assert (= (and d!27995 (not c!17940)) b!103942))

(assert (= (and b!103942 c!17942) b!103934))

(assert (= (and b!103942 (not c!17942)) b!103944))

(assert (= (and b!103944 c!17941) b!103943))

(assert (= (and b!103944 (not c!17941)) b!103936))

(assert (= (or b!103943 b!103936) bm!10903))

(assert (= (or b!103934 bm!10903) bm!10906))

(assert (= (or b!103934 b!103943) bm!10905))

(assert (= (or b!103945 bm!10906) bm!10902))

(assert (= (or b!103945 bm!10905) bm!10904))

(assert (= (and d!27995 res!51861) b!103940))

(assert (= (and d!27995 c!17939) b!103931))

(assert (= (and d!27995 (not c!17939)) b!103935))

(assert (= (and d!27995 res!51863) b!103946))

(assert (= (and b!103946 res!51859) b!103948))

(assert (= (and b!103946 (not res!51860)) b!103939))

(assert (= (and b!103939 res!51858) b!103933))

(assert (= (and b!103946 res!51864) b!103941))

(assert (= (and b!103941 c!17937) b!103949))

(assert (= (and b!103941 (not c!17937)) b!103938))

(assert (= (and b!103949 res!51857) b!103950))

(assert (= (or b!103949 b!103938) bm!10907))

(assert (= (and b!103941 res!51856) b!103951))

(assert (= (and b!103951 c!17938) b!103937))

(assert (= (and b!103951 (not c!17938)) b!103932))

(assert (= (and b!103937 res!51862) b!103947))

(assert (= (or b!103937 b!103932) bm!10908))

(declare-fun b_lambda!4641 () Bool)

(assert (=> (not b_lambda!4641) (not b!103933)))

(assert (=> b!103933 t!5659))

(declare-fun b_and!6425 () Bool)

(assert (= b_and!6421 (and (=> t!5659 result!3431) b_and!6425)))

(assert (=> b!103933 t!5661))

(declare-fun b_and!6427 () Bool)

(assert (= b_and!6423 (and (=> t!5661 result!3433) b_and!6427)))

(declare-fun m!115063 () Bool)

(assert (=> b!103945 m!115063))

(assert (=> d!27995 m!114321))

(declare-fun m!115065 () Bool)

(assert (=> bm!10902 m!115065))

(assert (=> b!103948 m!114381))

(assert (=> b!103948 m!114381))

(assert (=> b!103948 m!114383))

(declare-fun m!115067 () Bool)

(assert (=> bm!10908 m!115067))

(assert (=> b!103939 m!114381))

(assert (=> b!103939 m!114381))

(declare-fun m!115069 () Bool)

(assert (=> b!103939 m!115069))

(assert (=> b!103933 m!114389))

(assert (=> b!103933 m!114381))

(declare-fun m!115071 () Bool)

(assert (=> b!103933 m!115071))

(assert (=> b!103933 m!114381))

(declare-fun m!115073 () Bool)

(assert (=> b!103933 m!115073))

(assert (=> b!103933 m!115073))

(assert (=> b!103933 m!114389))

(declare-fun m!115075 () Bool)

(assert (=> b!103933 m!115075))

(declare-fun m!115077 () Bool)

(assert (=> bm!10904 m!115077))

(declare-fun m!115079 () Bool)

(assert (=> b!103950 m!115079))

(declare-fun m!115081 () Bool)

(assert (=> bm!10907 m!115081))

(declare-fun m!115083 () Bool)

(assert (=> b!103931 m!115083))

(declare-fun m!115085 () Bool)

(assert (=> b!103931 m!115085))

(declare-fun m!115087 () Bool)

(assert (=> b!103931 m!115087))

(assert (=> b!103931 m!114381))

(declare-fun m!115089 () Bool)

(assert (=> b!103931 m!115089))

(assert (=> b!103931 m!115065))

(declare-fun m!115091 () Bool)

(assert (=> b!103931 m!115091))

(declare-fun m!115093 () Bool)

(assert (=> b!103931 m!115093))

(declare-fun m!115095 () Bool)

(assert (=> b!103931 m!115095))

(declare-fun m!115097 () Bool)

(assert (=> b!103931 m!115097))

(declare-fun m!115099 () Bool)

(assert (=> b!103931 m!115099))

(declare-fun m!115101 () Bool)

(assert (=> b!103931 m!115101))

(assert (=> b!103931 m!115095))

(declare-fun m!115103 () Bool)

(assert (=> b!103931 m!115103))

(assert (=> b!103931 m!115089))

(declare-fun m!115105 () Bool)

(assert (=> b!103931 m!115105))

(assert (=> b!103931 m!115087))

(declare-fun m!115107 () Bool)

(assert (=> b!103931 m!115107))

(declare-fun m!115109 () Bool)

(assert (=> b!103931 m!115109))

(assert (=> b!103931 m!115099))

(declare-fun m!115111 () Bool)

(assert (=> b!103931 m!115111))

(assert (=> b!103940 m!114381))

(assert (=> b!103940 m!114381))

(assert (=> b!103940 m!114383))

(declare-fun m!115113 () Bool)

(assert (=> b!103947 m!115113))

(assert (=> bm!10819 d!27995))

(declare-fun d!27997 () Bool)

(declare-fun res!51869 () Bool)

(declare-fun e!67694 () Bool)

(assert (=> d!27997 (=> res!51869 e!67694)))

(assert (=> d!27997 (= res!51869 (and ((_ is Cons!1588) (toList!779 lt!52449)) (= (_1!1188 (h!2184 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!27997 (= (containsKey!159 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67694)))

(declare-fun b!103956 () Bool)

(declare-fun e!67695 () Bool)

(assert (=> b!103956 (= e!67694 e!67695)))

(declare-fun res!51870 () Bool)

(assert (=> b!103956 (=> (not res!51870) (not e!67695))))

(assert (=> b!103956 (= res!51870 (and (or (not ((_ is Cons!1588) (toList!779 lt!52449))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1588) (toList!779 lt!52449)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!103957 () Bool)

(assert (=> b!103957 (= e!67695 (containsKey!159 (t!5646 (toList!779 lt!52449)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!27997 (not res!51869)) b!103956))

(assert (= (and b!103956 res!51870) b!103957))

(assert (=> b!103957 m!113915))

(declare-fun m!115115 () Bool)

(assert (=> b!103957 m!115115))

(assert (=> d!27795 d!27997))

(declare-fun d!27999 () Bool)

(declare-fun lt!53093 () Bool)

(declare-fun content!109 (List!1593) (InoxSet (_ BitVec 64)))

(assert (=> d!27999 (= lt!53093 (select (content!109 Nil!1590) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67700 () Bool)

(assert (=> d!27999 (= lt!53093 e!67700)))

(declare-fun res!51875 () Bool)

(assert (=> d!27999 (=> (not res!51875) (not e!67700))))

(assert (=> d!27999 (= res!51875 ((_ is Cons!1589) Nil!1590))))

(assert (=> d!27999 (= (contains!813 Nil!1590 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53093)))

(declare-fun b!103962 () Bool)

(declare-fun e!67701 () Bool)

(assert (=> b!103962 (= e!67700 e!67701)))

(declare-fun res!51876 () Bool)

(assert (=> b!103962 (=> res!51876 e!67701)))

(assert (=> b!103962 (= res!51876 (= (h!2185 Nil!1590) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103963 () Bool)

(assert (=> b!103963 (= e!67701 (contains!813 (t!5647 Nil!1590) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!27999 res!51875) b!103962))

(assert (= (and b!103962 (not res!51876)) b!103963))

(declare-fun m!115117 () Bool)

(assert (=> d!27999 m!115117))

(assert (=> d!27999 m!113915))

(declare-fun m!115119 () Bool)

(assert (=> d!27999 m!115119))

(assert (=> b!103963 m!113915))

(declare-fun m!115121 () Bool)

(assert (=> b!103963 m!115121))

(assert (=> b!103278 d!27999))

(declare-fun d!28001 () Bool)

(declare-fun e!67703 () Bool)

(assert (=> d!28001 e!67703))

(declare-fun res!51877 () Bool)

(assert (=> d!28001 (=> res!51877 e!67703)))

(declare-fun lt!53097 () Bool)

(assert (=> d!28001 (= res!51877 (not lt!53097))))

(declare-fun lt!53094 () Bool)

(assert (=> d!28001 (= lt!53097 lt!53094)))

(declare-fun lt!53095 () Unit!3132)

(declare-fun e!67702 () Unit!3132)

(assert (=> d!28001 (= lt!53095 e!67702)))

(declare-fun c!17943 () Bool)

(assert (=> d!28001 (= c!17943 lt!53094)))

(assert (=> d!28001 (= lt!53094 (containsKey!159 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28001 (= (contains!811 lt!52641 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53097)))

(declare-fun b!103964 () Bool)

(declare-fun lt!53096 () Unit!3132)

(assert (=> b!103964 (= e!67702 lt!53096)))

(assert (=> b!103964 (= lt!53096 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103964 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103965 () Bool)

(declare-fun Unit!3165 () Unit!3132)

(assert (=> b!103965 (= e!67702 Unit!3165)))

(declare-fun b!103966 () Bool)

(assert (=> b!103966 (= e!67703 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28001 c!17943) b!103964))

(assert (= (and d!28001 (not c!17943)) b!103965))

(assert (= (and d!28001 (not res!51877)) b!103966))

(declare-fun m!115123 () Bool)

(assert (=> d!28001 m!115123))

(declare-fun m!115125 () Bool)

(assert (=> b!103964 m!115125))

(assert (=> b!103964 m!115059))

(assert (=> b!103964 m!115059))

(declare-fun m!115127 () Bool)

(assert (=> b!103964 m!115127))

(assert (=> b!103966 m!115059))

(assert (=> b!103966 m!115059))

(assert (=> b!103966 m!115127))

(assert (=> bm!10769 d!28001))

(declare-fun condMapEmpty!3915 () Bool)

(declare-fun mapDefault!3915 () ValueCell!992)

(assert (=> mapNonEmpty!3914 (= condMapEmpty!3915 (= mapRest!3914 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3915)))))

(declare-fun e!67705 () Bool)

(declare-fun mapRes!3915 () Bool)

(assert (=> mapNonEmpty!3914 (= tp!9872 (and e!67705 mapRes!3915))))

(declare-fun b!103968 () Bool)

(assert (=> b!103968 (= e!67705 tp_is_empty!2671)))

(declare-fun b!103967 () Bool)

(declare-fun e!67704 () Bool)

(assert (=> b!103967 (= e!67704 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3915 () Bool)

(assert (=> mapIsEmpty!3915 mapRes!3915))

(declare-fun mapNonEmpty!3915 () Bool)

(declare-fun tp!9873 () Bool)

(assert (=> mapNonEmpty!3915 (= mapRes!3915 (and tp!9873 e!67704))))

(declare-fun mapRest!3915 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapKey!3915 () (_ BitVec 32))

(declare-fun mapValue!3915 () ValueCell!992)

(assert (=> mapNonEmpty!3915 (= mapRest!3914 (store mapRest!3915 mapKey!3915 mapValue!3915))))

(assert (= (and mapNonEmpty!3914 condMapEmpty!3915) mapIsEmpty!3915))

(assert (= (and mapNonEmpty!3914 (not condMapEmpty!3915)) mapNonEmpty!3915))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!992) mapValue!3915)) b!103967))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!992) mapDefault!3915)) b!103968))

(declare-fun m!115129 () Bool)

(assert (=> mapNonEmpty!3915 m!115129))

(declare-fun condMapEmpty!3916 () Bool)

(declare-fun mapDefault!3916 () ValueCell!992)

(assert (=> mapNonEmpty!3913 (= condMapEmpty!3916 (= mapRest!3913 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3916)))))

(declare-fun e!67707 () Bool)

(declare-fun mapRes!3916 () Bool)

(assert (=> mapNonEmpty!3913 (= tp!9871 (and e!67707 mapRes!3916))))

(declare-fun b!103970 () Bool)

(assert (=> b!103970 (= e!67707 tp_is_empty!2671)))

(declare-fun b!103969 () Bool)

(declare-fun e!67706 () Bool)

(assert (=> b!103969 (= e!67706 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3916 () Bool)

(assert (=> mapIsEmpty!3916 mapRes!3916))

(declare-fun mapNonEmpty!3916 () Bool)

(declare-fun tp!9874 () Bool)

(assert (=> mapNonEmpty!3916 (= mapRes!3916 (and tp!9874 e!67706))))

(declare-fun mapKey!3916 () (_ BitVec 32))

(declare-fun mapRest!3916 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapValue!3916 () ValueCell!992)

(assert (=> mapNonEmpty!3916 (= mapRest!3913 (store mapRest!3916 mapKey!3916 mapValue!3916))))

(assert (= (and mapNonEmpty!3913 condMapEmpty!3916) mapIsEmpty!3916))

(assert (= (and mapNonEmpty!3913 (not condMapEmpty!3916)) mapNonEmpty!3916))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!992) mapValue!3916)) b!103969))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!992) mapDefault!3916)) b!103970))

(declare-fun m!115131 () Bool)

(assert (=> mapNonEmpty!3916 m!115131))

(declare-fun b_lambda!4643 () Bool)

(assert (= b_lambda!4641 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4643)))

(declare-fun b_lambda!4645 () Bool)

(assert (= b_lambda!4639 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4645)))

(declare-fun b_lambda!4647 () Bool)

(assert (= b_lambda!4635 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4647)))

(declare-fun b_lambda!4649 () Bool)

(assert (= b_lambda!4637 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4649)))

(declare-fun b_lambda!4651 () Bool)

(assert (= b_lambda!4633 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4651)))

(check-sat (not bm!10902) (not b!103694) (not b!103774) (not b!103966) (not b!103771) (not d!27883) tp_is_empty!2671 (not b_lambda!4649) (not b!103866) (not d!28001) (not b!103957) (not b!103812) (not b!103716) (not d!27901) (not b!103794) (not d!27941) (not bm!10855) (not b!103563) (not d!27935) (not d!27865) b_and!6427 (not d!27959) (not d!27845) (not d!27947) (not bm!10901) (not b!103705) (not b!103750) (not b!103684) (not b!103721) (not b!103714) (not b!103897) (not d!27835) (not b!103818) (not b!103676) (not b!103710) (not b!103738) (not b!103807) (not b!103747) (not b!103922) (not b!103931) (not b!103805) (not b!103786) (not b!103829) (not d!27871) (not b!103745) (not bm!10904) (not d!27911) (not b!103553) (not d!27831) (not b!103532) (not d!27989) (not d!27971) (not b!103899) (not b!103797) (not mapNonEmpty!3915) (not b!103686) (not b!103617) (not b!103681) (not b!103609) (not d!27937) (not d!27923) (not b!103527) (not b_lambda!4631) (not b_lambda!4619) (not b!103669) (not b_lambda!4643) (not d!27881) (not b!103804) (not d!27849) (not b!103629) (not b!103886) (not d!27991) (not d!27903) (not b!103896) (not d!27965) (not d!27889) (not b!103620) (not b!103744) (not b!103535) (not b!103602) (not d!27913) (not b!103871) (not b!103711) (not b!103905) (not b!103578) (not bm!10848) (not b!103708) (not b!103724) (not b!103718) (not b!103890) (not d!27933) (not bm!10849) (not b!103830) (not b!103933) (not d!27827) (not d!27857) (not b!103874) (not b!103737) (not d!27995) (not b!103892) (not b!103709) (not b!103603) (not b!103712) (not d!27915) (not b!103895) (not b!103926) (not d!27925) (not b!103565) (not d!27929) (not b!103531) (not bm!10897) (not d!27869) (not b!103918) (not d!27893) (not b!103635) (not b!103749) (not d!27817) (not bm!10852) (not bm!10896) (not d!27945) (not b!103950) (not b!103626) (not d!27807) (not b_lambda!4647) (not bm!10907) (not d!27981) (not b!103894) (not b!103793) (not b_next!2509) (not bm!10898) (not d!27943) (not d!27909) (not b!103539) (not b!103623) (not bm!10869) (not b!103703) (not d!27955) (not b!103777) (not d!27899) (not bm!10883) (not bm!10874) (not b!103940) (not d!27973) (not b!103591) (not d!27875) (not d!27999) (not d!27813) (not d!27819) (not b!103920) (not b!103930) (not d!27983) (not b!103619) (not d!27879) (not b!103923) (not d!27919) (not b!103881) (not d!27969) (not b!103683) (not b!103778) (not b!103769) (not d!27805) (not b!103556) (not d!27861) (not b!103887) (not d!27811) (not bm!10850) (not b!103498) (not b!103877) (not d!27977) (not b!103735) (not b!103636) (not b!103888) (not b!103624) (not d!27873) (not b_lambda!4645) (not b!103577) (not b!103697) (not b!103658) (not b!103785) (not b!103576) (not d!27961) (not b!103580) (not b!103780) (not b!103948) (not d!27885) (not b!103765) (not b!103921) (not d!27833) (not d!27951) (not b!103533) (not b!103525) (not b!103928) (not bm!10894) (not b!103964) (not b!103945) (not d!27993) (not b!103664) (not d!27809) (not b!103742) (not d!27921) (not b!103667) (not d!27853) (not b!103743) (not b!103613) (not b!103496) (not bm!10875) (not d!27867) (not d!27917) (not b!103689) (not d!27855) (not b!103748) (not b!103523) (not b!103824) (not d!27877) (not bm!10856) (not bm!10908) (not b!103740) (not bm!10871) (not b!103622) (not b!103821) (not d!27843) (not b!103732) (not bm!10879) (not b!103783) (not d!27887) (not b!103813) (not d!27985) (not b!103524) (not b!103726) (not b!103799) (not b_lambda!4629) (not b!103707) (not mapNonEmpty!3916) (not b!103963) (not b!103675) (not b_lambda!4651) (not b!103723) (not b!103554) (not b!103947) (not b!103916) (not d!27891) (not b!103819) (not b!103873) (not b!103828) (not b!103688) (not d!27975) (not b!103884) (not d!27957) (not bm!10847) (not b!103537) (not b!103546) (not d!27949) (not b!103802) (not b!103545) (not b!103925) (not b!103713) (not b!103621) (not bm!10880) (not d!27801) (not b!103939) (not b_lambda!4627) (not d!27987) (not b_next!2511) (not b!103528) (not b!103551) (not bm!10866) (not b!103788) (not b!103904) (not b!103816) (not b!103731) (not bm!10859) (not b!103529) (not d!27907) b_and!6425 (not b!103663) (not b!103746) (not d!27859) (not d!27895) (not bm!10876))
(check-sat b_and!6425 b_and!6427 (not b_next!2509) (not b_next!2511))
(get-model)

(declare-fun d!28003 () Bool)

(declare-fun e!67709 () Bool)

(assert (=> d!28003 e!67709))

(declare-fun res!51878 () Bool)

(assert (=> d!28003 (=> res!51878 e!67709)))

(declare-fun lt!53101 () Bool)

(assert (=> d!28003 (= res!51878 (not lt!53101))))

(declare-fun lt!53098 () Bool)

(assert (=> d!28003 (= lt!53101 lt!53098)))

(declare-fun lt!53099 () Unit!3132)

(declare-fun e!67708 () Unit!3132)

(assert (=> d!28003 (= lt!53099 e!67708)))

(declare-fun c!17944 () Bool)

(assert (=> d!28003 (= c!17944 lt!53098)))

(assert (=> d!28003 (= lt!53098 (containsKey!159 (toList!779 lt!52854) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28003 (= (contains!811 lt!52854 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53101)))

(declare-fun b!103971 () Bool)

(declare-fun lt!53100 () Unit!3132)

(assert (=> b!103971 (= e!67708 lt!53100)))

(assert (=> b!103971 (= lt!53100 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52854) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!103971 (isDefined!108 (getValueByKey!156 (toList!779 lt!52854) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103972 () Bool)

(declare-fun Unit!3166 () Unit!3132)

(assert (=> b!103972 (= e!67708 Unit!3166)))

(declare-fun b!103973 () Bool)

(assert (=> b!103973 (= e!67709 (isDefined!108 (getValueByKey!156 (toList!779 lt!52854) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28003 c!17944) b!103971))

(assert (= (and d!28003 (not c!17944)) b!103972))

(assert (= (and d!28003 (not res!51878)) b!103973))

(declare-fun m!115133 () Bool)

(assert (=> d!28003 m!115133))

(declare-fun m!115135 () Bool)

(assert (=> b!103971 m!115135))

(assert (=> b!103971 m!114619))

(assert (=> b!103971 m!114619))

(declare-fun m!115137 () Bool)

(assert (=> b!103971 m!115137))

(assert (=> b!103973 m!114619))

(assert (=> b!103973 m!114619))

(assert (=> b!103973 m!115137))

(assert (=> d!27877 d!28003))

(declare-fun e!67711 () Option!162)

(declare-fun b!103976 () Bool)

(assert (=> b!103976 (= e!67711 (getValueByKey!156 (t!5646 lt!52853) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103975 () Bool)

(declare-fun e!67710 () Option!162)

(assert (=> b!103975 (= e!67710 e!67711)))

(declare-fun c!17946 () Bool)

(assert (=> b!103975 (= c!17946 (and ((_ is Cons!1588) lt!52853) (not (= (_1!1188 (h!2184 lt!52853)) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!103974 () Bool)

(assert (=> b!103974 (= e!67710 (Some!161 (_2!1188 (h!2184 lt!52853))))))

(declare-fun c!17945 () Bool)

(declare-fun d!28005 () Bool)

(assert (=> d!28005 (= c!17945 (and ((_ is Cons!1588) lt!52853) (= (_1!1188 (h!2184 lt!52853)) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28005 (= (getValueByKey!156 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67710)))

(declare-fun b!103977 () Bool)

(assert (=> b!103977 (= e!67711 None!160)))

(assert (= (and d!28005 c!17945) b!103974))

(assert (= (and d!28005 (not c!17945)) b!103975))

(assert (= (and b!103975 c!17946) b!103976))

(assert (= (and b!103975 (not c!17946)) b!103977))

(declare-fun m!115139 () Bool)

(assert (=> b!103976 m!115139))

(assert (=> d!27877 d!28005))

(declare-fun d!28007 () Bool)

(assert (=> d!28007 (= (getValueByKey!156 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53102 () Unit!3132)

(assert (=> d!28007 (= lt!53102 (choose!648 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!67712 () Bool)

(assert (=> d!28007 e!67712))

(declare-fun res!51879 () Bool)

(assert (=> d!28007 (=> (not res!51879) (not e!67712))))

(assert (=> d!28007 (= res!51879 (isStrictlySorted!295 lt!52853))))

(assert (=> d!28007 (= (lemmaContainsTupThenGetReturnValue!72 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53102)))

(declare-fun b!103978 () Bool)

(declare-fun res!51880 () Bool)

(assert (=> b!103978 (=> (not res!51880) (not e!67712))))

(assert (=> b!103978 (= res!51880 (containsKey!159 lt!52853 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103979 () Bool)

(assert (=> b!103979 (= e!67712 (contains!812 lt!52853 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28007 res!51879) b!103978))

(assert (= (and b!103978 res!51880) b!103979))

(assert (=> d!28007 m!114613))

(declare-fun m!115141 () Bool)

(assert (=> d!28007 m!115141))

(declare-fun m!115143 () Bool)

(assert (=> d!28007 m!115143))

(declare-fun m!115145 () Bool)

(assert (=> b!103978 m!115145))

(declare-fun m!115147 () Bool)

(assert (=> b!103979 m!115147))

(assert (=> d!27877 d!28007))

(declare-fun b!103980 () Bool)

(declare-fun e!67713 () List!1592)

(declare-fun call!10913 () List!1592)

(assert (=> b!103980 (= e!67713 call!10913)))

(declare-fun b!103981 () Bool)

(declare-fun e!67716 () List!1592)

(assert (=> b!103981 (= e!67716 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52639)) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103982 () Bool)

(declare-fun e!67714 () List!1592)

(declare-fun call!10914 () List!1592)

(assert (=> b!103982 (= e!67714 call!10914)))

(declare-fun d!28009 () Bool)

(declare-fun e!67715 () Bool)

(assert (=> d!28009 e!67715))

(declare-fun res!51882 () Bool)

(assert (=> d!28009 (=> (not res!51882) (not e!67715))))

(declare-fun lt!53103 () List!1592)

(assert (=> d!28009 (= res!51882 (isStrictlySorted!295 lt!53103))))

(declare-fun e!67717 () List!1592)

(assert (=> d!28009 (= lt!53103 e!67717)))

(declare-fun c!17947 () Bool)

(assert (=> d!28009 (= c!17947 (and ((_ is Cons!1588) (toList!779 lt!52639)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52639))) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28009 (isStrictlySorted!295 (toList!779 lt!52639))))

(assert (=> d!28009 (= (insertStrictlySorted!75 (toList!779 lt!52639) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53103)))

(declare-fun bm!10909 () Bool)

(declare-fun call!10912 () List!1592)

(assert (=> bm!10909 (= call!10912 ($colon$colon!79 e!67716 (ite c!17947 (h!2184 (toList!779 lt!52639)) (tuple2!2355 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!17949 () Bool)

(assert (=> bm!10909 (= c!17949 c!17947)))

(declare-fun c!17948 () Bool)

(declare-fun b!103983 () Bool)

(declare-fun c!17950 () Bool)

(assert (=> b!103983 (= e!67716 (ite c!17950 (t!5646 (toList!779 lt!52639)) (ite c!17948 (Cons!1588 (h!2184 (toList!779 lt!52639)) (t!5646 (toList!779 lt!52639))) Nil!1589)))))

(declare-fun b!103984 () Bool)

(assert (=> b!103984 (= c!17948 (and ((_ is Cons!1588) (toList!779 lt!52639)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52639))) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!103984 (= e!67714 e!67713)))

(declare-fun bm!10910 () Bool)

(assert (=> bm!10910 (= call!10913 call!10914)))

(declare-fun b!103985 () Bool)

(assert (=> b!103985 (= e!67713 call!10913)))

(declare-fun bm!10911 () Bool)

(assert (=> bm!10911 (= call!10914 call!10912)))

(declare-fun b!103986 () Bool)

(assert (=> b!103986 (= e!67715 (contains!812 lt!53103 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103987 () Bool)

(declare-fun res!51881 () Bool)

(assert (=> b!103987 (=> (not res!51881) (not e!67715))))

(assert (=> b!103987 (= res!51881 (containsKey!159 lt!53103 (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103988 () Bool)

(assert (=> b!103988 (= e!67717 e!67714)))

(assert (=> b!103988 (= c!17950 (and ((_ is Cons!1588) (toList!779 lt!52639)) (= (_1!1188 (h!2184 (toList!779 lt!52639))) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103989 () Bool)

(assert (=> b!103989 (= e!67717 call!10912)))

(assert (= (and d!28009 c!17947) b!103989))

(assert (= (and d!28009 (not c!17947)) b!103988))

(assert (= (and b!103988 c!17950) b!103982))

(assert (= (and b!103988 (not c!17950)) b!103984))

(assert (= (and b!103984 c!17948) b!103985))

(assert (= (and b!103984 (not c!17948)) b!103980))

(assert (= (or b!103985 b!103980) bm!10910))

(assert (= (or b!103982 bm!10910) bm!10911))

(assert (= (or b!103989 bm!10911) bm!10909))

(assert (= (and bm!10909 c!17949) b!103981))

(assert (= (and bm!10909 (not c!17949)) b!103983))

(assert (= (and d!28009 res!51882) b!103987))

(assert (= (and b!103987 res!51881) b!103986))

(declare-fun m!115149 () Bool)

(assert (=> d!28009 m!115149))

(declare-fun m!115151 () Bool)

(assert (=> d!28009 m!115151))

(declare-fun m!115153 () Bool)

(assert (=> b!103986 m!115153))

(declare-fun m!115155 () Bool)

(assert (=> b!103987 m!115155))

(declare-fun m!115157 () Bool)

(assert (=> b!103981 m!115157))

(declare-fun m!115159 () Bool)

(assert (=> bm!10909 m!115159))

(assert (=> d!27877 d!28009))

(declare-fun d!28011 () Bool)

(declare-fun e!67719 () Bool)

(assert (=> d!28011 e!67719))

(declare-fun res!51883 () Bool)

(assert (=> d!28011 (=> res!51883 e!67719)))

(declare-fun lt!53107 () Bool)

(assert (=> d!28011 (= res!51883 (not lt!53107))))

(declare-fun lt!53104 () Bool)

(assert (=> d!28011 (= lt!53107 lt!53104)))

(declare-fun lt!53105 () Unit!3132)

(declare-fun e!67718 () Unit!3132)

(assert (=> d!28011 (= lt!53105 e!67718)))

(declare-fun c!17951 () Bool)

(assert (=> d!28011 (= c!17951 lt!53104)))

(assert (=> d!28011 (= lt!53104 (containsKey!159 (toList!779 lt!53086) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28011 (= (contains!811 lt!53086 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53107)))

(declare-fun b!103990 () Bool)

(declare-fun lt!53106 () Unit!3132)

(assert (=> b!103990 (= e!67718 lt!53106)))

(assert (=> b!103990 (= lt!53106 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!53086) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103990 (isDefined!108 (getValueByKey!156 (toList!779 lt!53086) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103991 () Bool)

(declare-fun Unit!3167 () Unit!3132)

(assert (=> b!103991 (= e!67718 Unit!3167)))

(declare-fun b!103992 () Bool)

(assert (=> b!103992 (= e!67719 (isDefined!108 (getValueByKey!156 (toList!779 lt!53086) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28011 c!17951) b!103990))

(assert (= (and d!28011 (not c!17951)) b!103991))

(assert (= (and d!28011 (not res!51883)) b!103992))

(declare-fun m!115161 () Bool)

(assert (=> d!28011 m!115161))

(declare-fun m!115163 () Bool)

(assert (=> b!103990 m!115163))

(declare-fun m!115165 () Bool)

(assert (=> b!103990 m!115165))

(assert (=> b!103990 m!115165))

(declare-fun m!115167 () Bool)

(assert (=> b!103990 m!115167))

(assert (=> b!103992 m!115165))

(assert (=> b!103992 m!115165))

(assert (=> b!103992 m!115167))

(assert (=> bm!10908 d!28011))

(declare-fun d!28013 () Bool)

(assert (=> d!28013 (= ($colon$colon!79 e!67523 (ite c!17865 (h!2184 (toList!779 (+!137 lt!52441 lt!52444))) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442)))) (Cons!1588 (ite c!17865 (h!2184 (toList!779 (+!137 lt!52441 lt!52444))) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))) e!67523))))

(assert (=> bm!10866 d!28013))

(assert (=> d!27833 d!27779))

(declare-fun d!28015 () Bool)

(assert (=> d!28015 (= (get!1329 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2875 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103622 d!28015))

(declare-fun d!28017 () Bool)

(declare-fun e!67721 () Bool)

(assert (=> d!28017 e!67721))

(declare-fun res!51884 () Bool)

(assert (=> d!28017 (=> res!51884 e!67721)))

(declare-fun lt!53111 () Bool)

(assert (=> d!28017 (= res!51884 (not lt!53111))))

(declare-fun lt!53108 () Bool)

(assert (=> d!28017 (= lt!53111 lt!53108)))

(declare-fun lt!53109 () Unit!3132)

(declare-fun e!67720 () Unit!3132)

(assert (=> d!28017 (= lt!53109 e!67720)))

(declare-fun c!17952 () Bool)

(assert (=> d!28017 (= c!17952 lt!53108)))

(assert (=> d!28017 (= lt!53108 (containsKey!159 (toList!779 lt!52835) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28017 (= (contains!811 lt!52835 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53111)))

(declare-fun b!103993 () Bool)

(declare-fun lt!53110 () Unit!3132)

(assert (=> b!103993 (= e!67720 lt!53110)))

(assert (=> b!103993 (= lt!53110 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52835) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> b!103993 (isDefined!108 (getValueByKey!156 (toList!779 lt!52835) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!103994 () Bool)

(declare-fun Unit!3168 () Unit!3132)

(assert (=> b!103994 (= e!67720 Unit!3168)))

(declare-fun b!103995 () Bool)

(assert (=> b!103995 (= e!67721 (isDefined!108 (getValueByKey!156 (toList!779 lt!52835) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (= (and d!28017 c!17952) b!103993))

(assert (= (and d!28017 (not c!17952)) b!103994))

(assert (= (and d!28017 (not res!51884)) b!103995))

(declare-fun m!115169 () Bool)

(assert (=> d!28017 m!115169))

(declare-fun m!115171 () Bool)

(assert (=> b!103993 m!115171))

(assert (=> b!103993 m!114571))

(assert (=> b!103993 m!114571))

(declare-fun m!115173 () Bool)

(assert (=> b!103993 m!115173))

(assert (=> b!103995 m!114571))

(assert (=> b!103995 m!114571))

(assert (=> b!103995 m!115173))

(assert (=> d!27859 d!28017))

(declare-fun e!67723 () Option!162)

(declare-fun b!103998 () Bool)

(assert (=> b!103998 (= e!67723 (getValueByKey!156 (t!5646 lt!52834) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!103997 () Bool)

(declare-fun e!67722 () Option!162)

(assert (=> b!103997 (= e!67722 e!67723)))

(declare-fun c!17954 () Bool)

(assert (=> b!103997 (= c!17954 (and ((_ is Cons!1588) lt!52834) (not (= (_1!1188 (h!2184 lt!52834)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!103996 () Bool)

(assert (=> b!103996 (= e!67722 (Some!161 (_2!1188 (h!2184 lt!52834))))))

(declare-fun d!28019 () Bool)

(declare-fun c!17953 () Bool)

(assert (=> d!28019 (= c!17953 (and ((_ is Cons!1588) lt!52834) (= (_1!1188 (h!2184 lt!52834)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28019 (= (getValueByKey!156 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) e!67722)))

(declare-fun b!103999 () Bool)

(assert (=> b!103999 (= e!67723 None!160)))

(assert (= (and d!28019 c!17953) b!103996))

(assert (= (and d!28019 (not c!17953)) b!103997))

(assert (= (and b!103997 c!17954) b!103998))

(assert (= (and b!103997 (not c!17954)) b!103999))

(declare-fun m!115175 () Bool)

(assert (=> b!103998 m!115175))

(assert (=> d!27859 d!28019))

(declare-fun d!28021 () Bool)

(assert (=> d!28021 (= (getValueByKey!156 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!53112 () Unit!3132)

(assert (=> d!28021 (= lt!53112 (choose!648 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun e!67724 () Bool)

(assert (=> d!28021 e!67724))

(declare-fun res!51885 () Bool)

(assert (=> d!28021 (=> (not res!51885) (not e!67724))))

(assert (=> d!28021 (= res!51885 (isStrictlySorted!295 lt!52834))))

(assert (=> d!28021 (= (lemmaContainsTupThenGetReturnValue!72 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53112)))

(declare-fun b!104000 () Bool)

(declare-fun res!51886 () Bool)

(assert (=> b!104000 (=> (not res!51886) (not e!67724))))

(assert (=> b!104000 (= res!51886 (containsKey!159 lt!52834 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104001 () Bool)

(assert (=> b!104001 (= e!67724 (contains!812 lt!52834 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (= (and d!28021 res!51885) b!104000))

(assert (= (and b!104000 res!51886) b!104001))

(assert (=> d!28021 m!114565))

(declare-fun m!115177 () Bool)

(assert (=> d!28021 m!115177))

(declare-fun m!115179 () Bool)

(assert (=> d!28021 m!115179))

(declare-fun m!115181 () Bool)

(assert (=> b!104000 m!115181))

(declare-fun m!115183 () Bool)

(assert (=> b!104001 m!115183))

(assert (=> d!27859 d!28021))

(declare-fun b!104002 () Bool)

(declare-fun e!67725 () List!1592)

(declare-fun call!10916 () List!1592)

(assert (=> b!104002 (= e!67725 call!10916)))

(declare-fun e!67728 () List!1592)

(declare-fun b!104003 () Bool)

(assert (=> b!104003 (= e!67728 (insertStrictlySorted!75 (t!5646 (toList!779 call!10823)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104004 () Bool)

(declare-fun e!67726 () List!1592)

(declare-fun call!10917 () List!1592)

(assert (=> b!104004 (= e!67726 call!10917)))

(declare-fun d!28023 () Bool)

(declare-fun e!67727 () Bool)

(assert (=> d!28023 e!67727))

(declare-fun res!51888 () Bool)

(assert (=> d!28023 (=> (not res!51888) (not e!67727))))

(declare-fun lt!53113 () List!1592)

(assert (=> d!28023 (= res!51888 (isStrictlySorted!295 lt!53113))))

(declare-fun e!67729 () List!1592)

(assert (=> d!28023 (= lt!53113 e!67729)))

(declare-fun c!17955 () Bool)

(assert (=> d!28023 (= c!17955 (and ((_ is Cons!1588) (toList!779 call!10823)) (bvslt (_1!1188 (h!2184 (toList!779 call!10823))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28023 (isStrictlySorted!295 (toList!779 call!10823))))

(assert (=> d!28023 (= (insertStrictlySorted!75 (toList!779 call!10823) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53113)))

(declare-fun bm!10912 () Bool)

(declare-fun call!10915 () List!1592)

(assert (=> bm!10912 (= call!10915 ($colon$colon!79 e!67728 (ite c!17955 (h!2184 (toList!779 call!10823)) (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun c!17957 () Bool)

(assert (=> bm!10912 (= c!17957 c!17955)))

(declare-fun b!104005 () Bool)

(declare-fun c!17958 () Bool)

(declare-fun c!17956 () Bool)

(assert (=> b!104005 (= e!67728 (ite c!17958 (t!5646 (toList!779 call!10823)) (ite c!17956 (Cons!1588 (h!2184 (toList!779 call!10823)) (t!5646 (toList!779 call!10823))) Nil!1589)))))

(declare-fun b!104006 () Bool)

(assert (=> b!104006 (= c!17956 (and ((_ is Cons!1588) (toList!779 call!10823)) (bvsgt (_1!1188 (h!2184 (toList!779 call!10823))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> b!104006 (= e!67726 e!67725)))

(declare-fun bm!10913 () Bool)

(assert (=> bm!10913 (= call!10916 call!10917)))

(declare-fun b!104007 () Bool)

(assert (=> b!104007 (= e!67725 call!10916)))

(declare-fun bm!10914 () Bool)

(assert (=> bm!10914 (= call!10917 call!10915)))

(declare-fun b!104008 () Bool)

(assert (=> b!104008 (= e!67727 (contains!812 lt!53113 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104009 () Bool)

(declare-fun res!51887 () Bool)

(assert (=> b!104009 (=> (not res!51887) (not e!67727))))

(assert (=> b!104009 (= res!51887 (containsKey!159 lt!53113 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104010 () Bool)

(assert (=> b!104010 (= e!67729 e!67726)))

(assert (=> b!104010 (= c!17958 (and ((_ is Cons!1588) (toList!779 call!10823)) (= (_1!1188 (h!2184 (toList!779 call!10823))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104011 () Bool)

(assert (=> b!104011 (= e!67729 call!10915)))

(assert (= (and d!28023 c!17955) b!104011))

(assert (= (and d!28023 (not c!17955)) b!104010))

(assert (= (and b!104010 c!17958) b!104004))

(assert (= (and b!104010 (not c!17958)) b!104006))

(assert (= (and b!104006 c!17956) b!104007))

(assert (= (and b!104006 (not c!17956)) b!104002))

(assert (= (or b!104007 b!104002) bm!10913))

(assert (= (or b!104004 bm!10913) bm!10914))

(assert (= (or b!104011 bm!10914) bm!10912))

(assert (= (and bm!10912 c!17957) b!104003))

(assert (= (and bm!10912 (not c!17957)) b!104005))

(assert (= (and d!28023 res!51888) b!104009))

(assert (= (and b!104009 res!51887) b!104008))

(declare-fun m!115185 () Bool)

(assert (=> d!28023 m!115185))

(declare-fun m!115187 () Bool)

(assert (=> d!28023 m!115187))

(declare-fun m!115189 () Bool)

(assert (=> b!104008 m!115189))

(declare-fun m!115191 () Bool)

(assert (=> b!104009 m!115191))

(declare-fun m!115193 () Bool)

(assert (=> b!104003 m!115193))

(declare-fun m!115195 () Bool)

(assert (=> bm!10912 m!115195))

(assert (=> d!27859 d!28023))

(declare-fun d!28025 () Bool)

(assert (=> d!28025 (isDefined!108 (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444)))))

(declare-fun lt!53114 () Unit!3132)

(assert (=> d!28025 (= lt!53114 (choose!654 (toList!779 lt!52558) (_1!1188 lt!52444)))))

(declare-fun e!67730 () Bool)

(assert (=> d!28025 e!67730))

(declare-fun res!51889 () Bool)

(assert (=> d!28025 (=> (not res!51889) (not e!67730))))

(assert (=> d!28025 (= res!51889 (isStrictlySorted!295 (toList!779 lt!52558)))))

(assert (=> d!28025 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52558) (_1!1188 lt!52444)) lt!53114)))

(declare-fun b!104012 () Bool)

(assert (=> b!104012 (= e!67730 (containsKey!159 (toList!779 lt!52558) (_1!1188 lt!52444)))))

(assert (= (and d!28025 res!51889) b!104012))

(assert (=> d!28025 m!114135))

(assert (=> d!28025 m!114135))

(assert (=> d!28025 m!114839))

(declare-fun m!115197 () Bool)

(assert (=> d!28025 m!115197))

(declare-fun m!115199 () Bool)

(assert (=> d!28025 m!115199))

(assert (=> b!104012 m!114835))

(assert (=> b!103797 d!28025))

(declare-fun d!28027 () Bool)

(assert (=> d!28027 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52558) (_1!1188 lt!52444)))))))

(declare-fun bs!4267 () Bool)

(assert (= bs!4267 d!28027))

(assert (=> bs!4267 m!114135))

(declare-fun m!115201 () Bool)

(assert (=> bs!4267 m!115201))

(assert (=> b!103797 d!28027))

(assert (=> b!103797 d!27841))

(declare-fun d!28029 () Bool)

(declare-fun res!51890 () Bool)

(declare-fun e!67731 () Bool)

(assert (=> d!28029 (=> res!51890 e!67731)))

(assert (=> d!28029 (= res!51890 (and ((_ is Cons!1588) lt!52921) (= (_1!1188 (h!2184 lt!52921)) (_1!1188 lt!52442))))))

(assert (=> d!28029 (= (containsKey!159 lt!52921 (_1!1188 lt!52442)) e!67731)))

(declare-fun b!104013 () Bool)

(declare-fun e!67732 () Bool)

(assert (=> b!104013 (= e!67731 e!67732)))

(declare-fun res!51891 () Bool)

(assert (=> b!104013 (=> (not res!51891) (not e!67732))))

(assert (=> b!104013 (= res!51891 (and (or (not ((_ is Cons!1588) lt!52921)) (bvsle (_1!1188 (h!2184 lt!52921)) (_1!1188 lt!52442))) ((_ is Cons!1588) lt!52921) (bvslt (_1!1188 (h!2184 lt!52921)) (_1!1188 lt!52442))))))

(declare-fun b!104014 () Bool)

(assert (=> b!104014 (= e!67732 (containsKey!159 (t!5646 lt!52921) (_1!1188 lt!52442)))))

(assert (= (and d!28029 (not res!51890)) b!104013))

(assert (= (and b!104013 res!51891) b!104014))

(declare-fun m!115203 () Bool)

(assert (=> b!104014 m!115203))

(assert (=> b!103794 d!28029))

(declare-fun b!104017 () Bool)

(declare-fun e!67734 () Option!162)

(assert (=> b!104017 (= e!67734 (getValueByKey!156 (t!5646 (t!5646 lt!52557)) (_1!1188 lt!52444)))))

(declare-fun b!104016 () Bool)

(declare-fun e!67733 () Option!162)

(assert (=> b!104016 (= e!67733 e!67734)))

(declare-fun c!17960 () Bool)

(assert (=> b!104016 (= c!17960 (and ((_ is Cons!1588) (t!5646 lt!52557)) (not (= (_1!1188 (h!2184 (t!5646 lt!52557))) (_1!1188 lt!52444)))))))

(declare-fun b!104015 () Bool)

(assert (=> b!104015 (= e!67733 (Some!161 (_2!1188 (h!2184 (t!5646 lt!52557)))))))

(declare-fun d!28031 () Bool)

(declare-fun c!17959 () Bool)

(assert (=> d!28031 (= c!17959 (and ((_ is Cons!1588) (t!5646 lt!52557)) (= (_1!1188 (h!2184 (t!5646 lt!52557))) (_1!1188 lt!52444))))))

(assert (=> d!28031 (= (getValueByKey!156 (t!5646 lt!52557) (_1!1188 lt!52444)) e!67733)))

(declare-fun b!104018 () Bool)

(assert (=> b!104018 (= e!67734 None!160)))

(assert (= (and d!28031 c!17959) b!104015))

(assert (= (and d!28031 (not c!17959)) b!104016))

(assert (= (and b!104016 c!17960) b!104017))

(assert (= (and b!104016 (not c!17960)) b!104018))

(declare-fun m!115205 () Bool)

(assert (=> b!104017 m!115205))

(assert (=> b!103802 d!28031))

(declare-fun d!28033 () Bool)

(assert (=> d!28033 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4268 () Bool)

(assert (= bs!4268 d!28033))

(assert (=> bs!4268 m!114455))

(declare-fun m!115207 () Bool)

(assert (=> bs!4268 m!115207))

(assert (=> b!103580 d!28033))

(declare-fun b!104021 () Bool)

(declare-fun e!67736 () Option!162)

(assert (=> b!104021 (= e!67736 (getValueByKey!156 (t!5646 (toList!779 lt!52641)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!104020 () Bool)

(declare-fun e!67735 () Option!162)

(assert (=> b!104020 (= e!67735 e!67736)))

(declare-fun c!17962 () Bool)

(assert (=> b!104020 (= c!17962 (and ((_ is Cons!1588) (toList!779 lt!52641)) (not (= (_1!1188 (h!2184 (toList!779 lt!52641))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104019 () Bool)

(assert (=> b!104019 (= e!67735 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52641)))))))

(declare-fun c!17961 () Bool)

(declare-fun d!28035 () Bool)

(assert (=> d!28035 (= c!17961 (and ((_ is Cons!1588) (toList!779 lt!52641)) (= (_1!1188 (h!2184 (toList!779 lt!52641))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28035 (= (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67735)))

(declare-fun b!104022 () Bool)

(assert (=> b!104022 (= e!67736 None!160)))

(assert (= (and d!28035 c!17961) b!104019))

(assert (= (and d!28035 (not c!17961)) b!104020))

(assert (= (and b!104020 c!17962) b!104021))

(assert (= (and b!104020 (not c!17962)) b!104022))

(assert (=> b!104021 m!114103))

(declare-fun m!115209 () Bool)

(assert (=> b!104021 m!115209))

(assert (=> b!103580 d!28035))

(assert (=> b!103828 d!27997))

(assert (=> d!27933 d!27931))

(declare-fun d!28037 () Bool)

(assert (=> d!28037 (= (getValueByKey!156 lt!52561 (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442)))))

(assert (=> d!28037 true))

(declare-fun _$22!427 () Unit!3132)

(assert (=> d!28037 (= (choose!648 lt!52561 (_1!1188 lt!52442) (_2!1188 lt!52442)) _$22!427)))

(declare-fun bs!4269 () Bool)

(assert (= bs!4269 d!28037))

(assert (=> bs!4269 m!114141))

(assert (=> d!27933 d!28037))

(declare-fun d!28039 () Bool)

(declare-fun res!51896 () Bool)

(declare-fun e!67741 () Bool)

(assert (=> d!28039 (=> res!51896 e!67741)))

(assert (=> d!28039 (= res!51896 (or ((_ is Nil!1589) lt!52561) ((_ is Nil!1589) (t!5646 lt!52561))))))

(assert (=> d!28039 (= (isStrictlySorted!295 lt!52561) e!67741)))

(declare-fun b!104027 () Bool)

(declare-fun e!67742 () Bool)

(assert (=> b!104027 (= e!67741 e!67742)))

(declare-fun res!51897 () Bool)

(assert (=> b!104027 (=> (not res!51897) (not e!67742))))

(assert (=> b!104027 (= res!51897 (bvslt (_1!1188 (h!2184 lt!52561)) (_1!1188 (h!2184 (t!5646 lt!52561)))))))

(declare-fun b!104028 () Bool)

(assert (=> b!104028 (= e!67742 (isStrictlySorted!295 (t!5646 lt!52561)))))

(assert (= (and d!28039 (not res!51896)) b!104027))

(assert (= (and b!104027 res!51897) b!104028))

(declare-fun m!115211 () Bool)

(assert (=> b!104028 m!115211))

(assert (=> d!27933 d!28039))

(declare-fun d!28041 () Bool)

(assert (=> d!28041 (= (isEmpty!374 (toList!779 lt!52553)) ((_ is Nil!1589) (toList!779 lt!52553)))))

(assert (=> d!27831 d!28041))

(declare-fun d!28043 () Bool)

(assert (=> d!28043 (= ($colon$colon!79 e!67563 (ite c!17879 (h!2184 (toList!779 (+!137 lt!52441 lt!52442))) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444)))) (Cons!1588 (ite c!17879 (h!2184 (toList!779 (+!137 lt!52441 lt!52442))) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))) e!67563))))

(assert (=> bm!10876 d!28043))

(declare-fun lt!53115 () Bool)

(declare-fun d!28045 () Bool)

(assert (=> d!28045 (= lt!53115 (select (content!108 (toList!779 lt!52835)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun e!67743 () Bool)

(assert (=> d!28045 (= lt!53115 e!67743)))

(declare-fun res!51898 () Bool)

(assert (=> d!28045 (=> (not res!51898) (not e!67743))))

(assert (=> d!28045 (= res!51898 ((_ is Cons!1588) (toList!779 lt!52835)))))

(assert (=> d!28045 (= (contains!812 (toList!779 lt!52835) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!53115)))

(declare-fun b!104029 () Bool)

(declare-fun e!67744 () Bool)

(assert (=> b!104029 (= e!67743 e!67744)))

(declare-fun res!51899 () Bool)

(assert (=> b!104029 (=> res!51899 e!67744)))

(assert (=> b!104029 (= res!51899 (= (h!2184 (toList!779 lt!52835)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun b!104030 () Bool)

(assert (=> b!104030 (= e!67744 (contains!812 (t!5646 (toList!779 lt!52835)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!28045 res!51898) b!104029))

(assert (= (and b!104029 (not res!51899)) b!104030))

(declare-fun m!115213 () Bool)

(assert (=> d!28045 m!115213))

(declare-fun m!115215 () Bool)

(assert (=> d!28045 m!115215))

(declare-fun m!115217 () Bool)

(assert (=> b!104030 m!115217))

(assert (=> b!103689 d!28045))

(declare-fun lt!53116 () Bool)

(declare-fun d!28047 () Bool)

(assert (=> d!28047 (= lt!53116 (select (content!108 (toList!779 lt!52854)) (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67745 () Bool)

(assert (=> d!28047 (= lt!53116 e!67745)))

(declare-fun res!51900 () Bool)

(assert (=> d!28047 (=> (not res!51900) (not e!67745))))

(assert (=> d!28047 (= res!51900 ((_ is Cons!1588) (toList!779 lt!52854)))))

(assert (=> d!28047 (= (contains!812 (toList!779 lt!52854) (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53116)))

(declare-fun b!104031 () Bool)

(declare-fun e!67746 () Bool)

(assert (=> b!104031 (= e!67745 e!67746)))

(declare-fun res!51901 () Bool)

(assert (=> b!104031 (=> res!51901 e!67746)))

(assert (=> b!104031 (= res!51901 (= (h!2184 (toList!779 lt!52854)) (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104032 () Bool)

(assert (=> b!104032 (= e!67746 (contains!812 (t!5646 (toList!779 lt!52854)) (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28047 res!51900) b!104031))

(assert (= (and b!104031 (not res!51901)) b!104032))

(declare-fun m!115219 () Bool)

(assert (=> d!28047 m!115219))

(declare-fun m!115221 () Bool)

(assert (=> d!28047 m!115221))

(declare-fun m!115223 () Bool)

(assert (=> b!104032 m!115223))

(assert (=> b!103708 d!28047))

(declare-fun b!104033 () Bool)

(declare-fun e!67750 () Bool)

(declare-fun e!67748 () Bool)

(assert (=> b!104033 (= e!67750 e!67748)))

(declare-fun res!51903 () Bool)

(assert (=> b!104033 (=> (not res!51903) (not e!67748))))

(declare-fun e!67747 () Bool)

(assert (=> b!104033 (= res!51903 (not e!67747))))

(declare-fun res!51902 () Bool)

(assert (=> b!104033 (=> (not res!51902) (not e!67747))))

(assert (=> b!104033 (= res!51902 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104034 () Bool)

(declare-fun e!67749 () Bool)

(declare-fun call!10918 () Bool)

(assert (=> b!104034 (= e!67749 call!10918)))

(declare-fun b!104035 () Bool)

(assert (=> b!104035 (= e!67748 e!67749)))

(declare-fun c!17963 () Bool)

(assert (=> b!104035 (= c!17963 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104036 () Bool)

(assert (=> b!104036 (= e!67749 call!10918)))

(declare-fun d!28049 () Bool)

(declare-fun res!51904 () Bool)

(assert (=> d!28049 (=> res!51904 e!67750)))

(assert (=> d!28049 (= res!51904 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28049 (= (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17884 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590))) e!67750)))

(declare-fun b!104037 () Bool)

(assert (=> b!104037 (= e!67747 (contains!813 (ite c!17884 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun bm!10915 () Bool)

(assert (=> bm!10915 (= call!10918 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17963 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!17884 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590))) (ite c!17884 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)))))))

(assert (= (and d!28049 (not res!51904)) b!104033))

(assert (= (and b!104033 res!51902) b!104037))

(assert (= (and b!104033 res!51903) b!104035))

(assert (= (and b!104035 c!17963) b!104036))

(assert (= (and b!104035 (not c!17963)) b!104034))

(assert (= (or b!104036 b!104034) bm!10915))

(declare-fun m!115225 () Bool)

(assert (=> b!104033 m!115225))

(assert (=> b!104033 m!115225))

(declare-fun m!115227 () Bool)

(assert (=> b!104033 m!115227))

(assert (=> b!104035 m!115225))

(assert (=> b!104035 m!115225))

(assert (=> b!104035 m!115227))

(assert (=> b!104037 m!115225))

(assert (=> b!104037 m!115225))

(declare-fun m!115229 () Bool)

(assert (=> b!104037 m!115229))

(assert (=> bm!10915 m!115225))

(declare-fun m!115231 () Bool)

(assert (=> bm!10915 m!115231))

(assert (=> bm!10879 d!28049))

(declare-fun d!28051 () Bool)

(assert (=> d!28051 (= (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103554 d!28051))

(assert (=> b!103866 d!27805))

(declare-fun d!28053 () Bool)

(assert (=> d!28053 (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))

(assert (=> d!28053 true))

(declare-fun _$16!123 () Unit!3132)

(assert (=> d!28053 (= (choose!652 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (defaultEntry!2560 newMap!16)) _$16!123)))

(declare-fun bs!4270 () Bool)

(assert (= bs!4270 d!28053))

(assert (=> bs!4270 m!114797))

(assert (=> bs!4270 m!114261))

(assert (=> bs!4270 m!114797))

(assert (=> bs!4270 m!114261))

(assert (=> bs!4270 m!114799))

(assert (=> d!27923 d!28053))

(declare-fun d!28055 () Bool)

(assert (=> d!28055 (= (validMask!0 (mask!6696 newMap!16)) (and (or (= (mask!6696 newMap!16) #b00000000000000000000000000000111) (= (mask!6696 newMap!16) #b00000000000000000000000000001111) (= (mask!6696 newMap!16) #b00000000000000000000000000011111) (= (mask!6696 newMap!16) #b00000000000000000000000000111111) (= (mask!6696 newMap!16) #b00000000000000000000000001111111) (= (mask!6696 newMap!16) #b00000000000000000000000011111111) (= (mask!6696 newMap!16) #b00000000000000000000000111111111) (= (mask!6696 newMap!16) #b00000000000000000000001111111111) (= (mask!6696 newMap!16) #b00000000000000000000011111111111) (= (mask!6696 newMap!16) #b00000000000000000000111111111111) (= (mask!6696 newMap!16) #b00000000000000000001111111111111) (= (mask!6696 newMap!16) #b00000000000000000011111111111111) (= (mask!6696 newMap!16) #b00000000000000000111111111111111) (= (mask!6696 newMap!16) #b00000000000000001111111111111111) (= (mask!6696 newMap!16) #b00000000000000011111111111111111) (= (mask!6696 newMap!16) #b00000000000000111111111111111111) (= (mask!6696 newMap!16) #b00000000000001111111111111111111) (= (mask!6696 newMap!16) #b00000000000011111111111111111111) (= (mask!6696 newMap!16) #b00000000000111111111111111111111) (= (mask!6696 newMap!16) #b00000000001111111111111111111111) (= (mask!6696 newMap!16) #b00000000011111111111111111111111) (= (mask!6696 newMap!16) #b00000000111111111111111111111111) (= (mask!6696 newMap!16) #b00000001111111111111111111111111) (= (mask!6696 newMap!16) #b00000011111111111111111111111111) (= (mask!6696 newMap!16) #b00000111111111111111111111111111) (= (mask!6696 newMap!16) #b00001111111111111111111111111111) (= (mask!6696 newMap!16) #b00011111111111111111111111111111) (= (mask!6696 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6696 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!27923 d!28055))

(assert (=> d!27915 d!27917))

(assert (=> d!27915 d!27911))

(assert (=> d!27915 d!27913))

(assert (=> d!27915 d!27909))

(declare-fun d!28057 () Bool)

(declare-fun res!51905 () Bool)

(declare-fun e!67751 () Bool)

(assert (=> d!28057 (=> res!51905 e!67751)))

(assert (=> d!28057 (= res!51905 (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28057 (= (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!67751)))

(declare-fun b!104038 () Bool)

(declare-fun e!67752 () Bool)

(assert (=> b!104038 (= e!67751 e!67752)))

(declare-fun res!51906 () Bool)

(assert (=> b!104038 (=> (not res!51906) (not e!67752))))

(assert (=> b!104038 (= res!51906 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104039 () Bool)

(assert (=> b!104039 (= e!67752 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28057 (not res!51905)) b!104038))

(assert (= (and b!104038 res!51906) b!104039))

(declare-fun m!115233 () Bool)

(assert (=> d!28057 m!115233))

(assert (=> b!104039 m!113915))

(declare-fun m!115235 () Bool)

(assert (=> b!104039 m!115235))

(assert (=> b!103697 d!28057))

(declare-fun d!28059 () Bool)

(assert (=> d!28059 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53117 () Unit!3132)

(assert (=> d!28059 (= lt!53117 (choose!654 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67753 () Bool)

(assert (=> d!28059 e!67753))

(declare-fun res!51907 () Bool)

(assert (=> d!28059 (=> (not res!51907) (not e!67753))))

(assert (=> d!28059 (= res!51907 (isStrictlySorted!295 (toList!779 lt!52641)))))

(assert (=> d!28059 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53117)))

(declare-fun b!104040 () Bool)

(assert (=> b!104040 (= e!67753 (containsKey!159 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28059 res!51907) b!104040))

(assert (=> d!28059 m!114711))

(assert (=> d!28059 m!114711))

(assert (=> d!28059 m!114713))

(declare-fun m!115237 () Bool)

(assert (=> d!28059 m!115237))

(declare-fun m!115239 () Bool)

(assert (=> d!28059 m!115239))

(assert (=> b!104040 m!114707))

(assert (=> b!103735 d!28059))

(declare-fun d!28061 () Bool)

(assert (=> d!28061 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4271 () Bool)

(assert (= bs!4271 d!28061))

(assert (=> bs!4271 m!114711))

(declare-fun m!115241 () Bool)

(assert (=> bs!4271 m!115241))

(assert (=> b!103735 d!28061))

(declare-fun b!104043 () Bool)

(declare-fun e!67755 () Option!162)

(assert (=> b!104043 (= e!67755 (getValueByKey!156 (t!5646 (toList!779 lt!52641)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104042 () Bool)

(declare-fun e!67754 () Option!162)

(assert (=> b!104042 (= e!67754 e!67755)))

(declare-fun c!17965 () Bool)

(assert (=> b!104042 (= c!17965 (and ((_ is Cons!1588) (toList!779 lt!52641)) (not (= (_1!1188 (h!2184 (toList!779 lt!52641))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104041 () Bool)

(assert (=> b!104041 (= e!67754 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52641)))))))

(declare-fun d!28063 () Bool)

(declare-fun c!17964 () Bool)

(assert (=> d!28063 (= c!17964 (and ((_ is Cons!1588) (toList!779 lt!52641)) (= (_1!1188 (h!2184 (toList!779 lt!52641))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28063 (= (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000) e!67754)))

(declare-fun b!104044 () Bool)

(assert (=> b!104044 (= e!67755 None!160)))

(assert (= (and d!28063 c!17964) b!104041))

(assert (= (and d!28063 (not c!17964)) b!104042))

(assert (= (and b!104042 c!17965) b!104043))

(assert (= (and b!104042 (not c!17965)) b!104044))

(declare-fun m!115243 () Bool)

(assert (=> b!104043 m!115243))

(assert (=> b!103735 d!28063))

(declare-fun d!28065 () Bool)

(declare-fun e!67757 () Bool)

(assert (=> d!28065 e!67757))

(declare-fun res!51908 () Bool)

(assert (=> d!28065 (=> res!51908 e!67757)))

(declare-fun lt!53121 () Bool)

(assert (=> d!28065 (= res!51908 (not lt!53121))))

(declare-fun lt!53118 () Bool)

(assert (=> d!28065 (= lt!53121 lt!53118)))

(declare-fun lt!53119 () Unit!3132)

(declare-fun e!67756 () Unit!3132)

(assert (=> d!28065 (= lt!53119 e!67756)))

(declare-fun c!17966 () Bool)

(assert (=> d!28065 (= c!17966 lt!53118)))

(assert (=> d!28065 (= lt!53118 (containsKey!159 (toList!779 lt!53086) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28065 (= (contains!811 lt!53086 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53121)))

(declare-fun b!104045 () Bool)

(declare-fun lt!53120 () Unit!3132)

(assert (=> b!104045 (= e!67756 lt!53120)))

(assert (=> b!104045 (= lt!53120 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!53086) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104045 (isDefined!108 (getValueByKey!156 (toList!779 lt!53086) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104046 () Bool)

(declare-fun Unit!3169 () Unit!3132)

(assert (=> b!104046 (= e!67756 Unit!3169)))

(declare-fun b!104047 () Bool)

(assert (=> b!104047 (= e!67757 (isDefined!108 (getValueByKey!156 (toList!779 lt!53086) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28065 c!17966) b!104045))

(assert (= (and d!28065 (not c!17966)) b!104046))

(assert (= (and d!28065 (not res!51908)) b!104047))

(declare-fun m!115245 () Bool)

(assert (=> d!28065 m!115245))

(declare-fun m!115247 () Bool)

(assert (=> b!104045 m!115247))

(declare-fun m!115249 () Bool)

(assert (=> b!104045 m!115249))

(assert (=> b!104045 m!115249))

(declare-fun m!115251 () Bool)

(assert (=> b!104045 m!115251))

(assert (=> b!104047 m!115249))

(assert (=> b!104047 m!115249))

(assert (=> b!104047 m!115251))

(assert (=> bm!10907 d!28065))

(declare-fun d!28067 () Bool)

(assert (=> d!28067 (= (apply!97 (+!137 lt!52820 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!52818) (apply!97 lt!52820 lt!52818))))

(declare-fun lt!53122 () Unit!3132)

(assert (=> d!28067 (= lt!53122 (choose!650 lt!52820 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) lt!52818))))

(declare-fun e!67758 () Bool)

(assert (=> d!28067 e!67758))

(declare-fun res!51909 () Bool)

(assert (=> d!28067 (=> (not res!51909) (not e!67758))))

(assert (=> d!28067 (= res!51909 (contains!811 lt!52820 lt!52818))))

(assert (=> d!28067 (= (addApplyDifferent!73 lt!52820 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) lt!52818) lt!53122)))

(declare-fun b!104048 () Bool)

(assert (=> b!104048 (= e!67758 (not (= lt!52818 lt!52822)))))

(assert (= (and d!28067 res!51909) b!104048))

(declare-fun m!115253 () Bool)

(assert (=> d!28067 m!115253))

(assert (=> d!28067 m!114533))

(assert (=> d!28067 m!114547))

(assert (=> d!28067 m!114559))

(assert (=> d!28067 m!114547))

(declare-fun m!115255 () Bool)

(assert (=> d!28067 m!115255))

(assert (=> b!103667 d!28067))

(declare-fun d!28069 () Bool)

(assert (=> d!28069 (= (apply!97 (+!137 lt!52821 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!52823) (apply!97 lt!52821 lt!52823))))

(declare-fun lt!53123 () Unit!3132)

(assert (=> d!28069 (= lt!53123 (choose!650 lt!52821 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) lt!52823))))

(declare-fun e!67759 () Bool)

(assert (=> d!28069 e!67759))

(declare-fun res!51910 () Bool)

(assert (=> d!28069 (=> (not res!51910) (not e!67759))))

(assert (=> d!28069 (= res!51910 (contains!811 lt!52821 lt!52823))))

(assert (=> d!28069 (= (addApplyDifferent!73 lt!52821 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) lt!52823) lt!53123)))

(declare-fun b!104049 () Bool)

(assert (=> b!104049 (= e!67759 (not (= lt!52823 lt!52819)))))

(assert (= (and d!28069 res!51910) b!104049))

(declare-fun m!115257 () Bool)

(assert (=> d!28069 m!115257))

(assert (=> d!28069 m!114551))

(assert (=> d!28069 m!114535))

(assert (=> d!28069 m!114555))

(assert (=> d!28069 m!114535))

(declare-fun m!115259 () Bool)

(assert (=> d!28069 m!115259))

(assert (=> b!103667 d!28069))

(declare-fun d!28071 () Bool)

(assert (=> d!28071 (contains!811 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))) lt!52811)))

(declare-fun lt!53124 () Unit!3132)

(assert (=> d!28071 (= lt!53124 (choose!651 lt!52827 lt!52832 (zeroValue!2437 newMap!16) lt!52811))))

(assert (=> d!28071 (contains!811 lt!52827 lt!52811)))

(assert (=> d!28071 (= (addStillContains!73 lt!52827 lt!52832 (zeroValue!2437 newMap!16) lt!52811) lt!53124)))

(declare-fun bs!4272 () Bool)

(assert (= bs!4272 d!28071))

(assert (=> bs!4272 m!114537))

(assert (=> bs!4272 m!114537))

(assert (=> bs!4272 m!114553))

(declare-fun m!115261 () Bool)

(assert (=> bs!4272 m!115261))

(declare-fun m!115263 () Bool)

(assert (=> bs!4272 m!115263))

(assert (=> b!103667 d!28071))

(declare-fun d!28073 () Bool)

(declare-fun e!67760 () Bool)

(assert (=> d!28073 e!67760))

(declare-fun res!51911 () Bool)

(assert (=> d!28073 (=> (not res!51911) (not e!67760))))

(declare-fun lt!53127 () ListLongMap!1527)

(assert (=> d!28073 (= res!51911 (contains!811 lt!53127 (_1!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53126 () List!1592)

(assert (=> d!28073 (= lt!53127 (ListLongMap!1528 lt!53126))))

(declare-fun lt!53125 () Unit!3132)

(declare-fun lt!53128 () Unit!3132)

(assert (=> d!28073 (= lt!53125 lt!53128)))

(assert (=> d!28073 (= (getValueByKey!156 lt!53126 (_1!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28073 (= lt!53128 (lemmaContainsTupThenGetReturnValue!72 lt!53126 (_1!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28073 (= lt!53126 (insertStrictlySorted!75 (toList!779 lt!52827) (_1!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28073 (= (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))) lt!53127)))

(declare-fun b!104050 () Bool)

(declare-fun res!51912 () Bool)

(assert (=> b!104050 (=> (not res!51912) (not e!67760))))

(assert (=> b!104050 (= res!51912 (= (getValueByKey!156 (toList!779 lt!53127) (_1!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104051 () Bool)

(assert (=> b!104051 (= e!67760 (contains!812 (toList!779 lt!53127) (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28073 res!51911) b!104050))

(assert (= (and b!104050 res!51912) b!104051))

(declare-fun m!115265 () Bool)

(assert (=> d!28073 m!115265))

(declare-fun m!115267 () Bool)

(assert (=> d!28073 m!115267))

(declare-fun m!115269 () Bool)

(assert (=> d!28073 m!115269))

(declare-fun m!115271 () Bool)

(assert (=> d!28073 m!115271))

(declare-fun m!115273 () Bool)

(assert (=> b!104050 m!115273))

(declare-fun m!115275 () Bool)

(assert (=> b!104051 m!115275))

(assert (=> b!103667 d!28073))

(declare-fun d!28075 () Bool)

(assert (=> d!28075 (= (apply!97 (+!137 lt!52826 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))) lt!52814) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52826 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))) lt!52814)))))

(declare-fun bs!4273 () Bool)

(assert (= bs!4273 d!28075))

(declare-fun m!115277 () Bool)

(assert (=> bs!4273 m!115277))

(assert (=> bs!4273 m!115277))

(declare-fun m!115279 () Bool)

(assert (=> bs!4273 m!115279))

(assert (=> b!103667 d!28075))

(declare-fun b!104052 () Bool)

(assert (=> b!104052 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> b!104052 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731))))))

(declare-fun lt!53133 () ListLongMap!1527)

(declare-fun e!67763 () Bool)

(assert (=> b!104052 (= e!67763 (= (apply!97 lt!53133 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!28077 () Bool)

(declare-fun e!67761 () Bool)

(assert (=> d!28077 e!67761))

(declare-fun res!51916 () Bool)

(assert (=> d!28077 (=> (not res!51916) (not e!67761))))

(assert (=> d!28077 (= res!51916 (not (contains!811 lt!53133 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67764 () ListLongMap!1527)

(assert (=> d!28077 (= lt!53133 e!67764)))

(declare-fun c!17969 () Bool)

(assert (=> d!28077 (= c!17969 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28077 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28077 (= (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53133)))

(declare-fun b!104053 () Bool)

(assert (=> b!104053 (= e!67764 (ListLongMap!1528 Nil!1589))))

(declare-fun b!104054 () Bool)

(declare-fun res!51915 () Bool)

(assert (=> b!104054 (=> (not res!51915) (not e!67761))))

(assert (=> b!104054 (= res!51915 (not (contains!811 lt!53133 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104055 () Bool)

(declare-fun e!67765 () Bool)

(assert (=> b!104055 (= e!67765 (isEmpty!373 lt!53133))))

(declare-fun b!104056 () Bool)

(declare-fun lt!53131 () Unit!3132)

(declare-fun lt!53134 () Unit!3132)

(assert (=> b!104056 (= lt!53131 lt!53134)))

(declare-fun lt!53132 () (_ BitVec 64))

(declare-fun lt!53135 () ListLongMap!1527)

(declare-fun lt!53129 () (_ BitVec 64))

(declare-fun lt!53130 () V!3209)

(assert (=> b!104056 (not (contains!811 (+!137 lt!53135 (tuple2!2355 lt!53132 lt!53130)) lt!53129))))

(assert (=> b!104056 (= lt!53134 (addStillNotContains!47 lt!53135 lt!53132 lt!53130 lt!53129))))

(assert (=> b!104056 (= lt!53129 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104056 (= lt!53130 (get!1328 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104056 (= lt!53132 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10919 () ListLongMap!1527)

(assert (=> b!104056 (= lt!53135 call!10919)))

(declare-fun e!67766 () ListLongMap!1527)

(assert (=> b!104056 (= e!67766 (+!137 call!10919 (tuple2!2355 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (get!1328 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10916 () Bool)

(assert (=> bm!10916 (= call!10919 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16)))))

(declare-fun b!104057 () Bool)

(declare-fun e!67762 () Bool)

(assert (=> b!104057 (= e!67762 e!67765)))

(declare-fun c!17968 () Bool)

(assert (=> b!104057 (= c!17968 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104058 () Bool)

(assert (=> b!104058 (= e!67764 e!67766)))

(declare-fun c!17970 () Bool)

(assert (=> b!104058 (= c!17970 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104059 () Bool)

(assert (=> b!104059 (= e!67762 e!67763)))

(assert (=> b!104059 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun res!51914 () Bool)

(assert (=> b!104059 (= res!51914 (contains!811 lt!53133 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104059 (=> (not res!51914) (not e!67763))))

(declare-fun b!104060 () Bool)

(declare-fun e!67767 () Bool)

(assert (=> b!104060 (= e!67767 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104060 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104061 () Bool)

(assert (=> b!104061 (= e!67766 call!10919)))

(declare-fun b!104062 () Bool)

(assert (=> b!104062 (= e!67765 (= lt!53133 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731) (mask!6696 newMap!16) (ite c!17808 (ite c!17811 (extraKeys!2369 newMap!16) lt!52712) (extraKeys!2369 newMap!16)) (zeroValue!2437 newMap!16) (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16))))))

(declare-fun b!104063 () Bool)

(assert (=> b!104063 (= e!67761 e!67762)))

(declare-fun c!17967 () Bool)

(assert (=> b!104063 (= c!17967 e!67767)))

(declare-fun res!51913 () Bool)

(assert (=> b!104063 (=> (not res!51913) (not e!67767))))

(assert (=> b!104063 (= res!51913 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (= (and d!28077 c!17969) b!104053))

(assert (= (and d!28077 (not c!17969)) b!104058))

(assert (= (and b!104058 c!17970) b!104056))

(assert (= (and b!104058 (not c!17970)) b!104061))

(assert (= (or b!104056 b!104061) bm!10916))

(assert (= (and d!28077 res!51916) b!104054))

(assert (= (and b!104054 res!51915) b!104063))

(assert (= (and b!104063 res!51913) b!104060))

(assert (= (and b!104063 c!17967) b!104059))

(assert (= (and b!104063 (not c!17967)) b!104057))

(assert (= (and b!104059 res!51914) b!104052))

(assert (= (and b!104057 c!17968) b!104062))

(assert (= (and b!104057 (not c!17968)) b!104055))

(declare-fun b_lambda!4653 () Bool)

(assert (=> (not b_lambda!4653) (not b!104052)))

(assert (=> b!104052 t!5659))

(declare-fun b_and!6429 () Bool)

(assert (= b_and!6425 (and (=> t!5659 result!3431) b_and!6429)))

(assert (=> b!104052 t!5661))

(declare-fun b_and!6431 () Bool)

(assert (= b_and!6427 (and (=> t!5661 result!3433) b_and!6431)))

(declare-fun b_lambda!4655 () Bool)

(assert (=> (not b_lambda!4655) (not b!104056)))

(assert (=> b!104056 t!5659))

(declare-fun b_and!6433 () Bool)

(assert (= b_and!6429 (and (=> t!5659 result!3431) b_and!6433)))

(assert (=> b!104056 t!5661))

(declare-fun b_and!6435 () Bool)

(assert (= b_and!6431 (and (=> t!5661 result!3433) b_and!6435)))

(declare-fun m!115281 () Bool)

(assert (=> d!28077 m!115281))

(assert (=> d!28077 m!114321))

(declare-fun m!115283 () Bool)

(assert (=> b!104055 m!115283))

(assert (=> b!104058 m!114381))

(assert (=> b!104058 m!114381))

(assert (=> b!104058 m!114383))

(assert (=> b!104059 m!114381))

(assert (=> b!104059 m!114381))

(declare-fun m!115285 () Bool)

(assert (=> b!104059 m!115285))

(assert (=> b!104060 m!114381))

(assert (=> b!104060 m!114381))

(assert (=> b!104060 m!114383))

(assert (=> b!104052 m!114381))

(declare-fun m!115287 () Bool)

(assert (=> b!104052 m!115287))

(assert (=> b!104052 m!114521))

(assert (=> b!104052 m!114381))

(assert (=> b!104052 m!114389))

(assert (=> b!104052 m!114521))

(assert (=> b!104052 m!114389))

(assert (=> b!104052 m!114523))

(declare-fun m!115289 () Bool)

(assert (=> b!104056 m!115289))

(assert (=> b!104056 m!115289))

(declare-fun m!115291 () Bool)

(assert (=> b!104056 m!115291))

(assert (=> b!104056 m!114521))

(assert (=> b!104056 m!114381))

(assert (=> b!104056 m!114389))

(declare-fun m!115293 () Bool)

(assert (=> b!104056 m!115293))

(assert (=> b!104056 m!114521))

(assert (=> b!104056 m!114389))

(assert (=> b!104056 m!114523))

(declare-fun m!115295 () Bool)

(assert (=> b!104056 m!115295))

(declare-fun m!115297 () Bool)

(assert (=> b!104062 m!115297))

(declare-fun m!115299 () Bool)

(assert (=> b!104054 m!115299))

(assert (=> bm!10916 m!115297))

(assert (=> b!103667 d!28077))

(declare-fun d!28079 () Bool)

(declare-fun e!67769 () Bool)

(assert (=> d!28079 e!67769))

(declare-fun res!51917 () Bool)

(assert (=> d!28079 (=> res!51917 e!67769)))

(declare-fun lt!53139 () Bool)

(assert (=> d!28079 (= res!51917 (not lt!53139))))

(declare-fun lt!53136 () Bool)

(assert (=> d!28079 (= lt!53139 lt!53136)))

(declare-fun lt!53137 () Unit!3132)

(declare-fun e!67768 () Unit!3132)

(assert (=> d!28079 (= lt!53137 e!67768)))

(declare-fun c!17971 () Bool)

(assert (=> d!28079 (= c!17971 lt!53136)))

(assert (=> d!28079 (= lt!53136 (containsKey!159 (toList!779 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))) lt!52811))))

(assert (=> d!28079 (= (contains!811 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16))) lt!52811) lt!53139)))

(declare-fun b!104064 () Bool)

(declare-fun lt!53138 () Unit!3132)

(assert (=> b!104064 (= e!67768 lt!53138)))

(assert (=> b!104064 (= lt!53138 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))) lt!52811))))

(assert (=> b!104064 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))) lt!52811))))

(declare-fun b!104065 () Bool)

(declare-fun Unit!3170 () Unit!3132)

(assert (=> b!104065 (= e!67768 Unit!3170)))

(declare-fun b!104066 () Bool)

(assert (=> b!104066 (= e!67769 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52827 (tuple2!2355 lt!52832 (zeroValue!2437 newMap!16)))) lt!52811)))))

(assert (= (and d!28079 c!17971) b!104064))

(assert (= (and d!28079 (not c!17971)) b!104065))

(assert (= (and d!28079 (not res!51917)) b!104066))

(declare-fun m!115301 () Bool)

(assert (=> d!28079 m!115301))

(declare-fun m!115303 () Bool)

(assert (=> b!104064 m!115303))

(declare-fun m!115305 () Bool)

(assert (=> b!104064 m!115305))

(assert (=> b!104064 m!115305))

(declare-fun m!115307 () Bool)

(assert (=> b!104064 m!115307))

(assert (=> b!104066 m!115305))

(assert (=> b!104066 m!115305))

(assert (=> b!104066 m!115307))

(assert (=> b!103667 d!28079))

(declare-fun d!28081 () Bool)

(declare-fun e!67770 () Bool)

(assert (=> d!28081 e!67770))

(declare-fun res!51918 () Bool)

(assert (=> d!28081 (=> (not res!51918) (not e!67770))))

(declare-fun lt!53142 () ListLongMap!1527)

(assert (=> d!28081 (= res!51918 (contains!811 lt!53142 (_1!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(declare-fun lt!53141 () List!1592)

(assert (=> d!28081 (= lt!53142 (ListLongMap!1528 lt!53141))))

(declare-fun lt!53140 () Unit!3132)

(declare-fun lt!53143 () Unit!3132)

(assert (=> d!28081 (= lt!53140 lt!53143)))

(assert (=> d!28081 (= (getValueByKey!156 lt!53141 (_1!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28081 (= lt!53143 (lemmaContainsTupThenGetReturnValue!72 lt!53141 (_1!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28081 (= lt!53141 (insertStrictlySorted!75 (toList!779 lt!52820) (_1!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28081 (= (+!137 lt!52820 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!53142)))

(declare-fun b!104067 () Bool)

(declare-fun res!51919 () Bool)

(assert (=> b!104067 (=> (not res!51919) (not e!67770))))

(assert (=> b!104067 (= res!51919 (= (getValueByKey!156 (toList!779 lt!53142) (_1!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(declare-fun b!104068 () Bool)

(assert (=> b!104068 (= e!67770 (contains!812 (toList!779 lt!53142) (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))

(assert (= (and d!28081 res!51918) b!104067))

(assert (= (and b!104067 res!51919) b!104068))

(declare-fun m!115309 () Bool)

(assert (=> d!28081 m!115309))

(declare-fun m!115311 () Bool)

(assert (=> d!28081 m!115311))

(declare-fun m!115313 () Bool)

(assert (=> d!28081 m!115313))

(declare-fun m!115315 () Bool)

(assert (=> d!28081 m!115315))

(declare-fun m!115317 () Bool)

(assert (=> b!104067 m!115317))

(declare-fun m!115319 () Bool)

(assert (=> b!104068 m!115319))

(assert (=> b!103667 d!28081))

(declare-fun d!28083 () Bool)

(declare-fun e!67771 () Bool)

(assert (=> d!28083 e!67771))

(declare-fun res!51920 () Bool)

(assert (=> d!28083 (=> (not res!51920) (not e!67771))))

(declare-fun lt!53146 () ListLongMap!1527)

(assert (=> d!28083 (= res!51920 (contains!811 lt!53146 (_1!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(declare-fun lt!53145 () List!1592)

(assert (=> d!28083 (= lt!53146 (ListLongMap!1528 lt!53145))))

(declare-fun lt!53144 () Unit!3132)

(declare-fun lt!53147 () Unit!3132)

(assert (=> d!28083 (= lt!53144 lt!53147)))

(assert (=> d!28083 (= (getValueByKey!156 lt!53145 (_1!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28083 (= lt!53147 (lemmaContainsTupThenGetReturnValue!72 lt!53145 (_1!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28083 (= lt!53145 (insertStrictlySorted!75 (toList!779 lt!52821) (_1!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28083 (= (+!137 lt!52821 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!53146)))

(declare-fun b!104069 () Bool)

(declare-fun res!51921 () Bool)

(assert (=> b!104069 (=> (not res!51921) (not e!67771))))

(assert (=> b!104069 (= res!51921 (= (getValueByKey!156 (toList!779 lt!53146) (_1!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(declare-fun b!104070 () Bool)

(assert (=> b!104070 (= e!67771 (contains!812 (toList!779 lt!53146) (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))

(assert (= (and d!28083 res!51920) b!104069))

(assert (= (and b!104069 res!51921) b!104070))

(declare-fun m!115321 () Bool)

(assert (=> d!28083 m!115321))

(declare-fun m!115323 () Bool)

(assert (=> d!28083 m!115323))

(declare-fun m!115325 () Bool)

(assert (=> d!28083 m!115325))

(declare-fun m!115327 () Bool)

(assert (=> d!28083 m!115327))

(declare-fun m!115329 () Bool)

(assert (=> b!104069 m!115329))

(declare-fun m!115331 () Bool)

(assert (=> b!104070 m!115331))

(assert (=> b!103667 d!28083))

(declare-fun d!28085 () Bool)

(assert (=> d!28085 (= (apply!97 (+!137 lt!52820 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!52818) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52820 (tuple2!2355 lt!52822 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) lt!52818)))))

(declare-fun bs!4274 () Bool)

(assert (= bs!4274 d!28085))

(declare-fun m!115333 () Bool)

(assert (=> bs!4274 m!115333))

(assert (=> bs!4274 m!115333))

(declare-fun m!115335 () Bool)

(assert (=> bs!4274 m!115335))

(assert (=> b!103667 d!28085))

(declare-fun d!28087 () Bool)

(declare-fun e!67772 () Bool)

(assert (=> d!28087 e!67772))

(declare-fun res!51922 () Bool)

(assert (=> d!28087 (=> (not res!51922) (not e!67772))))

(declare-fun lt!53150 () ListLongMap!1527)

(assert (=> d!28087 (= res!51922 (contains!811 lt!53150 (_1!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53149 () List!1592)

(assert (=> d!28087 (= lt!53150 (ListLongMap!1528 lt!53149))))

(declare-fun lt!53148 () Unit!3132)

(declare-fun lt!53151 () Unit!3132)

(assert (=> d!28087 (= lt!53148 lt!53151)))

(assert (=> d!28087 (= (getValueByKey!156 lt!53149 (_1!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28087 (= lt!53151 (lemmaContainsTupThenGetReturnValue!72 lt!53149 (_1!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28087 (= lt!53149 (insertStrictlySorted!75 (toList!779 lt!52826) (_1!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28087 (= (+!137 lt!52826 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))) lt!53150)))

(declare-fun b!104071 () Bool)

(declare-fun res!51923 () Bool)

(assert (=> b!104071 (=> (not res!51923) (not e!67772))))

(assert (=> b!104071 (= res!51923 (= (getValueByKey!156 (toList!779 lt!53150) (_1!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104072 () Bool)

(assert (=> b!104072 (= e!67772 (contains!812 (toList!779 lt!53150) (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28087 res!51922) b!104071))

(assert (= (and b!104071 res!51923) b!104072))

(declare-fun m!115337 () Bool)

(assert (=> d!28087 m!115337))

(declare-fun m!115339 () Bool)

(assert (=> d!28087 m!115339))

(declare-fun m!115341 () Bool)

(assert (=> d!28087 m!115341))

(declare-fun m!115343 () Bool)

(assert (=> d!28087 m!115343))

(declare-fun m!115345 () Bool)

(assert (=> b!104071 m!115345))

(declare-fun m!115347 () Bool)

(assert (=> b!104072 m!115347))

(assert (=> b!103667 d!28087))

(declare-fun d!28089 () Bool)

(assert (=> d!28089 (= (apply!97 (+!137 lt!52826 (tuple2!2355 lt!52824 (zeroValue!2437 newMap!16))) lt!52814) (apply!97 lt!52826 lt!52814))))

(declare-fun lt!53152 () Unit!3132)

(assert (=> d!28089 (= lt!53152 (choose!650 lt!52826 lt!52824 (zeroValue!2437 newMap!16) lt!52814))))

(declare-fun e!67773 () Bool)

(assert (=> d!28089 e!67773))

(declare-fun res!51924 () Bool)

(assert (=> d!28089 (=> (not res!51924) (not e!67773))))

(assert (=> d!28089 (= res!51924 (contains!811 lt!52826 lt!52814))))

(assert (=> d!28089 (= (addApplyDifferent!73 lt!52826 lt!52824 (zeroValue!2437 newMap!16) lt!52814) lt!53152)))

(declare-fun b!104073 () Bool)

(assert (=> b!104073 (= e!67773 (not (= lt!52814 lt!52824)))))

(assert (= (and d!28089 res!51924) b!104073))

(declare-fun m!115349 () Bool)

(assert (=> d!28089 m!115349))

(assert (=> d!28089 m!114549))

(assert (=> d!28089 m!114543))

(assert (=> d!28089 m!114545))

(assert (=> d!28089 m!114543))

(declare-fun m!115351 () Bool)

(assert (=> d!28089 m!115351))

(assert (=> b!103667 d!28089))

(declare-fun d!28091 () Bool)

(assert (=> d!28091 (= (apply!97 lt!52820 lt!52818) (get!1331 (getValueByKey!156 (toList!779 lt!52820) lt!52818)))))

(declare-fun bs!4275 () Bool)

(assert (= bs!4275 d!28091))

(declare-fun m!115353 () Bool)

(assert (=> bs!4275 m!115353))

(assert (=> bs!4275 m!115353))

(declare-fun m!115355 () Bool)

(assert (=> bs!4275 m!115355))

(assert (=> b!103667 d!28091))

(declare-fun d!28093 () Bool)

(assert (=> d!28093 (= (apply!97 lt!52826 lt!52814) (get!1331 (getValueByKey!156 (toList!779 lt!52826) lt!52814)))))

(declare-fun bs!4276 () Bool)

(assert (= bs!4276 d!28093))

(declare-fun m!115357 () Bool)

(assert (=> bs!4276 m!115357))

(assert (=> bs!4276 m!115357))

(declare-fun m!115359 () Bool)

(assert (=> bs!4276 m!115359))

(assert (=> b!103667 d!28093))

(declare-fun d!28095 () Bool)

(assert (=> d!28095 (= (apply!97 lt!52821 lt!52823) (get!1331 (getValueByKey!156 (toList!779 lt!52821) lt!52823)))))

(declare-fun bs!4277 () Bool)

(assert (= bs!4277 d!28095))

(declare-fun m!115361 () Bool)

(assert (=> bs!4277 m!115361))

(assert (=> bs!4277 m!115361))

(declare-fun m!115363 () Bool)

(assert (=> bs!4277 m!115363))

(assert (=> b!103667 d!28095))

(declare-fun d!28097 () Bool)

(assert (=> d!28097 (= (apply!97 (+!137 lt!52821 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!52823) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52821 (tuple2!2355 lt!52819 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) lt!52823)))))

(declare-fun bs!4278 () Bool)

(assert (= bs!4278 d!28097))

(declare-fun m!115365 () Bool)

(assert (=> bs!4278 m!115365))

(assert (=> bs!4278 m!115365))

(declare-fun m!115367 () Bool)

(assert (=> bs!4278 m!115367))

(assert (=> b!103667 d!28097))

(assert (=> d!27899 d!27897))

(declare-fun d!28099 () Bool)

(assert (=> d!28099 (= (getValueByKey!156 lt!52568 (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444)))))

(assert (=> d!28099 true))

(declare-fun _$22!428 () Unit!3132)

(assert (=> d!28099 (= (choose!648 lt!52568 (_1!1188 lt!52444) (_2!1188 lt!52444)) _$22!428)))

(declare-fun bs!4279 () Bool)

(assert (= bs!4279 d!28099))

(assert (=> bs!4279 m!114163))

(assert (=> d!27899 d!28099))

(declare-fun d!28101 () Bool)

(declare-fun res!51925 () Bool)

(declare-fun e!67774 () Bool)

(assert (=> d!28101 (=> res!51925 e!67774)))

(assert (=> d!28101 (= res!51925 (or ((_ is Nil!1589) lt!52568) ((_ is Nil!1589) (t!5646 lt!52568))))))

(assert (=> d!28101 (= (isStrictlySorted!295 lt!52568) e!67774)))

(declare-fun b!104074 () Bool)

(declare-fun e!67775 () Bool)

(assert (=> b!104074 (= e!67774 e!67775)))

(declare-fun res!51926 () Bool)

(assert (=> b!104074 (=> (not res!51926) (not e!67775))))

(assert (=> b!104074 (= res!51926 (bvslt (_1!1188 (h!2184 lt!52568)) (_1!1188 (h!2184 (t!5646 lt!52568)))))))

(declare-fun b!104075 () Bool)

(assert (=> b!104075 (= e!67775 (isStrictlySorted!295 (t!5646 lt!52568)))))

(assert (= (and d!28101 (not res!51925)) b!104074))

(assert (= (and b!104074 res!51926) b!104075))

(declare-fun m!115369 () Bool)

(assert (=> b!104075 m!115369))

(assert (=> d!27899 d!28101))

(declare-fun d!28103 () Bool)

(declare-fun e!67777 () Bool)

(assert (=> d!28103 e!67777))

(declare-fun res!51927 () Bool)

(assert (=> d!28103 (=> res!51927 e!67777)))

(declare-fun lt!53156 () Bool)

(assert (=> d!28103 (= res!51927 (not lt!53156))))

(declare-fun lt!53153 () Bool)

(assert (=> d!28103 (= lt!53156 lt!53153)))

(declare-fun lt!53154 () Unit!3132)

(declare-fun e!67776 () Unit!3132)

(assert (=> d!28103 (= lt!53154 e!67776)))

(declare-fun c!17972 () Bool)

(assert (=> d!28103 (= c!17972 lt!53153)))

(assert (=> d!28103 (= lt!53153 (containsKey!159 (toList!779 lt!52883) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28103 (= (contains!811 lt!52883 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53156)))

(declare-fun b!104076 () Bool)

(declare-fun lt!53155 () Unit!3132)

(assert (=> b!104076 (= e!67776 lt!53155)))

(assert (=> b!104076 (= lt!53155 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52883) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104076 (isDefined!108 (getValueByKey!156 (toList!779 lt!52883) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104077 () Bool)

(declare-fun Unit!3171 () Unit!3132)

(assert (=> b!104077 (= e!67776 Unit!3171)))

(declare-fun b!104078 () Bool)

(assert (=> b!104078 (= e!67777 (isDefined!108 (getValueByKey!156 (toList!779 lt!52883) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28103 c!17972) b!104076))

(assert (= (and d!28103 (not c!17972)) b!104077))

(assert (= (and d!28103 (not res!51927)) b!104078))

(declare-fun m!115371 () Bool)

(assert (=> d!28103 m!115371))

(declare-fun m!115373 () Bool)

(assert (=> b!104076 m!115373))

(assert (=> b!104076 m!114733))

(assert (=> b!104076 m!114733))

(declare-fun m!115375 () Bool)

(assert (=> b!104076 m!115375))

(assert (=> b!104078 m!114733))

(assert (=> b!104078 m!114733))

(assert (=> b!104078 m!115375))

(assert (=> d!27909 d!28103))

(declare-fun b!104081 () Bool)

(declare-fun e!67779 () Option!162)

(assert (=> b!104081 (= e!67779 (getValueByKey!156 (t!5646 lt!52882) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104080 () Bool)

(declare-fun e!67778 () Option!162)

(assert (=> b!104080 (= e!67778 e!67779)))

(declare-fun c!17974 () Bool)

(assert (=> b!104080 (= c!17974 (and ((_ is Cons!1588) lt!52882) (not (= (_1!1188 (h!2184 lt!52882)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104079 () Bool)

(assert (=> b!104079 (= e!67778 (Some!161 (_2!1188 (h!2184 lt!52882))))))

(declare-fun d!28105 () Bool)

(declare-fun c!17973 () Bool)

(assert (=> d!28105 (= c!17973 (and ((_ is Cons!1588) lt!52882) (= (_1!1188 (h!2184 lt!52882)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28105 (= (getValueByKey!156 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67778)))

(declare-fun b!104082 () Bool)

(assert (=> b!104082 (= e!67779 None!160)))

(assert (= (and d!28105 c!17973) b!104079))

(assert (= (and d!28105 (not c!17973)) b!104080))

(assert (= (and b!104080 c!17974) b!104081))

(assert (= (and b!104080 (not c!17974)) b!104082))

(declare-fun m!115377 () Bool)

(assert (=> b!104081 m!115377))

(assert (=> d!27909 d!28105))

(declare-fun d!28107 () Bool)

(assert (=> d!28107 (= (getValueByKey!156 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53157 () Unit!3132)

(assert (=> d!28107 (= lt!53157 (choose!648 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!67780 () Bool)

(assert (=> d!28107 e!67780))

(declare-fun res!51928 () Bool)

(assert (=> d!28107 (=> (not res!51928) (not e!67780))))

(assert (=> d!28107 (= res!51928 (isStrictlySorted!295 lt!52882))))

(assert (=> d!28107 (= (lemmaContainsTupThenGetReturnValue!72 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53157)))

(declare-fun b!104083 () Bool)

(declare-fun res!51929 () Bool)

(assert (=> b!104083 (=> (not res!51929) (not e!67780))))

(assert (=> b!104083 (= res!51929 (containsKey!159 lt!52882 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104084 () Bool)

(assert (=> b!104084 (= e!67780 (contains!812 lt!52882 (tuple2!2355 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28107 res!51928) b!104083))

(assert (= (and b!104083 res!51929) b!104084))

(assert (=> d!28107 m!114727))

(declare-fun m!115379 () Bool)

(assert (=> d!28107 m!115379))

(declare-fun m!115381 () Bool)

(assert (=> d!28107 m!115381))

(declare-fun m!115383 () Bool)

(assert (=> b!104083 m!115383))

(declare-fun m!115385 () Bool)

(assert (=> b!104084 m!115385))

(assert (=> d!27909 d!28107))

(declare-fun b!104085 () Bool)

(declare-fun e!67781 () List!1592)

(declare-fun call!10921 () List!1592)

(assert (=> b!104085 (= e!67781 call!10921)))

(declare-fun b!104086 () Bool)

(declare-fun e!67784 () List!1592)

(assert (=> b!104086 (= e!67784 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52441)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104087 () Bool)

(declare-fun e!67782 () List!1592)

(declare-fun call!10922 () List!1592)

(assert (=> b!104087 (= e!67782 call!10922)))

(declare-fun d!28109 () Bool)

(declare-fun e!67783 () Bool)

(assert (=> d!28109 e!67783))

(declare-fun res!51931 () Bool)

(assert (=> d!28109 (=> (not res!51931) (not e!67783))))

(declare-fun lt!53158 () List!1592)

(assert (=> d!28109 (= res!51931 (isStrictlySorted!295 lt!53158))))

(declare-fun e!67785 () List!1592)

(assert (=> d!28109 (= lt!53158 e!67785)))

(declare-fun c!17975 () Bool)

(assert (=> d!28109 (= c!17975 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28109 (isStrictlySorted!295 (toList!779 lt!52441))))

(assert (=> d!28109 (= (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53158)))

(declare-fun bm!10917 () Bool)

(declare-fun call!10920 () List!1592)

(assert (=> bm!10917 (= call!10920 ($colon$colon!79 e!67784 (ite c!17975 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!17977 () Bool)

(assert (=> bm!10917 (= c!17977 c!17975)))

(declare-fun c!17976 () Bool)

(declare-fun c!17978 () Bool)

(declare-fun b!104088 () Bool)

(assert (=> b!104088 (= e!67784 (ite c!17978 (t!5646 (toList!779 lt!52441)) (ite c!17976 (Cons!1588 (h!2184 (toList!779 lt!52441)) (t!5646 (toList!779 lt!52441))) Nil!1589)))))

(declare-fun b!104089 () Bool)

(assert (=> b!104089 (= c!17976 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104089 (= e!67782 e!67781)))

(declare-fun bm!10918 () Bool)

(assert (=> bm!10918 (= call!10921 call!10922)))

(declare-fun b!104090 () Bool)

(assert (=> b!104090 (= e!67781 call!10921)))

(declare-fun bm!10919 () Bool)

(assert (=> bm!10919 (= call!10922 call!10920)))

(declare-fun b!104091 () Bool)

(assert (=> b!104091 (= e!67783 (contains!812 lt!53158 (tuple2!2355 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104092 () Bool)

(declare-fun res!51930 () Bool)

(assert (=> b!104092 (=> (not res!51930) (not e!67783))))

(assert (=> b!104092 (= res!51930 (containsKey!159 lt!53158 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104093 () Bool)

(assert (=> b!104093 (= e!67785 e!67782)))

(assert (=> b!104093 (= c!17978 (and ((_ is Cons!1588) (toList!779 lt!52441)) (= (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104094 () Bool)

(assert (=> b!104094 (= e!67785 call!10920)))

(assert (= (and d!28109 c!17975) b!104094))

(assert (= (and d!28109 (not c!17975)) b!104093))

(assert (= (and b!104093 c!17978) b!104087))

(assert (= (and b!104093 (not c!17978)) b!104089))

(assert (= (and b!104089 c!17976) b!104090))

(assert (= (and b!104089 (not c!17976)) b!104085))

(assert (= (or b!104090 b!104085) bm!10918))

(assert (= (or b!104087 bm!10918) bm!10919))

(assert (= (or b!104094 bm!10919) bm!10917))

(assert (= (and bm!10917 c!17977) b!104086))

(assert (= (and bm!10917 (not c!17977)) b!104088))

(assert (= (and d!28109 res!51931) b!104092))

(assert (= (and b!104092 res!51930) b!104091))

(declare-fun m!115387 () Bool)

(assert (=> d!28109 m!115387))

(assert (=> d!28109 m!114825))

(declare-fun m!115389 () Bool)

(assert (=> b!104091 m!115389))

(declare-fun m!115391 () Bool)

(assert (=> b!104092 m!115391))

(declare-fun m!115393 () Bool)

(assert (=> b!104086 m!115393))

(declare-fun m!115395 () Bool)

(assert (=> bm!10917 m!115395))

(assert (=> d!27909 d!28109))

(declare-fun d!28111 () Bool)

(assert (=> d!28111 (isDefined!108 (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442)))))

(declare-fun lt!53159 () Unit!3132)

(assert (=> d!28111 (= lt!53159 (choose!654 (toList!779 lt!52533) (_1!1188 lt!52442)))))

(declare-fun e!67786 () Bool)

(assert (=> d!28111 e!67786))

(declare-fun res!51932 () Bool)

(assert (=> d!28111 (=> (not res!51932) (not e!67786))))

(assert (=> d!28111 (= res!51932 (isStrictlySorted!295 (toList!779 lt!52533)))))

(assert (=> d!28111 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52533) (_1!1188 lt!52442)) lt!53159)))

(declare-fun b!104095 () Bool)

(assert (=> b!104095 (= e!67786 (containsKey!159 (toList!779 lt!52533) (_1!1188 lt!52442)))))

(assert (= (and d!28111 res!51932) b!104095))

(assert (=> d!28111 m!114095))

(assert (=> d!28111 m!114095))

(assert (=> d!28111 m!114487))

(declare-fun m!115397 () Bool)

(assert (=> d!28111 m!115397))

(declare-fun m!115399 () Bool)

(assert (=> d!28111 m!115399))

(assert (=> b!104095 m!114483))

(assert (=> b!103624 d!28111))

(declare-fun d!28113 () Bool)

(assert (=> d!28113 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52533) (_1!1188 lt!52442)))))))

(declare-fun bs!4280 () Bool)

(assert (= bs!4280 d!28113))

(assert (=> bs!4280 m!114095))

(declare-fun m!115401 () Bool)

(assert (=> bs!4280 m!115401))

(assert (=> b!103624 d!28113))

(assert (=> b!103624 d!27963))

(declare-fun d!28115 () Bool)

(declare-fun res!51933 () Bool)

(declare-fun e!67787 () Bool)

(assert (=> d!28115 (=> res!51933 e!67787)))

(assert (=> d!28115 (= res!51933 (and ((_ is Cons!1588) lt!52876) (= (_1!1188 (h!2184 lt!52876)) (_1!1188 lt!52444))))))

(assert (=> d!28115 (= (containsKey!159 lt!52876 (_1!1188 lt!52444)) e!67787)))

(declare-fun b!104096 () Bool)

(declare-fun e!67788 () Bool)

(assert (=> b!104096 (= e!67787 e!67788)))

(declare-fun res!51934 () Bool)

(assert (=> b!104096 (=> (not res!51934) (not e!67788))))

(assert (=> b!104096 (= res!51934 (and (or (not ((_ is Cons!1588) lt!52876)) (bvsle (_1!1188 (h!2184 lt!52876)) (_1!1188 lt!52444))) ((_ is Cons!1588) lt!52876) (bvslt (_1!1188 (h!2184 lt!52876)) (_1!1188 lt!52444))))))

(declare-fun b!104097 () Bool)

(assert (=> b!104097 (= e!67788 (containsKey!159 (t!5646 lt!52876) (_1!1188 lt!52444)))))

(assert (= (and d!28115 (not res!51933)) b!104096))

(assert (= (and b!104096 res!51934) b!104097))

(declare-fun m!115403 () Bool)

(assert (=> b!104097 m!115403))

(assert (=> b!103732 d!28115))

(declare-fun b!104098 () Bool)

(assert (=> b!104098 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!104098 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67791 () Bool)

(declare-fun lt!53164 () ListLongMap!1527)

(assert (=> b!104098 (= e!67791 (= (apply!97 lt!53164 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!28117 () Bool)

(declare-fun e!67789 () Bool)

(assert (=> d!28117 e!67789))

(declare-fun res!51938 () Bool)

(assert (=> d!28117 (=> (not res!51938) (not e!67789))))

(assert (=> d!28117 (= res!51938 (not (contains!811 lt!53164 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67792 () ListLongMap!1527)

(assert (=> d!28117 (= lt!53164 e!67792)))

(declare-fun c!17981 () Bool)

(assert (=> d!28117 (= c!17981 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28117 (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!28117 (= (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))) lt!53164)))

(declare-fun b!104099 () Bool)

(assert (=> b!104099 (= e!67792 (ListLongMap!1528 Nil!1589))))

(declare-fun b!104100 () Bool)

(declare-fun res!51937 () Bool)

(assert (=> b!104100 (=> (not res!51937) (not e!67789))))

(assert (=> b!104100 (= res!51937 (not (contains!811 lt!53164 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104101 () Bool)

(declare-fun e!67793 () Bool)

(assert (=> b!104101 (= e!67793 (isEmpty!373 lt!53164))))

(declare-fun b!104102 () Bool)

(declare-fun lt!53162 () Unit!3132)

(declare-fun lt!53165 () Unit!3132)

(assert (=> b!104102 (= lt!53162 lt!53165)))

(declare-fun lt!53161 () V!3209)

(declare-fun lt!53160 () (_ BitVec 64))

(declare-fun lt!53163 () (_ BitVec 64))

(declare-fun lt!53166 () ListLongMap!1527)

(assert (=> b!104102 (not (contains!811 (+!137 lt!53166 (tuple2!2355 lt!53163 lt!53161)) lt!53160))))

(assert (=> b!104102 (= lt!53165 (addStillNotContains!47 lt!53166 lt!53163 lt!53161 lt!53160))))

(assert (=> b!104102 (= lt!53160 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104102 (= lt!53161 (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104102 (= lt!53163 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(declare-fun call!10923 () ListLongMap!1527)

(assert (=> b!104102 (= lt!53166 call!10923)))

(declare-fun e!67794 () ListLongMap!1527)

(assert (=> b!104102 (= e!67794 (+!137 call!10923 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10920 () Bool)

(assert (=> bm!10920 (= call!10923 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!104103 () Bool)

(declare-fun e!67790 () Bool)

(assert (=> b!104103 (= e!67790 e!67793)))

(declare-fun c!17980 () Bool)

(assert (=> b!104103 (= c!17980 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104104 () Bool)

(assert (=> b!104104 (= e!67792 e!67794)))

(declare-fun c!17982 () Bool)

(assert (=> b!104104 (= c!17982 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104105 () Bool)

(assert (=> b!104105 (= e!67790 e!67791)))

(assert (=> b!104105 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun res!51936 () Bool)

(assert (=> b!104105 (= res!51936 (contains!811 lt!53164 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104105 (=> (not res!51936) (not e!67791))))

(declare-fun b!104106 () Bool)

(declare-fun e!67795 () Bool)

(assert (=> b!104106 (= e!67795 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104106 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!104107 () Bool)

(assert (=> b!104107 (= e!67794 call!10923)))

(declare-fun b!104108 () Bool)

(assert (=> b!104108 (= e!67793 (= lt!53164 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (_values!2543 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992))) (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) (minValue!2437 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104109 () Bool)

(assert (=> b!104109 (= e!67789 e!67790)))

(declare-fun c!17979 () Bool)

(assert (=> b!104109 (= c!17979 e!67795)))

(declare-fun res!51935 () Bool)

(assert (=> b!104109 (=> (not res!51935) (not e!67795))))

(assert (=> b!104109 (= res!51935 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28117 c!17981) b!104099))

(assert (= (and d!28117 (not c!17981)) b!104104))

(assert (= (and b!104104 c!17982) b!104102))

(assert (= (and b!104104 (not c!17982)) b!104107))

(assert (= (or b!104102 b!104107) bm!10920))

(assert (= (and d!28117 res!51938) b!104100))

(assert (= (and b!104100 res!51937) b!104109))

(assert (= (and b!104109 res!51935) b!104106))

(assert (= (and b!104109 c!17979) b!104105))

(assert (= (and b!104109 (not c!17979)) b!104103))

(assert (= (and b!104105 res!51936) b!104098))

(assert (= (and b!104103 c!17980) b!104108))

(assert (= (and b!104103 (not c!17980)) b!104101))

(declare-fun b_lambda!4657 () Bool)

(assert (=> (not b_lambda!4657) (not b!104098)))

(assert (=> b!104098 t!5643))

(declare-fun b_and!6437 () Bool)

(assert (= b_and!6433 (and (=> t!5643 result!3411) b_and!6437)))

(assert (=> b!104098 t!5645))

(declare-fun b_and!6439 () Bool)

(assert (= b_and!6435 (and (=> t!5645 result!3415) b_and!6439)))

(declare-fun b_lambda!4659 () Bool)

(assert (=> (not b_lambda!4659) (not b!104102)))

(assert (=> b!104102 t!5643))

(declare-fun b_and!6441 () Bool)

(assert (= b_and!6437 (and (=> t!5643 result!3411) b_and!6441)))

(assert (=> b!104102 t!5645))

(declare-fun b_and!6443 () Bool)

(assert (= b_and!6439 (and (=> t!5645 result!3415) b_and!6443)))

(declare-fun m!115405 () Bool)

(assert (=> d!28117 m!115405))

(assert (=> d!28117 m!113953))

(declare-fun m!115407 () Bool)

(assert (=> b!104101 m!115407))

(assert (=> b!104104 m!115233))

(assert (=> b!104104 m!115233))

(declare-fun m!115409 () Bool)

(assert (=> b!104104 m!115409))

(assert (=> b!104105 m!115233))

(assert (=> b!104105 m!115233))

(declare-fun m!115411 () Bool)

(assert (=> b!104105 m!115411))

(assert (=> b!104106 m!115233))

(assert (=> b!104106 m!115233))

(assert (=> b!104106 m!115409))

(assert (=> b!104098 m!115233))

(declare-fun m!115413 () Bool)

(assert (=> b!104098 m!115413))

(declare-fun m!115415 () Bool)

(assert (=> b!104098 m!115415))

(assert (=> b!104098 m!115233))

(assert (=> b!104098 m!113945))

(assert (=> b!104098 m!115415))

(assert (=> b!104098 m!113945))

(declare-fun m!115417 () Bool)

(assert (=> b!104098 m!115417))

(declare-fun m!115419 () Bool)

(assert (=> b!104102 m!115419))

(assert (=> b!104102 m!115419))

(declare-fun m!115421 () Bool)

(assert (=> b!104102 m!115421))

(assert (=> b!104102 m!115415))

(assert (=> b!104102 m!115233))

(assert (=> b!104102 m!113945))

(declare-fun m!115423 () Bool)

(assert (=> b!104102 m!115423))

(assert (=> b!104102 m!115415))

(assert (=> b!104102 m!113945))

(assert (=> b!104102 m!115417))

(declare-fun m!115425 () Bool)

(assert (=> b!104102 m!115425))

(declare-fun m!115427 () Bool)

(assert (=> b!104108 m!115427))

(declare-fun m!115429 () Bool)

(assert (=> b!104100 m!115429))

(assert (=> bm!10920 m!115427))

(assert (=> bm!10849 d!28117))

(declare-fun d!28119 () Bool)

(assert (=> d!28119 (= (isDefined!108 (getValueByKey!156 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))) (not (isEmpty!375 (getValueByKey!156 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))))

(declare-fun bs!4281 () Bool)

(assert (= bs!4281 d!28119))

(assert (=> bs!4281 m!114791))

(declare-fun m!115431 () Bool)

(assert (=> bs!4281 m!115431))

(assert (=> b!103771 d!28119))

(declare-fun e!67797 () Option!162)

(declare-fun b!104112 () Bool)

(assert (=> b!104112 (= e!67797 (getValueByKey!156 (t!5646 (toList!779 call!10829)) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(declare-fun b!104111 () Bool)

(declare-fun e!67796 () Option!162)

(assert (=> b!104111 (= e!67796 e!67797)))

(declare-fun c!17984 () Bool)

(assert (=> b!104111 (= c!17984 (and ((_ is Cons!1588) (toList!779 call!10829)) (not (= (_1!1188 (h!2184 (toList!779 call!10829))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))))

(declare-fun b!104110 () Bool)

(assert (=> b!104110 (= e!67796 (Some!161 (_2!1188 (h!2184 (toList!779 call!10829)))))))

(declare-fun c!17983 () Bool)

(declare-fun d!28121 () Bool)

(assert (=> d!28121 (= c!17983 (and ((_ is Cons!1588) (toList!779 call!10829)) (= (_1!1188 (h!2184 (toList!779 call!10829))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))))

(assert (=> d!28121 (= (getValueByKey!156 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))) e!67796)))

(declare-fun b!104113 () Bool)

(assert (=> b!104113 (= e!67797 None!160)))

(assert (= (and d!28121 c!17983) b!104110))

(assert (= (and d!28121 (not c!17983)) b!104111))

(assert (= (and b!104111 c!17984) b!104112))

(assert (= (and b!104111 (not c!17984)) b!104113))

(assert (=> b!104112 m!114261))

(declare-fun m!115433 () Bool)

(assert (=> b!104112 m!115433))

(assert (=> b!103771 d!28121))

(declare-fun d!28123 () Bool)

(declare-fun lt!53167 () Bool)

(assert (=> d!28123 (= lt!53167 (select (content!108 lt!52921) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun e!67798 () Bool)

(assert (=> d!28123 (= lt!53167 e!67798)))

(declare-fun res!51939 () Bool)

(assert (=> d!28123 (=> (not res!51939) (not e!67798))))

(assert (=> d!28123 (= res!51939 ((_ is Cons!1588) lt!52921))))

(assert (=> d!28123 (= (contains!812 lt!52921 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))) lt!53167)))

(declare-fun b!104114 () Bool)

(declare-fun e!67799 () Bool)

(assert (=> b!104114 (= e!67798 e!67799)))

(declare-fun res!51940 () Bool)

(assert (=> b!104114 (=> res!51940 e!67799)))

(assert (=> b!104114 (= res!51940 (= (h!2184 lt!52921) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!104115 () Bool)

(assert (=> b!104115 (= e!67799 (contains!812 (t!5646 lt!52921) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(assert (= (and d!28123 res!51939) b!104114))

(assert (= (and b!104114 (not res!51940)) b!104115))

(declare-fun m!115435 () Bool)

(assert (=> d!28123 m!115435))

(declare-fun m!115437 () Bool)

(assert (=> d!28123 m!115437))

(declare-fun m!115439 () Bool)

(assert (=> b!104115 m!115439))

(assert (=> b!103793 d!28123))

(declare-fun b!104118 () Bool)

(declare-fun e!67801 () Option!162)

(assert (=> b!104118 (= e!67801 (getValueByKey!156 (t!5646 (t!5646 lt!52532)) (_1!1188 lt!52442)))))

(declare-fun b!104117 () Bool)

(declare-fun e!67800 () Option!162)

(assert (=> b!104117 (= e!67800 e!67801)))

(declare-fun c!17986 () Bool)

(assert (=> b!104117 (= c!17986 (and ((_ is Cons!1588) (t!5646 lt!52532)) (not (= (_1!1188 (h!2184 (t!5646 lt!52532))) (_1!1188 lt!52442)))))))

(declare-fun b!104116 () Bool)

(assert (=> b!104116 (= e!67800 (Some!161 (_2!1188 (h!2184 (t!5646 lt!52532)))))))

(declare-fun d!28125 () Bool)

(declare-fun c!17985 () Bool)

(assert (=> d!28125 (= c!17985 (and ((_ is Cons!1588) (t!5646 lt!52532)) (= (_1!1188 (h!2184 (t!5646 lt!52532))) (_1!1188 lt!52442))))))

(assert (=> d!28125 (= (getValueByKey!156 (t!5646 lt!52532) (_1!1188 lt!52442)) e!67800)))

(declare-fun b!104119 () Bool)

(assert (=> b!104119 (= e!67801 None!160)))

(assert (= (and d!28125 c!17985) b!104116))

(assert (= (and d!28125 (not c!17985)) b!104117))

(assert (= (and b!104117 c!17986) b!104118))

(assert (= (and b!104117 (not c!17986)) b!104119))

(declare-fun m!115441 () Bool)

(assert (=> b!104118 m!115441))

(assert (=> b!103629 d!28125))

(declare-fun d!28127 () Bool)

(declare-fun res!51941 () Bool)

(declare-fun e!67802 () Bool)

(assert (=> d!28127 (=> res!51941 e!67802)))

(assert (=> d!28127 (= res!51941 (and ((_ is Cons!1588) (toList!779 lt!52558)) (= (_1!1188 (h!2184 (toList!779 lt!52558))) (_1!1188 lt!52444))))))

(assert (=> d!28127 (= (containsKey!159 (toList!779 lt!52558) (_1!1188 lt!52444)) e!67802)))

(declare-fun b!104120 () Bool)

(declare-fun e!67803 () Bool)

(assert (=> b!104120 (= e!67802 e!67803)))

(declare-fun res!51942 () Bool)

(assert (=> b!104120 (=> (not res!51942) (not e!67803))))

(assert (=> b!104120 (= res!51942 (and (or (not ((_ is Cons!1588) (toList!779 lt!52558))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52558))) (_1!1188 lt!52444))) ((_ is Cons!1588) (toList!779 lt!52558)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52558))) (_1!1188 lt!52444))))))

(declare-fun b!104121 () Bool)

(assert (=> b!104121 (= e!67803 (containsKey!159 (t!5646 (toList!779 lt!52558)) (_1!1188 lt!52444)))))

(assert (= (and d!28127 (not res!51941)) b!104120))

(assert (= (and b!104120 res!51942) b!104121))

(declare-fun m!115443 () Bool)

(assert (=> b!104121 m!115443))

(assert (=> d!27937 d!28127))

(declare-fun d!28129 () Bool)

(declare-fun res!51943 () Bool)

(declare-fun e!67804 () Bool)

(assert (=> d!28129 (=> (not res!51943) (not e!67804))))

(assert (=> d!28129 (= res!51943 (simpleValid!73 (_2!1187 lt!53029)))))

(assert (=> d!28129 (= (valid!418 (_2!1187 lt!53029)) e!67804)))

(declare-fun b!104122 () Bool)

(declare-fun res!51944 () Bool)

(assert (=> b!104122 (=> (not res!51944) (not e!67804))))

(assert (=> b!104122 (= res!51944 (= (arrayCountValidKeys!0 (_keys!4262 (_2!1187 lt!53029)) #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!53029)))) (_size!495 (_2!1187 lt!53029))))))

(declare-fun b!104123 () Bool)

(declare-fun res!51945 () Bool)

(assert (=> b!104123 (=> (not res!51945) (not e!67804))))

(assert (=> b!104123 (= res!51945 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 (_2!1187 lt!53029)) (mask!6696 (_2!1187 lt!53029))))))

(declare-fun b!104124 () Bool)

(assert (=> b!104124 (= e!67804 (arrayNoDuplicates!0 (_keys!4262 (_2!1187 lt!53029)) #b00000000000000000000000000000000 Nil!1590))))

(assert (= (and d!28129 res!51943) b!104122))

(assert (= (and b!104122 res!51944) b!104123))

(assert (= (and b!104123 res!51945) b!104124))

(declare-fun m!115445 () Bool)

(assert (=> d!28129 m!115445))

(declare-fun m!115447 () Bool)

(assert (=> b!104122 m!115447))

(declare-fun m!115449 () Bool)

(assert (=> b!104123 m!115449))

(declare-fun m!115451 () Bool)

(assert (=> b!104124 m!115451))

(assert (=> b!103871 d!28129))

(declare-fun d!28131 () Bool)

(declare-fun res!51946 () Bool)

(declare-fun e!67805 () Bool)

(assert (=> d!28131 (=> res!51946 e!67805)))

(assert (=> d!28131 (= res!51946 (or ((_ is Nil!1589) lt!52921) ((_ is Nil!1589) (t!5646 lt!52921))))))

(assert (=> d!28131 (= (isStrictlySorted!295 lt!52921) e!67805)))

(declare-fun b!104125 () Bool)

(declare-fun e!67806 () Bool)

(assert (=> b!104125 (= e!67805 e!67806)))

(declare-fun res!51947 () Bool)

(assert (=> b!104125 (=> (not res!51947) (not e!67806))))

(assert (=> b!104125 (= res!51947 (bvslt (_1!1188 (h!2184 lt!52921)) (_1!1188 (h!2184 (t!5646 lt!52921)))))))

(declare-fun b!104126 () Bool)

(assert (=> b!104126 (= e!67806 (isStrictlySorted!295 (t!5646 lt!52921)))))

(assert (= (and d!28131 (not res!51946)) b!104125))

(assert (= (and b!104125 res!51947) b!104126))

(declare-fun m!115453 () Bool)

(assert (=> b!104126 m!115453))

(assert (=> d!27935 d!28131))

(declare-fun d!28133 () Bool)

(declare-fun res!51948 () Bool)

(declare-fun e!67807 () Bool)

(assert (=> d!28133 (=> res!51948 e!67807)))

(assert (=> d!28133 (= res!51948 (or ((_ is Nil!1589) (toList!779 lt!52441)) ((_ is Nil!1589) (t!5646 (toList!779 lt!52441)))))))

(assert (=> d!28133 (= (isStrictlySorted!295 (toList!779 lt!52441)) e!67807)))

(declare-fun b!104127 () Bool)

(declare-fun e!67808 () Bool)

(assert (=> b!104127 (= e!67807 e!67808)))

(declare-fun res!51949 () Bool)

(assert (=> b!104127 (=> (not res!51949) (not e!67808))))

(assert (=> b!104127 (= res!51949 (bvslt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441))))))))

(declare-fun b!104128 () Bool)

(assert (=> b!104128 (= e!67808 (isStrictlySorted!295 (t!5646 (toList!779 lt!52441))))))

(assert (= (and d!28133 (not res!51948)) b!104127))

(assert (= (and b!104127 res!51949) b!104128))

(declare-fun m!115455 () Bool)

(assert (=> b!104128 m!115455))

(assert (=> d!27935 d!28133))

(declare-fun b!104131 () Bool)

(declare-fun e!67810 () Option!162)

(assert (=> b!104131 (= e!67810 (getValueByKey!156 (t!5646 (toList!779 lt!52854)) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104130 () Bool)

(declare-fun e!67809 () Option!162)

(assert (=> b!104130 (= e!67809 e!67810)))

(declare-fun c!17988 () Bool)

(assert (=> b!104130 (= c!17988 (and ((_ is Cons!1588) (toList!779 lt!52854)) (not (= (_1!1188 (h!2184 (toList!779 lt!52854))) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104129 () Bool)

(assert (=> b!104129 (= e!67809 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52854)))))))

(declare-fun c!17987 () Bool)

(declare-fun d!28135 () Bool)

(assert (=> d!28135 (= c!17987 (and ((_ is Cons!1588) (toList!779 lt!52854)) (= (_1!1188 (h!2184 (toList!779 lt!52854))) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28135 (= (getValueByKey!156 (toList!779 lt!52854) (_1!1188 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67809)))

(declare-fun b!104132 () Bool)

(assert (=> b!104132 (= e!67810 None!160)))

(assert (= (and d!28135 c!17987) b!104129))

(assert (= (and d!28135 (not c!17987)) b!104130))

(assert (= (and b!104130 c!17988) b!104131))

(assert (= (and b!104130 (not c!17988)) b!104132))

(declare-fun m!115457 () Bool)

(assert (=> b!104131 m!115457))

(assert (=> b!103707 d!28135))

(declare-fun d!28137 () Bool)

(declare-fun lt!53168 () Bool)

(assert (=> d!28137 (= lt!53168 (select (content!108 (toList!779 lt!52883)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67811 () Bool)

(assert (=> d!28137 (= lt!53168 e!67811)))

(declare-fun res!51950 () Bool)

(assert (=> d!28137 (=> (not res!51950) (not e!67811))))

(assert (=> d!28137 (= res!51950 ((_ is Cons!1588) (toList!779 lt!52883)))))

(assert (=> d!28137 (= (contains!812 (toList!779 lt!52883) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53168)))

(declare-fun b!104133 () Bool)

(declare-fun e!67812 () Bool)

(assert (=> b!104133 (= e!67811 e!67812)))

(declare-fun res!51951 () Bool)

(assert (=> b!104133 (=> res!51951 e!67812)))

(assert (=> b!104133 (= res!51951 (= (h!2184 (toList!779 lt!52883)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104134 () Bool)

(assert (=> b!104134 (= e!67812 (contains!812 (t!5646 (toList!779 lt!52883)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28137 res!51950) b!104133))

(assert (= (and b!104133 (not res!51951)) b!104134))

(declare-fun m!115459 () Bool)

(assert (=> d!28137 m!115459))

(declare-fun m!115461 () Bool)

(assert (=> d!28137 m!115461))

(declare-fun m!115463 () Bool)

(assert (=> b!104134 m!115463))

(assert (=> b!103744 d!28137))

(assert (=> b!103676 d!28051))

(declare-fun b!104137 () Bool)

(declare-fun e!67814 () Option!162)

(assert (=> b!104137 (= e!67814 (getValueByKey!156 (t!5646 (t!5646 (toList!779 lt!52558))) (_1!1188 lt!52444)))))

(declare-fun b!104136 () Bool)

(declare-fun e!67813 () Option!162)

(assert (=> b!104136 (= e!67813 e!67814)))

(declare-fun c!17990 () Bool)

(assert (=> b!104136 (= c!17990 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52558))) (not (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52558)))) (_1!1188 lt!52444)))))))

(declare-fun b!104135 () Bool)

(assert (=> b!104135 (= e!67813 (Some!161 (_2!1188 (h!2184 (t!5646 (toList!779 lt!52558))))))))

(declare-fun d!28139 () Bool)

(declare-fun c!17989 () Bool)

(assert (=> d!28139 (= c!17989 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52558))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52558)))) (_1!1188 lt!52444))))))

(assert (=> d!28139 (= (getValueByKey!156 (t!5646 (toList!779 lt!52558)) (_1!1188 lt!52444)) e!67813)))

(declare-fun b!104138 () Bool)

(assert (=> b!104138 (= e!67814 None!160)))

(assert (= (and d!28139 c!17989) b!104135))

(assert (= (and d!28139 (not c!17989)) b!104136))

(assert (= (and b!104136 c!17990) b!104137))

(assert (= (and b!104136 (not c!17990)) b!104138))

(declare-fun m!115465 () Bool)

(assert (=> b!104137 m!115465))

(assert (=> b!103617 d!28139))

(declare-fun b!104139 () Bool)

(declare-fun e!67818 () Bool)

(declare-fun e!67816 () Bool)

(assert (=> b!104139 (= e!67818 e!67816)))

(declare-fun res!51953 () Bool)

(assert (=> b!104139 (=> (not res!51953) (not e!67816))))

(declare-fun e!67815 () Bool)

(assert (=> b!104139 (= res!51953 (not e!67815))))

(declare-fun res!51952 () Bool)

(assert (=> b!104139 (=> (not res!51952) (not e!67815))))

(assert (=> b!104139 (= res!51952 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104140 () Bool)

(declare-fun e!67817 () Bool)

(declare-fun call!10924 () Bool)

(assert (=> b!104140 (= e!67817 call!10924)))

(declare-fun b!104141 () Bool)

(assert (=> b!104141 (= e!67816 e!67817)))

(declare-fun c!17991 () Bool)

(assert (=> b!104141 (= c!17991 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104142 () Bool)

(assert (=> b!104142 (= e!67817 call!10924)))

(declare-fun d!28141 () Bool)

(declare-fun res!51954 () Bool)

(assert (=> d!28141 (=> res!51954 e!67818)))

(assert (=> d!28141 (= res!51954 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28141 (= (arrayNoDuplicates!0 (_keys!4262 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17927 (Cons!1589 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) Nil!1590) Nil!1590)) e!67818)))

(declare-fun b!104143 () Bool)

(assert (=> b!104143 (= e!67815 (contains!813 (ite c!17927 (Cons!1589 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) Nil!1590) Nil!1590) (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!10921 () Bool)

(assert (=> bm!10921 (= call!10924 (arrayNoDuplicates!0 (_keys!4262 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17991 (Cons!1589 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!17927 (Cons!1589 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) Nil!1590) Nil!1590)) (ite c!17927 (Cons!1589 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) Nil!1590) Nil!1590))))))

(assert (= (and d!28141 (not res!51954)) b!104139))

(assert (= (and b!104139 res!51952) b!104143))

(assert (= (and b!104139 res!51953) b!104141))

(assert (= (and b!104141 c!17991) b!104142))

(assert (= (and b!104141 (not c!17991)) b!104140))

(assert (= (or b!104142 b!104140) bm!10921))

(declare-fun m!115467 () Bool)

(assert (=> b!104139 m!115467))

(assert (=> b!104139 m!115467))

(declare-fun m!115469 () Bool)

(assert (=> b!104139 m!115469))

(assert (=> b!104141 m!115467))

(assert (=> b!104141 m!115467))

(assert (=> b!104141 m!115469))

(assert (=> b!104143 m!115467))

(assert (=> b!104143 m!115467))

(declare-fun m!115471 () Bool)

(assert (=> b!104143 m!115471))

(assert (=> bm!10921 m!115467))

(declare-fun m!115473 () Bool)

(assert (=> bm!10921 m!115473))

(assert (=> bm!10898 d!28141))

(declare-fun b!104146 () Bool)

(declare-fun e!67820 () Option!162)

(assert (=> b!104146 (= e!67820 (getValueByKey!156 (t!5646 (toList!779 lt!52835)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104145 () Bool)

(declare-fun e!67819 () Option!162)

(assert (=> b!104145 (= e!67819 e!67820)))

(declare-fun c!17993 () Bool)

(assert (=> b!104145 (= c!17993 (and ((_ is Cons!1588) (toList!779 lt!52835)) (not (= (_1!1188 (h!2184 (toList!779 lt!52835))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!104144 () Bool)

(assert (=> b!104144 (= e!67819 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52835)))))))

(declare-fun d!28143 () Bool)

(declare-fun c!17992 () Bool)

(assert (=> d!28143 (= c!17992 (and ((_ is Cons!1588) (toList!779 lt!52835)) (= (_1!1188 (h!2184 (toList!779 lt!52835))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28143 (= (getValueByKey!156 (toList!779 lt!52835) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) e!67819)))

(declare-fun b!104147 () Bool)

(assert (=> b!104147 (= e!67820 None!160)))

(assert (= (and d!28143 c!17992) b!104144))

(assert (= (and d!28143 (not c!17992)) b!104145))

(assert (= (and b!104145 c!17993) b!104146))

(assert (= (and b!104145 (not c!17993)) b!104147))

(declare-fun m!115475 () Bool)

(assert (=> b!104146 m!115475))

(assert (=> b!103688 d!28143))

(declare-fun d!28145 () Bool)

(assert (=> d!28145 (= (apply!97 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52627) (apply!97 lt!52639 lt!52627))))

(assert (=> d!28145 true))

(declare-fun _$34!879 () Unit!3132)

(assert (=> d!28145 (= (choose!650 lt!52639 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52627) _$34!879)))

(declare-fun bs!4282 () Bool)

(assert (= bs!4282 d!28145))

(assert (=> bs!4282 m!114225))

(assert (=> bs!4282 m!114225))

(assert (=> bs!4282 m!114227))

(assert (=> bs!4282 m!114231))

(assert (=> d!27873 d!28145))

(declare-fun d!28147 () Bool)

(declare-fun e!67822 () Bool)

(assert (=> d!28147 e!67822))

(declare-fun res!51955 () Bool)

(assert (=> d!28147 (=> res!51955 e!67822)))

(declare-fun lt!53172 () Bool)

(assert (=> d!28147 (= res!51955 (not lt!53172))))

(declare-fun lt!53169 () Bool)

(assert (=> d!28147 (= lt!53172 lt!53169)))

(declare-fun lt!53170 () Unit!3132)

(declare-fun e!67821 () Unit!3132)

(assert (=> d!28147 (= lt!53170 e!67821)))

(declare-fun c!17994 () Bool)

(assert (=> d!28147 (= c!17994 lt!53169)))

(assert (=> d!28147 (= lt!53169 (containsKey!159 (toList!779 lt!52639) lt!52627))))

(assert (=> d!28147 (= (contains!811 lt!52639 lt!52627) lt!53172)))

(declare-fun b!104149 () Bool)

(declare-fun lt!53171 () Unit!3132)

(assert (=> b!104149 (= e!67821 lt!53171)))

(assert (=> b!104149 (= lt!53171 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52639) lt!52627))))

(assert (=> b!104149 (isDefined!108 (getValueByKey!156 (toList!779 lt!52639) lt!52627))))

(declare-fun b!104150 () Bool)

(declare-fun Unit!3172 () Unit!3132)

(assert (=> b!104150 (= e!67821 Unit!3172)))

(declare-fun b!104151 () Bool)

(assert (=> b!104151 (= e!67822 (isDefined!108 (getValueByKey!156 (toList!779 lt!52639) lt!52627)))))

(assert (= (and d!28147 c!17994) b!104149))

(assert (= (and d!28147 (not c!17994)) b!104150))

(assert (= (and d!28147 (not res!51955)) b!104151))

(declare-fun m!115477 () Bool)

(assert (=> d!28147 m!115477))

(declare-fun m!115479 () Bool)

(assert (=> b!104149 m!115479))

(assert (=> b!104149 m!114663))

(assert (=> b!104149 m!114663))

(declare-fun m!115481 () Bool)

(assert (=> b!104149 m!115481))

(assert (=> b!104151 m!114663))

(assert (=> b!104151 m!114663))

(assert (=> b!104151 m!115481))

(assert (=> d!27873 d!28147))

(assert (=> d!27873 d!27887))

(assert (=> d!27873 d!27877))

(assert (=> d!27873 d!27885))

(declare-fun b!104152 () Bool)

(declare-fun e!67823 () List!1592)

(declare-fun call!10926 () List!1592)

(assert (=> b!104152 (= e!67823 call!10926)))

(declare-fun b!104153 () Bool)

(declare-fun e!67826 () List!1592)

(assert (=> b!104153 (= e!67826 (insertStrictlySorted!75 (t!5646 (t!5646 (toList!779 lt!52441))) (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun b!104154 () Bool)

(declare-fun e!67824 () List!1592)

(declare-fun call!10927 () List!1592)

(assert (=> b!104154 (= e!67824 call!10927)))

(declare-fun d!28149 () Bool)

(declare-fun e!67825 () Bool)

(assert (=> d!28149 e!67825))

(declare-fun res!51957 () Bool)

(assert (=> d!28149 (=> (not res!51957) (not e!67825))))

(declare-fun lt!53173 () List!1592)

(assert (=> d!28149 (= res!51957 (isStrictlySorted!295 lt!53173))))

(declare-fun e!67827 () List!1592)

(assert (=> d!28149 (= lt!53173 e!67827)))

(declare-fun c!17995 () Bool)

(assert (=> d!28149 (= c!17995 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52441))) (bvslt (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441)))) (_1!1188 lt!52442))))))

(assert (=> d!28149 (isStrictlySorted!295 (t!5646 (toList!779 lt!52441)))))

(assert (=> d!28149 (= (insertStrictlySorted!75 (t!5646 (toList!779 lt!52441)) (_1!1188 lt!52442) (_2!1188 lt!52442)) lt!53173)))

(declare-fun bm!10922 () Bool)

(declare-fun call!10925 () List!1592)

(assert (=> bm!10922 (= call!10925 ($colon$colon!79 e!67826 (ite c!17995 (h!2184 (t!5646 (toList!779 lt!52441))) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442)))))))

(declare-fun c!17997 () Bool)

(assert (=> bm!10922 (= c!17997 c!17995)))

(declare-fun c!17998 () Bool)

(declare-fun c!17996 () Bool)

(declare-fun b!104155 () Bool)

(assert (=> b!104155 (= e!67826 (ite c!17998 (t!5646 (t!5646 (toList!779 lt!52441))) (ite c!17996 (Cons!1588 (h!2184 (t!5646 (toList!779 lt!52441))) (t!5646 (t!5646 (toList!779 lt!52441)))) Nil!1589)))))

(declare-fun b!104156 () Bool)

(assert (=> b!104156 (= c!17996 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52441))) (bvsgt (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441)))) (_1!1188 lt!52442))))))

(assert (=> b!104156 (= e!67824 e!67823)))

(declare-fun bm!10923 () Bool)

(assert (=> bm!10923 (= call!10926 call!10927)))

(declare-fun b!104157 () Bool)

(assert (=> b!104157 (= e!67823 call!10926)))

(declare-fun bm!10924 () Bool)

(assert (=> bm!10924 (= call!10927 call!10925)))

(declare-fun b!104158 () Bool)

(assert (=> b!104158 (= e!67825 (contains!812 lt!53173 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!104159 () Bool)

(declare-fun res!51956 () Bool)

(assert (=> b!104159 (=> (not res!51956) (not e!67825))))

(assert (=> b!104159 (= res!51956 (containsKey!159 lt!53173 (_1!1188 lt!52442)))))

(declare-fun b!104160 () Bool)

(assert (=> b!104160 (= e!67827 e!67824)))

(assert (=> b!104160 (= c!17998 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52441))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441)))) (_1!1188 lt!52442))))))

(declare-fun b!104161 () Bool)

(assert (=> b!104161 (= e!67827 call!10925)))

(assert (= (and d!28149 c!17995) b!104161))

(assert (= (and d!28149 (not c!17995)) b!104160))

(assert (= (and b!104160 c!17998) b!104154))

(assert (= (and b!104160 (not c!17998)) b!104156))

(assert (= (and b!104156 c!17996) b!104157))

(assert (= (and b!104156 (not c!17996)) b!104152))

(assert (= (or b!104157 b!104152) bm!10923))

(assert (= (or b!104154 bm!10923) bm!10924))

(assert (= (or b!104161 bm!10924) bm!10922))

(assert (= (and bm!10922 c!17997) b!104153))

(assert (= (and bm!10922 (not c!17997)) b!104155))

(assert (= (and d!28149 res!51957) b!104159))

(assert (= (and b!104159 res!51956) b!104158))

(declare-fun m!115483 () Bool)

(assert (=> d!28149 m!115483))

(assert (=> d!28149 m!115455))

(declare-fun m!115485 () Bool)

(assert (=> b!104158 m!115485))

(declare-fun m!115487 () Bool)

(assert (=> b!104159 m!115487))

(declare-fun m!115489 () Bool)

(assert (=> b!104153 m!115489))

(declare-fun m!115491 () Bool)

(assert (=> bm!10922 m!115491))

(assert (=> b!103788 d!28149))

(declare-fun d!28151 () Bool)

(assert (=> d!28151 (= (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52627)) (v!2882 (getValueByKey!156 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52627)))))

(assert (=> d!27885 d!28151))

(declare-fun b!104164 () Bool)

(declare-fun e!67829 () Option!162)

(assert (=> b!104164 (= e!67829 (getValueByKey!156 (t!5646 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!52627))))

(declare-fun b!104163 () Bool)

(declare-fun e!67828 () Option!162)

(assert (=> b!104163 (= e!67828 e!67829)))

(declare-fun c!18000 () Bool)

(assert (=> b!104163 (= c!18000 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52627))))))

(declare-fun b!104162 () Bool)

(assert (=> b!104162 (= e!67828 (Some!161 (_2!1188 (h!2184 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun c!17999 () Bool)

(declare-fun d!28153 () Bool)

(assert (=> d!28153 (= c!17999 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52627)))))

(assert (=> d!28153 (= (getValueByKey!156 (toList!779 (+!137 lt!52639 (tuple2!2355 lt!52637 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52627) e!67828)))

(declare-fun b!104165 () Bool)

(assert (=> b!104165 (= e!67829 None!160)))

(assert (= (and d!28153 c!17999) b!104162))

(assert (= (and d!28153 (not c!17999)) b!104163))

(assert (= (and b!104163 c!18000) b!104164))

(assert (= (and b!104163 (not c!18000)) b!104165))

(declare-fun m!115493 () Bool)

(assert (=> b!104164 m!115493))

(assert (=> d!27885 d!28153))

(declare-fun d!28155 () Bool)

(declare-fun e!67831 () Bool)

(assert (=> d!28155 e!67831))

(declare-fun res!51958 () Bool)

(assert (=> d!28155 (=> res!51958 e!67831)))

(declare-fun lt!53177 () Bool)

(assert (=> d!28155 (= res!51958 (not lt!53177))))

(declare-fun lt!53174 () Bool)

(assert (=> d!28155 (= lt!53177 lt!53174)))

(declare-fun lt!53175 () Unit!3132)

(declare-fun e!67830 () Unit!3132)

(assert (=> d!28155 (= lt!53175 e!67830)))

(declare-fun c!18001 () Bool)

(assert (=> d!28155 (= c!18001 lt!53174)))

(assert (=> d!28155 (= lt!53174 (containsKey!159 (toList!779 lt!52780) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28155 (= (contains!811 lt!52780 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53177)))

(declare-fun b!104166 () Bool)

(declare-fun lt!53176 () Unit!3132)

(assert (=> b!104166 (= e!67830 lt!53176)))

(assert (=> b!104166 (= lt!53176 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52780) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104166 (isDefined!108 (getValueByKey!156 (toList!779 lt!52780) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104167 () Bool)

(declare-fun Unit!3173 () Unit!3132)

(assert (=> b!104167 (= e!67830 Unit!3173)))

(declare-fun b!104168 () Bool)

(assert (=> b!104168 (= e!67831 (isDefined!108 (getValueByKey!156 (toList!779 lt!52780) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28155 c!18001) b!104166))

(assert (= (and d!28155 (not c!18001)) b!104167))

(assert (= (and d!28155 (not res!51958)) b!104168))

(declare-fun m!115495 () Bool)

(assert (=> d!28155 m!115495))

(declare-fun m!115497 () Bool)

(assert (=> b!104166 m!115497))

(declare-fun m!115499 () Bool)

(assert (=> b!104166 m!115499))

(assert (=> b!104166 m!115499))

(declare-fun m!115501 () Bool)

(assert (=> b!104166 m!115501))

(assert (=> b!104168 m!115499))

(assert (=> b!104168 m!115499))

(assert (=> b!104168 m!115501))

(assert (=> bm!10856 d!28155))

(declare-fun d!28157 () Bool)

(assert (=> d!28157 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4283 () Bool)

(assert (= bs!4283 d!28157))

(assert (=> bs!4283 m!115059))

(declare-fun m!115503 () Bool)

(assert (=> bs!4283 m!115503))

(assert (=> b!103966 d!28157))

(declare-fun b!104171 () Bool)

(declare-fun e!67833 () Option!162)

(assert (=> b!104171 (= e!67833 (getValueByKey!156 (t!5646 (toList!779 lt!52641)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104170 () Bool)

(declare-fun e!67832 () Option!162)

(assert (=> b!104170 (= e!67832 e!67833)))

(declare-fun c!18003 () Bool)

(assert (=> b!104170 (= c!18003 (and ((_ is Cons!1588) (toList!779 lt!52641)) (not (= (_1!1188 (h!2184 (toList!779 lt!52641))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104169 () Bool)

(assert (=> b!104169 (= e!67832 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52641)))))))

(declare-fun d!28159 () Bool)

(declare-fun c!18002 () Bool)

(assert (=> d!28159 (= c!18002 (and ((_ is Cons!1588) (toList!779 lt!52641)) (= (_1!1188 (h!2184 (toList!779 lt!52641))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28159 (= (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000) e!67832)))

(declare-fun b!104172 () Bool)

(assert (=> b!104172 (= e!67833 None!160)))

(assert (= (and d!28159 c!18002) b!104169))

(assert (= (and d!28159 (not c!18002)) b!104170))

(assert (= (and b!104170 c!18003) b!104171))

(assert (= (and b!104170 (not c!18003)) b!104172))

(declare-fun m!115505 () Bool)

(assert (=> b!104171 m!115505))

(assert (=> b!103966 d!28159))

(declare-fun lt!53178 () Bool)

(declare-fun d!28161 () Bool)

(assert (=> d!28161 (= lt!53178 (select (content!109 (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!67834 () Bool)

(assert (=> d!28161 (= lt!53178 e!67834)))

(declare-fun res!51959 () Bool)

(assert (=> d!28161 (=> (not res!51959) (not e!67834))))

(assert (=> d!28161 (= res!51959 ((_ is Cons!1589) (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)))))

(assert (=> d!28161 (= (contains!813 (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!53178)))

(declare-fun b!104173 () Bool)

(declare-fun e!67835 () Bool)

(assert (=> b!104173 (= e!67834 e!67835)))

(declare-fun res!51960 () Bool)

(assert (=> b!104173 (=> res!51960 e!67835)))

(assert (=> b!104173 (= res!51960 (= (h!2185 (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104174 () Bool)

(assert (=> b!104174 (= e!67835 (contains!813 (t!5647 (ite c!17755 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1590) Nil!1590)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!28161 res!51959) b!104173))

(assert (= (and b!104173 (not res!51960)) b!104174))

(declare-fun m!115507 () Bool)

(assert (=> d!28161 m!115507))

(assert (=> d!28161 m!114715))

(declare-fun m!115509 () Bool)

(assert (=> d!28161 m!115509))

(assert (=> b!104174 m!114715))

(declare-fun m!115511 () Bool)

(assert (=> b!104174 m!115511))

(assert (=> b!103742 d!28161))

(declare-fun bm!10925 () Bool)

(declare-fun call!10934 () ListLongMap!1527)

(assert (=> bm!10925 (= call!10934 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))))))

(declare-fun bm!10926 () Bool)

(declare-fun call!10931 () ListLongMap!1527)

(declare-fun call!10932 () ListLongMap!1527)

(assert (=> bm!10926 (= call!10931 call!10932)))

(declare-fun b!104175 () Bool)

(declare-fun e!67836 () Unit!3132)

(declare-fun lt!53193 () Unit!3132)

(assert (=> b!104175 (= e!67836 lt!53193)))

(declare-fun lt!53195 () ListLongMap!1527)

(assert (=> b!104175 (= lt!53195 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))))))

(declare-fun lt!53200 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53200 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53179 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53179 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000))))

(declare-fun lt!53197 () Unit!3132)

(assert (=> b!104175 (= lt!53197 (addStillContains!73 lt!53195 lt!53200 (zeroValue!2437 (_2!1187 lt!52716)) lt!53179))))

(assert (=> b!104175 (contains!811 (+!137 lt!53195 (tuple2!2355 lt!53200 (zeroValue!2437 (_2!1187 lt!52716)))) lt!53179)))

(declare-fun lt!53184 () Unit!3132)

(assert (=> b!104175 (= lt!53184 lt!53197)))

(declare-fun lt!53189 () ListLongMap!1527)

(assert (=> b!104175 (= lt!53189 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))))))

(declare-fun lt!53187 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53187 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53191 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53191 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000))))

(declare-fun lt!53180 () Unit!3132)

(assert (=> b!104175 (= lt!53180 (addApplyDifferent!73 lt!53189 lt!53187 (minValue!2437 (_2!1187 lt!52716)) lt!53191))))

(assert (=> b!104175 (= (apply!97 (+!137 lt!53189 (tuple2!2355 lt!53187 (minValue!2437 (_2!1187 lt!52716)))) lt!53191) (apply!97 lt!53189 lt!53191))))

(declare-fun lt!53199 () Unit!3132)

(assert (=> b!104175 (= lt!53199 lt!53180)))

(declare-fun lt!53194 () ListLongMap!1527)

(assert (=> b!104175 (= lt!53194 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))))))

(declare-fun lt!53192 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53192 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53182 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53182 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000))))

(declare-fun lt!53198 () Unit!3132)

(assert (=> b!104175 (= lt!53198 (addApplyDifferent!73 lt!53194 lt!53192 (zeroValue!2437 (_2!1187 lt!52716)) lt!53182))))

(assert (=> b!104175 (= (apply!97 (+!137 lt!53194 (tuple2!2355 lt!53192 (zeroValue!2437 (_2!1187 lt!52716)))) lt!53182) (apply!97 lt!53194 lt!53182))))

(declare-fun lt!53181 () Unit!3132)

(assert (=> b!104175 (= lt!53181 lt!53198)))

(declare-fun lt!53188 () ListLongMap!1527)

(assert (=> b!104175 (= lt!53188 (getCurrentListMapNoExtraKeys!104 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))))))

(declare-fun lt!53190 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53190 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53186 () (_ BitVec 64))

(assert (=> b!104175 (= lt!53186 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000))))

(assert (=> b!104175 (= lt!53193 (addApplyDifferent!73 lt!53188 lt!53190 (minValue!2437 (_2!1187 lt!52716)) lt!53186))))

(assert (=> b!104175 (= (apply!97 (+!137 lt!53188 (tuple2!2355 lt!53190 (minValue!2437 (_2!1187 lt!52716)))) lt!53186) (apply!97 lt!53188 lt!53186))))

(declare-fun b!104176 () Bool)

(declare-fun e!67840 () Bool)

(declare-fun call!10928 () Bool)

(assert (=> b!104176 (= e!67840 (not call!10928))))

(declare-fun b!104177 () Bool)

(declare-fun e!67841 () Bool)

(declare-fun lt!53196 () ListLongMap!1527)

(assert (=> b!104177 (= e!67841 (= (apply!97 lt!53196 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (_values!2543 (_2!1187 lt!52716))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 (_2!1187 lt!52716)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104177 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (_values!2543 (_2!1187 lt!52716)))))))

(assert (=> b!104177 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(declare-fun b!104178 () Bool)

(declare-fun e!67842 () ListLongMap!1527)

(declare-fun call!10929 () ListLongMap!1527)

(assert (=> b!104178 (= e!67842 call!10929)))

(declare-fun b!104179 () Bool)

(declare-fun Unit!3174 () Unit!3132)

(assert (=> b!104179 (= e!67836 Unit!3174)))

(declare-fun b!104180 () Bool)

(declare-fun e!67839 () ListLongMap!1527)

(assert (=> b!104180 (= e!67839 call!10931)))

(declare-fun b!104182 () Bool)

(declare-fun e!67837 () Bool)

(declare-fun call!10930 () Bool)

(assert (=> b!104182 (= e!67837 (not call!10930))))

(declare-fun b!104183 () Bool)

(declare-fun e!67838 () Bool)

(assert (=> b!104183 (= e!67838 e!67841)))

(declare-fun res!51963 () Bool)

(assert (=> b!104183 (=> (not res!51963) (not e!67841))))

(assert (=> b!104183 (= res!51963 (contains!811 lt!53196 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(assert (=> b!104183 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(declare-fun b!104184 () Bool)

(declare-fun e!67845 () Bool)

(assert (=> b!104184 (= e!67845 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun b!104185 () Bool)

(declare-fun res!51961 () Bool)

(declare-fun e!67843 () Bool)

(assert (=> b!104185 (=> (not res!51961) (not e!67843))))

(assert (=> b!104185 (= res!51961 e!67837)))

(declare-fun c!18004 () Bool)

(assert (=> b!104185 (= c!18004 (not (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun call!10933 () ListLongMap!1527)

(declare-fun c!18007 () Bool)

(declare-fun bm!10927 () Bool)

(declare-fun c!18009 () Bool)

(assert (=> bm!10927 (= call!10933 (+!137 (ite c!18007 call!10934 (ite c!18009 call!10932 call!10931)) (ite (or c!18007 c!18009) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (_2!1187 lt!52716))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (_2!1187 lt!52716))))))))

(declare-fun b!104186 () Bool)

(declare-fun e!67844 () ListLongMap!1527)

(assert (=> b!104186 (= e!67844 e!67842)))

(assert (=> b!104186 (= c!18009 (and (not (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104187 () Bool)

(assert (=> b!104187 (= e!67839 call!10929)))

(declare-fun bm!10928 () Bool)

(assert (=> bm!10928 (= call!10929 call!10933)))

(declare-fun b!104188 () Bool)

(declare-fun c!18008 () Bool)

(assert (=> b!104188 (= c!18008 (and (not (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104188 (= e!67842 e!67839)))

(declare-fun b!104189 () Bool)

(assert (=> b!104189 (= e!67844 (+!137 call!10933 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (_2!1187 lt!52716)))))))

(declare-fun bm!10929 () Bool)

(assert (=> bm!10929 (= call!10932 call!10934)))

(declare-fun b!104190 () Bool)

(declare-fun res!51969 () Bool)

(assert (=> b!104190 (=> (not res!51969) (not e!67843))))

(assert (=> b!104190 (= res!51969 e!67838)))

(declare-fun res!51965 () Bool)

(assert (=> b!104190 (=> res!51965 e!67838)))

(declare-fun e!67846 () Bool)

(assert (=> b!104190 (= res!51965 (not e!67846))))

(declare-fun res!51964 () Bool)

(assert (=> b!104190 (=> (not res!51964) (not e!67846))))

(assert (=> b!104190 (= res!51964 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(declare-fun b!104191 () Bool)

(declare-fun e!67848 () Bool)

(assert (=> b!104191 (= e!67848 (= (apply!97 lt!53196 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 (_2!1187 lt!52716))))))

(declare-fun bm!10930 () Bool)

(assert (=> bm!10930 (= call!10930 (contains!811 lt!53196 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10931 () Bool)

(assert (=> bm!10931 (= call!10928 (contains!811 lt!53196 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104181 () Bool)

(assert (=> b!104181 (= e!67840 e!67848)))

(declare-fun res!51967 () Bool)

(assert (=> b!104181 (= res!51967 call!10928)))

(assert (=> b!104181 (=> (not res!51967) (not e!67848))))

(declare-fun d!28163 () Bool)

(assert (=> d!28163 e!67843))

(declare-fun res!51968 () Bool)

(assert (=> d!28163 (=> (not res!51968) (not e!67843))))

(assert (=> d!28163 (= res!51968 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))))

(declare-fun lt!53183 () ListLongMap!1527)

(assert (=> d!28163 (= lt!53196 lt!53183)))

(declare-fun lt!53185 () Unit!3132)

(assert (=> d!28163 (= lt!53185 e!67836)))

(declare-fun c!18006 () Bool)

(assert (=> d!28163 (= c!18006 e!67845)))

(declare-fun res!51966 () Bool)

(assert (=> d!28163 (=> (not res!51966) (not e!67845))))

(assert (=> d!28163 (= res!51966 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(assert (=> d!28163 (= lt!53183 e!67844)))

(assert (=> d!28163 (= c!18007 (and (not (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28163 (validMask!0 (mask!6696 (_2!1187 lt!52716)))))

(assert (=> d!28163 (= (getCurrentListMap!467 (_keys!4262 (_2!1187 lt!52716)) (_values!2543 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716)) (extraKeys!2369 (_2!1187 lt!52716)) (zeroValue!2437 (_2!1187 lt!52716)) (minValue!2437 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!52716))) lt!53196)))

(declare-fun b!104192 () Bool)

(assert (=> b!104192 (= e!67846 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun b!104193 () Bool)

(declare-fun e!67847 () Bool)

(assert (=> b!104193 (= e!67837 e!67847)))

(declare-fun res!51962 () Bool)

(assert (=> b!104193 (= res!51962 call!10930)))

(assert (=> b!104193 (=> (not res!51962) (not e!67847))))

(declare-fun b!104194 () Bool)

(assert (=> b!104194 (= e!67847 (= (apply!97 lt!53196 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 (_2!1187 lt!52716))))))

(declare-fun b!104195 () Bool)

(assert (=> b!104195 (= e!67843 e!67840)))

(declare-fun c!18005 () Bool)

(assert (=> b!104195 (= c!18005 (not (= (bvand (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28163 c!18007) b!104189))

(assert (= (and d!28163 (not c!18007)) b!104186))

(assert (= (and b!104186 c!18009) b!104178))

(assert (= (and b!104186 (not c!18009)) b!104188))

(assert (= (and b!104188 c!18008) b!104187))

(assert (= (and b!104188 (not c!18008)) b!104180))

(assert (= (or b!104187 b!104180) bm!10926))

(assert (= (or b!104178 bm!10926) bm!10929))

(assert (= (or b!104178 b!104187) bm!10928))

(assert (= (or b!104189 bm!10929) bm!10925))

(assert (= (or b!104189 bm!10928) bm!10927))

(assert (= (and d!28163 res!51966) b!104184))

(assert (= (and d!28163 c!18006) b!104175))

(assert (= (and d!28163 (not c!18006)) b!104179))

(assert (= (and d!28163 res!51968) b!104190))

(assert (= (and b!104190 res!51964) b!104192))

(assert (= (and b!104190 (not res!51965)) b!104183))

(assert (= (and b!104183 res!51963) b!104177))

(assert (= (and b!104190 res!51969) b!104185))

(assert (= (and b!104185 c!18004) b!104193))

(assert (= (and b!104185 (not c!18004)) b!104182))

(assert (= (and b!104193 res!51962) b!104194))

(assert (= (or b!104193 b!104182) bm!10930))

(assert (= (and b!104185 res!51961) b!104195))

(assert (= (and b!104195 c!18005) b!104181))

(assert (= (and b!104195 (not c!18005)) b!104176))

(assert (= (and b!104181 res!51967) b!104191))

(assert (= (or b!104181 b!104176) bm!10931))

(declare-fun b_lambda!4661 () Bool)

(assert (=> (not b_lambda!4661) (not b!104177)))

(declare-fun tb!2037 () Bool)

(declare-fun t!5664 () Bool)

(assert (=> (and b!103061 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 (_2!1187 lt!52716))) t!5664) tb!2037))

(declare-fun result!3435 () Bool)

(assert (=> tb!2037 (= result!3435 tp_is_empty!2671)))

(assert (=> b!104177 t!5664))

(declare-fun b_and!6445 () Bool)

(assert (= b_and!6441 (and (=> t!5664 result!3435) b_and!6445)))

(declare-fun tb!2039 () Bool)

(declare-fun t!5666 () Bool)

(assert (=> (and b!103053 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (_2!1187 lt!52716))) t!5666) tb!2039))

(declare-fun result!3437 () Bool)

(assert (= result!3437 result!3435))

(assert (=> b!104177 t!5666))

(declare-fun b_and!6447 () Bool)

(assert (= b_and!6443 (and (=> t!5666 result!3437) b_and!6447)))

(declare-fun m!115513 () Bool)

(assert (=> b!104189 m!115513))

(declare-fun m!115515 () Bool)

(assert (=> d!28163 m!115515))

(declare-fun m!115517 () Bool)

(assert (=> bm!10925 m!115517))

(declare-fun m!115519 () Bool)

(assert (=> b!104192 m!115519))

(assert (=> b!104192 m!115519))

(declare-fun m!115521 () Bool)

(assert (=> b!104192 m!115521))

(declare-fun m!115523 () Bool)

(assert (=> bm!10931 m!115523))

(assert (=> b!104183 m!115519))

(assert (=> b!104183 m!115519))

(declare-fun m!115525 () Bool)

(assert (=> b!104183 m!115525))

(declare-fun m!115527 () Bool)

(assert (=> b!104177 m!115527))

(assert (=> b!104177 m!115519))

(declare-fun m!115529 () Bool)

(assert (=> b!104177 m!115529))

(assert (=> b!104177 m!115519))

(declare-fun m!115531 () Bool)

(assert (=> b!104177 m!115531))

(assert (=> b!104177 m!115531))

(assert (=> b!104177 m!115527))

(declare-fun m!115533 () Bool)

(assert (=> b!104177 m!115533))

(declare-fun m!115535 () Bool)

(assert (=> bm!10927 m!115535))

(declare-fun m!115537 () Bool)

(assert (=> b!104194 m!115537))

(declare-fun m!115539 () Bool)

(assert (=> bm!10930 m!115539))

(declare-fun m!115541 () Bool)

(assert (=> b!104175 m!115541))

(declare-fun m!115543 () Bool)

(assert (=> b!104175 m!115543))

(declare-fun m!115545 () Bool)

(assert (=> b!104175 m!115545))

(assert (=> b!104175 m!115519))

(declare-fun m!115547 () Bool)

(assert (=> b!104175 m!115547))

(assert (=> b!104175 m!115517))

(declare-fun m!115549 () Bool)

(assert (=> b!104175 m!115549))

(declare-fun m!115551 () Bool)

(assert (=> b!104175 m!115551))

(declare-fun m!115553 () Bool)

(assert (=> b!104175 m!115553))

(declare-fun m!115555 () Bool)

(assert (=> b!104175 m!115555))

(declare-fun m!115557 () Bool)

(assert (=> b!104175 m!115557))

(declare-fun m!115559 () Bool)

(assert (=> b!104175 m!115559))

(assert (=> b!104175 m!115553))

(declare-fun m!115561 () Bool)

(assert (=> b!104175 m!115561))

(assert (=> b!104175 m!115547))

(declare-fun m!115563 () Bool)

(assert (=> b!104175 m!115563))

(assert (=> b!104175 m!115545))

(declare-fun m!115565 () Bool)

(assert (=> b!104175 m!115565))

(declare-fun m!115567 () Bool)

(assert (=> b!104175 m!115567))

(assert (=> b!104175 m!115557))

(declare-fun m!115569 () Bool)

(assert (=> b!104175 m!115569))

(assert (=> b!104184 m!115519))

(assert (=> b!104184 m!115519))

(assert (=> b!104184 m!115521))

(declare-fun m!115571 () Bool)

(assert (=> b!104191 m!115571))

(assert (=> d!27811 d!28163))

(declare-fun d!28165 () Bool)

(assert (=> d!28165 (= (apply!97 lt!52828 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!52828) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4284 () Bool)

(assert (= bs!4284 d!28165))

(declare-fun m!115573 () Bool)

(assert (=> bs!4284 m!115573))

(assert (=> bs!4284 m!115573))

(declare-fun m!115575 () Bool)

(assert (=> bs!4284 m!115575))

(assert (=> b!103686 d!28165))

(declare-fun b!104196 () Bool)

(declare-fun e!67849 () List!1592)

(declare-fun call!10936 () List!1592)

(assert (=> b!104196 (= e!67849 call!10936)))

(declare-fun b!104197 () Bool)

(declare-fun e!67852 () List!1592)

(assert (=> b!104197 (= e!67852 (insertStrictlySorted!75 (t!5646 (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (_1!1188 lt!52442) (_2!1188 lt!52442)))))

(declare-fun b!104198 () Bool)

(declare-fun e!67850 () List!1592)

(declare-fun call!10937 () List!1592)

(assert (=> b!104198 (= e!67850 call!10937)))

(declare-fun d!28167 () Bool)

(declare-fun e!67851 () Bool)

(assert (=> d!28167 e!67851))

(declare-fun res!51971 () Bool)

(assert (=> d!28167 (=> (not res!51971) (not e!67851))))

(declare-fun lt!53201 () List!1592)

(assert (=> d!28167 (= res!51971 (isStrictlySorted!295 lt!53201))))

(declare-fun e!67853 () List!1592)

(assert (=> d!28167 (= lt!53201 e!67853)))

(declare-fun c!18010 () Bool)

(assert (=> d!28167 (= c!18010 (and ((_ is Cons!1588) (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (bvslt (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))))) (_1!1188 lt!52442))))))

(assert (=> d!28167 (isStrictlySorted!295 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))))))

(assert (=> d!28167 (= (insertStrictlySorted!75 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))) (_1!1188 lt!52442) (_2!1188 lt!52442)) lt!53201)))

(declare-fun call!10935 () List!1592)

(declare-fun bm!10932 () Bool)

(assert (=> bm!10932 (= call!10935 ($colon$colon!79 e!67852 (ite c!18010 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442)))))))

(declare-fun c!18012 () Bool)

(assert (=> bm!10932 (= c!18012 c!18010)))

(declare-fun b!104199 () Bool)

(declare-fun c!18013 () Bool)

(declare-fun c!18011 () Bool)

(assert (=> b!104199 (= e!67852 (ite c!18013 (t!5646 (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (ite c!18011 (Cons!1588 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (t!5646 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))))) Nil!1589)))))

(declare-fun b!104200 () Bool)

(assert (=> b!104200 (= c!18011 (and ((_ is Cons!1588) (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (bvsgt (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))))) (_1!1188 lt!52442))))))

(assert (=> b!104200 (= e!67850 e!67849)))

(declare-fun bm!10933 () Bool)

(assert (=> bm!10933 (= call!10936 call!10937)))

(declare-fun b!104201 () Bool)

(assert (=> b!104201 (= e!67849 call!10936)))

(declare-fun bm!10934 () Bool)

(assert (=> bm!10934 (= call!10937 call!10935)))

(declare-fun b!104202 () Bool)

(assert (=> b!104202 (= e!67851 (contains!812 lt!53201 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!104203 () Bool)

(declare-fun res!51970 () Bool)

(assert (=> b!104203 (=> (not res!51970) (not e!67851))))

(assert (=> b!104203 (= res!51970 (containsKey!159 lt!53201 (_1!1188 lt!52442)))))

(declare-fun b!104204 () Bool)

(assert (=> b!104204 (= e!67853 e!67850)))

(assert (=> b!104204 (= c!18013 (and ((_ is Cons!1588) (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))) (= (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52444))))) (_1!1188 lt!52442))))))

(declare-fun b!104205 () Bool)

(assert (=> b!104205 (= e!67853 call!10935)))

(assert (= (and d!28167 c!18010) b!104205))

(assert (= (and d!28167 (not c!18010)) b!104204))

(assert (= (and b!104204 c!18013) b!104198))

(assert (= (and b!104204 (not c!18013)) b!104200))

(assert (= (and b!104200 c!18011) b!104201))

(assert (= (and b!104200 (not c!18011)) b!104196))

(assert (= (or b!104201 b!104196) bm!10933))

(assert (= (or b!104198 bm!10933) bm!10934))

(assert (= (or b!104205 bm!10934) bm!10932))

(assert (= (and bm!10932 c!18012) b!104197))

(assert (= (and bm!10932 (not c!18012)) b!104199))

(assert (= (and d!28167 res!51971) b!104203))

(assert (= (and b!104203 res!51970) b!104202))

(declare-fun m!115577 () Bool)

(assert (=> d!28167 m!115577))

(declare-fun m!115579 () Bool)

(assert (=> d!28167 m!115579))

(declare-fun m!115581 () Bool)

(assert (=> b!104202 m!115581))

(declare-fun m!115583 () Bool)

(assert (=> b!104203 m!115583))

(declare-fun m!115585 () Bool)

(assert (=> b!104197 m!115585))

(declare-fun m!115587 () Bool)

(assert (=> bm!10932 m!115587))

(assert (=> b!103658 d!28167))

(declare-fun d!28169 () Bool)

(declare-fun e!67855 () Bool)

(assert (=> d!28169 e!67855))

(declare-fun res!51972 () Bool)

(assert (=> d!28169 (=> res!51972 e!67855)))

(declare-fun lt!53205 () Bool)

(assert (=> d!28169 (= res!51972 (not lt!53205))))

(declare-fun lt!53202 () Bool)

(assert (=> d!28169 (= lt!53205 lt!53202)))

(declare-fun lt!53203 () Unit!3132)

(declare-fun e!67854 () Unit!3132)

(assert (=> d!28169 (= lt!53203 e!67854)))

(declare-fun c!18014 () Bool)

(assert (=> d!28169 (= c!18014 lt!53202)))

(assert (=> d!28169 (= lt!53202 (containsKey!159 (toList!779 lt!52941) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28169 (= (contains!811 lt!52941 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!53205)))

(declare-fun b!104206 () Bool)

(declare-fun lt!53204 () Unit!3132)

(assert (=> b!104206 (= e!67854 lt!53204)))

(assert (=> b!104206 (= lt!53204 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52941) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104206 (isDefined!108 (getValueByKey!156 (toList!779 lt!52941) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104207 () Bool)

(declare-fun Unit!3175 () Unit!3132)

(assert (=> b!104207 (= e!67854 Unit!3175)))

(declare-fun b!104208 () Bool)

(assert (=> b!104208 (= e!67855 (isDefined!108 (getValueByKey!156 (toList!779 lt!52941) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (= (and d!28169 c!18014) b!104206))

(assert (= (and d!28169 (not c!18014)) b!104207))

(assert (= (and d!28169 (not res!51972)) b!104208))

(declare-fun m!115589 () Bool)

(assert (=> d!28169 m!115589))

(declare-fun m!115591 () Bool)

(assert (=> b!104206 m!115591))

(assert (=> b!104206 m!114893))

(assert (=> b!104206 m!114893))

(declare-fun m!115593 () Bool)

(assert (=> b!104206 m!115593))

(assert (=> b!104208 m!114893))

(assert (=> b!104208 m!114893))

(assert (=> b!104208 m!115593))

(assert (=> d!27957 d!28169))

(declare-fun e!67857 () Option!162)

(declare-fun b!104211 () Bool)

(assert (=> b!104211 (= e!67857 (getValueByKey!156 (t!5646 lt!52940) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104210 () Bool)

(declare-fun e!67856 () Option!162)

(assert (=> b!104210 (= e!67856 e!67857)))

(declare-fun c!18016 () Bool)

(assert (=> b!104210 (= c!18016 (and ((_ is Cons!1588) lt!52940) (not (= (_1!1188 (h!2184 lt!52940)) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun b!104209 () Bool)

(assert (=> b!104209 (= e!67856 (Some!161 (_2!1188 (h!2184 lt!52940))))))

(declare-fun d!28171 () Bool)

(declare-fun c!18015 () Bool)

(assert (=> d!28171 (= c!18015 (and ((_ is Cons!1588) lt!52940) (= (_1!1188 (h!2184 lt!52940)) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (=> d!28171 (= (getValueByKey!156 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) e!67856)))

(declare-fun b!104212 () Bool)

(assert (=> b!104212 (= e!67857 None!160)))

(assert (= (and d!28171 c!18015) b!104209))

(assert (= (and d!28171 (not c!18015)) b!104210))

(assert (= (and b!104210 c!18016) b!104211))

(assert (= (and b!104210 (not c!18016)) b!104212))

(declare-fun m!115595 () Bool)

(assert (=> b!104211 m!115595))

(assert (=> d!27957 d!28171))

(declare-fun d!28173 () Bool)

(assert (=> d!28173 (= (getValueByKey!156 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (Some!161 (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun lt!53206 () Unit!3132)

(assert (=> d!28173 (= lt!53206 (choose!648 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!67858 () Bool)

(assert (=> d!28173 e!67858))

(declare-fun res!51973 () Bool)

(assert (=> d!28173 (=> (not res!51973) (not e!67858))))

(assert (=> d!28173 (= res!51973 (isStrictlySorted!295 lt!52940))))

(assert (=> d!28173 (= (lemmaContainsTupThenGetReturnValue!72 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!53206)))

(declare-fun b!104213 () Bool)

(declare-fun res!51974 () Bool)

(assert (=> b!104213 (=> (not res!51974) (not e!67858))))

(assert (=> b!104213 (= res!51974 (containsKey!159 lt!52940 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104214 () Bool)

(assert (=> b!104214 (= e!67858 (contains!812 lt!52940 (tuple2!2355 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (= (and d!28173 res!51973) b!104213))

(assert (= (and b!104213 res!51974) b!104214))

(assert (=> d!28173 m!114887))

(declare-fun m!115597 () Bool)

(assert (=> d!28173 m!115597))

(declare-fun m!115599 () Bool)

(assert (=> d!28173 m!115599))

(declare-fun m!115601 () Bool)

(assert (=> b!104213 m!115601))

(declare-fun m!115603 () Bool)

(assert (=> b!104214 m!115603))

(assert (=> d!27957 d!28173))

(declare-fun b!104215 () Bool)

(declare-fun e!67859 () List!1592)

(declare-fun call!10939 () List!1592)

(assert (=> b!104215 (= e!67859 call!10939)))

(declare-fun e!67862 () List!1592)

(declare-fun b!104216 () Bool)

(assert (=> b!104216 (= e!67862 (insertStrictlySorted!75 (t!5646 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104217 () Bool)

(declare-fun e!67860 () List!1592)

(declare-fun call!10940 () List!1592)

(assert (=> b!104217 (= e!67860 call!10940)))

(declare-fun d!28175 () Bool)

(declare-fun e!67861 () Bool)

(assert (=> d!28175 e!67861))

(declare-fun res!51976 () Bool)

(assert (=> d!28175 (=> (not res!51976) (not e!67861))))

(declare-fun lt!53207 () List!1592)

(assert (=> d!28175 (= res!51976 (isStrictlySorted!295 lt!53207))))

(declare-fun e!67863 () List!1592)

(assert (=> d!28175 (= lt!53207 e!67863)))

(declare-fun c!18017 () Bool)

(assert (=> d!28175 (= c!18017 (and ((_ is Cons!1588) (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (bvslt (_1!1188 (h!2184 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (=> d!28175 (isStrictlySorted!295 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))))))

(assert (=> d!28175 (= (insertStrictlySorted!75 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!53207)))

(declare-fun bm!10935 () Bool)

(declare-fun call!10938 () List!1592)

(assert (=> bm!10935 (= call!10938 ($colon$colon!79 e!67862 (ite c!18017 (h!2184 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (tuple2!2355 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun c!18019 () Bool)

(assert (=> bm!10935 (= c!18019 c!18017)))

(declare-fun b!104218 () Bool)

(declare-fun c!18020 () Bool)

(declare-fun c!18018 () Bool)

(assert (=> b!104218 (= e!67862 (ite c!18020 (t!5646 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (ite c!18018 (Cons!1588 (h!2184 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (t!5646 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))))) Nil!1589)))))

(declare-fun b!104219 () Bool)

(assert (=> b!104219 (= c!18018 (and ((_ is Cons!1588) (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (bvsgt (_1!1188 (h!2184 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (=> b!104219 (= e!67860 e!67859)))

(declare-fun bm!10936 () Bool)

(assert (=> bm!10936 (= call!10939 call!10940)))

(declare-fun b!104220 () Bool)

(assert (=> b!104220 (= e!67859 call!10939)))

(declare-fun bm!10937 () Bool)

(assert (=> bm!10937 (= call!10940 call!10938)))

(declare-fun b!104221 () Bool)

(assert (=> b!104221 (= e!67861 (contains!812 lt!53207 (tuple2!2355 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_2!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104222 () Bool)

(declare-fun res!51975 () Bool)

(assert (=> b!104222 (=> (not res!51975) (not e!67861))))

(assert (=> b!104222 (= res!51975 (containsKey!159 lt!53207 (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104223 () Bool)

(assert (=> b!104223 (= e!67863 e!67860)))

(assert (=> b!104223 (= c!18020 (and ((_ is Cons!1588) (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770)))) (= (_1!1188 (h!2184 (toList!779 (ite c!17771 call!10773 (ite c!17773 call!10771 call!10770))))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104224 () Bool)

(assert (=> b!104224 (= e!67863 call!10938)))

(assert (= (and d!28175 c!18017) b!104224))

(assert (= (and d!28175 (not c!18017)) b!104223))

(assert (= (and b!104223 c!18020) b!104217))

(assert (= (and b!104223 (not c!18020)) b!104219))

(assert (= (and b!104219 c!18018) b!104220))

(assert (= (and b!104219 (not c!18018)) b!104215))

(assert (= (or b!104220 b!104215) bm!10936))

(assert (= (or b!104217 bm!10936) bm!10937))

(assert (= (or b!104224 bm!10937) bm!10935))

(assert (= (and bm!10935 c!18019) b!104216))

(assert (= (and bm!10935 (not c!18019)) b!104218))

(assert (= (and d!28175 res!51976) b!104222))

(assert (= (and b!104222 res!51975) b!104221))

(declare-fun m!115605 () Bool)

(assert (=> d!28175 m!115605))

(declare-fun m!115607 () Bool)

(assert (=> d!28175 m!115607))

(declare-fun m!115609 () Bool)

(assert (=> b!104221 m!115609))

(declare-fun m!115611 () Bool)

(assert (=> b!104222 m!115611))

(declare-fun m!115613 () Bool)

(assert (=> b!104216 m!115613))

(declare-fun m!115615 () Bool)

(assert (=> bm!10935 m!115615))

(assert (=> d!27957 d!28175))

(declare-fun d!28177 () Bool)

(declare-fun lt!53208 () Bool)

(assert (=> d!28177 (= lt!53208 (select (content!108 lt!52561) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun e!67864 () Bool)

(assert (=> d!28177 (= lt!53208 e!67864)))

(declare-fun res!51977 () Bool)

(assert (=> d!28177 (=> (not res!51977) (not e!67864))))

(assert (=> d!28177 (= res!51977 ((_ is Cons!1588) lt!52561))))

(assert (=> d!28177 (= (contains!812 lt!52561 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))) lt!53208)))

(declare-fun b!104225 () Bool)

(declare-fun e!67865 () Bool)

(assert (=> b!104225 (= e!67864 e!67865)))

(declare-fun res!51978 () Bool)

(assert (=> b!104225 (=> res!51978 e!67865)))

(assert (=> b!104225 (= res!51978 (= (h!2184 lt!52561) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!104226 () Bool)

(assert (=> b!104226 (= e!67865 (contains!812 (t!5646 lt!52561) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(assert (= (and d!28177 res!51977) b!104225))

(assert (= (and b!104225 (not res!51978)) b!104226))

(declare-fun m!115617 () Bool)

(assert (=> d!28177 m!115617))

(declare-fun m!115619 () Bool)

(assert (=> d!28177 m!115619))

(declare-fun m!115621 () Bool)

(assert (=> b!104226 m!115621))

(assert (=> b!103786 d!28177))

(assert (=> d!27861 d!27919))

(declare-fun d!28179 () Bool)

(declare-fun e!67868 () Bool)

(assert (=> d!28179 e!67868))

(declare-fun res!51984 () Bool)

(assert (=> d!28179 (=> (not res!51984) (not e!67868))))

(declare-fun lt!53211 () SeekEntryResult!252)

(assert (=> d!28179 (= res!51984 ((_ is Found!252) lt!53211))))

(assert (=> d!28179 (= lt!53211 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(assert (=> d!28179 true))

(declare-fun _$33!87 () Unit!3132)

(assert (=> d!28179 (= (choose!649 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) _$33!87)))

(declare-fun b!104231 () Bool)

(declare-fun res!51983 () Bool)

(assert (=> b!104231 (=> (not res!51983) (not e!67868))))

(assert (=> b!104231 (= res!51983 (inRange!0 (index!3156 lt!53211) (mask!6696 newMap!16)))))

(declare-fun b!104232 () Bool)

(assert (=> b!104232 (= e!67868 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!53211)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28179 res!51984) b!104231))

(assert (= (and b!104231 res!51983) b!104232))

(assert (=> d!28179 m!113915))

(assert (=> d!28179 m!114279))

(declare-fun m!115623 () Bool)

(assert (=> b!104231 m!115623))

(declare-fun m!115625 () Bool)

(assert (=> b!104232 m!115625))

(assert (=> d!27861 d!28179))

(assert (=> d!27861 d!28055))

(declare-fun d!28181 () Bool)

(assert (=> d!28181 (= (size!2308 newMap!16) (bvadd (_size!495 newMap!16) (bvsdiv (bvadd (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!103603 d!28181))

(declare-fun d!28183 () Bool)

(assert (=> d!28183 (= (apply!97 lt!53086 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!53086) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4285 () Bool)

(assert (= bs!4285 d!28183))

(assert (=> bs!4285 m!115165))

(assert (=> bs!4285 m!115165))

(declare-fun m!115627 () Bool)

(assert (=> bs!4285 m!115627))

(assert (=> b!103947 d!28183))

(declare-fun d!28185 () Bool)

(declare-fun lt!53212 () Bool)

(assert (=> d!28185 (= lt!53212 (select (content!108 lt!52876) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun e!67869 () Bool)

(assert (=> d!28185 (= lt!53212 e!67869)))

(declare-fun res!51985 () Bool)

(assert (=> d!28185 (=> (not res!51985) (not e!67869))))

(assert (=> d!28185 (= res!51985 ((_ is Cons!1588) lt!52876))))

(assert (=> d!28185 (= (contains!812 lt!52876 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))) lt!53212)))

(declare-fun b!104233 () Bool)

(declare-fun e!67870 () Bool)

(assert (=> b!104233 (= e!67869 e!67870)))

(declare-fun res!51986 () Bool)

(assert (=> b!104233 (=> res!51986 e!67870)))

(assert (=> b!104233 (= res!51986 (= (h!2184 lt!52876) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!104234 () Bool)

(assert (=> b!104234 (= e!67870 (contains!812 (t!5646 lt!52876) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(assert (= (and d!28185 res!51985) b!104233))

(assert (= (and b!104233 (not res!51986)) b!104234))

(declare-fun m!115629 () Bool)

(assert (=> d!28185 m!115629))

(declare-fun m!115631 () Bool)

(assert (=> d!28185 m!115631))

(declare-fun m!115633 () Bool)

(assert (=> b!104234 m!115633))

(assert (=> b!103731 d!28185))

(declare-fun d!28187 () Bool)

(declare-fun e!67871 () Bool)

(assert (=> d!28187 e!67871))

(declare-fun res!51987 () Bool)

(assert (=> d!28187 (=> (not res!51987) (not e!67871))))

(declare-fun lt!53215 () ListLongMap!1527)

(assert (=> d!28187 (= res!51987 (contains!811 lt!53215 (_1!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun lt!53214 () List!1592)

(assert (=> d!28187 (= lt!53215 (ListLongMap!1528 lt!53214))))

(declare-fun lt!53213 () Unit!3132)

(declare-fun lt!53216 () Unit!3132)

(assert (=> d!28187 (= lt!53213 lt!53216)))

(assert (=> d!28187 (= (getValueByKey!156 lt!53214 (_1!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!28187 (= lt!53216 (lemmaContainsTupThenGetReturnValue!72 lt!53214 (_1!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!28187 (= lt!53214 (insertStrictlySorted!75 (toList!779 (ite c!17833 call!10859 (ite c!17835 call!10857 call!10856))) (_1!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!28187 (= (+!137 (ite c!17833 call!10859 (ite c!17835 call!10857 call!10856)) (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) lt!53215)))

(declare-fun b!104235 () Bool)

(declare-fun res!51988 () Bool)

(assert (=> b!104235 (=> (not res!51988) (not e!67871))))

(assert (=> b!104235 (= res!51988 (= (getValueByKey!156 (toList!779 lt!53215) (_1!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))))

(declare-fun b!104236 () Bool)

(assert (=> b!104236 (= e!67871 (contains!812 (toList!779 lt!53215) (ite (or c!17833 c!17835) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (= (and d!28187 res!51987) b!104235))

(assert (= (and b!104235 res!51988) b!104236))

(declare-fun m!115635 () Bool)

(assert (=> d!28187 m!115635))

(declare-fun m!115637 () Bool)

(assert (=> d!28187 m!115637))

(declare-fun m!115639 () Bool)

(assert (=> d!28187 m!115639))

(declare-fun m!115641 () Bool)

(assert (=> d!28187 m!115641))

(declare-fun m!115643 () Bool)

(assert (=> b!104235 m!115643))

(declare-fun m!115645 () Bool)

(assert (=> b!104236 m!115645))

(assert (=> bm!10852 d!28187))

(declare-fun d!28189 () Bool)

(assert (=> d!28189 (= (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624)) (not (isEmpty!375 (getValueByKey!156 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))))

(declare-fun bs!4286 () Bool)

(assert (= bs!4286 d!28189))

(assert (=> bs!4286 m!114599))

(declare-fun m!115647 () Bool)

(assert (=> bs!4286 m!115647))

(assert (=> b!103705 d!28189))

(declare-fun e!67873 () Option!162)

(declare-fun b!104239 () Bool)

(assert (=> b!104239 (= e!67873 (getValueByKey!156 (t!5646 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!52624))))

(declare-fun b!104238 () Bool)

(declare-fun e!67872 () Option!162)

(assert (=> b!104238 (= e!67872 e!67873)))

(declare-fun c!18022 () Bool)

(assert (=> b!104238 (= c!18022 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52624))))))

(declare-fun b!104237 () Bool)

(assert (=> b!104237 (= e!67872 (Some!161 (_2!1188 (h!2184 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun d!28191 () Bool)

(declare-fun c!18021 () Bool)

(assert (=> d!28191 (= c!18021 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52624)))))

(assert (=> d!28191 (= (getValueByKey!156 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624) e!67872)))

(declare-fun b!104240 () Bool)

(assert (=> b!104240 (= e!67873 None!160)))

(assert (= (and d!28191 c!18021) b!104237))

(assert (= (and d!28191 (not c!18021)) b!104238))

(assert (= (and b!104238 c!18022) b!104239))

(assert (= (and b!104238 (not c!18022)) b!104240))

(declare-fun m!115649 () Bool)

(assert (=> b!104239 m!115649))

(assert (=> b!103705 d!28191))

(declare-fun d!28193 () Bool)

(declare-fun e!67874 () Bool)

(assert (=> d!28193 e!67874))

(declare-fun res!51989 () Bool)

(assert (=> d!28193 (=> (not res!51989) (not e!67874))))

(declare-fun lt!53219 () ListLongMap!1527)

(assert (=> d!28193 (= res!51989 (contains!811 lt!53219 (_1!1188 (tuple2!2355 lt!52756 lt!52754))))))

(declare-fun lt!53218 () List!1592)

(assert (=> d!28193 (= lt!53219 (ListLongMap!1528 lt!53218))))

(declare-fun lt!53217 () Unit!3132)

(declare-fun lt!53220 () Unit!3132)

(assert (=> d!28193 (= lt!53217 lt!53220)))

(assert (=> d!28193 (= (getValueByKey!156 lt!53218 (_1!1188 (tuple2!2355 lt!52756 lt!52754))) (Some!161 (_2!1188 (tuple2!2355 lt!52756 lt!52754))))))

(assert (=> d!28193 (= lt!53220 (lemmaContainsTupThenGetReturnValue!72 lt!53218 (_1!1188 (tuple2!2355 lt!52756 lt!52754)) (_2!1188 (tuple2!2355 lt!52756 lt!52754))))))

(assert (=> d!28193 (= lt!53218 (insertStrictlySorted!75 (toList!779 lt!52759) (_1!1188 (tuple2!2355 lt!52756 lt!52754)) (_2!1188 (tuple2!2355 lt!52756 lt!52754))))))

(assert (=> d!28193 (= (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754)) lt!53219)))

(declare-fun b!104241 () Bool)

(declare-fun res!51990 () Bool)

(assert (=> b!104241 (=> (not res!51990) (not e!67874))))

(assert (=> b!104241 (= res!51990 (= (getValueByKey!156 (toList!779 lt!53219) (_1!1188 (tuple2!2355 lt!52756 lt!52754))) (Some!161 (_2!1188 (tuple2!2355 lt!52756 lt!52754)))))))

(declare-fun b!104242 () Bool)

(assert (=> b!104242 (= e!67874 (contains!812 (toList!779 lt!53219) (tuple2!2355 lt!52756 lt!52754)))))

(assert (= (and d!28193 res!51989) b!104241))

(assert (= (and b!104241 res!51990) b!104242))

(declare-fun m!115651 () Bool)

(assert (=> d!28193 m!115651))

(declare-fun m!115653 () Bool)

(assert (=> d!28193 m!115653))

(declare-fun m!115655 () Bool)

(assert (=> d!28193 m!115655))

(declare-fun m!115657 () Bool)

(assert (=> d!28193 m!115657))

(declare-fun m!115659 () Bool)

(assert (=> b!104241 m!115659))

(declare-fun m!115661 () Bool)

(assert (=> b!104242 m!115661))

(assert (=> b!103529 d!28193))

(declare-fun d!28195 () Bool)

(declare-fun c!18023 () Bool)

(assert (=> d!28195 (= c!18023 ((_ is ValueCellFull!992) (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!67875 () V!3209)

(assert (=> d!28195 (= (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67875)))

(declare-fun b!104243 () Bool)

(assert (=> b!104243 (= e!67875 (get!1329 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104244 () Bool)

(assert (=> b!104244 (= e!67875 (get!1330 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28195 c!18023) b!104243))

(assert (= (and d!28195 (not c!18023)) b!104244))

(assert (=> b!104243 m!114353))

(assert (=> b!104243 m!113945))

(declare-fun m!115663 () Bool)

(assert (=> b!104243 m!115663))

(assert (=> b!104244 m!114353))

(assert (=> b!104244 m!113945))

(declare-fun m!115665 () Bool)

(assert (=> b!104244 m!115665))

(assert (=> b!103529 d!28195))

(declare-fun d!28197 () Bool)

(declare-fun e!67876 () Bool)

(assert (=> d!28197 e!67876))

(declare-fun res!51991 () Bool)

(assert (=> d!28197 (=> (not res!51991) (not e!67876))))

(declare-fun lt!53223 () ListLongMap!1527)

(assert (=> d!28197 (= res!51991 (contains!811 lt!53223 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53222 () List!1592)

(assert (=> d!28197 (= lt!53223 (ListLongMap!1528 lt!53222))))

(declare-fun lt!53221 () Unit!3132)

(declare-fun lt!53224 () Unit!3132)

(assert (=> d!28197 (= lt!53221 lt!53224)))

(assert (=> d!28197 (= (getValueByKey!156 lt!53222 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28197 (= lt!53224 (lemmaContainsTupThenGetReturnValue!72 lt!53222 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28197 (= lt!53222 (insertStrictlySorted!75 (toList!779 call!10852) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28197 (= (+!137 call!10852 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53223)))

(declare-fun b!104245 () Bool)

(declare-fun res!51992 () Bool)

(assert (=> b!104245 (=> (not res!51992) (not e!67876))))

(assert (=> b!104245 (= res!51992 (= (getValueByKey!156 (toList!779 lt!53223) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104246 () Bool)

(assert (=> b!104246 (= e!67876 (contains!812 (toList!779 lt!53223) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28197 res!51991) b!104245))

(assert (= (and b!104245 res!51992) b!104246))

(declare-fun m!115667 () Bool)

(assert (=> d!28197 m!115667))

(declare-fun m!115669 () Bool)

(assert (=> d!28197 m!115669))

(declare-fun m!115671 () Bool)

(assert (=> d!28197 m!115671))

(declare-fun m!115673 () Bool)

(assert (=> d!28197 m!115673))

(declare-fun m!115675 () Bool)

(assert (=> b!104245 m!115675))

(declare-fun m!115677 () Bool)

(assert (=> b!104246 m!115677))

(assert (=> b!103529 d!28197))

(declare-fun d!28199 () Bool)

(declare-fun e!67878 () Bool)

(assert (=> d!28199 e!67878))

(declare-fun res!51993 () Bool)

(assert (=> d!28199 (=> res!51993 e!67878)))

(declare-fun lt!53228 () Bool)

(assert (=> d!28199 (= res!51993 (not lt!53228))))

(declare-fun lt!53225 () Bool)

(assert (=> d!28199 (= lt!53228 lt!53225)))

(declare-fun lt!53226 () Unit!3132)

(declare-fun e!67877 () Unit!3132)

(assert (=> d!28199 (= lt!53226 e!67877)))

(declare-fun c!18024 () Bool)

(assert (=> d!28199 (= c!18024 lt!53225)))

(assert (=> d!28199 (= lt!53225 (containsKey!159 (toList!779 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754))) lt!52753))))

(assert (=> d!28199 (= (contains!811 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754)) lt!52753) lt!53228)))

(declare-fun b!104247 () Bool)

(declare-fun lt!53227 () Unit!3132)

(assert (=> b!104247 (= e!67877 lt!53227)))

(assert (=> b!104247 (= lt!53227 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754))) lt!52753))))

(assert (=> b!104247 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754))) lt!52753))))

(declare-fun b!104248 () Bool)

(declare-fun Unit!3176 () Unit!3132)

(assert (=> b!104248 (= e!67877 Unit!3176)))

(declare-fun b!104249 () Bool)

(assert (=> b!104249 (= e!67878 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754))) lt!52753)))))

(assert (= (and d!28199 c!18024) b!104247))

(assert (= (and d!28199 (not c!18024)) b!104248))

(assert (= (and d!28199 (not res!51993)) b!104249))

(declare-fun m!115679 () Bool)

(assert (=> d!28199 m!115679))

(declare-fun m!115681 () Bool)

(assert (=> b!104247 m!115681))

(declare-fun m!115683 () Bool)

(assert (=> b!104247 m!115683))

(assert (=> b!104247 m!115683))

(declare-fun m!115685 () Bool)

(assert (=> b!104247 m!115685))

(assert (=> b!104249 m!115683))

(assert (=> b!104249 m!115683))

(assert (=> b!104249 m!115685))

(assert (=> b!103529 d!28199))

(declare-fun d!28201 () Bool)

(assert (=> d!28201 (not (contains!811 (+!137 lt!52759 (tuple2!2355 lt!52756 lt!52754)) lt!52753))))

(declare-fun lt!53229 () Unit!3132)

(assert (=> d!28201 (= lt!53229 (choose!656 lt!52759 lt!52756 lt!52754 lt!52753))))

(declare-fun e!67879 () Bool)

(assert (=> d!28201 e!67879))

(declare-fun res!51994 () Bool)

(assert (=> d!28201 (=> (not res!51994) (not e!67879))))

(assert (=> d!28201 (= res!51994 (not (contains!811 lt!52759 lt!52753)))))

(assert (=> d!28201 (= (addStillNotContains!47 lt!52759 lt!52756 lt!52754 lt!52753) lt!53229)))

(declare-fun b!104250 () Bool)

(assert (=> b!104250 (= e!67879 (not (= lt!52756 lt!52753)))))

(assert (= (and d!28201 res!51994) b!104250))

(assert (=> d!28201 m!114357))

(assert (=> d!28201 m!114357))

(assert (=> d!28201 m!114359))

(declare-fun m!115687 () Bool)

(assert (=> d!28201 m!115687))

(declare-fun m!115689 () Bool)

(assert (=> d!28201 m!115689))

(assert (=> b!103529 d!28201))

(declare-fun d!28203 () Bool)

(declare-fun lt!53230 () Bool)

(assert (=> d!28203 (= lt!53230 (select (content!108 (toList!779 lt!52751)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67880 () Bool)

(assert (=> d!28203 (= lt!53230 e!67880)))

(declare-fun res!51995 () Bool)

(assert (=> d!28203 (=> (not res!51995) (not e!67880))))

(assert (=> d!28203 (= res!51995 ((_ is Cons!1588) (toList!779 lt!52751)))))

(assert (=> d!28203 (= (contains!812 (toList!779 lt!52751) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53230)))

(declare-fun b!104251 () Bool)

(declare-fun e!67881 () Bool)

(assert (=> b!104251 (= e!67880 e!67881)))

(declare-fun res!51996 () Bool)

(assert (=> b!104251 (=> res!51996 e!67881)))

(assert (=> b!104251 (= res!51996 (= (h!2184 (toList!779 lt!52751)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104252 () Bool)

(assert (=> b!104252 (= e!67881 (contains!812 (t!5646 (toList!779 lt!52751)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28203 res!51995) b!104251))

(assert (= (and b!104251 (not res!51996)) b!104252))

(declare-fun m!115691 () Bool)

(assert (=> d!28203 m!115691))

(declare-fun m!115693 () Bool)

(assert (=> d!28203 m!115693))

(declare-fun m!115695 () Bool)

(assert (=> b!104252 m!115695))

(assert (=> b!103524 d!28203))

(declare-fun d!28205 () Bool)

(declare-fun e!67882 () Bool)

(assert (=> d!28205 e!67882))

(declare-fun res!51997 () Bool)

(assert (=> d!28205 (=> (not res!51997) (not e!67882))))

(declare-fun lt!53233 () ListLongMap!1527)

(assert (=> d!28205 (= res!51997 (contains!811 lt!53233 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(declare-fun lt!53232 () List!1592)

(assert (=> d!28205 (= lt!53233 (ListLongMap!1528 lt!53232))))

(declare-fun lt!53231 () Unit!3132)

(declare-fun lt!53234 () Unit!3132)

(assert (=> d!28205 (= lt!53231 lt!53234)))

(assert (=> d!28205 (= (getValueByKey!156 lt!53232 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28205 (= lt!53234 (lemmaContainsTupThenGetReturnValue!72 lt!53232 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28205 (= lt!53232 (insertStrictlySorted!75 (toList!779 call!10877) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (=> d!28205 (= (+!137 call!10877 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))) lt!53233)))

(declare-fun b!104253 () Bool)

(declare-fun res!51998 () Bool)

(assert (=> b!104253 (=> (not res!51998) (not e!67882))))

(assert (=> b!104253 (= res!51998 (= (getValueByKey!156 (toList!779 lt!53233) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(declare-fun b!104254 () Bool)

(assert (=> b!104254 (= e!67882 (contains!812 (toList!779 lt!53233) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))

(assert (= (and d!28205 res!51997) b!104253))

(assert (= (and b!104253 res!51998) b!104254))

(declare-fun m!115697 () Bool)

(assert (=> d!28205 m!115697))

(declare-fun m!115699 () Bool)

(assert (=> d!28205 m!115699))

(declare-fun m!115701 () Bool)

(assert (=> d!28205 m!115701))

(declare-fun m!115703 () Bool)

(assert (=> d!28205 m!115703))

(declare-fun m!115705 () Bool)

(assert (=> b!104253 m!115705))

(declare-fun m!115707 () Bool)

(assert (=> b!104254 m!115707))

(assert (=> b!103681 d!28205))

(declare-fun d!28207 () Bool)

(assert (=> d!28207 (= ($colon$colon!79 e!67610 (ite c!17905 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444)))) (Cons!1588 (ite c!17905 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))) e!67610))))

(assert (=> bm!10883 d!28207))

(declare-fun d!28209 () Bool)

(declare-fun res!51999 () Bool)

(declare-fun e!67883 () Bool)

(assert (=> d!28209 (=> res!51999 e!67883)))

(assert (=> d!28209 (= res!51999 (or ((_ is Nil!1589) lt!52876) ((_ is Nil!1589) (t!5646 lt!52876))))))

(assert (=> d!28209 (= (isStrictlySorted!295 lt!52876) e!67883)))

(declare-fun b!104255 () Bool)

(declare-fun e!67884 () Bool)

(assert (=> b!104255 (= e!67883 e!67884)))

(declare-fun res!52000 () Bool)

(assert (=> b!104255 (=> (not res!52000) (not e!67884))))

(assert (=> b!104255 (= res!52000 (bvslt (_1!1188 (h!2184 lt!52876)) (_1!1188 (h!2184 (t!5646 lt!52876)))))))

(declare-fun b!104256 () Bool)

(assert (=> b!104256 (= e!67884 (isStrictlySorted!295 (t!5646 lt!52876)))))

(assert (= (and d!28209 (not res!51999)) b!104255))

(assert (= (and b!104255 res!52000) b!104256))

(declare-fun m!115709 () Bool)

(assert (=> b!104256 m!115709))

(assert (=> d!27901 d!28209))

(declare-fun d!28211 () Bool)

(declare-fun res!52001 () Bool)

(declare-fun e!67885 () Bool)

(assert (=> d!28211 (=> res!52001 e!67885)))

(assert (=> d!28211 (= res!52001 (or ((_ is Nil!1589) (toList!779 (+!137 lt!52441 lt!52442))) ((_ is Nil!1589) (t!5646 (toList!779 (+!137 lt!52441 lt!52442))))))))

(assert (=> d!28211 (= (isStrictlySorted!295 (toList!779 (+!137 lt!52441 lt!52442))) e!67885)))

(declare-fun b!104257 () Bool)

(declare-fun e!67886 () Bool)

(assert (=> b!104257 (= e!67885 e!67886)))

(declare-fun res!52002 () Bool)

(assert (=> b!104257 (=> (not res!52002) (not e!67886))))

(assert (=> b!104257 (= res!52002 (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52442)))) (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))))))))

(declare-fun b!104258 () Bool)

(assert (=> b!104258 (= e!67886 (isStrictlySorted!295 (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))))))

(assert (= (and d!28211 (not res!52001)) b!104257))

(assert (= (and b!104257 res!52002) b!104258))

(declare-fun m!115711 () Bool)

(assert (=> b!104258 m!115711))

(assert (=> d!27901 d!28211))

(declare-fun d!28213 () Bool)

(assert (=> d!28213 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53235 () Unit!3132)

(assert (=> d!28213 (= lt!53235 (choose!654 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67887 () Bool)

(assert (=> d!28213 e!67887))

(declare-fun res!52003 () Bool)

(assert (=> d!28213 (=> (not res!52003) (not e!67887))))

(assert (=> d!28213 (= res!52003 (isStrictlySorted!295 (toList!779 lt!52641)))))

(assert (=> d!28213 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53235)))

(declare-fun b!104259 () Bool)

(assert (=> b!104259 (= e!67887 (containsKey!159 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28213 res!52003) b!104259))

(assert (=> d!28213 m!114103))

(assert (=> d!28213 m!114455))

(assert (=> d!28213 m!114455))

(assert (=> d!28213 m!114457))

(assert (=> d!28213 m!114103))

(declare-fun m!115713 () Bool)

(assert (=> d!28213 m!115713))

(assert (=> d!28213 m!115239))

(assert (=> b!104259 m!114103))

(assert (=> b!104259 m!114451))

(assert (=> b!103578 d!28213))

(assert (=> b!103578 d!28033))

(assert (=> b!103578 d!28035))

(declare-fun d!28215 () Bool)

(assert (=> d!28215 (= (get!1331 (getValueByKey!156 (toList!779 lt!52639) lt!52627)) (v!2882 (getValueByKey!156 (toList!779 lt!52639) lt!52627)))))

(assert (=> d!27887 d!28215))

(declare-fun b!104262 () Bool)

(declare-fun e!67889 () Option!162)

(assert (=> b!104262 (= e!67889 (getValueByKey!156 (t!5646 (toList!779 lt!52639)) lt!52627))))

(declare-fun b!104261 () Bool)

(declare-fun e!67888 () Option!162)

(assert (=> b!104261 (= e!67888 e!67889)))

(declare-fun c!18026 () Bool)

(assert (=> b!104261 (= c!18026 (and ((_ is Cons!1588) (toList!779 lt!52639)) (not (= (_1!1188 (h!2184 (toList!779 lt!52639))) lt!52627))))))

(declare-fun b!104260 () Bool)

(assert (=> b!104260 (= e!67888 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52639)))))))

(declare-fun d!28217 () Bool)

(declare-fun c!18025 () Bool)

(assert (=> d!28217 (= c!18025 (and ((_ is Cons!1588) (toList!779 lt!52639)) (= (_1!1188 (h!2184 (toList!779 lt!52639))) lt!52627)))))

(assert (=> d!28217 (= (getValueByKey!156 (toList!779 lt!52639) lt!52627) e!67888)))

(declare-fun b!104263 () Bool)

(assert (=> b!104263 (= e!67889 None!160)))

(assert (= (and d!28217 c!18025) b!104260))

(assert (= (and d!28217 (not c!18025)) b!104261))

(assert (= (and b!104261 c!18026) b!104262))

(assert (= (and b!104261 (not c!18026)) b!104263))

(declare-fun m!115715 () Bool)

(assert (=> b!104262 m!115715))

(assert (=> d!27887 d!28217))

(declare-fun lt!53236 () Bool)

(declare-fun d!28219 () Bool)

(assert (=> d!28219 (= lt!53236 (select (content!108 (toList!779 lt!52858)) (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67890 () Bool)

(assert (=> d!28219 (= lt!53236 e!67890)))

(declare-fun res!52004 () Bool)

(assert (=> d!28219 (=> (not res!52004) (not e!67890))))

(assert (=> d!28219 (= res!52004 ((_ is Cons!1588) (toList!779 lt!52858)))))

(assert (=> d!28219 (= (contains!812 (toList!779 lt!52858) (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53236)))

(declare-fun b!104264 () Bool)

(declare-fun e!67891 () Bool)

(assert (=> b!104264 (= e!67890 e!67891)))

(declare-fun res!52005 () Bool)

(assert (=> b!104264 (=> res!52005 e!67891)))

(assert (=> b!104264 (= res!52005 (= (h!2184 (toList!779 lt!52858)) (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104265 () Bool)

(assert (=> b!104265 (= e!67891 (contains!812 (t!5646 (toList!779 lt!52858)) (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28219 res!52004) b!104264))

(assert (= (and b!104264 (not res!52005)) b!104265))

(declare-fun m!115717 () Bool)

(assert (=> d!28219 m!115717))

(declare-fun m!115719 () Bool)

(assert (=> d!28219 m!115719))

(declare-fun m!115721 () Bool)

(assert (=> b!104265 m!115721))

(assert (=> b!103710 d!28219))

(declare-fun d!28221 () Bool)

(declare-fun lt!53237 () Bool)

(assert (=> d!28221 (= lt!53237 (select (content!108 (toList!779 lt!52941)) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!67892 () Bool)

(assert (=> d!28221 (= lt!53237 e!67892)))

(declare-fun res!52006 () Bool)

(assert (=> d!28221 (=> (not res!52006) (not e!67892))))

(assert (=> d!28221 (= res!52006 ((_ is Cons!1588) (toList!779 lt!52941)))))

(assert (=> d!28221 (= (contains!812 (toList!779 lt!52941) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53237)))

(declare-fun b!104266 () Bool)

(declare-fun e!67893 () Bool)

(assert (=> b!104266 (= e!67892 e!67893)))

(declare-fun res!52007 () Bool)

(assert (=> b!104266 (=> res!52007 e!67893)))

(assert (=> b!104266 (= res!52007 (= (h!2184 (toList!779 lt!52941)) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104267 () Bool)

(assert (=> b!104267 (= e!67893 (contains!812 (t!5646 (toList!779 lt!52941)) (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28221 res!52006) b!104266))

(assert (= (and b!104266 (not res!52007)) b!104267))

(declare-fun m!115723 () Bool)

(assert (=> d!28221 m!115723))

(declare-fun m!115725 () Bool)

(assert (=> d!28221 m!115725))

(declare-fun m!115727 () Bool)

(assert (=> b!104267 m!115727))

(assert (=> b!103830 d!28221))

(declare-fun d!28223 () Bool)

(declare-fun res!52008 () Bool)

(declare-fun e!67894 () Bool)

(assert (=> d!28223 (=> (not res!52008) (not e!67894))))

(assert (=> d!28223 (= res!52008 (validMask!0 (mask!6696 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> d!28223 (= (simpleValid!73 (v!2876 (underlying!358 thiss!992))) e!67894)))

(declare-fun b!104270 () Bool)

(declare-fun res!52010 () Bool)

(assert (=> b!104270 (=> (not res!52010) (not e!67894))))

(assert (=> b!104270 (= res!52010 (= (size!2308 (v!2876 (underlying!358 thiss!992))) (bvadd (_size!495 (v!2876 (underlying!358 thiss!992))) (bvsdiv (bvadd (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!104269 () Bool)

(declare-fun res!52009 () Bool)

(assert (=> b!104269 (=> (not res!52009) (not e!67894))))

(assert (=> b!104269 (= res!52009 (bvsge (size!2308 (v!2876 (underlying!358 thiss!992))) (_size!495 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!104271 () Bool)

(assert (=> b!104271 (= e!67894 (and (bvsge (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2369 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!495 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!104268 () Bool)

(declare-fun res!52011 () Bool)

(assert (=> b!104268 (=> (not res!52011) (not e!67894))))

(assert (=> b!104268 (= res!52011 (and (= (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001)) (= (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (size!2303 (_values!2543 (v!2876 (underlying!358 thiss!992))))) (bvsge (_size!495 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!495 (v!2876 (underlying!358 thiss!992))) (bvadd (mask!6696 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001))))))

(assert (= (and d!28223 res!52008) b!104268))

(assert (= (and b!104268 res!52011) b!104269))

(assert (= (and b!104269 res!52009) b!104270))

(assert (= (and b!104270 res!52010) b!104271))

(assert (=> d!28223 m!113953))

(declare-fun m!115729 () Bool)

(assert (=> b!104270 m!115729))

(assert (=> b!104269 m!115729))

(assert (=> d!27983 d!28223))

(declare-fun d!28225 () Bool)

(assert (=> d!28225 (= (inRange!0 (ite c!17824 (index!3155 lt!52748) (index!3158 lt!52748)) (mask!6696 newMap!16)) (and (bvsge (ite c!17824 (index!3155 lt!52748) (index!3158 lt!52748)) #b00000000000000000000000000000000) (bvslt (ite c!17824 (index!3155 lt!52748) (index!3158 lt!52748)) (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10848 d!28225))

(declare-fun d!28227 () Bool)

(assert (=> d!28227 (arrayContainsKey!0 (_keys!4262 newMap!16) lt!52795 #b00000000000000000000000000000000)))

(declare-fun lt!53240 () Unit!3132)

(declare-fun choose!13 (array!4317 (_ BitVec 64) (_ BitVec 32)) Unit!3132)

(assert (=> d!28227 (= lt!53240 (choose!13 (_keys!4262 newMap!16) lt!52795 #b00000000000000000000000000000000))))

(assert (=> d!28227 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!28227 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4262 newMap!16) lt!52795 #b00000000000000000000000000000000) lt!53240)))

(declare-fun bs!4287 () Bool)

(assert (= bs!4287 d!28227))

(assert (=> bs!4287 m!114447))

(declare-fun m!115731 () Bool)

(assert (=> bs!4287 m!115731))

(assert (=> b!103577 d!28227))

(declare-fun d!28229 () Bool)

(declare-fun res!52012 () Bool)

(declare-fun e!67895 () Bool)

(assert (=> d!28229 (=> res!52012 e!67895)))

(assert (=> d!28229 (= res!52012 (= (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) lt!52795))))

(assert (=> d!28229 (= (arrayContainsKey!0 (_keys!4262 newMap!16) lt!52795 #b00000000000000000000000000000000) e!67895)))

(declare-fun b!104272 () Bool)

(declare-fun e!67896 () Bool)

(assert (=> b!104272 (= e!67895 e!67896)))

(declare-fun res!52013 () Bool)

(assert (=> b!104272 (=> (not res!52013) (not e!67896))))

(assert (=> b!104272 (= res!52013 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104273 () Bool)

(assert (=> b!104273 (= e!67896 (arrayContainsKey!0 (_keys!4262 newMap!16) lt!52795 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28229 (not res!52012)) b!104272))

(assert (= (and b!104272 res!52013) b!104273))

(assert (=> d!28229 m!114381))

(declare-fun m!115733 () Bool)

(assert (=> b!104273 m!115733))

(assert (=> b!103577 d!28229))

(declare-fun b!104274 () Bool)

(declare-fun c!18027 () Bool)

(declare-fun lt!53241 () (_ BitVec 64))

(assert (=> b!104274 (= c!18027 (= lt!53241 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67898 () SeekEntryResult!252)

(declare-fun e!67897 () SeekEntryResult!252)

(assert (=> b!104274 (= e!67898 e!67897)))

(declare-fun b!104275 () Bool)

(declare-fun e!67899 () SeekEntryResult!252)

(assert (=> b!104275 (= e!67899 e!67898)))

(declare-fun lt!53243 () SeekEntryResult!252)

(assert (=> b!104275 (= lt!53241 (select (arr!2048 (_keys!4262 newMap!16)) (index!3157 lt!53243)))))

(declare-fun c!18028 () Bool)

(assert (=> b!104275 (= c!18028 (= lt!53241 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!28231 () Bool)

(declare-fun lt!53242 () SeekEntryResult!252)

(assert (=> d!28231 (and (or ((_ is Undefined!252) lt!53242) (not ((_ is Found!252) lt!53242)) (and (bvsge (index!3156 lt!53242) #b00000000000000000000000000000000) (bvslt (index!3156 lt!53242) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!53242) ((_ is Found!252) lt!53242) (not ((_ is MissingZero!252) lt!53242)) (and (bvsge (index!3155 lt!53242) #b00000000000000000000000000000000) (bvslt (index!3155 lt!53242) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!53242) ((_ is Found!252) lt!53242) ((_ is MissingZero!252) lt!53242) (not ((_ is MissingVacant!252) lt!53242)) (and (bvsge (index!3158 lt!53242) #b00000000000000000000000000000000) (bvslt (index!3158 lt!53242) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!53242) (ite ((_ is Found!252) lt!53242) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!53242)) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!252) lt!53242) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!53242)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!252) lt!53242) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!53242)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28231 (= lt!53242 e!67899)))

(declare-fun c!18029 () Bool)

(assert (=> d!28231 (= c!18029 (and ((_ is Intermediate!252) lt!53243) (undefined!1064 lt!53243)))))

(assert (=> d!28231 (= lt!53243 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (mask!6696 newMap!16)) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(assert (=> d!28231 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28231 (= (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (_keys!4262 newMap!16) (mask!6696 newMap!16)) lt!53242)))

(declare-fun b!104276 () Bool)

(assert (=> b!104276 (= e!67897 (seekKeyOrZeroReturnVacant!0 (x!13494 lt!53243) (index!3157 lt!53243) (index!3157 lt!53243) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun b!104277 () Bool)

(assert (=> b!104277 (= e!67899 Undefined!252)))

(declare-fun b!104278 () Bool)

(assert (=> b!104278 (= e!67898 (Found!252 (index!3157 lt!53243)))))

(declare-fun b!104279 () Bool)

(assert (=> b!104279 (= e!67897 (MissingZero!252 (index!3157 lt!53243)))))

(assert (= (and d!28231 c!18029) b!104277))

(assert (= (and d!28231 (not c!18029)) b!104275))

(assert (= (and b!104275 c!18028) b!104278))

(assert (= (and b!104275 (not c!18028)) b!104274))

(assert (= (and b!104274 c!18027) b!104279))

(assert (= (and b!104274 (not c!18027)) b!104276))

(declare-fun m!115735 () Bool)

(assert (=> b!104275 m!115735))

(declare-fun m!115737 () Bool)

(assert (=> d!28231 m!115737))

(assert (=> d!28231 m!114381))

(declare-fun m!115739 () Bool)

(assert (=> d!28231 m!115739))

(assert (=> d!28231 m!114321))

(declare-fun m!115741 () Bool)

(assert (=> d!28231 m!115741))

(declare-fun m!115743 () Bool)

(assert (=> d!28231 m!115743))

(assert (=> d!28231 m!115739))

(assert (=> d!28231 m!114381))

(declare-fun m!115745 () Bool)

(assert (=> d!28231 m!115745))

(assert (=> b!104276 m!114381))

(declare-fun m!115747 () Bool)

(assert (=> b!104276 m!115747))

(assert (=> b!103577 d!28231))

(assert (=> d!27947 d!27775))

(declare-fun d!28233 () Bool)

(declare-fun res!52014 () Bool)

(declare-fun e!67900 () Bool)

(assert (=> d!28233 (=> res!52014 e!67900)))

(assert (=> d!28233 (= res!52014 (and ((_ is Cons!1588) (toList!779 lt!52641)) (= (_1!1188 (h!2184 (toList!779 lt!52641))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28233 (= (containsKey!159 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000) e!67900)))

(declare-fun b!104280 () Bool)

(declare-fun e!67901 () Bool)

(assert (=> b!104280 (= e!67900 e!67901)))

(declare-fun res!52015 () Bool)

(assert (=> b!104280 (=> (not res!52015) (not e!67901))))

(assert (=> b!104280 (= res!52015 (and (or (not ((_ is Cons!1588) (toList!779 lt!52641))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52641))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1588) (toList!779 lt!52641)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52641))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104281 () Bool)

(assert (=> b!104281 (= e!67901 (containsKey!159 (t!5646 (toList!779 lt!52641)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28233 (not res!52014)) b!104280))

(assert (= (and b!104280 res!52015) b!104281))

(declare-fun m!115749 () Bool)

(assert (=> b!104281 m!115749))

(assert (=> d!27903 d!28233))

(declare-fun d!28235 () Bool)

(declare-fun e!67902 () Bool)

(assert (=> d!28235 e!67902))

(declare-fun res!52016 () Bool)

(assert (=> d!28235 (=> (not res!52016) (not e!67902))))

(declare-fun lt!53246 () ListLongMap!1527)

(assert (=> d!28235 (= res!52016 (contains!811 lt!53246 (_1!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun lt!53245 () List!1592)

(assert (=> d!28235 (= lt!53246 (ListLongMap!1528 lt!53245))))

(declare-fun lt!53244 () Unit!3132)

(declare-fun lt!53247 () Unit!3132)

(assert (=> d!28235 (= lt!53244 lt!53247)))

(assert (=> d!28235 (= (getValueByKey!156 lt!53245 (_1!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!28235 (= lt!53247 (lemmaContainsTupThenGetReturnValue!72 lt!53245 (_1!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!28235 (= lt!53245 (insertStrictlySorted!75 (toList!779 (ite c!17940 call!10911 (ite c!17942 call!10909 call!10908))) (_1!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (_2!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(assert (=> d!28235 (= (+!137 (ite c!17940 call!10911 (ite c!17942 call!10909 call!10908)) (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) lt!53246)))

(declare-fun b!104282 () Bool)

(declare-fun res!52017 () Bool)

(assert (=> b!104282 (=> (not res!52017) (not e!67902))))

(assert (=> b!104282 (= res!52017 (= (getValueByKey!156 (toList!779 lt!53246) (_1!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))) (Some!161 (_2!1188 (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))))

(declare-fun b!104283 () Bool)

(assert (=> b!104283 (= e!67902 (contains!812 (toList!779 lt!53246) (ite (or c!17940 c!17942) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (= (and d!28235 res!52016) b!104282))

(assert (= (and b!104282 res!52017) b!104283))

(declare-fun m!115751 () Bool)

(assert (=> d!28235 m!115751))

(declare-fun m!115753 () Bool)

(assert (=> d!28235 m!115753))

(declare-fun m!115755 () Bool)

(assert (=> d!28235 m!115755))

(declare-fun m!115757 () Bool)

(assert (=> d!28235 m!115757))

(declare-fun m!115759 () Bool)

(assert (=> b!104282 m!115759))

(declare-fun m!115761 () Bool)

(assert (=> b!104283 m!115761))

(assert (=> bm!10904 d!28235))

(declare-fun b!104284 () Bool)

(declare-fun e!67903 () List!1592)

(declare-fun call!10942 () List!1592)

(assert (=> b!104284 (= e!67903 call!10942)))

(declare-fun e!67906 () List!1592)

(declare-fun b!104285 () Bool)

(assert (=> b!104285 (= e!67906 (insertStrictlySorted!75 (t!5646 (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(declare-fun b!104286 () Bool)

(declare-fun e!67904 () List!1592)

(declare-fun call!10943 () List!1592)

(assert (=> b!104286 (= e!67904 call!10943)))

(declare-fun d!28237 () Bool)

(declare-fun e!67905 () Bool)

(assert (=> d!28237 e!67905))

(declare-fun res!52019 () Bool)

(assert (=> d!28237 (=> (not res!52019) (not e!67905))))

(declare-fun lt!53248 () List!1592)

(assert (=> d!28237 (= res!52019 (isStrictlySorted!295 lt!53248))))

(declare-fun e!67907 () List!1592)

(assert (=> d!28237 (= lt!53248 e!67907)))

(declare-fun c!18030 () Bool)

(assert (=> d!28237 (= c!18030 (and ((_ is Cons!1588) (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (bvslt (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))))) (_1!1188 lt!52444))))))

(assert (=> d!28237 (isStrictlySorted!295 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))))))

(assert (=> d!28237 (= (insertStrictlySorted!75 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))) (_1!1188 lt!52444) (_2!1188 lt!52444)) lt!53248)))

(declare-fun bm!10938 () Bool)

(declare-fun call!10941 () List!1592)

(assert (=> bm!10938 (= call!10941 ($colon$colon!79 e!67906 (ite c!18030 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444)))))))

(declare-fun c!18032 () Bool)

(assert (=> bm!10938 (= c!18032 c!18030)))

(declare-fun b!104287 () Bool)

(declare-fun c!18031 () Bool)

(declare-fun c!18033 () Bool)

(assert (=> b!104287 (= e!67906 (ite c!18033 (t!5646 (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (ite c!18031 (Cons!1588 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (t!5646 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))))) Nil!1589)))))

(declare-fun b!104288 () Bool)

(assert (=> b!104288 (= c!18031 (and ((_ is Cons!1588) (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (bvsgt (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))))) (_1!1188 lt!52444))))))

(assert (=> b!104288 (= e!67904 e!67903)))

(declare-fun bm!10939 () Bool)

(assert (=> bm!10939 (= call!10942 call!10943)))

(declare-fun b!104289 () Bool)

(assert (=> b!104289 (= e!67903 call!10942)))

(declare-fun bm!10940 () Bool)

(assert (=> bm!10940 (= call!10943 call!10941)))

(declare-fun b!104290 () Bool)

(assert (=> b!104290 (= e!67905 (contains!812 lt!53248 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!104291 () Bool)

(declare-fun res!52018 () Bool)

(assert (=> b!104291 (=> (not res!52018) (not e!67905))))

(assert (=> b!104291 (= res!52018 (containsKey!159 lt!53248 (_1!1188 lt!52444)))))

(declare-fun b!104292 () Bool)

(assert (=> b!104292 (= e!67907 e!67904)))

(assert (=> b!104292 (= c!18033 (and ((_ is Cons!1588) (t!5646 (toList!779 (+!137 lt!52441 lt!52442)))) (= (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52442))))) (_1!1188 lt!52444))))))

(declare-fun b!104293 () Bool)

(assert (=> b!104293 (= e!67907 call!10941)))

(assert (= (and d!28237 c!18030) b!104293))

(assert (= (and d!28237 (not c!18030)) b!104292))

(assert (= (and b!104292 c!18033) b!104286))

(assert (= (and b!104292 (not c!18033)) b!104288))

(assert (= (and b!104288 c!18031) b!104289))

(assert (= (and b!104288 (not c!18031)) b!104284))

(assert (= (or b!104289 b!104284) bm!10939))

(assert (= (or b!104286 bm!10939) bm!10940))

(assert (= (or b!104293 bm!10940) bm!10938))

(assert (= (and bm!10938 c!18032) b!104285))

(assert (= (and bm!10938 (not c!18032)) b!104287))

(assert (= (and d!28237 res!52019) b!104291))

(assert (= (and b!104291 res!52018) b!104290))

(declare-fun m!115763 () Bool)

(assert (=> d!28237 m!115763))

(assert (=> d!28237 m!115711))

(declare-fun m!115765 () Bool)

(assert (=> b!104290 m!115765))

(declare-fun m!115767 () Bool)

(assert (=> b!104291 m!115767))

(declare-fun m!115769 () Bool)

(assert (=> b!104285 m!115769))

(declare-fun m!115771 () Bool)

(assert (=> bm!10938 m!115771))

(assert (=> b!103726 d!28237))

(declare-fun d!28239 () Bool)

(declare-fun res!52020 () Bool)

(declare-fun e!67908 () Bool)

(assert (=> d!28239 (=> res!52020 e!67908)))

(assert (=> d!28239 (= res!52020 (and ((_ is Cons!1588) lt!52810) (= (_1!1188 (h!2184 lt!52810)) (_1!1188 lt!52442))))))

(assert (=> d!28239 (= (containsKey!159 lt!52810 (_1!1188 lt!52442)) e!67908)))

(declare-fun b!104294 () Bool)

(declare-fun e!67909 () Bool)

(assert (=> b!104294 (= e!67908 e!67909)))

(declare-fun res!52021 () Bool)

(assert (=> b!104294 (=> (not res!52021) (not e!67909))))

(assert (=> b!104294 (= res!52021 (and (or (not ((_ is Cons!1588) lt!52810)) (bvsle (_1!1188 (h!2184 lt!52810)) (_1!1188 lt!52442))) ((_ is Cons!1588) lt!52810) (bvslt (_1!1188 (h!2184 lt!52810)) (_1!1188 lt!52442))))))

(declare-fun b!104295 () Bool)

(assert (=> b!104295 (= e!67909 (containsKey!159 (t!5646 lt!52810) (_1!1188 lt!52442)))))

(assert (= (and d!28239 (not res!52020)) b!104294))

(assert (= (and b!104294 res!52021) b!104295))

(declare-fun m!115773 () Bool)

(assert (=> b!104295 m!115773))

(assert (=> b!103664 d!28239))

(declare-fun b!104298 () Bool)

(declare-fun e!67911 () Option!162)

(assert (=> b!104298 (= e!67911 (getValueByKey!156 (t!5646 (t!5646 (toList!779 lt!52533))) (_1!1188 lt!52442)))))

(declare-fun b!104297 () Bool)

(declare-fun e!67910 () Option!162)

(assert (=> b!104297 (= e!67910 e!67911)))

(declare-fun c!18035 () Bool)

(assert (=> b!104297 (= c!18035 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52533))) (not (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52533)))) (_1!1188 lt!52442)))))))

(declare-fun b!104296 () Bool)

(assert (=> b!104296 (= e!67910 (Some!161 (_2!1188 (h!2184 (t!5646 (toList!779 lt!52533))))))))

(declare-fun d!28241 () Bool)

(declare-fun c!18034 () Bool)

(assert (=> d!28241 (= c!18034 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52533))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52533)))) (_1!1188 lt!52442))))))

(assert (=> d!28241 (= (getValueByKey!156 (t!5646 (toList!779 lt!52533)) (_1!1188 lt!52442)) e!67910)))

(declare-fun b!104299 () Bool)

(assert (=> b!104299 (= e!67911 None!160)))

(assert (= (and d!28241 c!18034) b!104296))

(assert (= (and d!28241 (not c!18034)) b!104297))

(assert (= (and b!104297 c!18035) b!104298))

(assert (= (and b!104297 (not c!18035)) b!104299))

(declare-fun m!115775 () Bool)

(assert (=> b!104298 m!115775))

(assert (=> b!103884 d!28241))

(declare-fun d!28243 () Bool)

(declare-fun c!18038 () Bool)

(assert (=> d!28243 (= c!18038 ((_ is Nil!1589) (toList!779 lt!52562)))))

(declare-fun e!67914 () (InoxSet tuple2!2354))

(assert (=> d!28243 (= (content!108 (toList!779 lt!52562)) e!67914)))

(declare-fun b!104304 () Bool)

(assert (=> b!104304 (= e!67914 ((as const (Array tuple2!2354 Bool)) false))))

(declare-fun b!104305 () Bool)

(assert (=> b!104305 (= e!67914 ((_ map or) (store ((as const (Array tuple2!2354 Bool)) false) (h!2184 (toList!779 lt!52562)) true) (content!108 (t!5646 (toList!779 lt!52562)))))))

(assert (= (and d!28243 c!18038) b!104304))

(assert (= (and d!28243 (not c!18038)) b!104305))

(declare-fun m!115777 () Bool)

(assert (=> b!104305 m!115777))

(declare-fun m!115779 () Bool)

(assert (=> b!104305 m!115779))

(assert (=> d!27985 d!28243))

(declare-fun d!28245 () Bool)

(declare-fun res!52022 () Bool)

(declare-fun e!67915 () Bool)

(assert (=> d!28245 (=> res!52022 e!67915)))

(assert (=> d!28245 (= res!52022 (and ((_ is Cons!1588) (toList!779 lt!52533)) (= (_1!1188 (h!2184 (toList!779 lt!52533))) (_1!1188 lt!52442))))))

(assert (=> d!28245 (= (containsKey!159 (toList!779 lt!52533) (_1!1188 lt!52442)) e!67915)))

(declare-fun b!104306 () Bool)

(declare-fun e!67916 () Bool)

(assert (=> b!104306 (= e!67915 e!67916)))

(declare-fun res!52023 () Bool)

(assert (=> b!104306 (=> (not res!52023) (not e!67916))))

(assert (=> b!104306 (= res!52023 (and (or (not ((_ is Cons!1588) (toList!779 lt!52533))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52533))) (_1!1188 lt!52442))) ((_ is Cons!1588) (toList!779 lt!52533)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52533))) (_1!1188 lt!52442))))))

(declare-fun b!104307 () Bool)

(assert (=> b!104307 (= e!67916 (containsKey!159 (t!5646 (toList!779 lt!52533)) (_1!1188 lt!52442)))))

(assert (= (and d!28245 (not res!52022)) b!104306))

(assert (= (and b!104306 res!52023) b!104307))

(declare-fun m!115781 () Bool)

(assert (=> b!104307 m!115781))

(assert (=> d!27849 d!28245))

(declare-fun d!28247 () Bool)

(declare-fun lt!53249 () Bool)

(assert (=> d!28247 (= lt!53249 (select (content!109 Nil!1590) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!67917 () Bool)

(assert (=> d!28247 (= lt!53249 e!67917)))

(declare-fun res!52024 () Bool)

(assert (=> d!28247 (=> (not res!52024) (not e!67917))))

(assert (=> d!28247 (= res!52024 ((_ is Cons!1589) Nil!1590))))

(assert (=> d!28247 (= (contains!813 Nil!1590 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) lt!53249)))

(declare-fun b!104308 () Bool)

(declare-fun e!67918 () Bool)

(assert (=> b!104308 (= e!67917 e!67918)))

(declare-fun res!52025 () Bool)

(assert (=> b!104308 (=> res!52025 e!67918)))

(assert (=> b!104308 (= res!52025 (= (h!2185 Nil!1590) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104309 () Bool)

(assert (=> b!104309 (= e!67918 (contains!813 (t!5647 Nil!1590) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28247 res!52024) b!104308))

(assert (= (and b!104308 (not res!52025)) b!104309))

(assert (=> d!28247 m!115117))

(assert (=> d!28247 m!114381))

(declare-fun m!115783 () Bool)

(assert (=> d!28247 m!115783))

(assert (=> b!104309 m!114381))

(declare-fun m!115785 () Bool)

(assert (=> b!104309 m!115785))

(assert (=> b!103892 d!28247))

(declare-fun d!28249 () Bool)

(declare-fun e!67920 () Bool)

(assert (=> d!28249 e!67920))

(declare-fun res!52026 () Bool)

(assert (=> d!28249 (=> res!52026 e!67920)))

(declare-fun lt!53253 () Bool)

(assert (=> d!28249 (= res!52026 (not lt!53253))))

(declare-fun lt!53250 () Bool)

(assert (=> d!28249 (= lt!53253 lt!53250)))

(declare-fun lt!53251 () Unit!3132)

(declare-fun e!67919 () Unit!3132)

(assert (=> d!28249 (= lt!53251 e!67919)))

(declare-fun c!18039 () Bool)

(assert (=> d!28249 (= c!18039 lt!53250)))

(assert (=> d!28249 (= lt!53250 (containsKey!159 (toList!779 lt!52828) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28249 (= (contains!811 lt!52828 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) lt!53253)))

(declare-fun b!104310 () Bool)

(declare-fun lt!53252 () Unit!3132)

(assert (=> b!104310 (= e!67919 lt!53252)))

(assert (=> b!104310 (= lt!53252 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52828) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104310 (isDefined!108 (getValueByKey!156 (toList!779 lt!52828) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104311 () Bool)

(declare-fun Unit!3177 () Unit!3132)

(assert (=> b!104311 (= e!67919 Unit!3177)))

(declare-fun b!104312 () Bool)

(assert (=> b!104312 (= e!67920 (isDefined!108 (getValueByKey!156 (toList!779 lt!52828) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28249 c!18039) b!104310))

(assert (= (and d!28249 (not c!18039)) b!104311))

(assert (= (and d!28249 (not res!52026)) b!104312))

(assert (=> d!28249 m!114381))

(declare-fun m!115787 () Bool)

(assert (=> d!28249 m!115787))

(assert (=> b!104310 m!114381))

(declare-fun m!115789 () Bool)

(assert (=> b!104310 m!115789))

(assert (=> b!104310 m!114381))

(declare-fun m!115791 () Bool)

(assert (=> b!104310 m!115791))

(assert (=> b!104310 m!115791))

(declare-fun m!115793 () Bool)

(assert (=> b!104310 m!115793))

(assert (=> b!104312 m!114381))

(assert (=> b!104312 m!115791))

(assert (=> b!104312 m!115791))

(assert (=> b!104312 m!115793))

(assert (=> b!103675 d!28249))

(declare-fun d!28251 () Bool)

(declare-fun e!67922 () Bool)

(assert (=> d!28251 e!67922))

(declare-fun res!52027 () Bool)

(assert (=> d!28251 (=> res!52027 e!67922)))

(declare-fun lt!53257 () Bool)

(assert (=> d!28251 (= res!52027 (not lt!53257))))

(declare-fun lt!53254 () Bool)

(assert (=> d!28251 (= lt!53257 lt!53254)))

(declare-fun lt!53255 () Unit!3132)

(declare-fun e!67921 () Unit!3132)

(assert (=> d!28251 (= lt!53255 e!67921)))

(declare-fun c!18040 () Bool)

(assert (=> d!28251 (= c!18040 lt!53254)))

(assert (=> d!28251 (= lt!53254 (containsKey!159 (toList!779 lt!52780) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28251 (= (contains!811 lt!52780 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53257)))

(declare-fun b!104313 () Bool)

(declare-fun lt!53256 () Unit!3132)

(assert (=> b!104313 (= e!67921 lt!53256)))

(assert (=> b!104313 (= lt!53256 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52780) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104313 (isDefined!108 (getValueByKey!156 (toList!779 lt!52780) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104314 () Bool)

(declare-fun Unit!3178 () Unit!3132)

(assert (=> b!104314 (= e!67921 Unit!3178)))

(declare-fun b!104315 () Bool)

(assert (=> b!104315 (= e!67922 (isDefined!108 (getValueByKey!156 (toList!779 lt!52780) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28251 c!18040) b!104313))

(assert (= (and d!28251 (not c!18040)) b!104314))

(assert (= (and d!28251 (not res!52027)) b!104315))

(declare-fun m!115795 () Bool)

(assert (=> d!28251 m!115795))

(declare-fun m!115797 () Bool)

(assert (=> b!104313 m!115797))

(declare-fun m!115799 () Bool)

(assert (=> b!104313 m!115799))

(assert (=> b!104313 m!115799))

(declare-fun m!115801 () Bool)

(assert (=> b!104313 m!115801))

(assert (=> b!104315 m!115799))

(assert (=> b!104315 m!115799))

(assert (=> b!104315 m!115801))

(assert (=> bm!10855 d!28251))

(declare-fun b!104318 () Bool)

(declare-fun e!67924 () Option!162)

(assert (=> b!104318 (= e!67924 (getValueByKey!156 (t!5646 (toList!779 lt!52883)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104317 () Bool)

(declare-fun e!67923 () Option!162)

(assert (=> b!104317 (= e!67923 e!67924)))

(declare-fun c!18042 () Bool)

(assert (=> b!104317 (= c!18042 (and ((_ is Cons!1588) (toList!779 lt!52883)) (not (= (_1!1188 (h!2184 (toList!779 lt!52883))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104316 () Bool)

(assert (=> b!104316 (= e!67923 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52883)))))))

(declare-fun d!28253 () Bool)

(declare-fun c!18041 () Bool)

(assert (=> d!28253 (= c!18041 (and ((_ is Cons!1588) (toList!779 lt!52883)) (= (_1!1188 (h!2184 (toList!779 lt!52883))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28253 (= (getValueByKey!156 (toList!779 lt!52883) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67923)))

(declare-fun b!104319 () Bool)

(assert (=> b!104319 (= e!67924 None!160)))

(assert (= (and d!28253 c!18041) b!104316))

(assert (= (and d!28253 (not c!18041)) b!104317))

(assert (= (and b!104317 c!18042) b!104318))

(assert (= (and b!104317 (not c!18042)) b!104319))

(declare-fun m!115803 () Bool)

(assert (=> b!104318 m!115803))

(assert (=> b!103743 d!28253))

(declare-fun d!28255 () Bool)

(declare-fun res!52028 () Bool)

(declare-fun e!67925 () Bool)

(assert (=> d!28255 (=> res!52028 e!67925)))

(assert (=> d!28255 (= res!52028 (and ((_ is Cons!1588) lt!52561) (= (_1!1188 (h!2184 lt!52561)) (_1!1188 lt!52442))))))

(assert (=> d!28255 (= (containsKey!159 lt!52561 (_1!1188 lt!52442)) e!67925)))

(declare-fun b!104320 () Bool)

(declare-fun e!67926 () Bool)

(assert (=> b!104320 (= e!67925 e!67926)))

(declare-fun res!52029 () Bool)

(assert (=> b!104320 (=> (not res!52029) (not e!67926))))

(assert (=> b!104320 (= res!52029 (and (or (not ((_ is Cons!1588) lt!52561)) (bvsle (_1!1188 (h!2184 lt!52561)) (_1!1188 lt!52442))) ((_ is Cons!1588) lt!52561) (bvslt (_1!1188 (h!2184 lt!52561)) (_1!1188 lt!52442))))))

(declare-fun b!104321 () Bool)

(assert (=> b!104321 (= e!67926 (containsKey!159 (t!5646 lt!52561) (_1!1188 lt!52442)))))

(assert (= (and d!28255 (not res!52028)) b!104320))

(assert (= (and b!104320 res!52029) b!104321))

(declare-fun m!115805 () Bool)

(assert (=> b!104321 m!115805))

(assert (=> b!103785 d!28255))

(declare-fun d!28257 () Bool)

(assert (=> d!28257 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4288 () Bool)

(assert (= bs!4288 d!28257))

(assert (=> bs!4288 m!115025))

(declare-fun m!115807 () Bool)

(assert (=> bs!4288 m!115807))

(assert (=> b!103920 d!28257))

(declare-fun b!104324 () Bool)

(declare-fun e!67928 () Option!162)

(assert (=> b!104324 (= e!67928 (getValueByKey!156 (t!5646 (toList!779 lt!52553)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104323 () Bool)

(declare-fun e!67927 () Option!162)

(assert (=> b!104323 (= e!67927 e!67928)))

(declare-fun c!18044 () Bool)

(assert (=> b!104323 (= c!18044 (and ((_ is Cons!1588) (toList!779 lt!52553)) (not (= (_1!1188 (h!2184 (toList!779 lt!52553))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104322 () Bool)

(assert (=> b!104322 (= e!67927 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52553)))))))

(declare-fun d!28259 () Bool)

(declare-fun c!18043 () Bool)

(assert (=> d!28259 (= c!18043 (and ((_ is Cons!1588) (toList!779 lt!52553)) (= (_1!1188 (h!2184 (toList!779 lt!52553))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28259 (= (getValueByKey!156 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000) e!67927)))

(declare-fun b!104325 () Bool)

(assert (=> b!104325 (= e!67928 None!160)))

(assert (= (and d!28259 c!18043) b!104322))

(assert (= (and d!28259 (not c!18043)) b!104323))

(assert (= (and b!104323 c!18044) b!104324))

(assert (= (and b!104323 (not c!18044)) b!104325))

(declare-fun m!115809 () Bool)

(assert (=> b!104324 m!115809))

(assert (=> b!103920 d!28259))

(assert (=> b!103535 d!28117))

(assert (=> d!27889 d!27871))

(assert (=> d!27889 d!27879))

(declare-fun d!28261 () Bool)

(assert (=> d!28261 (contains!811 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52624)))

(assert (=> d!28261 true))

(declare-fun _$35!345 () Unit!3132)

(assert (=> d!28261 (= (choose!651 lt!52640 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52624) _$35!345)))

(declare-fun bs!4289 () Bool)

(assert (= bs!4289 d!28261))

(assert (=> bs!4289 m!114219))

(assert (=> bs!4289 m!114219))

(assert (=> bs!4289 m!114235))

(assert (=> d!27889 d!28261))

(declare-fun d!28263 () Bool)

(declare-fun e!67930 () Bool)

(assert (=> d!28263 e!67930))

(declare-fun res!52030 () Bool)

(assert (=> d!28263 (=> res!52030 e!67930)))

(declare-fun lt!53261 () Bool)

(assert (=> d!28263 (= res!52030 (not lt!53261))))

(declare-fun lt!53258 () Bool)

(assert (=> d!28263 (= lt!53261 lt!53258)))

(declare-fun lt!53259 () Unit!3132)

(declare-fun e!67929 () Unit!3132)

(assert (=> d!28263 (= lt!53259 e!67929)))

(declare-fun c!18045 () Bool)

(assert (=> d!28263 (= c!18045 lt!53258)))

(assert (=> d!28263 (= lt!53258 (containsKey!159 (toList!779 lt!52640) lt!52624))))

(assert (=> d!28263 (= (contains!811 lt!52640 lt!52624) lt!53261)))

(declare-fun b!104327 () Bool)

(declare-fun lt!53260 () Unit!3132)

(assert (=> b!104327 (= e!67929 lt!53260)))

(assert (=> b!104327 (= lt!53260 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52640) lt!52624))))

(assert (=> b!104327 (isDefined!108 (getValueByKey!156 (toList!779 lt!52640) lt!52624))))

(declare-fun b!104328 () Bool)

(declare-fun Unit!3179 () Unit!3132)

(assert (=> b!104328 (= e!67929 Unit!3179)))

(declare-fun b!104329 () Bool)

(assert (=> b!104329 (= e!67930 (isDefined!108 (getValueByKey!156 (toList!779 lt!52640) lt!52624)))))

(assert (= (and d!28263 c!18045) b!104327))

(assert (= (and d!28263 (not c!18045)) b!104328))

(assert (= (and d!28263 (not res!52030)) b!104329))

(declare-fun m!115811 () Bool)

(assert (=> d!28263 m!115811))

(declare-fun m!115813 () Bool)

(assert (=> b!104327 m!115813))

(declare-fun m!115815 () Bool)

(assert (=> b!104327 m!115815))

(assert (=> b!104327 m!115815))

(declare-fun m!115817 () Bool)

(assert (=> b!104327 m!115817))

(assert (=> b!104329 m!115815))

(assert (=> b!104329 m!115815))

(assert (=> b!104329 m!115817))

(assert (=> d!27889 d!28263))

(declare-fun d!28265 () Bool)

(assert (=> d!28265 (= (get!1331 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2882 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27987 d!28265))

(declare-fun b!104332 () Bool)

(declare-fun e!67932 () Option!162)

(assert (=> b!104332 (= e!67932 (getValueByKey!156 (t!5646 (toList!779 lt!52553)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!104331 () Bool)

(declare-fun e!67931 () Option!162)

(assert (=> b!104331 (= e!67931 e!67932)))

(declare-fun c!18047 () Bool)

(assert (=> b!104331 (= c!18047 (and ((_ is Cons!1588) (toList!779 lt!52553)) (not (= (_1!1188 (h!2184 (toList!779 lt!52553))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104330 () Bool)

(assert (=> b!104330 (= e!67931 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52553)))))))

(declare-fun d!28267 () Bool)

(declare-fun c!18046 () Bool)

(assert (=> d!28267 (= c!18046 (and ((_ is Cons!1588) (toList!779 lt!52553)) (= (_1!1188 (h!2184 (toList!779 lt!52553))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28267 (= (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67931)))

(declare-fun b!104333 () Bool)

(assert (=> b!104333 (= e!67932 None!160)))

(assert (= (and d!28267 c!18046) b!104330))

(assert (= (and d!28267 (not c!18046)) b!104331))

(assert (= (and b!104331 c!18047) b!104332))

(assert (= (and b!104331 (not c!18047)) b!104333))

(assert (=> b!104332 m!114103))

(declare-fun m!115819 () Bool)

(assert (=> b!104332 m!115819))

(assert (=> d!27987 d!28267))

(declare-fun d!28269 () Bool)

(declare-fun e!67934 () Bool)

(assert (=> d!28269 e!67934))

(declare-fun res!52031 () Bool)

(assert (=> d!28269 (=> res!52031 e!67934)))

(declare-fun lt!53265 () Bool)

(assert (=> d!28269 (= res!52031 (not lt!53265))))

(declare-fun lt!53262 () Bool)

(assert (=> d!28269 (= lt!53265 lt!53262)))

(declare-fun lt!53263 () Unit!3132)

(declare-fun e!67933 () Unit!3132)

(assert (=> d!28269 (= lt!53263 e!67933)))

(declare-fun c!18048 () Bool)

(assert (=> d!28269 (= c!18048 lt!53262)))

(assert (=> d!28269 (= lt!53262 (containsKey!159 (toList!779 lt!52887) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28269 (= (contains!811 lt!52887 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53265)))

(declare-fun b!104334 () Bool)

(declare-fun lt!53264 () Unit!3132)

(assert (=> b!104334 (= e!67933 lt!53264)))

(assert (=> b!104334 (= lt!53264 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52887) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> b!104334 (isDefined!108 (getValueByKey!156 (toList!779 lt!52887) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104335 () Bool)

(declare-fun Unit!3180 () Unit!3132)

(assert (=> b!104335 (= e!67933 Unit!3180)))

(declare-fun b!104336 () Bool)

(assert (=> b!104336 (= e!67934 (isDefined!108 (getValueByKey!156 (toList!779 lt!52887) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (= (and d!28269 c!18048) b!104334))

(assert (= (and d!28269 (not c!18048)) b!104335))

(assert (= (and d!28269 (not res!52031)) b!104336))

(declare-fun m!115821 () Bool)

(assert (=> d!28269 m!115821))

(declare-fun m!115823 () Bool)

(assert (=> b!104334 m!115823))

(assert (=> b!104334 m!114745))

(assert (=> b!104334 m!114745))

(declare-fun m!115825 () Bool)

(assert (=> b!104334 m!115825))

(assert (=> b!104336 m!114745))

(assert (=> b!104336 m!114745))

(assert (=> b!104336 m!115825))

(assert (=> d!27911 d!28269))

(declare-fun e!67936 () Option!162)

(declare-fun b!104339 () Bool)

(assert (=> b!104339 (= e!67936 (getValueByKey!156 (t!5646 lt!52886) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104338 () Bool)

(declare-fun e!67935 () Option!162)

(assert (=> b!104338 (= e!67935 e!67936)))

(declare-fun c!18050 () Bool)

(assert (=> b!104338 (= c!18050 (and ((_ is Cons!1588) lt!52886) (not (= (_1!1188 (h!2184 lt!52886)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!104337 () Bool)

(assert (=> b!104337 (= e!67935 (Some!161 (_2!1188 (h!2184 lt!52886))))))

(declare-fun d!28271 () Bool)

(declare-fun c!18049 () Bool)

(assert (=> d!28271 (= c!18049 (and ((_ is Cons!1588) lt!52886) (= (_1!1188 (h!2184 lt!52886)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28271 (= (getValueByKey!156 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) e!67935)))

(declare-fun b!104340 () Bool)

(assert (=> b!104340 (= e!67936 None!160)))

(assert (= (and d!28271 c!18049) b!104337))

(assert (= (and d!28271 (not c!18049)) b!104338))

(assert (= (and b!104338 c!18050) b!104339))

(assert (= (and b!104338 (not c!18050)) b!104340))

(declare-fun m!115827 () Bool)

(assert (=> b!104339 m!115827))

(assert (=> d!27911 d!28271))

(declare-fun d!28273 () Bool)

(assert (=> d!28273 (= (getValueByKey!156 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!53266 () Unit!3132)

(assert (=> d!28273 (= lt!53266 (choose!648 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun e!67937 () Bool)

(assert (=> d!28273 e!67937))

(declare-fun res!52032 () Bool)

(assert (=> d!28273 (=> (not res!52032) (not e!67937))))

(assert (=> d!28273 (= res!52032 (isStrictlySorted!295 lt!52886))))

(assert (=> d!28273 (= (lemmaContainsTupThenGetReturnValue!72 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53266)))

(declare-fun b!104341 () Bool)

(declare-fun res!52033 () Bool)

(assert (=> b!104341 (=> (not res!52033) (not e!67937))))

(assert (=> b!104341 (= res!52033 (containsKey!159 lt!52886 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104342 () Bool)

(assert (=> b!104342 (= e!67937 (contains!812 lt!52886 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (= (and d!28273 res!52032) b!104341))

(assert (= (and b!104341 res!52033) b!104342))

(assert (=> d!28273 m!114739))

(declare-fun m!115829 () Bool)

(assert (=> d!28273 m!115829))

(declare-fun m!115831 () Bool)

(assert (=> d!28273 m!115831))

(declare-fun m!115833 () Bool)

(assert (=> b!104341 m!115833))

(declare-fun m!115835 () Bool)

(assert (=> b!104342 m!115835))

(assert (=> d!27911 d!28273))

(declare-fun b!104343 () Bool)

(declare-fun e!67938 () List!1592)

(declare-fun call!10945 () List!1592)

(assert (=> b!104343 (= e!67938 call!10945)))

(declare-fun b!104344 () Bool)

(declare-fun e!67941 () List!1592)

(assert (=> b!104344 (= e!67941 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52441)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104345 () Bool)

(declare-fun e!67939 () List!1592)

(declare-fun call!10946 () List!1592)

(assert (=> b!104345 (= e!67939 call!10946)))

(declare-fun d!28275 () Bool)

(declare-fun e!67940 () Bool)

(assert (=> d!28275 e!67940))

(declare-fun res!52035 () Bool)

(assert (=> d!28275 (=> (not res!52035) (not e!67940))))

(declare-fun lt!53267 () List!1592)

(assert (=> d!28275 (= res!52035 (isStrictlySorted!295 lt!53267))))

(declare-fun e!67942 () List!1592)

(assert (=> d!28275 (= lt!53267 e!67942)))

(declare-fun c!18051 () Bool)

(assert (=> d!28275 (= c!18051 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28275 (isStrictlySorted!295 (toList!779 lt!52441))))

(assert (=> d!28275 (= (insertStrictlySorted!75 (toList!779 lt!52441) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53267)))

(declare-fun bm!10941 () Bool)

(declare-fun call!10944 () List!1592)

(assert (=> bm!10941 (= call!10944 ($colon$colon!79 e!67941 (ite c!18051 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun c!18053 () Bool)

(assert (=> bm!10941 (= c!18053 c!18051)))

(declare-fun c!18052 () Bool)

(declare-fun b!104346 () Bool)

(declare-fun c!18054 () Bool)

(assert (=> b!104346 (= e!67941 (ite c!18054 (t!5646 (toList!779 lt!52441)) (ite c!18052 (Cons!1588 (h!2184 (toList!779 lt!52441)) (t!5646 (toList!779 lt!52441))) Nil!1589)))))

(declare-fun b!104347 () Bool)

(assert (=> b!104347 (= c!18052 (and ((_ is Cons!1588) (toList!779 lt!52441)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> b!104347 (= e!67939 e!67938)))

(declare-fun bm!10942 () Bool)

(assert (=> bm!10942 (= call!10945 call!10946)))

(declare-fun b!104348 () Bool)

(assert (=> b!104348 (= e!67938 call!10945)))

(declare-fun bm!10943 () Bool)

(assert (=> bm!10943 (= call!10946 call!10944)))

(declare-fun b!104349 () Bool)

(assert (=> b!104349 (= e!67940 (contains!812 lt!53267 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104350 () Bool)

(declare-fun res!52034 () Bool)

(assert (=> b!104350 (=> (not res!52034) (not e!67940))))

(assert (=> b!104350 (= res!52034 (containsKey!159 lt!53267 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104351 () Bool)

(assert (=> b!104351 (= e!67942 e!67939)))

(assert (=> b!104351 (= c!18054 (and ((_ is Cons!1588) (toList!779 lt!52441)) (= (_1!1188 (h!2184 (toList!779 lt!52441))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104352 () Bool)

(assert (=> b!104352 (= e!67942 call!10944)))

(assert (= (and d!28275 c!18051) b!104352))

(assert (= (and d!28275 (not c!18051)) b!104351))

(assert (= (and b!104351 c!18054) b!104345))

(assert (= (and b!104351 (not c!18054)) b!104347))

(assert (= (and b!104347 c!18052) b!104348))

(assert (= (and b!104347 (not c!18052)) b!104343))

(assert (= (or b!104348 b!104343) bm!10942))

(assert (= (or b!104345 bm!10942) bm!10943))

(assert (= (or b!104352 bm!10943) bm!10941))

(assert (= (and bm!10941 c!18053) b!104344))

(assert (= (and bm!10941 (not c!18053)) b!104346))

(assert (= (and d!28275 res!52035) b!104350))

(assert (= (and b!104350 res!52034) b!104349))

(declare-fun m!115837 () Bool)

(assert (=> d!28275 m!115837))

(assert (=> d!28275 m!114825))

(declare-fun m!115839 () Bool)

(assert (=> b!104349 m!115839))

(declare-fun m!115841 () Bool)

(assert (=> b!104350 m!115841))

(declare-fun m!115843 () Bool)

(assert (=> b!104344 m!115843))

(declare-fun m!115845 () Bool)

(assert (=> bm!10941 m!115845))

(assert (=> d!27911 d!28275))

(assert (=> b!103602 d!28181))

(declare-fun d!28277 () Bool)

(declare-fun e!67944 () Bool)

(assert (=> d!28277 e!67944))

(declare-fun res!52036 () Bool)

(assert (=> d!28277 (=> res!52036 e!67944)))

(declare-fun lt!53271 () Bool)

(assert (=> d!28277 (= res!52036 (not lt!53271))))

(declare-fun lt!53268 () Bool)

(assert (=> d!28277 (= lt!53271 lt!53268)))

(declare-fun lt!53269 () Unit!3132)

(declare-fun e!67943 () Unit!3132)

(assert (=> d!28277 (= lt!53269 e!67943)))

(declare-fun c!18055 () Bool)

(assert (=> d!28277 (= c!18055 lt!53268)))

(assert (=> d!28277 (= lt!53268 (containsKey!159 (toList!779 (map!1279 (_2!1187 lt!53029))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28277 (= (contains!811 (map!1279 (_2!1187 lt!53029)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53271)))

(declare-fun b!104353 () Bool)

(declare-fun lt!53270 () Unit!3132)

(assert (=> b!104353 (= e!67943 lt!53270)))

(assert (=> b!104353 (= lt!53270 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (map!1279 (_2!1187 lt!53029))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104353 (isDefined!108 (getValueByKey!156 (toList!779 (map!1279 (_2!1187 lt!53029))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104354 () Bool)

(declare-fun Unit!3181 () Unit!3132)

(assert (=> b!104354 (= e!67943 Unit!3181)))

(declare-fun b!104355 () Bool)

(assert (=> b!104355 (= e!67944 (isDefined!108 (getValueByKey!156 (toList!779 (map!1279 (_2!1187 lt!53029))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!28277 c!18055) b!104353))

(assert (= (and d!28277 (not c!18055)) b!104354))

(assert (= (and d!28277 (not res!52036)) b!104355))

(assert (=> d!28277 m!113915))

(declare-fun m!115847 () Bool)

(assert (=> d!28277 m!115847))

(assert (=> b!104353 m!113915))

(declare-fun m!115849 () Bool)

(assert (=> b!104353 m!115849))

(assert (=> b!104353 m!113915))

(declare-fun m!115851 () Bool)

(assert (=> b!104353 m!115851))

(assert (=> b!104353 m!115851))

(declare-fun m!115853 () Bool)

(assert (=> b!104353 m!115853))

(assert (=> b!104355 m!113915))

(assert (=> b!104355 m!115851))

(assert (=> b!104355 m!115851))

(assert (=> b!104355 m!115853))

(assert (=> b!103877 d!28277))

(declare-fun d!28279 () Bool)

(assert (=> d!28279 (= (map!1279 (_2!1187 lt!53029)) (getCurrentListMap!467 (_keys!4262 (_2!1187 lt!53029)) (_values!2543 (_2!1187 lt!53029)) (mask!6696 (_2!1187 lt!53029)) (extraKeys!2369 (_2!1187 lt!53029)) (zeroValue!2437 (_2!1187 lt!53029)) (minValue!2437 (_2!1187 lt!53029)) #b00000000000000000000000000000000 (defaultEntry!2560 (_2!1187 lt!53029))))))

(declare-fun bs!4290 () Bool)

(assert (= bs!4290 d!28279))

(declare-fun m!115855 () Bool)

(assert (=> bs!4290 m!115855))

(assert (=> b!103877 d!28279))

(declare-fun d!28281 () Bool)

(assert (=> d!28281 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442)))))))

(declare-fun bs!4291 () Bool)

(assert (= bs!4291 d!28281))

(assert (=> bs!4291 m!114147))

(declare-fun m!115857 () Bool)

(assert (=> bs!4291 m!115857))

(assert (=> b!103780 d!28281))

(assert (=> b!103780 d!27839))

(declare-fun d!28283 () Bool)

(declare-fun lt!53272 () Bool)

(assert (=> d!28283 (= lt!53272 (select (content!108 (toList!779 lt!53054)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!67945 () Bool)

(assert (=> d!28283 (= lt!53272 e!67945)))

(declare-fun res!52037 () Bool)

(assert (=> d!28283 (=> (not res!52037) (not e!67945))))

(assert (=> d!28283 (= res!52037 ((_ is Cons!1588) (toList!779 lt!53054)))))

(assert (=> d!28283 (= (contains!812 (toList!779 lt!53054) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53272)))

(declare-fun b!104356 () Bool)

(declare-fun e!67946 () Bool)

(assert (=> b!104356 (= e!67945 e!67946)))

(declare-fun res!52038 () Bool)

(assert (=> b!104356 (=> res!52038 e!67946)))

(assert (=> b!104356 (= res!52038 (= (h!2184 (toList!779 lt!53054)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104357 () Bool)

(assert (=> b!104357 (= e!67946 (contains!812 (t!5646 (toList!779 lt!53054)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28283 res!52037) b!104356))

(assert (= (and b!104356 (not res!52038)) b!104357))

(declare-fun m!115859 () Bool)

(assert (=> d!28283 m!115859))

(declare-fun m!115861 () Bool)

(assert (=> d!28283 m!115861))

(declare-fun m!115863 () Bool)

(assert (=> b!104357 m!115863))

(assert (=> b!103905 d!28283))

(assert (=> d!27941 d!27939))

(declare-fun d!28285 () Bool)

(assert (=> d!28285 (= (getValueByKey!156 lt!52557 (_1!1188 lt!52444)) (Some!161 (_2!1188 lt!52444)))))

(assert (=> d!28285 true))

(declare-fun _$22!429 () Unit!3132)

(assert (=> d!28285 (= (choose!648 lt!52557 (_1!1188 lt!52444) (_2!1188 lt!52444)) _$22!429)))

(declare-fun bs!4292 () Bool)

(assert (= bs!4292 d!28285))

(assert (=> bs!4292 m!114129))

(assert (=> d!27941 d!28285))

(declare-fun d!28287 () Bool)

(declare-fun res!52039 () Bool)

(declare-fun e!67947 () Bool)

(assert (=> d!28287 (=> res!52039 e!67947)))

(assert (=> d!28287 (= res!52039 (or ((_ is Nil!1589) lt!52557) ((_ is Nil!1589) (t!5646 lt!52557))))))

(assert (=> d!28287 (= (isStrictlySorted!295 lt!52557) e!67947)))

(declare-fun b!104358 () Bool)

(declare-fun e!67948 () Bool)

(assert (=> b!104358 (= e!67947 e!67948)))

(declare-fun res!52040 () Bool)

(assert (=> b!104358 (=> (not res!52040) (not e!67948))))

(assert (=> b!104358 (= res!52040 (bvslt (_1!1188 (h!2184 lt!52557)) (_1!1188 (h!2184 (t!5646 lt!52557)))))))

(declare-fun b!104359 () Bool)

(assert (=> b!104359 (= e!67948 (isStrictlySorted!295 (t!5646 lt!52557)))))

(assert (= (and d!28287 (not res!52039)) b!104358))

(assert (= (and b!104358 res!52040) b!104359))

(declare-fun m!115865 () Bool)

(assert (=> b!104359 m!115865))

(assert (=> d!27941 d!28287))

(assert (=> bm!10869 d!28077))

(declare-fun d!28289 () Bool)

(declare-fun res!52041 () Bool)

(declare-fun e!67949 () Bool)

(assert (=> d!28289 (=> res!52041 e!67949)))

(assert (=> d!28289 (= res!52041 (and ((_ is Cons!1588) lt!52927) (= (_1!1188 (h!2184 lt!52927)) (_1!1188 lt!52444))))))

(assert (=> d!28289 (= (containsKey!159 lt!52927 (_1!1188 lt!52444)) e!67949)))

(declare-fun b!104360 () Bool)

(declare-fun e!67950 () Bool)

(assert (=> b!104360 (= e!67949 e!67950)))

(declare-fun res!52042 () Bool)

(assert (=> b!104360 (=> (not res!52042) (not e!67950))))

(assert (=> b!104360 (= res!52042 (and (or (not ((_ is Cons!1588) lt!52927)) (bvsle (_1!1188 (h!2184 lt!52927)) (_1!1188 lt!52444))) ((_ is Cons!1588) lt!52927) (bvslt (_1!1188 (h!2184 lt!52927)) (_1!1188 lt!52444))))))

(declare-fun b!104361 () Bool)

(assert (=> b!104361 (= e!67950 (containsKey!159 (t!5646 lt!52927) (_1!1188 lt!52444)))))

(assert (= (and d!28289 (not res!52041)) b!104360))

(assert (= (and b!104360 res!52042) b!104361))

(declare-fun m!115867 () Bool)

(assert (=> b!104361 m!115867))

(assert (=> b!103813 d!28289))

(declare-fun d!28291 () Bool)

(declare-fun e!67952 () Bool)

(assert (=> d!28291 e!67952))

(declare-fun res!52043 () Bool)

(assert (=> d!28291 (=> res!52043 e!67952)))

(declare-fun lt!53276 () Bool)

(assert (=> d!28291 (= res!52043 (not lt!53276))))

(declare-fun lt!53273 () Bool)

(assert (=> d!28291 (= lt!53276 lt!53273)))

(declare-fun lt!53274 () Unit!3132)

(declare-fun e!67951 () Unit!3132)

(assert (=> d!28291 (= lt!53274 e!67951)))

(declare-fun c!18056 () Bool)

(assert (=> d!28291 (= c!18056 lt!53273)))

(assert (=> d!28291 (= lt!53273 (containsKey!159 (toList!779 lt!52895) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28291 (= (contains!811 lt!52895 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53276)))

(declare-fun b!104362 () Bool)

(declare-fun lt!53275 () Unit!3132)

(assert (=> b!104362 (= e!67951 lt!53275)))

(assert (=> b!104362 (= lt!53275 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52895) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104362 (isDefined!108 (getValueByKey!156 (toList!779 lt!52895) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104363 () Bool)

(declare-fun Unit!3182 () Unit!3132)

(assert (=> b!104363 (= e!67951 Unit!3182)))

(declare-fun b!104364 () Bool)

(assert (=> b!104364 (= e!67952 (isDefined!108 (getValueByKey!156 (toList!779 lt!52895) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28291 c!18056) b!104362))

(assert (= (and d!28291 (not c!18056)) b!104363))

(assert (= (and d!28291 (not res!52043)) b!104364))

(declare-fun m!115869 () Bool)

(assert (=> d!28291 m!115869))

(declare-fun m!115871 () Bool)

(assert (=> b!104362 m!115871))

(assert (=> b!104362 m!114769))

(assert (=> b!104362 m!114769))

(declare-fun m!115873 () Bool)

(assert (=> b!104362 m!115873))

(assert (=> b!104364 m!114769))

(assert (=> b!104364 m!114769))

(assert (=> b!104364 m!115873))

(assert (=> d!27917 d!28291))

(declare-fun b!104367 () Bool)

(declare-fun e!67954 () Option!162)

(assert (=> b!104367 (= e!67954 (getValueByKey!156 (t!5646 lt!52894) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104366 () Bool)

(declare-fun e!67953 () Option!162)

(assert (=> b!104366 (= e!67953 e!67954)))

(declare-fun c!18058 () Bool)

(assert (=> b!104366 (= c!18058 (and ((_ is Cons!1588) lt!52894) (not (= (_1!1188 (h!2184 lt!52894)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104365 () Bool)

(assert (=> b!104365 (= e!67953 (Some!161 (_2!1188 (h!2184 lt!52894))))))

(declare-fun d!28293 () Bool)

(declare-fun c!18057 () Bool)

(assert (=> d!28293 (= c!18057 (and ((_ is Cons!1588) lt!52894) (= (_1!1188 (h!2184 lt!52894)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28293 (= (getValueByKey!156 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67953)))

(declare-fun b!104368 () Bool)

(assert (=> b!104368 (= e!67954 None!160)))

(assert (= (and d!28293 c!18057) b!104365))

(assert (= (and d!28293 (not c!18057)) b!104366))

(assert (= (and b!104366 c!18058) b!104367))

(assert (= (and b!104366 (not c!18058)) b!104368))

(declare-fun m!115875 () Bool)

(assert (=> b!104367 m!115875))

(assert (=> d!27917 d!28293))

(declare-fun d!28295 () Bool)

(assert (=> d!28295 (= (getValueByKey!156 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53277 () Unit!3132)

(assert (=> d!28295 (= lt!53277 (choose!648 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!67955 () Bool)

(assert (=> d!28295 e!67955))

(declare-fun res!52044 () Bool)

(assert (=> d!28295 (=> (not res!52044) (not e!67955))))

(assert (=> d!28295 (= res!52044 (isStrictlySorted!295 lt!52894))))

(assert (=> d!28295 (= (lemmaContainsTupThenGetReturnValue!72 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53277)))

(declare-fun b!104369 () Bool)

(declare-fun res!52045 () Bool)

(assert (=> b!104369 (=> (not res!52045) (not e!67955))))

(assert (=> b!104369 (= res!52045 (containsKey!159 lt!52894 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104370 () Bool)

(assert (=> b!104370 (= e!67955 (contains!812 lt!52894 (tuple2!2355 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28295 res!52044) b!104369))

(assert (= (and b!104369 res!52045) b!104370))

(assert (=> d!28295 m!114763))

(declare-fun m!115877 () Bool)

(assert (=> d!28295 m!115877))

(declare-fun m!115879 () Bool)

(assert (=> d!28295 m!115879))

(declare-fun m!115881 () Bool)

(assert (=> b!104369 m!115881))

(declare-fun m!115883 () Bool)

(assert (=> b!104370 m!115883))

(assert (=> d!27917 d!28295))

(declare-fun b!104371 () Bool)

(declare-fun e!67956 () List!1592)

(declare-fun call!10948 () List!1592)

(assert (=> b!104371 (= e!67956 call!10948)))

(declare-fun b!104372 () Bool)

(declare-fun e!67959 () List!1592)

(assert (=> b!104372 (= e!67959 (insertStrictlySorted!75 (t!5646 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104373 () Bool)

(declare-fun e!67957 () List!1592)

(declare-fun call!10949 () List!1592)

(assert (=> b!104373 (= e!67957 call!10949)))

(declare-fun d!28297 () Bool)

(declare-fun e!67958 () Bool)

(assert (=> d!28297 e!67958))

(declare-fun res!52047 () Bool)

(assert (=> d!28297 (=> (not res!52047) (not e!67958))))

(declare-fun lt!53278 () List!1592)

(assert (=> d!28297 (= res!52047 (isStrictlySorted!295 lt!53278))))

(declare-fun e!67960 () List!1592)

(assert (=> d!28297 (= lt!53278 e!67960)))

(declare-fun c!18059 () Bool)

(assert (=> d!28297 (= c!18059 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28297 (isStrictlySorted!295 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28297 (= (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53278)))

(declare-fun bm!10944 () Bool)

(declare-fun call!10947 () List!1592)

(assert (=> bm!10944 (= call!10947 ($colon$colon!79 e!67959 (ite c!18059 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (tuple2!2355 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18061 () Bool)

(assert (=> bm!10944 (= c!18061 c!18059)))

(declare-fun c!18062 () Bool)

(declare-fun c!18060 () Bool)

(declare-fun b!104374 () Bool)

(assert (=> b!104374 (= e!67959 (ite c!18062 (t!5646 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (ite c!18060 (Cons!1588 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (t!5646 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))) Nil!1589)))))

(declare-fun b!104375 () Bool)

(assert (=> b!104375 (= c!18060 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (bvsgt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104375 (= e!67957 e!67956)))

(declare-fun bm!10945 () Bool)

(assert (=> bm!10945 (= call!10948 call!10949)))

(declare-fun b!104376 () Bool)

(assert (=> b!104376 (= e!67956 call!10948)))

(declare-fun bm!10946 () Bool)

(assert (=> bm!10946 (= call!10949 call!10947)))

(declare-fun b!104377 () Bool)

(assert (=> b!104377 (= e!67958 (contains!812 lt!53278 (tuple2!2355 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104378 () Bool)

(declare-fun res!52046 () Bool)

(assert (=> b!104378 (=> (not res!52046) (not e!67958))))

(assert (=> b!104378 (= res!52046 (containsKey!159 lt!53278 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104379 () Bool)

(assert (=> b!104379 (= e!67960 e!67957)))

(assert (=> b!104379 (= c!18062 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104380 () Bool)

(assert (=> b!104380 (= e!67960 call!10947)))

(assert (= (and d!28297 c!18059) b!104380))

(assert (= (and d!28297 (not c!18059)) b!104379))

(assert (= (and b!104379 c!18062) b!104373))

(assert (= (and b!104379 (not c!18062)) b!104375))

(assert (= (and b!104375 c!18060) b!104376))

(assert (= (and b!104375 (not c!18060)) b!104371))

(assert (= (or b!104376 b!104371) bm!10945))

(assert (= (or b!104373 bm!10945) bm!10946))

(assert (= (or b!104380 bm!10946) bm!10944))

(assert (= (and bm!10944 c!18061) b!104372))

(assert (= (and bm!10944 (not c!18061)) b!104374))

(assert (= (and d!28297 res!52047) b!104378))

(assert (= (and b!104378 res!52046) b!104377))

(declare-fun m!115885 () Bool)

(assert (=> d!28297 m!115885))

(declare-fun m!115887 () Bool)

(assert (=> d!28297 m!115887))

(declare-fun m!115889 () Bool)

(assert (=> b!104377 m!115889))

(declare-fun m!115891 () Bool)

(assert (=> b!104378 m!115891))

(declare-fun m!115893 () Bool)

(assert (=> b!104372 m!115893))

(declare-fun m!115895 () Bool)

(assert (=> bm!10944 m!115895))

(assert (=> d!27917 d!28297))

(declare-fun d!28299 () Bool)

(declare-fun res!52048 () Bool)

(declare-fun e!67961 () Bool)

(assert (=> d!28299 (=> res!52048 e!67961)))

(assert (=> d!28299 (= res!52048 (and ((_ is Cons!1588) (toList!779 lt!52641)) (= (_1!1188 (h!2184 (toList!779 lt!52641))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28299 (= (containsKey!159 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000) e!67961)))

(declare-fun b!104381 () Bool)

(declare-fun e!67962 () Bool)

(assert (=> b!104381 (= e!67961 e!67962)))

(declare-fun res!52049 () Bool)

(assert (=> b!104381 (=> (not res!52049) (not e!67962))))

(assert (=> b!104381 (= res!52049 (and (or (not ((_ is Cons!1588) (toList!779 lt!52641))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52641))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1588) (toList!779 lt!52641)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52641))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104382 () Bool)

(assert (=> b!104382 (= e!67962 (containsKey!159 (t!5646 (toList!779 lt!52641)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28299 (not res!52048)) b!104381))

(assert (= (and b!104381 res!52049) b!104382))

(declare-fun m!115897 () Bool)

(assert (=> b!104382 m!115897))

(assert (=> d!28001 d!28299))

(declare-fun b!104383 () Bool)

(declare-fun e!67966 () Bool)

(declare-fun e!67964 () Bool)

(assert (=> b!104383 (= e!67966 e!67964)))

(declare-fun res!52051 () Bool)

(assert (=> b!104383 (=> (not res!52051) (not e!67964))))

(declare-fun e!67963 () Bool)

(assert (=> b!104383 (= res!52051 (not e!67963))))

(declare-fun res!52050 () Bool)

(assert (=> b!104383 (=> (not res!52050) (not e!67963))))

(assert (=> b!104383 (= res!52050 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104384 () Bool)

(declare-fun e!67965 () Bool)

(declare-fun call!10950 () Bool)

(assert (=> b!104384 (= e!67965 call!10950)))

(declare-fun b!104385 () Bool)

(assert (=> b!104385 (= e!67964 e!67965)))

(declare-fun c!18063 () Bool)

(assert (=> b!104385 (= c!18063 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104386 () Bool)

(assert (=> b!104386 (= e!67965 call!10950)))

(declare-fun d!28301 () Bool)

(declare-fun res!52052 () Bool)

(assert (=> d!28301 (=> res!52052 e!67966)))

(assert (=> d!28301 (= res!52052 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28301 (= (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 Nil!1590) e!67966)))

(declare-fun b!104387 () Bool)

(assert (=> b!104387 (= e!67963 (contains!813 Nil!1590 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!10947 () Bool)

(assert (=> bm!10947 (= call!10950 (arrayNoDuplicates!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18063 (Cons!1589 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000) Nil!1590) Nil!1590)))))

(assert (= (and d!28301 (not res!52052)) b!104383))

(assert (= (and b!104383 res!52050) b!104387))

(assert (= (and b!104383 res!52051) b!104385))

(assert (= (and b!104385 c!18063) b!104386))

(assert (= (and b!104385 (not c!18063)) b!104384))

(assert (= (or b!104386 b!104384) bm!10947))

(declare-fun m!115899 () Bool)

(assert (=> b!104383 m!115899))

(assert (=> b!104383 m!115899))

(declare-fun m!115901 () Bool)

(assert (=> b!104383 m!115901))

(assert (=> b!104385 m!115899))

(assert (=> b!104385 m!115899))

(assert (=> b!104385 m!115901))

(assert (=> b!104387 m!115899))

(assert (=> b!104387 m!115899))

(declare-fun m!115903 () Bool)

(assert (=> b!104387 m!115903))

(assert (=> bm!10947 m!115899))

(declare-fun m!115905 () Bool)

(assert (=> bm!10947 m!115905))

(assert (=> b!103923 d!28301))

(declare-fun d!28303 () Bool)

(assert (=> d!28303 (= (isEmpty!373 lt!52757) (isEmpty!374 (toList!779 lt!52757)))))

(declare-fun bs!4293 () Bool)

(assert (= bs!4293 d!28303))

(declare-fun m!115907 () Bool)

(assert (=> bs!4293 m!115907))

(assert (=> b!103528 d!28303))

(declare-fun d!28305 () Bool)

(declare-fun lt!53279 () Bool)

(assert (=> d!28305 (= lt!53279 (select (content!108 (t!5646 (toList!779 lt!52562))) lt!52442))))

(declare-fun e!67967 () Bool)

(assert (=> d!28305 (= lt!53279 e!67967)))

(declare-fun res!52053 () Bool)

(assert (=> d!28305 (=> (not res!52053) (not e!67967))))

(assert (=> d!28305 (= res!52053 ((_ is Cons!1588) (t!5646 (toList!779 lt!52562))))))

(assert (=> d!28305 (= (contains!812 (t!5646 (toList!779 lt!52562)) lt!52442) lt!53279)))

(declare-fun b!104388 () Bool)

(declare-fun e!67968 () Bool)

(assert (=> b!104388 (= e!67967 e!67968)))

(declare-fun res!52054 () Bool)

(assert (=> b!104388 (=> res!52054 e!67968)))

(assert (=> b!104388 (= res!52054 (= (h!2184 (t!5646 (toList!779 lt!52562))) lt!52442))))

(declare-fun b!104389 () Bool)

(assert (=> b!104389 (= e!67968 (contains!812 (t!5646 (t!5646 (toList!779 lt!52562))) lt!52442))))

(assert (= (and d!28305 res!52053) b!104388))

(assert (= (and b!104388 (not res!52054)) b!104389))

(assert (=> d!28305 m!115779))

(declare-fun m!115909 () Bool)

(assert (=> d!28305 m!115909))

(declare-fun m!115911 () Bool)

(assert (=> b!104389 m!115911))

(assert (=> b!103925 d!28305))

(declare-fun b!104392 () Bool)

(declare-fun e!67970 () Option!162)

(assert (=> b!104392 (= e!67970 (getValueByKey!156 (t!5646 (toList!779 lt!52751)) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104391 () Bool)

(declare-fun e!67969 () Option!162)

(assert (=> b!104391 (= e!67969 e!67970)))

(declare-fun c!18065 () Bool)

(assert (=> b!104391 (= c!18065 (and ((_ is Cons!1588) (toList!779 lt!52751)) (not (= (_1!1188 (h!2184 (toList!779 lt!52751))) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104390 () Bool)

(assert (=> b!104390 (= e!67969 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52751)))))))

(declare-fun d!28307 () Bool)

(declare-fun c!18064 () Bool)

(assert (=> d!28307 (= c!18064 (and ((_ is Cons!1588) (toList!779 lt!52751)) (= (_1!1188 (h!2184 (toList!779 lt!52751))) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28307 (= (getValueByKey!156 (toList!779 lt!52751) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67969)))

(declare-fun b!104393 () Bool)

(assert (=> b!104393 (= e!67970 None!160)))

(assert (= (and d!28307 c!18064) b!104390))

(assert (= (and d!28307 (not c!18064)) b!104391))

(assert (= (and b!104391 c!18065) b!104392))

(assert (= (and b!104391 (not c!18065)) b!104393))

(declare-fun m!115913 () Bool)

(assert (=> b!104392 m!115913))

(assert (=> b!103523 d!28307))

(declare-fun d!28309 () Bool)

(declare-fun e!67971 () Bool)

(assert (=> d!28309 e!67971))

(declare-fun res!52055 () Bool)

(assert (=> d!28309 (=> (not res!52055) (not e!67971))))

(declare-fun lt!53282 () ListLongMap!1527)

(assert (=> d!28309 (= res!52055 (contains!811 lt!53282 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!53281 () List!1592)

(assert (=> d!28309 (= lt!53282 (ListLongMap!1528 lt!53281))))

(declare-fun lt!53280 () Unit!3132)

(declare-fun lt!53283 () Unit!3132)

(assert (=> d!28309 (= lt!53280 lt!53283)))

(assert (=> d!28309 (= (getValueByKey!156 lt!53281 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28309 (= lt!53283 (lemmaContainsTupThenGetReturnValue!72 lt!53281 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28309 (= lt!53281 (insertStrictlySorted!75 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28309 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!53282)))

(declare-fun b!104394 () Bool)

(declare-fun res!52056 () Bool)

(assert (=> b!104394 (=> (not res!52056) (not e!67971))))

(assert (=> b!104394 (= res!52056 (= (getValueByKey!156 (toList!779 lt!53282) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104395 () Bool)

(assert (=> b!104395 (= e!67971 (contains!812 (toList!779 lt!53282) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!28309 res!52055) b!104394))

(assert (= (and b!104394 res!52056) b!104395))

(declare-fun m!115915 () Bool)

(assert (=> d!28309 m!115915))

(declare-fun m!115917 () Bool)

(assert (=> d!28309 m!115917))

(declare-fun m!115919 () Bool)

(assert (=> d!28309 m!115919))

(declare-fun m!115921 () Bool)

(assert (=> d!28309 m!115921))

(declare-fun m!115923 () Bool)

(assert (=> b!104394 m!115923))

(declare-fun m!115925 () Bool)

(assert (=> b!104395 m!115925))

(assert (=> b!103777 d!28309))

(assert (=> b!103777 d!27817))

(declare-fun call!10957 () ListLongMap!1527)

(declare-fun bm!10948 () Bool)

(assert (=> bm!10948 (= call!10957 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10949 () Bool)

(declare-fun call!10954 () ListLongMap!1527)

(declare-fun call!10955 () ListLongMap!1527)

(assert (=> bm!10949 (= call!10954 call!10955)))

(declare-fun b!104396 () Bool)

(declare-fun e!67972 () Unit!3132)

(declare-fun lt!53298 () Unit!3132)

(assert (=> b!104396 (= e!67972 lt!53298)))

(declare-fun lt!53300 () ListLongMap!1527)

(assert (=> b!104396 (= lt!53300 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53305 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53305 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53284 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53284 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53302 () Unit!3132)

(assert (=> b!104396 (= lt!53302 (addStillContains!73 lt!53300 lt!53305 (zeroValue!2437 newMap!16) lt!53284))))

(assert (=> b!104396 (contains!811 (+!137 lt!53300 (tuple2!2355 lt!53305 (zeroValue!2437 newMap!16))) lt!53284)))

(declare-fun lt!53289 () Unit!3132)

(assert (=> b!104396 (= lt!53289 lt!53302)))

(declare-fun lt!53294 () ListLongMap!1527)

(assert (=> b!104396 (= lt!53294 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53292 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53292 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53296 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53296 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53285 () Unit!3132)

(assert (=> b!104396 (= lt!53285 (addApplyDifferent!73 lt!53294 lt!53292 (minValue!2437 newMap!16) lt!53296))))

(assert (=> b!104396 (= (apply!97 (+!137 lt!53294 (tuple2!2355 lt!53292 (minValue!2437 newMap!16))) lt!53296) (apply!97 lt!53294 lt!53296))))

(declare-fun lt!53304 () Unit!3132)

(assert (=> b!104396 (= lt!53304 lt!53285)))

(declare-fun lt!53299 () ListLongMap!1527)

(assert (=> b!104396 (= lt!53299 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53297 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53297 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53287 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53287 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53303 () Unit!3132)

(assert (=> b!104396 (= lt!53303 (addApplyDifferent!73 lt!53299 lt!53297 (zeroValue!2437 newMap!16) lt!53287))))

(assert (=> b!104396 (= (apply!97 (+!137 lt!53299 (tuple2!2355 lt!53297 (zeroValue!2437 newMap!16))) lt!53287) (apply!97 lt!53299 lt!53287))))

(declare-fun lt!53286 () Unit!3132)

(assert (=> b!104396 (= lt!53286 lt!53303)))

(declare-fun lt!53293 () ListLongMap!1527)

(assert (=> b!104396 (= lt!53293 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53295 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53295 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53291 () (_ BitVec 64))

(assert (=> b!104396 (= lt!53291 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104396 (= lt!53298 (addApplyDifferent!73 lt!53293 lt!53295 (minValue!2437 newMap!16) lt!53291))))

(assert (=> b!104396 (= (apply!97 (+!137 lt!53293 (tuple2!2355 lt!53295 (minValue!2437 newMap!16))) lt!53291) (apply!97 lt!53293 lt!53291))))

(declare-fun b!104397 () Bool)

(declare-fun e!67976 () Bool)

(declare-fun call!10951 () Bool)

(assert (=> b!104397 (= e!67976 (not call!10951))))

(declare-fun b!104398 () Bool)

(declare-fun e!67977 () Bool)

(declare-fun lt!53301 () ListLongMap!1527)

(assert (=> b!104398 (= e!67977 (= (apply!97 lt!53301 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104398 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))))))

(assert (=> b!104398 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104399 () Bool)

(declare-fun e!67978 () ListLongMap!1527)

(declare-fun call!10952 () ListLongMap!1527)

(assert (=> b!104399 (= e!67978 call!10952)))

(declare-fun b!104400 () Bool)

(declare-fun Unit!3183 () Unit!3132)

(assert (=> b!104400 (= e!67972 Unit!3183)))

(declare-fun b!104401 () Bool)

(declare-fun e!67975 () ListLongMap!1527)

(assert (=> b!104401 (= e!67975 call!10954)))

(declare-fun b!104403 () Bool)

(declare-fun e!67973 () Bool)

(declare-fun call!10953 () Bool)

(assert (=> b!104403 (= e!67973 (not call!10953))))

(declare-fun b!104404 () Bool)

(declare-fun e!67974 () Bool)

(assert (=> b!104404 (= e!67974 e!67977)))

(declare-fun res!52059 () Bool)

(assert (=> b!104404 (=> (not res!52059) (not e!67977))))

(assert (=> b!104404 (= res!52059 (contains!811 lt!53301 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104404 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104405 () Bool)

(declare-fun e!67981 () Bool)

(assert (=> b!104405 (= e!67981 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104406 () Bool)

(declare-fun res!52057 () Bool)

(declare-fun e!67979 () Bool)

(assert (=> b!104406 (=> (not res!52057) (not e!67979))))

(assert (=> b!104406 (= res!52057 e!67973)))

(declare-fun c!18066 () Bool)

(assert (=> b!104406 (= c!18066 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!18071 () Bool)

(declare-fun call!10956 () ListLongMap!1527)

(declare-fun c!18069 () Bool)

(declare-fun bm!10950 () Bool)

(assert (=> bm!10950 (= call!10956 (+!137 (ite c!18069 call!10957 (ite c!18071 call!10955 call!10954)) (ite (or c!18069 c!18071) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!104407 () Bool)

(declare-fun e!67980 () ListLongMap!1527)

(assert (=> b!104407 (= e!67980 e!67978)))

(assert (=> b!104407 (= c!18071 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104408 () Bool)

(assert (=> b!104408 (= e!67975 call!10952)))

(declare-fun bm!10951 () Bool)

(assert (=> bm!10951 (= call!10952 call!10956)))

(declare-fun b!104409 () Bool)

(declare-fun c!18070 () Bool)

(assert (=> b!104409 (= c!18070 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104409 (= e!67978 e!67975)))

(declare-fun b!104410 () Bool)

(assert (=> b!104410 (= e!67980 (+!137 call!10956 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!10952 () Bool)

(assert (=> bm!10952 (= call!10955 call!10957)))

(declare-fun b!104411 () Bool)

(declare-fun res!52065 () Bool)

(assert (=> b!104411 (=> (not res!52065) (not e!67979))))

(assert (=> b!104411 (= res!52065 e!67974)))

(declare-fun res!52061 () Bool)

(assert (=> b!104411 (=> res!52061 e!67974)))

(declare-fun e!67982 () Bool)

(assert (=> b!104411 (= res!52061 (not e!67982))))

(declare-fun res!52060 () Bool)

(assert (=> b!104411 (=> (not res!52060) (not e!67982))))

(assert (=> b!104411 (= res!52060 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104412 () Bool)

(declare-fun e!67984 () Bool)

(assert (=> b!104412 (= e!67984 (= (apply!97 lt!53301 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!10953 () Bool)

(assert (=> bm!10953 (= call!10953 (contains!811 lt!53301 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10954 () Bool)

(assert (=> bm!10954 (= call!10951 (contains!811 lt!53301 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104402 () Bool)

(assert (=> b!104402 (= e!67976 e!67984)))

(declare-fun res!52063 () Bool)

(assert (=> b!104402 (= res!52063 call!10951)))

(assert (=> b!104402 (=> (not res!52063) (not e!67984))))

(declare-fun d!28311 () Bool)

(assert (=> d!28311 e!67979))

(declare-fun res!52064 () Bool)

(assert (=> d!28311 (=> (not res!52064) (not e!67979))))

(assert (=> d!28311 (= res!52064 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!53288 () ListLongMap!1527)

(assert (=> d!28311 (= lt!53301 lt!53288)))

(declare-fun lt!53290 () Unit!3132)

(assert (=> d!28311 (= lt!53290 e!67972)))

(declare-fun c!18068 () Bool)

(assert (=> d!28311 (= c!18068 e!67981)))

(declare-fun res!52062 () Bool)

(assert (=> d!28311 (=> (not res!52062) (not e!67981))))

(assert (=> d!28311 (= res!52062 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28311 (= lt!53288 e!67980)))

(assert (=> d!28311 (= c!18069 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28311 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28311 (= (getCurrentListMap!467 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53301)))

(declare-fun b!104413 () Bool)

(assert (=> b!104413 (= e!67982 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104414 () Bool)

(declare-fun e!67983 () Bool)

(assert (=> b!104414 (= e!67973 e!67983)))

(declare-fun res!52058 () Bool)

(assert (=> b!104414 (= res!52058 call!10953)))

(assert (=> b!104414 (=> (not res!52058) (not e!67983))))

(declare-fun b!104415 () Bool)

(assert (=> b!104415 (= e!67983 (= (apply!97 lt!53301 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!104416 () Bool)

(assert (=> b!104416 (= e!67979 e!67976)))

(declare-fun c!18067 () Bool)

(assert (=> b!104416 (= c!18067 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28311 c!18069) b!104410))

(assert (= (and d!28311 (not c!18069)) b!104407))

(assert (= (and b!104407 c!18071) b!104399))

(assert (= (and b!104407 (not c!18071)) b!104409))

(assert (= (and b!104409 c!18070) b!104408))

(assert (= (and b!104409 (not c!18070)) b!104401))

(assert (= (or b!104408 b!104401) bm!10949))

(assert (= (or b!104399 bm!10949) bm!10952))

(assert (= (or b!104399 b!104408) bm!10951))

(assert (= (or b!104410 bm!10952) bm!10948))

(assert (= (or b!104410 bm!10951) bm!10950))

(assert (= (and d!28311 res!52062) b!104405))

(assert (= (and d!28311 c!18068) b!104396))

(assert (= (and d!28311 (not c!18068)) b!104400))

(assert (= (and d!28311 res!52064) b!104411))

(assert (= (and b!104411 res!52060) b!104413))

(assert (= (and b!104411 (not res!52061)) b!104404))

(assert (= (and b!104404 res!52059) b!104398))

(assert (= (and b!104411 res!52065) b!104406))

(assert (= (and b!104406 c!18066) b!104414))

(assert (= (and b!104406 (not c!18066)) b!104403))

(assert (= (and b!104414 res!52058) b!104415))

(assert (= (or b!104414 b!104403) bm!10953))

(assert (= (and b!104406 res!52057) b!104416))

(assert (= (and b!104416 c!18067) b!104402))

(assert (= (and b!104416 (not c!18067)) b!104397))

(assert (= (and b!104402 res!52063) b!104412))

(assert (= (or b!104402 b!104397) bm!10954))

(declare-fun b_lambda!4663 () Bool)

(assert (=> (not b_lambda!4663) (not b!104398)))

(assert (=> b!104398 t!5659))

(declare-fun b_and!6449 () Bool)

(assert (= b_and!6445 (and (=> t!5659 result!3431) b_and!6449)))

(assert (=> b!104398 t!5661))

(declare-fun b_and!6451 () Bool)

(assert (= b_and!6447 (and (=> t!5661 result!3433) b_and!6451)))

(declare-fun m!115927 () Bool)

(assert (=> b!104410 m!115927))

(assert (=> d!28311 m!114321))

(declare-fun m!115929 () Bool)

(assert (=> bm!10948 m!115929))

(assert (=> b!104413 m!114381))

(assert (=> b!104413 m!114381))

(assert (=> b!104413 m!114383))

(declare-fun m!115931 () Bool)

(assert (=> bm!10954 m!115931))

(assert (=> b!104404 m!114381))

(assert (=> b!104404 m!114381))

(declare-fun m!115933 () Bool)

(assert (=> b!104404 m!115933))

(assert (=> b!104398 m!114389))

(assert (=> b!104398 m!114381))

(declare-fun m!115935 () Bool)

(assert (=> b!104398 m!115935))

(assert (=> b!104398 m!114381))

(declare-fun m!115937 () Bool)

(assert (=> b!104398 m!115937))

(assert (=> b!104398 m!115937))

(assert (=> b!104398 m!114389))

(declare-fun m!115939 () Bool)

(assert (=> b!104398 m!115939))

(declare-fun m!115941 () Bool)

(assert (=> bm!10950 m!115941))

(declare-fun m!115943 () Bool)

(assert (=> b!104415 m!115943))

(declare-fun m!115945 () Bool)

(assert (=> bm!10953 m!115945))

(declare-fun m!115947 () Bool)

(assert (=> b!104396 m!115947))

(declare-fun m!115949 () Bool)

(assert (=> b!104396 m!115949))

(declare-fun m!115951 () Bool)

(assert (=> b!104396 m!115951))

(assert (=> b!104396 m!114381))

(declare-fun m!115953 () Bool)

(assert (=> b!104396 m!115953))

(assert (=> b!104396 m!115929))

(declare-fun m!115955 () Bool)

(assert (=> b!104396 m!115955))

(declare-fun m!115957 () Bool)

(assert (=> b!104396 m!115957))

(declare-fun m!115959 () Bool)

(assert (=> b!104396 m!115959))

(declare-fun m!115961 () Bool)

(assert (=> b!104396 m!115961))

(declare-fun m!115963 () Bool)

(assert (=> b!104396 m!115963))

(declare-fun m!115965 () Bool)

(assert (=> b!104396 m!115965))

(assert (=> b!104396 m!115959))

(declare-fun m!115967 () Bool)

(assert (=> b!104396 m!115967))

(assert (=> b!104396 m!115953))

(declare-fun m!115969 () Bool)

(assert (=> b!104396 m!115969))

(assert (=> b!104396 m!115951))

(declare-fun m!115971 () Bool)

(assert (=> b!104396 m!115971))

(declare-fun m!115973 () Bool)

(assert (=> b!104396 m!115973))

(assert (=> b!104396 m!115963))

(declare-fun m!115975 () Bool)

(assert (=> b!104396 m!115975))

(assert (=> b!104405 m!114381))

(assert (=> b!104405 m!114381))

(assert (=> b!104405 m!114383))

(declare-fun m!115977 () Bool)

(assert (=> b!104412 m!115977))

(assert (=> b!103777 d!28311))

(declare-fun d!28313 () Bool)

(assert (=> d!28313 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (getCurrentListMap!467 (_keys!4262 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28313 true))

(declare-fun _$5!107 () Unit!3132)

(assert (=> d!28313 (= (choose!653 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (index!3156 lt!52724) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)) _$5!107)))

(declare-fun bs!4294 () Bool)

(assert (= bs!4294 d!28313))

(assert (=> bs!4294 m!114197))

(assert (=> bs!4294 m!114197))

(assert (=> bs!4294 m!114803))

(assert (=> bs!4294 m!114259))

(assert (=> bs!4294 m!114805))

(assert (=> d!27925 d!28313))

(assert (=> d!27925 d!28055))

(declare-fun b!104419 () Bool)

(declare-fun e!67986 () Option!162)

(assert (=> b!104419 (= e!67986 (getValueByKey!156 (t!5646 (toList!779 lt!52858)) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104418 () Bool)

(declare-fun e!67985 () Option!162)

(assert (=> b!104418 (= e!67985 e!67986)))

(declare-fun c!18073 () Bool)

(assert (=> b!104418 (= c!18073 (and ((_ is Cons!1588) (toList!779 lt!52858)) (not (= (_1!1188 (h!2184 (toList!779 lt!52858))) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104417 () Bool)

(assert (=> b!104417 (= e!67985 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52858)))))))

(declare-fun d!28315 () Bool)

(declare-fun c!18072 () Bool)

(assert (=> d!28315 (= c!18072 (and ((_ is Cons!1588) (toList!779 lt!52858)) (= (_1!1188 (h!2184 (toList!779 lt!52858))) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28315 (= (getValueByKey!156 (toList!779 lt!52858) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!67985)))

(declare-fun b!104420 () Bool)

(assert (=> b!104420 (= e!67986 None!160)))

(assert (= (and d!28315 c!18072) b!104417))

(assert (= (and d!28315 (not c!18072)) b!104418))

(assert (= (and b!104418 c!18073) b!104419))

(assert (= (and b!104418 (not c!18073)) b!104420))

(declare-fun m!115979 () Bool)

(assert (=> b!104419 m!115979))

(assert (=> b!103709 d!28315))

(declare-fun d!28317 () Bool)

(assert (=> d!28317 (isDefined!108 (getValueByKey!156 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(declare-fun lt!53306 () Unit!3132)

(assert (=> d!28317 (= lt!53306 (choose!654 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(declare-fun e!67987 () Bool)

(assert (=> d!28317 e!67987))

(declare-fun res!52066 () Bool)

(assert (=> d!28317 (=> (not res!52066) (not e!67987))))

(assert (=> d!28317 (= res!52066 (isStrictlySorted!295 (toList!779 call!10829)))))

(assert (=> d!28317 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))) lt!53306)))

(declare-fun b!104421 () Bool)

(assert (=> b!104421 (= e!67987 (containsKey!159 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (= (and d!28317 res!52066) b!104421))

(assert (=> d!28317 m!114261))

(assert (=> d!28317 m!114791))

(assert (=> d!28317 m!114791))

(assert (=> d!28317 m!114793))

(assert (=> d!28317 m!114261))

(declare-fun m!115981 () Bool)

(assert (=> d!28317 m!115981))

(declare-fun m!115983 () Bool)

(assert (=> d!28317 m!115983))

(assert (=> b!104421 m!114261))

(assert (=> b!104421 m!114787))

(assert (=> b!103769 d!28317))

(assert (=> b!103769 d!28119))

(assert (=> b!103769 d!28121))

(declare-fun d!28319 () Bool)

(declare-fun c!18074 () Bool)

(assert (=> d!28319 (= c!18074 ((_ is Nil!1589) (toList!779 lt!52569)))))

(declare-fun e!67988 () (InoxSet tuple2!2354))

(assert (=> d!28319 (= (content!108 (toList!779 lt!52569)) e!67988)))

(declare-fun b!104422 () Bool)

(assert (=> b!104422 (= e!67988 ((as const (Array tuple2!2354 Bool)) false))))

(declare-fun b!104423 () Bool)

(assert (=> b!104423 (= e!67988 ((_ map or) (store ((as const (Array tuple2!2354 Bool)) false) (h!2184 (toList!779 lt!52569)) true) (content!108 (t!5646 (toList!779 lt!52569)))))))

(assert (= (and d!28319 c!18074) b!104422))

(assert (= (and d!28319 (not c!18074)) b!104423))

(declare-fun m!115985 () Bool)

(assert (=> b!104423 m!115985))

(declare-fun m!115987 () Bool)

(assert (=> b!104423 m!115987))

(assert (=> d!27969 d!28319))

(declare-fun b!104424 () Bool)

(declare-fun e!67991 () Bool)

(declare-fun call!10958 () Bool)

(assert (=> b!104424 (= e!67991 call!10958)))

(declare-fun d!28321 () Bool)

(declare-fun res!52067 () Bool)

(declare-fun e!67990 () Bool)

(assert (=> d!28321 (=> res!52067 e!67990)))

(assert (=> d!28321 (= res!52067 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28321 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4262 newMap!16) (mask!6696 newMap!16)) e!67990)))

(declare-fun b!104425 () Bool)

(declare-fun e!67989 () Bool)

(assert (=> b!104425 (= e!67989 call!10958)))

(declare-fun b!104426 () Bool)

(assert (=> b!104426 (= e!67990 e!67989)))

(declare-fun c!18075 () Bool)

(assert (=> b!104426 (= c!18075 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!10955 () Bool)

(assert (=> bm!10955 (= call!10958 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun b!104427 () Bool)

(assert (=> b!104427 (= e!67989 e!67991)))

(declare-fun lt!53308 () (_ BitVec 64))

(assert (=> b!104427 (= lt!53308 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!53309 () Unit!3132)

(assert (=> b!104427 (= lt!53309 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4262 newMap!16) lt!53308 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!104427 (arrayContainsKey!0 (_keys!4262 newMap!16) lt!53308 #b00000000000000000000000000000000)))

(declare-fun lt!53307 () Unit!3132)

(assert (=> b!104427 (= lt!53307 lt!53309)))

(declare-fun res!52068 () Bool)

(assert (=> b!104427 (= res!52068 (= (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4262 newMap!16) (mask!6696 newMap!16)) (Found!252 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!104427 (=> (not res!52068) (not e!67991))))

(assert (= (and d!28321 (not res!52067)) b!104426))

(assert (= (and b!104426 c!18075) b!104427))

(assert (= (and b!104426 (not c!18075)) b!104425))

(assert (= (and b!104427 res!52068) b!104424))

(assert (= (or b!104424 b!104425) bm!10955))

(assert (=> b!104426 m!115467))

(assert (=> b!104426 m!115467))

(assert (=> b!104426 m!115469))

(declare-fun m!115989 () Bool)

(assert (=> bm!10955 m!115989))

(assert (=> b!104427 m!115467))

(declare-fun m!115991 () Bool)

(assert (=> b!104427 m!115991))

(declare-fun m!115993 () Bool)

(assert (=> b!104427 m!115993))

(assert (=> b!104427 m!115467))

(declare-fun m!115995 () Bool)

(assert (=> b!104427 m!115995))

(assert (=> bm!10859 d!28321))

(declare-fun d!28323 () Bool)

(declare-fun lt!53310 () Bool)

(assert (=> d!28323 (= lt!53310 (select (content!108 lt!52810) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun e!67992 () Bool)

(assert (=> d!28323 (= lt!53310 e!67992)))

(declare-fun res!52069 () Bool)

(assert (=> d!28323 (=> (not res!52069) (not e!67992))))

(assert (=> d!28323 (= res!52069 ((_ is Cons!1588) lt!52810))))

(assert (=> d!28323 (= (contains!812 lt!52810 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))) lt!53310)))

(declare-fun b!104428 () Bool)

(declare-fun e!67993 () Bool)

(assert (=> b!104428 (= e!67992 e!67993)))

(declare-fun res!52070 () Bool)

(assert (=> b!104428 (=> res!52070 e!67993)))

(assert (=> b!104428 (= res!52070 (= (h!2184 lt!52810) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!104429 () Bool)

(assert (=> b!104429 (= e!67993 (contains!812 (t!5646 lt!52810) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(assert (= (and d!28323 res!52069) b!104428))

(assert (= (and b!104428 (not res!52070)) b!104429))

(declare-fun m!115997 () Bool)

(assert (=> d!28323 m!115997))

(declare-fun m!115999 () Bool)

(assert (=> d!28323 m!115999))

(declare-fun m!116001 () Bool)

(assert (=> b!104429 m!116001))

(assert (=> b!103663 d!28323))

(declare-fun e!67995 () Option!162)

(declare-fun b!104432 () Bool)

(assert (=> b!104432 (= e!67995 (getValueByKey!156 (t!5646 (toList!779 lt!52941)) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104431 () Bool)

(declare-fun e!67994 () Option!162)

(assert (=> b!104431 (= e!67994 e!67995)))

(declare-fun c!18077 () Bool)

(assert (=> b!104431 (= c!18077 (and ((_ is Cons!1588) (toList!779 lt!52941)) (not (= (_1!1188 (h!2184 (toList!779 lt!52941))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun b!104430 () Bool)

(assert (=> b!104430 (= e!67994 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52941)))))))

(declare-fun c!18076 () Bool)

(declare-fun d!28325 () Bool)

(assert (=> d!28325 (= c!18076 (and ((_ is Cons!1588) (toList!779 lt!52941)) (= (_1!1188 (h!2184 (toList!779 lt!52941))) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (=> d!28325 (= (getValueByKey!156 (toList!779 lt!52941) (_1!1188 (ite (or c!17771 c!17773) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) e!67994)))

(declare-fun b!104433 () Bool)

(assert (=> b!104433 (= e!67995 None!160)))

(assert (= (and d!28325 c!18076) b!104430))

(assert (= (and d!28325 (not c!18076)) b!104431))

(assert (= (and b!104431 c!18077) b!104432))

(assert (= (and b!104431 (not c!18077)) b!104433))

(declare-fun m!116003 () Bool)

(assert (=> b!104432 m!116003))

(assert (=> b!103829 d!28325))

(declare-fun d!28327 () Bool)

(declare-fun lt!53311 () Bool)

(assert (=> d!28327 (= lt!53311 (select (content!108 (toList!779 lt!52887)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun e!67996 () Bool)

(assert (=> d!28327 (= lt!53311 e!67996)))

(declare-fun res!52071 () Bool)

(assert (=> d!28327 (=> (not res!52071) (not e!67996))))

(assert (=> d!28327 (= res!52071 ((_ is Cons!1588) (toList!779 lt!52887)))))

(assert (=> d!28327 (= (contains!812 (toList!779 lt!52887) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!53311)))

(declare-fun b!104434 () Bool)

(declare-fun e!67997 () Bool)

(assert (=> b!104434 (= e!67996 e!67997)))

(declare-fun res!52072 () Bool)

(assert (=> b!104434 (=> res!52072 e!67997)))

(assert (=> b!104434 (= res!52072 (= (h!2184 (toList!779 lt!52887)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun b!104435 () Bool)

(assert (=> b!104435 (= e!67997 (contains!812 (t!5646 (toList!779 lt!52887)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!28327 res!52071) b!104434))

(assert (= (and b!104434 (not res!52072)) b!104435))

(declare-fun m!116005 () Bool)

(assert (=> d!28327 m!116005))

(declare-fun m!116007 () Bool)

(assert (=> d!28327 m!116007))

(declare-fun m!116009 () Bool)

(assert (=> b!104435 m!116009))

(assert (=> b!103746 d!28327))

(declare-fun d!28329 () Bool)

(assert (=> d!28329 (= (apply!97 lt!52780 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (getValueByKey!156 (toList!779 lt!52780) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4295 () Bool)

(assert (= bs!4295 d!28329))

(assert (=> bs!4295 m!114381))

(declare-fun m!116011 () Bool)

(assert (=> bs!4295 m!116011))

(assert (=> bs!4295 m!116011))

(declare-fun m!116013 () Bool)

(assert (=> bs!4295 m!116013))

(assert (=> b!103539 d!28329))

(declare-fun d!28331 () Bool)

(declare-fun c!18078 () Bool)

(assert (=> d!28331 (= c!18078 ((_ is ValueCellFull!992) (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!67998 () V!3209)

(assert (=> d!28331 (= (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67998)))

(declare-fun b!104436 () Bool)

(assert (=> b!104436 (= e!67998 (get!1329 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104437 () Bool)

(assert (=> b!104437 (= e!67998 (get!1330 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28331 c!18078) b!104436))

(assert (= (and d!28331 (not c!18078)) b!104437))

(assert (=> b!104436 m!114393))

(assert (=> b!104436 m!114389))

(declare-fun m!116015 () Bool)

(assert (=> b!104436 m!116015))

(assert (=> b!104437 m!114393))

(assert (=> b!104437 m!114389))

(declare-fun m!116017 () Bool)

(assert (=> b!104437 m!116017))

(assert (=> b!103539 d!28331))

(declare-fun d!28333 () Bool)

(assert (not d!28333))

(assert (=> b!103963 d!28333))

(declare-fun d!28335 () Bool)

(declare-fun lt!53312 () Bool)

(assert (=> d!28335 (= lt!53312 (select (content!108 (t!5646 (toList!779 lt!52533))) lt!52442))))

(declare-fun e!67999 () Bool)

(assert (=> d!28335 (= lt!53312 e!67999)))

(declare-fun res!52073 () Bool)

(assert (=> d!28335 (=> (not res!52073) (not e!67999))))

(assert (=> d!28335 (= res!52073 ((_ is Cons!1588) (t!5646 (toList!779 lt!52533))))))

(assert (=> d!28335 (= (contains!812 (t!5646 (toList!779 lt!52533)) lt!52442) lt!53312)))

(declare-fun b!104438 () Bool)

(declare-fun e!68000 () Bool)

(assert (=> b!104438 (= e!67999 e!68000)))

(declare-fun res!52074 () Bool)

(assert (=> b!104438 (=> res!52074 e!68000)))

(assert (=> b!104438 (= res!52074 (= (h!2184 (t!5646 (toList!779 lt!52533))) lt!52442))))

(declare-fun b!104439 () Bool)

(assert (=> b!104439 (= e!68000 (contains!812 (t!5646 (t!5646 (toList!779 lt!52533))) lt!52442))))

(assert (= (and d!28335 res!52073) b!104438))

(assert (= (and b!104438 (not res!52074)) b!104439))

(declare-fun m!116019 () Bool)

(assert (=> d!28335 m!116019))

(declare-fun m!116021 () Bool)

(assert (=> d!28335 m!116021))

(declare-fun m!116023 () Bool)

(assert (=> b!104439 m!116023))

(assert (=> b!103563 d!28335))

(assert (=> b!103916 d!28051))

(declare-fun d!28337 () Bool)

(declare-fun e!68002 () Bool)

(assert (=> d!28337 e!68002))

(declare-fun res!52075 () Bool)

(assert (=> d!28337 (=> res!52075 e!68002)))

(declare-fun lt!53316 () Bool)

(assert (=> d!28337 (= res!52075 (not lt!53316))))

(declare-fun lt!53313 () Bool)

(assert (=> d!28337 (= lt!53316 lt!53313)))

(declare-fun lt!53314 () Unit!3132)

(declare-fun e!68001 () Unit!3132)

(assert (=> d!28337 (= lt!53314 e!68001)))

(declare-fun c!18079 () Bool)

(assert (=> d!28337 (= c!18079 lt!53313)))

(assert (=> d!28337 (= lt!53313 (containsKey!159 (toList!779 lt!52751) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28337 (= (contains!811 lt!52751 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53316)))

(declare-fun b!104440 () Bool)

(declare-fun lt!53315 () Unit!3132)

(assert (=> b!104440 (= e!68001 lt!53315)))

(assert (=> b!104440 (= lt!53315 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52751) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104440 (isDefined!108 (getValueByKey!156 (toList!779 lt!52751) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104441 () Bool)

(declare-fun Unit!3184 () Unit!3132)

(assert (=> b!104441 (= e!68001 Unit!3184)))

(declare-fun b!104442 () Bool)

(assert (=> b!104442 (= e!68002 (isDefined!108 (getValueByKey!156 (toList!779 lt!52751) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28337 c!18079) b!104440))

(assert (= (and d!28337 (not c!18079)) b!104441))

(assert (= (and d!28337 (not res!52075)) b!104442))

(declare-fun m!116025 () Bool)

(assert (=> d!28337 m!116025))

(declare-fun m!116027 () Bool)

(assert (=> b!104440 m!116027))

(assert (=> b!104440 m!114337))

(assert (=> b!104440 m!114337))

(declare-fun m!116029 () Bool)

(assert (=> b!104440 m!116029))

(assert (=> b!104442 m!114337))

(assert (=> b!104442 m!114337))

(assert (=> b!104442 m!116029))

(assert (=> d!27807 d!28337))

(declare-fun b!104445 () Bool)

(declare-fun e!68004 () Option!162)

(assert (=> b!104445 (= e!68004 (getValueByKey!156 (t!5646 lt!52750) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104444 () Bool)

(declare-fun e!68003 () Option!162)

(assert (=> b!104444 (= e!68003 e!68004)))

(declare-fun c!18081 () Bool)

(assert (=> b!104444 (= c!18081 (and ((_ is Cons!1588) lt!52750) (not (= (_1!1188 (h!2184 lt!52750)) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104443 () Bool)

(assert (=> b!104443 (= e!68003 (Some!161 (_2!1188 (h!2184 lt!52750))))))

(declare-fun d!28339 () Bool)

(declare-fun c!18080 () Bool)

(assert (=> d!28339 (= c!18080 (and ((_ is Cons!1588) lt!52750) (= (_1!1188 (h!2184 lt!52750)) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28339 (= (getValueByKey!156 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68003)))

(declare-fun b!104446 () Bool)

(assert (=> b!104446 (= e!68004 None!160)))

(assert (= (and d!28339 c!18080) b!104443))

(assert (= (and d!28339 (not c!18080)) b!104444))

(assert (= (and b!104444 c!18081) b!104445))

(assert (= (and b!104444 (not c!18081)) b!104446))

(declare-fun m!116031 () Bool)

(assert (=> b!104445 m!116031))

(assert (=> d!27807 d!28339))

(declare-fun d!28341 () Bool)

(assert (=> d!28341 (= (getValueByKey!156 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53317 () Unit!3132)

(assert (=> d!28341 (= lt!53317 (choose!648 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68005 () Bool)

(assert (=> d!28341 e!68005))

(declare-fun res!52076 () Bool)

(assert (=> d!28341 (=> (not res!52076) (not e!68005))))

(assert (=> d!28341 (= res!52076 (isStrictlySorted!295 lt!52750))))

(assert (=> d!28341 (= (lemmaContainsTupThenGetReturnValue!72 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53317)))

(declare-fun b!104447 () Bool)

(declare-fun res!52077 () Bool)

(assert (=> b!104447 (=> (not res!52077) (not e!68005))))

(assert (=> b!104447 (= res!52077 (containsKey!159 lt!52750 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104448 () Bool)

(assert (=> b!104448 (= e!68005 (contains!812 lt!52750 (tuple2!2355 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28341 res!52076) b!104447))

(assert (= (and b!104447 res!52077) b!104448))

(assert (=> d!28341 m!114331))

(declare-fun m!116033 () Bool)

(assert (=> d!28341 m!116033))

(declare-fun m!116035 () Bool)

(assert (=> d!28341 m!116035))

(declare-fun m!116037 () Bool)

(assert (=> b!104447 m!116037))

(declare-fun m!116039 () Bool)

(assert (=> b!104448 m!116039))

(assert (=> d!27807 d!28341))

(declare-fun b!104449 () Bool)

(declare-fun e!68006 () List!1592)

(declare-fun call!10960 () List!1592)

(assert (=> b!104449 (= e!68006 call!10960)))

(declare-fun b!104450 () Bool)

(declare-fun e!68009 () List!1592)

(assert (=> b!104450 (= e!68009 (insertStrictlySorted!75 (t!5646 (toList!779 call!10772)) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104451 () Bool)

(declare-fun e!68007 () List!1592)

(declare-fun call!10961 () List!1592)

(assert (=> b!104451 (= e!68007 call!10961)))

(declare-fun d!28343 () Bool)

(declare-fun e!68008 () Bool)

(assert (=> d!28343 e!68008))

(declare-fun res!52079 () Bool)

(assert (=> d!28343 (=> (not res!52079) (not e!68008))))

(declare-fun lt!53318 () List!1592)

(assert (=> d!28343 (= res!52079 (isStrictlySorted!295 lt!53318))))

(declare-fun e!68010 () List!1592)

(assert (=> d!28343 (= lt!53318 e!68010)))

(declare-fun c!18082 () Bool)

(assert (=> d!28343 (= c!18082 (and ((_ is Cons!1588) (toList!779 call!10772)) (bvslt (_1!1188 (h!2184 (toList!779 call!10772))) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28343 (isStrictlySorted!295 (toList!779 call!10772))))

(assert (=> d!28343 (= (insertStrictlySorted!75 (toList!779 call!10772) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53318)))

(declare-fun bm!10956 () Bool)

(declare-fun call!10959 () List!1592)

(assert (=> bm!10956 (= call!10959 ($colon$colon!79 e!68009 (ite c!18082 (h!2184 (toList!779 call!10772)) (tuple2!2355 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18084 () Bool)

(assert (=> bm!10956 (= c!18084 c!18082)))

(declare-fun c!18085 () Bool)

(declare-fun c!18083 () Bool)

(declare-fun b!104452 () Bool)

(assert (=> b!104452 (= e!68009 (ite c!18085 (t!5646 (toList!779 call!10772)) (ite c!18083 (Cons!1588 (h!2184 (toList!779 call!10772)) (t!5646 (toList!779 call!10772))) Nil!1589)))))

(declare-fun b!104453 () Bool)

(assert (=> b!104453 (= c!18083 (and ((_ is Cons!1588) (toList!779 call!10772)) (bvsgt (_1!1188 (h!2184 (toList!779 call!10772))) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104453 (= e!68007 e!68006)))

(declare-fun bm!10957 () Bool)

(assert (=> bm!10957 (= call!10960 call!10961)))

(declare-fun b!104454 () Bool)

(assert (=> b!104454 (= e!68006 call!10960)))

(declare-fun bm!10958 () Bool)

(assert (=> bm!10958 (= call!10961 call!10959)))

(declare-fun b!104455 () Bool)

(assert (=> b!104455 (= e!68008 (contains!812 lt!53318 (tuple2!2355 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104456 () Bool)

(declare-fun res!52078 () Bool)

(assert (=> b!104456 (=> (not res!52078) (not e!68008))))

(assert (=> b!104456 (= res!52078 (containsKey!159 lt!53318 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104457 () Bool)

(assert (=> b!104457 (= e!68010 e!68007)))

(assert (=> b!104457 (= c!18085 (and ((_ is Cons!1588) (toList!779 call!10772)) (= (_1!1188 (h!2184 (toList!779 call!10772))) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104458 () Bool)

(assert (=> b!104458 (= e!68010 call!10959)))

(assert (= (and d!28343 c!18082) b!104458))

(assert (= (and d!28343 (not c!18082)) b!104457))

(assert (= (and b!104457 c!18085) b!104451))

(assert (= (and b!104457 (not c!18085)) b!104453))

(assert (= (and b!104453 c!18083) b!104454))

(assert (= (and b!104453 (not c!18083)) b!104449))

(assert (= (or b!104454 b!104449) bm!10957))

(assert (= (or b!104451 bm!10957) bm!10958))

(assert (= (or b!104458 bm!10958) bm!10956))

(assert (= (and bm!10956 c!18084) b!104450))

(assert (= (and bm!10956 (not c!18084)) b!104452))

(assert (= (and d!28343 res!52079) b!104456))

(assert (= (and b!104456 res!52078) b!104455))

(declare-fun m!116041 () Bool)

(assert (=> d!28343 m!116041))

(declare-fun m!116043 () Bool)

(assert (=> d!28343 m!116043))

(declare-fun m!116045 () Bool)

(assert (=> b!104455 m!116045))

(declare-fun m!116047 () Bool)

(assert (=> b!104456 m!116047))

(declare-fun m!116049 () Bool)

(assert (=> b!104450 m!116049))

(declare-fun m!116051 () Bool)

(assert (=> bm!10956 m!116051))

(assert (=> d!27807 d!28343))

(declare-fun d!28345 () Bool)

(declare-fun lt!53319 () Bool)

(assert (=> d!28345 (= lt!53319 (select (content!108 (toList!779 lt!52895)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68011 () Bool)

(assert (=> d!28345 (= lt!53319 e!68011)))

(declare-fun res!52080 () Bool)

(assert (=> d!28345 (=> (not res!52080) (not e!68011))))

(assert (=> d!28345 (= res!52080 ((_ is Cons!1588) (toList!779 lt!52895)))))

(assert (=> d!28345 (= (contains!812 (toList!779 lt!52895) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53319)))

(declare-fun b!104459 () Bool)

(declare-fun e!68012 () Bool)

(assert (=> b!104459 (= e!68011 e!68012)))

(declare-fun res!52081 () Bool)

(assert (=> b!104459 (=> res!52081 e!68012)))

(assert (=> b!104459 (= res!52081 (= (h!2184 (toList!779 lt!52895)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104460 () Bool)

(assert (=> b!104460 (= e!68012 (contains!812 (t!5646 (toList!779 lt!52895)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28345 res!52080) b!104459))

(assert (= (and b!104459 (not res!52081)) b!104460))

(declare-fun m!116053 () Bool)

(assert (=> d!28345 m!116053))

(declare-fun m!116055 () Bool)

(assert (=> d!28345 m!116055))

(declare-fun m!116057 () Bool)

(assert (=> b!104460 m!116057))

(assert (=> b!103750 d!28345))

(declare-fun d!28347 () Bool)

(assert (=> d!28347 (= (content!109 Nil!1590) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!27999 d!28347))

(declare-fun d!28349 () Bool)

(declare-fun res!52082 () Bool)

(declare-fun e!68013 () Bool)

(assert (=> d!28349 (=> res!52082 e!68013)))

(assert (=> d!28349 (= res!52082 (and ((_ is Cons!1588) (toList!779 lt!52641)) (= (_1!1188 (h!2184 (toList!779 lt!52641))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28349 (= (containsKey!159 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68013)))

(declare-fun b!104461 () Bool)

(declare-fun e!68014 () Bool)

(assert (=> b!104461 (= e!68013 e!68014)))

(declare-fun res!52083 () Bool)

(assert (=> b!104461 (=> (not res!52083) (not e!68014))))

(assert (=> b!104461 (= res!52083 (and (or (not ((_ is Cons!1588) (toList!779 lt!52641))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52641))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1588) (toList!779 lt!52641)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52641))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104462 () Bool)

(assert (=> b!104462 (= e!68014 (containsKey!159 (t!5646 (toList!779 lt!52641)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28349 (not res!52082)) b!104461))

(assert (= (and b!104461 res!52083) b!104462))

(assert (=> b!104462 m!114103))

(declare-fun m!116059 () Bool)

(assert (=> b!104462 m!116059))

(assert (=> d!27827 d!28349))

(assert (=> d!27975 d!27973))

(assert (=> d!27975 d!27971))

(declare-fun d!28351 () Bool)

(assert (=> d!28351 (not (contains!811 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)) lt!52549))))

(assert (=> d!28351 true))

(declare-fun _$36!316 () Unit!3132)

(assert (=> d!28351 (= (choose!656 lt!52555 lt!52552 lt!52550 lt!52549) _$36!316)))

(declare-fun bs!4296 () Bool)

(assert (= bs!4296 d!28351))

(assert (=> bs!4296 m!114115))

(assert (=> bs!4296 m!114115))

(assert (=> bs!4296 m!114117))

(assert (=> d!27975 d!28351))

(declare-fun d!28353 () Bool)

(declare-fun e!68016 () Bool)

(assert (=> d!28353 e!68016))

(declare-fun res!52084 () Bool)

(assert (=> d!28353 (=> res!52084 e!68016)))

(declare-fun lt!53323 () Bool)

(assert (=> d!28353 (= res!52084 (not lt!53323))))

(declare-fun lt!53320 () Bool)

(assert (=> d!28353 (= lt!53323 lt!53320)))

(declare-fun lt!53321 () Unit!3132)

(declare-fun e!68015 () Unit!3132)

(assert (=> d!28353 (= lt!53321 e!68015)))

(declare-fun c!18086 () Bool)

(assert (=> d!28353 (= c!18086 lt!53320)))

(assert (=> d!28353 (= lt!53320 (containsKey!159 (toList!779 lt!52555) lt!52549))))

(assert (=> d!28353 (= (contains!811 lt!52555 lt!52549) lt!53323)))

(declare-fun b!104464 () Bool)

(declare-fun lt!53322 () Unit!3132)

(assert (=> b!104464 (= e!68015 lt!53322)))

(assert (=> b!104464 (= lt!53322 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52555) lt!52549))))

(assert (=> b!104464 (isDefined!108 (getValueByKey!156 (toList!779 lt!52555) lt!52549))))

(declare-fun b!104465 () Bool)

(declare-fun Unit!3185 () Unit!3132)

(assert (=> b!104465 (= e!68015 Unit!3185)))

(declare-fun b!104466 () Bool)

(assert (=> b!104466 (= e!68016 (isDefined!108 (getValueByKey!156 (toList!779 lt!52555) lt!52549)))))

(assert (= (and d!28353 c!18086) b!104464))

(assert (= (and d!28353 (not c!18086)) b!104465))

(assert (= (and d!28353 (not res!52084)) b!104466))

(declare-fun m!116061 () Bool)

(assert (=> d!28353 m!116061))

(declare-fun m!116063 () Bool)

(assert (=> b!104464 m!116063))

(declare-fun m!116065 () Bool)

(assert (=> b!104464 m!116065))

(assert (=> b!104464 m!116065))

(declare-fun m!116067 () Bool)

(assert (=> b!104464 m!116067))

(assert (=> b!104466 m!116065))

(assert (=> b!104466 m!116065))

(assert (=> b!104466 m!116067))

(assert (=> d!27975 d!28353))

(declare-fun d!28355 () Bool)

(assert (=> d!28355 (= (apply!97 lt!53086 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (getValueByKey!156 (toList!779 lt!53086) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4297 () Bool)

(assert (= bs!4297 d!28355))

(assert (=> bs!4297 m!114381))

(declare-fun m!116069 () Bool)

(assert (=> bs!4297 m!116069))

(assert (=> bs!4297 m!116069))

(declare-fun m!116071 () Bool)

(assert (=> bs!4297 m!116071))

(assert (=> b!103933 d!28355))

(declare-fun c!18087 () Bool)

(declare-fun d!28357 () Bool)

(assert (=> d!28357 (= c!18087 ((_ is ValueCellFull!992) (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!68017 () V!3209)

(assert (=> d!28357 (= (get!1328 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68017)))

(declare-fun b!104467 () Bool)

(assert (=> b!104467 (= e!68017 (get!1329 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104468 () Bool)

(assert (=> b!104468 (= e!68017 (get!1330 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28357 c!18087) b!104467))

(assert (= (and d!28357 (not c!18087)) b!104468))

(assert (=> b!104467 m!115073))

(assert (=> b!104467 m!114389))

(declare-fun m!116073 () Bool)

(assert (=> b!104467 m!116073))

(assert (=> b!104468 m!115073))

(assert (=> b!104468 m!114389))

(declare-fun m!116075 () Bool)

(assert (=> b!104468 m!116075))

(assert (=> b!103933 d!28357))

(declare-fun d!28359 () Bool)

(assert (=> d!28359 (= (apply!97 lt!52780 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!52780) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4298 () Bool)

(assert (= bs!4298 d!28359))

(assert (=> bs!4298 m!115499))

(assert (=> bs!4298 m!115499))

(declare-fun m!116077 () Bool)

(assert (=> bs!4298 m!116077))

(assert (=> b!103553 d!28359))

(declare-fun d!28361 () Bool)

(declare-fun e!68019 () Bool)

(assert (=> d!28361 e!68019))

(declare-fun res!52085 () Bool)

(assert (=> d!28361 (=> res!52085 e!68019)))

(declare-fun lt!53327 () Bool)

(assert (=> d!28361 (= res!52085 (not lt!53327))))

(declare-fun lt!53324 () Bool)

(assert (=> d!28361 (= lt!53327 lt!53324)))

(declare-fun lt!53325 () Unit!3132)

(declare-fun e!68018 () Unit!3132)

(assert (=> d!28361 (= lt!53325 e!68018)))

(declare-fun c!18088 () Bool)

(assert (=> d!28361 (= c!18088 lt!53324)))

(assert (=> d!28361 (= lt!53324 (containsKey!159 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (=> d!28361 (= (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))) lt!53327)))

(declare-fun b!104469 () Bool)

(declare-fun lt!53326 () Unit!3132)

(assert (=> b!104469 (= e!68018 lt!53326)))

(assert (=> b!104469 (= lt!53326 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (=> b!104469 (isDefined!108 (getValueByKey!156 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(declare-fun b!104470 () Bool)

(declare-fun Unit!3186 () Unit!3132)

(assert (=> b!104470 (= e!68018 Unit!3186)))

(declare-fun b!104471 () Bool)

(assert (=> b!104471 (= e!68019 (isDefined!108 (getValueByKey!156 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))))

(assert (= (and d!28361 c!18088) b!104469))

(assert (= (and d!28361 (not c!18088)) b!104470))

(assert (= (and d!28361 (not res!52085)) b!104471))

(assert (=> d!28361 m!114261))

(declare-fun m!116079 () Bool)

(assert (=> d!28361 m!116079))

(assert (=> b!104469 m!114261))

(declare-fun m!116081 () Bool)

(assert (=> b!104469 m!116081))

(assert (=> b!104469 m!114261))

(declare-fun m!116083 () Bool)

(assert (=> b!104469 m!116083))

(assert (=> b!104469 m!116083))

(declare-fun m!116085 () Bool)

(assert (=> b!104469 m!116085))

(assert (=> b!104471 m!114261))

(assert (=> b!104471 m!116083))

(assert (=> b!104471 m!116083))

(assert (=> b!104471 m!116085))

(assert (=> b!103774 d!28361))

(declare-fun bm!10959 () Bool)

(declare-fun call!10968 () ListLongMap!1527)

(assert (=> bm!10959 (= call!10968 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10960 () Bool)

(declare-fun call!10965 () ListLongMap!1527)

(declare-fun call!10966 () ListLongMap!1527)

(assert (=> bm!10960 (= call!10965 call!10966)))

(declare-fun b!104472 () Bool)

(declare-fun e!68020 () Unit!3132)

(declare-fun lt!53342 () Unit!3132)

(assert (=> b!104472 (= e!68020 lt!53342)))

(declare-fun lt!53344 () ListLongMap!1527)

(assert (=> b!104472 (= lt!53344 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53349 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53349 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53328 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53328 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53346 () Unit!3132)

(assert (=> b!104472 (= lt!53346 (addStillContains!73 lt!53344 lt!53349 (zeroValue!2437 newMap!16) lt!53328))))

(assert (=> b!104472 (contains!811 (+!137 lt!53344 (tuple2!2355 lt!53349 (zeroValue!2437 newMap!16))) lt!53328)))

(declare-fun lt!53333 () Unit!3132)

(assert (=> b!104472 (= lt!53333 lt!53346)))

(declare-fun lt!53338 () ListLongMap!1527)

(assert (=> b!104472 (= lt!53338 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53336 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53336 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53340 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53340 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53329 () Unit!3132)

(assert (=> b!104472 (= lt!53329 (addApplyDifferent!73 lt!53338 lt!53336 (minValue!2437 newMap!16) lt!53340))))

(assert (=> b!104472 (= (apply!97 (+!137 lt!53338 (tuple2!2355 lt!53336 (minValue!2437 newMap!16))) lt!53340) (apply!97 lt!53338 lt!53340))))

(declare-fun lt!53348 () Unit!3132)

(assert (=> b!104472 (= lt!53348 lt!53329)))

(declare-fun lt!53343 () ListLongMap!1527)

(assert (=> b!104472 (= lt!53343 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53341 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53341 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53331 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53331 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53347 () Unit!3132)

(assert (=> b!104472 (= lt!53347 (addApplyDifferent!73 lt!53343 lt!53341 (zeroValue!2437 newMap!16) lt!53331))))

(assert (=> b!104472 (= (apply!97 (+!137 lt!53343 (tuple2!2355 lt!53341 (zeroValue!2437 newMap!16))) lt!53331) (apply!97 lt!53343 lt!53331))))

(declare-fun lt!53330 () Unit!3132)

(assert (=> b!104472 (= lt!53330 lt!53347)))

(declare-fun lt!53337 () ListLongMap!1527)

(assert (=> b!104472 (= lt!53337 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53339 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53339 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53335 () (_ BitVec 64))

(assert (=> b!104472 (= lt!53335 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104472 (= lt!53342 (addApplyDifferent!73 lt!53337 lt!53339 (minValue!2437 newMap!16) lt!53335))))

(assert (=> b!104472 (= (apply!97 (+!137 lt!53337 (tuple2!2355 lt!53339 (minValue!2437 newMap!16))) lt!53335) (apply!97 lt!53337 lt!53335))))

(declare-fun b!104473 () Bool)

(declare-fun e!68024 () Bool)

(declare-fun call!10962 () Bool)

(assert (=> b!104473 (= e!68024 (not call!10962))))

(declare-fun b!104474 () Bool)

(declare-fun lt!53345 () ListLongMap!1527)

(declare-fun e!68025 () Bool)

(assert (=> b!104474 (= e!68025 (= (apply!97 lt!53345 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 lt!52731) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 lt!52731)))))

(assert (=> b!104474 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104475 () Bool)

(declare-fun e!68026 () ListLongMap!1527)

(declare-fun call!10963 () ListLongMap!1527)

(assert (=> b!104475 (= e!68026 call!10963)))

(declare-fun b!104476 () Bool)

(declare-fun Unit!3187 () Unit!3132)

(assert (=> b!104476 (= e!68020 Unit!3187)))

(declare-fun b!104477 () Bool)

(declare-fun e!68023 () ListLongMap!1527)

(assert (=> b!104477 (= e!68023 call!10965)))

(declare-fun b!104479 () Bool)

(declare-fun e!68021 () Bool)

(declare-fun call!10964 () Bool)

(assert (=> b!104479 (= e!68021 (not call!10964))))

(declare-fun b!104480 () Bool)

(declare-fun e!68022 () Bool)

(assert (=> b!104480 (= e!68022 e!68025)))

(declare-fun res!52088 () Bool)

(assert (=> b!104480 (=> (not res!52088) (not e!68025))))

(assert (=> b!104480 (= res!52088 (contains!811 lt!53345 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104480 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104481 () Bool)

(declare-fun e!68029 () Bool)

(assert (=> b!104481 (= e!68029 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104482 () Bool)

(declare-fun res!52086 () Bool)

(declare-fun e!68027 () Bool)

(assert (=> b!104482 (=> (not res!52086) (not e!68027))))

(assert (=> b!104482 (= res!52086 e!68021)))

(declare-fun c!18089 () Bool)

(assert (=> b!104482 (= c!18089 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!10961 () Bool)

(declare-fun c!18094 () Bool)

(declare-fun call!10967 () ListLongMap!1527)

(declare-fun c!18092 () Bool)

(assert (=> bm!10961 (= call!10967 (+!137 (ite c!18092 call!10968 (ite c!18094 call!10966 call!10965)) (ite (or c!18092 c!18094) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!104483 () Bool)

(declare-fun e!68028 () ListLongMap!1527)

(assert (=> b!104483 (= e!68028 e!68026)))

(assert (=> b!104483 (= c!18094 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104484 () Bool)

(assert (=> b!104484 (= e!68023 call!10963)))

(declare-fun bm!10962 () Bool)

(assert (=> bm!10962 (= call!10963 call!10967)))

(declare-fun b!104485 () Bool)

(declare-fun c!18093 () Bool)

(assert (=> b!104485 (= c!18093 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104485 (= e!68026 e!68023)))

(declare-fun b!104486 () Bool)

(assert (=> b!104486 (= e!68028 (+!137 call!10967 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!10963 () Bool)

(assert (=> bm!10963 (= call!10966 call!10968)))

(declare-fun b!104487 () Bool)

(declare-fun res!52094 () Bool)

(assert (=> b!104487 (=> (not res!52094) (not e!68027))))

(assert (=> b!104487 (= res!52094 e!68022)))

(declare-fun res!52090 () Bool)

(assert (=> b!104487 (=> res!52090 e!68022)))

(declare-fun e!68030 () Bool)

(assert (=> b!104487 (= res!52090 (not e!68030))))

(declare-fun res!52089 () Bool)

(assert (=> b!104487 (=> (not res!52089) (not e!68030))))

(assert (=> b!104487 (= res!52089 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104488 () Bool)

(declare-fun e!68032 () Bool)

(assert (=> b!104488 (= e!68032 (= (apply!97 lt!53345 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!10964 () Bool)

(assert (=> bm!10964 (= call!10964 (contains!811 lt!53345 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10965 () Bool)

(assert (=> bm!10965 (= call!10962 (contains!811 lt!53345 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104478 () Bool)

(assert (=> b!104478 (= e!68024 e!68032)))

(declare-fun res!52092 () Bool)

(assert (=> b!104478 (= res!52092 call!10962)))

(assert (=> b!104478 (=> (not res!52092) (not e!68032))))

(declare-fun d!28363 () Bool)

(assert (=> d!28363 e!68027))

(declare-fun res!52093 () Bool)

(assert (=> d!28363 (=> (not res!52093) (not e!68027))))

(assert (=> d!28363 (= res!52093 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!53332 () ListLongMap!1527)

(assert (=> d!28363 (= lt!53345 lt!53332)))

(declare-fun lt!53334 () Unit!3132)

(assert (=> d!28363 (= lt!53334 e!68020)))

(declare-fun c!18091 () Bool)

(assert (=> d!28363 (= c!18091 e!68029)))

(declare-fun res!52091 () Bool)

(assert (=> d!28363 (=> (not res!52091) (not e!68029))))

(assert (=> d!28363 (= res!52091 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28363 (= lt!53332 e!68028)))

(assert (=> d!28363 (= c!18092 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28363 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28363 (= (getCurrentListMap!467 (_keys!4262 newMap!16) lt!52731 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53345)))

(declare-fun b!104489 () Bool)

(assert (=> b!104489 (= e!68030 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104490 () Bool)

(declare-fun e!68031 () Bool)

(assert (=> b!104490 (= e!68021 e!68031)))

(declare-fun res!52087 () Bool)

(assert (=> b!104490 (= res!52087 call!10964)))

(assert (=> b!104490 (=> (not res!52087) (not e!68031))))

(declare-fun b!104491 () Bool)

(assert (=> b!104491 (= e!68031 (= (apply!97 lt!53345 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!104492 () Bool)

(assert (=> b!104492 (= e!68027 e!68024)))

(declare-fun c!18090 () Bool)

(assert (=> b!104492 (= c!18090 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28363 c!18092) b!104486))

(assert (= (and d!28363 (not c!18092)) b!104483))

(assert (= (and b!104483 c!18094) b!104475))

(assert (= (and b!104483 (not c!18094)) b!104485))

(assert (= (and b!104485 c!18093) b!104484))

(assert (= (and b!104485 (not c!18093)) b!104477))

(assert (= (or b!104484 b!104477) bm!10960))

(assert (= (or b!104475 bm!10960) bm!10963))

(assert (= (or b!104475 b!104484) bm!10962))

(assert (= (or b!104486 bm!10963) bm!10959))

(assert (= (or b!104486 bm!10962) bm!10961))

(assert (= (and d!28363 res!52091) b!104481))

(assert (= (and d!28363 c!18091) b!104472))

(assert (= (and d!28363 (not c!18091)) b!104476))

(assert (= (and d!28363 res!52093) b!104487))

(assert (= (and b!104487 res!52089) b!104489))

(assert (= (and b!104487 (not res!52090)) b!104480))

(assert (= (and b!104480 res!52088) b!104474))

(assert (= (and b!104487 res!52094) b!104482))

(assert (= (and b!104482 c!18089) b!104490))

(assert (= (and b!104482 (not c!18089)) b!104479))

(assert (= (and b!104490 res!52087) b!104491))

(assert (= (or b!104490 b!104479) bm!10964))

(assert (= (and b!104482 res!52086) b!104492))

(assert (= (and b!104492 c!18090) b!104478))

(assert (= (and b!104492 (not c!18090)) b!104473))

(assert (= (and b!104478 res!52092) b!104488))

(assert (= (or b!104478 b!104473) bm!10965))

(declare-fun b_lambda!4665 () Bool)

(assert (=> (not b_lambda!4665) (not b!104474)))

(assert (=> b!104474 t!5659))

(declare-fun b_and!6453 () Bool)

(assert (= b_and!6449 (and (=> t!5659 result!3431) b_and!6453)))

(assert (=> b!104474 t!5661))

(declare-fun b_and!6455 () Bool)

(assert (= b_and!6451 (and (=> t!5661 result!3433) b_and!6455)))

(declare-fun m!116087 () Bool)

(assert (=> b!104486 m!116087))

(assert (=> d!28363 m!114321))

(declare-fun m!116089 () Bool)

(assert (=> bm!10959 m!116089))

(assert (=> b!104489 m!114381))

(assert (=> b!104489 m!114381))

(assert (=> b!104489 m!114383))

(declare-fun m!116091 () Bool)

(assert (=> bm!10965 m!116091))

(assert (=> b!104480 m!114381))

(assert (=> b!104480 m!114381))

(declare-fun m!116093 () Bool)

(assert (=> b!104480 m!116093))

(assert (=> b!104474 m!114389))

(assert (=> b!104474 m!114381))

(declare-fun m!116095 () Bool)

(assert (=> b!104474 m!116095))

(assert (=> b!104474 m!114381))

(declare-fun m!116097 () Bool)

(assert (=> b!104474 m!116097))

(assert (=> b!104474 m!116097))

(assert (=> b!104474 m!114389))

(declare-fun m!116099 () Bool)

(assert (=> b!104474 m!116099))

(declare-fun m!116101 () Bool)

(assert (=> bm!10961 m!116101))

(declare-fun m!116103 () Bool)

(assert (=> b!104491 m!116103))

(declare-fun m!116105 () Bool)

(assert (=> bm!10964 m!116105))

(declare-fun m!116107 () Bool)

(assert (=> b!104472 m!116107))

(declare-fun m!116109 () Bool)

(assert (=> b!104472 m!116109))

(declare-fun m!116111 () Bool)

(assert (=> b!104472 m!116111))

(assert (=> b!104472 m!114381))

(declare-fun m!116113 () Bool)

(assert (=> b!104472 m!116113))

(assert (=> b!104472 m!116089))

(declare-fun m!116115 () Bool)

(assert (=> b!104472 m!116115))

(declare-fun m!116117 () Bool)

(assert (=> b!104472 m!116117))

(declare-fun m!116119 () Bool)

(assert (=> b!104472 m!116119))

(declare-fun m!116121 () Bool)

(assert (=> b!104472 m!116121))

(declare-fun m!116123 () Bool)

(assert (=> b!104472 m!116123))

(declare-fun m!116125 () Bool)

(assert (=> b!104472 m!116125))

(assert (=> b!104472 m!116119))

(declare-fun m!116127 () Bool)

(assert (=> b!104472 m!116127))

(assert (=> b!104472 m!116113))

(declare-fun m!116129 () Bool)

(assert (=> b!104472 m!116129))

(assert (=> b!104472 m!116111))

(declare-fun m!116131 () Bool)

(assert (=> b!104472 m!116131))

(declare-fun m!116133 () Bool)

(assert (=> b!104472 m!116133))

(assert (=> b!104472 m!116123))

(declare-fun m!116135 () Bool)

(assert (=> b!104472 m!116135))

(assert (=> b!104481 m!114381))

(assert (=> b!104481 m!114381))

(assert (=> b!104481 m!114383))

(declare-fun m!116137 () Bool)

(assert (=> b!104488 m!116137))

(assert (=> b!103774 d!28363))

(declare-fun d!28365 () Bool)

(assert (=> d!28365 (= (isEmpty!375 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) (not ((_ is Some!161) (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(assert (=> d!27951 d!28365))

(declare-fun d!28367 () Bool)

(assert (=> d!28367 (= (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103740 d!28367))

(declare-fun d!28369 () Bool)

(declare-fun e!68034 () Bool)

(assert (=> d!28369 e!68034))

(declare-fun res!52095 () Bool)

(assert (=> d!28369 (=> res!52095 e!68034)))

(declare-fun lt!53353 () Bool)

(assert (=> d!28369 (= res!52095 (not lt!53353))))

(declare-fun lt!53350 () Bool)

(assert (=> d!28369 (= lt!53353 lt!53350)))

(declare-fun lt!53351 () Unit!3132)

(declare-fun e!68033 () Unit!3132)

(assert (=> d!28369 (= lt!53351 e!68033)))

(declare-fun c!18095 () Bool)

(assert (=> d!28369 (= c!18095 lt!53350)))

(assert (=> d!28369 (= lt!53350 (containsKey!159 (toList!779 lt!52858) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28369 (= (contains!811 lt!52858 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53353)))

(declare-fun b!104493 () Bool)

(declare-fun lt!53352 () Unit!3132)

(assert (=> b!104493 (= e!68033 lt!53352)))

(assert (=> b!104493 (= lt!53352 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52858) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104493 (isDefined!108 (getValueByKey!156 (toList!779 lt!52858) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104494 () Bool)

(declare-fun Unit!3188 () Unit!3132)

(assert (=> b!104494 (= e!68033 Unit!3188)))

(declare-fun b!104495 () Bool)

(assert (=> b!104495 (= e!68034 (isDefined!108 (getValueByKey!156 (toList!779 lt!52858) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28369 c!18095) b!104493))

(assert (= (and d!28369 (not c!18095)) b!104494))

(assert (= (and d!28369 (not res!52095)) b!104495))

(declare-fun m!116139 () Bool)

(assert (=> d!28369 m!116139))

(declare-fun m!116141 () Bool)

(assert (=> b!104493 m!116141))

(assert (=> b!104493 m!114631))

(assert (=> b!104493 m!114631))

(declare-fun m!116143 () Bool)

(assert (=> b!104493 m!116143))

(assert (=> b!104495 m!114631))

(assert (=> b!104495 m!114631))

(assert (=> b!104495 m!116143))

(assert (=> d!27879 d!28369))

(declare-fun e!68036 () Option!162)

(declare-fun b!104498 () Bool)

(assert (=> b!104498 (= e!68036 (getValueByKey!156 (t!5646 lt!52857) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104497 () Bool)

(declare-fun e!68035 () Option!162)

(assert (=> b!104497 (= e!68035 e!68036)))

(declare-fun c!18097 () Bool)

(assert (=> b!104497 (= c!18097 (and ((_ is Cons!1588) lt!52857) (not (= (_1!1188 (h!2184 lt!52857)) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104496 () Bool)

(assert (=> b!104496 (= e!68035 (Some!161 (_2!1188 (h!2184 lt!52857))))))

(declare-fun d!28371 () Bool)

(declare-fun c!18096 () Bool)

(assert (=> d!28371 (= c!18096 (and ((_ is Cons!1588) lt!52857) (= (_1!1188 (h!2184 lt!52857)) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28371 (= (getValueByKey!156 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68035)))

(declare-fun b!104499 () Bool)

(assert (=> b!104499 (= e!68036 None!160)))

(assert (= (and d!28371 c!18096) b!104496))

(assert (= (and d!28371 (not c!18096)) b!104497))

(assert (= (and b!104497 c!18097) b!104498))

(assert (= (and b!104497 (not c!18097)) b!104499))

(declare-fun m!116145 () Bool)

(assert (=> b!104498 m!116145))

(assert (=> d!27879 d!28371))

(declare-fun d!28373 () Bool)

(assert (=> d!28373 (= (getValueByKey!156 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53354 () Unit!3132)

(assert (=> d!28373 (= lt!53354 (choose!648 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68037 () Bool)

(assert (=> d!28373 e!68037))

(declare-fun res!52096 () Bool)

(assert (=> d!28373 (=> (not res!52096) (not e!68037))))

(assert (=> d!28373 (= res!52096 (isStrictlySorted!295 lt!52857))))

(assert (=> d!28373 (= (lemmaContainsTupThenGetReturnValue!72 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53354)))

(declare-fun b!104500 () Bool)

(declare-fun res!52097 () Bool)

(assert (=> b!104500 (=> (not res!52097) (not e!68037))))

(assert (=> b!104500 (= res!52097 (containsKey!159 lt!52857 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104501 () Bool)

(assert (=> b!104501 (= e!68037 (contains!812 lt!52857 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28373 res!52096) b!104500))

(assert (= (and b!104500 res!52097) b!104501))

(assert (=> d!28373 m!114625))

(declare-fun m!116147 () Bool)

(assert (=> d!28373 m!116147))

(declare-fun m!116149 () Bool)

(assert (=> d!28373 m!116149))

(declare-fun m!116151 () Bool)

(assert (=> b!104500 m!116151))

(declare-fun m!116153 () Bool)

(assert (=> b!104501 m!116153))

(assert (=> d!27879 d!28373))

(declare-fun b!104502 () Bool)

(declare-fun e!68038 () List!1592)

(declare-fun call!10970 () List!1592)

(assert (=> b!104502 (= e!68038 call!10970)))

(declare-fun b!104503 () Bool)

(declare-fun e!68041 () List!1592)

(assert (=> b!104503 (= e!68041 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52640)) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104504 () Bool)

(declare-fun e!68039 () List!1592)

(declare-fun call!10971 () List!1592)

(assert (=> b!104504 (= e!68039 call!10971)))

(declare-fun d!28375 () Bool)

(declare-fun e!68040 () Bool)

(assert (=> d!28375 e!68040))

(declare-fun res!52099 () Bool)

(assert (=> d!28375 (=> (not res!52099) (not e!68040))))

(declare-fun lt!53355 () List!1592)

(assert (=> d!28375 (= res!52099 (isStrictlySorted!295 lt!53355))))

(declare-fun e!68042 () List!1592)

(assert (=> d!28375 (= lt!53355 e!68042)))

(declare-fun c!18098 () Bool)

(assert (=> d!28375 (= c!18098 (and ((_ is Cons!1588) (toList!779 lt!52640)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52640))) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28375 (isStrictlySorted!295 (toList!779 lt!52640))))

(assert (=> d!28375 (= (insertStrictlySorted!75 (toList!779 lt!52640) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53355)))

(declare-fun bm!10966 () Bool)

(declare-fun call!10969 () List!1592)

(assert (=> bm!10966 (= call!10969 ($colon$colon!79 e!68041 (ite c!18098 (h!2184 (toList!779 lt!52640)) (tuple2!2355 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18100 () Bool)

(assert (=> bm!10966 (= c!18100 c!18098)))

(declare-fun c!18099 () Bool)

(declare-fun b!104505 () Bool)

(declare-fun c!18101 () Bool)

(assert (=> b!104505 (= e!68041 (ite c!18101 (t!5646 (toList!779 lt!52640)) (ite c!18099 (Cons!1588 (h!2184 (toList!779 lt!52640)) (t!5646 (toList!779 lt!52640))) Nil!1589)))))

(declare-fun b!104506 () Bool)

(assert (=> b!104506 (= c!18099 (and ((_ is Cons!1588) (toList!779 lt!52640)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52640))) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104506 (= e!68039 e!68038)))

(declare-fun bm!10967 () Bool)

(assert (=> bm!10967 (= call!10970 call!10971)))

(declare-fun b!104507 () Bool)

(assert (=> b!104507 (= e!68038 call!10970)))

(declare-fun bm!10968 () Bool)

(assert (=> bm!10968 (= call!10971 call!10969)))

(declare-fun b!104508 () Bool)

(assert (=> b!104508 (= e!68040 (contains!812 lt!53355 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104509 () Bool)

(declare-fun res!52098 () Bool)

(assert (=> b!104509 (=> (not res!52098) (not e!68040))))

(assert (=> b!104509 (= res!52098 (containsKey!159 lt!53355 (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104510 () Bool)

(assert (=> b!104510 (= e!68042 e!68039)))

(assert (=> b!104510 (= c!18101 (and ((_ is Cons!1588) (toList!779 lt!52640)) (= (_1!1188 (h!2184 (toList!779 lt!52640))) (_1!1188 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104511 () Bool)

(assert (=> b!104511 (= e!68042 call!10969)))

(assert (= (and d!28375 c!18098) b!104511))

(assert (= (and d!28375 (not c!18098)) b!104510))

(assert (= (and b!104510 c!18101) b!104504))

(assert (= (and b!104510 (not c!18101)) b!104506))

(assert (= (and b!104506 c!18099) b!104507))

(assert (= (and b!104506 (not c!18099)) b!104502))

(assert (= (or b!104507 b!104502) bm!10967))

(assert (= (or b!104504 bm!10967) bm!10968))

(assert (= (or b!104511 bm!10968) bm!10966))

(assert (= (and bm!10966 c!18100) b!104503))

(assert (= (and bm!10966 (not c!18100)) b!104505))

(assert (= (and d!28375 res!52099) b!104509))

(assert (= (and b!104509 res!52098) b!104508))

(declare-fun m!116155 () Bool)

(assert (=> d!28375 m!116155))

(declare-fun m!116157 () Bool)

(assert (=> d!28375 m!116157))

(declare-fun m!116159 () Bool)

(assert (=> b!104508 m!116159))

(declare-fun m!116161 () Bool)

(assert (=> b!104509 m!116161))

(declare-fun m!116163 () Bool)

(assert (=> b!104503 m!116163))

(declare-fun m!116165 () Bool)

(assert (=> bm!10966 m!116165))

(assert (=> d!27879 d!28375))

(declare-fun d!28377 () Bool)

(declare-fun c!18102 () Bool)

(assert (=> d!28377 (= c!18102 ((_ is Nil!1589) (toList!779 lt!52558)))))

(declare-fun e!68043 () (InoxSet tuple2!2354))

(assert (=> d!28377 (= (content!108 (toList!779 lt!52558)) e!68043)))

(declare-fun b!104512 () Bool)

(assert (=> b!104512 (= e!68043 ((as const (Array tuple2!2354 Bool)) false))))

(declare-fun b!104513 () Bool)

(assert (=> b!104513 (= e!68043 ((_ map or) (store ((as const (Array tuple2!2354 Bool)) false) (h!2184 (toList!779 lt!52558)) true) (content!108 (t!5646 (toList!779 lt!52558)))))))

(assert (= (and d!28377 c!18102) b!104512))

(assert (= (and d!28377 (not c!18102)) b!104513))

(declare-fun m!116167 () Bool)

(assert (=> b!104513 m!116167))

(declare-fun m!116169 () Bool)

(assert (=> b!104513 m!116169))

(assert (=> d!27991 d!28377))

(declare-fun d!28379 () Bool)

(declare-fun c!18103 () Bool)

(assert (=> d!28379 (= c!18103 ((_ is Nil!1589) (toList!779 lt!52533)))))

(declare-fun e!68044 () (InoxSet tuple2!2354))

(assert (=> d!28379 (= (content!108 (toList!779 lt!52533)) e!68044)))

(declare-fun b!104514 () Bool)

(assert (=> b!104514 (= e!68044 ((as const (Array tuple2!2354 Bool)) false))))

(declare-fun b!104515 () Bool)

(assert (=> b!104515 (= e!68044 ((_ map or) (store ((as const (Array tuple2!2354 Bool)) false) (h!2184 (toList!779 lt!52533)) true) (content!108 (t!5646 (toList!779 lt!52533)))))))

(assert (= (and d!28379 c!18103) b!104514))

(assert (= (and d!28379 (not c!18103)) b!104515))

(declare-fun m!116171 () Bool)

(assert (=> b!104515 m!116171))

(assert (=> b!104515 m!116019))

(assert (=> d!27819 d!28379))

(declare-fun d!28381 () Bool)

(assert (=> d!28381 (isDefined!108 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53356 () Unit!3132)

(assert (=> d!28381 (= lt!53356 (choose!654 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68045 () Bool)

(assert (=> d!28381 e!68045))

(declare-fun res!52100 () Bool)

(assert (=> d!28381 (=> (not res!52100) (not e!68045))))

(assert (=> d!28381 (= res!52100 (isStrictlySorted!295 (toList!779 lt!52641)))))

(assert (=> d!28381 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53356)))

(declare-fun b!104516 () Bool)

(assert (=> b!104516 (= e!68045 (containsKey!159 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28381 res!52100) b!104516))

(assert (=> d!28381 m!115059))

(assert (=> d!28381 m!115059))

(assert (=> d!28381 m!115127))

(declare-fun m!116173 () Bool)

(assert (=> d!28381 m!116173))

(assert (=> d!28381 m!115239))

(assert (=> b!104516 m!115123))

(assert (=> b!103964 d!28381))

(assert (=> b!103964 d!28157))

(assert (=> b!103964 d!28159))

(assert (=> d!27857 d!28055))

(assert (=> b!103738 d!28367))

(declare-fun d!28383 () Bool)

(declare-fun res!52101 () Bool)

(declare-fun e!68046 () Bool)

(assert (=> d!28383 (=> res!52101 e!68046)))

(assert (=> d!28383 (= res!52101 (and ((_ is Cons!1588) lt!52568) (= (_1!1188 (h!2184 lt!52568)) (_1!1188 lt!52444))))))

(assert (=> d!28383 (= (containsKey!159 lt!52568 (_1!1188 lt!52444)) e!68046)))

(declare-fun b!104517 () Bool)

(declare-fun e!68047 () Bool)

(assert (=> b!104517 (= e!68046 e!68047)))

(declare-fun res!52102 () Bool)

(assert (=> b!104517 (=> (not res!52102) (not e!68047))))

(assert (=> b!104517 (= res!52102 (and (or (not ((_ is Cons!1588) lt!52568)) (bvsle (_1!1188 (h!2184 lt!52568)) (_1!1188 lt!52444))) ((_ is Cons!1588) lt!52568) (bvslt (_1!1188 (h!2184 lt!52568)) (_1!1188 lt!52444))))))

(declare-fun b!104518 () Bool)

(assert (=> b!104518 (= e!68047 (containsKey!159 (t!5646 lt!52568) (_1!1188 lt!52444)))))

(assert (= (and d!28383 (not res!52101)) b!104517))

(assert (= (and b!104517 res!52102) b!104518))

(declare-fun m!116175 () Bool)

(assert (=> b!104518 m!116175))

(assert (=> b!103723 d!28383))

(assert (=> b!103684 d!28051))

(declare-fun d!28385 () Bool)

(assert (=> d!28385 (= (apply!97 (+!137 lt!53079 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))) lt!53081) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!53079 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))) lt!53081)))))

(declare-fun bs!4299 () Bool)

(assert (= bs!4299 d!28385))

(declare-fun m!116177 () Bool)

(assert (=> bs!4299 m!116177))

(assert (=> bs!4299 m!116177))

(declare-fun m!116179 () Bool)

(assert (=> bs!4299 m!116179))

(assert (=> b!103931 d!28385))

(declare-fun d!28387 () Bool)

(declare-fun e!68048 () Bool)

(assert (=> d!28387 e!68048))

(declare-fun res!52103 () Bool)

(assert (=> d!28387 (=> (not res!52103) (not e!68048))))

(declare-fun lt!53359 () ListLongMap!1527)

(assert (=> d!28387 (= res!52103 (contains!811 lt!53359 (_1!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))))))

(declare-fun lt!53358 () List!1592)

(assert (=> d!28387 (= lt!53359 (ListLongMap!1528 lt!53358))))

(declare-fun lt!53357 () Unit!3132)

(declare-fun lt!53360 () Unit!3132)

(assert (=> d!28387 (= lt!53357 lt!53360)))

(assert (=> d!28387 (= (getValueByKey!156 lt!53358 (_1!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))))))

(assert (=> d!28387 (= lt!53360 (lemmaContainsTupThenGetReturnValue!72 lt!53358 (_1!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))))))

(assert (=> d!28387 (= lt!53358 (insertStrictlySorted!75 (toList!779 lt!53078) (_1!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))))))

(assert (=> d!28387 (= (+!137 lt!53078 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))) lt!53359)))

(declare-fun b!104519 () Bool)

(declare-fun res!52104 () Bool)

(assert (=> b!104519 (=> (not res!52104) (not e!68048))))

(assert (=> b!104519 (= res!52104 (= (getValueByKey!156 (toList!779 lt!53359) (_1!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))))))))

(declare-fun b!104520 () Bool)

(assert (=> b!104520 (= e!68048 (contains!812 (toList!779 lt!53359) (tuple2!2355 lt!53080 (minValue!2437 newMap!16))))))

(assert (= (and d!28387 res!52103) b!104519))

(assert (= (and b!104519 res!52104) b!104520))

(declare-fun m!116181 () Bool)

(assert (=> d!28387 m!116181))

(declare-fun m!116183 () Bool)

(assert (=> d!28387 m!116183))

(declare-fun m!116185 () Bool)

(assert (=> d!28387 m!116185))

(declare-fun m!116187 () Bool)

(assert (=> d!28387 m!116187))

(declare-fun m!116189 () Bool)

(assert (=> b!104519 m!116189))

(declare-fun m!116191 () Bool)

(assert (=> b!104520 m!116191))

(assert (=> b!103931 d!28387))

(declare-fun d!28389 () Bool)

(assert (=> d!28389 (= (apply!97 (+!137 lt!53078 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))) lt!53076) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!53078 (tuple2!2355 lt!53080 (minValue!2437 newMap!16)))) lt!53076)))))

(declare-fun bs!4300 () Bool)

(assert (= bs!4300 d!28389))

(declare-fun m!116193 () Bool)

(assert (=> bs!4300 m!116193))

(assert (=> bs!4300 m!116193))

(declare-fun m!116195 () Bool)

(assert (=> bs!4300 m!116195))

(assert (=> b!103931 d!28389))

(declare-fun d!28391 () Bool)

(assert (=> d!28391 (= (apply!97 (+!137 lt!53079 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))) lt!53081) (apply!97 lt!53079 lt!53081))))

(declare-fun lt!53361 () Unit!3132)

(assert (=> d!28391 (= lt!53361 (choose!650 lt!53079 lt!53077 (minValue!2437 newMap!16) lt!53081))))

(declare-fun e!68049 () Bool)

(assert (=> d!28391 e!68049))

(declare-fun res!52105 () Bool)

(assert (=> d!28391 (=> (not res!52105) (not e!68049))))

(assert (=> d!28391 (= res!52105 (contains!811 lt!53079 lt!53081))))

(assert (=> d!28391 (= (addApplyDifferent!73 lt!53079 lt!53077 (minValue!2437 newMap!16) lt!53081) lt!53361)))

(declare-fun b!104521 () Bool)

(assert (=> b!104521 (= e!68049 (not (= lt!53081 lt!53077)))))

(assert (= (and d!28391 res!52105) b!104521))

(declare-fun m!116197 () Bool)

(assert (=> d!28391 m!116197))

(assert (=> d!28391 m!115103))

(assert (=> d!28391 m!115087))

(assert (=> d!28391 m!115107))

(assert (=> d!28391 m!115087))

(declare-fun m!116199 () Bool)

(assert (=> d!28391 m!116199))

(assert (=> b!103931 d!28391))

(declare-fun d!28393 () Bool)

(assert (=> d!28393 (= (apply!97 lt!53079 lt!53081) (get!1331 (getValueByKey!156 (toList!779 lt!53079) lt!53081)))))

(declare-fun bs!4301 () Bool)

(assert (= bs!4301 d!28393))

(declare-fun m!116201 () Bool)

(assert (=> bs!4301 m!116201))

(assert (=> bs!4301 m!116201))

(declare-fun m!116203 () Bool)

(assert (=> bs!4301 m!116203))

(assert (=> b!103931 d!28393))

(declare-fun d!28395 () Bool)

(assert (=> d!28395 (= (apply!97 (+!137 lt!53078 (tuple2!2355 lt!53080 (minValue!2437 newMap!16))) lt!53076) (apply!97 lt!53078 lt!53076))))

(declare-fun lt!53362 () Unit!3132)

(assert (=> d!28395 (= lt!53362 (choose!650 lt!53078 lt!53080 (minValue!2437 newMap!16) lt!53076))))

(declare-fun e!68050 () Bool)

(assert (=> d!28395 e!68050))

(declare-fun res!52106 () Bool)

(assert (=> d!28395 (=> (not res!52106) (not e!68050))))

(assert (=> d!28395 (= res!52106 (contains!811 lt!53078 lt!53076))))

(assert (=> d!28395 (= (addApplyDifferent!73 lt!53078 lt!53080 (minValue!2437 newMap!16) lt!53076) lt!53362)))

(declare-fun b!104522 () Bool)

(assert (=> b!104522 (= e!68050 (not (= lt!53076 lt!53080)))))

(assert (= (and d!28395 res!52106) b!104522))

(declare-fun m!116205 () Bool)

(assert (=> d!28395 m!116205))

(assert (=> d!28395 m!115085))

(assert (=> d!28395 m!115099))

(assert (=> d!28395 m!115111))

(assert (=> d!28395 m!115099))

(declare-fun m!116207 () Bool)

(assert (=> d!28395 m!116207))

(assert (=> b!103931 d!28395))

(declare-fun d!28397 () Bool)

(declare-fun e!68052 () Bool)

(assert (=> d!28397 e!68052))

(declare-fun res!52107 () Bool)

(assert (=> d!28397 (=> res!52107 e!68052)))

(declare-fun lt!53366 () Bool)

(assert (=> d!28397 (= res!52107 (not lt!53366))))

(declare-fun lt!53363 () Bool)

(assert (=> d!28397 (= lt!53366 lt!53363)))

(declare-fun lt!53364 () Unit!3132)

(declare-fun e!68051 () Unit!3132)

(assert (=> d!28397 (= lt!53364 e!68051)))

(declare-fun c!18104 () Bool)

(assert (=> d!28397 (= c!18104 lt!53363)))

(assert (=> d!28397 (= lt!53363 (containsKey!159 (toList!779 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) lt!53069))))

(assert (=> d!28397 (= (contains!811 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53069) lt!53366)))

(declare-fun b!104523 () Bool)

(declare-fun lt!53365 () Unit!3132)

(assert (=> b!104523 (= e!68051 lt!53365)))

(assert (=> b!104523 (= lt!53365 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) lt!53069))))

(assert (=> b!104523 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) lt!53069))))

(declare-fun b!104524 () Bool)

(declare-fun Unit!3189 () Unit!3132)

(assert (=> b!104524 (= e!68051 Unit!3189)))

(declare-fun b!104525 () Bool)

(assert (=> b!104525 (= e!68052 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) lt!53069)))))

(assert (= (and d!28397 c!18104) b!104523))

(assert (= (and d!28397 (not c!18104)) b!104524))

(assert (= (and d!28397 (not res!52107)) b!104525))

(declare-fun m!116209 () Bool)

(assert (=> d!28397 m!116209))

(declare-fun m!116211 () Bool)

(assert (=> b!104523 m!116211))

(declare-fun m!116213 () Bool)

(assert (=> b!104523 m!116213))

(assert (=> b!104523 m!116213))

(declare-fun m!116215 () Bool)

(assert (=> b!104523 m!116215))

(assert (=> b!104525 m!116213))

(assert (=> b!104525 m!116213))

(assert (=> b!104525 m!116215))

(assert (=> b!103931 d!28397))

(declare-fun d!28399 () Bool)

(assert (=> d!28399 (= (apply!97 lt!53084 lt!53072) (get!1331 (getValueByKey!156 (toList!779 lt!53084) lt!53072)))))

(declare-fun bs!4302 () Bool)

(assert (= bs!4302 d!28399))

(declare-fun m!116217 () Bool)

(assert (=> bs!4302 m!116217))

(assert (=> bs!4302 m!116217))

(declare-fun m!116219 () Bool)

(assert (=> bs!4302 m!116219))

(assert (=> b!103931 d!28399))

(declare-fun d!28401 () Bool)

(declare-fun e!68053 () Bool)

(assert (=> d!28401 e!68053))

(declare-fun res!52108 () Bool)

(assert (=> d!28401 (=> (not res!52108) (not e!68053))))

(declare-fun lt!53369 () ListLongMap!1527)

(assert (=> d!28401 (= res!52108 (contains!811 lt!53369 (_1!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(declare-fun lt!53368 () List!1592)

(assert (=> d!28401 (= lt!53369 (ListLongMap!1528 lt!53368))))

(declare-fun lt!53367 () Unit!3132)

(declare-fun lt!53370 () Unit!3132)

(assert (=> d!28401 (= lt!53367 lt!53370)))

(assert (=> d!28401 (= (getValueByKey!156 lt!53368 (_1!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28401 (= lt!53370 (lemmaContainsTupThenGetReturnValue!72 lt!53368 (_1!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28401 (= lt!53368 (insertStrictlySorted!75 (toList!779 lt!53084) (_1!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28401 (= (+!137 lt!53084 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53369)))

(declare-fun b!104526 () Bool)

(declare-fun res!52109 () Bool)

(assert (=> b!104526 (=> (not res!52109) (not e!68053))))

(assert (=> b!104526 (= res!52109 (= (getValueByKey!156 (toList!779 lt!53369) (_1!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))))))))

(declare-fun b!104527 () Bool)

(assert (=> b!104527 (= e!68053 (contains!812 (toList!779 lt!53369) (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))))))

(assert (= (and d!28401 res!52108) b!104526))

(assert (= (and b!104526 res!52109) b!104527))

(declare-fun m!116221 () Bool)

(assert (=> d!28401 m!116221))

(declare-fun m!116223 () Bool)

(assert (=> d!28401 m!116223))

(declare-fun m!116225 () Bool)

(assert (=> d!28401 m!116225))

(declare-fun m!116227 () Bool)

(assert (=> d!28401 m!116227))

(declare-fun m!116229 () Bool)

(assert (=> b!104526 m!116229))

(declare-fun m!116231 () Bool)

(assert (=> b!104527 m!116231))

(assert (=> b!103931 d!28401))

(declare-fun d!28403 () Bool)

(assert (=> d!28403 (= (apply!97 lt!53078 lt!53076) (get!1331 (getValueByKey!156 (toList!779 lt!53078) lt!53076)))))

(declare-fun bs!4303 () Bool)

(assert (= bs!4303 d!28403))

(declare-fun m!116233 () Bool)

(assert (=> bs!4303 m!116233))

(assert (=> bs!4303 m!116233))

(declare-fun m!116235 () Bool)

(assert (=> bs!4303 m!116235))

(assert (=> b!103931 d!28403))

(declare-fun d!28405 () Bool)

(declare-fun e!68054 () Bool)

(assert (=> d!28405 e!68054))

(declare-fun res!52110 () Bool)

(assert (=> d!28405 (=> (not res!52110) (not e!68054))))

(declare-fun lt!53373 () ListLongMap!1527)

(assert (=> d!28405 (= res!52110 (contains!811 lt!53373 (_1!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(declare-fun lt!53372 () List!1592)

(assert (=> d!28405 (= lt!53373 (ListLongMap!1528 lt!53372))))

(declare-fun lt!53371 () Unit!3132)

(declare-fun lt!53374 () Unit!3132)

(assert (=> d!28405 (= lt!53371 lt!53374)))

(assert (=> d!28405 (= (getValueByKey!156 lt!53372 (_1!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28405 (= lt!53374 (lemmaContainsTupThenGetReturnValue!72 lt!53372 (_1!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28405 (= lt!53372 (insertStrictlySorted!75 (toList!779 lt!53085) (_1!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) (_2!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))))))

(assert (=> d!28405 (= (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53373)))

(declare-fun b!104528 () Bool)

(declare-fun res!52111 () Bool)

(assert (=> b!104528 (=> (not res!52111) (not e!68054))))

(assert (=> b!104528 (= res!52111 (= (getValueByKey!156 (toList!779 lt!53373) (_1!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) (Some!161 (_2!1188 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))))))))

(declare-fun b!104529 () Bool)

(assert (=> b!104529 (= e!68054 (contains!812 (toList!779 lt!53373) (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))))))

(assert (= (and d!28405 res!52110) b!104528))

(assert (= (and b!104528 res!52111) b!104529))

(declare-fun m!116237 () Bool)

(assert (=> d!28405 m!116237))

(declare-fun m!116239 () Bool)

(assert (=> d!28405 m!116239))

(declare-fun m!116241 () Bool)

(assert (=> d!28405 m!116241))

(declare-fun m!116243 () Bool)

(assert (=> d!28405 m!116243))

(declare-fun m!116245 () Bool)

(assert (=> b!104528 m!116245))

(declare-fun m!116247 () Bool)

(assert (=> b!104529 m!116247))

(assert (=> b!103931 d!28405))

(declare-fun d!28407 () Bool)

(declare-fun e!68055 () Bool)

(assert (=> d!28407 e!68055))

(declare-fun res!52112 () Bool)

(assert (=> d!28407 (=> (not res!52112) (not e!68055))))

(declare-fun lt!53377 () ListLongMap!1527)

(assert (=> d!28407 (= res!52112 (contains!811 lt!53377 (_1!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))))))

(declare-fun lt!53376 () List!1592)

(assert (=> d!28407 (= lt!53377 (ListLongMap!1528 lt!53376))))

(declare-fun lt!53375 () Unit!3132)

(declare-fun lt!53378 () Unit!3132)

(assert (=> d!28407 (= lt!53375 lt!53378)))

(assert (=> d!28407 (= (getValueByKey!156 lt!53376 (_1!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))))))

(assert (=> d!28407 (= lt!53378 (lemmaContainsTupThenGetReturnValue!72 lt!53376 (_1!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))))))

(assert (=> d!28407 (= lt!53376 (insertStrictlySorted!75 (toList!779 lt!53079) (_1!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))))))

(assert (=> d!28407 (= (+!137 lt!53079 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))) lt!53377)))

(declare-fun b!104530 () Bool)

(declare-fun res!52113 () Bool)

(assert (=> b!104530 (=> (not res!52113) (not e!68055))))

(assert (=> b!104530 (= res!52113 (= (getValueByKey!156 (toList!779 lt!53377) (_1!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!53077 (minValue!2437 newMap!16))))))))

(declare-fun b!104531 () Bool)

(assert (=> b!104531 (= e!68055 (contains!812 (toList!779 lt!53377) (tuple2!2355 lt!53077 (minValue!2437 newMap!16))))))

(assert (= (and d!28407 res!52112) b!104530))

(assert (= (and b!104530 res!52113) b!104531))

(declare-fun m!116249 () Bool)

(assert (=> d!28407 m!116249))

(declare-fun m!116251 () Bool)

(assert (=> d!28407 m!116251))

(declare-fun m!116253 () Bool)

(assert (=> d!28407 m!116253))

(declare-fun m!116255 () Bool)

(assert (=> d!28407 m!116255))

(declare-fun m!116257 () Bool)

(assert (=> b!104530 m!116257))

(declare-fun m!116259 () Bool)

(assert (=> b!104531 m!116259))

(assert (=> b!103931 d!28407))

(declare-fun d!28409 () Bool)

(assert (=> d!28409 (contains!811 (+!137 lt!53085 (tuple2!2355 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53069)))

(declare-fun lt!53379 () Unit!3132)

(assert (=> d!28409 (= lt!53379 (choose!651 lt!53085 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) lt!53069))))

(assert (=> d!28409 (contains!811 lt!53085 lt!53069)))

(assert (=> d!28409 (= (addStillContains!73 lt!53085 lt!53090 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) lt!53069) lt!53379)))

(declare-fun bs!4304 () Bool)

(assert (= bs!4304 d!28409))

(assert (=> bs!4304 m!115089))

(assert (=> bs!4304 m!115089))

(assert (=> bs!4304 m!115105))

(declare-fun m!116261 () Bool)

(assert (=> bs!4304 m!116261))

(declare-fun m!116263 () Bool)

(assert (=> bs!4304 m!116263))

(assert (=> b!103931 d!28409))

(declare-fun b!104532 () Bool)

(assert (=> b!104532 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> b!104532 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))))))))

(declare-fun lt!53384 () ListLongMap!1527)

(declare-fun e!68058 () Bool)

(assert (=> b!104532 (= e!68058 (= (apply!97 lt!53384 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!28411 () Bool)

(declare-fun e!68056 () Bool)

(assert (=> d!28411 e!68056))

(declare-fun res!52117 () Bool)

(assert (=> d!28411 (=> (not res!52117) (not e!68056))))

(assert (=> d!28411 (= res!52117 (not (contains!811 lt!53384 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68059 () ListLongMap!1527)

(assert (=> d!28411 (= lt!53384 e!68059)))

(declare-fun c!18107 () Bool)

(assert (=> d!28411 (= c!18107 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28411 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28411 (= (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53384)))

(declare-fun b!104533 () Bool)

(assert (=> b!104533 (= e!68059 (ListLongMap!1528 Nil!1589))))

(declare-fun b!104534 () Bool)

(declare-fun res!52116 () Bool)

(assert (=> b!104534 (=> (not res!52116) (not e!68056))))

(assert (=> b!104534 (= res!52116 (not (contains!811 lt!53384 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104535 () Bool)

(declare-fun e!68060 () Bool)

(assert (=> b!104535 (= e!68060 (isEmpty!373 lt!53384))))

(declare-fun b!104536 () Bool)

(declare-fun lt!53382 () Unit!3132)

(declare-fun lt!53385 () Unit!3132)

(assert (=> b!104536 (= lt!53382 lt!53385)))

(declare-fun lt!53386 () ListLongMap!1527)

(declare-fun lt!53380 () (_ BitVec 64))

(declare-fun lt!53381 () V!3209)

(declare-fun lt!53383 () (_ BitVec 64))

(assert (=> b!104536 (not (contains!811 (+!137 lt!53386 (tuple2!2355 lt!53383 lt!53381)) lt!53380))))

(assert (=> b!104536 (= lt!53385 (addStillNotContains!47 lt!53386 lt!53383 lt!53381 lt!53380))))

(assert (=> b!104536 (= lt!53380 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104536 (= lt!53381 (get!1328 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104536 (= lt!53383 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10972 () ListLongMap!1527)

(assert (=> b!104536 (= lt!53386 call!10972)))

(declare-fun e!68061 () ListLongMap!1527)

(assert (=> b!104536 (= e!68061 (+!137 call!10972 (tuple2!2355 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (get!1328 (select (arr!2049 (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10969 () Bool)

(assert (=> bm!10969 (= call!10972 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16)))))

(declare-fun b!104537 () Bool)

(declare-fun e!68057 () Bool)

(assert (=> b!104537 (= e!68057 e!68060)))

(declare-fun c!18106 () Bool)

(assert (=> b!104537 (= c!18106 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104538 () Bool)

(assert (=> b!104538 (= e!68059 e!68061)))

(declare-fun c!18108 () Bool)

(assert (=> b!104538 (= c!18108 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104539 () Bool)

(assert (=> b!104539 (= e!68057 e!68058)))

(assert (=> b!104539 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun res!52115 () Bool)

(assert (=> b!104539 (= res!52115 (contains!811 lt!53384 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104539 (=> (not res!52115) (not e!68058))))

(declare-fun b!104540 () Bool)

(declare-fun e!68062 () Bool)

(assert (=> b!104540 (= e!68062 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104540 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104541 () Bool)

(assert (=> b!104541 (= e!68061 call!10972)))

(declare-fun b!104542 () Bool)

(assert (=> b!104542 (= e!68060 (= lt!53384 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (ite c!17808 (_values!2543 newMap!16) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (index!3156 lt!52724) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) (mask!6696 newMap!16) (ite (and c!17808 c!17811) lt!52735 (extraKeys!2369 newMap!16)) (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16))))))

(declare-fun b!104543 () Bool)

(assert (=> b!104543 (= e!68056 e!68057)))

(declare-fun c!18105 () Bool)

(assert (=> b!104543 (= c!18105 e!68062)))

(declare-fun res!52114 () Bool)

(assert (=> b!104543 (=> (not res!52114) (not e!68062))))

(assert (=> b!104543 (= res!52114 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (= (and d!28411 c!18107) b!104533))

(assert (= (and d!28411 (not c!18107)) b!104538))

(assert (= (and b!104538 c!18108) b!104536))

(assert (= (and b!104538 (not c!18108)) b!104541))

(assert (= (or b!104536 b!104541) bm!10969))

(assert (= (and d!28411 res!52117) b!104534))

(assert (= (and b!104534 res!52116) b!104543))

(assert (= (and b!104543 res!52114) b!104540))

(assert (= (and b!104543 c!18105) b!104539))

(assert (= (and b!104543 (not c!18105)) b!104537))

(assert (= (and b!104539 res!52115) b!104532))

(assert (= (and b!104537 c!18106) b!104542))

(assert (= (and b!104537 (not c!18106)) b!104535))

(declare-fun b_lambda!4667 () Bool)

(assert (=> (not b_lambda!4667) (not b!104532)))

(assert (=> b!104532 t!5659))

(declare-fun b_and!6457 () Bool)

(assert (= b_and!6453 (and (=> t!5659 result!3431) b_and!6457)))

(assert (=> b!104532 t!5661))

(declare-fun b_and!6459 () Bool)

(assert (= b_and!6455 (and (=> t!5661 result!3433) b_and!6459)))

(declare-fun b_lambda!4669 () Bool)

(assert (=> (not b_lambda!4669) (not b!104536)))

(assert (=> b!104536 t!5659))

(declare-fun b_and!6461 () Bool)

(assert (= b_and!6457 (and (=> t!5659 result!3431) b_and!6461)))

(assert (=> b!104536 t!5661))

(declare-fun b_and!6463 () Bool)

(assert (= b_and!6459 (and (=> t!5661 result!3433) b_and!6463)))

(declare-fun m!116265 () Bool)

(assert (=> d!28411 m!116265))

(assert (=> d!28411 m!114321))

(declare-fun m!116267 () Bool)

(assert (=> b!104535 m!116267))

(assert (=> b!104538 m!114381))

(assert (=> b!104538 m!114381))

(assert (=> b!104538 m!114383))

(assert (=> b!104539 m!114381))

(assert (=> b!104539 m!114381))

(declare-fun m!116269 () Bool)

(assert (=> b!104539 m!116269))

(assert (=> b!104540 m!114381))

(assert (=> b!104540 m!114381))

(assert (=> b!104540 m!114383))

(assert (=> b!104532 m!114381))

(declare-fun m!116271 () Bool)

(assert (=> b!104532 m!116271))

(assert (=> b!104532 m!115073))

(assert (=> b!104532 m!114381))

(assert (=> b!104532 m!114389))

(assert (=> b!104532 m!115073))

(assert (=> b!104532 m!114389))

(assert (=> b!104532 m!115075))

(declare-fun m!116273 () Bool)

(assert (=> b!104536 m!116273))

(assert (=> b!104536 m!116273))

(declare-fun m!116275 () Bool)

(assert (=> b!104536 m!116275))

(assert (=> b!104536 m!115073))

(assert (=> b!104536 m!114381))

(assert (=> b!104536 m!114389))

(declare-fun m!116277 () Bool)

(assert (=> b!104536 m!116277))

(assert (=> b!104536 m!115073))

(assert (=> b!104536 m!114389))

(assert (=> b!104536 m!115075))

(declare-fun m!116279 () Bool)

(assert (=> b!104536 m!116279))

(declare-fun m!116281 () Bool)

(assert (=> b!104542 m!116281))

(declare-fun m!116283 () Bool)

(assert (=> b!104534 m!116283))

(assert (=> bm!10969 m!116281))

(assert (=> b!103931 d!28411))

(declare-fun d!28413 () Bool)

(assert (=> d!28413 (= (apply!97 (+!137 lt!53084 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53072) (apply!97 lt!53084 lt!53072))))

(declare-fun lt!53387 () Unit!3132)

(assert (=> d!28413 (= lt!53387 (choose!650 lt!53084 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) lt!53072))))

(declare-fun e!68063 () Bool)

(assert (=> d!28413 e!68063))

(declare-fun res!52118 () Bool)

(assert (=> d!28413 (=> (not res!52118) (not e!68063))))

(assert (=> d!28413 (= res!52118 (contains!811 lt!53084 lt!53072))))

(assert (=> d!28413 (= (addApplyDifferent!73 lt!53084 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)) lt!53072) lt!53387)))

(declare-fun b!104544 () Bool)

(assert (=> b!104544 (= e!68063 (not (= lt!53072 lt!53082)))))

(assert (= (and d!28413 res!52118) b!104544))

(declare-fun m!116285 () Bool)

(assert (=> d!28413 m!116285))

(assert (=> d!28413 m!115101))

(assert (=> d!28413 m!115095))

(assert (=> d!28413 m!115097))

(assert (=> d!28413 m!115095))

(declare-fun m!116287 () Bool)

(assert (=> d!28413 m!116287))

(assert (=> b!103931 d!28413))

(declare-fun d!28415 () Bool)

(assert (=> d!28415 (= (apply!97 (+!137 lt!53084 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16)))) lt!53072) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!53084 (tuple2!2355 lt!53082 (ite (and c!17808 c!17811) lt!52447 (zeroValue!2437 newMap!16))))) lt!53072)))))

(declare-fun bs!4305 () Bool)

(assert (= bs!4305 d!28415))

(declare-fun m!116289 () Bool)

(assert (=> bs!4305 m!116289))

(assert (=> bs!4305 m!116289))

(declare-fun m!116291 () Bool)

(assert (=> bs!4305 m!116291))

(assert (=> b!103931 d!28415))

(assert (=> d!27805 d!27919))

(declare-fun b!104561 () Bool)

(declare-fun res!52129 () Bool)

(declare-fun lt!53390 () SeekEntryResult!252)

(assert (=> b!104561 (= res!52129 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3155 lt!53390)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68073 () Bool)

(assert (=> b!104561 (=> (not res!52129) (not e!68073))))

(declare-fun b!104562 () Bool)

(declare-fun e!68072 () Bool)

(declare-fun call!10978 () Bool)

(assert (=> b!104562 (= e!68072 (not call!10978))))

(declare-fun bm!10974 () Bool)

(assert (=> bm!10974 (= call!10978 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!104563 () Bool)

(declare-fun e!68075 () Bool)

(assert (=> b!104563 (= e!68075 ((_ is Undefined!252) lt!53390))))

(declare-fun b!104564 () Bool)

(declare-fun e!68074 () Bool)

(assert (=> b!104564 (= e!68074 e!68075)))

(declare-fun c!18113 () Bool)

(assert (=> b!104564 (= c!18113 ((_ is MissingVacant!252) lt!53390))))

(declare-fun c!18114 () Bool)

(declare-fun bm!10975 () Bool)

(declare-fun call!10977 () Bool)

(assert (=> bm!10975 (= call!10977 (inRange!0 (ite c!18114 (index!3155 lt!53390) (index!3158 lt!53390)) (mask!6696 newMap!16)))))

(declare-fun b!104565 () Bool)

(assert (=> b!104565 (= e!68074 e!68073)))

(declare-fun res!52128 () Bool)

(assert (=> b!104565 (= res!52128 call!10977)))

(assert (=> b!104565 (=> (not res!52128) (not e!68073))))

(declare-fun b!104566 () Bool)

(declare-fun res!52130 () Bool)

(assert (=> b!104566 (=> (not res!52130) (not e!68072))))

(assert (=> b!104566 (= res!52130 call!10977)))

(assert (=> b!104566 (= e!68075 e!68072)))

(declare-fun d!28417 () Bool)

(assert (=> d!28417 e!68074))

(assert (=> d!28417 (= c!18114 ((_ is MissingZero!252) lt!53390))))

(assert (=> d!28417 (= lt!53390 (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(assert (=> d!28417 true))

(declare-fun _$34!882 () Unit!3132)

(assert (=> d!28417 (= (choose!646 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2560 newMap!16)) _$34!882)))

(declare-fun b!104567 () Bool)

(declare-fun res!52127 () Bool)

(assert (=> b!104567 (=> (not res!52127) (not e!68072))))

(assert (=> b!104567 (= res!52127 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!53390)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104568 () Bool)

(assert (=> b!104568 (= e!68073 (not call!10978))))

(assert (= (and d!28417 c!18114) b!104565))

(assert (= (and d!28417 (not c!18114)) b!104564))

(assert (= (and b!104565 res!52128) b!104561))

(assert (= (and b!104561 res!52129) b!104568))

(assert (= (and b!104564 c!18113) b!104566))

(assert (= (and b!104564 (not c!18113)) b!104563))

(assert (= (and b!104566 res!52130) b!104567))

(assert (= (and b!104567 res!52127) b!104562))

(assert (= (or b!104565 b!104566) bm!10975))

(assert (= (or b!104568 b!104562) bm!10974))

(declare-fun m!116293 () Bool)

(assert (=> bm!10975 m!116293))

(assert (=> d!28417 m!113915))

(assert (=> d!28417 m!114279))

(assert (=> bm!10974 m!113915))

(assert (=> bm!10974 m!114277))

(declare-fun m!116295 () Bool)

(assert (=> b!104567 m!116295))

(declare-fun m!116297 () Bool)

(assert (=> b!104561 m!116297))

(assert (=> d!27805 d!28417))

(assert (=> d!27805 d!28055))

(declare-fun d!28419 () Bool)

(declare-fun lt!53391 () Bool)

(assert (=> d!28419 (= lt!53391 (select (content!108 (t!5646 (toList!779 lt!52569))) lt!52444))))

(declare-fun e!68076 () Bool)

(assert (=> d!28419 (= lt!53391 e!68076)))

(declare-fun res!52131 () Bool)

(assert (=> d!28419 (=> (not res!52131) (not e!68076))))

(assert (=> d!28419 (= res!52131 ((_ is Cons!1588) (t!5646 (toList!779 lt!52569))))))

(assert (=> d!28419 (= (contains!812 (t!5646 (toList!779 lt!52569)) lt!52444) lt!53391)))

(declare-fun b!104569 () Bool)

(declare-fun e!68077 () Bool)

(assert (=> b!104569 (= e!68076 e!68077)))

(declare-fun res!52132 () Bool)

(assert (=> b!104569 (=> res!52132 e!68077)))

(assert (=> b!104569 (= res!52132 (= (h!2184 (t!5646 (toList!779 lt!52569))) lt!52444))))

(declare-fun b!104570 () Bool)

(assert (=> b!104570 (= e!68077 (contains!812 (t!5646 (t!5646 (toList!779 lt!52569))) lt!52444))))

(assert (= (and d!28419 res!52131) b!104569))

(assert (= (and b!104569 (not res!52132)) b!104570))

(assert (=> d!28419 m!115987))

(declare-fun m!116299 () Bool)

(assert (=> d!28419 m!116299))

(declare-fun m!116301 () Bool)

(assert (=> b!104570 m!116301))

(assert (=> b!103894 d!28419))

(declare-fun d!28421 () Bool)

(declare-fun lt!53392 () Bool)

(assert (=> d!28421 (= lt!53392 (select (content!108 lt!52927) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun e!68078 () Bool)

(assert (=> d!28421 (= lt!53392 e!68078)))

(declare-fun res!52133 () Bool)

(assert (=> d!28421 (=> (not res!52133) (not e!68078))))

(assert (=> d!28421 (= res!52133 ((_ is Cons!1588) lt!52927))))

(assert (=> d!28421 (= (contains!812 lt!52927 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))) lt!53392)))

(declare-fun b!104571 () Bool)

(declare-fun e!68079 () Bool)

(assert (=> b!104571 (= e!68078 e!68079)))

(declare-fun res!52134 () Bool)

(assert (=> b!104571 (=> res!52134 e!68079)))

(assert (=> b!104571 (= res!52134 (= (h!2184 lt!52927) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!104572 () Bool)

(assert (=> b!104572 (= e!68079 (contains!812 (t!5646 lt!52927) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(assert (= (and d!28421 res!52133) b!104571))

(assert (= (and b!104571 (not res!52134)) b!104572))

(declare-fun m!116303 () Bool)

(assert (=> d!28421 m!116303))

(declare-fun m!116305 () Bool)

(assert (=> d!28421 m!116305))

(declare-fun m!116307 () Bool)

(assert (=> b!104572 m!116307))

(assert (=> b!103812 d!28421))

(declare-fun d!28423 () Bool)

(assert (=> d!28423 (= (get!1331 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2882 (getValueByKey!156 (toList!779 lt!52641) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27993 d!28423))

(assert (=> d!27993 d!28159))

(declare-fun d!28425 () Bool)

(assert (=> d!28425 (= (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549)) (not (isEmpty!375 (getValueByKey!156 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))))

(declare-fun bs!4306 () Bool)

(assert (= bs!4306 d!28425))

(assert (=> bs!4306 m!114999))

(declare-fun m!116309 () Bool)

(assert (=> bs!4306 m!116309))

(assert (=> b!103899 d!28425))

(declare-fun e!68081 () Option!162)

(declare-fun b!104575 () Bool)

(assert (=> b!104575 (= e!68081 (getValueByKey!156 (t!5646 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))) lt!52549))))

(declare-fun b!104574 () Bool)

(declare-fun e!68080 () Option!162)

(assert (=> b!104574 (= e!68080 e!68081)))

(declare-fun c!18116 () Bool)

(assert (=> b!104574 (= c!18116 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))) (not (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))))) lt!52549))))))

(declare-fun b!104573 () Bool)

(assert (=> b!104573 (= e!68080 (Some!161 (_2!1188 (h!2184 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))))))))

(declare-fun d!28427 () Bool)

(declare-fun c!18115 () Bool)

(assert (=> d!28427 (= c!18115 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))))) lt!52549)))))

(assert (=> d!28427 (= (getValueByKey!156 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549) e!68080)))

(declare-fun b!104576 () Bool)

(assert (=> b!104576 (= e!68081 None!160)))

(assert (= (and d!28427 c!18115) b!104573))

(assert (= (and d!28427 (not c!18115)) b!104574))

(assert (= (and b!104574 c!18116) b!104575))

(assert (= (and b!104574 (not c!18116)) b!104576))

(declare-fun m!116311 () Bool)

(assert (=> b!104575 m!116311))

(assert (=> b!103899 d!28427))

(declare-fun d!28429 () Bool)

(declare-fun lt!53393 () Bool)

(assert (=> d!28429 (= lt!53393 (select (content!108 (toList!779 lt!53038)) (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun e!68082 () Bool)

(assert (=> d!28429 (= lt!53393 e!68082)))

(declare-fun res!52135 () Bool)

(assert (=> d!28429 (=> (not res!52135) (not e!68082))))

(assert (=> d!28429 (= res!52135 ((_ is Cons!1588) (toList!779 lt!53038)))))

(assert (=> d!28429 (= (contains!812 (toList!779 lt!53038) (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53393)))

(declare-fun b!104577 () Bool)

(declare-fun e!68083 () Bool)

(assert (=> b!104577 (= e!68082 e!68083)))

(declare-fun res!52136 () Bool)

(assert (=> b!104577 (=> res!52136 e!68083)))

(assert (=> b!104577 (= res!52136 (= (h!2184 (toList!779 lt!53038)) (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104578 () Bool)

(assert (=> b!104578 (= e!68083 (contains!812 (t!5646 (toList!779 lt!53038)) (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (= (and d!28429 res!52135) b!104577))

(assert (= (and b!104577 (not res!52136)) b!104578))

(declare-fun m!116313 () Bool)

(assert (=> d!28429 m!116313))

(declare-fun m!116315 () Bool)

(assert (=> d!28429 m!116315))

(declare-fun m!116317 () Bool)

(assert (=> b!104578 m!116317))

(assert (=> b!103887 d!28429))

(declare-fun d!28431 () Bool)

(assert (=> d!28431 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444)))))))

(declare-fun bs!4307 () Bool)

(assert (= bs!4307 d!28431))

(assert (=> bs!4307 m!114169))

(declare-fun m!116319 () Bool)

(assert (=> bs!4307 m!116319))

(assert (=> b!103718 d!28431))

(assert (=> b!103718 d!27829))

(declare-fun b!104579 () Bool)

(declare-fun e!68086 () Bool)

(declare-fun call!10979 () Bool)

(assert (=> b!104579 (= e!68086 call!10979)))

(declare-fun d!28433 () Bool)

(declare-fun res!52137 () Bool)

(declare-fun e!68085 () Bool)

(assert (=> d!28433 (=> res!52137 e!68085)))

(assert (=> d!28433 (= res!52137 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28433 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992)))) e!68085)))

(declare-fun b!104580 () Bool)

(declare-fun e!68084 () Bool)

(assert (=> b!104580 (= e!68084 call!10979)))

(declare-fun b!104581 () Bool)

(assert (=> b!104581 (= e!68085 e!68084)))

(declare-fun c!18117 () Bool)

(assert (=> b!104581 (= c!18117 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!10976 () Bool)

(assert (=> bm!10976 (= call!10979 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4262 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!104582 () Bool)

(assert (=> b!104582 (= e!68084 e!68086)))

(declare-fun lt!53395 () (_ BitVec 64))

(assert (=> b!104582 (= lt!53395 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!53396 () Unit!3132)

(assert (=> b!104582 (= lt!53396 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) lt!53395 #b00000000000000000000000000000000))))

(assert (=> b!104582 (arrayContainsKey!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) lt!53395 #b00000000000000000000000000000000)))

(declare-fun lt!53394 () Unit!3132)

(assert (=> b!104582 (= lt!53394 lt!53396)))

(declare-fun res!52138 () Bool)

(assert (=> b!104582 (= res!52138 (= (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000) (_keys!4262 (v!2876 (underlying!358 thiss!992))) (mask!6696 (v!2876 (underlying!358 thiss!992)))) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!104582 (=> (not res!52138) (not e!68086))))

(assert (= (and d!28433 (not res!52137)) b!104581))

(assert (= (and b!104581 c!18117) b!104582))

(assert (= (and b!104581 (not c!18117)) b!104580))

(assert (= (and b!104582 res!52138) b!104579))

(assert (= (or b!104579 b!104580) bm!10976))

(assert (=> b!104581 m!115899))

(assert (=> b!104581 m!115899))

(assert (=> b!104581 m!115901))

(declare-fun m!116321 () Bool)

(assert (=> bm!10976 m!116321))

(assert (=> b!104582 m!115899))

(declare-fun m!116323 () Bool)

(assert (=> b!104582 m!116323))

(declare-fun m!116325 () Bool)

(assert (=> b!104582 m!116325))

(assert (=> b!104582 m!115899))

(declare-fun m!116327 () Bool)

(assert (=> b!104582 m!116327))

(assert (=> b!103922 d!28433))

(declare-fun d!28435 () Bool)

(assert (=> d!28435 (= (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52636)) (v!2882 (getValueByKey!156 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52636)))))

(assert (=> d!27891 d!28435))

(declare-fun e!68088 () Option!162)

(declare-fun b!104585 () Bool)

(assert (=> b!104585 (= e!68088 (getValueByKey!156 (t!5646 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!52636))))

(declare-fun b!104584 () Bool)

(declare-fun e!68087 () Option!162)

(assert (=> b!104584 (= e!68087 e!68088)))

(declare-fun c!18119 () Bool)

(assert (=> b!104584 (= c!18119 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52636))))))

(declare-fun b!104583 () Bool)

(assert (=> b!104583 (= e!68087 (Some!161 (_2!1188 (h!2184 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun c!18118 () Bool)

(declare-fun d!28437 () Bool)

(assert (=> d!28437 (= c!18118 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52636)))))

(assert (=> d!28437 (= (getValueByKey!156 (toList!779 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52636) e!68087)))

(declare-fun b!104586 () Bool)

(assert (=> b!104586 (= e!68088 None!160)))

(assert (= (and d!28437 c!18118) b!104583))

(assert (= (and d!28437 (not c!18118)) b!104584))

(assert (= (and b!104584 c!18119) b!104585))

(assert (= (and b!104584 (not c!18119)) b!104586))

(declare-fun m!116329 () Bool)

(assert (=> b!104585 m!116329))

(assert (=> d!27891 d!28437))

(declare-fun d!28439 () Bool)

(assert (=> d!28439 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4308 () Bool)

(assert (= bs!4308 d!28439))

(assert (=> bs!4308 m!115049))

(declare-fun m!116331 () Bool)

(assert (=> bs!4308 m!116331))

(assert (=> b!103928 d!28439))

(declare-fun b!104589 () Bool)

(declare-fun e!68090 () Option!162)

(assert (=> b!104589 (= e!68090 (getValueByKey!156 (t!5646 (toList!779 lt!52553)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104588 () Bool)

(declare-fun e!68089 () Option!162)

(assert (=> b!104588 (= e!68089 e!68090)))

(declare-fun c!18121 () Bool)

(assert (=> b!104588 (= c!18121 (and ((_ is Cons!1588) (toList!779 lt!52553)) (not (= (_1!1188 (h!2184 (toList!779 lt!52553))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104587 () Bool)

(assert (=> b!104587 (= e!68089 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52553)))))))

(declare-fun d!28441 () Bool)

(declare-fun c!18120 () Bool)

(assert (=> d!28441 (= c!18120 (and ((_ is Cons!1588) (toList!779 lt!52553)) (= (_1!1188 (h!2184 (toList!779 lt!52553))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28441 (= (getValueByKey!156 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000) e!68089)))

(declare-fun b!104590 () Bool)

(assert (=> b!104590 (= e!68090 None!160)))

(assert (= (and d!28441 c!18120) b!104587))

(assert (= (and d!28441 (not c!18120)) b!104588))

(assert (= (and b!104588 c!18121) b!104589))

(assert (= (and b!104588 (not c!18121)) b!104590))

(declare-fun m!116333 () Bool)

(assert (=> b!104589 m!116333))

(assert (=> b!103928 d!28441))

(declare-fun b!104593 () Bool)

(declare-fun e!68092 () Option!162)

(assert (=> b!104593 (= e!68092 (getValueByKey!156 (t!5646 (t!5646 (toList!779 lt!52562))) (_1!1188 lt!52442)))))

(declare-fun b!104592 () Bool)

(declare-fun e!68091 () Option!162)

(assert (=> b!104592 (= e!68091 e!68092)))

(declare-fun c!18123 () Bool)

(assert (=> b!104592 (= c!18123 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52562))) (not (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52562)))) (_1!1188 lt!52442)))))))

(declare-fun b!104591 () Bool)

(assert (=> b!104591 (= e!68091 (Some!161 (_2!1188 (h!2184 (t!5646 (toList!779 lt!52562))))))))

(declare-fun d!28443 () Bool)

(declare-fun c!18122 () Bool)

(assert (=> d!28443 (= c!18122 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52562))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52562)))) (_1!1188 lt!52442))))))

(assert (=> d!28443 (= (getValueByKey!156 (t!5646 (toList!779 lt!52562)) (_1!1188 lt!52442)) e!68091)))

(declare-fun b!104594 () Bool)

(assert (=> b!104594 (= e!68092 None!160)))

(assert (= (and d!28443 c!18122) b!104591))

(assert (= (and d!28443 (not c!18122)) b!104592))

(assert (= (and b!104592 c!18123) b!104593))

(assert (= (and b!104592 (not c!18123)) b!104594))

(declare-fun m!116335 () Bool)

(assert (=> b!104593 m!116335))

(assert (=> b!103613 d!28443))

(declare-fun e!68094 () Option!162)

(declare-fun b!104597 () Bool)

(assert (=> b!104597 (= e!68094 (getValueByKey!156 (t!5646 (toList!779 lt!53054)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104596 () Bool)

(declare-fun e!68093 () Option!162)

(assert (=> b!104596 (= e!68093 e!68094)))

(declare-fun c!18125 () Bool)

(assert (=> b!104596 (= c!18125 (and ((_ is Cons!1588) (toList!779 lt!53054)) (not (= (_1!1188 (h!2184 (toList!779 lt!53054))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104595 () Bool)

(assert (=> b!104595 (= e!68093 (Some!161 (_2!1188 (h!2184 (toList!779 lt!53054)))))))

(declare-fun c!18124 () Bool)

(declare-fun d!28445 () Bool)

(assert (=> d!28445 (= c!18124 (and ((_ is Cons!1588) (toList!779 lt!53054)) (= (_1!1188 (h!2184 (toList!779 lt!53054))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28445 (= (getValueByKey!156 (toList!779 lt!53054) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!68093)))

(declare-fun b!104598 () Bool)

(assert (=> b!104598 (= e!68094 None!160)))

(assert (= (and d!28445 c!18124) b!104595))

(assert (= (and d!28445 (not c!18124)) b!104596))

(assert (= (and b!104596 c!18125) b!104597))

(assert (= (and b!104596 (not c!18125)) b!104598))

(declare-fun m!116337 () Bool)

(assert (=> b!104597 m!116337))

(assert (=> b!103904 d!28445))

(declare-fun e!68096 () Option!162)

(declare-fun b!104601 () Bool)

(assert (=> b!104601 (= e!68096 (getValueByKey!156 (t!5646 (t!5646 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104600 () Bool)

(declare-fun e!68095 () Option!162)

(assert (=> b!104600 (= e!68095 e!68096)))

(declare-fun c!18127 () Bool)

(assert (=> b!104600 (= c!18127 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52449))) (not (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52449)))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104599 () Bool)

(assert (=> b!104599 (= e!68095 (Some!161 (_2!1188 (h!2184 (t!5646 (toList!779 lt!52449))))))))

(declare-fun c!18126 () Bool)

(declare-fun d!28447 () Bool)

(assert (=> d!28447 (= c!18126 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52449))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52449)))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28447 (= (getValueByKey!156 (t!5646 (toList!779 lt!52449)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68095)))

(declare-fun b!104602 () Bool)

(assert (=> b!104602 (= e!68096 None!160)))

(assert (= (and d!28447 c!18126) b!104599))

(assert (= (and d!28447 (not c!18126)) b!104600))

(assert (= (and b!104600 c!18127) b!104601))

(assert (= (and b!104600 (not c!18127)) b!104602))

(assert (=> b!104601 m!113915))

(declare-fun m!116339 () Bool)

(assert (=> b!104601 m!116339))

(assert (=> b!103824 d!28447))

(assert (=> d!27853 d!27851))

(declare-fun d!28449 () Bool)

(assert (=> d!28449 (= (getValueByKey!156 lt!52532 (_1!1188 lt!52442)) (Some!161 (_2!1188 lt!52442)))))

(assert (=> d!28449 true))

(declare-fun _$22!430 () Unit!3132)

(assert (=> d!28449 (= (choose!648 lt!52532 (_1!1188 lt!52442) (_2!1188 lt!52442)) _$22!430)))

(declare-fun bs!4309 () Bool)

(assert (= bs!4309 d!28449))

(assert (=> bs!4309 m!114089))

(assert (=> d!27853 d!28449))

(declare-fun d!28451 () Bool)

(declare-fun res!52139 () Bool)

(declare-fun e!68097 () Bool)

(assert (=> d!28451 (=> res!52139 e!68097)))

(assert (=> d!28451 (= res!52139 (or ((_ is Nil!1589) lt!52532) ((_ is Nil!1589) (t!5646 lt!52532))))))

(assert (=> d!28451 (= (isStrictlySorted!295 lt!52532) e!68097)))

(declare-fun b!104603 () Bool)

(declare-fun e!68098 () Bool)

(assert (=> b!104603 (= e!68097 e!68098)))

(declare-fun res!52140 () Bool)

(assert (=> b!104603 (=> (not res!52140) (not e!68098))))

(assert (=> b!104603 (= res!52140 (bvslt (_1!1188 (h!2184 lt!52532)) (_1!1188 (h!2184 (t!5646 lt!52532)))))))

(declare-fun b!104604 () Bool)

(assert (=> b!104604 (= e!68098 (isStrictlySorted!295 (t!5646 lt!52532)))))

(assert (= (and d!28451 (not res!52139)) b!104603))

(assert (= (and b!104603 res!52140) b!104604))

(declare-fun m!116341 () Bool)

(assert (=> b!104604 m!116341))

(assert (=> d!27853 d!28451))

(declare-fun d!28453 () Bool)

(assert (=> d!28453 (= (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!375 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4310 () Bool)

(assert (= bs!4310 d!28453))

(assert (=> bs!4310 m!114873))

(declare-fun m!116343 () Bool)

(assert (=> bs!4310 m!116343))

(assert (=> b!103821 d!28453))

(assert (=> b!103821 d!28267))

(assert (=> b!103546 d!28051))

(declare-fun d!28455 () Bool)

(declare-fun lt!53397 () Bool)

(assert (=> d!28455 (= lt!53397 (select (content!108 (toList!779 lt!52862)) (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68099 () Bool)

(assert (=> d!28455 (= lt!53397 e!68099)))

(declare-fun res!52141 () Bool)

(assert (=> d!28455 (=> (not res!52141) (not e!68099))))

(assert (=> d!28455 (= res!52141 ((_ is Cons!1588) (toList!779 lt!52862)))))

(assert (=> d!28455 (= (contains!812 (toList!779 lt!52862) (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53397)))

(declare-fun b!104605 () Bool)

(declare-fun e!68100 () Bool)

(assert (=> b!104605 (= e!68099 e!68100)))

(declare-fun res!52142 () Bool)

(assert (=> b!104605 (=> res!52142 e!68100)))

(assert (=> b!104605 (= res!52142 (= (h!2184 (toList!779 lt!52862)) (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104606 () Bool)

(assert (=> b!104606 (= e!68100 (contains!812 (t!5646 (toList!779 lt!52862)) (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28455 res!52141) b!104605))

(assert (= (and b!104605 (not res!52142)) b!104606))

(declare-fun m!116345 () Bool)

(assert (=> d!28455 m!116345))

(declare-fun m!116347 () Bool)

(assert (=> d!28455 m!116347))

(declare-fun m!116349 () Bool)

(assert (=> b!104606 m!116349))

(assert (=> b!103712 d!28455))

(declare-fun d!28457 () Bool)

(declare-fun res!52143 () Bool)

(declare-fun e!68101 () Bool)

(assert (=> d!28457 (=> res!52143 e!68101)))

(assert (=> d!28457 (= res!52143 (or ((_ is Nil!1589) lt!52927) ((_ is Nil!1589) (t!5646 lt!52927))))))

(assert (=> d!28457 (= (isStrictlySorted!295 lt!52927) e!68101)))

(declare-fun b!104607 () Bool)

(declare-fun e!68102 () Bool)

(assert (=> b!104607 (= e!68101 e!68102)))

(declare-fun res!52144 () Bool)

(assert (=> b!104607 (=> (not res!52144) (not e!68102))))

(assert (=> b!104607 (= res!52144 (bvslt (_1!1188 (h!2184 lt!52927)) (_1!1188 (h!2184 (t!5646 lt!52927)))))))

(declare-fun b!104608 () Bool)

(assert (=> b!104608 (= e!68102 (isStrictlySorted!295 (t!5646 lt!52927)))))

(assert (= (and d!28457 (not res!52143)) b!104607))

(assert (= (and b!104607 res!52144) b!104608))

(declare-fun m!116351 () Bool)

(assert (=> b!104608 m!116351))

(assert (=> d!27943 d!28457))

(assert (=> d!27943 d!28133))

(declare-fun d!28459 () Bool)

(declare-fun res!52145 () Bool)

(declare-fun e!68103 () Bool)

(assert (=> d!28459 (=> (not res!52145) (not e!68103))))

(assert (=> d!28459 (= res!52145 (validMask!0 (mask!6696 (_2!1187 lt!52716))))))

(assert (=> d!28459 (= (simpleValid!73 (_2!1187 lt!52716)) e!68103)))

(declare-fun b!104611 () Bool)

(declare-fun res!52147 () Bool)

(assert (=> b!104611 (=> (not res!52147) (not e!68103))))

(assert (=> b!104611 (= res!52147 (= (size!2308 (_2!1187 lt!52716)) (bvadd (_size!495 (_2!1187 lt!52716)) (bvsdiv (bvadd (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(declare-fun b!104610 () Bool)

(declare-fun res!52146 () Bool)

(assert (=> b!104610 (=> (not res!52146) (not e!68103))))

(assert (=> b!104610 (= res!52146 (bvsge (size!2308 (_2!1187 lt!52716)) (_size!495 (_2!1187 lt!52716))))))

(declare-fun b!104612 () Bool)

(assert (=> b!104612 (= e!68103 (and (bvsge (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000000) (bvsle (extraKeys!2369 (_2!1187 lt!52716)) #b00000000000000000000000000000011) (bvsge (_vacant!495 (_2!1187 lt!52716)) #b00000000000000000000000000000000)))))

(declare-fun b!104609 () Bool)

(declare-fun res!52148 () Bool)

(assert (=> b!104609 (=> (not res!52148) (not e!68103))))

(assert (=> b!104609 (= res!52148 (and (= (size!2303 (_values!2543 (_2!1187 lt!52716))) (bvadd (mask!6696 (_2!1187 lt!52716)) #b00000000000000000000000000000001)) (= (size!2302 (_keys!4262 (_2!1187 lt!52716))) (size!2303 (_values!2543 (_2!1187 lt!52716)))) (bvsge (_size!495 (_2!1187 lt!52716)) #b00000000000000000000000000000000) (bvsle (_size!495 (_2!1187 lt!52716)) (bvadd (mask!6696 (_2!1187 lt!52716)) #b00000000000000000000000000000001))))))

(assert (= (and d!28459 res!52145) b!104609))

(assert (= (and b!104609 res!52148) b!104610))

(assert (= (and b!104610 res!52146) b!104611))

(assert (= (and b!104611 res!52147) b!104612))

(assert (=> d!28459 m!115515))

(declare-fun m!116353 () Bool)

(assert (=> b!104611 m!116353))

(assert (=> b!104610 m!116353))

(assert (=> d!27843 d!28459))

(declare-fun d!28461 () Bool)

(declare-fun e!68105 () Bool)

(assert (=> d!28461 e!68105))

(declare-fun res!52149 () Bool)

(assert (=> d!28461 (=> res!52149 e!68105)))

(declare-fun lt!53401 () Bool)

(assert (=> d!28461 (= res!52149 (not lt!53401))))

(declare-fun lt!53398 () Bool)

(assert (=> d!28461 (= lt!53401 lt!53398)))

(declare-fun lt!53399 () Unit!3132)

(declare-fun e!68104 () Unit!3132)

(assert (=> d!28461 (= lt!53399 e!68104)))

(declare-fun c!18128 () Bool)

(assert (=> d!28461 (= c!18128 lt!53398)))

(assert (=> d!28461 (= lt!53398 (containsKey!159 (toList!779 lt!52757) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28461 (= (contains!811 lt!52757 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53401)))

(declare-fun b!104613 () Bool)

(declare-fun lt!53400 () Unit!3132)

(assert (=> b!104613 (= e!68104 lt!53400)))

(assert (=> b!104613 (= lt!53400 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52757) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104613 (isDefined!108 (getValueByKey!156 (toList!779 lt!52757) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104614 () Bool)

(declare-fun Unit!3190 () Unit!3132)

(assert (=> b!104614 (= e!68104 Unit!3190)))

(declare-fun b!104615 () Bool)

(assert (=> b!104615 (= e!68105 (isDefined!108 (getValueByKey!156 (toList!779 lt!52757) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28461 c!18128) b!104613))

(assert (= (and d!28461 (not c!18128)) b!104614))

(assert (= (and d!28461 (not res!52149)) b!104615))

(declare-fun m!116355 () Bool)

(assert (=> d!28461 m!116355))

(declare-fun m!116357 () Bool)

(assert (=> b!104613 m!116357))

(declare-fun m!116359 () Bool)

(assert (=> b!104613 m!116359))

(assert (=> b!104613 m!116359))

(declare-fun m!116361 () Bool)

(assert (=> b!104613 m!116361))

(assert (=> b!104615 m!116359))

(assert (=> b!104615 m!116359))

(assert (=> b!104615 m!116361))

(assert (=> b!103527 d!28461))

(declare-fun d!28463 () Bool)

(assert (=> d!28463 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))

(declare-fun lt!53402 () Unit!3132)

(assert (=> d!28463 (= lt!53402 (choose!654 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))

(declare-fun e!68106 () Bool)

(assert (=> d!28463 e!68106))

(declare-fun res!52150 () Bool)

(assert (=> d!28463 (=> (not res!52150) (not e!68106))))

(assert (=> d!28463 (= res!52150 (isStrictlySorted!295 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28463 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624) lt!53402)))

(declare-fun b!104616 () Bool)

(assert (=> b!104616 (= e!68106 (containsKey!159 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624))))

(assert (= (and d!28463 res!52150) b!104616))

(assert (=> d!28463 m!114599))

(assert (=> d!28463 m!114599))

(assert (=> d!28463 m!114601))

(declare-fun m!116363 () Bool)

(assert (=> d!28463 m!116363))

(declare-fun m!116365 () Bool)

(assert (=> d!28463 m!116365))

(assert (=> b!104616 m!114595))

(assert (=> b!103703 d!28463))

(assert (=> b!103703 d!28189))

(assert (=> b!103703 d!28191))

(declare-fun d!28465 () Bool)

(declare-fun lt!53403 () Bool)

(assert (=> d!28465 (= lt!53403 (select (content!108 (toList!779 lt!53043)) (tuple2!2355 lt!52552 lt!52550)))))

(declare-fun e!68107 () Bool)

(assert (=> d!28465 (= lt!53403 e!68107)))

(declare-fun res!52151 () Bool)

(assert (=> d!28465 (=> (not res!52151) (not e!68107))))

(assert (=> d!28465 (= res!52151 ((_ is Cons!1588) (toList!779 lt!53043)))))

(assert (=> d!28465 (= (contains!812 (toList!779 lt!53043) (tuple2!2355 lt!52552 lt!52550)) lt!53403)))

(declare-fun b!104617 () Bool)

(declare-fun e!68108 () Bool)

(assert (=> b!104617 (= e!68107 e!68108)))

(declare-fun res!52152 () Bool)

(assert (=> b!104617 (=> res!52152 e!68108)))

(assert (=> b!104617 (= res!52152 (= (h!2184 (toList!779 lt!53043)) (tuple2!2355 lt!52552 lt!52550)))))

(declare-fun b!104618 () Bool)

(assert (=> b!104618 (= e!68108 (contains!812 (t!5646 (toList!779 lt!53043)) (tuple2!2355 lt!52552 lt!52550)))))

(assert (= (and d!28465 res!52151) b!104617))

(assert (= (and b!104617 (not res!52152)) b!104618))

(declare-fun m!116367 () Bool)

(assert (=> d!28465 m!116367))

(declare-fun m!116369 () Bool)

(assert (=> d!28465 m!116369))

(declare-fun m!116371 () Bool)

(assert (=> b!104618 m!116371))

(assert (=> b!103896 d!28465))

(declare-fun b!104619 () Bool)

(declare-fun e!68109 () List!1592)

(declare-fun call!10981 () List!1592)

(assert (=> b!104619 (= e!68109 call!10981)))

(declare-fun b!104620 () Bool)

(declare-fun e!68112 () List!1592)

(assert (=> b!104620 (= e!68112 (insertStrictlySorted!75 (t!5646 (t!5646 (toList!779 lt!52441))) (_1!1188 lt!52444) (_2!1188 lt!52444)))))

(declare-fun b!104621 () Bool)

(declare-fun e!68110 () List!1592)

(declare-fun call!10982 () List!1592)

(assert (=> b!104621 (= e!68110 call!10982)))

(declare-fun d!28467 () Bool)

(declare-fun e!68111 () Bool)

(assert (=> d!28467 e!68111))

(declare-fun res!52154 () Bool)

(assert (=> d!28467 (=> (not res!52154) (not e!68111))))

(declare-fun lt!53404 () List!1592)

(assert (=> d!28467 (= res!52154 (isStrictlySorted!295 lt!53404))))

(declare-fun e!68113 () List!1592)

(assert (=> d!28467 (= lt!53404 e!68113)))

(declare-fun c!18129 () Bool)

(assert (=> d!28467 (= c!18129 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52441))) (bvslt (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441)))) (_1!1188 lt!52444))))))

(assert (=> d!28467 (isStrictlySorted!295 (t!5646 (toList!779 lt!52441)))))

(assert (=> d!28467 (= (insertStrictlySorted!75 (t!5646 (toList!779 lt!52441)) (_1!1188 lt!52444) (_2!1188 lt!52444)) lt!53404)))

(declare-fun call!10980 () List!1592)

(declare-fun bm!10977 () Bool)

(assert (=> bm!10977 (= call!10980 ($colon$colon!79 e!68112 (ite c!18129 (h!2184 (t!5646 (toList!779 lt!52441))) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444)))))))

(declare-fun c!18131 () Bool)

(assert (=> bm!10977 (= c!18131 c!18129)))

(declare-fun b!104622 () Bool)

(declare-fun c!18132 () Bool)

(declare-fun c!18130 () Bool)

(assert (=> b!104622 (= e!68112 (ite c!18132 (t!5646 (t!5646 (toList!779 lt!52441))) (ite c!18130 (Cons!1588 (h!2184 (t!5646 (toList!779 lt!52441))) (t!5646 (t!5646 (toList!779 lt!52441)))) Nil!1589)))))

(declare-fun b!104623 () Bool)

(assert (=> b!104623 (= c!18130 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52441))) (bvsgt (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441)))) (_1!1188 lt!52444))))))

(assert (=> b!104623 (= e!68110 e!68109)))

(declare-fun bm!10978 () Bool)

(assert (=> bm!10978 (= call!10981 call!10982)))

(declare-fun b!104624 () Bool)

(assert (=> b!104624 (= e!68109 call!10981)))

(declare-fun bm!10979 () Bool)

(assert (=> bm!10979 (= call!10982 call!10980)))

(declare-fun b!104625 () Bool)

(assert (=> b!104625 (= e!68111 (contains!812 lt!53404 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!104626 () Bool)

(declare-fun res!52153 () Bool)

(assert (=> b!104626 (=> (not res!52153) (not e!68111))))

(assert (=> b!104626 (= res!52153 (containsKey!159 lt!53404 (_1!1188 lt!52444)))))

(declare-fun b!104627 () Bool)

(assert (=> b!104627 (= e!68113 e!68110)))

(assert (=> b!104627 (= c!18132 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52441))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52441)))) (_1!1188 lt!52444))))))

(declare-fun b!104628 () Bool)

(assert (=> b!104628 (= e!68113 call!10980)))

(assert (= (and d!28467 c!18129) b!104628))

(assert (= (and d!28467 (not c!18129)) b!104627))

(assert (= (and b!104627 c!18132) b!104621))

(assert (= (and b!104627 (not c!18132)) b!104623))

(assert (= (and b!104623 c!18130) b!104624))

(assert (= (and b!104623 (not c!18130)) b!104619))

(assert (= (or b!104624 b!104619) bm!10978))

(assert (= (or b!104621 bm!10978) bm!10979))

(assert (= (or b!104628 bm!10979) bm!10977))

(assert (= (and bm!10977 c!18131) b!104620))

(assert (= (and bm!10977 (not c!18131)) b!104622))

(assert (= (and d!28467 res!52154) b!104626))

(assert (= (and b!104626 res!52153) b!104625))

(declare-fun m!116373 () Bool)

(assert (=> d!28467 m!116373))

(assert (=> d!28467 m!115455))

(declare-fun m!116375 () Bool)

(assert (=> b!104625 m!116375))

(declare-fun m!116377 () Bool)

(assert (=> b!104626 m!116377))

(declare-fun m!116379 () Bool)

(assert (=> b!104620 m!116379))

(declare-fun m!116381 () Bool)

(assert (=> bm!10977 m!116381))

(assert (=> b!103807 d!28467))

(declare-fun d!28469 () Bool)

(declare-fun lt!53405 () Bool)

(assert (=> d!28469 (= lt!53405 (select (content!108 (t!5646 (toList!779 lt!52558))) lt!52444))))

(declare-fun e!68114 () Bool)

(assert (=> d!28469 (= lt!53405 e!68114)))

(declare-fun res!52155 () Bool)

(assert (=> d!28469 (=> (not res!52155) (not e!68114))))

(assert (=> d!28469 (= res!52155 ((_ is Cons!1588) (t!5646 (toList!779 lt!52558))))))

(assert (=> d!28469 (= (contains!812 (t!5646 (toList!779 lt!52558)) lt!52444) lt!53405)))

(declare-fun b!104629 () Bool)

(declare-fun e!68115 () Bool)

(assert (=> b!104629 (= e!68114 e!68115)))

(declare-fun res!52156 () Bool)

(assert (=> b!104629 (=> res!52156 e!68115)))

(assert (=> b!104629 (= res!52156 (= (h!2184 (t!5646 (toList!779 lt!52558))) lt!52444))))

(declare-fun b!104630 () Bool)

(assert (=> b!104630 (= e!68115 (contains!812 (t!5646 (t!5646 (toList!779 lt!52558))) lt!52444))))

(assert (= (and d!28469 res!52155) b!104629))

(assert (= (and b!104629 (not res!52156)) b!104630))

(assert (=> d!28469 m!116169))

(declare-fun m!116383 () Bool)

(assert (=> d!28469 m!116383))

(declare-fun m!116385 () Bool)

(assert (=> b!104630 m!116385))

(assert (=> b!103930 d!28469))

(declare-fun d!28471 () Bool)

(assert (=> d!28471 (= (get!1331 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2882 (getValueByKey!156 (toList!779 lt!52641) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27845 d!28471))

(assert (=> d!27845 d!28035))

(declare-fun d!28473 () Bool)

(declare-fun e!68117 () Bool)

(assert (=> d!28473 e!68117))

(declare-fun res!52157 () Bool)

(assert (=> d!28473 (=> res!52157 e!68117)))

(declare-fun lt!53409 () Bool)

(assert (=> d!28473 (= res!52157 (not lt!53409))))

(declare-fun lt!53406 () Bool)

(assert (=> d!28473 (= lt!53409 lt!53406)))

(declare-fun lt!53407 () Unit!3132)

(declare-fun e!68116 () Unit!3132)

(assert (=> d!28473 (= lt!53407 e!68116)))

(declare-fun c!18133 () Bool)

(assert (=> d!28473 (= c!18133 lt!53406)))

(assert (=> d!28473 (= lt!53406 (containsKey!159 (toList!779 lt!53054) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28473 (= (contains!811 lt!53054 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53409)))

(declare-fun b!104631 () Bool)

(declare-fun lt!53408 () Unit!3132)

(assert (=> b!104631 (= e!68116 lt!53408)))

(assert (=> b!104631 (= lt!53408 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!53054) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!104631 (isDefined!108 (getValueByKey!156 (toList!779 lt!53054) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104632 () Bool)

(declare-fun Unit!3191 () Unit!3132)

(assert (=> b!104632 (= e!68116 Unit!3191)))

(declare-fun b!104633 () Bool)

(assert (=> b!104633 (= e!68117 (isDefined!108 (getValueByKey!156 (toList!779 lt!53054) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28473 c!18133) b!104631))

(assert (= (and d!28473 (not c!18133)) b!104632))

(assert (= (and d!28473 (not res!52157)) b!104633))

(declare-fun m!116387 () Bool)

(assert (=> d!28473 m!116387))

(declare-fun m!116389 () Bool)

(assert (=> b!104631 m!116389))

(assert (=> b!104631 m!115015))

(assert (=> b!104631 m!115015))

(declare-fun m!116391 () Bool)

(assert (=> b!104631 m!116391))

(assert (=> b!104633 m!115015))

(assert (=> b!104633 m!115015))

(assert (=> b!104633 m!116391))

(assert (=> d!27977 d!28473))

(declare-fun e!68119 () Option!162)

(declare-fun b!104636 () Bool)

(assert (=> b!104636 (= e!68119 (getValueByKey!156 (t!5646 lt!53053) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104635 () Bool)

(declare-fun e!68118 () Option!162)

(assert (=> b!104635 (= e!68118 e!68119)))

(declare-fun c!18135 () Bool)

(assert (=> b!104635 (= c!18135 (and ((_ is Cons!1588) lt!53053) (not (= (_1!1188 (h!2184 lt!53053)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104634 () Bool)

(assert (=> b!104634 (= e!68118 (Some!161 (_2!1188 (h!2184 lt!53053))))))

(declare-fun d!28475 () Bool)

(declare-fun c!18134 () Bool)

(assert (=> d!28475 (= c!18134 (and ((_ is Cons!1588) lt!53053) (= (_1!1188 (h!2184 lt!53053)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28475 (= (getValueByKey!156 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!68118)))

(declare-fun b!104637 () Bool)

(assert (=> b!104637 (= e!68119 None!160)))

(assert (= (and d!28475 c!18134) b!104634))

(assert (= (and d!28475 (not c!18134)) b!104635))

(assert (= (and b!104635 c!18135) b!104636))

(assert (= (and b!104635 (not c!18135)) b!104637))

(declare-fun m!116393 () Bool)

(assert (=> b!104636 m!116393))

(assert (=> d!27977 d!28475))

(declare-fun d!28477 () Bool)

(assert (=> d!28477 (= (getValueByKey!156 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53410 () Unit!3132)

(assert (=> d!28477 (= lt!53410 (choose!648 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!68120 () Bool)

(assert (=> d!28477 e!68120))

(declare-fun res!52158 () Bool)

(assert (=> d!28477 (=> (not res!52158) (not e!68120))))

(assert (=> d!28477 (= res!52158 (isStrictlySorted!295 lt!53053))))

(assert (=> d!28477 (= (lemmaContainsTupThenGetReturnValue!72 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53410)))

(declare-fun b!104638 () Bool)

(declare-fun res!52159 () Bool)

(assert (=> b!104638 (=> (not res!52159) (not e!68120))))

(assert (=> b!104638 (= res!52159 (containsKey!159 lt!53053 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104639 () Bool)

(assert (=> b!104639 (= e!68120 (contains!812 lt!53053 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28477 res!52158) b!104638))

(assert (= (and b!104638 res!52159) b!104639))

(assert (=> d!28477 m!115009))

(declare-fun m!116395 () Bool)

(assert (=> d!28477 m!116395))

(declare-fun m!116397 () Bool)

(assert (=> d!28477 m!116397))

(declare-fun m!116399 () Bool)

(assert (=> b!104638 m!116399))

(declare-fun m!116401 () Bool)

(assert (=> b!104639 m!116401))

(assert (=> d!27977 d!28477))

(declare-fun b!104640 () Bool)

(declare-fun e!68121 () List!1592)

(declare-fun call!10984 () List!1592)

(assert (=> b!104640 (= e!68121 call!10984)))

(declare-fun e!68124 () List!1592)

(declare-fun b!104641 () Bool)

(assert (=> b!104641 (= e!68124 (insertStrictlySorted!75 (t!5646 (toList!779 call!10749)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104642 () Bool)

(declare-fun e!68122 () List!1592)

(declare-fun call!10985 () List!1592)

(assert (=> b!104642 (= e!68122 call!10985)))

(declare-fun d!28479 () Bool)

(declare-fun e!68123 () Bool)

(assert (=> d!28479 e!68123))

(declare-fun res!52161 () Bool)

(assert (=> d!28479 (=> (not res!52161) (not e!68123))))

(declare-fun lt!53411 () List!1592)

(assert (=> d!28479 (= res!52161 (isStrictlySorted!295 lt!53411))))

(declare-fun e!68125 () List!1592)

(assert (=> d!28479 (= lt!53411 e!68125)))

(declare-fun c!18136 () Bool)

(assert (=> d!28479 (= c!18136 (and ((_ is Cons!1588) (toList!779 call!10749)) (bvslt (_1!1188 (h!2184 (toList!779 call!10749))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28479 (isStrictlySorted!295 (toList!779 call!10749))))

(assert (=> d!28479 (= (insertStrictlySorted!75 (toList!779 call!10749) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53411)))

(declare-fun call!10983 () List!1592)

(declare-fun bm!10980 () Bool)

(assert (=> bm!10980 (= call!10983 ($colon$colon!79 e!68124 (ite c!18136 (h!2184 (toList!779 call!10749)) (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18138 () Bool)

(assert (=> bm!10980 (= c!18138 c!18136)))

(declare-fun c!18139 () Bool)

(declare-fun c!18137 () Bool)

(declare-fun b!104643 () Bool)

(assert (=> b!104643 (= e!68124 (ite c!18139 (t!5646 (toList!779 call!10749)) (ite c!18137 (Cons!1588 (h!2184 (toList!779 call!10749)) (t!5646 (toList!779 call!10749))) Nil!1589)))))

(declare-fun b!104644 () Bool)

(assert (=> b!104644 (= c!18137 (and ((_ is Cons!1588) (toList!779 call!10749)) (bvsgt (_1!1188 (h!2184 (toList!779 call!10749))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!104644 (= e!68122 e!68121)))

(declare-fun bm!10981 () Bool)

(assert (=> bm!10981 (= call!10984 call!10985)))

(declare-fun b!104645 () Bool)

(assert (=> b!104645 (= e!68121 call!10984)))

(declare-fun bm!10982 () Bool)

(assert (=> bm!10982 (= call!10985 call!10983)))

(declare-fun b!104646 () Bool)

(assert (=> b!104646 (= e!68123 (contains!812 lt!53411 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104647 () Bool)

(declare-fun res!52160 () Bool)

(assert (=> b!104647 (=> (not res!52160) (not e!68123))))

(assert (=> b!104647 (= res!52160 (containsKey!159 lt!53411 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104648 () Bool)

(assert (=> b!104648 (= e!68125 e!68122)))

(assert (=> b!104648 (= c!18139 (and ((_ is Cons!1588) (toList!779 call!10749)) (= (_1!1188 (h!2184 (toList!779 call!10749))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1328 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104649 () Bool)

(assert (=> b!104649 (= e!68125 call!10983)))

(assert (= (and d!28479 c!18136) b!104649))

(assert (= (and d!28479 (not c!18136)) b!104648))

(assert (= (and b!104648 c!18139) b!104642))

(assert (= (and b!104648 (not c!18139)) b!104644))

(assert (= (and b!104644 c!18137) b!104645))

(assert (= (and b!104644 (not c!18137)) b!104640))

(assert (= (or b!104645 b!104640) bm!10981))

(assert (= (or b!104642 bm!10981) bm!10982))

(assert (= (or b!104649 bm!10982) bm!10980))

(assert (= (and bm!10980 c!18138) b!104641))

(assert (= (and bm!10980 (not c!18138)) b!104643))

(assert (= (and d!28479 res!52161) b!104647))

(assert (= (and b!104647 res!52160) b!104646))

(declare-fun m!116403 () Bool)

(assert (=> d!28479 m!116403))

(declare-fun m!116405 () Bool)

(assert (=> d!28479 m!116405))

(declare-fun m!116407 () Bool)

(assert (=> b!104646 m!116407))

(declare-fun m!116409 () Bool)

(assert (=> b!104647 m!116409))

(declare-fun m!116411 () Bool)

(assert (=> b!104641 m!116411))

(declare-fun m!116413 () Bool)

(assert (=> bm!10980 m!116413))

(assert (=> d!27977 d!28479))

(assert (=> b!103940 d!28051))

(assert (=> b!103576 d!28051))

(declare-fun e!68127 () Option!162)

(declare-fun b!104652 () Bool)

(assert (=> b!104652 (= e!68127 (getValueByKey!156 (t!5646 (toList!779 lt!52887)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104651 () Bool)

(declare-fun e!68126 () Option!162)

(assert (=> b!104651 (= e!68126 e!68127)))

(declare-fun c!18141 () Bool)

(assert (=> b!104651 (= c!18141 (and ((_ is Cons!1588) (toList!779 lt!52887)) (not (= (_1!1188 (h!2184 (toList!779 lt!52887))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!104650 () Bool)

(assert (=> b!104650 (= e!68126 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52887)))))))

(declare-fun c!18140 () Bool)

(declare-fun d!28481 () Bool)

(assert (=> d!28481 (= c!18140 (and ((_ is Cons!1588) (toList!779 lt!52887)) (= (_1!1188 (h!2184 (toList!779 lt!52887))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28481 (= (getValueByKey!156 (toList!779 lt!52887) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) e!68126)))

(declare-fun b!104653 () Bool)

(assert (=> b!104653 (= e!68127 None!160)))

(assert (= (and d!28481 c!18140) b!104650))

(assert (= (and d!28481 (not c!18140)) b!104651))

(assert (= (and b!104651 c!18141) b!104652))

(assert (= (and b!104651 (not c!18141)) b!104653))

(declare-fun m!116415 () Bool)

(assert (=> b!104652 m!116415))

(assert (=> b!103745 d!28481))

(assert (=> d!27865 d!27867))

(declare-fun d!28483 () Bool)

(declare-fun e!68129 () Bool)

(assert (=> d!28483 e!68129))

(declare-fun res!52162 () Bool)

(assert (=> d!28483 (=> res!52162 e!68129)))

(declare-fun lt!53415 () Bool)

(assert (=> d!28483 (= res!52162 (not lt!53415))))

(declare-fun lt!53412 () Bool)

(assert (=> d!28483 (= lt!53415 lt!53412)))

(declare-fun lt!53413 () Unit!3132)

(declare-fun e!68128 () Unit!3132)

(assert (=> d!28483 (= lt!53413 e!68128)))

(declare-fun c!18142 () Bool)

(assert (=> d!28483 (= c!18142 lt!53412)))

(assert (=> d!28483 (= lt!53412 (containsKey!159 (toList!779 lt!52634) lt!52636))))

(assert (=> d!28483 (= (contains!811 lt!52634 lt!52636) lt!53415)))

(declare-fun b!104654 () Bool)

(declare-fun lt!53414 () Unit!3132)

(assert (=> b!104654 (= e!68128 lt!53414)))

(assert (=> b!104654 (= lt!53414 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52634) lt!52636))))

(assert (=> b!104654 (isDefined!108 (getValueByKey!156 (toList!779 lt!52634) lt!52636))))

(declare-fun b!104655 () Bool)

(declare-fun Unit!3192 () Unit!3132)

(assert (=> b!104655 (= e!68128 Unit!3192)))

(declare-fun b!104656 () Bool)

(assert (=> b!104656 (= e!68129 (isDefined!108 (getValueByKey!156 (toList!779 lt!52634) lt!52636)))))

(assert (= (and d!28483 c!18142) b!104654))

(assert (= (and d!28483 (not c!18142)) b!104655))

(assert (= (and d!28483 (not res!52162)) b!104656))

(declare-fun m!116417 () Bool)

(assert (=> d!28483 m!116417))

(declare-fun m!116419 () Bool)

(assert (=> b!104654 m!116419))

(assert (=> b!104654 m!114587))

(assert (=> b!104654 m!114587))

(declare-fun m!116421 () Bool)

(assert (=> b!104654 m!116421))

(assert (=> b!104656 m!114587))

(assert (=> b!104656 m!114587))

(assert (=> b!104656 m!116421))

(assert (=> d!27865 d!28483))

(declare-fun d!28485 () Bool)

(assert (=> d!28485 (= (apply!97 (+!137 lt!52634 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52636) (apply!97 lt!52634 lt!52636))))

(assert (=> d!28485 true))

(declare-fun _$34!883 () Unit!3132)

(assert (=> d!28485 (= (choose!650 lt!52634 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52636) _$34!883)))

(declare-fun bs!4311 () Bool)

(assert (= bs!4311 d!28485))

(assert (=> bs!4311 m!114217))

(assert (=> bs!4311 m!114217))

(assert (=> bs!4311 m!114237))

(assert (=> bs!4311 m!114233))

(assert (=> d!27865 d!28485))

(assert (=> d!27865 d!27891))

(assert (=> d!27865 d!27883))

(declare-fun d!28487 () Bool)

(assert (=> d!28487 (= (isDefined!108 (getValueByKey!156 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) (not (isEmpty!375 (getValueByKey!156 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun bs!4312 () Bool)

(assert (= bs!4312 d!28487))

(assert (=> bs!4312 m!114315))

(declare-fun m!116423 () Bool)

(assert (=> bs!4312 m!116423))

(assert (=> b!103498 d!28487))

(declare-fun b!104659 () Bool)

(declare-fun e!68131 () Option!162)

(assert (=> b!104659 (= e!68131 (getValueByKey!156 (t!5646 (toList!779 call!10845)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104658 () Bool)

(declare-fun e!68130 () Option!162)

(assert (=> b!104658 (= e!68130 e!68131)))

(declare-fun c!18144 () Bool)

(assert (=> b!104658 (= c!18144 (and ((_ is Cons!1588) (toList!779 call!10845)) (not (= (_1!1188 (h!2184 (toList!779 call!10845))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104657 () Bool)

(assert (=> b!104657 (= e!68130 (Some!161 (_2!1188 (h!2184 (toList!779 call!10845)))))))

(declare-fun d!28489 () Bool)

(declare-fun c!18143 () Bool)

(assert (=> d!28489 (= c!18143 (and ((_ is Cons!1588) (toList!779 call!10845)) (= (_1!1188 (h!2184 (toList!779 call!10845))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28489 (= (getValueByKey!156 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68130)))

(declare-fun b!104660 () Bool)

(assert (=> b!104660 (= e!68131 None!160)))

(assert (= (and d!28489 c!18143) b!104657))

(assert (= (and d!28489 (not c!18143)) b!104658))

(assert (= (and b!104658 c!18144) b!104659))

(assert (= (and b!104658 (not c!18144)) b!104660))

(assert (=> b!104659 m!113915))

(declare-fun m!116425 () Bool)

(assert (=> b!104659 m!116425))

(assert (=> b!103498 d!28489))

(assert (=> b!103890 d!28051))

(declare-fun d!28491 () Bool)

(declare-fun lt!53416 () Bool)

(assert (=> d!28491 (= lt!53416 (select (content!108 lt!52568) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun e!68132 () Bool)

(assert (=> d!28491 (= lt!53416 e!68132)))

(declare-fun res!52163 () Bool)

(assert (=> d!28491 (=> (not res!52163) (not e!68132))))

(assert (=> d!28491 (= res!52163 ((_ is Cons!1588) lt!52568))))

(assert (=> d!28491 (= (contains!812 lt!52568 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))) lt!53416)))

(declare-fun b!104661 () Bool)

(declare-fun e!68133 () Bool)

(assert (=> b!104661 (= e!68132 e!68133)))

(declare-fun res!52164 () Bool)

(assert (=> b!104661 (=> res!52164 e!68133)))

(assert (=> b!104661 (= res!52164 (= (h!2184 lt!52568) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!104662 () Bool)

(assert (=> b!104662 (= e!68133 (contains!812 (t!5646 lt!52568) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(assert (= (and d!28491 res!52163) b!104661))

(assert (= (and b!104661 (not res!52164)) b!104662))

(declare-fun m!116427 () Bool)

(assert (=> d!28491 m!116427))

(declare-fun m!116429 () Bool)

(assert (=> d!28491 m!116429))

(declare-fun m!116431 () Bool)

(assert (=> b!104662 m!116431))

(assert (=> b!103724 d!28491))

(declare-fun d!28493 () Bool)

(declare-fun res!52165 () Bool)

(declare-fun e!68134 () Bool)

(assert (=> d!28493 (=> res!52165 e!68134)))

(assert (=> d!28493 (= res!52165 (and ((_ is Cons!1588) (toList!779 call!10829)) (= (_1!1188 (h!2184 (toList!779 call!10829))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))))

(assert (=> d!28493 (= (containsKey!159 (toList!779 call!10829) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))) e!68134)))

(declare-fun b!104663 () Bool)

(declare-fun e!68135 () Bool)

(assert (=> b!104663 (= e!68134 e!68135)))

(declare-fun res!52166 () Bool)

(assert (=> b!104663 (=> (not res!52166) (not e!68135))))

(assert (=> b!104663 (= res!52166 (and (or (not ((_ is Cons!1588) (toList!779 call!10829))) (bvsle (_1!1188 (h!2184 (toList!779 call!10829))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))) ((_ is Cons!1588) (toList!779 call!10829)) (bvslt (_1!1188 (h!2184 (toList!779 call!10829))) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724)))))))

(declare-fun b!104664 () Bool)

(assert (=> b!104664 (= e!68135 (containsKey!159 (t!5646 (toList!779 call!10829)) (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!52724))))))

(assert (= (and d!28493 (not res!52165)) b!104663))

(assert (= (and b!104663 res!52166) b!104664))

(assert (=> b!104664 m!114261))

(declare-fun m!116433 () Bool)

(assert (=> b!104664 m!116433))

(assert (=> d!27921 d!28493))

(declare-fun d!28495 () Bool)

(assert (=> d!28495 (= (isDefined!108 (getValueByKey!156 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) (not (isEmpty!375 (getValueByKey!156 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun bs!4313 () Bool)

(assert (= bs!4313 d!28495))

(assert (=> bs!4313 m!114865))

(declare-fun m!116435 () Bool)

(assert (=> bs!4313 m!116435))

(assert (=> b!103818 d!28495))

(declare-fun e!68137 () Option!162)

(declare-fun b!104667 () Bool)

(assert (=> b!104667 (= e!68137 (getValueByKey!156 (t!5646 (toList!779 e!67420)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104666 () Bool)

(declare-fun e!68136 () Option!162)

(assert (=> b!104666 (= e!68136 e!68137)))

(declare-fun c!18146 () Bool)

(assert (=> b!104666 (= c!18146 (and ((_ is Cons!1588) (toList!779 e!67420)) (not (= (_1!1188 (h!2184 (toList!779 e!67420))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104665 () Bool)

(assert (=> b!104665 (= e!68136 (Some!161 (_2!1188 (h!2184 (toList!779 e!67420)))))))

(declare-fun c!18145 () Bool)

(declare-fun d!28497 () Bool)

(assert (=> d!28497 (= c!18145 (and ((_ is Cons!1588) (toList!779 e!67420)) (= (_1!1188 (h!2184 (toList!779 e!67420))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28497 (= (getValueByKey!156 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68136)))

(declare-fun b!104668 () Bool)

(assert (=> b!104668 (= e!68137 None!160)))

(assert (= (and d!28497 c!18145) b!104665))

(assert (= (and d!28497 (not c!18145)) b!104666))

(assert (= (and b!104666 c!18146) b!104667))

(assert (= (and b!104666 (not c!18146)) b!104668))

(assert (=> b!104667 m!113915))

(declare-fun m!116437 () Bool)

(assert (=> b!104667 m!116437))

(assert (=> b!103818 d!28497))

(declare-fun b!104671 () Bool)

(declare-fun e!68139 () Option!162)

(assert (=> b!104671 (= e!68139 (getValueByKey!156 (t!5646 (toList!779 lt!52895)) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104670 () Bool)

(declare-fun e!68138 () Option!162)

(assert (=> b!104670 (= e!68138 e!68139)))

(declare-fun c!18148 () Bool)

(assert (=> b!104670 (= c!18148 (and ((_ is Cons!1588) (toList!779 lt!52895)) (not (= (_1!1188 (h!2184 (toList!779 lt!52895))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104669 () Bool)

(assert (=> b!104669 (= e!68138 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52895)))))))

(declare-fun d!28499 () Bool)

(declare-fun c!18147 () Bool)

(assert (=> d!28499 (= c!18147 (and ((_ is Cons!1588) (toList!779 lt!52895)) (= (_1!1188 (h!2184 (toList!779 lt!52895))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28499 (= (getValueByKey!156 (toList!779 lt!52895) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68138)))

(declare-fun b!104672 () Bool)

(assert (=> b!104672 (= e!68139 None!160)))

(assert (= (and d!28499 c!18147) b!104669))

(assert (= (and d!28499 (not c!18147)) b!104670))

(assert (= (and b!104670 c!18148) b!104671))

(assert (= (and b!104670 (not c!18148)) b!104672))

(declare-fun m!116439 () Bool)

(assert (=> b!104671 m!116439))

(assert (=> b!103749 d!28499))

(declare-fun d!28501 () Bool)

(declare-fun e!68140 () Bool)

(assert (=> d!28501 e!68140))

(declare-fun res!52167 () Bool)

(assert (=> d!28501 (=> (not res!52167) (not e!68140))))

(declare-fun lt!53419 () ListLongMap!1527)

(assert (=> d!28501 (= res!52167 (contains!811 lt!53419 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun lt!53418 () List!1592)

(assert (=> d!28501 (= lt!53419 (ListLongMap!1528 lt!53418))))

(declare-fun lt!53417 () Unit!3132)

(declare-fun lt!53420 () Unit!3132)

(assert (=> d!28501 (= lt!53417 lt!53420)))

(assert (=> d!28501 (= (getValueByKey!156 lt!53418 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28501 (= lt!53420 (lemmaContainsTupThenGetReturnValue!72 lt!53418 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28501 (= lt!53418 (insertStrictlySorted!75 (toList!779 call!10858) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28501 (= (+!137 call!10858 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) lt!53419)))

(declare-fun b!104673 () Bool)

(declare-fun res!52168 () Bool)

(assert (=> b!104673 (=> (not res!52168) (not e!68140))))

(assert (=> b!104673 (= res!52168 (= (getValueByKey!156 (toList!779 lt!53419) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun b!104674 () Bool)

(assert (=> b!104674 (= e!68140 (contains!812 (toList!779 lt!53419) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(assert (= (and d!28501 res!52167) b!104673))

(assert (= (and b!104673 res!52168) b!104674))

(declare-fun m!116441 () Bool)

(assert (=> d!28501 m!116441))

(declare-fun m!116443 () Bool)

(assert (=> d!28501 m!116443))

(declare-fun m!116445 () Bool)

(assert (=> d!28501 m!116445))

(declare-fun m!116447 () Bool)

(assert (=> d!28501 m!116447))

(declare-fun m!116449 () Bool)

(assert (=> b!104673 m!116449))

(declare-fun m!116451 () Bool)

(assert (=> b!104674 m!116451))

(assert (=> b!103551 d!28501))

(declare-fun d!28503 () Bool)

(assert (=> d!28503 (isDefined!108 (getValueByKey!156 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!53421 () Unit!3132)

(assert (=> d!28503 (= lt!53421 (choose!654 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!68141 () Bool)

(assert (=> d!28503 e!68141))

(declare-fun res!52169 () Bool)

(assert (=> d!28503 (=> (not res!52169) (not e!68141))))

(assert (=> d!28503 (= res!52169 (isStrictlySorted!295 (toList!779 e!67420)))))

(assert (=> d!28503 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53421)))

(declare-fun b!104675 () Bool)

(assert (=> b!104675 (= e!68141 (containsKey!159 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28503 res!52169) b!104675))

(assert (=> d!28503 m!113915))

(assert (=> d!28503 m!114865))

(assert (=> d!28503 m!114865))

(assert (=> d!28503 m!114867))

(assert (=> d!28503 m!113915))

(declare-fun m!116453 () Bool)

(assert (=> d!28503 m!116453))

(declare-fun m!116455 () Bool)

(assert (=> d!28503 m!116455))

(assert (=> b!104675 m!113915))

(assert (=> b!104675 m!114861))

(assert (=> b!103816 d!28503))

(assert (=> b!103816 d!28495))

(assert (=> b!103816 d!28497))

(declare-fun d!28505 () Bool)

(assert (=> d!28505 (isDefined!108 (getValueByKey!156 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!53422 () Unit!3132)

(assert (=> d!28505 (= lt!53422 (choose!654 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!68142 () Bool)

(assert (=> d!28505 e!68142))

(declare-fun res!52170 () Bool)

(assert (=> d!28505 (=> (not res!52170) (not e!68142))))

(assert (=> d!28505 (= res!52170 (isStrictlySorted!295 (toList!779 call!10845)))))

(assert (=> d!28505 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53422)))

(declare-fun b!104676 () Bool)

(assert (=> b!104676 (= e!68142 (containsKey!159 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28505 res!52170) b!104676))

(assert (=> d!28505 m!113915))

(assert (=> d!28505 m!114315))

(assert (=> d!28505 m!114315))

(assert (=> d!28505 m!114317))

(assert (=> d!28505 m!113915))

(declare-fun m!116457 () Bool)

(assert (=> d!28505 m!116457))

(declare-fun m!116459 () Bool)

(assert (=> d!28505 m!116459))

(assert (=> b!104676 m!113915))

(assert (=> b!104676 m!114311))

(assert (=> b!103496 d!28505))

(assert (=> b!103496 d!28487))

(assert (=> b!103496 d!28489))

(declare-fun d!28507 () Bool)

(assert (=> d!28507 (= (get!1331 (getValueByKey!156 (toList!779 lt!52633) lt!52631)) (v!2882 (getValueByKey!156 (toList!779 lt!52633) lt!52631)))))

(assert (=> d!27893 d!28507))

(declare-fun b!104679 () Bool)

(declare-fun e!68144 () Option!162)

(assert (=> b!104679 (= e!68144 (getValueByKey!156 (t!5646 (toList!779 lt!52633)) lt!52631))))

(declare-fun b!104678 () Bool)

(declare-fun e!68143 () Option!162)

(assert (=> b!104678 (= e!68143 e!68144)))

(declare-fun c!18150 () Bool)

(assert (=> b!104678 (= c!18150 (and ((_ is Cons!1588) (toList!779 lt!52633)) (not (= (_1!1188 (h!2184 (toList!779 lt!52633))) lt!52631))))))

(declare-fun b!104677 () Bool)

(assert (=> b!104677 (= e!68143 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52633)))))))

(declare-fun d!28509 () Bool)

(declare-fun c!18149 () Bool)

(assert (=> d!28509 (= c!18149 (and ((_ is Cons!1588) (toList!779 lt!52633)) (= (_1!1188 (h!2184 (toList!779 lt!52633))) lt!52631)))))

(assert (=> d!28509 (= (getValueByKey!156 (toList!779 lt!52633) lt!52631) e!68143)))

(declare-fun b!104680 () Bool)

(assert (=> b!104680 (= e!68144 None!160)))

(assert (= (and d!28509 c!18149) b!104677))

(assert (= (and d!28509 (not c!18149)) b!104678))

(assert (= (and b!104678 c!18150) b!104679))

(assert (= (and b!104678 (not c!18150)) b!104680))

(declare-fun m!116461 () Bool)

(assert (=> b!104679 m!116461))

(assert (=> d!27893 d!28509))

(assert (=> b!103888 d!28051))

(declare-fun b!104699 () Bool)

(declare-fun e!68157 () Bool)

(declare-fun lt!53427 () SeekEntryResult!252)

(assert (=> b!104699 (= e!68157 (bvsge (x!13494 lt!53427) #b01111111111111111111111111111110))))

(declare-fun d!28511 () Bool)

(assert (=> d!28511 e!68157))

(declare-fun c!18158 () Bool)

(assert (=> d!28511 (= c!18158 (and ((_ is Intermediate!252) lt!53427) (undefined!1064 lt!53427)))))

(declare-fun e!68159 () SeekEntryResult!252)

(assert (=> d!28511 (= lt!53427 e!68159)))

(declare-fun c!18157 () Bool)

(assert (=> d!28511 (= c!18157 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(declare-fun lt!53428 () (_ BitVec 64))

(assert (=> d!28511 (= lt!53428 (select (arr!2048 (_keys!4262 newMap!16)) (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16))))))

(assert (=> d!28511 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28511 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)) lt!53427)))

(declare-fun b!104700 () Bool)

(assert (=> b!104700 (and (bvsge (index!3157 lt!53427) #b00000000000000000000000000000000) (bvslt (index!3157 lt!53427) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun res!52179 () Bool)

(assert (=> b!104700 (= res!52179 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3157 lt!53427)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68156 () Bool)

(assert (=> b!104700 (=> res!52179 e!68156)))

(declare-fun b!104701 () Bool)

(declare-fun e!68155 () Bool)

(assert (=> b!104701 (= e!68157 e!68155)))

(declare-fun res!52177 () Bool)

(assert (=> b!104701 (= res!52177 (and ((_ is Intermediate!252) lt!53427) (not (undefined!1064 lt!53427)) (bvslt (x!13494 lt!53427) #b01111111111111111111111111111110) (bvsge (x!13494 lt!53427) #b00000000000000000000000000000000) (bvsge (x!13494 lt!53427) #b00000000000000000000000000000000)))))

(assert (=> b!104701 (=> (not res!52177) (not e!68155))))

(declare-fun b!104702 () Bool)

(assert (=> b!104702 (and (bvsge (index!3157 lt!53427) #b00000000000000000000000000000000) (bvslt (index!3157 lt!53427) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun res!52178 () Bool)

(assert (=> b!104702 (= res!52178 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3157 lt!53427)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104702 (=> res!52178 e!68156)))

(assert (=> b!104702 (= e!68155 e!68156)))

(declare-fun b!104703 () Bool)

(assert (=> b!104703 (= e!68159 (Intermediate!252 true (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!104704 () Bool)

(assert (=> b!104704 (and (bvsge (index!3157 lt!53427) #b00000000000000000000000000000000) (bvslt (index!3157 lt!53427) (size!2302 (_keys!4262 newMap!16))))))

(assert (=> b!104704 (= e!68156 (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3157 lt!53427)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104705 () Bool)

(declare-fun e!68158 () SeekEntryResult!252)

(assert (=> b!104705 (= e!68159 e!68158)))

(declare-fun c!18159 () Bool)

(assert (=> b!104705 (= c!18159 (or (= lt!53428 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (= (bvadd lt!53428 lt!53428) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104706 () Bool)

(assert (=> b!104706 (= e!68158 (Intermediate!252 false (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!104707 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!104707 (= e!68158 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (mask!6696 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(assert (= (and d!28511 c!18157) b!104703))

(assert (= (and d!28511 (not c!18157)) b!104705))

(assert (= (and b!104705 c!18159) b!104706))

(assert (= (and b!104705 (not c!18159)) b!104707))

(assert (= (and d!28511 c!18158) b!104699))

(assert (= (and d!28511 (not c!18158)) b!104701))

(assert (= (and b!104701 res!52177) b!104702))

(assert (= (and b!104702 (not res!52178)) b!104700))

(assert (= (and b!104700 (not res!52179)) b!104704))

(assert (=> b!104707 m!114777))

(declare-fun m!116463 () Bool)

(assert (=> b!104707 m!116463))

(assert (=> b!104707 m!116463))

(assert (=> b!104707 m!113915))

(declare-fun m!116465 () Bool)

(assert (=> b!104707 m!116465))

(declare-fun m!116467 () Bool)

(assert (=> b!104704 m!116467))

(assert (=> b!104702 m!116467))

(assert (=> b!104700 m!116467))

(assert (=> d!28511 m!114777))

(declare-fun m!116469 () Bool)

(assert (=> d!28511 m!116469))

(assert (=> d!28511 m!114321))

(assert (=> d!27919 d!28511))

(declare-fun d!28513 () Bool)

(declare-fun lt!53434 () (_ BitVec 32))

(declare-fun lt!53433 () (_ BitVec 32))

(assert (=> d!28513 (= lt!53434 (bvmul (bvxor lt!53433 (bvlshr lt!53433 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!28513 (= lt!53433 ((_ extract 31 0) (bvand (bvxor (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvlshr (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!28513 (and (bvsge (mask!6696 newMap!16) #b00000000000000000000000000000000) (let ((res!52180 (let ((h!2188 ((_ extract 31 0) (bvand (bvxor (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvlshr (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13596 (bvmul (bvxor h!2188 (bvlshr h!2188 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13596 (bvlshr x!13596 #b00000000000000000000000000001101)) (mask!6696 newMap!16)))))) (and (bvslt res!52180 (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001)) (bvsge res!52180 #b00000000000000000000000000000000))))))

(assert (=> d!28513 (= (toIndex!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6696 newMap!16)) (bvand (bvxor lt!53434 (bvlshr lt!53434 #b00000000000000000000000000001101)) (mask!6696 newMap!16)))))

(assert (=> d!27919 d!28513))

(assert (=> d!27919 d!28055))

(declare-fun d!28515 () Bool)

(declare-fun e!68161 () Bool)

(assert (=> d!28515 e!68161))

(declare-fun res!52181 () Bool)

(assert (=> d!28515 (=> res!52181 e!68161)))

(declare-fun lt!53438 () Bool)

(assert (=> d!28515 (= res!52181 (not lt!53438))))

(declare-fun lt!53435 () Bool)

(assert (=> d!28515 (= lt!53438 lt!53435)))

(declare-fun lt!53436 () Unit!3132)

(declare-fun e!68160 () Unit!3132)

(assert (=> d!28515 (= lt!53436 e!68160)))

(declare-fun c!18160 () Bool)

(assert (=> d!28515 (= c!18160 lt!53435)))

(assert (=> d!28515 (= lt!53435 (containsKey!159 (toList!779 lt!52828) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28515 (= (contains!811 lt!52828 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53438)))

(declare-fun b!104708 () Bool)

(declare-fun lt!53437 () Unit!3132)

(assert (=> b!104708 (= e!68160 lt!53437)))

(assert (=> b!104708 (= lt!53437 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52828) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104708 (isDefined!108 (getValueByKey!156 (toList!779 lt!52828) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104709 () Bool)

(declare-fun Unit!3193 () Unit!3132)

(assert (=> b!104709 (= e!68160 Unit!3193)))

(declare-fun b!104710 () Bool)

(assert (=> b!104710 (= e!68161 (isDefined!108 (getValueByKey!156 (toList!779 lt!52828) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28515 c!18160) b!104708))

(assert (= (and d!28515 (not c!18160)) b!104709))

(assert (= (and d!28515 (not res!52181)) b!104710))

(declare-fun m!116471 () Bool)

(assert (=> d!28515 m!116471))

(declare-fun m!116473 () Bool)

(assert (=> b!104708 m!116473))

(declare-fun m!116475 () Bool)

(assert (=> b!104708 m!116475))

(assert (=> b!104708 m!116475))

(declare-fun m!116477 () Bool)

(assert (=> b!104708 m!116477))

(assert (=> b!104710 m!116475))

(assert (=> b!104710 m!116475))

(assert (=> b!104710 m!116477))

(assert (=> bm!10875 d!28515))

(declare-fun d!28517 () Bool)

(declare-fun res!52182 () Bool)

(declare-fun e!68162 () Bool)

(assert (=> d!28517 (=> res!52182 e!68162)))

(assert (=> d!28517 (= res!52182 (= (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28517 (= (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!68162)))

(declare-fun b!104711 () Bool)

(declare-fun e!68163 () Bool)

(assert (=> b!104711 (= e!68162 e!68163)))

(declare-fun res!52183 () Bool)

(assert (=> b!104711 (=> (not res!52183) (not e!68163))))

(assert (=> b!104711 (= res!52183 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104712 () Bool)

(assert (=> b!104712 (= e!68163 (arrayContainsKey!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28517 (not res!52182)) b!104711))

(assert (= (and b!104711 res!52183) b!104712))

(assert (=> d!28517 m!115467))

(assert (=> b!104712 m!113915))

(declare-fun m!116479 () Bool)

(assert (=> b!104712 m!116479))

(assert (=> b!103565 d!28517))

(declare-fun b!104713 () Bool)

(declare-fun e!68167 () Bool)

(declare-fun e!68165 () Bool)

(assert (=> b!104713 (= e!68167 e!68165)))

(declare-fun res!52185 () Bool)

(assert (=> b!104713 (=> (not res!52185) (not e!68165))))

(declare-fun e!68164 () Bool)

(assert (=> b!104713 (= res!52185 (not e!68164))))

(declare-fun res!52184 () Bool)

(assert (=> b!104713 (=> (not res!52184) (not e!68164))))

(assert (=> b!104713 (= res!52184 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun b!104714 () Bool)

(declare-fun e!68166 () Bool)

(declare-fun call!10986 () Bool)

(assert (=> b!104714 (= e!68166 call!10986)))

(declare-fun b!104715 () Bool)

(assert (=> b!104715 (= e!68165 e!68166)))

(declare-fun c!18161 () Bool)

(assert (=> b!104715 (= c!18161 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun b!104716 () Bool)

(assert (=> b!104716 (= e!68166 call!10986)))

(declare-fun d!28519 () Bool)

(declare-fun res!52186 () Bool)

(assert (=> d!28519 (=> res!52186 e!68167)))

(assert (=> d!28519 (= res!52186 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(assert (=> d!28519 (= (arrayNoDuplicates!0 (_keys!4262 (_2!1187 lt!52716)) #b00000000000000000000000000000000 Nil!1590) e!68167)))

(declare-fun b!104717 () Bool)

(assert (=> b!104717 (= e!68164 (contains!813 Nil!1590 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun bm!10983 () Bool)

(assert (=> bm!10983 (= call!10986 (arrayNoDuplicates!0 (_keys!4262 (_2!1187 lt!52716)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18161 (Cons!1589 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000) Nil!1590) Nil!1590)))))

(assert (= (and d!28519 (not res!52186)) b!104713))

(assert (= (and b!104713 res!52184) b!104717))

(assert (= (and b!104713 res!52185) b!104715))

(assert (= (and b!104715 c!18161) b!104716))

(assert (= (and b!104715 (not c!18161)) b!104714))

(assert (= (or b!104716 b!104714) bm!10983))

(assert (=> b!104713 m!115519))

(assert (=> b!104713 m!115519))

(assert (=> b!104713 m!115521))

(assert (=> b!104715 m!115519))

(assert (=> b!104715 m!115519))

(assert (=> b!104715 m!115521))

(assert (=> b!104717 m!115519))

(assert (=> b!104717 m!115519))

(declare-fun m!116481 () Bool)

(assert (=> b!104717 m!116481))

(assert (=> bm!10983 m!115519))

(declare-fun m!116483 () Bool)

(assert (=> bm!10983 m!116483))

(assert (=> b!103621 d!28519))

(declare-fun d!28521 () Bool)

(assert (=> d!28521 (= (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103533 d!28521))

(declare-fun e!68169 () Option!162)

(declare-fun b!104720 () Bool)

(assert (=> b!104720 (= e!68169 (getValueByKey!156 (t!5646 (toList!779 lt!53038)) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104719 () Bool)

(declare-fun e!68168 () Option!162)

(assert (=> b!104719 (= e!68168 e!68169)))

(declare-fun c!18163 () Bool)

(assert (=> b!104719 (= c!18163 (and ((_ is Cons!1588) (toList!779 lt!53038)) (not (= (_1!1188 (h!2184 (toList!779 lt!53038))) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))))

(declare-fun b!104718 () Bool)

(assert (=> b!104718 (= e!68168 (Some!161 (_2!1188 (h!2184 (toList!779 lt!53038)))))))

(declare-fun c!18162 () Bool)

(declare-fun d!28523 () Bool)

(assert (=> d!28523 (= c!18162 (and ((_ is Cons!1588) (toList!779 lt!53038)) (= (_1!1188 (h!2184 (toList!779 lt!53038))) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(assert (=> d!28523 (= (getValueByKey!156 (toList!779 lt!53038) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) e!68168)))

(declare-fun b!104721 () Bool)

(assert (=> b!104721 (= e!68169 None!160)))

(assert (= (and d!28523 c!18162) b!104718))

(assert (= (and d!28523 (not c!18162)) b!104719))

(assert (= (and b!104719 c!18163) b!104720))

(assert (= (and b!104719 (not c!18163)) b!104721))

(declare-fun m!116485 () Bool)

(assert (=> b!104720 m!116485))

(assert (=> b!103886 d!28523))

(declare-fun d!28525 () Bool)

(assert (=> d!28525 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53439 () Unit!3132)

(assert (=> d!28525 (= lt!53439 (choose!654 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68170 () Bool)

(assert (=> d!28525 e!68170))

(declare-fun res!52187 () Bool)

(assert (=> d!28525 (=> (not res!52187) (not e!68170))))

(assert (=> d!28525 (= res!52187 (isStrictlySorted!295 (toList!779 lt!52553)))))

(assert (=> d!28525 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53439)))

(declare-fun b!104722 () Bool)

(assert (=> b!104722 (= e!68170 (containsKey!159 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28525 res!52187) b!104722))

(assert (=> d!28525 m!115025))

(assert (=> d!28525 m!115025))

(assert (=> d!28525 m!115027))

(declare-fun m!116487 () Bool)

(assert (=> d!28525 m!116487))

(declare-fun m!116489 () Bool)

(assert (=> d!28525 m!116489))

(assert (=> b!104722 m!115021))

(assert (=> b!103918 d!28525))

(assert (=> b!103918 d!28257))

(assert (=> b!103918 d!28259))

(declare-fun d!28527 () Bool)

(assert (=> d!28527 (isDefined!108 (getValueByKey!156 (toList!779 lt!52562) (_1!1188 lt!52442)))))

(declare-fun lt!53440 () Unit!3132)

(assert (=> d!28527 (= lt!53440 (choose!654 (toList!779 lt!52562) (_1!1188 lt!52442)))))

(declare-fun e!68171 () Bool)

(assert (=> d!28527 e!68171))

(declare-fun res!52188 () Bool)

(assert (=> d!28527 (=> (not res!52188) (not e!68171))))

(assert (=> d!28527 (= res!52188 (isStrictlySorted!295 (toList!779 lt!52562)))))

(assert (=> d!28527 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52562) (_1!1188 lt!52442)) lt!53440)))

(declare-fun b!104723 () Bool)

(assert (=> b!104723 (= e!68171 (containsKey!159 (toList!779 lt!52562) (_1!1188 lt!52442)))))

(assert (= (and d!28527 res!52188) b!104723))

(assert (=> d!28527 m!114147))

(assert (=> d!28527 m!114147))

(assert (=> d!28527 m!114811))

(declare-fun m!116491 () Bool)

(assert (=> d!28527 m!116491))

(declare-fun m!116493 () Bool)

(assert (=> d!28527 m!116493))

(assert (=> b!104723 m!114807))

(assert (=> b!103778 d!28527))

(assert (=> b!103778 d!28281))

(assert (=> b!103778 d!27839))

(declare-fun d!28529 () Bool)

(declare-fun e!68172 () Bool)

(assert (=> d!28529 e!68172))

(declare-fun res!52189 () Bool)

(assert (=> d!28529 (=> (not res!52189) (not e!68172))))

(declare-fun lt!53443 () ListLongMap!1527)

(assert (=> d!28529 (= res!52189 (contains!811 lt!53443 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun lt!53442 () List!1592)

(assert (=> d!28529 (= lt!53443 (ListLongMap!1528 lt!53442))))

(declare-fun lt!53441 () Unit!3132)

(declare-fun lt!53444 () Unit!3132)

(assert (=> d!28529 (= lt!53441 lt!53444)))

(assert (=> d!28529 (= (getValueByKey!156 lt!53442 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28529 (= lt!53444 (lemmaContainsTupThenGetReturnValue!72 lt!53442 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28529 (= lt!53442 (insertStrictlySorted!75 (toList!779 call!10910) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(assert (=> d!28529 (= (+!137 call!10910 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))) lt!53443)))

(declare-fun b!104724 () Bool)

(declare-fun res!52190 () Bool)

(assert (=> b!104724 (=> (not res!52190) (not e!68172))))

(assert (=> b!104724 (= res!52190 (= (getValueByKey!156 (toList!779 lt!53443) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))))

(declare-fun b!104725 () Bool)

(assert (=> b!104725 (= e!68172 (contains!812 (toList!779 lt!53443) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(assert (= (and d!28529 res!52189) b!104724))

(assert (= (and b!104724 res!52190) b!104725))

(declare-fun m!116495 () Bool)

(assert (=> d!28529 m!116495))

(declare-fun m!116497 () Bool)

(assert (=> d!28529 m!116497))

(declare-fun m!116499 () Bool)

(assert (=> d!28529 m!116499))

(declare-fun m!116501 () Bool)

(assert (=> d!28529 m!116501))

(declare-fun m!116503 () Bool)

(assert (=> b!104724 m!116503))

(declare-fun m!116505 () Bool)

(assert (=> b!104725 m!116505))

(assert (=> b!103945 d!28529))

(declare-fun d!28531 () Bool)

(declare-fun e!68174 () Bool)

(assert (=> d!28531 e!68174))

(declare-fun res!52191 () Bool)

(assert (=> d!28531 (=> res!52191 e!68174)))

(declare-fun lt!53448 () Bool)

(assert (=> d!28531 (= res!52191 (not lt!53448))))

(declare-fun lt!53445 () Bool)

(assert (=> d!28531 (= lt!53448 lt!53445)))

(declare-fun lt!53446 () Unit!3132)

(declare-fun e!68173 () Unit!3132)

(assert (=> d!28531 (= lt!53446 e!68173)))

(declare-fun c!18164 () Bool)

(assert (=> d!28531 (= c!18164 lt!53445)))

(assert (=> d!28531 (= lt!53445 (containsKey!159 (toList!779 lt!52780) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28531 (= (contains!811 lt!52780 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) lt!53448)))

(declare-fun b!104726 () Bool)

(declare-fun lt!53447 () Unit!3132)

(assert (=> b!104726 (= e!68173 lt!53447)))

(assert (=> b!104726 (= lt!53447 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52780) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104726 (isDefined!108 (getValueByKey!156 (toList!779 lt!52780) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104727 () Bool)

(declare-fun Unit!3194 () Unit!3132)

(assert (=> b!104727 (= e!68173 Unit!3194)))

(declare-fun b!104728 () Bool)

(assert (=> b!104728 (= e!68174 (isDefined!108 (getValueByKey!156 (toList!779 lt!52780) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28531 c!18164) b!104726))

(assert (= (and d!28531 (not c!18164)) b!104727))

(assert (= (and d!28531 (not res!52191)) b!104728))

(assert (=> d!28531 m!114381))

(declare-fun m!116507 () Bool)

(assert (=> d!28531 m!116507))

(assert (=> b!104726 m!114381))

(declare-fun m!116509 () Bool)

(assert (=> b!104726 m!116509))

(assert (=> b!104726 m!114381))

(assert (=> b!104726 m!116011))

(assert (=> b!104726 m!116011))

(declare-fun m!116511 () Bool)

(assert (=> b!104726 m!116511))

(assert (=> b!104728 m!114381))

(assert (=> b!104728 m!116011))

(assert (=> b!104728 m!116011))

(assert (=> b!104728 m!116511))

(assert (=> b!103545 d!28531))

(declare-fun b!104731 () Bool)

(declare-fun e!68176 () Option!162)

(assert (=> b!104731 (= e!68176 (getValueByKey!156 (t!5646 (toList!779 lt!53043)) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun b!104730 () Bool)

(declare-fun e!68175 () Option!162)

(assert (=> b!104730 (= e!68175 e!68176)))

(declare-fun c!18166 () Bool)

(assert (=> b!104730 (= c!18166 (and ((_ is Cons!1588) (toList!779 lt!53043)) (not (= (_1!1188 (h!2184 (toList!779 lt!53043))) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))))

(declare-fun b!104729 () Bool)

(assert (=> b!104729 (= e!68175 (Some!161 (_2!1188 (h!2184 (toList!779 lt!53043)))))))

(declare-fun d!28533 () Bool)

(declare-fun c!18165 () Bool)

(assert (=> d!28533 (= c!18165 (and ((_ is Cons!1588) (toList!779 lt!53043)) (= (_1!1188 (h!2184 (toList!779 lt!53043))) (_1!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (=> d!28533 (= (getValueByKey!156 (toList!779 lt!53043) (_1!1188 (tuple2!2355 lt!52552 lt!52550))) e!68175)))

(declare-fun b!104732 () Bool)

(assert (=> b!104732 (= e!68176 None!160)))

(assert (= (and d!28533 c!18165) b!104729))

(assert (= (and d!28533 (not c!18165)) b!104730))

(assert (= (and b!104730 c!18166) b!104731))

(assert (= (and b!104730 (not c!18166)) b!104732))

(declare-fun m!116513 () Bool)

(assert (=> b!104731 m!116513))

(assert (=> b!103895 d!28533))

(declare-fun bm!10984 () Bool)

(declare-fun call!10987 () (_ BitVec 32))

(assert (=> bm!10984 (= call!10987 (arrayCountValidKeys!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104734 () Bool)

(declare-fun e!68177 () (_ BitVec 32))

(assert (=> b!104734 (= e!68177 #b00000000000000000000000000000000)))

(declare-fun b!104735 () Bool)

(declare-fun e!68178 () (_ BitVec 32))

(assert (=> b!104735 (= e!68177 e!68178)))

(declare-fun c!18167 () Bool)

(assert (=> b!104735 (= c!18167 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104736 () Bool)

(assert (=> b!104736 (= e!68178 call!10987)))

(declare-fun d!28535 () Bool)

(declare-fun lt!53449 () (_ BitVec 32))

(assert (=> d!28535 (and (bvsge lt!53449 #b00000000000000000000000000000000) (bvsle lt!53449 (bvsub (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!28535 (= lt!53449 e!68177)))

(declare-fun c!18168 () Bool)

(assert (=> d!28535 (= c!18168 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28535 (and (bvsle #b00000000000000000000000000000000 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28535 (= (arrayCountValidKeys!0 (_keys!4262 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 (size!2302 (_keys!4262 (v!2876 (underlying!358 thiss!992))))) lt!53449)))

(declare-fun b!104733 () Bool)

(assert (=> b!104733 (= e!68178 (bvadd #b00000000000000000000000000000001 call!10987))))

(assert (= (and d!28535 c!18168) b!104734))

(assert (= (and d!28535 (not c!18168)) b!104735))

(assert (= (and b!104735 c!18167) b!104733))

(assert (= (and b!104735 (not c!18167)) b!104736))

(assert (= (or b!104733 b!104736) bm!10984))

(declare-fun m!116515 () Bool)

(assert (=> bm!10984 m!116515))

(assert (=> b!104735 m!115899))

(assert (=> b!104735 m!115899))

(assert (=> b!104735 m!115901))

(assert (=> b!103921 d!28535))

(declare-fun d!28537 () Bool)

(declare-fun e!68180 () Bool)

(assert (=> d!28537 e!68180))

(declare-fun res!52192 () Bool)

(assert (=> d!28537 (=> res!52192 e!68180)))

(declare-fun lt!53453 () Bool)

(assert (=> d!28537 (= res!52192 (not lt!53453))))

(declare-fun lt!53450 () Bool)

(assert (=> d!28537 (= lt!53453 lt!53450)))

(declare-fun lt!53451 () Unit!3132)

(declare-fun e!68179 () Unit!3132)

(assert (=> d!28537 (= lt!53451 e!68179)))

(declare-fun c!18169 () Bool)

(assert (=> d!28537 (= c!18169 lt!53450)))

(assert (=> d!28537 (= lt!53450 (containsKey!159 (toList!779 lt!53038) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28537 (= (contains!811 lt!53038 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) lt!53453)))

(declare-fun b!104737 () Bool)

(declare-fun lt!53452 () Unit!3132)

(assert (=> b!104737 (= e!68179 lt!53452)))

(assert (=> b!104737 (= lt!53452 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!53038) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> b!104737 (isDefined!108 (getValueByKey!156 (toList!779 lt!53038) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104738 () Bool)

(declare-fun Unit!3195 () Unit!3132)

(assert (=> b!104738 (= e!68179 Unit!3195)))

(declare-fun b!104739 () Bool)

(assert (=> b!104739 (= e!68180 (isDefined!108 (getValueByKey!156 (toList!779 lt!53038) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(assert (= (and d!28537 c!18169) b!104737))

(assert (= (and d!28537 (not c!18169)) b!104738))

(assert (= (and d!28537 (not res!52192)) b!104739))

(declare-fun m!116517 () Bool)

(assert (=> d!28537 m!116517))

(declare-fun m!116519 () Bool)

(assert (=> b!104737 m!116519))

(assert (=> b!104737 m!114969))

(assert (=> b!104737 m!114969))

(declare-fun m!116521 () Bool)

(assert (=> b!104737 m!116521))

(assert (=> b!104739 m!114969))

(assert (=> b!104739 m!114969))

(assert (=> b!104739 m!116521))

(assert (=> d!27965 d!28537))

(declare-fun e!68182 () Option!162)

(declare-fun b!104742 () Bool)

(assert (=> b!104742 (= e!68182 (getValueByKey!156 (t!5646 lt!53037) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104741 () Bool)

(declare-fun e!68181 () Option!162)

(assert (=> b!104741 (= e!68181 e!68182)))

(declare-fun c!18171 () Bool)

(assert (=> b!104741 (= c!18171 (and ((_ is Cons!1588) lt!53037) (not (= (_1!1188 (h!2184 lt!53037)) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))))

(declare-fun b!104740 () Bool)

(assert (=> b!104740 (= e!68181 (Some!161 (_2!1188 (h!2184 lt!53037))))))

(declare-fun d!28539 () Bool)

(declare-fun c!18170 () Bool)

(assert (=> d!28539 (= c!18170 (and ((_ is Cons!1588) lt!53037) (= (_1!1188 (h!2184 lt!53037)) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(assert (=> d!28539 (= (getValueByKey!156 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) e!68181)))

(declare-fun b!104743 () Bool)

(assert (=> b!104743 (= e!68182 None!160)))

(assert (= (and d!28539 c!18170) b!104740))

(assert (= (and d!28539 (not c!18170)) b!104741))

(assert (= (and b!104741 c!18171) b!104742))

(assert (= (and b!104741 (not c!18171)) b!104743))

(declare-fun m!116523 () Bool)

(assert (=> b!104742 m!116523))

(assert (=> d!27965 d!28539))

(declare-fun d!28541 () Bool)

(assert (=> d!28541 (= (getValueByKey!156 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) (Some!161 (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun lt!53454 () Unit!3132)

(assert (=> d!28541 (= lt!53454 (choose!648 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun e!68183 () Bool)

(assert (=> d!28541 e!68183))

(declare-fun res!52193 () Bool)

(assert (=> d!28541 (=> (not res!52193) (not e!68183))))

(assert (=> d!28541 (= res!52193 (isStrictlySorted!295 lt!53037))))

(assert (=> d!28541 (= (lemmaContainsTupThenGetReturnValue!72 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) lt!53454)))

(declare-fun b!104744 () Bool)

(declare-fun res!52194 () Bool)

(assert (=> b!104744 (=> (not res!52194) (not e!68183))))

(assert (=> b!104744 (= res!52194 (containsKey!159 lt!53037 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104745 () Bool)

(assert (=> b!104745 (= e!68183 (contains!812 lt!53037 (tuple2!2355 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(assert (= (and d!28541 res!52193) b!104744))

(assert (= (and b!104744 res!52194) b!104745))

(assert (=> d!28541 m!114963))

(declare-fun m!116525 () Bool)

(assert (=> d!28541 m!116525))

(declare-fun m!116527 () Bool)

(assert (=> d!28541 m!116527))

(declare-fun m!116529 () Bool)

(assert (=> b!104744 m!116529))

(declare-fun m!116531 () Bool)

(assert (=> b!104745 m!116531))

(assert (=> d!27965 d!28541))

(declare-fun b!104746 () Bool)

(declare-fun e!68184 () List!1592)

(declare-fun call!10989 () List!1592)

(assert (=> b!104746 (= e!68184 call!10989)))

(declare-fun e!68187 () List!1592)

(declare-fun b!104747 () Bool)

(assert (=> b!104747 (= e!68187 (insertStrictlySorted!75 (t!5646 (toList!779 e!67413)) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104748 () Bool)

(declare-fun e!68185 () List!1592)

(declare-fun call!10990 () List!1592)

(assert (=> b!104748 (= e!68185 call!10990)))

(declare-fun d!28543 () Bool)

(declare-fun e!68186 () Bool)

(assert (=> d!28543 e!68186))

(declare-fun res!52196 () Bool)

(assert (=> d!28543 (=> (not res!52196) (not e!68186))))

(declare-fun lt!53455 () List!1592)

(assert (=> d!28543 (= res!52196 (isStrictlySorted!295 lt!53455))))

(declare-fun e!68188 () List!1592)

(assert (=> d!28543 (= lt!53455 e!68188)))

(declare-fun c!18172 () Bool)

(assert (=> d!28543 (= c!18172 (and ((_ is Cons!1588) (toList!779 e!67413)) (bvslt (_1!1188 (h!2184 (toList!779 e!67413))) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(assert (=> d!28543 (isStrictlySorted!295 (toList!779 e!67413))))

(assert (=> d!28543 (= (insertStrictlySorted!75 (toList!779 e!67413) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))) lt!53455)))

(declare-fun bm!10985 () Bool)

(declare-fun call!10988 () List!1592)

(assert (=> bm!10985 (= call!10988 ($colon$colon!79 e!68187 (ite c!18172 (h!2184 (toList!779 e!67413)) (tuple2!2355 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))))

(declare-fun c!18174 () Bool)

(assert (=> bm!10985 (= c!18174 c!18172)))

(declare-fun c!18173 () Bool)

(declare-fun c!18175 () Bool)

(declare-fun b!104749 () Bool)

(assert (=> b!104749 (= e!68187 (ite c!18175 (t!5646 (toList!779 e!67413)) (ite c!18173 (Cons!1588 (h!2184 (toList!779 e!67413)) (t!5646 (toList!779 e!67413))) Nil!1589)))))

(declare-fun b!104750 () Bool)

(assert (=> b!104750 (= c!18173 (and ((_ is Cons!1588) (toList!779 e!67413)) (bvsgt (_1!1188 (h!2184 (toList!779 e!67413))) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(assert (=> b!104750 (= e!68185 e!68184)))

(declare-fun bm!10986 () Bool)

(assert (=> bm!10986 (= call!10989 call!10990)))

(declare-fun b!104751 () Bool)

(assert (=> b!104751 (= e!68184 call!10989)))

(declare-fun bm!10987 () Bool)

(assert (=> bm!10987 (= call!10990 call!10988)))

(declare-fun b!104752 () Bool)

(assert (=> b!104752 (= e!68186 (contains!812 lt!53455 (tuple2!2355 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (_2!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!104753 () Bool)

(declare-fun res!52195 () Bool)

(assert (=> b!104753 (=> (not res!52195) (not e!68186))))

(assert (=> b!104753 (= res!52195 (containsKey!159 lt!53455 (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104754 () Bool)

(assert (=> b!104754 (= e!68188 e!68185)))

(assert (=> b!104754 (= c!18175 (and ((_ is Cons!1588) (toList!779 e!67413)) (= (_1!1188 (h!2184 (toList!779 e!67413))) (_1!1188 (ite c!17808 (ite c!17811 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!104755 () Bool)

(assert (=> b!104755 (= e!68188 call!10988)))

(assert (= (and d!28543 c!18172) b!104755))

(assert (= (and d!28543 (not c!18172)) b!104754))

(assert (= (and b!104754 c!18175) b!104748))

(assert (= (and b!104754 (not c!18175)) b!104750))

(assert (= (and b!104750 c!18173) b!104751))

(assert (= (and b!104750 (not c!18173)) b!104746))

(assert (= (or b!104751 b!104746) bm!10986))

(assert (= (or b!104748 bm!10986) bm!10987))

(assert (= (or b!104755 bm!10987) bm!10985))

(assert (= (and bm!10985 c!18174) b!104747))

(assert (= (and bm!10985 (not c!18174)) b!104749))

(assert (= (and d!28543 res!52196) b!104753))

(assert (= (and b!104753 res!52195) b!104752))

(declare-fun m!116533 () Bool)

(assert (=> d!28543 m!116533))

(declare-fun m!116535 () Bool)

(assert (=> d!28543 m!116535))

(declare-fun m!116537 () Bool)

(assert (=> b!104752 m!116537))

(declare-fun m!116539 () Bool)

(assert (=> b!104753 m!116539))

(declare-fun m!116541 () Bool)

(assert (=> b!104747 m!116541))

(declare-fun m!116543 () Bool)

(assert (=> bm!10985 m!116543))

(assert (=> d!27965 d!28543))

(declare-fun b!104758 () Bool)

(declare-fun e!68190 () Option!162)

(assert (=> b!104758 (= e!68190 (getValueByKey!156 (t!5646 (t!5646 (toList!779 lt!52569))) (_1!1188 lt!52444)))))

(declare-fun b!104757 () Bool)

(declare-fun e!68189 () Option!162)

(assert (=> b!104757 (= e!68189 e!68190)))

(declare-fun c!18177 () Bool)

(assert (=> b!104757 (= c!18177 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52569))) (not (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52569)))) (_1!1188 lt!52444)))))))

(declare-fun b!104756 () Bool)

(assert (=> b!104756 (= e!68189 (Some!161 (_2!1188 (h!2184 (t!5646 (toList!779 lt!52569))))))))

(declare-fun d!28545 () Bool)

(declare-fun c!18176 () Bool)

(assert (=> d!28545 (= c!18176 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52569))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52569)))) (_1!1188 lt!52444))))))

(assert (=> d!28545 (= (getValueByKey!156 (t!5646 (toList!779 lt!52569)) (_1!1188 lt!52444)) e!68189)))

(declare-fun b!104759 () Bool)

(assert (=> b!104759 (= e!68190 None!160)))

(assert (= (and d!28545 c!18176) b!104756))

(assert (= (and d!28545 (not c!18176)) b!104757))

(assert (= (and b!104757 c!18177) b!104758))

(assert (= (and b!104757 (not c!18177)) b!104759))

(declare-fun m!116545 () Bool)

(assert (=> b!104758 m!116545))

(assert (=> b!103591 d!28545))

(declare-fun b!104762 () Bool)

(declare-fun e!68192 () Option!162)

(assert (=> b!104762 (= e!68192 (getValueByKey!156 (t!5646 (t!5646 lt!52561)) (_1!1188 lt!52442)))))

(declare-fun b!104761 () Bool)

(declare-fun e!68191 () Option!162)

(assert (=> b!104761 (= e!68191 e!68192)))

(declare-fun c!18179 () Bool)

(assert (=> b!104761 (= c!18179 (and ((_ is Cons!1588) (t!5646 lt!52561)) (not (= (_1!1188 (h!2184 (t!5646 lt!52561))) (_1!1188 lt!52442)))))))

(declare-fun b!104760 () Bool)

(assert (=> b!104760 (= e!68191 (Some!161 (_2!1188 (h!2184 (t!5646 lt!52561)))))))

(declare-fun d!28547 () Bool)

(declare-fun c!18178 () Bool)

(assert (=> d!28547 (= c!18178 (and ((_ is Cons!1588) (t!5646 lt!52561)) (= (_1!1188 (h!2184 (t!5646 lt!52561))) (_1!1188 lt!52442))))))

(assert (=> d!28547 (= (getValueByKey!156 (t!5646 lt!52561) (_1!1188 lt!52442)) e!68191)))

(declare-fun b!104763 () Bool)

(assert (=> b!104763 (= e!68192 None!160)))

(assert (= (and d!28547 c!18178) b!104760))

(assert (= (and d!28547 (not c!18178)) b!104761))

(assert (= (and b!104761 c!18179) b!104762))

(assert (= (and b!104761 (not c!18179)) b!104763))

(declare-fun m!116547 () Bool)

(assert (=> b!104762 m!116547))

(assert (=> b!103783 d!28547))

(declare-fun e!68194 () Option!162)

(declare-fun b!104766 () Bool)

(assert (=> b!104766 (= e!68194 (getValueByKey!156 (t!5646 (toList!779 lt!52862)) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104765 () Bool)

(declare-fun e!68193 () Option!162)

(assert (=> b!104765 (= e!68193 e!68194)))

(declare-fun c!18181 () Bool)

(assert (=> b!104765 (= c!18181 (and ((_ is Cons!1588) (toList!779 lt!52862)) (not (= (_1!1188 (h!2184 (toList!779 lt!52862))) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104764 () Bool)

(assert (=> b!104764 (= e!68193 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52862)))))))

(declare-fun c!18180 () Bool)

(declare-fun d!28549 () Bool)

(assert (=> d!28549 (= c!18180 (and ((_ is Cons!1588) (toList!779 lt!52862)) (= (_1!1188 (h!2184 (toList!779 lt!52862))) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28549 (= (getValueByKey!156 (toList!779 lt!52862) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68193)))

(declare-fun b!104767 () Bool)

(assert (=> b!104767 (= e!68194 None!160)))

(assert (= (and d!28549 c!18180) b!104764))

(assert (= (and d!28549 (not c!18180)) b!104765))

(assert (= (and b!104765 c!18181) b!104766))

(assert (= (and b!104765 (not c!18181)) b!104767))

(declare-fun m!116549 () Bool)

(assert (=> b!104766 m!116549))

(assert (=> b!103711 d!28549))

(declare-fun d!28551 () Bool)

(declare-fun lt!53456 () Bool)

(assert (=> d!28551 (= lt!53456 (select (content!108 (toList!779 lt!52891)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun e!68195 () Bool)

(assert (=> d!28551 (= lt!53456 e!68195)))

(declare-fun res!52197 () Bool)

(assert (=> d!28551 (=> (not res!52197) (not e!68195))))

(assert (=> d!28551 (= res!52197 ((_ is Cons!1588) (toList!779 lt!52891)))))

(assert (=> d!28551 (= (contains!812 (toList!779 lt!52891) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!53456)))

(declare-fun b!104768 () Bool)

(declare-fun e!68196 () Bool)

(assert (=> b!104768 (= e!68195 e!68196)))

(declare-fun res!52198 () Bool)

(assert (=> b!104768 (=> res!52198 e!68196)))

(assert (=> b!104768 (= res!52198 (= (h!2184 (toList!779 lt!52891)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(declare-fun b!104769 () Bool)

(assert (=> b!104769 (= e!68196 (contains!812 (t!5646 (toList!779 lt!52891)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!28551 res!52197) b!104768))

(assert (= (and b!104768 (not res!52198)) b!104769))

(declare-fun m!116551 () Bool)

(assert (=> d!28551 m!116551))

(declare-fun m!116553 () Bool)

(assert (=> d!28551 m!116553))

(declare-fun m!116555 () Bool)

(assert (=> b!104769 m!116555))

(assert (=> b!103748 d!28551))

(declare-fun d!28553 () Bool)

(declare-fun e!68198 () Bool)

(assert (=> d!28553 e!68198))

(declare-fun res!52199 () Bool)

(assert (=> d!28553 (=> res!52199 e!68198)))

(declare-fun lt!53460 () Bool)

(assert (=> d!28553 (= res!52199 (not lt!53460))))

(declare-fun lt!53457 () Bool)

(assert (=> d!28553 (= lt!53460 lt!53457)))

(declare-fun lt!53458 () Unit!3132)

(declare-fun e!68197 () Unit!3132)

(assert (=> d!28553 (= lt!53458 e!68197)))

(declare-fun c!18182 () Bool)

(assert (=> d!28553 (= c!18182 lt!53457)))

(assert (=> d!28553 (= lt!53457 (containsKey!159 (toList!779 lt!52757) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28553 (= (contains!811 lt!52757 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53460)))

(declare-fun b!104770 () Bool)

(declare-fun lt!53459 () Unit!3132)

(assert (=> b!104770 (= e!68197 lt!53459)))

(assert (=> b!104770 (= lt!53459 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52757) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104770 (isDefined!108 (getValueByKey!156 (toList!779 lt!52757) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104771 () Bool)

(declare-fun Unit!3196 () Unit!3132)

(assert (=> b!104771 (= e!68197 Unit!3196)))

(declare-fun b!104772 () Bool)

(assert (=> b!104772 (= e!68198 (isDefined!108 (getValueByKey!156 (toList!779 lt!52757) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28553 c!18182) b!104770))

(assert (= (and d!28553 (not c!18182)) b!104771))

(assert (= (and d!28553 (not res!52199)) b!104772))

(declare-fun m!116557 () Bool)

(assert (=> d!28553 m!116557))

(declare-fun m!116559 () Bool)

(assert (=> b!104770 m!116559))

(declare-fun m!116561 () Bool)

(assert (=> b!104770 m!116561))

(assert (=> b!104770 m!116561))

(declare-fun m!116563 () Bool)

(assert (=> b!104770 m!116563))

(assert (=> b!104772 m!116561))

(assert (=> b!104772 m!116561))

(assert (=> b!104772 m!116563))

(assert (=> d!27809 d!28553))

(assert (=> d!27809 d!27767))

(declare-fun d!28555 () Bool)

(assert (=> d!28555 (= (get!1331 (getValueByKey!156 (toList!779 lt!52634) lt!52636)) (v!2882 (getValueByKey!156 (toList!779 lt!52634) lt!52636)))))

(assert (=> d!27867 d!28555))

(declare-fun b!104775 () Bool)

(declare-fun e!68200 () Option!162)

(assert (=> b!104775 (= e!68200 (getValueByKey!156 (t!5646 (toList!779 lt!52634)) lt!52636))))

(declare-fun b!104774 () Bool)

(declare-fun e!68199 () Option!162)

(assert (=> b!104774 (= e!68199 e!68200)))

(declare-fun c!18184 () Bool)

(assert (=> b!104774 (= c!18184 (and ((_ is Cons!1588) (toList!779 lt!52634)) (not (= (_1!1188 (h!2184 (toList!779 lt!52634))) lt!52636))))))

(declare-fun b!104773 () Bool)

(assert (=> b!104773 (= e!68199 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52634)))))))

(declare-fun d!28557 () Bool)

(declare-fun c!18183 () Bool)

(assert (=> d!28557 (= c!18183 (and ((_ is Cons!1588) (toList!779 lt!52634)) (= (_1!1188 (h!2184 (toList!779 lt!52634))) lt!52636)))))

(assert (=> d!28557 (= (getValueByKey!156 (toList!779 lt!52634) lt!52636) e!68199)))

(declare-fun b!104776 () Bool)

(assert (=> b!104776 (= e!68200 None!160)))

(assert (= (and d!28557 c!18183) b!104773))

(assert (= (and d!28557 (not c!18183)) b!104774))

(assert (= (and b!104774 c!18184) b!104775))

(assert (= (and b!104774 (not c!18184)) b!104776))

(declare-fun m!116565 () Bool)

(assert (=> b!104775 m!116565))

(assert (=> d!27867 d!28557))

(declare-fun d!28559 () Bool)

(declare-fun e!68202 () Bool)

(assert (=> d!28559 e!68202))

(declare-fun res!52200 () Bool)

(assert (=> d!28559 (=> res!52200 e!68202)))

(declare-fun lt!53464 () Bool)

(assert (=> d!28559 (= res!52200 (not lt!53464))))

(declare-fun lt!53461 () Bool)

(assert (=> d!28559 (= lt!53464 lt!53461)))

(declare-fun lt!53462 () Unit!3132)

(declare-fun e!68201 () Unit!3132)

(assert (=> d!28559 (= lt!53462 e!68201)))

(declare-fun c!18185 () Bool)

(assert (=> d!28559 (= c!18185 lt!53461)))

(assert (=> d!28559 (= lt!53461 (containsKey!159 (toList!779 lt!53086) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28559 (= (contains!811 lt!53086 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) lt!53464)))

(declare-fun b!104777 () Bool)

(declare-fun lt!53463 () Unit!3132)

(assert (=> b!104777 (= e!68201 lt!53463)))

(assert (=> b!104777 (= lt!53463 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!53086) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104777 (isDefined!108 (getValueByKey!156 (toList!779 lt!53086) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104778 () Bool)

(declare-fun Unit!3197 () Unit!3132)

(assert (=> b!104778 (= e!68201 Unit!3197)))

(declare-fun b!104779 () Bool)

(assert (=> b!104779 (= e!68202 (isDefined!108 (getValueByKey!156 (toList!779 lt!53086) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28559 c!18185) b!104777))

(assert (= (and d!28559 (not c!18185)) b!104778))

(assert (= (and d!28559 (not res!52200)) b!104779))

(assert (=> d!28559 m!114381))

(declare-fun m!116567 () Bool)

(assert (=> d!28559 m!116567))

(assert (=> b!104777 m!114381))

(declare-fun m!116569 () Bool)

(assert (=> b!104777 m!116569))

(assert (=> b!104777 m!114381))

(assert (=> b!104777 m!116069))

(assert (=> b!104777 m!116069))

(declare-fun m!116571 () Bool)

(assert (=> b!104777 m!116571))

(assert (=> b!104779 m!114381))

(assert (=> b!104779 m!116069))

(assert (=> b!104779 m!116069))

(assert (=> b!104779 m!116571))

(assert (=> b!103939 d!28559))

(declare-fun d!28561 () Bool)

(assert (=> d!28561 (= (apply!97 (+!137 lt!52773 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))) lt!52775) (apply!97 lt!52773 lt!52775))))

(declare-fun lt!53465 () Unit!3132)

(assert (=> d!28561 (= lt!53465 (choose!650 lt!52773 lt!52771 (minValue!2437 newMap!16) lt!52775))))

(declare-fun e!68203 () Bool)

(assert (=> d!28561 e!68203))

(declare-fun res!52201 () Bool)

(assert (=> d!28561 (=> (not res!52201) (not e!68203))))

(assert (=> d!28561 (= res!52201 (contains!811 lt!52773 lt!52775))))

(assert (=> d!28561 (= (addApplyDifferent!73 lt!52773 lt!52771 (minValue!2437 newMap!16) lt!52775) lt!53465)))

(declare-fun b!104780 () Bool)

(assert (=> b!104780 (= e!68203 (not (= lt!52775 lt!52771)))))

(assert (= (and d!28561 res!52201) b!104780))

(declare-fun m!116573 () Bool)

(assert (=> d!28561 m!116573))

(assert (=> d!28561 m!114423))

(assert (=> d!28561 m!114407))

(assert (=> d!28561 m!114427))

(assert (=> d!28561 m!114407))

(declare-fun m!116575 () Bool)

(assert (=> d!28561 m!116575))

(assert (=> b!103537 d!28561))

(declare-fun d!28563 () Bool)

(assert (=> d!28563 (= (apply!97 (+!137 lt!52773 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))) lt!52775) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52773 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))) lt!52775)))))

(declare-fun bs!4314 () Bool)

(assert (= bs!4314 d!28563))

(declare-fun m!116577 () Bool)

(assert (=> bs!4314 m!116577))

(assert (=> bs!4314 m!116577))

(declare-fun m!116579 () Bool)

(assert (=> bs!4314 m!116579))

(assert (=> b!103537 d!28563))

(declare-fun d!28565 () Bool)

(assert (=> d!28565 (= (apply!97 lt!52773 lt!52775) (get!1331 (getValueByKey!156 (toList!779 lt!52773) lt!52775)))))

(declare-fun bs!4315 () Bool)

(assert (= bs!4315 d!28565))

(declare-fun m!116581 () Bool)

(assert (=> bs!4315 m!116581))

(assert (=> bs!4315 m!116581))

(declare-fun m!116583 () Bool)

(assert (=> bs!4315 m!116583))

(assert (=> b!103537 d!28565))

(declare-fun d!28567 () Bool)

(assert (=> d!28567 (= (apply!97 (+!137 lt!52778 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))) lt!52766) (apply!97 lt!52778 lt!52766))))

(declare-fun lt!53466 () Unit!3132)

(assert (=> d!28567 (= lt!53466 (choose!650 lt!52778 lt!52776 (zeroValue!2437 newMap!16) lt!52766))))

(declare-fun e!68204 () Bool)

(assert (=> d!28567 e!68204))

(declare-fun res!52202 () Bool)

(assert (=> d!28567 (=> (not res!52202) (not e!68204))))

(assert (=> d!28567 (= res!52202 (contains!811 lt!52778 lt!52766))))

(assert (=> d!28567 (= (addApplyDifferent!73 lt!52778 lt!52776 (zeroValue!2437 newMap!16) lt!52766) lt!53466)))

(declare-fun b!104781 () Bool)

(assert (=> b!104781 (= e!68204 (not (= lt!52766 lt!52776)))))

(assert (= (and d!28567 res!52202) b!104781))

(declare-fun m!116585 () Bool)

(assert (=> d!28567 m!116585))

(assert (=> d!28567 m!114421))

(assert (=> d!28567 m!114415))

(assert (=> d!28567 m!114417))

(assert (=> d!28567 m!114415))

(declare-fun m!116587 () Bool)

(assert (=> d!28567 m!116587))

(assert (=> b!103537 d!28567))

(declare-fun d!28569 () Bool)

(assert (=> d!28569 (= (apply!97 lt!52772 lt!52770) (get!1331 (getValueByKey!156 (toList!779 lt!52772) lt!52770)))))

(declare-fun bs!4316 () Bool)

(assert (= bs!4316 d!28569))

(declare-fun m!116589 () Bool)

(assert (=> bs!4316 m!116589))

(assert (=> bs!4316 m!116589))

(declare-fun m!116591 () Bool)

(assert (=> bs!4316 m!116591))

(assert (=> b!103537 d!28569))

(declare-fun d!28571 () Bool)

(assert (=> d!28571 (= (apply!97 (+!137 lt!52778 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))) lt!52766) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52778 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))) lt!52766)))))

(declare-fun bs!4317 () Bool)

(assert (= bs!4317 d!28571))

(declare-fun m!116593 () Bool)

(assert (=> bs!4317 m!116593))

(assert (=> bs!4317 m!116593))

(declare-fun m!116595 () Bool)

(assert (=> bs!4317 m!116595))

(assert (=> b!103537 d!28571))

(declare-fun d!28573 () Bool)

(assert (=> d!28573 (= (apply!97 lt!52778 lt!52766) (get!1331 (getValueByKey!156 (toList!779 lt!52778) lt!52766)))))

(declare-fun bs!4318 () Bool)

(assert (= bs!4318 d!28573))

(declare-fun m!116597 () Bool)

(assert (=> bs!4318 m!116597))

(assert (=> bs!4318 m!116597))

(declare-fun m!116599 () Bool)

(assert (=> bs!4318 m!116599))

(assert (=> b!103537 d!28573))

(declare-fun d!28575 () Bool)

(declare-fun e!68205 () Bool)

(assert (=> d!28575 e!68205))

(declare-fun res!52203 () Bool)

(assert (=> d!28575 (=> (not res!52203) (not e!68205))))

(declare-fun lt!53469 () ListLongMap!1527)

(assert (=> d!28575 (= res!52203 (contains!811 lt!53469 (_1!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53468 () List!1592)

(assert (=> d!28575 (= lt!53469 (ListLongMap!1528 lt!53468))))

(declare-fun lt!53467 () Unit!3132)

(declare-fun lt!53470 () Unit!3132)

(assert (=> d!28575 (= lt!53467 lt!53470)))

(assert (=> d!28575 (= (getValueByKey!156 lt!53468 (_1!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28575 (= lt!53470 (lemmaContainsTupThenGetReturnValue!72 lt!53468 (_1!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28575 (= lt!53468 (insertStrictlySorted!75 (toList!779 lt!52778) (_1!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28575 (= (+!137 lt!52778 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))) lt!53469)))

(declare-fun b!104782 () Bool)

(declare-fun res!52204 () Bool)

(assert (=> b!104782 (=> (not res!52204) (not e!68205))))

(assert (=> b!104782 (= res!52204 (= (getValueByKey!156 (toList!779 lt!53469) (_1!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104783 () Bool)

(assert (=> b!104783 (= e!68205 (contains!812 (toList!779 lt!53469) (tuple2!2355 lt!52776 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28575 res!52203) b!104782))

(assert (= (and b!104782 res!52204) b!104783))

(declare-fun m!116601 () Bool)

(assert (=> d!28575 m!116601))

(declare-fun m!116603 () Bool)

(assert (=> d!28575 m!116603))

(declare-fun m!116605 () Bool)

(assert (=> d!28575 m!116605))

(declare-fun m!116607 () Bool)

(assert (=> d!28575 m!116607))

(declare-fun m!116609 () Bool)

(assert (=> b!104782 m!116609))

(declare-fun m!116611 () Bool)

(assert (=> b!104783 m!116611))

(assert (=> b!103537 d!28575))

(declare-fun d!28577 () Bool)

(assert (=> d!28577 (= (apply!97 (+!137 lt!52772 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))) lt!52770) (apply!97 lt!52772 lt!52770))))

(declare-fun lt!53471 () Unit!3132)

(assert (=> d!28577 (= lt!53471 (choose!650 lt!52772 lt!52774 (minValue!2437 newMap!16) lt!52770))))

(declare-fun e!68206 () Bool)

(assert (=> d!28577 e!68206))

(declare-fun res!52205 () Bool)

(assert (=> d!28577 (=> (not res!52205) (not e!68206))))

(assert (=> d!28577 (= res!52205 (contains!811 lt!52772 lt!52770))))

(assert (=> d!28577 (= (addApplyDifferent!73 lt!52772 lt!52774 (minValue!2437 newMap!16) lt!52770) lt!53471)))

(declare-fun b!104784 () Bool)

(assert (=> b!104784 (= e!68206 (not (= lt!52770 lt!52774)))))

(assert (= (and d!28577 res!52205) b!104784))

(declare-fun m!116613 () Bool)

(assert (=> d!28577 m!116613))

(assert (=> d!28577 m!114405))

(assert (=> d!28577 m!114419))

(assert (=> d!28577 m!114431))

(assert (=> d!28577 m!114419))

(declare-fun m!116615 () Bool)

(assert (=> d!28577 m!116615))

(assert (=> b!103537 d!28577))

(declare-fun d!28579 () Bool)

(declare-fun e!68208 () Bool)

(assert (=> d!28579 e!68208))

(declare-fun res!52206 () Bool)

(assert (=> d!28579 (=> res!52206 e!68208)))

(declare-fun lt!53475 () Bool)

(assert (=> d!28579 (= res!52206 (not lt!53475))))

(declare-fun lt!53472 () Bool)

(assert (=> d!28579 (= lt!53475 lt!53472)))

(declare-fun lt!53473 () Unit!3132)

(declare-fun e!68207 () Unit!3132)

(assert (=> d!28579 (= lt!53473 e!68207)))

(declare-fun c!18186 () Bool)

(assert (=> d!28579 (= c!18186 lt!53472)))

(assert (=> d!28579 (= lt!53472 (containsKey!159 (toList!779 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))) lt!52763))))

(assert (=> d!28579 (= (contains!811 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))) lt!52763) lt!53475)))

(declare-fun b!104785 () Bool)

(declare-fun lt!53474 () Unit!3132)

(assert (=> b!104785 (= e!68207 lt!53474)))

(assert (=> b!104785 (= lt!53474 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))) lt!52763))))

(assert (=> b!104785 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))) lt!52763))))

(declare-fun b!104786 () Bool)

(declare-fun Unit!3198 () Unit!3132)

(assert (=> b!104786 (= e!68207 Unit!3198)))

(declare-fun b!104787 () Bool)

(assert (=> b!104787 (= e!68208 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))) lt!52763)))))

(assert (= (and d!28579 c!18186) b!104785))

(assert (= (and d!28579 (not c!18186)) b!104786))

(assert (= (and d!28579 (not res!52206)) b!104787))

(declare-fun m!116617 () Bool)

(assert (=> d!28579 m!116617))

(declare-fun m!116619 () Bool)

(assert (=> b!104785 m!116619))

(declare-fun m!116621 () Bool)

(assert (=> b!104785 m!116621))

(assert (=> b!104785 m!116621))

(declare-fun m!116623 () Bool)

(assert (=> b!104785 m!116623))

(assert (=> b!104787 m!116621))

(assert (=> b!104787 m!116621))

(assert (=> b!104787 m!116623))

(assert (=> b!103537 d!28579))

(declare-fun d!28581 () Bool)

(assert (=> d!28581 (= (apply!97 (+!137 lt!52772 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))) lt!52770) (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52772 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))) lt!52770)))))

(declare-fun bs!4319 () Bool)

(assert (= bs!4319 d!28581))

(declare-fun m!116625 () Bool)

(assert (=> bs!4319 m!116625))

(assert (=> bs!4319 m!116625))

(declare-fun m!116627 () Bool)

(assert (=> bs!4319 m!116627))

(assert (=> b!103537 d!28581))

(declare-fun d!28583 () Bool)

(assert (=> d!28583 (contains!811 (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))) lt!52763)))

(declare-fun lt!53476 () Unit!3132)

(assert (=> d!28583 (= lt!53476 (choose!651 lt!52779 lt!52784 (zeroValue!2437 newMap!16) lt!52763))))

(assert (=> d!28583 (contains!811 lt!52779 lt!52763)))

(assert (=> d!28583 (= (addStillContains!73 lt!52779 lt!52784 (zeroValue!2437 newMap!16) lt!52763) lt!53476)))

(declare-fun bs!4320 () Bool)

(assert (= bs!4320 d!28583))

(assert (=> bs!4320 m!114409))

(assert (=> bs!4320 m!114409))

(assert (=> bs!4320 m!114425))

(declare-fun m!116629 () Bool)

(assert (=> bs!4320 m!116629))

(declare-fun m!116631 () Bool)

(assert (=> bs!4320 m!116631))

(assert (=> b!103537 d!28583))

(declare-fun b!104788 () Bool)

(assert (=> b!104788 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> b!104788 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (_values!2543 newMap!16))))))

(declare-fun e!68211 () Bool)

(declare-fun lt!53481 () ListLongMap!1527)

(assert (=> b!104788 (= e!68211 (= (apply!97 lt!53481 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!28585 () Bool)

(declare-fun e!68209 () Bool)

(assert (=> d!28585 e!68209))

(declare-fun res!52210 () Bool)

(assert (=> d!28585 (=> (not res!52210) (not e!68209))))

(assert (=> d!28585 (= res!52210 (not (contains!811 lt!53481 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68212 () ListLongMap!1527)

(assert (=> d!28585 (= lt!53481 e!68212)))

(declare-fun c!18189 () Bool)

(assert (=> d!28585 (= c!18189 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28585 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28585 (= (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53481)))

(declare-fun b!104789 () Bool)

(assert (=> b!104789 (= e!68212 (ListLongMap!1528 Nil!1589))))

(declare-fun b!104790 () Bool)

(declare-fun res!52209 () Bool)

(assert (=> b!104790 (=> (not res!52209) (not e!68209))))

(assert (=> b!104790 (= res!52209 (not (contains!811 lt!53481 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104791 () Bool)

(declare-fun e!68213 () Bool)

(assert (=> b!104791 (= e!68213 (isEmpty!373 lt!53481))))

(declare-fun b!104792 () Bool)

(declare-fun lt!53479 () Unit!3132)

(declare-fun lt!53482 () Unit!3132)

(assert (=> b!104792 (= lt!53479 lt!53482)))

(declare-fun lt!53483 () ListLongMap!1527)

(declare-fun lt!53480 () (_ BitVec 64))

(declare-fun lt!53478 () V!3209)

(declare-fun lt!53477 () (_ BitVec 64))

(assert (=> b!104792 (not (contains!811 (+!137 lt!53483 (tuple2!2355 lt!53480 lt!53478)) lt!53477))))

(assert (=> b!104792 (= lt!53482 (addStillNotContains!47 lt!53483 lt!53480 lt!53478 lt!53477))))

(assert (=> b!104792 (= lt!53477 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104792 (= lt!53478 (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104792 (= lt!53480 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun call!10991 () ListLongMap!1527)

(assert (=> b!104792 (= lt!53483 call!10991)))

(declare-fun e!68214 () ListLongMap!1527)

(assert (=> b!104792 (= e!68214 (+!137 call!10991 (tuple2!2355 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000) (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun bm!10988 () Bool)

(assert (=> bm!10988 (= call!10991 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16)))))

(declare-fun b!104793 () Bool)

(declare-fun e!68210 () Bool)

(assert (=> b!104793 (= e!68210 e!68213)))

(declare-fun c!18188 () Bool)

(assert (=> b!104793 (= c!18188 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104794 () Bool)

(assert (=> b!104794 (= e!68212 e!68214)))

(declare-fun c!18190 () Bool)

(assert (=> b!104794 (= c!18190 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104795 () Bool)

(assert (=> b!104795 (= e!68210 e!68211)))

(assert (=> b!104795 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun res!52208 () Bool)

(assert (=> b!104795 (= res!52208 (contains!811 lt!53481 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104795 (=> (not res!52208) (not e!68211))))

(declare-fun b!104796 () Bool)

(declare-fun e!68215 () Bool)

(assert (=> b!104796 (= e!68215 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104796 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104797 () Bool)

(assert (=> b!104797 (= e!68214 call!10991)))

(declare-fun b!104798 () Bool)

(assert (=> b!104798 (= e!68213 (= lt!53481 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2560 newMap!16))))))

(declare-fun b!104799 () Bool)

(assert (=> b!104799 (= e!68209 e!68210)))

(declare-fun c!18187 () Bool)

(assert (=> b!104799 (= c!18187 e!68215)))

(declare-fun res!52207 () Bool)

(assert (=> b!104799 (=> (not res!52207) (not e!68215))))

(assert (=> b!104799 (= res!52207 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (= (and d!28585 c!18189) b!104789))

(assert (= (and d!28585 (not c!18189)) b!104794))

(assert (= (and b!104794 c!18190) b!104792))

(assert (= (and b!104794 (not c!18190)) b!104797))

(assert (= (or b!104792 b!104797) bm!10988))

(assert (= (and d!28585 res!52210) b!104790))

(assert (= (and b!104790 res!52209) b!104799))

(assert (= (and b!104799 res!52207) b!104796))

(assert (= (and b!104799 c!18187) b!104795))

(assert (= (and b!104799 (not c!18187)) b!104793))

(assert (= (and b!104795 res!52208) b!104788))

(assert (= (and b!104793 c!18188) b!104798))

(assert (= (and b!104793 (not c!18188)) b!104791))

(declare-fun b_lambda!4671 () Bool)

(assert (=> (not b_lambda!4671) (not b!104788)))

(assert (=> b!104788 t!5659))

(declare-fun b_and!6465 () Bool)

(assert (= b_and!6461 (and (=> t!5659 result!3431) b_and!6465)))

(assert (=> b!104788 t!5661))

(declare-fun b_and!6467 () Bool)

(assert (= b_and!6463 (and (=> t!5661 result!3433) b_and!6467)))

(declare-fun b_lambda!4673 () Bool)

(assert (=> (not b_lambda!4673) (not b!104792)))

(assert (=> b!104792 t!5659))

(declare-fun b_and!6469 () Bool)

(assert (= b_and!6465 (and (=> t!5659 result!3431) b_and!6469)))

(assert (=> b!104792 t!5661))

(declare-fun b_and!6471 () Bool)

(assert (= b_and!6467 (and (=> t!5661 result!3433) b_and!6471)))

(declare-fun m!116633 () Bool)

(assert (=> d!28585 m!116633))

(assert (=> d!28585 m!114321))

(declare-fun m!116635 () Bool)

(assert (=> b!104791 m!116635))

(assert (=> b!104794 m!114381))

(assert (=> b!104794 m!114381))

(assert (=> b!104794 m!114383))

(assert (=> b!104795 m!114381))

(assert (=> b!104795 m!114381))

(declare-fun m!116637 () Bool)

(assert (=> b!104795 m!116637))

(assert (=> b!104796 m!114381))

(assert (=> b!104796 m!114381))

(assert (=> b!104796 m!114383))

(assert (=> b!104788 m!114381))

(declare-fun m!116639 () Bool)

(assert (=> b!104788 m!116639))

(assert (=> b!104788 m!114393))

(assert (=> b!104788 m!114381))

(assert (=> b!104788 m!114389))

(assert (=> b!104788 m!114393))

(assert (=> b!104788 m!114389))

(assert (=> b!104788 m!114395))

(declare-fun m!116641 () Bool)

(assert (=> b!104792 m!116641))

(assert (=> b!104792 m!116641))

(declare-fun m!116643 () Bool)

(assert (=> b!104792 m!116643))

(assert (=> b!104792 m!114393))

(assert (=> b!104792 m!114381))

(assert (=> b!104792 m!114389))

(declare-fun m!116645 () Bool)

(assert (=> b!104792 m!116645))

(assert (=> b!104792 m!114393))

(assert (=> b!104792 m!114389))

(assert (=> b!104792 m!114395))

(declare-fun m!116647 () Bool)

(assert (=> b!104792 m!116647))

(declare-fun m!116649 () Bool)

(assert (=> b!104798 m!116649))

(declare-fun m!116651 () Bool)

(assert (=> b!104790 m!116651))

(assert (=> bm!10988 m!116649))

(assert (=> b!103537 d!28585))

(declare-fun d!28587 () Bool)

(declare-fun e!68216 () Bool)

(assert (=> d!28587 e!68216))

(declare-fun res!52211 () Bool)

(assert (=> d!28587 (=> (not res!52211) (not e!68216))))

(declare-fun lt!53486 () ListLongMap!1527)

(assert (=> d!28587 (= res!52211 (contains!811 lt!53486 (_1!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))))))

(declare-fun lt!53485 () List!1592)

(assert (=> d!28587 (= lt!53486 (ListLongMap!1528 lt!53485))))

(declare-fun lt!53484 () Unit!3132)

(declare-fun lt!53487 () Unit!3132)

(assert (=> d!28587 (= lt!53484 lt!53487)))

(assert (=> d!28587 (= (getValueByKey!156 lt!53485 (_1!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))))))

(assert (=> d!28587 (= lt!53487 (lemmaContainsTupThenGetReturnValue!72 lt!53485 (_1!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))))))

(assert (=> d!28587 (= lt!53485 (insertStrictlySorted!75 (toList!779 lt!52773) (_1!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))))))

(assert (=> d!28587 (= (+!137 lt!52773 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))) lt!53486)))

(declare-fun b!104800 () Bool)

(declare-fun res!52212 () Bool)

(assert (=> b!104800 (=> (not res!52212) (not e!68216))))

(assert (=> b!104800 (= res!52212 (= (getValueByKey!156 (toList!779 lt!53486) (_1!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52771 (minValue!2437 newMap!16))))))))

(declare-fun b!104801 () Bool)

(assert (=> b!104801 (= e!68216 (contains!812 (toList!779 lt!53486) (tuple2!2355 lt!52771 (minValue!2437 newMap!16))))))

(assert (= (and d!28587 res!52211) b!104800))

(assert (= (and b!104800 res!52212) b!104801))

(declare-fun m!116653 () Bool)

(assert (=> d!28587 m!116653))

(declare-fun m!116655 () Bool)

(assert (=> d!28587 m!116655))

(declare-fun m!116657 () Bool)

(assert (=> d!28587 m!116657))

(declare-fun m!116659 () Bool)

(assert (=> d!28587 m!116659))

(declare-fun m!116661 () Bool)

(assert (=> b!104800 m!116661))

(declare-fun m!116663 () Bool)

(assert (=> b!104801 m!116663))

(assert (=> b!103537 d!28587))

(declare-fun d!28589 () Bool)

(declare-fun e!68217 () Bool)

(assert (=> d!28589 e!68217))

(declare-fun res!52213 () Bool)

(assert (=> d!28589 (=> (not res!52213) (not e!68217))))

(declare-fun lt!53490 () ListLongMap!1527)

(assert (=> d!28589 (= res!52213 (contains!811 lt!53490 (_1!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))))))

(declare-fun lt!53489 () List!1592)

(assert (=> d!28589 (= lt!53490 (ListLongMap!1528 lt!53489))))

(declare-fun lt!53488 () Unit!3132)

(declare-fun lt!53491 () Unit!3132)

(assert (=> d!28589 (= lt!53488 lt!53491)))

(assert (=> d!28589 (= (getValueByKey!156 lt!53489 (_1!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))))))

(assert (=> d!28589 (= lt!53491 (lemmaContainsTupThenGetReturnValue!72 lt!53489 (_1!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))))))

(assert (=> d!28589 (= lt!53489 (insertStrictlySorted!75 (toList!779 lt!52772) (_1!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))))))

(assert (=> d!28589 (= (+!137 lt!52772 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))) lt!53490)))

(declare-fun b!104802 () Bool)

(declare-fun res!52214 () Bool)

(assert (=> b!104802 (=> (not res!52214) (not e!68217))))

(assert (=> b!104802 (= res!52214 (= (getValueByKey!156 (toList!779 lt!53490) (_1!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52774 (minValue!2437 newMap!16))))))))

(declare-fun b!104803 () Bool)

(assert (=> b!104803 (= e!68217 (contains!812 (toList!779 lt!53490) (tuple2!2355 lt!52774 (minValue!2437 newMap!16))))))

(assert (= (and d!28589 res!52213) b!104802))

(assert (= (and b!104802 res!52214) b!104803))

(declare-fun m!116665 () Bool)

(assert (=> d!28589 m!116665))

(declare-fun m!116667 () Bool)

(assert (=> d!28589 m!116667))

(declare-fun m!116669 () Bool)

(assert (=> d!28589 m!116669))

(declare-fun m!116671 () Bool)

(assert (=> d!28589 m!116671))

(declare-fun m!116673 () Bool)

(assert (=> b!104802 m!116673))

(declare-fun m!116675 () Bool)

(assert (=> b!104803 m!116675))

(assert (=> b!103537 d!28589))

(declare-fun d!28591 () Bool)

(declare-fun e!68218 () Bool)

(assert (=> d!28591 e!68218))

(declare-fun res!52215 () Bool)

(assert (=> d!28591 (=> (not res!52215) (not e!68218))))

(declare-fun lt!53494 () ListLongMap!1527)

(assert (=> d!28591 (= res!52215 (contains!811 lt!53494 (_1!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))))))

(declare-fun lt!53493 () List!1592)

(assert (=> d!28591 (= lt!53494 (ListLongMap!1528 lt!53493))))

(declare-fun lt!53492 () Unit!3132)

(declare-fun lt!53495 () Unit!3132)

(assert (=> d!28591 (= lt!53492 lt!53495)))

(assert (=> d!28591 (= (getValueByKey!156 lt!53493 (_1!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28591 (= lt!53495 (lemmaContainsTupThenGetReturnValue!72 lt!53493 (_1!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28591 (= lt!53493 (insertStrictlySorted!75 (toList!779 lt!52779) (_1!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))) (_2!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))))))

(assert (=> d!28591 (= (+!137 lt!52779 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))) lt!53494)))

(declare-fun b!104804 () Bool)

(declare-fun res!52216 () Bool)

(assert (=> b!104804 (=> (not res!52216) (not e!68218))))

(assert (=> b!104804 (= res!52216 (= (getValueByKey!156 (toList!779 lt!53494) (_1!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16)))) (Some!161 (_2!1188 (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))))))))

(declare-fun b!104805 () Bool)

(assert (=> b!104805 (= e!68218 (contains!812 (toList!779 lt!53494) (tuple2!2355 lt!52784 (zeroValue!2437 newMap!16))))))

(assert (= (and d!28591 res!52215) b!104804))

(assert (= (and b!104804 res!52216) b!104805))

(declare-fun m!116677 () Bool)

(assert (=> d!28591 m!116677))

(declare-fun m!116679 () Bool)

(assert (=> d!28591 m!116679))

(declare-fun m!116681 () Bool)

(assert (=> d!28591 m!116681))

(declare-fun m!116683 () Bool)

(assert (=> d!28591 m!116683))

(declare-fun m!116685 () Bool)

(assert (=> b!104804 m!116685))

(declare-fun m!116687 () Bool)

(assert (=> b!104805 m!116687))

(assert (=> b!103537 d!28591))

(declare-fun d!28593 () Bool)

(declare-fun e!68220 () Bool)

(assert (=> d!28593 e!68220))

(declare-fun res!52217 () Bool)

(assert (=> d!28593 (=> res!52217 e!68220)))

(declare-fun lt!53499 () Bool)

(assert (=> d!28593 (= res!52217 (not lt!53499))))

(declare-fun lt!53496 () Bool)

(assert (=> d!28593 (= lt!53499 lt!53496)))

(declare-fun lt!53497 () Unit!3132)

(declare-fun e!68219 () Unit!3132)

(assert (=> d!28593 (= lt!53497 e!68219)))

(declare-fun c!18191 () Bool)

(assert (=> d!28593 (= c!18191 lt!53496)))

(assert (=> d!28593 (= lt!53496 (containsKey!159 (toList!779 lt!53043) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(assert (=> d!28593 (= (contains!811 lt!53043 (_1!1188 (tuple2!2355 lt!52552 lt!52550))) lt!53499)))

(declare-fun b!104806 () Bool)

(declare-fun lt!53498 () Unit!3132)

(assert (=> b!104806 (= e!68219 lt!53498)))

(assert (=> b!104806 (= lt!53498 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!53043) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(assert (=> b!104806 (isDefined!108 (getValueByKey!156 (toList!779 lt!53043) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun b!104807 () Bool)

(declare-fun Unit!3199 () Unit!3132)

(assert (=> b!104807 (= e!68219 Unit!3199)))

(declare-fun b!104808 () Bool)

(assert (=> b!104808 (= e!68220 (isDefined!108 (getValueByKey!156 (toList!779 lt!53043) (_1!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (= (and d!28593 c!18191) b!104806))

(assert (= (and d!28593 (not c!18191)) b!104807))

(assert (= (and d!28593 (not res!52217)) b!104808))

(declare-fun m!116689 () Bool)

(assert (=> d!28593 m!116689))

(declare-fun m!116691 () Bool)

(assert (=> b!104806 m!116691))

(assert (=> b!104806 m!114991))

(assert (=> b!104806 m!114991))

(declare-fun m!116693 () Bool)

(assert (=> b!104806 m!116693))

(assert (=> b!104808 m!114991))

(assert (=> b!104808 m!114991))

(assert (=> b!104808 m!116693))

(assert (=> d!27971 d!28593))

(declare-fun b!104811 () Bool)

(declare-fun e!68222 () Option!162)

(assert (=> b!104811 (= e!68222 (getValueByKey!156 (t!5646 lt!53042) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun b!104810 () Bool)

(declare-fun e!68221 () Option!162)

(assert (=> b!104810 (= e!68221 e!68222)))

(declare-fun c!18193 () Bool)

(assert (=> b!104810 (= c!18193 (and ((_ is Cons!1588) lt!53042) (not (= (_1!1188 (h!2184 lt!53042)) (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))))

(declare-fun b!104809 () Bool)

(assert (=> b!104809 (= e!68221 (Some!161 (_2!1188 (h!2184 lt!53042))))))

(declare-fun d!28595 () Bool)

(declare-fun c!18192 () Bool)

(assert (=> d!28595 (= c!18192 (and ((_ is Cons!1588) lt!53042) (= (_1!1188 (h!2184 lt!53042)) (_1!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (=> d!28595 (= (getValueByKey!156 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550))) e!68221)))

(declare-fun b!104812 () Bool)

(assert (=> b!104812 (= e!68222 None!160)))

(assert (= (and d!28595 c!18192) b!104809))

(assert (= (and d!28595 (not c!18192)) b!104810))

(assert (= (and b!104810 c!18193) b!104811))

(assert (= (and b!104810 (not c!18193)) b!104812))

(declare-fun m!116695 () Bool)

(assert (=> b!104811 m!116695))

(assert (=> d!27971 d!28595))

(declare-fun d!28597 () Bool)

(assert (=> d!28597 (= (getValueByKey!156 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550))) (Some!161 (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun lt!53500 () Unit!3132)

(assert (=> d!28597 (= lt!53500 (choose!648 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun e!68223 () Bool)

(assert (=> d!28597 e!68223))

(declare-fun res!52218 () Bool)

(assert (=> d!28597 (=> (not res!52218) (not e!68223))))

(assert (=> d!28597 (= res!52218 (isStrictlySorted!295 lt!53042))))

(assert (=> d!28597 (= (lemmaContainsTupThenGetReturnValue!72 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))) lt!53500)))

(declare-fun b!104813 () Bool)

(declare-fun res!52219 () Bool)

(assert (=> b!104813 (=> (not res!52219) (not e!68223))))

(assert (=> b!104813 (= res!52219 (containsKey!159 lt!53042 (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun b!104814 () Bool)

(assert (=> b!104814 (= e!68223 (contains!812 lt!53042 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (= (and d!28597 res!52218) b!104813))

(assert (= (and b!104813 res!52219) b!104814))

(assert (=> d!28597 m!114985))

(declare-fun m!116697 () Bool)

(assert (=> d!28597 m!116697))

(declare-fun m!116699 () Bool)

(assert (=> d!28597 m!116699))

(declare-fun m!116701 () Bool)

(assert (=> b!104813 m!116701))

(declare-fun m!116703 () Bool)

(assert (=> b!104814 m!116703))

(assert (=> d!27971 d!28597))

(declare-fun b!104815 () Bool)

(declare-fun e!68224 () List!1592)

(declare-fun call!10993 () List!1592)

(assert (=> b!104815 (= e!68224 call!10993)))

(declare-fun b!104816 () Bool)

(declare-fun e!68227 () List!1592)

(assert (=> b!104816 (= e!68227 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52555)) (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun b!104817 () Bool)

(declare-fun e!68225 () List!1592)

(declare-fun call!10994 () List!1592)

(assert (=> b!104817 (= e!68225 call!10994)))

(declare-fun d!28599 () Bool)

(declare-fun e!68226 () Bool)

(assert (=> d!28599 e!68226))

(declare-fun res!52221 () Bool)

(assert (=> d!28599 (=> (not res!52221) (not e!68226))))

(declare-fun lt!53501 () List!1592)

(assert (=> d!28599 (= res!52221 (isStrictlySorted!295 lt!53501))))

(declare-fun e!68228 () List!1592)

(assert (=> d!28599 (= lt!53501 e!68228)))

(declare-fun c!18194 () Bool)

(assert (=> d!28599 (= c!18194 (and ((_ is Cons!1588) (toList!779 lt!52555)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52555))) (_1!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (=> d!28599 (isStrictlySorted!295 (toList!779 lt!52555))))

(assert (=> d!28599 (= (insertStrictlySorted!75 (toList!779 lt!52555) (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))) lt!53501)))

(declare-fun call!10992 () List!1592)

(declare-fun bm!10989 () Bool)

(assert (=> bm!10989 (= call!10992 ($colon$colon!79 e!68227 (ite c!18194 (h!2184 (toList!779 lt!52555)) (tuple2!2355 (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550))))))))

(declare-fun c!18196 () Bool)

(assert (=> bm!10989 (= c!18196 c!18194)))

(declare-fun c!18195 () Bool)

(declare-fun c!18197 () Bool)

(declare-fun b!104818 () Bool)

(assert (=> b!104818 (= e!68227 (ite c!18197 (t!5646 (toList!779 lt!52555)) (ite c!18195 (Cons!1588 (h!2184 (toList!779 lt!52555)) (t!5646 (toList!779 lt!52555))) Nil!1589)))))

(declare-fun b!104819 () Bool)

(assert (=> b!104819 (= c!18195 (and ((_ is Cons!1588) (toList!779 lt!52555)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52555))) (_1!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (=> b!104819 (= e!68225 e!68224)))

(declare-fun bm!10990 () Bool)

(assert (=> bm!10990 (= call!10993 call!10994)))

(declare-fun b!104820 () Bool)

(assert (=> b!104820 (= e!68224 call!10993)))

(declare-fun bm!10991 () Bool)

(assert (=> bm!10991 (= call!10994 call!10992)))

(declare-fun b!104821 () Bool)

(assert (=> b!104821 (= e!68226 (contains!812 lt!53501 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52552 lt!52550)) (_2!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(declare-fun b!104822 () Bool)

(declare-fun res!52220 () Bool)

(assert (=> b!104822 (=> (not res!52220) (not e!68226))))

(assert (=> b!104822 (= res!52220 (containsKey!159 lt!53501 (_1!1188 (tuple2!2355 lt!52552 lt!52550))))))

(declare-fun b!104823 () Bool)

(assert (=> b!104823 (= e!68228 e!68225)))

(assert (=> b!104823 (= c!18197 (and ((_ is Cons!1588) (toList!779 lt!52555)) (= (_1!1188 (h!2184 (toList!779 lt!52555))) (_1!1188 (tuple2!2355 lt!52552 lt!52550)))))))

(declare-fun b!104824 () Bool)

(assert (=> b!104824 (= e!68228 call!10992)))

(assert (= (and d!28599 c!18194) b!104824))

(assert (= (and d!28599 (not c!18194)) b!104823))

(assert (= (and b!104823 c!18197) b!104817))

(assert (= (and b!104823 (not c!18197)) b!104819))

(assert (= (and b!104819 c!18195) b!104820))

(assert (= (and b!104819 (not c!18195)) b!104815))

(assert (= (or b!104820 b!104815) bm!10990))

(assert (= (or b!104817 bm!10990) bm!10991))

(assert (= (or b!104824 bm!10991) bm!10989))

(assert (= (and bm!10989 c!18196) b!104816))

(assert (= (and bm!10989 (not c!18196)) b!104818))

(assert (= (and d!28599 res!52221) b!104822))

(assert (= (and b!104822 res!52220) b!104821))

(declare-fun m!116705 () Bool)

(assert (=> d!28599 m!116705))

(declare-fun m!116707 () Bool)

(assert (=> d!28599 m!116707))

(declare-fun m!116709 () Bool)

(assert (=> b!104821 m!116709))

(declare-fun m!116711 () Bool)

(assert (=> b!104822 m!116711))

(declare-fun m!116713 () Bool)

(assert (=> b!104816 m!116713))

(declare-fun m!116715 () Bool)

(assert (=> bm!10989 m!116715))

(assert (=> d!27971 d!28599))

(declare-fun d!28601 () Bool)

(declare-fun res!52222 () Bool)

(declare-fun e!68229 () Bool)

(assert (=> d!28601 (=> res!52222 e!68229)))

(assert (=> d!28601 (= res!52222 (or ((_ is Nil!1589) lt!52810) ((_ is Nil!1589) (t!5646 lt!52810))))))

(assert (=> d!28601 (= (isStrictlySorted!295 lt!52810) e!68229)))

(declare-fun b!104825 () Bool)

(declare-fun e!68230 () Bool)

(assert (=> b!104825 (= e!68229 e!68230)))

(declare-fun res!52223 () Bool)

(assert (=> b!104825 (=> (not res!52223) (not e!68230))))

(assert (=> b!104825 (= res!52223 (bvslt (_1!1188 (h!2184 lt!52810)) (_1!1188 (h!2184 (t!5646 lt!52810)))))))

(declare-fun b!104826 () Bool)

(assert (=> b!104826 (= e!68230 (isStrictlySorted!295 (t!5646 lt!52810)))))

(assert (= (and d!28601 (not res!52222)) b!104825))

(assert (= (and b!104825 res!52223) b!104826))

(declare-fun m!116717 () Bool)

(assert (=> b!104826 m!116717))

(assert (=> d!27855 d!28601))

(declare-fun d!28603 () Bool)

(declare-fun res!52224 () Bool)

(declare-fun e!68231 () Bool)

(assert (=> d!28603 (=> res!52224 e!68231)))

(assert (=> d!28603 (= res!52224 (or ((_ is Nil!1589) (toList!779 (+!137 lt!52441 lt!52444))) ((_ is Nil!1589) (t!5646 (toList!779 (+!137 lt!52441 lt!52444))))))))

(assert (=> d!28603 (= (isStrictlySorted!295 (toList!779 (+!137 lt!52441 lt!52444))) e!68231)))

(declare-fun b!104827 () Bool)

(declare-fun e!68232 () Bool)

(assert (=> b!104827 (= e!68231 e!68232)))

(declare-fun res!52225 () Bool)

(assert (=> b!104827 (=> (not res!52225) (not e!68232))))

(assert (=> b!104827 (= res!52225 (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 lt!52444)))) (_1!1188 (h!2184 (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))))))))

(declare-fun b!104828 () Bool)

(assert (=> b!104828 (= e!68232 (isStrictlySorted!295 (t!5646 (toList!779 (+!137 lt!52441 lt!52444)))))))

(assert (= (and d!28603 (not res!52224)) b!104827))

(assert (= (and b!104827 res!52225) b!104828))

(assert (=> b!104828 m!115579))

(assert (=> d!27855 d!28603))

(declare-fun d!28605 () Bool)

(declare-fun res!52226 () Bool)

(declare-fun e!68233 () Bool)

(assert (=> d!28605 (=> res!52226 e!68233)))

(assert (=> d!28605 (= res!52226 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52624)))))

(assert (=> d!28605 (= (containsKey!159 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52624) e!68233)))

(declare-fun b!104829 () Bool)

(declare-fun e!68234 () Bool)

(assert (=> b!104829 (= e!68233 e!68234)))

(declare-fun res!52227 () Bool)

(assert (=> b!104829 (=> (not res!52227) (not e!68234))))

(assert (=> b!104829 (= res!52227 (and (or (not ((_ is Cons!1588) (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) (bvsle (_1!1188 (h!2184 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52624)) ((_ is Cons!1588) (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52624)))))

(declare-fun b!104830 () Bool)

(assert (=> b!104830 (= e!68234 (containsKey!159 (t!5646 (toList!779 (+!137 lt!52640 (tuple2!2355 lt!52645 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!52624))))

(assert (= (and d!28605 (not res!52226)) b!104829))

(assert (= (and b!104829 res!52227) b!104830))

(declare-fun m!116719 () Bool)

(assert (=> b!104830 m!116719))

(assert (=> d!27871 d!28605))

(declare-fun d!28607 () Bool)

(declare-fun e!68236 () Bool)

(assert (=> d!28607 e!68236))

(declare-fun res!52228 () Bool)

(assert (=> d!28607 (=> res!52228 e!68236)))

(declare-fun lt!53505 () Bool)

(assert (=> d!28607 (= res!52228 (not lt!53505))))

(declare-fun lt!53502 () Bool)

(assert (=> d!28607 (= lt!53505 lt!53502)))

(declare-fun lt!53503 () Unit!3132)

(declare-fun e!68235 () Unit!3132)

(assert (=> d!28607 (= lt!53503 e!68235)))

(declare-fun c!18198 () Bool)

(assert (=> d!28607 (= c!18198 lt!53502)))

(assert (=> d!28607 (= lt!53502 (containsKey!159 (toList!779 lt!52862) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28607 (= (contains!811 lt!52862 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53505)))

(declare-fun b!104831 () Bool)

(declare-fun lt!53504 () Unit!3132)

(assert (=> b!104831 (= e!68235 lt!53504)))

(assert (=> b!104831 (= lt!53504 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52862) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104831 (isDefined!108 (getValueByKey!156 (toList!779 lt!52862) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104832 () Bool)

(declare-fun Unit!3200 () Unit!3132)

(assert (=> b!104832 (= e!68235 Unit!3200)))

(declare-fun b!104833 () Bool)

(assert (=> b!104833 (= e!68236 (isDefined!108 (getValueByKey!156 (toList!779 lt!52862) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28607 c!18198) b!104831))

(assert (= (and d!28607 (not c!18198)) b!104832))

(assert (= (and d!28607 (not res!52228)) b!104833))

(declare-fun m!116721 () Bool)

(assert (=> d!28607 m!116721))

(declare-fun m!116723 () Bool)

(assert (=> b!104831 m!116723))

(assert (=> b!104831 m!114643))

(assert (=> b!104831 m!114643))

(declare-fun m!116725 () Bool)

(assert (=> b!104831 m!116725))

(assert (=> b!104833 m!114643))

(assert (=> b!104833 m!114643))

(assert (=> b!104833 m!116725))

(assert (=> d!27881 d!28607))

(declare-fun b!104836 () Bool)

(declare-fun e!68238 () Option!162)

(assert (=> b!104836 (= e!68238 (getValueByKey!156 (t!5646 lt!52861) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104835 () Bool)

(declare-fun e!68237 () Option!162)

(assert (=> b!104835 (= e!68237 e!68238)))

(declare-fun c!18200 () Bool)

(assert (=> b!104835 (= c!18200 (and ((_ is Cons!1588) lt!52861) (not (= (_1!1188 (h!2184 lt!52861)) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104834 () Bool)

(assert (=> b!104834 (= e!68237 (Some!161 (_2!1188 (h!2184 lt!52861))))))

(declare-fun c!18199 () Bool)

(declare-fun d!28609 () Bool)

(assert (=> d!28609 (= c!18199 (and ((_ is Cons!1588) lt!52861) (= (_1!1188 (h!2184 lt!52861)) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28609 (= (getValueByKey!156 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68237)))

(declare-fun b!104837 () Bool)

(assert (=> b!104837 (= e!68238 None!160)))

(assert (= (and d!28609 c!18199) b!104834))

(assert (= (and d!28609 (not c!18199)) b!104835))

(assert (= (and b!104835 c!18200) b!104836))

(assert (= (and b!104835 (not c!18200)) b!104837))

(declare-fun m!116727 () Bool)

(assert (=> b!104836 m!116727))

(assert (=> d!27881 d!28609))

(declare-fun d!28611 () Bool)

(assert (=> d!28611 (= (getValueByKey!156 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53506 () Unit!3132)

(assert (=> d!28611 (= lt!53506 (choose!648 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68239 () Bool)

(assert (=> d!28611 e!68239))

(declare-fun res!52229 () Bool)

(assert (=> d!28611 (=> (not res!52229) (not e!68239))))

(assert (=> d!28611 (= res!52229 (isStrictlySorted!295 lt!52861))))

(assert (=> d!28611 (= (lemmaContainsTupThenGetReturnValue!72 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53506)))

(declare-fun b!104838 () Bool)

(declare-fun res!52230 () Bool)

(assert (=> b!104838 (=> (not res!52230) (not e!68239))))

(assert (=> b!104838 (= res!52230 (containsKey!159 lt!52861 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104839 () Bool)

(assert (=> b!104839 (= e!68239 (contains!812 lt!52861 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28611 res!52229) b!104838))

(assert (= (and b!104838 res!52230) b!104839))

(assert (=> d!28611 m!114637))

(declare-fun m!116729 () Bool)

(assert (=> d!28611 m!116729))

(declare-fun m!116731 () Bool)

(assert (=> d!28611 m!116731))

(declare-fun m!116733 () Bool)

(assert (=> b!104838 m!116733))

(declare-fun m!116735 () Bool)

(assert (=> b!104839 m!116735))

(assert (=> d!27881 d!28611))

(declare-fun b!104840 () Bool)

(declare-fun e!68240 () List!1592)

(declare-fun call!10996 () List!1592)

(assert (=> b!104840 (= e!68240 call!10996)))

(declare-fun b!104841 () Bool)

(declare-fun e!68243 () List!1592)

(assert (=> b!104841 (= e!68243 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52633)) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104842 () Bool)

(declare-fun e!68241 () List!1592)

(declare-fun call!10997 () List!1592)

(assert (=> b!104842 (= e!68241 call!10997)))

(declare-fun d!28613 () Bool)

(declare-fun e!68242 () Bool)

(assert (=> d!28613 e!68242))

(declare-fun res!52232 () Bool)

(assert (=> d!28613 (=> (not res!52232) (not e!68242))))

(declare-fun lt!53507 () List!1592)

(assert (=> d!28613 (= res!52232 (isStrictlySorted!295 lt!53507))))

(declare-fun e!68244 () List!1592)

(assert (=> d!28613 (= lt!53507 e!68244)))

(declare-fun c!18201 () Bool)

(assert (=> d!28613 (= c!18201 (and ((_ is Cons!1588) (toList!779 lt!52633)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52633))) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28613 (isStrictlySorted!295 (toList!779 lt!52633))))

(assert (=> d!28613 (= (insertStrictlySorted!75 (toList!779 lt!52633) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53507)))

(declare-fun call!10995 () List!1592)

(declare-fun bm!10992 () Bool)

(assert (=> bm!10992 (= call!10995 ($colon$colon!79 e!68243 (ite c!18201 (h!2184 (toList!779 lt!52633)) (tuple2!2355 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18203 () Bool)

(assert (=> bm!10992 (= c!18203 c!18201)))

(declare-fun b!104843 () Bool)

(declare-fun c!18204 () Bool)

(declare-fun c!18202 () Bool)

(assert (=> b!104843 (= e!68243 (ite c!18204 (t!5646 (toList!779 lt!52633)) (ite c!18202 (Cons!1588 (h!2184 (toList!779 lt!52633)) (t!5646 (toList!779 lt!52633))) Nil!1589)))))

(declare-fun b!104844 () Bool)

(assert (=> b!104844 (= c!18202 (and ((_ is Cons!1588) (toList!779 lt!52633)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52633))) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104844 (= e!68241 e!68240)))

(declare-fun bm!10993 () Bool)

(assert (=> bm!10993 (= call!10996 call!10997)))

(declare-fun b!104845 () Bool)

(assert (=> b!104845 (= e!68240 call!10996)))

(declare-fun bm!10994 () Bool)

(assert (=> bm!10994 (= call!10997 call!10995)))

(declare-fun b!104846 () Bool)

(assert (=> b!104846 (= e!68242 (contains!812 lt!53507 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104847 () Bool)

(declare-fun res!52231 () Bool)

(assert (=> b!104847 (=> (not res!52231) (not e!68242))))

(assert (=> b!104847 (= res!52231 (containsKey!159 lt!53507 (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104848 () Bool)

(assert (=> b!104848 (= e!68244 e!68241)))

(assert (=> b!104848 (= c!18204 (and ((_ is Cons!1588) (toList!779 lt!52633)) (= (_1!1188 (h!2184 (toList!779 lt!52633))) (_1!1188 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104849 () Bool)

(assert (=> b!104849 (= e!68244 call!10995)))

(assert (= (and d!28613 c!18201) b!104849))

(assert (= (and d!28613 (not c!18201)) b!104848))

(assert (= (and b!104848 c!18204) b!104842))

(assert (= (and b!104848 (not c!18204)) b!104844))

(assert (= (and b!104844 c!18202) b!104845))

(assert (= (and b!104844 (not c!18202)) b!104840))

(assert (= (or b!104845 b!104840) bm!10993))

(assert (= (or b!104842 bm!10993) bm!10994))

(assert (= (or b!104849 bm!10994) bm!10992))

(assert (= (and bm!10992 c!18203) b!104841))

(assert (= (and bm!10992 (not c!18203)) b!104843))

(assert (= (and d!28613 res!52232) b!104847))

(assert (= (and b!104847 res!52231) b!104846))

(declare-fun m!116737 () Bool)

(assert (=> d!28613 m!116737))

(declare-fun m!116739 () Bool)

(assert (=> d!28613 m!116739))

(declare-fun m!116741 () Bool)

(assert (=> b!104846 m!116741))

(declare-fun m!116743 () Bool)

(assert (=> b!104847 m!116743))

(declare-fun m!116745 () Bool)

(assert (=> b!104841 m!116745))

(declare-fun m!116747 () Bool)

(assert (=> bm!10992 m!116747))

(assert (=> d!27881 d!28613))

(declare-fun call!10998 () (_ BitVec 32))

(declare-fun bm!10995 () Bool)

(assert (=> bm!10995 (= call!10998 (arrayCountValidKeys!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104851 () Bool)

(declare-fun e!68245 () (_ BitVec 32))

(assert (=> b!104851 (= e!68245 #b00000000000000000000000000000000)))

(declare-fun b!104852 () Bool)

(declare-fun e!68246 () (_ BitVec 32))

(assert (=> b!104852 (= e!68245 e!68246)))

(declare-fun c!18205 () Bool)

(assert (=> b!104852 (= c!18205 (validKeyInArray!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104853 () Bool)

(assert (=> b!104853 (= e!68246 call!10998)))

(declare-fun d!28615 () Bool)

(declare-fun lt!53508 () (_ BitVec 32))

(assert (=> d!28615 (and (bvsge lt!53508 #b00000000000000000000000000000000) (bvsle lt!53508 (bvsub (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!28615 (= lt!53508 e!68245)))

(declare-fun c!18206 () Bool)

(assert (=> d!28615 (= c!18206 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28615 (and (bvsle #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2302 (_keys!4262 newMap!16)) (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(assert (=> d!28615 (= (arrayCountValidKeys!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) lt!53508)))

(declare-fun b!104850 () Bool)

(assert (=> b!104850 (= e!68246 (bvadd #b00000000000000000000000000000001 call!10998))))

(assert (= (and d!28615 c!18206) b!104851))

(assert (= (and d!28615 (not c!18206)) b!104852))

(assert (= (and b!104852 c!18205) b!104850))

(assert (= (and b!104852 (not c!18205)) b!104853))

(assert (= (or b!104850 b!104853) bm!10995))

(declare-fun m!116749 () Bool)

(assert (=> bm!10995 m!116749))

(declare-fun m!116751 () Bool)

(assert (=> b!104852 m!116751))

(assert (=> b!104852 m!116751))

(declare-fun m!116753 () Bool)

(assert (=> b!104852 m!116753))

(assert (=> d!27959 d!28615))

(declare-fun call!11005 () ListLongMap!1527)

(declare-fun bm!10996 () Bool)

(assert (=> bm!10996 (= call!11005 (getCurrentListMapNoExtraKeys!104 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!10997 () Bool)

(declare-fun call!11002 () ListLongMap!1527)

(declare-fun call!11003 () ListLongMap!1527)

(assert (=> bm!10997 (= call!11002 call!11003)))

(declare-fun b!104854 () Bool)

(declare-fun e!68247 () Unit!3132)

(declare-fun lt!53523 () Unit!3132)

(assert (=> b!104854 (= e!68247 lt!53523)))

(declare-fun lt!53525 () ListLongMap!1527)

(assert (=> b!104854 (= lt!53525 (getCurrentListMapNoExtraKeys!104 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53530 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53530 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53509 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53509 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53527 () Unit!3132)

(assert (=> b!104854 (= lt!53527 (addStillContains!73 lt!53525 lt!53530 (zeroValue!2437 newMap!16) lt!53509))))

(assert (=> b!104854 (contains!811 (+!137 lt!53525 (tuple2!2355 lt!53530 (zeroValue!2437 newMap!16))) lt!53509)))

(declare-fun lt!53514 () Unit!3132)

(assert (=> b!104854 (= lt!53514 lt!53527)))

(declare-fun lt!53519 () ListLongMap!1527)

(assert (=> b!104854 (= lt!53519 (getCurrentListMapNoExtraKeys!104 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53517 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53517 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53521 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53521 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53510 () Unit!3132)

(assert (=> b!104854 (= lt!53510 (addApplyDifferent!73 lt!53519 lt!53517 (minValue!2437 newMap!16) lt!53521))))

(assert (=> b!104854 (= (apply!97 (+!137 lt!53519 (tuple2!2355 lt!53517 (minValue!2437 newMap!16))) lt!53521) (apply!97 lt!53519 lt!53521))))

(declare-fun lt!53529 () Unit!3132)

(assert (=> b!104854 (= lt!53529 lt!53510)))

(declare-fun lt!53524 () ListLongMap!1527)

(assert (=> b!104854 (= lt!53524 (getCurrentListMapNoExtraKeys!104 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53522 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53522 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53512 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53512 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53528 () Unit!3132)

(assert (=> b!104854 (= lt!53528 (addApplyDifferent!73 lt!53524 lt!53522 (zeroValue!2437 newMap!16) lt!53512))))

(assert (=> b!104854 (= (apply!97 (+!137 lt!53524 (tuple2!2355 lt!53522 (zeroValue!2437 newMap!16))) lt!53512) (apply!97 lt!53524 lt!53512))))

(declare-fun lt!53511 () Unit!3132)

(assert (=> b!104854 (= lt!53511 lt!53528)))

(declare-fun lt!53518 () ListLongMap!1527)

(assert (=> b!104854 (= lt!53518 (getCurrentListMapNoExtraKeys!104 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53520 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53520 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53516 () (_ BitVec 64))

(assert (=> b!104854 (= lt!53516 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!104854 (= lt!53523 (addApplyDifferent!73 lt!53518 lt!53520 (minValue!2437 newMap!16) lt!53516))))

(assert (=> b!104854 (= (apply!97 (+!137 lt!53518 (tuple2!2355 lt!53520 (minValue!2437 newMap!16))) lt!53516) (apply!97 lt!53518 lt!53516))))

(declare-fun b!104855 () Bool)

(declare-fun e!68251 () Bool)

(declare-fun call!10999 () Bool)

(assert (=> b!104855 (= e!68251 (not call!10999))))

(declare-fun e!68252 () Bool)

(declare-fun b!104856 () Bool)

(declare-fun lt!53526 () ListLongMap!1527)

(assert (=> b!104856 (= e!68252 (= (apply!97 lt!53526 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104856 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))))))))

(assert (=> b!104856 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun b!104857 () Bool)

(declare-fun e!68253 () ListLongMap!1527)

(declare-fun call!11000 () ListLongMap!1527)

(assert (=> b!104857 (= e!68253 call!11000)))

(declare-fun b!104858 () Bool)

(declare-fun Unit!3201 () Unit!3132)

(assert (=> b!104858 (= e!68247 Unit!3201)))

(declare-fun b!104859 () Bool)

(declare-fun e!68250 () ListLongMap!1527)

(assert (=> b!104859 (= e!68250 call!11002)))

(declare-fun b!104861 () Bool)

(declare-fun e!68248 () Bool)

(declare-fun call!11001 () Bool)

(assert (=> b!104861 (= e!68248 (not call!11001))))

(declare-fun b!104862 () Bool)

(declare-fun e!68249 () Bool)

(assert (=> b!104862 (= e!68249 e!68252)))

(declare-fun res!52235 () Bool)

(assert (=> b!104862 (=> (not res!52235) (not e!68252))))

(assert (=> b!104862 (= res!52235 (contains!811 lt!53526 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!104862 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun e!68256 () Bool)

(declare-fun b!104863 () Bool)

(assert (=> b!104863 (= e!68256 (validKeyInArray!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104864 () Bool)

(declare-fun res!52233 () Bool)

(declare-fun e!68254 () Bool)

(assert (=> b!104864 (=> (not res!52233) (not e!68254))))

(assert (=> b!104864 (= res!52233 e!68248)))

(declare-fun c!18207 () Bool)

(assert (=> b!104864 (= c!18207 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!18210 () Bool)

(declare-fun call!11004 () ListLongMap!1527)

(declare-fun bm!10998 () Bool)

(declare-fun c!18212 () Bool)

(assert (=> bm!10998 (= call!11004 (+!137 (ite c!18210 call!11005 (ite c!18212 call!11003 call!11002)) (ite (or c!18210 c!18212) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!104865 () Bool)

(declare-fun e!68255 () ListLongMap!1527)

(assert (=> b!104865 (= e!68255 e!68253)))

(assert (=> b!104865 (= c!18212 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104866 () Bool)

(assert (=> b!104866 (= e!68250 call!11000)))

(declare-fun bm!10999 () Bool)

(assert (=> bm!10999 (= call!11000 call!11004)))

(declare-fun b!104867 () Bool)

(declare-fun c!18211 () Bool)

(assert (=> b!104867 (= c!18211 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104867 (= e!68253 e!68250)))

(declare-fun b!104868 () Bool)

(assert (=> b!104868 (= e!68255 (+!137 call!11004 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!11000 () Bool)

(assert (=> bm!11000 (= call!11003 call!11005)))

(declare-fun b!104869 () Bool)

(declare-fun res!52241 () Bool)

(assert (=> b!104869 (=> (not res!52241) (not e!68254))))

(assert (=> b!104869 (= res!52241 e!68249)))

(declare-fun res!52237 () Bool)

(assert (=> b!104869 (=> res!52237 e!68249)))

(declare-fun e!68257 () Bool)

(assert (=> b!104869 (= res!52237 (not e!68257))))

(declare-fun res!52236 () Bool)

(assert (=> b!104869 (=> (not res!52236) (not e!68257))))

(assert (=> b!104869 (= res!52236 (bvslt #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun b!104870 () Bool)

(declare-fun e!68259 () Bool)

(assert (=> b!104870 (= e!68259 (= (apply!97 lt!53526 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!11001 () Bool)

(assert (=> bm!11001 (= call!11001 (contains!811 lt!53526 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11002 () Bool)

(assert (=> bm!11002 (= call!10999 (contains!811 lt!53526 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104860 () Bool)

(assert (=> b!104860 (= e!68251 e!68259)))

(declare-fun res!52239 () Bool)

(assert (=> b!104860 (= res!52239 call!10999)))

(assert (=> b!104860 (=> (not res!52239) (not e!68259))))

(declare-fun d!28617 () Bool)

(assert (=> d!28617 e!68254))

(declare-fun res!52240 () Bool)

(assert (=> d!28617 (=> (not res!52240) (not e!68254))))

(assert (=> d!28617 (= res!52240 (or (bvsge #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))))

(declare-fun lt!53513 () ListLongMap!1527)

(assert (=> d!28617 (= lt!53526 lt!53513)))

(declare-fun lt!53515 () Unit!3132)

(assert (=> d!28617 (= lt!53515 e!68247)))

(declare-fun c!18209 () Bool)

(assert (=> d!28617 (= c!18209 e!68256)))

(declare-fun res!52238 () Bool)

(assert (=> d!28617 (=> (not res!52238) (not e!68256))))

(assert (=> d!28617 (= res!52238 (bvslt #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(assert (=> d!28617 (= lt!53513 e!68255)))

(assert (=> d!28617 (= c!18210 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28617 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28617 (= (getCurrentListMap!467 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53526)))

(declare-fun b!104871 () Bool)

(assert (=> b!104871 (= e!68257 (validKeyInArray!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!104872 () Bool)

(declare-fun e!68258 () Bool)

(assert (=> b!104872 (= e!68248 e!68258)))

(declare-fun res!52234 () Bool)

(assert (=> b!104872 (= res!52234 call!11001)))

(assert (=> b!104872 (=> (not res!52234) (not e!68258))))

(declare-fun b!104873 () Bool)

(assert (=> b!104873 (= e!68258 (= (apply!97 lt!53526 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!104874 () Bool)

(assert (=> b!104874 (= e!68254 e!68251)))

(declare-fun c!18208 () Bool)

(assert (=> b!104874 (= c!18208 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28617 c!18210) b!104868))

(assert (= (and d!28617 (not c!18210)) b!104865))

(assert (= (and b!104865 c!18212) b!104857))

(assert (= (and b!104865 (not c!18212)) b!104867))

(assert (= (and b!104867 c!18211) b!104866))

(assert (= (and b!104867 (not c!18211)) b!104859))

(assert (= (or b!104866 b!104859) bm!10997))

(assert (= (or b!104857 bm!10997) bm!11000))

(assert (= (or b!104857 b!104866) bm!10999))

(assert (= (or b!104868 bm!11000) bm!10996))

(assert (= (or b!104868 bm!10999) bm!10998))

(assert (= (and d!28617 res!52238) b!104863))

(assert (= (and d!28617 c!18209) b!104854))

(assert (= (and d!28617 (not c!18209)) b!104858))

(assert (= (and d!28617 res!52240) b!104869))

(assert (= (and b!104869 res!52236) b!104871))

(assert (= (and b!104869 (not res!52237)) b!104862))

(assert (= (and b!104862 res!52235) b!104856))

(assert (= (and b!104869 res!52241) b!104864))

(assert (= (and b!104864 c!18207) b!104872))

(assert (= (and b!104864 (not c!18207)) b!104861))

(assert (= (and b!104872 res!52234) b!104873))

(assert (= (or b!104872 b!104861) bm!11001))

(assert (= (and b!104864 res!52233) b!104874))

(assert (= (and b!104874 c!18208) b!104860))

(assert (= (and b!104874 (not c!18208)) b!104855))

(assert (= (and b!104860 res!52239) b!104870))

(assert (= (or b!104860 b!104855) bm!11002))

(declare-fun b_lambda!4675 () Bool)

(assert (=> (not b_lambda!4675) (not b!104856)))

(assert (=> b!104856 t!5659))

(declare-fun b_and!6473 () Bool)

(assert (= b_and!6469 (and (=> t!5659 result!3431) b_and!6473)))

(assert (=> b!104856 t!5661))

(declare-fun b_and!6475 () Bool)

(assert (= b_and!6471 (and (=> t!5661 result!3433) b_and!6475)))

(declare-fun m!116755 () Bool)

(assert (=> b!104868 m!116755))

(assert (=> d!28617 m!114321))

(declare-fun m!116757 () Bool)

(assert (=> bm!10996 m!116757))

(assert (=> b!104871 m!116751))

(assert (=> b!104871 m!116751))

(assert (=> b!104871 m!116753))

(declare-fun m!116759 () Bool)

(assert (=> bm!11002 m!116759))

(assert (=> b!104862 m!116751))

(assert (=> b!104862 m!116751))

(declare-fun m!116761 () Bool)

(assert (=> b!104862 m!116761))

(assert (=> b!104856 m!114389))

(assert (=> b!104856 m!116751))

(declare-fun m!116763 () Bool)

(assert (=> b!104856 m!116763))

(assert (=> b!104856 m!116751))

(declare-fun m!116765 () Bool)

(assert (=> b!104856 m!116765))

(assert (=> b!104856 m!116765))

(assert (=> b!104856 m!114389))

(declare-fun m!116767 () Bool)

(assert (=> b!104856 m!116767))

(declare-fun m!116769 () Bool)

(assert (=> bm!10998 m!116769))

(declare-fun m!116771 () Bool)

(assert (=> b!104873 m!116771))

(declare-fun m!116773 () Bool)

(assert (=> bm!11001 m!116773))

(declare-fun m!116775 () Bool)

(assert (=> b!104854 m!116775))

(declare-fun m!116777 () Bool)

(assert (=> b!104854 m!116777))

(declare-fun m!116779 () Bool)

(assert (=> b!104854 m!116779))

(assert (=> b!104854 m!116751))

(declare-fun m!116781 () Bool)

(assert (=> b!104854 m!116781))

(assert (=> b!104854 m!116757))

(declare-fun m!116783 () Bool)

(assert (=> b!104854 m!116783))

(declare-fun m!116785 () Bool)

(assert (=> b!104854 m!116785))

(declare-fun m!116787 () Bool)

(assert (=> b!104854 m!116787))

(declare-fun m!116789 () Bool)

(assert (=> b!104854 m!116789))

(declare-fun m!116791 () Bool)

(assert (=> b!104854 m!116791))

(declare-fun m!116793 () Bool)

(assert (=> b!104854 m!116793))

(assert (=> b!104854 m!116787))

(declare-fun m!116795 () Bool)

(assert (=> b!104854 m!116795))

(assert (=> b!104854 m!116781))

(declare-fun m!116797 () Bool)

(assert (=> b!104854 m!116797))

(assert (=> b!104854 m!116779))

(declare-fun m!116799 () Bool)

(assert (=> b!104854 m!116799))

(declare-fun m!116801 () Bool)

(assert (=> b!104854 m!116801))

(assert (=> b!104854 m!116791))

(declare-fun m!116803 () Bool)

(assert (=> b!104854 m!116803))

(assert (=> b!104863 m!116751))

(assert (=> b!104863 m!116751))

(assert (=> b!104863 m!116753))

(declare-fun m!116805 () Bool)

(assert (=> b!104870 m!116805))

(assert (=> d!27959 d!28617))

(declare-fun d!28619 () Bool)

(declare-fun e!68261 () Bool)

(assert (=> d!28619 e!68261))

(declare-fun res!52242 () Bool)

(assert (=> d!28619 (=> res!52242 e!68261)))

(declare-fun lt!53534 () Bool)

(assert (=> d!28619 (= res!52242 (not lt!53534))))

(declare-fun lt!53531 () Bool)

(assert (=> d!28619 (= lt!53534 lt!53531)))

(declare-fun lt!53532 () Unit!3132)

(declare-fun e!68260 () Unit!3132)

(assert (=> d!28619 (= lt!53532 e!68260)))

(declare-fun c!18213 () Bool)

(assert (=> d!28619 (= c!18213 lt!53531)))

(assert (=> d!28619 (= lt!53531 (containsKey!159 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28619 (= (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53534)))

(declare-fun b!104875 () Bool)

(declare-fun lt!53533 () Unit!3132)

(assert (=> b!104875 (= e!68260 lt!53533)))

(assert (=> b!104875 (= lt!53533 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104875 (isDefined!108 (getValueByKey!156 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104876 () Bool)

(declare-fun Unit!3202 () Unit!3132)

(assert (=> b!104876 (= e!68260 Unit!3202)))

(declare-fun b!104877 () Bool)

(assert (=> b!104877 (= e!68261 (isDefined!108 (getValueByKey!156 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!28619 c!18213) b!104875))

(assert (= (and d!28619 (not c!18213)) b!104876))

(assert (= (and d!28619 (not res!52242)) b!104877))

(assert (=> d!28619 m!113915))

(declare-fun m!116807 () Bool)

(assert (=> d!28619 m!116807))

(assert (=> b!104875 m!113915))

(declare-fun m!116809 () Bool)

(assert (=> b!104875 m!116809))

(assert (=> b!104875 m!113915))

(declare-fun m!116811 () Bool)

(assert (=> b!104875 m!116811))

(assert (=> b!104875 m!116811))

(declare-fun m!116813 () Bool)

(assert (=> b!104875 m!116813))

(assert (=> b!104877 m!113915))

(assert (=> b!104877 m!116811))

(assert (=> b!104877 m!116811))

(assert (=> b!104877 m!116813))

(assert (=> d!27959 d!28619))

(assert (=> d!27959 d!27817))

(declare-fun d!28621 () Bool)

(assert (=> d!28621 (= (arrayCountValidKeys!0 lt!53024 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!53537 () Unit!3132)

(declare-fun choose!2 (array!4317 (_ BitVec 32)) Unit!3132)

(assert (=> d!28621 (= lt!53537 (choose!2 lt!53024 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))

(declare-fun e!68264 () Bool)

(assert (=> d!28621 e!68264))

(declare-fun res!52247 () Bool)

(assert (=> d!28621 (=> (not res!52247) (not e!68264))))

(assert (=> d!28621 (= res!52247 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 lt!53024))))))

(assert (=> d!28621 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!53024 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))) lt!53537)))

(declare-fun b!104882 () Bool)

(declare-fun res!52248 () Bool)

(assert (=> b!104882 (=> (not res!52248) (not e!68264))))

(assert (=> b!104882 (= res!52248 (validKeyInArray!0 (select (arr!2048 lt!53024) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(declare-fun b!104883 () Bool)

(assert (=> b!104883 (= e!68264 (bvslt (size!2302 lt!53024) #b01111111111111111111111111111111))))

(assert (= (and d!28621 res!52247) b!104882))

(assert (= (and b!104882 res!52248) b!104883))

(assert (=> d!28621 m!114931))

(declare-fun m!116815 () Bool)

(assert (=> d!28621 m!116815))

(declare-fun m!116817 () Bool)

(assert (=> b!104882 m!116817))

(assert (=> b!104882 m!116817))

(declare-fun m!116819 () Bool)

(assert (=> b!104882 m!116819))

(assert (=> d!27959 d!28621))

(declare-fun bm!11003 () Bool)

(declare-fun call!11006 () (_ BitVec 32))

(assert (=> bm!11003 (= call!11006 (arrayCountValidKeys!0 lt!53024 (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001) (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001)))))

(declare-fun b!104885 () Bool)

(declare-fun e!68265 () (_ BitVec 32))

(assert (=> b!104885 (= e!68265 #b00000000000000000000000000000000)))

(declare-fun b!104886 () Bool)

(declare-fun e!68266 () (_ BitVec 32))

(assert (=> b!104886 (= e!68265 e!68266)))

(declare-fun c!18214 () Bool)

(assert (=> b!104886 (= c!18214 (validKeyInArray!0 (select (arr!2048 lt!53024) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(declare-fun b!104887 () Bool)

(assert (=> b!104887 (= e!68266 call!11006)))

(declare-fun d!28623 () Bool)

(declare-fun lt!53538 () (_ BitVec 32))

(assert (=> d!28623 (and (bvsge lt!53538 #b00000000000000000000000000000000) (bvsle lt!53538 (bvsub (size!2302 lt!53024) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(assert (=> d!28623 (= lt!53538 e!68265)))

(declare-fun c!18215 () Bool)

(assert (=> d!28623 (= c!18215 (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001)))))

(assert (=> d!28623 (and (bvsle (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001)) (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001) (size!2302 lt!53024)))))

(assert (=> d!28623 (= (arrayCountValidKeys!0 lt!53024 (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (bvadd (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000001)) lt!53538)))

(declare-fun b!104884 () Bool)

(assert (=> b!104884 (= e!68266 (bvadd #b00000000000000000000000000000001 call!11006))))

(assert (= (and d!28623 c!18215) b!104885))

(assert (= (and d!28623 (not c!18215)) b!104886))

(assert (= (and b!104886 c!18214) b!104884))

(assert (= (and b!104886 (not c!18214)) b!104887))

(assert (= (or b!104884 b!104887) bm!11003))

(declare-fun m!116821 () Bool)

(assert (=> bm!11003 m!116821))

(assert (=> b!104886 m!116817))

(assert (=> b!104886 m!116817))

(assert (=> b!104886 m!116819))

(assert (=> d!27959 d!28623))

(declare-fun d!28625 () Bool)

(declare-fun e!68267 () Bool)

(assert (=> d!28625 e!68267))

(declare-fun res!52249 () Bool)

(assert (=> d!28625 (=> (not res!52249) (not e!68267))))

(assert (=> d!28625 (= res!52249 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 lt!53016))))))

(declare-fun lt!53539 () Unit!3132)

(assert (=> d!28625 (= lt!53539 (choose!652 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (defaultEntry!2560 newMap!16)))))

(assert (=> d!28625 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28625 (= (lemmaValidKeyInArrayIsInListMap!106 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (defaultEntry!2560 newMap!16)) lt!53539)))

(declare-fun b!104888 () Bool)

(assert (=> b!104888 (= e!68267 (contains!811 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 lt!53016) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(assert (= (and d!28625 res!52249) b!104888))

(declare-fun m!116823 () Bool)

(assert (=> d!28625 m!116823))

(assert (=> d!28625 m!114321))

(assert (=> b!104888 m!114923))

(declare-fun m!116825 () Bool)

(assert (=> b!104888 m!116825))

(assert (=> b!104888 m!114923))

(assert (=> b!104888 m!116825))

(declare-fun m!116827 () Bool)

(assert (=> b!104888 m!116827))

(assert (=> d!27959 d!28625))

(declare-fun d!28627 () Bool)

(declare-fun e!68270 () Bool)

(assert (=> d!28627 e!68270))

(declare-fun res!52252 () Bool)

(assert (=> d!28627 (=> (not res!52252) (not e!68270))))

(assert (=> d!28627 (= res!52252 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 (_keys!4262 newMap!16)))))))

(declare-fun lt!53542 () Unit!3132)

(declare-fun choose!102 ((_ BitVec 64) array!4317 (_ BitVec 32) (_ BitVec 32)) Unit!3132)

(assert (=> d!28627 (= lt!53542 (choose!102 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (mask!6696 newMap!16)))))

(assert (=> d!28627 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28627 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (mask!6696 newMap!16)) lt!53542)))

(declare-fun b!104891 () Bool)

(assert (=> b!104891 (= e!68270 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (mask!6696 newMap!16)))))

(assert (= (and d!28627 res!52252) b!104891))

(assert (=> d!28627 m!113915))

(declare-fun m!116829 () Bool)

(assert (=> d!28627 m!116829))

(assert (=> d!28627 m!114321))

(assert (=> b!104891 m!114913))

(assert (=> b!104891 m!114901))

(assert (=> d!27959 d!28627))

(declare-fun d!28629 () Bool)

(declare-fun e!68273 () Bool)

(assert (=> d!28629 e!68273))

(declare-fun res!52255 () Bool)

(assert (=> d!28629 (=> (not res!52255) (not e!68273))))

(assert (=> d!28629 (= res!52255 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 (_keys!4262 newMap!16)))))))

(declare-fun lt!53545 () Unit!3132)

(declare-fun choose!41 (array!4317 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1593) Unit!3132)

(assert (=> d!28629 (= lt!53545 (choose!41 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) lt!53030 lt!53012))))

(assert (=> d!28629 (bvslt (size!2302 (_keys!4262 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!28629 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4262 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) lt!53030 lt!53012) lt!53545)))

(declare-fun b!104894 () Bool)

(assert (=> b!104894 (= e!68273 (arrayNoDuplicates!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) lt!53030 lt!53012))))

(assert (= (and d!28629 res!52255) b!104894))

(assert (=> d!28629 m!113915))

(declare-fun m!116831 () Bool)

(assert (=> d!28629 m!116831))

(assert (=> b!104894 m!114913))

(assert (=> b!104894 m!114897))

(assert (=> d!27959 d!28629))

(declare-fun bm!11004 () Bool)

(declare-fun call!11013 () ListLongMap!1527)

(assert (=> bm!11004 (= call!11013 (getCurrentListMapNoExtraKeys!104 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!11005 () Bool)

(declare-fun call!11010 () ListLongMap!1527)

(declare-fun call!11011 () ListLongMap!1527)

(assert (=> bm!11005 (= call!11010 call!11011)))

(declare-fun b!104895 () Bool)

(declare-fun e!68274 () Unit!3132)

(declare-fun lt!53560 () Unit!3132)

(assert (=> b!104895 (= e!68274 lt!53560)))

(declare-fun lt!53562 () ListLongMap!1527)

(assert (=> b!104895 (= lt!53562 (getCurrentListMapNoExtraKeys!104 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53567 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53567 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53546 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53546 (select (arr!2048 lt!53016) #b00000000000000000000000000000000))))

(declare-fun lt!53564 () Unit!3132)

(assert (=> b!104895 (= lt!53564 (addStillContains!73 lt!53562 lt!53567 (zeroValue!2437 newMap!16) lt!53546))))

(assert (=> b!104895 (contains!811 (+!137 lt!53562 (tuple2!2355 lt!53567 (zeroValue!2437 newMap!16))) lt!53546)))

(declare-fun lt!53551 () Unit!3132)

(assert (=> b!104895 (= lt!53551 lt!53564)))

(declare-fun lt!53556 () ListLongMap!1527)

(assert (=> b!104895 (= lt!53556 (getCurrentListMapNoExtraKeys!104 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53554 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53554 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53558 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53558 (select (arr!2048 lt!53016) #b00000000000000000000000000000000))))

(declare-fun lt!53547 () Unit!3132)

(assert (=> b!104895 (= lt!53547 (addApplyDifferent!73 lt!53556 lt!53554 (minValue!2437 newMap!16) lt!53558))))

(assert (=> b!104895 (= (apply!97 (+!137 lt!53556 (tuple2!2355 lt!53554 (minValue!2437 newMap!16))) lt!53558) (apply!97 lt!53556 lt!53558))))

(declare-fun lt!53566 () Unit!3132)

(assert (=> b!104895 (= lt!53566 lt!53547)))

(declare-fun lt!53561 () ListLongMap!1527)

(assert (=> b!104895 (= lt!53561 (getCurrentListMapNoExtraKeys!104 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53559 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53559 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53549 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53549 (select (arr!2048 lt!53016) #b00000000000000000000000000000000))))

(declare-fun lt!53565 () Unit!3132)

(assert (=> b!104895 (= lt!53565 (addApplyDifferent!73 lt!53561 lt!53559 (zeroValue!2437 newMap!16) lt!53549))))

(assert (=> b!104895 (= (apply!97 (+!137 lt!53561 (tuple2!2355 lt!53559 (zeroValue!2437 newMap!16))) lt!53549) (apply!97 lt!53561 lt!53549))))

(declare-fun lt!53548 () Unit!3132)

(assert (=> b!104895 (= lt!53548 lt!53565)))

(declare-fun lt!53555 () ListLongMap!1527)

(assert (=> b!104895 (= lt!53555 (getCurrentListMapNoExtraKeys!104 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53557 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53557 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53553 () (_ BitVec 64))

(assert (=> b!104895 (= lt!53553 (select (arr!2048 lt!53016) #b00000000000000000000000000000000))))

(assert (=> b!104895 (= lt!53560 (addApplyDifferent!73 lt!53555 lt!53557 (minValue!2437 newMap!16) lt!53553))))

(assert (=> b!104895 (= (apply!97 (+!137 lt!53555 (tuple2!2355 lt!53557 (minValue!2437 newMap!16))) lt!53553) (apply!97 lt!53555 lt!53553))))

(declare-fun b!104896 () Bool)

(declare-fun e!68278 () Bool)

(declare-fun call!11007 () Bool)

(assert (=> b!104896 (= e!68278 (not call!11007))))

(declare-fun lt!53563 () ListLongMap!1527)

(declare-fun e!68279 () Bool)

(declare-fun b!104897 () Bool)

(assert (=> b!104897 (= e!68279 (= (apply!97 lt!53563 (select (arr!2048 lt!53016) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 lt!53023) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104897 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 lt!53023)))))

(assert (=> b!104897 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 lt!53016)))))

(declare-fun b!104898 () Bool)

(declare-fun e!68280 () ListLongMap!1527)

(declare-fun call!11008 () ListLongMap!1527)

(assert (=> b!104898 (= e!68280 call!11008)))

(declare-fun b!104899 () Bool)

(declare-fun Unit!3203 () Unit!3132)

(assert (=> b!104899 (= e!68274 Unit!3203)))

(declare-fun b!104900 () Bool)

(declare-fun e!68277 () ListLongMap!1527)

(assert (=> b!104900 (= e!68277 call!11010)))

(declare-fun b!104902 () Bool)

(declare-fun e!68275 () Bool)

(declare-fun call!11009 () Bool)

(assert (=> b!104902 (= e!68275 (not call!11009))))

(declare-fun b!104903 () Bool)

(declare-fun e!68276 () Bool)

(assert (=> b!104903 (= e!68276 e!68279)))

(declare-fun res!52258 () Bool)

(assert (=> b!104903 (=> (not res!52258) (not e!68279))))

(assert (=> b!104903 (= res!52258 (contains!811 lt!53563 (select (arr!2048 lt!53016) #b00000000000000000000000000000000)))))

(assert (=> b!104903 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 lt!53016)))))

(declare-fun b!104904 () Bool)

(declare-fun e!68283 () Bool)

(assert (=> b!104904 (= e!68283 (validKeyInArray!0 (select (arr!2048 lt!53016) #b00000000000000000000000000000000)))))

(declare-fun b!104905 () Bool)

(declare-fun res!52256 () Bool)

(declare-fun e!68281 () Bool)

(assert (=> b!104905 (=> (not res!52256) (not e!68281))))

(assert (=> b!104905 (= res!52256 e!68275)))

(declare-fun c!18216 () Bool)

(assert (=> b!104905 (= c!18216 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!11006 () Bool)

(declare-fun c!18219 () Bool)

(declare-fun call!11012 () ListLongMap!1527)

(declare-fun c!18221 () Bool)

(assert (=> bm!11006 (= call!11012 (+!137 (ite c!18219 call!11013 (ite c!18221 call!11011 call!11010)) (ite (or c!18219 c!18221) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!104906 () Bool)

(declare-fun e!68282 () ListLongMap!1527)

(assert (=> b!104906 (= e!68282 e!68280)))

(assert (=> b!104906 (= c!18221 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104907 () Bool)

(assert (=> b!104907 (= e!68277 call!11008)))

(declare-fun bm!11007 () Bool)

(assert (=> bm!11007 (= call!11008 call!11012)))

(declare-fun b!104908 () Bool)

(declare-fun c!18220 () Bool)

(assert (=> b!104908 (= c!18220 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104908 (= e!68280 e!68277)))

(declare-fun b!104909 () Bool)

(assert (=> b!104909 (= e!68282 (+!137 call!11012 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!11008 () Bool)

(assert (=> bm!11008 (= call!11011 call!11013)))

(declare-fun b!104910 () Bool)

(declare-fun res!52264 () Bool)

(assert (=> b!104910 (=> (not res!52264) (not e!68281))))

(assert (=> b!104910 (= res!52264 e!68276)))

(declare-fun res!52260 () Bool)

(assert (=> b!104910 (=> res!52260 e!68276)))

(declare-fun e!68284 () Bool)

(assert (=> b!104910 (= res!52260 (not e!68284))))

(declare-fun res!52259 () Bool)

(assert (=> b!104910 (=> (not res!52259) (not e!68284))))

(assert (=> b!104910 (= res!52259 (bvslt #b00000000000000000000000000000000 (size!2302 lt!53016)))))

(declare-fun b!104911 () Bool)

(declare-fun e!68286 () Bool)

(assert (=> b!104911 (= e!68286 (= (apply!97 lt!53563 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!11009 () Bool)

(assert (=> bm!11009 (= call!11009 (contains!811 lt!53563 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11010 () Bool)

(assert (=> bm!11010 (= call!11007 (contains!811 lt!53563 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104901 () Bool)

(assert (=> b!104901 (= e!68278 e!68286)))

(declare-fun res!52262 () Bool)

(assert (=> b!104901 (= res!52262 call!11007)))

(assert (=> b!104901 (=> (not res!52262) (not e!68286))))

(declare-fun d!28631 () Bool)

(assert (=> d!28631 e!68281))

(declare-fun res!52263 () Bool)

(assert (=> d!28631 (=> (not res!52263) (not e!68281))))

(assert (=> d!28631 (= res!52263 (or (bvsge #b00000000000000000000000000000000 (size!2302 lt!53016)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 lt!53016)))))))

(declare-fun lt!53550 () ListLongMap!1527)

(assert (=> d!28631 (= lt!53563 lt!53550)))

(declare-fun lt!53552 () Unit!3132)

(assert (=> d!28631 (= lt!53552 e!68274)))

(declare-fun c!18218 () Bool)

(assert (=> d!28631 (= c!18218 e!68283)))

(declare-fun res!52261 () Bool)

(assert (=> d!28631 (=> (not res!52261) (not e!68283))))

(assert (=> d!28631 (= res!52261 (bvslt #b00000000000000000000000000000000 (size!2302 lt!53016)))))

(assert (=> d!28631 (= lt!53550 e!68282)))

(assert (=> d!28631 (= c!18219 (and (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28631 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28631 (= (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53563)))

(declare-fun b!104912 () Bool)

(assert (=> b!104912 (= e!68284 (validKeyInArray!0 (select (arr!2048 lt!53016) #b00000000000000000000000000000000)))))

(declare-fun b!104913 () Bool)

(declare-fun e!68285 () Bool)

(assert (=> b!104913 (= e!68275 e!68285)))

(declare-fun res!52257 () Bool)

(assert (=> b!104913 (= res!52257 call!11009)))

(assert (=> b!104913 (=> (not res!52257) (not e!68285))))

(declare-fun b!104914 () Bool)

(assert (=> b!104914 (= e!68285 (= (apply!97 lt!53563 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!104915 () Bool)

(assert (=> b!104915 (= e!68281 e!68278)))

(declare-fun c!18217 () Bool)

(assert (=> b!104915 (= c!18217 (not (= (bvand (extraKeys!2369 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28631 c!18219) b!104909))

(assert (= (and d!28631 (not c!18219)) b!104906))

(assert (= (and b!104906 c!18221) b!104898))

(assert (= (and b!104906 (not c!18221)) b!104908))

(assert (= (and b!104908 c!18220) b!104907))

(assert (= (and b!104908 (not c!18220)) b!104900))

(assert (= (or b!104907 b!104900) bm!11005))

(assert (= (or b!104898 bm!11005) bm!11008))

(assert (= (or b!104898 b!104907) bm!11007))

(assert (= (or b!104909 bm!11008) bm!11004))

(assert (= (or b!104909 bm!11007) bm!11006))

(assert (= (and d!28631 res!52261) b!104904))

(assert (= (and d!28631 c!18218) b!104895))

(assert (= (and d!28631 (not c!18218)) b!104899))

(assert (= (and d!28631 res!52263) b!104910))

(assert (= (and b!104910 res!52259) b!104912))

(assert (= (and b!104910 (not res!52260)) b!104903))

(assert (= (and b!104903 res!52258) b!104897))

(assert (= (and b!104910 res!52264) b!104905))

(assert (= (and b!104905 c!18216) b!104913))

(assert (= (and b!104905 (not c!18216)) b!104902))

(assert (= (and b!104913 res!52257) b!104914))

(assert (= (or b!104913 b!104902) bm!11009))

(assert (= (and b!104905 res!52256) b!104915))

(assert (= (and b!104915 c!18217) b!104901))

(assert (= (and b!104915 (not c!18217)) b!104896))

(assert (= (and b!104901 res!52262) b!104911))

(assert (= (or b!104901 b!104896) bm!11010))

(declare-fun b_lambda!4677 () Bool)

(assert (=> (not b_lambda!4677) (not b!104897)))

(assert (=> b!104897 t!5659))

(declare-fun b_and!6477 () Bool)

(assert (= b_and!6473 (and (=> t!5659 result!3431) b_and!6477)))

(assert (=> b!104897 t!5661))

(declare-fun b_and!6479 () Bool)

(assert (= b_and!6475 (and (=> t!5661 result!3433) b_and!6479)))

(declare-fun m!116833 () Bool)

(assert (=> b!104909 m!116833))

(assert (=> d!28631 m!114321))

(declare-fun m!116835 () Bool)

(assert (=> bm!11004 m!116835))

(declare-fun m!116837 () Bool)

(assert (=> b!104912 m!116837))

(assert (=> b!104912 m!116837))

(declare-fun m!116839 () Bool)

(assert (=> b!104912 m!116839))

(declare-fun m!116841 () Bool)

(assert (=> bm!11010 m!116841))

(assert (=> b!104903 m!116837))

(assert (=> b!104903 m!116837))

(declare-fun m!116843 () Bool)

(assert (=> b!104903 m!116843))

(assert (=> b!104897 m!114389))

(assert (=> b!104897 m!116837))

(declare-fun m!116845 () Bool)

(assert (=> b!104897 m!116845))

(assert (=> b!104897 m!116837))

(declare-fun m!116847 () Bool)

(assert (=> b!104897 m!116847))

(assert (=> b!104897 m!116847))

(assert (=> b!104897 m!114389))

(declare-fun m!116849 () Bool)

(assert (=> b!104897 m!116849))

(declare-fun m!116851 () Bool)

(assert (=> bm!11006 m!116851))

(declare-fun m!116853 () Bool)

(assert (=> b!104914 m!116853))

(declare-fun m!116855 () Bool)

(assert (=> bm!11009 m!116855))

(declare-fun m!116857 () Bool)

(assert (=> b!104895 m!116857))

(declare-fun m!116859 () Bool)

(assert (=> b!104895 m!116859))

(declare-fun m!116861 () Bool)

(assert (=> b!104895 m!116861))

(assert (=> b!104895 m!116837))

(declare-fun m!116863 () Bool)

(assert (=> b!104895 m!116863))

(assert (=> b!104895 m!116835))

(declare-fun m!116865 () Bool)

(assert (=> b!104895 m!116865))

(declare-fun m!116867 () Bool)

(assert (=> b!104895 m!116867))

(declare-fun m!116869 () Bool)

(assert (=> b!104895 m!116869))

(declare-fun m!116871 () Bool)

(assert (=> b!104895 m!116871))

(declare-fun m!116873 () Bool)

(assert (=> b!104895 m!116873))

(declare-fun m!116875 () Bool)

(assert (=> b!104895 m!116875))

(assert (=> b!104895 m!116869))

(declare-fun m!116877 () Bool)

(assert (=> b!104895 m!116877))

(assert (=> b!104895 m!116863))

(declare-fun m!116879 () Bool)

(assert (=> b!104895 m!116879))

(assert (=> b!104895 m!116861))

(declare-fun m!116881 () Bool)

(assert (=> b!104895 m!116881))

(declare-fun m!116883 () Bool)

(assert (=> b!104895 m!116883))

(assert (=> b!104895 m!116873))

(declare-fun m!116885 () Bool)

(assert (=> b!104895 m!116885))

(assert (=> b!104904 m!116837))

(assert (=> b!104904 m!116837))

(assert (=> b!104904 m!116839))

(declare-fun m!116887 () Bool)

(assert (=> b!104911 m!116887))

(assert (=> d!27959 d!28631))

(declare-fun b!104926 () Bool)

(declare-fun e!68292 () Bool)

(assert (=> b!104926 (= e!68292 (bvslt (size!2302 (_keys!4262 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun b!104927 () Bool)

(declare-fun e!68291 () Bool)

(assert (=> b!104927 (= e!68291 (= (arrayCountValidKeys!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4262 newMap!16) #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!104925 () Bool)

(declare-fun res!52273 () Bool)

(assert (=> b!104925 (=> (not res!52273) (not e!68292))))

(assert (=> b!104925 (= res!52273 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun d!28633 () Bool)

(assert (=> d!28633 e!68291))

(declare-fun res!52276 () Bool)

(assert (=> d!28633 (=> (not res!52276) (not e!68291))))

(assert (=> d!28633 (= res!52276 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 (_keys!4262 newMap!16)))))))

(declare-fun lt!53570 () Unit!3132)

(declare-fun choose!1 (array!4317 (_ BitVec 32) (_ BitVec 64)) Unit!3132)

(assert (=> d!28633 (= lt!53570 (choose!1 (_keys!4262 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28633 e!68292))

(declare-fun res!52275 () Bool)

(assert (=> d!28633 (=> (not res!52275) (not e!68292))))

(assert (=> d!28633 (= res!52275 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 (_keys!4262 newMap!16)))))))

(assert (=> d!28633 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4262 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53570)))

(declare-fun b!104924 () Bool)

(declare-fun res!52274 () Bool)

(assert (=> b!104924 (=> (not res!52274) (not e!68292))))

(assert (=> b!104924 (= res!52274 (not (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))))

(assert (= (and d!28633 res!52275) b!104924))

(assert (= (and b!104924 res!52274) b!104925))

(assert (= (and b!104925 res!52273) b!104926))

(assert (= (and d!28633 res!52276) b!104927))

(assert (=> b!104927 m!114913))

(assert (=> b!104927 m!114907))

(assert (=> b!104927 m!114191))

(assert (=> b!104925 m!113915))

(assert (=> b!104925 m!114183))

(assert (=> d!28633 m!113915))

(declare-fun m!116889 () Bool)

(assert (=> d!28633 m!116889))

(declare-fun m!116891 () Bool)

(assert (=> b!104924 m!116891))

(assert (=> b!104924 m!116891))

(declare-fun m!116893 () Bool)

(assert (=> b!104924 m!116893))

(assert (=> d!27959 d!28633))

(declare-fun d!28635 () Bool)

(declare-fun e!68295 () Bool)

(assert (=> d!28635 e!68295))

(declare-fun res!52279 () Bool)

(assert (=> d!28635 (=> (not res!52279) (not e!68295))))

(assert (=> d!28635 (= res!52279 (and (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2302 (_keys!4262 newMap!16))) (bvslt (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (size!2303 (_values!2543 newMap!16)))))))

(declare-fun lt!53573 () Unit!3132)

(declare-fun choose!657 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 32) (_ BitVec 64) V!3209 Int) Unit!3132)

(assert (=> d!28635 (= lt!53573 (choose!657 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28635 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28635 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447 (defaultEntry!2560 newMap!16)) lt!53573)))

(declare-fun b!104930 () Bool)

(assert (=> b!104930 (= e!68295 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (getCurrentListMap!467 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (array!4320 (store (arr!2049 (_values!2543 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (ValueCellFull!992 lt!52447)) (size!2303 (_values!2543 newMap!16))) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))))))

(assert (= (and d!28635 res!52279) b!104930))

(assert (=> d!28635 m!113915))

(declare-fun m!116895 () Bool)

(assert (=> d!28635 m!116895))

(assert (=> d!28635 m!114321))

(assert (=> b!104930 m!114929))

(assert (=> b!104930 m!114197))

(assert (=> b!104930 m!114803))

(assert (=> b!104930 m!114915))

(assert (=> b!104930 m!114197))

(assert (=> b!104930 m!114913))

(assert (=> d!27959 d!28635))

(assert (=> d!27959 d!28309))

(assert (=> d!27959 d!27781))

(assert (=> d!27959 d!27821))

(declare-fun d!28637 () Bool)

(declare-fun res!52280 () Bool)

(declare-fun e!68296 () Bool)

(assert (=> d!28637 (=> res!52280 e!68296)))

(assert (=> d!28637 (= res!52280 (= (select (arr!2048 lt!53013) #b00000000000000000000000000000000) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28637 (= (arrayContainsKey!0 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000) e!68296)))

(declare-fun b!104931 () Bool)

(declare-fun e!68297 () Bool)

(assert (=> b!104931 (= e!68296 e!68297)))

(declare-fun res!52281 () Bool)

(assert (=> b!104931 (=> (not res!52281) (not e!68297))))

(assert (=> b!104931 (= res!52281 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 lt!53013)))))

(declare-fun b!104932 () Bool)

(assert (=> b!104932 (= e!68297 (arrayContainsKey!0 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28637 (not res!52280)) b!104931))

(assert (= (and b!104931 res!52281) b!104932))

(declare-fun m!116897 () Bool)

(assert (=> d!28637 m!116897))

(assert (=> b!104932 m!113915))

(declare-fun m!116899 () Bool)

(assert (=> b!104932 m!116899))

(assert (=> d!27959 d!28637))

(declare-fun b!104933 () Bool)

(declare-fun e!68301 () Bool)

(declare-fun e!68299 () Bool)

(assert (=> b!104933 (= e!68301 e!68299)))

(declare-fun res!52283 () Bool)

(assert (=> b!104933 (=> (not res!52283) (not e!68299))))

(declare-fun e!68298 () Bool)

(assert (=> b!104933 (= res!52283 (not e!68298))))

(declare-fun res!52282 () Bool)

(assert (=> b!104933 (=> (not res!52282) (not e!68298))))

(assert (=> b!104933 (= res!52282 (validKeyInArray!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) lt!53030)))))

(declare-fun b!104934 () Bool)

(declare-fun e!68300 () Bool)

(declare-fun call!11014 () Bool)

(assert (=> b!104934 (= e!68300 call!11014)))

(declare-fun b!104935 () Bool)

(assert (=> b!104935 (= e!68299 e!68300)))

(declare-fun c!18222 () Bool)

(assert (=> b!104935 (= c!18222 (validKeyInArray!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) lt!53030)))))

(declare-fun b!104936 () Bool)

(assert (=> b!104936 (= e!68300 call!11014)))

(declare-fun d!28639 () Bool)

(declare-fun res!52284 () Bool)

(assert (=> d!28639 (=> res!52284 e!68301)))

(assert (=> d!28639 (= res!52284 (bvsge lt!53030 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(assert (=> d!28639 (= (arrayNoDuplicates!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) lt!53030 lt!53012) e!68301)))

(declare-fun b!104937 () Bool)

(assert (=> b!104937 (= e!68298 (contains!813 lt!53012 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) lt!53030)))))

(declare-fun bm!11011 () Bool)

(assert (=> bm!11011 (= call!11014 (arrayNoDuplicates!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (bvadd lt!53030 #b00000000000000000000000000000001) (ite c!18222 (Cons!1589 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) lt!53030) lt!53012) lt!53012)))))

(assert (= (and d!28639 (not res!52284)) b!104933))

(assert (= (and b!104933 res!52282) b!104937))

(assert (= (and b!104933 res!52283) b!104935))

(assert (= (and b!104935 c!18222) b!104936))

(assert (= (and b!104935 (not c!18222)) b!104934))

(assert (= (or b!104936 b!104934) bm!11011))

(declare-fun m!116901 () Bool)

(assert (=> b!104933 m!116901))

(assert (=> b!104933 m!116901))

(declare-fun m!116903 () Bool)

(assert (=> b!104933 m!116903))

(assert (=> b!104935 m!116901))

(assert (=> b!104935 m!116901))

(assert (=> b!104935 m!116903))

(assert (=> b!104937 m!116901))

(assert (=> b!104937 m!116901))

(declare-fun m!116905 () Bool)

(assert (=> b!104937 m!116905))

(assert (=> bm!11011 m!116901))

(declare-fun m!116907 () Bool)

(assert (=> bm!11011 m!116907))

(assert (=> d!27959 d!28639))

(assert (=> d!27959 d!27979))

(declare-fun d!28641 () Bool)

(declare-fun e!68303 () Bool)

(assert (=> d!28641 e!68303))

(declare-fun res!52285 () Bool)

(assert (=> d!28641 (=> res!52285 e!68303)))

(declare-fun lt!53577 () Bool)

(assert (=> d!28641 (= res!52285 (not lt!53577))))

(declare-fun lt!53574 () Bool)

(assert (=> d!28641 (= lt!53577 lt!53574)))

(declare-fun lt!53575 () Unit!3132)

(declare-fun e!68302 () Unit!3132)

(assert (=> d!28641 (= lt!53575 e!68302)))

(declare-fun c!18223 () Bool)

(assert (=> d!28641 (= c!18223 lt!53574)))

(assert (=> d!28641 (= lt!53574 (containsKey!159 (toList!779 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(assert (=> d!28641 (= (contains!811 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))) lt!53577)))

(declare-fun b!104938 () Bool)

(declare-fun lt!53576 () Unit!3132)

(assert (=> b!104938 (= e!68302 lt!53576)))

(assert (=> b!104938 (= lt!53576 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(assert (=> b!104938 (isDefined!108 (getValueByKey!156 (toList!779 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)))))))

(declare-fun b!104939 () Bool)

(declare-fun Unit!3204 () Unit!3132)

(assert (=> b!104939 (= e!68302 Unit!3204)))

(declare-fun b!104940 () Bool)

(assert (=> b!104940 (= e!68303 (isDefined!108 (getValueByKey!156 (toList!779 (getCurrentListMap!467 lt!53016 lt!53023 (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (select (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))))

(assert (= (and d!28641 c!18223) b!104938))

(assert (= (and d!28641 (not c!18223)) b!104939))

(assert (= (and d!28641 (not res!52285)) b!104940))

(assert (=> d!28641 m!114903))

(declare-fun m!116909 () Bool)

(assert (=> d!28641 m!116909))

(assert (=> b!104938 m!114903))

(declare-fun m!116911 () Bool)

(assert (=> b!104938 m!116911))

(assert (=> b!104938 m!114903))

(declare-fun m!116913 () Bool)

(assert (=> b!104938 m!116913))

(assert (=> b!104938 m!116913))

(declare-fun m!116915 () Bool)

(assert (=> b!104938 m!116915))

(assert (=> b!104940 m!114903))

(assert (=> b!104940 m!116913))

(assert (=> b!104940 m!116913))

(assert (=> b!104940 m!116915))

(assert (=> d!27959 d!28641))

(declare-fun b!104941 () Bool)

(declare-fun e!68306 () Bool)

(declare-fun call!11015 () Bool)

(assert (=> b!104941 (= e!68306 call!11015)))

(declare-fun d!28643 () Bool)

(declare-fun res!52286 () Bool)

(declare-fun e!68305 () Bool)

(assert (=> d!28643 (=> res!52286 e!68305)))

(assert (=> d!28643 (= res!52286 (bvsge #b00000000000000000000000000000000 (size!2302 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))))))))

(assert (=> d!28643 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (mask!6696 newMap!16)) e!68305)))

(declare-fun b!104942 () Bool)

(declare-fun e!68304 () Bool)

(assert (=> b!104942 (= e!68304 call!11015)))

(declare-fun b!104943 () Bool)

(assert (=> b!104943 (= e!68305 e!68304)))

(declare-fun c!18224 () Bool)

(assert (=> b!104943 (= c!18224 (validKeyInArray!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11012 () Bool)

(assert (=> bm!11012 (= call!11015 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (mask!6696 newMap!16)))))

(declare-fun b!104944 () Bool)

(assert (=> b!104944 (= e!68304 e!68306)))

(declare-fun lt!53579 () (_ BitVec 64))

(assert (=> b!104944 (= lt!53579 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53580 () Unit!3132)

(assert (=> b!104944 (= lt!53580 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) lt!53579 #b00000000000000000000000000000000))))

(assert (=> b!104944 (arrayContainsKey!0 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) lt!53579 #b00000000000000000000000000000000)))

(declare-fun lt!53578 () Unit!3132)

(assert (=> b!104944 (= lt!53578 lt!53580)))

(declare-fun res!52287 () Bool)

(assert (=> b!104944 (= res!52287 (= (seekEntryOrOpen!0 (select (arr!2048 (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16)))) #b00000000000000000000000000000000) (array!4318 (store (arr!2048 (_keys!4262 newMap!16)) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2302 (_keys!4262 newMap!16))) (mask!6696 newMap!16)) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!104944 (=> (not res!52287) (not e!68306))))

(assert (= (and d!28643 (not res!52286)) b!104943))

(assert (= (and b!104943 c!18224) b!104944))

(assert (= (and b!104943 (not c!18224)) b!104942))

(assert (= (and b!104944 res!52287) b!104941))

(assert (= (or b!104941 b!104942) bm!11012))

(assert (=> b!104943 m!116751))

(assert (=> b!104943 m!116751))

(assert (=> b!104943 m!116753))

(declare-fun m!116917 () Bool)

(assert (=> bm!11012 m!116917))

(assert (=> b!104944 m!116751))

(declare-fun m!116919 () Bool)

(assert (=> b!104944 m!116919))

(declare-fun m!116921 () Bool)

(assert (=> b!104944 m!116921))

(assert (=> b!104944 m!116751))

(declare-fun m!116923 () Bool)

(assert (=> b!104944 m!116923))

(assert (=> d!27959 d!28643))

(declare-fun d!28645 () Bool)

(assert (=> d!28645 (arrayContainsKey!0 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!53581 () Unit!3132)

(assert (=> d!28645 (= lt!53581 (choose!13 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))))))

(assert (=> d!28645 (bvsge (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724)) #b00000000000000000000000000000000)))

(assert (=> d!28645 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!53013 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17806 (index!3158 lt!52724) (index!3155 lt!52724))) lt!53581)))

(declare-fun bs!4321 () Bool)

(assert (= bs!4321 d!28645))

(assert (=> bs!4321 m!113915))

(assert (=> bs!4321 m!114919))

(assert (=> bs!4321 m!113915))

(declare-fun m!116925 () Bool)

(assert (=> bs!4321 m!116925))

(assert (=> d!27959 d!28645))

(assert (=> b!103799 d!28027))

(assert (=> b!103799 d!27841))

(declare-fun d!28647 () Bool)

(assert (=> d!28647 (= (inRange!0 (ite c!17921 (index!3156 lt!53011) (ite c!17922 (index!3155 lt!53027) (index!3158 lt!53027))) (mask!6696 newMap!16)) (and (bvsge (ite c!17921 (index!3156 lt!53011) (ite c!17922 (index!3155 lt!53027) (index!3158 lt!53027))) #b00000000000000000000000000000000) (bvslt (ite c!17921 (index!3156 lt!53011) (ite c!17922 (index!3155 lt!53027) (index!3158 lt!53027))) (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10897 d!28647))

(declare-fun d!28649 () Bool)

(declare-fun res!52288 () Bool)

(declare-fun e!68307 () Bool)

(assert (=> d!28649 (=> res!52288 e!68307)))

(assert (=> d!28649 (= res!52288 (and ((_ is Cons!1588) (t!5646 (toList!779 lt!52449))) (= (_1!1188 (h!2184 (t!5646 (toList!779 lt!52449)))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28649 (= (containsKey!159 (t!5646 (toList!779 lt!52449)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68307)))

(declare-fun b!104945 () Bool)

(declare-fun e!68308 () Bool)

(assert (=> b!104945 (= e!68307 e!68308)))

(declare-fun res!52289 () Bool)

(assert (=> b!104945 (=> (not res!52289) (not e!68308))))

(assert (=> b!104945 (= res!52289 (and (or (not ((_ is Cons!1588) (t!5646 (toList!779 lt!52449)))) (bvsle (_1!1188 (h!2184 (t!5646 (toList!779 lt!52449)))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1588) (t!5646 (toList!779 lt!52449))) (bvslt (_1!1188 (h!2184 (t!5646 (toList!779 lt!52449)))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!104946 () Bool)

(assert (=> b!104946 (= e!68308 (containsKey!159 (t!5646 (t!5646 (toList!779 lt!52449))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28649 (not res!52288)) b!104945))

(assert (= (and b!104945 res!52289) b!104946))

(assert (=> b!104946 m!113915))

(declare-fun m!116927 () Bool)

(assert (=> b!104946 m!116927))

(assert (=> b!103957 d!28649))

(declare-fun b!104947 () Bool)

(declare-fun e!68311 () Bool)

(declare-fun call!11016 () Bool)

(assert (=> b!104947 (= e!68311 call!11016)))

(declare-fun d!28651 () Bool)

(declare-fun res!52290 () Bool)

(declare-fun e!68310 () Bool)

(assert (=> d!28651 (=> res!52290 e!68310)))

(assert (=> d!28651 (= res!52290 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(assert (=> d!28651 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4262 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716))) e!68310)))

(declare-fun b!104948 () Bool)

(declare-fun e!68309 () Bool)

(assert (=> b!104948 (= e!68309 call!11016)))

(declare-fun b!104949 () Bool)

(assert (=> b!104949 (= e!68310 e!68309)))

(declare-fun c!18225 () Bool)

(assert (=> b!104949 (= c!18225 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun bm!11013 () Bool)

(assert (=> bm!11013 (= call!11016 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4262 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716))))))

(declare-fun b!104950 () Bool)

(assert (=> b!104950 (= e!68309 e!68311)))

(declare-fun lt!53583 () (_ BitVec 64))

(assert (=> b!104950 (= lt!53583 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000))))

(declare-fun lt!53584 () Unit!3132)

(assert (=> b!104950 (= lt!53584 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4262 (_2!1187 lt!52716)) lt!53583 #b00000000000000000000000000000000))))

(assert (=> b!104950 (arrayContainsKey!0 (_keys!4262 (_2!1187 lt!52716)) lt!53583 #b00000000000000000000000000000000)))

(declare-fun lt!53582 () Unit!3132)

(assert (=> b!104950 (= lt!53582 lt!53584)))

(declare-fun res!52291 () Bool)

(assert (=> b!104950 (= res!52291 (= (seekEntryOrOpen!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000) (_keys!4262 (_2!1187 lt!52716)) (mask!6696 (_2!1187 lt!52716))) (Found!252 #b00000000000000000000000000000000)))))

(assert (=> b!104950 (=> (not res!52291) (not e!68311))))

(assert (= (and d!28651 (not res!52290)) b!104949))

(assert (= (and b!104949 c!18225) b!104950))

(assert (= (and b!104949 (not c!18225)) b!104948))

(assert (= (and b!104950 res!52291) b!104947))

(assert (= (or b!104947 b!104948) bm!11013))

(assert (=> b!104949 m!115519))

(assert (=> b!104949 m!115519))

(assert (=> b!104949 m!115521))

(declare-fun m!116929 () Bool)

(assert (=> bm!11013 m!116929))

(assert (=> b!104950 m!115519))

(declare-fun m!116931 () Bool)

(assert (=> b!104950 m!116931))

(declare-fun m!116933 () Bool)

(assert (=> b!104950 m!116933))

(assert (=> b!104950 m!115519))

(declare-fun m!116935 () Bool)

(assert (=> b!104950 m!116935))

(assert (=> b!103620 d!28651))

(declare-fun d!28653 () Bool)

(declare-fun e!68313 () Bool)

(assert (=> d!28653 e!68313))

(declare-fun res!52292 () Bool)

(assert (=> d!28653 (=> res!52292 e!68313)))

(declare-fun lt!53588 () Bool)

(assert (=> d!28653 (= res!52292 (not lt!53588))))

(declare-fun lt!53585 () Bool)

(assert (=> d!28653 (= lt!53588 lt!53585)))

(declare-fun lt!53586 () Unit!3132)

(declare-fun e!68312 () Unit!3132)

(assert (=> d!28653 (= lt!53586 e!68312)))

(declare-fun c!18226 () Bool)

(assert (=> d!28653 (= c!18226 lt!53585)))

(assert (=> d!28653 (= lt!53585 (containsKey!159 (toList!779 lt!52757) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!28653 (= (contains!811 lt!52757 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!53588)))

(declare-fun b!104951 () Bool)

(declare-fun lt!53587 () Unit!3132)

(assert (=> b!104951 (= e!68312 lt!53587)))

(assert (=> b!104951 (= lt!53587 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52757) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!104951 (isDefined!108 (getValueByKey!156 (toList!779 lt!52757) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104952 () Bool)

(declare-fun Unit!3205 () Unit!3132)

(assert (=> b!104952 (= e!68312 Unit!3205)))

(declare-fun b!104953 () Bool)

(assert (=> b!104953 (= e!68313 (isDefined!108 (getValueByKey!156 (toList!779 lt!52757) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!28653 c!18226) b!104951))

(assert (= (and d!28653 (not c!18226)) b!104952))

(assert (= (and d!28653 (not res!52292)) b!104953))

(assert (=> d!28653 m!114345))

(declare-fun m!116937 () Bool)

(assert (=> d!28653 m!116937))

(assert (=> b!104951 m!114345))

(declare-fun m!116939 () Bool)

(assert (=> b!104951 m!116939))

(assert (=> b!104951 m!114345))

(declare-fun m!116941 () Bool)

(assert (=> b!104951 m!116941))

(assert (=> b!104951 m!116941))

(declare-fun m!116943 () Bool)

(assert (=> b!104951 m!116943))

(assert (=> b!104953 m!114345))

(assert (=> b!104953 m!116941))

(assert (=> b!104953 m!116941))

(assert (=> b!104953 m!116943))

(assert (=> b!103532 d!28653))

(assert (=> d!27961 d!27817))

(declare-fun d!28655 () Bool)

(assert (=> d!28655 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28655 true))

(declare-fun _$8!91 () Unit!3132)

(assert (=> d!28655 (= (choose!655 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52712 (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) lt!52447 (defaultEntry!2560 newMap!16)) _$8!91)))

(declare-fun bs!4322 () Bool)

(assert (= bs!4322 d!28655))

(assert (=> bs!4322 m!114197))

(assert (=> bs!4322 m!114197))

(assert (=> bs!4322 m!114953))

(assert (=> bs!4322 m!114955))

(assert (=> d!27961 d!28655))

(declare-fun d!28657 () Bool)

(declare-fun e!68314 () Bool)

(assert (=> d!28657 e!68314))

(declare-fun res!52293 () Bool)

(assert (=> d!28657 (=> (not res!52293) (not e!68314))))

(declare-fun lt!53591 () ListLongMap!1527)

(assert (=> d!28657 (= res!52293 (contains!811 lt!53591 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(declare-fun lt!53590 () List!1592)

(assert (=> d!28657 (= lt!53591 (ListLongMap!1528 lt!53590))))

(declare-fun lt!53589 () Unit!3132)

(declare-fun lt!53592 () Unit!3132)

(assert (=> d!28657 (= lt!53589 lt!53592)))

(assert (=> d!28657 (= (getValueByKey!156 lt!53590 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(assert (=> d!28657 (= lt!53592 (lemmaContainsTupThenGetReturnValue!72 lt!53590 (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(assert (=> d!28657 (= lt!53590 (insertStrictlySorted!75 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(assert (=> d!28657 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)) lt!53591)))

(declare-fun b!104954 () Bool)

(declare-fun res!52294 () Bool)

(assert (=> b!104954 (=> (not res!52294) (not e!68314))))

(assert (=> b!104954 (= res!52294 (= (getValueByKey!156 (toList!779 lt!53591) (_1!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))) (Some!161 (_2!1188 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)))))))

(declare-fun b!104955 () Bool)

(assert (=> b!104955 (= e!68314 (contains!812 (toList!779 lt!53591) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)))))

(assert (= (and d!28657 res!52293) b!104954))

(assert (= (and b!104954 res!52294) b!104955))

(declare-fun m!116945 () Bool)

(assert (=> d!28657 m!116945))

(declare-fun m!116947 () Bool)

(assert (=> d!28657 m!116947))

(declare-fun m!116949 () Bool)

(assert (=> d!28657 m!116949))

(declare-fun m!116951 () Bool)

(assert (=> d!28657 m!116951))

(declare-fun m!116953 () Bool)

(assert (=> b!104954 m!116953))

(declare-fun m!116955 () Bool)

(assert (=> b!104955 m!116955))

(assert (=> d!27961 d!28657))

(declare-fun call!11023 () ListLongMap!1527)

(declare-fun bm!11014 () Bool)

(assert (=> bm!11014 (= call!11023 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!11015 () Bool)

(declare-fun call!11020 () ListLongMap!1527)

(declare-fun call!11021 () ListLongMap!1527)

(assert (=> bm!11015 (= call!11020 call!11021)))

(declare-fun b!104956 () Bool)

(declare-fun e!68315 () Unit!3132)

(declare-fun lt!53607 () Unit!3132)

(assert (=> b!104956 (= e!68315 lt!53607)))

(declare-fun lt!53609 () ListLongMap!1527)

(assert (=> b!104956 (= lt!53609 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53614 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53614 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53593 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53593 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53611 () Unit!3132)

(assert (=> b!104956 (= lt!53611 (addStillContains!73 lt!53609 lt!53614 (zeroValue!2437 newMap!16) lt!53593))))

(assert (=> b!104956 (contains!811 (+!137 lt!53609 (tuple2!2355 lt!53614 (zeroValue!2437 newMap!16))) lt!53593)))

(declare-fun lt!53598 () Unit!3132)

(assert (=> b!104956 (= lt!53598 lt!53611)))

(declare-fun lt!53603 () ListLongMap!1527)

(assert (=> b!104956 (= lt!53603 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53601 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53601 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53605 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53605 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53594 () Unit!3132)

(assert (=> b!104956 (= lt!53594 (addApplyDifferent!73 lt!53603 lt!53601 lt!52447 lt!53605))))

(assert (=> b!104956 (= (apply!97 (+!137 lt!53603 (tuple2!2355 lt!53601 lt!52447)) lt!53605) (apply!97 lt!53603 lt!53605))))

(declare-fun lt!53613 () Unit!3132)

(assert (=> b!104956 (= lt!53613 lt!53594)))

(declare-fun lt!53608 () ListLongMap!1527)

(assert (=> b!104956 (= lt!53608 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53606 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53606 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53596 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53596 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53612 () Unit!3132)

(assert (=> b!104956 (= lt!53612 (addApplyDifferent!73 lt!53608 lt!53606 (zeroValue!2437 newMap!16) lt!53596))))

(assert (=> b!104956 (= (apply!97 (+!137 lt!53608 (tuple2!2355 lt!53606 (zeroValue!2437 newMap!16))) lt!53596) (apply!97 lt!53608 lt!53596))))

(declare-fun lt!53595 () Unit!3132)

(assert (=> b!104956 (= lt!53595 lt!53612)))

(declare-fun lt!53602 () ListLongMap!1527)

(assert (=> b!104956 (= lt!53602 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53604 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53604 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53600 () (_ BitVec 64))

(assert (=> b!104956 (= lt!53600 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104956 (= lt!53607 (addApplyDifferent!73 lt!53602 lt!53604 lt!52447 lt!53600))))

(assert (=> b!104956 (= (apply!97 (+!137 lt!53602 (tuple2!2355 lt!53604 lt!52447)) lt!53600) (apply!97 lt!53602 lt!53600))))

(declare-fun b!104957 () Bool)

(declare-fun e!68319 () Bool)

(declare-fun call!11017 () Bool)

(assert (=> b!104957 (= e!68319 (not call!11017))))

(declare-fun b!104958 () Bool)

(declare-fun e!68320 () Bool)

(declare-fun lt!53610 () ListLongMap!1527)

(assert (=> b!104958 (= e!68320 (= (apply!97 lt!53610 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104958 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (_values!2543 newMap!16))))))

(assert (=> b!104958 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104959 () Bool)

(declare-fun e!68321 () ListLongMap!1527)

(declare-fun call!11018 () ListLongMap!1527)

(assert (=> b!104959 (= e!68321 call!11018)))

(declare-fun b!104960 () Bool)

(declare-fun Unit!3206 () Unit!3132)

(assert (=> b!104960 (= e!68315 Unit!3206)))

(declare-fun b!104961 () Bool)

(declare-fun e!68318 () ListLongMap!1527)

(assert (=> b!104961 (= e!68318 call!11020)))

(declare-fun b!104963 () Bool)

(declare-fun e!68316 () Bool)

(declare-fun call!11019 () Bool)

(assert (=> b!104963 (= e!68316 (not call!11019))))

(declare-fun b!104964 () Bool)

(declare-fun e!68317 () Bool)

(assert (=> b!104964 (= e!68317 e!68320)))

(declare-fun res!52297 () Bool)

(assert (=> b!104964 (=> (not res!52297) (not e!68320))))

(assert (=> b!104964 (= res!52297 (contains!811 lt!53610 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104964 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104965 () Bool)

(declare-fun e!68324 () Bool)

(assert (=> b!104965 (= e!68324 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104966 () Bool)

(declare-fun res!52295 () Bool)

(declare-fun e!68322 () Bool)

(assert (=> b!104966 (=> (not res!52295) (not e!68322))))

(assert (=> b!104966 (= res!52295 e!68316)))

(declare-fun c!18227 () Bool)

(assert (=> b!104966 (= c!18227 (not (= (bvand lt!52712 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun c!18230 () Bool)

(declare-fun c!18232 () Bool)

(declare-fun call!11022 () ListLongMap!1527)

(declare-fun bm!11016 () Bool)

(assert (=> bm!11016 (= call!11022 (+!137 (ite c!18230 call!11023 (ite c!18232 call!11021 call!11020)) (ite (or c!18230 c!18232) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(declare-fun b!104967 () Bool)

(declare-fun e!68323 () ListLongMap!1527)

(assert (=> b!104967 (= e!68323 e!68321)))

(assert (=> b!104967 (= c!18232 (and (not (= (bvand lt!52712 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52712 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104968 () Bool)

(assert (=> b!104968 (= e!68318 call!11018)))

(declare-fun bm!11017 () Bool)

(assert (=> bm!11017 (= call!11018 call!11022)))

(declare-fun b!104969 () Bool)

(declare-fun c!18231 () Bool)

(assert (=> b!104969 (= c!18231 (and (not (= (bvand lt!52712 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52712 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104969 (= e!68321 e!68318)))

(declare-fun b!104970 () Bool)

(assert (=> b!104970 (= e!68323 (+!137 call!11022 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52447)))))

(declare-fun bm!11018 () Bool)

(assert (=> bm!11018 (= call!11021 call!11023)))

(declare-fun b!104971 () Bool)

(declare-fun res!52303 () Bool)

(assert (=> b!104971 (=> (not res!52303) (not e!68322))))

(assert (=> b!104971 (= res!52303 e!68317)))

(declare-fun res!52299 () Bool)

(assert (=> b!104971 (=> res!52299 e!68317)))

(declare-fun e!68325 () Bool)

(assert (=> b!104971 (= res!52299 (not e!68325))))

(declare-fun res!52298 () Bool)

(assert (=> b!104971 (=> (not res!52298) (not e!68325))))

(assert (=> b!104971 (= res!52298 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!104972 () Bool)

(declare-fun e!68327 () Bool)

(assert (=> b!104972 (= e!68327 (= (apply!97 lt!53610 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52447))))

(declare-fun bm!11019 () Bool)

(assert (=> bm!11019 (= call!11019 (contains!811 lt!53610 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11020 () Bool)

(assert (=> bm!11020 (= call!11017 (contains!811 lt!53610 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104962 () Bool)

(assert (=> b!104962 (= e!68319 e!68327)))

(declare-fun res!52301 () Bool)

(assert (=> b!104962 (= res!52301 call!11017)))

(assert (=> b!104962 (=> (not res!52301) (not e!68327))))

(declare-fun d!28659 () Bool)

(assert (=> d!28659 e!68322))

(declare-fun res!52302 () Bool)

(assert (=> d!28659 (=> (not res!52302) (not e!68322))))

(assert (=> d!28659 (= res!52302 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!53597 () ListLongMap!1527)

(assert (=> d!28659 (= lt!53610 lt!53597)))

(declare-fun lt!53599 () Unit!3132)

(assert (=> d!28659 (= lt!53599 e!68315)))

(declare-fun c!18229 () Bool)

(assert (=> d!28659 (= c!18229 e!68324)))

(declare-fun res!52300 () Bool)

(assert (=> d!28659 (=> (not res!52300) (not e!68324))))

(assert (=> d!28659 (= res!52300 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28659 (= lt!53597 e!68323)))

(assert (=> d!28659 (= c!18230 (and (not (= (bvand lt!52712 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52712 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28659 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28659 (= (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52712 (zeroValue!2437 newMap!16) lt!52447 #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53610)))

(declare-fun b!104973 () Bool)

(assert (=> b!104973 (= e!68325 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104974 () Bool)

(declare-fun e!68326 () Bool)

(assert (=> b!104974 (= e!68316 e!68326)))

(declare-fun res!52296 () Bool)

(assert (=> b!104974 (= res!52296 call!11019)))

(assert (=> b!104974 (=> (not res!52296) (not e!68326))))

(declare-fun b!104975 () Bool)

(assert (=> b!104975 (= e!68326 (= (apply!97 lt!53610 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2437 newMap!16)))))

(declare-fun b!104976 () Bool)

(assert (=> b!104976 (= e!68322 e!68319)))

(declare-fun c!18228 () Bool)

(assert (=> b!104976 (= c!18228 (not (= (bvand lt!52712 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28659 c!18230) b!104970))

(assert (= (and d!28659 (not c!18230)) b!104967))

(assert (= (and b!104967 c!18232) b!104959))

(assert (= (and b!104967 (not c!18232)) b!104969))

(assert (= (and b!104969 c!18231) b!104968))

(assert (= (and b!104969 (not c!18231)) b!104961))

(assert (= (or b!104968 b!104961) bm!11015))

(assert (= (or b!104959 bm!11015) bm!11018))

(assert (= (or b!104959 b!104968) bm!11017))

(assert (= (or b!104970 bm!11018) bm!11014))

(assert (= (or b!104970 bm!11017) bm!11016))

(assert (= (and d!28659 res!52300) b!104965))

(assert (= (and d!28659 c!18229) b!104956))

(assert (= (and d!28659 (not c!18229)) b!104960))

(assert (= (and d!28659 res!52302) b!104971))

(assert (= (and b!104971 res!52298) b!104973))

(assert (= (and b!104971 (not res!52299)) b!104964))

(assert (= (and b!104964 res!52297) b!104958))

(assert (= (and b!104971 res!52303) b!104966))

(assert (= (and b!104966 c!18227) b!104974))

(assert (= (and b!104966 (not c!18227)) b!104963))

(assert (= (and b!104974 res!52296) b!104975))

(assert (= (or b!104974 b!104963) bm!11019))

(assert (= (and b!104966 res!52295) b!104976))

(assert (= (and b!104976 c!18228) b!104962))

(assert (= (and b!104976 (not c!18228)) b!104957))

(assert (= (and b!104962 res!52301) b!104972))

(assert (= (or b!104962 b!104957) bm!11020))

(declare-fun b_lambda!4679 () Bool)

(assert (=> (not b_lambda!4679) (not b!104958)))

(assert (=> b!104958 t!5659))

(declare-fun b_and!6481 () Bool)

(assert (= b_and!6477 (and (=> t!5659 result!3431) b_and!6481)))

(assert (=> b!104958 t!5661))

(declare-fun b_and!6483 () Bool)

(assert (= b_and!6479 (and (=> t!5661 result!3433) b_and!6483)))

(declare-fun m!116957 () Bool)

(assert (=> b!104970 m!116957))

(assert (=> d!28659 m!114321))

(declare-fun m!116959 () Bool)

(assert (=> bm!11014 m!116959))

(assert (=> b!104973 m!114381))

(assert (=> b!104973 m!114381))

(assert (=> b!104973 m!114383))

(declare-fun m!116961 () Bool)

(assert (=> bm!11020 m!116961))

(assert (=> b!104964 m!114381))

(assert (=> b!104964 m!114381))

(declare-fun m!116963 () Bool)

(assert (=> b!104964 m!116963))

(assert (=> b!104958 m!114389))

(assert (=> b!104958 m!114381))

(declare-fun m!116965 () Bool)

(assert (=> b!104958 m!116965))

(assert (=> b!104958 m!114381))

(assert (=> b!104958 m!114393))

(assert (=> b!104958 m!114393))

(assert (=> b!104958 m!114389))

(assert (=> b!104958 m!114395))

(declare-fun m!116967 () Bool)

(assert (=> bm!11016 m!116967))

(declare-fun m!116969 () Bool)

(assert (=> b!104975 m!116969))

(declare-fun m!116971 () Bool)

(assert (=> bm!11019 m!116971))

(declare-fun m!116973 () Bool)

(assert (=> b!104956 m!116973))

(declare-fun m!116975 () Bool)

(assert (=> b!104956 m!116975))

(declare-fun m!116977 () Bool)

(assert (=> b!104956 m!116977))

(assert (=> b!104956 m!114381))

(declare-fun m!116979 () Bool)

(assert (=> b!104956 m!116979))

(assert (=> b!104956 m!116959))

(declare-fun m!116981 () Bool)

(assert (=> b!104956 m!116981))

(declare-fun m!116983 () Bool)

(assert (=> b!104956 m!116983))

(declare-fun m!116985 () Bool)

(assert (=> b!104956 m!116985))

(declare-fun m!116987 () Bool)

(assert (=> b!104956 m!116987))

(declare-fun m!116989 () Bool)

(assert (=> b!104956 m!116989))

(declare-fun m!116991 () Bool)

(assert (=> b!104956 m!116991))

(assert (=> b!104956 m!116985))

(declare-fun m!116993 () Bool)

(assert (=> b!104956 m!116993))

(assert (=> b!104956 m!116979))

(declare-fun m!116995 () Bool)

(assert (=> b!104956 m!116995))

(assert (=> b!104956 m!116977))

(declare-fun m!116997 () Bool)

(assert (=> b!104956 m!116997))

(declare-fun m!116999 () Bool)

(assert (=> b!104956 m!116999))

(assert (=> b!104956 m!116989))

(declare-fun m!117001 () Bool)

(assert (=> b!104956 m!117001))

(assert (=> b!104965 m!114381))

(assert (=> b!104965 m!114381))

(assert (=> b!104965 m!114383))

(declare-fun m!117003 () Bool)

(assert (=> b!104972 m!117003))

(assert (=> d!27961 d!28659))

(assert (=> d!27961 d!28055))

(declare-fun d!28661 () Bool)

(declare-fun lt!53615 () Bool)

(assert (=> d!28661 (= lt!53615 (select (content!108 lt!52532) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun e!68328 () Bool)

(assert (=> d!28661 (= lt!53615 e!68328)))

(declare-fun res!52304 () Bool)

(assert (=> d!28661 (=> (not res!52304) (not e!68328))))

(assert (=> d!28661 (= res!52304 ((_ is Cons!1588) lt!52532))))

(assert (=> d!28661 (= (contains!812 lt!52532 (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))) lt!53615)))

(declare-fun b!104977 () Bool)

(declare-fun e!68329 () Bool)

(assert (=> b!104977 (= e!68328 e!68329)))

(declare-fun res!52305 () Bool)

(assert (=> b!104977 (=> res!52305 e!68329)))

(assert (=> b!104977 (= res!52305 (= (h!2184 lt!52532) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(declare-fun b!104978 () Bool)

(assert (=> b!104978 (= e!68329 (contains!812 (t!5646 lt!52532) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))))))

(assert (= (and d!28661 res!52304) b!104977))

(assert (= (and b!104977 (not res!52305)) b!104978))

(declare-fun m!117005 () Bool)

(assert (=> d!28661 m!117005))

(declare-fun m!117007 () Bool)

(assert (=> d!28661 m!117007))

(declare-fun m!117009 () Bool)

(assert (=> b!104978 m!117009))

(assert (=> b!103636 d!28661))

(assert (=> bm!10902 d!28411))

(declare-fun d!28663 () Bool)

(declare-fun e!68331 () Bool)

(assert (=> d!28663 e!68331))

(declare-fun res!52306 () Bool)

(assert (=> d!28663 (=> res!52306 e!68331)))

(declare-fun lt!53619 () Bool)

(assert (=> d!28663 (= res!52306 (not lt!53619))))

(declare-fun lt!53616 () Bool)

(assert (=> d!28663 (= lt!53619 lt!53616)))

(declare-fun lt!53617 () Unit!3132)

(declare-fun e!68330 () Unit!3132)

(assert (=> d!28663 (= lt!53617 e!68330)))

(declare-fun c!18233 () Bool)

(assert (=> d!28663 (= c!18233 lt!53616)))

(assert (=> d!28663 (= lt!53616 (containsKey!159 (toList!779 lt!52828) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28663 (= (contains!811 lt!52828 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53619)))

(declare-fun b!104979 () Bool)

(declare-fun lt!53618 () Unit!3132)

(assert (=> b!104979 (= e!68330 lt!53618)))

(assert (=> b!104979 (= lt!53618 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52828) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104979 (isDefined!108 (getValueByKey!156 (toList!779 lt!52828) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104980 () Bool)

(declare-fun Unit!3207 () Unit!3132)

(assert (=> b!104980 (= e!68330 Unit!3207)))

(declare-fun b!104981 () Bool)

(assert (=> b!104981 (= e!68331 (isDefined!108 (getValueByKey!156 (toList!779 lt!52828) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28663 c!18233) b!104979))

(assert (= (and d!28663 (not c!18233)) b!104980))

(assert (= (and d!28663 (not res!52306)) b!104981))

(declare-fun m!117011 () Bool)

(assert (=> d!28663 m!117011))

(declare-fun m!117013 () Bool)

(assert (=> b!104979 m!117013))

(assert (=> b!104979 m!115573))

(assert (=> b!104979 m!115573))

(declare-fun m!117015 () Bool)

(assert (=> b!104979 m!117015))

(assert (=> b!104981 m!115573))

(assert (=> b!104981 m!115573))

(assert (=> b!104981 m!117015))

(assert (=> bm!10874 d!28663))

(declare-fun d!28665 () Bool)

(declare-fun e!68333 () Bool)

(assert (=> d!28665 e!68333))

(declare-fun res!52307 () Bool)

(assert (=> d!28665 (=> res!52307 e!68333)))

(declare-fun lt!53623 () Bool)

(assert (=> d!28665 (= res!52307 (not lt!53623))))

(declare-fun lt!53620 () Bool)

(assert (=> d!28665 (= lt!53623 lt!53620)))

(declare-fun lt!53621 () Unit!3132)

(declare-fun e!68332 () Unit!3132)

(assert (=> d!28665 (= lt!53621 e!68332)))

(declare-fun c!18234 () Bool)

(assert (=> d!28665 (= c!18234 lt!53620)))

(assert (=> d!28665 (= lt!53620 (containsKey!159 (toList!779 lt!52633) lt!52631))))

(assert (=> d!28665 (= (contains!811 lt!52633 lt!52631) lt!53623)))

(declare-fun b!104982 () Bool)

(declare-fun lt!53622 () Unit!3132)

(assert (=> b!104982 (= e!68332 lt!53622)))

(assert (=> b!104982 (= lt!53622 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52633) lt!52631))))

(assert (=> b!104982 (isDefined!108 (getValueByKey!156 (toList!779 lt!52633) lt!52631))))

(declare-fun b!104983 () Bool)

(declare-fun Unit!3208 () Unit!3132)

(assert (=> b!104983 (= e!68332 Unit!3208)))

(declare-fun b!104984 () Bool)

(assert (=> b!104984 (= e!68333 (isDefined!108 (getValueByKey!156 (toList!779 lt!52633) lt!52631)))))

(assert (= (and d!28665 c!18234) b!104982))

(assert (= (and d!28665 (not c!18234)) b!104983))

(assert (= (and d!28665 (not res!52307)) b!104984))

(declare-fun m!117017 () Bool)

(assert (=> d!28665 m!117017))

(declare-fun m!117019 () Bool)

(assert (=> b!104982 m!117019))

(assert (=> b!104982 m!114675))

(assert (=> b!104982 m!114675))

(declare-fun m!117021 () Bool)

(assert (=> b!104982 m!117021))

(assert (=> b!104984 m!114675))

(assert (=> b!104984 m!114675))

(assert (=> b!104984 m!117021))

(assert (=> d!27869 d!28665))

(declare-fun d!28667 () Bool)

(assert (=> d!28667 (= (apply!97 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!52631) (apply!97 lt!52633 lt!52631))))

(assert (=> d!28667 true))

(declare-fun _$34!884 () Unit!3132)

(assert (=> d!28667 (= (choose!650 lt!52633 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))) lt!52631) _$34!884)))

(declare-fun bs!4323 () Bool)

(assert (= bs!4323 d!28667))

(assert (=> bs!4323 m!114229))

(assert (=> bs!4323 m!114229))

(assert (=> bs!4323 m!114241))

(assert (=> bs!4323 m!114215))

(assert (=> d!27869 d!28667))

(assert (=> d!27869 d!27893))

(assert (=> d!27869 d!27875))

(assert (=> d!27869 d!27881))

(declare-fun d!28669 () Bool)

(assert (=> d!28669 (isDefined!108 (getValueByKey!156 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))

(declare-fun lt!53624 () Unit!3132)

(assert (=> d!28669 (= lt!53624 (choose!654 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))

(declare-fun e!68334 () Bool)

(assert (=> d!28669 e!68334))

(declare-fun res!52308 () Bool)

(assert (=> d!28669 (=> (not res!52308) (not e!68334))))

(assert (=> d!28669 (= res!52308 (isStrictlySorted!295 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))))))

(assert (=> d!28669 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549) lt!53624)))

(declare-fun b!104985 () Bool)

(assert (=> b!104985 (= e!68334 (containsKey!159 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549))))

(assert (= (and d!28669 res!52308) b!104985))

(assert (=> d!28669 m!114999))

(assert (=> d!28669 m!114999))

(assert (=> d!28669 m!115001))

(declare-fun m!117023 () Bool)

(assert (=> d!28669 m!117023))

(declare-fun m!117025 () Bool)

(assert (=> d!28669 m!117025))

(assert (=> b!104985 m!114995))

(assert (=> b!103897 d!28669))

(assert (=> b!103897 d!28425))

(assert (=> b!103897 d!28427))

(declare-fun d!28671 () Bool)

(assert (=> d!28671 (= (get!1331 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2882 (getValueByKey!156 (toList!779 lt!52641) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27907 d!28671))

(assert (=> d!27907 d!28063))

(declare-fun d!28673 () Bool)

(assert (=> d!28673 (isDefined!108 (getValueByKey!156 (toList!779 lt!52569) (_1!1188 lt!52444)))))

(declare-fun lt!53625 () Unit!3132)

(assert (=> d!28673 (= lt!53625 (choose!654 (toList!779 lt!52569) (_1!1188 lt!52444)))))

(declare-fun e!68335 () Bool)

(assert (=> d!28673 e!68335))

(declare-fun res!52309 () Bool)

(assert (=> d!28673 (=> (not res!52309) (not e!68335))))

(assert (=> d!28673 (= res!52309 (isStrictlySorted!295 (toList!779 lt!52569)))))

(assert (=> d!28673 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52569) (_1!1188 lt!52444)) lt!53625)))

(declare-fun b!104986 () Bool)

(assert (=> b!104986 (= e!68335 (containsKey!159 (toList!779 lt!52569) (_1!1188 lt!52444)))))

(assert (= (and d!28673 res!52309) b!104986))

(assert (=> d!28673 m!114169))

(assert (=> d!28673 m!114169))

(assert (=> d!28673 m!114683))

(declare-fun m!117027 () Bool)

(assert (=> d!28673 m!117027))

(declare-fun m!117029 () Bool)

(assert (=> d!28673 m!117029))

(assert (=> b!104986 m!114679))

(assert (=> b!103716 d!28673))

(assert (=> b!103716 d!28431))

(assert (=> b!103716 d!27829))

(declare-fun d!28675 () Bool)

(assert (=> d!28675 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53626 () Unit!3132)

(assert (=> d!28675 (= lt!53626 (choose!654 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68336 () Bool)

(assert (=> d!28675 e!68336))

(declare-fun res!52310 () Bool)

(assert (=> d!28675 (=> (not res!52310) (not e!68336))))

(assert (=> d!28675 (= res!52310 (isStrictlySorted!295 (toList!779 lt!52553)))))

(assert (=> d!28675 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53626)))

(declare-fun b!104987 () Bool)

(assert (=> b!104987 (= e!68336 (containsKey!159 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28675 res!52310) b!104987))

(assert (=> d!28675 m!115049))

(assert (=> d!28675 m!115049))

(assert (=> d!28675 m!115051))

(declare-fun m!117031 () Bool)

(assert (=> d!28675 m!117031))

(assert (=> d!28675 m!116489))

(assert (=> b!104987 m!115045))

(assert (=> b!103926 d!28675))

(assert (=> b!103926 d!28439))

(assert (=> b!103926 d!28441))

(declare-fun d!28677 () Bool)

(declare-fun res!52311 () Bool)

(declare-fun e!68337 () Bool)

(assert (=> d!28677 (=> res!52311 e!68337)))

(assert (=> d!28677 (= res!52311 (and ((_ is Cons!1588) (toList!779 call!10845)) (= (_1!1188 (h!2184 (toList!779 call!10845))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28677 (= (containsKey!159 (toList!779 call!10845) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68337)))

(declare-fun b!104988 () Bool)

(declare-fun e!68338 () Bool)

(assert (=> b!104988 (= e!68337 e!68338)))

(declare-fun res!52312 () Bool)

(assert (=> b!104988 (=> (not res!52312) (not e!68338))))

(assert (=> b!104988 (= res!52312 (and (or (not ((_ is Cons!1588) (toList!779 call!10845))) (bvsle (_1!1188 (h!2184 (toList!779 call!10845))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1588) (toList!779 call!10845)) (bvslt (_1!1188 (h!2184 (toList!779 call!10845))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!104989 () Bool)

(assert (=> b!104989 (= e!68338 (containsKey!159 (t!5646 (toList!779 call!10845)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28677 (not res!52311)) b!104988))

(assert (= (and b!104988 res!52312) b!104989))

(assert (=> b!104989 m!113915))

(declare-fun m!117033 () Bool)

(assert (=> b!104989 m!117033))

(assert (=> d!27801 d!28677))

(declare-fun b!104992 () Bool)

(declare-fun e!68340 () Option!162)

(assert (=> b!104992 (= e!68340 (getValueByKey!156 (t!5646 (t!5646 lt!52568)) (_1!1188 lt!52444)))))

(declare-fun b!104991 () Bool)

(declare-fun e!68339 () Option!162)

(assert (=> b!104991 (= e!68339 e!68340)))

(declare-fun c!18236 () Bool)

(assert (=> b!104991 (= c!18236 (and ((_ is Cons!1588) (t!5646 lt!52568)) (not (= (_1!1188 (h!2184 (t!5646 lt!52568))) (_1!1188 lt!52444)))))))

(declare-fun b!104990 () Bool)

(assert (=> b!104990 (= e!68339 (Some!161 (_2!1188 (h!2184 (t!5646 lt!52568)))))))

(declare-fun d!28679 () Bool)

(declare-fun c!18235 () Bool)

(assert (=> d!28679 (= c!18235 (and ((_ is Cons!1588) (t!5646 lt!52568)) (= (_1!1188 (h!2184 (t!5646 lt!52568))) (_1!1188 lt!52444))))))

(assert (=> d!28679 (= (getValueByKey!156 (t!5646 lt!52568) (_1!1188 lt!52444)) e!68339)))

(declare-fun b!104993 () Bool)

(assert (=> b!104993 (= e!68340 None!160)))

(assert (= (and d!28679 c!18235) b!104990))

(assert (= (and d!28679 (not c!18235)) b!104991))

(assert (= (and b!104991 c!18236) b!104992))

(assert (= (and b!104991 (not c!18236)) b!104993))

(declare-fun m!117035 () Bool)

(assert (=> b!104992 m!117035))

(assert (=> b!103721 d!28679))

(assert (=> d!27835 d!28055))

(assert (=> b!103874 d!28279))

(declare-fun d!28681 () Bool)

(declare-fun e!68341 () Bool)

(assert (=> d!28681 e!68341))

(declare-fun res!52313 () Bool)

(assert (=> d!28681 (=> (not res!52313) (not e!68341))))

(declare-fun lt!53629 () ListLongMap!1527)

(assert (=> d!28681 (= res!52313 (contains!811 lt!53629 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!53628 () List!1592)

(assert (=> d!28681 (= lt!53629 (ListLongMap!1528 lt!53628))))

(declare-fun lt!53627 () Unit!3132)

(declare-fun lt!53630 () Unit!3132)

(assert (=> d!28681 (= lt!53627 lt!53630)))

(assert (=> d!28681 (= (getValueByKey!156 lt!53628 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28681 (= lt!53630 (lemmaContainsTupThenGetReturnValue!72 lt!53628 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28681 (= lt!53628 (insertStrictlySorted!75 (toList!779 (map!1279 newMap!16)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28681 (= (+!137 (map!1279 newMap!16) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) lt!53629)))

(declare-fun b!104994 () Bool)

(declare-fun res!52314 () Bool)

(assert (=> b!104994 (=> (not res!52314) (not e!68341))))

(assert (=> b!104994 (= res!52314 (= (getValueByKey!156 (toList!779 lt!53629) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!104995 () Bool)

(assert (=> b!104995 (= e!68341 (contains!812 (toList!779 lt!53629) (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))

(assert (= (and d!28681 res!52313) b!104994))

(assert (= (and b!104994 res!52314) b!104995))

(declare-fun m!117037 () Bool)

(assert (=> d!28681 m!117037))

(declare-fun m!117039 () Bool)

(assert (=> d!28681 m!117039))

(declare-fun m!117041 () Bool)

(assert (=> d!28681 m!117041))

(declare-fun m!117043 () Bool)

(assert (=> d!28681 m!117043))

(declare-fun m!117045 () Bool)

(assert (=> b!104994 m!117045))

(declare-fun m!117047 () Bool)

(assert (=> b!104995 m!117047))

(assert (=> b!103874 d!28681))

(assert (=> b!103874 d!27787))

(declare-fun d!28683 () Bool)

(declare-fun lt!53631 () Bool)

(assert (=> d!28683 (= lt!53631 (select (content!108 (toList!779 lt!52866)) (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68342 () Bool)

(assert (=> d!28683 (= lt!53631 e!68342)))

(declare-fun res!52315 () Bool)

(assert (=> d!28683 (=> (not res!52315) (not e!68342))))

(assert (=> d!28683 (= res!52315 ((_ is Cons!1588) (toList!779 lt!52866)))))

(assert (=> d!28683 (= (contains!812 (toList!779 lt!52866) (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) lt!53631)))

(declare-fun b!104996 () Bool)

(declare-fun e!68343 () Bool)

(assert (=> b!104996 (= e!68342 e!68343)))

(declare-fun res!52316 () Bool)

(assert (=> b!104996 (=> res!52316 e!68343)))

(assert (=> b!104996 (= res!52316 (= (h!2184 (toList!779 lt!52866)) (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104997 () Bool)

(assert (=> b!104997 (= e!68343 (contains!812 (t!5646 (toList!779 lt!52866)) (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28683 res!52315) b!104996))

(assert (= (and b!104996 (not res!52316)) b!104997))

(declare-fun m!117049 () Bool)

(assert (=> d!28683 m!117049))

(declare-fun m!117051 () Bool)

(assert (=> d!28683 m!117051))

(declare-fun m!117053 () Bool)

(assert (=> b!104997 m!117053))

(assert (=> b!103714 d!28683))

(declare-fun d!28685 () Bool)

(assert (=> d!28685 (= (apply!97 lt!52757 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1331 (getValueByKey!156 (toList!779 lt!52757) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4324 () Bool)

(assert (= bs!4324 d!28685))

(assert (=> bs!4324 m!114345))

(assert (=> bs!4324 m!116941))

(assert (=> bs!4324 m!116941))

(declare-fun m!117055 () Bool)

(assert (=> bs!4324 m!117055))

(assert (=> b!103525 d!28685))

(assert (=> b!103525 d!28195))

(declare-fun b!105000 () Bool)

(declare-fun e!68345 () Option!162)

(assert (=> b!105000 (= e!68345 (getValueByKey!156 (t!5646 (toList!779 lt!52891)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!104999 () Bool)

(declare-fun e!68344 () Option!162)

(assert (=> b!104999 (= e!68344 e!68345)))

(declare-fun c!18238 () Bool)

(assert (=> b!104999 (= c!18238 (and ((_ is Cons!1588) (toList!779 lt!52891)) (not (= (_1!1188 (h!2184 (toList!779 lt!52891))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!104998 () Bool)

(assert (=> b!104998 (= e!68344 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52891)))))))

(declare-fun d!28687 () Bool)

(declare-fun c!18237 () Bool)

(assert (=> d!28687 (= c!18237 (and ((_ is Cons!1588) (toList!779 lt!52891)) (= (_1!1188 (h!2184 (toList!779 lt!52891))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28687 (= (getValueByKey!156 (toList!779 lt!52891) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) e!68344)))

(declare-fun b!105001 () Bool)

(assert (=> b!105001 (= e!68345 None!160)))

(assert (= (and d!28687 c!18237) b!104998))

(assert (= (and d!28687 (not c!18237)) b!104999))

(assert (= (and b!104999 c!18238) b!105000))

(assert (= (and b!104999 (not c!18238)) b!105001))

(declare-fun m!117057 () Bool)

(assert (=> b!105000 m!117057))

(assert (=> b!103747 d!28687))

(declare-fun d!28689 () Bool)

(declare-fun res!52317 () Bool)

(declare-fun e!68346 () Bool)

(assert (=> d!28689 (=> res!52317 e!68346)))

(assert (=> d!28689 (= res!52317 (and ((_ is Cons!1588) (toList!779 lt!52553)) (= (_1!1188 (h!2184 (toList!779 lt!52553))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28689 (= (containsKey!159 (toList!779 lt!52553) #b1000000000000000000000000000000000000000000000000000000000000000) e!68346)))

(declare-fun b!105002 () Bool)

(declare-fun e!68347 () Bool)

(assert (=> b!105002 (= e!68346 e!68347)))

(declare-fun res!52318 () Bool)

(assert (=> b!105002 (=> (not res!52318) (not e!68347))))

(assert (=> b!105002 (= res!52318 (and (or (not ((_ is Cons!1588) (toList!779 lt!52553))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52553))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1588) (toList!779 lt!52553)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52553))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105003 () Bool)

(assert (=> b!105003 (= e!68347 (containsKey!159 (t!5646 (toList!779 lt!52553)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28689 (not res!52317)) b!105002))

(assert (= (and b!105002 res!52318) b!105003))

(declare-fun m!117059 () Bool)

(assert (=> b!105003 m!117059))

(assert (=> d!27981 d!28689))

(assert (=> d!27817 d!28055))

(declare-fun d!28691 () Bool)

(declare-fun res!52319 () Bool)

(declare-fun e!68348 () Bool)

(assert (=> d!28691 (=> res!52319 e!68348)))

(assert (=> d!28691 (= res!52319 (and ((_ is Cons!1588) (toList!779 e!67420)) (= (_1!1188 (h!2184 (toList!779 e!67420))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28691 (= (containsKey!159 (toList!779 e!67420) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68348)))

(declare-fun b!105004 () Bool)

(declare-fun e!68349 () Bool)

(assert (=> b!105004 (= e!68348 e!68349)))

(declare-fun res!52320 () Bool)

(assert (=> b!105004 (=> (not res!52320) (not e!68349))))

(assert (=> b!105004 (= res!52320 (and (or (not ((_ is Cons!1588) (toList!779 e!67420))) (bvsle (_1!1188 (h!2184 (toList!779 e!67420))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1588) (toList!779 e!67420)) (bvslt (_1!1188 (h!2184 (toList!779 e!67420))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!105005 () Bool)

(assert (=> b!105005 (= e!68349 (containsKey!159 (t!5646 (toList!779 e!67420)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28691 (not res!52319)) b!105004))

(assert (= (and b!105004 res!52320) b!105005))

(assert (=> b!105005 m!113915))

(declare-fun m!117061 () Bool)

(assert (=> b!105005 m!117061))

(assert (=> d!27945 d!28691))

(declare-fun d!28693 () Bool)

(assert (=> d!28693 (isDefined!108 (getValueByKey!156 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53632 () Unit!3132)

(assert (=> d!28693 (= lt!53632 (choose!654 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68350 () Bool)

(assert (=> d!28693 e!68350))

(declare-fun res!52321 () Bool)

(assert (=> d!28693 (=> (not res!52321) (not e!68350))))

(assert (=> d!28693 (= res!52321 (isStrictlySorted!295 (toList!779 lt!52553)))))

(assert (=> d!28693 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53632)))

(declare-fun b!105006 () Bool)

(assert (=> b!105006 (= e!68350 (containsKey!159 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28693 res!52321) b!105006))

(assert (=> d!28693 m!114103))

(assert (=> d!28693 m!114873))

(assert (=> d!28693 m!114873))

(assert (=> d!28693 m!114875))

(assert (=> d!28693 m!114103))

(declare-fun m!117063 () Bool)

(assert (=> d!28693 m!117063))

(assert (=> d!28693 m!116489))

(assert (=> b!105006 m!114103))

(assert (=> b!105006 m!114869))

(assert (=> b!103819 d!28693))

(assert (=> b!103819 d!28453))

(assert (=> b!103819 d!28267))

(declare-fun d!28695 () Bool)

(assert (=> d!28695 (= (apply!97 lt!52780 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!52780) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4325 () Bool)

(assert (= bs!4325 d!28695))

(assert (=> bs!4325 m!115799))

(assert (=> bs!4325 m!115799))

(declare-fun m!117065 () Bool)

(assert (=> bs!4325 m!117065))

(assert (=> b!103556 d!28695))

(declare-fun d!28697 () Bool)

(assert (=> d!28697 (= (inRange!0 (index!3156 lt!52841) (mask!6696 newMap!16)) (and (bvsge (index!3156 lt!52841) #b00000000000000000000000000000000) (bvslt (index!3156 lt!52841) (bvadd (mask!6696 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!103694 d!28697))

(assert (=> b!103609 d!27775))

(declare-fun call!11030 () ListLongMap!1527)

(declare-fun bm!11021 () Bool)

(assert (=> bm!11021 (= call!11030 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun bm!11022 () Bool)

(declare-fun call!11027 () ListLongMap!1527)

(declare-fun call!11028 () ListLongMap!1527)

(assert (=> bm!11022 (= call!11027 call!11028)))

(declare-fun b!105007 () Bool)

(declare-fun e!68351 () Unit!3132)

(declare-fun lt!53647 () Unit!3132)

(assert (=> b!105007 (= e!68351 lt!53647)))

(declare-fun lt!53649 () ListLongMap!1527)

(assert (=> b!105007 (= lt!53649 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53654 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53654 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53633 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53633 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53651 () Unit!3132)

(assert (=> b!105007 (= lt!53651 (addStillContains!73 lt!53649 lt!53654 lt!52447 lt!53633))))

(assert (=> b!105007 (contains!811 (+!137 lt!53649 (tuple2!2355 lt!53654 lt!52447)) lt!53633)))

(declare-fun lt!53638 () Unit!3132)

(assert (=> b!105007 (= lt!53638 lt!53651)))

(declare-fun lt!53643 () ListLongMap!1527)

(assert (=> b!105007 (= lt!53643 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53641 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53641 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53645 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53645 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53634 () Unit!3132)

(assert (=> b!105007 (= lt!53634 (addApplyDifferent!73 lt!53643 lt!53641 (minValue!2437 newMap!16) lt!53645))))

(assert (=> b!105007 (= (apply!97 (+!137 lt!53643 (tuple2!2355 lt!53641 (minValue!2437 newMap!16))) lt!53645) (apply!97 lt!53643 lt!53645))))

(declare-fun lt!53653 () Unit!3132)

(assert (=> b!105007 (= lt!53653 lt!53634)))

(declare-fun lt!53648 () ListLongMap!1527)

(assert (=> b!105007 (= lt!53648 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53646 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53646 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53636 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53636 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53652 () Unit!3132)

(assert (=> b!105007 (= lt!53652 (addApplyDifferent!73 lt!53648 lt!53646 lt!52447 lt!53636))))

(assert (=> b!105007 (= (apply!97 (+!137 lt!53648 (tuple2!2355 lt!53646 lt!52447)) lt!53636) (apply!97 lt!53648 lt!53636))))

(declare-fun lt!53635 () Unit!3132)

(assert (=> b!105007 (= lt!53635 lt!53652)))

(declare-fun lt!53642 () ListLongMap!1527)

(assert (=> b!105007 (= lt!53642 (getCurrentListMapNoExtraKeys!104 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(declare-fun lt!53644 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53644 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53640 () (_ BitVec 64))

(assert (=> b!105007 (= lt!53640 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!105007 (= lt!53647 (addApplyDifferent!73 lt!53642 lt!53644 (minValue!2437 newMap!16) lt!53640))))

(assert (=> b!105007 (= (apply!97 (+!137 lt!53642 (tuple2!2355 lt!53644 (minValue!2437 newMap!16))) lt!53640) (apply!97 lt!53642 lt!53640))))

(declare-fun b!105008 () Bool)

(declare-fun e!68355 () Bool)

(declare-fun call!11024 () Bool)

(assert (=> b!105008 (= e!68355 (not call!11024))))

(declare-fun b!105009 () Bool)

(declare-fun e!68356 () Bool)

(declare-fun lt!53650 () ListLongMap!1527)

(assert (=> b!105009 (= e!68356 (= (apply!97 lt!53650 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1328 (select (arr!2049 (_values!2543 newMap!16)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105009 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2303 (_values!2543 newMap!16))))))

(assert (=> b!105009 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!105010 () Bool)

(declare-fun e!68357 () ListLongMap!1527)

(declare-fun call!11025 () ListLongMap!1527)

(assert (=> b!105010 (= e!68357 call!11025)))

(declare-fun b!105011 () Bool)

(declare-fun Unit!3209 () Unit!3132)

(assert (=> b!105011 (= e!68351 Unit!3209)))

(declare-fun b!105012 () Bool)

(declare-fun e!68354 () ListLongMap!1527)

(assert (=> b!105012 (= e!68354 call!11027)))

(declare-fun b!105014 () Bool)

(declare-fun e!68352 () Bool)

(declare-fun call!11026 () Bool)

(assert (=> b!105014 (= e!68352 (not call!11026))))

(declare-fun b!105015 () Bool)

(declare-fun e!68353 () Bool)

(assert (=> b!105015 (= e!68353 e!68356)))

(declare-fun res!52324 () Bool)

(assert (=> b!105015 (=> (not res!52324) (not e!68356))))

(assert (=> b!105015 (= res!52324 (contains!811 lt!53650 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105015 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!105016 () Bool)

(declare-fun e!68360 () Bool)

(assert (=> b!105016 (= e!68360 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105017 () Bool)

(declare-fun res!52322 () Bool)

(declare-fun e!68358 () Bool)

(assert (=> b!105017 (=> (not res!52322) (not e!68358))))

(assert (=> b!105017 (= res!52322 e!68352)))

(declare-fun c!18239 () Bool)

(assert (=> b!105017 (= c!18239 (not (= (bvand lt!52735 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun call!11029 () ListLongMap!1527)

(declare-fun c!18242 () Bool)

(declare-fun bm!11023 () Bool)

(declare-fun c!18244 () Bool)

(assert (=> bm!11023 (= call!11029 (+!137 (ite c!18242 call!11030 (ite c!18244 call!11028 call!11027)) (ite (or c!18242 c!18244) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16)))))))

(declare-fun b!105018 () Bool)

(declare-fun e!68359 () ListLongMap!1527)

(assert (=> b!105018 (= e!68359 e!68357)))

(assert (=> b!105018 (= c!18244 (and (not (= (bvand lt!52735 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52735 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105019 () Bool)

(assert (=> b!105019 (= e!68354 call!11025)))

(declare-fun bm!11024 () Bool)

(assert (=> bm!11024 (= call!11025 call!11029)))

(declare-fun b!105020 () Bool)

(declare-fun c!18243 () Bool)

(assert (=> b!105020 (= c!18243 (and (not (= (bvand lt!52735 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52735 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105020 (= e!68357 e!68354)))

(declare-fun b!105021 () Bool)

(assert (=> b!105021 (= e!68359 (+!137 call!11029 (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2437 newMap!16))))))

(declare-fun bm!11025 () Bool)

(assert (=> bm!11025 (= call!11028 call!11030)))

(declare-fun b!105022 () Bool)

(declare-fun res!52330 () Bool)

(assert (=> b!105022 (=> (not res!52330) (not e!68358))))

(assert (=> b!105022 (= res!52330 e!68353)))

(declare-fun res!52326 () Bool)

(assert (=> b!105022 (=> res!52326 e!68353)))

(declare-fun e!68361 () Bool)

(assert (=> b!105022 (= res!52326 (not e!68361))))

(declare-fun res!52325 () Bool)

(assert (=> b!105022 (=> (not res!52325) (not e!68361))))

(assert (=> b!105022 (= res!52325 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!105023 () Bool)

(declare-fun e!68363 () Bool)

(assert (=> b!105023 (= e!68363 (= (apply!97 lt!53650 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2437 newMap!16)))))

(declare-fun bm!11026 () Bool)

(assert (=> bm!11026 (= call!11026 (contains!811 lt!53650 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11027 () Bool)

(assert (=> bm!11027 (= call!11024 (contains!811 lt!53650 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!105013 () Bool)

(assert (=> b!105013 (= e!68355 e!68363)))

(declare-fun res!52328 () Bool)

(assert (=> b!105013 (= res!52328 call!11024)))

(assert (=> b!105013 (=> (not res!52328) (not e!68363))))

(declare-fun d!28699 () Bool)

(assert (=> d!28699 e!68358))

(declare-fun res!52329 () Bool)

(assert (=> d!28699 (=> (not res!52329) (not e!68358))))

(assert (=> d!28699 (= res!52329 (or (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))))

(declare-fun lt!53637 () ListLongMap!1527)

(assert (=> d!28699 (= lt!53650 lt!53637)))

(declare-fun lt!53639 () Unit!3132)

(assert (=> d!28699 (= lt!53639 e!68351)))

(declare-fun c!18241 () Bool)

(assert (=> d!28699 (= c!18241 e!68360)))

(declare-fun res!52327 () Bool)

(assert (=> d!28699 (=> (not res!52327) (not e!68360))))

(assert (=> d!28699 (= res!52327 (bvslt #b00000000000000000000000000000000 (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28699 (= lt!53637 e!68359)))

(assert (=> d!28699 (= c!18242 (and (not (= (bvand lt!52735 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52735 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28699 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28699 (= (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53650)))

(declare-fun b!105024 () Bool)

(assert (=> b!105024 (= e!68361 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105025 () Bool)

(declare-fun e!68362 () Bool)

(assert (=> b!105025 (= e!68352 e!68362)))

(declare-fun res!52323 () Bool)

(assert (=> b!105025 (= res!52323 call!11026)))

(assert (=> b!105025 (=> (not res!52323) (not e!68362))))

(declare-fun b!105026 () Bool)

(assert (=> b!105026 (= e!68362 (= (apply!97 lt!53650 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52447))))

(declare-fun b!105027 () Bool)

(assert (=> b!105027 (= e!68358 e!68355)))

(declare-fun c!18240 () Bool)

(assert (=> b!105027 (= c!18240 (not (= (bvand lt!52735 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(assert (= (and d!28699 c!18242) b!105021))

(assert (= (and d!28699 (not c!18242)) b!105018))

(assert (= (and b!105018 c!18244) b!105010))

(assert (= (and b!105018 (not c!18244)) b!105020))

(assert (= (and b!105020 c!18243) b!105019))

(assert (= (and b!105020 (not c!18243)) b!105012))

(assert (= (or b!105019 b!105012) bm!11022))

(assert (= (or b!105010 bm!11022) bm!11025))

(assert (= (or b!105010 b!105019) bm!11024))

(assert (= (or b!105021 bm!11025) bm!11021))

(assert (= (or b!105021 bm!11024) bm!11023))

(assert (= (and d!28699 res!52327) b!105016))

(assert (= (and d!28699 c!18241) b!105007))

(assert (= (and d!28699 (not c!18241)) b!105011))

(assert (= (and d!28699 res!52329) b!105022))

(assert (= (and b!105022 res!52325) b!105024))

(assert (= (and b!105022 (not res!52326)) b!105015))

(assert (= (and b!105015 res!52324) b!105009))

(assert (= (and b!105022 res!52330) b!105017))

(assert (= (and b!105017 c!18239) b!105025))

(assert (= (and b!105017 (not c!18239)) b!105014))

(assert (= (and b!105025 res!52323) b!105026))

(assert (= (or b!105025 b!105014) bm!11026))

(assert (= (and b!105017 res!52322) b!105027))

(assert (= (and b!105027 c!18240) b!105013))

(assert (= (and b!105027 (not c!18240)) b!105008))

(assert (= (and b!105013 res!52328) b!105023))

(assert (= (or b!105013 b!105008) bm!11027))

(declare-fun b_lambda!4681 () Bool)

(assert (=> (not b_lambda!4681) (not b!105009)))

(assert (=> b!105009 t!5659))

(declare-fun b_and!6485 () Bool)

(assert (= b_and!6481 (and (=> t!5659 result!3431) b_and!6485)))

(assert (=> b!105009 t!5661))

(declare-fun b_and!6487 () Bool)

(assert (= b_and!6483 (and (=> t!5661 result!3433) b_and!6487)))

(declare-fun m!117067 () Bool)

(assert (=> b!105021 m!117067))

(assert (=> d!28699 m!114321))

(declare-fun m!117069 () Bool)

(assert (=> bm!11021 m!117069))

(assert (=> b!105024 m!114381))

(assert (=> b!105024 m!114381))

(assert (=> b!105024 m!114383))

(declare-fun m!117071 () Bool)

(assert (=> bm!11027 m!117071))

(assert (=> b!105015 m!114381))

(assert (=> b!105015 m!114381))

(declare-fun m!117073 () Bool)

(assert (=> b!105015 m!117073))

(assert (=> b!105009 m!114389))

(assert (=> b!105009 m!114381))

(declare-fun m!117075 () Bool)

(assert (=> b!105009 m!117075))

(assert (=> b!105009 m!114381))

(assert (=> b!105009 m!114393))

(assert (=> b!105009 m!114393))

(assert (=> b!105009 m!114389))

(assert (=> b!105009 m!114395))

(declare-fun m!117077 () Bool)

(assert (=> bm!11023 m!117077))

(declare-fun m!117079 () Bool)

(assert (=> b!105026 m!117079))

(declare-fun m!117081 () Bool)

(assert (=> bm!11026 m!117081))

(declare-fun m!117083 () Bool)

(assert (=> b!105007 m!117083))

(declare-fun m!117085 () Bool)

(assert (=> b!105007 m!117085))

(declare-fun m!117087 () Bool)

(assert (=> b!105007 m!117087))

(assert (=> b!105007 m!114381))

(declare-fun m!117089 () Bool)

(assert (=> b!105007 m!117089))

(assert (=> b!105007 m!117069))

(declare-fun m!117091 () Bool)

(assert (=> b!105007 m!117091))

(declare-fun m!117093 () Bool)

(assert (=> b!105007 m!117093))

(declare-fun m!117095 () Bool)

(assert (=> b!105007 m!117095))

(declare-fun m!117097 () Bool)

(assert (=> b!105007 m!117097))

(declare-fun m!117099 () Bool)

(assert (=> b!105007 m!117099))

(declare-fun m!117101 () Bool)

(assert (=> b!105007 m!117101))

(assert (=> b!105007 m!117095))

(declare-fun m!117103 () Bool)

(assert (=> b!105007 m!117103))

(assert (=> b!105007 m!117089))

(declare-fun m!117105 () Bool)

(assert (=> b!105007 m!117105))

(assert (=> b!105007 m!117087))

(declare-fun m!117107 () Bool)

(assert (=> b!105007 m!117107))

(declare-fun m!117109 () Bool)

(assert (=> b!105007 m!117109))

(assert (=> b!105007 m!117099))

(declare-fun m!117111 () Bool)

(assert (=> b!105007 m!117111))

(assert (=> b!105016 m!114381))

(assert (=> b!105016 m!114381))

(assert (=> b!105016 m!114383))

(declare-fun m!117113 () Bool)

(assert (=> b!105023 m!117113))

(assert (=> d!27813 d!28699))

(declare-fun d!28701 () Bool)

(assert (=> d!28701 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) lt!52735 lt!52447 (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28701 true))

(declare-fun _$7!89 () Unit!3132)

(assert (=> d!28701 (= (choose!647 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) lt!52735 (zeroValue!2437 newMap!16) lt!52447 (minValue!2437 newMap!16) (defaultEntry!2560 newMap!16)) _$7!89)))

(declare-fun bs!4326 () Bool)

(assert (= bs!4326 d!28701))

(assert (=> bs!4326 m!114197))

(assert (=> bs!4326 m!114197))

(assert (=> bs!4326 m!114375))

(assert (=> bs!4326 m!114371))

(assert (=> d!27813 d!28701))

(assert (=> d!27813 d!27817))

(declare-fun d!28703 () Bool)

(declare-fun e!68364 () Bool)

(assert (=> d!28703 e!68364))

(declare-fun res!52331 () Bool)

(assert (=> d!28703 (=> (not res!52331) (not e!68364))))

(declare-fun lt!53657 () ListLongMap!1527)

(assert (=> d!28703 (= res!52331 (contains!811 lt!53657 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(declare-fun lt!53656 () List!1592)

(assert (=> d!28703 (= lt!53657 (ListLongMap!1528 lt!53656))))

(declare-fun lt!53655 () Unit!3132)

(declare-fun lt!53658 () Unit!3132)

(assert (=> d!28703 (= lt!53655 lt!53658)))

(assert (=> d!28703 (= (getValueByKey!156 lt!53656 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(assert (=> d!28703 (= lt!53658 (lemmaContainsTupThenGetReturnValue!72 lt!53656 (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(assert (=> d!28703 (= lt!53656 (insertStrictlySorted!75 (toList!779 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16))) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)) (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447))))))

(assert (=> d!28703 (= (+!137 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)) lt!53657)))

(declare-fun b!105028 () Bool)

(declare-fun res!52332 () Bool)

(assert (=> b!105028 (=> (not res!52332) (not e!68364))))

(assert (=> b!105028 (= res!52332 (= (getValueByKey!156 (toList!779 lt!53657) (_1!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447))) (Some!161 (_2!1188 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)))))))

(declare-fun b!105029 () Bool)

(assert (=> b!105029 (= e!68364 (contains!812 (toList!779 lt!53657) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52447)))))

(assert (= (and d!28703 res!52331) b!105028))

(assert (= (and b!105028 res!52332) b!105029))

(declare-fun m!117115 () Bool)

(assert (=> d!28703 m!117115))

(declare-fun m!117117 () Bool)

(assert (=> d!28703 m!117117))

(declare-fun m!117119 () Bool)

(assert (=> d!28703 m!117119))

(declare-fun m!117121 () Bool)

(assert (=> d!28703 m!117121))

(declare-fun m!117123 () Bool)

(assert (=> b!105028 m!117123))

(declare-fun m!117125 () Bool)

(assert (=> b!105029 m!117125))

(assert (=> d!27813 d!28703))

(assert (=> d!27813 d!28055))

(declare-fun d!28705 () Bool)

(declare-fun lt!53659 () Bool)

(assert (=> d!28705 (= lt!53659 (select (content!108 lt!52557) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun e!68365 () Bool)

(assert (=> d!28705 (= lt!53659 e!68365)))

(declare-fun res!52333 () Bool)

(assert (=> d!28705 (=> (not res!52333) (not e!68365))))

(assert (=> d!28705 (= res!52333 ((_ is Cons!1588) lt!52557))))

(assert (=> d!28705 (= (contains!812 lt!52557 (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))) lt!53659)))

(declare-fun b!105030 () Bool)

(declare-fun e!68366 () Bool)

(assert (=> b!105030 (= e!68365 e!68366)))

(declare-fun res!52334 () Bool)

(assert (=> b!105030 (=> res!52334 e!68366)))

(assert (=> b!105030 (= res!52334 (= (h!2184 lt!52557) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(declare-fun b!105031 () Bool)

(assert (=> b!105031 (= e!68366 (contains!812 (t!5646 lt!52557) (tuple2!2355 (_1!1188 lt!52444) (_2!1188 lt!52444))))))

(assert (= (and d!28705 res!52333) b!105030))

(assert (= (and b!105030 (not res!52334)) b!105031))

(declare-fun m!117127 () Bool)

(assert (=> d!28705 m!117127))

(declare-fun m!117129 () Bool)

(assert (=> d!28705 m!117129))

(declare-fun m!117131 () Bool)

(assert (=> b!105031 m!117131))

(assert (=> b!103805 d!28705))

(assert (=> d!27995 d!28055))

(declare-fun b!105044 () Bool)

(declare-fun e!68373 () SeekEntryResult!252)

(assert (=> b!105044 (= e!68373 (MissingVacant!252 (index!3157 lt!52905)))))

(declare-fun b!105045 () Bool)

(declare-fun e!68374 () SeekEntryResult!252)

(assert (=> b!105045 (= e!68374 (Found!252 (index!3157 lt!52905)))))

(declare-fun b!105046 () Bool)

(assert (=> b!105046 (= e!68373 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13494 lt!52905) #b00000000000000000000000000000001) (nextIndex!0 (index!3157 lt!52905) (bvadd (x!13494 lt!52905) #b00000000000000000000000000000001) (mask!6696 newMap!16)) (index!3157 lt!52905) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)))))

(declare-fun lt!53665 () SeekEntryResult!252)

(declare-fun d!28707 () Bool)

(assert (=> d!28707 (and (or ((_ is Undefined!252) lt!53665) (not ((_ is Found!252) lt!53665)) (and (bvsge (index!3156 lt!53665) #b00000000000000000000000000000000) (bvslt (index!3156 lt!53665) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!53665) ((_ is Found!252) lt!53665) (not ((_ is MissingVacant!252) lt!53665)) (not (= (index!3158 lt!53665) (index!3157 lt!52905))) (and (bvsge (index!3158 lt!53665) #b00000000000000000000000000000000) (bvslt (index!3158 lt!53665) (size!2302 (_keys!4262 newMap!16))))) (or ((_ is Undefined!252) lt!53665) (ite ((_ is Found!252) lt!53665) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3156 lt!53665)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) (and ((_ is MissingVacant!252) lt!53665) (= (index!3158 lt!53665) (index!3157 lt!52905)) (= (select (arr!2048 (_keys!4262 newMap!16)) (index!3158 lt!53665)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!68375 () SeekEntryResult!252)

(assert (=> d!28707 (= lt!53665 e!68375)))

(declare-fun c!18253 () Bool)

(assert (=> d!28707 (= c!18253 (bvsge (x!13494 lt!52905) #b01111111111111111111111111111110))))

(declare-fun lt!53664 () (_ BitVec 64))

(assert (=> d!28707 (= lt!53664 (select (arr!2048 (_keys!4262 newMap!16)) (index!3157 lt!52905)))))

(assert (=> d!28707 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28707 (= (seekKeyOrZeroReturnVacant!0 (x!13494 lt!52905) (index!3157 lt!52905) (index!3157 lt!52905) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4262 newMap!16) (mask!6696 newMap!16)) lt!53665)))

(declare-fun b!105047 () Bool)

(assert (=> b!105047 (= e!68375 Undefined!252)))

(declare-fun b!105048 () Bool)

(assert (=> b!105048 (= e!68375 e!68374)))

(declare-fun c!18251 () Bool)

(assert (=> b!105048 (= c!18251 (= lt!53664 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!105049 () Bool)

(declare-fun c!18252 () Bool)

(assert (=> b!105049 (= c!18252 (= lt!53664 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105049 (= e!68374 e!68373)))

(assert (= (and d!28707 c!18253) b!105047))

(assert (= (and d!28707 (not c!18253)) b!105048))

(assert (= (and b!105048 c!18251) b!105045))

(assert (= (and b!105048 (not c!18251)) b!105049))

(assert (= (and b!105049 c!18252) b!105044))

(assert (= (and b!105049 (not c!18252)) b!105046))

(declare-fun m!117133 () Bool)

(assert (=> b!105046 m!117133))

(assert (=> b!105046 m!117133))

(assert (=> b!105046 m!113915))

(declare-fun m!117135 () Bool)

(assert (=> b!105046 m!117135))

(declare-fun m!117137 () Bool)

(assert (=> d!28707 m!117137))

(declare-fun m!117139 () Bool)

(assert (=> d!28707 m!117139))

(assert (=> d!28707 m!114773))

(assert (=> d!28707 m!114321))

(assert (=> b!103765 d!28707))

(declare-fun d!28709 () Bool)

(declare-fun res!52335 () Bool)

(declare-fun e!68376 () Bool)

(assert (=> d!28709 (=> res!52335 e!68376)))

(assert (=> d!28709 (= res!52335 (and ((_ is Cons!1588) (toList!779 lt!52562)) (= (_1!1188 (h!2184 (toList!779 lt!52562))) (_1!1188 lt!52442))))))

(assert (=> d!28709 (= (containsKey!159 (toList!779 lt!52562) (_1!1188 lt!52442)) e!68376)))

(declare-fun b!105050 () Bool)

(declare-fun e!68377 () Bool)

(assert (=> b!105050 (= e!68376 e!68377)))

(declare-fun res!52336 () Bool)

(assert (=> b!105050 (=> (not res!52336) (not e!68377))))

(assert (=> b!105050 (= res!52336 (and (or (not ((_ is Cons!1588) (toList!779 lt!52562))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52562))) (_1!1188 lt!52442))) ((_ is Cons!1588) (toList!779 lt!52562)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52562))) (_1!1188 lt!52442))))))

(declare-fun b!105051 () Bool)

(assert (=> b!105051 (= e!68377 (containsKey!159 (t!5646 (toList!779 lt!52562)) (_1!1188 lt!52442)))))

(assert (= (and d!28709 (not res!52335)) b!105050))

(assert (= (and b!105050 res!52336) b!105051))

(declare-fun m!117141 () Bool)

(assert (=> b!105051 m!117141))

(assert (=> d!27929 d!28709))

(declare-fun d!28711 () Bool)

(assert (=> d!28711 (contains!811 (getCurrentListMap!467 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355))))

(declare-fun lt!53668 () Unit!3132)

(declare-fun choose!658 (array!4317 array!4319 (_ BitVec 32) (_ BitVec 32) V!3209 V!3209 (_ BitVec 64) (_ BitVec 32) Int) Unit!3132)

(assert (=> d!28711 (= lt!53668 (choose!658 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)))))

(assert (=> d!28711 (validMask!0 (mask!6696 newMap!16))))

(assert (=> d!28711 (= (lemmaArrayContainsKeyThenInListMap!29 (_keys!4262 newMap!16) (_values!2543 newMap!16) (mask!6696 newMap!16) (extraKeys!2369 newMap!16) (zeroValue!2437 newMap!16) (minValue!2437 newMap!16) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2560 newMap!16)) lt!53668)))

(declare-fun bs!4327 () Bool)

(assert (= bs!4327 d!28711))

(assert (=> bs!4327 m!114197))

(assert (=> bs!4327 m!114197))

(assert (=> bs!4327 m!113915))

(assert (=> bs!4327 m!114921))

(assert (=> bs!4327 m!113915))

(declare-fun m!117143 () Bool)

(assert (=> bs!4327 m!117143))

(assert (=> bs!4327 m!114321))

(assert (=> b!103881 d!28711))

(assert (=> b!103881 d!28619))

(assert (=> b!103881 d!27817))

(declare-fun d!28713 () Bool)

(declare-fun e!68379 () Bool)

(assert (=> d!28713 e!68379))

(declare-fun res!52337 () Bool)

(assert (=> d!28713 (=> res!52337 e!68379)))

(declare-fun lt!53672 () Bool)

(assert (=> d!28713 (= res!52337 (not lt!53672))))

(declare-fun lt!53669 () Bool)

(assert (=> d!28713 (= lt!53672 lt!53669)))

(declare-fun lt!53670 () Unit!3132)

(declare-fun e!68378 () Unit!3132)

(assert (=> d!28713 (= lt!53670 e!68378)))

(declare-fun c!18254 () Bool)

(assert (=> d!28713 (= c!18254 lt!53669)))

(assert (=> d!28713 (= lt!53669 (containsKey!159 (toList!779 lt!52891) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> d!28713 (= (contains!811 lt!52891 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53672)))

(declare-fun b!105052 () Bool)

(declare-fun lt!53671 () Unit!3132)

(assert (=> b!105052 (= e!68378 lt!53671)))

(assert (=> b!105052 (= lt!53671 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52891) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(assert (=> b!105052 (isDefined!108 (getValueByKey!156 (toList!779 lt!52891) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!105053 () Bool)

(declare-fun Unit!3210 () Unit!3132)

(assert (=> b!105053 (= e!68378 Unit!3210)))

(declare-fun b!105054 () Bool)

(assert (=> b!105054 (= e!68379 (isDefined!108 (getValueByKey!156 (toList!779 lt!52891) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (= (and d!28713 c!18254) b!105052))

(assert (= (and d!28713 (not c!18254)) b!105053))

(assert (= (and d!28713 (not res!52337)) b!105054))

(declare-fun m!117145 () Bool)

(assert (=> d!28713 m!117145))

(declare-fun m!117147 () Bool)

(assert (=> b!105052 m!117147))

(assert (=> b!105052 m!114757))

(assert (=> b!105052 m!114757))

(declare-fun m!117149 () Bool)

(assert (=> b!105052 m!117149))

(assert (=> b!105054 m!114757))

(assert (=> b!105054 m!114757))

(assert (=> b!105054 m!117149))

(assert (=> d!27913 d!28713))

(declare-fun b!105057 () Bool)

(declare-fun e!68381 () Option!162)

(assert (=> b!105057 (= e!68381 (getValueByKey!156 (t!5646 lt!52890) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!105056 () Bool)

(declare-fun e!68380 () Option!162)

(assert (=> b!105056 (= e!68380 e!68381)))

(declare-fun c!18256 () Bool)

(assert (=> b!105056 (= c!18256 (and ((_ is Cons!1588) lt!52890) (not (= (_1!1188 (h!2184 lt!52890)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun b!105055 () Bool)

(assert (=> b!105055 (= e!68380 (Some!161 (_2!1188 (h!2184 lt!52890))))))

(declare-fun d!28715 () Bool)

(declare-fun c!18255 () Bool)

(assert (=> d!28715 (= c!18255 (and ((_ is Cons!1588) lt!52890) (= (_1!1188 (h!2184 lt!52890)) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28715 (= (getValueByKey!156 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) e!68380)))

(declare-fun b!105058 () Bool)

(assert (=> b!105058 (= e!68381 None!160)))

(assert (= (and d!28715 c!18255) b!105055))

(assert (= (and d!28715 (not c!18255)) b!105056))

(assert (= (and b!105056 c!18256) b!105057))

(assert (= (and b!105056 (not c!18256)) b!105058))

(declare-fun m!117151 () Bool)

(assert (=> b!105057 m!117151))

(assert (=> d!27913 d!28715))

(declare-fun d!28717 () Bool)

(assert (=> d!28717 (= (getValueByKey!156 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) (Some!161 (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun lt!53673 () Unit!3132)

(assert (=> d!28717 (= lt!53673 (choose!648 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun e!68382 () Bool)

(assert (=> d!28717 e!68382))

(declare-fun res!52338 () Bool)

(assert (=> d!28717 (=> (not res!52338) (not e!68382))))

(assert (=> d!28717 (= res!52338 (isStrictlySorted!295 lt!52890))))

(assert (=> d!28717 (= (lemmaContainsTupThenGetReturnValue!72 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53673)))

(declare-fun b!105059 () Bool)

(declare-fun res!52339 () Bool)

(assert (=> b!105059 (=> (not res!52339) (not e!68382))))

(assert (=> b!105059 (= res!52339 (containsKey!159 lt!52890 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!105060 () Bool)

(assert (=> b!105060 (= e!68382 (contains!812 lt!52890 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (= (and d!28717 res!52338) b!105059))

(assert (= (and b!105059 res!52339) b!105060))

(assert (=> d!28717 m!114751))

(declare-fun m!117153 () Bool)

(assert (=> d!28717 m!117153))

(declare-fun m!117155 () Bool)

(assert (=> d!28717 m!117155))

(declare-fun m!117157 () Bool)

(assert (=> b!105059 m!117157))

(declare-fun m!117159 () Bool)

(assert (=> b!105060 m!117159))

(assert (=> d!27913 d!28717))

(declare-fun b!105061 () Bool)

(declare-fun e!68383 () List!1592)

(declare-fun call!11032 () List!1592)

(assert (=> b!105061 (= e!68383 call!11032)))

(declare-fun b!105062 () Bool)

(declare-fun e!68386 () List!1592)

(assert (=> b!105062 (= e!68386 (insertStrictlySorted!75 (t!5646 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!105063 () Bool)

(declare-fun e!68384 () List!1592)

(declare-fun call!11033 () List!1592)

(assert (=> b!105063 (= e!68384 call!11033)))

(declare-fun d!28719 () Bool)

(declare-fun e!68385 () Bool)

(assert (=> d!28719 e!68385))

(declare-fun res!52341 () Bool)

(assert (=> d!28719 (=> (not res!52341) (not e!68385))))

(declare-fun lt!53674 () List!1592)

(assert (=> d!28719 (= res!52341 (isStrictlySorted!295 lt!53674))))

(declare-fun e!68387 () List!1592)

(assert (=> d!28719 (= lt!53674 e!68387)))

(declare-fun c!18257 () Bool)

(assert (=> d!28719 (= c!18257 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> d!28719 (isStrictlySorted!295 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28719 (= (insertStrictlySorted!75 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))) lt!53674)))

(declare-fun call!11031 () List!1592)

(declare-fun bm!11028 () Bool)

(assert (=> bm!11028 (= call!11031 ($colon$colon!79 e!68386 (ite c!18257 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))))

(declare-fun c!18259 () Bool)

(assert (=> bm!11028 (= c!18259 c!18257)))

(declare-fun c!18260 () Bool)

(declare-fun b!105064 () Bool)

(declare-fun c!18258 () Bool)

(assert (=> b!105064 (= e!68386 (ite c!18260 (t!5646 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (ite c!18258 (Cons!1588 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (t!5646 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) Nil!1589)))))

(declare-fun b!105065 () Bool)

(assert (=> b!105065 (= c!18258 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (bvsgt (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(assert (=> b!105065 (= e!68384 e!68383)))

(declare-fun bm!11029 () Bool)

(assert (=> bm!11029 (= call!11032 call!11033)))

(declare-fun b!105066 () Bool)

(assert (=> b!105066 (= e!68383 call!11032)))

(declare-fun bm!11030 () Bool)

(assert (=> bm!11030 (= call!11033 call!11031)))

(declare-fun b!105067 () Bool)

(assert (=> b!105067 (= e!68385 (contains!812 lt!53674 (tuple2!2355 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)) (_2!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!105068 () Bool)

(declare-fun res!52340 () Bool)

(assert (=> b!105068 (=> (not res!52340) (not e!68385))))

(assert (=> b!105068 (= res!52340 (containsKey!159 lt!53674 (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447))))))

(declare-fun b!105069 () Bool)

(assert (=> b!105069 (= e!68387 e!68384)))

(assert (=> b!105069 (= c!18260 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52441 (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 (v!2876 (underlying!358 thiss!992)))))))) (_1!1188 (tuple2!2355 (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52447)))))))

(declare-fun b!105070 () Bool)

(assert (=> b!105070 (= e!68387 call!11031)))

(assert (= (and d!28719 c!18257) b!105070))

(assert (= (and d!28719 (not c!18257)) b!105069))

(assert (= (and b!105069 c!18260) b!105063))

(assert (= (and b!105069 (not c!18260)) b!105065))

(assert (= (and b!105065 c!18258) b!105066))

(assert (= (and b!105065 (not c!18258)) b!105061))

(assert (= (or b!105066 b!105061) bm!11029))

(assert (= (or b!105063 bm!11029) bm!11030))

(assert (= (or b!105070 bm!11030) bm!11028))

(assert (= (and bm!11028 c!18259) b!105062))

(assert (= (and bm!11028 (not c!18259)) b!105064))

(assert (= (and d!28719 res!52341) b!105068))

(assert (= (and b!105068 res!52340) b!105067))

(declare-fun m!117161 () Bool)

(assert (=> d!28719 m!117161))

(declare-fun m!117163 () Bool)

(assert (=> d!28719 m!117163))

(declare-fun m!117165 () Bool)

(assert (=> b!105067 m!117165))

(declare-fun m!117167 () Bool)

(assert (=> b!105068 m!117167))

(declare-fun m!117169 () Bool)

(assert (=> b!105062 m!117169))

(declare-fun m!117171 () Bool)

(assert (=> bm!11028 m!117171))

(assert (=> d!27913 d!28719))

(declare-fun bm!11031 () Bool)

(declare-fun call!11034 () (_ BitVec 32))

(assert (=> bm!11031 (= call!11034 (arrayCountValidKeys!0 (_keys!4262 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(declare-fun b!105072 () Bool)

(declare-fun e!68388 () (_ BitVec 32))

(assert (=> b!105072 (= e!68388 #b00000000000000000000000000000000)))

(declare-fun b!105073 () Bool)

(declare-fun e!68389 () (_ BitVec 32))

(assert (=> b!105073 (= e!68388 e!68389)))

(declare-fun c!18261 () Bool)

(assert (=> b!105073 (= c!18261 (validKeyInArray!0 (select (arr!2048 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!105074 () Bool)

(assert (=> b!105074 (= e!68389 call!11034)))

(declare-fun d!28721 () Bool)

(declare-fun lt!53675 () (_ BitVec 32))

(assert (=> d!28721 (and (bvsge lt!53675 #b00000000000000000000000000000000) (bvsle lt!53675 (bvsub (size!2302 (_keys!4262 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!28721 (= lt!53675 e!68388)))

(declare-fun c!18262 () Bool)

(assert (=> d!28721 (= c!18262 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28721 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2302 (_keys!4262 newMap!16)) (size!2302 (_keys!4262 newMap!16))))))

(assert (=> d!28721 (= (arrayCountValidKeys!0 (_keys!4262 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 newMap!16))) lt!53675)))

(declare-fun b!105071 () Bool)

(assert (=> b!105071 (= e!68389 (bvadd #b00000000000000000000000000000001 call!11034))))

(assert (= (and d!28721 c!18262) b!105072))

(assert (= (and d!28721 (not c!18262)) b!105073))

(assert (= (and b!105073 c!18261) b!105071))

(assert (= (and b!105073 (not c!18261)) b!105074))

(assert (= (or b!105071 b!105074) bm!11031))

(declare-fun m!117173 () Bool)

(assert (=> bm!11031 m!117173))

(assert (=> b!105073 m!115467))

(assert (=> b!105073 m!115467))

(assert (=> b!105073 m!115469))

(assert (=> bm!10901 d!28721))

(declare-fun d!28723 () Bool)

(assert (=> d!28723 (= (apply!97 lt!53086 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!53086) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4328 () Bool)

(assert (= bs!4328 d!28723))

(assert (=> bs!4328 m!115249))

(assert (=> bs!4328 m!115249))

(declare-fun m!117175 () Bool)

(assert (=> bs!4328 m!117175))

(assert (=> b!103950 d!28723))

(declare-fun d!28725 () Bool)

(assert (=> d!28725 (= (get!1330 (select (arr!2049 (_values!2543 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!382 (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103623 d!28725))

(declare-fun d!28727 () Bool)

(assert (=> d!28727 (= (apply!97 lt!52828 (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000)) (get!1331 (getValueByKey!156 (toList!779 lt!52828) (select (arr!2048 (_keys!4262 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4329 () Bool)

(assert (= bs!4329 d!28727))

(assert (=> bs!4329 m!114381))

(assert (=> bs!4329 m!115791))

(assert (=> bs!4329 m!115791))

(declare-fun m!117177 () Bool)

(assert (=> bs!4329 m!117177))

(assert (=> b!103669 d!28727))

(declare-fun d!28729 () Bool)

(declare-fun c!18263 () Bool)

(assert (=> d!28729 (= c!18263 ((_ is ValueCellFull!992) (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000)))))

(declare-fun e!68390 () V!3209)

(assert (=> d!28729 (= (get!1328 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68390)))

(declare-fun b!105075 () Bool)

(assert (=> b!105075 (= e!68390 (get!1329 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105076 () Bool)

(assert (=> b!105076 (= e!68390 (get!1330 (select (arr!2049 (ite (or c!17808 c!17815) (_values!2543 newMap!16) lt!52731)) #b00000000000000000000000000000000) (dynLambda!382 (defaultEntry!2560 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28729 c!18263) b!105075))

(assert (= (and d!28729 (not c!18263)) b!105076))

(assert (=> b!105075 m!114521))

(assert (=> b!105075 m!114389))

(declare-fun m!117179 () Bool)

(assert (=> b!105075 m!117179))

(assert (=> b!105076 m!114521))

(assert (=> b!105076 m!114389))

(declare-fun m!117181 () Bool)

(assert (=> b!105076 m!117181))

(assert (=> b!103669 d!28729))

(assert (=> b!103737 d!28061))

(assert (=> b!103737 d!28063))

(assert (=> b!103948 d!28051))

(assert (=> d!27955 d!27951))

(assert (=> d!27955 d!27953))

(declare-fun d!28731 () Bool)

(assert (=> d!28731 (isDefined!108 (getValueByKey!156 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28731 true))

(declare-fun _$12!350 () Unit!3132)

(assert (=> d!28731 (= (choose!654 (toList!779 lt!52449) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) from!355)) _$12!350)))

(declare-fun bs!4330 () Bool)

(assert (= bs!4330 d!28731))

(assert (=> bs!4330 m!113915))

(assert (=> bs!4330 m!114249))

(assert (=> bs!4330 m!114249))

(assert (=> bs!4330 m!114251))

(assert (=> d!27955 d!28731))

(declare-fun d!28733 () Bool)

(declare-fun res!52342 () Bool)

(declare-fun e!68391 () Bool)

(assert (=> d!28733 (=> res!52342 e!68391)))

(assert (=> d!28733 (= res!52342 (or ((_ is Nil!1589) (toList!779 lt!52449)) ((_ is Nil!1589) (t!5646 (toList!779 lt!52449)))))))

(assert (=> d!28733 (= (isStrictlySorted!295 (toList!779 lt!52449)) e!68391)))

(declare-fun b!105077 () Bool)

(declare-fun e!68392 () Bool)

(assert (=> b!105077 (= e!68391 e!68392)))

(declare-fun res!52343 () Bool)

(assert (=> b!105077 (=> (not res!52343) (not e!68392))))

(assert (=> b!105077 (= res!52343 (bvslt (_1!1188 (h!2184 (toList!779 lt!52449))) (_1!1188 (h!2184 (t!5646 (toList!779 lt!52449))))))))

(declare-fun b!105078 () Bool)

(assert (=> b!105078 (= e!68392 (isStrictlySorted!295 (t!5646 (toList!779 lt!52449))))))

(assert (= (and d!28733 (not res!52342)) b!105077))

(assert (= (and b!105077 res!52343) b!105078))

(declare-fun m!117183 () Bool)

(assert (=> b!105078 m!117183))

(assert (=> d!27955 d!28733))

(assert (=> bm!10896 d!27919))

(declare-fun d!28735 () Bool)

(assert (=> d!28735 (= (apply!97 lt!52828 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1331 (getValueByKey!156 (toList!779 lt!52828) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4331 () Bool)

(assert (= bs!4331 d!28735))

(assert (=> bs!4331 m!116475))

(assert (=> bs!4331 m!116475))

(declare-fun m!117185 () Bool)

(assert (=> bs!4331 m!117185))

(assert (=> b!103683 d!28735))

(declare-fun bm!11032 () Bool)

(declare-fun call!11035 () (_ BitVec 32))

(assert (=> bm!11032 (= call!11035 (arrayCountValidKeys!0 (_keys!4262 (_2!1187 lt!52716)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(declare-fun b!105080 () Bool)

(declare-fun e!68393 () (_ BitVec 32))

(assert (=> b!105080 (= e!68393 #b00000000000000000000000000000000)))

(declare-fun b!105081 () Bool)

(declare-fun e!68394 () (_ BitVec 32))

(assert (=> b!105081 (= e!68393 e!68394)))

(declare-fun c!18264 () Bool)

(assert (=> b!105081 (= c!18264 (validKeyInArray!0 (select (arr!2048 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(declare-fun b!105082 () Bool)

(assert (=> b!105082 (= e!68394 call!11035)))

(declare-fun d!28737 () Bool)

(declare-fun lt!53676 () (_ BitVec 32))

(assert (=> d!28737 (and (bvsge lt!53676 #b00000000000000000000000000000000) (bvsle lt!53676 (bvsub (size!2302 (_keys!4262 (_2!1187 lt!52716))) #b00000000000000000000000000000000)))))

(assert (=> d!28737 (= lt!53676 e!68393)))

(declare-fun c!18265 () Bool)

(assert (=> d!28737 (= c!18265 (bvsge #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(assert (=> d!28737 (and (bvsle #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2302 (_keys!4262 (_2!1187 lt!52716))) (size!2302 (_keys!4262 (_2!1187 lt!52716)))))))

(assert (=> d!28737 (= (arrayCountValidKeys!0 (_keys!4262 (_2!1187 lt!52716)) #b00000000000000000000000000000000 (size!2302 (_keys!4262 (_2!1187 lt!52716)))) lt!53676)))

(declare-fun b!105079 () Bool)

(assert (=> b!105079 (= e!68394 (bvadd #b00000000000000000000000000000001 call!11035))))

(assert (= (and d!28737 c!18265) b!105080))

(assert (= (and d!28737 (not c!18265)) b!105081))

(assert (= (and b!105081 c!18264) b!105079))

(assert (= (and b!105081 (not c!18264)) b!105082))

(assert (= (or b!105079 b!105082) bm!11032))

(declare-fun m!117187 () Bool)

(assert (=> bm!11032 m!117187))

(assert (=> b!105081 m!115519))

(assert (=> b!105081 m!115519))

(assert (=> b!105081 m!115521))

(assert (=> b!103619 d!28737))

(assert (=> b!103531 d!28521))

(declare-fun d!28739 () Bool)

(declare-fun res!52344 () Bool)

(declare-fun e!68395 () Bool)

(assert (=> d!28739 (=> res!52344 e!68395)))

(assert (=> d!28739 (= res!52344 (and ((_ is Cons!1588) lt!52532) (= (_1!1188 (h!2184 lt!52532)) (_1!1188 lt!52442))))))

(assert (=> d!28739 (= (containsKey!159 lt!52532 (_1!1188 lt!52442)) e!68395)))

(declare-fun b!105083 () Bool)

(declare-fun e!68396 () Bool)

(assert (=> b!105083 (= e!68395 e!68396)))

(declare-fun res!52345 () Bool)

(assert (=> b!105083 (=> (not res!52345) (not e!68396))))

(assert (=> b!105083 (= res!52345 (and (or (not ((_ is Cons!1588) lt!52532)) (bvsle (_1!1188 (h!2184 lt!52532)) (_1!1188 lt!52442))) ((_ is Cons!1588) lt!52532) (bvslt (_1!1188 (h!2184 lt!52532)) (_1!1188 lt!52442))))))

(declare-fun b!105084 () Bool)

(assert (=> b!105084 (= e!68396 (containsKey!159 (t!5646 lt!52532) (_1!1188 lt!52442)))))

(assert (= (and d!28739 (not res!52344)) b!105083))

(assert (= (and b!105083 res!52345) b!105084))

(declare-fun m!117189 () Bool)

(assert (=> b!105084 m!117189))

(assert (=> b!103635 d!28739))

(assert (=> b!103626 d!28113))

(assert (=> b!103626 d!27963))

(declare-fun b!105087 () Bool)

(declare-fun e!68398 () Option!162)

(assert (=> b!105087 (= e!68398 (getValueByKey!156 (t!5646 (toList!779 lt!52866)) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105086 () Bool)

(declare-fun e!68397 () Option!162)

(assert (=> b!105086 (= e!68397 e!68398)))

(declare-fun c!18267 () Bool)

(assert (=> b!105086 (= c!18267 (and ((_ is Cons!1588) (toList!779 lt!52866)) (not (= (_1!1188 (h!2184 (toList!779 lt!52866))) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!105085 () Bool)

(assert (=> b!105085 (= e!68397 (Some!161 (_2!1188 (h!2184 (toList!779 lt!52866)))))))

(declare-fun c!18266 () Bool)

(declare-fun d!28741 () Bool)

(assert (=> d!28741 (= c!18266 (and ((_ is Cons!1588) (toList!779 lt!52866)) (= (_1!1188 (h!2184 (toList!779 lt!52866))) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28741 (= (getValueByKey!156 (toList!779 lt!52866) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68397)))

(declare-fun b!105088 () Bool)

(assert (=> b!105088 (= e!68398 None!160)))

(assert (= (and d!28741 c!18266) b!105085))

(assert (= (and d!28741 (not c!18266)) b!105086))

(assert (= (and b!105086 c!18267) b!105087))

(assert (= (and b!105086 (not c!18267)) b!105088))

(declare-fun m!117191 () Bool)

(assert (=> b!105087 m!117191))

(assert (=> b!103713 d!28741))

(declare-fun d!28743 () Bool)

(assert (=> d!28743 (= (get!1331 (getValueByKey!156 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52631)) (v!2882 (getValueByKey!156 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52631)))))

(assert (=> d!27875 d!28743))

(declare-fun e!68400 () Option!162)

(declare-fun b!105091 () Bool)

(assert (=> b!105091 (= e!68400 (getValueByKey!156 (t!5646 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) lt!52631))))

(declare-fun b!105090 () Bool)

(declare-fun e!68399 () Option!162)

(assert (=> b!105090 (= e!68399 e!68400)))

(declare-fun c!18269 () Bool)

(assert (=> b!105090 (= c!18269 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52631))))))

(declare-fun b!105089 () Bool)

(assert (=> b!105089 (= e!68399 (Some!161 (_2!1188 (h!2184 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun c!18268 () Bool)

(declare-fun d!28745 () Bool)

(assert (=> d!28745 (= c!18268 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))) lt!52631)))))

(assert (=> d!28745 (= (getValueByKey!156 (toList!779 (+!137 lt!52633 (tuple2!2355 lt!52635 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!52631) e!68399)))

(declare-fun b!105092 () Bool)

(assert (=> b!105092 (= e!68400 None!160)))

(assert (= (and d!28745 c!18268) b!105089))

(assert (= (and d!28745 (not c!18268)) b!105090))

(assert (= (and b!105090 c!18269) b!105091))

(assert (= (and b!105090 (not c!18269)) b!105092))

(declare-fun m!117193 () Bool)

(assert (=> b!105091 m!117193))

(assert (=> d!27875 d!28745))

(assert (=> b!103873 d!27861))

(declare-fun d!28747 () Bool)

(declare-fun e!68401 () Bool)

(assert (=> d!28747 e!68401))

(declare-fun res!52346 () Bool)

(assert (=> d!28747 (=> (not res!52346) (not e!68401))))

(declare-fun lt!53679 () ListLongMap!1527)

(assert (=> d!28747 (= res!52346 (contains!811 lt!53679 (_1!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(declare-fun lt!53678 () List!1592)

(assert (=> d!28747 (= lt!53679 (ListLongMap!1528 lt!53678))))

(declare-fun lt!53677 () Unit!3132)

(declare-fun lt!53680 () Unit!3132)

(assert (=> d!28747 (= lt!53677 lt!53680)))

(assert (=> d!28747 (= (getValueByKey!156 lt!53678 (_1!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))) (Some!161 (_2!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(assert (=> d!28747 (= lt!53680 (lemmaContainsTupThenGetReturnValue!72 lt!53678 (_1!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (_2!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(assert (=> d!28747 (= lt!53678 (insertStrictlySorted!75 (toList!779 (ite c!17872 call!10878 (ite c!17874 call!10876 call!10875))) (_1!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) (_2!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))))))

(assert (=> d!28747 (= (+!137 (ite c!17872 call!10878 (ite c!17874 call!10876 call!10875)) (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))) lt!53679)))

(declare-fun b!105093 () Bool)

(declare-fun res!52347 () Bool)

(assert (=> b!105093 (=> (not res!52347) (not e!68401))))

(assert (=> b!105093 (= res!52347 (= (getValueByKey!156 (toList!779 lt!53679) (_1!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16)))))) (Some!161 (_2!1188 (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))))

(declare-fun b!105094 () Bool)

(assert (=> b!105094 (= e!68401 (contains!812 (toList!779 lt!53679) (ite (or c!17872 c!17874) (tuple2!2355 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2437 newMap!16)) (tuple2!2355 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17808 (ite c!17811 (minValue!2437 newMap!16) lt!52447) (minValue!2437 newMap!16))))))))

(assert (= (and d!28747 res!52346) b!105093))

(assert (= (and b!105093 res!52347) b!105094))

(declare-fun m!117195 () Bool)

(assert (=> d!28747 m!117195))

(declare-fun m!117197 () Bool)

(assert (=> d!28747 m!117197))

(declare-fun m!117199 () Bool)

(assert (=> d!28747 m!117199))

(declare-fun m!117201 () Bool)

(assert (=> d!28747 m!117201))

(declare-fun m!117203 () Bool)

(assert (=> b!105093 m!117203))

(declare-fun m!117205 () Bool)

(assert (=> b!105094 m!117205))

(assert (=> bm!10871 d!28747))

(declare-fun d!28749 () Bool)

(declare-fun res!52348 () Bool)

(declare-fun e!68402 () Bool)

(assert (=> d!28749 (=> res!52348 e!68402)))

(assert (=> d!28749 (= res!52348 (and ((_ is Cons!1588) (toList!779 lt!52569)) (= (_1!1188 (h!2184 (toList!779 lt!52569))) (_1!1188 lt!52444))))))

(assert (=> d!28749 (= (containsKey!159 (toList!779 lt!52569) (_1!1188 lt!52444)) e!68402)))

(declare-fun b!105095 () Bool)

(declare-fun e!68403 () Bool)

(assert (=> b!105095 (= e!68402 e!68403)))

(declare-fun res!52349 () Bool)

(assert (=> b!105095 (=> (not res!52349) (not e!68403))))

(assert (=> b!105095 (= res!52349 (and (or (not ((_ is Cons!1588) (toList!779 lt!52569))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52569))) (_1!1188 lt!52444))) ((_ is Cons!1588) (toList!779 lt!52569)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52569))) (_1!1188 lt!52444))))))

(declare-fun b!105096 () Bool)

(assert (=> b!105096 (= e!68403 (containsKey!159 (t!5646 (toList!779 lt!52569)) (_1!1188 lt!52444)))))

(assert (= (and d!28749 (not res!52348)) b!105095))

(assert (= (and b!105095 res!52349) b!105096))

(declare-fun m!117207 () Bool)

(assert (=> b!105096 m!117207))

(assert (=> d!27895 d!28749))

(assert (=> bm!10847 d!27821))

(declare-fun d!28751 () Bool)

(assert (=> d!28751 (= ($colon$colon!79 e!67600 (ite c!17898 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442)))) (Cons!1588 (ite c!17898 (h!2184 (toList!779 lt!52441)) (tuple2!2355 (_1!1188 lt!52442) (_2!1188 lt!52442))) e!67600))))

(assert (=> bm!10880 d!28751))

(declare-fun d!28753 () Bool)

(declare-fun e!68405 () Bool)

(assert (=> d!28753 e!68405))

(declare-fun res!52350 () Bool)

(assert (=> d!28753 (=> res!52350 e!68405)))

(declare-fun lt!53684 () Bool)

(assert (=> d!28753 (= res!52350 (not lt!53684))))

(declare-fun lt!53681 () Bool)

(assert (=> d!28753 (= lt!53684 lt!53681)))

(declare-fun lt!53682 () Unit!3132)

(declare-fun e!68404 () Unit!3132)

(assert (=> d!28753 (= lt!53682 e!68404)))

(declare-fun c!18270 () Bool)

(assert (=> d!28753 (= c!18270 lt!53681)))

(assert (=> d!28753 (= lt!53681 (containsKey!159 (toList!779 lt!52866) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28753 (= (contains!811 lt!52866 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53684)))

(declare-fun b!105097 () Bool)

(declare-fun lt!53683 () Unit!3132)

(assert (=> b!105097 (= e!68404 lt!53683)))

(assert (=> b!105097 (= lt!53683 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!779 lt!52866) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!105097 (isDefined!108 (getValueByKey!156 (toList!779 lt!52866) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105098 () Bool)

(declare-fun Unit!3211 () Unit!3132)

(assert (=> b!105098 (= e!68404 Unit!3211)))

(declare-fun b!105099 () Bool)

(assert (=> b!105099 (= e!68405 (isDefined!108 (getValueByKey!156 (toList!779 lt!52866) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28753 c!18270) b!105097))

(assert (= (and d!28753 (not c!18270)) b!105098))

(assert (= (and d!28753 (not res!52350)) b!105099))

(declare-fun m!117209 () Bool)

(assert (=> d!28753 m!117209))

(declare-fun m!117211 () Bool)

(assert (=> b!105097 m!117211))

(assert (=> b!105097 m!114655))

(assert (=> b!105097 m!114655))

(declare-fun m!117213 () Bool)

(assert (=> b!105097 m!117213))

(assert (=> b!105099 m!114655))

(assert (=> b!105099 m!114655))

(assert (=> b!105099 m!117213))

(assert (=> d!27883 d!28753))

(declare-fun b!105102 () Bool)

(declare-fun e!68407 () Option!162)

(assert (=> b!105102 (= e!68407 (getValueByKey!156 (t!5646 lt!52865) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105101 () Bool)

(declare-fun e!68406 () Option!162)

(assert (=> b!105101 (= e!68406 e!68407)))

(declare-fun c!18272 () Bool)

(assert (=> b!105101 (= c!18272 (and ((_ is Cons!1588) lt!52865) (not (= (_1!1188 (h!2184 lt!52865)) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!105100 () Bool)

(assert (=> b!105100 (= e!68406 (Some!161 (_2!1188 (h!2184 lt!52865))))))

(declare-fun c!18271 () Bool)

(declare-fun d!28755 () Bool)

(assert (=> d!28755 (= c!18271 (and ((_ is Cons!1588) lt!52865) (= (_1!1188 (h!2184 lt!52865)) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28755 (= (getValueByKey!156 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) e!68406)))

(declare-fun b!105103 () Bool)

(assert (=> b!105103 (= e!68407 None!160)))

(assert (= (and d!28755 c!18271) b!105100))

(assert (= (and d!28755 (not c!18271)) b!105101))

(assert (= (and b!105101 c!18272) b!105102))

(assert (= (and b!105101 (not c!18272)) b!105103))

(declare-fun m!117215 () Bool)

(assert (=> b!105102 m!117215))

(assert (=> d!27883 d!28755))

(declare-fun d!28757 () Bool)

(assert (=> d!28757 (= (getValueByKey!156 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) (Some!161 (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53685 () Unit!3132)

(assert (=> d!28757 (= lt!53685 (choose!648 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68408 () Bool)

(assert (=> d!28757 e!68408))

(declare-fun res!52351 () Bool)

(assert (=> d!28757 (=> (not res!52351) (not e!68408))))

(assert (=> d!28757 (= res!52351 (isStrictlySorted!295 lt!52865))))

(assert (=> d!28757 (= (lemmaContainsTupThenGetReturnValue!72 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53685)))

(declare-fun b!105104 () Bool)

(declare-fun res!52352 () Bool)

(assert (=> b!105104 (=> (not res!52352) (not e!68408))))

(assert (=> b!105104 (= res!52352 (containsKey!159 lt!52865 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105105 () Bool)

(assert (=> b!105105 (= e!68408 (contains!812 lt!52865 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28757 res!52351) b!105104))

(assert (= (and b!105104 res!52352) b!105105))

(assert (=> d!28757 m!114649))

(declare-fun m!117217 () Bool)

(assert (=> d!28757 m!117217))

(declare-fun m!117219 () Bool)

(assert (=> d!28757 m!117219))

(declare-fun m!117221 () Bool)

(assert (=> b!105104 m!117221))

(declare-fun m!117223 () Bool)

(assert (=> b!105105 m!117223))

(assert (=> d!27883 d!28757))

(declare-fun b!105106 () Bool)

(declare-fun e!68409 () List!1592)

(declare-fun call!11037 () List!1592)

(assert (=> b!105106 (= e!68409 call!11037)))

(declare-fun b!105107 () Bool)

(declare-fun e!68412 () List!1592)

(assert (=> b!105107 (= e!68412 (insertStrictlySorted!75 (t!5646 (toList!779 lt!52634)) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105108 () Bool)

(declare-fun e!68410 () List!1592)

(declare-fun call!11038 () List!1592)

(assert (=> b!105108 (= e!68410 call!11038)))

(declare-fun d!28759 () Bool)

(declare-fun e!68411 () Bool)

(assert (=> d!28759 e!68411))

(declare-fun res!52354 () Bool)

(assert (=> d!28759 (=> (not res!52354) (not e!68411))))

(declare-fun lt!53686 () List!1592)

(assert (=> d!28759 (= res!52354 (isStrictlySorted!295 lt!53686))))

(declare-fun e!68413 () List!1592)

(assert (=> d!28759 (= lt!53686 e!68413)))

(declare-fun c!18273 () Bool)

(assert (=> d!28759 (= c!18273 (and ((_ is Cons!1588) (toList!779 lt!52634)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52634))) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28759 (isStrictlySorted!295 (toList!779 lt!52634))))

(assert (=> d!28759 (= (insertStrictlySorted!75 (toList!779 lt!52634) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))) lt!53686)))

(declare-fun bm!11033 () Bool)

(declare-fun call!11036 () List!1592)

(assert (=> bm!11033 (= call!11036 ($colon$colon!79 e!68412 (ite c!18273 (h!2184 (toList!779 lt!52634)) (tuple2!2355 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18275 () Bool)

(assert (=> bm!11033 (= c!18275 c!18273)))

(declare-fun c!18276 () Bool)

(declare-fun c!18274 () Bool)

(declare-fun b!105109 () Bool)

(assert (=> b!105109 (= e!68412 (ite c!18276 (t!5646 (toList!779 lt!52634)) (ite c!18274 (Cons!1588 (h!2184 (toList!779 lt!52634)) (t!5646 (toList!779 lt!52634))) Nil!1589)))))

(declare-fun b!105110 () Bool)

(assert (=> b!105110 (= c!18274 (and ((_ is Cons!1588) (toList!779 lt!52634)) (bvsgt (_1!1188 (h!2184 (toList!779 lt!52634))) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!105110 (= e!68410 e!68409)))

(declare-fun bm!11034 () Bool)

(assert (=> bm!11034 (= call!11037 call!11038)))

(declare-fun b!105111 () Bool)

(assert (=> b!105111 (= e!68409 call!11037)))

(declare-fun bm!11035 () Bool)

(assert (=> bm!11035 (= call!11038 call!11036)))

(declare-fun b!105112 () Bool)

(assert (=> b!105112 (= e!68411 (contains!812 lt!53686 (tuple2!2355 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))) (_2!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!105113 () Bool)

(declare-fun res!52353 () Bool)

(assert (=> b!105113 (=> (not res!52353) (not e!68411))))

(assert (=> b!105113 (= res!52353 (containsKey!159 lt!53686 (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105114 () Bool)

(assert (=> b!105114 (= e!68413 e!68410)))

(assert (=> b!105114 (= c!18276 (and ((_ is Cons!1588) (toList!779 lt!52634)) (= (_1!1188 (h!2184 (toList!779 lt!52634))) (_1!1188 (tuple2!2355 lt!52632 (minValue!2437 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!105115 () Bool)

(assert (=> b!105115 (= e!68413 call!11036)))

(assert (= (and d!28759 c!18273) b!105115))

(assert (= (and d!28759 (not c!18273)) b!105114))

(assert (= (and b!105114 c!18276) b!105108))

(assert (= (and b!105114 (not c!18276)) b!105110))

(assert (= (and b!105110 c!18274) b!105111))

(assert (= (and b!105110 (not c!18274)) b!105106))

(assert (= (or b!105111 b!105106) bm!11034))

(assert (= (or b!105108 bm!11034) bm!11035))

(assert (= (or b!105115 bm!11035) bm!11033))

(assert (= (and bm!11033 c!18275) b!105107))

(assert (= (and bm!11033 (not c!18275)) b!105109))

(assert (= (and d!28759 res!52354) b!105113))

(assert (= (and b!105113 res!52353) b!105112))

(declare-fun m!117225 () Bool)

(assert (=> d!28759 m!117225))

(declare-fun m!117227 () Bool)

(assert (=> d!28759 m!117227))

(declare-fun m!117229 () Bool)

(assert (=> b!105112 m!117229))

(declare-fun m!117231 () Bool)

(assert (=> b!105113 m!117231))

(declare-fun m!117233 () Bool)

(assert (=> b!105107 m!117233))

(declare-fun m!117235 () Bool)

(assert (=> bm!11033 m!117235))

(assert (=> d!27883 d!28759))

(declare-fun d!28761 () Bool)

(declare-fun res!52355 () Bool)

(declare-fun e!68414 () Bool)

(assert (=> d!28761 (=> res!52355 e!68414)))

(assert (=> d!28761 (= res!52355 (and ((_ is Cons!1588) (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))) (= (_1!1188 (h!2184 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))))) lt!52549)))))

(assert (=> d!28761 (= (containsKey!159 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))) lt!52549) e!68414)))

(declare-fun b!105116 () Bool)

(declare-fun e!68415 () Bool)

(assert (=> b!105116 (= e!68414 e!68415)))

(declare-fun res!52356 () Bool)

(assert (=> b!105116 (=> (not res!52356) (not e!68415))))

(assert (=> b!105116 (= res!52356 (and (or (not ((_ is Cons!1588) (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))))) (bvsle (_1!1188 (h!2184 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))))) lt!52549)) ((_ is Cons!1588) (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))) (bvslt (_1!1188 (h!2184 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550))))) lt!52549)))))

(declare-fun b!105117 () Bool)

(assert (=> b!105117 (= e!68415 (containsKey!159 (t!5646 (toList!779 (+!137 lt!52555 (tuple2!2355 lt!52552 lt!52550)))) lt!52549))))

(assert (= (and d!28761 (not res!52355)) b!105116))

(assert (= (and b!105116 res!52356) b!105117))

(declare-fun m!117237 () Bool)

(assert (=> b!105117 m!117237))

(assert (=> d!27973 d!28761))

(assert (=> bm!10894 d!27821))

(declare-fun d!28763 () Bool)

(declare-fun res!52357 () Bool)

(declare-fun e!68416 () Bool)

(assert (=> d!28763 (=> res!52357 e!68416)))

(assert (=> d!28763 (= res!52357 (and ((_ is Cons!1588) (toList!779 lt!52553)) (= (_1!1188 (h!2184 (toList!779 lt!52553))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28763 (= (containsKey!159 (toList!779 lt!52553) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68416)))

(declare-fun b!105118 () Bool)

(declare-fun e!68417 () Bool)

(assert (=> b!105118 (= e!68416 e!68417)))

(declare-fun res!52358 () Bool)

(assert (=> b!105118 (=> (not res!52358) (not e!68417))))

(assert (=> b!105118 (= res!52358 (and (or (not ((_ is Cons!1588) (toList!779 lt!52553))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52553))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1588) (toList!779 lt!52553)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52553))) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!105119 () Bool)

(assert (=> b!105119 (= e!68417 (containsKey!159 (t!5646 (toList!779 lt!52553)) (select (arr!2048 (_keys!4262 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28763 (not res!52357)) b!105118))

(assert (= (and b!105118 res!52358) b!105119))

(assert (=> b!105119 m!114103))

(declare-fun m!117239 () Bool)

(assert (=> b!105119 m!117239))

(assert (=> d!27949 d!28763))

(assert (=> bm!10850 d!28585))

(declare-fun d!28765 () Bool)

(declare-fun res!52359 () Bool)

(declare-fun e!68418 () Bool)

(assert (=> d!28765 (=> res!52359 e!68418)))

(assert (=> d!28765 (= res!52359 (and ((_ is Cons!1588) lt!52557) (= (_1!1188 (h!2184 lt!52557)) (_1!1188 lt!52444))))))

(assert (=> d!28765 (= (containsKey!159 lt!52557 (_1!1188 lt!52444)) e!68418)))

(declare-fun b!105120 () Bool)

(declare-fun e!68419 () Bool)

(assert (=> b!105120 (= e!68418 e!68419)))

(declare-fun res!52360 () Bool)

(assert (=> b!105120 (=> (not res!52360) (not e!68419))))

(assert (=> b!105120 (= res!52360 (and (or (not ((_ is Cons!1588) lt!52557)) (bvsle (_1!1188 (h!2184 lt!52557)) (_1!1188 lt!52444))) ((_ is Cons!1588) lt!52557) (bvslt (_1!1188 (h!2184 lt!52557)) (_1!1188 lt!52444))))))

(declare-fun b!105121 () Bool)

(assert (=> b!105121 (= e!68419 (containsKey!159 (t!5646 lt!52557) (_1!1188 lt!52444)))))

(assert (= (and d!28765 (not res!52359)) b!105120))

(assert (= (and b!105120 res!52360) b!105121))

(declare-fun m!117241 () Bool)

(assert (=> b!105121 m!117241))

(assert (=> b!103804 d!28765))

(declare-fun d!28767 () Bool)

(declare-fun res!52361 () Bool)

(declare-fun e!68420 () Bool)

(assert (=> d!28767 (=> res!52361 e!68420)))

(assert (=> d!28767 (= res!52361 (and ((_ is Cons!1588) (toList!779 lt!52553)) (= (_1!1188 (h!2184 (toList!779 lt!52553))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28767 (= (containsKey!159 (toList!779 lt!52553) #b0000000000000000000000000000000000000000000000000000000000000000) e!68420)))

(declare-fun b!105122 () Bool)

(declare-fun e!68421 () Bool)

(assert (=> b!105122 (= e!68420 e!68421)))

(declare-fun res!52362 () Bool)

(assert (=> b!105122 (=> (not res!52362) (not e!68421))))

(assert (=> b!105122 (= res!52362 (and (or (not ((_ is Cons!1588) (toList!779 lt!52553))) (bvsle (_1!1188 (h!2184 (toList!779 lt!52553))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1588) (toList!779 lt!52553)) (bvslt (_1!1188 (h!2184 (toList!779 lt!52553))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!105123 () Bool)

(assert (=> b!105123 (= e!68421 (containsKey!159 (t!5646 (toList!779 lt!52553)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28767 (not res!52361)) b!105122))

(assert (= (and b!105122 res!52362) b!105123))

(declare-fun m!117243 () Bool)

(assert (=> b!105123 m!117243))

(assert (=> d!27989 d!28767))

(declare-fun condMapEmpty!3917 () Bool)

(declare-fun mapDefault!3917 () ValueCell!992)

(assert (=> mapNonEmpty!3916 (= condMapEmpty!3917 (= mapRest!3916 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3917)))))

(declare-fun e!68423 () Bool)

(declare-fun mapRes!3917 () Bool)

(assert (=> mapNonEmpty!3916 (= tp!9874 (and e!68423 mapRes!3917))))

(declare-fun b!105125 () Bool)

(assert (=> b!105125 (= e!68423 tp_is_empty!2671)))

(declare-fun b!105124 () Bool)

(declare-fun e!68422 () Bool)

(assert (=> b!105124 (= e!68422 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3917 () Bool)

(assert (=> mapIsEmpty!3917 mapRes!3917))

(declare-fun mapNonEmpty!3917 () Bool)

(declare-fun tp!9875 () Bool)

(assert (=> mapNonEmpty!3917 (= mapRes!3917 (and tp!9875 e!68422))))

(declare-fun mapValue!3917 () ValueCell!992)

(declare-fun mapRest!3917 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapKey!3917 () (_ BitVec 32))

(assert (=> mapNonEmpty!3917 (= mapRest!3916 (store mapRest!3917 mapKey!3917 mapValue!3917))))

(assert (= (and mapNonEmpty!3916 condMapEmpty!3917) mapIsEmpty!3917))

(assert (= (and mapNonEmpty!3916 (not condMapEmpty!3917)) mapNonEmpty!3917))

(assert (= (and mapNonEmpty!3917 ((_ is ValueCellFull!992) mapValue!3917)) b!105124))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!992) mapDefault!3917)) b!105125))

(declare-fun m!117245 () Bool)

(assert (=> mapNonEmpty!3917 m!117245))

(declare-fun condMapEmpty!3918 () Bool)

(declare-fun mapDefault!3918 () ValueCell!992)

(assert (=> mapNonEmpty!3915 (= condMapEmpty!3918 (= mapRest!3915 ((as const (Array (_ BitVec 32) ValueCell!992)) mapDefault!3918)))))

(declare-fun e!68425 () Bool)

(declare-fun mapRes!3918 () Bool)

(assert (=> mapNonEmpty!3915 (= tp!9873 (and e!68425 mapRes!3918))))

(declare-fun b!105127 () Bool)

(assert (=> b!105127 (= e!68425 tp_is_empty!2671)))

(declare-fun b!105126 () Bool)

(declare-fun e!68424 () Bool)

(assert (=> b!105126 (= e!68424 tp_is_empty!2671)))

(declare-fun mapIsEmpty!3918 () Bool)

(assert (=> mapIsEmpty!3918 mapRes!3918))

(declare-fun mapNonEmpty!3918 () Bool)

(declare-fun tp!9876 () Bool)

(assert (=> mapNonEmpty!3918 (= mapRes!3918 (and tp!9876 e!68424))))

(declare-fun mapKey!3918 () (_ BitVec 32))

(declare-fun mapRest!3918 () (Array (_ BitVec 32) ValueCell!992))

(declare-fun mapValue!3918 () ValueCell!992)

(assert (=> mapNonEmpty!3918 (= mapRest!3915 (store mapRest!3918 mapKey!3918 mapValue!3918))))

(assert (= (and mapNonEmpty!3915 condMapEmpty!3918) mapIsEmpty!3918))

(assert (= (and mapNonEmpty!3915 (not condMapEmpty!3918)) mapNonEmpty!3918))

(assert (= (and mapNonEmpty!3918 ((_ is ValueCellFull!992) mapValue!3918)) b!105126))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!992) mapDefault!3918)) b!105127))

(declare-fun m!117247 () Bool)

(assert (=> mapNonEmpty!3918 m!117247))

(declare-fun b_lambda!4683 () Bool)

(assert (= b_lambda!4673 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4683)))

(declare-fun b_lambda!4685 () Bool)

(assert (= b_lambda!4665 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4685)))

(declare-fun b_lambda!4687 () Bool)

(assert (= b_lambda!4671 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4687)))

(declare-fun b_lambda!4689 () Bool)

(assert (= b_lambda!4659 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4689)))

(declare-fun b_lambda!4691 () Bool)

(assert (= b_lambda!4657 (or (and b!103061 b_free!2509) (and b!103053 b_free!2511 (= (defaultEntry!2560 newMap!16) (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))))) b_lambda!4691)))

(declare-fun b_lambda!4693 () Bool)

(assert (= b_lambda!4675 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4693)))

(declare-fun b_lambda!4695 () Bool)

(assert (= b_lambda!4679 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4695)))

(declare-fun b_lambda!4697 () Bool)

(assert (= b_lambda!4663 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4697)))

(declare-fun b_lambda!4699 () Bool)

(assert (= b_lambda!4655 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4699)))

(declare-fun b_lambda!4701 () Bool)

(assert (= b_lambda!4681 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4701)))

(declare-fun b_lambda!4703 () Bool)

(assert (= b_lambda!4653 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4703)))

(declare-fun b_lambda!4705 () Bool)

(assert (= b_lambda!4677 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4705)))

(declare-fun b_lambda!4707 () Bool)

(assert (= b_lambda!4667 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4707)))

(declare-fun b_lambda!4709 () Bool)

(assert (= b_lambda!4669 (or (and b!103061 b_free!2509 (= (defaultEntry!2560 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2560 newMap!16))) (and b!103053 b_free!2511) b_lambda!4709)))

(check-sat (not b!104822) (not b!104769) (not b!104216) (not b!104361) (not bm!10980) (not b!104676) (not b!104070) (not d!28387) (not d!28155) (not bm!11002) (not b!104158) (not b!104101) (not b!105051) (not b!104656) (not d!28343) (not b!104382) (not b!104043) (not b!104258) (not b!104912) (not d!28087) (not bm!10985) (not bm!10983) (not b!104329) (not d!28221) (not d!28607) (not b_lambda!4649) (not b!105016) (not d!28681) (not b!104875) (not d!28467) (not b!104456) (not b!104357) (not b!105054) (not b!104364) tp_is_empty!2671 (not b!104659) (not bm!11004) (not d!28045) (not b!104795) (not b!104981) (not b!104712) (not b!104585) (not d!28089) (not d!28335) (not d!28247) (not b!104447) (not b!104804) (not b!104787) (not d!28597) (not b!104040) (not b!104528) (not b!104000) (not b!103998) (not b!104327) (not d!28123) (not d!28459) (not b!104139) (not b!104387) (not d!28389) (not b!105099) (not b!104958) (not b_lambda!4707) (not b!103986) (not d!28323) (not d!28469) (not b!104267) (not b!104466) (not d!28291) (not b!104269) (not d!28463) (not d!28375) (not b!104888) (not bm!11010) (not b!104273) (not b!104231) (not b!104245) (not d!28505) (not b!104938) (not b_lambda!4699) (not d!28179) (not b!104742) (not d!28083) (not b!104177) (not b!104526) (not b!104017) (not d!28173) (not d!28417) (not b!104811) (not bm!11028) (not b!104003) (not d!28583) (not b!104801) (not b!104239) b_and!6487 (not b!104610) (not d!28551) (not bm!10930) (not b!104486) (not b!104814) (not b!104037) (not b!104189) (not b!104720) (not b!104276) (not d!28317) (not d!28027) (not d!28413) (not b!104086) (not d!28071) (not b!104012) (not d!28157) (not b!104432) (not d!28431) (not b!104056) (not b!104498) (not b!105097) (not d!28111) (not b!104469) (not d!28351) (not d!28341) (not b!104001) (not b!104532) (not d!28661) (not b!104283) (not b!104491) (not b!104249) (not b!104312) (not b!104618) (not b!104752) (not b!104214) (not b!104134) (not b!104054) (not b!104305) (not b!104344) (not d!28069) (not b!104221) (not b!104254) (not b!105026) (not b!104339) (not d!28109) (not b!104047) (not b_lambda!4705) (not d!28073) (not b!104868) (not d!28183) (not d!28645) (not b!104481) (not b!104671) (not b!105076) (not d!28759) (not d!28065) (not d!28407) (not b!104480) (not d!28525) (not b_lambda!4661) (not b!104950) (not b!105023) (not b!104192) (not bm!10921) (not b!104930) (not d!28561) (not d!28569) (not b!104159) (not b!104222) (not b!104246) (not b!104039) (not b!104777) (not d!28381) (not b!104291) (not d!28373) (not d!28419) (not b!104735) (not d!28747) (not b!105059) (not d!28515) (not b!105121) (not b!104081) (not b!105057) (not b!104108) (not b!104394) (not b!104744) (not d!28453) (not d!28145) (not d!28075) (not b_lambda!4619) (not d!28363) (not b!105029) (not b!104992) (not d!28421) (not b!105104) (not b!104423) (not b!104398) (not bm!10995) (not b!104171) (not d!28531) (not d!28311) (not b_lambda!4687) (not b!105084) (not b!104935) (not b_lambda!4631) (not b!104589) (not d!28735) (not bm!10935) (not b!104647) (not b_lambda!4643) (not b!105028) (not b!104493) (not b!104151) (not b!104429) (not b!104355) (not b!105052) (not b!104464) (not bm!10959) (not d!28023) (not b!104235) (not b!104986) (not bm!10984) (not b!105113) (not b!104234) (not d!28491) (not b!104370) (not b!104281) (not d!28223) (not b!104997) (not b!105006) (not b!103987) (not b!104873) (not b!104060) (not b!104970) (not b!104143) (not d!28753) (not bm!10941) (not b!104341) (not b!105046) (not b!105073) (not b!105105) (not b!104372) (not d!28137) (not b!104115) (not d!28249) (not b_lambda!4709) (not bm!10948) (not b!105093) (not b!104826) (not d!28705) (not b!104937) (not b!104290) (not b!104523) (not b!104790) (not b!104035) (not b!104334) (not b!104911) (not d!28501) (not b!104377) (not bm!10955) (not d!28281) (not d!28099) (not d!28727) (not d!28633) (not b!104791) (not b!104405) (not bm!10922) (not b!104265) (not b!104529) (not b!104575) (not b!104474) (not d!28165) (not d!28655) (not d!28653) (not b!104471) (not b!104854) (not b!104956) (not d!28699) (not bm!11013) (not b!104667) (not b!104877) (not b!104570) (not b!104174) (not b!104965) (not d!28385) (not b!104940) (not b!105112) (not d!28119) (not b!105078) (not b_lambda!4685) (not d!28587) (not b!104828) (not b!103976) (not bm!10956) (not b!105123) (not d!28009) (not b!104071) (not b!104836) (not b!104886) (not b!104925) (not d!28205) (not d!28219) (not b!103971) b_and!6485 (not b!104652) (not d!28167) (not b!104455) (not d!28213) (not d!28053) (not b!104313) (not b!104601) (not d!28613) (not b!104540) (not b!104208) (not d!28303) (not b!104033) (not b!104979) (not b_lambda!4703) (not b!104241) (not bm!10964) (not b_lambda!4689) (not bm!11032) (not b!104674) (not d!28559) (not d!28129) (not b!104184) (not b!104439) (not b!104052) (not b!104253) (not b!104467) (not b!104359) (not d!28327) (not d!28439) (not d!28147) (not b!104753) (not b!104075) (not b!104803) (not b!104785) (not b!105119) (not b!104194) (not b!104949) (not b!103981) (not d!28449) (not d!28251) (not d!28473) (not b!104852) (not d!28669) (not d!28717) (not d!28305) (not b!104985) (not b!104538) (not d!28541) (not d!28553) (not b!104788) (not b!104385) (not b!104525) (not b!104095) (not bm!10950) (not b!105021) (not b_next!2509) (not b!104100) (not bm!11021) (not b!104739) (not b!104620) (not b!104378) (not bm!10953) (not d!28033) (not bm!11027) (not b!104342) (not d!28635) (not d!28059) (not b!103978) (not b!104597) (not b!104933) (not b!104146) (not b!104072) (not bm!10966) (not b!104747) (not b!104153) (not b_lambda!4647) (not b_lambda!4697) (not b!104084) (not bm!11011) (not d!28329) (not d!28295) (not d!28485) (not d!28511) (not b!104982) (not bm!11031) (not d!28627) (not d!28575) (not b!104175) (not bm!11014) (not b!105003) (not b!104503) (not bm!11016) (not bm!10925) (not mapNonEmpty!3918) (not d!28361) (not b!104772) (not d!28663) (not bm!11009) (not b!104410) (not b!104501) (not d!28277) (not b!104870) (not b!104244) (not b!104964) (not b!105031) (not d!28657) (not bm!11003) (not d!28757) (not b!104252) (not d!28017) (not b!104821) (not d!28257) (not b!104909) (not b!104731) (not b!104994) (not d!28465) (not d!28193) (not d!28719) (not b!104882) (not d!28199) (not b!104903) (not b!104984) (not b!104028) (not d!28391) (not b!104762) (not b!104723) (not b!104389) (not d!28707) (not b!104122) (not b_lambda!4695) (not b!104014) (not b!104955) (not b!104097) (not b!104509) (not b!104604) (not d!28047) (not d!28591) (not b!104838) (not b!104927) (not b!104816) (not b!104654) (not d!28369) (not d!28237) (not bm!10992) (not d!28713) (not d!28187) (not b!104539) (not b!104295) (not d!28081) (not d!28107) (not b!104369) (not b!104713) (not b!104800) (not d!28401) (not b!104332) (not bm!11020) (not d!28269) (not d!28007) (not b!104442) (not d!28543) (not b!104847) (not b!104715) (not b!104978) (not b!104615) (not b!104213) (not d!28571) (not bm!10961) (not b!104626) (not d!28665) (not d!28581) (not b!105117) (not d!28393) (not bm!11006) (not b!104437) (not b!104472) (not b!104943) (not b!104535) (not b!104362) (not d!28567) (not d!28405) (not b!104392) (not b_lambda!4683) (not b!104197) (not b!104131) (not mapNonEmpty!3917) (not b!104673) (not b_lambda!4645) (not b!104324) (not b!104946) (not b!104708) (not d!28169) (not b!104440) (not d!28675) (not b!104164) (not d!28359) (not b!104766) (not b!104924) (not bm!10965) (not d!28011) (not d!28619) (not b!104831) (not b!104310) (not b!104419) (not b!104436) (not b!104641) (not b!104531) (not d!28537) (not d!28279) (not b!104435) (not b!104646) (not b!104783) (not d!28589) (not b!104625) (not b!104830) (not b!104236) (not d!28077) (not b!104794) (not b!105087) (not d!28731) (not b!104806) (not d!28067) (not b!105007) (not b!104737) (not b!104202) (not d!28227) (not b!104105) (not b!104413) (not b!104813) (not b!104717) (not b!105000) (not b!104542) (not b!104675) (not d!28261) (not b!104707) (not b!104262) (not b!105005) (not b!104309) (not b!104068) (not b!104350) (not d!28395) (not d!28573) (not b!104897) (not b!104856) (not bm!10969) (not d!28025) (not d!28577) (not b!104581) (not d!28403) (not d!28477) (not b_lambda!4693) (not b!104102) (not d!28079) (not b!104226) (not d!28175) (not b!104243) (not b!104121) (not b!104833) (not d!28585) (not b!104611) (not b!104141) (not b!104032) (not bm!10938) (not d!28673) (not d!28091) (not bm!10931) (not b!104516) (not b!104534) (not b!104395) (not bm!10976) (not d!28095) (not b!104058) (not d!28617) (not b!104104) (not b!104051) (not b!104871) (not b!104722) (not b!104259) (not bm!10909) (not d!28631) (not b!104489) (not b!104349) (not d!28263) (not b!104078) (not b!104639) (not bm!10917) (not b!104298) (not bm!10912) (not b!104664) (not b!105096) (not b!103990) (not d!28285) (not b!104638) (not d!28097) (not b!104500) (not b!104396) (not bm!11012) (not d!28483) (not b!104468) (not b!103979) (not b!104796) (not b!104421) (not b!103973) (not b!104973) (not b!104891) (not d!28425) (not b!104527) (not b!104515) (not b!104069) (not b!104782) (not b!104091) (not d!28529) (not d!28093) (not b!104863) (not b!104098) (not d!28313) (not d!28235) (not b!104066) (not b!104149) (not d!28397) (not d!28161) (not b!105075) (not d!28355) (not bm!10920) (not d!28685) (not b!103993) (not b!104608) (not bm!11023) (not b!104124) (not d!28723) (not b!104126) (not b!104353) (not d!28503) (not d!28641) (not bm!10989) (not d!28185) (not b!104805) (not b!104616) (not bm!11001) (not b!104123) (not b!104631) (not b!104315) (not d!28353) (not d!28189) (not b!104203) (not bm!10954) (not b!104412) (not d!28479) (not b!104450) (not d!28563) (not b!104513) (not b!104321) (not d!28599) (not b!104951) (not b!104808) (not b!104519) (not d!28399) (not b!104679) (not b!104975) (not b!104630) (not d!28487) (not d!28611) (not d!28337) (not d!28103) (not b!104932) (not b!104989) (not b!104779) (not b!105102) (not b!104944) (not b!104367) (not b!104725) (not b!104318) (not d!28429) (not b!104894) (not b!104009) (not b!104445) (not b!104572) (not d!28021) (not b!104636) (not b!104256) (not b!104839) (not d!28629) (not d!28411) (not b!104895) (not b!104593) (not b!104118) (not b!105024) (not b!104166) (not bm!10944) (not b!103995) (not b!103992) (not bm!10927) (not b!105009) (not d!28579) (not b_lambda!4629) (not b!104995) (not d!28565) (not d!28197) (not d!28231) (not d!28177) (not bm!10932) (not b!104021) (not d!28695) (not b!104488) (not d!28701) (not b!104083) (not d!28061) (not d!28659) (not bm!10974) (not b!104846) (not b!104427) (not b!104775) (not d!28455) (not d!28309) (not b_lambda!4651) (not bm!10975) (not d!28621) (not b!104904) (not b!104415) (not b!104059) (not b!104792) (not b!105081) (not b!104802) (not b!104530) (not b!104282) (not d!28273) (not b!104633) (not d!28667) (not b!104758) (not b!104462) (not bm!11033) (not b!105068) (not b!104076) (not b!104798) (not b!105107) (not b!104972) (not d!28201) (not b!104582) (not d!28203) (not b!104953) (not b!104307) (not b!105060) (not bm!10915) (not b!104168) (not b!104662) (not b_lambda!4627) (not b!104862) (not b!104045) (not d!28409) (not d!28113) (not d!28495) (not bm!10998) (not b!104062) (not b!104128) (not b!104508) (not b_next!2511) (not b!104745) (not b!104495) (not b!104613) (not b!104460) (not d!28711) (not b!104518) (not d!28625) (not b!104064) (not b!105062) (not b!104336) (not b!104426) (not b!104578) (not b!104211) (not b!104383) (not b!104728) (not b!104285) (not d!28593) (not b!105015) (not d!28037) (not b!105067) (not bm!11019) (not b_lambda!4701) (not b!104448) (not b!104726) (not d!28345) (not b!104112) (not d!28283) (not b!104242) (not b!104206) (not bm!11026) (not b!104050) (not b!104841) (not d!28461) (not d!28527) (not b!104536) (not b!105094) (not b!104770) (not b_lambda!4691) (not bm!10947) (not d!28703) (not b!104183) (not b!104710) (not d!28149) (not b!104008) (not bm!10916) (not bm!10996) (not b!104106) (not d!28297) (not b!104987) (not d!28163) (not d!28003) (not b!104247) (not d!28275) (not bm!10988) (not d!28415) (not d!28693) (not b!104055) (not b!104404) (not b!104092) (not b!104914) (not b!104954) (not b!104520) (not b!104137) (not b!104606) (not b!104067) (not d!28117) (not bm!10977) (not d!28085) (not b!104270) (not b!104030) (not d!28683) (not b!105091) (not b!104724) (not b!104191))
(check-sat b_and!6485 b_and!6487 (not b_next!2509) (not b_next!2511))
