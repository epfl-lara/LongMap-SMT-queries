; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!12190 () Bool)

(assert start!12190)

(declare-fun b!103176 () Bool)

(declare-fun b_free!2513 () Bool)

(declare-fun b_next!2513 () Bool)

(assert (=> b!103176 (= b_free!2513 (not b_next!2513))))

(declare-fun tp!9853 () Bool)

(declare-fun b_and!6387 () Bool)

(assert (=> b!103176 (= tp!9853 b_and!6387)))

(declare-fun b!103179 () Bool)

(declare-fun b_free!2515 () Bool)

(declare-fun b_next!2515 () Bool)

(assert (=> b!103179 (= b_free!2515 (not b_next!2515))))

(declare-fun tp!9856 () Bool)

(declare-fun b_and!6389 () Bool)

(assert (=> b!103179 (= tp!9856 b_and!6389)))

(declare-fun mapNonEmpty!3903 () Bool)

(declare-fun mapRes!3904 () Bool)

(declare-fun tp!9854 () Bool)

(declare-fun e!67232 () Bool)

(assert (=> mapNonEmpty!3903 (= mapRes!3904 (and tp!9854 e!67232))))

(declare-fun mapKey!3904 () (_ BitVec 32))

(declare-datatypes ((V!3211 0))(
  ( (V!3212 (val!1381 Int)) )
))
(declare-datatypes ((ValueCell!993 0))(
  ( (ValueCellFull!993 (v!2875 V!3211)) (EmptyCell!993) )
))
(declare-fun mapValue!3904 () ValueCell!993)

(declare-datatypes ((array!4335 0))(
  ( (array!4336 (arr!2057 (Array (_ BitVec 32) (_ BitVec 64))) (size!2311 (_ BitVec 32))) )
))
(declare-datatypes ((array!4337 0))(
  ( (array!4338 (arr!2058 (Array (_ BitVec 32) ValueCell!993)) (size!2312 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!894 0))(
  ( (LongMapFixedSize!895 (defaultEntry!2561 Int) (mask!6697 (_ BitVec 32)) (extraKeys!2370 (_ BitVec 32)) (zeroValue!2438 V!3211) (minValue!2438 V!3211) (_size!496 (_ BitVec 32)) (_keys!4263 array!4335) (_values!2544 array!4337) (_vacant!496 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!894)

(declare-fun mapRest!3904 () (Array (_ BitVec 32) ValueCell!993))

(assert (=> mapNonEmpty!3903 (= (arr!2058 (_values!2544 newMap!16)) (store mapRest!3904 mapKey!3904 mapValue!3904))))

(declare-fun b!103168 () Bool)

(declare-fun e!67237 () Bool)

(declare-datatypes ((Cell!694 0))(
  ( (Cell!695 (v!2876 LongMapFixedSize!894)) )
))
(declare-datatypes ((LongMap!694 0))(
  ( (LongMap!695 (underlying!358 Cell!694)) )
))
(declare-fun thiss!992 () LongMap!694)

(assert (=> b!103168 (= e!67237 (= (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6697 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103169 () Bool)

(declare-fun e!67233 () Bool)

(declare-fun tp_is_empty!2673 () Bool)

(assert (=> b!103169 (= e!67233 tp_is_empty!2673)))

(declare-fun b!103170 () Bool)

(declare-datatypes ((Unit!3150 0))(
  ( (Unit!3151) )
))
(declare-fun e!67236 () Unit!3150)

(declare-fun Unit!3152 () Unit!3150)

(assert (=> b!103170 (= e!67236 Unit!3152)))

(declare-fun lt!52536 () Unit!3150)

(declare-fun from!355 () (_ BitVec 32))

(declare-fun lemmaListMapContainsThenArrayContainsFrom!102 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3150)

(assert (=> b!103170 (= lt!52536 (lemmaListMapContainsThenArrayContainsFrom!102 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4335 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!103170 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!52535 () Unit!3150)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4335 (_ BitVec 32) (_ BitVec 32)) Unit!3150)

(assert (=> b!103170 (= lt!52535 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1610 0))(
  ( (Nil!1607) (Cons!1606 (h!2202 (_ BitVec 64)) (t!5672 List!1610)) )
))
(declare-fun arrayNoDuplicates!0 (array!4335 (_ BitVec 32) List!1610) Bool)

(assert (=> b!103170 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1607)))

(declare-fun lt!52541 () Unit!3150)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4335 (_ BitVec 32) (_ BitVec 64) List!1610) Unit!3150)

(assert (=> b!103170 (= lt!52541 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607)))))

(assert (=> b!103170 false))

(declare-fun b!103171 () Bool)

(declare-fun e!67239 () Bool)

(declare-fun e!67234 () Bool)

(assert (=> b!103171 (= e!67239 e!67234)))

(declare-fun res!51543 () Bool)

(assert (=> b!103171 (=> (not res!51543) (not e!67234))))

(declare-datatypes ((tuple2!2400 0))(
  ( (tuple2!2401 (_1!1211 (_ BitVec 64)) (_2!1211 V!3211)) )
))
(declare-datatypes ((List!1611 0))(
  ( (Nil!1608) (Cons!1607 (h!2203 tuple2!2400) (t!5673 List!1611)) )
))
(declare-datatypes ((ListLongMap!1569 0))(
  ( (ListLongMap!1570 (toList!800 List!1611)) )
))
(declare-fun lt!52543 () ListLongMap!1569)

(declare-fun lt!52534 () ListLongMap!1569)

(assert (=> b!103171 (= res!51543 (= lt!52543 lt!52534))))

(declare-fun map!1282 (LongMapFixedSize!894) ListLongMap!1569)

(assert (=> b!103171 (= lt!52534 (map!1282 newMap!16))))

(declare-fun getCurrentListMap!487 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) ListLongMap!1569)

(assert (=> b!103171 (= lt!52543 (getCurrentListMap!487 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103172 () Bool)

(declare-fun res!51541 () Bool)

(assert (=> b!103172 (=> (not res!51541) (not e!67239))))

(declare-fun valid!417 (LongMapFixedSize!894) Bool)

(assert (=> b!103172 (= res!51541 (valid!417 newMap!16))))

(declare-fun res!51545 () Bool)

(assert (=> start!12190 (=> (not res!51545) (not e!67239))))

(declare-fun valid!418 (LongMap!694) Bool)

(assert (=> start!12190 (= res!51545 (valid!418 thiss!992))))

(assert (=> start!12190 e!67239))

(declare-fun e!67226 () Bool)

(assert (=> start!12190 e!67226))

(assert (=> start!12190 true))

(declare-fun e!67229 () Bool)

(assert (=> start!12190 e!67229))

(declare-fun b!103173 () Bool)

(declare-fun e!67231 () Bool)

(declare-fun e!67223 () Bool)

(assert (=> b!103173 (= e!67231 (and e!67223 mapRes!3904))))

(declare-fun condMapEmpty!3903 () Bool)

(declare-fun mapDefault!3903 () ValueCell!993)

(assert (=> b!103173 (= condMapEmpty!3903 (= (arr!2058 (_values!2544 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3903)))))

(declare-fun mapIsEmpty!3903 () Bool)

(assert (=> mapIsEmpty!3903 mapRes!3904))

(declare-fun b!103174 () Bool)

(declare-fun e!67225 () Bool)

(assert (=> b!103174 (= e!67225 (not e!67237))))

(declare-fun res!51546 () Bool)

(assert (=> b!103174 (=> res!51546 e!67237)))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!103174 (= res!51546 (not (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun lt!52539 () ListLongMap!1569)

(declare-fun lt!52540 () tuple2!2400)

(declare-fun lt!52538 () tuple2!2400)

(declare-fun +!141 (ListLongMap!1569 tuple2!2400) ListLongMap!1569)

(assert (=> b!103174 (= (+!141 (+!141 lt!52539 lt!52540) lt!52538) (+!141 (+!141 lt!52539 lt!52538) lt!52540))))

(assert (=> b!103174 (= lt!52538 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52542 () V!3211)

(assert (=> b!103174 (= lt!52540 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))

(declare-fun lt!52532 () Unit!3150)

(declare-fun addCommutativeForDiffKeys!53 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64) V!3211) Unit!3150)

(assert (=> b!103174 (= lt!52532 (addCommutativeForDiffKeys!53 lt!52539 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun getCurrentListMapNoExtraKeys!107 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) ListLongMap!1569)

(assert (=> b!103174 (= lt!52539 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103175 () Bool)

(declare-fun e!67230 () Bool)

(assert (=> b!103175 (= e!67234 e!67230)))

(declare-fun res!51542 () Bool)

(assert (=> b!103175 (=> (not res!51542) (not e!67230))))

(assert (=> b!103175 (= res!51542 (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun get!1323 (ValueCell!993 V!3211) V!3211)

(declare-fun dynLambda!383 (Int (_ BitVec 64)) V!3211)

(assert (=> b!103175 (= lt!52542 (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67235 () Bool)

(declare-fun e!67224 () Bool)

(declare-fun array_inv!1293 (array!4335) Bool)

(declare-fun array_inv!1294 (array!4337) Bool)

(assert (=> b!103176 (= e!67224 (and tp!9853 tp_is_empty!2673 (array_inv!1293 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (array_inv!1294 (_values!2544 (v!2876 (underlying!358 thiss!992)))) e!67235))))

(declare-fun b!103177 () Bool)

(declare-fun res!51547 () Bool)

(assert (=> b!103177 (=> (not res!51547) (not e!67239))))

(assert (=> b!103177 (= res!51547 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6697 newMap!16)) (_size!496 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103178 () Bool)

(declare-fun Unit!3153 () Unit!3150)

(assert (=> b!103178 (= e!67236 Unit!3153)))

(declare-fun mapNonEmpty!3904 () Bool)

(declare-fun mapRes!3903 () Bool)

(declare-fun tp!9855 () Bool)

(assert (=> mapNonEmpty!3904 (= mapRes!3903 (and tp!9855 e!67233))))

(declare-fun mapKey!3903 () (_ BitVec 32))

(declare-fun mapValue!3903 () ValueCell!993)

(declare-fun mapRest!3903 () (Array (_ BitVec 32) ValueCell!993))

(assert (=> mapNonEmpty!3904 (= (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (store mapRest!3903 mapKey!3903 mapValue!3903))))

(assert (=> b!103179 (= e!67229 (and tp!9856 tp_is_empty!2673 (array_inv!1293 (_keys!4263 newMap!16)) (array_inv!1294 (_values!2544 newMap!16)) e!67231))))

(declare-fun b!103180 () Bool)

(declare-fun e!67228 () Bool)

(assert (=> b!103180 (= e!67235 (and e!67228 mapRes!3903))))

(declare-fun condMapEmpty!3904 () Bool)

(declare-fun mapDefault!3904 () ValueCell!993)

(assert (=> b!103180 (= condMapEmpty!3904 (= (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3904)))))

(declare-fun b!103181 () Bool)

(assert (=> b!103181 (= e!67230 e!67225)))

(declare-fun res!51544 () Bool)

(assert (=> b!103181 (=> (not res!51544) (not e!67225))))

(declare-datatypes ((tuple2!2402 0))(
  ( (tuple2!2403 (_1!1212 Bool) (_2!1212 LongMapFixedSize!894)) )
))
(declare-fun lt!52537 () tuple2!2402)

(assert (=> b!103181 (= res!51544 (and (_1!1212 lt!52537) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!52533 () Unit!3150)

(assert (=> b!103181 (= lt!52533 e!67236)))

(declare-fun c!17742 () Bool)

(declare-fun contains!824 (ListLongMap!1569 (_ BitVec 64)) Bool)

(assert (=> b!103181 (= c!17742 (contains!824 lt!52534 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun update!154 (LongMapFixedSize!894 (_ BitVec 64) V!3211) tuple2!2402)

(assert (=> b!103181 (= lt!52537 (update!154 newMap!16 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))

(declare-fun b!103182 () Bool)

(assert (=> b!103182 (= e!67232 tp_is_empty!2673)))

(declare-fun b!103183 () Bool)

(declare-fun e!67227 () Bool)

(assert (=> b!103183 (= e!67227 e!67224)))

(declare-fun b!103184 () Bool)

(assert (=> b!103184 (= e!67223 tp_is_empty!2673)))

(declare-fun b!103185 () Bool)

(assert (=> b!103185 (= e!67228 tp_is_empty!2673)))

(declare-fun b!103186 () Bool)

(declare-fun res!51540 () Bool)

(assert (=> b!103186 (=> (not res!51540) (not e!67239))))

(assert (=> b!103186 (= res!51540 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun mapIsEmpty!3904 () Bool)

(assert (=> mapIsEmpty!3904 mapRes!3903))

(declare-fun b!103187 () Bool)

(assert (=> b!103187 (= e!67226 e!67227)))

(assert (= (and start!12190 res!51545) b!103186))

(assert (= (and b!103186 res!51540) b!103172))

(assert (= (and b!103172 res!51541) b!103177))

(assert (= (and b!103177 res!51547) b!103171))

(assert (= (and b!103171 res!51543) b!103175))

(assert (= (and b!103175 res!51542) b!103181))

(assert (= (and b!103181 c!17742) b!103170))

(assert (= (and b!103181 (not c!17742)) b!103178))

(assert (= (and b!103181 res!51544) b!103174))

(assert (= (and b!103174 (not res!51546)) b!103168))

(assert (= (and b!103180 condMapEmpty!3904) mapIsEmpty!3904))

(assert (= (and b!103180 (not condMapEmpty!3904)) mapNonEmpty!3904))

(get-info :version)

(assert (= (and mapNonEmpty!3904 ((_ is ValueCellFull!993) mapValue!3903)) b!103169))

(assert (= (and b!103180 ((_ is ValueCellFull!993) mapDefault!3904)) b!103185))

(assert (= b!103176 b!103180))

(assert (= b!103183 b!103176))

(assert (= b!103187 b!103183))

(assert (= start!12190 b!103187))

(assert (= (and b!103173 condMapEmpty!3903) mapIsEmpty!3903))

(assert (= (and b!103173 (not condMapEmpty!3903)) mapNonEmpty!3903))

(assert (= (and mapNonEmpty!3903 ((_ is ValueCellFull!993) mapValue!3904)) b!103182))

(assert (= (and b!103173 ((_ is ValueCellFull!993) mapDefault!3903)) b!103184))

(assert (= b!103179 b!103173))

(assert (= start!12190 b!103179))

(declare-fun b_lambda!4617 () Bool)

(assert (=> (not b_lambda!4617) (not b!103175)))

(declare-fun t!5669 () Bool)

(declare-fun tb!2029 () Bool)

(assert (=> (and b!103176 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) t!5669) tb!2029))

(declare-fun result!3421 () Bool)

(assert (=> tb!2029 (= result!3421 tp_is_empty!2673)))

(assert (=> b!103175 t!5669))

(declare-fun b_and!6391 () Bool)

(assert (= b_and!6387 (and (=> t!5669 result!3421) b_and!6391)))

(declare-fun t!5671 () Bool)

(declare-fun tb!2031 () Bool)

(assert (=> (and b!103179 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) t!5671) tb!2031))

(declare-fun result!3425 () Bool)

(assert (= result!3425 result!3421))

(assert (=> b!103175 t!5671))

(declare-fun b_and!6393 () Bool)

(assert (= b_and!6389 (and (=> t!5671 result!3425) b_and!6393)))

(declare-fun m!114151 () Bool)

(assert (=> b!103171 m!114151))

(declare-fun m!114153 () Bool)

(assert (=> b!103171 m!114153))

(declare-fun m!114155 () Bool)

(assert (=> b!103172 m!114155))

(declare-fun m!114157 () Bool)

(assert (=> b!103176 m!114157))

(declare-fun m!114159 () Bool)

(assert (=> b!103176 m!114159))

(declare-fun m!114161 () Bool)

(assert (=> b!103170 m!114161))

(declare-fun m!114163 () Bool)

(assert (=> b!103170 m!114163))

(declare-fun m!114165 () Bool)

(assert (=> b!103170 m!114165))

(declare-fun m!114167 () Bool)

(assert (=> b!103170 m!114167))

(assert (=> b!103170 m!114165))

(assert (=> b!103170 m!114165))

(declare-fun m!114169 () Bool)

(assert (=> b!103170 m!114169))

(assert (=> b!103170 m!114165))

(declare-fun m!114171 () Bool)

(assert (=> b!103170 m!114171))

(declare-fun m!114173 () Bool)

(assert (=> mapNonEmpty!3904 m!114173))

(declare-fun m!114175 () Bool)

(assert (=> start!12190 m!114175))

(declare-fun m!114177 () Bool)

(assert (=> b!103179 m!114177))

(declare-fun m!114179 () Bool)

(assert (=> b!103179 m!114179))

(declare-fun m!114181 () Bool)

(assert (=> b!103174 m!114181))

(declare-fun m!114183 () Bool)

(assert (=> b!103174 m!114183))

(declare-fun m!114185 () Bool)

(assert (=> b!103174 m!114185))

(assert (=> b!103174 m!114165))

(declare-fun m!114187 () Bool)

(assert (=> b!103174 m!114187))

(assert (=> b!103174 m!114165))

(declare-fun m!114189 () Bool)

(assert (=> b!103174 m!114189))

(assert (=> b!103174 m!114189))

(declare-fun m!114191 () Bool)

(assert (=> b!103174 m!114191))

(declare-fun m!114193 () Bool)

(assert (=> b!103174 m!114193))

(assert (=> b!103174 m!114183))

(assert (=> b!103175 m!114165))

(declare-fun m!114195 () Bool)

(assert (=> b!103175 m!114195))

(declare-fun m!114197 () Bool)

(assert (=> b!103175 m!114197))

(assert (=> b!103175 m!114195))

(assert (=> b!103175 m!114197))

(declare-fun m!114199 () Bool)

(assert (=> b!103175 m!114199))

(assert (=> b!103181 m!114165))

(assert (=> b!103181 m!114165))

(declare-fun m!114201 () Bool)

(assert (=> b!103181 m!114201))

(assert (=> b!103181 m!114165))

(declare-fun m!114203 () Bool)

(assert (=> b!103181 m!114203))

(declare-fun m!114205 () Bool)

(assert (=> mapNonEmpty!3903 m!114205))

(check-sat (not b!103181) (not b!103172) (not b_lambda!4617) (not b!103176) (not mapNonEmpty!3903) (not b!103170) (not mapNonEmpty!3904) (not b!103179) (not start!12190) (not b_next!2515) b_and!6391 (not b_next!2513) tp_is_empty!2673 (not b!103175) (not b!103174) (not b!103171) b_and!6393)
(check-sat b_and!6391 b_and!6393 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun b_lambda!4621 () Bool)

(assert (= b_lambda!4617 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4621)))

(check-sat (not b!103181) (not b!103172) (not b!103176) (not mapNonEmpty!3903) (not b!103170) (not mapNonEmpty!3904) (not b!103179) (not start!12190) (not b_next!2515) b_and!6391 (not b_next!2513) (not b_lambda!4621) tp_is_empty!2673 (not b!103175) (not b!103174) (not b!103171) b_and!6393)
(check-sat b_and!6391 b_and!6393 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun d!27765 () Bool)

(declare-fun res!51578 () Bool)

(declare-fun e!67297 () Bool)

(assert (=> d!27765 (=> (not res!51578) (not e!67297))))

(declare-fun simpleValid!73 (LongMapFixedSize!894) Bool)

(assert (=> d!27765 (= res!51578 (simpleValid!73 newMap!16))))

(assert (=> d!27765 (= (valid!417 newMap!16) e!67297)))

(declare-fun b!103258 () Bool)

(declare-fun res!51579 () Bool)

(assert (=> b!103258 (=> (not res!51579) (not e!67297))))

(declare-fun arrayCountValidKeys!0 (array!4335 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!103258 (= res!51579 (= (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (_size!496 newMap!16)))))

(declare-fun b!103259 () Bool)

(declare-fun res!51580 () Bool)

(assert (=> b!103259 (=> (not res!51580) (not e!67297))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4335 (_ BitVec 32)) Bool)

(assert (=> b!103259 (= res!51580 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103260 () Bool)

(assert (=> b!103260 (= e!67297 (arrayNoDuplicates!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!27765 res!51578) b!103258))

(assert (= (and b!103258 res!51579) b!103259))

(assert (= (and b!103259 res!51580) b!103260))

(declare-fun m!114263 () Bool)

(assert (=> d!27765 m!114263))

(declare-fun m!114265 () Bool)

(assert (=> b!103258 m!114265))

(declare-fun m!114267 () Bool)

(assert (=> b!103259 m!114267))

(declare-fun m!114269 () Bool)

(assert (=> b!103260 m!114269))

(assert (=> b!103172 d!27765))

(declare-fun d!27767 () Bool)

(declare-fun e!67303 () Bool)

(assert (=> d!27767 e!67303))

(declare-fun res!51583 () Bool)

(assert (=> d!27767 (=> res!51583 e!67303)))

(declare-fun lt!52588 () Bool)

(assert (=> d!27767 (= res!51583 (not lt!52588))))

(declare-fun lt!52589 () Bool)

(assert (=> d!27767 (= lt!52588 lt!52589)))

(declare-fun lt!52590 () Unit!3150)

(declare-fun e!67302 () Unit!3150)

(assert (=> d!27767 (= lt!52590 e!67302)))

(declare-fun c!17748 () Bool)

(assert (=> d!27767 (= c!17748 lt!52589)))

(declare-fun containsKey!159 (List!1611 (_ BitVec 64)) Bool)

(assert (=> d!27767 (= lt!52589 (containsKey!159 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27767 (= (contains!824 lt!52534 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!52588)))

(declare-fun b!103267 () Bool)

(declare-fun lt!52591 () Unit!3150)

(assert (=> b!103267 (= e!67302 lt!52591)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!107 (List!1611 (_ BitVec 64)) Unit!3150)

(assert (=> b!103267 (= lt!52591 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-datatypes ((Option!161 0))(
  ( (Some!160 (v!2880 V!3211)) (None!159) )
))
(declare-fun isDefined!108 (Option!161) Bool)

(declare-fun getValueByKey!155 (List!1611 (_ BitVec 64)) Option!161)

(assert (=> b!103267 (isDefined!108 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103268 () Bool)

(declare-fun Unit!3157 () Unit!3150)

(assert (=> b!103268 (= e!67302 Unit!3157)))

(declare-fun b!103269 () Bool)

(assert (=> b!103269 (= e!67303 (isDefined!108 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!27767 c!17748) b!103267))

(assert (= (and d!27767 (not c!17748)) b!103268))

(assert (= (and d!27767 (not res!51583)) b!103269))

(assert (=> d!27767 m!114165))

(declare-fun m!114271 () Bool)

(assert (=> d!27767 m!114271))

(assert (=> b!103267 m!114165))

(declare-fun m!114273 () Bool)

(assert (=> b!103267 m!114273))

(assert (=> b!103267 m!114165))

(declare-fun m!114275 () Bool)

(assert (=> b!103267 m!114275))

(assert (=> b!103267 m!114275))

(declare-fun m!114277 () Bool)

(assert (=> b!103267 m!114277))

(assert (=> b!103269 m!114165))

(assert (=> b!103269 m!114275))

(assert (=> b!103269 m!114275))

(assert (=> b!103269 m!114277))

(assert (=> b!103181 d!27767))

(declare-fun bm!10813 () Bool)

(declare-fun call!10816 () Bool)

(declare-fun call!10818 () Bool)

(assert (=> bm!10813 (= call!10816 call!10818)))

(declare-fun c!17781 () Bool)

(declare-datatypes ((SeekEntryResult!258 0))(
  ( (MissingZero!258 (index!3179 (_ BitVec 32))) (Found!258 (index!3180 (_ BitVec 32))) (Intermediate!258 (undefined!1070 Bool) (index!3181 (_ BitVec 32)) (x!13500 (_ BitVec 32))) (Undefined!258) (MissingVacant!258 (index!3182 (_ BitVec 32))) )
))
(declare-fun lt!52655 () SeekEntryResult!258)

(declare-fun bm!10814 () Bool)

(declare-fun call!10824 () ListLongMap!1569)

(assert (=> bm!10814 (= call!10824 (getCurrentListMap!487 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun b!103354 () Bool)

(declare-fun e!67350 () Bool)

(declare-fun e!67369 () Bool)

(assert (=> b!103354 (= e!67350 e!67369)))

(declare-fun res!51615 () Bool)

(assert (=> b!103354 (= res!51615 call!10816)))

(assert (=> b!103354 (=> (not res!51615) (not e!67369))))

(declare-fun b!103356 () Bool)

(declare-fun e!67349 () Bool)

(declare-fun e!67348 () Bool)

(assert (=> b!103356 (= e!67349 e!67348)))

(declare-fun res!51618 () Bool)

(declare-fun call!10830 () Bool)

(assert (=> b!103356 (= res!51618 call!10830)))

(assert (=> b!103356 (=> (not res!51618) (not e!67348))))

(declare-fun b!103357 () Bool)

(declare-fun e!67358 () ListLongMap!1569)

(declare-fun call!10819 () ListLongMap!1569)

(assert (=> b!103357 (= e!67358 call!10819)))

(declare-fun b!103358 () Bool)

(declare-fun e!67365 () Unit!3150)

(declare-fun lt!52650 () Unit!3150)

(assert (=> b!103358 (= e!67365 lt!52650)))

(declare-fun call!10821 () Unit!3150)

(assert (=> b!103358 (= lt!52650 call!10821)))

(declare-fun lt!52654 () SeekEntryResult!258)

(declare-fun call!10839 () SeekEntryResult!258)

(assert (=> b!103358 (= lt!52654 call!10839)))

(declare-fun res!51623 () Bool)

(assert (=> b!103358 (= res!51623 ((_ is Found!258) lt!52654))))

(declare-fun e!67363 () Bool)

(assert (=> b!103358 (=> (not res!51623) (not e!67363))))

(assert (=> b!103358 e!67363))

(declare-fun b!103359 () Bool)

(declare-fun lt!52665 () Unit!3150)

(declare-fun lt!52672 () Unit!3150)

(assert (=> b!103359 (= lt!52665 lt!52672)))

(declare-fun call!10820 () ListLongMap!1569)

(declare-fun call!10823 () ListLongMap!1569)

(assert (=> b!103359 (= call!10820 call!10823)))

(declare-fun lt!52670 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!46 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3150)

(assert (=> b!103359 (= lt!52672 (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52670 (zeroValue!2438 newMap!16) lt!52542 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103359 (= lt!52670 (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!67353 () tuple2!2402)

(assert (=> b!103359 (= e!67353 (tuple2!2403 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) lt!52542 (minValue!2438 newMap!16) (_size!496 newMap!16) (_keys!4263 newMap!16) (_values!2544 newMap!16) (_vacant!496 newMap!16))))))

(declare-fun b!103360 () Bool)

(declare-fun res!51625 () Bool)

(declare-fun call!10822 () Bool)

(assert (=> b!103360 (= res!51625 call!10822)))

(assert (=> b!103360 (=> (not res!51625) (not e!67363))))

(declare-fun b!103361 () Bool)

(declare-fun call!10828 () Bool)

(assert (=> b!103361 (= e!67348 (not call!10828))))

(declare-fun b!103362 () Bool)

(declare-fun res!51613 () Bool)

(declare-fun e!67356 () Bool)

(assert (=> b!103362 (=> (not res!51613) (not e!67356))))

(declare-fun lt!52653 () SeekEntryResult!258)

(assert (=> b!103362 (= res!51613 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!52653)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10815 () Bool)

(assert (=> bm!10815 (= call!10819 call!10824)))

(declare-fun b!103363 () Bool)

(declare-fun lt!52663 () Unit!3150)

(declare-fun lt!52669 () Unit!3150)

(assert (=> b!103363 (= lt!52663 lt!52669)))

(declare-fun call!10817 () ListLongMap!1569)

(assert (=> b!103363 (contains!824 call!10817 (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))

(declare-fun lt!52668 () array!4337)

(declare-fun lemmaValidKeyInArrayIsInListMap!107 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) Unit!3150)

(assert (=> b!103363 (= lt!52669 (lemmaValidKeyInArrayIsInListMap!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103363 (= lt!52668 (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))))

(declare-fun lt!52667 () Unit!3150)

(declare-fun lt!52649 () Unit!3150)

(assert (=> b!103363 (= lt!52667 lt!52649)))

(declare-fun call!10836 () ListLongMap!1569)

(assert (=> b!103363 (= call!10836 call!10824)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3150)

(assert (=> b!103363 (= lt!52649 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52652 () Unit!3150)

(assert (=> b!103363 (= lt!52652 e!67365)))

(declare-fun c!17777 () Bool)

(declare-fun call!10831 () Bool)

(assert (=> b!103363 (= c!17777 call!10831)))

(declare-fun e!67362 () tuple2!2402)

(assert (=> b!103363 (= e!67362 (tuple2!2403 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (_size!496 newMap!16) (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (_vacant!496 newMap!16))))))

(declare-fun b!103364 () Bool)

(assert (=> b!103364 (= e!67358 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun b!103365 () Bool)

(declare-fun lt!52660 () Unit!3150)

(declare-fun e!67366 () Unit!3150)

(assert (=> b!103365 (= lt!52660 e!67366)))

(declare-fun c!17780 () Bool)

(assert (=> b!103365 (= c!17780 call!10831)))

(declare-fun e!67354 () tuple2!2402)

(assert (=> b!103365 (= e!67354 (tuple2!2403 false newMap!16))))

(declare-fun b!103366 () Bool)

(declare-fun res!51614 () Bool)

(assert (=> b!103366 (=> (not res!51614) (not e!67356))))

(assert (=> b!103366 (= res!51614 call!10830)))

(declare-fun e!67351 () Bool)

(assert (=> b!103366 (= e!67351 e!67356)))

(declare-fun b!103367 () Bool)

(assert (=> b!103367 (= e!67349 ((_ is Undefined!258) lt!52653))))

(declare-fun b!103368 () Bool)

(declare-fun e!67352 () tuple2!2402)

(assert (=> b!103368 (= e!67352 e!67362)))

(declare-fun c!17785 () Bool)

(assert (=> b!103368 (= c!17785 ((_ is MissingZero!258) lt!52655))))

(declare-fun b!103369 () Bool)

(declare-fun res!51617 () Bool)

(declare-fun e!67357 () Bool)

(assert (=> b!103369 (=> (not res!51617) (not e!67357))))

(declare-fun lt!52671 () SeekEntryResult!258)

(assert (=> b!103369 (= res!51617 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!52671)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103370 () Bool)

(declare-fun e!67364 () ListLongMap!1569)

(assert (=> b!103370 (= e!67364 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun b!103371 () Bool)

(declare-fun Unit!3158 () Unit!3150)

(assert (=> b!103371 (= e!67365 Unit!3158)))

(declare-fun lt!52651 () Unit!3150)

(declare-fun call!10838 () Unit!3150)

(assert (=> b!103371 (= lt!52651 call!10838)))

(assert (=> b!103371 (= lt!52653 call!10839)))

(declare-fun c!17782 () Bool)

(assert (=> b!103371 (= c!17782 ((_ is MissingZero!258) lt!52653))))

(assert (=> b!103371 e!67351))

(declare-fun lt!52662 () Unit!3150)

(assert (=> b!103371 (= lt!52662 lt!52651)))

(assert (=> b!103371 false))

(declare-fun bm!10816 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3150)

(assert (=> bm!10816 (= call!10821 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(declare-fun c!17789 () Bool)

(declare-fun bm!10817 () Bool)

(declare-fun c!17784 () Bool)

(declare-fun call!10825 () Bool)

(declare-fun lt!52647 () SeekEntryResult!258)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!10817 (= call!10825 (inRange!0 (ite c!17784 (ite c!17780 (index!3180 lt!52647) (ite c!17789 (index!3179 lt!52671) (index!3182 lt!52671))) (ite c!17777 (index!3180 lt!52654) (ite c!17782 (index!3179 lt!52653) (index!3182 lt!52653)))) (mask!6697 newMap!16)))))

(declare-fun b!103372 () Bool)

(declare-fun res!51619 () Bool)

(assert (=> b!103372 (= res!51619 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!52653)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103372 (=> (not res!51619) (not e!67348))))

(declare-fun c!17787 () Bool)

(declare-fun lt!52664 () (_ BitVec 32))

(declare-fun bm!10818 () Bool)

(declare-fun call!10837 () ListLongMap!1569)

(assert (=> bm!10818 (= call!10837 (getCurrentListMap!487 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10819 () Bool)

(assert (=> bm!10819 (= call!10836 (+!141 e!67358 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun c!17790 () Bool)

(assert (=> bm!10819 (= c!17790 c!17781)))

(declare-fun bm!10820 () Bool)

(assert (=> bm!10820 (= call!10817 call!10837)))

(declare-fun bm!10821 () Bool)

(assert (=> bm!10821 (= call!10830 call!10822)))

(declare-fun b!103373 () Bool)

(declare-fun res!51621 () Bool)

(assert (=> b!103373 (=> (not res!51621) (not e!67357))))

(assert (=> b!103373 (= res!51621 call!10816)))

(declare-fun e!67368 () Bool)

(assert (=> b!103373 (= e!67368 e!67357)))

(declare-fun bm!10822 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3150)

(assert (=> bm!10822 (= call!10838 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(declare-fun b!103374 () Bool)

(declare-fun e!67359 () Bool)

(declare-fun e!67361 () Bool)

(assert (=> b!103374 (= e!67359 e!67361)))

(declare-fun c!17786 () Bool)

(declare-fun lt!52658 () tuple2!2402)

(assert (=> b!103374 (= c!17786 (_1!1212 lt!52658))))

(declare-fun b!103375 () Bool)

(declare-fun call!10826 () Bool)

(assert (=> b!103375 (= e!67357 (not call!10826))))

(declare-fun b!103376 () Bool)

(assert (=> b!103376 (= e!67364 call!10817)))

(declare-fun b!103377 () Bool)

(declare-fun call!10827 () ListLongMap!1569)

(declare-fun call!10833 () ListLongMap!1569)

(assert (=> b!103377 (= e!67361 (= call!10827 call!10833))))

(declare-fun b!103378 () Bool)

(declare-fun lt!52646 () tuple2!2402)

(declare-fun call!10832 () tuple2!2402)

(assert (=> b!103378 (= lt!52646 call!10832)))

(assert (=> b!103378 (= e!67362 (tuple2!2403 (_1!1212 lt!52646) (_2!1212 lt!52646)))))

(declare-fun bm!10823 () Bool)

(declare-fun call!10834 () SeekEntryResult!258)

(declare-fun call!10829 () SeekEntryResult!258)

(assert (=> bm!10823 (= call!10834 call!10829)))

(declare-fun b!103379 () Bool)

(declare-fun e!67355 () tuple2!2402)

(assert (=> b!103379 (= e!67355 e!67353)))

(assert (=> b!103379 (= c!17787 (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103380 () Bool)

(declare-fun e!67360 () Bool)

(assert (=> b!103380 (= e!67360 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52647)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun bm!10824 () Bool)

(declare-fun call!10835 () Bool)

(assert (=> bm!10824 (= call!10835 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!10825 () Bool)

(assert (=> bm!10825 (= call!10827 (map!1282 (_2!1212 lt!52658)))))

(declare-fun b!103381 () Bool)

(declare-fun lt!52657 () Unit!3150)

(declare-fun lt!52666 () Unit!3150)

(assert (=> b!103381 (= lt!52657 lt!52666)))

(assert (=> b!103381 (= call!10820 call!10823)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3150)

(assert (=> b!103381 (= lt!52666 (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52664 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52542 (defaultEntry!2561 newMap!16)))))

(assert (=> b!103381 (= lt!52664 (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!103381 (= e!67353 (tuple2!2403 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (bvor (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) (zeroValue!2438 newMap!16) lt!52542 (_size!496 newMap!16) (_keys!4263 newMap!16) (_values!2544 newMap!16) (_vacant!496 newMap!16))))))

(declare-fun b!103382 () Bool)

(declare-fun res!51616 () Bool)

(assert (=> b!103382 (= res!51616 call!10818)))

(assert (=> b!103382 (=> (not res!51616) (not e!67360))))

(declare-fun b!103383 () Bool)

(declare-fun c!17778 () Bool)

(assert (=> b!103383 (= c!17778 ((_ is MissingVacant!258) lt!52671))))

(assert (=> b!103383 (= e!67368 e!67350)))

(declare-fun b!103384 () Bool)

(assert (=> b!103384 (= e!67363 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52654)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun bm!10826 () Bool)

(assert (=> bm!10826 (= call!10820 call!10836)))

(declare-fun b!103385 () Bool)

(declare-fun e!67367 () Bool)

(assert (=> b!103385 (= e!67361 e!67367)))

(declare-fun res!51624 () Bool)

(assert (=> b!103385 (= res!51624 (contains!824 call!10827 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103385 (=> (not res!51624) (not e!67367))))

(declare-fun b!103386 () Bool)

(declare-fun lt!52656 () tuple2!2402)

(assert (=> b!103386 (= e!67352 (tuple2!2403 (_1!1212 lt!52656) (_2!1212 lt!52656)))))

(assert (=> b!103386 (= lt!52656 call!10832)))

(declare-fun bm!10827 () Bool)

(assert (=> bm!10827 (= call!10818 call!10825)))

(declare-fun bm!10828 () Bool)

(assert (=> bm!10828 (= call!10823 call!10837)))

(declare-fun bm!10829 () Bool)

(assert (=> bm!10829 (= call!10828 call!10835)))

(declare-fun bm!10830 () Bool)

(assert (=> bm!10830 (= call!10839 call!10829)))

(declare-fun bm!10831 () Bool)

(declare-fun c!17783 () Bool)

(declare-fun updateHelperNewKey!46 (LongMapFixedSize!894 (_ BitVec 64) V!3211 (_ BitVec 32)) tuple2!2402)

(assert (=> bm!10831 (= call!10832 (updateHelperNewKey!46 newMap!16 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))

(declare-fun b!103387 () Bool)

(declare-fun res!51620 () Bool)

(assert (=> b!103387 (= res!51620 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!52671)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103387 (=> (not res!51620) (not e!67369))))

(declare-fun b!103388 () Bool)

(assert (=> b!103388 (= e!67367 (= call!10827 (+!141 call!10833 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun bm!10832 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4335 (_ BitVec 32)) SeekEntryResult!258)

(assert (=> bm!10832 (= call!10829 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun bm!10833 () Bool)

(assert (=> bm!10833 (= call!10826 call!10835)))

(declare-fun b!103355 () Bool)

(declare-fun c!17788 () Bool)

(assert (=> b!103355 (= c!17788 ((_ is MissingVacant!258) lt!52653))))

(assert (=> b!103355 (= e!67351 e!67349)))

(declare-fun d!27769 () Bool)

(assert (=> d!27769 e!67359))

(declare-fun res!51612 () Bool)

(assert (=> d!27769 (=> (not res!51612) (not e!67359))))

(assert (=> d!27769 (= res!51612 (valid!417 (_2!1212 lt!52658)))))

(assert (=> d!27769 (= lt!52658 e!67355)))

(assert (=> d!27769 (= c!17781 (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvneg (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!27769 (valid!417 newMap!16)))

(assert (=> d!27769 (= (update!154 newMap!16 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542) lt!52658)))

(declare-fun bm!10834 () Bool)

(assert (=> bm!10834 (= call!10833 (map!1282 newMap!16))))

(declare-fun b!103389 () Bool)

(declare-fun lt!52648 () Unit!3150)

(assert (=> b!103389 (= e!67366 lt!52648)))

(assert (=> b!103389 (= lt!52648 call!10838)))

(assert (=> b!103389 (= lt!52671 call!10834)))

(assert (=> b!103389 (= c!17789 ((_ is MissingZero!258) lt!52671))))

(assert (=> b!103389 e!67368))

(declare-fun b!103390 () Bool)

(declare-fun Unit!3159 () Unit!3150)

(assert (=> b!103390 (= e!67366 Unit!3159)))

(declare-fun lt!52661 () Unit!3150)

(assert (=> b!103390 (= lt!52661 call!10821)))

(assert (=> b!103390 (= lt!52647 call!10834)))

(declare-fun res!51622 () Bool)

(assert (=> b!103390 (= res!51622 ((_ is Found!258) lt!52647))))

(assert (=> b!103390 (=> (not res!51622) (not e!67360))))

(assert (=> b!103390 e!67360))

(declare-fun lt!52659 () Unit!3150)

(assert (=> b!103390 (= lt!52659 lt!52661)))

(assert (=> b!103390 false))

(declare-fun b!103391 () Bool)

(assert (=> b!103391 (= c!17783 ((_ is MissingVacant!258) lt!52655))))

(assert (=> b!103391 (= e!67354 e!67352)))

(declare-fun bm!10835 () Bool)

(declare-fun c!17779 () Bool)

(assert (=> bm!10835 (= c!17779 c!17784)))

(assert (=> bm!10835 (= call!10831 (contains!824 e!67364 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103392 () Bool)

(assert (=> b!103392 (= e!67369 (not call!10826))))

(declare-fun b!103393 () Bool)

(assert (=> b!103393 (= e!67350 ((_ is Undefined!258) lt!52671))))

(declare-fun b!103394 () Bool)

(assert (=> b!103394 (= e!67356 (not call!10828))))

(declare-fun b!103395 () Bool)

(assert (=> b!103395 (= e!67355 e!67354)))

(assert (=> b!103395 (= lt!52655 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> b!103395 (= c!17784 ((_ is Undefined!258) lt!52655))))

(declare-fun bm!10836 () Bool)

(assert (=> bm!10836 (= call!10822 call!10825)))

(assert (= (and d!27769 c!17781) b!103379))

(assert (= (and d!27769 (not c!17781)) b!103395))

(assert (= (and b!103379 c!17787) b!103359))

(assert (= (and b!103379 (not c!17787)) b!103381))

(assert (= (or b!103359 b!103381) bm!10828))

(assert (= (or b!103359 b!103381) bm!10815))

(assert (= (or b!103359 b!103381) bm!10826))

(assert (= (and b!103395 c!17784) b!103365))

(assert (= (and b!103395 (not c!17784)) b!103391))

(assert (= (and b!103365 c!17780) b!103390))

(assert (= (and b!103365 (not c!17780)) b!103389))

(assert (= (and b!103390 res!51622) b!103382))

(assert (= (and b!103382 res!51616) b!103380))

(assert (= (and b!103389 c!17789) b!103373))

(assert (= (and b!103389 (not c!17789)) b!103383))

(assert (= (and b!103373 res!51621) b!103369))

(assert (= (and b!103369 res!51617) b!103375))

(assert (= (and b!103383 c!17778) b!103354))

(assert (= (and b!103383 (not c!17778)) b!103393))

(assert (= (and b!103354 res!51615) b!103387))

(assert (= (and b!103387 res!51620) b!103392))

(assert (= (or b!103373 b!103354) bm!10813))

(assert (= (or b!103375 b!103392) bm!10833))

(assert (= (or b!103382 bm!10813) bm!10827))

(assert (= (or b!103390 b!103389) bm!10823))

(assert (= (and b!103391 c!17783) b!103386))

(assert (= (and b!103391 (not c!17783)) b!103368))

(assert (= (and b!103368 c!17785) b!103378))

(assert (= (and b!103368 (not c!17785)) b!103363))

(assert (= (and b!103363 c!17777) b!103358))

(assert (= (and b!103363 (not c!17777)) b!103371))

(assert (= (and b!103358 res!51623) b!103360))

(assert (= (and b!103360 res!51625) b!103384))

(assert (= (and b!103371 c!17782) b!103366))

(assert (= (and b!103371 (not c!17782)) b!103355))

(assert (= (and b!103366 res!51614) b!103362))

(assert (= (and b!103362 res!51613) b!103394))

(assert (= (and b!103355 c!17788) b!103356))

(assert (= (and b!103355 (not c!17788)) b!103367))

(assert (= (and b!103356 res!51618) b!103372))

(assert (= (and b!103372 res!51619) b!103361))

(assert (= (or b!103366 b!103356) bm!10821))

(assert (= (or b!103394 b!103361) bm!10829))

(assert (= (or b!103360 bm!10821) bm!10836))

(assert (= (or b!103358 b!103371) bm!10830))

(assert (= (or b!103386 b!103378) bm!10831))

(assert (= (or bm!10823 bm!10830) bm!10832))

(assert (= (or b!103365 b!103363) bm!10820))

(assert (= (or bm!10827 bm!10836) bm!10817))

(assert (= (or b!103389 b!103371) bm!10822))

(assert (= (or b!103390 b!103358) bm!10816))

(assert (= (or bm!10833 bm!10829) bm!10824))

(assert (= (or b!103365 b!103363) bm!10835))

(assert (= (and bm!10835 c!17779) b!103376))

(assert (= (and bm!10835 (not c!17779)) b!103370))

(assert (= (or bm!10815 b!103363) bm!10814))

(assert (= (or bm!10828 bm!10820) bm!10818))

(assert (= (or bm!10826 b!103363) bm!10819))

(assert (= (and bm!10819 c!17790) b!103357))

(assert (= (and bm!10819 (not c!17790)) b!103364))

(assert (= (and d!27769 res!51612) b!103374))

(assert (= (and b!103374 c!17786) b!103385))

(assert (= (and b!103374 (not c!17786)) b!103377))

(assert (= (and b!103385 res!51624) b!103388))

(assert (= (or b!103388 b!103377) bm!10834))

(assert (= (or b!103385 b!103388 b!103377) bm!10825))

(assert (=> b!103385 m!114165))

(declare-fun m!114279 () Bool)

(assert (=> b!103385 m!114279))

(declare-fun m!114281 () Bool)

(assert (=> bm!10814 m!114281))

(declare-fun m!114283 () Bool)

(assert (=> bm!10814 m!114283))

(declare-fun m!114285 () Bool)

(assert (=> b!103369 m!114285))

(declare-fun m!114287 () Bool)

(assert (=> b!103359 m!114287))

(declare-fun m!114289 () Bool)

(assert (=> b!103380 m!114289))

(declare-fun m!114291 () Bool)

(assert (=> bm!10825 m!114291))

(declare-fun m!114293 () Bool)

(assert (=> b!103384 m!114293))

(assert (=> bm!10832 m!114165))

(declare-fun m!114295 () Bool)

(assert (=> bm!10832 m!114295))

(assert (=> bm!10834 m!114151))

(declare-fun m!114297 () Bool)

(assert (=> b!103363 m!114297))

(declare-fun m!114299 () Bool)

(assert (=> b!103363 m!114299))

(assert (=> b!103363 m!114281))

(assert (=> b!103363 m!114297))

(declare-fun m!114301 () Bool)

(assert (=> b!103363 m!114301))

(assert (=> b!103363 m!114165))

(declare-fun m!114303 () Bool)

(assert (=> b!103363 m!114303))

(declare-fun m!114305 () Bool)

(assert (=> b!103381 m!114305))

(assert (=> bm!10824 m!114165))

(declare-fun m!114307 () Bool)

(assert (=> bm!10824 m!114307))

(declare-fun m!114309 () Bool)

(assert (=> b!103388 m!114309))

(declare-fun m!114311 () Bool)

(assert (=> d!27769 m!114311))

(assert (=> d!27769 m!114155))

(assert (=> bm!10816 m!114165))

(declare-fun m!114313 () Bool)

(assert (=> bm!10816 m!114313))

(assert (=> bm!10822 m!114165))

(declare-fun m!114315 () Bool)

(assert (=> bm!10822 m!114315))

(declare-fun m!114317 () Bool)

(assert (=> b!103372 m!114317))

(declare-fun m!114319 () Bool)

(assert (=> b!103387 m!114319))

(assert (=> bm!10835 m!114165))

(declare-fun m!114321 () Bool)

(assert (=> bm!10835 m!114321))

(declare-fun m!114323 () Bool)

(assert (=> bm!10818 m!114323))

(declare-fun m!114325 () Bool)

(assert (=> bm!10817 m!114325))

(declare-fun m!114327 () Bool)

(assert (=> b!103362 m!114327))

(assert (=> bm!10831 m!114165))

(declare-fun m!114329 () Bool)

(assert (=> bm!10831 m!114329))

(declare-fun m!114331 () Bool)

(assert (=> b!103370 m!114331))

(assert (=> b!103364 m!114331))

(assert (=> b!103395 m!114165))

(assert (=> b!103395 m!114295))

(declare-fun m!114333 () Bool)

(assert (=> bm!10819 m!114333))

(assert (=> b!103181 d!27769))

(declare-fun d!27771 () Bool)

(assert (=> d!27771 (= (array_inv!1293 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvsge (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!103176 d!27771))

(declare-fun d!27773 () Bool)

(assert (=> d!27773 (= (array_inv!1294 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvsge (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!103176 d!27773))

(declare-fun d!27775 () Bool)

(declare-fun c!17793 () Bool)

(assert (=> d!27775 (= c!17793 ((_ is ValueCellFull!993) (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67372 () V!3211)

(assert (=> d!27775 (= (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67372)))

(declare-fun b!103400 () Bool)

(declare-fun get!1324 (ValueCell!993 V!3211) V!3211)

(assert (=> b!103400 (= e!67372 (get!1324 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103401 () Bool)

(declare-fun get!1325 (ValueCell!993 V!3211) V!3211)

(assert (=> b!103401 (= e!67372 (get!1325 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27775 c!17793) b!103400))

(assert (= (and d!27775 (not c!17793)) b!103401))

(assert (=> b!103400 m!114195))

(assert (=> b!103400 m!114197))

(declare-fun m!114335 () Bool)

(assert (=> b!103400 m!114335))

(assert (=> b!103401 m!114195))

(assert (=> b!103401 m!114197))

(declare-fun m!114337 () Bool)

(assert (=> b!103401 m!114337))

(assert (=> b!103175 d!27775))

(declare-fun d!27777 () Bool)

(assert (=> d!27777 (= (map!1282 newMap!16) (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bs!4243 () Bool)

(assert (= bs!4243 d!27777))

(assert (=> bs!4243 m!114331))

(assert (=> b!103171 d!27777))

(declare-fun b!103444 () Bool)

(declare-fun e!67407 () Bool)

(declare-fun e!67408 () Bool)

(assert (=> b!103444 (= e!67407 e!67408)))

(declare-fun res!51652 () Bool)

(declare-fun call!10855 () Bool)

(assert (=> b!103444 (= res!51652 call!10855)))

(assert (=> b!103444 (=> (not res!51652) (not e!67408))))

(declare-fun bm!10851 () Bool)

(declare-fun call!10856 () ListLongMap!1569)

(declare-fun call!10860 () ListLongMap!1569)

(assert (=> bm!10851 (= call!10856 call!10860)))

(declare-fun bm!10852 () Bool)

(declare-fun call!10858 () ListLongMap!1569)

(assert (=> bm!10852 (= call!10858 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun bm!10853 () Bool)

(declare-fun call!10854 () Bool)

(declare-fun lt!52728 () ListLongMap!1569)

(assert (=> bm!10853 (= call!10854 (contains!824 lt!52728 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10854 () Bool)

(declare-fun call!10857 () ListLongMap!1569)

(declare-fun call!10859 () ListLongMap!1569)

(assert (=> bm!10854 (= call!10857 call!10859)))

(declare-fun b!103445 () Bool)

(declare-fun e!67400 () ListLongMap!1569)

(assert (=> b!103445 (= e!67400 (+!141 call!10860 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103446 () Bool)

(assert (=> b!103446 (= e!67407 (not call!10855))))

(declare-fun b!103447 () Bool)

(declare-fun e!67402 () ListLongMap!1569)

(assert (=> b!103447 (= e!67402 call!10856)))

(declare-fun b!103448 () Bool)

(declare-fun e!67401 () Bool)

(declare-fun e!67405 () Bool)

(assert (=> b!103448 (= e!67401 e!67405)))

(declare-fun res!51648 () Bool)

(assert (=> b!103448 (=> (not res!51648) (not e!67405))))

(assert (=> b!103448 (= res!51648 (contains!824 lt!52728 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103448 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun bm!10855 () Bool)

(assert (=> bm!10855 (= call!10859 call!10858)))

(declare-fun b!103449 () Bool)

(declare-fun e!67403 () Unit!3150)

(declare-fun lt!52723 () Unit!3150)

(assert (=> b!103449 (= e!67403 lt!52723)))

(declare-fun lt!52722 () ListLongMap!1569)

(assert (=> b!103449 (= lt!52722 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52732 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52732 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52731 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52731 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52726 () Unit!3150)

(declare-fun addStillContains!73 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3150)

(assert (=> b!103449 (= lt!52726 (addStillContains!73 lt!52722 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52731))))

(assert (=> b!103449 (contains!824 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52731)))

(declare-fun lt!52735 () Unit!3150)

(assert (=> b!103449 (= lt!52735 lt!52726)))

(declare-fun lt!52725 () ListLongMap!1569)

(assert (=> b!103449 (= lt!52725 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52729 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52729 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52734 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52734 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52737 () Unit!3150)

(declare-fun addApplyDifferent!73 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3150)

(assert (=> b!103449 (= lt!52737 (addApplyDifferent!73 lt!52725 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52734))))

(declare-fun apply!97 (ListLongMap!1569 (_ BitVec 64)) V!3211)

(assert (=> b!103449 (= (apply!97 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52734) (apply!97 lt!52725 lt!52734))))

(declare-fun lt!52719 () Unit!3150)

(assert (=> b!103449 (= lt!52719 lt!52737)))

(declare-fun lt!52718 () ListLongMap!1569)

(assert (=> b!103449 (= lt!52718 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52727 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52727 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52730 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52730 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52738 () Unit!3150)

(assert (=> b!103449 (= lt!52738 (addApplyDifferent!73 lt!52718 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52730))))

(assert (=> b!103449 (= (apply!97 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52730) (apply!97 lt!52718 lt!52730))))

(declare-fun lt!52736 () Unit!3150)

(assert (=> b!103449 (= lt!52736 lt!52738)))

(declare-fun lt!52717 () ListLongMap!1569)

(assert (=> b!103449 (= lt!52717 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun lt!52724 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52724 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52733 () (_ BitVec 64))

(assert (=> b!103449 (= lt!52733 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!103449 (= lt!52723 (addApplyDifferent!73 lt!52717 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52733))))

(assert (=> b!103449 (= (apply!97 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52733) (apply!97 lt!52717 lt!52733))))

(declare-fun b!103450 () Bool)

(declare-fun e!67399 () Bool)

(assert (=> b!103450 (= e!67399 (not call!10854))))

(declare-fun b!103451 () Bool)

(declare-fun e!67411 () ListLongMap!1569)

(assert (=> b!103451 (= e!67411 call!10856)))

(declare-fun b!103452 () Bool)

(assert (=> b!103452 (= e!67411 call!10857)))

(declare-fun b!103453 () Bool)

(declare-fun c!17806 () Bool)

(assert (=> b!103453 (= c!17806 (and (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103453 (= e!67402 e!67411)))

(declare-fun b!103454 () Bool)

(declare-fun e!67410 () Bool)

(assert (=> b!103454 (= e!67399 e!67410)))

(declare-fun res!51646 () Bool)

(assert (=> b!103454 (= res!51646 call!10854)))

(assert (=> b!103454 (=> (not res!51646) (not e!67410))))

(declare-fun b!103455 () Bool)

(assert (=> b!103455 (= e!67405 (= (apply!97 lt!52728 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103455 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!103455 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103456 () Bool)

(declare-fun res!51650 () Bool)

(declare-fun e!67409 () Bool)

(assert (=> b!103456 (=> (not res!51650) (not e!67409))))

(assert (=> b!103456 (= res!51650 e!67407)))

(declare-fun c!17809 () Bool)

(assert (=> b!103456 (= c!17809 (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!27779 () Bool)

(assert (=> d!27779 e!67409))

(declare-fun res!51651 () Bool)

(assert (=> d!27779 (=> (not res!51651) (not e!67409))))

(assert (=> d!27779 (= res!51651 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun lt!52720 () ListLongMap!1569)

(assert (=> d!27779 (= lt!52728 lt!52720)))

(declare-fun lt!52721 () Unit!3150)

(assert (=> d!27779 (= lt!52721 e!67403)))

(declare-fun c!17810 () Bool)

(declare-fun e!67404 () Bool)

(assert (=> d!27779 (= c!17810 e!67404)))

(declare-fun res!51649 () Bool)

(assert (=> d!27779 (=> (not res!51649) (not e!67404))))

(assert (=> d!27779 (= res!51649 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27779 (= lt!52720 e!67400)))

(declare-fun c!17807 () Bool)

(assert (=> d!27779 (= c!17807 (and (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27779 (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27779 (= (getCurrentListMap!487 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) lt!52728)))

(declare-fun c!17811 () Bool)

(declare-fun bm!10856 () Bool)

(assert (=> bm!10856 (= call!10860 (+!141 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!103457 () Bool)

(assert (=> b!103457 (= e!67408 (= (apply!97 lt!52728 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103458 () Bool)

(assert (=> b!103458 (= e!67409 e!67399)))

(declare-fun c!17808 () Bool)

(assert (=> b!103458 (= c!17808 (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103459 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!103459 (= e!67404 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103460 () Bool)

(declare-fun res!51645 () Bool)

(assert (=> b!103460 (=> (not res!51645) (not e!67409))))

(assert (=> b!103460 (= res!51645 e!67401)))

(declare-fun res!51647 () Bool)

(assert (=> b!103460 (=> res!51647 e!67401)))

(declare-fun e!67406 () Bool)

(assert (=> b!103460 (= res!51647 (not e!67406))))

(declare-fun res!51644 () Bool)

(assert (=> b!103460 (=> (not res!51644) (not e!67406))))

(assert (=> b!103460 (= res!51644 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103461 () Bool)

(assert (=> b!103461 (= e!67400 e!67402)))

(assert (=> b!103461 (= c!17811 (and (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103462 () Bool)

(declare-fun Unit!3160 () Unit!3150)

(assert (=> b!103462 (= e!67403 Unit!3160)))

(declare-fun b!103463 () Bool)

(assert (=> b!103463 (= e!67410 (= (apply!97 lt!52728 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103464 () Bool)

(assert (=> b!103464 (= e!67406 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun bm!10857 () Bool)

(assert (=> bm!10857 (= call!10855 (contains!824 lt!52728 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27779 c!17807) b!103445))

(assert (= (and d!27779 (not c!17807)) b!103461))

(assert (= (and b!103461 c!17811) b!103447))

(assert (= (and b!103461 (not c!17811)) b!103453))

(assert (= (and b!103453 c!17806) b!103451))

(assert (= (and b!103453 (not c!17806)) b!103452))

(assert (= (or b!103451 b!103452) bm!10854))

(assert (= (or b!103447 bm!10854) bm!10855))

(assert (= (or b!103447 b!103451) bm!10851))

(assert (= (or b!103445 bm!10855) bm!10852))

(assert (= (or b!103445 bm!10851) bm!10856))

(assert (= (and d!27779 res!51649) b!103459))

(assert (= (and d!27779 c!17810) b!103449))

(assert (= (and d!27779 (not c!17810)) b!103462))

(assert (= (and d!27779 res!51651) b!103460))

(assert (= (and b!103460 res!51644) b!103464))

(assert (= (and b!103460 (not res!51647)) b!103448))

(assert (= (and b!103448 res!51648) b!103455))

(assert (= (and b!103460 res!51645) b!103456))

(assert (= (and b!103456 c!17809) b!103444))

(assert (= (and b!103456 (not c!17809)) b!103446))

(assert (= (and b!103444 res!51652) b!103457))

(assert (= (or b!103444 b!103446) bm!10857))

(assert (= (and b!103456 res!51650) b!103458))

(assert (= (and b!103458 c!17808) b!103454))

(assert (= (and b!103458 (not c!17808)) b!103450))

(assert (= (and b!103454 res!51646) b!103463))

(assert (= (or b!103454 b!103450) bm!10853))

(declare-fun b_lambda!4623 () Bool)

(assert (=> (not b_lambda!4623) (not b!103455)))

(assert (=> b!103455 t!5669))

(declare-fun b_and!6403 () Bool)

(assert (= b_and!6391 (and (=> t!5669 result!3421) b_and!6403)))

(assert (=> b!103455 t!5671))

(declare-fun b_and!6405 () Bool)

(assert (= b_and!6393 (and (=> t!5671 result!3425) b_and!6405)))

(declare-fun m!114339 () Bool)

(assert (=> b!103464 m!114339))

(assert (=> b!103464 m!114339))

(declare-fun m!114341 () Bool)

(assert (=> b!103464 m!114341))

(assert (=> bm!10852 m!114193))

(assert (=> b!103448 m!114339))

(assert (=> b!103448 m!114339))

(declare-fun m!114343 () Bool)

(assert (=> b!103448 m!114343))

(declare-fun m!114345 () Bool)

(assert (=> bm!10853 m!114345))

(declare-fun m!114347 () Bool)

(assert (=> b!103455 m!114347))

(assert (=> b!103455 m!114347))

(assert (=> b!103455 m!114197))

(declare-fun m!114349 () Bool)

(assert (=> b!103455 m!114349))

(assert (=> b!103455 m!114339))

(assert (=> b!103455 m!114339))

(declare-fun m!114351 () Bool)

(assert (=> b!103455 m!114351))

(assert (=> b!103455 m!114197))

(declare-fun m!114353 () Bool)

(assert (=> b!103445 m!114353))

(declare-fun m!114355 () Bool)

(assert (=> b!103449 m!114355))

(declare-fun m!114357 () Bool)

(assert (=> b!103449 m!114357))

(declare-fun m!114359 () Bool)

(assert (=> b!103449 m!114359))

(declare-fun m!114361 () Bool)

(assert (=> b!103449 m!114361))

(declare-fun m!114363 () Bool)

(assert (=> b!103449 m!114363))

(declare-fun m!114365 () Bool)

(assert (=> b!103449 m!114365))

(declare-fun m!114367 () Bool)

(assert (=> b!103449 m!114367))

(declare-fun m!114369 () Bool)

(assert (=> b!103449 m!114369))

(assert (=> b!103449 m!114339))

(assert (=> b!103449 m!114355))

(declare-fun m!114371 () Bool)

(assert (=> b!103449 m!114371))

(assert (=> b!103449 m!114369))

(declare-fun m!114373 () Bool)

(assert (=> b!103449 m!114373))

(assert (=> b!103449 m!114361))

(declare-fun m!114375 () Bool)

(assert (=> b!103449 m!114375))

(declare-fun m!114377 () Bool)

(assert (=> b!103449 m!114377))

(declare-fun m!114379 () Bool)

(assert (=> b!103449 m!114379))

(assert (=> b!103449 m!114193))

(declare-fun m!114381 () Bool)

(assert (=> b!103449 m!114381))

(assert (=> b!103449 m!114365))

(declare-fun m!114383 () Bool)

(assert (=> b!103449 m!114383))

(assert (=> d!27779 m!114181))

(declare-fun m!114385 () Bool)

(assert (=> bm!10857 m!114385))

(declare-fun m!114387 () Bool)

(assert (=> b!103463 m!114387))

(assert (=> b!103459 m!114339))

(assert (=> b!103459 m!114339))

(assert (=> b!103459 m!114341))

(declare-fun m!114389 () Bool)

(assert (=> b!103457 m!114389))

(declare-fun m!114391 () Bool)

(assert (=> bm!10856 m!114391))

(assert (=> b!103171 d!27779))

(declare-fun d!27781 () Bool)

(assert (=> d!27781 (not (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!52741 () Unit!3150)

(declare-fun choose!68 (array!4335 (_ BitVec 32) (_ BitVec 64) List!1610) Unit!3150)

(assert (=> d!27781 (= lt!52741 (choose!68 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607)))))

(assert (=> d!27781 (bvslt (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27781 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607)) lt!52741)))

(declare-fun bs!4244 () Bool)

(assert (= bs!4244 d!27781))

(assert (=> bs!4244 m!114165))

(assert (=> bs!4244 m!114169))

(assert (=> bs!4244 m!114165))

(declare-fun m!114393 () Bool)

(assert (=> bs!4244 m!114393))

(assert (=> b!103170 d!27781))

(declare-fun d!27783 () Bool)

(assert (=> d!27783 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1607)))

(declare-fun lt!52744 () Unit!3150)

(declare-fun choose!39 (array!4335 (_ BitVec 32) (_ BitVec 32)) Unit!3150)

(assert (=> d!27783 (= lt!52744 (choose!39 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!27783 (bvslt (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!27783 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355) lt!52744)))

(declare-fun bs!4245 () Bool)

(assert (= bs!4245 d!27783))

(assert (=> bs!4245 m!114163))

(declare-fun m!114395 () Bool)

(assert (=> bs!4245 m!114395))

(assert (=> b!103170 d!27783))

(declare-fun d!27785 () Bool)

(declare-fun res!51657 () Bool)

(declare-fun e!67416 () Bool)

(assert (=> d!27785 (=> res!51657 e!67416)))

(assert (=> d!27785 (= res!51657 (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27785 (= (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!67416)))

(declare-fun b!103469 () Bool)

(declare-fun e!67417 () Bool)

(assert (=> b!103469 (= e!67416 e!67417)))

(declare-fun res!51658 () Bool)

(assert (=> b!103469 (=> (not res!51658) (not e!67417))))

(assert (=> b!103469 (= res!51658 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103470 () Bool)

(assert (=> b!103470 (= e!67417 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!27785 (not res!51657)) b!103469))

(assert (= (and b!103469 res!51658) b!103470))

(assert (=> d!27785 m!114339))

(assert (=> b!103470 m!114165))

(declare-fun m!114397 () Bool)

(assert (=> b!103470 m!114397))

(assert (=> b!103170 d!27785))

(declare-fun d!27787 () Bool)

(declare-fun e!67420 () Bool)

(assert (=> d!27787 e!67420))

(declare-fun c!17814 () Bool)

(assert (=> d!27787 (= c!17814 (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!52747 () Unit!3150)

(declare-fun choose!637 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3150)

(assert (=> d!27787 (= lt!52747 (choose!637 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> d!27787 (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27787 (= (lemmaListMapContainsThenArrayContainsFrom!102 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) lt!52747)))

(declare-fun b!103475 () Bool)

(assert (=> b!103475 (= e!67420 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103476 () Bool)

(assert (=> b!103476 (= e!67420 (ite (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27787 c!17814) b!103475))

(assert (= (and d!27787 (not c!17814)) b!103476))

(assert (=> d!27787 m!114165))

(declare-fun m!114399 () Bool)

(assert (=> d!27787 m!114399))

(assert (=> d!27787 m!114181))

(assert (=> b!103475 m!114165))

(assert (=> b!103475 m!114169))

(assert (=> b!103170 d!27787))

(declare-fun b!103487 () Bool)

(declare-fun e!67430 () Bool)

(declare-fun call!10863 () Bool)

(assert (=> b!103487 (= e!67430 call!10863)))

(declare-fun b!103488 () Bool)

(declare-fun e!67431 () Bool)

(declare-fun contains!825 (List!1610 (_ BitVec 64)) Bool)

(assert (=> b!103488 (= e!67431 (contains!825 Nil!1607 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103489 () Bool)

(assert (=> b!103489 (= e!67430 call!10863)))

(declare-fun b!103490 () Bool)

(declare-fun e!67432 () Bool)

(assert (=> b!103490 (= e!67432 e!67430)))

(declare-fun c!17817 () Bool)

(assert (=> b!103490 (= c!17817 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun d!27789 () Bool)

(declare-fun res!51667 () Bool)

(declare-fun e!67429 () Bool)

(assert (=> d!27789 (=> res!51667 e!67429)))

(assert (=> d!27789 (= res!51667 (bvsge from!355 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27789 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1607) e!67429)))

(declare-fun bm!10860 () Bool)

(assert (=> bm!10860 (= call!10863 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)))))

(declare-fun b!103491 () Bool)

(assert (=> b!103491 (= e!67429 e!67432)))

(declare-fun res!51666 () Bool)

(assert (=> b!103491 (=> (not res!51666) (not e!67432))))

(assert (=> b!103491 (= res!51666 (not e!67431))))

(declare-fun res!51665 () Bool)

(assert (=> b!103491 (=> (not res!51665) (not e!67431))))

(assert (=> b!103491 (= res!51665 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!27789 (not res!51667)) b!103491))

(assert (= (and b!103491 res!51665) b!103488))

(assert (= (and b!103491 res!51666) b!103490))

(assert (= (and b!103490 c!17817) b!103487))

(assert (= (and b!103490 (not c!17817)) b!103489))

(assert (= (or b!103487 b!103489) bm!10860))

(assert (=> b!103488 m!114165))

(assert (=> b!103488 m!114165))

(declare-fun m!114401 () Bool)

(assert (=> b!103488 m!114401))

(assert (=> b!103490 m!114165))

(assert (=> b!103490 m!114165))

(declare-fun m!114403 () Bool)

(assert (=> b!103490 m!114403))

(assert (=> bm!10860 m!114165))

(declare-fun m!114405 () Bool)

(assert (=> bm!10860 m!114405))

(assert (=> b!103491 m!114165))

(assert (=> b!103491 m!114165))

(assert (=> b!103491 m!114403))

(assert (=> b!103170 d!27789))

(declare-fun d!27791 () Bool)

(assert (=> d!27791 (= (array_inv!1293 (_keys!4263 newMap!16)) (bvsge (size!2311 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103179 d!27791))

(declare-fun d!27793 () Bool)

(assert (=> d!27793 (= (array_inv!1294 (_values!2544 newMap!16)) (bvsge (size!2312 (_values!2544 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103179 d!27793))

(declare-fun d!27795 () Bool)

(declare-fun e!67435 () Bool)

(assert (=> d!27795 e!67435))

(declare-fun res!51673 () Bool)

(assert (=> d!27795 (=> (not res!51673) (not e!67435))))

(declare-fun lt!52757 () ListLongMap!1569)

(assert (=> d!27795 (= res!51673 (contains!824 lt!52757 (_1!1211 lt!52538)))))

(declare-fun lt!52758 () List!1611)

(assert (=> d!27795 (= lt!52757 (ListLongMap!1570 lt!52758))))

(declare-fun lt!52756 () Unit!3150)

(declare-fun lt!52759 () Unit!3150)

(assert (=> d!27795 (= lt!52756 lt!52759)))

(assert (=> d!27795 (= (getValueByKey!155 lt!52758 (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538)))))

(declare-fun lemmaContainsTupThenGetReturnValue!71 (List!1611 (_ BitVec 64) V!3211) Unit!3150)

(assert (=> d!27795 (= lt!52759 (lemmaContainsTupThenGetReturnValue!71 lt!52758 (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun insertStrictlySorted!74 (List!1611 (_ BitVec 64) V!3211) List!1611)

(assert (=> d!27795 (= lt!52758 (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(assert (=> d!27795 (= (+!141 lt!52539 lt!52538) lt!52757)))

(declare-fun b!103496 () Bool)

(declare-fun res!51672 () Bool)

(assert (=> b!103496 (=> (not res!51672) (not e!67435))))

(assert (=> b!103496 (= res!51672 (= (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538))))))

(declare-fun b!103497 () Bool)

(declare-fun contains!826 (List!1611 tuple2!2400) Bool)

(assert (=> b!103497 (= e!67435 (contains!826 (toList!800 lt!52757) lt!52538))))

(assert (= (and d!27795 res!51673) b!103496))

(assert (= (and b!103496 res!51672) b!103497))

(declare-fun m!114407 () Bool)

(assert (=> d!27795 m!114407))

(declare-fun m!114409 () Bool)

(assert (=> d!27795 m!114409))

(declare-fun m!114411 () Bool)

(assert (=> d!27795 m!114411))

(declare-fun m!114413 () Bool)

(assert (=> d!27795 m!114413))

(declare-fun m!114415 () Bool)

(assert (=> b!103496 m!114415))

(declare-fun m!114417 () Bool)

(assert (=> b!103497 m!114417))

(assert (=> b!103174 d!27795))

(declare-fun d!27797 () Bool)

(assert (=> d!27797 (= (+!141 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (+!141 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun lt!52762 () Unit!3150)

(declare-fun choose!638 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64) V!3211) Unit!3150)

(assert (=> d!27797 (= lt!52762 (choose!638 lt!52539 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> d!27797 (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27797 (= (addCommutativeForDiffKeys!53 lt!52539 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) lt!52762)))

(declare-fun bs!4246 () Bool)

(assert (= bs!4246 d!27797))

(declare-fun m!114419 () Bool)

(assert (=> bs!4246 m!114419))

(declare-fun m!114421 () Bool)

(assert (=> bs!4246 m!114421))

(declare-fun m!114423 () Bool)

(assert (=> bs!4246 m!114423))

(declare-fun m!114425 () Bool)

(assert (=> bs!4246 m!114425))

(assert (=> bs!4246 m!114165))

(declare-fun m!114427 () Bool)

(assert (=> bs!4246 m!114427))

(assert (=> bs!4246 m!114423))

(assert (=> bs!4246 m!114419))

(assert (=> b!103174 d!27797))

(declare-fun d!27799 () Bool)

(declare-fun e!67436 () Bool)

(assert (=> d!27799 e!67436))

(declare-fun res!51675 () Bool)

(assert (=> d!27799 (=> (not res!51675) (not e!67436))))

(declare-fun lt!52764 () ListLongMap!1569)

(assert (=> d!27799 (= res!51675 (contains!824 lt!52764 (_1!1211 lt!52540)))))

(declare-fun lt!52765 () List!1611)

(assert (=> d!27799 (= lt!52764 (ListLongMap!1570 lt!52765))))

(declare-fun lt!52763 () Unit!3150)

(declare-fun lt!52766 () Unit!3150)

(assert (=> d!27799 (= lt!52763 lt!52766)))

(assert (=> d!27799 (= (getValueByKey!155 lt!52765 (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540)))))

(assert (=> d!27799 (= lt!52766 (lemmaContainsTupThenGetReturnValue!71 lt!52765 (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(assert (=> d!27799 (= lt!52765 (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(assert (=> d!27799 (= (+!141 lt!52539 lt!52540) lt!52764)))

(declare-fun b!103498 () Bool)

(declare-fun res!51674 () Bool)

(assert (=> b!103498 (=> (not res!51674) (not e!67436))))

(assert (=> b!103498 (= res!51674 (= (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540))))))

(declare-fun b!103499 () Bool)

(assert (=> b!103499 (= e!67436 (contains!826 (toList!800 lt!52764) lt!52540))))

(assert (= (and d!27799 res!51675) b!103498))

(assert (= (and b!103498 res!51674) b!103499))

(declare-fun m!114429 () Bool)

(assert (=> d!27799 m!114429))

(declare-fun m!114431 () Bool)

(assert (=> d!27799 m!114431))

(declare-fun m!114433 () Bool)

(assert (=> d!27799 m!114433))

(declare-fun m!114435 () Bool)

(assert (=> d!27799 m!114435))

(declare-fun m!114437 () Bool)

(assert (=> b!103498 m!114437))

(declare-fun m!114439 () Bool)

(assert (=> b!103499 m!114439))

(assert (=> b!103174 d!27799))

(declare-fun b!103524 () Bool)

(declare-fun e!67457 () Bool)

(declare-fun e!67456 () Bool)

(assert (=> b!103524 (= e!67457 e!67456)))

(declare-fun c!17826 () Bool)

(declare-fun e!67451 () Bool)

(assert (=> b!103524 (= c!17826 e!67451)))

(declare-fun res!51685 () Bool)

(assert (=> b!103524 (=> (not res!51685) (not e!67451))))

(assert (=> b!103524 (= res!51685 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103525 () Bool)

(assert (=> b!103525 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!103525 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun lt!52783 () ListLongMap!1569)

(declare-fun e!67452 () Bool)

(assert (=> b!103525 (= e!67452 (= (apply!97 lt!52783 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103526 () Bool)

(declare-fun e!67454 () Bool)

(assert (=> b!103526 (= e!67454 (= lt!52783 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103527 () Bool)

(declare-fun e!67453 () ListLongMap!1569)

(declare-fun e!67455 () ListLongMap!1569)

(assert (=> b!103527 (= e!67453 e!67455)))

(declare-fun c!17827 () Bool)

(assert (=> b!103527 (= c!17827 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103528 () Bool)

(declare-fun call!10866 () ListLongMap!1569)

(assert (=> b!103528 (= e!67455 call!10866)))

(declare-fun bm!10863 () Bool)

(assert (=> bm!10863 (= call!10866 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun d!27801 () Bool)

(assert (=> d!27801 e!67457))

(declare-fun res!51686 () Bool)

(assert (=> d!27801 (=> (not res!51686) (not e!67457))))

(assert (=> d!27801 (= res!51686 (not (contains!824 lt!52783 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27801 (= lt!52783 e!67453)))

(declare-fun c!17829 () Bool)

(assert (=> d!27801 (= c!17829 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27801 (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27801 (= (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) lt!52783)))

(declare-fun b!103529 () Bool)

(assert (=> b!103529 (= e!67456 e!67452)))

(assert (=> b!103529 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun res!51684 () Bool)

(assert (=> b!103529 (= res!51684 (contains!824 lt!52783 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103529 (=> (not res!51684) (not e!67452))))

(declare-fun b!103530 () Bool)

(declare-fun lt!52784 () Unit!3150)

(declare-fun lt!52786 () Unit!3150)

(assert (=> b!103530 (= lt!52784 lt!52786)))

(declare-fun lt!52787 () V!3211)

(declare-fun lt!52785 () (_ BitVec 64))

(declare-fun lt!52782 () ListLongMap!1569)

(declare-fun lt!52781 () (_ BitVec 64))

(assert (=> b!103530 (not (contains!824 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)) lt!52785))))

(declare-fun addStillNotContains!45 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3150)

(assert (=> b!103530 (= lt!52786 (addStillNotContains!45 lt!52782 lt!52781 lt!52787 lt!52785))))

(assert (=> b!103530 (= lt!52785 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103530 (= lt!52787 (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103530 (= lt!52781 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!103530 (= lt!52782 call!10866)))

(assert (=> b!103530 (= e!67455 (+!141 call!10866 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!103531 () Bool)

(assert (=> b!103531 (= e!67456 e!67454)))

(declare-fun c!17828 () Bool)

(assert (=> b!103531 (= c!17828 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103532 () Bool)

(declare-fun isEmpty!367 (ListLongMap!1569) Bool)

(assert (=> b!103532 (= e!67454 (isEmpty!367 lt!52783))))

(declare-fun b!103533 () Bool)

(assert (=> b!103533 (= e!67453 (ListLongMap!1570 Nil!1608))))

(declare-fun b!103534 () Bool)

(assert (=> b!103534 (= e!67451 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103534 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!103535 () Bool)

(declare-fun res!51687 () Bool)

(assert (=> b!103535 (=> (not res!51687) (not e!67457))))

(assert (=> b!103535 (= res!51687 (not (contains!824 lt!52783 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27801 c!17829) b!103533))

(assert (= (and d!27801 (not c!17829)) b!103527))

(assert (= (and b!103527 c!17827) b!103530))

(assert (= (and b!103527 (not c!17827)) b!103528))

(assert (= (or b!103530 b!103528) bm!10863))

(assert (= (and d!27801 res!51686) b!103535))

(assert (= (and b!103535 res!51687) b!103524))

(assert (= (and b!103524 res!51685) b!103534))

(assert (= (and b!103524 c!17826) b!103529))

(assert (= (and b!103524 (not c!17826)) b!103531))

(assert (= (and b!103529 res!51684) b!103525))

(assert (= (and b!103531 c!17828) b!103526))

(assert (= (and b!103531 (not c!17828)) b!103532))

(declare-fun b_lambda!4625 () Bool)

(assert (=> (not b_lambda!4625) (not b!103525)))

(assert (=> b!103525 t!5669))

(declare-fun b_and!6407 () Bool)

(assert (= b_and!6403 (and (=> t!5669 result!3421) b_and!6407)))

(assert (=> b!103525 t!5671))

(declare-fun b_and!6409 () Bool)

(assert (= b_and!6405 (and (=> t!5671 result!3425) b_and!6409)))

(declare-fun b_lambda!4627 () Bool)

(assert (=> (not b_lambda!4627) (not b!103530)))

(assert (=> b!103530 t!5669))

(declare-fun b_and!6411 () Bool)

(assert (= b_and!6407 (and (=> t!5669 result!3421) b_and!6411)))

(assert (=> b!103530 t!5671))

(declare-fun b_and!6413 () Bool)

(assert (= b_and!6409 (and (=> t!5671 result!3425) b_and!6413)))

(declare-fun m!114441 () Bool)

(assert (=> b!103530 m!114441))

(declare-fun m!114443 () Bool)

(assert (=> b!103530 m!114443))

(assert (=> b!103530 m!114347))

(assert (=> b!103530 m!114197))

(assert (=> b!103530 m!114349))

(declare-fun m!114445 () Bool)

(assert (=> b!103530 m!114445))

(assert (=> b!103530 m!114347))

(assert (=> b!103530 m!114445))

(declare-fun m!114447 () Bool)

(assert (=> b!103530 m!114447))

(assert (=> b!103530 m!114339))

(assert (=> b!103530 m!114197))

(declare-fun m!114449 () Bool)

(assert (=> b!103535 m!114449))

(assert (=> b!103534 m!114339))

(assert (=> b!103534 m!114339))

(assert (=> b!103534 m!114341))

(assert (=> b!103529 m!114339))

(assert (=> b!103529 m!114339))

(declare-fun m!114451 () Bool)

(assert (=> b!103529 m!114451))

(assert (=> b!103527 m!114339))

(assert (=> b!103527 m!114339))

(assert (=> b!103527 m!114341))

(declare-fun m!114453 () Bool)

(assert (=> b!103526 m!114453))

(assert (=> b!103525 m!114347))

(assert (=> b!103525 m!114197))

(assert (=> b!103525 m!114349))

(assert (=> b!103525 m!114339))

(declare-fun m!114455 () Bool)

(assert (=> b!103525 m!114455))

(assert (=> b!103525 m!114347))

(assert (=> b!103525 m!114339))

(assert (=> b!103525 m!114197))

(declare-fun m!114457 () Bool)

(assert (=> b!103532 m!114457))

(declare-fun m!114459 () Bool)

(assert (=> d!27801 m!114459))

(assert (=> d!27801 m!114181))

(assert (=> bm!10863 m!114453))

(assert (=> b!103174 d!27801))

(declare-fun d!27803 () Bool)

(declare-fun e!67458 () Bool)

(assert (=> d!27803 e!67458))

(declare-fun res!51689 () Bool)

(assert (=> d!27803 (=> (not res!51689) (not e!67458))))

(declare-fun lt!52789 () ListLongMap!1569)

(assert (=> d!27803 (= res!51689 (contains!824 lt!52789 (_1!1211 lt!52540)))))

(declare-fun lt!52790 () List!1611)

(assert (=> d!27803 (= lt!52789 (ListLongMap!1570 lt!52790))))

(declare-fun lt!52788 () Unit!3150)

(declare-fun lt!52791 () Unit!3150)

(assert (=> d!27803 (= lt!52788 lt!52791)))

(assert (=> d!27803 (= (getValueByKey!155 lt!52790 (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540)))))

(assert (=> d!27803 (= lt!52791 (lemmaContainsTupThenGetReturnValue!71 lt!52790 (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(assert (=> d!27803 (= lt!52790 (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 lt!52538)) (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(assert (=> d!27803 (= (+!141 (+!141 lt!52539 lt!52538) lt!52540) lt!52789)))

(declare-fun b!103536 () Bool)

(declare-fun res!51688 () Bool)

(assert (=> b!103536 (=> (not res!51688) (not e!67458))))

(assert (=> b!103536 (= res!51688 (= (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540))))))

(declare-fun b!103537 () Bool)

(assert (=> b!103537 (= e!67458 (contains!826 (toList!800 lt!52789) lt!52540))))

(assert (= (and d!27803 res!51689) b!103536))

(assert (= (and b!103536 res!51688) b!103537))

(declare-fun m!114461 () Bool)

(assert (=> d!27803 m!114461))

(declare-fun m!114463 () Bool)

(assert (=> d!27803 m!114463))

(declare-fun m!114465 () Bool)

(assert (=> d!27803 m!114465))

(declare-fun m!114467 () Bool)

(assert (=> d!27803 m!114467))

(declare-fun m!114469 () Bool)

(assert (=> b!103536 m!114469))

(declare-fun m!114471 () Bool)

(assert (=> b!103537 m!114471))

(assert (=> b!103174 d!27803))

(declare-fun d!27805 () Bool)

(declare-fun e!67459 () Bool)

(assert (=> d!27805 e!67459))

(declare-fun res!51691 () Bool)

(assert (=> d!27805 (=> (not res!51691) (not e!67459))))

(declare-fun lt!52793 () ListLongMap!1569)

(assert (=> d!27805 (= res!51691 (contains!824 lt!52793 (_1!1211 lt!52538)))))

(declare-fun lt!52794 () List!1611)

(assert (=> d!27805 (= lt!52793 (ListLongMap!1570 lt!52794))))

(declare-fun lt!52792 () Unit!3150)

(declare-fun lt!52795 () Unit!3150)

(assert (=> d!27805 (= lt!52792 lt!52795)))

(assert (=> d!27805 (= (getValueByKey!155 lt!52794 (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538)))))

(assert (=> d!27805 (= lt!52795 (lemmaContainsTupThenGetReturnValue!71 lt!52794 (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(assert (=> d!27805 (= lt!52794 (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 lt!52540)) (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(assert (=> d!27805 (= (+!141 (+!141 lt!52539 lt!52540) lt!52538) lt!52793)))

(declare-fun b!103538 () Bool)

(declare-fun res!51690 () Bool)

(assert (=> b!103538 (=> (not res!51690) (not e!67459))))

(assert (=> b!103538 (= res!51690 (= (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538))))))

(declare-fun b!103539 () Bool)

(assert (=> b!103539 (= e!67459 (contains!826 (toList!800 lt!52793) lt!52538))))

(assert (= (and d!27805 res!51691) b!103538))

(assert (= (and b!103538 res!51690) b!103539))

(declare-fun m!114473 () Bool)

(assert (=> d!27805 m!114473))

(declare-fun m!114475 () Bool)

(assert (=> d!27805 m!114475))

(declare-fun m!114477 () Bool)

(assert (=> d!27805 m!114477))

(declare-fun m!114479 () Bool)

(assert (=> d!27805 m!114479))

(declare-fun m!114481 () Bool)

(assert (=> b!103538 m!114481))

(declare-fun m!114483 () Bool)

(assert (=> b!103539 m!114483))

(assert (=> b!103174 d!27805))

(declare-fun d!27807 () Bool)

(assert (=> d!27807 (= (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992)))) (and (or (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000001111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000011111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000001111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000011111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000001111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000011111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000001111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000011111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000001111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000011111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000001111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000011111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000001111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000011111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000111111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000001111111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000011111111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000111111111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00001111111111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00011111111111111111111111111111) (= (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!103174 d!27807))

(declare-fun d!27809 () Bool)

(assert (=> d!27809 (= (valid!418 thiss!992) (valid!417 (v!2876 (underlying!358 thiss!992))))))

(declare-fun bs!4247 () Bool)

(assert (= bs!4247 d!27809))

(declare-fun m!114485 () Bool)

(assert (=> bs!4247 m!114485))

(assert (=> start!12190 d!27809))

(declare-fun b!103547 () Bool)

(declare-fun e!67464 () Bool)

(assert (=> b!103547 (= e!67464 tp_is_empty!2673)))

(declare-fun b!103546 () Bool)

(declare-fun e!67465 () Bool)

(assert (=> b!103546 (= e!67465 tp_is_empty!2673)))

(declare-fun condMapEmpty!3913 () Bool)

(declare-fun mapDefault!3913 () ValueCell!993)

(assert (=> mapNonEmpty!3903 (= condMapEmpty!3913 (= mapRest!3904 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3913)))))

(declare-fun mapRes!3913 () Bool)

(assert (=> mapNonEmpty!3903 (= tp!9854 (and e!67464 mapRes!3913))))

(declare-fun mapNonEmpty!3913 () Bool)

(declare-fun tp!9871 () Bool)

(assert (=> mapNonEmpty!3913 (= mapRes!3913 (and tp!9871 e!67465))))

(declare-fun mapKey!3913 () (_ BitVec 32))

(declare-fun mapRest!3913 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapValue!3913 () ValueCell!993)

(assert (=> mapNonEmpty!3913 (= mapRest!3904 (store mapRest!3913 mapKey!3913 mapValue!3913))))

(declare-fun mapIsEmpty!3913 () Bool)

(assert (=> mapIsEmpty!3913 mapRes!3913))

(assert (= (and mapNonEmpty!3903 condMapEmpty!3913) mapIsEmpty!3913))

(assert (= (and mapNonEmpty!3903 (not condMapEmpty!3913)) mapNonEmpty!3913))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!993) mapValue!3913)) b!103546))

(assert (= (and mapNonEmpty!3903 ((_ is ValueCellFull!993) mapDefault!3913)) b!103547))

(declare-fun m!114487 () Bool)

(assert (=> mapNonEmpty!3913 m!114487))

(declare-fun b!103549 () Bool)

(declare-fun e!67466 () Bool)

(assert (=> b!103549 (= e!67466 tp_is_empty!2673)))

(declare-fun b!103548 () Bool)

(declare-fun e!67467 () Bool)

(assert (=> b!103548 (= e!67467 tp_is_empty!2673)))

(declare-fun condMapEmpty!3914 () Bool)

(declare-fun mapDefault!3914 () ValueCell!993)

(assert (=> mapNonEmpty!3904 (= condMapEmpty!3914 (= mapRest!3903 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3914)))))

(declare-fun mapRes!3914 () Bool)

(assert (=> mapNonEmpty!3904 (= tp!9855 (and e!67466 mapRes!3914))))

(declare-fun mapNonEmpty!3914 () Bool)

(declare-fun tp!9872 () Bool)

(assert (=> mapNonEmpty!3914 (= mapRes!3914 (and tp!9872 e!67467))))

(declare-fun mapRest!3914 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapValue!3914 () ValueCell!993)

(declare-fun mapKey!3914 () (_ BitVec 32))

(assert (=> mapNonEmpty!3914 (= mapRest!3903 (store mapRest!3914 mapKey!3914 mapValue!3914))))

(declare-fun mapIsEmpty!3914 () Bool)

(assert (=> mapIsEmpty!3914 mapRes!3914))

(assert (= (and mapNonEmpty!3904 condMapEmpty!3914) mapIsEmpty!3914))

(assert (= (and mapNonEmpty!3904 (not condMapEmpty!3914)) mapNonEmpty!3914))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!993) mapValue!3914)) b!103548))

(assert (= (and mapNonEmpty!3904 ((_ is ValueCellFull!993) mapDefault!3914)) b!103549))

(declare-fun m!114489 () Bool)

(assert (=> mapNonEmpty!3914 m!114489))

(declare-fun b_lambda!4629 () Bool)

(assert (= b_lambda!4627 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4629)))

(declare-fun b_lambda!4631 () Bool)

(assert (= b_lambda!4623 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4631)))

(declare-fun b_lambda!4633 () Bool)

(assert (= b_lambda!4625 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4633)))

(check-sat (not b!103532) (not b_lambda!4631) (not d!27779) (not b!103445) (not b!103527) (not bm!10819) (not b_lambda!4621) (not b!103488) (not bm!10818) (not d!27801) (not mapNonEmpty!3913) (not d!27777) (not b!103449) (not b!103490) (not b!103464) (not mapNonEmpty!3914) (not b!103530) (not b!103529) b_and!6413 (not b!103537) (not b!103496) (not b!103539) (not d!27795) (not b!103491) (not bm!10824) (not b!103269) (not b!103381) (not bm!10852) (not b!103497) (not b!103463) (not d!27783) (not b!103395) (not bm!10853) (not b!103401) (not b!103459) (not bm!10863) (not bm!10857) (not b!103258) (not d!27781) (not b!103385) (not b!103400) (not b!103499) (not b!103359) (not d!27805) (not bm!10856) (not d!27765) (not d!27803) (not b!103259) (not b!103267) (not d!27799) (not b!103455) (not b!103525) (not b!103364) b_and!6411 (not bm!10834) (not b_lambda!4633) (not b!103470) (not bm!10831) (not bm!10825) (not b!103448) (not d!27797) (not bm!10835) (not b_next!2515) (not b!103535) (not d!27769) (not b!103260) (not bm!10814) (not b!103370) (not b!103526) (not bm!10822) (not b!103388) (not b!103498) (not bm!10817) (not b!103534) (not b_next!2513) (not d!27767) (not bm!10832) (not bm!10816) (not b!103538) (not b!103457) (not bm!10860) (not b!103536) tp_is_empty!2673 (not d!27809) (not b!103363) (not d!27787) (not b!103475) (not b_lambda!4629))
(check-sat b_and!6411 b_and!6413 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun d!27811 () Bool)

(declare-fun e!67469 () Bool)

(assert (=> d!27811 e!67469))

(declare-fun res!51692 () Bool)

(assert (=> d!27811 (=> res!51692 e!67469)))

(declare-fun lt!52796 () Bool)

(assert (=> d!27811 (= res!51692 (not lt!52796))))

(declare-fun lt!52797 () Bool)

(assert (=> d!27811 (= lt!52796 lt!52797)))

(declare-fun lt!52798 () Unit!3150)

(declare-fun e!67468 () Unit!3150)

(assert (=> d!27811 (= lt!52798 e!67468)))

(declare-fun c!17830 () Bool)

(assert (=> d!27811 (= c!17830 lt!52797)))

(assert (=> d!27811 (= lt!52797 (containsKey!159 (toList!800 lt!52757) (_1!1211 lt!52538)))))

(assert (=> d!27811 (= (contains!824 lt!52757 (_1!1211 lt!52538)) lt!52796)))

(declare-fun b!103550 () Bool)

(declare-fun lt!52799 () Unit!3150)

(assert (=> b!103550 (= e!67468 lt!52799)))

(assert (=> b!103550 (= lt!52799 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52757) (_1!1211 lt!52538)))))

(assert (=> b!103550 (isDefined!108 (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538)))))

(declare-fun b!103551 () Bool)

(declare-fun Unit!3161 () Unit!3150)

(assert (=> b!103551 (= e!67468 Unit!3161)))

(declare-fun b!103552 () Bool)

(assert (=> b!103552 (= e!67469 (isDefined!108 (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538))))))

(assert (= (and d!27811 c!17830) b!103550))

(assert (= (and d!27811 (not c!17830)) b!103551))

(assert (= (and d!27811 (not res!51692)) b!103552))

(declare-fun m!114491 () Bool)

(assert (=> d!27811 m!114491))

(declare-fun m!114493 () Bool)

(assert (=> b!103550 m!114493))

(assert (=> b!103550 m!114415))

(assert (=> b!103550 m!114415))

(declare-fun m!114495 () Bool)

(assert (=> b!103550 m!114495))

(assert (=> b!103552 m!114415))

(assert (=> b!103552 m!114415))

(assert (=> b!103552 m!114495))

(assert (=> d!27795 d!27811))

(declare-fun d!27813 () Bool)

(declare-fun c!17835 () Bool)

(assert (=> d!27813 (= c!17835 (and ((_ is Cons!1607) lt!52758) (= (_1!1211 (h!2203 lt!52758)) (_1!1211 lt!52538))))))

(declare-fun e!67474 () Option!161)

(assert (=> d!27813 (= (getValueByKey!155 lt!52758 (_1!1211 lt!52538)) e!67474)))

(declare-fun b!103562 () Bool)

(declare-fun e!67475 () Option!161)

(assert (=> b!103562 (= e!67474 e!67475)))

(declare-fun c!17836 () Bool)

(assert (=> b!103562 (= c!17836 (and ((_ is Cons!1607) lt!52758) (not (= (_1!1211 (h!2203 lt!52758)) (_1!1211 lt!52538)))))))

(declare-fun b!103563 () Bool)

(assert (=> b!103563 (= e!67475 (getValueByKey!155 (t!5673 lt!52758) (_1!1211 lt!52538)))))

(declare-fun b!103564 () Bool)

(assert (=> b!103564 (= e!67475 None!159)))

(declare-fun b!103561 () Bool)

(assert (=> b!103561 (= e!67474 (Some!160 (_2!1211 (h!2203 lt!52758))))))

(assert (= (and d!27813 c!17835) b!103561))

(assert (= (and d!27813 (not c!17835)) b!103562))

(assert (= (and b!103562 c!17836) b!103563))

(assert (= (and b!103562 (not c!17836)) b!103564))

(declare-fun m!114497 () Bool)

(assert (=> b!103563 m!114497))

(assert (=> d!27795 d!27813))

(declare-fun d!27815 () Bool)

(assert (=> d!27815 (= (getValueByKey!155 lt!52758 (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538)))))

(declare-fun lt!52802 () Unit!3150)

(declare-fun choose!639 (List!1611 (_ BitVec 64) V!3211) Unit!3150)

(assert (=> d!27815 (= lt!52802 (choose!639 lt!52758 (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun e!67478 () Bool)

(assert (=> d!27815 e!67478))

(declare-fun res!51697 () Bool)

(assert (=> d!27815 (=> (not res!51697) (not e!67478))))

(declare-fun isStrictlySorted!308 (List!1611) Bool)

(assert (=> d!27815 (= res!51697 (isStrictlySorted!308 lt!52758))))

(assert (=> d!27815 (= (lemmaContainsTupThenGetReturnValue!71 lt!52758 (_1!1211 lt!52538) (_2!1211 lt!52538)) lt!52802)))

(declare-fun b!103569 () Bool)

(declare-fun res!51698 () Bool)

(assert (=> b!103569 (=> (not res!51698) (not e!67478))))

(assert (=> b!103569 (= res!51698 (containsKey!159 lt!52758 (_1!1211 lt!52538)))))

(declare-fun b!103570 () Bool)

(assert (=> b!103570 (= e!67478 (contains!826 lt!52758 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(assert (= (and d!27815 res!51697) b!103569))

(assert (= (and b!103569 res!51698) b!103570))

(assert (=> d!27815 m!114409))

(declare-fun m!114499 () Bool)

(assert (=> d!27815 m!114499))

(declare-fun m!114501 () Bool)

(assert (=> d!27815 m!114501))

(declare-fun m!114503 () Bool)

(assert (=> b!103569 m!114503))

(declare-fun m!114505 () Bool)

(assert (=> b!103570 m!114505))

(assert (=> d!27795 d!27815))

(declare-fun b!103591 () Bool)

(declare-fun e!67493 () List!1611)

(declare-fun e!67489 () List!1611)

(assert (=> b!103591 (= e!67493 e!67489)))

(declare-fun c!17846 () Bool)

(assert (=> b!103591 (= c!17846 (and ((_ is Cons!1607) (toList!800 lt!52539)) (= (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 lt!52538))))))

(declare-fun b!103592 () Bool)

(declare-fun call!10874 () List!1611)

(assert (=> b!103592 (= e!67489 call!10874)))

(declare-fun bm!10870 () Bool)

(declare-fun call!10875 () List!1611)

(assert (=> bm!10870 (= call!10874 call!10875)))

(declare-fun b!103594 () Bool)

(declare-fun e!67490 () List!1611)

(declare-fun c!17848 () Bool)

(assert (=> b!103594 (= e!67490 (ite c!17846 (t!5673 (toList!800 lt!52539)) (ite c!17848 (Cons!1607 (h!2203 (toList!800 lt!52539)) (t!5673 (toList!800 lt!52539))) Nil!1608)))))

(declare-fun bm!10871 () Bool)

(declare-fun call!10873 () List!1611)

(assert (=> bm!10871 (= call!10873 call!10874)))

(declare-fun b!103595 () Bool)

(assert (=> b!103595 (= e!67490 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52539)) (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun bm!10872 () Bool)

(declare-fun c!17847 () Bool)

(declare-fun $colon$colon!80 (List!1611 tuple2!2400) List!1611)

(assert (=> bm!10872 (= call!10875 ($colon$colon!80 e!67490 (ite c!17847 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538)))))))

(declare-fun c!17845 () Bool)

(assert (=> bm!10872 (= c!17845 c!17847)))

(declare-fun b!103596 () Bool)

(declare-fun e!67491 () List!1611)

(assert (=> b!103596 (= e!67491 call!10873)))

(declare-fun b!103597 () Bool)

(assert (=> b!103597 (= c!17848 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 lt!52538))))))

(assert (=> b!103597 (= e!67489 e!67491)))

(declare-fun b!103598 () Bool)

(assert (=> b!103598 (= e!67493 call!10875)))

(declare-fun d!27817 () Bool)

(declare-fun e!67492 () Bool)

(assert (=> d!27817 e!67492))

(declare-fun res!51703 () Bool)

(assert (=> d!27817 (=> (not res!51703) (not e!67492))))

(declare-fun lt!52805 () List!1611)

(assert (=> d!27817 (= res!51703 (isStrictlySorted!308 lt!52805))))

(assert (=> d!27817 (= lt!52805 e!67493)))

(assert (=> d!27817 (= c!17847 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 lt!52538))))))

(assert (=> d!27817 (isStrictlySorted!308 (toList!800 lt!52539))))

(assert (=> d!27817 (= (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 lt!52538) (_2!1211 lt!52538)) lt!52805)))

(declare-fun b!103593 () Bool)

(assert (=> b!103593 (= e!67491 call!10873)))

(declare-fun b!103599 () Bool)

(assert (=> b!103599 (= e!67492 (contains!826 lt!52805 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!103600 () Bool)

(declare-fun res!51704 () Bool)

(assert (=> b!103600 (=> (not res!51704) (not e!67492))))

(assert (=> b!103600 (= res!51704 (containsKey!159 lt!52805 (_1!1211 lt!52538)))))

(assert (= (and d!27817 c!17847) b!103598))

(assert (= (and d!27817 (not c!17847)) b!103591))

(assert (= (and b!103591 c!17846) b!103592))

(assert (= (and b!103591 (not c!17846)) b!103597))

(assert (= (and b!103597 c!17848) b!103593))

(assert (= (and b!103597 (not c!17848)) b!103596))

(assert (= (or b!103593 b!103596) bm!10871))

(assert (= (or b!103592 bm!10871) bm!10870))

(assert (= (or b!103598 bm!10870) bm!10872))

(assert (= (and bm!10872 c!17845) b!103595))

(assert (= (and bm!10872 (not c!17845)) b!103594))

(assert (= (and d!27817 res!51703) b!103600))

(assert (= (and b!103600 res!51704) b!103599))

(declare-fun m!114507 () Bool)

(assert (=> b!103599 m!114507))

(declare-fun m!114509 () Bool)

(assert (=> b!103595 m!114509))

(declare-fun m!114511 () Bool)

(assert (=> bm!10872 m!114511))

(declare-fun m!114513 () Bool)

(assert (=> d!27817 m!114513))

(declare-fun m!114515 () Bool)

(assert (=> d!27817 m!114515))

(declare-fun m!114517 () Bool)

(assert (=> b!103600 m!114517))

(assert (=> d!27795 d!27817))

(declare-fun d!27819 () Bool)

(assert (=> d!27819 (= (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103459 d!27819))

(assert (=> b!103475 d!27785))

(declare-fun d!27821 () Bool)

(declare-fun get!1326 (Option!161) V!3211)

(assert (=> d!27821 (= (apply!97 lt!52728 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4248 () Bool)

(assert (= bs!4248 d!27821))

(declare-fun m!114519 () Bool)

(assert (=> bs!4248 m!114519))

(assert (=> bs!4248 m!114519))

(declare-fun m!114521 () Bool)

(assert (=> bs!4248 m!114521))

(assert (=> b!103457 d!27821))

(declare-fun d!27823 () Bool)

(declare-fun c!17849 () Bool)

(assert (=> d!27823 (= c!17849 (and ((_ is Cons!1607) (toList!800 lt!52793)) (= (_1!1211 (h!2203 (toList!800 lt!52793))) (_1!1211 lt!52538))))))

(declare-fun e!67494 () Option!161)

(assert (=> d!27823 (= (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538)) e!67494)))

(declare-fun b!103602 () Bool)

(declare-fun e!67495 () Option!161)

(assert (=> b!103602 (= e!67494 e!67495)))

(declare-fun c!17850 () Bool)

(assert (=> b!103602 (= c!17850 (and ((_ is Cons!1607) (toList!800 lt!52793)) (not (= (_1!1211 (h!2203 (toList!800 lt!52793))) (_1!1211 lt!52538)))))))

(declare-fun b!103603 () Bool)

(assert (=> b!103603 (= e!67495 (getValueByKey!155 (t!5673 (toList!800 lt!52793)) (_1!1211 lt!52538)))))

(declare-fun b!103604 () Bool)

(assert (=> b!103604 (= e!67495 None!159)))

(declare-fun b!103601 () Bool)

(assert (=> b!103601 (= e!67494 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52793)))))))

(assert (= (and d!27823 c!17849) b!103601))

(assert (= (and d!27823 (not c!17849)) b!103602))

(assert (= (and b!103602 c!17850) b!103603))

(assert (= (and b!103602 (not c!17850)) b!103604))

(declare-fun m!114523 () Bool)

(assert (=> b!103603 m!114523))

(assert (=> b!103538 d!27823))

(declare-fun b!103605 () Bool)

(declare-fun e!67504 () Bool)

(declare-fun e!67505 () Bool)

(assert (=> b!103605 (= e!67504 e!67505)))

(declare-fun res!51713 () Bool)

(declare-fun call!10877 () Bool)

(assert (=> b!103605 (= res!51713 call!10877)))

(assert (=> b!103605 (=> (not res!51713) (not e!67505))))

(declare-fun bm!10873 () Bool)

(declare-fun call!10878 () ListLongMap!1569)

(declare-fun call!10882 () ListLongMap!1569)

(assert (=> bm!10873 (= call!10878 call!10882)))

(declare-fun bm!10874 () Bool)

(declare-fun call!10880 () ListLongMap!1569)

(assert (=> bm!10874 (= call!10880 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10875 () Bool)

(declare-fun call!10876 () Bool)

(declare-fun lt!52817 () ListLongMap!1569)

(assert (=> bm!10875 (= call!10876 (contains!824 lt!52817 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10876 () Bool)

(declare-fun call!10879 () ListLongMap!1569)

(declare-fun call!10881 () ListLongMap!1569)

(assert (=> bm!10876 (= call!10879 call!10881)))

(declare-fun b!103606 () Bool)

(declare-fun e!67497 () ListLongMap!1569)

(assert (=> b!103606 (= e!67497 (+!141 call!10882 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!103607 () Bool)

(assert (=> b!103607 (= e!67504 (not call!10877))))

(declare-fun b!103608 () Bool)

(declare-fun e!67499 () ListLongMap!1569)

(assert (=> b!103608 (= e!67499 call!10878)))

(declare-fun b!103609 () Bool)

(declare-fun e!67498 () Bool)

(declare-fun e!67502 () Bool)

(assert (=> b!103609 (= e!67498 e!67502)))

(declare-fun res!51709 () Bool)

(assert (=> b!103609 (=> (not res!51709) (not e!67502))))

(assert (=> b!103609 (= res!51709 (contains!824 lt!52817 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103609 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10877 () Bool)

(assert (=> bm!10877 (= call!10881 call!10880)))

(declare-fun b!103610 () Bool)

(declare-fun e!67500 () Unit!3150)

(declare-fun lt!52812 () Unit!3150)

(assert (=> b!103610 (= e!67500 lt!52812)))

(declare-fun lt!52811 () ListLongMap!1569)

(assert (=> b!103610 (= lt!52811 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52821 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52821 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52820 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52820 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52815 () Unit!3150)

(assert (=> b!103610 (= lt!52815 (addStillContains!73 lt!52811 lt!52821 (zeroValue!2438 newMap!16) lt!52820))))

(assert (=> b!103610 (contains!824 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))) lt!52820)))

(declare-fun lt!52824 () Unit!3150)

(assert (=> b!103610 (= lt!52824 lt!52815)))

(declare-fun lt!52814 () ListLongMap!1569)

(assert (=> b!103610 (= lt!52814 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52818 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52818 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52823 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52823 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52826 () Unit!3150)

(assert (=> b!103610 (= lt!52826 (addApplyDifferent!73 lt!52814 lt!52818 (minValue!2438 newMap!16) lt!52823))))

(assert (=> b!103610 (= (apply!97 (+!141 lt!52814 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))) lt!52823) (apply!97 lt!52814 lt!52823))))

(declare-fun lt!52808 () Unit!3150)

(assert (=> b!103610 (= lt!52808 lt!52826)))

(declare-fun lt!52807 () ListLongMap!1569)

(assert (=> b!103610 (= lt!52807 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52816 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52816 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52819 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52819 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52827 () Unit!3150)

(assert (=> b!103610 (= lt!52827 (addApplyDifferent!73 lt!52807 lt!52816 (zeroValue!2438 newMap!16) lt!52819))))

(assert (=> b!103610 (= (apply!97 (+!141 lt!52807 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))) lt!52819) (apply!97 lt!52807 lt!52819))))

(declare-fun lt!52825 () Unit!3150)

(assert (=> b!103610 (= lt!52825 lt!52827)))

(declare-fun lt!52806 () ListLongMap!1569)

(assert (=> b!103610 (= lt!52806 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52813 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52813 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52822 () (_ BitVec 64))

(assert (=> b!103610 (= lt!52822 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103610 (= lt!52812 (addApplyDifferent!73 lt!52806 lt!52813 (minValue!2438 newMap!16) lt!52822))))

(assert (=> b!103610 (= (apply!97 (+!141 lt!52806 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))) lt!52822) (apply!97 lt!52806 lt!52822))))

(declare-fun b!103611 () Bool)

(declare-fun e!67496 () Bool)

(assert (=> b!103611 (= e!67496 (not call!10876))))

(declare-fun b!103612 () Bool)

(declare-fun e!67508 () ListLongMap!1569)

(assert (=> b!103612 (= e!67508 call!10878)))

(declare-fun b!103613 () Bool)

(assert (=> b!103613 (= e!67508 call!10879)))

(declare-fun b!103614 () Bool)

(declare-fun c!17851 () Bool)

(assert (=> b!103614 (= c!17851 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103614 (= e!67499 e!67508)))

(declare-fun b!103615 () Bool)

(declare-fun e!67507 () Bool)

(assert (=> b!103615 (= e!67496 e!67507)))

(declare-fun res!51707 () Bool)

(assert (=> b!103615 (= res!51707 call!10876)))

(assert (=> b!103615 (=> (not res!51707) (not e!67507))))

(declare-fun b!103616 () Bool)

(assert (=> b!103616 (= e!67502 (= (apply!97 lt!52817 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103616 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (_values!2544 newMap!16))))))

(assert (=> b!103616 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103617 () Bool)

(declare-fun res!51711 () Bool)

(declare-fun e!67506 () Bool)

(assert (=> b!103617 (=> (not res!51711) (not e!67506))))

(assert (=> b!103617 (= res!51711 e!67504)))

(declare-fun c!17854 () Bool)

(assert (=> b!103617 (= c!17854 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!27825 () Bool)

(assert (=> d!27825 e!67506))

(declare-fun res!51712 () Bool)

(assert (=> d!27825 (=> (not res!51712) (not e!67506))))

(assert (=> d!27825 (= res!51712 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!52809 () ListLongMap!1569)

(assert (=> d!27825 (= lt!52817 lt!52809)))

(declare-fun lt!52810 () Unit!3150)

(assert (=> d!27825 (= lt!52810 e!67500)))

(declare-fun c!17855 () Bool)

(declare-fun e!67501 () Bool)

(assert (=> d!27825 (= c!17855 e!67501)))

(declare-fun res!51710 () Bool)

(assert (=> d!27825 (=> (not res!51710) (not e!67501))))

(assert (=> d!27825 (= res!51710 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27825 (= lt!52809 e!67497)))

(declare-fun c!17852 () Bool)

(assert (=> d!27825 (= c!17852 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27825 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27825 (= (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!52817)))

(declare-fun c!17856 () Bool)

(declare-fun bm!10878 () Bool)

(assert (=> bm!10878 (= call!10882 (+!141 (ite c!17852 call!10880 (ite c!17856 call!10881 call!10879)) (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!103618 () Bool)

(assert (=> b!103618 (= e!67505 (= (apply!97 lt!52817 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!103619 () Bool)

(assert (=> b!103619 (= e!67506 e!67496)))

(declare-fun c!17853 () Bool)

(assert (=> b!103619 (= c!17853 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103620 () Bool)

(assert (=> b!103620 (= e!67501 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103621 () Bool)

(declare-fun res!51706 () Bool)

(assert (=> b!103621 (=> (not res!51706) (not e!67506))))

(assert (=> b!103621 (= res!51706 e!67498)))

(declare-fun res!51708 () Bool)

(assert (=> b!103621 (=> res!51708 e!67498)))

(declare-fun e!67503 () Bool)

(assert (=> b!103621 (= res!51708 (not e!67503))))

(declare-fun res!51705 () Bool)

(assert (=> b!103621 (=> (not res!51705) (not e!67503))))

(assert (=> b!103621 (= res!51705 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103622 () Bool)

(assert (=> b!103622 (= e!67497 e!67499)))

(assert (=> b!103622 (= c!17856 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103623 () Bool)

(declare-fun Unit!3162 () Unit!3150)

(assert (=> b!103623 (= e!67500 Unit!3162)))

(declare-fun b!103624 () Bool)

(assert (=> b!103624 (= e!67507 (= (apply!97 lt!52817 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!103625 () Bool)

(assert (=> b!103625 (= e!67503 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10879 () Bool)

(assert (=> bm!10879 (= call!10877 (contains!824 lt!52817 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27825 c!17852) b!103606))

(assert (= (and d!27825 (not c!17852)) b!103622))

(assert (= (and b!103622 c!17856) b!103608))

(assert (= (and b!103622 (not c!17856)) b!103614))

(assert (= (and b!103614 c!17851) b!103612))

(assert (= (and b!103614 (not c!17851)) b!103613))

(assert (= (or b!103612 b!103613) bm!10876))

(assert (= (or b!103608 bm!10876) bm!10877))

(assert (= (or b!103608 b!103612) bm!10873))

(assert (= (or b!103606 bm!10877) bm!10874))

(assert (= (or b!103606 bm!10873) bm!10878))

(assert (= (and d!27825 res!51710) b!103620))

(assert (= (and d!27825 c!17855) b!103610))

(assert (= (and d!27825 (not c!17855)) b!103623))

(assert (= (and d!27825 res!51712) b!103621))

(assert (= (and b!103621 res!51705) b!103625))

(assert (= (and b!103621 (not res!51708)) b!103609))

(assert (= (and b!103609 res!51709) b!103616))

(assert (= (and b!103621 res!51706) b!103617))

(assert (= (and b!103617 c!17854) b!103605))

(assert (= (and b!103617 (not c!17854)) b!103607))

(assert (= (and b!103605 res!51713) b!103618))

(assert (= (or b!103605 b!103607) bm!10879))

(assert (= (and b!103617 res!51711) b!103619))

(assert (= (and b!103619 c!17853) b!103615))

(assert (= (and b!103619 (not c!17853)) b!103611))

(assert (= (and b!103615 res!51707) b!103624))

(assert (= (or b!103615 b!103611) bm!10875))

(declare-fun b_lambda!4635 () Bool)

(assert (=> (not b_lambda!4635) (not b!103616)))

(declare-fun t!5681 () Bool)

(declare-fun tb!2037 () Bool)

(assert (=> (and b!103176 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16)) t!5681) tb!2037))

(declare-fun result!3435 () Bool)

(assert (=> tb!2037 (= result!3435 tp_is_empty!2673)))

(assert (=> b!103616 t!5681))

(declare-fun b_and!6415 () Bool)

(assert (= b_and!6411 (and (=> t!5681 result!3435) b_and!6415)))

(declare-fun t!5683 () Bool)

(declare-fun tb!2039 () Bool)

(assert (=> (and b!103179 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 newMap!16)) t!5683) tb!2039))

(declare-fun result!3437 () Bool)

(assert (= result!3437 result!3435))

(assert (=> b!103616 t!5683))

(declare-fun b_and!6417 () Bool)

(assert (= b_and!6413 (and (=> t!5683 result!3437) b_and!6417)))

(declare-fun m!114525 () Bool)

(assert (=> b!103625 m!114525))

(assert (=> b!103625 m!114525))

(declare-fun m!114527 () Bool)

(assert (=> b!103625 m!114527))

(declare-fun m!114529 () Bool)

(assert (=> bm!10874 m!114529))

(assert (=> b!103609 m!114525))

(assert (=> b!103609 m!114525))

(declare-fun m!114531 () Bool)

(assert (=> b!103609 m!114531))

(declare-fun m!114533 () Bool)

(assert (=> bm!10875 m!114533))

(declare-fun m!114535 () Bool)

(assert (=> b!103616 m!114535))

(assert (=> b!103616 m!114535))

(declare-fun m!114537 () Bool)

(assert (=> b!103616 m!114537))

(declare-fun m!114539 () Bool)

(assert (=> b!103616 m!114539))

(assert (=> b!103616 m!114525))

(assert (=> b!103616 m!114525))

(declare-fun m!114541 () Bool)

(assert (=> b!103616 m!114541))

(assert (=> b!103616 m!114537))

(declare-fun m!114543 () Bool)

(assert (=> b!103606 m!114543))

(declare-fun m!114545 () Bool)

(assert (=> b!103610 m!114545))

(declare-fun m!114547 () Bool)

(assert (=> b!103610 m!114547))

(declare-fun m!114549 () Bool)

(assert (=> b!103610 m!114549))

(declare-fun m!114551 () Bool)

(assert (=> b!103610 m!114551))

(declare-fun m!114553 () Bool)

(assert (=> b!103610 m!114553))

(declare-fun m!114555 () Bool)

(assert (=> b!103610 m!114555))

(declare-fun m!114557 () Bool)

(assert (=> b!103610 m!114557))

(declare-fun m!114559 () Bool)

(assert (=> b!103610 m!114559))

(assert (=> b!103610 m!114525))

(assert (=> b!103610 m!114545))

(declare-fun m!114561 () Bool)

(assert (=> b!103610 m!114561))

(assert (=> b!103610 m!114559))

(declare-fun m!114563 () Bool)

(assert (=> b!103610 m!114563))

(assert (=> b!103610 m!114551))

(declare-fun m!114565 () Bool)

(assert (=> b!103610 m!114565))

(declare-fun m!114567 () Bool)

(assert (=> b!103610 m!114567))

(declare-fun m!114569 () Bool)

(assert (=> b!103610 m!114569))

(assert (=> b!103610 m!114529))

(declare-fun m!114571 () Bool)

(assert (=> b!103610 m!114571))

(assert (=> b!103610 m!114555))

(declare-fun m!114573 () Bool)

(assert (=> b!103610 m!114573))

(declare-fun m!114575 () Bool)

(assert (=> d!27825 m!114575))

(declare-fun m!114577 () Bool)

(assert (=> bm!10879 m!114577))

(declare-fun m!114579 () Bool)

(assert (=> b!103624 m!114579))

(assert (=> b!103620 m!114525))

(assert (=> b!103620 m!114525))

(assert (=> b!103620 m!114527))

(declare-fun m!114581 () Bool)

(assert (=> b!103618 m!114581))

(declare-fun m!114583 () Bool)

(assert (=> bm!10878 m!114583))

(assert (=> b!103364 d!27825))

(declare-fun bm!10882 () Bool)

(declare-fun call!10885 () Bool)

(assert (=> bm!10882 (= call!10885 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103634 () Bool)

(declare-fun e!67516 () Bool)

(declare-fun e!67517 () Bool)

(assert (=> b!103634 (= e!67516 e!67517)))

(declare-fun lt!52836 () (_ BitVec 64))

(assert (=> b!103634 (= lt!52836 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52834 () Unit!3150)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4335 (_ BitVec 64) (_ BitVec 32)) Unit!3150)

(assert (=> b!103634 (= lt!52834 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 newMap!16) lt!52836 #b00000000000000000000000000000000))))

(assert (=> b!103634 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!52836 #b00000000000000000000000000000000)))

(declare-fun lt!52835 () Unit!3150)

(assert (=> b!103634 (= lt!52835 lt!52834)))

(declare-fun res!51719 () Bool)

(assert (=> b!103634 (= res!51719 (= (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)) (Found!258 #b00000000000000000000000000000000)))))

(assert (=> b!103634 (=> (not res!51719) (not e!67517))))

(declare-fun d!27827 () Bool)

(declare-fun res!51718 () Bool)

(declare-fun e!67515 () Bool)

(assert (=> d!27827 (=> res!51718 e!67515)))

(assert (=> d!27827 (= res!51718 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27827 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 newMap!16) (mask!6697 newMap!16)) e!67515)))

(declare-fun b!103635 () Bool)

(assert (=> b!103635 (= e!67516 call!10885)))

(declare-fun b!103636 () Bool)

(assert (=> b!103636 (= e!67517 call!10885)))

(declare-fun b!103637 () Bool)

(assert (=> b!103637 (= e!67515 e!67516)))

(declare-fun c!17859 () Bool)

(assert (=> b!103637 (= c!17859 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!27827 (not res!51718)) b!103637))

(assert (= (and b!103637 c!17859) b!103634))

(assert (= (and b!103637 (not c!17859)) b!103635))

(assert (= (and b!103634 res!51719) b!103636))

(assert (= (or b!103636 b!103635) bm!10882))

(declare-fun m!114585 () Bool)

(assert (=> bm!10882 m!114585))

(assert (=> b!103634 m!114525))

(declare-fun m!114587 () Bool)

(assert (=> b!103634 m!114587))

(declare-fun m!114589 () Bool)

(assert (=> b!103634 m!114589))

(assert (=> b!103634 m!114525))

(declare-fun m!114591 () Bool)

(assert (=> b!103634 m!114591))

(assert (=> b!103637 m!114525))

(assert (=> b!103637 m!114525))

(assert (=> b!103637 m!114527))

(assert (=> b!103259 d!27827))

(declare-fun b!103647 () Bool)

(declare-fun res!51731 () Bool)

(declare-fun e!67520 () Bool)

(assert (=> b!103647 (=> (not res!51731) (not e!67520))))

(declare-fun size!2315 (LongMapFixedSize!894) (_ BitVec 32))

(assert (=> b!103647 (= res!51731 (bvsge (size!2315 newMap!16) (_size!496 newMap!16)))))

(declare-fun d!27829 () Bool)

(declare-fun res!51728 () Bool)

(assert (=> d!27829 (=> (not res!51728) (not e!67520))))

(assert (=> d!27829 (= res!51728 (validMask!0 (mask!6697 newMap!16)))))

(assert (=> d!27829 (= (simpleValid!73 newMap!16) e!67520)))

(declare-fun b!103649 () Bool)

(assert (=> b!103649 (= e!67520 (and (bvsge (extraKeys!2370 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2370 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!496 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!103646 () Bool)

(declare-fun res!51730 () Bool)

(assert (=> b!103646 (=> (not res!51730) (not e!67520))))

(assert (=> b!103646 (= res!51730 (and (= (size!2312 (_values!2544 newMap!16)) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001)) (= (size!2311 (_keys!4263 newMap!16)) (size!2312 (_values!2544 newMap!16))) (bvsge (_size!496 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!496 newMap!16) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!103648 () Bool)

(declare-fun res!51729 () Bool)

(assert (=> b!103648 (=> (not res!51729) (not e!67520))))

(assert (=> b!103648 (= res!51729 (= (size!2315 newMap!16) (bvadd (_size!496 newMap!16) (bvsdiv (bvadd (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!27829 res!51728) b!103646))

(assert (= (and b!103646 res!51730) b!103647))

(assert (= (and b!103647 res!51731) b!103648))

(assert (= (and b!103648 res!51729) b!103649))

(declare-fun m!114593 () Bool)

(assert (=> b!103647 m!114593))

(assert (=> d!27829 m!114575))

(assert (=> b!103648 m!114593))

(assert (=> d!27765 d!27829))

(declare-fun d!27831 () Bool)

(declare-fun c!17860 () Bool)

(assert (=> d!27831 (= c!17860 (and ((_ is Cons!1607) (toList!800 lt!52789)) (= (_1!1211 (h!2203 (toList!800 lt!52789))) (_1!1211 lt!52540))))))

(declare-fun e!67521 () Option!161)

(assert (=> d!27831 (= (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540)) e!67521)))

(declare-fun b!103651 () Bool)

(declare-fun e!67522 () Option!161)

(assert (=> b!103651 (= e!67521 e!67522)))

(declare-fun c!17861 () Bool)

(assert (=> b!103651 (= c!17861 (and ((_ is Cons!1607) (toList!800 lt!52789)) (not (= (_1!1211 (h!2203 (toList!800 lt!52789))) (_1!1211 lt!52540)))))))

(declare-fun b!103652 () Bool)

(assert (=> b!103652 (= e!67522 (getValueByKey!155 (t!5673 (toList!800 lt!52789)) (_1!1211 lt!52540)))))

(declare-fun b!103653 () Bool)

(assert (=> b!103653 (= e!67522 None!159)))

(declare-fun b!103650 () Bool)

(assert (=> b!103650 (= e!67521 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52789)))))))

(assert (= (and d!27831 c!17860) b!103650))

(assert (= (and d!27831 (not c!17860)) b!103651))

(assert (= (and b!103651 c!17861) b!103652))

(assert (= (and b!103651 (not c!17861)) b!103653))

(declare-fun m!114595 () Bool)

(assert (=> b!103652 m!114595))

(assert (=> b!103536 d!27831))

(assert (=> d!27783 d!27789))

(declare-fun d!27833 () Bool)

(assert (=> d!27833 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) from!355 Nil!1607)))

(assert (=> d!27833 true))

(declare-fun _$71!144 () Unit!3150)

(assert (=> d!27833 (= (choose!39 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!144)))

(declare-fun bs!4249 () Bool)

(assert (= bs!4249 d!27833))

(assert (=> bs!4249 m!114163))

(assert (=> d!27783 d!27833))

(declare-fun d!27835 () Bool)

(declare-fun e!67524 () Bool)

(assert (=> d!27835 e!67524))

(declare-fun res!51732 () Bool)

(assert (=> d!27835 (=> res!51732 e!67524)))

(declare-fun lt!52837 () Bool)

(assert (=> d!27835 (= res!51732 (not lt!52837))))

(declare-fun lt!52838 () Bool)

(assert (=> d!27835 (= lt!52837 lt!52838)))

(declare-fun lt!52839 () Unit!3150)

(declare-fun e!67523 () Unit!3150)

(assert (=> d!27835 (= lt!52839 e!67523)))

(declare-fun c!17862 () Bool)

(assert (=> d!27835 (= c!17862 lt!52838)))

(assert (=> d!27835 (= lt!52838 (containsKey!159 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27835 (= (contains!824 lt!52783 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52837)))

(declare-fun b!103654 () Bool)

(declare-fun lt!52840 () Unit!3150)

(assert (=> b!103654 (= e!67523 lt!52840)))

(assert (=> b!103654 (= lt!52840 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103654 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103655 () Bool)

(declare-fun Unit!3163 () Unit!3150)

(assert (=> b!103655 (= e!67523 Unit!3163)))

(declare-fun b!103656 () Bool)

(assert (=> b!103656 (= e!67524 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27835 c!17862) b!103654))

(assert (= (and d!27835 (not c!17862)) b!103655))

(assert (= (and d!27835 (not res!51732)) b!103656))

(declare-fun m!114597 () Bool)

(assert (=> d!27835 m!114597))

(declare-fun m!114599 () Bool)

(assert (=> b!103654 m!114599))

(declare-fun m!114601 () Bool)

(assert (=> b!103654 m!114601))

(assert (=> b!103654 m!114601))

(declare-fun m!114603 () Bool)

(assert (=> b!103654 m!114603))

(assert (=> b!103656 m!114601))

(assert (=> b!103656 m!114601))

(assert (=> b!103656 m!114603))

(assert (=> b!103535 d!27835))

(declare-fun d!27837 () Bool)

(declare-fun e!67525 () Bool)

(assert (=> d!27837 e!67525))

(declare-fun res!51734 () Bool)

(assert (=> d!27837 (=> (not res!51734) (not e!67525))))

(declare-fun lt!52842 () ListLongMap!1569)

(assert (=> d!27837 (= res!51734 (contains!824 lt!52842 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!52843 () List!1611)

(assert (=> d!27837 (= lt!52842 (ListLongMap!1570 lt!52843))))

(declare-fun lt!52841 () Unit!3150)

(declare-fun lt!52844 () Unit!3150)

(assert (=> d!27837 (= lt!52841 lt!52844)))

(assert (=> d!27837 (= (getValueByKey!155 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27837 (= lt!52844 (lemmaContainsTupThenGetReturnValue!71 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27837 (= lt!52843 (insertStrictlySorted!74 (toList!800 call!10833) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27837 (= (+!141 call!10833 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!52842)))

(declare-fun b!103657 () Bool)

(declare-fun res!51733 () Bool)

(assert (=> b!103657 (=> (not res!51733) (not e!67525))))

(assert (=> b!103657 (= res!51733 (= (getValueByKey!155 (toList!800 lt!52842) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!103658 () Bool)

(assert (=> b!103658 (= e!67525 (contains!826 (toList!800 lt!52842) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!27837 res!51734) b!103657))

(assert (= (and b!103657 res!51733) b!103658))

(declare-fun m!114605 () Bool)

(assert (=> d!27837 m!114605))

(declare-fun m!114607 () Bool)

(assert (=> d!27837 m!114607))

(declare-fun m!114609 () Bool)

(assert (=> d!27837 m!114609))

(declare-fun m!114611 () Bool)

(assert (=> d!27837 m!114611))

(declare-fun m!114613 () Bool)

(assert (=> b!103657 m!114613))

(declare-fun m!114615 () Bool)

(assert (=> b!103658 m!114615))

(assert (=> b!103388 d!27837))

(declare-fun b!103693 () Bool)

(declare-fun c!17873 () Bool)

(declare-fun lt!52931 () SeekEntryResult!258)

(assert (=> b!103693 (= c!17873 ((_ is MissingVacant!258) lt!52931))))

(declare-fun e!67544 () Bool)

(declare-fun e!67547 () Bool)

(assert (=> b!103693 (= e!67544 e!67547)))

(declare-fun e!67548 () Bool)

(declare-fun b!103694 () Bool)

(declare-fun lt!52911 () tuple2!2402)

(assert (=> b!103694 (= e!67548 (= (map!1282 (_2!1212 lt!52911)) (+!141 (map!1282 newMap!16) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!103695 () Bool)

(declare-fun e!67542 () Bool)

(declare-fun call!10894 () Bool)

(assert (=> b!103695 (= e!67542 (not call!10894))))

(declare-fun b!103696 () Bool)

(declare-fun res!51755 () Bool)

(assert (=> b!103696 (=> (not res!51755) (not e!67542))))

(assert (=> b!103696 (= res!51755 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!52931)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10891 () Bool)

(assert (=> bm!10891 (= call!10894 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103697 () Bool)

(declare-fun e!67546 () Unit!3150)

(declare-fun Unit!3164 () Unit!3150)

(assert (=> b!103697 (= e!67546 Unit!3164)))

(declare-fun lt!52928 () Unit!3150)

(assert (=> b!103697 (= lt!52928 (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52905 () SeekEntryResult!258)

(declare-fun call!10897 () SeekEntryResult!258)

(assert (=> b!103697 (= lt!52905 call!10897)))

(declare-fun res!51761 () Bool)

(assert (=> b!103697 (= res!51761 ((_ is Found!258) lt!52905))))

(declare-fun e!67545 () Bool)

(assert (=> b!103697 (=> (not res!51761) (not e!67545))))

(assert (=> b!103697 e!67545))

(declare-fun lt!52920 () Unit!3150)

(assert (=> b!103697 (= lt!52920 lt!52928)))

(assert (=> b!103697 false))

(declare-fun b!103698 () Bool)

(declare-fun res!51756 () Bool)

(assert (=> b!103698 (= res!51756 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!52931)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67543 () Bool)

(assert (=> b!103698 (=> (not res!51756) (not e!67543))))

(declare-fun b!103699 () Bool)

(assert (=> b!103699 (= e!67543 (not call!10894))))

(declare-fun b!103700 () Bool)

(assert (=> b!103700 (= e!67547 ((_ is Undefined!258) lt!52931))))

(declare-fun b!103701 () Bool)

(assert (=> b!103701 (= e!67547 e!67543)))

(declare-fun res!51754 () Bool)

(declare-fun call!10895 () Bool)

(assert (=> b!103701 (= res!51754 call!10895)))

(assert (=> b!103701 (=> (not res!51754) (not e!67543))))

(declare-fun bm!10892 () Bool)

(assert (=> bm!10892 (= call!10897 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun d!27839 () Bool)

(assert (=> d!27839 e!67548))

(declare-fun res!51760 () Bool)

(assert (=> d!27839 (=> (not res!51760) (not e!67548))))

(assert (=> d!27839 (= res!51760 (_1!1212 lt!52911))))

(assert (=> d!27839 (= lt!52911 (tuple2!2403 true (LongMapFixedSize!895 (defaultEntry!2561 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd (_size!496 newMap!16) #b00000000000000000000000000000001) (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (_vacant!496 newMap!16))))))

(declare-fun lt!52915 () Unit!3150)

(declare-fun lt!52924 () Unit!3150)

(assert (=> d!27839 (= lt!52915 lt!52924)))

(declare-fun lt!52917 () array!4337)

(declare-fun lt!52914 () array!4335)

(assert (=> d!27839 (contains!824 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))

(assert (=> d!27839 (= lt!52924 (lemmaValidKeyInArrayIsInListMap!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27839 (= lt!52917 (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))))

(assert (=> d!27839 (= lt!52914 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun lt!52921 () Unit!3150)

(declare-fun lt!52932 () Unit!3150)

(assert (=> d!27839 (= lt!52921 lt!52932)))

(declare-fun lt!52910 () array!4335)

(assert (=> d!27839 (= (arrayCountValidKeys!0 lt!52910 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4335 (_ BitVec 32)) Unit!3150)

(assert (=> d!27839 (= lt!52932 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!52910 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))

(assert (=> d!27839 (= lt!52910 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun lt!52909 () Unit!3150)

(declare-fun lt!52926 () Unit!3150)

(assert (=> d!27839 (= lt!52909 lt!52926)))

(declare-fun lt!52918 () array!4335)

(assert (=> d!27839 (arrayContainsKey!0 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!27839 (= lt!52926 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))

(assert (=> d!27839 (= lt!52918 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun lt!52930 () Unit!3150)

(declare-fun lt!52929 () Unit!3150)

(assert (=> d!27839 (= lt!52930 lt!52929)))

(assert (=> d!27839 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (getCurrentListMap!487 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!29 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3150)

(assert (=> d!27839 (= lt!52929 (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52933 () Unit!3150)

(declare-fun lt!52925 () Unit!3150)

(assert (=> d!27839 (= lt!52933 lt!52925)))

(assert (=> d!27839 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (mask!6697 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4335 (_ BitVec 32) (_ BitVec 32)) Unit!3150)

(assert (=> d!27839 (= lt!52925 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (mask!6697 newMap!16)))))

(declare-fun lt!52908 () Unit!3150)

(declare-fun lt!52922 () Unit!3150)

(assert (=> d!27839 (= lt!52908 lt!52922)))

(assert (=> d!27839 (= (arrayCountValidKeys!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4335 (_ BitVec 32) (_ BitVec 64)) Unit!3150)

(assert (=> d!27839 (= lt!52922 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4263 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!52906 () Unit!3150)

(declare-fun lt!52927 () Unit!3150)

(assert (=> d!27839 (= lt!52906 lt!52927)))

(declare-fun lt!52919 () (_ BitVec 32))

(declare-fun lt!52923 () List!1610)

(assert (=> d!27839 (arrayNoDuplicates!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) lt!52919 lt!52923)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4335 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1610) Unit!3150)

(assert (=> d!27839 (= lt!52927 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) lt!52919 lt!52923))))

(assert (=> d!27839 (= lt!52923 Nil!1607)))

(assert (=> d!27839 (= lt!52919 #b00000000000000000000000000000000)))

(declare-fun lt!52934 () Unit!3150)

(declare-fun e!67549 () Unit!3150)

(assert (=> d!27839 (= lt!52934 e!67549)))

(declare-fun c!17874 () Bool)

(assert (=> d!27839 (= c!17874 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!52907 () Unit!3150)

(assert (=> d!27839 (= lt!52907 e!67546)))

(declare-fun c!17872 () Bool)

(assert (=> d!27839 (= c!17872 (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27839 (valid!417 newMap!16)))

(assert (=> d!27839 (= (updateHelperNewKey!46 newMap!16 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))) lt!52911)))

(declare-fun b!103702 () Bool)

(declare-fun res!51757 () Bool)

(assert (=> b!103702 (=> (not res!51757) (not e!67542))))

(assert (=> b!103702 (= res!51757 call!10895)))

(assert (=> b!103702 (= e!67544 e!67542)))

(declare-fun b!103703 () Bool)

(declare-fun Unit!3165 () Unit!3150)

(assert (=> b!103703 (= e!67549 Unit!3165)))

(declare-fun lt!52913 () Unit!3150)

(declare-fun lemmaArrayContainsKeyThenInListMap!29 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3150)

(assert (=> b!103703 (= lt!52913 (lemmaArrayContainsKeyThenInListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> b!103703 (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))

(declare-fun lt!52916 () Unit!3150)

(assert (=> b!103703 (= lt!52916 lt!52913)))

(assert (=> b!103703 false))

(declare-fun b!103704 () Bool)

(declare-fun res!51759 () Bool)

(declare-fun call!10896 () Bool)

(assert (=> b!103704 (= res!51759 call!10896)))

(assert (=> b!103704 (=> (not res!51759) (not e!67545))))

(declare-fun b!103705 () Bool)

(declare-fun res!51753 () Bool)

(assert (=> b!103705 (=> (not res!51753) (not e!67548))))

(assert (=> b!103705 (= res!51753 (contains!824 (map!1282 (_2!1212 lt!52911)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun bm!10893 () Bool)

(assert (=> bm!10893 (= call!10895 call!10896)))

(declare-fun b!103706 () Bool)

(assert (=> b!103706 (= e!67545 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52905)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103707 () Bool)

(declare-fun Unit!3166 () Unit!3150)

(assert (=> b!103707 (= e!67549 Unit!3166)))

(declare-fun bm!10894 () Bool)

(declare-fun c!17871 () Bool)

(assert (=> bm!10894 (= call!10896 (inRange!0 (ite c!17872 (index!3180 lt!52905) (ite c!17871 (index!3179 lt!52931) (index!3182 lt!52931))) (mask!6697 newMap!16)))))

(declare-fun b!103708 () Bool)

(declare-fun lt!52912 () Unit!3150)

(assert (=> b!103708 (= e!67546 lt!52912)))

(assert (=> b!103708 (= lt!52912 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> b!103708 (= lt!52931 call!10897)))

(assert (=> b!103708 (= c!17871 ((_ is MissingZero!258) lt!52931))))

(assert (=> b!103708 e!67544))

(declare-fun b!103709 () Bool)

(declare-fun res!51758 () Bool)

(assert (=> b!103709 (=> (not res!51758) (not e!67548))))

(assert (=> b!103709 (= res!51758 (valid!417 (_2!1212 lt!52911)))))

(assert (= (and d!27839 c!17872) b!103697))

(assert (= (and d!27839 (not c!17872)) b!103708))

(assert (= (and b!103697 res!51761) b!103704))

(assert (= (and b!103704 res!51759) b!103706))

(assert (= (and b!103708 c!17871) b!103702))

(assert (= (and b!103708 (not c!17871)) b!103693))

(assert (= (and b!103702 res!51757) b!103696))

(assert (= (and b!103696 res!51755) b!103695))

(assert (= (and b!103693 c!17873) b!103701))

(assert (= (and b!103693 (not c!17873)) b!103700))

(assert (= (and b!103701 res!51754) b!103698))

(assert (= (and b!103698 res!51756) b!103699))

(assert (= (or b!103702 b!103701) bm!10893))

(assert (= (or b!103695 b!103699) bm!10891))

(assert (= (or b!103704 bm!10893) bm!10894))

(assert (= (or b!103697 b!103708) bm!10892))

(assert (= (and d!27839 c!17874) b!103703))

(assert (= (and d!27839 (not c!17874)) b!103707))

(assert (= (and d!27839 res!51760) b!103709))

(assert (= (and b!103709 res!51758) b!103705))

(assert (= (and b!103705 res!51753) b!103694))

(declare-fun m!114617 () Bool)

(assert (=> d!27839 m!114617))

(assert (=> d!27839 m!114165))

(declare-fun m!114619 () Bool)

(assert (=> d!27839 m!114619))

(declare-fun m!114621 () Bool)

(assert (=> d!27839 m!114621))

(assert (=> d!27839 m!114265))

(assert (=> d!27839 m!114331))

(declare-fun m!114623 () Bool)

(assert (=> d!27839 m!114623))

(assert (=> d!27839 m!114165))

(declare-fun m!114625 () Bool)

(assert (=> d!27839 m!114625))

(declare-fun m!114627 () Bool)

(assert (=> d!27839 m!114627))

(declare-fun m!114629 () Bool)

(assert (=> d!27839 m!114629))

(assert (=> d!27839 m!114165))

(declare-fun m!114631 () Bool)

(assert (=> d!27839 m!114631))

(assert (=> d!27839 m!114331))

(declare-fun m!114633 () Bool)

(assert (=> d!27839 m!114633))

(declare-fun m!114635 () Bool)

(assert (=> d!27839 m!114635))

(declare-fun m!114637 () Bool)

(assert (=> d!27839 m!114637))

(declare-fun m!114639 () Bool)

(assert (=> d!27839 m!114639))

(declare-fun m!114641 () Bool)

(assert (=> d!27839 m!114641))

(declare-fun m!114643 () Bool)

(assert (=> d!27839 m!114643))

(declare-fun m!114645 () Bool)

(assert (=> d!27839 m!114645))

(assert (=> d!27839 m!114165))

(declare-fun m!114647 () Bool)

(assert (=> d!27839 m!114647))

(assert (=> d!27839 m!114331))

(assert (=> d!27839 m!114165))

(declare-fun m!114649 () Bool)

(assert (=> d!27839 m!114649))

(assert (=> d!27839 m!114165))

(assert (=> d!27839 m!114307))

(assert (=> d!27839 m!114165))

(declare-fun m!114651 () Bool)

(assert (=> d!27839 m!114651))

(assert (=> d!27839 m!114621))

(assert (=> d!27839 m!114635))

(declare-fun m!114653 () Bool)

(assert (=> d!27839 m!114653))

(assert (=> d!27839 m!114155))

(assert (=> d!27839 m!114165))

(declare-fun m!114655 () Bool)

(assert (=> d!27839 m!114655))

(declare-fun m!114657 () Bool)

(assert (=> b!103694 m!114657))

(assert (=> b!103694 m!114151))

(assert (=> b!103694 m!114151))

(declare-fun m!114659 () Bool)

(assert (=> b!103694 m!114659))

(declare-fun m!114661 () Bool)

(assert (=> b!103698 m!114661))

(declare-fun m!114663 () Bool)

(assert (=> b!103709 m!114663))

(declare-fun m!114665 () Bool)

(assert (=> bm!10894 m!114665))

(assert (=> b!103708 m!114165))

(assert (=> b!103708 m!114315))

(assert (=> bm!10892 m!114165))

(assert (=> bm!10892 m!114295))

(assert (=> b!103703 m!114165))

(declare-fun m!114667 () Bool)

(assert (=> b!103703 m!114667))

(assert (=> b!103703 m!114331))

(assert (=> b!103703 m!114331))

(assert (=> b!103703 m!114165))

(assert (=> b!103703 m!114649))

(assert (=> bm!10891 m!114165))

(assert (=> bm!10891 m!114307))

(declare-fun m!114669 () Bool)

(assert (=> b!103696 m!114669))

(assert (=> b!103705 m!114657))

(assert (=> b!103705 m!114657))

(assert (=> b!103705 m!114165))

(declare-fun m!114671 () Bool)

(assert (=> b!103705 m!114671))

(declare-fun m!114673 () Bool)

(assert (=> b!103706 m!114673))

(assert (=> b!103697 m!114165))

(assert (=> b!103697 m!114313))

(assert (=> bm!10831 d!27839))

(declare-fun d!27841 () Bool)

(declare-fun e!67552 () Bool)

(assert (=> d!27841 e!67552))

(declare-fun c!17877 () Bool)

(assert (=> d!27841 (= c!17877 (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!27841 true))

(declare-fun _$29!138 () Unit!3150)

(assert (=> d!27841 (= (choose!637 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) _$29!138)))

(declare-fun b!103714 () Bool)

(assert (=> b!103714 (= e!67552 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!103715 () Bool)

(assert (=> b!103715 (= e!67552 (ite (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!27841 c!17877) b!103714))

(assert (= (and d!27841 (not c!17877)) b!103715))

(assert (=> b!103714 m!114165))

(assert (=> b!103714 m!114169))

(assert (=> d!27787 d!27841))

(assert (=> d!27787 d!27807))

(declare-fun d!27843 () Bool)

(assert (=> d!27843 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52937 () Unit!3150)

(declare-fun choose!640 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3150)

(assert (=> d!27843 (= lt!52937 (choose!640 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52670 (zeroValue!2438 newMap!16) lt!52542 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27843 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27843 (= (lemmaChangeZeroKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52670 (zeroValue!2438 newMap!16) lt!52542 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)) lt!52937)))

(declare-fun bs!4250 () Bool)

(assert (= bs!4250 d!27843))

(declare-fun m!114675 () Bool)

(assert (=> bs!4250 m!114675))

(assert (=> bs!4250 m!114331))

(declare-fun m!114677 () Bool)

(assert (=> bs!4250 m!114677))

(assert (=> bs!4250 m!114331))

(declare-fun m!114679 () Bool)

(assert (=> bs!4250 m!114679))

(assert (=> bs!4250 m!114575))

(assert (=> b!103359 d!27843))

(declare-fun d!27845 () Bool)

(declare-fun e!67554 () Bool)

(assert (=> d!27845 e!67554))

(declare-fun res!51762 () Bool)

(assert (=> d!27845 (=> res!51762 e!67554)))

(declare-fun lt!52938 () Bool)

(assert (=> d!27845 (= res!51762 (not lt!52938))))

(declare-fun lt!52939 () Bool)

(assert (=> d!27845 (= lt!52938 lt!52939)))

(declare-fun lt!52940 () Unit!3150)

(declare-fun e!67553 () Unit!3150)

(assert (=> d!27845 (= lt!52940 e!67553)))

(declare-fun c!17878 () Bool)

(assert (=> d!27845 (= c!17878 lt!52939)))

(assert (=> d!27845 (= lt!52939 (containsKey!159 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27845 (= (contains!824 lt!52783 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!52938)))

(declare-fun b!103716 () Bool)

(declare-fun lt!52941 () Unit!3150)

(assert (=> b!103716 (= e!67553 lt!52941)))

(assert (=> b!103716 (= lt!52941 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103716 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103717 () Bool)

(declare-fun Unit!3167 () Unit!3150)

(assert (=> b!103717 (= e!67553 Unit!3167)))

(declare-fun b!103718 () Bool)

(assert (=> b!103718 (= e!67554 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27845 c!17878) b!103716))

(assert (= (and d!27845 (not c!17878)) b!103717))

(assert (= (and d!27845 (not res!51762)) b!103718))

(assert (=> d!27845 m!114339))

(declare-fun m!114681 () Bool)

(assert (=> d!27845 m!114681))

(assert (=> b!103716 m!114339))

(declare-fun m!114683 () Bool)

(assert (=> b!103716 m!114683))

(assert (=> b!103716 m!114339))

(declare-fun m!114685 () Bool)

(assert (=> b!103716 m!114685))

(assert (=> b!103716 m!114685))

(declare-fun m!114687 () Bool)

(assert (=> b!103716 m!114687))

(assert (=> b!103718 m!114339))

(assert (=> b!103718 m!114685))

(assert (=> b!103718 m!114685))

(assert (=> b!103718 m!114687))

(assert (=> b!103529 d!27845))

(declare-fun d!27847 () Bool)

(declare-fun c!17879 () Bool)

(assert (=> d!27847 (= c!17879 (and ((_ is Cons!1607) (toList!800 lt!52764)) (= (_1!1211 (h!2203 (toList!800 lt!52764))) (_1!1211 lt!52540))))))

(declare-fun e!67555 () Option!161)

(assert (=> d!27847 (= (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540)) e!67555)))

(declare-fun b!103720 () Bool)

(declare-fun e!67556 () Option!161)

(assert (=> b!103720 (= e!67555 e!67556)))

(declare-fun c!17880 () Bool)

(assert (=> b!103720 (= c!17880 (and ((_ is Cons!1607) (toList!800 lt!52764)) (not (= (_1!1211 (h!2203 (toList!800 lt!52764))) (_1!1211 lt!52540)))))))

(declare-fun b!103721 () Bool)

(assert (=> b!103721 (= e!67556 (getValueByKey!155 (t!5673 (toList!800 lt!52764)) (_1!1211 lt!52540)))))

(declare-fun b!103722 () Bool)

(assert (=> b!103722 (= e!67556 None!159)))

(declare-fun b!103719 () Bool)

(assert (=> b!103719 (= e!67555 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52764)))))))

(assert (= (and d!27847 c!17879) b!103719))

(assert (= (and d!27847 (not c!17879)) b!103720))

(assert (= (and b!103720 c!17880) b!103721))

(assert (= (and b!103720 (not c!17880)) b!103722))

(declare-fun m!114689 () Bool)

(assert (=> b!103721 m!114689))

(assert (=> b!103498 d!27847))

(declare-fun d!27849 () Bool)

(declare-fun res!51763 () Bool)

(declare-fun e!67557 () Bool)

(assert (=> d!27849 (=> res!51763 e!67557)))

(assert (=> d!27849 (= res!51763 (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27849 (= (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!67557)))

(declare-fun b!103723 () Bool)

(declare-fun e!67558 () Bool)

(assert (=> b!103723 (= e!67557 e!67558)))

(declare-fun res!51764 () Bool)

(assert (=> b!103723 (=> (not res!51764) (not e!67558))))

(assert (=> b!103723 (= res!51764 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103724 () Bool)

(assert (=> b!103724 (= e!67558 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!27849 (not res!51763)) b!103723))

(assert (= (and b!103723 res!51764) b!103724))

(declare-fun m!114691 () Bool)

(assert (=> d!27849 m!114691))

(assert (=> b!103724 m!114165))

(declare-fun m!114693 () Bool)

(assert (=> b!103724 m!114693))

(assert (=> b!103470 d!27849))

(declare-fun d!27851 () Bool)

(declare-fun e!67560 () Bool)

(assert (=> d!27851 e!67560))

(declare-fun res!51765 () Bool)

(assert (=> d!27851 (=> res!51765 e!67560)))

(declare-fun lt!52942 () Bool)

(assert (=> d!27851 (= res!51765 (not lt!52942))))

(declare-fun lt!52943 () Bool)

(assert (=> d!27851 (= lt!52942 lt!52943)))

(declare-fun lt!52944 () Unit!3150)

(declare-fun e!67559 () Unit!3150)

(assert (=> d!27851 (= lt!52944 e!67559)))

(declare-fun c!17881 () Bool)

(assert (=> d!27851 (= c!17881 lt!52943)))

(assert (=> d!27851 (= lt!52943 (containsKey!159 (toList!800 lt!52793) (_1!1211 lt!52538)))))

(assert (=> d!27851 (= (contains!824 lt!52793 (_1!1211 lt!52538)) lt!52942)))

(declare-fun b!103725 () Bool)

(declare-fun lt!52945 () Unit!3150)

(assert (=> b!103725 (= e!67559 lt!52945)))

(assert (=> b!103725 (= lt!52945 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52793) (_1!1211 lt!52538)))))

(assert (=> b!103725 (isDefined!108 (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538)))))

(declare-fun b!103726 () Bool)

(declare-fun Unit!3168 () Unit!3150)

(assert (=> b!103726 (= e!67559 Unit!3168)))

(declare-fun b!103727 () Bool)

(assert (=> b!103727 (= e!67560 (isDefined!108 (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538))))))

(assert (= (and d!27851 c!17881) b!103725))

(assert (= (and d!27851 (not c!17881)) b!103726))

(assert (= (and d!27851 (not res!51765)) b!103727))

(declare-fun m!114695 () Bool)

(assert (=> d!27851 m!114695))

(declare-fun m!114697 () Bool)

(assert (=> b!103725 m!114697))

(assert (=> b!103725 m!114481))

(assert (=> b!103725 m!114481))

(declare-fun m!114699 () Bool)

(assert (=> b!103725 m!114699))

(assert (=> b!103727 m!114481))

(assert (=> b!103727 m!114481))

(assert (=> b!103727 m!114699))

(assert (=> d!27805 d!27851))

(declare-fun d!27853 () Bool)

(declare-fun c!17882 () Bool)

(assert (=> d!27853 (= c!17882 (and ((_ is Cons!1607) lt!52794) (= (_1!1211 (h!2203 lt!52794)) (_1!1211 lt!52538))))))

(declare-fun e!67561 () Option!161)

(assert (=> d!27853 (= (getValueByKey!155 lt!52794 (_1!1211 lt!52538)) e!67561)))

(declare-fun b!103729 () Bool)

(declare-fun e!67562 () Option!161)

(assert (=> b!103729 (= e!67561 e!67562)))

(declare-fun c!17883 () Bool)

(assert (=> b!103729 (= c!17883 (and ((_ is Cons!1607) lt!52794) (not (= (_1!1211 (h!2203 lt!52794)) (_1!1211 lt!52538)))))))

(declare-fun b!103730 () Bool)

(assert (=> b!103730 (= e!67562 (getValueByKey!155 (t!5673 lt!52794) (_1!1211 lt!52538)))))

(declare-fun b!103731 () Bool)

(assert (=> b!103731 (= e!67562 None!159)))

(declare-fun b!103728 () Bool)

(assert (=> b!103728 (= e!67561 (Some!160 (_2!1211 (h!2203 lt!52794))))))

(assert (= (and d!27853 c!17882) b!103728))

(assert (= (and d!27853 (not c!17882)) b!103729))

(assert (= (and b!103729 c!17883) b!103730))

(assert (= (and b!103729 (not c!17883)) b!103731))

(declare-fun m!114701 () Bool)

(assert (=> b!103730 m!114701))

(assert (=> d!27805 d!27853))

(declare-fun d!27855 () Bool)

(assert (=> d!27855 (= (getValueByKey!155 lt!52794 (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538)))))

(declare-fun lt!52946 () Unit!3150)

(assert (=> d!27855 (= lt!52946 (choose!639 lt!52794 (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun e!67563 () Bool)

(assert (=> d!27855 e!67563))

(declare-fun res!51766 () Bool)

(assert (=> d!27855 (=> (not res!51766) (not e!67563))))

(assert (=> d!27855 (= res!51766 (isStrictlySorted!308 lt!52794))))

(assert (=> d!27855 (= (lemmaContainsTupThenGetReturnValue!71 lt!52794 (_1!1211 lt!52538) (_2!1211 lt!52538)) lt!52946)))

(declare-fun b!103732 () Bool)

(declare-fun res!51767 () Bool)

(assert (=> b!103732 (=> (not res!51767) (not e!67563))))

(assert (=> b!103732 (= res!51767 (containsKey!159 lt!52794 (_1!1211 lt!52538)))))

(declare-fun b!103733 () Bool)

(assert (=> b!103733 (= e!67563 (contains!826 lt!52794 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(assert (= (and d!27855 res!51766) b!103732))

(assert (= (and b!103732 res!51767) b!103733))

(assert (=> d!27855 m!114475))

(declare-fun m!114703 () Bool)

(assert (=> d!27855 m!114703))

(declare-fun m!114705 () Bool)

(assert (=> d!27855 m!114705))

(declare-fun m!114707 () Bool)

(assert (=> b!103732 m!114707))

(declare-fun m!114709 () Bool)

(assert (=> b!103733 m!114709))

(assert (=> d!27805 d!27855))

(declare-fun b!103734 () Bool)

(declare-fun e!67568 () List!1611)

(declare-fun e!67564 () List!1611)

(assert (=> b!103734 (= e!67568 e!67564)))

(declare-fun c!17885 () Bool)

(assert (=> b!103734 (= c!17885 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 lt!52540))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52540)))) (_1!1211 lt!52538))))))

(declare-fun b!103735 () Bool)

(declare-fun call!10899 () List!1611)

(assert (=> b!103735 (= e!67564 call!10899)))

(declare-fun bm!10895 () Bool)

(declare-fun call!10900 () List!1611)

(assert (=> bm!10895 (= call!10899 call!10900)))

(declare-fun c!17887 () Bool)

(declare-fun b!103737 () Bool)

(declare-fun e!67565 () List!1611)

(assert (=> b!103737 (= e!67565 (ite c!17885 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))) (ite c!17887 (Cons!1607 (h!2203 (toList!800 (+!141 lt!52539 lt!52540))) (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) Nil!1608)))))

(declare-fun bm!10896 () Bool)

(declare-fun call!10898 () List!1611)

(assert (=> bm!10896 (= call!10898 call!10899)))

(declare-fun b!103738 () Bool)

(assert (=> b!103738 (= e!67565 (insertStrictlySorted!74 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))) (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun c!17886 () Bool)

(declare-fun bm!10897 () Bool)

(assert (=> bm!10897 (= call!10900 ($colon$colon!80 e!67565 (ite c!17886 (h!2203 (toList!800 (+!141 lt!52539 lt!52540))) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538)))))))

(declare-fun c!17884 () Bool)

(assert (=> bm!10897 (= c!17884 c!17886)))

(declare-fun b!103739 () Bool)

(declare-fun e!67566 () List!1611)

(assert (=> b!103739 (= e!67566 call!10898)))

(declare-fun b!103740 () Bool)

(assert (=> b!103740 (= c!17887 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 lt!52540))) (bvsgt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52540)))) (_1!1211 lt!52538))))))

(assert (=> b!103740 (= e!67564 e!67566)))

(declare-fun b!103741 () Bool)

(assert (=> b!103741 (= e!67568 call!10900)))

(declare-fun d!27857 () Bool)

(declare-fun e!67567 () Bool)

(assert (=> d!27857 e!67567))

(declare-fun res!51768 () Bool)

(assert (=> d!27857 (=> (not res!51768) (not e!67567))))

(declare-fun lt!52947 () List!1611)

(assert (=> d!27857 (= res!51768 (isStrictlySorted!308 lt!52947))))

(assert (=> d!27857 (= lt!52947 e!67568)))

(assert (=> d!27857 (= c!17886 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 lt!52540))) (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52540)))) (_1!1211 lt!52538))))))

(assert (=> d!27857 (isStrictlySorted!308 (toList!800 (+!141 lt!52539 lt!52540)))))

(assert (=> d!27857 (= (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 lt!52540)) (_1!1211 lt!52538) (_2!1211 lt!52538)) lt!52947)))

(declare-fun b!103736 () Bool)

(assert (=> b!103736 (= e!67566 call!10898)))

(declare-fun b!103742 () Bool)

(assert (=> b!103742 (= e!67567 (contains!826 lt!52947 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!103743 () Bool)

(declare-fun res!51769 () Bool)

(assert (=> b!103743 (=> (not res!51769) (not e!67567))))

(assert (=> b!103743 (= res!51769 (containsKey!159 lt!52947 (_1!1211 lt!52538)))))

(assert (= (and d!27857 c!17886) b!103741))

(assert (= (and d!27857 (not c!17886)) b!103734))

(assert (= (and b!103734 c!17885) b!103735))

(assert (= (and b!103734 (not c!17885)) b!103740))

(assert (= (and b!103740 c!17887) b!103736))

(assert (= (and b!103740 (not c!17887)) b!103739))

(assert (= (or b!103736 b!103739) bm!10896))

(assert (= (or b!103735 bm!10896) bm!10895))

(assert (= (or b!103741 bm!10895) bm!10897))

(assert (= (and bm!10897 c!17884) b!103738))

(assert (= (and bm!10897 (not c!17884)) b!103737))

(assert (= (and d!27857 res!51768) b!103743))

(assert (= (and b!103743 res!51769) b!103742))

(declare-fun m!114711 () Bool)

(assert (=> b!103742 m!114711))

(declare-fun m!114713 () Bool)

(assert (=> b!103738 m!114713))

(declare-fun m!114715 () Bool)

(assert (=> bm!10897 m!114715))

(declare-fun m!114717 () Bool)

(assert (=> d!27857 m!114717))

(declare-fun m!114719 () Bool)

(assert (=> d!27857 m!114719))

(declare-fun m!114721 () Bool)

(assert (=> b!103743 m!114721))

(assert (=> d!27805 d!27857))

(declare-fun d!27859 () Bool)

(declare-fun e!67570 () Bool)

(assert (=> d!27859 e!67570))

(declare-fun res!51770 () Bool)

(assert (=> d!27859 (=> res!51770 e!67570)))

(declare-fun lt!52948 () Bool)

(assert (=> d!27859 (= res!51770 (not lt!52948))))

(declare-fun lt!52949 () Bool)

(assert (=> d!27859 (= lt!52948 lt!52949)))

(declare-fun lt!52950 () Unit!3150)

(declare-fun e!67569 () Unit!3150)

(assert (=> d!27859 (= lt!52950 e!67569)))

(declare-fun c!17888 () Bool)

(assert (=> d!27859 (= c!17888 lt!52949)))

(assert (=> d!27859 (= lt!52949 (containsKey!159 (toList!800 lt!52789) (_1!1211 lt!52540)))))

(assert (=> d!27859 (= (contains!824 lt!52789 (_1!1211 lt!52540)) lt!52948)))

(declare-fun b!103744 () Bool)

(declare-fun lt!52951 () Unit!3150)

(assert (=> b!103744 (= e!67569 lt!52951)))

(assert (=> b!103744 (= lt!52951 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52789) (_1!1211 lt!52540)))))

(assert (=> b!103744 (isDefined!108 (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540)))))

(declare-fun b!103745 () Bool)

(declare-fun Unit!3169 () Unit!3150)

(assert (=> b!103745 (= e!67569 Unit!3169)))

(declare-fun b!103746 () Bool)

(assert (=> b!103746 (= e!67570 (isDefined!108 (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540))))))

(assert (= (and d!27859 c!17888) b!103744))

(assert (= (and d!27859 (not c!17888)) b!103745))

(assert (= (and d!27859 (not res!51770)) b!103746))

(declare-fun m!114723 () Bool)

(assert (=> d!27859 m!114723))

(declare-fun m!114725 () Bool)

(assert (=> b!103744 m!114725))

(assert (=> b!103744 m!114469))

(assert (=> b!103744 m!114469))

(declare-fun m!114727 () Bool)

(assert (=> b!103744 m!114727))

(assert (=> b!103746 m!114469))

(assert (=> b!103746 m!114469))

(assert (=> b!103746 m!114727))

(assert (=> d!27803 d!27859))

(declare-fun d!27861 () Bool)

(declare-fun c!17889 () Bool)

(assert (=> d!27861 (= c!17889 (and ((_ is Cons!1607) lt!52790) (= (_1!1211 (h!2203 lt!52790)) (_1!1211 lt!52540))))))

(declare-fun e!67571 () Option!161)

(assert (=> d!27861 (= (getValueByKey!155 lt!52790 (_1!1211 lt!52540)) e!67571)))

(declare-fun b!103748 () Bool)

(declare-fun e!67572 () Option!161)

(assert (=> b!103748 (= e!67571 e!67572)))

(declare-fun c!17890 () Bool)

(assert (=> b!103748 (= c!17890 (and ((_ is Cons!1607) lt!52790) (not (= (_1!1211 (h!2203 lt!52790)) (_1!1211 lt!52540)))))))

(declare-fun b!103749 () Bool)

(assert (=> b!103749 (= e!67572 (getValueByKey!155 (t!5673 lt!52790) (_1!1211 lt!52540)))))

(declare-fun b!103750 () Bool)

(assert (=> b!103750 (= e!67572 None!159)))

(declare-fun b!103747 () Bool)

(assert (=> b!103747 (= e!67571 (Some!160 (_2!1211 (h!2203 lt!52790))))))

(assert (= (and d!27861 c!17889) b!103747))

(assert (= (and d!27861 (not c!17889)) b!103748))

(assert (= (and b!103748 c!17890) b!103749))

(assert (= (and b!103748 (not c!17890)) b!103750))

(declare-fun m!114729 () Bool)

(assert (=> b!103749 m!114729))

(assert (=> d!27803 d!27861))

(declare-fun d!27863 () Bool)

(assert (=> d!27863 (= (getValueByKey!155 lt!52790 (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540)))))

(declare-fun lt!52952 () Unit!3150)

(assert (=> d!27863 (= lt!52952 (choose!639 lt!52790 (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(declare-fun e!67573 () Bool)

(assert (=> d!27863 e!67573))

(declare-fun res!51771 () Bool)

(assert (=> d!27863 (=> (not res!51771) (not e!67573))))

(assert (=> d!27863 (= res!51771 (isStrictlySorted!308 lt!52790))))

(assert (=> d!27863 (= (lemmaContainsTupThenGetReturnValue!71 lt!52790 (_1!1211 lt!52540) (_2!1211 lt!52540)) lt!52952)))

(declare-fun b!103751 () Bool)

(declare-fun res!51772 () Bool)

(assert (=> b!103751 (=> (not res!51772) (not e!67573))))

(assert (=> b!103751 (= res!51772 (containsKey!159 lt!52790 (_1!1211 lt!52540)))))

(declare-fun b!103752 () Bool)

(assert (=> b!103752 (= e!67573 (contains!826 lt!52790 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(assert (= (and d!27863 res!51771) b!103751))

(assert (= (and b!103751 res!51772) b!103752))

(assert (=> d!27863 m!114463))

(declare-fun m!114731 () Bool)

(assert (=> d!27863 m!114731))

(declare-fun m!114733 () Bool)

(assert (=> d!27863 m!114733))

(declare-fun m!114735 () Bool)

(assert (=> b!103751 m!114735))

(declare-fun m!114737 () Bool)

(assert (=> b!103752 m!114737))

(assert (=> d!27803 d!27863))

(declare-fun b!103753 () Bool)

(declare-fun e!67578 () List!1611)

(declare-fun e!67574 () List!1611)

(assert (=> b!103753 (= e!67578 e!67574)))

(declare-fun c!17892 () Bool)

(assert (=> b!103753 (= c!17892 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 lt!52538))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52538)))) (_1!1211 lt!52540))))))

(declare-fun b!103754 () Bool)

(declare-fun call!10902 () List!1611)

(assert (=> b!103754 (= e!67574 call!10902)))

(declare-fun bm!10898 () Bool)

(declare-fun call!10903 () List!1611)

(assert (=> bm!10898 (= call!10902 call!10903)))

(declare-fun b!103756 () Bool)

(declare-fun c!17894 () Bool)

(declare-fun e!67575 () List!1611)

(assert (=> b!103756 (= e!67575 (ite c!17892 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))) (ite c!17894 (Cons!1607 (h!2203 (toList!800 (+!141 lt!52539 lt!52538))) (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) Nil!1608)))))

(declare-fun bm!10899 () Bool)

(declare-fun call!10901 () List!1611)

(assert (=> bm!10899 (= call!10901 call!10902)))

(declare-fun b!103757 () Bool)

(assert (=> b!103757 (= e!67575 (insertStrictlySorted!74 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))) (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(declare-fun c!17893 () Bool)

(declare-fun bm!10900 () Bool)

(assert (=> bm!10900 (= call!10903 ($colon$colon!80 e!67575 (ite c!17893 (h!2203 (toList!800 (+!141 lt!52539 lt!52538))) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540)))))))

(declare-fun c!17891 () Bool)

(assert (=> bm!10900 (= c!17891 c!17893)))

(declare-fun b!103758 () Bool)

(declare-fun e!67576 () List!1611)

(assert (=> b!103758 (= e!67576 call!10901)))

(declare-fun b!103759 () Bool)

(assert (=> b!103759 (= c!17894 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 lt!52538))) (bvsgt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52538)))) (_1!1211 lt!52540))))))

(assert (=> b!103759 (= e!67574 e!67576)))

(declare-fun b!103760 () Bool)

(assert (=> b!103760 (= e!67578 call!10903)))

(declare-fun d!27865 () Bool)

(declare-fun e!67577 () Bool)

(assert (=> d!27865 e!67577))

(declare-fun res!51773 () Bool)

(assert (=> d!27865 (=> (not res!51773) (not e!67577))))

(declare-fun lt!52953 () List!1611)

(assert (=> d!27865 (= res!51773 (isStrictlySorted!308 lt!52953))))

(assert (=> d!27865 (= lt!52953 e!67578)))

(assert (=> d!27865 (= c!17893 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 lt!52538))) (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52538)))) (_1!1211 lt!52540))))))

(assert (=> d!27865 (isStrictlySorted!308 (toList!800 (+!141 lt!52539 lt!52538)))))

(assert (=> d!27865 (= (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 lt!52538)) (_1!1211 lt!52540) (_2!1211 lt!52540)) lt!52953)))

(declare-fun b!103755 () Bool)

(assert (=> b!103755 (= e!67576 call!10901)))

(declare-fun b!103761 () Bool)

(assert (=> b!103761 (= e!67577 (contains!826 lt!52953 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!103762 () Bool)

(declare-fun res!51774 () Bool)

(assert (=> b!103762 (=> (not res!51774) (not e!67577))))

(assert (=> b!103762 (= res!51774 (containsKey!159 lt!52953 (_1!1211 lt!52540)))))

(assert (= (and d!27865 c!17893) b!103760))

(assert (= (and d!27865 (not c!17893)) b!103753))

(assert (= (and b!103753 c!17892) b!103754))

(assert (= (and b!103753 (not c!17892)) b!103759))

(assert (= (and b!103759 c!17894) b!103755))

(assert (= (and b!103759 (not c!17894)) b!103758))

(assert (= (or b!103755 b!103758) bm!10899))

(assert (= (or b!103754 bm!10899) bm!10898))

(assert (= (or b!103760 bm!10898) bm!10900))

(assert (= (and bm!10900 c!17891) b!103757))

(assert (= (and bm!10900 (not c!17891)) b!103756))

(assert (= (and d!27865 res!51773) b!103762))

(assert (= (and b!103762 res!51774) b!103761))

(declare-fun m!114739 () Bool)

(assert (=> b!103761 m!114739))

(declare-fun m!114741 () Bool)

(assert (=> b!103757 m!114741))

(declare-fun m!114743 () Bool)

(assert (=> bm!10900 m!114743))

(declare-fun m!114745 () Bool)

(assert (=> d!27865 m!114745))

(declare-fun m!114747 () Bool)

(assert (=> d!27865 m!114747))

(declare-fun m!114749 () Bool)

(assert (=> b!103762 m!114749))

(assert (=> d!27803 d!27865))

(declare-fun d!27867 () Bool)

(assert (=> d!27867 (= (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103491 d!27867))

(declare-fun b!103763 () Bool)

(declare-fun e!67585 () Bool)

(declare-fun e!67584 () Bool)

(assert (=> b!103763 (= e!67585 e!67584)))

(declare-fun c!17895 () Bool)

(declare-fun e!67579 () Bool)

(assert (=> b!103763 (= c!17895 e!67579)))

(declare-fun res!51776 () Bool)

(assert (=> b!103763 (=> (not res!51776) (not e!67579))))

(assert (=> b!103763 (= res!51776 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103764 () Bool)

(assert (=> b!103764 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!103764 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun lt!52956 () ListLongMap!1569)

(declare-fun e!67580 () Bool)

(assert (=> b!103764 (= e!67580 (= (apply!97 lt!52956 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!103765 () Bool)

(declare-fun e!67582 () Bool)

(assert (=> b!103765 (= e!67582 (= lt!52956 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103766 () Bool)

(declare-fun e!67581 () ListLongMap!1569)

(declare-fun e!67583 () ListLongMap!1569)

(assert (=> b!103766 (= e!67581 e!67583)))

(declare-fun c!17896 () Bool)

(assert (=> b!103766 (= c!17896 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!103767 () Bool)

(declare-fun call!10904 () ListLongMap!1569)

(assert (=> b!103767 (= e!67583 call!10904)))

(declare-fun bm!10901 () Bool)

(assert (=> bm!10901 (= call!10904 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun d!27869 () Bool)

(assert (=> d!27869 e!67585))

(declare-fun res!51777 () Bool)

(assert (=> d!27869 (=> (not res!51777) (not e!67585))))

(assert (=> d!27869 (= res!51777 (not (contains!824 lt!52956 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27869 (= lt!52956 e!67581)))

(declare-fun c!17898 () Bool)

(assert (=> d!27869 (= c!17898 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27869 (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27869 (= (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) lt!52956)))

(declare-fun b!103768 () Bool)

(assert (=> b!103768 (= e!67584 e!67580)))

(assert (=> b!103768 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun res!51775 () Bool)

(assert (=> b!103768 (= res!51775 (contains!824 lt!52956 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103768 (=> (not res!51775) (not e!67580))))

(declare-fun b!103769 () Bool)

(declare-fun lt!52957 () Unit!3150)

(declare-fun lt!52959 () Unit!3150)

(assert (=> b!103769 (= lt!52957 lt!52959)))

(declare-fun lt!52960 () V!3211)

(declare-fun lt!52958 () (_ BitVec 64))

(declare-fun lt!52955 () ListLongMap!1569)

(declare-fun lt!52954 () (_ BitVec 64))

(assert (=> b!103769 (not (contains!824 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960)) lt!52958))))

(assert (=> b!103769 (= lt!52959 (addStillNotContains!45 lt!52955 lt!52954 lt!52960 lt!52958))))

(assert (=> b!103769 (= lt!52958 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!103769 (= lt!52960 (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!103769 (= lt!52954 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!103769 (= lt!52955 call!10904)))

(assert (=> b!103769 (= e!67583 (+!141 call!10904 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!103770 () Bool)

(assert (=> b!103770 (= e!67584 e!67582)))

(declare-fun c!17897 () Bool)

(assert (=> b!103770 (= c!17897 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!103771 () Bool)

(assert (=> b!103771 (= e!67582 (isEmpty!367 lt!52956))))

(declare-fun b!103772 () Bool)

(assert (=> b!103772 (= e!67581 (ListLongMap!1570 Nil!1608))))

(declare-fun b!103773 () Bool)

(assert (=> b!103773 (= e!67579 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!103773 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!103774 () Bool)

(declare-fun res!51778 () Bool)

(assert (=> b!103774 (=> (not res!51778) (not e!67585))))

(assert (=> b!103774 (= res!51778 (not (contains!824 lt!52956 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27869 c!17898) b!103772))

(assert (= (and d!27869 (not c!17898)) b!103766))

(assert (= (and b!103766 c!17896) b!103769))

(assert (= (and b!103766 (not c!17896)) b!103767))

(assert (= (or b!103769 b!103767) bm!10901))

(assert (= (and d!27869 res!51777) b!103774))

(assert (= (and b!103774 res!51778) b!103763))

(assert (= (and b!103763 res!51776) b!103773))

(assert (= (and b!103763 c!17895) b!103768))

(assert (= (and b!103763 (not c!17895)) b!103770))

(assert (= (and b!103768 res!51775) b!103764))

(assert (= (and b!103770 c!17897) b!103765))

(assert (= (and b!103770 (not c!17897)) b!103771))

(declare-fun b_lambda!4637 () Bool)

(assert (=> (not b_lambda!4637) (not b!103764)))

(assert (=> b!103764 t!5669))

(declare-fun b_and!6419 () Bool)

(assert (= b_and!6415 (and (=> t!5669 result!3421) b_and!6419)))

(assert (=> b!103764 t!5671))

(declare-fun b_and!6421 () Bool)

(assert (= b_and!6417 (and (=> t!5671 result!3425) b_and!6421)))

(declare-fun b_lambda!4639 () Bool)

(assert (=> (not b_lambda!4639) (not b!103769)))

(assert (=> b!103769 t!5669))

(declare-fun b_and!6423 () Bool)

(assert (= b_and!6419 (and (=> t!5669 result!3421) b_and!6423)))

(assert (=> b!103769 t!5671))

(declare-fun b_and!6425 () Bool)

(assert (= b_and!6421 (and (=> t!5671 result!3425) b_and!6425)))

(declare-fun m!114751 () Bool)

(assert (=> b!103769 m!114751))

(declare-fun m!114753 () Bool)

(assert (=> b!103769 m!114753))

(declare-fun m!114755 () Bool)

(assert (=> b!103769 m!114755))

(assert (=> b!103769 m!114197))

(declare-fun m!114757 () Bool)

(assert (=> b!103769 m!114757))

(declare-fun m!114759 () Bool)

(assert (=> b!103769 m!114759))

(assert (=> b!103769 m!114755))

(assert (=> b!103769 m!114759))

(declare-fun m!114761 () Bool)

(assert (=> b!103769 m!114761))

(assert (=> b!103769 m!114691))

(assert (=> b!103769 m!114197))

(declare-fun m!114763 () Bool)

(assert (=> b!103774 m!114763))

(assert (=> b!103773 m!114691))

(assert (=> b!103773 m!114691))

(declare-fun m!114765 () Bool)

(assert (=> b!103773 m!114765))

(assert (=> b!103768 m!114691))

(assert (=> b!103768 m!114691))

(declare-fun m!114767 () Bool)

(assert (=> b!103768 m!114767))

(assert (=> b!103766 m!114691))

(assert (=> b!103766 m!114691))

(assert (=> b!103766 m!114765))

(declare-fun m!114769 () Bool)

(assert (=> b!103765 m!114769))

(assert (=> b!103764 m!114755))

(assert (=> b!103764 m!114197))

(assert (=> b!103764 m!114757))

(assert (=> b!103764 m!114691))

(declare-fun m!114771 () Bool)

(assert (=> b!103764 m!114771))

(assert (=> b!103764 m!114755))

(assert (=> b!103764 m!114691))

(assert (=> b!103764 m!114197))

(declare-fun m!114773 () Bool)

(assert (=> b!103771 m!114773))

(declare-fun m!114775 () Bool)

(assert (=> d!27869 m!114775))

(assert (=> d!27869 m!114181))

(assert (=> bm!10901 m!114769))

(assert (=> b!103526 d!27869))

(declare-fun b!103775 () Bool)

(declare-fun e!67594 () Bool)

(declare-fun e!67595 () Bool)

(assert (=> b!103775 (= e!67594 e!67595)))

(declare-fun res!51787 () Bool)

(declare-fun call!10906 () Bool)

(assert (=> b!103775 (= res!51787 call!10906)))

(assert (=> b!103775 (=> (not res!51787) (not e!67595))))

(declare-fun bm!10902 () Bool)

(declare-fun call!10907 () ListLongMap!1569)

(declare-fun call!10911 () ListLongMap!1569)

(assert (=> bm!10902 (= call!10907 call!10911)))

(declare-fun bm!10903 () Bool)

(declare-fun call!10909 () ListLongMap!1569)

(assert (=> bm!10903 (= call!10909 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10904 () Bool)

(declare-fun call!10905 () Bool)

(declare-fun lt!52972 () ListLongMap!1569)

(assert (=> bm!10904 (= call!10905 (contains!824 lt!52972 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10905 () Bool)

(declare-fun call!10908 () ListLongMap!1569)

(declare-fun call!10910 () ListLongMap!1569)

(assert (=> bm!10905 (= call!10908 call!10910)))

(declare-fun b!103776 () Bool)

(declare-fun e!67587 () ListLongMap!1569)

(assert (=> b!103776 (= e!67587 (+!141 call!10911 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))

(declare-fun b!103777 () Bool)

(assert (=> b!103777 (= e!67594 (not call!10906))))

(declare-fun b!103778 () Bool)

(declare-fun e!67589 () ListLongMap!1569)

(assert (=> b!103778 (= e!67589 call!10907)))

(declare-fun b!103779 () Bool)

(declare-fun e!67588 () Bool)

(declare-fun e!67592 () Bool)

(assert (=> b!103779 (= e!67588 e!67592)))

(declare-fun res!51783 () Bool)

(assert (=> b!103779 (=> (not res!51783) (not e!67592))))

(assert (=> b!103779 (= res!51783 (contains!824 lt!52972 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103779 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10906 () Bool)

(assert (=> bm!10906 (= call!10910 call!10909)))

(declare-fun b!103780 () Bool)

(declare-fun e!67590 () Unit!3150)

(declare-fun lt!52967 () Unit!3150)

(assert (=> b!103780 (= e!67590 lt!52967)))

(declare-fun lt!52966 () ListLongMap!1569)

(assert (=> b!103780 (= lt!52966 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52976 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52976 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52975 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52975 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52970 () Unit!3150)

(assert (=> b!103780 (= lt!52970 (addStillContains!73 lt!52966 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) lt!52975))))

(assert (=> b!103780 (contains!824 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!52975)))

(declare-fun lt!52979 () Unit!3150)

(assert (=> b!103780 (= lt!52979 lt!52970)))

(declare-fun lt!52969 () ListLongMap!1569)

(assert (=> b!103780 (= lt!52969 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52973 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52973 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52978 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52978 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52981 () Unit!3150)

(assert (=> b!103780 (= lt!52981 (addApplyDifferent!73 lt!52969 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) lt!52978))))

(assert (=> b!103780 (= (apply!97 (+!141 lt!52969 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!52978) (apply!97 lt!52969 lt!52978))))

(declare-fun lt!52963 () Unit!3150)

(assert (=> b!103780 (= lt!52963 lt!52981)))

(declare-fun lt!52962 () ListLongMap!1569)

(assert (=> b!103780 (= lt!52962 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52971 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52971 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52974 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52974 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52982 () Unit!3150)

(assert (=> b!103780 (= lt!52982 (addApplyDifferent!73 lt!52962 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) lt!52974))))

(assert (=> b!103780 (= (apply!97 (+!141 lt!52962 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!52974) (apply!97 lt!52962 lt!52974))))

(declare-fun lt!52980 () Unit!3150)

(assert (=> b!103780 (= lt!52980 lt!52982)))

(declare-fun lt!52961 () ListLongMap!1569)

(assert (=> b!103780 (= lt!52961 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52968 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52968 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!52977 () (_ BitVec 64))

(assert (=> b!103780 (= lt!52977 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103780 (= lt!52967 (addApplyDifferent!73 lt!52961 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) lt!52977))))

(assert (=> b!103780 (= (apply!97 (+!141 lt!52961 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!52977) (apply!97 lt!52961 lt!52977))))

(declare-fun b!103781 () Bool)

(declare-fun e!67586 () Bool)

(assert (=> b!103781 (= e!67586 (not call!10905))))

(declare-fun b!103782 () Bool)

(declare-fun e!67598 () ListLongMap!1569)

(assert (=> b!103782 (= e!67598 call!10907)))

(declare-fun b!103783 () Bool)

(assert (=> b!103783 (= e!67598 call!10908)))

(declare-fun c!17899 () Bool)

(declare-fun b!103784 () Bool)

(assert (=> b!103784 (= c!17899 (and (not (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103784 (= e!67589 e!67598)))

(declare-fun b!103785 () Bool)

(declare-fun e!67597 () Bool)

(assert (=> b!103785 (= e!67586 e!67597)))

(declare-fun res!51781 () Bool)

(assert (=> b!103785 (= res!51781 call!10905)))

(assert (=> b!103785 (=> (not res!51781) (not e!67597))))

(declare-fun b!103786 () Bool)

(assert (=> b!103786 (= e!67592 (= (apply!97 lt!52972 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103786 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668))))))

(assert (=> b!103786 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103787 () Bool)

(declare-fun res!51785 () Bool)

(declare-fun e!67596 () Bool)

(assert (=> b!103787 (=> (not res!51785) (not e!67596))))

(assert (=> b!103787 (= res!51785 e!67594)))

(declare-fun c!17902 () Bool)

(assert (=> b!103787 (= c!17902 (not (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!27871 () Bool)

(assert (=> d!27871 e!67596))

(declare-fun res!51786 () Bool)

(assert (=> d!27871 (=> (not res!51786) (not e!67596))))

(assert (=> d!27871 (= res!51786 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!52964 () ListLongMap!1569)

(assert (=> d!27871 (= lt!52972 lt!52964)))

(declare-fun lt!52965 () Unit!3150)

(assert (=> d!27871 (= lt!52965 e!67590)))

(declare-fun c!17903 () Bool)

(declare-fun e!67591 () Bool)

(assert (=> d!27871 (= c!17903 e!67591)))

(declare-fun res!51784 () Bool)

(assert (=> d!27871 (=> (not res!51784) (not e!67591))))

(assert (=> d!27871 (= res!51784 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27871 (= lt!52964 e!67587)))

(declare-fun c!17900 () Bool)

(assert (=> d!27871 (= c!17900 (and (not (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27871 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27871 (= (getCurrentListMap!487 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!52972)))

(declare-fun c!17904 () Bool)

(declare-fun bm!10907 () Bool)

(assert (=> bm!10907 (= call!10911 (+!141 (ite c!17900 call!10909 (ite c!17904 call!10910 call!10908)) (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(declare-fun b!103788 () Bool)

(assert (=> b!103788 (= e!67595 (= (apply!97 lt!52972 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))

(declare-fun b!103789 () Bool)

(assert (=> b!103789 (= e!67596 e!67586)))

(declare-fun c!17901 () Bool)

(assert (=> b!103789 (= c!17901 (not (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103790 () Bool)

(assert (=> b!103790 (= e!67591 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103791 () Bool)

(declare-fun res!51780 () Bool)

(assert (=> b!103791 (=> (not res!51780) (not e!67596))))

(assert (=> b!103791 (= res!51780 e!67588)))

(declare-fun res!51782 () Bool)

(assert (=> b!103791 (=> res!51782 e!67588)))

(declare-fun e!67593 () Bool)

(assert (=> b!103791 (= res!51782 (not e!67593))))

(declare-fun res!51779 () Bool)

(assert (=> b!103791 (=> (not res!51779) (not e!67593))))

(assert (=> b!103791 (= res!51779 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103792 () Bool)

(assert (=> b!103792 (= e!67587 e!67589)))

(assert (=> b!103792 (= c!17904 (and (not (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103793 () Bool)

(declare-fun Unit!3170 () Unit!3150)

(assert (=> b!103793 (= e!67590 Unit!3170)))

(declare-fun b!103794 () Bool)

(assert (=> b!103794 (= e!67597 (= (apply!97 lt!52972 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))

(declare-fun b!103795 () Bool)

(assert (=> b!103795 (= e!67593 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10908 () Bool)

(assert (=> bm!10908 (= call!10906 (contains!824 lt!52972 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27871 c!17900) b!103776))

(assert (= (and d!27871 (not c!17900)) b!103792))

(assert (= (and b!103792 c!17904) b!103778))

(assert (= (and b!103792 (not c!17904)) b!103784))

(assert (= (and b!103784 c!17899) b!103782))

(assert (= (and b!103784 (not c!17899)) b!103783))

(assert (= (or b!103782 b!103783) bm!10905))

(assert (= (or b!103778 bm!10905) bm!10906))

(assert (= (or b!103778 b!103782) bm!10902))

(assert (= (or b!103776 bm!10906) bm!10903))

(assert (= (or b!103776 bm!10902) bm!10907))

(assert (= (and d!27871 res!51784) b!103790))

(assert (= (and d!27871 c!17903) b!103780))

(assert (= (and d!27871 (not c!17903)) b!103793))

(assert (= (and d!27871 res!51786) b!103791))

(assert (= (and b!103791 res!51779) b!103795))

(assert (= (and b!103791 (not res!51782)) b!103779))

(assert (= (and b!103779 res!51783) b!103786))

(assert (= (and b!103791 res!51780) b!103787))

(assert (= (and b!103787 c!17902) b!103775))

(assert (= (and b!103787 (not c!17902)) b!103777))

(assert (= (and b!103775 res!51787) b!103788))

(assert (= (or b!103775 b!103777) bm!10908))

(assert (= (and b!103787 res!51785) b!103789))

(assert (= (and b!103789 c!17901) b!103785))

(assert (= (and b!103789 (not c!17901)) b!103781))

(assert (= (and b!103785 res!51781) b!103794))

(assert (= (or b!103785 b!103781) bm!10904))

(declare-fun b_lambda!4641 () Bool)

(assert (=> (not b_lambda!4641) (not b!103786)))

(assert (=> b!103786 t!5681))

(declare-fun b_and!6427 () Bool)

(assert (= b_and!6423 (and (=> t!5681 result!3435) b_and!6427)))

(assert (=> b!103786 t!5683))

(declare-fun b_and!6429 () Bool)

(assert (= b_and!6425 (and (=> t!5683 result!3437) b_and!6429)))

(assert (=> b!103795 m!114525))

(assert (=> b!103795 m!114525))

(assert (=> b!103795 m!114527))

(declare-fun m!114777 () Bool)

(assert (=> bm!10903 m!114777))

(assert (=> b!103779 m!114525))

(assert (=> b!103779 m!114525))

(declare-fun m!114779 () Bool)

(assert (=> b!103779 m!114779))

(declare-fun m!114781 () Bool)

(assert (=> bm!10904 m!114781))

(declare-fun m!114783 () Bool)

(assert (=> b!103786 m!114783))

(assert (=> b!103786 m!114783))

(assert (=> b!103786 m!114537))

(declare-fun m!114785 () Bool)

(assert (=> b!103786 m!114785))

(assert (=> b!103786 m!114525))

(assert (=> b!103786 m!114525))

(declare-fun m!114787 () Bool)

(assert (=> b!103786 m!114787))

(assert (=> b!103786 m!114537))

(declare-fun m!114789 () Bool)

(assert (=> b!103776 m!114789))

(declare-fun m!114791 () Bool)

(assert (=> b!103780 m!114791))

(declare-fun m!114793 () Bool)

(assert (=> b!103780 m!114793))

(declare-fun m!114795 () Bool)

(assert (=> b!103780 m!114795))

(declare-fun m!114797 () Bool)

(assert (=> b!103780 m!114797))

(declare-fun m!114799 () Bool)

(assert (=> b!103780 m!114799))

(declare-fun m!114801 () Bool)

(assert (=> b!103780 m!114801))

(declare-fun m!114803 () Bool)

(assert (=> b!103780 m!114803))

(declare-fun m!114805 () Bool)

(assert (=> b!103780 m!114805))

(assert (=> b!103780 m!114525))

(assert (=> b!103780 m!114791))

(declare-fun m!114807 () Bool)

(assert (=> b!103780 m!114807))

(assert (=> b!103780 m!114805))

(declare-fun m!114809 () Bool)

(assert (=> b!103780 m!114809))

(assert (=> b!103780 m!114797))

(declare-fun m!114811 () Bool)

(assert (=> b!103780 m!114811))

(declare-fun m!114813 () Bool)

(assert (=> b!103780 m!114813))

(declare-fun m!114815 () Bool)

(assert (=> b!103780 m!114815))

(assert (=> b!103780 m!114777))

(declare-fun m!114817 () Bool)

(assert (=> b!103780 m!114817))

(assert (=> b!103780 m!114801))

(declare-fun m!114819 () Bool)

(assert (=> b!103780 m!114819))

(assert (=> d!27871 m!114575))

(declare-fun m!114821 () Bool)

(assert (=> bm!10908 m!114821))

(declare-fun m!114823 () Bool)

(assert (=> b!103794 m!114823))

(assert (=> b!103790 m!114525))

(assert (=> b!103790 m!114525))

(assert (=> b!103790 m!114527))

(declare-fun m!114825 () Bool)

(assert (=> b!103788 m!114825))

(declare-fun m!114827 () Bool)

(assert (=> bm!10907 m!114827))

(assert (=> bm!10818 d!27871))

(declare-fun d!27873 () Bool)

(declare-fun res!51792 () Bool)

(declare-fun e!67603 () Bool)

(assert (=> d!27873 (=> res!51792 e!67603)))

(assert (=> d!27873 (= res!51792 (and ((_ is Cons!1607) (toList!800 lt!52534)) (= (_1!1211 (h!2203 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!27873 (= (containsKey!159 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67603)))

(declare-fun b!103800 () Bool)

(declare-fun e!67604 () Bool)

(assert (=> b!103800 (= e!67603 e!67604)))

(declare-fun res!51793 () Bool)

(assert (=> b!103800 (=> (not res!51793) (not e!67604))))

(assert (=> b!103800 (= res!51793 (and (or (not ((_ is Cons!1607) (toList!800 lt!52534))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1607) (toList!800 lt!52534)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!103801 () Bool)

(assert (=> b!103801 (= e!67604 (containsKey!159 (t!5673 (toList!800 lt!52534)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!27873 (not res!51792)) b!103800))

(assert (= (and b!103800 res!51793) b!103801))

(assert (=> b!103801 m!114165))

(declare-fun m!114829 () Bool)

(assert (=> b!103801 m!114829))

(assert (=> d!27767 d!27873))

(declare-fun d!27875 () Bool)

(declare-fun e!67606 () Bool)

(assert (=> d!27875 e!67606))

(declare-fun res!51794 () Bool)

(assert (=> d!27875 (=> res!51794 e!67606)))

(declare-fun lt!52983 () Bool)

(assert (=> d!27875 (= res!51794 (not lt!52983))))

(declare-fun lt!52984 () Bool)

(assert (=> d!27875 (= lt!52983 lt!52984)))

(declare-fun lt!52985 () Unit!3150)

(declare-fun e!67605 () Unit!3150)

(assert (=> d!27875 (= lt!52985 e!67605)))

(declare-fun c!17905 () Bool)

(assert (=> d!27875 (= c!17905 lt!52984)))

(assert (=> d!27875 (= lt!52984 (containsKey!159 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27875 (= (contains!824 call!10827 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!52983)))

(declare-fun b!103802 () Bool)

(declare-fun lt!52986 () Unit!3150)

(assert (=> b!103802 (= e!67605 lt!52986)))

(assert (=> b!103802 (= lt!52986 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103802 (isDefined!108 (getValueByKey!155 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103803 () Bool)

(declare-fun Unit!3171 () Unit!3150)

(assert (=> b!103803 (= e!67605 Unit!3171)))

(declare-fun b!103804 () Bool)

(assert (=> b!103804 (= e!67606 (isDefined!108 (getValueByKey!155 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!27875 c!17905) b!103802))

(assert (= (and d!27875 (not c!17905)) b!103803))

(assert (= (and d!27875 (not res!51794)) b!103804))

(assert (=> d!27875 m!114165))

(declare-fun m!114831 () Bool)

(assert (=> d!27875 m!114831))

(assert (=> b!103802 m!114165))

(declare-fun m!114833 () Bool)

(assert (=> b!103802 m!114833))

(assert (=> b!103802 m!114165))

(declare-fun m!114835 () Bool)

(assert (=> b!103802 m!114835))

(assert (=> b!103802 m!114835))

(declare-fun m!114837 () Bool)

(assert (=> b!103802 m!114837))

(assert (=> b!103804 m!114165))

(assert (=> b!103804 m!114835))

(assert (=> b!103804 m!114835))

(assert (=> b!103804 m!114837))

(assert (=> b!103385 d!27875))

(declare-fun d!27877 () Bool)

(declare-fun c!17906 () Bool)

(assert (=> d!27877 (= c!17906 (and ((_ is Cons!1607) (toList!800 lt!52757)) (= (_1!1211 (h!2203 (toList!800 lt!52757))) (_1!1211 lt!52538))))))

(declare-fun e!67607 () Option!161)

(assert (=> d!27877 (= (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538)) e!67607)))

(declare-fun b!103806 () Bool)

(declare-fun e!67608 () Option!161)

(assert (=> b!103806 (= e!67607 e!67608)))

(declare-fun c!17907 () Bool)

(assert (=> b!103806 (= c!17907 (and ((_ is Cons!1607) (toList!800 lt!52757)) (not (= (_1!1211 (h!2203 (toList!800 lt!52757))) (_1!1211 lt!52538)))))))

(declare-fun b!103807 () Bool)

(assert (=> b!103807 (= e!67608 (getValueByKey!155 (t!5673 (toList!800 lt!52757)) (_1!1211 lt!52538)))))

(declare-fun b!103808 () Bool)

(assert (=> b!103808 (= e!67608 None!159)))

(declare-fun b!103805 () Bool)

(assert (=> b!103805 (= e!67607 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52757)))))))

(assert (= (and d!27877 c!17906) b!103805))

(assert (= (and d!27877 (not c!17906)) b!103806))

(assert (= (and b!103806 c!17907) b!103807))

(assert (= (and b!103806 (not c!17907)) b!103808))

(declare-fun m!114839 () Bool)

(assert (=> b!103807 m!114839))

(assert (=> b!103496 d!27877))

(declare-fun d!27879 () Bool)

(assert (=> d!27879 (= (inRange!0 (ite c!17784 (ite c!17780 (index!3180 lt!52647) (ite c!17789 (index!3179 lt!52671) (index!3182 lt!52671))) (ite c!17777 (index!3180 lt!52654) (ite c!17782 (index!3179 lt!52653) (index!3182 lt!52653)))) (mask!6697 newMap!16)) (and (bvsge (ite c!17784 (ite c!17780 (index!3180 lt!52647) (ite c!17789 (index!3179 lt!52671) (index!3182 lt!52671))) (ite c!17777 (index!3180 lt!52654) (ite c!17782 (index!3179 lt!52653) (index!3182 lt!52653)))) #b00000000000000000000000000000000) (bvslt (ite c!17784 (ite c!17780 (index!3180 lt!52647) (ite c!17789 (index!3179 lt!52671) (index!3182 lt!52671))) (ite c!17777 (index!3180 lt!52654) (ite c!17782 (index!3179 lt!52653) (index!3182 lt!52653)))) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10817 d!27879))

(declare-fun b!103809 () Bool)

(declare-fun e!67617 () Bool)

(declare-fun e!67618 () Bool)

(assert (=> b!103809 (= e!67617 e!67618)))

(declare-fun res!51803 () Bool)

(declare-fun call!10913 () Bool)

(assert (=> b!103809 (= res!51803 call!10913)))

(assert (=> b!103809 (=> (not res!51803) (not e!67618))))

(declare-fun bm!10909 () Bool)

(declare-fun call!10914 () ListLongMap!1569)

(declare-fun call!10918 () ListLongMap!1569)

(assert (=> bm!10909 (= call!10914 call!10918)))

(declare-fun call!10916 () ListLongMap!1569)

(declare-fun bm!10910 () Bool)

(assert (=> bm!10910 (= call!10916 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10911 () Bool)

(declare-fun call!10912 () Bool)

(declare-fun lt!52998 () ListLongMap!1569)

(assert (=> bm!10911 (= call!10912 (contains!824 lt!52998 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10912 () Bool)

(declare-fun call!10915 () ListLongMap!1569)

(declare-fun call!10917 () ListLongMap!1569)

(assert (=> bm!10912 (= call!10915 call!10917)))

(declare-fun b!103810 () Bool)

(declare-fun e!67610 () ListLongMap!1569)

(assert (=> b!103810 (= e!67610 (+!141 call!10918 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!103811 () Bool)

(assert (=> b!103811 (= e!67617 (not call!10913))))

(declare-fun b!103812 () Bool)

(declare-fun e!67612 () ListLongMap!1569)

(assert (=> b!103812 (= e!67612 call!10914)))

(declare-fun b!103813 () Bool)

(declare-fun e!67611 () Bool)

(declare-fun e!67615 () Bool)

(assert (=> b!103813 (= e!67611 e!67615)))

(declare-fun res!51799 () Bool)

(assert (=> b!103813 (=> (not res!51799) (not e!67615))))

(assert (=> b!103813 (= res!51799 (contains!824 lt!52998 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!103813 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10913 () Bool)

(assert (=> bm!10913 (= call!10917 call!10916)))

(declare-fun b!103814 () Bool)

(declare-fun e!67613 () Unit!3150)

(declare-fun lt!52993 () Unit!3150)

(assert (=> b!103814 (= e!67613 lt!52993)))

(declare-fun lt!52992 () ListLongMap!1569)

(assert (=> b!103814 (= lt!52992 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53002 () (_ BitVec 64))

(assert (=> b!103814 (= lt!53002 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53001 () (_ BitVec 64))

(assert (=> b!103814 (= lt!53001 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!52996 () Unit!3150)

(assert (=> b!103814 (= lt!52996 (addStillContains!73 lt!52992 lt!53002 (zeroValue!2438 newMap!16) lt!53001))))

(assert (=> b!103814 (contains!824 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))) lt!53001)))

(declare-fun lt!53005 () Unit!3150)

(assert (=> b!103814 (= lt!53005 lt!52996)))

(declare-fun lt!52995 () ListLongMap!1569)

(assert (=> b!103814 (= lt!52995 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52999 () (_ BitVec 64))

(assert (=> b!103814 (= lt!52999 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53004 () (_ BitVec 64))

(assert (=> b!103814 (= lt!53004 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53007 () Unit!3150)

(assert (=> b!103814 (= lt!53007 (addApplyDifferent!73 lt!52995 lt!52999 (minValue!2438 newMap!16) lt!53004))))

(assert (=> b!103814 (= (apply!97 (+!141 lt!52995 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))) lt!53004) (apply!97 lt!52995 lt!53004))))

(declare-fun lt!52989 () Unit!3150)

(assert (=> b!103814 (= lt!52989 lt!53007)))

(declare-fun lt!52988 () ListLongMap!1569)

(assert (=> b!103814 (= lt!52988 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52997 () (_ BitVec 64))

(assert (=> b!103814 (= lt!52997 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53000 () (_ BitVec 64))

(assert (=> b!103814 (= lt!53000 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53008 () Unit!3150)

(assert (=> b!103814 (= lt!53008 (addApplyDifferent!73 lt!52988 lt!52997 (zeroValue!2438 newMap!16) lt!53000))))

(assert (=> b!103814 (= (apply!97 (+!141 lt!52988 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))) lt!53000) (apply!97 lt!52988 lt!53000))))

(declare-fun lt!53006 () Unit!3150)

(assert (=> b!103814 (= lt!53006 lt!53008)))

(declare-fun lt!52987 () ListLongMap!1569)

(assert (=> b!103814 (= lt!52987 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!52994 () (_ BitVec 64))

(assert (=> b!103814 (= lt!52994 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53003 () (_ BitVec 64))

(assert (=> b!103814 (= lt!53003 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!103814 (= lt!52993 (addApplyDifferent!73 lt!52987 lt!52994 (minValue!2438 newMap!16) lt!53003))))

(assert (=> b!103814 (= (apply!97 (+!141 lt!52987 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))) lt!53003) (apply!97 lt!52987 lt!53003))))

(declare-fun b!103815 () Bool)

(declare-fun e!67609 () Bool)

(assert (=> b!103815 (= e!67609 (not call!10912))))

(declare-fun b!103816 () Bool)

(declare-fun e!67621 () ListLongMap!1569)

(assert (=> b!103816 (= e!67621 call!10914)))

(declare-fun b!103817 () Bool)

(assert (=> b!103817 (= e!67621 call!10915)))

(declare-fun b!103818 () Bool)

(declare-fun c!17908 () Bool)

(assert (=> b!103818 (= c!17908 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!103818 (= e!67612 e!67621)))

(declare-fun b!103819 () Bool)

(declare-fun e!67620 () Bool)

(assert (=> b!103819 (= e!67609 e!67620)))

(declare-fun res!51797 () Bool)

(assert (=> b!103819 (= res!51797 call!10912)))

(assert (=> b!103819 (=> (not res!51797) (not e!67620))))

(declare-fun b!103820 () Bool)

(assert (=> b!103820 (= e!67615 (= (apply!97 lt!52998 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))))))))

(assert (=> b!103820 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103821 () Bool)

(declare-fun res!51801 () Bool)

(declare-fun e!67619 () Bool)

(assert (=> b!103821 (=> (not res!51801) (not e!67619))))

(assert (=> b!103821 (= res!51801 e!67617)))

(declare-fun c!17911 () Bool)

(assert (=> b!103821 (= c!17911 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!27881 () Bool)

(assert (=> d!27881 e!67619))

(declare-fun res!51802 () Bool)

(assert (=> d!27881 (=> (not res!51802) (not e!67619))))

(assert (=> d!27881 (= res!51802 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!52990 () ListLongMap!1569)

(assert (=> d!27881 (= lt!52998 lt!52990)))

(declare-fun lt!52991 () Unit!3150)

(assert (=> d!27881 (= lt!52991 e!67613)))

(declare-fun c!17912 () Bool)

(declare-fun e!67614 () Bool)

(assert (=> d!27881 (= c!17912 e!67614)))

(declare-fun res!51800 () Bool)

(assert (=> d!27881 (=> (not res!51800) (not e!67614))))

(assert (=> d!27881 (= res!51800 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27881 (= lt!52990 e!67610)))

(declare-fun c!17909 () Bool)

(assert (=> d!27881 (= c!17909 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!27881 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27881 (= (getCurrentListMap!487 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!52998)))

(declare-fun c!17913 () Bool)

(declare-fun bm!10914 () Bool)

(assert (=> bm!10914 (= call!10918 (+!141 (ite c!17909 call!10916 (ite c!17913 call!10917 call!10915)) (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!103822 () Bool)

(assert (=> b!103822 (= e!67618 (= (apply!97 lt!52998 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!103823 () Bool)

(assert (=> b!103823 (= e!67619 e!67609)))

(declare-fun c!17910 () Bool)

(assert (=> b!103823 (= c!17910 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103824 () Bool)

(assert (=> b!103824 (= e!67614 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103825 () Bool)

(declare-fun res!51796 () Bool)

(assert (=> b!103825 (=> (not res!51796) (not e!67619))))

(assert (=> b!103825 (= res!51796 e!67611)))

(declare-fun res!51798 () Bool)

(assert (=> b!103825 (=> res!51798 e!67611)))

(declare-fun e!67616 () Bool)

(assert (=> b!103825 (= res!51798 (not e!67616))))

(declare-fun res!51795 () Bool)

(assert (=> b!103825 (=> (not res!51795) (not e!67616))))

(assert (=> b!103825 (= res!51795 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103826 () Bool)

(assert (=> b!103826 (= e!67610 e!67612)))

(assert (=> b!103826 (= c!17913 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!103827 () Bool)

(declare-fun Unit!3172 () Unit!3150)

(assert (=> b!103827 (= e!67613 Unit!3172)))

(declare-fun b!103828 () Bool)

(assert (=> b!103828 (= e!67620 (= (apply!97 lt!52998 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!103829 () Bool)

(assert (=> b!103829 (= e!67616 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10915 () Bool)

(assert (=> bm!10915 (= call!10913 (contains!824 lt!52998 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!27881 c!17909) b!103810))

(assert (= (and d!27881 (not c!17909)) b!103826))

(assert (= (and b!103826 c!17913) b!103812))

(assert (= (and b!103826 (not c!17913)) b!103818))

(assert (= (and b!103818 c!17908) b!103816))

(assert (= (and b!103818 (not c!17908)) b!103817))

(assert (= (or b!103816 b!103817) bm!10912))

(assert (= (or b!103812 bm!10912) bm!10913))

(assert (= (or b!103812 b!103816) bm!10909))

(assert (= (or b!103810 bm!10913) bm!10910))

(assert (= (or b!103810 bm!10909) bm!10914))

(assert (= (and d!27881 res!51800) b!103824))

(assert (= (and d!27881 c!17912) b!103814))

(assert (= (and d!27881 (not c!17912)) b!103827))

(assert (= (and d!27881 res!51802) b!103825))

(assert (= (and b!103825 res!51795) b!103829))

(assert (= (and b!103825 (not res!51798)) b!103813))

(assert (= (and b!103813 res!51799) b!103820))

(assert (= (and b!103825 res!51796) b!103821))

(assert (= (and b!103821 c!17911) b!103809))

(assert (= (and b!103821 (not c!17911)) b!103811))

(assert (= (and b!103809 res!51803) b!103822))

(assert (= (or b!103809 b!103811) bm!10915))

(assert (= (and b!103821 res!51801) b!103823))

(assert (= (and b!103823 c!17910) b!103819))

(assert (= (and b!103823 (not c!17910)) b!103815))

(assert (= (and b!103819 res!51797) b!103828))

(assert (= (or b!103819 b!103815) bm!10911))

(declare-fun b_lambda!4643 () Bool)

(assert (=> (not b_lambda!4643) (not b!103820)))

(assert (=> b!103820 t!5681))

(declare-fun b_and!6431 () Bool)

(assert (= b_and!6427 (and (=> t!5681 result!3435) b_and!6431)))

(assert (=> b!103820 t!5683))

(declare-fun b_and!6433 () Bool)

(assert (= b_and!6429 (and (=> t!5683 result!3437) b_and!6433)))

(assert (=> b!103829 m!114525))

(assert (=> b!103829 m!114525))

(assert (=> b!103829 m!114527))

(declare-fun m!114841 () Bool)

(assert (=> bm!10910 m!114841))

(assert (=> b!103813 m!114525))

(assert (=> b!103813 m!114525))

(declare-fun m!114843 () Bool)

(assert (=> b!103813 m!114843))

(declare-fun m!114845 () Bool)

(assert (=> bm!10911 m!114845))

(declare-fun m!114847 () Bool)

(assert (=> b!103820 m!114847))

(assert (=> b!103820 m!114847))

(assert (=> b!103820 m!114537))

(declare-fun m!114849 () Bool)

(assert (=> b!103820 m!114849))

(assert (=> b!103820 m!114525))

(assert (=> b!103820 m!114525))

(declare-fun m!114851 () Bool)

(assert (=> b!103820 m!114851))

(assert (=> b!103820 m!114537))

(declare-fun m!114853 () Bool)

(assert (=> b!103810 m!114853))

(declare-fun m!114855 () Bool)

(assert (=> b!103814 m!114855))

(declare-fun m!114857 () Bool)

(assert (=> b!103814 m!114857))

(declare-fun m!114859 () Bool)

(assert (=> b!103814 m!114859))

(declare-fun m!114861 () Bool)

(assert (=> b!103814 m!114861))

(declare-fun m!114863 () Bool)

(assert (=> b!103814 m!114863))

(declare-fun m!114865 () Bool)

(assert (=> b!103814 m!114865))

(declare-fun m!114867 () Bool)

(assert (=> b!103814 m!114867))

(declare-fun m!114869 () Bool)

(assert (=> b!103814 m!114869))

(assert (=> b!103814 m!114525))

(assert (=> b!103814 m!114855))

(declare-fun m!114871 () Bool)

(assert (=> b!103814 m!114871))

(assert (=> b!103814 m!114869))

(declare-fun m!114873 () Bool)

(assert (=> b!103814 m!114873))

(assert (=> b!103814 m!114861))

(declare-fun m!114875 () Bool)

(assert (=> b!103814 m!114875))

(declare-fun m!114877 () Bool)

(assert (=> b!103814 m!114877))

(declare-fun m!114879 () Bool)

(assert (=> b!103814 m!114879))

(assert (=> b!103814 m!114841))

(declare-fun m!114881 () Bool)

(assert (=> b!103814 m!114881))

(assert (=> b!103814 m!114865))

(declare-fun m!114883 () Bool)

(assert (=> b!103814 m!114883))

(assert (=> d!27881 m!114575))

(declare-fun m!114885 () Bool)

(assert (=> bm!10915 m!114885))

(declare-fun m!114887 () Bool)

(assert (=> b!103828 m!114887))

(assert (=> b!103824 m!114525))

(assert (=> b!103824 m!114525))

(assert (=> b!103824 m!114527))

(declare-fun m!114889 () Bool)

(assert (=> b!103822 m!114889))

(declare-fun m!114891 () Bool)

(assert (=> bm!10914 m!114891))

(assert (=> bm!10814 d!27881))

(assert (=> b!103490 d!27867))

(declare-fun d!27883 () Bool)

(declare-fun lt!53011 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!107 (List!1610) (InoxSet (_ BitVec 64)))

(assert (=> d!27883 (= lt!53011 (select (content!107 Nil!1607) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67627 () Bool)

(assert (=> d!27883 (= lt!53011 e!67627)))

(declare-fun res!51809 () Bool)

(assert (=> d!27883 (=> (not res!51809) (not e!67627))))

(assert (=> d!27883 (= res!51809 ((_ is Cons!1606) Nil!1607))))

(assert (=> d!27883 (= (contains!825 Nil!1607 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53011)))

(declare-fun b!103834 () Bool)

(declare-fun e!67626 () Bool)

(assert (=> b!103834 (= e!67627 e!67626)))

(declare-fun res!51808 () Bool)

(assert (=> b!103834 (=> res!51808 e!67626)))

(assert (=> b!103834 (= res!51808 (= (h!2202 Nil!1607) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103835 () Bool)

(assert (=> b!103835 (= e!67626 (contains!825 (t!5672 Nil!1607) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!27883 res!51809) b!103834))

(assert (= (and b!103834 (not res!51808)) b!103835))

(declare-fun m!114893 () Bool)

(assert (=> d!27883 m!114893))

(assert (=> d!27883 m!114165))

(declare-fun m!114895 () Bool)

(assert (=> d!27883 m!114895))

(assert (=> b!103835 m!114165))

(declare-fun m!114897 () Bool)

(assert (=> b!103835 m!114897))

(assert (=> b!103488 d!27883))

(declare-fun b!103848 () Bool)

(declare-fun e!67636 () SeekEntryResult!258)

(assert (=> b!103848 (= e!67636 Undefined!258)))

(declare-fun lt!53018 () SeekEntryResult!258)

(declare-fun d!27885 () Bool)

(assert (=> d!27885 (and (or ((_ is Undefined!258) lt!53018) (not ((_ is Found!258) lt!53018)) (and (bvsge (index!3180 lt!53018) #b00000000000000000000000000000000) (bvslt (index!3180 lt!53018) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53018) ((_ is Found!258) lt!53018) (not ((_ is MissingZero!258) lt!53018)) (and (bvsge (index!3179 lt!53018) #b00000000000000000000000000000000) (bvslt (index!3179 lt!53018) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53018) ((_ is Found!258) lt!53018) ((_ is MissingZero!258) lt!53018) (not ((_ is MissingVacant!258) lt!53018)) (and (bvsge (index!3182 lt!53018) #b00000000000000000000000000000000) (bvslt (index!3182 lt!53018) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53018) (ite ((_ is Found!258) lt!53018) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!53018)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite ((_ is MissingZero!258) lt!53018) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!53018)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!258) lt!53018) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!53018)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27885 (= lt!53018 e!67636)))

(declare-fun c!17921 () Bool)

(declare-fun lt!53019 () SeekEntryResult!258)

(assert (=> d!27885 (= c!17921 (and ((_ is Intermediate!258) lt!53019) (undefined!1070 lt!53019)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4335 (_ BitVec 32)) SeekEntryResult!258)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!27885 (= lt!53019 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!27885 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27885 (= (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53018)))

(declare-fun e!67634 () SeekEntryResult!258)

(declare-fun b!103849 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4335 (_ BitVec 32)) SeekEntryResult!258)

(assert (=> b!103849 (= e!67634 (seekKeyOrZeroReturnVacant!0 (x!13500 lt!53019) (index!3181 lt!53019) (index!3181 lt!53019) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!103850 () Bool)

(declare-fun e!67635 () SeekEntryResult!258)

(assert (=> b!103850 (= e!67635 (Found!258 (index!3181 lt!53019)))))

(declare-fun b!103851 () Bool)

(assert (=> b!103851 (= e!67636 e!67635)))

(declare-fun lt!53020 () (_ BitVec 64))

(assert (=> b!103851 (= lt!53020 (select (arr!2057 (_keys!4263 newMap!16)) (index!3181 lt!53019)))))

(declare-fun c!17920 () Bool)

(assert (=> b!103851 (= c!17920 (= lt!53020 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103852 () Bool)

(declare-fun c!17922 () Bool)

(assert (=> b!103852 (= c!17922 (= lt!53020 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103852 (= e!67635 e!67634)))

(declare-fun b!103853 () Bool)

(assert (=> b!103853 (= e!67634 (MissingZero!258 (index!3181 lt!53019)))))

(assert (= (and d!27885 c!17921) b!103848))

(assert (= (and d!27885 (not c!17921)) b!103851))

(assert (= (and b!103851 c!17920) b!103850))

(assert (= (and b!103851 (not c!17920)) b!103852))

(assert (= (and b!103852 c!17922) b!103853))

(assert (= (and b!103852 (not c!17922)) b!103849))

(declare-fun m!114899 () Bool)

(assert (=> d!27885 m!114899))

(assert (=> d!27885 m!114165))

(declare-fun m!114901 () Bool)

(assert (=> d!27885 m!114901))

(declare-fun m!114903 () Bool)

(assert (=> d!27885 m!114903))

(declare-fun m!114905 () Bool)

(assert (=> d!27885 m!114905))

(declare-fun m!114907 () Bool)

(assert (=> d!27885 m!114907))

(assert (=> d!27885 m!114165))

(assert (=> d!27885 m!114899))

(assert (=> d!27885 m!114575))

(assert (=> b!103849 m!114165))

(declare-fun m!114909 () Bool)

(assert (=> b!103849 m!114909))

(declare-fun m!114911 () Bool)

(assert (=> b!103851 m!114911))

(assert (=> b!103395 d!27885))

(declare-fun d!27887 () Bool)

(declare-fun e!67638 () Bool)

(assert (=> d!27887 e!67638))

(declare-fun res!51810 () Bool)

(assert (=> d!27887 (=> res!51810 e!67638)))

(declare-fun lt!53021 () Bool)

(assert (=> d!27887 (= res!51810 (not lt!53021))))

(declare-fun lt!53022 () Bool)

(assert (=> d!27887 (= lt!53021 lt!53022)))

(declare-fun lt!53023 () Unit!3150)

(declare-fun e!67637 () Unit!3150)

(assert (=> d!27887 (= lt!53023 e!67637)))

(declare-fun c!17923 () Bool)

(assert (=> d!27887 (= c!17923 lt!53022)))

(assert (=> d!27887 (= lt!53022 (containsKey!159 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27887 (= (contains!824 lt!52783 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53021)))

(declare-fun b!103854 () Bool)

(declare-fun lt!53024 () Unit!3150)

(assert (=> b!103854 (= e!67637 lt!53024)))

(assert (=> b!103854 (= lt!53024 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103854 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103855 () Bool)

(declare-fun Unit!3173 () Unit!3150)

(assert (=> b!103855 (= e!67637 Unit!3173)))

(declare-fun b!103856 () Bool)

(assert (=> b!103856 (= e!67638 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27887 c!17923) b!103854))

(assert (= (and d!27887 (not c!17923)) b!103855))

(assert (= (and d!27887 (not res!51810)) b!103856))

(declare-fun m!114913 () Bool)

(assert (=> d!27887 m!114913))

(declare-fun m!114915 () Bool)

(assert (=> b!103854 m!114915))

(declare-fun m!114917 () Bool)

(assert (=> b!103854 m!114917))

(assert (=> b!103854 m!114917))

(declare-fun m!114919 () Bool)

(assert (=> b!103854 m!114919))

(assert (=> b!103856 m!114917))

(assert (=> b!103856 m!114917))

(assert (=> b!103856 m!114919))

(assert (=> d!27801 d!27887))

(assert (=> d!27801 d!27807))

(declare-fun d!27889 () Bool)

(declare-fun e!67640 () Bool)

(assert (=> d!27889 e!67640))

(declare-fun res!51811 () Bool)

(assert (=> d!27889 (=> res!51811 e!67640)))

(declare-fun lt!53025 () Bool)

(assert (=> d!27889 (= res!51811 (not lt!53025))))

(declare-fun lt!53026 () Bool)

(assert (=> d!27889 (= lt!53025 lt!53026)))

(declare-fun lt!53027 () Unit!3150)

(declare-fun e!67639 () Unit!3150)

(assert (=> d!27889 (= lt!53027 e!67639)))

(declare-fun c!17924 () Bool)

(assert (=> d!27889 (= c!17924 lt!53026)))

(assert (=> d!27889 (= lt!53026 (containsKey!159 (toList!800 lt!52764) (_1!1211 lt!52540)))))

(assert (=> d!27889 (= (contains!824 lt!52764 (_1!1211 lt!52540)) lt!53025)))

(declare-fun b!103857 () Bool)

(declare-fun lt!53028 () Unit!3150)

(assert (=> b!103857 (= e!67639 lt!53028)))

(assert (=> b!103857 (= lt!53028 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52764) (_1!1211 lt!52540)))))

(assert (=> b!103857 (isDefined!108 (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540)))))

(declare-fun b!103858 () Bool)

(declare-fun Unit!3174 () Unit!3150)

(assert (=> b!103858 (= e!67639 Unit!3174)))

(declare-fun b!103859 () Bool)

(assert (=> b!103859 (= e!67640 (isDefined!108 (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540))))))

(assert (= (and d!27889 c!17924) b!103857))

(assert (= (and d!27889 (not c!17924)) b!103858))

(assert (= (and d!27889 (not res!51811)) b!103859))

(declare-fun m!114921 () Bool)

(assert (=> d!27889 m!114921))

(declare-fun m!114923 () Bool)

(assert (=> b!103857 m!114923))

(assert (=> b!103857 m!114437))

(assert (=> b!103857 m!114437))

(declare-fun m!114925 () Bool)

(assert (=> b!103857 m!114925))

(assert (=> b!103859 m!114437))

(assert (=> b!103859 m!114437))

(assert (=> b!103859 m!114925))

(assert (=> d!27799 d!27889))

(declare-fun d!27891 () Bool)

(declare-fun c!17925 () Bool)

(assert (=> d!27891 (= c!17925 (and ((_ is Cons!1607) lt!52765) (= (_1!1211 (h!2203 lt!52765)) (_1!1211 lt!52540))))))

(declare-fun e!67641 () Option!161)

(assert (=> d!27891 (= (getValueByKey!155 lt!52765 (_1!1211 lt!52540)) e!67641)))

(declare-fun b!103861 () Bool)

(declare-fun e!67642 () Option!161)

(assert (=> b!103861 (= e!67641 e!67642)))

(declare-fun c!17926 () Bool)

(assert (=> b!103861 (= c!17926 (and ((_ is Cons!1607) lt!52765) (not (= (_1!1211 (h!2203 lt!52765)) (_1!1211 lt!52540)))))))

(declare-fun b!103862 () Bool)

(assert (=> b!103862 (= e!67642 (getValueByKey!155 (t!5673 lt!52765) (_1!1211 lt!52540)))))

(declare-fun b!103863 () Bool)

(assert (=> b!103863 (= e!67642 None!159)))

(declare-fun b!103860 () Bool)

(assert (=> b!103860 (= e!67641 (Some!160 (_2!1211 (h!2203 lt!52765))))))

(assert (= (and d!27891 c!17925) b!103860))

(assert (= (and d!27891 (not c!17925)) b!103861))

(assert (= (and b!103861 c!17926) b!103862))

(assert (= (and b!103861 (not c!17926)) b!103863))

(declare-fun m!114927 () Bool)

(assert (=> b!103862 m!114927))

(assert (=> d!27799 d!27891))

(declare-fun d!27893 () Bool)

(assert (=> d!27893 (= (getValueByKey!155 lt!52765 (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540)))))

(declare-fun lt!53029 () Unit!3150)

(assert (=> d!27893 (= lt!53029 (choose!639 lt!52765 (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(declare-fun e!67643 () Bool)

(assert (=> d!27893 e!67643))

(declare-fun res!51812 () Bool)

(assert (=> d!27893 (=> (not res!51812) (not e!67643))))

(assert (=> d!27893 (= res!51812 (isStrictlySorted!308 lt!52765))))

(assert (=> d!27893 (= (lemmaContainsTupThenGetReturnValue!71 lt!52765 (_1!1211 lt!52540) (_2!1211 lt!52540)) lt!53029)))

(declare-fun b!103864 () Bool)

(declare-fun res!51813 () Bool)

(assert (=> b!103864 (=> (not res!51813) (not e!67643))))

(assert (=> b!103864 (= res!51813 (containsKey!159 lt!52765 (_1!1211 lt!52540)))))

(declare-fun b!103865 () Bool)

(assert (=> b!103865 (= e!67643 (contains!826 lt!52765 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(assert (= (and d!27893 res!51812) b!103864))

(assert (= (and b!103864 res!51813) b!103865))

(assert (=> d!27893 m!114431))

(declare-fun m!114929 () Bool)

(assert (=> d!27893 m!114929))

(declare-fun m!114931 () Bool)

(assert (=> d!27893 m!114931))

(declare-fun m!114933 () Bool)

(assert (=> b!103864 m!114933))

(declare-fun m!114935 () Bool)

(assert (=> b!103865 m!114935))

(assert (=> d!27799 d!27893))

(declare-fun b!103866 () Bool)

(declare-fun e!67648 () List!1611)

(declare-fun e!67644 () List!1611)

(assert (=> b!103866 (= e!67648 e!67644)))

(declare-fun c!17928 () Bool)

(assert (=> b!103866 (= c!17928 (and ((_ is Cons!1607) (toList!800 lt!52539)) (= (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 lt!52540))))))

(declare-fun b!103867 () Bool)

(declare-fun call!10920 () List!1611)

(assert (=> b!103867 (= e!67644 call!10920)))

(declare-fun bm!10916 () Bool)

(declare-fun call!10921 () List!1611)

(assert (=> bm!10916 (= call!10920 call!10921)))

(declare-fun e!67645 () List!1611)

(declare-fun c!17930 () Bool)

(declare-fun b!103869 () Bool)

(assert (=> b!103869 (= e!67645 (ite c!17928 (t!5673 (toList!800 lt!52539)) (ite c!17930 (Cons!1607 (h!2203 (toList!800 lt!52539)) (t!5673 (toList!800 lt!52539))) Nil!1608)))))

(declare-fun bm!10917 () Bool)

(declare-fun call!10919 () List!1611)

(assert (=> bm!10917 (= call!10919 call!10920)))

(declare-fun b!103870 () Bool)

(assert (=> b!103870 (= e!67645 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52539)) (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(declare-fun bm!10918 () Bool)

(declare-fun c!17929 () Bool)

(assert (=> bm!10918 (= call!10921 ($colon$colon!80 e!67645 (ite c!17929 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540)))))))

(declare-fun c!17927 () Bool)

(assert (=> bm!10918 (= c!17927 c!17929)))

(declare-fun b!103871 () Bool)

(declare-fun e!67646 () List!1611)

(assert (=> b!103871 (= e!67646 call!10919)))

(declare-fun b!103872 () Bool)

(assert (=> b!103872 (= c!17930 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 lt!52540))))))

(assert (=> b!103872 (= e!67644 e!67646)))

(declare-fun b!103873 () Bool)

(assert (=> b!103873 (= e!67648 call!10921)))

(declare-fun d!27895 () Bool)

(declare-fun e!67647 () Bool)

(assert (=> d!27895 e!67647))

(declare-fun res!51814 () Bool)

(assert (=> d!27895 (=> (not res!51814) (not e!67647))))

(declare-fun lt!53030 () List!1611)

(assert (=> d!27895 (= res!51814 (isStrictlySorted!308 lt!53030))))

(assert (=> d!27895 (= lt!53030 e!67648)))

(assert (=> d!27895 (= c!17929 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 lt!52540))))))

(assert (=> d!27895 (isStrictlySorted!308 (toList!800 lt!52539))))

(assert (=> d!27895 (= (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 lt!52540) (_2!1211 lt!52540)) lt!53030)))

(declare-fun b!103868 () Bool)

(assert (=> b!103868 (= e!67646 call!10919)))

(declare-fun b!103874 () Bool)

(assert (=> b!103874 (= e!67647 (contains!826 lt!53030 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!103875 () Bool)

(declare-fun res!51815 () Bool)

(assert (=> b!103875 (=> (not res!51815) (not e!67647))))

(assert (=> b!103875 (= res!51815 (containsKey!159 lt!53030 (_1!1211 lt!52540)))))

(assert (= (and d!27895 c!17929) b!103873))

(assert (= (and d!27895 (not c!17929)) b!103866))

(assert (= (and b!103866 c!17928) b!103867))

(assert (= (and b!103866 (not c!17928)) b!103872))

(assert (= (and b!103872 c!17930) b!103868))

(assert (= (and b!103872 (not c!17930)) b!103871))

(assert (= (or b!103868 b!103871) bm!10917))

(assert (= (or b!103867 bm!10917) bm!10916))

(assert (= (or b!103873 bm!10916) bm!10918))

(assert (= (and bm!10918 c!17927) b!103870))

(assert (= (and bm!10918 (not c!17927)) b!103869))

(assert (= (and d!27895 res!51814) b!103875))

(assert (= (and b!103875 res!51815) b!103874))

(declare-fun m!114937 () Bool)

(assert (=> b!103874 m!114937))

(declare-fun m!114939 () Bool)

(assert (=> b!103870 m!114939))

(declare-fun m!114941 () Bool)

(assert (=> bm!10918 m!114941))

(declare-fun m!114943 () Bool)

(assert (=> d!27895 m!114943))

(assert (=> d!27895 m!114515))

(declare-fun m!114945 () Bool)

(assert (=> b!103875 m!114945))

(assert (=> d!27799 d!27895))

(declare-fun d!27897 () Bool)

(assert (=> d!27897 (= (get!1324 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2875 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103400 d!27897))

(assert (=> b!103464 d!27819))

(declare-fun d!27899 () Bool)

(declare-fun e!67649 () Bool)

(assert (=> d!27899 e!67649))

(declare-fun res!51817 () Bool)

(assert (=> d!27899 (=> (not res!51817) (not e!67649))))

(declare-fun lt!53032 () ListLongMap!1569)

(assert (=> d!27899 (= res!51817 (contains!824 lt!53032 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53033 () List!1611)

(assert (=> d!27899 (= lt!53032 (ListLongMap!1570 lt!53033))))

(declare-fun lt!53031 () Unit!3150)

(declare-fun lt!53034 () Unit!3150)

(assert (=> d!27899 (= lt!53031 lt!53034)))

(assert (=> d!27899 (= (getValueByKey!155 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27899 (= lt!53034 (lemmaContainsTupThenGetReturnValue!71 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27899 (= lt!53033 (insertStrictlySorted!74 (toList!800 call!10860) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27899 (= (+!141 call!10860 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53032)))

(declare-fun b!103876 () Bool)

(declare-fun res!51816 () Bool)

(assert (=> b!103876 (=> (not res!51816) (not e!67649))))

(assert (=> b!103876 (= res!51816 (= (getValueByKey!155 (toList!800 lt!53032) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103877 () Bool)

(assert (=> b!103877 (= e!67649 (contains!826 (toList!800 lt!53032) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27899 res!51817) b!103876))

(assert (= (and b!103876 res!51816) b!103877))

(declare-fun m!114947 () Bool)

(assert (=> d!27899 m!114947))

(declare-fun m!114949 () Bool)

(assert (=> d!27899 m!114949))

(declare-fun m!114951 () Bool)

(assert (=> d!27899 m!114951))

(declare-fun m!114953 () Bool)

(assert (=> d!27899 m!114953))

(declare-fun m!114955 () Bool)

(assert (=> b!103876 m!114955))

(declare-fun m!114957 () Bool)

(assert (=> b!103877 m!114957))

(assert (=> b!103445 d!27899))

(declare-fun d!27901 () Bool)

(assert (=> d!27901 (= (+!141 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (+!141 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (=> d!27901 true))

(declare-fun _$28!158 () Unit!3150)

(assert (=> d!27901 (= (choose!638 lt!52539 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) _$28!158)))

(declare-fun bs!4251 () Bool)

(assert (= bs!4251 d!27901))

(assert (=> bs!4251 m!114419))

(assert (=> bs!4251 m!114419))

(assert (=> bs!4251 m!114421))

(assert (=> bs!4251 m!114423))

(assert (=> bs!4251 m!114423))

(assert (=> bs!4251 m!114425))

(assert (=> d!27797 d!27901))

(declare-fun d!27903 () Bool)

(declare-fun e!67650 () Bool)

(assert (=> d!27903 e!67650))

(declare-fun res!51819 () Bool)

(assert (=> d!27903 (=> (not res!51819) (not e!67650))))

(declare-fun lt!53036 () ListLongMap!1569)

(assert (=> d!27903 (= res!51819 (contains!824 lt!53036 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53037 () List!1611)

(assert (=> d!27903 (= lt!53036 (ListLongMap!1570 lt!53037))))

(declare-fun lt!53035 () Unit!3150)

(declare-fun lt!53038 () Unit!3150)

(assert (=> d!27903 (= lt!53035 lt!53038)))

(assert (=> d!27903 (= (getValueByKey!155 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27903 (= lt!53038 (lemmaContainsTupThenGetReturnValue!71 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27903 (= lt!53037 (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27903 (= (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53036)))

(declare-fun b!103878 () Bool)

(declare-fun res!51818 () Bool)

(assert (=> b!103878 (=> (not res!51818) (not e!67650))))

(assert (=> b!103878 (= res!51818 (= (getValueByKey!155 (toList!800 lt!53036) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!103879 () Bool)

(assert (=> b!103879 (= e!67650 (contains!826 (toList!800 lt!53036) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!27903 res!51819) b!103878))

(assert (= (and b!103878 res!51818) b!103879))

(declare-fun m!114959 () Bool)

(assert (=> d!27903 m!114959))

(declare-fun m!114961 () Bool)

(assert (=> d!27903 m!114961))

(declare-fun m!114963 () Bool)

(assert (=> d!27903 m!114963))

(declare-fun m!114965 () Bool)

(assert (=> d!27903 m!114965))

(declare-fun m!114967 () Bool)

(assert (=> b!103878 m!114967))

(declare-fun m!114969 () Bool)

(assert (=> b!103879 m!114969))

(assert (=> d!27797 d!27903))

(declare-fun d!27905 () Bool)

(declare-fun e!67651 () Bool)

(assert (=> d!27905 e!67651))

(declare-fun res!51821 () Bool)

(assert (=> d!27905 (=> (not res!51821) (not e!67651))))

(declare-fun lt!53040 () ListLongMap!1569)

(assert (=> d!27905 (= res!51821 (contains!824 lt!53040 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53041 () List!1611)

(assert (=> d!27905 (= lt!53040 (ListLongMap!1570 lt!53041))))

(declare-fun lt!53039 () Unit!3150)

(declare-fun lt!53042 () Unit!3150)

(assert (=> d!27905 (= lt!53039 lt!53042)))

(assert (=> d!27905 (= (getValueByKey!155 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27905 (= lt!53042 (lemmaContainsTupThenGetReturnValue!71 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27905 (= lt!53041 (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27905 (= (+!141 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53040)))

(declare-fun b!103880 () Bool)

(declare-fun res!51820 () Bool)

(assert (=> b!103880 (=> (not res!51820) (not e!67651))))

(assert (=> b!103880 (= res!51820 (= (getValueByKey!155 (toList!800 lt!53040) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103881 () Bool)

(assert (=> b!103881 (= e!67651 (contains!826 (toList!800 lt!53040) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27905 res!51821) b!103880))

(assert (= (and b!103880 res!51820) b!103881))

(declare-fun m!114971 () Bool)

(assert (=> d!27905 m!114971))

(declare-fun m!114973 () Bool)

(assert (=> d!27905 m!114973))

(declare-fun m!114975 () Bool)

(assert (=> d!27905 m!114975))

(declare-fun m!114977 () Bool)

(assert (=> d!27905 m!114977))

(declare-fun m!114979 () Bool)

(assert (=> b!103880 m!114979))

(declare-fun m!114981 () Bool)

(assert (=> b!103881 m!114981))

(assert (=> d!27797 d!27905))

(declare-fun d!27907 () Bool)

(declare-fun e!67652 () Bool)

(assert (=> d!27907 e!67652))

(declare-fun res!51823 () Bool)

(assert (=> d!27907 (=> (not res!51823) (not e!67652))))

(declare-fun lt!53044 () ListLongMap!1569)

(assert (=> d!27907 (= res!51823 (contains!824 lt!53044 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53045 () List!1611)

(assert (=> d!27907 (= lt!53044 (ListLongMap!1570 lt!53045))))

(declare-fun lt!53043 () Unit!3150)

(declare-fun lt!53046 () Unit!3150)

(assert (=> d!27907 (= lt!53043 lt!53046)))

(assert (=> d!27907 (= (getValueByKey!155 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27907 (= lt!53046 (lemmaContainsTupThenGetReturnValue!71 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27907 (= lt!53045 (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!27907 (= (+!141 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53044)))

(declare-fun b!103882 () Bool)

(declare-fun res!51822 () Bool)

(assert (=> b!103882 (=> (not res!51822) (not e!67652))))

(assert (=> b!103882 (= res!51822 (= (getValueByKey!155 (toList!800 lt!53044) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!103883 () Bool)

(assert (=> b!103883 (= e!67652 (contains!826 (toList!800 lt!53044) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!27907 res!51823) b!103882))

(assert (= (and b!103882 res!51822) b!103883))

(declare-fun m!114983 () Bool)

(assert (=> d!27907 m!114983))

(declare-fun m!114985 () Bool)

(assert (=> d!27907 m!114985))

(declare-fun m!114987 () Bool)

(assert (=> d!27907 m!114987))

(declare-fun m!114989 () Bool)

(assert (=> d!27907 m!114989))

(declare-fun m!114991 () Bool)

(assert (=> b!103882 m!114991))

(declare-fun m!114993 () Bool)

(assert (=> b!103883 m!114993))

(assert (=> d!27797 d!27907))

(declare-fun d!27909 () Bool)

(declare-fun e!67653 () Bool)

(assert (=> d!27909 e!67653))

(declare-fun res!51825 () Bool)

(assert (=> d!27909 (=> (not res!51825) (not e!67653))))

(declare-fun lt!53048 () ListLongMap!1569)

(assert (=> d!27909 (= res!51825 (contains!824 lt!53048 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53049 () List!1611)

(assert (=> d!27909 (= lt!53048 (ListLongMap!1570 lt!53049))))

(declare-fun lt!53047 () Unit!3150)

(declare-fun lt!53050 () Unit!3150)

(assert (=> d!27909 (= lt!53047 lt!53050)))

(assert (=> d!27909 (= (getValueByKey!155 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27909 (= lt!53050 (lemmaContainsTupThenGetReturnValue!71 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27909 (= lt!53049 (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27909 (= (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53048)))

(declare-fun b!103884 () Bool)

(declare-fun res!51824 () Bool)

(assert (=> b!103884 (=> (not res!51824) (not e!67653))))

(assert (=> b!103884 (= res!51824 (= (getValueByKey!155 (toList!800 lt!53048) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103885 () Bool)

(assert (=> b!103885 (= e!67653 (contains!826 (toList!800 lt!53048) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27909 res!51825) b!103884))

(assert (= (and b!103884 res!51824) b!103885))

(declare-fun m!114995 () Bool)

(assert (=> d!27909 m!114995))

(declare-fun m!114997 () Bool)

(assert (=> d!27909 m!114997))

(declare-fun m!114999 () Bool)

(assert (=> d!27909 m!114999))

(declare-fun m!115001 () Bool)

(assert (=> d!27909 m!115001))

(declare-fun m!115003 () Bool)

(assert (=> b!103884 m!115003))

(declare-fun m!115005 () Bool)

(assert (=> b!103885 m!115005))

(assert (=> d!27797 d!27909))

(declare-fun d!27911 () Bool)

(assert (=> d!27911 (= (map!1282 (_2!1212 lt!52658)) (getCurrentListMap!487 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))))))

(declare-fun bs!4252 () Bool)

(assert (= bs!4252 d!27911))

(declare-fun m!115007 () Bool)

(assert (=> bs!4252 m!115007))

(assert (=> bm!10825 d!27911))

(declare-fun d!27913 () Bool)

(declare-fun e!67655 () Bool)

(assert (=> d!27913 e!67655))

(declare-fun res!51826 () Bool)

(assert (=> d!27913 (=> res!51826 e!67655)))

(declare-fun lt!53051 () Bool)

(assert (=> d!27913 (= res!51826 (not lt!53051))))

(declare-fun lt!53052 () Bool)

(assert (=> d!27913 (= lt!53051 lt!53052)))

(declare-fun lt!53053 () Unit!3150)

(declare-fun e!67654 () Unit!3150)

(assert (=> d!27913 (= lt!53053 e!67654)))

(declare-fun c!17931 () Bool)

(assert (=> d!27913 (= c!17931 lt!53052)))

(assert (=> d!27913 (= lt!53052 (containsKey!159 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27913 (= (contains!824 lt!52728 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53051)))

(declare-fun b!103886 () Bool)

(declare-fun lt!53054 () Unit!3150)

(assert (=> b!103886 (= e!67654 lt!53054)))

(assert (=> b!103886 (= lt!53054 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103886 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!103887 () Bool)

(declare-fun Unit!3175 () Unit!3150)

(assert (=> b!103887 (= e!67654 Unit!3175)))

(declare-fun b!103888 () Bool)

(assert (=> b!103888 (= e!67655 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27913 c!17931) b!103886))

(assert (= (and d!27913 (not c!17931)) b!103887))

(assert (= (and d!27913 (not res!51826)) b!103888))

(declare-fun m!115009 () Bool)

(assert (=> d!27913 m!115009))

(declare-fun m!115011 () Bool)

(assert (=> b!103886 m!115011))

(declare-fun m!115013 () Bool)

(assert (=> b!103886 m!115013))

(assert (=> b!103886 m!115013))

(declare-fun m!115015 () Bool)

(assert (=> b!103886 m!115015))

(assert (=> b!103888 m!115013))

(assert (=> b!103888 m!115013))

(assert (=> b!103888 m!115015))

(assert (=> bm!10853 d!27913))

(assert (=> d!27781 d!27785))

(declare-fun d!27915 () Bool)

(assert (=> d!27915 (not (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!27915 true))

(declare-fun _$68!103 () Unit!3150)

(assert (=> d!27915 (= (choose!68 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607)) _$68!103)))

(declare-fun bs!4253 () Bool)

(assert (= bs!4253 d!27915))

(assert (=> bs!4253 m!114165))

(assert (=> bs!4253 m!114169))

(assert (=> d!27781 d!27915))

(declare-fun d!27917 () Bool)

(declare-fun e!67657 () Bool)

(assert (=> d!27917 e!67657))

(declare-fun res!51827 () Bool)

(assert (=> d!27917 (=> res!51827 e!67657)))

(declare-fun lt!53055 () Bool)

(assert (=> d!27917 (= res!51827 (not lt!53055))))

(declare-fun lt!53056 () Bool)

(assert (=> d!27917 (= lt!53055 lt!53056)))

(declare-fun lt!53057 () Unit!3150)

(declare-fun e!67656 () Unit!3150)

(assert (=> d!27917 (= lt!53057 e!67656)))

(declare-fun c!17932 () Bool)

(assert (=> d!27917 (= c!17932 lt!53056)))

(assert (=> d!27917 (= lt!53056 (containsKey!159 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!27917 (= (contains!824 e!67364 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53055)))

(declare-fun b!103889 () Bool)

(declare-fun lt!53058 () Unit!3150)

(assert (=> b!103889 (= e!67656 lt!53058)))

(assert (=> b!103889 (= lt!53058 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!103889 (isDefined!108 (getValueByKey!155 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!103890 () Bool)

(declare-fun Unit!3176 () Unit!3150)

(assert (=> b!103890 (= e!67656 Unit!3176)))

(declare-fun b!103891 () Bool)

(assert (=> b!103891 (= e!67657 (isDefined!108 (getValueByKey!155 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!27917 c!17932) b!103889))

(assert (= (and d!27917 (not c!17932)) b!103890))

(assert (= (and d!27917 (not res!51827)) b!103891))

(assert (=> d!27917 m!114165))

(declare-fun m!115017 () Bool)

(assert (=> d!27917 m!115017))

(assert (=> b!103889 m!114165))

(declare-fun m!115019 () Bool)

(assert (=> b!103889 m!115019))

(assert (=> b!103889 m!114165))

(declare-fun m!115021 () Bool)

(assert (=> b!103889 m!115021))

(assert (=> b!103889 m!115021))

(declare-fun m!115023 () Bool)

(assert (=> b!103889 m!115023))

(assert (=> b!103891 m!114165))

(assert (=> b!103891 m!115021))

(assert (=> b!103891 m!115021))

(assert (=> b!103891 m!115023))

(assert (=> bm!10835 d!27917))

(declare-fun b!103892 () Bool)

(declare-fun e!67659 () Bool)

(declare-fun call!10922 () Bool)

(assert (=> b!103892 (= e!67659 call!10922)))

(declare-fun b!103893 () Bool)

(declare-fun e!67660 () Bool)

(assert (=> b!103893 (= e!67660 (contains!825 Nil!1607 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!103894 () Bool)

(assert (=> b!103894 (= e!67659 call!10922)))

(declare-fun b!103895 () Bool)

(declare-fun e!67661 () Bool)

(assert (=> b!103895 (= e!67661 e!67659)))

(declare-fun c!17933 () Bool)

(assert (=> b!103895 (= c!17933 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!27919 () Bool)

(declare-fun res!51830 () Bool)

(declare-fun e!67658 () Bool)

(assert (=> d!27919 (=> res!51830 e!67658)))

(assert (=> d!27919 (= res!51830 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27919 (= (arrayNoDuplicates!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 Nil!1607) e!67658)))

(declare-fun bm!10919 () Bool)

(assert (=> bm!10919 (= call!10922 (arrayNoDuplicates!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17933 (Cons!1606 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607)))))

(declare-fun b!103896 () Bool)

(assert (=> b!103896 (= e!67658 e!67661)))

(declare-fun res!51829 () Bool)

(assert (=> b!103896 (=> (not res!51829) (not e!67661))))

(assert (=> b!103896 (= res!51829 (not e!67660))))

(declare-fun res!51828 () Bool)

(assert (=> b!103896 (=> (not res!51828) (not e!67660))))

(assert (=> b!103896 (= res!51828 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!27919 (not res!51830)) b!103896))

(assert (= (and b!103896 res!51828) b!103893))

(assert (= (and b!103896 res!51829) b!103895))

(assert (= (and b!103895 c!17933) b!103892))

(assert (= (and b!103895 (not c!17933)) b!103894))

(assert (= (or b!103892 b!103894) bm!10919))

(assert (=> b!103893 m!114525))

(assert (=> b!103893 m!114525))

(declare-fun m!115025 () Bool)

(assert (=> b!103893 m!115025))

(assert (=> b!103895 m!114525))

(assert (=> b!103895 m!114525))

(assert (=> b!103895 m!114527))

(assert (=> bm!10919 m!114525))

(declare-fun m!115027 () Bool)

(assert (=> bm!10919 m!115027))

(assert (=> b!103896 m!114525))

(assert (=> b!103896 m!114525))

(assert (=> b!103896 m!114527))

(assert (=> b!103260 d!27919))

(declare-fun d!27921 () Bool)

(declare-fun lt!53061 () Bool)

(declare-fun content!108 (List!1611) (InoxSet tuple2!2400))

(assert (=> d!27921 (= lt!53061 (select (content!108 (toList!800 lt!52793)) lt!52538))))

(declare-fun e!67667 () Bool)

(assert (=> d!27921 (= lt!53061 e!67667)))

(declare-fun res!51835 () Bool)

(assert (=> d!27921 (=> (not res!51835) (not e!67667))))

(assert (=> d!27921 (= res!51835 ((_ is Cons!1607) (toList!800 lt!52793)))))

(assert (=> d!27921 (= (contains!826 (toList!800 lt!52793) lt!52538) lt!53061)))

(declare-fun b!103901 () Bool)

(declare-fun e!67666 () Bool)

(assert (=> b!103901 (= e!67667 e!67666)))

(declare-fun res!51836 () Bool)

(assert (=> b!103901 (=> res!51836 e!67666)))

(assert (=> b!103901 (= res!51836 (= (h!2203 (toList!800 lt!52793)) lt!52538))))

(declare-fun b!103902 () Bool)

(assert (=> b!103902 (= e!67666 (contains!826 (t!5673 (toList!800 lt!52793)) lt!52538))))

(assert (= (and d!27921 res!51835) b!103901))

(assert (= (and b!103901 (not res!51836)) b!103902))

(declare-fun m!115029 () Bool)

(assert (=> d!27921 m!115029))

(declare-fun m!115031 () Bool)

(assert (=> d!27921 m!115031))

(declare-fun m!115033 () Bool)

(assert (=> b!103902 m!115033))

(assert (=> b!103539 d!27921))

(declare-fun d!27923 () Bool)

(declare-fun lt!53062 () Bool)

(assert (=> d!27923 (= lt!53062 (select (content!108 (toList!800 lt!52789)) lt!52540))))

(declare-fun e!67669 () Bool)

(assert (=> d!27923 (= lt!53062 e!67669)))

(declare-fun res!51837 () Bool)

(assert (=> d!27923 (=> (not res!51837) (not e!67669))))

(assert (=> d!27923 (= res!51837 ((_ is Cons!1607) (toList!800 lt!52789)))))

(assert (=> d!27923 (= (contains!826 (toList!800 lt!52789) lt!52540) lt!53062)))

(declare-fun b!103903 () Bool)

(declare-fun e!67668 () Bool)

(assert (=> b!103903 (= e!67669 e!67668)))

(declare-fun res!51838 () Bool)

(assert (=> b!103903 (=> res!51838 e!67668)))

(assert (=> b!103903 (= res!51838 (= (h!2203 (toList!800 lt!52789)) lt!52540))))

(declare-fun b!103904 () Bool)

(assert (=> b!103904 (= e!67668 (contains!826 (t!5673 (toList!800 lt!52789)) lt!52540))))

(assert (= (and d!27923 res!51837) b!103903))

(assert (= (and b!103903 (not res!51838)) b!103904))

(declare-fun m!115035 () Bool)

(assert (=> d!27923 m!115035))

(declare-fun m!115037 () Bool)

(assert (=> d!27923 m!115037))

(declare-fun m!115039 () Bool)

(assert (=> b!103904 m!115039))

(assert (=> b!103537 d!27923))

(assert (=> bm!10834 d!27777))

(assert (=> bm!10832 d!27885))

(assert (=> b!103534 d!27819))

(declare-fun d!27925 () Bool)

(declare-fun e!67671 () Bool)

(assert (=> d!27925 e!67671))

(declare-fun res!51839 () Bool)

(assert (=> d!27925 (=> res!51839 e!67671)))

(declare-fun lt!53063 () Bool)

(assert (=> d!27925 (= res!51839 (not lt!53063))))

(declare-fun lt!53064 () Bool)

(assert (=> d!27925 (= lt!53063 lt!53064)))

(declare-fun lt!53065 () Unit!3150)

(declare-fun e!67670 () Unit!3150)

(assert (=> d!27925 (= lt!53065 e!67670)))

(declare-fun c!17934 () Bool)

(assert (=> d!27925 (= c!17934 lt!53064)))

(assert (=> d!27925 (= lt!53064 (containsKey!159 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (=> d!27925 (= (contains!824 call!10817 (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))) lt!53063)))

(declare-fun b!103905 () Bool)

(declare-fun lt!53066 () Unit!3150)

(assert (=> b!103905 (= e!67670 lt!53066)))

(assert (=> b!103905 (= lt!53066 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (=> b!103905 (isDefined!108 (getValueByKey!155 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(declare-fun b!103906 () Bool)

(declare-fun Unit!3177 () Unit!3150)

(assert (=> b!103906 (= e!67670 Unit!3177)))

(declare-fun b!103907 () Bool)

(assert (=> b!103907 (= e!67671 (isDefined!108 (getValueByKey!155 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))))

(assert (= (and d!27925 c!17934) b!103905))

(assert (= (and d!27925 (not c!17934)) b!103906))

(assert (= (and d!27925 (not res!51839)) b!103907))

(assert (=> d!27925 m!114297))

(declare-fun m!115041 () Bool)

(assert (=> d!27925 m!115041))

(assert (=> b!103905 m!114297))

(declare-fun m!115043 () Bool)

(assert (=> b!103905 m!115043))

(assert (=> b!103905 m!114297))

(declare-fun m!115045 () Bool)

(assert (=> b!103905 m!115045))

(assert (=> b!103905 m!115045))

(declare-fun m!115047 () Bool)

(assert (=> b!103905 m!115047))

(assert (=> b!103907 m!114297))

(assert (=> b!103907 m!115045))

(assert (=> b!103907 m!115045))

(assert (=> b!103907 m!115047))

(assert (=> b!103363 d!27925))

(declare-fun d!27927 () Bool)

(declare-fun e!67674 () Bool)

(assert (=> d!27927 e!67674))

(declare-fun res!51842 () Bool)

(assert (=> d!27927 (=> (not res!51842) (not e!67674))))

(assert (=> d!27927 (= res!51842 (and (bvsge (index!3180 lt!52655) #b00000000000000000000000000000000) (bvslt (index!3180 lt!52655) (size!2311 (_keys!4263 newMap!16)))))))

(declare-fun lt!53069 () Unit!3150)

(declare-fun choose!641 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) Int) Unit!3150)

(assert (=> d!27927 (= lt!53069 (choose!641 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27927 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27927 (= (lemmaValidKeyInArrayIsInListMap!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (defaultEntry!2561 newMap!16)) lt!53069)))

(declare-fun b!103910 () Bool)

(assert (=> b!103910 (= e!67674 (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (= (and d!27927 res!51842) b!103910))

(declare-fun m!115049 () Bool)

(assert (=> d!27927 m!115049))

(assert (=> d!27927 m!114575))

(declare-fun m!115051 () Bool)

(assert (=> b!103910 m!115051))

(assert (=> b!103910 m!114297))

(assert (=> b!103910 m!115051))

(assert (=> b!103910 m!114297))

(declare-fun m!115053 () Bool)

(assert (=> b!103910 m!115053))

(assert (=> b!103363 d!27927))

(declare-fun d!27929 () Bool)

(declare-fun e!67677 () Bool)

(assert (=> d!27929 e!67677))

(declare-fun res!51845 () Bool)

(assert (=> d!27929 (=> (not res!51845) (not e!67677))))

(assert (=> d!27929 (= res!51845 (and (bvsge (index!3180 lt!52655) #b00000000000000000000000000000000) (bvslt (index!3180 lt!52655) (size!2312 (_values!2544 newMap!16)))))))

(declare-fun lt!53072 () Unit!3150)

(declare-fun choose!642 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3150)

(assert (=> d!27929 (= lt!53072 (choose!642 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)))))

(assert (=> d!27929 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27929 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)) lt!53072)))

(declare-fun b!103913 () Bool)

(assert (=> b!103913 (= e!67677 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (getCurrentListMap!487 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))))))

(assert (= (and d!27929 res!51845) b!103913))

(assert (=> d!27929 m!114165))

(declare-fun m!115055 () Bool)

(assert (=> d!27929 m!115055))

(assert (=> d!27929 m!114575))

(assert (=> b!103913 m!114331))

(assert (=> b!103913 m!114331))

(assert (=> b!103913 m!114633))

(assert (=> b!103913 m!114281))

(declare-fun m!115057 () Bool)

(assert (=> b!103913 m!115057))

(assert (=> b!103363 d!27929))

(declare-fun b!103922 () Bool)

(declare-fun e!67683 () (_ BitVec 32))

(declare-fun call!10925 () (_ BitVec 32))

(assert (=> b!103922 (= e!67683 call!10925)))

(declare-fun b!103923 () Bool)

(assert (=> b!103923 (= e!67683 (bvadd #b00000000000000000000000000000001 call!10925))))

(declare-fun b!103924 () Bool)

(declare-fun e!67682 () (_ BitVec 32))

(assert (=> b!103924 (= e!67682 e!67683)))

(declare-fun c!17940 () Bool)

(assert (=> b!103924 (= c!17940 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!27931 () Bool)

(declare-fun lt!53075 () (_ BitVec 32))

(assert (=> d!27931 (and (bvsge lt!53075 #b00000000000000000000000000000000) (bvsle lt!53075 (bvsub (size!2311 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!27931 (= lt!53075 e!67682)))

(declare-fun c!17939 () Bool)

(assert (=> d!27931 (= c!17939 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27931 (and (bvsle #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2311 (_keys!4263 newMap!16)) (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!27931 (= (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) lt!53075)))

(declare-fun b!103925 () Bool)

(assert (=> b!103925 (= e!67682 #b00000000000000000000000000000000)))

(declare-fun bm!10922 () Bool)

(assert (=> bm!10922 (= call!10925 (arrayCountValidKeys!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(assert (= (and d!27931 c!17939) b!103925))

(assert (= (and d!27931 (not c!17939)) b!103924))

(assert (= (and b!103924 c!17940) b!103923))

(assert (= (and b!103924 (not c!17940)) b!103922))

(assert (= (or b!103923 b!103922) bm!10922))

(assert (=> b!103924 m!114525))

(assert (=> b!103924 m!114525))

(assert (=> b!103924 m!114527))

(declare-fun m!115059 () Bool)

(assert (=> bm!10922 m!115059))

(assert (=> b!103258 d!27931))

(declare-fun d!27933 () Bool)

(declare-fun res!51846 () Bool)

(declare-fun e!67684 () Bool)

(assert (=> d!27933 (=> (not res!51846) (not e!67684))))

(assert (=> d!27933 (= res!51846 (simpleValid!73 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!27933 (= (valid!417 (v!2876 (underlying!358 thiss!992))) e!67684)))

(declare-fun b!103926 () Bool)

(declare-fun res!51847 () Bool)

(assert (=> b!103926 (=> (not res!51847) (not e!67684))))

(assert (=> b!103926 (= res!51847 (= (arrayCountValidKeys!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))) (_size!496 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103927 () Bool)

(declare-fun res!51848 () Bool)

(assert (=> b!103927 (=> (not res!51848) (not e!67684))))

(assert (=> b!103927 (= res!51848 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!103928 () Bool)

(assert (=> b!103928 (= e!67684 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!27933 res!51846) b!103926))

(assert (= (and b!103926 res!51847) b!103927))

(assert (= (and b!103927 res!51848) b!103928))

(declare-fun m!115061 () Bool)

(assert (=> d!27933 m!115061))

(declare-fun m!115063 () Bool)

(assert (=> b!103926 m!115063))

(declare-fun m!115065 () Bool)

(assert (=> b!103927 m!115065))

(declare-fun m!115067 () Bool)

(assert (=> b!103928 m!115067))

(assert (=> d!27809 d!27933))

(declare-fun d!27935 () Bool)

(declare-fun e!67685 () Bool)

(assert (=> d!27935 e!67685))

(declare-fun res!51850 () Bool)

(assert (=> d!27935 (=> (not res!51850) (not e!67685))))

(declare-fun lt!53077 () ListLongMap!1569)

(assert (=> d!27935 (= res!51850 (contains!824 lt!53077 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun lt!53078 () List!1611)

(assert (=> d!27935 (= lt!53077 (ListLongMap!1570 lt!53078))))

(declare-fun lt!53076 () Unit!3150)

(declare-fun lt!53079 () Unit!3150)

(assert (=> d!27935 (= lt!53076 lt!53079)))

(assert (=> d!27935 (= (getValueByKey!155 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (Some!160 (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!27935 (= lt!53079 (lemmaContainsTupThenGetReturnValue!71 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!27935 (= lt!53078 (insertStrictlySorted!74 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!27935 (= (+!141 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53077)))

(declare-fun b!103929 () Bool)

(declare-fun res!51849 () Bool)

(assert (=> b!103929 (=> (not res!51849) (not e!67685))))

(assert (=> b!103929 (= res!51849 (= (getValueByKey!155 (toList!800 lt!53077) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (Some!160 (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!103930 () Bool)

(assert (=> b!103930 (= e!67685 (contains!826 (toList!800 lt!53077) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!27935 res!51850) b!103929))

(assert (= (and b!103929 res!51849) b!103930))

(declare-fun m!115069 () Bool)

(assert (=> d!27935 m!115069))

(declare-fun m!115071 () Bool)

(assert (=> d!27935 m!115071))

(declare-fun m!115073 () Bool)

(assert (=> d!27935 m!115073))

(declare-fun m!115075 () Bool)

(assert (=> d!27935 m!115075))

(declare-fun m!115077 () Bool)

(assert (=> b!103929 m!115077))

(declare-fun m!115079 () Bool)

(assert (=> b!103930 m!115079))

(assert (=> bm!10856 d!27935))

(assert (=> d!27779 d!27807))

(declare-fun d!27937 () Bool)

(assert (=> d!27937 (= (apply!97 lt!52728 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1326 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4254 () Bool)

(assert (= bs!4254 d!27937))

(assert (=> bs!4254 m!114339))

(declare-fun m!115081 () Bool)

(assert (=> bs!4254 m!115081))

(assert (=> bs!4254 m!115081))

(declare-fun m!115083 () Bool)

(assert (=> bs!4254 m!115083))

(assert (=> b!103455 d!27937))

(declare-fun d!27939 () Bool)

(declare-fun c!17941 () Bool)

(assert (=> d!27939 (= c!17941 ((_ is ValueCellFull!993) (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67686 () V!3211)

(assert (=> d!27939 (= (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67686)))

(declare-fun b!103931 () Bool)

(assert (=> b!103931 (= e!67686 (get!1324 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!103932 () Bool)

(assert (=> b!103932 (= e!67686 (get!1325 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27939 c!17941) b!103931))

(assert (= (and d!27939 (not c!17941)) b!103932))

(assert (=> b!103931 m!114347))

(assert (=> b!103931 m!114197))

(declare-fun m!115085 () Bool)

(assert (=> b!103931 m!115085))

(assert (=> b!103932 m!114347))

(assert (=> b!103932 m!114197))

(declare-fun m!115087 () Bool)

(assert (=> b!103932 m!115087))

(assert (=> b!103455 d!27939))

(declare-fun d!27941 () Bool)

(declare-fun isEmpty!368 (List!1611) Bool)

(assert (=> d!27941 (= (isEmpty!367 lt!52783) (isEmpty!368 (toList!800 lt!52783)))))

(declare-fun bs!4255 () Bool)

(assert (= bs!4255 d!27941))

(declare-fun m!115089 () Bool)

(assert (=> bs!4255 m!115089))

(assert (=> b!103532 d!27941))

(assert (=> b!103530 d!27939))

(declare-fun d!27943 () Bool)

(declare-fun e!67687 () Bool)

(assert (=> d!27943 e!67687))

(declare-fun res!51852 () Bool)

(assert (=> d!27943 (=> (not res!51852) (not e!67687))))

(declare-fun lt!53081 () ListLongMap!1569)

(assert (=> d!27943 (= res!51852 (contains!824 lt!53081 (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun lt!53082 () List!1611)

(assert (=> d!27943 (= lt!53081 (ListLongMap!1570 lt!53082))))

(declare-fun lt!53080 () Unit!3150)

(declare-fun lt!53083 () Unit!3150)

(assert (=> d!27943 (= lt!53080 lt!53083)))

(assert (=> d!27943 (= (getValueByKey!155 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787))) (Some!160 (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))

(assert (=> d!27943 (= lt!53083 (lemmaContainsTupThenGetReturnValue!71 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))

(assert (=> d!27943 (= lt!53082 (insertStrictlySorted!74 (toList!800 lt!52782) (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))

(assert (=> d!27943 (= (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)) lt!53081)))

(declare-fun b!103933 () Bool)

(declare-fun res!51851 () Bool)

(assert (=> b!103933 (=> (not res!51851) (not e!67687))))

(assert (=> b!103933 (= res!51851 (= (getValueByKey!155 (toList!800 lt!53081) (_1!1211 (tuple2!2401 lt!52781 lt!52787))) (Some!160 (_2!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(declare-fun b!103934 () Bool)

(assert (=> b!103934 (= e!67687 (contains!826 (toList!800 lt!53081) (tuple2!2401 lt!52781 lt!52787)))))

(assert (= (and d!27943 res!51852) b!103933))

(assert (= (and b!103933 res!51851) b!103934))

(declare-fun m!115091 () Bool)

(assert (=> d!27943 m!115091))

(declare-fun m!115093 () Bool)

(assert (=> d!27943 m!115093))

(declare-fun m!115095 () Bool)

(assert (=> d!27943 m!115095))

(declare-fun m!115097 () Bool)

(assert (=> d!27943 m!115097))

(declare-fun m!115099 () Bool)

(assert (=> b!103933 m!115099))

(declare-fun m!115101 () Bool)

(assert (=> b!103934 m!115101))

(assert (=> b!103530 d!27943))

(declare-fun d!27945 () Bool)

(declare-fun e!67689 () Bool)

(assert (=> d!27945 e!67689))

(declare-fun res!51853 () Bool)

(assert (=> d!27945 (=> res!51853 e!67689)))

(declare-fun lt!53084 () Bool)

(assert (=> d!27945 (= res!51853 (not lt!53084))))

(declare-fun lt!53085 () Bool)

(assert (=> d!27945 (= lt!53084 lt!53085)))

(declare-fun lt!53086 () Unit!3150)

(declare-fun e!67688 () Unit!3150)

(assert (=> d!27945 (= lt!53086 e!67688)))

(declare-fun c!17942 () Bool)

(assert (=> d!27945 (= c!17942 lt!53085)))

(assert (=> d!27945 (= lt!53085 (containsKey!159 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))

(assert (=> d!27945 (= (contains!824 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)) lt!52785) lt!53084)))

(declare-fun b!103935 () Bool)

(declare-fun lt!53087 () Unit!3150)

(assert (=> b!103935 (= e!67688 lt!53087)))

(assert (=> b!103935 (= lt!53087 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))

(assert (=> b!103935 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))

(declare-fun b!103936 () Bool)

(declare-fun Unit!3178 () Unit!3150)

(assert (=> b!103936 (= e!67688 Unit!3178)))

(declare-fun b!103937 () Bool)

(assert (=> b!103937 (= e!67689 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785)))))

(assert (= (and d!27945 c!17942) b!103935))

(assert (= (and d!27945 (not c!17942)) b!103936))

(assert (= (and d!27945 (not res!51853)) b!103937))

(declare-fun m!115103 () Bool)

(assert (=> d!27945 m!115103))

(declare-fun m!115105 () Bool)

(assert (=> b!103935 m!115105))

(declare-fun m!115107 () Bool)

(assert (=> b!103935 m!115107))

(assert (=> b!103935 m!115107))

(declare-fun m!115109 () Bool)

(assert (=> b!103935 m!115109))

(assert (=> b!103937 m!115107))

(assert (=> b!103937 m!115107))

(assert (=> b!103937 m!115109))

(assert (=> b!103530 d!27945))

(declare-fun d!27947 () Bool)

(assert (=> d!27947 (not (contains!824 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)) lt!52785))))

(declare-fun lt!53090 () Unit!3150)

(declare-fun choose!643 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3150)

(assert (=> d!27947 (= lt!53090 (choose!643 lt!52782 lt!52781 lt!52787 lt!52785))))

(declare-fun e!67692 () Bool)

(assert (=> d!27947 e!67692))

(declare-fun res!51856 () Bool)

(assert (=> d!27947 (=> (not res!51856) (not e!67692))))

(assert (=> d!27947 (= res!51856 (not (contains!824 lt!52782 lt!52785)))))

(assert (=> d!27947 (= (addStillNotContains!45 lt!52782 lt!52781 lt!52787 lt!52785) lt!53090)))

(declare-fun b!103941 () Bool)

(assert (=> b!103941 (= e!67692 (not (= lt!52781 lt!52785)))))

(assert (= (and d!27947 res!51856) b!103941))

(assert (=> d!27947 m!114445))

(assert (=> d!27947 m!114445))

(assert (=> d!27947 m!114447))

(declare-fun m!115111 () Bool)

(assert (=> d!27947 m!115111))

(declare-fun m!115113 () Bool)

(assert (=> d!27947 m!115113))

(assert (=> b!103530 d!27947))

(declare-fun d!27949 () Bool)

(declare-fun e!67693 () Bool)

(assert (=> d!27949 e!67693))

(declare-fun res!51858 () Bool)

(assert (=> d!27949 (=> (not res!51858) (not e!67693))))

(declare-fun lt!53092 () ListLongMap!1569)

(assert (=> d!27949 (= res!51858 (contains!824 lt!53092 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53093 () List!1611)

(assert (=> d!27949 (= lt!53092 (ListLongMap!1570 lt!53093))))

(declare-fun lt!53091 () Unit!3150)

(declare-fun lt!53094 () Unit!3150)

(assert (=> d!27949 (= lt!53091 lt!53094)))

(assert (=> d!27949 (= (getValueByKey!155 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27949 (= lt!53094 (lemmaContainsTupThenGetReturnValue!71 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27949 (= lt!53093 (insertStrictlySorted!74 (toList!800 call!10866) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!27949 (= (+!141 call!10866 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53092)))

(declare-fun b!103942 () Bool)

(declare-fun res!51857 () Bool)

(assert (=> b!103942 (=> (not res!51857) (not e!67693))))

(assert (=> b!103942 (= res!51857 (= (getValueByKey!155 (toList!800 lt!53092) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!103943 () Bool)

(assert (=> b!103943 (= e!67693 (contains!826 (toList!800 lt!53092) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!27949 res!51858) b!103942))

(assert (= (and b!103942 res!51857) b!103943))

(declare-fun m!115115 () Bool)

(assert (=> d!27949 m!115115))

(declare-fun m!115117 () Bool)

(assert (=> d!27949 m!115117))

(declare-fun m!115119 () Bool)

(assert (=> d!27949 m!115119))

(declare-fun m!115121 () Bool)

(assert (=> d!27949 m!115121))

(declare-fun m!115123 () Bool)

(assert (=> b!103942 m!115123))

(declare-fun m!115125 () Bool)

(assert (=> b!103943 m!115125))

(assert (=> b!103530 d!27949))

(declare-fun d!27951 () Bool)

(declare-fun lt!53095 () Bool)

(assert (=> d!27951 (= lt!53095 (select (content!108 (toList!800 lt!52764)) lt!52540))))

(declare-fun e!67695 () Bool)

(assert (=> d!27951 (= lt!53095 e!67695)))

(declare-fun res!51859 () Bool)

(assert (=> d!27951 (=> (not res!51859) (not e!67695))))

(assert (=> d!27951 (= res!51859 ((_ is Cons!1607) (toList!800 lt!52764)))))

(assert (=> d!27951 (= (contains!826 (toList!800 lt!52764) lt!52540) lt!53095)))

(declare-fun b!103944 () Bool)

(declare-fun e!67694 () Bool)

(assert (=> b!103944 (= e!67695 e!67694)))

(declare-fun res!51860 () Bool)

(assert (=> b!103944 (=> res!51860 e!67694)))

(assert (=> b!103944 (= res!51860 (= (h!2203 (toList!800 lt!52764)) lt!52540))))

(declare-fun b!103945 () Bool)

(assert (=> b!103945 (= e!67694 (contains!826 (t!5673 (toList!800 lt!52764)) lt!52540))))

(assert (= (and d!27951 res!51859) b!103944))

(assert (= (and b!103944 (not res!51860)) b!103945))

(declare-fun m!115127 () Bool)

(assert (=> d!27951 m!115127))

(declare-fun m!115129 () Bool)

(assert (=> d!27951 m!115129))

(declare-fun m!115131 () Bool)

(assert (=> b!103945 m!115131))

(assert (=> b!103499 d!27951))

(declare-fun d!27953 () Bool)

(declare-fun res!51861 () Bool)

(declare-fun e!67696 () Bool)

(assert (=> d!27953 (=> (not res!51861) (not e!67696))))

(assert (=> d!27953 (= res!51861 (simpleValid!73 (_2!1212 lt!52658)))))

(assert (=> d!27953 (= (valid!417 (_2!1212 lt!52658)) e!67696)))

(declare-fun b!103946 () Bool)

(declare-fun res!51862 () Bool)

(assert (=> b!103946 (=> (not res!51862) (not e!67696))))

(assert (=> b!103946 (= res!51862 (= (arrayCountValidKeys!0 (_keys!4263 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))) (_size!496 (_2!1212 lt!52658))))))

(declare-fun b!103947 () Bool)

(declare-fun res!51863 () Bool)

(assert (=> b!103947 (=> (not res!51863) (not e!67696))))

(assert (=> b!103947 (= res!51863 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658))))))

(declare-fun b!103948 () Bool)

(assert (=> b!103948 (= e!67696 (arrayNoDuplicates!0 (_keys!4263 (_2!1212 lt!52658)) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!27953 res!51861) b!103946))

(assert (= (and b!103946 res!51862) b!103947))

(assert (= (and b!103947 res!51863) b!103948))

(declare-fun m!115133 () Bool)

(assert (=> d!27953 m!115133))

(declare-fun m!115135 () Bool)

(assert (=> b!103946 m!115135))

(declare-fun m!115137 () Bool)

(assert (=> b!103947 m!115137))

(declare-fun m!115139 () Bool)

(assert (=> b!103948 m!115139))

(assert (=> d!27769 d!27953))

(assert (=> d!27769 d!27765))

(declare-fun b!103965 () Bool)

(declare-fun res!51875 () Bool)

(declare-fun e!67708 () Bool)

(assert (=> b!103965 (=> (not res!51875) (not e!67708))))

(declare-fun call!10931 () Bool)

(assert (=> b!103965 (= res!51875 call!10931)))

(declare-fun e!67707 () Bool)

(assert (=> b!103965 (= e!67707 e!67708)))

(declare-fun b!103966 () Bool)

(declare-fun e!67706 () Bool)

(declare-fun e!67705 () Bool)

(assert (=> b!103966 (= e!67706 e!67705)))

(declare-fun res!51874 () Bool)

(assert (=> b!103966 (= res!51874 call!10931)))

(assert (=> b!103966 (=> (not res!51874) (not e!67705))))

(declare-fun b!103967 () Bool)

(declare-fun lt!53100 () SeekEntryResult!258)

(assert (=> b!103967 (and (bvsge (index!3179 lt!53100) #b00000000000000000000000000000000) (bvslt (index!3179 lt!53100) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun res!51873 () Bool)

(assert (=> b!103967 (= res!51873 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!53100)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103967 (=> (not res!51873) (not e!67705))))

(declare-fun d!27955 () Bool)

(assert (=> d!27955 e!67706))

(declare-fun c!17947 () Bool)

(assert (=> d!27955 (= c!17947 ((_ is MissingZero!258) lt!53100))))

(assert (=> d!27955 (= lt!53100 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun lt!53101 () Unit!3150)

(declare-fun choose!644 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3150)

(assert (=> d!27955 (= lt!53101 (choose!644 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> d!27955 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!27955 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) lt!53101)))

(declare-fun b!103968 () Bool)

(declare-fun res!51872 () Bool)

(assert (=> b!103968 (=> (not res!51872) (not e!67708))))

(assert (=> b!103968 (= res!51872 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!53100)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103968 (and (bvsge (index!3182 lt!53100) #b00000000000000000000000000000000) (bvslt (index!3182 lt!53100) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!103969 () Bool)

(declare-fun call!10930 () Bool)

(assert (=> b!103969 (= e!67708 (not call!10930))))

(declare-fun bm!10927 () Bool)

(assert (=> bm!10927 (= call!10930 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!103970 () Bool)

(assert (=> b!103970 (= e!67707 ((_ is Undefined!258) lt!53100))))

(declare-fun b!103971 () Bool)

(assert (=> b!103971 (= e!67706 e!67707)))

(declare-fun c!17948 () Bool)

(assert (=> b!103971 (= c!17948 ((_ is MissingVacant!258) lt!53100))))

(declare-fun bm!10928 () Bool)

(assert (=> bm!10928 (= call!10931 (inRange!0 (ite c!17947 (index!3179 lt!53100) (index!3182 lt!53100)) (mask!6697 newMap!16)))))

(declare-fun b!103972 () Bool)

(assert (=> b!103972 (= e!67705 (not call!10930))))

(assert (= (and d!27955 c!17947) b!103966))

(assert (= (and d!27955 (not c!17947)) b!103971))

(assert (= (and b!103966 res!51874) b!103967))

(assert (= (and b!103967 res!51873) b!103972))

(assert (= (and b!103971 c!17948) b!103965))

(assert (= (and b!103971 (not c!17948)) b!103970))

(assert (= (and b!103965 res!51875) b!103968))

(assert (= (and b!103968 res!51872) b!103969))

(assert (= (or b!103966 b!103965) bm!10928))

(assert (= (or b!103972 b!103969) bm!10927))

(declare-fun m!115141 () Bool)

(assert (=> bm!10928 m!115141))

(assert (=> bm!10927 m!114165))

(assert (=> bm!10927 m!114307))

(declare-fun m!115143 () Bool)

(assert (=> b!103968 m!115143))

(declare-fun m!115145 () Bool)

(assert (=> b!103967 m!115145))

(assert (=> d!27955 m!114165))

(assert (=> d!27955 m!114295))

(assert (=> d!27955 m!114165))

(declare-fun m!115147 () Bool)

(assert (=> d!27955 m!115147))

(assert (=> d!27955 m!114575))

(assert (=> bm!10822 d!27955))

(assert (=> d!27777 d!27825))

(assert (=> bm!10863 d!27869))

(assert (=> b!103527 d!27819))

(declare-fun d!27957 () Bool)

(declare-fun lt!53102 () Bool)

(assert (=> d!27957 (= lt!53102 (select (content!108 (toList!800 lt!52757)) lt!52538))))

(declare-fun e!67710 () Bool)

(assert (=> d!27957 (= lt!53102 e!67710)))

(declare-fun res!51876 () Bool)

(assert (=> d!27957 (=> (not res!51876) (not e!67710))))

(assert (=> d!27957 (= res!51876 ((_ is Cons!1607) (toList!800 lt!52757)))))

(assert (=> d!27957 (= (contains!826 (toList!800 lt!52757) lt!52538) lt!53102)))

(declare-fun b!103973 () Bool)

(declare-fun e!67709 () Bool)

(assert (=> b!103973 (= e!67710 e!67709)))

(declare-fun res!51877 () Bool)

(assert (=> b!103973 (=> res!51877 e!67709)))

(assert (=> b!103973 (= res!51877 (= (h!2203 (toList!800 lt!52757)) lt!52538))))

(declare-fun b!103974 () Bool)

(assert (=> b!103974 (= e!67709 (contains!826 (t!5673 (toList!800 lt!52757)) lt!52538))))

(assert (= (and d!27957 res!51876) b!103973))

(assert (= (and b!103973 (not res!51877)) b!103974))

(declare-fun m!115149 () Bool)

(assert (=> d!27957 m!115149))

(declare-fun m!115151 () Bool)

(assert (=> d!27957 m!115151))

(declare-fun m!115153 () Bool)

(assert (=> b!103974 m!115153))

(assert (=> b!103497 d!27957))

(declare-fun d!27959 () Bool)

(assert (=> d!27959 (= (apply!97 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52730) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52730)))))

(declare-fun bs!4256 () Bool)

(assert (= bs!4256 d!27959))

(declare-fun m!115155 () Bool)

(assert (=> bs!4256 m!115155))

(assert (=> bs!4256 m!115155))

(declare-fun m!115157 () Bool)

(assert (=> bs!4256 m!115157))

(assert (=> b!103449 d!27959))

(declare-fun d!27961 () Bool)

(assert (=> d!27961 (= (apply!97 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52734) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52734)))))

(declare-fun bs!4257 () Bool)

(assert (= bs!4257 d!27961))

(declare-fun m!115159 () Bool)

(assert (=> bs!4257 m!115159))

(assert (=> bs!4257 m!115159))

(declare-fun m!115161 () Bool)

(assert (=> bs!4257 m!115161))

(assert (=> b!103449 d!27961))

(declare-fun d!27963 () Bool)

(declare-fun e!67711 () Bool)

(assert (=> d!27963 e!67711))

(declare-fun res!51879 () Bool)

(assert (=> d!27963 (=> (not res!51879) (not e!67711))))

(declare-fun lt!53104 () ListLongMap!1569)

(assert (=> d!27963 (= res!51879 (contains!824 lt!53104 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53105 () List!1611)

(assert (=> d!27963 (= lt!53104 (ListLongMap!1570 lt!53105))))

(declare-fun lt!53103 () Unit!3150)

(declare-fun lt!53106 () Unit!3150)

(assert (=> d!27963 (= lt!53103 lt!53106)))

(assert (=> d!27963 (= (getValueByKey!155 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27963 (= lt!53106 (lemmaContainsTupThenGetReturnValue!71 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27963 (= lt!53105 (insertStrictlySorted!74 (toList!800 lt!52725) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27963 (= (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53104)))

(declare-fun b!103975 () Bool)

(declare-fun res!51878 () Bool)

(assert (=> b!103975 (=> (not res!51878) (not e!67711))))

(assert (=> b!103975 (= res!51878 (= (getValueByKey!155 (toList!800 lt!53104) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103976 () Bool)

(assert (=> b!103976 (= e!67711 (contains!826 (toList!800 lt!53104) (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27963 res!51879) b!103975))

(assert (= (and b!103975 res!51878) b!103976))

(declare-fun m!115163 () Bool)

(assert (=> d!27963 m!115163))

(declare-fun m!115165 () Bool)

(assert (=> d!27963 m!115165))

(declare-fun m!115167 () Bool)

(assert (=> d!27963 m!115167))

(declare-fun m!115169 () Bool)

(assert (=> d!27963 m!115169))

(declare-fun m!115171 () Bool)

(assert (=> b!103975 m!115171))

(declare-fun m!115173 () Bool)

(assert (=> b!103976 m!115173))

(assert (=> b!103449 d!27963))

(declare-fun d!27965 () Bool)

(assert (=> d!27965 (= (apply!97 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52733) (apply!97 lt!52717 lt!52733))))

(declare-fun lt!53109 () Unit!3150)

(declare-fun choose!645 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3150)

(assert (=> d!27965 (= lt!53109 (choose!645 lt!52717 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52733))))

(declare-fun e!67714 () Bool)

(assert (=> d!27965 e!67714))

(declare-fun res!51882 () Bool)

(assert (=> d!27965 (=> (not res!51882) (not e!67714))))

(assert (=> d!27965 (= res!51882 (contains!824 lt!52717 lt!52733))))

(assert (=> d!27965 (= (addApplyDifferent!73 lt!52717 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52733) lt!53109)))

(declare-fun b!103980 () Bool)

(assert (=> b!103980 (= e!67714 (not (= lt!52733 lt!52724)))))

(assert (= (and d!27965 res!51882) b!103980))

(declare-fun m!115175 () Bool)

(assert (=> d!27965 m!115175))

(assert (=> d!27965 m!114355))

(assert (=> d!27965 m!114357))

(declare-fun m!115177 () Bool)

(assert (=> d!27965 m!115177))

(assert (=> d!27965 m!114363))

(assert (=> d!27965 m!114355))

(assert (=> b!103449 d!27965))

(declare-fun d!27967 () Bool)

(declare-fun e!67715 () Bool)

(assert (=> d!27967 e!67715))

(declare-fun res!51884 () Bool)

(assert (=> d!27967 (=> (not res!51884) (not e!67715))))

(declare-fun lt!53111 () ListLongMap!1569)

(assert (=> d!27967 (= res!51884 (contains!824 lt!53111 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53112 () List!1611)

(assert (=> d!27967 (= lt!53111 (ListLongMap!1570 lt!53112))))

(declare-fun lt!53110 () Unit!3150)

(declare-fun lt!53113 () Unit!3150)

(assert (=> d!27967 (= lt!53110 lt!53113)))

(assert (=> d!27967 (= (getValueByKey!155 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27967 (= lt!53113 (lemmaContainsTupThenGetReturnValue!71 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27967 (= lt!53112 (insertStrictlySorted!74 (toList!800 lt!52722) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27967 (= (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53111)))

(declare-fun b!103981 () Bool)

(declare-fun res!51883 () Bool)

(assert (=> b!103981 (=> (not res!51883) (not e!67715))))

(assert (=> b!103981 (= res!51883 (= (getValueByKey!155 (toList!800 lt!53111) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103982 () Bool)

(assert (=> b!103982 (= e!67715 (contains!826 (toList!800 lt!53111) (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27967 res!51884) b!103981))

(assert (= (and b!103981 res!51883) b!103982))

(declare-fun m!115179 () Bool)

(assert (=> d!27967 m!115179))

(declare-fun m!115181 () Bool)

(assert (=> d!27967 m!115181))

(declare-fun m!115183 () Bool)

(assert (=> d!27967 m!115183))

(declare-fun m!115185 () Bool)

(assert (=> d!27967 m!115185))

(declare-fun m!115187 () Bool)

(assert (=> b!103981 m!115187))

(declare-fun m!115189 () Bool)

(assert (=> b!103982 m!115189))

(assert (=> b!103449 d!27967))

(declare-fun d!27969 () Bool)

(assert (=> d!27969 (contains!824 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52731)))

(declare-fun lt!53116 () Unit!3150)

(declare-fun choose!646 (ListLongMap!1569 (_ BitVec 64) V!3211 (_ BitVec 64)) Unit!3150)

(assert (=> d!27969 (= lt!53116 (choose!646 lt!52722 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52731))))

(assert (=> d!27969 (contains!824 lt!52722 lt!52731)))

(assert (=> d!27969 (= (addStillContains!73 lt!52722 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52731) lt!53116)))

(declare-fun bs!4258 () Bool)

(assert (= bs!4258 d!27969))

(assert (=> bs!4258 m!114361))

(assert (=> bs!4258 m!114361))

(assert (=> bs!4258 m!114375))

(declare-fun m!115191 () Bool)

(assert (=> bs!4258 m!115191))

(declare-fun m!115193 () Bool)

(assert (=> bs!4258 m!115193))

(assert (=> b!103449 d!27969))

(declare-fun d!27971 () Bool)

(assert (=> d!27971 (= (apply!97 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52733) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52733)))))

(declare-fun bs!4259 () Bool)

(assert (= bs!4259 d!27971))

(declare-fun m!115195 () Bool)

(assert (=> bs!4259 m!115195))

(assert (=> bs!4259 m!115195))

(declare-fun m!115197 () Bool)

(assert (=> bs!4259 m!115197))

(assert (=> b!103449 d!27971))

(declare-fun d!27973 () Bool)

(declare-fun e!67716 () Bool)

(assert (=> d!27973 e!67716))

(declare-fun res!51886 () Bool)

(assert (=> d!27973 (=> (not res!51886) (not e!67716))))

(declare-fun lt!53118 () ListLongMap!1569)

(assert (=> d!27973 (= res!51886 (contains!824 lt!53118 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53119 () List!1611)

(assert (=> d!27973 (= lt!53118 (ListLongMap!1570 lt!53119))))

(declare-fun lt!53117 () Unit!3150)

(declare-fun lt!53120 () Unit!3150)

(assert (=> d!27973 (= lt!53117 lt!53120)))

(assert (=> d!27973 (= (getValueByKey!155 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27973 (= lt!53120 (lemmaContainsTupThenGetReturnValue!71 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27973 (= lt!53119 (insertStrictlySorted!74 (toList!800 lt!52717) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27973 (= (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53118)))

(declare-fun b!103984 () Bool)

(declare-fun res!51885 () Bool)

(assert (=> b!103984 (=> (not res!51885) (not e!67716))))

(assert (=> b!103984 (= res!51885 (= (getValueByKey!155 (toList!800 lt!53118) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103985 () Bool)

(assert (=> b!103985 (= e!67716 (contains!826 (toList!800 lt!53118) (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27973 res!51886) b!103984))

(assert (= (and b!103984 res!51885) b!103985))

(declare-fun m!115199 () Bool)

(assert (=> d!27973 m!115199))

(declare-fun m!115201 () Bool)

(assert (=> d!27973 m!115201))

(declare-fun m!115203 () Bool)

(assert (=> d!27973 m!115203))

(declare-fun m!115205 () Bool)

(assert (=> d!27973 m!115205))

(declare-fun m!115207 () Bool)

(assert (=> b!103984 m!115207))

(declare-fun m!115209 () Bool)

(assert (=> b!103985 m!115209))

(assert (=> b!103449 d!27973))

(declare-fun d!27975 () Bool)

(assert (=> d!27975 (= (apply!97 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52734) (apply!97 lt!52725 lt!52734))))

(declare-fun lt!53121 () Unit!3150)

(assert (=> d!27975 (= lt!53121 (choose!645 lt!52725 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52734))))

(declare-fun e!67717 () Bool)

(assert (=> d!27975 e!67717))

(declare-fun res!51887 () Bool)

(assert (=> d!27975 (=> (not res!51887) (not e!67717))))

(assert (=> d!27975 (= res!51887 (contains!824 lt!52725 lt!52734))))

(assert (=> d!27975 (= (addApplyDifferent!73 lt!52725 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52734) lt!53121)))

(declare-fun b!103986 () Bool)

(assert (=> b!103986 (= e!67717 (not (= lt!52734 lt!52729)))))

(assert (= (and d!27975 res!51887) b!103986))

(declare-fun m!115211 () Bool)

(assert (=> d!27975 m!115211))

(assert (=> d!27975 m!114369))

(assert (=> d!27975 m!114373))

(declare-fun m!115213 () Bool)

(assert (=> d!27975 m!115213))

(assert (=> d!27975 m!114359))

(assert (=> d!27975 m!114369))

(assert (=> b!103449 d!27975))

(declare-fun d!27977 () Bool)

(declare-fun e!67718 () Bool)

(assert (=> d!27977 e!67718))

(declare-fun res!51889 () Bool)

(assert (=> d!27977 (=> (not res!51889) (not e!67718))))

(declare-fun lt!53123 () ListLongMap!1569)

(assert (=> d!27977 (= res!51889 (contains!824 lt!53123 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53124 () List!1611)

(assert (=> d!27977 (= lt!53123 (ListLongMap!1570 lt!53124))))

(declare-fun lt!53122 () Unit!3150)

(declare-fun lt!53125 () Unit!3150)

(assert (=> d!27977 (= lt!53122 lt!53125)))

(assert (=> d!27977 (= (getValueByKey!155 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27977 (= lt!53125 (lemmaContainsTupThenGetReturnValue!71 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27977 (= lt!53124 (insertStrictlySorted!74 (toList!800 lt!52718) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!27977 (= (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53123)))

(declare-fun b!103987 () Bool)

(declare-fun res!51888 () Bool)

(assert (=> b!103987 (=> (not res!51888) (not e!67718))))

(assert (=> b!103987 (= res!51888 (= (getValueByKey!155 (toList!800 lt!53123) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!103988 () Bool)

(assert (=> b!103988 (= e!67718 (contains!826 (toList!800 lt!53123) (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!27977 res!51889) b!103987))

(assert (= (and b!103987 res!51888) b!103988))

(declare-fun m!115215 () Bool)

(assert (=> d!27977 m!115215))

(declare-fun m!115217 () Bool)

(assert (=> d!27977 m!115217))

(declare-fun m!115219 () Bool)

(assert (=> d!27977 m!115219))

(declare-fun m!115221 () Bool)

(assert (=> d!27977 m!115221))

(declare-fun m!115223 () Bool)

(assert (=> b!103987 m!115223))

(declare-fun m!115225 () Bool)

(assert (=> b!103988 m!115225))

(assert (=> b!103449 d!27977))

(declare-fun d!27979 () Bool)

(assert (=> d!27979 (= (apply!97 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52730) (apply!97 lt!52718 lt!52730))))

(declare-fun lt!53126 () Unit!3150)

(assert (=> d!27979 (= lt!53126 (choose!645 lt!52718 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52730))))

(declare-fun e!67719 () Bool)

(assert (=> d!27979 e!67719))

(declare-fun res!51890 () Bool)

(assert (=> d!27979 (=> (not res!51890) (not e!67719))))

(assert (=> d!27979 (= res!51890 (contains!824 lt!52718 lt!52730))))

(assert (=> d!27979 (= (addApplyDifferent!73 lt!52718 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52730) lt!53126)))

(declare-fun b!103989 () Bool)

(assert (=> b!103989 (= e!67719 (not (= lt!52730 lt!52727)))))

(assert (= (and d!27979 res!51890) b!103989))

(declare-fun m!115227 () Bool)

(assert (=> d!27979 m!115227))

(assert (=> d!27979 m!114365))

(assert (=> d!27979 m!114367))

(declare-fun m!115229 () Bool)

(assert (=> d!27979 m!115229))

(assert (=> d!27979 m!114377))

(assert (=> d!27979 m!114365))

(assert (=> b!103449 d!27979))

(declare-fun d!27981 () Bool)

(assert (=> d!27981 (= (apply!97 lt!52725 lt!52734) (get!1326 (getValueByKey!155 (toList!800 lt!52725) lt!52734)))))

(declare-fun bs!4260 () Bool)

(assert (= bs!4260 d!27981))

(declare-fun m!115231 () Bool)

(assert (=> bs!4260 m!115231))

(assert (=> bs!4260 m!115231))

(declare-fun m!115233 () Bool)

(assert (=> bs!4260 m!115233))

(assert (=> b!103449 d!27981))

(declare-fun d!27983 () Bool)

(declare-fun e!67721 () Bool)

(assert (=> d!27983 e!67721))

(declare-fun res!51891 () Bool)

(assert (=> d!27983 (=> res!51891 e!67721)))

(declare-fun lt!53127 () Bool)

(assert (=> d!27983 (= res!51891 (not lt!53127))))

(declare-fun lt!53128 () Bool)

(assert (=> d!27983 (= lt!53127 lt!53128)))

(declare-fun lt!53129 () Unit!3150)

(declare-fun e!67720 () Unit!3150)

(assert (=> d!27983 (= lt!53129 e!67720)))

(declare-fun c!17949 () Bool)

(assert (=> d!27983 (= c!17949 lt!53128)))

(assert (=> d!27983 (= lt!53128 (containsKey!159 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))

(assert (=> d!27983 (= (contains!824 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52731) lt!53127)))

(declare-fun b!103990 () Bool)

(declare-fun lt!53130 () Unit!3150)

(assert (=> b!103990 (= e!67720 lt!53130)))

(assert (=> b!103990 (= lt!53130 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))

(assert (=> b!103990 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))

(declare-fun b!103991 () Bool)

(declare-fun Unit!3179 () Unit!3150)

(assert (=> b!103991 (= e!67720 Unit!3179)))

(declare-fun b!103992 () Bool)

(assert (=> b!103992 (= e!67721 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731)))))

(assert (= (and d!27983 c!17949) b!103990))

(assert (= (and d!27983 (not c!17949)) b!103991))

(assert (= (and d!27983 (not res!51891)) b!103992))

(declare-fun m!115235 () Bool)

(assert (=> d!27983 m!115235))

(declare-fun m!115237 () Bool)

(assert (=> b!103990 m!115237))

(declare-fun m!115239 () Bool)

(assert (=> b!103990 m!115239))

(assert (=> b!103990 m!115239))

(declare-fun m!115241 () Bool)

(assert (=> b!103990 m!115241))

(assert (=> b!103992 m!115239))

(assert (=> b!103992 m!115239))

(assert (=> b!103992 m!115241))

(assert (=> b!103449 d!27983))

(assert (=> b!103449 d!27801))

(declare-fun d!27985 () Bool)

(assert (=> d!27985 (= (apply!97 lt!52718 lt!52730) (get!1326 (getValueByKey!155 (toList!800 lt!52718) lt!52730)))))

(declare-fun bs!4261 () Bool)

(assert (= bs!4261 d!27985))

(declare-fun m!115243 () Bool)

(assert (=> bs!4261 m!115243))

(assert (=> bs!4261 m!115243))

(declare-fun m!115245 () Bool)

(assert (=> bs!4261 m!115245))

(assert (=> b!103449 d!27985))

(declare-fun d!27987 () Bool)

(assert (=> d!27987 (= (apply!97 lt!52717 lt!52733) (get!1326 (getValueByKey!155 (toList!800 lt!52717) lt!52733)))))

(declare-fun bs!4262 () Bool)

(assert (= bs!4262 d!27987))

(declare-fun m!115247 () Bool)

(assert (=> bs!4262 m!115247))

(assert (=> bs!4262 m!115247))

(declare-fun m!115249 () Bool)

(assert (=> bs!4262 m!115249))

(assert (=> b!103449 d!27987))

(declare-fun d!27989 () Bool)

(declare-fun e!67722 () Bool)

(assert (=> d!27989 e!67722))

(declare-fun res!51893 () Bool)

(assert (=> d!27989 (=> (not res!51893) (not e!67722))))

(declare-fun lt!53132 () ListLongMap!1569)

(assert (=> d!27989 (= res!51893 (contains!824 lt!53132 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun lt!53133 () List!1611)

(assert (=> d!27989 (= lt!53132 (ListLongMap!1570 lt!53133))))

(declare-fun lt!53131 () Unit!3150)

(declare-fun lt!53134 () Unit!3150)

(assert (=> d!27989 (= lt!53131 lt!53134)))

(assert (=> d!27989 (= (getValueByKey!155 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (Some!160 (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!27989 (= lt!53134 (lemmaContainsTupThenGetReturnValue!71 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!27989 (= lt!53133 (insertStrictlySorted!74 (toList!800 e!67358) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!27989 (= (+!141 e!67358 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53132)))

(declare-fun b!103993 () Bool)

(declare-fun res!51892 () Bool)

(assert (=> b!103993 (=> (not res!51892) (not e!67722))))

(assert (=> b!103993 (= res!51892 (= (getValueByKey!155 (toList!800 lt!53132) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (Some!160 (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!103994 () Bool)

(assert (=> b!103994 (= e!67722 (contains!826 (toList!800 lt!53132) (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (= (and d!27989 res!51893) b!103993))

(assert (= (and b!103993 res!51892) b!103994))

(declare-fun m!115251 () Bool)

(assert (=> d!27989 m!115251))

(declare-fun m!115253 () Bool)

(assert (=> d!27989 m!115253))

(declare-fun m!115255 () Bool)

(assert (=> d!27989 m!115255))

(declare-fun m!115257 () Bool)

(assert (=> d!27989 m!115257))

(declare-fun m!115259 () Bool)

(assert (=> b!103993 m!115259))

(declare-fun m!115261 () Bool)

(assert (=> b!103994 m!115261))

(assert (=> bm!10819 d!27989))

(declare-fun d!27991 () Bool)

(declare-fun e!67724 () Bool)

(assert (=> d!27991 e!67724))

(declare-fun res!51894 () Bool)

(assert (=> d!27991 (=> res!51894 e!67724)))

(declare-fun lt!53135 () Bool)

(assert (=> d!27991 (= res!51894 (not lt!53135))))

(declare-fun lt!53136 () Bool)

(assert (=> d!27991 (= lt!53135 lt!53136)))

(declare-fun lt!53137 () Unit!3150)

(declare-fun e!67723 () Unit!3150)

(assert (=> d!27991 (= lt!53137 e!67723)))

(declare-fun c!17950 () Bool)

(assert (=> d!27991 (= c!17950 lt!53136)))

(assert (=> d!27991 (= lt!53136 (containsKey!159 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!27991 (= (contains!824 lt!52728 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53135)))

(declare-fun b!103995 () Bool)

(declare-fun lt!53138 () Unit!3150)

(assert (=> b!103995 (= e!67723 lt!53138)))

(assert (=> b!103995 (= lt!53138 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103995 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!103996 () Bool)

(declare-fun Unit!3180 () Unit!3150)

(assert (=> b!103996 (= e!67723 Unit!3180)))

(declare-fun b!103997 () Bool)

(assert (=> b!103997 (= e!67724 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!27991 c!17950) b!103995))

(assert (= (and d!27991 (not c!17950)) b!103996))

(assert (= (and d!27991 (not res!51894)) b!103997))

(assert (=> d!27991 m!114339))

(declare-fun m!115263 () Bool)

(assert (=> d!27991 m!115263))

(assert (=> b!103995 m!114339))

(declare-fun m!115265 () Bool)

(assert (=> b!103995 m!115265))

(assert (=> b!103995 m!114339))

(assert (=> b!103995 m!115081))

(assert (=> b!103995 m!115081))

(declare-fun m!115267 () Bool)

(assert (=> b!103995 m!115267))

(assert (=> b!103997 m!114339))

(assert (=> b!103997 m!115081))

(assert (=> b!103997 m!115081))

(assert (=> b!103997 m!115267))

(assert (=> b!103448 d!27991))

(declare-fun b!103998 () Bool)

(declare-fun e!67726 () Bool)

(declare-fun call!10932 () Bool)

(assert (=> b!103998 (= e!67726 call!10932)))

(declare-fun b!103999 () Bool)

(declare-fun e!67727 () Bool)

(assert (=> b!103999 (= e!67727 (contains!825 (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104000 () Bool)

(assert (=> b!104000 (= e!67726 call!10932)))

(declare-fun b!104001 () Bool)

(declare-fun e!67728 () Bool)

(assert (=> b!104001 (= e!67728 e!67726)))

(declare-fun c!17951 () Bool)

(assert (=> b!104001 (= c!17951 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!27993 () Bool)

(declare-fun res!51897 () Bool)

(declare-fun e!67725 () Bool)

(assert (=> d!27993 (=> res!51897 e!67725)))

(assert (=> d!27993 (= res!51897 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!27993 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) e!67725)))

(declare-fun bm!10929 () Bool)

(assert (=> bm!10929 (= call!10932 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17951 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607))))))

(declare-fun b!104002 () Bool)

(assert (=> b!104002 (= e!67725 e!67728)))

(declare-fun res!51896 () Bool)

(assert (=> b!104002 (=> (not res!51896) (not e!67728))))

(assert (=> b!104002 (= res!51896 (not e!67727))))

(declare-fun res!51895 () Bool)

(assert (=> b!104002 (=> (not res!51895) (not e!67727))))

(assert (=> b!104002 (= res!51895 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!27993 (not res!51897)) b!104002))

(assert (= (and b!104002 res!51895) b!103999))

(assert (= (and b!104002 res!51896) b!104001))

(assert (= (and b!104001 c!17951) b!103998))

(assert (= (and b!104001 (not c!17951)) b!104000))

(assert (= (or b!103998 b!104000) bm!10929))

(declare-fun m!115269 () Bool)

(assert (=> b!103999 m!115269))

(assert (=> b!103999 m!115269))

(declare-fun m!115271 () Bool)

(assert (=> b!103999 m!115271))

(assert (=> b!104001 m!115269))

(assert (=> b!104001 m!115269))

(declare-fun m!115273 () Bool)

(assert (=> b!104001 m!115273))

(assert (=> bm!10929 m!115269))

(declare-fun m!115275 () Bool)

(assert (=> bm!10929 m!115275))

(assert (=> b!104002 m!115269))

(assert (=> b!104002 m!115269))

(assert (=> b!104002 m!115273))

(assert (=> bm!10860 d!27993))

(declare-fun d!27995 () Bool)

(assert (=> d!27995 (= (apply!97 lt!52783 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1326 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!4263 () Bool)

(assert (= bs!4263 d!27995))

(assert (=> bs!4263 m!114339))

(assert (=> bs!4263 m!114685))

(assert (=> bs!4263 m!114685))

(declare-fun m!115277 () Bool)

(assert (=> bs!4263 m!115277))

(assert (=> b!103525 d!27995))

(assert (=> b!103525 d!27939))

(declare-fun d!27997 () Bool)

(declare-fun e!67730 () Bool)

(assert (=> d!27997 e!67730))

(declare-fun res!51898 () Bool)

(assert (=> d!27997 (=> res!51898 e!67730)))

(declare-fun lt!53139 () Bool)

(assert (=> d!27997 (= res!51898 (not lt!53139))))

(declare-fun lt!53140 () Bool)

(assert (=> d!27997 (= lt!53139 lt!53140)))

(declare-fun lt!53141 () Unit!3150)

(declare-fun e!67729 () Unit!3150)

(assert (=> d!27997 (= lt!53141 e!67729)))

(declare-fun c!17952 () Bool)

(assert (=> d!27997 (= c!17952 lt!53140)))

(assert (=> d!27997 (= lt!53140 (containsKey!159 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!27997 (= (contains!824 lt!52728 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53139)))

(declare-fun b!104003 () Bool)

(declare-fun lt!53142 () Unit!3150)

(assert (=> b!104003 (= e!67729 lt!53142)))

(assert (=> b!104003 (= lt!53142 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104003 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104004 () Bool)

(declare-fun Unit!3181 () Unit!3150)

(assert (=> b!104004 (= e!67729 Unit!3181)))

(declare-fun b!104005 () Bool)

(assert (=> b!104005 (= e!67730 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!27997 c!17952) b!104003))

(assert (= (and d!27997 (not c!17952)) b!104004))

(assert (= (and d!27997 (not res!51898)) b!104005))

(declare-fun m!115279 () Bool)

(assert (=> d!27997 m!115279))

(declare-fun m!115281 () Bool)

(assert (=> b!104003 m!115281))

(assert (=> b!104003 m!114519))

(assert (=> b!104003 m!114519))

(declare-fun m!115283 () Bool)

(assert (=> b!104003 m!115283))

(assert (=> b!104005 m!114519))

(assert (=> b!104005 m!114519))

(assert (=> b!104005 m!115283))

(assert (=> bm!10857 d!27997))

(declare-fun d!27999 () Bool)

(assert (=> d!27999 (= (get!1325 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) from!355) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103401 d!27999))

(declare-fun d!28001 () Bool)

(declare-fun e!67733 () Bool)

(assert (=> d!28001 e!67733))

(declare-fun res!51903 () Bool)

(assert (=> d!28001 (=> (not res!51903) (not e!67733))))

(declare-fun lt!53148 () SeekEntryResult!258)

(assert (=> d!28001 (= res!51903 ((_ is Found!258) lt!53148))))

(assert (=> d!28001 (= lt!53148 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun lt!53147 () Unit!3150)

(declare-fun choose!647 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) Int) Unit!3150)

(assert (=> d!28001 (= lt!53147 (choose!647 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)))))

(assert (=> d!28001 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28001 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) lt!53147)))

(declare-fun b!104010 () Bool)

(declare-fun res!51904 () Bool)

(assert (=> b!104010 (=> (not res!51904) (not e!67733))))

(assert (=> b!104010 (= res!51904 (inRange!0 (index!3180 lt!53148) (mask!6697 newMap!16)))))

(declare-fun b!104011 () Bool)

(assert (=> b!104011 (= e!67733 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!53148)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104011 (and (bvsge (index!3180 lt!53148) #b00000000000000000000000000000000) (bvslt (index!3180 lt!53148) (size!2311 (_keys!4263 newMap!16))))))

(assert (= (and d!28001 res!51903) b!104010))

(assert (= (and b!104010 res!51904) b!104011))

(assert (=> d!28001 m!114165))

(assert (=> d!28001 m!114295))

(assert (=> d!28001 m!114165))

(declare-fun m!115285 () Bool)

(assert (=> d!28001 m!115285))

(assert (=> d!28001 m!114575))

(declare-fun m!115287 () Bool)

(assert (=> b!104010 m!115287))

(declare-fun m!115289 () Bool)

(assert (=> b!104011 m!115289))

(assert (=> bm!10816 d!28001))

(assert (=> b!103370 d!27825))

(declare-fun d!28003 () Bool)

(assert (=> d!28003 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53151 () Unit!3150)

(declare-fun choose!648 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 V!3211 Int) Unit!3150)

(assert (=> d!28003 (= lt!53151 (choose!648 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52664 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52542 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28003 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28003 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!46 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52664 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52542 (defaultEntry!2561 newMap!16)) lt!53151)))

(declare-fun bs!4264 () Bool)

(assert (= bs!4264 d!28003))

(declare-fun m!115291 () Bool)

(assert (=> bs!4264 m!115291))

(assert (=> bs!4264 m!114331))

(declare-fun m!115293 () Bool)

(assert (=> bs!4264 m!115293))

(assert (=> bs!4264 m!114575))

(assert (=> bs!4264 m!114331))

(declare-fun m!115295 () Bool)

(assert (=> bs!4264 m!115295))

(assert (=> b!103381 d!28003))

(declare-fun d!28005 () Bool)

(declare-fun isEmpty!369 (Option!161) Bool)

(assert (=> d!28005 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun bs!4265 () Bool)

(assert (= bs!4265 d!28005))

(assert (=> bs!4265 m!114275))

(declare-fun m!115297 () Bool)

(assert (=> bs!4265 m!115297))

(assert (=> b!103269 d!28005))

(declare-fun d!28007 () Bool)

(declare-fun c!17953 () Bool)

(assert (=> d!28007 (= c!17953 (and ((_ is Cons!1607) (toList!800 lt!52534)) (= (_1!1211 (h!2203 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun e!67734 () Option!161)

(assert (=> d!28007 (= (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67734)))

(declare-fun b!104013 () Bool)

(declare-fun e!67735 () Option!161)

(assert (=> b!104013 (= e!67734 e!67735)))

(declare-fun c!17954 () Bool)

(assert (=> b!104013 (= c!17954 (and ((_ is Cons!1607) (toList!800 lt!52534)) (not (= (_1!1211 (h!2203 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104014 () Bool)

(assert (=> b!104014 (= e!67735 (getValueByKey!155 (t!5673 (toList!800 lt!52534)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104015 () Bool)

(assert (=> b!104015 (= e!67735 None!159)))

(declare-fun b!104012 () Bool)

(assert (=> b!104012 (= e!67734 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52534)))))))

(assert (= (and d!28007 c!17953) b!104012))

(assert (= (and d!28007 (not c!17953)) b!104013))

(assert (= (and b!104013 c!17954) b!104014))

(assert (= (and b!104013 (not c!17954)) b!104015))

(assert (=> b!104014 m!114165))

(declare-fun m!115299 () Bool)

(assert (=> b!104014 m!115299))

(assert (=> b!103269 d!28007))

(declare-fun d!28009 () Bool)

(assert (=> d!28009 (= (apply!97 lt!52728 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4266 () Bool)

(assert (= bs!4266 d!28009))

(assert (=> bs!4266 m!115013))

(assert (=> bs!4266 m!115013))

(declare-fun m!115301 () Bool)

(assert (=> bs!4266 m!115301))

(assert (=> b!103463 d!28009))

(declare-fun d!28011 () Bool)

(declare-fun res!51905 () Bool)

(declare-fun e!67736 () Bool)

(assert (=> d!28011 (=> res!51905 e!67736)))

(assert (=> d!28011 (= res!51905 (= (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28011 (= (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000) e!67736)))

(declare-fun b!104016 () Bool)

(declare-fun e!67737 () Bool)

(assert (=> b!104016 (= e!67736 e!67737)))

(declare-fun res!51906 () Bool)

(assert (=> b!104016 (=> (not res!51906) (not e!67737))))

(assert (=> b!104016 (= res!51906 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104017 () Bool)

(assert (=> b!104017 (= e!67737 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28011 (not res!51905)) b!104016))

(assert (= (and b!104016 res!51906) b!104017))

(assert (=> d!28011 m!114525))

(assert (=> b!104017 m!114165))

(declare-fun m!115303 () Bool)

(assert (=> b!104017 m!115303))

(assert (=> bm!10824 d!28011))

(declare-fun d!28013 () Bool)

(assert (=> d!28013 (isDefined!108 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!53154 () Unit!3150)

(declare-fun choose!649 (List!1611 (_ BitVec 64)) Unit!3150)

(assert (=> d!28013 (= lt!53154 (choose!649 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67740 () Bool)

(assert (=> d!28013 e!67740))

(declare-fun res!51909 () Bool)

(assert (=> d!28013 (=> (not res!51909) (not e!67740))))

(assert (=> d!28013 (= res!51909 (isStrictlySorted!308 (toList!800 lt!52534)))))

(assert (=> d!28013 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53154)))

(declare-fun b!104020 () Bool)

(assert (=> b!104020 (= e!67740 (containsKey!159 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28013 res!51909) b!104020))

(assert (=> d!28013 m!114165))

(assert (=> d!28013 m!114275))

(assert (=> d!28013 m!114275))

(assert (=> d!28013 m!114277))

(assert (=> d!28013 m!114165))

(declare-fun m!115305 () Bool)

(assert (=> d!28013 m!115305))

(declare-fun m!115307 () Bool)

(assert (=> d!28013 m!115307))

(assert (=> b!104020 m!114165))

(assert (=> b!104020 m!114271))

(assert (=> b!103267 d!28013))

(assert (=> b!103267 d!28005))

(assert (=> b!103267 d!28007))

(assert (=> bm!10852 d!27801))

(declare-fun b!104022 () Bool)

(declare-fun e!67741 () Bool)

(assert (=> b!104022 (= e!67741 tp_is_empty!2673)))

(declare-fun b!104021 () Bool)

(declare-fun e!67742 () Bool)

(assert (=> b!104021 (= e!67742 tp_is_empty!2673)))

(declare-fun condMapEmpty!3915 () Bool)

(declare-fun mapDefault!3915 () ValueCell!993)

(assert (=> mapNonEmpty!3913 (= condMapEmpty!3915 (= mapRest!3913 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3915)))))

(declare-fun mapRes!3915 () Bool)

(assert (=> mapNonEmpty!3913 (= tp!9871 (and e!67741 mapRes!3915))))

(declare-fun mapNonEmpty!3915 () Bool)

(declare-fun tp!9873 () Bool)

(assert (=> mapNonEmpty!3915 (= mapRes!3915 (and tp!9873 e!67742))))

(declare-fun mapValue!3915 () ValueCell!993)

(declare-fun mapRest!3915 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3915 () (_ BitVec 32))

(assert (=> mapNonEmpty!3915 (= mapRest!3913 (store mapRest!3915 mapKey!3915 mapValue!3915))))

(declare-fun mapIsEmpty!3915 () Bool)

(assert (=> mapIsEmpty!3915 mapRes!3915))

(assert (= (and mapNonEmpty!3913 condMapEmpty!3915) mapIsEmpty!3915))

(assert (= (and mapNonEmpty!3913 (not condMapEmpty!3915)) mapNonEmpty!3915))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!993) mapValue!3915)) b!104021))

(assert (= (and mapNonEmpty!3913 ((_ is ValueCellFull!993) mapDefault!3915)) b!104022))

(declare-fun m!115309 () Bool)

(assert (=> mapNonEmpty!3915 m!115309))

(declare-fun b!104024 () Bool)

(declare-fun e!67743 () Bool)

(assert (=> b!104024 (= e!67743 tp_is_empty!2673)))

(declare-fun b!104023 () Bool)

(declare-fun e!67744 () Bool)

(assert (=> b!104023 (= e!67744 tp_is_empty!2673)))

(declare-fun condMapEmpty!3916 () Bool)

(declare-fun mapDefault!3916 () ValueCell!993)

(assert (=> mapNonEmpty!3914 (= condMapEmpty!3916 (= mapRest!3914 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3916)))))

(declare-fun mapRes!3916 () Bool)

(assert (=> mapNonEmpty!3914 (= tp!9872 (and e!67743 mapRes!3916))))

(declare-fun mapNonEmpty!3916 () Bool)

(declare-fun tp!9874 () Bool)

(assert (=> mapNonEmpty!3916 (= mapRes!3916 (and tp!9874 e!67744))))

(declare-fun mapValue!3916 () ValueCell!993)

(declare-fun mapRest!3916 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3916 () (_ BitVec 32))

(assert (=> mapNonEmpty!3916 (= mapRest!3914 (store mapRest!3916 mapKey!3916 mapValue!3916))))

(declare-fun mapIsEmpty!3916 () Bool)

(assert (=> mapIsEmpty!3916 mapRes!3916))

(assert (= (and mapNonEmpty!3914 condMapEmpty!3916) mapIsEmpty!3916))

(assert (= (and mapNonEmpty!3914 (not condMapEmpty!3916)) mapNonEmpty!3916))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!993) mapValue!3916)) b!104023))

(assert (= (and mapNonEmpty!3914 ((_ is ValueCellFull!993) mapDefault!3916)) b!104024))

(declare-fun m!115311 () Bool)

(assert (=> mapNonEmpty!3916 m!115311))

(declare-fun b_lambda!4645 () Bool)

(assert (= b_lambda!4639 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4645)))

(declare-fun b_lambda!4647 () Bool)

(assert (= b_lambda!4635 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4647)))

(declare-fun b_lambda!4649 () Bool)

(assert (= b_lambda!4637 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4649)))

(declare-fun b_lambda!4651 () Bool)

(assert (= b_lambda!4643 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4651)))

(declare-fun b_lambda!4653 () Bool)

(assert (= b_lambda!4641 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4653)))

(check-sat (not bm!10918) (not b!104017) (not d!27969) (not b!103902) (not b!103907) (not b!103975) (not b!103716) (not b!103776) (not bm!10892) (not d!27973) (not d!27947) (not d!27927) (not b!103764) (not b!103879) (not b!103935) (not b!103987) (not b!103984) (not d!27959) (not d!27957) (not b!103552) (not bm!10929) (not d!27833) (not b!103884) (not b!103606) (not d!27913) (not d!27951) (not d!27923) (not b!103620) (not bm!10879) (not bm!10894) (not b!103563) (not b!103773) (not d!27921) (not d!27935) (not d!27845) (not d!27991) (not b!104020) (not d!27835) (not b!103854) (not bm!10928) (not b!103929) (not b!103865) (not b!103820) (not b!103768) (not b!103994) (not d!27971) (not b!103933) (not bm!10878) (not b!103988) (not b_lambda!4631) (not d!27821) (not d!27883) (not d!27965) (not b!103610) (not b!103924) (not b!103856) (not d!28005) (not b!103774) (not d!27905) (not b!103885) (not d!27863) (not bm!10927) (not bm!10891) (not b!103881) (not b!103794) (not d!27887) (not b!103600) (not b!103813) (not d!27915) (not b!103904) (not b!103807) (not d!27925) (not b!103880) (not b!103624) (not b!103886) (not bm!10907) (not bm!10874) (not b!103694) (not bm!10904) (not b!103708) (not d!27929) (not bm!10897) (not b!103801) (not d!27945) (not b!103634) (not b!104014) (not b!103928) (not b!104010) (not b!103874) (not d!27839) (not b!103946) (not b!103995) (not bm!10908) (not d!27941) (not b_lambda!4647) (not bm!10914) (not b!103656) (not b!103647) (not b!103875) (not b!103738) (not d!27987) (not b!103780) (not b!103769) (not b!103603) (not b!103982) (not d!27851) (not bm!10872) (not b!103721) (not b!103733) (not b!103810) (not bm!10882) (not d!27859) (not d!27975) (not b!104002) (not b!103828) (not b!103937) (not mapNonEmpty!3916) (not d!27865) (not b!103824) (not bm!10910) (not bm!10875) (not d!27917) (not d!27901) (not b!103932) (not b!103948) (not b_lambda!4653) (not b!103714) (not b!103974) (not b!103742) (not b!103771) (not bm!10900) (not b!103618) (not d!27869) (not b!103786) (not b!103835) (not b!103697) (not d!27967) (not b!103743) (not d!27949) (not b!103779) (not bm!10903) (not b!103625) (not bm!10915) (not b!103942) (not b!103570) (not b!103765) (not d!27893) (not b_lambda!4651) (not b_lambda!4649) (not d!27953) (not b!103893) (not d!27977) (not d!27881) (not b!103895) (not d!27903) (not b!103609) (not d!27871) (not b!103822) (not b!103658) (not d!28001) (not b!103999) (not b!103947) (not d!27817) (not b!103926) (not d!27889) (not d!27983) (not d!27885) (not d!27811) (not b!103654) (not d!27895) (not b!103934) (not d!27963) (not b!103595) (not b!103718) (not b!103896) (not b!103864) (not b!103878) (not b!103744) (not b!103648) (not b!103751) (not bm!10911) (not d!27985) (not b!103857) (not b_lambda!4645) (not b!103732) (not b!103859) (not b!103927) (not d!27825) (not d!27979) (not b!103725) (not b_lambda!4633) (not d!27997) (not d!28003) (not b!103883) (not b!103985) (not d!28009) (not b!103931) (not b!103757) (not b!103550) (not b!103652) (not b!103752) (not b!103862) (not d!27909) (not d!27933) (not b!103930) (not b_next!2515) (not b!103804) (not b!104005) (not d!28013) (not b!103993) (not b!103762) (not b!103943) (not b!103976) (not bm!10919) (not d!27989) (not d!27815) (not d!27899) (not b!103616) (not b!103889) (not b!103761) (not d!27943) b_and!6433 (not bm!10901) (not d!27907) (not b!103814) (not b!103910) (not b!103877) (not d!27837) (not b!103569) (not b!103730) (not b_next!2513) (not b!103945) (not b!103746) (not d!27857) (not b!103705) (not b!103790) (not d!27937) (not b!103905) (not b!103992) (not b!103795) (not b!103829) (not b!103891) (not d!27843) (not b!103709) (not b!103997) (not b!103727) (not mapNonEmpty!3915) (not b!103913) (not b_lambda!4621) (not b!103849) (not b!103888) (not b!103802) (not b!103981) (not bm!10922) (not b!103788) (not b!103870) (not d!27981) (not b!104003) (not d!27855) (not d!27955) (not b!103749) (not d!27961) (not b!103876) (not d!27829) tp_is_empty!2673 (not b!103724) (not b!103882) (not d!27875) (not d!27995) (not b!104001) (not b!103599) (not b!103657) (not b!103703) (not d!27911) (not b!103990) (not b_lambda!4629) b_and!6431 (not b!103766) (not b!103637))
(check-sat b_and!6431 b_and!6433 (not b_next!2513) (not b_next!2515))
(get-model)

(declare-fun b!104025 () Bool)

(declare-fun e!67746 () (_ BitVec 32))

(declare-fun call!10933 () (_ BitVec 32))

(assert (=> b!104025 (= e!67746 call!10933)))

(declare-fun b!104026 () Bool)

(assert (=> b!104026 (= e!67746 (bvadd #b00000000000000000000000000000001 call!10933))))

(declare-fun b!104027 () Bool)

(declare-fun e!67745 () (_ BitVec 32))

(assert (=> b!104027 (= e!67745 e!67746)))

(declare-fun c!17956 () Bool)

(assert (=> b!104027 (= c!17956 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!28015 () Bool)

(declare-fun lt!53155 () (_ BitVec 32))

(assert (=> d!28015 (and (bvsge lt!53155 #b00000000000000000000000000000000) (bvsle lt!53155 (bvsub (size!2311 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> d!28015 (= lt!53155 e!67745)))

(declare-fun c!17955 () Bool)

(assert (=> d!28015 (= c!17955 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28015 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2311 (_keys!4263 newMap!16)) (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28015 (= (arrayCountValidKeys!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))) lt!53155)))

(declare-fun b!104028 () Bool)

(assert (=> b!104028 (= e!67745 #b00000000000000000000000000000000)))

(declare-fun bm!10930 () Bool)

(assert (=> bm!10930 (= call!10933 (arrayCountValidKeys!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(assert (= (and d!28015 c!17955) b!104028))

(assert (= (and d!28015 (not c!17955)) b!104027))

(assert (= (and b!104027 c!17956) b!104026))

(assert (= (and b!104027 (not c!17956)) b!104025))

(assert (= (or b!104026 b!104025) bm!10930))

(declare-fun m!115313 () Bool)

(assert (=> b!104027 m!115313))

(assert (=> b!104027 m!115313))

(declare-fun m!115315 () Bool)

(assert (=> b!104027 m!115315))

(declare-fun m!115317 () Bool)

(assert (=> bm!10930 m!115317))

(assert (=> bm!10922 d!28015))

(declare-fun d!28017 () Bool)

(assert (=> d!28017 (= (apply!97 lt!52972 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1326 (getValueByKey!155 (toList!800 lt!52972) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4267 () Bool)

(assert (= bs!4267 d!28017))

(assert (=> bs!4267 m!114525))

(declare-fun m!115319 () Bool)

(assert (=> bs!4267 m!115319))

(assert (=> bs!4267 m!115319))

(declare-fun m!115321 () Bool)

(assert (=> bs!4267 m!115321))

(assert (=> b!103786 d!28017))

(declare-fun c!17957 () Bool)

(declare-fun d!28019 () Bool)

(assert (=> d!28019 (= c!17957 ((_ is ValueCellFull!993) (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000)))))

(declare-fun e!67747 () V!3211)

(assert (=> d!28019 (= (get!1323 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67747)))

(declare-fun b!104029 () Bool)

(assert (=> b!104029 (= e!67747 (get!1324 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104030 () Bool)

(assert (=> b!104030 (= e!67747 (get!1325 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28019 c!17957) b!104029))

(assert (= (and d!28019 (not c!17957)) b!104030))

(assert (=> b!104029 m!114783))

(assert (=> b!104029 m!114537))

(declare-fun m!115323 () Bool)

(assert (=> b!104029 m!115323))

(assert (=> b!104030 m!114783))

(assert (=> b!104030 m!114537))

(declare-fun m!115325 () Bool)

(assert (=> b!104030 m!115325))

(assert (=> b!103786 d!28019))

(declare-fun d!28021 () Bool)

(assert (=> d!28021 (= ($colon$colon!80 e!67565 (ite c!17886 (h!2203 (toList!800 (+!141 lt!52539 lt!52540))) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538)))) (Cons!1607 (ite c!17886 (h!2203 (toList!800 (+!141 lt!52539 lt!52540))) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))) e!67565))))

(assert (=> bm!10897 d!28021))

(declare-fun d!28023 () Bool)

(assert (=> d!28023 (= (isDefined!108 (getValueByKey!155 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))) (not (isEmpty!369 (getValueByKey!155 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))))

(declare-fun bs!4268 () Bool)

(assert (= bs!4268 d!28023))

(assert (=> bs!4268 m!115045))

(declare-fun m!115327 () Bool)

(assert (=> bs!4268 m!115327))

(assert (=> b!103907 d!28023))

(declare-fun c!17958 () Bool)

(declare-fun d!28025 () Bool)

(assert (=> d!28025 (= c!17958 (and ((_ is Cons!1607) (toList!800 call!10817)) (= (_1!1211 (h!2203 (toList!800 call!10817))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))))

(declare-fun e!67748 () Option!161)

(assert (=> d!28025 (= (getValueByKey!155 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))) e!67748)))

(declare-fun b!104032 () Bool)

(declare-fun e!67749 () Option!161)

(assert (=> b!104032 (= e!67748 e!67749)))

(declare-fun c!17959 () Bool)

(assert (=> b!104032 (= c!17959 (and ((_ is Cons!1607) (toList!800 call!10817)) (not (= (_1!1211 (h!2203 (toList!800 call!10817))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))))

(declare-fun b!104033 () Bool)

(assert (=> b!104033 (= e!67749 (getValueByKey!155 (t!5673 (toList!800 call!10817)) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(declare-fun b!104034 () Bool)

(assert (=> b!104034 (= e!67749 None!159)))

(declare-fun b!104031 () Bool)

(assert (=> b!104031 (= e!67748 (Some!160 (_2!1211 (h!2203 (toList!800 call!10817)))))))

(assert (= (and d!28025 c!17958) b!104031))

(assert (= (and d!28025 (not c!17958)) b!104032))

(assert (= (and b!104032 c!17959) b!104033))

(assert (= (and b!104032 (not c!17959)) b!104034))

(assert (=> b!104033 m!114297))

(declare-fun m!115329 () Bool)

(assert (=> b!104033 m!115329))

(assert (=> b!103907 d!28025))

(declare-fun d!28027 () Bool)

(assert (=> d!28027 (= (apply!97 lt!52998 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1326 (getValueByKey!155 (toList!800 lt!52998) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4269 () Bool)

(assert (= bs!4269 d!28027))

(assert (=> bs!4269 m!114525))

(declare-fun m!115331 () Bool)

(assert (=> bs!4269 m!115331))

(assert (=> bs!4269 m!115331))

(declare-fun m!115333 () Bool)

(assert (=> bs!4269 m!115333))

(assert (=> b!103820 d!28027))

(declare-fun d!28029 () Bool)

(declare-fun c!17960 () Bool)

(assert (=> d!28029 (= c!17960 ((_ is ValueCellFull!993) (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!67750 () V!3211)

(assert (=> d!28029 (= (get!1323 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67750)))

(declare-fun b!104035 () Bool)

(assert (=> b!104035 (= e!67750 (get!1324 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104036 () Bool)

(assert (=> b!104036 (= e!67750 (get!1325 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28029 c!17960) b!104035))

(assert (= (and d!28029 (not c!17960)) b!104036))

(assert (=> b!104035 m!114847))

(assert (=> b!104035 m!114537))

(declare-fun m!115335 () Bool)

(assert (=> b!104035 m!115335))

(assert (=> b!104036 m!114847))

(assert (=> b!104036 m!114537))

(declare-fun m!115337 () Bool)

(assert (=> b!104036 m!115337))

(assert (=> b!103820 d!28029))

(declare-fun d!28031 () Bool)

(assert (=> d!28031 (= (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103895 d!28031))

(declare-fun d!28033 () Bool)

(assert (=> d!28033 (= (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104002 d!28033))

(declare-fun d!28035 () Bool)

(assert (=> d!28035 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))

(declare-fun lt!53156 () Unit!3150)

(assert (=> d!28035 (= lt!53156 (choose!649 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))

(declare-fun e!67751 () Bool)

(assert (=> d!28035 e!67751))

(declare-fun res!51910 () Bool)

(assert (=> d!28035 (=> (not res!51910) (not e!67751))))

(assert (=> d!28035 (= res!51910 (isStrictlySorted!308 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))))))

(assert (=> d!28035 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785) lt!53156)))

(declare-fun b!104037 () Bool)

(assert (=> b!104037 (= e!67751 (containsKey!159 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))

(assert (= (and d!28035 res!51910) b!104037))

(assert (=> d!28035 m!115107))

(assert (=> d!28035 m!115107))

(assert (=> d!28035 m!115109))

(declare-fun m!115339 () Bool)

(assert (=> d!28035 m!115339))

(declare-fun m!115341 () Bool)

(assert (=> d!28035 m!115341))

(assert (=> b!104037 m!115103))

(assert (=> b!103935 d!28035))

(declare-fun d!28037 () Bool)

(assert (=> d!28037 (= (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785)) (not (isEmpty!369 (getValueByKey!155 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785))))))

(declare-fun bs!4270 () Bool)

(assert (= bs!4270 d!28037))

(assert (=> bs!4270 m!115107))

(declare-fun m!115343 () Bool)

(assert (=> bs!4270 m!115343))

(assert (=> b!103935 d!28037))

(declare-fun d!28039 () Bool)

(declare-fun c!17961 () Bool)

(assert (=> d!28039 (= c!17961 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))))) lt!52785)))))

(declare-fun e!67752 () Option!161)

(assert (=> d!28039 (= (getValueByKey!155 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785) e!67752)))

(declare-fun b!104039 () Bool)

(declare-fun e!67753 () Option!161)

(assert (=> b!104039 (= e!67752 e!67753)))

(declare-fun c!17962 () Bool)

(assert (=> b!104039 (= c!17962 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))) (not (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))))) lt!52785))))))

(declare-fun b!104040 () Bool)

(assert (=> b!104040 (= e!67753 (getValueByKey!155 (t!5673 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))) lt!52785))))

(declare-fun b!104041 () Bool)

(assert (=> b!104041 (= e!67753 None!159)))

(declare-fun b!104038 () Bool)

(assert (=> b!104038 (= e!67752 (Some!160 (_2!1211 (h!2203 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))))))))

(assert (= (and d!28039 c!17961) b!104038))

(assert (= (and d!28039 (not c!17961)) b!104039))

(assert (= (and b!104039 c!17962) b!104040))

(assert (= (and b!104039 (not c!17962)) b!104041))

(declare-fun m!115345 () Bool)

(assert (=> b!104040 m!115345))

(assert (=> b!103935 d!28039))

(declare-fun d!28041 () Bool)

(declare-fun e!67755 () Bool)

(assert (=> d!28041 e!67755))

(declare-fun res!51911 () Bool)

(assert (=> d!28041 (=> res!51911 e!67755)))

(declare-fun lt!53157 () Bool)

(assert (=> d!28041 (= res!51911 (not lt!53157))))

(declare-fun lt!53158 () Bool)

(assert (=> d!28041 (= lt!53157 lt!53158)))

(declare-fun lt!53159 () Unit!3150)

(declare-fun e!67754 () Unit!3150)

(assert (=> d!28041 (= lt!53159 e!67754)))

(declare-fun c!17963 () Bool)

(assert (=> d!28041 (= c!17963 lt!53158)))

(assert (=> d!28041 (= lt!53158 (containsKey!159 (toList!800 lt!52717) lt!52733))))

(assert (=> d!28041 (= (contains!824 lt!52717 lt!52733) lt!53157)))

(declare-fun b!104042 () Bool)

(declare-fun lt!53160 () Unit!3150)

(assert (=> b!104042 (= e!67754 lt!53160)))

(assert (=> b!104042 (= lt!53160 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52717) lt!52733))))

(assert (=> b!104042 (isDefined!108 (getValueByKey!155 (toList!800 lt!52717) lt!52733))))

(declare-fun b!104043 () Bool)

(declare-fun Unit!3182 () Unit!3150)

(assert (=> b!104043 (= e!67754 Unit!3182)))

(declare-fun b!104044 () Bool)

(assert (=> b!104044 (= e!67755 (isDefined!108 (getValueByKey!155 (toList!800 lt!52717) lt!52733)))))

(assert (= (and d!28041 c!17963) b!104042))

(assert (= (and d!28041 (not c!17963)) b!104043))

(assert (= (and d!28041 (not res!51911)) b!104044))

(declare-fun m!115347 () Bool)

(assert (=> d!28041 m!115347))

(declare-fun m!115349 () Bool)

(assert (=> b!104042 m!115349))

(assert (=> b!104042 m!115247))

(assert (=> b!104042 m!115247))

(declare-fun m!115351 () Bool)

(assert (=> b!104042 m!115351))

(assert (=> b!104044 m!115247))

(assert (=> b!104044 m!115247))

(assert (=> b!104044 m!115351))

(assert (=> d!27965 d!28041))

(assert (=> d!27965 d!27971))

(assert (=> d!27965 d!27987))

(assert (=> d!27965 d!27973))

(declare-fun d!28043 () Bool)

(assert (=> d!28043 (= (apply!97 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52733) (apply!97 lt!52717 lt!52733))))

(assert (=> d!28043 true))

(declare-fun _$34!879 () Unit!3150)

(assert (=> d!28043 (= (choose!645 lt!52717 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52733) _$34!879)))

(declare-fun bs!4271 () Bool)

(assert (= bs!4271 d!28043))

(assert (=> bs!4271 m!114355))

(assert (=> bs!4271 m!114355))

(assert (=> bs!4271 m!114357))

(assert (=> bs!4271 m!114363))

(assert (=> d!27965 d!28043))

(declare-fun d!28045 () Bool)

(declare-fun lt!53161 () Bool)

(assert (=> d!28045 (= lt!53161 (select (content!108 (toList!800 lt!53044)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun e!67757 () Bool)

(assert (=> d!28045 (= lt!53161 e!67757)))

(declare-fun res!51912 () Bool)

(assert (=> d!28045 (=> (not res!51912) (not e!67757))))

(assert (=> d!28045 (= res!51912 ((_ is Cons!1607) (toList!800 lt!53044)))))

(assert (=> d!28045 (= (contains!826 (toList!800 lt!53044) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53161)))

(declare-fun b!104046 () Bool)

(declare-fun e!67756 () Bool)

(assert (=> b!104046 (= e!67757 e!67756)))

(declare-fun res!51913 () Bool)

(assert (=> b!104046 (=> res!51913 e!67756)))

(assert (=> b!104046 (= res!51913 (= (h!2203 (toList!800 lt!53044)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun b!104047 () Bool)

(assert (=> b!104047 (= e!67756 (contains!826 (t!5673 (toList!800 lt!53044)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!28045 res!51912) b!104046))

(assert (= (and b!104046 (not res!51913)) b!104047))

(declare-fun m!115353 () Bool)

(assert (=> d!28045 m!115353))

(declare-fun m!115355 () Bool)

(assert (=> d!28045 m!115355))

(declare-fun m!115357 () Bool)

(assert (=> b!104047 m!115357))

(assert (=> b!103883 d!28045))

(declare-fun d!28047 () Bool)

(assert (=> d!28047 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53162 () Unit!3150)

(assert (=> d!28047 (= lt!53162 (choose!649 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!67758 () Bool)

(assert (=> d!28047 e!67758))

(declare-fun res!51914 () Bool)

(assert (=> d!28047 (=> (not res!51914) (not e!67758))))

(assert (=> d!28047 (= res!51914 (isStrictlySorted!308 (toList!800 lt!52728)))))

(assert (=> d!28047 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53162)))

(declare-fun b!104048 () Bool)

(assert (=> b!104048 (= e!67758 (containsKey!159 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28047 res!51914) b!104048))

(assert (=> d!28047 m!114339))

(assert (=> d!28047 m!115081))

(assert (=> d!28047 m!115081))

(assert (=> d!28047 m!115267))

(assert (=> d!28047 m!114339))

(declare-fun m!115359 () Bool)

(assert (=> d!28047 m!115359))

(declare-fun m!115361 () Bool)

(assert (=> d!28047 m!115361))

(assert (=> b!104048 m!114339))

(assert (=> b!104048 m!115263))

(assert (=> b!103995 d!28047))

(declare-fun d!28049 () Bool)

(assert (=> d!28049 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4272 () Bool)

(assert (= bs!4272 d!28049))

(assert (=> bs!4272 m!115081))

(declare-fun m!115363 () Bool)

(assert (=> bs!4272 m!115363))

(assert (=> b!103995 d!28049))

(declare-fun d!28051 () Bool)

(declare-fun c!17964 () Bool)

(assert (=> d!28051 (= c!17964 (and ((_ is Cons!1607) (toList!800 lt!52728)) (= (_1!1211 (h!2203 (toList!800 lt!52728))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!67759 () Option!161)

(assert (=> d!28051 (= (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67759)))

(declare-fun b!104050 () Bool)

(declare-fun e!67760 () Option!161)

(assert (=> b!104050 (= e!67759 e!67760)))

(declare-fun c!17965 () Bool)

(assert (=> b!104050 (= c!17965 (and ((_ is Cons!1607) (toList!800 lt!52728)) (not (= (_1!1211 (h!2203 (toList!800 lt!52728))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104051 () Bool)

(assert (=> b!104051 (= e!67760 (getValueByKey!155 (t!5673 (toList!800 lt!52728)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!104052 () Bool)

(assert (=> b!104052 (= e!67760 None!159)))

(declare-fun b!104049 () Bool)

(assert (=> b!104049 (= e!67759 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52728)))))))

(assert (= (and d!28051 c!17964) b!104049))

(assert (= (and d!28051 (not c!17964)) b!104050))

(assert (= (and b!104050 c!17965) b!104051))

(assert (= (and b!104050 (not c!17965)) b!104052))

(assert (=> b!104051 m!114339))

(declare-fun m!115365 () Bool)

(assert (=> b!104051 m!115365))

(assert (=> b!103995 d!28051))

(declare-fun d!28053 () Bool)

(assert (=> d!28053 (= (isEmpty!367 lt!52956) (isEmpty!368 (toList!800 lt!52956)))))

(declare-fun bs!4273 () Bool)

(assert (= bs!4273 d!28053))

(declare-fun m!115367 () Bool)

(assert (=> bs!4273 m!115367))

(assert (=> b!103771 d!28053))

(declare-fun d!28055 () Bool)

(declare-fun res!51915 () Bool)

(declare-fun e!67761 () Bool)

(assert (=> d!28055 (=> res!51915 e!67761)))

(assert (=> d!28055 (= res!51915 (and ((_ is Cons!1607) (toList!800 lt!52728)) (= (_1!1211 (h!2203 (toList!800 lt!52728))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28055 (= (containsKey!159 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000) e!67761)))

(declare-fun b!104053 () Bool)

(declare-fun e!67762 () Bool)

(assert (=> b!104053 (= e!67761 e!67762)))

(declare-fun res!51916 () Bool)

(assert (=> b!104053 (=> (not res!51916) (not e!67762))))

(assert (=> b!104053 (= res!51916 (and (or (not ((_ is Cons!1607) (toList!800 lt!52728))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52728))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1607) (toList!800 lt!52728)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52728))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104054 () Bool)

(assert (=> b!104054 (= e!67762 (containsKey!159 (t!5673 (toList!800 lt!52728)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28055 (not res!51915)) b!104053))

(assert (= (and b!104053 res!51916) b!104054))

(declare-fun m!115369 () Bool)

(assert (=> b!104054 m!115369))

(assert (=> d!27913 d!28055))

(declare-fun d!28057 () Bool)

(declare-fun e!67764 () Bool)

(assert (=> d!28057 e!67764))

(declare-fun res!51917 () Bool)

(assert (=> d!28057 (=> res!51917 e!67764)))

(declare-fun lt!53163 () Bool)

(assert (=> d!28057 (= res!51917 (not lt!53163))))

(declare-fun lt!53164 () Bool)

(assert (=> d!28057 (= lt!53163 lt!53164)))

(declare-fun lt!53165 () Unit!3150)

(declare-fun e!67763 () Unit!3150)

(assert (=> d!28057 (= lt!53165 e!67763)))

(declare-fun c!17966 () Bool)

(assert (=> d!28057 (= c!17966 lt!53164)))

(assert (=> d!28057 (= lt!53164 (containsKey!159 (toList!800 lt!52972) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28057 (= (contains!824 lt!52972 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53163)))

(declare-fun b!104055 () Bool)

(declare-fun lt!53166 () Unit!3150)

(assert (=> b!104055 (= e!67763 lt!53166)))

(assert (=> b!104055 (= lt!53166 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52972) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104055 (isDefined!108 (getValueByKey!155 (toList!800 lt!52972) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104056 () Bool)

(declare-fun Unit!3183 () Unit!3150)

(assert (=> b!104056 (= e!67763 Unit!3183)))

(declare-fun b!104057 () Bool)

(assert (=> b!104057 (= e!67764 (isDefined!108 (getValueByKey!155 (toList!800 lt!52972) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28057 c!17966) b!104055))

(assert (= (and d!28057 (not c!17966)) b!104056))

(assert (= (and d!28057 (not res!51917)) b!104057))

(assert (=> d!28057 m!114525))

(declare-fun m!115371 () Bool)

(assert (=> d!28057 m!115371))

(assert (=> b!104055 m!114525))

(declare-fun m!115373 () Bool)

(assert (=> b!104055 m!115373))

(assert (=> b!104055 m!114525))

(assert (=> b!104055 m!115319))

(assert (=> b!104055 m!115319))

(declare-fun m!115375 () Bool)

(assert (=> b!104055 m!115375))

(assert (=> b!104057 m!114525))

(assert (=> b!104057 m!115319))

(assert (=> b!104057 m!115319))

(assert (=> b!104057 m!115375))

(assert (=> b!103779 d!28057))

(declare-fun d!28059 () Bool)

(assert (=> d!28059 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53167 () Unit!3150)

(assert (=> d!28059 (= lt!53167 (choose!649 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67765 () Bool)

(assert (=> d!28059 e!67765))

(declare-fun res!51918 () Bool)

(assert (=> d!28059 (=> (not res!51918) (not e!67765))))

(assert (=> d!28059 (= res!51918 (isStrictlySorted!308 (toList!800 lt!52783)))))

(assert (=> d!28059 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53167)))

(declare-fun b!104058 () Bool)

(assert (=> b!104058 (= e!67765 (containsKey!159 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28059 res!51918) b!104058))

(assert (=> d!28059 m!114601))

(assert (=> d!28059 m!114601))

(assert (=> d!28059 m!114603))

(declare-fun m!115377 () Bool)

(assert (=> d!28059 m!115377))

(declare-fun m!115379 () Bool)

(assert (=> d!28059 m!115379))

(assert (=> b!104058 m!114597))

(assert (=> b!103654 d!28059))

(declare-fun d!28061 () Bool)

(assert (=> d!28061 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4274 () Bool)

(assert (= bs!4274 d!28061))

(assert (=> bs!4274 m!114601))

(declare-fun m!115381 () Bool)

(assert (=> bs!4274 m!115381))

(assert (=> b!103654 d!28061))

(declare-fun d!28063 () Bool)

(declare-fun c!17967 () Bool)

(assert (=> d!28063 (= c!17967 (and ((_ is Cons!1607) (toList!800 lt!52783)) (= (_1!1211 (h!2203 (toList!800 lt!52783))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67766 () Option!161)

(assert (=> d!28063 (= (getValueByKey!155 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000) e!67766)))

(declare-fun b!104060 () Bool)

(declare-fun e!67767 () Option!161)

(assert (=> b!104060 (= e!67766 e!67767)))

(declare-fun c!17968 () Bool)

(assert (=> b!104060 (= c!17968 (and ((_ is Cons!1607) (toList!800 lt!52783)) (not (= (_1!1211 (h!2203 (toList!800 lt!52783))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104061 () Bool)

(assert (=> b!104061 (= e!67767 (getValueByKey!155 (t!5673 (toList!800 lt!52783)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104062 () Bool)

(assert (=> b!104062 (= e!67767 None!159)))

(declare-fun b!104059 () Bool)

(assert (=> b!104059 (= e!67766 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52783)))))))

(assert (= (and d!28063 c!17967) b!104059))

(assert (= (and d!28063 (not c!17967)) b!104060))

(assert (= (and b!104060 c!17968) b!104061))

(assert (= (and b!104060 (not c!17968)) b!104062))

(declare-fun m!115383 () Bool)

(assert (=> b!104061 m!115383))

(assert (=> b!103654 d!28063))

(assert (=> d!27979 d!27959))

(declare-fun d!28065 () Bool)

(assert (=> d!28065 (= (apply!97 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52730) (apply!97 lt!52718 lt!52730))))

(assert (=> d!28065 true))

(declare-fun _$34!880 () Unit!3150)

(assert (=> d!28065 (= (choose!645 lt!52718 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52730) _$34!880)))

(declare-fun bs!4275 () Bool)

(assert (= bs!4275 d!28065))

(assert (=> bs!4275 m!114365))

(assert (=> bs!4275 m!114365))

(assert (=> bs!4275 m!114367))

(assert (=> bs!4275 m!114377))

(assert (=> d!27979 d!28065))

(declare-fun d!28067 () Bool)

(declare-fun e!67769 () Bool)

(assert (=> d!28067 e!67769))

(declare-fun res!51919 () Bool)

(assert (=> d!28067 (=> res!51919 e!67769)))

(declare-fun lt!53168 () Bool)

(assert (=> d!28067 (= res!51919 (not lt!53168))))

(declare-fun lt!53169 () Bool)

(assert (=> d!28067 (= lt!53168 lt!53169)))

(declare-fun lt!53170 () Unit!3150)

(declare-fun e!67768 () Unit!3150)

(assert (=> d!28067 (= lt!53170 e!67768)))

(declare-fun c!17969 () Bool)

(assert (=> d!28067 (= c!17969 lt!53169)))

(assert (=> d!28067 (= lt!53169 (containsKey!159 (toList!800 lt!52718) lt!52730))))

(assert (=> d!28067 (= (contains!824 lt!52718 lt!52730) lt!53168)))

(declare-fun b!104063 () Bool)

(declare-fun lt!53171 () Unit!3150)

(assert (=> b!104063 (= e!67768 lt!53171)))

(assert (=> b!104063 (= lt!53171 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52718) lt!52730))))

(assert (=> b!104063 (isDefined!108 (getValueByKey!155 (toList!800 lt!52718) lt!52730))))

(declare-fun b!104064 () Bool)

(declare-fun Unit!3184 () Unit!3150)

(assert (=> b!104064 (= e!67768 Unit!3184)))

(declare-fun b!104065 () Bool)

(assert (=> b!104065 (= e!67769 (isDefined!108 (getValueByKey!155 (toList!800 lt!52718) lt!52730)))))

(assert (= (and d!28067 c!17969) b!104063))

(assert (= (and d!28067 (not c!17969)) b!104064))

(assert (= (and d!28067 (not res!51919)) b!104065))

(declare-fun m!115385 () Bool)

(assert (=> d!28067 m!115385))

(declare-fun m!115387 () Bool)

(assert (=> b!104063 m!115387))

(assert (=> b!104063 m!115243))

(assert (=> b!104063 m!115243))

(declare-fun m!115389 () Bool)

(assert (=> b!104063 m!115389))

(assert (=> b!104065 m!115243))

(assert (=> b!104065 m!115243))

(assert (=> b!104065 m!115389))

(assert (=> d!27979 d!28067))

(assert (=> d!27979 d!27977))

(assert (=> d!27979 d!27985))

(declare-fun d!28069 () Bool)

(declare-fun c!17970 () Bool)

(assert (=> d!28069 (= c!17970 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52789))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52789)))) (_1!1211 lt!52540))))))

(declare-fun e!67770 () Option!161)

(assert (=> d!28069 (= (getValueByKey!155 (t!5673 (toList!800 lt!52789)) (_1!1211 lt!52540)) e!67770)))

(declare-fun b!104067 () Bool)

(declare-fun e!67771 () Option!161)

(assert (=> b!104067 (= e!67770 e!67771)))

(declare-fun c!17971 () Bool)

(assert (=> b!104067 (= c!17971 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52789))) (not (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52789)))) (_1!1211 lt!52540)))))))

(declare-fun b!104068 () Bool)

(assert (=> b!104068 (= e!67771 (getValueByKey!155 (t!5673 (t!5673 (toList!800 lt!52789))) (_1!1211 lt!52540)))))

(declare-fun b!104069 () Bool)

(assert (=> b!104069 (= e!67771 None!159)))

(declare-fun b!104066 () Bool)

(assert (=> b!104066 (= e!67770 (Some!160 (_2!1211 (h!2203 (t!5673 (toList!800 lt!52789))))))))

(assert (= (and d!28069 c!17970) b!104066))

(assert (= (and d!28069 (not c!17970)) b!104067))

(assert (= (and b!104067 c!17971) b!104068))

(assert (= (and b!104067 (not c!17971)) b!104069))

(declare-fun m!115391 () Bool)

(assert (=> b!104068 m!115391))

(assert (=> b!103652 d!28069))

(declare-fun d!28071 () Bool)

(declare-fun c!17974 () Bool)

(assert (=> d!28071 (= c!17974 ((_ is Nil!1608) (toList!800 lt!52764)))))

(declare-fun e!67774 () (InoxSet tuple2!2400))

(assert (=> d!28071 (= (content!108 (toList!800 lt!52764)) e!67774)))

(declare-fun b!104074 () Bool)

(assert (=> b!104074 (= e!67774 ((as const (Array tuple2!2400 Bool)) false))))

(declare-fun b!104075 () Bool)

(assert (=> b!104075 (= e!67774 ((_ map or) (store ((as const (Array tuple2!2400 Bool)) false) (h!2203 (toList!800 lt!52764)) true) (content!108 (t!5673 (toList!800 lt!52764)))))))

(assert (= (and d!28071 c!17974) b!104074))

(assert (= (and d!28071 (not c!17974)) b!104075))

(declare-fun m!115393 () Bool)

(assert (=> b!104075 m!115393))

(declare-fun m!115395 () Bool)

(assert (=> b!104075 m!115395))

(assert (=> d!27951 d!28071))

(declare-fun d!28073 () Bool)

(assert (=> d!28073 (= (apply!97 lt!52972 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52972) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4276 () Bool)

(assert (= bs!4276 d!28073))

(declare-fun m!115397 () Bool)

(assert (=> bs!4276 m!115397))

(assert (=> bs!4276 m!115397))

(declare-fun m!115399 () Bool)

(assert (=> bs!4276 m!115399))

(assert (=> b!103794 d!28073))

(declare-fun d!28075 () Bool)

(assert (=> d!28075 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538)))))))

(declare-fun bs!4277 () Bool)

(assert (= bs!4277 d!28075))

(assert (=> bs!4277 m!114415))

(declare-fun m!115401 () Bool)

(assert (=> bs!4277 m!115401))

(assert (=> b!103552 d!28075))

(assert (=> b!103552 d!27877))

(declare-fun d!28077 () Bool)

(assert (=> d!28077 (isDefined!108 (getValueByKey!155 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!53172 () Unit!3150)

(assert (=> d!28077 (= lt!53172 (choose!649 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67775 () Bool)

(assert (=> d!28077 e!67775))

(declare-fun res!51920 () Bool)

(assert (=> d!28077 (=> (not res!51920) (not e!67775))))

(assert (=> d!28077 (= res!51920 (isStrictlySorted!308 (toList!800 e!67364)))))

(assert (=> d!28077 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53172)))

(declare-fun b!104076 () Bool)

(assert (=> b!104076 (= e!67775 (containsKey!159 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28077 res!51920) b!104076))

(assert (=> d!28077 m!114165))

(assert (=> d!28077 m!115021))

(assert (=> d!28077 m!115021))

(assert (=> d!28077 m!115023))

(assert (=> d!28077 m!114165))

(declare-fun m!115403 () Bool)

(assert (=> d!28077 m!115403))

(declare-fun m!115405 () Bool)

(assert (=> d!28077 m!115405))

(assert (=> b!104076 m!114165))

(assert (=> b!104076 m!115017))

(assert (=> b!103889 d!28077))

(declare-fun d!28079 () Bool)

(assert (=> d!28079 (= (isDefined!108 (getValueByKey!155 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) (not (isEmpty!369 (getValueByKey!155 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun bs!4278 () Bool)

(assert (= bs!4278 d!28079))

(assert (=> bs!4278 m!115021))

(declare-fun m!115407 () Bool)

(assert (=> bs!4278 m!115407))

(assert (=> b!103889 d!28079))

(declare-fun c!17975 () Bool)

(declare-fun d!28081 () Bool)

(assert (=> d!28081 (= c!17975 (and ((_ is Cons!1607) (toList!800 e!67364)) (= (_1!1211 (h!2203 (toList!800 e!67364))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun e!67776 () Option!161)

(assert (=> d!28081 (= (getValueByKey!155 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67776)))

(declare-fun b!104078 () Bool)

(declare-fun e!67777 () Option!161)

(assert (=> b!104078 (= e!67776 e!67777)))

(declare-fun c!17976 () Bool)

(assert (=> b!104078 (= c!17976 (and ((_ is Cons!1607) (toList!800 e!67364)) (not (= (_1!1211 (h!2203 (toList!800 e!67364))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104079 () Bool)

(assert (=> b!104079 (= e!67777 (getValueByKey!155 (t!5673 (toList!800 e!67364)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104080 () Bool)

(assert (=> b!104080 (= e!67777 None!159)))

(declare-fun b!104077 () Bool)

(assert (=> b!104077 (= e!67776 (Some!160 (_2!1211 (h!2203 (toList!800 e!67364)))))))

(assert (= (and d!28081 c!17975) b!104077))

(assert (= (and d!28081 (not c!17975)) b!104078))

(assert (= (and b!104078 c!17976) b!104079))

(assert (= (and b!104078 (not c!17976)) b!104080))

(assert (=> b!104079 m!114165))

(declare-fun m!115409 () Bool)

(assert (=> b!104079 m!115409))

(assert (=> b!103889 d!28081))

(declare-fun d!28083 () Bool)

(declare-fun res!51921 () Bool)

(declare-fun e!67778 () Bool)

(assert (=> d!28083 (=> res!51921 e!67778)))

(assert (=> d!28083 (= res!51921 (and ((_ is Cons!1607) lt!53030) (= (_1!1211 (h!2203 lt!53030)) (_1!1211 lt!52540))))))

(assert (=> d!28083 (= (containsKey!159 lt!53030 (_1!1211 lt!52540)) e!67778)))

(declare-fun b!104081 () Bool)

(declare-fun e!67779 () Bool)

(assert (=> b!104081 (= e!67778 e!67779)))

(declare-fun res!51922 () Bool)

(assert (=> b!104081 (=> (not res!51922) (not e!67779))))

(assert (=> b!104081 (= res!51922 (and (or (not ((_ is Cons!1607) lt!53030)) (bvsle (_1!1211 (h!2203 lt!53030)) (_1!1211 lt!52540))) ((_ is Cons!1607) lt!53030) (bvslt (_1!1211 (h!2203 lt!53030)) (_1!1211 lt!52540))))))

(declare-fun b!104082 () Bool)

(assert (=> b!104082 (= e!67779 (containsKey!159 (t!5673 lt!53030) (_1!1211 lt!52540)))))

(assert (= (and d!28083 (not res!51921)) b!104081))

(assert (= (and b!104081 res!51922) b!104082))

(declare-fun m!115411 () Bool)

(assert (=> b!104082 m!115411))

(assert (=> b!103875 d!28083))

(declare-fun d!28085 () Bool)

(declare-fun e!67781 () Bool)

(assert (=> d!28085 e!67781))

(declare-fun res!51923 () Bool)

(assert (=> d!28085 (=> res!51923 e!67781)))

(declare-fun lt!53173 () Bool)

(assert (=> d!28085 (= res!51923 (not lt!53173))))

(declare-fun lt!53174 () Bool)

(assert (=> d!28085 (= lt!53173 lt!53174)))

(declare-fun lt!53175 () Unit!3150)

(declare-fun e!67780 () Unit!3150)

(assert (=> d!28085 (= lt!53175 e!67780)))

(declare-fun c!17977 () Bool)

(assert (=> d!28085 (= c!17977 lt!53174)))

(assert (=> d!28085 (= lt!53174 (containsKey!159 (toList!800 lt!52998) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28085 (= (contains!824 lt!52998 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53173)))

(declare-fun b!104083 () Bool)

(declare-fun lt!53176 () Unit!3150)

(assert (=> b!104083 (= e!67780 lt!53176)))

(assert (=> b!104083 (= lt!53176 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52998) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104083 (isDefined!108 (getValueByKey!155 (toList!800 lt!52998) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104084 () Bool)

(declare-fun Unit!3185 () Unit!3150)

(assert (=> b!104084 (= e!67780 Unit!3185)))

(declare-fun b!104085 () Bool)

(assert (=> b!104085 (= e!67781 (isDefined!108 (getValueByKey!155 (toList!800 lt!52998) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28085 c!17977) b!104083))

(assert (= (and d!28085 (not c!17977)) b!104084))

(assert (= (and d!28085 (not res!51923)) b!104085))

(assert (=> d!28085 m!114525))

(declare-fun m!115413 () Bool)

(assert (=> d!28085 m!115413))

(assert (=> b!104083 m!114525))

(declare-fun m!115415 () Bool)

(assert (=> b!104083 m!115415))

(assert (=> b!104083 m!114525))

(assert (=> b!104083 m!115331))

(assert (=> b!104083 m!115331))

(declare-fun m!115417 () Bool)

(assert (=> b!104083 m!115417))

(assert (=> b!104085 m!114525))

(assert (=> b!104085 m!115331))

(assert (=> b!104085 m!115331))

(assert (=> b!104085 m!115417))

(assert (=> b!103813 d!28085))

(declare-fun d!28087 () Bool)

(assert (=> d!28087 (= (apply!97 lt!52998 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52998) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4279 () Bool)

(assert (= bs!4279 d!28087))

(declare-fun m!115419 () Bool)

(assert (=> bs!4279 m!115419))

(assert (=> bs!4279 m!115419))

(declare-fun m!115421 () Bool)

(assert (=> bs!4279 m!115421))

(assert (=> b!103828 d!28087))

(declare-fun d!28089 () Bool)

(declare-fun lt!53177 () Bool)

(assert (=> d!28089 (= lt!53177 (select (content!108 lt!52794) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun e!67783 () Bool)

(assert (=> d!28089 (= lt!53177 e!67783)))

(declare-fun res!51924 () Bool)

(assert (=> d!28089 (=> (not res!51924) (not e!67783))))

(assert (=> d!28089 (= res!51924 ((_ is Cons!1607) lt!52794))))

(assert (=> d!28089 (= (contains!826 lt!52794 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))) lt!53177)))

(declare-fun b!104086 () Bool)

(declare-fun e!67782 () Bool)

(assert (=> b!104086 (= e!67783 e!67782)))

(declare-fun res!51925 () Bool)

(assert (=> b!104086 (=> res!51925 e!67782)))

(assert (=> b!104086 (= res!51925 (= (h!2203 lt!52794) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!104087 () Bool)

(assert (=> b!104087 (= e!67782 (contains!826 (t!5673 lt!52794) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(assert (= (and d!28089 res!51924) b!104086))

(assert (= (and b!104086 (not res!51925)) b!104087))

(declare-fun m!115423 () Bool)

(assert (=> d!28089 m!115423))

(declare-fun m!115425 () Bool)

(assert (=> d!28089 m!115425))

(declare-fun m!115427 () Bool)

(assert (=> b!104087 m!115427))

(assert (=> b!103733 d!28089))

(declare-fun d!28091 () Bool)

(declare-fun res!51926 () Bool)

(declare-fun e!67784 () Bool)

(assert (=> d!28091 (=> res!51926 e!67784)))

(assert (=> d!28091 (= res!51926 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52534))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52534)))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28091 (= (containsKey!159 (t!5673 (toList!800 lt!52534)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67784)))

(declare-fun b!104088 () Bool)

(declare-fun e!67785 () Bool)

(assert (=> b!104088 (= e!67784 e!67785)))

(declare-fun res!51927 () Bool)

(assert (=> b!104088 (=> (not res!51927) (not e!67785))))

(assert (=> b!104088 (= res!51927 (and (or (not ((_ is Cons!1607) (t!5673 (toList!800 lt!52534)))) (bvsle (_1!1211 (h!2203 (t!5673 (toList!800 lt!52534)))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1607) (t!5673 (toList!800 lt!52534))) (bvslt (_1!1211 (h!2203 (t!5673 (toList!800 lt!52534)))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!104089 () Bool)

(assert (=> b!104089 (= e!67785 (containsKey!159 (t!5673 (t!5673 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28091 (not res!51926)) b!104088))

(assert (= (and b!104088 res!51927) b!104089))

(assert (=> b!104089 m!114165))

(declare-fun m!115429 () Bool)

(assert (=> b!104089 m!115429))

(assert (=> b!103801 d!28091))

(declare-fun d!28093 () Bool)

(declare-fun res!51928 () Bool)

(declare-fun e!67786 () Bool)

(assert (=> d!28093 (=> res!51928 e!67786)))

(assert (=> d!28093 (= res!51928 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52731)))))

(assert (=> d!28093 (= (containsKey!159 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731) e!67786)))

(declare-fun b!104090 () Bool)

(declare-fun e!67787 () Bool)

(assert (=> b!104090 (= e!67786 e!67787)))

(declare-fun res!51929 () Bool)

(assert (=> b!104090 (=> (not res!51929) (not e!67787))))

(assert (=> b!104090 (= res!51929 (and (or (not ((_ is Cons!1607) (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) (bvsle (_1!1211 (h!2203 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52731)) ((_ is Cons!1607) (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52731)))))

(declare-fun b!104091 () Bool)

(assert (=> b!104091 (= e!67787 (containsKey!159 (t!5673 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!52731))))

(assert (= (and d!28093 (not res!51928)) b!104090))

(assert (= (and b!104090 res!51929) b!104091))

(declare-fun m!115431 () Bool)

(assert (=> b!104091 m!115431))

(assert (=> d!27983 d!28093))

(declare-fun b!104092 () Bool)

(declare-fun e!67789 () (_ BitVec 32))

(declare-fun call!10934 () (_ BitVec 32))

(assert (=> b!104092 (= e!67789 call!10934)))

(declare-fun b!104093 () Bool)

(assert (=> b!104093 (= e!67789 (bvadd #b00000000000000000000000000000001 call!10934))))

(declare-fun b!104094 () Bool)

(declare-fun e!67788 () (_ BitVec 32))

(assert (=> b!104094 (= e!67788 e!67789)))

(declare-fun c!17979 () Bool)

(assert (=> b!104094 (= c!17979 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!28095 () Bool)

(declare-fun lt!53178 () (_ BitVec 32))

(assert (=> d!28095 (and (bvsge lt!53178 #b00000000000000000000000000000000) (bvsle lt!53178 (bvsub (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (=> d!28095 (= lt!53178 e!67788)))

(declare-fun c!17978 () Bool)

(assert (=> d!28095 (= c!17978 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28095 (and (bvsle #b00000000000000000000000000000000 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28095 (= (arrayCountValidKeys!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))) lt!53178)))

(declare-fun b!104095 () Bool)

(assert (=> b!104095 (= e!67788 #b00000000000000000000000000000000)))

(declare-fun bm!10931 () Bool)

(assert (=> bm!10931 (= call!10934 (arrayCountValidKeys!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28095 c!17978) b!104095))

(assert (= (and d!28095 (not c!17978)) b!104094))

(assert (= (and b!104094 c!17979) b!104093))

(assert (= (and b!104094 (not c!17979)) b!104092))

(assert (= (or b!104093 b!104092) bm!10931))

(declare-fun m!115433 () Bool)

(assert (=> b!104094 m!115433))

(assert (=> b!104094 m!115433))

(declare-fun m!115435 () Bool)

(assert (=> b!104094 m!115435))

(declare-fun m!115437 () Bool)

(assert (=> bm!10931 m!115437))

(assert (=> b!103926 d!28095))

(declare-fun d!28097 () Bool)

(declare-fun lt!53179 () Bool)

(assert (=> d!28097 (= lt!53179 (select (content!108 lt!52953) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun e!67791 () Bool)

(assert (=> d!28097 (= lt!53179 e!67791)))

(declare-fun res!51930 () Bool)

(assert (=> d!28097 (=> (not res!51930) (not e!67791))))

(assert (=> d!28097 (= res!51930 ((_ is Cons!1607) lt!52953))))

(assert (=> d!28097 (= (contains!826 lt!52953 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))) lt!53179)))

(declare-fun b!104096 () Bool)

(declare-fun e!67790 () Bool)

(assert (=> b!104096 (= e!67791 e!67790)))

(declare-fun res!51931 () Bool)

(assert (=> b!104096 (=> res!51931 e!67790)))

(assert (=> b!104096 (= res!51931 (= (h!2203 lt!52953) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!104097 () Bool)

(assert (=> b!104097 (= e!67790 (contains!826 (t!5673 lt!52953) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(assert (= (and d!28097 res!51930) b!104096))

(assert (= (and b!104096 (not res!51931)) b!104097))

(declare-fun m!115439 () Bool)

(assert (=> d!28097 m!115439))

(declare-fun m!115441 () Bool)

(assert (=> d!28097 m!115441))

(declare-fun m!115443 () Bool)

(assert (=> b!104097 m!115443))

(assert (=> b!103761 d!28097))

(declare-fun d!28099 () Bool)

(assert (=> d!28099 (= (apply!97 lt!52956 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1326 (getValueByKey!155 (toList!800 lt!52956) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(declare-fun bs!4280 () Bool)

(assert (= bs!4280 d!28099))

(assert (=> bs!4280 m!114691))

(declare-fun m!115445 () Bool)

(assert (=> bs!4280 m!115445))

(assert (=> bs!4280 m!115445))

(declare-fun m!115447 () Bool)

(assert (=> bs!4280 m!115447))

(assert (=> b!103764 d!28099))

(declare-fun d!28101 () Bool)

(declare-fun c!17980 () Bool)

(assert (=> d!28101 (= c!17980 ((_ is ValueCellFull!993) (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun e!67792 () V!3211)

(assert (=> d!28101 (= (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!67792)))

(declare-fun b!104098 () Bool)

(assert (=> b!104098 (= e!67792 (get!1324 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104099 () Bool)

(assert (=> b!104099 (= e!67792 (get!1325 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28101 c!17980) b!104098))

(assert (= (and d!28101 (not c!17980)) b!104099))

(assert (=> b!104098 m!114755))

(assert (=> b!104098 m!114197))

(declare-fun m!115449 () Bool)

(assert (=> b!104098 m!115449))

(assert (=> b!104099 m!114755))

(assert (=> b!104099 m!114197))

(declare-fun m!115451 () Bool)

(assert (=> b!104099 m!115451))

(assert (=> b!103764 d!28101))

(declare-fun d!28103 () Bool)

(declare-fun res!51932 () Bool)

(declare-fun e!67793 () Bool)

(assert (=> d!28103 (=> (not res!51932) (not e!67793))))

(assert (=> d!28103 (= res!51932 (simpleValid!73 (_2!1212 lt!52911)))))

(assert (=> d!28103 (= (valid!417 (_2!1212 lt!52911)) e!67793)))

(declare-fun b!104100 () Bool)

(declare-fun res!51933 () Bool)

(assert (=> b!104100 (=> (not res!51933) (not e!67793))))

(assert (=> b!104100 (= res!51933 (= (arrayCountValidKeys!0 (_keys!4263 (_2!1212 lt!52911)) #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52911)))) (_size!496 (_2!1212 lt!52911))))))

(declare-fun b!104101 () Bool)

(declare-fun res!51934 () Bool)

(assert (=> b!104101 (=> (not res!51934) (not e!67793))))

(assert (=> b!104101 (= res!51934 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (_2!1212 lt!52911)) (mask!6697 (_2!1212 lt!52911))))))

(declare-fun b!104102 () Bool)

(assert (=> b!104102 (= e!67793 (arrayNoDuplicates!0 (_keys!4263 (_2!1212 lt!52911)) #b00000000000000000000000000000000 Nil!1607))))

(assert (= (and d!28103 res!51932) b!104100))

(assert (= (and b!104100 res!51933) b!104101))

(assert (= (and b!104101 res!51934) b!104102))

(declare-fun m!115453 () Bool)

(assert (=> d!28103 m!115453))

(declare-fun m!115455 () Bool)

(assert (=> b!104100 m!115455))

(declare-fun m!115457 () Bool)

(assert (=> b!104101 m!115457))

(declare-fun m!115459 () Bool)

(assert (=> b!104102 m!115459))

(assert (=> b!103709 d!28103))

(assert (=> d!27975 d!27961))

(assert (=> d!27975 d!27981))

(assert (=> d!27975 d!27963))

(declare-fun d!28105 () Bool)

(declare-fun e!67795 () Bool)

(assert (=> d!28105 e!67795))

(declare-fun res!51935 () Bool)

(assert (=> d!28105 (=> res!51935 e!67795)))

(declare-fun lt!53180 () Bool)

(assert (=> d!28105 (= res!51935 (not lt!53180))))

(declare-fun lt!53181 () Bool)

(assert (=> d!28105 (= lt!53180 lt!53181)))

(declare-fun lt!53182 () Unit!3150)

(declare-fun e!67794 () Unit!3150)

(assert (=> d!28105 (= lt!53182 e!67794)))

(declare-fun c!17981 () Bool)

(assert (=> d!28105 (= c!17981 lt!53181)))

(assert (=> d!28105 (= lt!53181 (containsKey!159 (toList!800 lt!52725) lt!52734))))

(assert (=> d!28105 (= (contains!824 lt!52725 lt!52734) lt!53180)))

(declare-fun b!104103 () Bool)

(declare-fun lt!53183 () Unit!3150)

(assert (=> b!104103 (= e!67794 lt!53183)))

(assert (=> b!104103 (= lt!53183 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52725) lt!52734))))

(assert (=> b!104103 (isDefined!108 (getValueByKey!155 (toList!800 lt!52725) lt!52734))))

(declare-fun b!104104 () Bool)

(declare-fun Unit!3186 () Unit!3150)

(assert (=> b!104104 (= e!67794 Unit!3186)))

(declare-fun b!104105 () Bool)

(assert (=> b!104105 (= e!67795 (isDefined!108 (getValueByKey!155 (toList!800 lt!52725) lt!52734)))))

(assert (= (and d!28105 c!17981) b!104103))

(assert (= (and d!28105 (not c!17981)) b!104104))

(assert (= (and d!28105 (not res!51935)) b!104105))

(declare-fun m!115461 () Bool)

(assert (=> d!28105 m!115461))

(declare-fun m!115463 () Bool)

(assert (=> b!104103 m!115463))

(assert (=> b!104103 m!115231))

(assert (=> b!104103 m!115231))

(declare-fun m!115465 () Bool)

(assert (=> b!104103 m!115465))

(assert (=> b!104105 m!115231))

(assert (=> b!104105 m!115231))

(assert (=> b!104105 m!115465))

(assert (=> d!27975 d!28105))

(declare-fun d!28107 () Bool)

(assert (=> d!28107 (= (apply!97 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52734) (apply!97 lt!52725 lt!52734))))

(assert (=> d!28107 true))

(declare-fun _$34!881 () Unit!3150)

(assert (=> d!28107 (= (choose!645 lt!52725 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52734) _$34!881)))

(declare-fun bs!4281 () Bool)

(assert (= bs!4281 d!28107))

(assert (=> bs!4281 m!114369))

(assert (=> bs!4281 m!114369))

(assert (=> bs!4281 m!114373))

(assert (=> bs!4281 m!114359))

(assert (=> d!27975 d!28107))

(assert (=> d!27955 d!27885))

(declare-fun b!104122 () Bool)

(declare-fun res!51945 () Bool)

(declare-fun e!67805 () Bool)

(assert (=> b!104122 (=> (not res!51945) (not e!67805))))

(declare-fun call!10940 () Bool)

(assert (=> b!104122 (= res!51945 call!10940)))

(declare-fun e!67807 () Bool)

(assert (=> b!104122 (= e!67807 e!67805)))

(declare-fun d!28109 () Bool)

(declare-fun e!67804 () Bool)

(assert (=> d!28109 e!67804))

(declare-fun c!17986 () Bool)

(declare-fun lt!53186 () SeekEntryResult!258)

(assert (=> d!28109 (= c!17986 ((_ is MissingZero!258) lt!53186))))

(assert (=> d!28109 (= lt!53186 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!28109 true))

(declare-fun _$34!884 () Unit!3150)

(assert (=> d!28109 (= (choose!644 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) _$34!884)))

(declare-fun bm!10936 () Bool)

(assert (=> bm!10936 (= call!10940 (inRange!0 (ite c!17986 (index!3179 lt!53186) (index!3182 lt!53186)) (mask!6697 newMap!16)))))

(declare-fun b!104123 () Bool)

(declare-fun e!67806 () Bool)

(assert (=> b!104123 (= e!67804 e!67806)))

(declare-fun res!51947 () Bool)

(assert (=> b!104123 (= res!51947 call!10940)))

(assert (=> b!104123 (=> (not res!51947) (not e!67806))))

(declare-fun b!104124 () Bool)

(declare-fun call!10939 () Bool)

(assert (=> b!104124 (= e!67805 (not call!10939))))

(declare-fun b!104125 () Bool)

(assert (=> b!104125 (= e!67807 ((_ is Undefined!258) lt!53186))))

(declare-fun b!104126 () Bool)

(declare-fun res!51944 () Bool)

(assert (=> b!104126 (= res!51944 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!53186)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104126 (=> (not res!51944) (not e!67806))))

(declare-fun b!104127 () Bool)

(assert (=> b!104127 (= e!67806 (not call!10939))))

(declare-fun b!104128 () Bool)

(declare-fun res!51946 () Bool)

(assert (=> b!104128 (=> (not res!51946) (not e!67805))))

(assert (=> b!104128 (= res!51946 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!53186)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104129 () Bool)

(assert (=> b!104129 (= e!67804 e!67807)))

(declare-fun c!17987 () Bool)

(assert (=> b!104129 (= c!17987 ((_ is MissingVacant!258) lt!53186))))

(declare-fun bm!10937 () Bool)

(assert (=> bm!10937 (= call!10939 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!28109 c!17986) b!104123))

(assert (= (and d!28109 (not c!17986)) b!104129))

(assert (= (and b!104123 res!51947) b!104126))

(assert (= (and b!104126 res!51944) b!104127))

(assert (= (and b!104129 c!17987) b!104122))

(assert (= (and b!104129 (not c!17987)) b!104125))

(assert (= (and b!104122 res!51945) b!104128))

(assert (= (and b!104128 res!51946) b!104124))

(assert (= (or b!104123 b!104122) bm!10936))

(assert (= (or b!104127 b!104124) bm!10937))

(declare-fun m!115467 () Bool)

(assert (=> b!104128 m!115467))

(declare-fun m!115469 () Bool)

(assert (=> b!104126 m!115469))

(declare-fun m!115471 () Bool)

(assert (=> bm!10936 m!115471))

(assert (=> bm!10937 m!114165))

(assert (=> bm!10937 m!114307))

(assert (=> d!28109 m!114165))

(assert (=> d!28109 m!114295))

(assert (=> d!27955 d!28109))

(declare-fun d!28111 () Bool)

(assert (=> d!28111 (= (validMask!0 (mask!6697 newMap!16)) (and (or (= (mask!6697 newMap!16) #b00000000000000000000000000000111) (= (mask!6697 newMap!16) #b00000000000000000000000000001111) (= (mask!6697 newMap!16) #b00000000000000000000000000011111) (= (mask!6697 newMap!16) #b00000000000000000000000000111111) (= (mask!6697 newMap!16) #b00000000000000000000000001111111) (= (mask!6697 newMap!16) #b00000000000000000000000011111111) (= (mask!6697 newMap!16) #b00000000000000000000000111111111) (= (mask!6697 newMap!16) #b00000000000000000000001111111111) (= (mask!6697 newMap!16) #b00000000000000000000011111111111) (= (mask!6697 newMap!16) #b00000000000000000000111111111111) (= (mask!6697 newMap!16) #b00000000000000000001111111111111) (= (mask!6697 newMap!16) #b00000000000000000011111111111111) (= (mask!6697 newMap!16) #b00000000000000000111111111111111) (= (mask!6697 newMap!16) #b00000000000000001111111111111111) (= (mask!6697 newMap!16) #b00000000000000011111111111111111) (= (mask!6697 newMap!16) #b00000000000000111111111111111111) (= (mask!6697 newMap!16) #b00000000000001111111111111111111) (= (mask!6697 newMap!16) #b00000000000011111111111111111111) (= (mask!6697 newMap!16) #b00000000000111111111111111111111) (= (mask!6697 newMap!16) #b00000000001111111111111111111111) (= (mask!6697 newMap!16) #b00000000011111111111111111111111) (= (mask!6697 newMap!16) #b00000000111111111111111111111111) (= (mask!6697 newMap!16) #b00000001111111111111111111111111) (= (mask!6697 newMap!16) #b00000011111111111111111111111111) (= (mask!6697 newMap!16) #b00000111111111111111111111111111) (= (mask!6697 newMap!16) #b00001111111111111111111111111111) (= (mask!6697 newMap!16) #b00011111111111111111111111111111) (= (mask!6697 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6697 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!27955 d!28111))

(declare-fun d!28113 () Bool)

(declare-fun e!67808 () Bool)

(assert (=> d!28113 e!67808))

(declare-fun res!51949 () Bool)

(assert (=> d!28113 (=> (not res!51949) (not e!67808))))

(declare-fun lt!53188 () ListLongMap!1569)

(assert (=> d!28113 (= res!51949 (contains!824 lt!53188 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun lt!53189 () List!1611)

(assert (=> d!28113 (= lt!53188 (ListLongMap!1570 lt!53189))))

(declare-fun lt!53187 () Unit!3150)

(declare-fun lt!53190 () Unit!3150)

(assert (=> d!28113 (= lt!53187 lt!53190)))

(assert (=> d!28113 (= (getValueByKey!155 lt!53189 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28113 (= lt!53190 (lemmaContainsTupThenGetReturnValue!71 lt!53189 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28113 (= lt!53189 (insertStrictlySorted!74 (toList!800 call!10882) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28113 (= (+!141 call!10882 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) lt!53188)))

(declare-fun b!104130 () Bool)

(declare-fun res!51948 () Bool)

(assert (=> b!104130 (=> (not res!51948) (not e!67808))))

(assert (=> b!104130 (= res!51948 (= (getValueByKey!155 (toList!800 lt!53188) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun b!104131 () Bool)

(assert (=> b!104131 (= e!67808 (contains!826 (toList!800 lt!53188) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(assert (= (and d!28113 res!51949) b!104130))

(assert (= (and b!104130 res!51948) b!104131))

(declare-fun m!115473 () Bool)

(assert (=> d!28113 m!115473))

(declare-fun m!115475 () Bool)

(assert (=> d!28113 m!115475))

(declare-fun m!115477 () Bool)

(assert (=> d!28113 m!115477))

(declare-fun m!115479 () Bool)

(assert (=> d!28113 m!115479))

(declare-fun m!115481 () Bool)

(assert (=> b!104130 m!115481))

(declare-fun m!115483 () Bool)

(assert (=> b!104131 m!115483))

(assert (=> b!103606 d!28113))

(declare-fun d!28115 () Bool)

(declare-fun res!51954 () Bool)

(declare-fun e!67813 () Bool)

(assert (=> d!28115 (=> res!51954 e!67813)))

(assert (=> d!28115 (= res!51954 (or ((_ is Nil!1608) lt!52953) ((_ is Nil!1608) (t!5673 lt!52953))))))

(assert (=> d!28115 (= (isStrictlySorted!308 lt!52953) e!67813)))

(declare-fun b!104136 () Bool)

(declare-fun e!67814 () Bool)

(assert (=> b!104136 (= e!67813 e!67814)))

(declare-fun res!51955 () Bool)

(assert (=> b!104136 (=> (not res!51955) (not e!67814))))

(assert (=> b!104136 (= res!51955 (bvslt (_1!1211 (h!2203 lt!52953)) (_1!1211 (h!2203 (t!5673 lt!52953)))))))

(declare-fun b!104137 () Bool)

(assert (=> b!104137 (= e!67814 (isStrictlySorted!308 (t!5673 lt!52953)))))

(assert (= (and d!28115 (not res!51954)) b!104136))

(assert (= (and b!104136 res!51955) b!104137))

(declare-fun m!115485 () Bool)

(assert (=> b!104137 m!115485))

(assert (=> d!27865 d!28115))

(declare-fun d!28117 () Bool)

(declare-fun res!51956 () Bool)

(declare-fun e!67815 () Bool)

(assert (=> d!28117 (=> res!51956 e!67815)))

(assert (=> d!28117 (= res!51956 (or ((_ is Nil!1608) (toList!800 (+!141 lt!52539 lt!52538))) ((_ is Nil!1608) (t!5673 (toList!800 (+!141 lt!52539 lt!52538))))))))

(assert (=> d!28117 (= (isStrictlySorted!308 (toList!800 (+!141 lt!52539 lt!52538))) e!67815)))

(declare-fun b!104138 () Bool)

(declare-fun e!67816 () Bool)

(assert (=> b!104138 (= e!67815 e!67816)))

(declare-fun res!51957 () Bool)

(assert (=> b!104138 (=> (not res!51957) (not e!67816))))

(assert (=> b!104138 (= res!51957 (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52538)))) (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))))))))

(declare-fun b!104139 () Bool)

(assert (=> b!104139 (= e!67816 (isStrictlySorted!308 (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))))))

(assert (= (and d!28117 (not res!51956)) b!104138))

(assert (= (and b!104138 res!51957) b!104139))

(declare-fun m!115487 () Bool)

(assert (=> b!104139 m!115487))

(assert (=> d!27865 d!28117))

(declare-fun d!28119 () Bool)

(declare-fun res!51958 () Bool)

(declare-fun e!67817 () Bool)

(assert (=> d!28119 (=> res!51958 e!67817)))

(assert (=> d!28119 (= res!51958 (= (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28119 (= (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!67817)))

(declare-fun b!104140 () Bool)

(declare-fun e!67818 () Bool)

(assert (=> b!104140 (= e!67817 e!67818)))

(declare-fun res!51959 () Bool)

(assert (=> b!104140 (=> (not res!51959) (not e!67818))))

(assert (=> b!104140 (= res!51959 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104141 () Bool)

(assert (=> b!104141 (= e!67818 (arrayContainsKey!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28119 (not res!51958)) b!104140))

(assert (= (and b!104140 res!51959) b!104141))

(assert (=> d!28119 m!115313))

(assert (=> b!104141 m!114165))

(declare-fun m!115489 () Bool)

(assert (=> b!104141 m!115489))

(assert (=> b!104017 d!28119))

(declare-fun d!28121 () Bool)

(assert (=> d!28121 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53191 () Unit!3150)

(assert (=> d!28121 (= lt!53191 (choose!649 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67819 () Bool)

(assert (=> d!28121 e!67819))

(declare-fun res!51960 () Bool)

(assert (=> d!28121 (=> (not res!51960) (not e!67819))))

(assert (=> d!28121 (= res!51960 (isStrictlySorted!308 (toList!800 lt!52728)))))

(assert (=> d!28121 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53191)))

(declare-fun b!104142 () Bool)

(assert (=> b!104142 (= e!67819 (containsKey!159 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28121 res!51960) b!104142))

(assert (=> d!28121 m!114519))

(assert (=> d!28121 m!114519))

(assert (=> d!28121 m!115283))

(declare-fun m!115491 () Bool)

(assert (=> d!28121 m!115491))

(assert (=> d!28121 m!115361))

(assert (=> b!104142 m!115279))

(assert (=> b!104003 d!28121))

(declare-fun d!28123 () Bool)

(assert (=> d!28123 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4282 () Bool)

(assert (= bs!4282 d!28123))

(assert (=> bs!4282 m!114519))

(declare-fun m!115493 () Bool)

(assert (=> bs!4282 m!115493))

(assert (=> b!104003 d!28123))

(declare-fun d!28125 () Bool)

(declare-fun c!17988 () Bool)

(assert (=> d!28125 (= c!17988 (and ((_ is Cons!1607) (toList!800 lt!52728)) (= (_1!1211 (h!2203 (toList!800 lt!52728))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67820 () Option!161)

(assert (=> d!28125 (= (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000) e!67820)))

(declare-fun b!104144 () Bool)

(declare-fun e!67821 () Option!161)

(assert (=> b!104144 (= e!67820 e!67821)))

(declare-fun c!17989 () Bool)

(assert (=> b!104144 (= c!17989 (and ((_ is Cons!1607) (toList!800 lt!52728)) (not (= (_1!1211 (h!2203 (toList!800 lt!52728))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104145 () Bool)

(assert (=> b!104145 (= e!67821 (getValueByKey!155 (t!5673 (toList!800 lt!52728)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104146 () Bool)

(assert (=> b!104146 (= e!67821 None!159)))

(declare-fun b!104143 () Bool)

(assert (=> b!104143 (= e!67820 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52728)))))))

(assert (= (and d!28125 c!17988) b!104143))

(assert (= (and d!28125 (not c!17988)) b!104144))

(assert (= (and b!104144 c!17989) b!104145))

(assert (= (and b!104144 (not c!17989)) b!104146))

(declare-fun m!115495 () Bool)

(assert (=> b!104145 m!115495))

(assert (=> b!104003 d!28125))

(declare-fun b!104147 () Bool)

(declare-fun e!67826 () List!1611)

(declare-fun e!67822 () List!1611)

(assert (=> b!104147 (= e!67826 e!67822)))

(declare-fun c!17991 () Bool)

(assert (=> b!104147 (= c!17991 (and ((_ is Cons!1607) (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (= (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))))) (_1!1211 lt!52538))))))

(declare-fun b!104148 () Bool)

(declare-fun call!10942 () List!1611)

(assert (=> b!104148 (= e!67822 call!10942)))

(declare-fun bm!10938 () Bool)

(declare-fun call!10943 () List!1611)

(assert (=> bm!10938 (= call!10942 call!10943)))

(declare-fun c!17993 () Bool)

(declare-fun b!104150 () Bool)

(declare-fun e!67823 () List!1611)

(assert (=> b!104150 (= e!67823 (ite c!17991 (t!5673 (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (ite c!17993 (Cons!1607 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (t!5673 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))))) Nil!1608)))))

(declare-fun bm!10939 () Bool)

(declare-fun call!10941 () List!1611)

(assert (=> bm!10939 (= call!10941 call!10942)))

(declare-fun b!104151 () Bool)

(assert (=> b!104151 (= e!67823 (insertStrictlySorted!74 (t!5673 (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun c!17992 () Bool)

(declare-fun bm!10940 () Bool)

(assert (=> bm!10940 (= call!10943 ($colon$colon!80 e!67823 (ite c!17992 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538)))))))

(declare-fun c!17990 () Bool)

(assert (=> bm!10940 (= c!17990 c!17992)))

(declare-fun b!104152 () Bool)

(declare-fun e!67824 () List!1611)

(assert (=> b!104152 (= e!67824 call!10941)))

(declare-fun b!104153 () Bool)

(assert (=> b!104153 (= c!17993 (and ((_ is Cons!1607) (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (bvsgt (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))))) (_1!1211 lt!52538))))))

(assert (=> b!104153 (= e!67822 e!67824)))

(declare-fun b!104154 () Bool)

(assert (=> b!104154 (= e!67826 call!10943)))

(declare-fun d!28127 () Bool)

(declare-fun e!67825 () Bool)

(assert (=> d!28127 e!67825))

(declare-fun res!51961 () Bool)

(assert (=> d!28127 (=> (not res!51961) (not e!67825))))

(declare-fun lt!53192 () List!1611)

(assert (=> d!28127 (= res!51961 (isStrictlySorted!308 lt!53192))))

(assert (=> d!28127 (= lt!53192 e!67826)))

(assert (=> d!28127 (= c!17992 (and ((_ is Cons!1607) (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))) (bvslt (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))))) (_1!1211 lt!52538))))))

(assert (=> d!28127 (isStrictlySorted!308 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))))))

(assert (=> d!28127 (= (insertStrictlySorted!74 (t!5673 (toList!800 (+!141 lt!52539 lt!52540))) (_1!1211 lt!52538) (_2!1211 lt!52538)) lt!53192)))

(declare-fun b!104149 () Bool)

(assert (=> b!104149 (= e!67824 call!10941)))

(declare-fun b!104155 () Bool)

(assert (=> b!104155 (= e!67825 (contains!826 lt!53192 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!104156 () Bool)

(declare-fun res!51962 () Bool)

(assert (=> b!104156 (=> (not res!51962) (not e!67825))))

(assert (=> b!104156 (= res!51962 (containsKey!159 lt!53192 (_1!1211 lt!52538)))))

(assert (= (and d!28127 c!17992) b!104154))

(assert (= (and d!28127 (not c!17992)) b!104147))

(assert (= (and b!104147 c!17991) b!104148))

(assert (= (and b!104147 (not c!17991)) b!104153))

(assert (= (and b!104153 c!17993) b!104149))

(assert (= (and b!104153 (not c!17993)) b!104152))

(assert (= (or b!104149 b!104152) bm!10939))

(assert (= (or b!104148 bm!10939) bm!10938))

(assert (= (or b!104154 bm!10938) bm!10940))

(assert (= (and bm!10940 c!17990) b!104151))

(assert (= (and bm!10940 (not c!17990)) b!104150))

(assert (= (and d!28127 res!51961) b!104156))

(assert (= (and b!104156 res!51962) b!104155))

(declare-fun m!115497 () Bool)

(assert (=> b!104155 m!115497))

(declare-fun m!115499 () Bool)

(assert (=> b!104151 m!115499))

(declare-fun m!115501 () Bool)

(assert (=> bm!10940 m!115501))

(declare-fun m!115503 () Bool)

(assert (=> d!28127 m!115503))

(declare-fun m!115505 () Bool)

(assert (=> d!28127 m!115505))

(declare-fun m!115507 () Bool)

(assert (=> b!104156 m!115507))

(assert (=> b!103738 d!28127))

(declare-fun d!28129 () Bool)

(declare-fun e!67828 () Bool)

(assert (=> d!28129 e!67828))

(declare-fun res!51963 () Bool)

(assert (=> d!28129 (=> res!51963 e!67828)))

(declare-fun lt!53193 () Bool)

(assert (=> d!28129 (= res!51963 (not lt!53193))))

(declare-fun lt!53194 () Bool)

(assert (=> d!28129 (= lt!53193 lt!53194)))

(declare-fun lt!53195 () Unit!3150)

(declare-fun e!67827 () Unit!3150)

(assert (=> d!28129 (= lt!53195 e!67827)))

(declare-fun c!17994 () Bool)

(assert (=> d!28129 (= c!17994 lt!53194)))

(assert (=> d!28129 (= lt!53194 (containsKey!159 (toList!800 lt!53111) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28129 (= (contains!824 lt!53111 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53193)))

(declare-fun b!104157 () Bool)

(declare-fun lt!53196 () Unit!3150)

(assert (=> b!104157 (= e!67827 lt!53196)))

(assert (=> b!104157 (= lt!53196 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53111) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104157 (isDefined!108 (getValueByKey!155 (toList!800 lt!53111) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104158 () Bool)

(declare-fun Unit!3187 () Unit!3150)

(assert (=> b!104158 (= e!67827 Unit!3187)))

(declare-fun b!104159 () Bool)

(assert (=> b!104159 (= e!67828 (isDefined!108 (getValueByKey!155 (toList!800 lt!53111) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28129 c!17994) b!104157))

(assert (= (and d!28129 (not c!17994)) b!104158))

(assert (= (and d!28129 (not res!51963)) b!104159))

(declare-fun m!115509 () Bool)

(assert (=> d!28129 m!115509))

(declare-fun m!115511 () Bool)

(assert (=> b!104157 m!115511))

(assert (=> b!104157 m!115187))

(assert (=> b!104157 m!115187))

(declare-fun m!115513 () Bool)

(assert (=> b!104157 m!115513))

(assert (=> b!104159 m!115187))

(assert (=> b!104159 m!115187))

(assert (=> b!104159 m!115513))

(assert (=> d!27967 d!28129))

(declare-fun c!17995 () Bool)

(declare-fun d!28131 () Bool)

(assert (=> d!28131 (= c!17995 (and ((_ is Cons!1607) lt!53112) (= (_1!1211 (h!2203 lt!53112)) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!67829 () Option!161)

(assert (=> d!28131 (= (getValueByKey!155 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!67829)))

(declare-fun b!104161 () Bool)

(declare-fun e!67830 () Option!161)

(assert (=> b!104161 (= e!67829 e!67830)))

(declare-fun c!17996 () Bool)

(assert (=> b!104161 (= c!17996 (and ((_ is Cons!1607) lt!53112) (not (= (_1!1211 (h!2203 lt!53112)) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104162 () Bool)

(assert (=> b!104162 (= e!67830 (getValueByKey!155 (t!5673 lt!53112) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104163 () Bool)

(assert (=> b!104163 (= e!67830 None!159)))

(declare-fun b!104160 () Bool)

(assert (=> b!104160 (= e!67829 (Some!160 (_2!1211 (h!2203 lt!53112))))))

(assert (= (and d!28131 c!17995) b!104160))

(assert (= (and d!28131 (not c!17995)) b!104161))

(assert (= (and b!104161 c!17996) b!104162))

(assert (= (and b!104161 (not c!17996)) b!104163))

(declare-fun m!115515 () Bool)

(assert (=> b!104162 m!115515))

(assert (=> d!27967 d!28131))

(declare-fun d!28133 () Bool)

(assert (=> d!28133 (= (getValueByKey!155 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53197 () Unit!3150)

(assert (=> d!28133 (= lt!53197 (choose!639 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!67831 () Bool)

(assert (=> d!28133 e!67831))

(declare-fun res!51964 () Bool)

(assert (=> d!28133 (=> (not res!51964) (not e!67831))))

(assert (=> d!28133 (= res!51964 (isStrictlySorted!308 lt!53112))))

(assert (=> d!28133 (= (lemmaContainsTupThenGetReturnValue!71 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53197)))

(declare-fun b!104164 () Bool)

(declare-fun res!51965 () Bool)

(assert (=> b!104164 (=> (not res!51965) (not e!67831))))

(assert (=> b!104164 (= res!51965 (containsKey!159 lt!53112 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104165 () Bool)

(assert (=> b!104165 (= e!67831 (contains!826 lt!53112 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28133 res!51964) b!104164))

(assert (= (and b!104164 res!51965) b!104165))

(assert (=> d!28133 m!115181))

(declare-fun m!115517 () Bool)

(assert (=> d!28133 m!115517))

(declare-fun m!115519 () Bool)

(assert (=> d!28133 m!115519))

(declare-fun m!115521 () Bool)

(assert (=> b!104164 m!115521))

(declare-fun m!115523 () Bool)

(assert (=> b!104165 m!115523))

(assert (=> d!27967 d!28133))

(declare-fun b!104166 () Bool)

(declare-fun e!67836 () List!1611)

(declare-fun e!67832 () List!1611)

(assert (=> b!104166 (= e!67836 e!67832)))

(declare-fun c!17998 () Bool)

(assert (=> b!104166 (= c!17998 (and ((_ is Cons!1607) (toList!800 lt!52722)) (= (_1!1211 (h!2203 (toList!800 lt!52722))) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104167 () Bool)

(declare-fun call!10945 () List!1611)

(assert (=> b!104167 (= e!67832 call!10945)))

(declare-fun bm!10941 () Bool)

(declare-fun call!10946 () List!1611)

(assert (=> bm!10941 (= call!10945 call!10946)))

(declare-fun b!104169 () Bool)

(declare-fun c!18000 () Bool)

(declare-fun e!67833 () List!1611)

(assert (=> b!104169 (= e!67833 (ite c!17998 (t!5673 (toList!800 lt!52722)) (ite c!18000 (Cons!1607 (h!2203 (toList!800 lt!52722)) (t!5673 (toList!800 lt!52722))) Nil!1608)))))

(declare-fun bm!10942 () Bool)

(declare-fun call!10944 () List!1611)

(assert (=> bm!10942 (= call!10944 call!10945)))

(declare-fun b!104170 () Bool)

(assert (=> b!104170 (= e!67833 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52722)) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun c!17999 () Bool)

(declare-fun bm!10943 () Bool)

(assert (=> bm!10943 (= call!10946 ($colon$colon!80 e!67833 (ite c!17999 (h!2203 (toList!800 lt!52722)) (tuple2!2401 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!17997 () Bool)

(assert (=> bm!10943 (= c!17997 c!17999)))

(declare-fun b!104171 () Bool)

(declare-fun e!67834 () List!1611)

(assert (=> b!104171 (= e!67834 call!10944)))

(declare-fun b!104172 () Bool)

(assert (=> b!104172 (= c!18000 (and ((_ is Cons!1607) (toList!800 lt!52722)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52722))) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104172 (= e!67832 e!67834)))

(declare-fun b!104173 () Bool)

(assert (=> b!104173 (= e!67836 call!10946)))

(declare-fun d!28135 () Bool)

(declare-fun e!67835 () Bool)

(assert (=> d!28135 e!67835))

(declare-fun res!51966 () Bool)

(assert (=> d!28135 (=> (not res!51966) (not e!67835))))

(declare-fun lt!53198 () List!1611)

(assert (=> d!28135 (= res!51966 (isStrictlySorted!308 lt!53198))))

(assert (=> d!28135 (= lt!53198 e!67836)))

(assert (=> d!28135 (= c!17999 (and ((_ is Cons!1607) (toList!800 lt!52722)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52722))) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28135 (isStrictlySorted!308 (toList!800 lt!52722))))

(assert (=> d!28135 (= (insertStrictlySorted!74 (toList!800 lt!52722) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53198)))

(declare-fun b!104168 () Bool)

(assert (=> b!104168 (= e!67834 call!10944)))

(declare-fun b!104174 () Bool)

(assert (=> b!104174 (= e!67835 (contains!826 lt!53198 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104175 () Bool)

(declare-fun res!51967 () Bool)

(assert (=> b!104175 (=> (not res!51967) (not e!67835))))

(assert (=> b!104175 (= res!51967 (containsKey!159 lt!53198 (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28135 c!17999) b!104173))

(assert (= (and d!28135 (not c!17999)) b!104166))

(assert (= (and b!104166 c!17998) b!104167))

(assert (= (and b!104166 (not c!17998)) b!104172))

(assert (= (and b!104172 c!18000) b!104168))

(assert (= (and b!104172 (not c!18000)) b!104171))

(assert (= (or b!104168 b!104171) bm!10942))

(assert (= (or b!104167 bm!10942) bm!10941))

(assert (= (or b!104173 bm!10941) bm!10943))

(assert (= (and bm!10943 c!17997) b!104170))

(assert (= (and bm!10943 (not c!17997)) b!104169))

(assert (= (and d!28135 res!51966) b!104175))

(assert (= (and b!104175 res!51967) b!104174))

(declare-fun m!115525 () Bool)

(assert (=> b!104174 m!115525))

(declare-fun m!115527 () Bool)

(assert (=> b!104170 m!115527))

(declare-fun m!115529 () Bool)

(assert (=> bm!10943 m!115529))

(declare-fun m!115531 () Bool)

(assert (=> d!28135 m!115531))

(declare-fun m!115533 () Bool)

(assert (=> d!28135 m!115533))

(declare-fun m!115535 () Bool)

(assert (=> b!104175 m!115535))

(assert (=> d!27967 d!28135))

(declare-fun d!28137 () Bool)

(declare-fun c!18001 () Bool)

(assert (=> d!28137 (= c!18001 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52757))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52757)))) (_1!1211 lt!52538))))))

(declare-fun e!67837 () Option!161)

(assert (=> d!28137 (= (getValueByKey!155 (t!5673 (toList!800 lt!52757)) (_1!1211 lt!52538)) e!67837)))

(declare-fun b!104177 () Bool)

(declare-fun e!67838 () Option!161)

(assert (=> b!104177 (= e!67837 e!67838)))

(declare-fun c!18002 () Bool)

(assert (=> b!104177 (= c!18002 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52757))) (not (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52757)))) (_1!1211 lt!52538)))))))

(declare-fun b!104178 () Bool)

(assert (=> b!104178 (= e!67838 (getValueByKey!155 (t!5673 (t!5673 (toList!800 lt!52757))) (_1!1211 lt!52538)))))

(declare-fun b!104179 () Bool)

(assert (=> b!104179 (= e!67838 None!159)))

(declare-fun b!104176 () Bool)

(assert (=> b!104176 (= e!67837 (Some!160 (_2!1211 (h!2203 (t!5673 (toList!800 lt!52757))))))))

(assert (= (and d!28137 c!18001) b!104176))

(assert (= (and d!28137 (not c!18001)) b!104177))

(assert (= (and b!104177 c!18002) b!104178))

(assert (= (and b!104177 (not c!18002)) b!104179))

(declare-fun m!115537 () Bool)

(assert (=> b!104178 m!115537))

(assert (=> b!103807 d!28137))

(declare-fun b!104180 () Bool)

(declare-fun e!67840 () Bool)

(declare-fun call!10947 () Bool)

(assert (=> b!104180 (= e!67840 call!10947)))

(declare-fun e!67841 () Bool)

(declare-fun b!104181 () Bool)

(assert (=> b!104181 (= e!67841 (contains!825 (ite c!17951 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104182 () Bool)

(assert (=> b!104182 (= e!67840 call!10947)))

(declare-fun b!104183 () Bool)

(declare-fun e!67842 () Bool)

(assert (=> b!104183 (= e!67842 e!67840)))

(declare-fun c!18003 () Bool)

(assert (=> b!104183 (= c!18003 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!28139 () Bool)

(declare-fun res!51970 () Bool)

(declare-fun e!67839 () Bool)

(assert (=> d!28139 (=> res!51970 e!67839)))

(assert (=> d!28139 (= res!51970 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28139 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!17951 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607))) e!67839)))

(declare-fun bm!10944 () Bool)

(assert (=> bm!10944 (= call!10947 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18003 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!17951 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607))) (ite c!17951 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)))))))

(declare-fun b!104184 () Bool)

(assert (=> b!104184 (= e!67839 e!67842)))

(declare-fun res!51969 () Bool)

(assert (=> b!104184 (=> (not res!51969) (not e!67842))))

(assert (=> b!104184 (= res!51969 (not e!67841))))

(declare-fun res!51968 () Bool)

(assert (=> b!104184 (=> (not res!51968) (not e!67841))))

(assert (=> b!104184 (= res!51968 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (= (and d!28139 (not res!51970)) b!104184))

(assert (= (and b!104184 res!51968) b!104181))

(assert (= (and b!104184 res!51969) b!104183))

(assert (= (and b!104183 c!18003) b!104180))

(assert (= (and b!104183 (not c!18003)) b!104182))

(assert (= (or b!104180 b!104182) bm!10944))

(declare-fun m!115539 () Bool)

(assert (=> b!104181 m!115539))

(assert (=> b!104181 m!115539))

(declare-fun m!115541 () Bool)

(assert (=> b!104181 m!115541))

(assert (=> b!104183 m!115539))

(assert (=> b!104183 m!115539))

(declare-fun m!115543 () Bool)

(assert (=> b!104183 m!115543))

(assert (=> bm!10944 m!115539))

(declare-fun m!115545 () Bool)

(assert (=> bm!10944 m!115545))

(assert (=> b!104184 m!115539))

(assert (=> b!104184 m!115539))

(assert (=> b!104184 m!115543))

(assert (=> bm!10929 d!28139))

(assert (=> bm!10892 d!27885))

(declare-fun d!28141 () Bool)

(declare-fun lt!53199 () Bool)

(assert (=> d!28141 (= lt!53199 (select (content!108 (t!5673 (toList!800 lt!52764))) lt!52540))))

(declare-fun e!67844 () Bool)

(assert (=> d!28141 (= lt!53199 e!67844)))

(declare-fun res!51971 () Bool)

(assert (=> d!28141 (=> (not res!51971) (not e!67844))))

(assert (=> d!28141 (= res!51971 ((_ is Cons!1607) (t!5673 (toList!800 lt!52764))))))

(assert (=> d!28141 (= (contains!826 (t!5673 (toList!800 lt!52764)) lt!52540) lt!53199)))

(declare-fun b!104185 () Bool)

(declare-fun e!67843 () Bool)

(assert (=> b!104185 (= e!67844 e!67843)))

(declare-fun res!51972 () Bool)

(assert (=> b!104185 (=> res!51972 e!67843)))

(assert (=> b!104185 (= res!51972 (= (h!2203 (t!5673 (toList!800 lt!52764))) lt!52540))))

(declare-fun b!104186 () Bool)

(assert (=> b!104186 (= e!67843 (contains!826 (t!5673 (t!5673 (toList!800 lt!52764))) lt!52540))))

(assert (= (and d!28141 res!51971) b!104185))

(assert (= (and b!104185 (not res!51972)) b!104186))

(assert (=> d!28141 m!115395))

(declare-fun m!115547 () Bool)

(assert (=> d!28141 m!115547))

(declare-fun m!115549 () Bool)

(assert (=> b!104186 m!115549))

(assert (=> b!103945 d!28141))

(declare-fun d!28143 () Bool)

(declare-fun c!18004 () Bool)

(assert (=> d!28143 (= c!18004 (and ((_ is Cons!1607) (toList!800 lt!53044)) (= (_1!1211 (h!2203 (toList!800 lt!53044))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!67845 () Option!161)

(assert (=> d!28143 (= (getValueByKey!155 (toList!800 lt!53044) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) e!67845)))

(declare-fun b!104188 () Bool)

(declare-fun e!67846 () Option!161)

(assert (=> b!104188 (= e!67845 e!67846)))

(declare-fun c!18005 () Bool)

(assert (=> b!104188 (= c!18005 (and ((_ is Cons!1607) (toList!800 lt!53044)) (not (= (_1!1211 (h!2203 (toList!800 lt!53044))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!104189 () Bool)

(assert (=> b!104189 (= e!67846 (getValueByKey!155 (t!5673 (toList!800 lt!53044)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104190 () Bool)

(assert (=> b!104190 (= e!67846 None!159)))

(declare-fun b!104187 () Bool)

(assert (=> b!104187 (= e!67845 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53044)))))))

(assert (= (and d!28143 c!18004) b!104187))

(assert (= (and d!28143 (not c!18004)) b!104188))

(assert (= (and b!104188 c!18005) b!104189))

(assert (= (and b!104188 (not c!18005)) b!104190))

(declare-fun m!115551 () Bool)

(assert (=> b!104189 m!115551))

(assert (=> b!103882 d!28143))

(declare-fun d!28145 () Bool)

(declare-fun c!18006 () Bool)

(assert (=> d!28145 (= c!18006 ((_ is Nil!1608) (toList!800 lt!52789)))))

(declare-fun e!67847 () (InoxSet tuple2!2400))

(assert (=> d!28145 (= (content!108 (toList!800 lt!52789)) e!67847)))

(declare-fun b!104191 () Bool)

(assert (=> b!104191 (= e!67847 ((as const (Array tuple2!2400 Bool)) false))))

(declare-fun b!104192 () Bool)

(assert (=> b!104192 (= e!67847 ((_ map or) (store ((as const (Array tuple2!2400 Bool)) false) (h!2203 (toList!800 lt!52789)) true) (content!108 (t!5673 (toList!800 lt!52789)))))))

(assert (= (and d!28145 c!18006) b!104191))

(assert (= (and d!28145 (not c!18006)) b!104192))

(declare-fun m!115553 () Bool)

(assert (=> b!104192 m!115553))

(declare-fun m!115555 () Bool)

(assert (=> b!104192 m!115555))

(assert (=> d!27923 d!28145))

(declare-fun d!28147 () Bool)

(declare-fun lt!53200 () Bool)

(assert (=> d!28147 (= lt!53200 (select (content!108 lt!53030) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun e!67849 () Bool)

(assert (=> d!28147 (= lt!53200 e!67849)))

(declare-fun res!51973 () Bool)

(assert (=> d!28147 (=> (not res!51973) (not e!67849))))

(assert (=> d!28147 (= res!51973 ((_ is Cons!1607) lt!53030))))

(assert (=> d!28147 (= (contains!826 lt!53030 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))) lt!53200)))

(declare-fun b!104193 () Bool)

(declare-fun e!67848 () Bool)

(assert (=> b!104193 (= e!67849 e!67848)))

(declare-fun res!51974 () Bool)

(assert (=> b!104193 (=> res!51974 e!67848)))

(assert (=> b!104193 (= res!51974 (= (h!2203 lt!53030) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!104194 () Bool)

(assert (=> b!104194 (= e!67848 (contains!826 (t!5673 lt!53030) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(assert (= (and d!28147 res!51973) b!104193))

(assert (= (and b!104193 (not res!51974)) b!104194))

(declare-fun m!115557 () Bool)

(assert (=> d!28147 m!115557))

(declare-fun m!115559 () Bool)

(assert (=> d!28147 m!115559))

(declare-fun m!115561 () Bool)

(assert (=> b!104194 m!115561))

(assert (=> b!103874 d!28147))

(declare-fun d!28149 () Bool)

(assert (=> d!28149 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4283 () Bool)

(assert (= bs!4283 d!28149))

(assert (=> bs!4283 m!114917))

(declare-fun m!115563 () Bool)

(assert (=> bs!4283 m!115563))

(assert (=> b!103856 d!28149))

(declare-fun d!28151 () Bool)

(declare-fun c!18007 () Bool)

(assert (=> d!28151 (= c!18007 (and ((_ is Cons!1607) (toList!800 lt!52783)) (= (_1!1211 (h!2203 (toList!800 lt!52783))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!67850 () Option!161)

(assert (=> d!28151 (= (getValueByKey!155 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000) e!67850)))

(declare-fun b!104196 () Bool)

(declare-fun e!67851 () Option!161)

(assert (=> b!104196 (= e!67850 e!67851)))

(declare-fun c!18008 () Bool)

(assert (=> b!104196 (= c!18008 (and ((_ is Cons!1607) (toList!800 lt!52783)) (not (= (_1!1211 (h!2203 (toList!800 lt!52783))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104197 () Bool)

(assert (=> b!104197 (= e!67851 (getValueByKey!155 (t!5673 (toList!800 lt!52783)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104198 () Bool)

(assert (=> b!104198 (= e!67851 None!159)))

(declare-fun b!104195 () Bool)

(assert (=> b!104195 (= e!67850 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52783)))))))

(assert (= (and d!28151 c!18007) b!104195))

(assert (= (and d!28151 (not c!18007)) b!104196))

(assert (= (and b!104196 c!18008) b!104197))

(assert (= (and b!104196 (not c!18008)) b!104198))

(declare-fun m!115565 () Bool)

(assert (=> b!104197 m!115565))

(assert (=> b!103856 d!28151))

(assert (=> d!27901 d!27905))

(assert (=> d!27901 d!27903))

(assert (=> d!27901 d!27907))

(assert (=> d!27901 d!27909))

(declare-fun d!28153 () Bool)

(declare-fun res!51975 () Bool)

(declare-fun e!67852 () Bool)

(assert (=> d!28153 (=> res!51975 e!67852)))

(assert (=> d!28153 (= res!51975 (and ((_ is Cons!1607) (toList!800 lt!52783)) (= (_1!1211 (h!2203 (toList!800 lt!52783))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28153 (= (containsKey!159 (toList!800 lt!52783) #b1000000000000000000000000000000000000000000000000000000000000000) e!67852)))

(declare-fun b!104199 () Bool)

(declare-fun e!67853 () Bool)

(assert (=> b!104199 (= e!67852 e!67853)))

(declare-fun res!51976 () Bool)

(assert (=> b!104199 (=> (not res!51976) (not e!67853))))

(assert (=> b!104199 (= res!51976 (and (or (not ((_ is Cons!1607) (toList!800 lt!52783))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52783))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1607) (toList!800 lt!52783)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52783))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104200 () Bool)

(assert (=> b!104200 (= e!67853 (containsKey!159 (t!5673 (toList!800 lt!52783)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28153 (not res!51975)) b!104199))

(assert (= (and b!104199 res!51976) b!104200))

(declare-fun m!115567 () Bool)

(assert (=> b!104200 m!115567))

(assert (=> d!27835 d!28153))

(assert (=> b!103708 d!27955))

(assert (=> d!27863 d!27861))

(declare-fun d!28155 () Bool)

(assert (=> d!28155 (= (getValueByKey!155 lt!52790 (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540)))))

(assert (=> d!28155 true))

(declare-fun _$22!427 () Unit!3150)

(assert (=> d!28155 (= (choose!639 lt!52790 (_1!1211 lt!52540) (_2!1211 lt!52540)) _$22!427)))

(declare-fun bs!4284 () Bool)

(assert (= bs!4284 d!28155))

(assert (=> bs!4284 m!114463))

(assert (=> d!27863 d!28155))

(declare-fun d!28157 () Bool)

(declare-fun res!51977 () Bool)

(declare-fun e!67854 () Bool)

(assert (=> d!28157 (=> res!51977 e!67854)))

(assert (=> d!28157 (= res!51977 (or ((_ is Nil!1608) lt!52790) ((_ is Nil!1608) (t!5673 lt!52790))))))

(assert (=> d!28157 (= (isStrictlySorted!308 lt!52790) e!67854)))

(declare-fun b!104201 () Bool)

(declare-fun e!67855 () Bool)

(assert (=> b!104201 (= e!67854 e!67855)))

(declare-fun res!51978 () Bool)

(assert (=> b!104201 (=> (not res!51978) (not e!67855))))

(assert (=> b!104201 (= res!51978 (bvslt (_1!1211 (h!2203 lt!52790)) (_1!1211 (h!2203 (t!5673 lt!52790)))))))

(declare-fun b!104202 () Bool)

(assert (=> b!104202 (= e!67855 (isStrictlySorted!308 (t!5673 lt!52790)))))

(assert (= (and d!28157 (not res!51977)) b!104201))

(assert (= (and b!104201 res!51978) b!104202))

(declare-fun m!115569 () Bool)

(assert (=> b!104202 m!115569))

(assert (=> d!27863 d!28157))

(declare-fun d!28159 () Bool)

(declare-fun e!67857 () Bool)

(assert (=> d!28159 e!67857))

(declare-fun res!51979 () Bool)

(assert (=> d!28159 (=> res!51979 e!67857)))

(declare-fun lt!53201 () Bool)

(assert (=> d!28159 (= res!51979 (not lt!53201))))

(declare-fun lt!53202 () Bool)

(assert (=> d!28159 (= lt!53201 lt!53202)))

(declare-fun lt!53203 () Unit!3150)

(declare-fun e!67856 () Unit!3150)

(assert (=> d!28159 (= lt!53203 e!67856)))

(declare-fun c!18009 () Bool)

(assert (=> d!28159 (= c!18009 lt!53202)))

(assert (=> d!28159 (= lt!53202 (containsKey!159 (toList!800 lt!53044) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28159 (= (contains!824 lt!53044 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53201)))

(declare-fun b!104203 () Bool)

(declare-fun lt!53204 () Unit!3150)

(assert (=> b!104203 (= e!67856 lt!53204)))

(assert (=> b!104203 (= lt!53204 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53044) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> b!104203 (isDefined!108 (getValueByKey!155 (toList!800 lt!53044) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104204 () Bool)

(declare-fun Unit!3188 () Unit!3150)

(assert (=> b!104204 (= e!67856 Unit!3188)))

(declare-fun b!104205 () Bool)

(assert (=> b!104205 (= e!67857 (isDefined!108 (getValueByKey!155 (toList!800 lt!53044) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28159 c!18009) b!104203))

(assert (= (and d!28159 (not c!18009)) b!104204))

(assert (= (and d!28159 (not res!51979)) b!104205))

(declare-fun m!115571 () Bool)

(assert (=> d!28159 m!115571))

(declare-fun m!115573 () Bool)

(assert (=> b!104203 m!115573))

(assert (=> b!104203 m!114991))

(assert (=> b!104203 m!114991))

(declare-fun m!115575 () Bool)

(assert (=> b!104203 m!115575))

(assert (=> b!104205 m!114991))

(assert (=> b!104205 m!114991))

(assert (=> b!104205 m!115575))

(assert (=> d!27907 d!28159))

(declare-fun c!18010 () Bool)

(declare-fun d!28161 () Bool)

(assert (=> d!28161 (= c!18010 (and ((_ is Cons!1607) lt!53045) (= (_1!1211 (h!2203 lt!53045)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!67858 () Option!161)

(assert (=> d!28161 (= (getValueByKey!155 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) e!67858)))

(declare-fun b!104207 () Bool)

(declare-fun e!67859 () Option!161)

(assert (=> b!104207 (= e!67858 e!67859)))

(declare-fun c!18011 () Bool)

(assert (=> b!104207 (= c!18011 (and ((_ is Cons!1607) lt!53045) (not (= (_1!1211 (h!2203 lt!53045)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!104208 () Bool)

(assert (=> b!104208 (= e!67859 (getValueByKey!155 (t!5673 lt!53045) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104209 () Bool)

(assert (=> b!104209 (= e!67859 None!159)))

(declare-fun b!104206 () Bool)

(assert (=> b!104206 (= e!67858 (Some!160 (_2!1211 (h!2203 lt!53045))))))

(assert (= (and d!28161 c!18010) b!104206))

(assert (= (and d!28161 (not c!18010)) b!104207))

(assert (= (and b!104207 c!18011) b!104208))

(assert (= (and b!104207 (not c!18011)) b!104209))

(declare-fun m!115577 () Bool)

(assert (=> b!104208 m!115577))

(assert (=> d!27907 d!28161))

(declare-fun d!28163 () Bool)

(assert (=> d!28163 (= (getValueByKey!155 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53205 () Unit!3150)

(assert (=> d!28163 (= lt!53205 (choose!639 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun e!67860 () Bool)

(assert (=> d!28163 e!67860))

(declare-fun res!51980 () Bool)

(assert (=> d!28163 (=> (not res!51980) (not e!67860))))

(assert (=> d!28163 (= res!51980 (isStrictlySorted!308 lt!53045))))

(assert (=> d!28163 (= (lemmaContainsTupThenGetReturnValue!71 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53205)))

(declare-fun b!104210 () Bool)

(declare-fun res!51981 () Bool)

(assert (=> b!104210 (=> (not res!51981) (not e!67860))))

(assert (=> b!104210 (= res!51981 (containsKey!159 lt!53045 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104211 () Bool)

(assert (=> b!104211 (= e!67860 (contains!826 lt!53045 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28163 res!51980) b!104210))

(assert (= (and b!104210 res!51981) b!104211))

(assert (=> d!28163 m!114985))

(declare-fun m!115579 () Bool)

(assert (=> d!28163 m!115579))

(declare-fun m!115581 () Bool)

(assert (=> d!28163 m!115581))

(declare-fun m!115583 () Bool)

(assert (=> b!104210 m!115583))

(declare-fun m!115585 () Bool)

(assert (=> b!104211 m!115585))

(assert (=> d!27907 d!28163))

(declare-fun b!104212 () Bool)

(declare-fun e!67865 () List!1611)

(declare-fun e!67861 () List!1611)

(assert (=> b!104212 (= e!67865 e!67861)))

(declare-fun c!18013 () Bool)

(assert (=> b!104212 (= c!18013 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104213 () Bool)

(declare-fun call!10949 () List!1611)

(assert (=> b!104213 (= e!67861 call!10949)))

(declare-fun bm!10945 () Bool)

(declare-fun call!10950 () List!1611)

(assert (=> bm!10945 (= call!10949 call!10950)))

(declare-fun e!67862 () List!1611)

(declare-fun c!18015 () Bool)

(declare-fun b!104215 () Bool)

(assert (=> b!104215 (= e!67862 (ite c!18013 (t!5673 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (ite c!18015 (Cons!1607 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (t!5673 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) Nil!1608)))))

(declare-fun bm!10946 () Bool)

(declare-fun call!10948 () List!1611)

(assert (=> bm!10946 (= call!10948 call!10949)))

(declare-fun b!104216 () Bool)

(assert (=> b!104216 (= e!67862 (insertStrictlySorted!74 (t!5673 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun bm!10947 () Bool)

(declare-fun c!18014 () Bool)

(assert (=> bm!10947 (= call!10950 ($colon$colon!80 e!67862 (ite c!18014 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun c!18012 () Bool)

(assert (=> bm!10947 (= c!18012 c!18014)))

(declare-fun b!104217 () Bool)

(declare-fun e!67863 () List!1611)

(assert (=> b!104217 (= e!67863 call!10948)))

(declare-fun b!104218 () Bool)

(assert (=> b!104218 (= c!18015 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (bvsgt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> b!104218 (= e!67861 e!67863)))

(declare-fun b!104219 () Bool)

(assert (=> b!104219 (= e!67865 call!10950)))

(declare-fun d!28165 () Bool)

(declare-fun e!67864 () Bool)

(assert (=> d!28165 e!67864))

(declare-fun res!51982 () Bool)

(assert (=> d!28165 (=> (not res!51982) (not e!67864))))

(declare-fun lt!53206 () List!1611)

(assert (=> d!28165 (= res!51982 (isStrictlySorted!308 lt!53206))))

(assert (=> d!28165 (= lt!53206 e!67865)))

(assert (=> d!28165 (= c!18014 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!28165 (isStrictlySorted!308 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28165 (= (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53206)))

(declare-fun b!104214 () Bool)

(assert (=> b!104214 (= e!67863 call!10948)))

(declare-fun b!104220 () Bool)

(assert (=> b!104220 (= e!67864 (contains!826 lt!53206 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104221 () Bool)

(declare-fun res!51983 () Bool)

(assert (=> b!104221 (=> (not res!51983) (not e!67864))))

(assert (=> b!104221 (= res!51983 (containsKey!159 lt!53206 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (= (and d!28165 c!18014) b!104219))

(assert (= (and d!28165 (not c!18014)) b!104212))

(assert (= (and b!104212 c!18013) b!104213))

(assert (= (and b!104212 (not c!18013)) b!104218))

(assert (= (and b!104218 c!18015) b!104214))

(assert (= (and b!104218 (not c!18015)) b!104217))

(assert (= (or b!104214 b!104217) bm!10946))

(assert (= (or b!104213 bm!10946) bm!10945))

(assert (= (or b!104219 bm!10945) bm!10947))

(assert (= (and bm!10947 c!18012) b!104216))

(assert (= (and bm!10947 (not c!18012)) b!104215))

(assert (= (and d!28165 res!51982) b!104221))

(assert (= (and b!104221 res!51983) b!104220))

(declare-fun m!115587 () Bool)

(assert (=> b!104220 m!115587))

(declare-fun m!115589 () Bool)

(assert (=> b!104216 m!115589))

(declare-fun m!115591 () Bool)

(assert (=> bm!10947 m!115591))

(declare-fun m!115593 () Bool)

(assert (=> d!28165 m!115593))

(declare-fun m!115595 () Bool)

(assert (=> d!28165 m!115595))

(declare-fun m!115597 () Bool)

(assert (=> b!104221 m!115597))

(assert (=> d!27907 d!28165))

(declare-fun c!18016 () Bool)

(declare-fun d!28167 () Bool)

(assert (=> d!28167 (= c!18016 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52534))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52534)))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun e!67866 () Option!161)

(assert (=> d!28167 (= (getValueByKey!155 (t!5673 (toList!800 lt!52534)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67866)))

(declare-fun b!104223 () Bool)

(declare-fun e!67867 () Option!161)

(assert (=> b!104223 (= e!67866 e!67867)))

(declare-fun c!18017 () Bool)

(assert (=> b!104223 (= c!18017 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52534))) (not (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52534)))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104224 () Bool)

(assert (=> b!104224 (= e!67867 (getValueByKey!155 (t!5673 (t!5673 (toList!800 lt!52534))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104225 () Bool)

(assert (=> b!104225 (= e!67867 None!159)))

(declare-fun b!104222 () Bool)

(assert (=> b!104222 (= e!67866 (Some!160 (_2!1211 (h!2203 (t!5673 (toList!800 lt!52534))))))))

(assert (= (and d!28167 c!18016) b!104222))

(assert (= (and d!28167 (not c!18016)) b!104223))

(assert (= (and b!104223 c!18017) b!104224))

(assert (= (and b!104223 (not c!18017)) b!104225))

(assert (=> b!104224 m!114165))

(declare-fun m!115599 () Bool)

(assert (=> b!104224 m!115599))

(assert (=> b!104014 d!28167))

(declare-fun d!28169 () Bool)

(declare-fun res!51984 () Bool)

(declare-fun e!67868 () Bool)

(assert (=> d!28169 (=> res!51984 e!67868)))

(assert (=> d!28169 (= res!51984 (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28169 (= (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!67868)))

(declare-fun b!104226 () Bool)

(declare-fun e!67869 () Bool)

(assert (=> b!104226 (= e!67868 e!67869)))

(declare-fun res!51985 () Bool)

(assert (=> b!104226 (=> (not res!51985) (not e!67869))))

(assert (=> b!104226 (= res!51985 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104227 () Bool)

(assert (=> b!104227 (= e!67869 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!28169 (not res!51984)) b!104226))

(assert (= (and b!104226 res!51985) b!104227))

(declare-fun m!115601 () Bool)

(assert (=> d!28169 m!115601))

(assert (=> b!104227 m!114165))

(declare-fun m!115603 () Bool)

(assert (=> b!104227 m!115603))

(assert (=> b!103724 d!28169))

(declare-fun d!28171 () Bool)

(declare-fun res!51986 () Bool)

(declare-fun e!67870 () Bool)

(assert (=> d!28171 (=> res!51986 e!67870)))

(assert (=> d!28171 (= res!51986 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))))) lt!52785)))))

(assert (=> d!28171 (= (containsKey!159 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))) lt!52785) e!67870)))

(declare-fun b!104228 () Bool)

(declare-fun e!67871 () Bool)

(assert (=> b!104228 (= e!67870 e!67871)))

(declare-fun res!51987 () Bool)

(assert (=> b!104228 (=> (not res!51987) (not e!67871))))

(assert (=> b!104228 (= res!51987 (and (or (not ((_ is Cons!1607) (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))))) (bvsle (_1!1211 (h!2203 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))))) lt!52785)) ((_ is Cons!1607) (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))) (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787))))) lt!52785)))))

(declare-fun b!104229 () Bool)

(assert (=> b!104229 (= e!67871 (containsKey!159 (t!5673 (toList!800 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)))) lt!52785))))

(assert (= (and d!28171 (not res!51986)) b!104228))

(assert (= (and b!104228 res!51987) b!104229))

(declare-fun m!115605 () Bool)

(assert (=> b!104229 m!115605))

(assert (=> d!27945 d!28171))

(declare-fun d!28173 () Bool)

(declare-fun lt!53207 () Bool)

(assert (=> d!28173 (= lt!53207 (select (content!108 (toList!800 lt!53111)) (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67873 () Bool)

(assert (=> d!28173 (= lt!53207 e!67873)))

(declare-fun res!51988 () Bool)

(assert (=> d!28173 (=> (not res!51988) (not e!67873))))

(assert (=> d!28173 (= res!51988 ((_ is Cons!1607) (toList!800 lt!53111)))))

(assert (=> d!28173 (= (contains!826 (toList!800 lt!53111) (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53207)))

(declare-fun b!104230 () Bool)

(declare-fun e!67872 () Bool)

(assert (=> b!104230 (= e!67873 e!67872)))

(declare-fun res!51989 () Bool)

(assert (=> b!104230 (=> res!51989 e!67872)))

(assert (=> b!104230 (= res!51989 (= (h!2203 (toList!800 lt!53111)) (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104231 () Bool)

(assert (=> b!104231 (= e!67872 (contains!826 (t!5673 (toList!800 lt!53111)) (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28173 res!51988) b!104230))

(assert (= (and b!104230 (not res!51989)) b!104231))

(declare-fun m!115607 () Bool)

(assert (=> d!28173 m!115607))

(declare-fun m!115609 () Bool)

(assert (=> d!28173 m!115609))

(declare-fun m!115611 () Bool)

(assert (=> b!104231 m!115611))

(assert (=> b!103982 d!28173))

(declare-fun d!28175 () Bool)

(declare-fun res!51990 () Bool)

(declare-fun e!67874 () Bool)

(assert (=> d!28175 (=> res!51990 e!67874)))

(assert (=> d!28175 (= res!51990 (and ((_ is Cons!1607) lt!52794) (= (_1!1211 (h!2203 lt!52794)) (_1!1211 lt!52538))))))

(assert (=> d!28175 (= (containsKey!159 lt!52794 (_1!1211 lt!52538)) e!67874)))

(declare-fun b!104232 () Bool)

(declare-fun e!67875 () Bool)

(assert (=> b!104232 (= e!67874 e!67875)))

(declare-fun res!51991 () Bool)

(assert (=> b!104232 (=> (not res!51991) (not e!67875))))

(assert (=> b!104232 (= res!51991 (and (or (not ((_ is Cons!1607) lt!52794)) (bvsle (_1!1211 (h!2203 lt!52794)) (_1!1211 lt!52538))) ((_ is Cons!1607) lt!52794) (bvslt (_1!1211 (h!2203 lt!52794)) (_1!1211 lt!52538))))))

(declare-fun b!104233 () Bool)

(assert (=> b!104233 (= e!67875 (containsKey!159 (t!5673 lt!52794) (_1!1211 lt!52538)))))

(assert (= (and d!28175 (not res!51990)) b!104232))

(assert (= (and b!104232 res!51991) b!104233))

(declare-fun m!115613 () Bool)

(assert (=> b!104233 m!115613))

(assert (=> b!103732 d!28175))

(declare-fun d!28177 () Bool)

(declare-fun lt!53208 () Bool)

(assert (=> d!28177 (= lt!53208 (select (content!108 (t!5673 (toList!800 lt!52793))) lt!52538))))

(declare-fun e!67877 () Bool)

(assert (=> d!28177 (= lt!53208 e!67877)))

(declare-fun res!51992 () Bool)

(assert (=> d!28177 (=> (not res!51992) (not e!67877))))

(assert (=> d!28177 (= res!51992 ((_ is Cons!1607) (t!5673 (toList!800 lt!52793))))))

(assert (=> d!28177 (= (contains!826 (t!5673 (toList!800 lt!52793)) lt!52538) lt!53208)))

(declare-fun b!104234 () Bool)

(declare-fun e!67876 () Bool)

(assert (=> b!104234 (= e!67877 e!67876)))

(declare-fun res!51993 () Bool)

(assert (=> b!104234 (=> res!51993 e!67876)))

(assert (=> b!104234 (= res!51993 (= (h!2203 (t!5673 (toList!800 lt!52793))) lt!52538))))

(declare-fun b!104235 () Bool)

(assert (=> b!104235 (= e!67876 (contains!826 (t!5673 (t!5673 (toList!800 lt!52793))) lt!52538))))

(assert (= (and d!28177 res!51992) b!104234))

(assert (= (and b!104234 (not res!51993)) b!104235))

(declare-fun m!115615 () Bool)

(assert (=> d!28177 m!115615))

(declare-fun m!115617 () Bool)

(assert (=> d!28177 m!115617))

(declare-fun m!115619 () Bool)

(assert (=> b!104235 m!115619))

(assert (=> b!103902 d!28177))

(declare-fun d!28179 () Bool)

(declare-fun c!18018 () Bool)

(assert (=> d!28179 (= c!18018 ((_ is Nil!1608) (toList!800 lt!52793)))))

(declare-fun e!67878 () (InoxSet tuple2!2400))

(assert (=> d!28179 (= (content!108 (toList!800 lt!52793)) e!67878)))

(declare-fun b!104236 () Bool)

(assert (=> b!104236 (= e!67878 ((as const (Array tuple2!2400 Bool)) false))))

(declare-fun b!104237 () Bool)

(assert (=> b!104237 (= e!67878 ((_ map or) (store ((as const (Array tuple2!2400 Bool)) false) (h!2203 (toList!800 lt!52793)) true) (content!108 (t!5673 (toList!800 lt!52793)))))))

(assert (= (and d!28179 c!18018) b!104236))

(assert (= (and d!28179 (not c!18018)) b!104237))

(declare-fun m!115621 () Bool)

(assert (=> b!104237 m!115621))

(assert (=> b!104237 m!115615))

(assert (=> d!27921 d!28179))

(declare-fun d!28181 () Bool)

(assert (=> d!28181 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538)))))))

(declare-fun bs!4285 () Bool)

(assert (= bs!4285 d!28181))

(assert (=> bs!4285 m!114481))

(declare-fun m!115623 () Bool)

(assert (=> bs!4285 m!115623))

(assert (=> b!103727 d!28181))

(assert (=> b!103727 d!27823))

(assert (=> b!103637 d!28031))

(declare-fun d!28183 () Bool)

(declare-fun res!51994 () Bool)

(declare-fun e!67879 () Bool)

(assert (=> d!28183 (=> res!51994 e!67879)))

(assert (=> d!28183 (= res!51994 (and ((_ is Cons!1607) (toList!800 lt!52728)) (= (_1!1211 (h!2203 (toList!800 lt!52728))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28183 (= (containsKey!159 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67879)))

(declare-fun b!104238 () Bool)

(declare-fun e!67880 () Bool)

(assert (=> b!104238 (= e!67879 e!67880)))

(declare-fun res!51995 () Bool)

(assert (=> b!104238 (=> (not res!51995) (not e!67880))))

(assert (=> b!104238 (= res!51995 (and (or (not ((_ is Cons!1607) (toList!800 lt!52728))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52728))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1607) (toList!800 lt!52728)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52728))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104239 () Bool)

(assert (=> b!104239 (= e!67880 (containsKey!159 (t!5673 (toList!800 lt!52728)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28183 (not res!51994)) b!104238))

(assert (= (and b!104238 res!51995) b!104239))

(assert (=> b!104239 m!114339))

(declare-fun m!115625 () Bool)

(assert (=> b!104239 m!115625))

(assert (=> d!27991 d!28183))

(declare-fun d!28185 () Bool)

(declare-fun res!51996 () Bool)

(declare-fun e!67881 () Bool)

(assert (=> d!28185 (=> res!51996 e!67881)))

(assert (=> d!28185 (= res!51996 (and ((_ is Cons!1607) (toList!800 e!67364)) (= (_1!1211 (h!2203 (toList!800 e!67364))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28185 (= (containsKey!159 (toList!800 e!67364) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67881)))

(declare-fun b!104240 () Bool)

(declare-fun e!67882 () Bool)

(assert (=> b!104240 (= e!67881 e!67882)))

(declare-fun res!51997 () Bool)

(assert (=> b!104240 (=> (not res!51997) (not e!67882))))

(assert (=> b!104240 (= res!51997 (and (or (not ((_ is Cons!1607) (toList!800 e!67364))) (bvsle (_1!1211 (h!2203 (toList!800 e!67364))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1607) (toList!800 e!67364)) (bvslt (_1!1211 (h!2203 (toList!800 e!67364))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!104241 () Bool)

(assert (=> b!104241 (= e!67882 (containsKey!159 (t!5673 (toList!800 e!67364)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28185 (not res!51996)) b!104240))

(assert (= (and b!104240 res!51997) b!104241))

(assert (=> b!104241 m!114165))

(declare-fun m!115627 () Bool)

(assert (=> b!104241 m!115627))

(assert (=> d!27917 d!28185))

(declare-fun d!28187 () Bool)

(declare-fun lt!53209 () Bool)

(assert (=> d!28187 (= lt!53209 (select (content!108 (t!5673 (toList!800 lt!52789))) lt!52540))))

(declare-fun e!67884 () Bool)

(assert (=> d!28187 (= lt!53209 e!67884)))

(declare-fun res!51998 () Bool)

(assert (=> d!28187 (=> (not res!51998) (not e!67884))))

(assert (=> d!28187 (= res!51998 ((_ is Cons!1607) (t!5673 (toList!800 lt!52789))))))

(assert (=> d!28187 (= (contains!826 (t!5673 (toList!800 lt!52789)) lt!52540) lt!53209)))

(declare-fun b!104242 () Bool)

(declare-fun e!67883 () Bool)

(assert (=> b!104242 (= e!67884 e!67883)))

(declare-fun res!51999 () Bool)

(assert (=> b!104242 (=> res!51999 e!67883)))

(assert (=> b!104242 (= res!51999 (= (h!2203 (t!5673 (toList!800 lt!52789))) lt!52540))))

(declare-fun b!104243 () Bool)

(assert (=> b!104243 (= e!67883 (contains!826 (t!5673 (t!5673 (toList!800 lt!52789))) lt!52540))))

(assert (= (and d!28187 res!51998) b!104242))

(assert (= (and b!104242 (not res!51999)) b!104243))

(assert (=> d!28187 m!115555))

(declare-fun m!115629 () Bool)

(assert (=> d!28187 m!115629))

(declare-fun m!115631 () Bool)

(assert (=> b!104243 m!115631))

(assert (=> b!103904 d!28187))

(declare-fun d!28189 () Bool)

(declare-fun res!52000 () Bool)

(declare-fun e!67885 () Bool)

(assert (=> d!28189 (=> res!52000 e!67885)))

(assert (=> d!28189 (= res!52000 (and ((_ is Cons!1607) (toList!800 lt!52757)) (= (_1!1211 (h!2203 (toList!800 lt!52757))) (_1!1211 lt!52538))))))

(assert (=> d!28189 (= (containsKey!159 (toList!800 lt!52757) (_1!1211 lt!52538)) e!67885)))

(declare-fun b!104244 () Bool)

(declare-fun e!67886 () Bool)

(assert (=> b!104244 (= e!67885 e!67886)))

(declare-fun res!52001 () Bool)

(assert (=> b!104244 (=> (not res!52001) (not e!67886))))

(assert (=> b!104244 (= res!52001 (and (or (not ((_ is Cons!1607) (toList!800 lt!52757))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52757))) (_1!1211 lt!52538))) ((_ is Cons!1607) (toList!800 lt!52757)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52757))) (_1!1211 lt!52538))))))

(declare-fun b!104245 () Bool)

(assert (=> b!104245 (= e!67886 (containsKey!159 (t!5673 (toList!800 lt!52757)) (_1!1211 lt!52538)))))

(assert (= (and d!28189 (not res!52000)) b!104244))

(assert (= (and b!104244 res!52001) b!104245))

(declare-fun m!115633 () Bool)

(assert (=> b!104245 m!115633))

(assert (=> d!27811 d!28189))

(declare-fun d!28191 () Bool)

(assert (=> d!28191 (isDefined!108 (getValueByKey!155 (toList!800 lt!52793) (_1!1211 lt!52538)))))

(declare-fun lt!53210 () Unit!3150)

(assert (=> d!28191 (= lt!53210 (choose!649 (toList!800 lt!52793) (_1!1211 lt!52538)))))

(declare-fun e!67887 () Bool)

(assert (=> d!28191 e!67887))

(declare-fun res!52002 () Bool)

(assert (=> d!28191 (=> (not res!52002) (not e!67887))))

(assert (=> d!28191 (= res!52002 (isStrictlySorted!308 (toList!800 lt!52793)))))

(assert (=> d!28191 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52793) (_1!1211 lt!52538)) lt!53210)))

(declare-fun b!104246 () Bool)

(assert (=> b!104246 (= e!67887 (containsKey!159 (toList!800 lt!52793) (_1!1211 lt!52538)))))

(assert (= (and d!28191 res!52002) b!104246))

(assert (=> d!28191 m!114481))

(assert (=> d!28191 m!114481))

(assert (=> d!28191 m!114699))

(declare-fun m!115635 () Bool)

(assert (=> d!28191 m!115635))

(declare-fun m!115637 () Bool)

(assert (=> d!28191 m!115637))

(assert (=> b!104246 m!114695))

(assert (=> b!103725 d!28191))

(assert (=> b!103725 d!28181))

(assert (=> b!103725 d!27823))

(declare-fun d!28193 () Bool)

(declare-fun res!52003 () Bool)

(declare-fun e!67888 () Bool)

(assert (=> d!28193 (=> res!52003 e!67888)))

(assert (=> d!28193 (= res!52003 (or ((_ is Nil!1608) lt!52805) ((_ is Nil!1608) (t!5673 lt!52805))))))

(assert (=> d!28193 (= (isStrictlySorted!308 lt!52805) e!67888)))

(declare-fun b!104247 () Bool)

(declare-fun e!67889 () Bool)

(assert (=> b!104247 (= e!67888 e!67889)))

(declare-fun res!52004 () Bool)

(assert (=> b!104247 (=> (not res!52004) (not e!67889))))

(assert (=> b!104247 (= res!52004 (bvslt (_1!1211 (h!2203 lt!52805)) (_1!1211 (h!2203 (t!5673 lt!52805)))))))

(declare-fun b!104248 () Bool)

(assert (=> b!104248 (= e!67889 (isStrictlySorted!308 (t!5673 lt!52805)))))

(assert (= (and d!28193 (not res!52003)) b!104247))

(assert (= (and b!104247 res!52004) b!104248))

(declare-fun m!115639 () Bool)

(assert (=> b!104248 m!115639))

(assert (=> d!27817 d!28193))

(declare-fun d!28195 () Bool)

(declare-fun res!52005 () Bool)

(declare-fun e!67890 () Bool)

(assert (=> d!28195 (=> res!52005 e!67890)))

(assert (=> d!28195 (= res!52005 (or ((_ is Nil!1608) (toList!800 lt!52539)) ((_ is Nil!1608) (t!5673 (toList!800 lt!52539)))))))

(assert (=> d!28195 (= (isStrictlySorted!308 (toList!800 lt!52539)) e!67890)))

(declare-fun b!104249 () Bool)

(declare-fun e!67891 () Bool)

(assert (=> b!104249 (= e!67890 e!67891)))

(declare-fun res!52006 () Bool)

(assert (=> b!104249 (=> (not res!52006) (not e!67891))))

(assert (=> b!104249 (= res!52006 (bvslt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539))))))))

(declare-fun b!104250 () Bool)

(assert (=> b!104250 (= e!67891 (isStrictlySorted!308 (t!5673 (toList!800 lt!52539))))))

(assert (= (and d!28195 (not res!52005)) b!104249))

(assert (= (and b!104249 res!52006) b!104250))

(declare-fun m!115641 () Bool)

(assert (=> b!104250 m!115641))

(assert (=> d!27817 d!28195))

(declare-fun d!28197 () Bool)

(assert (=> d!28197 (= ($colon$colon!80 e!67490 (ite c!17847 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538)))) (Cons!1607 (ite c!17847 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))) e!67490))))

(assert (=> bm!10872 d!28197))

(declare-fun d!28199 () Bool)

(declare-fun e!67892 () Bool)

(assert (=> d!28199 e!67892))

(declare-fun res!52008 () Bool)

(assert (=> d!28199 (=> (not res!52008) (not e!67892))))

(declare-fun lt!53212 () ListLongMap!1569)

(assert (=> d!28199 (= res!52008 (contains!824 lt!53212 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53213 () List!1611)

(assert (=> d!28199 (= lt!53212 (ListLongMap!1570 lt!53213))))

(declare-fun lt!53211 () Unit!3150)

(declare-fun lt!53214 () Unit!3150)

(assert (=> d!28199 (= lt!53211 lt!53214)))

(assert (=> d!28199 (= (getValueByKey!155 lt!53213 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28199 (= lt!53214 (lemmaContainsTupThenGetReturnValue!71 lt!53213 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28199 (= lt!53213 (insertStrictlySorted!74 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28199 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53212)))

(declare-fun b!104251 () Bool)

(declare-fun res!52007 () Bool)

(assert (=> b!104251 (=> (not res!52007) (not e!67892))))

(assert (=> b!104251 (= res!52007 (= (getValueByKey!155 (toList!800 lt!53212) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104252 () Bool)

(assert (=> b!104252 (= e!67892 (contains!826 (toList!800 lt!53212) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!28199 res!52008) b!104251))

(assert (= (and b!104251 res!52007) b!104252))

(declare-fun m!115643 () Bool)

(assert (=> d!28199 m!115643))

(declare-fun m!115645 () Bool)

(assert (=> d!28199 m!115645))

(declare-fun m!115647 () Bool)

(assert (=> d!28199 m!115647))

(declare-fun m!115649 () Bool)

(assert (=> d!28199 m!115649))

(declare-fun m!115651 () Bool)

(assert (=> b!104251 m!115651))

(declare-fun m!115653 () Bool)

(assert (=> b!104252 m!115653))

(assert (=> b!103913 d!28199))

(assert (=> b!103913 d!27825))

(declare-fun b!104253 () Bool)

(declare-fun e!67901 () Bool)

(declare-fun e!67902 () Bool)

(assert (=> b!104253 (= e!67901 e!67902)))

(declare-fun res!52017 () Bool)

(declare-fun call!10952 () Bool)

(assert (=> b!104253 (= res!52017 call!10952)))

(assert (=> b!104253 (=> (not res!52017) (not e!67902))))

(declare-fun bm!10948 () Bool)

(declare-fun call!10953 () ListLongMap!1569)

(declare-fun call!10957 () ListLongMap!1569)

(assert (=> bm!10948 (= call!10953 call!10957)))

(declare-fun call!10955 () ListLongMap!1569)

(declare-fun bm!10949 () Bool)

(assert (=> bm!10949 (= call!10955 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10950 () Bool)

(declare-fun call!10951 () Bool)

(declare-fun lt!53226 () ListLongMap!1569)

(assert (=> bm!10950 (= call!10951 (contains!824 lt!53226 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10951 () Bool)

(declare-fun call!10954 () ListLongMap!1569)

(declare-fun call!10956 () ListLongMap!1569)

(assert (=> bm!10951 (= call!10954 call!10956)))

(declare-fun b!104254 () Bool)

(declare-fun e!67894 () ListLongMap!1569)

(assert (=> b!104254 (= e!67894 (+!141 call!10957 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!104255 () Bool)

(assert (=> b!104255 (= e!67901 (not call!10952))))

(declare-fun b!104256 () Bool)

(declare-fun e!67896 () ListLongMap!1569)

(assert (=> b!104256 (= e!67896 call!10953)))

(declare-fun b!104257 () Bool)

(declare-fun e!67895 () Bool)

(declare-fun e!67899 () Bool)

(assert (=> b!104257 (= e!67895 e!67899)))

(declare-fun res!52013 () Bool)

(assert (=> b!104257 (=> (not res!52013) (not e!67899))))

(assert (=> b!104257 (= res!52013 (contains!824 lt!53226 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104257 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10952 () Bool)

(assert (=> bm!10952 (= call!10956 call!10955)))

(declare-fun b!104258 () Bool)

(declare-fun e!67897 () Unit!3150)

(declare-fun lt!53221 () Unit!3150)

(assert (=> b!104258 (= e!67897 lt!53221)))

(declare-fun lt!53220 () ListLongMap!1569)

(assert (=> b!104258 (= lt!53220 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53230 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53230 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53229 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53229 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53224 () Unit!3150)

(assert (=> b!104258 (= lt!53224 (addStillContains!73 lt!53220 lt!53230 (zeroValue!2438 newMap!16) lt!53229))))

(assert (=> b!104258 (contains!824 (+!141 lt!53220 (tuple2!2401 lt!53230 (zeroValue!2438 newMap!16))) lt!53229)))

(declare-fun lt!53233 () Unit!3150)

(assert (=> b!104258 (= lt!53233 lt!53224)))

(declare-fun lt!53223 () ListLongMap!1569)

(assert (=> b!104258 (= lt!53223 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53227 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53227 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53232 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53232 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53235 () Unit!3150)

(assert (=> b!104258 (= lt!53235 (addApplyDifferent!73 lt!53223 lt!53227 (minValue!2438 newMap!16) lt!53232))))

(assert (=> b!104258 (= (apply!97 (+!141 lt!53223 (tuple2!2401 lt!53227 (minValue!2438 newMap!16))) lt!53232) (apply!97 lt!53223 lt!53232))))

(declare-fun lt!53217 () Unit!3150)

(assert (=> b!104258 (= lt!53217 lt!53235)))

(declare-fun lt!53216 () ListLongMap!1569)

(assert (=> b!104258 (= lt!53216 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53225 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53225 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53228 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53228 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53236 () Unit!3150)

(assert (=> b!104258 (= lt!53236 (addApplyDifferent!73 lt!53216 lt!53225 (zeroValue!2438 newMap!16) lt!53228))))

(assert (=> b!104258 (= (apply!97 (+!141 lt!53216 (tuple2!2401 lt!53225 (zeroValue!2438 newMap!16))) lt!53228) (apply!97 lt!53216 lt!53228))))

(declare-fun lt!53234 () Unit!3150)

(assert (=> b!104258 (= lt!53234 lt!53236)))

(declare-fun lt!53215 () ListLongMap!1569)

(assert (=> b!104258 (= lt!53215 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53222 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53222 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53231 () (_ BitVec 64))

(assert (=> b!104258 (= lt!53231 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104258 (= lt!53221 (addApplyDifferent!73 lt!53215 lt!53222 (minValue!2438 newMap!16) lt!53231))))

(assert (=> b!104258 (= (apply!97 (+!141 lt!53215 (tuple2!2401 lt!53222 (minValue!2438 newMap!16))) lt!53231) (apply!97 lt!53215 lt!53231))))

(declare-fun b!104259 () Bool)

(declare-fun e!67893 () Bool)

(assert (=> b!104259 (= e!67893 (not call!10951))))

(declare-fun b!104260 () Bool)

(declare-fun e!67905 () ListLongMap!1569)

(assert (=> b!104260 (= e!67905 call!10953)))

(declare-fun b!104261 () Bool)

(assert (=> b!104261 (= e!67905 call!10954)))

(declare-fun b!104262 () Bool)

(declare-fun c!18019 () Bool)

(assert (=> b!104262 (= c!18019 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104262 (= e!67896 e!67905)))

(declare-fun b!104263 () Bool)

(declare-fun e!67904 () Bool)

(assert (=> b!104263 (= e!67893 e!67904)))

(declare-fun res!52011 () Bool)

(assert (=> b!104263 (= res!52011 call!10951)))

(assert (=> b!104263 (=> (not res!52011) (not e!67904))))

(declare-fun b!104264 () Bool)

(assert (=> b!104264 (= e!67899 (= (apply!97 lt!53226 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))))))

(assert (=> b!104264 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104265 () Bool)

(declare-fun res!52015 () Bool)

(declare-fun e!67903 () Bool)

(assert (=> b!104265 (=> (not res!52015) (not e!67903))))

(assert (=> b!104265 (= res!52015 e!67901)))

(declare-fun c!18022 () Bool)

(assert (=> b!104265 (= c!18022 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28201 () Bool)

(assert (=> d!28201 e!67903))

(declare-fun res!52016 () Bool)

(assert (=> d!28201 (=> (not res!52016) (not e!67903))))

(assert (=> d!28201 (= res!52016 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!53218 () ListLongMap!1569)

(assert (=> d!28201 (= lt!53226 lt!53218)))

(declare-fun lt!53219 () Unit!3150)

(assert (=> d!28201 (= lt!53219 e!67897)))

(declare-fun c!18023 () Bool)

(declare-fun e!67898 () Bool)

(assert (=> d!28201 (= c!18023 e!67898)))

(declare-fun res!52014 () Bool)

(assert (=> d!28201 (=> (not res!52014) (not e!67898))))

(assert (=> d!28201 (= res!52014 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28201 (= lt!53218 e!67894)))

(declare-fun c!18020 () Bool)

(assert (=> d!28201 (= c!18020 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28201 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28201 (= (getCurrentListMap!487 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53226)))

(declare-fun c!18024 () Bool)

(declare-fun bm!10953 () Bool)

(assert (=> bm!10953 (= call!10957 (+!141 (ite c!18020 call!10955 (ite c!18024 call!10956 call!10954)) (ite (or c!18020 c!18024) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104266 () Bool)

(assert (=> b!104266 (= e!67902 (= (apply!97 lt!53226 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104267 () Bool)

(assert (=> b!104267 (= e!67903 e!67893)))

(declare-fun c!18021 () Bool)

(assert (=> b!104267 (= c!18021 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104268 () Bool)

(assert (=> b!104268 (= e!67898 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104269 () Bool)

(declare-fun res!52010 () Bool)

(assert (=> b!104269 (=> (not res!52010) (not e!67903))))

(assert (=> b!104269 (= res!52010 e!67895)))

(declare-fun res!52012 () Bool)

(assert (=> b!104269 (=> res!52012 e!67895)))

(declare-fun e!67900 () Bool)

(assert (=> b!104269 (= res!52012 (not e!67900))))

(declare-fun res!52009 () Bool)

(assert (=> b!104269 (=> (not res!52009) (not e!67900))))

(assert (=> b!104269 (= res!52009 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104270 () Bool)

(assert (=> b!104270 (= e!67894 e!67896)))

(assert (=> b!104270 (= c!18024 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104271 () Bool)

(declare-fun Unit!3189 () Unit!3150)

(assert (=> b!104271 (= e!67897 Unit!3189)))

(declare-fun b!104272 () Bool)

(assert (=> b!104272 (= e!67904 (= (apply!97 lt!53226 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104273 () Bool)

(assert (=> b!104273 (= e!67900 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10954 () Bool)

(assert (=> bm!10954 (= call!10952 (contains!824 lt!53226 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28201 c!18020) b!104254))

(assert (= (and d!28201 (not c!18020)) b!104270))

(assert (= (and b!104270 c!18024) b!104256))

(assert (= (and b!104270 (not c!18024)) b!104262))

(assert (= (and b!104262 c!18019) b!104260))

(assert (= (and b!104262 (not c!18019)) b!104261))

(assert (= (or b!104260 b!104261) bm!10951))

(assert (= (or b!104256 bm!10951) bm!10952))

(assert (= (or b!104256 b!104260) bm!10948))

(assert (= (or b!104254 bm!10952) bm!10949))

(assert (= (or b!104254 bm!10948) bm!10953))

(assert (= (and d!28201 res!52014) b!104268))

(assert (= (and d!28201 c!18023) b!104258))

(assert (= (and d!28201 (not c!18023)) b!104271))

(assert (= (and d!28201 res!52016) b!104269))

(assert (= (and b!104269 res!52009) b!104273))

(assert (= (and b!104269 (not res!52012)) b!104257))

(assert (= (and b!104257 res!52013) b!104264))

(assert (= (and b!104269 res!52010) b!104265))

(assert (= (and b!104265 c!18022) b!104253))

(assert (= (and b!104265 (not c!18022)) b!104255))

(assert (= (and b!104253 res!52017) b!104266))

(assert (= (or b!104253 b!104255) bm!10954))

(assert (= (and b!104265 res!52015) b!104267))

(assert (= (and b!104267 c!18021) b!104263))

(assert (= (and b!104267 (not c!18021)) b!104259))

(assert (= (and b!104263 res!52011) b!104272))

(assert (= (or b!104263 b!104259) bm!10950))

(declare-fun b_lambda!4655 () Bool)

(assert (=> (not b_lambda!4655) (not b!104264)))

(assert (=> b!104264 t!5681))

(declare-fun b_and!6435 () Bool)

(assert (= b_and!6431 (and (=> t!5681 result!3435) b_and!6435)))

(assert (=> b!104264 t!5683))

(declare-fun b_and!6437 () Bool)

(assert (= b_and!6433 (and (=> t!5683 result!3437) b_and!6437)))

(assert (=> b!104273 m!114525))

(assert (=> b!104273 m!114525))

(assert (=> b!104273 m!114527))

(declare-fun m!115655 () Bool)

(assert (=> bm!10949 m!115655))

(assert (=> b!104257 m!114525))

(assert (=> b!104257 m!114525))

(declare-fun m!115657 () Bool)

(assert (=> b!104257 m!115657))

(declare-fun m!115659 () Bool)

(assert (=> bm!10950 m!115659))

(declare-fun m!115661 () Bool)

(assert (=> b!104264 m!115661))

(assert (=> b!104264 m!115661))

(assert (=> b!104264 m!114537))

(declare-fun m!115663 () Bool)

(assert (=> b!104264 m!115663))

(assert (=> b!104264 m!114525))

(assert (=> b!104264 m!114525))

(declare-fun m!115665 () Bool)

(assert (=> b!104264 m!115665))

(assert (=> b!104264 m!114537))

(declare-fun m!115667 () Bool)

(assert (=> b!104254 m!115667))

(declare-fun m!115669 () Bool)

(assert (=> b!104258 m!115669))

(declare-fun m!115671 () Bool)

(assert (=> b!104258 m!115671))

(declare-fun m!115673 () Bool)

(assert (=> b!104258 m!115673))

(declare-fun m!115675 () Bool)

(assert (=> b!104258 m!115675))

(declare-fun m!115677 () Bool)

(assert (=> b!104258 m!115677))

(declare-fun m!115679 () Bool)

(assert (=> b!104258 m!115679))

(declare-fun m!115681 () Bool)

(assert (=> b!104258 m!115681))

(declare-fun m!115683 () Bool)

(assert (=> b!104258 m!115683))

(assert (=> b!104258 m!114525))

(assert (=> b!104258 m!115669))

(declare-fun m!115685 () Bool)

(assert (=> b!104258 m!115685))

(assert (=> b!104258 m!115683))

(declare-fun m!115687 () Bool)

(assert (=> b!104258 m!115687))

(assert (=> b!104258 m!115675))

(declare-fun m!115689 () Bool)

(assert (=> b!104258 m!115689))

(declare-fun m!115691 () Bool)

(assert (=> b!104258 m!115691))

(declare-fun m!115693 () Bool)

(assert (=> b!104258 m!115693))

(assert (=> b!104258 m!115655))

(declare-fun m!115695 () Bool)

(assert (=> b!104258 m!115695))

(assert (=> b!104258 m!115679))

(declare-fun m!115697 () Bool)

(assert (=> b!104258 m!115697))

(assert (=> d!28201 m!114575))

(declare-fun m!115699 () Bool)

(assert (=> bm!10954 m!115699))

(declare-fun m!115701 () Bool)

(assert (=> b!104272 m!115701))

(assert (=> b!104268 m!114525))

(assert (=> b!104268 m!114525))

(assert (=> b!104268 m!114527))

(declare-fun m!115703 () Bool)

(assert (=> b!104266 m!115703))

(declare-fun m!115705 () Bool)

(assert (=> bm!10953 m!115705))

(assert (=> b!103913 d!28201))

(assert (=> b!103924 d!28031))

(assert (=> b!103620 d!28031))

(declare-fun d!28203 () Bool)

(assert (=> d!28203 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (getCurrentListMap!487 (_keys!4263 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28203 true))

(declare-fun _$5!107 () Unit!3150)

(assert (=> d!28203 (= (choose!642 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)) _$5!107)))

(declare-fun bs!4286 () Bool)

(assert (= bs!4286 d!28203))

(assert (=> bs!4286 m!114331))

(assert (=> bs!4286 m!114331))

(assert (=> bs!4286 m!114633))

(assert (=> bs!4286 m!114281))

(assert (=> bs!4286 m!115057))

(assert (=> d!27929 d!28203))

(assert (=> d!27929 d!28111))

(declare-fun d!28205 () Bool)

(declare-fun c!18025 () Bool)

(assert (=> d!28205 (= c!18025 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52793))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52793)))) (_1!1211 lt!52538))))))

(declare-fun e!67906 () Option!161)

(assert (=> d!28205 (= (getValueByKey!155 (t!5673 (toList!800 lt!52793)) (_1!1211 lt!52538)) e!67906)))

(declare-fun b!104275 () Bool)

(declare-fun e!67907 () Option!161)

(assert (=> b!104275 (= e!67906 e!67907)))

(declare-fun c!18026 () Bool)

(assert (=> b!104275 (= c!18026 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52793))) (not (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52793)))) (_1!1211 lt!52538)))))))

(declare-fun b!104276 () Bool)

(assert (=> b!104276 (= e!67907 (getValueByKey!155 (t!5673 (t!5673 (toList!800 lt!52793))) (_1!1211 lt!52538)))))

(declare-fun b!104277 () Bool)

(assert (=> b!104277 (= e!67907 None!159)))

(declare-fun b!104274 () Bool)

(assert (=> b!104274 (= e!67906 (Some!160 (_2!1211 (h!2203 (t!5673 (toList!800 lt!52793))))))))

(assert (= (and d!28205 c!18025) b!104274))

(assert (= (and d!28205 (not c!18025)) b!104275))

(assert (= (and b!104275 c!18026) b!104276))

(assert (= (and b!104275 (not c!18026)) b!104277))

(declare-fun m!115707 () Bool)

(assert (=> b!104276 m!115707))

(assert (=> b!103603 d!28205))

(declare-fun d!28207 () Bool)

(declare-fun lt!53237 () Bool)

(assert (=> d!28207 (= lt!53237 (select (content!108 (toList!800 lt!53048)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!67909 () Bool)

(assert (=> d!28207 (= lt!53237 e!67909)))

(declare-fun res!52018 () Bool)

(assert (=> d!28207 (=> (not res!52018) (not e!67909))))

(assert (=> d!28207 (= res!52018 ((_ is Cons!1607) (toList!800 lt!53048)))))

(assert (=> d!28207 (= (contains!826 (toList!800 lt!53048) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53237)))

(declare-fun b!104278 () Bool)

(declare-fun e!67908 () Bool)

(assert (=> b!104278 (= e!67909 e!67908)))

(declare-fun res!52019 () Bool)

(assert (=> b!104278 (=> res!52019 e!67908)))

(assert (=> b!104278 (= res!52019 (= (h!2203 (toList!800 lt!53048)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104279 () Bool)

(assert (=> b!104279 (= e!67908 (contains!826 (t!5673 (toList!800 lt!53048)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28207 res!52018) b!104278))

(assert (= (and b!104278 (not res!52019)) b!104279))

(declare-fun m!115709 () Bool)

(assert (=> d!28207 m!115709))

(declare-fun m!115711 () Bool)

(assert (=> d!28207 m!115711))

(declare-fun m!115713 () Bool)

(assert (=> b!104279 m!115713))

(assert (=> b!103885 d!28207))

(declare-fun d!28209 () Bool)

(declare-fun c!18027 () Bool)

(assert (=> d!28209 (= c!18027 (and ((_ is Cons!1607) (t!5673 lt!52794)) (= (_1!1211 (h!2203 (t!5673 lt!52794))) (_1!1211 lt!52538))))))

(declare-fun e!67910 () Option!161)

(assert (=> d!28209 (= (getValueByKey!155 (t!5673 lt!52794) (_1!1211 lt!52538)) e!67910)))

(declare-fun b!104281 () Bool)

(declare-fun e!67911 () Option!161)

(assert (=> b!104281 (= e!67910 e!67911)))

(declare-fun c!18028 () Bool)

(assert (=> b!104281 (= c!18028 (and ((_ is Cons!1607) (t!5673 lt!52794)) (not (= (_1!1211 (h!2203 (t!5673 lt!52794))) (_1!1211 lt!52538)))))))

(declare-fun b!104282 () Bool)

(assert (=> b!104282 (= e!67911 (getValueByKey!155 (t!5673 (t!5673 lt!52794)) (_1!1211 lt!52538)))))

(declare-fun b!104283 () Bool)

(assert (=> b!104283 (= e!67911 None!159)))

(declare-fun b!104280 () Bool)

(assert (=> b!104280 (= e!67910 (Some!160 (_2!1211 (h!2203 (t!5673 lt!52794)))))))

(assert (= (and d!28209 c!18027) b!104280))

(assert (= (and d!28209 (not c!18027)) b!104281))

(assert (= (and b!104281 c!18028) b!104282))

(assert (= (and b!104281 (not c!18028)) b!104283))

(declare-fun m!115715 () Bool)

(assert (=> b!104282 m!115715))

(assert (=> b!103730 d!28209))

(declare-fun d!28211 () Bool)

(assert (=> d!28211 (isDefined!108 (getValueByKey!155 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(declare-fun lt!53238 () Unit!3150)

(assert (=> d!28211 (= lt!53238 (choose!649 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(declare-fun e!67912 () Bool)

(assert (=> d!28211 e!67912))

(declare-fun res!52020 () Bool)

(assert (=> d!28211 (=> (not res!52020) (not e!67912))))

(assert (=> d!28211 (= res!52020 (isStrictlySorted!308 (toList!800 call!10817)))))

(assert (=> d!28211 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))) lt!53238)))

(declare-fun b!104284 () Bool)

(assert (=> b!104284 (= e!67912 (containsKey!159 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (= (and d!28211 res!52020) b!104284))

(assert (=> d!28211 m!114297))

(assert (=> d!28211 m!115045))

(assert (=> d!28211 m!115045))

(assert (=> d!28211 m!115047))

(assert (=> d!28211 m!114297))

(declare-fun m!115717 () Bool)

(assert (=> d!28211 m!115717))

(declare-fun m!115719 () Bool)

(assert (=> d!28211 m!115719))

(assert (=> b!104284 m!114297))

(assert (=> b!104284 m!115041))

(assert (=> b!103905 d!28211))

(assert (=> b!103905 d!28023))

(assert (=> b!103905 d!28025))

(assert (=> d!28001 d!27885))

(declare-fun d!28213 () Bool)

(declare-fun e!67915 () Bool)

(assert (=> d!28213 e!67915))

(declare-fun res!52026 () Bool)

(assert (=> d!28213 (=> (not res!52026) (not e!67915))))

(declare-fun lt!53241 () SeekEntryResult!258)

(assert (=> d!28213 (= res!52026 ((_ is Found!258) lt!53241))))

(assert (=> d!28213 (= lt!53241 (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!28213 true))

(declare-fun _$33!87 () Unit!3150)

(assert (=> d!28213 (= (choose!647 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (defaultEntry!2561 newMap!16)) _$33!87)))

(declare-fun b!104289 () Bool)

(declare-fun res!52025 () Bool)

(assert (=> b!104289 (=> (not res!52025) (not e!67915))))

(assert (=> b!104289 (= res!52025 (inRange!0 (index!3180 lt!53241) (mask!6697 newMap!16)))))

(declare-fun b!104290 () Bool)

(assert (=> b!104290 (= e!67915 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!53241)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28213 res!52026) b!104289))

(assert (= (and b!104289 res!52025) b!104290))

(assert (=> d!28213 m!114165))

(assert (=> d!28213 m!114295))

(declare-fun m!115721 () Bool)

(assert (=> b!104289 m!115721))

(declare-fun m!115723 () Bool)

(assert (=> b!104290 m!115723))

(assert (=> d!28001 d!28213))

(assert (=> d!28001 d!28111))

(assert (=> b!104001 d!28033))

(declare-fun d!28215 () Bool)

(declare-fun lt!53242 () Bool)

(assert (=> d!28215 (= lt!53242 (select (content!107 Nil!1607) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!67917 () Bool)

(assert (=> d!28215 (= lt!53242 e!67917)))

(declare-fun res!52028 () Bool)

(assert (=> d!28215 (=> (not res!52028) (not e!67917))))

(assert (=> d!28215 (= res!52028 ((_ is Cons!1606) Nil!1607))))

(assert (=> d!28215 (= (contains!825 Nil!1607 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53242)))

(declare-fun b!104291 () Bool)

(declare-fun e!67916 () Bool)

(assert (=> b!104291 (= e!67917 e!67916)))

(declare-fun res!52027 () Bool)

(assert (=> b!104291 (=> res!52027 e!67916)))

(assert (=> b!104291 (= res!52027 (= (h!2202 Nil!1607) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104292 () Bool)

(assert (=> b!104292 (= e!67916 (contains!825 (t!5672 Nil!1607) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!28215 res!52028) b!104291))

(assert (= (and b!104291 (not res!52027)) b!104292))

(assert (=> d!28215 m!114893))

(assert (=> d!28215 m!114525))

(declare-fun m!115725 () Bool)

(assert (=> d!28215 m!115725))

(assert (=> b!104292 m!114525))

(declare-fun m!115727 () Bool)

(assert (=> b!104292 m!115727))

(assert (=> b!103893 d!28215))

(declare-fun d!28217 () Bool)

(declare-fun e!67918 () Bool)

(assert (=> d!28217 e!67918))

(declare-fun res!52030 () Bool)

(assert (=> d!28217 (=> (not res!52030) (not e!67918))))

(declare-fun lt!53244 () ListLongMap!1569)

(assert (=> d!28217 (= res!52030 (contains!824 lt!53244 (_1!1211 (tuple2!2401 lt!52954 lt!52960))))))

(declare-fun lt!53245 () List!1611)

(assert (=> d!28217 (= lt!53244 (ListLongMap!1570 lt!53245))))

(declare-fun lt!53243 () Unit!3150)

(declare-fun lt!53246 () Unit!3150)

(assert (=> d!28217 (= lt!53243 lt!53246)))

(assert (=> d!28217 (= (getValueByKey!155 lt!53245 (_1!1211 (tuple2!2401 lt!52954 lt!52960))) (Some!160 (_2!1211 (tuple2!2401 lt!52954 lt!52960))))))

(assert (=> d!28217 (= lt!53246 (lemmaContainsTupThenGetReturnValue!71 lt!53245 (_1!1211 (tuple2!2401 lt!52954 lt!52960)) (_2!1211 (tuple2!2401 lt!52954 lt!52960))))))

(assert (=> d!28217 (= lt!53245 (insertStrictlySorted!74 (toList!800 lt!52955) (_1!1211 (tuple2!2401 lt!52954 lt!52960)) (_2!1211 (tuple2!2401 lt!52954 lt!52960))))))

(assert (=> d!28217 (= (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960)) lt!53244)))

(declare-fun b!104293 () Bool)

(declare-fun res!52029 () Bool)

(assert (=> b!104293 (=> (not res!52029) (not e!67918))))

(assert (=> b!104293 (= res!52029 (= (getValueByKey!155 (toList!800 lt!53244) (_1!1211 (tuple2!2401 lt!52954 lt!52960))) (Some!160 (_2!1211 (tuple2!2401 lt!52954 lt!52960)))))))

(declare-fun b!104294 () Bool)

(assert (=> b!104294 (= e!67918 (contains!826 (toList!800 lt!53244) (tuple2!2401 lt!52954 lt!52960)))))

(assert (= (and d!28217 res!52030) b!104293))

(assert (= (and b!104293 res!52029) b!104294))

(declare-fun m!115729 () Bool)

(assert (=> d!28217 m!115729))

(declare-fun m!115731 () Bool)

(assert (=> d!28217 m!115731))

(declare-fun m!115733 () Bool)

(assert (=> d!28217 m!115733))

(declare-fun m!115735 () Bool)

(assert (=> d!28217 m!115735))

(declare-fun m!115737 () Bool)

(assert (=> b!104293 m!115737))

(declare-fun m!115739 () Bool)

(assert (=> b!104294 m!115739))

(assert (=> b!103769 d!28217))

(assert (=> b!103769 d!28101))

(declare-fun d!28219 () Bool)

(declare-fun e!67920 () Bool)

(assert (=> d!28219 e!67920))

(declare-fun res!52031 () Bool)

(assert (=> d!28219 (=> res!52031 e!67920)))

(declare-fun lt!53247 () Bool)

(assert (=> d!28219 (= res!52031 (not lt!53247))))

(declare-fun lt!53248 () Bool)

(assert (=> d!28219 (= lt!53247 lt!53248)))

(declare-fun lt!53249 () Unit!3150)

(declare-fun e!67919 () Unit!3150)

(assert (=> d!28219 (= lt!53249 e!67919)))

(declare-fun c!18029 () Bool)

(assert (=> d!28219 (= c!18029 lt!53248)))

(assert (=> d!28219 (= lt!53248 (containsKey!159 (toList!800 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960))) lt!52958))))

(assert (=> d!28219 (= (contains!824 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960)) lt!52958) lt!53247)))

(declare-fun b!104295 () Bool)

(declare-fun lt!53250 () Unit!3150)

(assert (=> b!104295 (= e!67919 lt!53250)))

(assert (=> b!104295 (= lt!53250 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960))) lt!52958))))

(assert (=> b!104295 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960))) lt!52958))))

(declare-fun b!104296 () Bool)

(declare-fun Unit!3190 () Unit!3150)

(assert (=> b!104296 (= e!67919 Unit!3190)))

(declare-fun b!104297 () Bool)

(assert (=> b!104297 (= e!67920 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960))) lt!52958)))))

(assert (= (and d!28219 c!18029) b!104295))

(assert (= (and d!28219 (not c!18029)) b!104296))

(assert (= (and d!28219 (not res!52031)) b!104297))

(declare-fun m!115741 () Bool)

(assert (=> d!28219 m!115741))

(declare-fun m!115743 () Bool)

(assert (=> b!104295 m!115743))

(declare-fun m!115745 () Bool)

(assert (=> b!104295 m!115745))

(assert (=> b!104295 m!115745))

(declare-fun m!115747 () Bool)

(assert (=> b!104295 m!115747))

(assert (=> b!104297 m!115745))

(assert (=> b!104297 m!115745))

(assert (=> b!104297 m!115747))

(assert (=> b!103769 d!28219))

(declare-fun d!28221 () Bool)

(declare-fun e!67921 () Bool)

(assert (=> d!28221 e!67921))

(declare-fun res!52033 () Bool)

(assert (=> d!28221 (=> (not res!52033) (not e!67921))))

(declare-fun lt!53252 () ListLongMap!1569)

(assert (=> d!28221 (= res!52033 (contains!824 lt!53252 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53253 () List!1611)

(assert (=> d!28221 (= lt!53252 (ListLongMap!1570 lt!53253))))

(declare-fun lt!53251 () Unit!3150)

(declare-fun lt!53254 () Unit!3150)

(assert (=> d!28221 (= lt!53251 lt!53254)))

(assert (=> d!28221 (= (getValueByKey!155 lt!53253 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28221 (= lt!53254 (lemmaContainsTupThenGetReturnValue!71 lt!53253 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28221 (= lt!53253 (insertStrictlySorted!74 (toList!800 call!10904) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28221 (= (+!141 call!10904 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53252)))

(declare-fun b!104298 () Bool)

(declare-fun res!52032 () Bool)

(assert (=> b!104298 (=> (not res!52032) (not e!67921))))

(assert (=> b!104298 (= res!52032 (= (getValueByKey!155 (toList!800 lt!53252) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104299 () Bool)

(assert (=> b!104299 (= e!67921 (contains!826 (toList!800 lt!53252) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28221 res!52033) b!104298))

(assert (= (and b!104298 res!52032) b!104299))

(declare-fun m!115749 () Bool)

(assert (=> d!28221 m!115749))

(declare-fun m!115751 () Bool)

(assert (=> d!28221 m!115751))

(declare-fun m!115753 () Bool)

(assert (=> d!28221 m!115753))

(declare-fun m!115755 () Bool)

(assert (=> d!28221 m!115755))

(declare-fun m!115757 () Bool)

(assert (=> b!104298 m!115757))

(declare-fun m!115759 () Bool)

(assert (=> b!104299 m!115759))

(assert (=> b!103769 d!28221))

(declare-fun d!28223 () Bool)

(assert (=> d!28223 (not (contains!824 (+!141 lt!52955 (tuple2!2401 lt!52954 lt!52960)) lt!52958))))

(declare-fun lt!53255 () Unit!3150)

(assert (=> d!28223 (= lt!53255 (choose!643 lt!52955 lt!52954 lt!52960 lt!52958))))

(declare-fun e!67922 () Bool)

(assert (=> d!28223 e!67922))

(declare-fun res!52034 () Bool)

(assert (=> d!28223 (=> (not res!52034) (not e!67922))))

(assert (=> d!28223 (= res!52034 (not (contains!824 lt!52955 lt!52958)))))

(assert (=> d!28223 (= (addStillNotContains!45 lt!52955 lt!52954 lt!52960 lt!52958) lt!53255)))

(declare-fun b!104300 () Bool)

(assert (=> b!104300 (= e!67922 (not (= lt!52954 lt!52958)))))

(assert (= (and d!28223 res!52034) b!104300))

(assert (=> d!28223 m!114759))

(assert (=> d!28223 m!114759))

(assert (=> d!28223 m!114761))

(declare-fun m!115761 () Bool)

(assert (=> d!28223 m!115761))

(declare-fun m!115763 () Bool)

(assert (=> d!28223 m!115763))

(assert (=> b!103769 d!28223))

(declare-fun d!28225 () Bool)

(declare-fun res!52035 () Bool)

(declare-fun e!67923 () Bool)

(assert (=> d!28225 (=> res!52035 e!67923)))

(assert (=> d!28225 (= res!52035 (and ((_ is Cons!1607) (toList!800 lt!52728)) (= (_1!1211 (h!2203 (toList!800 lt!52728))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28225 (= (containsKey!159 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000) e!67923)))

(declare-fun b!104301 () Bool)

(declare-fun e!67924 () Bool)

(assert (=> b!104301 (= e!67923 e!67924)))

(declare-fun res!52036 () Bool)

(assert (=> b!104301 (=> (not res!52036) (not e!67924))))

(assert (=> b!104301 (= res!52036 (and (or (not ((_ is Cons!1607) (toList!800 lt!52728))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52728))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1607) (toList!800 lt!52728)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52728))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104302 () Bool)

(assert (=> b!104302 (= e!67924 (containsKey!159 (t!5673 (toList!800 lt!52728)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28225 (not res!52035)) b!104301))

(assert (= (and b!104301 res!52036) b!104302))

(declare-fun m!115765 () Bool)

(assert (=> b!104302 m!115765))

(assert (=> d!27997 d!28225))

(assert (=> d!27893 d!27891))

(declare-fun d!28227 () Bool)

(assert (=> d!28227 (= (getValueByKey!155 lt!52765 (_1!1211 lt!52540)) (Some!160 (_2!1211 lt!52540)))))

(assert (=> d!28227 true))

(declare-fun _$22!428 () Unit!3150)

(assert (=> d!28227 (= (choose!639 lt!52765 (_1!1211 lt!52540) (_2!1211 lt!52540)) _$22!428)))

(declare-fun bs!4287 () Bool)

(assert (= bs!4287 d!28227))

(assert (=> bs!4287 m!114431))

(assert (=> d!27893 d!28227))

(declare-fun d!28229 () Bool)

(declare-fun res!52037 () Bool)

(declare-fun e!67925 () Bool)

(assert (=> d!28229 (=> res!52037 e!67925)))

(assert (=> d!28229 (= res!52037 (or ((_ is Nil!1608) lt!52765) ((_ is Nil!1608) (t!5673 lt!52765))))))

(assert (=> d!28229 (= (isStrictlySorted!308 lt!52765) e!67925)))

(declare-fun b!104303 () Bool)

(declare-fun e!67926 () Bool)

(assert (=> b!104303 (= e!67925 e!67926)))

(declare-fun res!52038 () Bool)

(assert (=> b!104303 (=> (not res!52038) (not e!67926))))

(assert (=> b!104303 (= res!52038 (bvslt (_1!1211 (h!2203 lt!52765)) (_1!1211 (h!2203 (t!5673 lt!52765)))))))

(declare-fun b!104304 () Bool)

(assert (=> b!104304 (= e!67926 (isStrictlySorted!308 (t!5673 lt!52765)))))

(assert (= (and d!28229 (not res!52037)) b!104303))

(assert (= (and b!104303 res!52038) b!104304))

(declare-fun m!115767 () Bool)

(assert (=> b!104304 m!115767))

(assert (=> d!27893 d!28229))

(declare-fun d!28231 () Bool)

(declare-fun e!67928 () Bool)

(assert (=> d!28231 e!67928))

(declare-fun res!52039 () Bool)

(assert (=> d!28231 (=> res!52039 e!67928)))

(declare-fun lt!53256 () Bool)

(assert (=> d!28231 (= res!52039 (not lt!53256))))

(declare-fun lt!53257 () Bool)

(assert (=> d!28231 (= lt!53256 lt!53257)))

(declare-fun lt!53258 () Unit!3150)

(declare-fun e!67927 () Unit!3150)

(assert (=> d!28231 (= lt!53258 e!67927)))

(declare-fun c!18030 () Bool)

(assert (=> d!28231 (= c!18030 lt!53257)))

(assert (=> d!28231 (= lt!53257 (containsKey!159 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (=> d!28231 (= (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))) lt!53256)))

(declare-fun b!104305 () Bool)

(declare-fun lt!53259 () Unit!3150)

(assert (=> b!104305 (= e!67927 lt!53259)))

(assert (=> b!104305 (= lt!53259 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (=> b!104305 (isDefined!108 (getValueByKey!155 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(declare-fun b!104306 () Bool)

(declare-fun Unit!3191 () Unit!3150)

(assert (=> b!104306 (= e!67927 Unit!3191)))

(declare-fun b!104307 () Bool)

(assert (=> b!104307 (= e!67928 (isDefined!108 (getValueByKey!155 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))))

(assert (= (and d!28231 c!18030) b!104305))

(assert (= (and d!28231 (not c!18030)) b!104306))

(assert (= (and d!28231 (not res!52039)) b!104307))

(assert (=> d!28231 m!114297))

(declare-fun m!115769 () Bool)

(assert (=> d!28231 m!115769))

(assert (=> b!104305 m!114297))

(declare-fun m!115771 () Bool)

(assert (=> b!104305 m!115771))

(assert (=> b!104305 m!114297))

(declare-fun m!115773 () Bool)

(assert (=> b!104305 m!115773))

(assert (=> b!104305 m!115773))

(declare-fun m!115775 () Bool)

(assert (=> b!104305 m!115775))

(assert (=> b!104307 m!114297))

(assert (=> b!104307 m!115773))

(assert (=> b!104307 m!115773))

(assert (=> b!104307 m!115775))

(assert (=> b!103910 d!28231))

(declare-fun b!104308 () Bool)

(declare-fun e!67937 () Bool)

(declare-fun e!67938 () Bool)

(assert (=> b!104308 (= e!67937 e!67938)))

(declare-fun res!52048 () Bool)

(declare-fun call!10959 () Bool)

(assert (=> b!104308 (= res!52048 call!10959)))

(assert (=> b!104308 (=> (not res!52048) (not e!67938))))

(declare-fun bm!10955 () Bool)

(declare-fun call!10960 () ListLongMap!1569)

(declare-fun call!10964 () ListLongMap!1569)

(assert (=> bm!10955 (= call!10960 call!10964)))

(declare-fun bm!10956 () Bool)

(declare-fun call!10962 () ListLongMap!1569)

(assert (=> bm!10956 (= call!10962 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10957 () Bool)

(declare-fun call!10958 () Bool)

(declare-fun lt!53271 () ListLongMap!1569)

(assert (=> bm!10957 (= call!10958 (contains!824 lt!53271 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10958 () Bool)

(declare-fun call!10961 () ListLongMap!1569)

(declare-fun call!10963 () ListLongMap!1569)

(assert (=> bm!10958 (= call!10961 call!10963)))

(declare-fun b!104309 () Bool)

(declare-fun e!67930 () ListLongMap!1569)

(assert (=> b!104309 (= e!67930 (+!141 call!10964 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!104310 () Bool)

(assert (=> b!104310 (= e!67937 (not call!10959))))

(declare-fun b!104311 () Bool)

(declare-fun e!67932 () ListLongMap!1569)

(assert (=> b!104311 (= e!67932 call!10960)))

(declare-fun b!104312 () Bool)

(declare-fun e!67931 () Bool)

(declare-fun e!67935 () Bool)

(assert (=> b!104312 (= e!67931 e!67935)))

(declare-fun res!52044 () Bool)

(assert (=> b!104312 (=> (not res!52044) (not e!67935))))

(assert (=> b!104312 (= res!52044 (contains!824 lt!53271 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104312 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10959 () Bool)

(assert (=> bm!10959 (= call!10963 call!10962)))

(declare-fun b!104313 () Bool)

(declare-fun e!67933 () Unit!3150)

(declare-fun lt!53266 () Unit!3150)

(assert (=> b!104313 (= e!67933 lt!53266)))

(declare-fun lt!53265 () ListLongMap!1569)

(assert (=> b!104313 (= lt!53265 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53275 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53275 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53274 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53274 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53269 () Unit!3150)

(assert (=> b!104313 (= lt!53269 (addStillContains!73 lt!53265 lt!53275 (zeroValue!2438 newMap!16) lt!53274))))

(assert (=> b!104313 (contains!824 (+!141 lt!53265 (tuple2!2401 lt!53275 (zeroValue!2438 newMap!16))) lt!53274)))

(declare-fun lt!53278 () Unit!3150)

(assert (=> b!104313 (= lt!53278 lt!53269)))

(declare-fun lt!53268 () ListLongMap!1569)

(assert (=> b!104313 (= lt!53268 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53272 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53272 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53277 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53277 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53280 () Unit!3150)

(assert (=> b!104313 (= lt!53280 (addApplyDifferent!73 lt!53268 lt!53272 (minValue!2438 newMap!16) lt!53277))))

(assert (=> b!104313 (= (apply!97 (+!141 lt!53268 (tuple2!2401 lt!53272 (minValue!2438 newMap!16))) lt!53277) (apply!97 lt!53268 lt!53277))))

(declare-fun lt!53262 () Unit!3150)

(assert (=> b!104313 (= lt!53262 lt!53280)))

(declare-fun lt!53261 () ListLongMap!1569)

(assert (=> b!104313 (= lt!53261 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53270 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53270 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53273 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53273 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53281 () Unit!3150)

(assert (=> b!104313 (= lt!53281 (addApplyDifferent!73 lt!53261 lt!53270 (zeroValue!2438 newMap!16) lt!53273))))

(assert (=> b!104313 (= (apply!97 (+!141 lt!53261 (tuple2!2401 lt!53270 (zeroValue!2438 newMap!16))) lt!53273) (apply!97 lt!53261 lt!53273))))

(declare-fun lt!53279 () Unit!3150)

(assert (=> b!104313 (= lt!53279 lt!53281)))

(declare-fun lt!53260 () ListLongMap!1569)

(assert (=> b!104313 (= lt!53260 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53267 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53267 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53276 () (_ BitVec 64))

(assert (=> b!104313 (= lt!53276 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104313 (= lt!53266 (addApplyDifferent!73 lt!53260 lt!53267 (minValue!2438 newMap!16) lt!53276))))

(assert (=> b!104313 (= (apply!97 (+!141 lt!53260 (tuple2!2401 lt!53267 (minValue!2438 newMap!16))) lt!53276) (apply!97 lt!53260 lt!53276))))

(declare-fun b!104314 () Bool)

(declare-fun e!67929 () Bool)

(assert (=> b!104314 (= e!67929 (not call!10958))))

(declare-fun b!104315 () Bool)

(declare-fun e!67941 () ListLongMap!1569)

(assert (=> b!104315 (= e!67941 call!10960)))

(declare-fun b!104316 () Bool)

(assert (=> b!104316 (= e!67941 call!10961)))

(declare-fun b!104317 () Bool)

(declare-fun c!18031 () Bool)

(assert (=> b!104317 (= c!18031 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104317 (= e!67932 e!67941)))

(declare-fun b!104318 () Bool)

(declare-fun e!67940 () Bool)

(assert (=> b!104318 (= e!67929 e!67940)))

(declare-fun res!52042 () Bool)

(assert (=> b!104318 (= res!52042 call!10958)))

(assert (=> b!104318 (=> (not res!52042) (not e!67940))))

(declare-fun b!104319 () Bool)

(assert (=> b!104319 (= e!67935 (= (apply!97 lt!53271 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 lt!52668) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104319 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 lt!52668)))))

(assert (=> b!104319 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104320 () Bool)

(declare-fun res!52046 () Bool)

(declare-fun e!67939 () Bool)

(assert (=> b!104320 (=> (not res!52046) (not e!67939))))

(assert (=> b!104320 (= res!52046 e!67937)))

(declare-fun c!18034 () Bool)

(assert (=> b!104320 (= c!18034 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28233 () Bool)

(assert (=> d!28233 e!67939))

(declare-fun res!52047 () Bool)

(assert (=> d!28233 (=> (not res!52047) (not e!67939))))

(assert (=> d!28233 (= res!52047 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!53263 () ListLongMap!1569)

(assert (=> d!28233 (= lt!53271 lt!53263)))

(declare-fun lt!53264 () Unit!3150)

(assert (=> d!28233 (= lt!53264 e!67933)))

(declare-fun c!18035 () Bool)

(declare-fun e!67934 () Bool)

(assert (=> d!28233 (= c!18035 e!67934)))

(declare-fun res!52045 () Bool)

(assert (=> d!28233 (=> (not res!52045) (not e!67934))))

(assert (=> d!28233 (= res!52045 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28233 (= lt!53263 e!67930)))

(declare-fun c!18032 () Bool)

(assert (=> d!28233 (= c!18032 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28233 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28233 (= (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53271)))

(declare-fun c!18036 () Bool)

(declare-fun bm!10960 () Bool)

(assert (=> bm!10960 (= call!10964 (+!141 (ite c!18032 call!10962 (ite c!18036 call!10963 call!10961)) (ite (or c!18032 c!18036) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104321 () Bool)

(assert (=> b!104321 (= e!67938 (= (apply!97 lt!53271 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104322 () Bool)

(assert (=> b!104322 (= e!67939 e!67929)))

(declare-fun c!18033 () Bool)

(assert (=> b!104322 (= c!18033 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104323 () Bool)

(assert (=> b!104323 (= e!67934 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104324 () Bool)

(declare-fun res!52041 () Bool)

(assert (=> b!104324 (=> (not res!52041) (not e!67939))))

(assert (=> b!104324 (= res!52041 e!67931)))

(declare-fun res!52043 () Bool)

(assert (=> b!104324 (=> res!52043 e!67931)))

(declare-fun e!67936 () Bool)

(assert (=> b!104324 (= res!52043 (not e!67936))))

(declare-fun res!52040 () Bool)

(assert (=> b!104324 (=> (not res!52040) (not e!67936))))

(assert (=> b!104324 (= res!52040 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104325 () Bool)

(assert (=> b!104325 (= e!67930 e!67932)))

(assert (=> b!104325 (= c!18036 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104326 () Bool)

(declare-fun Unit!3192 () Unit!3150)

(assert (=> b!104326 (= e!67933 Unit!3192)))

(declare-fun b!104327 () Bool)

(assert (=> b!104327 (= e!67940 (= (apply!97 lt!53271 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104328 () Bool)

(assert (=> b!104328 (= e!67936 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10961 () Bool)

(assert (=> bm!10961 (= call!10959 (contains!824 lt!53271 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28233 c!18032) b!104309))

(assert (= (and d!28233 (not c!18032)) b!104325))

(assert (= (and b!104325 c!18036) b!104311))

(assert (= (and b!104325 (not c!18036)) b!104317))

(assert (= (and b!104317 c!18031) b!104315))

(assert (= (and b!104317 (not c!18031)) b!104316))

(assert (= (or b!104315 b!104316) bm!10958))

(assert (= (or b!104311 bm!10958) bm!10959))

(assert (= (or b!104311 b!104315) bm!10955))

(assert (= (or b!104309 bm!10959) bm!10956))

(assert (= (or b!104309 bm!10955) bm!10960))

(assert (= (and d!28233 res!52045) b!104323))

(assert (= (and d!28233 c!18035) b!104313))

(assert (= (and d!28233 (not c!18035)) b!104326))

(assert (= (and d!28233 res!52047) b!104324))

(assert (= (and b!104324 res!52040) b!104328))

(assert (= (and b!104324 (not res!52043)) b!104312))

(assert (= (and b!104312 res!52044) b!104319))

(assert (= (and b!104324 res!52041) b!104320))

(assert (= (and b!104320 c!18034) b!104308))

(assert (= (and b!104320 (not c!18034)) b!104310))

(assert (= (and b!104308 res!52048) b!104321))

(assert (= (or b!104308 b!104310) bm!10961))

(assert (= (and b!104320 res!52046) b!104322))

(assert (= (and b!104322 c!18033) b!104318))

(assert (= (and b!104322 (not c!18033)) b!104314))

(assert (= (and b!104318 res!52042) b!104327))

(assert (= (or b!104318 b!104314) bm!10957))

(declare-fun b_lambda!4657 () Bool)

(assert (=> (not b_lambda!4657) (not b!104319)))

(assert (=> b!104319 t!5681))

(declare-fun b_and!6439 () Bool)

(assert (= b_and!6435 (and (=> t!5681 result!3435) b_and!6439)))

(assert (=> b!104319 t!5683))

(declare-fun b_and!6441 () Bool)

(assert (= b_and!6437 (and (=> t!5683 result!3437) b_and!6441)))

(assert (=> b!104328 m!114525))

(assert (=> b!104328 m!114525))

(assert (=> b!104328 m!114527))

(declare-fun m!115777 () Bool)

(assert (=> bm!10956 m!115777))

(assert (=> b!104312 m!114525))

(assert (=> b!104312 m!114525))

(declare-fun m!115779 () Bool)

(assert (=> b!104312 m!115779))

(declare-fun m!115781 () Bool)

(assert (=> bm!10957 m!115781))

(declare-fun m!115783 () Bool)

(assert (=> b!104319 m!115783))

(assert (=> b!104319 m!115783))

(assert (=> b!104319 m!114537))

(declare-fun m!115785 () Bool)

(assert (=> b!104319 m!115785))

(assert (=> b!104319 m!114525))

(assert (=> b!104319 m!114525))

(declare-fun m!115787 () Bool)

(assert (=> b!104319 m!115787))

(assert (=> b!104319 m!114537))

(declare-fun m!115789 () Bool)

(assert (=> b!104309 m!115789))

(declare-fun m!115791 () Bool)

(assert (=> b!104313 m!115791))

(declare-fun m!115793 () Bool)

(assert (=> b!104313 m!115793))

(declare-fun m!115795 () Bool)

(assert (=> b!104313 m!115795))

(declare-fun m!115797 () Bool)

(assert (=> b!104313 m!115797))

(declare-fun m!115799 () Bool)

(assert (=> b!104313 m!115799))

(declare-fun m!115801 () Bool)

(assert (=> b!104313 m!115801))

(declare-fun m!115803 () Bool)

(assert (=> b!104313 m!115803))

(declare-fun m!115805 () Bool)

(assert (=> b!104313 m!115805))

(assert (=> b!104313 m!114525))

(assert (=> b!104313 m!115791))

(declare-fun m!115807 () Bool)

(assert (=> b!104313 m!115807))

(assert (=> b!104313 m!115805))

(declare-fun m!115809 () Bool)

(assert (=> b!104313 m!115809))

(assert (=> b!104313 m!115797))

(declare-fun m!115811 () Bool)

(assert (=> b!104313 m!115811))

(declare-fun m!115813 () Bool)

(assert (=> b!104313 m!115813))

(declare-fun m!115815 () Bool)

(assert (=> b!104313 m!115815))

(assert (=> b!104313 m!115777))

(declare-fun m!115817 () Bool)

(assert (=> b!104313 m!115817))

(assert (=> b!104313 m!115801))

(declare-fun m!115819 () Bool)

(assert (=> b!104313 m!115819))

(assert (=> d!28233 m!114575))

(declare-fun m!115821 () Bool)

(assert (=> bm!10961 m!115821))

(declare-fun m!115823 () Bool)

(assert (=> b!104327 m!115823))

(assert (=> b!104323 m!114525))

(assert (=> b!104323 m!114525))

(assert (=> b!104323 m!114527))

(declare-fun m!115825 () Bool)

(assert (=> b!104321 m!115825))

(declare-fun m!115827 () Bool)

(assert (=> bm!10960 m!115827))

(assert (=> b!103910 d!28233))

(assert (=> d!27815 d!27813))

(declare-fun d!28235 () Bool)

(assert (=> d!28235 (= (getValueByKey!155 lt!52758 (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538)))))

(assert (=> d!28235 true))

(declare-fun _$22!429 () Unit!3150)

(assert (=> d!28235 (= (choose!639 lt!52758 (_1!1211 lt!52538) (_2!1211 lt!52538)) _$22!429)))

(declare-fun bs!4288 () Bool)

(assert (= bs!4288 d!28235))

(assert (=> bs!4288 m!114409))

(assert (=> d!27815 d!28235))

(declare-fun d!28237 () Bool)

(declare-fun res!52049 () Bool)

(declare-fun e!67942 () Bool)

(assert (=> d!28237 (=> res!52049 e!67942)))

(assert (=> d!28237 (= res!52049 (or ((_ is Nil!1608) lt!52758) ((_ is Nil!1608) (t!5673 lt!52758))))))

(assert (=> d!28237 (= (isStrictlySorted!308 lt!52758) e!67942)))

(declare-fun b!104329 () Bool)

(declare-fun e!67943 () Bool)

(assert (=> b!104329 (= e!67942 e!67943)))

(declare-fun res!52050 () Bool)

(assert (=> b!104329 (=> (not res!52050) (not e!67943))))

(assert (=> b!104329 (= res!52050 (bvslt (_1!1211 (h!2203 lt!52758)) (_1!1211 (h!2203 (t!5673 lt!52758)))))))

(declare-fun b!104330 () Bool)

(assert (=> b!104330 (= e!67943 (isStrictlySorted!308 (t!5673 lt!52758)))))

(assert (= (and d!28237 (not res!52049)) b!104329))

(assert (= (and b!104329 res!52050) b!104330))

(declare-fun m!115829 () Bool)

(assert (=> b!104330 m!115829))

(assert (=> d!27815 d!28237))

(declare-fun d!28239 () Bool)

(assert (=> d!28239 (isDefined!108 (getValueByKey!155 (toList!800 lt!52757) (_1!1211 lt!52538)))))

(declare-fun lt!53282 () Unit!3150)

(assert (=> d!28239 (= lt!53282 (choose!649 (toList!800 lt!52757) (_1!1211 lt!52538)))))

(declare-fun e!67944 () Bool)

(assert (=> d!28239 e!67944))

(declare-fun res!52051 () Bool)

(assert (=> d!28239 (=> (not res!52051) (not e!67944))))

(assert (=> d!28239 (= res!52051 (isStrictlySorted!308 (toList!800 lt!52757)))))

(assert (=> d!28239 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52757) (_1!1211 lt!52538)) lt!53282)))

(declare-fun b!104331 () Bool)

(assert (=> b!104331 (= e!67944 (containsKey!159 (toList!800 lt!52757) (_1!1211 lt!52538)))))

(assert (= (and d!28239 res!52051) b!104331))

(assert (=> d!28239 m!114415))

(assert (=> d!28239 m!114415))

(assert (=> d!28239 m!114495))

(declare-fun m!115831 () Bool)

(assert (=> d!28239 m!115831))

(declare-fun m!115833 () Bool)

(assert (=> d!28239 m!115833))

(assert (=> b!104331 m!114491))

(assert (=> b!103550 d!28239))

(assert (=> b!103550 d!28075))

(assert (=> b!103550 d!27877))

(declare-fun d!28241 () Bool)

(assert (=> d!28241 (= (map!1282 (_2!1212 lt!52911)) (getCurrentListMap!487 (_keys!4263 (_2!1212 lt!52911)) (_values!2544 (_2!1212 lt!52911)) (mask!6697 (_2!1212 lt!52911)) (extraKeys!2370 (_2!1212 lt!52911)) (zeroValue!2438 (_2!1212 lt!52911)) (minValue!2438 (_2!1212 lt!52911)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52911))))))

(declare-fun bs!4289 () Bool)

(assert (= bs!4289 d!28241))

(declare-fun m!115835 () Bool)

(assert (=> bs!4289 m!115835))

(assert (=> b!103694 d!28241))

(declare-fun d!28243 () Bool)

(declare-fun e!67945 () Bool)

(assert (=> d!28243 e!67945))

(declare-fun res!52053 () Bool)

(assert (=> d!28243 (=> (not res!52053) (not e!67945))))

(declare-fun lt!53284 () ListLongMap!1569)

(assert (=> d!28243 (= res!52053 (contains!824 lt!53284 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53285 () List!1611)

(assert (=> d!28243 (= lt!53284 (ListLongMap!1570 lt!53285))))

(declare-fun lt!53283 () Unit!3150)

(declare-fun lt!53286 () Unit!3150)

(assert (=> d!28243 (= lt!53283 lt!53286)))

(assert (=> d!28243 (= (getValueByKey!155 lt!53285 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28243 (= lt!53286 (lemmaContainsTupThenGetReturnValue!71 lt!53285 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28243 (= lt!53285 (insertStrictlySorted!74 (toList!800 (map!1282 newMap!16)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28243 (= (+!141 (map!1282 newMap!16) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53284)))

(declare-fun b!104332 () Bool)

(declare-fun res!52052 () Bool)

(assert (=> b!104332 (=> (not res!52052) (not e!67945))))

(assert (=> b!104332 (= res!52052 (= (getValueByKey!155 (toList!800 lt!53284) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104333 () Bool)

(assert (=> b!104333 (= e!67945 (contains!826 (toList!800 lt!53284) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!28243 res!52053) b!104332))

(assert (= (and b!104332 res!52052) b!104333))

(declare-fun m!115837 () Bool)

(assert (=> d!28243 m!115837))

(declare-fun m!115839 () Bool)

(assert (=> d!28243 m!115839))

(declare-fun m!115841 () Bool)

(assert (=> d!28243 m!115841))

(declare-fun m!115843 () Bool)

(assert (=> d!28243 m!115843))

(declare-fun m!115845 () Bool)

(assert (=> b!104332 m!115845))

(declare-fun m!115847 () Bool)

(assert (=> b!104333 m!115847))

(assert (=> b!103694 d!28243))

(assert (=> b!103694 d!27777))

(declare-fun d!28245 () Bool)

(declare-fun c!18037 () Bool)

(assert (=> d!28245 (= c!18037 (and ((_ is Cons!1607) (toList!800 lt!53111)) (= (_1!1211 (h!2203 (toList!800 lt!53111))) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!67946 () Option!161)

(assert (=> d!28245 (= (getValueByKey!155 (toList!800 lt!53111) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!67946)))

(declare-fun b!104335 () Bool)

(declare-fun e!67947 () Option!161)

(assert (=> b!104335 (= e!67946 e!67947)))

(declare-fun c!18038 () Bool)

(assert (=> b!104335 (= c!18038 (and ((_ is Cons!1607) (toList!800 lt!53111)) (not (= (_1!1211 (h!2203 (toList!800 lt!53111))) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104336 () Bool)

(assert (=> b!104336 (= e!67947 (getValueByKey!155 (t!5673 (toList!800 lt!53111)) (_1!1211 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104337 () Bool)

(assert (=> b!104337 (= e!67947 None!159)))

(declare-fun b!104334 () Bool)

(assert (=> b!104334 (= e!67946 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53111)))))))

(assert (= (and d!28245 c!18037) b!104334))

(assert (= (and d!28245 (not c!18037)) b!104335))

(assert (= (and b!104335 c!18038) b!104336))

(assert (= (and b!104335 (not c!18038)) b!104337))

(declare-fun m!115849 () Bool)

(assert (=> b!104336 m!115849))

(assert (=> b!103981 d!28245))

(declare-fun d!28247 () Bool)

(declare-fun c!18039 () Bool)

(assert (=> d!28247 (= c!18039 ((_ is Nil!1608) (toList!800 lt!52757)))))

(declare-fun e!67948 () (InoxSet tuple2!2400))

(assert (=> d!28247 (= (content!108 (toList!800 lt!52757)) e!67948)))

(declare-fun b!104338 () Bool)

(assert (=> b!104338 (= e!67948 ((as const (Array tuple2!2400 Bool)) false))))

(declare-fun b!104339 () Bool)

(assert (=> b!104339 (= e!67948 ((_ map or) (store ((as const (Array tuple2!2400 Bool)) false) (h!2203 (toList!800 lt!52757)) true) (content!108 (t!5673 (toList!800 lt!52757)))))))

(assert (= (and d!28247 c!18039) b!104338))

(assert (= (and d!28247 (not c!18039)) b!104339))

(declare-fun m!115851 () Bool)

(assert (=> b!104339 m!115851))

(declare-fun m!115853 () Bool)

(assert (=> b!104339 m!115853))

(assert (=> d!27957 d!28247))

(declare-fun d!28249 () Bool)

(assert (=> d!28249 (= (isDefined!108 (getValueByKey!155 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) (not (isEmpty!369 (getValueByKey!155 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun bs!4290 () Bool)

(assert (= bs!4290 d!28249))

(assert (=> bs!4290 m!114835))

(declare-fun m!115855 () Bool)

(assert (=> bs!4290 m!115855))

(assert (=> b!103804 d!28249))

(declare-fun c!18040 () Bool)

(declare-fun d!28251 () Bool)

(assert (=> d!28251 (= c!18040 (and ((_ is Cons!1607) (toList!800 call!10827)) (= (_1!1211 (h!2203 (toList!800 call!10827))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun e!67949 () Option!161)

(assert (=> d!28251 (= (getValueByKey!155 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!67949)))

(declare-fun b!104341 () Bool)

(declare-fun e!67950 () Option!161)

(assert (=> b!104341 (= e!67949 e!67950)))

(declare-fun c!18041 () Bool)

(assert (=> b!104341 (= c!18041 (and ((_ is Cons!1607) (toList!800 call!10827)) (not (= (_1!1211 (h!2203 (toList!800 call!10827))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(declare-fun b!104342 () Bool)

(assert (=> b!104342 (= e!67950 (getValueByKey!155 (t!5673 (toList!800 call!10827)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104343 () Bool)

(assert (=> b!104343 (= e!67950 None!159)))

(declare-fun b!104340 () Bool)

(assert (=> b!104340 (= e!67949 (Some!160 (_2!1211 (h!2203 (toList!800 call!10827)))))))

(assert (= (and d!28251 c!18040) b!104340))

(assert (= (and d!28251 (not c!18040)) b!104341))

(assert (= (and b!104341 c!18041) b!104342))

(assert (= (and b!104341 (not c!18041)) b!104343))

(assert (=> b!104342 m!114165))

(declare-fun m!115857 () Bool)

(assert (=> b!104342 m!115857))

(assert (=> b!103804 d!28251))

(declare-fun d!28253 () Bool)

(assert (=> d!28253 (= (inRange!0 (ite c!17872 (index!3180 lt!52905) (ite c!17871 (index!3179 lt!52931) (index!3182 lt!52931))) (mask!6697 newMap!16)) (and (bvsge (ite c!17872 (index!3180 lt!52905) (ite c!17871 (index!3179 lt!52931) (index!3182 lt!52931))) #b00000000000000000000000000000000) (bvslt (ite c!17872 (index!3180 lt!52905) (ite c!17871 (index!3179 lt!52931) (index!3182 lt!52931))) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10894 d!28253))

(declare-fun b!104345 () Bool)

(declare-fun res!52057 () Bool)

(declare-fun e!67951 () Bool)

(assert (=> b!104345 (=> (not res!52057) (not e!67951))))

(assert (=> b!104345 (= res!52057 (bvsge (size!2315 (_2!1212 lt!52658)) (_size!496 (_2!1212 lt!52658))))))

(declare-fun d!28255 () Bool)

(declare-fun res!52054 () Bool)

(assert (=> d!28255 (=> (not res!52054) (not e!67951))))

(assert (=> d!28255 (= res!52054 (validMask!0 (mask!6697 (_2!1212 lt!52658))))))

(assert (=> d!28255 (= (simpleValid!73 (_2!1212 lt!52658)) e!67951)))

(declare-fun b!104347 () Bool)

(assert (=> b!104347 (= e!67951 (and (bvsge (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000000) (bvsle (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000011) (bvsge (_vacant!496 (_2!1212 lt!52658)) #b00000000000000000000000000000000)))))

(declare-fun b!104344 () Bool)

(declare-fun res!52056 () Bool)

(assert (=> b!104344 (=> (not res!52056) (not e!67951))))

(assert (=> b!104344 (= res!52056 (and (= (size!2312 (_values!2544 (_2!1212 lt!52658))) (bvadd (mask!6697 (_2!1212 lt!52658)) #b00000000000000000000000000000001)) (= (size!2311 (_keys!4263 (_2!1212 lt!52658))) (size!2312 (_values!2544 (_2!1212 lt!52658)))) (bvsge (_size!496 (_2!1212 lt!52658)) #b00000000000000000000000000000000) (bvsle (_size!496 (_2!1212 lt!52658)) (bvadd (mask!6697 (_2!1212 lt!52658)) #b00000000000000000000000000000001))))))

(declare-fun b!104346 () Bool)

(declare-fun res!52055 () Bool)

(assert (=> b!104346 (=> (not res!52055) (not e!67951))))

(assert (=> b!104346 (= res!52055 (= (size!2315 (_2!1212 lt!52658)) (bvadd (_size!496 (_2!1212 lt!52658)) (bvsdiv (bvadd (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!28255 res!52054) b!104344))

(assert (= (and b!104344 res!52056) b!104345))

(assert (= (and b!104345 res!52057) b!104346))

(assert (= (and b!104346 res!52055) b!104347))

(declare-fun m!115859 () Bool)

(assert (=> b!104345 m!115859))

(declare-fun m!115861 () Bool)

(assert (=> d!28255 m!115861))

(assert (=> b!104346 m!115859))

(assert (=> d!27953 d!28255))

(declare-fun d!28257 () Bool)

(assert (=> d!28257 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!4291 () Bool)

(assert (= bs!4291 d!28257))

(assert (=> bs!4291 m!114685))

(declare-fun m!115863 () Bool)

(assert (=> bs!4291 m!115863))

(assert (=> b!103718 d!28257))

(declare-fun c!18042 () Bool)

(declare-fun d!28259 () Bool)

(assert (=> d!28259 (= c!18042 (and ((_ is Cons!1607) (toList!800 lt!52783)) (= (_1!1211 (h!2203 (toList!800 lt!52783))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!67952 () Option!161)

(assert (=> d!28259 (= (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!67952)))

(declare-fun b!104349 () Bool)

(declare-fun e!67953 () Option!161)

(assert (=> b!104349 (= e!67952 e!67953)))

(declare-fun c!18043 () Bool)

(assert (=> b!104349 (= c!18043 (and ((_ is Cons!1607) (toList!800 lt!52783)) (not (= (_1!1211 (h!2203 (toList!800 lt!52783))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!104350 () Bool)

(assert (=> b!104350 (= e!67953 (getValueByKey!155 (t!5673 (toList!800 lt!52783)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!104351 () Bool)

(assert (=> b!104351 (= e!67953 None!159)))

(declare-fun b!104348 () Bool)

(assert (=> b!104348 (= e!67952 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52783)))))))

(assert (= (and d!28259 c!18042) b!104348))

(assert (= (and d!28259 (not c!18042)) b!104349))

(assert (= (and b!104349 c!18043) b!104350))

(assert (= (and b!104349 (not c!18043)) b!104351))

(assert (=> b!104350 m!114339))

(declare-fun m!115865 () Bool)

(assert (=> b!104350 m!115865))

(assert (=> b!103718 d!28259))

(declare-fun d!28261 () Bool)

(assert (=> d!28261 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!52836 #b00000000000000000000000000000000)))

(declare-fun lt!53289 () Unit!3150)

(declare-fun choose!13 (array!4335 (_ BitVec 64) (_ BitVec 32)) Unit!3150)

(assert (=> d!28261 (= lt!53289 (choose!13 (_keys!4263 newMap!16) lt!52836 #b00000000000000000000000000000000))))

(assert (=> d!28261 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!28261 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 newMap!16) lt!52836 #b00000000000000000000000000000000) lt!53289)))

(declare-fun bs!4292 () Bool)

(assert (= bs!4292 d!28261))

(assert (=> bs!4292 m!114589))

(declare-fun m!115867 () Bool)

(assert (=> bs!4292 m!115867))

(assert (=> b!103634 d!28261))

(declare-fun d!28263 () Bool)

(declare-fun res!52058 () Bool)

(declare-fun e!67954 () Bool)

(assert (=> d!28263 (=> res!52058 e!67954)))

(assert (=> d!28263 (= res!52058 (= (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) lt!52836))))

(assert (=> d!28263 (= (arrayContainsKey!0 (_keys!4263 newMap!16) lt!52836 #b00000000000000000000000000000000) e!67954)))

(declare-fun b!104352 () Bool)

(declare-fun e!67955 () Bool)

(assert (=> b!104352 (= e!67954 e!67955)))

(declare-fun res!52059 () Bool)

(assert (=> b!104352 (=> (not res!52059) (not e!67955))))

(assert (=> b!104352 (= res!52059 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104353 () Bool)

(assert (=> b!104353 (= e!67955 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!52836 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28263 (not res!52058)) b!104352))

(assert (= (and b!104352 res!52059) b!104353))

(assert (=> d!28263 m!114525))

(declare-fun m!115869 () Bool)

(assert (=> b!104353 m!115869))

(assert (=> b!103634 d!28263))

(declare-fun b!104354 () Bool)

(declare-fun e!67958 () SeekEntryResult!258)

(assert (=> b!104354 (= e!67958 Undefined!258)))

(declare-fun d!28265 () Bool)

(declare-fun lt!53290 () SeekEntryResult!258)

(assert (=> d!28265 (and (or ((_ is Undefined!258) lt!53290) (not ((_ is Found!258) lt!53290)) (and (bvsge (index!3180 lt!53290) #b00000000000000000000000000000000) (bvslt (index!3180 lt!53290) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53290) ((_ is Found!258) lt!53290) (not ((_ is MissingZero!258) lt!53290)) (and (bvsge (index!3179 lt!53290) #b00000000000000000000000000000000) (bvslt (index!3179 lt!53290) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53290) ((_ is Found!258) lt!53290) ((_ is MissingZero!258) lt!53290) (not ((_ is MissingVacant!258) lt!53290)) (and (bvsge (index!3182 lt!53290) #b00000000000000000000000000000000) (bvslt (index!3182 lt!53290) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53290) (ite ((_ is Found!258) lt!53290) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!53290)) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!258) lt!53290) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3179 lt!53290)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!258) lt!53290) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!53290)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28265 (= lt!53290 e!67958)))

(declare-fun c!18045 () Bool)

(declare-fun lt!53291 () SeekEntryResult!258)

(assert (=> d!28265 (= c!18045 (and ((_ is Intermediate!258) lt!53291) (undefined!1070 lt!53291)))))

(assert (=> d!28265 (= lt!53291 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (mask!6697 newMap!16)) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(assert (=> d!28265 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28265 (= (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53290)))

(declare-fun b!104355 () Bool)

(declare-fun e!67956 () SeekEntryResult!258)

(assert (=> b!104355 (= e!67956 (seekKeyOrZeroReturnVacant!0 (x!13500 lt!53291) (index!3181 lt!53291) (index!3181 lt!53291) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!104356 () Bool)

(declare-fun e!67957 () SeekEntryResult!258)

(assert (=> b!104356 (= e!67957 (Found!258 (index!3181 lt!53291)))))

(declare-fun b!104357 () Bool)

(assert (=> b!104357 (= e!67958 e!67957)))

(declare-fun lt!53292 () (_ BitVec 64))

(assert (=> b!104357 (= lt!53292 (select (arr!2057 (_keys!4263 newMap!16)) (index!3181 lt!53291)))))

(declare-fun c!18044 () Bool)

(assert (=> b!104357 (= c!18044 (= lt!53292 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104358 () Bool)

(declare-fun c!18046 () Bool)

(assert (=> b!104358 (= c!18046 (= lt!53292 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104358 (= e!67957 e!67956)))

(declare-fun b!104359 () Bool)

(assert (=> b!104359 (= e!67956 (MissingZero!258 (index!3181 lt!53291)))))

(assert (= (and d!28265 c!18045) b!104354))

(assert (= (and d!28265 (not c!18045)) b!104357))

(assert (= (and b!104357 c!18044) b!104356))

(assert (= (and b!104357 (not c!18044)) b!104358))

(assert (= (and b!104358 c!18046) b!104359))

(assert (= (and b!104358 (not c!18046)) b!104355))

(declare-fun m!115871 () Bool)

(assert (=> d!28265 m!115871))

(assert (=> d!28265 m!114525))

(declare-fun m!115873 () Bool)

(assert (=> d!28265 m!115873))

(declare-fun m!115875 () Bool)

(assert (=> d!28265 m!115875))

(declare-fun m!115877 () Bool)

(assert (=> d!28265 m!115877))

(declare-fun m!115879 () Bool)

(assert (=> d!28265 m!115879))

(assert (=> d!28265 m!114525))

(assert (=> d!28265 m!115871))

(assert (=> d!28265 m!114575))

(assert (=> b!104355 m!114525))

(declare-fun m!115881 () Bool)

(assert (=> b!104355 m!115881))

(declare-fun m!115883 () Bool)

(assert (=> b!104357 m!115883))

(assert (=> b!103634 d!28265))

(declare-fun d!28267 () Bool)

(assert (=> d!28267 (= (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52730)) (v!2880 (getValueByKey!155 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52730)))))

(assert (=> d!27959 d!28267))

(declare-fun d!28269 () Bool)

(declare-fun c!18047 () Bool)

(assert (=> d!28269 (= c!18047 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52730)))))

(declare-fun e!67959 () Option!161)

(assert (=> d!28269 (= (getValueByKey!155 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52730) e!67959)))

(declare-fun b!104361 () Bool)

(declare-fun e!67960 () Option!161)

(assert (=> b!104361 (= e!67959 e!67960)))

(declare-fun c!18048 () Bool)

(assert (=> b!104361 (= c!18048 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52730))))))

(declare-fun b!104362 () Bool)

(assert (=> b!104362 (= e!67960 (getValueByKey!155 (t!5673 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!52730))))

(declare-fun b!104363 () Bool)

(assert (=> b!104363 (= e!67960 None!159)))

(declare-fun b!104360 () Bool)

(assert (=> b!104360 (= e!67959 (Some!160 (_2!1211 (h!2203 (toList!800 (+!141 lt!52718 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(assert (= (and d!28269 c!18047) b!104360))

(assert (= (and d!28269 (not c!18047)) b!104361))

(assert (= (and b!104361 c!18048) b!104362))

(assert (= (and b!104361 (not c!18048)) b!104363))

(declare-fun m!115885 () Bool)

(assert (=> b!104362 m!115885))

(assert (=> d!27959 d!28269))

(declare-fun d!28271 () Bool)

(assert (=> d!28271 (= (get!1326 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2880 (getValueByKey!155 (toList!800 lt!52728) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!27821 d!28271))

(assert (=> d!27821 d!28125))

(declare-fun d!28273 () Bool)

(assert (=> d!28273 (= ($colon$colon!80 e!67575 (ite c!17893 (h!2203 (toList!800 (+!141 lt!52539 lt!52538))) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540)))) (Cons!1607 (ite c!17893 (h!2203 (toList!800 (+!141 lt!52539 lt!52538))) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))) e!67575))))

(assert (=> bm!10900 d!28273))

(declare-fun d!28275 () Bool)

(declare-fun res!52060 () Bool)

(declare-fun e!67961 () Bool)

(assert (=> d!28275 (=> res!52060 e!67961)))

(assert (=> d!28275 (= res!52060 (and ((_ is Cons!1607) (toList!800 lt!52783)) (= (_1!1211 (h!2203 (toList!800 lt!52783))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28275 (= (containsKey!159 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000) e!67961)))

(declare-fun b!104364 () Bool)

(declare-fun e!67962 () Bool)

(assert (=> b!104364 (= e!67961 e!67962)))

(declare-fun res!52061 () Bool)

(assert (=> b!104364 (=> (not res!52061) (not e!67962))))

(assert (=> b!104364 (= res!52061 (and (or (not ((_ is Cons!1607) (toList!800 lt!52783))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52783))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1607) (toList!800 lt!52783)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52783))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104365 () Bool)

(assert (=> b!104365 (= e!67962 (containsKey!159 (t!5673 (toList!800 lt!52783)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28275 (not res!52060)) b!104364))

(assert (= (and b!104364 res!52061) b!104365))

(declare-fun m!115887 () Bool)

(assert (=> b!104365 m!115887))

(assert (=> d!27887 d!28275))

(declare-fun d!28277 () Bool)

(assert (=> d!28277 (isDefined!108 (getValueByKey!155 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun lt!53293 () Unit!3150)

(assert (=> d!28277 (= lt!53293 (choose!649 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun e!67963 () Bool)

(assert (=> d!28277 e!67963))

(declare-fun res!52062 () Bool)

(assert (=> d!28277 (=> (not res!52062) (not e!67963))))

(assert (=> d!28277 (= res!52062 (isStrictlySorted!308 (toList!800 call!10827)))))

(assert (=> d!28277 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53293)))

(declare-fun b!104366 () Bool)

(assert (=> b!104366 (= e!67963 (containsKey!159 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28277 res!52062) b!104366))

(assert (=> d!28277 m!114165))

(assert (=> d!28277 m!114835))

(assert (=> d!28277 m!114835))

(assert (=> d!28277 m!114837))

(assert (=> d!28277 m!114165))

(declare-fun m!115889 () Bool)

(assert (=> d!28277 m!115889))

(declare-fun m!115891 () Bool)

(assert (=> d!28277 m!115891))

(assert (=> b!104366 m!114165))

(assert (=> b!104366 m!114831))

(assert (=> b!103802 d!28277))

(assert (=> b!103802 d!28249))

(assert (=> b!103802 d!28251))

(declare-fun d!28279 () Bool)

(assert (=> d!28279 (= (size!2315 newMap!16) (bvadd (_size!496 newMap!16) (bvsdiv (bvadd (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!103648 d!28279))

(assert (=> d!27969 d!27983))

(assert (=> d!27969 d!27967))

(declare-fun d!28281 () Bool)

(assert (=> d!28281 (contains!824 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!52731)))

(assert (=> d!28281 true))

(declare-fun _$35!345 () Unit!3150)

(assert (=> d!28281 (= (choose!646 lt!52722 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) lt!52731) _$35!345)))

(declare-fun bs!4293 () Bool)

(assert (= bs!4293 d!28281))

(assert (=> bs!4293 m!114361))

(assert (=> bs!4293 m!114361))

(assert (=> bs!4293 m!114375))

(assert (=> d!27969 d!28281))

(declare-fun d!28283 () Bool)

(declare-fun e!67965 () Bool)

(assert (=> d!28283 e!67965))

(declare-fun res!52063 () Bool)

(assert (=> d!28283 (=> res!52063 e!67965)))

(declare-fun lt!53294 () Bool)

(assert (=> d!28283 (= res!52063 (not lt!53294))))

(declare-fun lt!53295 () Bool)

(assert (=> d!28283 (= lt!53294 lt!53295)))

(declare-fun lt!53296 () Unit!3150)

(declare-fun e!67964 () Unit!3150)

(assert (=> d!28283 (= lt!53296 e!67964)))

(declare-fun c!18049 () Bool)

(assert (=> d!28283 (= c!18049 lt!53295)))

(assert (=> d!28283 (= lt!53295 (containsKey!159 (toList!800 lt!52722) lt!52731))))

(assert (=> d!28283 (= (contains!824 lt!52722 lt!52731) lt!53294)))

(declare-fun b!104368 () Bool)

(declare-fun lt!53297 () Unit!3150)

(assert (=> b!104368 (= e!67964 lt!53297)))

(assert (=> b!104368 (= lt!53297 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52722) lt!52731))))

(assert (=> b!104368 (isDefined!108 (getValueByKey!155 (toList!800 lt!52722) lt!52731))))

(declare-fun b!104369 () Bool)

(declare-fun Unit!3193 () Unit!3150)

(assert (=> b!104369 (= e!67964 Unit!3193)))

(declare-fun b!104370 () Bool)

(assert (=> b!104370 (= e!67965 (isDefined!108 (getValueByKey!155 (toList!800 lt!52722) lt!52731)))))

(assert (= (and d!28283 c!18049) b!104368))

(assert (= (and d!28283 (not c!18049)) b!104369))

(assert (= (and d!28283 (not res!52063)) b!104370))

(declare-fun m!115893 () Bool)

(assert (=> d!28283 m!115893))

(declare-fun m!115895 () Bool)

(assert (=> b!104368 m!115895))

(declare-fun m!115897 () Bool)

(assert (=> b!104368 m!115897))

(assert (=> b!104368 m!115897))

(declare-fun m!115899 () Bool)

(assert (=> b!104368 m!115899))

(assert (=> b!104370 m!115897))

(assert (=> b!104370 m!115897))

(assert (=> b!104370 m!115899))

(assert (=> d!27969 d!28283))

(declare-fun d!28285 () Bool)

(declare-fun e!67967 () Bool)

(assert (=> d!28285 e!67967))

(declare-fun res!52064 () Bool)

(assert (=> d!28285 (=> res!52064 e!67967)))

(declare-fun lt!53298 () Bool)

(assert (=> d!28285 (= res!52064 (not lt!53298))))

(declare-fun lt!53299 () Bool)

(assert (=> d!28285 (= lt!53298 lt!53299)))

(declare-fun lt!53300 () Unit!3150)

(declare-fun e!67966 () Unit!3150)

(assert (=> d!28285 (= lt!53300 e!67966)))

(declare-fun c!18050 () Bool)

(assert (=> d!28285 (= c!18050 lt!53299)))

(assert (=> d!28285 (= lt!53299 (containsKey!159 (toList!800 lt!52817) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28285 (= (contains!824 lt!52817 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53298)))

(declare-fun b!104371 () Bool)

(declare-fun lt!53301 () Unit!3150)

(assert (=> b!104371 (= e!67966 lt!53301)))

(assert (=> b!104371 (= lt!53301 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52817) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104371 (isDefined!108 (getValueByKey!155 (toList!800 lt!52817) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104372 () Bool)

(declare-fun Unit!3194 () Unit!3150)

(assert (=> b!104372 (= e!67966 Unit!3194)))

(declare-fun b!104373 () Bool)

(assert (=> b!104373 (= e!67967 (isDefined!108 (getValueByKey!155 (toList!800 lt!52817) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28285 c!18050) b!104371))

(assert (= (and d!28285 (not c!18050)) b!104372))

(assert (= (and d!28285 (not res!52064)) b!104373))

(declare-fun m!115901 () Bool)

(assert (=> d!28285 m!115901))

(declare-fun m!115903 () Bool)

(assert (=> b!104371 m!115903))

(declare-fun m!115905 () Bool)

(assert (=> b!104371 m!115905))

(assert (=> b!104371 m!115905))

(declare-fun m!115907 () Bool)

(assert (=> b!104371 m!115907))

(assert (=> b!104373 m!115905))

(assert (=> b!104373 m!115905))

(assert (=> b!104373 m!115907))

(assert (=> bm!10875 d!28285))

(declare-fun b!104374 () Bool)

(declare-fun e!67972 () List!1611)

(declare-fun e!67968 () List!1611)

(assert (=> b!104374 (= e!67972 e!67968)))

(declare-fun c!18052 () Bool)

(assert (=> b!104374 (= c!18052 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52539))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539)))) (_1!1211 lt!52538))))))

(declare-fun b!104375 () Bool)

(declare-fun call!10966 () List!1611)

(assert (=> b!104375 (= e!67968 call!10966)))

(declare-fun bm!10962 () Bool)

(declare-fun call!10967 () List!1611)

(assert (=> bm!10962 (= call!10966 call!10967)))

(declare-fun c!18054 () Bool)

(declare-fun e!67969 () List!1611)

(declare-fun b!104377 () Bool)

(assert (=> b!104377 (= e!67969 (ite c!18052 (t!5673 (t!5673 (toList!800 lt!52539))) (ite c!18054 (Cons!1607 (h!2203 (t!5673 (toList!800 lt!52539))) (t!5673 (t!5673 (toList!800 lt!52539)))) Nil!1608)))))

(declare-fun bm!10963 () Bool)

(declare-fun call!10965 () List!1611)

(assert (=> bm!10963 (= call!10965 call!10966)))

(declare-fun b!104378 () Bool)

(assert (=> b!104378 (= e!67969 (insertStrictlySorted!74 (t!5673 (t!5673 (toList!800 lt!52539))) (_1!1211 lt!52538) (_2!1211 lt!52538)))))

(declare-fun c!18053 () Bool)

(declare-fun bm!10964 () Bool)

(assert (=> bm!10964 (= call!10967 ($colon$colon!80 e!67969 (ite c!18053 (h!2203 (t!5673 (toList!800 lt!52539))) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538)))))))

(declare-fun c!18051 () Bool)

(assert (=> bm!10964 (= c!18051 c!18053)))

(declare-fun b!104379 () Bool)

(declare-fun e!67970 () List!1611)

(assert (=> b!104379 (= e!67970 call!10965)))

(declare-fun b!104380 () Bool)

(assert (=> b!104380 (= c!18054 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52539))) (bvsgt (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539)))) (_1!1211 lt!52538))))))

(assert (=> b!104380 (= e!67968 e!67970)))

(declare-fun b!104381 () Bool)

(assert (=> b!104381 (= e!67972 call!10967)))

(declare-fun d!28287 () Bool)

(declare-fun e!67971 () Bool)

(assert (=> d!28287 e!67971))

(declare-fun res!52065 () Bool)

(assert (=> d!28287 (=> (not res!52065) (not e!67971))))

(declare-fun lt!53302 () List!1611)

(assert (=> d!28287 (= res!52065 (isStrictlySorted!308 lt!53302))))

(assert (=> d!28287 (= lt!53302 e!67972)))

(assert (=> d!28287 (= c!18053 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52539))) (bvslt (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539)))) (_1!1211 lt!52538))))))

(assert (=> d!28287 (isStrictlySorted!308 (t!5673 (toList!800 lt!52539)))))

(assert (=> d!28287 (= (insertStrictlySorted!74 (t!5673 (toList!800 lt!52539)) (_1!1211 lt!52538) (_2!1211 lt!52538)) lt!53302)))

(declare-fun b!104376 () Bool)

(assert (=> b!104376 (= e!67970 call!10965)))

(declare-fun b!104382 () Bool)

(assert (=> b!104382 (= e!67971 (contains!826 lt!53302 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!104383 () Bool)

(declare-fun res!52066 () Bool)

(assert (=> b!104383 (=> (not res!52066) (not e!67971))))

(assert (=> b!104383 (= res!52066 (containsKey!159 lt!53302 (_1!1211 lt!52538)))))

(assert (= (and d!28287 c!18053) b!104381))

(assert (= (and d!28287 (not c!18053)) b!104374))

(assert (= (and b!104374 c!18052) b!104375))

(assert (= (and b!104374 (not c!18052)) b!104380))

(assert (= (and b!104380 c!18054) b!104376))

(assert (= (and b!104380 (not c!18054)) b!104379))

(assert (= (or b!104376 b!104379) bm!10963))

(assert (= (or b!104375 bm!10963) bm!10962))

(assert (= (or b!104381 bm!10962) bm!10964))

(assert (= (and bm!10964 c!18051) b!104378))

(assert (= (and bm!10964 (not c!18051)) b!104377))

(assert (= (and d!28287 res!52065) b!104383))

(assert (= (and b!104383 res!52066) b!104382))

(declare-fun m!115909 () Bool)

(assert (=> b!104382 m!115909))

(declare-fun m!115911 () Bool)

(assert (=> b!104378 m!115911))

(declare-fun m!115913 () Bool)

(assert (=> bm!10964 m!115913))

(declare-fun m!115915 () Bool)

(assert (=> d!28287 m!115915))

(assert (=> d!28287 m!115641))

(declare-fun m!115917 () Bool)

(assert (=> b!104383 m!115917))

(assert (=> b!103595 d!28287))

(assert (=> d!27833 d!27789))

(declare-fun d!28289 () Bool)

(declare-fun c!18055 () Bool)

(assert (=> d!28289 (= c!18055 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52764))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52764)))) (_1!1211 lt!52540))))))

(declare-fun e!67973 () Option!161)

(assert (=> d!28289 (= (getValueByKey!155 (t!5673 (toList!800 lt!52764)) (_1!1211 lt!52540)) e!67973)))

(declare-fun b!104385 () Bool)

(declare-fun e!67974 () Option!161)

(assert (=> b!104385 (= e!67973 e!67974)))

(declare-fun c!18056 () Bool)

(assert (=> b!104385 (= c!18056 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52764))) (not (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52764)))) (_1!1211 lt!52540)))))))

(declare-fun b!104386 () Bool)

(assert (=> b!104386 (= e!67974 (getValueByKey!155 (t!5673 (t!5673 (toList!800 lt!52764))) (_1!1211 lt!52540)))))

(declare-fun b!104387 () Bool)

(assert (=> b!104387 (= e!67974 None!159)))

(declare-fun b!104384 () Bool)

(assert (=> b!104384 (= e!67973 (Some!160 (_2!1211 (h!2203 (t!5673 (toList!800 lt!52764))))))))

(assert (= (and d!28289 c!18055) b!104384))

(assert (= (and d!28289 (not c!18055)) b!104385))

(assert (= (and b!104385 c!18056) b!104386))

(assert (= (and b!104385 (not c!18056)) b!104387))

(declare-fun m!115919 () Bool)

(assert (=> b!104386 m!115919))

(assert (=> b!103721 d!28289))

(declare-fun d!28291 () Bool)

(declare-fun res!52067 () Bool)

(declare-fun e!67975 () Bool)

(assert (=> d!28291 (=> res!52067 e!67975)))

(assert (=> d!28291 (= res!52067 (and ((_ is Cons!1607) (toList!800 lt!52793)) (= (_1!1211 (h!2203 (toList!800 lt!52793))) (_1!1211 lt!52538))))))

(assert (=> d!28291 (= (containsKey!159 (toList!800 lt!52793) (_1!1211 lt!52538)) e!67975)))

(declare-fun b!104388 () Bool)

(declare-fun e!67976 () Bool)

(assert (=> b!104388 (= e!67975 e!67976)))

(declare-fun res!52068 () Bool)

(assert (=> b!104388 (=> (not res!52068) (not e!67976))))

(assert (=> b!104388 (= res!52068 (and (or (not ((_ is Cons!1607) (toList!800 lt!52793))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52793))) (_1!1211 lt!52538))) ((_ is Cons!1607) (toList!800 lt!52793)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52793))) (_1!1211 lt!52538))))))

(declare-fun b!104389 () Bool)

(assert (=> b!104389 (= e!67976 (containsKey!159 (t!5673 (toList!800 lt!52793)) (_1!1211 lt!52538)))))

(assert (= (and d!28291 (not res!52067)) b!104388))

(assert (= (and b!104388 res!52068) b!104389))

(declare-fun m!115921 () Bool)

(assert (=> b!104389 m!115921))

(assert (=> d!27851 d!28291))

(declare-fun d!28293 () Bool)

(declare-fun lt!53303 () Bool)

(assert (=> d!28293 (= lt!53303 (select (content!108 (t!5673 (toList!800 lt!52757))) lt!52538))))

(declare-fun e!67978 () Bool)

(assert (=> d!28293 (= lt!53303 e!67978)))

(declare-fun res!52069 () Bool)

(assert (=> d!28293 (=> (not res!52069) (not e!67978))))

(assert (=> d!28293 (= res!52069 ((_ is Cons!1607) (t!5673 (toList!800 lt!52757))))))

(assert (=> d!28293 (= (contains!826 (t!5673 (toList!800 lt!52757)) lt!52538) lt!53303)))

(declare-fun b!104390 () Bool)

(declare-fun e!67977 () Bool)

(assert (=> b!104390 (= e!67978 e!67977)))

(declare-fun res!52070 () Bool)

(assert (=> b!104390 (=> res!52070 e!67977)))

(assert (=> b!104390 (= res!52070 (= (h!2203 (t!5673 (toList!800 lt!52757))) lt!52538))))

(declare-fun b!104391 () Bool)

(assert (=> b!104391 (= e!67977 (contains!826 (t!5673 (t!5673 (toList!800 lt!52757))) lt!52538))))

(assert (= (and d!28293 res!52069) b!104390))

(assert (= (and b!104390 (not res!52070)) b!104391))

(assert (=> d!28293 m!115853))

(declare-fun m!115923 () Bool)

(assert (=> d!28293 m!115923))

(declare-fun m!115925 () Bool)

(assert (=> b!104391 m!115925))

(assert (=> b!103974 d!28293))

(declare-fun d!28295 () Bool)

(declare-fun c!18057 () Bool)

(assert (=> d!28295 (= c!18057 (and ((_ is Cons!1607) (toList!800 lt!53048)) (= (_1!1211 (h!2203 (toList!800 lt!53048))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!67979 () Option!161)

(assert (=> d!28295 (= (getValueByKey!155 (toList!800 lt!53048) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!67979)))

(declare-fun b!104393 () Bool)

(declare-fun e!67980 () Option!161)

(assert (=> b!104393 (= e!67979 e!67980)))

(declare-fun c!18058 () Bool)

(assert (=> b!104393 (= c!18058 (and ((_ is Cons!1607) (toList!800 lt!53048)) (not (= (_1!1211 (h!2203 (toList!800 lt!53048))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104394 () Bool)

(assert (=> b!104394 (= e!67980 (getValueByKey!155 (t!5673 (toList!800 lt!53048)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104395 () Bool)

(assert (=> b!104395 (= e!67980 None!159)))

(declare-fun b!104392 () Bool)

(assert (=> b!104392 (= e!67979 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53048)))))))

(assert (= (and d!28295 c!18057) b!104392))

(assert (= (and d!28295 (not c!18057)) b!104393))

(assert (= (and b!104393 c!18058) b!104394))

(assert (= (and b!104393 (not c!18058)) b!104395))

(declare-fun m!115927 () Bool)

(assert (=> b!104394 m!115927))

(assert (=> b!103884 d!28295))

(declare-fun d!28297 () Bool)

(declare-fun lt!53304 () Bool)

(assert (=> d!28297 (= lt!53304 (select (content!108 lt!52790) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun e!67982 () Bool)

(assert (=> d!28297 (= lt!53304 e!67982)))

(declare-fun res!52071 () Bool)

(assert (=> d!28297 (=> (not res!52071) (not e!67982))))

(assert (=> d!28297 (= res!52071 ((_ is Cons!1607) lt!52790))))

(assert (=> d!28297 (= (contains!826 lt!52790 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))) lt!53304)))

(declare-fun b!104396 () Bool)

(declare-fun e!67981 () Bool)

(assert (=> b!104396 (= e!67982 e!67981)))

(declare-fun res!52072 () Bool)

(assert (=> b!104396 (=> res!52072 e!67981)))

(assert (=> b!104396 (= res!52072 (= (h!2203 lt!52790) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!104397 () Bool)

(assert (=> b!104397 (= e!67981 (contains!826 (t!5673 lt!52790) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(assert (= (and d!28297 res!52071) b!104396))

(assert (= (and b!104396 (not res!52072)) b!104397))

(declare-fun m!115929 () Bool)

(assert (=> d!28297 m!115929))

(declare-fun m!115931 () Bool)

(assert (=> d!28297 m!115931))

(declare-fun m!115933 () Bool)

(assert (=> b!104397 m!115933))

(assert (=> b!103752 d!28297))

(declare-fun d!28299 () Bool)

(declare-fun e!67983 () Bool)

(assert (=> d!28299 e!67983))

(declare-fun res!52074 () Bool)

(assert (=> d!28299 (=> (not res!52074) (not e!67983))))

(declare-fun lt!53306 () ListLongMap!1569)

(assert (=> d!28299 (= res!52074 (contains!824 lt!53306 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(declare-fun lt!53307 () List!1611)

(assert (=> d!28299 (= lt!53306 (ListLongMap!1570 lt!53307))))

(declare-fun lt!53305 () Unit!3150)

(declare-fun lt!53308 () Unit!3150)

(assert (=> d!28299 (= lt!53305 lt!53308)))

(assert (=> d!28299 (= (getValueByKey!155 lt!53307 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28299 (= lt!53308 (lemmaContainsTupThenGetReturnValue!71 lt!53307 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28299 (= lt!53307 (insertStrictlySorted!74 (toList!800 call!10911) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28299 (= (+!141 call!10911 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!53306)))

(declare-fun b!104398 () Bool)

(declare-fun res!52073 () Bool)

(assert (=> b!104398 (=> (not res!52073) (not e!67983))))

(assert (=> b!104398 (= res!52073 (= (getValueByKey!155 (toList!800 lt!53306) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(declare-fun b!104399 () Bool)

(assert (=> b!104399 (= e!67983 (contains!826 (toList!800 lt!53306) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))

(assert (= (and d!28299 res!52074) b!104398))

(assert (= (and b!104398 res!52073) b!104399))

(declare-fun m!115935 () Bool)

(assert (=> d!28299 m!115935))

(declare-fun m!115937 () Bool)

(assert (=> d!28299 m!115937))

(declare-fun m!115939 () Bool)

(assert (=> d!28299 m!115939))

(declare-fun m!115941 () Bool)

(assert (=> d!28299 m!115941))

(declare-fun m!115943 () Bool)

(assert (=> b!104398 m!115943))

(declare-fun m!115945 () Bool)

(assert (=> b!104399 m!115945))

(assert (=> b!103776 d!28299))

(declare-fun b!104400 () Bool)

(declare-fun e!67985 () Bool)

(declare-fun call!10968 () Bool)

(assert (=> b!104400 (= e!67985 call!10968)))

(declare-fun b!104401 () Bool)

(declare-fun e!67986 () Bool)

(assert (=> b!104401 (= e!67986 (contains!825 Nil!1607 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(declare-fun b!104402 () Bool)

(assert (=> b!104402 (= e!67985 call!10968)))

(declare-fun b!104403 () Bool)

(declare-fun e!67987 () Bool)

(assert (=> b!104403 (= e!67987 e!67985)))

(declare-fun c!18059 () Bool)

(assert (=> b!104403 (= c!18059 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(declare-fun d!28301 () Bool)

(declare-fun res!52077 () Bool)

(declare-fun e!67984 () Bool)

(assert (=> d!28301 (=> res!52077 e!67984)))

(assert (=> d!28301 (= res!52077 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(assert (=> d!28301 (= (arrayNoDuplicates!0 (_keys!4263 (_2!1212 lt!52658)) #b00000000000000000000000000000000 Nil!1607) e!67984)))

(declare-fun bm!10965 () Bool)

(assert (=> bm!10965 (= call!10968 (arrayNoDuplicates!0 (_keys!4263 (_2!1212 lt!52658)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18059 (Cons!1606 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000) Nil!1607) Nil!1607)))))

(declare-fun b!104404 () Bool)

(assert (=> b!104404 (= e!67984 e!67987)))

(declare-fun res!52076 () Bool)

(assert (=> b!104404 (=> (not res!52076) (not e!67987))))

(assert (=> b!104404 (= res!52076 (not e!67986))))

(declare-fun res!52075 () Bool)

(assert (=> b!104404 (=> (not res!52075) (not e!67986))))

(assert (=> b!104404 (= res!52075 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(assert (= (and d!28301 (not res!52077)) b!104404))

(assert (= (and b!104404 res!52075) b!104401))

(assert (= (and b!104404 res!52076) b!104403))

(assert (= (and b!104403 c!18059) b!104400))

(assert (= (and b!104403 (not c!18059)) b!104402))

(assert (= (or b!104400 b!104402) bm!10965))

(declare-fun m!115947 () Bool)

(assert (=> b!104401 m!115947))

(assert (=> b!104401 m!115947))

(declare-fun m!115949 () Bool)

(assert (=> b!104401 m!115949))

(assert (=> b!104403 m!115947))

(assert (=> b!104403 m!115947))

(declare-fun m!115951 () Bool)

(assert (=> b!104403 m!115951))

(assert (=> bm!10965 m!115947))

(declare-fun m!115953 () Bool)

(assert (=> bm!10965 m!115953))

(assert (=> b!104404 m!115947))

(assert (=> b!104404 m!115947))

(assert (=> b!104404 m!115951))

(assert (=> b!103948 d!28301))

(declare-fun d!28303 () Bool)

(declare-fun res!52078 () Bool)

(declare-fun e!67988 () Bool)

(assert (=> d!28303 (=> res!52078 e!67988)))

(assert (=> d!28303 (= res!52078 (and ((_ is Cons!1607) (toList!800 call!10817)) (= (_1!1211 (h!2203 (toList!800 call!10817))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))))

(assert (=> d!28303 (= (containsKey!159 (toList!800 call!10817) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))) e!67988)))

(declare-fun b!104405 () Bool)

(declare-fun e!67989 () Bool)

(assert (=> b!104405 (= e!67988 e!67989)))

(declare-fun res!52079 () Bool)

(assert (=> b!104405 (=> (not res!52079) (not e!67989))))

(assert (=> b!104405 (= res!52079 (and (or (not ((_ is Cons!1607) (toList!800 call!10817))) (bvsle (_1!1211 (h!2203 (toList!800 call!10817))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))) ((_ is Cons!1607) (toList!800 call!10817)) (bvslt (_1!1211 (h!2203 (toList!800 call!10817))) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))))

(declare-fun b!104406 () Bool)

(assert (=> b!104406 (= e!67989 (containsKey!159 (t!5673 (toList!800 call!10817)) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655))))))

(assert (= (and d!28303 (not res!52078)) b!104405))

(assert (= (and b!104405 res!52079) b!104406))

(assert (=> b!104406 m!114297))

(declare-fun m!115955 () Bool)

(assert (=> b!104406 m!115955))

(assert (=> d!27925 d!28303))

(declare-fun d!28305 () Bool)

(declare-fun e!67991 () Bool)

(assert (=> d!28305 e!67991))

(declare-fun res!52080 () Bool)

(assert (=> d!28305 (=> res!52080 e!67991)))

(declare-fun lt!53309 () Bool)

(assert (=> d!28305 (= res!52080 (not lt!53309))))

(declare-fun lt!53310 () Bool)

(assert (=> d!28305 (= lt!53309 lt!53310)))

(declare-fun lt!53311 () Unit!3150)

(declare-fun e!67990 () Unit!3150)

(assert (=> d!28305 (= lt!53311 e!67990)))

(declare-fun c!18060 () Bool)

(assert (=> d!28305 (= c!18060 lt!53310)))

(assert (=> d!28305 (= lt!53310 (containsKey!159 (toList!800 lt!52956) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> d!28305 (= (contains!824 lt!52956 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) lt!53309)))

(declare-fun b!104407 () Bool)

(declare-fun lt!53312 () Unit!3150)

(assert (=> b!104407 (= e!67990 lt!53312)))

(assert (=> b!104407 (= lt!53312 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52956) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!104407 (isDefined!108 (getValueByKey!155 (toList!800 lt!52956) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104408 () Bool)

(declare-fun Unit!3195 () Unit!3150)

(assert (=> b!104408 (= e!67990 Unit!3195)))

(declare-fun b!104409 () Bool)

(assert (=> b!104409 (= e!67991 (isDefined!108 (getValueByKey!155 (toList!800 lt!52956) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))))

(assert (= (and d!28305 c!18060) b!104407))

(assert (= (and d!28305 (not c!18060)) b!104408))

(assert (= (and d!28305 (not res!52080)) b!104409))

(assert (=> d!28305 m!114691))

(declare-fun m!115957 () Bool)

(assert (=> d!28305 m!115957))

(assert (=> b!104407 m!114691))

(declare-fun m!115959 () Bool)

(assert (=> b!104407 m!115959))

(assert (=> b!104407 m!114691))

(assert (=> b!104407 m!115445))

(assert (=> b!104407 m!115445))

(declare-fun m!115961 () Bool)

(assert (=> b!104407 m!115961))

(assert (=> b!104409 m!114691))

(assert (=> b!104409 m!115445))

(assert (=> b!104409 m!115445))

(assert (=> b!104409 m!115961))

(assert (=> b!103768 d!28305))

(declare-fun d!28307 () Bool)

(assert (=> d!28307 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53313 () Unit!3150)

(assert (=> d!28307 (= lt!53313 (choose!649 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!67992 () Bool)

(assert (=> d!28307 e!67992))

(declare-fun res!52081 () Bool)

(assert (=> d!28307 (=> (not res!52081) (not e!67992))))

(assert (=> d!28307 (= res!52081 (isStrictlySorted!308 (toList!800 lt!52783)))))

(assert (=> d!28307 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000) lt!53313)))

(declare-fun b!104410 () Bool)

(assert (=> b!104410 (= e!67992 (containsKey!159 (toList!800 lt!52783) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28307 res!52081) b!104410))

(assert (=> d!28307 m!114917))

(assert (=> d!28307 m!114917))

(assert (=> d!28307 m!114919))

(declare-fun m!115963 () Bool)

(assert (=> d!28307 m!115963))

(assert (=> d!28307 m!115379))

(assert (=> b!104410 m!114913))

(assert (=> b!103854 d!28307))

(assert (=> b!103854 d!28149))

(assert (=> b!103854 d!28151))

(declare-fun d!28309 () Bool)

(declare-fun e!67993 () Bool)

(assert (=> d!28309 e!67993))

(declare-fun res!52083 () Bool)

(assert (=> d!28309 (=> (not res!52083) (not e!67993))))

(declare-fun lt!53315 () ListLongMap!1569)

(assert (=> d!28309 (= res!52083 (contains!824 lt!53315 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun lt!53316 () List!1611)

(assert (=> d!28309 (= lt!53315 (ListLongMap!1570 lt!53316))))

(declare-fun lt!53314 () Unit!3150)

(declare-fun lt!53317 () Unit!3150)

(assert (=> d!28309 (= lt!53314 lt!53317)))

(assert (=> d!28309 (= (getValueByKey!155 lt!53316 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28309 (= lt!53317 (lemmaContainsTupThenGetReturnValue!71 lt!53316 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28309 (= lt!53316 (insertStrictlySorted!74 (toList!800 call!10918) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (=> d!28309 (= (+!141 call!10918 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))) lt!53315)))

(declare-fun b!104411 () Bool)

(declare-fun res!52082 () Bool)

(assert (=> b!104411 (=> (not res!52082) (not e!67993))))

(assert (=> b!104411 (= res!52082 (= (getValueByKey!155 (toList!800 lt!53315) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun b!104412 () Bool)

(assert (=> b!104412 (= e!67993 (contains!826 (toList!800 lt!53315) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(assert (= (and d!28309 res!52083) b!104411))

(assert (= (and b!104411 res!52082) b!104412))

(declare-fun m!115965 () Bool)

(assert (=> d!28309 m!115965))

(declare-fun m!115967 () Bool)

(assert (=> d!28309 m!115967))

(declare-fun m!115969 () Bool)

(assert (=> d!28309 m!115969))

(declare-fun m!115971 () Bool)

(assert (=> d!28309 m!115971))

(declare-fun m!115973 () Bool)

(assert (=> b!104411 m!115973))

(declare-fun m!115975 () Bool)

(assert (=> b!104412 m!115975))

(assert (=> b!103810 d!28309))

(declare-fun d!28311 () Bool)

(declare-fun res!52084 () Bool)

(declare-fun e!67994 () Bool)

(assert (=> d!28311 (=> res!52084 e!67994)))

(assert (=> d!28311 (= res!52084 (or ((_ is Nil!1608) lt!53030) ((_ is Nil!1608) (t!5673 lt!53030))))))

(assert (=> d!28311 (= (isStrictlySorted!308 lt!53030) e!67994)))

(declare-fun b!104413 () Bool)

(declare-fun e!67995 () Bool)

(assert (=> b!104413 (= e!67994 e!67995)))

(declare-fun res!52085 () Bool)

(assert (=> b!104413 (=> (not res!52085) (not e!67995))))

(assert (=> b!104413 (= res!52085 (bvslt (_1!1211 (h!2203 lt!53030)) (_1!1211 (h!2203 (t!5673 lt!53030)))))))

(declare-fun b!104414 () Bool)

(assert (=> b!104414 (= e!67995 (isStrictlySorted!308 (t!5673 lt!53030)))))

(assert (= (and d!28311 (not res!52084)) b!104413))

(assert (= (and b!104413 res!52085) b!104414))

(declare-fun m!115977 () Bool)

(assert (=> b!104414 m!115977))

(assert (=> d!27895 d!28311))

(assert (=> d!27895 d!28195))

(declare-fun d!28313 () Bool)

(declare-fun e!67997 () Bool)

(assert (=> d!28313 e!67997))

(declare-fun res!52086 () Bool)

(assert (=> d!28313 (=> res!52086 e!67997)))

(declare-fun lt!53318 () Bool)

(assert (=> d!28313 (= res!52086 (not lt!53318))))

(declare-fun lt!53319 () Bool)

(assert (=> d!28313 (= lt!53318 lt!53319)))

(declare-fun lt!53320 () Unit!3150)

(declare-fun e!67996 () Unit!3150)

(assert (=> d!28313 (= lt!53320 e!67996)))

(declare-fun c!18061 () Bool)

(assert (=> d!28313 (= c!18061 lt!53319)))

(assert (=> d!28313 (= lt!53319 (containsKey!159 (toList!800 lt!53048) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28313 (= (contains!824 lt!53048 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53318)))

(declare-fun b!104415 () Bool)

(declare-fun lt!53321 () Unit!3150)

(assert (=> b!104415 (= e!67996 lt!53321)))

(assert (=> b!104415 (= lt!53321 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53048) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104415 (isDefined!108 (getValueByKey!155 (toList!800 lt!53048) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104416 () Bool)

(declare-fun Unit!3196 () Unit!3150)

(assert (=> b!104416 (= e!67996 Unit!3196)))

(declare-fun b!104417 () Bool)

(assert (=> b!104417 (= e!67997 (isDefined!108 (getValueByKey!155 (toList!800 lt!53048) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28313 c!18061) b!104415))

(assert (= (and d!28313 (not c!18061)) b!104416))

(assert (= (and d!28313 (not res!52086)) b!104417))

(declare-fun m!115979 () Bool)

(assert (=> d!28313 m!115979))

(declare-fun m!115981 () Bool)

(assert (=> b!104415 m!115981))

(assert (=> b!104415 m!115003))

(assert (=> b!104415 m!115003))

(declare-fun m!115983 () Bool)

(assert (=> b!104415 m!115983))

(assert (=> b!104417 m!115003))

(assert (=> b!104417 m!115003))

(assert (=> b!104417 m!115983))

(assert (=> d!27909 d!28313))

(declare-fun d!28315 () Bool)

(declare-fun c!18062 () Bool)

(assert (=> d!28315 (= c!18062 (and ((_ is Cons!1607) lt!53049) (= (_1!1211 (h!2203 lt!53049)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!67998 () Option!161)

(assert (=> d!28315 (= (getValueByKey!155 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!67998)))

(declare-fun b!104419 () Bool)

(declare-fun e!67999 () Option!161)

(assert (=> b!104419 (= e!67998 e!67999)))

(declare-fun c!18063 () Bool)

(assert (=> b!104419 (= c!18063 (and ((_ is Cons!1607) lt!53049) (not (= (_1!1211 (h!2203 lt!53049)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104420 () Bool)

(assert (=> b!104420 (= e!67999 (getValueByKey!155 (t!5673 lt!53049) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104421 () Bool)

(assert (=> b!104421 (= e!67999 None!159)))

(declare-fun b!104418 () Bool)

(assert (=> b!104418 (= e!67998 (Some!160 (_2!1211 (h!2203 lt!53049))))))

(assert (= (and d!28315 c!18062) b!104418))

(assert (= (and d!28315 (not c!18062)) b!104419))

(assert (= (and b!104419 c!18063) b!104420))

(assert (= (and b!104419 (not c!18063)) b!104421))

(declare-fun m!115985 () Bool)

(assert (=> b!104420 m!115985))

(assert (=> d!27909 d!28315))

(declare-fun d!28317 () Bool)

(assert (=> d!28317 (= (getValueByKey!155 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53322 () Unit!3150)

(assert (=> d!28317 (= lt!53322 (choose!639 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68000 () Bool)

(assert (=> d!28317 e!68000))

(declare-fun res!52087 () Bool)

(assert (=> d!28317 (=> (not res!52087) (not e!68000))))

(assert (=> d!28317 (= res!52087 (isStrictlySorted!308 lt!53049))))

(assert (=> d!28317 (= (lemmaContainsTupThenGetReturnValue!71 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53322)))

(declare-fun b!104422 () Bool)

(declare-fun res!52088 () Bool)

(assert (=> b!104422 (=> (not res!52088) (not e!68000))))

(assert (=> b!104422 (= res!52088 (containsKey!159 lt!53049 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104423 () Bool)

(assert (=> b!104423 (= e!68000 (contains!826 lt!53049 (tuple2!2401 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28317 res!52087) b!104422))

(assert (= (and b!104422 res!52088) b!104423))

(assert (=> d!28317 m!114997))

(declare-fun m!115987 () Bool)

(assert (=> d!28317 m!115987))

(declare-fun m!115989 () Bool)

(assert (=> d!28317 m!115989))

(declare-fun m!115991 () Bool)

(assert (=> b!104422 m!115991))

(declare-fun m!115993 () Bool)

(assert (=> b!104423 m!115993))

(assert (=> d!27909 d!28317))

(declare-fun b!104424 () Bool)

(declare-fun e!68005 () List!1611)

(declare-fun e!68001 () List!1611)

(assert (=> b!104424 (= e!68005 e!68001)))

(declare-fun c!18065 () Bool)

(assert (=> b!104424 (= c!18065 (and ((_ is Cons!1607) (toList!800 lt!52539)) (= (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104425 () Bool)

(declare-fun call!10970 () List!1611)

(assert (=> b!104425 (= e!68001 call!10970)))

(declare-fun bm!10966 () Bool)

(declare-fun call!10971 () List!1611)

(assert (=> bm!10966 (= call!10970 call!10971)))

(declare-fun b!104427 () Bool)

(declare-fun c!18067 () Bool)

(declare-fun e!68002 () List!1611)

(assert (=> b!104427 (= e!68002 (ite c!18065 (t!5673 (toList!800 lt!52539)) (ite c!18067 (Cons!1607 (h!2203 (toList!800 lt!52539)) (t!5673 (toList!800 lt!52539))) Nil!1608)))))

(declare-fun bm!10967 () Bool)

(declare-fun call!10969 () List!1611)

(assert (=> bm!10967 (= call!10969 call!10970)))

(declare-fun b!104428 () Bool)

(assert (=> b!104428 (= e!68002 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52539)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun bm!10968 () Bool)

(declare-fun c!18066 () Bool)

(assert (=> bm!10968 (= call!10971 ($colon$colon!80 e!68002 (ite c!18066 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18064 () Bool)

(assert (=> bm!10968 (= c!18064 c!18066)))

(declare-fun b!104429 () Bool)

(declare-fun e!68003 () List!1611)

(assert (=> b!104429 (= e!68003 call!10969)))

(declare-fun b!104430 () Bool)

(assert (=> b!104430 (= c!18067 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104430 (= e!68001 e!68003)))

(declare-fun b!104431 () Bool)

(assert (=> b!104431 (= e!68005 call!10971)))

(declare-fun d!28319 () Bool)

(declare-fun e!68004 () Bool)

(assert (=> d!28319 e!68004))

(declare-fun res!52089 () Bool)

(assert (=> d!28319 (=> (not res!52089) (not e!68004))))

(declare-fun lt!53323 () List!1611)

(assert (=> d!28319 (= res!52089 (isStrictlySorted!308 lt!53323))))

(assert (=> d!28319 (= lt!53323 e!68005)))

(assert (=> d!28319 (= c!18066 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28319 (isStrictlySorted!308 (toList!800 lt!52539))))

(assert (=> d!28319 (= (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53323)))

(declare-fun b!104426 () Bool)

(assert (=> b!104426 (= e!68003 call!10969)))

(declare-fun b!104432 () Bool)

(assert (=> b!104432 (= e!68004 (contains!826 lt!53323 (tuple2!2401 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104433 () Bool)

(declare-fun res!52090 () Bool)

(assert (=> b!104433 (=> (not res!52090) (not e!68004))))

(assert (=> b!104433 (= res!52090 (containsKey!159 lt!53323 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28319 c!18066) b!104431))

(assert (= (and d!28319 (not c!18066)) b!104424))

(assert (= (and b!104424 c!18065) b!104425))

(assert (= (and b!104424 (not c!18065)) b!104430))

(assert (= (and b!104430 c!18067) b!104426))

(assert (= (and b!104430 (not c!18067)) b!104429))

(assert (= (or b!104426 b!104429) bm!10967))

(assert (= (or b!104425 bm!10967) bm!10966))

(assert (= (or b!104431 bm!10966) bm!10968))

(assert (= (and bm!10968 c!18064) b!104428))

(assert (= (and bm!10968 (not c!18064)) b!104427))

(assert (= (and d!28319 res!52089) b!104433))

(assert (= (and b!104433 res!52090) b!104432))

(declare-fun m!115995 () Bool)

(assert (=> b!104432 m!115995))

(declare-fun m!115997 () Bool)

(assert (=> b!104428 m!115997))

(declare-fun m!115999 () Bool)

(assert (=> bm!10968 m!115999))

(declare-fun m!116001 () Bool)

(assert (=> d!28319 m!116001))

(assert (=> d!28319 m!114515))

(declare-fun m!116003 () Bool)

(assert (=> b!104433 m!116003))

(assert (=> d!27909 d!28319))

(declare-fun b!104434 () Bool)

(declare-fun e!68010 () List!1611)

(declare-fun e!68006 () List!1611)

(assert (=> b!104434 (= e!68010 e!68006)))

(declare-fun c!18069 () Bool)

(assert (=> b!104434 (= c!18069 (and ((_ is Cons!1607) (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (= (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))))) (_1!1211 lt!52540))))))

(declare-fun b!104435 () Bool)

(declare-fun call!10973 () List!1611)

(assert (=> b!104435 (= e!68006 call!10973)))

(declare-fun bm!10969 () Bool)

(declare-fun call!10974 () List!1611)

(assert (=> bm!10969 (= call!10973 call!10974)))

(declare-fun e!68007 () List!1611)

(declare-fun c!18071 () Bool)

(declare-fun b!104437 () Bool)

(assert (=> b!104437 (= e!68007 (ite c!18069 (t!5673 (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (ite c!18071 (Cons!1607 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (t!5673 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))))) Nil!1608)))))

(declare-fun bm!10970 () Bool)

(declare-fun call!10972 () List!1611)

(assert (=> bm!10970 (= call!10972 call!10973)))

(declare-fun b!104438 () Bool)

(assert (=> b!104438 (= e!68007 (insertStrictlySorted!74 (t!5673 (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(declare-fun c!18070 () Bool)

(declare-fun bm!10971 () Bool)

(assert (=> bm!10971 (= call!10974 ($colon$colon!80 e!68007 (ite c!18070 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540)))))))

(declare-fun c!18068 () Bool)

(assert (=> bm!10971 (= c!18068 c!18070)))

(declare-fun b!104439 () Bool)

(declare-fun e!68008 () List!1611)

(assert (=> b!104439 (= e!68008 call!10972)))

(declare-fun b!104440 () Bool)

(assert (=> b!104440 (= c!18071 (and ((_ is Cons!1607) (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (bvsgt (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))))) (_1!1211 lt!52540))))))

(assert (=> b!104440 (= e!68006 e!68008)))

(declare-fun b!104441 () Bool)

(assert (=> b!104441 (= e!68010 call!10974)))

(declare-fun d!28321 () Bool)

(declare-fun e!68009 () Bool)

(assert (=> d!28321 e!68009))

(declare-fun res!52091 () Bool)

(assert (=> d!28321 (=> (not res!52091) (not e!68009))))

(declare-fun lt!53324 () List!1611)

(assert (=> d!28321 (= res!52091 (isStrictlySorted!308 lt!53324))))

(assert (=> d!28321 (= lt!53324 e!68010)))

(assert (=> d!28321 (= c!18070 (and ((_ is Cons!1607) (t!5673 (toList!800 (+!141 lt!52539 lt!52538)))) (bvslt (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))))) (_1!1211 lt!52540))))))

(assert (=> d!28321 (isStrictlySorted!308 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))))))

(assert (=> d!28321 (= (insertStrictlySorted!74 (t!5673 (toList!800 (+!141 lt!52539 lt!52538))) (_1!1211 lt!52540) (_2!1211 lt!52540)) lt!53324)))

(declare-fun b!104436 () Bool)

(assert (=> b!104436 (= e!68008 call!10972)))

(declare-fun b!104442 () Bool)

(assert (=> b!104442 (= e!68009 (contains!826 lt!53324 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!104443 () Bool)

(declare-fun res!52092 () Bool)

(assert (=> b!104443 (=> (not res!52092) (not e!68009))))

(assert (=> b!104443 (= res!52092 (containsKey!159 lt!53324 (_1!1211 lt!52540)))))

(assert (= (and d!28321 c!18070) b!104441))

(assert (= (and d!28321 (not c!18070)) b!104434))

(assert (= (and b!104434 c!18069) b!104435))

(assert (= (and b!104434 (not c!18069)) b!104440))

(assert (= (and b!104440 c!18071) b!104436))

(assert (= (and b!104440 (not c!18071)) b!104439))

(assert (= (or b!104436 b!104439) bm!10970))

(assert (= (or b!104435 bm!10970) bm!10969))

(assert (= (or b!104441 bm!10969) bm!10971))

(assert (= (and bm!10971 c!18068) b!104438))

(assert (= (and bm!10971 (not c!18068)) b!104437))

(assert (= (and d!28321 res!52091) b!104443))

(assert (= (and b!104443 res!52092) b!104442))

(declare-fun m!116005 () Bool)

(assert (=> b!104442 m!116005))

(declare-fun m!116007 () Bool)

(assert (=> b!104438 m!116007))

(declare-fun m!116009 () Bool)

(assert (=> bm!10971 m!116009))

(declare-fun m!116011 () Bool)

(assert (=> d!28321 m!116011))

(assert (=> d!28321 m!115487))

(declare-fun m!116013 () Bool)

(assert (=> b!104443 m!116013))

(assert (=> b!103757 d!28321))

(declare-fun d!28323 () Bool)

(declare-fun e!68012 () Bool)

(assert (=> d!28323 e!68012))

(declare-fun res!52093 () Bool)

(assert (=> d!28323 (=> res!52093 e!68012)))

(declare-fun lt!53325 () Bool)

(assert (=> d!28323 (= res!52093 (not lt!53325))))

(declare-fun lt!53326 () Bool)

(assert (=> d!28323 (= lt!53325 lt!53326)))

(declare-fun lt!53327 () Unit!3150)

(declare-fun e!68011 () Unit!3150)

(assert (=> d!28323 (= lt!53327 e!68011)))

(declare-fun c!18072 () Bool)

(assert (=> d!28323 (= c!18072 lt!53326)))

(assert (=> d!28323 (= lt!53326 (containsKey!159 (toList!800 lt!53077) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28323 (= (contains!824 lt!53077 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!53325)))

(declare-fun b!104444 () Bool)

(declare-fun lt!53328 () Unit!3150)

(assert (=> b!104444 (= e!68011 lt!53328)))

(assert (=> b!104444 (= lt!53328 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53077) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104444 (isDefined!108 (getValueByKey!155 (toList!800 lt!53077) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104445 () Bool)

(declare-fun Unit!3197 () Unit!3150)

(assert (=> b!104445 (= e!68011 Unit!3197)))

(declare-fun b!104446 () Bool)

(assert (=> b!104446 (= e!68012 (isDefined!108 (getValueByKey!155 (toList!800 lt!53077) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (= (and d!28323 c!18072) b!104444))

(assert (= (and d!28323 (not c!18072)) b!104445))

(assert (= (and d!28323 (not res!52093)) b!104446))

(declare-fun m!116015 () Bool)

(assert (=> d!28323 m!116015))

(declare-fun m!116017 () Bool)

(assert (=> b!104444 m!116017))

(assert (=> b!104444 m!115077))

(assert (=> b!104444 m!115077))

(declare-fun m!116019 () Bool)

(assert (=> b!104444 m!116019))

(assert (=> b!104446 m!115077))

(assert (=> b!104446 m!115077))

(assert (=> b!104446 m!116019))

(assert (=> d!27935 d!28323))

(declare-fun d!28325 () Bool)

(declare-fun c!18073 () Bool)

(assert (=> d!28325 (= c!18073 (and ((_ is Cons!1607) lt!53078) (= (_1!1211 (h!2203 lt!53078)) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun e!68013 () Option!161)

(assert (=> d!28325 (= (getValueByKey!155 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) e!68013)))

(declare-fun b!104448 () Bool)

(declare-fun e!68014 () Option!161)

(assert (=> b!104448 (= e!68013 e!68014)))

(declare-fun c!18074 () Bool)

(assert (=> b!104448 (= c!18074 (and ((_ is Cons!1607) lt!53078) (not (= (_1!1211 (h!2203 lt!53078)) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun b!104449 () Bool)

(assert (=> b!104449 (= e!68014 (getValueByKey!155 (t!5673 lt!53078) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104450 () Bool)

(assert (=> b!104450 (= e!68014 None!159)))

(declare-fun b!104447 () Bool)

(assert (=> b!104447 (= e!68013 (Some!160 (_2!1211 (h!2203 lt!53078))))))

(assert (= (and d!28325 c!18073) b!104447))

(assert (= (and d!28325 (not c!18073)) b!104448))

(assert (= (and b!104448 c!18074) b!104449))

(assert (= (and b!104448 (not c!18074)) b!104450))

(declare-fun m!116021 () Bool)

(assert (=> b!104449 m!116021))

(assert (=> d!27935 d!28325))

(declare-fun d!28327 () Bool)

(assert (=> d!28327 (= (getValueByKey!155 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (Some!160 (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun lt!53329 () Unit!3150)

(assert (=> d!28327 (= lt!53329 (choose!639 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68015 () Bool)

(assert (=> d!28327 e!68015))

(declare-fun res!52094 () Bool)

(assert (=> d!28327 (=> (not res!52094) (not e!68015))))

(assert (=> d!28327 (= res!52094 (isStrictlySorted!308 lt!53078))))

(assert (=> d!28327 (= (lemmaContainsTupThenGetReturnValue!71 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!53329)))

(declare-fun b!104451 () Bool)

(declare-fun res!52095 () Bool)

(assert (=> b!104451 (=> (not res!52095) (not e!68015))))

(assert (=> b!104451 (= res!52095 (containsKey!159 lt!53078 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104452 () Bool)

(assert (=> b!104452 (= e!68015 (contains!826 lt!53078 (tuple2!2401 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (= (and d!28327 res!52094) b!104451))

(assert (= (and b!104451 res!52095) b!104452))

(assert (=> d!28327 m!115071))

(declare-fun m!116023 () Bool)

(assert (=> d!28327 m!116023))

(declare-fun m!116025 () Bool)

(assert (=> d!28327 m!116025))

(declare-fun m!116027 () Bool)

(assert (=> b!104451 m!116027))

(declare-fun m!116029 () Bool)

(assert (=> b!104452 m!116029))

(assert (=> d!27935 d!28327))

(declare-fun b!104453 () Bool)

(declare-fun e!68020 () List!1611)

(declare-fun e!68016 () List!1611)

(assert (=> b!104453 (= e!68020 e!68016)))

(declare-fun c!18076 () Bool)

(assert (=> b!104453 (= c!18076 (and ((_ is Cons!1607) (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (= (_1!1211 (h!2203 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104454 () Bool)

(declare-fun call!10976 () List!1611)

(assert (=> b!104454 (= e!68016 call!10976)))

(declare-fun bm!10972 () Bool)

(declare-fun call!10977 () List!1611)

(assert (=> bm!10972 (= call!10976 call!10977)))

(declare-fun b!104456 () Bool)

(declare-fun e!68017 () List!1611)

(declare-fun c!18078 () Bool)

(assert (=> b!104456 (= e!68017 (ite c!18076 (t!5673 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (ite c!18078 (Cons!1607 (h!2203 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (t!5673 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))))) Nil!1608)))))

(declare-fun bm!10973 () Bool)

(declare-fun call!10975 () List!1611)

(assert (=> bm!10973 (= call!10975 call!10976)))

(declare-fun b!104457 () Bool)

(assert (=> b!104457 (= e!68017 (insertStrictlySorted!74 (t!5673 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun c!18077 () Bool)

(declare-fun bm!10974 () Bool)

(assert (=> bm!10974 (= call!10977 ($colon$colon!80 e!68017 (ite c!18077 (h!2203 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (tuple2!2401 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun c!18075 () Bool)

(assert (=> bm!10974 (= c!18075 c!18077)))

(declare-fun b!104458 () Bool)

(declare-fun e!68018 () List!1611)

(assert (=> b!104458 (= e!68018 call!10975)))

(declare-fun b!104459 () Bool)

(assert (=> b!104459 (= c!18078 (and ((_ is Cons!1607) (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (bvsgt (_1!1211 (h!2203 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (=> b!104459 (= e!68016 e!68018)))

(declare-fun b!104460 () Bool)

(assert (=> b!104460 (= e!68020 call!10977)))

(declare-fun d!28329 () Bool)

(declare-fun e!68019 () Bool)

(assert (=> d!28329 e!68019))

(declare-fun res!52096 () Bool)

(assert (=> d!28329 (=> (not res!52096) (not e!68019))))

(declare-fun lt!53330 () List!1611)

(assert (=> d!28329 (= res!52096 (isStrictlySorted!308 lt!53330))))

(assert (=> d!28329 (= lt!53330 e!68020)))

(assert (=> d!28329 (= c!18077 (and ((_ is Cons!1607) (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857)))) (bvslt (_1!1211 (h!2203 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(assert (=> d!28329 (isStrictlySorted!308 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))))))

(assert (=> d!28329 (= (insertStrictlySorted!74 (toList!800 (ite c!17807 call!10858 (ite c!17811 call!10859 call!10857))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!53330)))

(declare-fun b!104455 () Bool)

(assert (=> b!104455 (= e!68018 call!10975)))

(declare-fun b!104461 () Bool)

(assert (=> b!104461 (= e!68019 (contains!826 lt!53330 (tuple2!2401 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (_2!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104462 () Bool)

(declare-fun res!52097 () Bool)

(assert (=> b!104462 (=> (not res!52097) (not e!68019))))

(assert (=> b!104462 (= res!52097 (containsKey!159 lt!53330 (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28329 c!18077) b!104460))

(assert (= (and d!28329 (not c!18077)) b!104453))

(assert (= (and b!104453 c!18076) b!104454))

(assert (= (and b!104453 (not c!18076)) b!104459))

(assert (= (and b!104459 c!18078) b!104455))

(assert (= (and b!104459 (not c!18078)) b!104458))

(assert (= (or b!104455 b!104458) bm!10973))

(assert (= (or b!104454 bm!10973) bm!10972))

(assert (= (or b!104460 bm!10972) bm!10974))

(assert (= (and bm!10974 c!18075) b!104457))

(assert (= (and bm!10974 (not c!18075)) b!104456))

(assert (= (and d!28329 res!52096) b!104462))

(assert (= (and b!104462 res!52097) b!104461))

(declare-fun m!116031 () Bool)

(assert (=> b!104461 m!116031))

(declare-fun m!116033 () Bool)

(assert (=> b!104457 m!116033))

(declare-fun m!116035 () Bool)

(assert (=> bm!10974 m!116035))

(declare-fun m!116037 () Bool)

(assert (=> d!28329 m!116037))

(declare-fun m!116039 () Bool)

(assert (=> d!28329 m!116039))

(declare-fun m!116041 () Bool)

(assert (=> b!104462 m!116041))

(assert (=> d!27935 d!28329))

(declare-fun d!28331 () Bool)

(declare-fun lt!53331 () Bool)

(assert (=> d!28331 (= lt!53331 (select (content!108 lt!52947) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun e!68022 () Bool)

(assert (=> d!28331 (= lt!53331 e!68022)))

(declare-fun res!52098 () Bool)

(assert (=> d!28331 (=> (not res!52098) (not e!68022))))

(assert (=> d!28331 (= res!52098 ((_ is Cons!1607) lt!52947))))

(assert (=> d!28331 (= (contains!826 lt!52947 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))) lt!53331)))

(declare-fun b!104463 () Bool)

(declare-fun e!68021 () Bool)

(assert (=> b!104463 (= e!68022 e!68021)))

(declare-fun res!52099 () Bool)

(assert (=> b!104463 (=> res!52099 e!68021)))

(assert (=> b!104463 (= res!52099 (= (h!2203 lt!52947) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!104464 () Bool)

(assert (=> b!104464 (= e!68021 (contains!826 (t!5673 lt!52947) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(assert (= (and d!28331 res!52098) b!104463))

(assert (= (and b!104463 (not res!52099)) b!104464))

(declare-fun m!116043 () Bool)

(assert (=> d!28331 m!116043))

(declare-fun m!116045 () Bool)

(assert (=> d!28331 m!116045))

(declare-fun m!116047 () Bool)

(assert (=> b!104464 m!116047))

(assert (=> b!103742 d!28331))

(declare-fun d!28333 () Bool)

(declare-fun e!68024 () Bool)

(assert (=> d!28333 e!68024))

(declare-fun res!52100 () Bool)

(assert (=> d!28333 (=> res!52100 e!68024)))

(declare-fun lt!53332 () Bool)

(assert (=> d!28333 (= res!52100 (not lt!53332))))

(declare-fun lt!53333 () Bool)

(assert (=> d!28333 (= lt!53332 lt!53333)))

(declare-fun lt!53334 () Unit!3150)

(declare-fun e!68023 () Unit!3150)

(assert (=> d!28333 (= lt!53334 e!68023)))

(declare-fun c!18079 () Bool)

(assert (=> d!28333 (= c!18079 lt!53333)))

(assert (=> d!28333 (= lt!53333 (containsKey!159 (toList!800 lt!53036) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28333 (= (contains!824 lt!53036 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53332)))

(declare-fun b!104465 () Bool)

(declare-fun lt!53335 () Unit!3150)

(assert (=> b!104465 (= e!68023 lt!53335)))

(assert (=> b!104465 (= lt!53335 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53036) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> b!104465 (isDefined!108 (getValueByKey!155 (toList!800 lt!53036) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104466 () Bool)

(declare-fun Unit!3198 () Unit!3150)

(assert (=> b!104466 (= e!68023 Unit!3198)))

(declare-fun b!104467 () Bool)

(assert (=> b!104467 (= e!68024 (isDefined!108 (getValueByKey!155 (toList!800 lt!53036) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28333 c!18079) b!104465))

(assert (= (and d!28333 (not c!18079)) b!104466))

(assert (= (and d!28333 (not res!52100)) b!104467))

(declare-fun m!116049 () Bool)

(assert (=> d!28333 m!116049))

(declare-fun m!116051 () Bool)

(assert (=> b!104465 m!116051))

(assert (=> b!104465 m!114967))

(assert (=> b!104465 m!114967))

(declare-fun m!116053 () Bool)

(assert (=> b!104465 m!116053))

(assert (=> b!104467 m!114967))

(assert (=> b!104467 m!114967))

(assert (=> b!104467 m!116053))

(assert (=> d!27903 d!28333))

(declare-fun c!18080 () Bool)

(declare-fun d!28335 () Bool)

(assert (=> d!28335 (= c!18080 (and ((_ is Cons!1607) lt!53037) (= (_1!1211 (h!2203 lt!53037)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!68025 () Option!161)

(assert (=> d!28335 (= (getValueByKey!155 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) e!68025)))

(declare-fun b!104469 () Bool)

(declare-fun e!68026 () Option!161)

(assert (=> b!104469 (= e!68025 e!68026)))

(declare-fun c!18081 () Bool)

(assert (=> b!104469 (= c!18081 (and ((_ is Cons!1607) lt!53037) (not (= (_1!1211 (h!2203 lt!53037)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!104470 () Bool)

(assert (=> b!104470 (= e!68026 (getValueByKey!155 (t!5673 lt!53037) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104471 () Bool)

(assert (=> b!104471 (= e!68026 None!159)))

(declare-fun b!104468 () Bool)

(assert (=> b!104468 (= e!68025 (Some!160 (_2!1211 (h!2203 lt!53037))))))

(assert (= (and d!28335 c!18080) b!104468))

(assert (= (and d!28335 (not c!18080)) b!104469))

(assert (= (and b!104469 c!18081) b!104470))

(assert (= (and b!104469 (not c!18081)) b!104471))

(declare-fun m!116055 () Bool)

(assert (=> b!104470 m!116055))

(assert (=> d!27903 d!28335))

(declare-fun d!28337 () Bool)

(assert (=> d!28337 (= (getValueByKey!155 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53336 () Unit!3150)

(assert (=> d!28337 (= lt!53336 (choose!639 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun e!68027 () Bool)

(assert (=> d!28337 e!68027))

(declare-fun res!52101 () Bool)

(assert (=> d!28337 (=> (not res!52101) (not e!68027))))

(assert (=> d!28337 (= res!52101 (isStrictlySorted!308 lt!53037))))

(assert (=> d!28337 (= (lemmaContainsTupThenGetReturnValue!71 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53336)))

(declare-fun b!104472 () Bool)

(declare-fun res!52102 () Bool)

(assert (=> b!104472 (=> (not res!52102) (not e!68027))))

(assert (=> b!104472 (= res!52102 (containsKey!159 lt!53037 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104473 () Bool)

(assert (=> b!104473 (= e!68027 (contains!826 lt!53037 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28337 res!52101) b!104472))

(assert (= (and b!104472 res!52102) b!104473))

(assert (=> d!28337 m!114961))

(declare-fun m!116057 () Bool)

(assert (=> d!28337 m!116057))

(declare-fun m!116059 () Bool)

(assert (=> d!28337 m!116059))

(declare-fun m!116061 () Bool)

(assert (=> b!104472 m!116061))

(declare-fun m!116063 () Bool)

(assert (=> b!104473 m!116063))

(assert (=> d!27903 d!28337))

(declare-fun b!104474 () Bool)

(declare-fun e!68032 () List!1611)

(declare-fun e!68028 () List!1611)

(assert (=> b!104474 (= e!68032 e!68028)))

(declare-fun c!18083 () Bool)

(assert (=> b!104474 (= c!18083 (and ((_ is Cons!1607) (toList!800 lt!52539)) (= (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104475 () Bool)

(declare-fun call!10979 () List!1611)

(assert (=> b!104475 (= e!68028 call!10979)))

(declare-fun bm!10975 () Bool)

(declare-fun call!10980 () List!1611)

(assert (=> bm!10975 (= call!10979 call!10980)))

(declare-fun b!104477 () Bool)

(declare-fun e!68029 () List!1611)

(declare-fun c!18085 () Bool)

(assert (=> b!104477 (= e!68029 (ite c!18083 (t!5673 (toList!800 lt!52539)) (ite c!18085 (Cons!1607 (h!2203 (toList!800 lt!52539)) (t!5673 (toList!800 lt!52539))) Nil!1608)))))

(declare-fun bm!10976 () Bool)

(declare-fun call!10978 () List!1611)

(assert (=> bm!10976 (= call!10978 call!10979)))

(declare-fun b!104478 () Bool)

(assert (=> b!104478 (= e!68029 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52539)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun bm!10977 () Bool)

(declare-fun c!18084 () Bool)

(assert (=> bm!10977 (= call!10980 ($colon$colon!80 e!68029 (ite c!18084 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun c!18082 () Bool)

(assert (=> bm!10977 (= c!18082 c!18084)))

(declare-fun b!104479 () Bool)

(declare-fun e!68030 () List!1611)

(assert (=> b!104479 (= e!68030 call!10978)))

(declare-fun b!104480 () Bool)

(assert (=> b!104480 (= c!18085 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> b!104480 (= e!68028 e!68030)))

(declare-fun b!104481 () Bool)

(assert (=> b!104481 (= e!68032 call!10980)))

(declare-fun d!28339 () Bool)

(declare-fun e!68031 () Bool)

(assert (=> d!28339 e!68031))

(declare-fun res!52103 () Bool)

(assert (=> d!28339 (=> (not res!52103) (not e!68031))))

(declare-fun lt!53337 () List!1611)

(assert (=> d!28339 (= res!52103 (isStrictlySorted!308 lt!53337))))

(assert (=> d!28339 (= lt!53337 e!68032)))

(assert (=> d!28339 (= c!18084 (and ((_ is Cons!1607) (toList!800 lt!52539)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52539))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!28339 (isStrictlySorted!308 (toList!800 lt!52539))))

(assert (=> d!28339 (= (insertStrictlySorted!74 (toList!800 lt!52539) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53337)))

(declare-fun b!104476 () Bool)

(assert (=> b!104476 (= e!68030 call!10978)))

(declare-fun b!104482 () Bool)

(assert (=> b!104482 (= e!68031 (contains!826 lt!53337 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104483 () Bool)

(declare-fun res!52104 () Bool)

(assert (=> b!104483 (=> (not res!52104) (not e!68031))))

(assert (=> b!104483 (= res!52104 (containsKey!159 lt!53337 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (= (and d!28339 c!18084) b!104481))

(assert (= (and d!28339 (not c!18084)) b!104474))

(assert (= (and b!104474 c!18083) b!104475))

(assert (= (and b!104474 (not c!18083)) b!104480))

(assert (= (and b!104480 c!18085) b!104476))

(assert (= (and b!104480 (not c!18085)) b!104479))

(assert (= (or b!104476 b!104479) bm!10976))

(assert (= (or b!104475 bm!10976) bm!10975))

(assert (= (or b!104481 bm!10975) bm!10977))

(assert (= (and bm!10977 c!18082) b!104478))

(assert (= (and bm!10977 (not c!18082)) b!104477))

(assert (= (and d!28339 res!52103) b!104483))

(assert (= (and b!104483 res!52104) b!104482))

(declare-fun m!116065 () Bool)

(assert (=> b!104482 m!116065))

(declare-fun m!116067 () Bool)

(assert (=> b!104478 m!116067))

(declare-fun m!116069 () Bool)

(assert (=> bm!10977 m!116069))

(declare-fun m!116071 () Bool)

(assert (=> d!28339 m!116071))

(assert (=> d!28339 m!114515))

(declare-fun m!116073 () Bool)

(assert (=> b!104483 m!116073))

(assert (=> d!27903 d!28339))

(declare-fun d!28341 () Bool)

(declare-fun e!68034 () Bool)

(assert (=> d!28341 e!68034))

(declare-fun res!52105 () Bool)

(assert (=> d!28341 (=> res!52105 e!68034)))

(declare-fun lt!53338 () Bool)

(assert (=> d!28341 (= res!52105 (not lt!53338))))

(declare-fun lt!53339 () Bool)

(assert (=> d!28341 (= lt!53338 lt!53339)))

(declare-fun lt!53340 () Unit!3150)

(declare-fun e!68033 () Unit!3150)

(assert (=> d!28341 (= lt!53340 e!68033)))

(declare-fun c!18086 () Bool)

(assert (=> d!28341 (= c!18086 lt!53339)))

(assert (=> d!28341 (= lt!53339 (containsKey!159 (toList!800 lt!52817) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28341 (= (contains!824 lt!52817 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53338)))

(declare-fun b!104484 () Bool)

(declare-fun lt!53341 () Unit!3150)

(assert (=> b!104484 (= e!68033 lt!53341)))

(assert (=> b!104484 (= lt!53341 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52817) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104484 (isDefined!108 (getValueByKey!155 (toList!800 lt!52817) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104485 () Bool)

(declare-fun Unit!3199 () Unit!3150)

(assert (=> b!104485 (= e!68033 Unit!3199)))

(declare-fun b!104486 () Bool)

(assert (=> b!104486 (= e!68034 (isDefined!108 (getValueByKey!155 (toList!800 lt!52817) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28341 c!18086) b!104484))

(assert (= (and d!28341 (not c!18086)) b!104485))

(assert (= (and d!28341 (not res!52105)) b!104486))

(declare-fun m!116075 () Bool)

(assert (=> d!28341 m!116075))

(declare-fun m!116077 () Bool)

(assert (=> b!104484 m!116077))

(declare-fun m!116079 () Bool)

(assert (=> b!104484 m!116079))

(assert (=> b!104484 m!116079))

(declare-fun m!116081 () Bool)

(assert (=> b!104484 m!116081))

(assert (=> b!104486 m!116079))

(assert (=> b!104486 m!116079))

(assert (=> b!104486 m!116081))

(assert (=> bm!10879 d!28341))

(declare-fun b!104487 () Bool)

(declare-fun e!68041 () Bool)

(declare-fun e!68040 () Bool)

(assert (=> b!104487 (= e!68041 e!68040)))

(declare-fun c!18087 () Bool)

(declare-fun e!68035 () Bool)

(assert (=> b!104487 (= c!18087 e!68035)))

(declare-fun res!52107 () Bool)

(assert (=> b!104487 (=> (not res!52107) (not e!68035))))

(assert (=> b!104487 (= res!52107 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104488 () Bool)

(assert (=> b!104488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> b!104488 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (_values!2544 newMap!16))))))

(declare-fun e!68036 () Bool)

(declare-fun lt!53344 () ListLongMap!1569)

(assert (=> b!104488 (= e!68036 (= (apply!97 lt!53344 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104489 () Bool)

(declare-fun e!68038 () Bool)

(assert (=> b!104489 (= e!68038 (= lt!53344 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16))))))

(declare-fun b!104490 () Bool)

(declare-fun e!68037 () ListLongMap!1569)

(declare-fun e!68039 () ListLongMap!1569)

(assert (=> b!104490 (= e!68037 e!68039)))

(declare-fun c!18088 () Bool)

(assert (=> b!104490 (= c!18088 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104491 () Bool)

(declare-fun call!10981 () ListLongMap!1569)

(assert (=> b!104491 (= e!68039 call!10981)))

(declare-fun bm!10978 () Bool)

(assert (=> bm!10978 (= call!10981 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16)))))

(declare-fun d!28343 () Bool)

(assert (=> d!28343 e!68041))

(declare-fun res!52108 () Bool)

(assert (=> d!28343 (=> (not res!52108) (not e!68041))))

(assert (=> d!28343 (= res!52108 (not (contains!824 lt!53344 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28343 (= lt!53344 e!68037)))

(declare-fun c!18090 () Bool)

(assert (=> d!28343 (= c!18090 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28343 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28343 (= (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53344)))

(declare-fun b!104492 () Bool)

(assert (=> b!104492 (= e!68040 e!68036)))

(assert (=> b!104492 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun res!52106 () Bool)

(assert (=> b!104492 (= res!52106 (contains!824 lt!53344 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104492 (=> (not res!52106) (not e!68036))))

(declare-fun b!104493 () Bool)

(declare-fun lt!53345 () Unit!3150)

(declare-fun lt!53347 () Unit!3150)

(assert (=> b!104493 (= lt!53345 lt!53347)))

(declare-fun lt!53343 () ListLongMap!1569)

(declare-fun lt!53342 () (_ BitVec 64))

(declare-fun lt!53348 () V!3211)

(declare-fun lt!53346 () (_ BitVec 64))

(assert (=> b!104493 (not (contains!824 (+!141 lt!53343 (tuple2!2401 lt!53342 lt!53348)) lt!53346))))

(assert (=> b!104493 (= lt!53347 (addStillNotContains!45 lt!53343 lt!53342 lt!53348 lt!53346))))

(assert (=> b!104493 (= lt!53346 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104493 (= lt!53348 (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104493 (= lt!53342 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104493 (= lt!53343 call!10981)))

(assert (=> b!104493 (= e!68039 (+!141 call!10981 (tuple2!2401 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104494 () Bool)

(assert (=> b!104494 (= e!68040 e!68038)))

(declare-fun c!18089 () Bool)

(assert (=> b!104494 (= c!18089 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104495 () Bool)

(assert (=> b!104495 (= e!68038 (isEmpty!367 lt!53344))))

(declare-fun b!104496 () Bool)

(assert (=> b!104496 (= e!68037 (ListLongMap!1570 Nil!1608))))

(declare-fun b!104497 () Bool)

(assert (=> b!104497 (= e!68035 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104497 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104498 () Bool)

(declare-fun res!52109 () Bool)

(assert (=> b!104498 (=> (not res!52109) (not e!68041))))

(assert (=> b!104498 (= res!52109 (not (contains!824 lt!53344 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28343 c!18090) b!104496))

(assert (= (and d!28343 (not c!18090)) b!104490))

(assert (= (and b!104490 c!18088) b!104493))

(assert (= (and b!104490 (not c!18088)) b!104491))

(assert (= (or b!104493 b!104491) bm!10978))

(assert (= (and d!28343 res!52108) b!104498))

(assert (= (and b!104498 res!52109) b!104487))

(assert (= (and b!104487 res!52107) b!104497))

(assert (= (and b!104487 c!18087) b!104492))

(assert (= (and b!104487 (not c!18087)) b!104494))

(assert (= (and b!104492 res!52106) b!104488))

(assert (= (and b!104494 c!18089) b!104489))

(assert (= (and b!104494 (not c!18089)) b!104495))

(declare-fun b_lambda!4659 () Bool)

(assert (=> (not b_lambda!4659) (not b!104488)))

(assert (=> b!104488 t!5681))

(declare-fun b_and!6443 () Bool)

(assert (= b_and!6439 (and (=> t!5681 result!3435) b_and!6443)))

(assert (=> b!104488 t!5683))

(declare-fun b_and!6445 () Bool)

(assert (= b_and!6441 (and (=> t!5683 result!3437) b_and!6445)))

(declare-fun b_lambda!4661 () Bool)

(assert (=> (not b_lambda!4661) (not b!104493)))

(assert (=> b!104493 t!5681))

(declare-fun b_and!6447 () Bool)

(assert (= b_and!6443 (and (=> t!5681 result!3435) b_and!6447)))

(assert (=> b!104493 t!5683))

(declare-fun b_and!6449 () Bool)

(assert (= b_and!6445 (and (=> t!5683 result!3437) b_and!6449)))

(declare-fun m!116083 () Bool)

(assert (=> b!104493 m!116083))

(declare-fun m!116085 () Bool)

(assert (=> b!104493 m!116085))

(assert (=> b!104493 m!114535))

(assert (=> b!104493 m!114537))

(assert (=> b!104493 m!114539))

(declare-fun m!116087 () Bool)

(assert (=> b!104493 m!116087))

(assert (=> b!104493 m!114535))

(assert (=> b!104493 m!116087))

(declare-fun m!116089 () Bool)

(assert (=> b!104493 m!116089))

(assert (=> b!104493 m!114525))

(assert (=> b!104493 m!114537))

(declare-fun m!116091 () Bool)

(assert (=> b!104498 m!116091))

(assert (=> b!104497 m!114525))

(assert (=> b!104497 m!114525))

(assert (=> b!104497 m!114527))

(assert (=> b!104492 m!114525))

(assert (=> b!104492 m!114525))

(declare-fun m!116093 () Bool)

(assert (=> b!104492 m!116093))

(assert (=> b!104490 m!114525))

(assert (=> b!104490 m!114525))

(assert (=> b!104490 m!114527))

(declare-fun m!116095 () Bool)

(assert (=> b!104489 m!116095))

(assert (=> b!104488 m!114535))

(assert (=> b!104488 m!114537))

(assert (=> b!104488 m!114539))

(assert (=> b!104488 m!114525))

(declare-fun m!116097 () Bool)

(assert (=> b!104488 m!116097))

(assert (=> b!104488 m!114535))

(assert (=> b!104488 m!114525))

(assert (=> b!104488 m!114537))

(declare-fun m!116099 () Bool)

(assert (=> b!104495 m!116099))

(declare-fun m!116101 () Bool)

(assert (=> d!28343 m!116101))

(assert (=> d!28343 m!114575))

(assert (=> bm!10978 m!116095))

(assert (=> bm!10874 d!28343))

(declare-fun bm!10979 () Bool)

(declare-fun call!10982 () Bool)

(assert (=> bm!10979 (= call!10982 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!104499 () Bool)

(declare-fun e!68043 () Bool)

(declare-fun e!68044 () Bool)

(assert (=> b!104499 (= e!68043 e!68044)))

(declare-fun lt!53351 () (_ BitVec 64))

(assert (=> b!104499 (= lt!53351 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!53349 () Unit!3150)

(assert (=> b!104499 (= lt!53349 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 newMap!16) lt!53351 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!104499 (arrayContainsKey!0 (_keys!4263 newMap!16) lt!53351 #b00000000000000000000000000000000)))

(declare-fun lt!53350 () Unit!3150)

(assert (=> b!104499 (= lt!53350 lt!53349)))

(declare-fun res!52111 () Bool)

(assert (=> b!104499 (= res!52111 (= (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4263 newMap!16) (mask!6697 newMap!16)) (Found!258 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!104499 (=> (not res!52111) (not e!68044))))

(declare-fun d!28345 () Bool)

(declare-fun res!52110 () Bool)

(declare-fun e!68042 () Bool)

(assert (=> d!28345 (=> res!52110 e!68042)))

(assert (=> d!28345 (= res!52110 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28345 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 newMap!16) (mask!6697 newMap!16)) e!68042)))

(declare-fun b!104500 () Bool)

(assert (=> b!104500 (= e!68043 call!10982)))

(declare-fun b!104501 () Bool)

(assert (=> b!104501 (= e!68044 call!10982)))

(declare-fun b!104502 () Bool)

(assert (=> b!104502 (= e!68042 e!68043)))

(declare-fun c!18091 () Bool)

(assert (=> b!104502 (= c!18091 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!28345 (not res!52110)) b!104502))

(assert (= (and b!104502 c!18091) b!104499))

(assert (= (and b!104502 (not c!18091)) b!104500))

(assert (= (and b!104499 res!52111) b!104501))

(assert (= (or b!104501 b!104500) bm!10979))

(declare-fun m!116103 () Bool)

(assert (=> bm!10979 m!116103))

(assert (=> b!104499 m!115313))

(declare-fun m!116105 () Bool)

(assert (=> b!104499 m!116105))

(declare-fun m!116107 () Bool)

(assert (=> b!104499 m!116107))

(assert (=> b!104499 m!115313))

(declare-fun m!116109 () Bool)

(assert (=> b!104499 m!116109))

(assert (=> b!104502 m!115313))

(assert (=> b!104502 m!115313))

(assert (=> b!104502 m!115315))

(assert (=> bm!10882 d!28345))

(assert (=> b!103647 d!28279))

(declare-fun d!28347 () Bool)

(declare-fun lt!53352 () Bool)

(assert (=> d!28347 (= lt!53352 (select (content!108 lt!52765) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun e!68046 () Bool)

(assert (=> d!28347 (= lt!53352 e!68046)))

(declare-fun res!52112 () Bool)

(assert (=> d!28347 (=> (not res!52112) (not e!68046))))

(assert (=> d!28347 (= res!52112 ((_ is Cons!1607) lt!52765))))

(assert (=> d!28347 (= (contains!826 lt!52765 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))) lt!53352)))

(declare-fun b!104503 () Bool)

(declare-fun e!68045 () Bool)

(assert (=> b!104503 (= e!68046 e!68045)))

(declare-fun res!52113 () Bool)

(assert (=> b!104503 (=> res!52113 e!68045)))

(assert (=> b!104503 (= res!52113 (= (h!2203 lt!52765) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!104504 () Bool)

(assert (=> b!104504 (= e!68045 (contains!826 (t!5673 lt!52765) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(assert (= (and d!28347 res!52112) b!104503))

(assert (= (and b!104503 (not res!52113)) b!104504))

(declare-fun m!116111 () Bool)

(assert (=> d!28347 m!116111))

(declare-fun m!116113 () Bool)

(assert (=> d!28347 m!116113))

(declare-fun m!116115 () Bool)

(assert (=> b!104504 m!116115))

(assert (=> b!103865 d!28347))

(declare-fun d!28349 () Bool)

(assert (=> d!28349 (= (inRange!0 (ite c!17947 (index!3179 lt!53100) (index!3182 lt!53100)) (mask!6697 newMap!16)) (and (bvsge (ite c!17947 (index!3179 lt!53100) (index!3182 lt!53100)) #b00000000000000000000000000000000) (bvslt (ite c!17947 (index!3179 lt!53100) (index!3182 lt!53100)) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!10928 d!28349))

(declare-fun d!28351 () Bool)

(declare-fun res!52114 () Bool)

(declare-fun e!68047 () Bool)

(assert (=> d!28351 (=> res!52114 e!68047)))

(assert (=> d!28351 (= res!52114 (and ((_ is Cons!1607) (toList!800 call!10827)) (= (_1!1211 (h!2203 (toList!800 call!10827))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (=> d!28351 (= (containsKey!159 (toList!800 call!10827) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) e!68047)))

(declare-fun b!104505 () Bool)

(declare-fun e!68048 () Bool)

(assert (=> b!104505 (= e!68047 e!68048)))

(declare-fun res!52115 () Bool)

(assert (=> b!104505 (=> (not res!52115) (not e!68048))))

(assert (=> b!104505 (= res!52115 (and (or (not ((_ is Cons!1607) (toList!800 call!10827))) (bvsle (_1!1211 (h!2203 (toList!800 call!10827))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) ((_ is Cons!1607) (toList!800 call!10827)) (bvslt (_1!1211 (h!2203 (toList!800 call!10827))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(declare-fun b!104506 () Bool)

(assert (=> b!104506 (= e!68048 (containsKey!159 (t!5673 (toList!800 call!10827)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (= (and d!28351 (not res!52114)) b!104505))

(assert (= (and b!104505 res!52115) b!104506))

(assert (=> b!104506 m!114165))

(declare-fun m!116117 () Bool)

(assert (=> b!104506 m!116117))

(assert (=> d!27875 d!28351))

(assert (=> d!27915 d!27785))

(declare-fun d!28353 () Bool)

(declare-fun lt!53353 () Bool)

(assert (=> d!28353 (= lt!53353 (select (content!108 (toList!800 lt!52842)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun e!68050 () Bool)

(assert (=> d!28353 (= lt!53353 e!68050)))

(declare-fun res!52116 () Bool)

(assert (=> d!28353 (=> (not res!52116) (not e!68050))))

(assert (=> d!28353 (= res!52116 ((_ is Cons!1607) (toList!800 lt!52842)))))

(assert (=> d!28353 (= (contains!826 (toList!800 lt!52842) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53353)))

(declare-fun b!104507 () Bool)

(declare-fun e!68049 () Bool)

(assert (=> b!104507 (= e!68050 e!68049)))

(declare-fun res!52117 () Bool)

(assert (=> b!104507 (=> res!52117 e!68049)))

(assert (=> b!104507 (= res!52117 (= (h!2203 (toList!800 lt!52842)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun b!104508 () Bool)

(assert (=> b!104508 (= e!68049 (contains!826 (t!5673 (toList!800 lt!52842)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!28353 res!52116) b!104507))

(assert (= (and b!104507 (not res!52117)) b!104508))

(declare-fun m!116119 () Bool)

(assert (=> d!28353 m!116119))

(declare-fun m!116121 () Bool)

(assert (=> d!28353 m!116121))

(declare-fun m!116123 () Bool)

(assert (=> b!104508 m!116123))

(assert (=> b!103658 d!28353))

(declare-fun d!28355 () Bool)

(assert (=> d!28355 (= (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52733)) (v!2880 (getValueByKey!155 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52733)))))

(assert (=> d!27971 d!28355))

(declare-fun d!28357 () Bool)

(declare-fun c!18092 () Bool)

(assert (=> d!28357 (= c!18092 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52733)))))

(declare-fun e!68051 () Option!161)

(assert (=> d!28357 (= (getValueByKey!155 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52733) e!68051)))

(declare-fun b!104510 () Bool)

(declare-fun e!68052 () Option!161)

(assert (=> b!104510 (= e!68051 e!68052)))

(declare-fun c!18093 () Bool)

(assert (=> b!104510 (= c!18093 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52733))))))

(declare-fun b!104511 () Bool)

(assert (=> b!104511 (= e!68052 (getValueByKey!155 (t!5673 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!52733))))

(declare-fun b!104512 () Bool)

(assert (=> b!104512 (= e!68052 None!159)))

(declare-fun b!104509 () Bool)

(assert (=> b!104509 (= e!68051 (Some!160 (_2!1211 (h!2203 (toList!800 (+!141 lt!52717 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(assert (= (and d!28357 c!18092) b!104509))

(assert (= (and d!28357 (not c!18092)) b!104510))

(assert (= (and b!104510 c!18093) b!104511))

(assert (= (and b!104510 (not c!18093)) b!104512))

(declare-fun m!116125 () Bool)

(assert (=> b!104511 m!116125))

(assert (=> d!27971 d!28357))

(declare-fun d!28359 () Bool)

(assert (=> d!28359 (= (apply!97 lt!52817 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52817) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4294 () Bool)

(assert (= bs!4294 d!28359))

(assert (=> bs!4294 m!116079))

(assert (=> bs!4294 m!116079))

(declare-fun m!116127 () Bool)

(assert (=> bs!4294 m!116127))

(assert (=> b!103618 d!28359))

(declare-fun d!28361 () Bool)

(assert (=> d!28361 (= (get!1326 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2880 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28009 d!28361))

(declare-fun d!28363 () Bool)

(declare-fun c!18094 () Bool)

(assert (=> d!28363 (= c!18094 (and ((_ is Cons!1607) (toList!800 lt!52728)) (= (_1!1211 (h!2203 (toList!800 lt!52728))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!68053 () Option!161)

(assert (=> d!28363 (= (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000) e!68053)))

(declare-fun b!104514 () Bool)

(declare-fun e!68054 () Option!161)

(assert (=> b!104514 (= e!68053 e!68054)))

(declare-fun c!18095 () Bool)

(assert (=> b!104514 (= c!18095 (and ((_ is Cons!1607) (toList!800 lt!52728)) (not (= (_1!1211 (h!2203 (toList!800 lt!52728))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104515 () Bool)

(assert (=> b!104515 (= e!68054 (getValueByKey!155 (t!5673 (toList!800 lt!52728)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104516 () Bool)

(assert (=> b!104516 (= e!68054 None!159)))

(declare-fun b!104513 () Bool)

(assert (=> b!104513 (= e!68053 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52728)))))))

(assert (= (and d!28363 c!18094) b!104513))

(assert (= (and d!28363 (not c!18094)) b!104514))

(assert (= (and b!104514 c!18095) b!104515))

(assert (= (and b!104514 (not c!18095)) b!104516))

(declare-fun m!116129 () Bool)

(assert (=> b!104515 m!116129))

(assert (=> d!28009 d!28363))

(declare-fun d!28365 () Bool)

(declare-fun res!52118 () Bool)

(declare-fun e!68055 () Bool)

(assert (=> d!28365 (=> res!52118 e!68055)))

(assert (=> d!28365 (= res!52118 (and ((_ is Cons!1607) lt!52790) (= (_1!1211 (h!2203 lt!52790)) (_1!1211 lt!52540))))))

(assert (=> d!28365 (= (containsKey!159 lt!52790 (_1!1211 lt!52540)) e!68055)))

(declare-fun b!104517 () Bool)

(declare-fun e!68056 () Bool)

(assert (=> b!104517 (= e!68055 e!68056)))

(declare-fun res!52119 () Bool)

(assert (=> b!104517 (=> (not res!52119) (not e!68056))))

(assert (=> b!104517 (= res!52119 (and (or (not ((_ is Cons!1607) lt!52790)) (bvsle (_1!1211 (h!2203 lt!52790)) (_1!1211 lt!52540))) ((_ is Cons!1607) lt!52790) (bvslt (_1!1211 (h!2203 lt!52790)) (_1!1211 lt!52540))))))

(declare-fun b!104518 () Bool)

(assert (=> b!104518 (= e!68056 (containsKey!159 (t!5673 lt!52790) (_1!1211 lt!52540)))))

(assert (= (and d!28365 (not res!52118)) b!104517))

(assert (= (and b!104517 res!52119) b!104518))

(declare-fun m!116131 () Bool)

(assert (=> b!104518 m!116131))

(assert (=> b!103751 d!28365))

(declare-fun bm!10980 () Bool)

(declare-fun call!10983 () Bool)

(assert (=> bm!10980 (= call!10983 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658))))))

(declare-fun b!104519 () Bool)

(declare-fun e!68058 () Bool)

(declare-fun e!68059 () Bool)

(assert (=> b!104519 (= e!68058 e!68059)))

(declare-fun lt!53356 () (_ BitVec 64))

(assert (=> b!104519 (= lt!53356 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000))))

(declare-fun lt!53354 () Unit!3150)

(assert (=> b!104519 (= lt!53354 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 (_2!1212 lt!52658)) lt!53356 #b00000000000000000000000000000000))))

(assert (=> b!104519 (arrayContainsKey!0 (_keys!4263 (_2!1212 lt!52658)) lt!53356 #b00000000000000000000000000000000)))

(declare-fun lt!53355 () Unit!3150)

(assert (=> b!104519 (= lt!53355 lt!53354)))

(declare-fun res!52121 () Bool)

(assert (=> b!104519 (= res!52121 (= (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000) (_keys!4263 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658))) (Found!258 #b00000000000000000000000000000000)))))

(assert (=> b!104519 (=> (not res!52121) (not e!68059))))

(declare-fun d!28367 () Bool)

(declare-fun res!52120 () Bool)

(declare-fun e!68057 () Bool)

(assert (=> d!28367 (=> res!52120 e!68057)))

(assert (=> d!28367 (= res!52120 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(assert (=> d!28367 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658))) e!68057)))

(declare-fun b!104520 () Bool)

(assert (=> b!104520 (= e!68058 call!10983)))

(declare-fun b!104521 () Bool)

(assert (=> b!104521 (= e!68059 call!10983)))

(declare-fun b!104522 () Bool)

(assert (=> b!104522 (= e!68057 e!68058)))

(declare-fun c!18096 () Bool)

(assert (=> b!104522 (= c!18096 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(assert (= (and d!28367 (not res!52120)) b!104522))

(assert (= (and b!104522 c!18096) b!104519))

(assert (= (and b!104522 (not c!18096)) b!104520))

(assert (= (and b!104519 res!52121) b!104521))

(assert (= (or b!104521 b!104520) bm!10980))

(declare-fun m!116133 () Bool)

(assert (=> bm!10980 m!116133))

(assert (=> b!104519 m!115947))

(declare-fun m!116135 () Bool)

(assert (=> b!104519 m!116135))

(declare-fun m!116137 () Bool)

(assert (=> b!104519 m!116137))

(assert (=> b!104519 m!115947))

(declare-fun m!116139 () Bool)

(assert (=> b!104519 m!116139))

(assert (=> b!104522 m!115947))

(assert (=> b!104522 m!115947))

(assert (=> b!104522 m!115951))

(assert (=> b!103947 d!28367))

(declare-fun lt!53357 () Bool)

(declare-fun d!28369 () Bool)

(assert (=> d!28369 (= lt!53357 (select (content!108 (toList!800 lt!53036)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun e!68061 () Bool)

(assert (=> d!28369 (= lt!53357 e!68061)))

(declare-fun res!52122 () Bool)

(assert (=> d!28369 (=> (not res!52122) (not e!68061))))

(assert (=> d!28369 (= res!52122 ((_ is Cons!1607) (toList!800 lt!53036)))))

(assert (=> d!28369 (= (contains!826 (toList!800 lt!53036) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) lt!53357)))

(declare-fun b!104523 () Bool)

(declare-fun e!68060 () Bool)

(assert (=> b!104523 (= e!68061 e!68060)))

(declare-fun res!52123 () Bool)

(assert (=> b!104523 (=> res!52123 e!68060)))

(assert (=> b!104523 (= res!52123 (= (h!2203 (toList!800 lt!53036)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(declare-fun b!104524 () Bool)

(assert (=> b!104524 (= e!68060 (contains!826 (t!5673 (toList!800 lt!53036)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))

(assert (= (and d!28369 res!52122) b!104523))

(assert (= (and b!104523 (not res!52123)) b!104524))

(declare-fun m!116141 () Bool)

(assert (=> d!28369 m!116141))

(declare-fun m!116143 () Bool)

(assert (=> d!28369 m!116143))

(declare-fun m!116145 () Bool)

(assert (=> b!104524 m!116145))

(assert (=> b!103879 d!28369))

(declare-fun d!28371 () Bool)

(assert (=> d!28371 (= (get!1325 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!103932 d!28371))

(declare-fun d!28373 () Bool)

(declare-fun lt!53358 () Bool)

(assert (=> d!28373 (= lt!53358 (select (content!107 (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!68063 () Bool)

(assert (=> d!28373 (= lt!53358 e!68063)))

(declare-fun res!52125 () Bool)

(assert (=> d!28373 (=> (not res!52125) (not e!68063))))

(assert (=> d!28373 (= res!52125 ((_ is Cons!1606) (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)))))

(assert (=> d!28373 (= (contains!825 (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!53358)))

(declare-fun b!104525 () Bool)

(declare-fun e!68062 () Bool)

(assert (=> b!104525 (= e!68063 e!68062)))

(declare-fun res!52124 () Bool)

(assert (=> b!104525 (=> res!52124 e!68062)))

(assert (=> b!104525 (= res!52124 (= (h!2202 (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!104526 () Bool)

(assert (=> b!104526 (= e!68062 (contains!825 (t!5672 (ite c!17817 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) Nil!1607) Nil!1607)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!28373 res!52125) b!104525))

(assert (= (and b!104525 (not res!52124)) b!104526))

(declare-fun m!116147 () Bool)

(assert (=> d!28373 m!116147))

(assert (=> d!28373 m!115269))

(declare-fun m!116149 () Bool)

(assert (=> d!28373 m!116149))

(assert (=> b!104526 m!115269))

(declare-fun m!116151 () Bool)

(assert (=> b!104526 m!116151))

(assert (=> b!103999 d!28373))

(declare-fun d!28375 () Bool)

(declare-fun lt!53359 () Bool)

(assert (=> d!28375 (= lt!53359 (select (content!108 lt!52758) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun e!68065 () Bool)

(assert (=> d!28375 (= lt!53359 e!68065)))

(declare-fun res!52126 () Bool)

(assert (=> d!28375 (=> (not res!52126) (not e!68065))))

(assert (=> d!28375 (= res!52126 ((_ is Cons!1607) lt!52758))))

(assert (=> d!28375 (= (contains!826 lt!52758 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))) lt!53359)))

(declare-fun b!104527 () Bool)

(declare-fun e!68064 () Bool)

(assert (=> b!104527 (= e!68065 e!68064)))

(declare-fun res!52127 () Bool)

(assert (=> b!104527 (=> res!52127 e!68064)))

(assert (=> b!104527 (= res!52127 (= (h!2203 lt!52758) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!104528 () Bool)

(assert (=> b!104528 (= e!68064 (contains!826 (t!5673 lt!52758) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(assert (= (and d!28375 res!52126) b!104527))

(assert (= (and b!104527 (not res!52127)) b!104528))

(declare-fun m!116153 () Bool)

(assert (=> d!28375 m!116153))

(declare-fun m!116155 () Bool)

(assert (=> d!28375 m!116155))

(declare-fun m!116157 () Bool)

(assert (=> b!104528 m!116157))

(assert (=> b!103570 d!28375))

(assert (=> d!27843 d!27825))

(declare-fun d!28377 () Bool)

(declare-fun e!68066 () Bool)

(assert (=> d!28377 e!68066))

(declare-fun res!52129 () Bool)

(assert (=> d!28377 (=> (not res!52129) (not e!68066))))

(declare-fun lt!53361 () ListLongMap!1569)

(assert (=> d!28377 (= res!52129 (contains!824 lt!53361 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(declare-fun lt!53362 () List!1611)

(assert (=> d!28377 (= lt!53361 (ListLongMap!1570 lt!53362))))

(declare-fun lt!53360 () Unit!3150)

(declare-fun lt!53363 () Unit!3150)

(assert (=> d!28377 (= lt!53360 lt!53363)))

(assert (=> d!28377 (= (getValueByKey!155 lt!53362 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(assert (=> d!28377 (= lt!53363 (lemmaContainsTupThenGetReturnValue!71 lt!53362 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(assert (=> d!28377 (= lt!53362 (insertStrictlySorted!74 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(assert (=> d!28377 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)) lt!53361)))

(declare-fun b!104529 () Bool)

(declare-fun res!52128 () Bool)

(assert (=> b!104529 (=> (not res!52128) (not e!68066))))

(assert (=> b!104529 (= res!52128 (= (getValueByKey!155 (toList!800 lt!53361) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)))))))

(declare-fun b!104530 () Bool)

(assert (=> b!104530 (= e!68066 (contains!826 (toList!800 lt!53361) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)))))

(assert (= (and d!28377 res!52129) b!104529))

(assert (= (and b!104529 res!52128) b!104530))

(declare-fun m!116159 () Bool)

(assert (=> d!28377 m!116159))

(declare-fun m!116161 () Bool)

(assert (=> d!28377 m!116161))

(declare-fun m!116163 () Bool)

(assert (=> d!28377 m!116163))

(declare-fun m!116165 () Bool)

(assert (=> d!28377 m!116165))

(declare-fun m!116167 () Bool)

(assert (=> b!104529 m!116167))

(declare-fun m!116169 () Bool)

(assert (=> b!104530 m!116169))

(assert (=> d!27843 d!28377))

(declare-fun b!104531 () Bool)

(declare-fun e!68075 () Bool)

(declare-fun e!68076 () Bool)

(assert (=> b!104531 (= e!68075 e!68076)))

(declare-fun res!52138 () Bool)

(declare-fun call!10985 () Bool)

(assert (=> b!104531 (= res!52138 call!10985)))

(assert (=> b!104531 (=> (not res!52138) (not e!68076))))

(declare-fun bm!10981 () Bool)

(declare-fun call!10986 () ListLongMap!1569)

(declare-fun call!10990 () ListLongMap!1569)

(assert (=> bm!10981 (= call!10986 call!10990)))

(declare-fun call!10988 () ListLongMap!1569)

(declare-fun bm!10982 () Bool)

(assert (=> bm!10982 (= call!10988 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10983 () Bool)

(declare-fun call!10984 () Bool)

(declare-fun lt!53375 () ListLongMap!1569)

(assert (=> bm!10983 (= call!10984 (contains!824 lt!53375 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10984 () Bool)

(declare-fun call!10987 () ListLongMap!1569)

(declare-fun call!10989 () ListLongMap!1569)

(assert (=> bm!10984 (= call!10987 call!10989)))

(declare-fun b!104532 () Bool)

(declare-fun e!68068 () ListLongMap!1569)

(assert (=> b!104532 (= e!68068 (+!141 call!10990 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!104533 () Bool)

(assert (=> b!104533 (= e!68075 (not call!10985))))

(declare-fun b!104534 () Bool)

(declare-fun e!68070 () ListLongMap!1569)

(assert (=> b!104534 (= e!68070 call!10986)))

(declare-fun b!104535 () Bool)

(declare-fun e!68069 () Bool)

(declare-fun e!68073 () Bool)

(assert (=> b!104535 (= e!68069 e!68073)))

(declare-fun res!52134 () Bool)

(assert (=> b!104535 (=> (not res!52134) (not e!68073))))

(assert (=> b!104535 (= res!52134 (contains!824 lt!53375 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104535 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10985 () Bool)

(assert (=> bm!10985 (= call!10989 call!10988)))

(declare-fun b!104536 () Bool)

(declare-fun e!68071 () Unit!3150)

(declare-fun lt!53370 () Unit!3150)

(assert (=> b!104536 (= e!68071 lt!53370)))

(declare-fun lt!53369 () ListLongMap!1569)

(assert (=> b!104536 (= lt!53369 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53379 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53379 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53378 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53378 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53373 () Unit!3150)

(assert (=> b!104536 (= lt!53373 (addStillContains!73 lt!53369 lt!53379 lt!52542 lt!53378))))

(assert (=> b!104536 (contains!824 (+!141 lt!53369 (tuple2!2401 lt!53379 lt!52542)) lt!53378)))

(declare-fun lt!53382 () Unit!3150)

(assert (=> b!104536 (= lt!53382 lt!53373)))

(declare-fun lt!53372 () ListLongMap!1569)

(assert (=> b!104536 (= lt!53372 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53376 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53376 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53381 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53381 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53384 () Unit!3150)

(assert (=> b!104536 (= lt!53384 (addApplyDifferent!73 lt!53372 lt!53376 (minValue!2438 newMap!16) lt!53381))))

(assert (=> b!104536 (= (apply!97 (+!141 lt!53372 (tuple2!2401 lt!53376 (minValue!2438 newMap!16))) lt!53381) (apply!97 lt!53372 lt!53381))))

(declare-fun lt!53366 () Unit!3150)

(assert (=> b!104536 (= lt!53366 lt!53384)))

(declare-fun lt!53365 () ListLongMap!1569)

(assert (=> b!104536 (= lt!53365 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53374 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53374 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53377 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53377 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53385 () Unit!3150)

(assert (=> b!104536 (= lt!53385 (addApplyDifferent!73 lt!53365 lt!53374 lt!52542 lt!53377))))

(assert (=> b!104536 (= (apply!97 (+!141 lt!53365 (tuple2!2401 lt!53374 lt!52542)) lt!53377) (apply!97 lt!53365 lt!53377))))

(declare-fun lt!53383 () Unit!3150)

(assert (=> b!104536 (= lt!53383 lt!53385)))

(declare-fun lt!53364 () ListLongMap!1569)

(assert (=> b!104536 (= lt!53364 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53371 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53371 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53380 () (_ BitVec 64))

(assert (=> b!104536 (= lt!53380 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104536 (= lt!53370 (addApplyDifferent!73 lt!53364 lt!53371 (minValue!2438 newMap!16) lt!53380))))

(assert (=> b!104536 (= (apply!97 (+!141 lt!53364 (tuple2!2401 lt!53371 (minValue!2438 newMap!16))) lt!53380) (apply!97 lt!53364 lt!53380))))

(declare-fun b!104537 () Bool)

(declare-fun e!68067 () Bool)

(assert (=> b!104537 (= e!68067 (not call!10984))))

(declare-fun b!104538 () Bool)

(declare-fun e!68079 () ListLongMap!1569)

(assert (=> b!104538 (= e!68079 call!10986)))

(declare-fun b!104539 () Bool)

(assert (=> b!104539 (= e!68079 call!10987)))

(declare-fun b!104540 () Bool)

(declare-fun c!18097 () Bool)

(assert (=> b!104540 (= c!18097 (and (not (= (bvand lt!52670 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52670 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104540 (= e!68070 e!68079)))

(declare-fun b!104541 () Bool)

(declare-fun e!68078 () Bool)

(assert (=> b!104541 (= e!68067 e!68078)))

(declare-fun res!52132 () Bool)

(assert (=> b!104541 (= res!52132 call!10984)))

(assert (=> b!104541 (=> (not res!52132) (not e!68078))))

(declare-fun b!104542 () Bool)

(assert (=> b!104542 (= e!68073 (= (apply!97 lt!53375 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (_values!2544 newMap!16))))))

(assert (=> b!104542 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104543 () Bool)

(declare-fun res!52136 () Bool)

(declare-fun e!68077 () Bool)

(assert (=> b!104543 (=> (not res!52136) (not e!68077))))

(assert (=> b!104543 (= res!52136 e!68075)))

(declare-fun c!18100 () Bool)

(assert (=> b!104543 (= c!18100 (not (= (bvand lt!52670 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28379 () Bool)

(assert (=> d!28379 e!68077))

(declare-fun res!52137 () Bool)

(assert (=> d!28379 (=> (not res!52137) (not e!68077))))

(assert (=> d!28379 (= res!52137 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!53367 () ListLongMap!1569)

(assert (=> d!28379 (= lt!53375 lt!53367)))

(declare-fun lt!53368 () Unit!3150)

(assert (=> d!28379 (= lt!53368 e!68071)))

(declare-fun c!18101 () Bool)

(declare-fun e!68072 () Bool)

(assert (=> d!28379 (= c!18101 e!68072)))

(declare-fun res!52135 () Bool)

(assert (=> d!28379 (=> (not res!52135) (not e!68072))))

(assert (=> d!28379 (= res!52135 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28379 (= lt!53367 e!68068)))

(declare-fun c!18098 () Bool)

(assert (=> d!28379 (= c!18098 (and (not (= (bvand lt!52670 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52670 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28379 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28379 (= (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53375)))

(declare-fun c!18102 () Bool)

(declare-fun bm!10986 () Bool)

(assert (=> bm!10986 (= call!10990 (+!141 (ite c!18098 call!10988 (ite c!18102 call!10989 call!10987)) (ite (or c!18098 c!18102) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!104544 () Bool)

(assert (=> b!104544 (= e!68076 (= (apply!97 lt!53375 #b0000000000000000000000000000000000000000000000000000000000000000) lt!52542))))

(declare-fun b!104545 () Bool)

(assert (=> b!104545 (= e!68077 e!68067)))

(declare-fun c!18099 () Bool)

(assert (=> b!104545 (= c!18099 (not (= (bvand lt!52670 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104546 () Bool)

(assert (=> b!104546 (= e!68072 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104547 () Bool)

(declare-fun res!52131 () Bool)

(assert (=> b!104547 (=> (not res!52131) (not e!68077))))

(assert (=> b!104547 (= res!52131 e!68069)))

(declare-fun res!52133 () Bool)

(assert (=> b!104547 (=> res!52133 e!68069)))

(declare-fun e!68074 () Bool)

(assert (=> b!104547 (= res!52133 (not e!68074))))

(declare-fun res!52130 () Bool)

(assert (=> b!104547 (=> (not res!52130) (not e!68074))))

(assert (=> b!104547 (= res!52130 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104548 () Bool)

(assert (=> b!104548 (= e!68068 e!68070)))

(assert (=> b!104548 (= c!18102 (and (not (= (bvand lt!52670 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52670 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104549 () Bool)

(declare-fun Unit!3200 () Unit!3150)

(assert (=> b!104549 (= e!68071 Unit!3200)))

(declare-fun b!104550 () Bool)

(assert (=> b!104550 (= e!68078 (= (apply!97 lt!53375 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!104551 () Bool)

(assert (=> b!104551 (= e!68074 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10987 () Bool)

(assert (=> bm!10987 (= call!10985 (contains!824 lt!53375 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28379 c!18098) b!104532))

(assert (= (and d!28379 (not c!18098)) b!104548))

(assert (= (and b!104548 c!18102) b!104534))

(assert (= (and b!104548 (not c!18102)) b!104540))

(assert (= (and b!104540 c!18097) b!104538))

(assert (= (and b!104540 (not c!18097)) b!104539))

(assert (= (or b!104538 b!104539) bm!10984))

(assert (= (or b!104534 bm!10984) bm!10985))

(assert (= (or b!104534 b!104538) bm!10981))

(assert (= (or b!104532 bm!10985) bm!10982))

(assert (= (or b!104532 bm!10981) bm!10986))

(assert (= (and d!28379 res!52135) b!104546))

(assert (= (and d!28379 c!18101) b!104536))

(assert (= (and d!28379 (not c!18101)) b!104549))

(assert (= (and d!28379 res!52137) b!104547))

(assert (= (and b!104547 res!52130) b!104551))

(assert (= (and b!104547 (not res!52133)) b!104535))

(assert (= (and b!104535 res!52134) b!104542))

(assert (= (and b!104547 res!52131) b!104543))

(assert (= (and b!104543 c!18100) b!104531))

(assert (= (and b!104543 (not c!18100)) b!104533))

(assert (= (and b!104531 res!52138) b!104544))

(assert (= (or b!104531 b!104533) bm!10987))

(assert (= (and b!104543 res!52136) b!104545))

(assert (= (and b!104545 c!18099) b!104541))

(assert (= (and b!104545 (not c!18099)) b!104537))

(assert (= (and b!104541 res!52132) b!104550))

(assert (= (or b!104541 b!104537) bm!10983))

(declare-fun b_lambda!4663 () Bool)

(assert (=> (not b_lambda!4663) (not b!104542)))

(assert (=> b!104542 t!5681))

(declare-fun b_and!6451 () Bool)

(assert (= b_and!6447 (and (=> t!5681 result!3435) b_and!6451)))

(assert (=> b!104542 t!5683))

(declare-fun b_and!6453 () Bool)

(assert (= b_and!6449 (and (=> t!5683 result!3437) b_and!6453)))

(assert (=> b!104551 m!114525))

(assert (=> b!104551 m!114525))

(assert (=> b!104551 m!114527))

(declare-fun m!116171 () Bool)

(assert (=> bm!10982 m!116171))

(assert (=> b!104535 m!114525))

(assert (=> b!104535 m!114525))

(declare-fun m!116173 () Bool)

(assert (=> b!104535 m!116173))

(declare-fun m!116175 () Bool)

(assert (=> bm!10983 m!116175))

(assert (=> b!104542 m!114535))

(assert (=> b!104542 m!114535))

(assert (=> b!104542 m!114537))

(assert (=> b!104542 m!114539))

(assert (=> b!104542 m!114525))

(assert (=> b!104542 m!114525))

(declare-fun m!116177 () Bool)

(assert (=> b!104542 m!116177))

(assert (=> b!104542 m!114537))

(declare-fun m!116179 () Bool)

(assert (=> b!104532 m!116179))

(declare-fun m!116181 () Bool)

(assert (=> b!104536 m!116181))

(declare-fun m!116183 () Bool)

(assert (=> b!104536 m!116183))

(declare-fun m!116185 () Bool)

(assert (=> b!104536 m!116185))

(declare-fun m!116187 () Bool)

(assert (=> b!104536 m!116187))

(declare-fun m!116189 () Bool)

(assert (=> b!104536 m!116189))

(declare-fun m!116191 () Bool)

(assert (=> b!104536 m!116191))

(declare-fun m!116193 () Bool)

(assert (=> b!104536 m!116193))

(declare-fun m!116195 () Bool)

(assert (=> b!104536 m!116195))

(assert (=> b!104536 m!114525))

(assert (=> b!104536 m!116181))

(declare-fun m!116197 () Bool)

(assert (=> b!104536 m!116197))

(assert (=> b!104536 m!116195))

(declare-fun m!116199 () Bool)

(assert (=> b!104536 m!116199))

(assert (=> b!104536 m!116187))

(declare-fun m!116201 () Bool)

(assert (=> b!104536 m!116201))

(declare-fun m!116203 () Bool)

(assert (=> b!104536 m!116203))

(declare-fun m!116205 () Bool)

(assert (=> b!104536 m!116205))

(assert (=> b!104536 m!116171))

(declare-fun m!116207 () Bool)

(assert (=> b!104536 m!116207))

(assert (=> b!104536 m!116191))

(declare-fun m!116209 () Bool)

(assert (=> b!104536 m!116209))

(assert (=> d!28379 m!114575))

(declare-fun m!116211 () Bool)

(assert (=> bm!10987 m!116211))

(declare-fun m!116213 () Bool)

(assert (=> b!104550 m!116213))

(assert (=> b!104546 m!114525))

(assert (=> b!104546 m!114525))

(assert (=> b!104546 m!114527))

(declare-fun m!116215 () Bool)

(assert (=> b!104544 m!116215))

(declare-fun m!116217 () Bool)

(assert (=> bm!10986 m!116217))

(assert (=> d!27843 d!28379))

(declare-fun d!28381 () Bool)

(assert (=> d!28381 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52670 lt!52542 (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28381 true))

(declare-fun _$7!89 () Unit!3150)

(assert (=> d!28381 (= (choose!640 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52670 (zeroValue!2438 newMap!16) lt!52542 (minValue!2438 newMap!16) (defaultEntry!2561 newMap!16)) _$7!89)))

(declare-fun bs!4295 () Bool)

(assert (= bs!4295 d!28381))

(assert (=> bs!4295 m!114331))

(assert (=> bs!4295 m!114331))

(assert (=> bs!4295 m!114677))

(assert (=> bs!4295 m!114679))

(assert (=> d!27843 d!28381))

(assert (=> d!27843 d!28111))

(declare-fun lt!53386 () Bool)

(declare-fun d!28383 () Bool)

(assert (=> d!28383 (= lt!53386 (select (content!108 (toList!800 lt!53077)) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68081 () Bool)

(assert (=> d!28383 (= lt!53386 e!68081)))

(declare-fun res!52139 () Bool)

(assert (=> d!28383 (=> (not res!52139) (not e!68081))))

(assert (=> d!28383 (= res!52139 ((_ is Cons!1607) (toList!800 lt!53077)))))

(assert (=> d!28383 (= (contains!826 (toList!800 lt!53077) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53386)))

(declare-fun b!104552 () Bool)

(declare-fun e!68080 () Bool)

(assert (=> b!104552 (= e!68081 e!68080)))

(declare-fun res!52140 () Bool)

(assert (=> b!104552 (=> res!52140 e!68080)))

(assert (=> b!104552 (= res!52140 (= (h!2203 (toList!800 lt!53077)) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104553 () Bool)

(assert (=> b!104553 (= e!68080 (contains!826 (t!5673 (toList!800 lt!53077)) (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28383 res!52139) b!104552))

(assert (= (and b!104552 (not res!52140)) b!104553))

(declare-fun m!116219 () Bool)

(assert (=> d!28383 m!116219))

(declare-fun m!116221 () Bool)

(assert (=> d!28383 m!116221))

(declare-fun m!116223 () Bool)

(assert (=> b!104553 m!116223))

(assert (=> b!103930 d!28383))

(declare-fun b!104554 () Bool)

(declare-fun e!68088 () Bool)

(declare-fun e!68087 () Bool)

(assert (=> b!104554 (= e!68088 e!68087)))

(declare-fun c!18103 () Bool)

(declare-fun e!68082 () Bool)

(assert (=> b!104554 (= c!18103 e!68082)))

(declare-fun res!52142 () Bool)

(assert (=> b!104554 (=> (not res!52142) (not e!68082))))

(assert (=> b!104554 (= res!52142 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104555 () Bool)

(assert (=> b!104555 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> b!104555 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68083 () Bool)

(declare-fun lt!53389 () ListLongMap!1569)

(assert (=> b!104555 (= e!68083 (= (apply!97 lt!53389 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!68085 () Bool)

(declare-fun b!104556 () Bool)

(assert (=> b!104556 (= e!68085 (= lt!53389 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104557 () Bool)

(declare-fun e!68084 () ListLongMap!1569)

(declare-fun e!68086 () ListLongMap!1569)

(assert (=> b!104557 (= e!68084 e!68086)))

(declare-fun c!18104 () Bool)

(assert (=> b!104557 (= c!18104 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!104558 () Bool)

(declare-fun call!10991 () ListLongMap!1569)

(assert (=> b!104558 (= e!68086 call!10991)))

(declare-fun bm!10988 () Bool)

(assert (=> bm!10988 (= call!10991 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun d!28385 () Bool)

(assert (=> d!28385 e!68088))

(declare-fun res!52143 () Bool)

(assert (=> d!28385 (=> (not res!52143) (not e!68088))))

(assert (=> d!28385 (= res!52143 (not (contains!824 lt!53389 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28385 (= lt!53389 e!68084)))

(declare-fun c!18106 () Bool)

(assert (=> d!28385 (= c!18106 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28385 (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992))))))

(assert (=> d!28385 (= (getCurrentListMapNoExtraKeys!107 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (_values!2544 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992))) (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) (zeroValue!2438 (v!2876 (underlying!358 thiss!992))) (minValue!2438 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992)))) lt!53389)))

(declare-fun b!104559 () Bool)

(assert (=> b!104559 (= e!68087 e!68083)))

(assert (=> b!104559 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun res!52141 () Bool)

(assert (=> b!104559 (= res!52141 (contains!824 lt!53389 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104559 (=> (not res!52141) (not e!68083))))

(declare-fun b!104560 () Bool)

(declare-fun lt!53390 () Unit!3150)

(declare-fun lt!53392 () Unit!3150)

(assert (=> b!104560 (= lt!53390 lt!53392)))

(declare-fun lt!53388 () ListLongMap!1569)

(declare-fun lt!53391 () (_ BitVec 64))

(declare-fun lt!53393 () V!3211)

(declare-fun lt!53387 () (_ BitVec 64))

(assert (=> b!104560 (not (contains!824 (+!141 lt!53388 (tuple2!2401 lt!53387 lt!53393)) lt!53391))))

(assert (=> b!104560 (= lt!53392 (addStillNotContains!45 lt!53388 lt!53387 lt!53393 lt!53391))))

(assert (=> b!104560 (= lt!53391 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104560 (= lt!53393 (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104560 (= lt!53387 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (=> b!104560 (= lt!53388 call!10991)))

(assert (=> b!104560 (= e!68086 (+!141 call!10991 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104561 () Bool)

(assert (=> b!104561 (= e!68087 e!68085)))

(declare-fun c!18105 () Bool)

(assert (=> b!104561 (= c!18105 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104562 () Bool)

(assert (=> b!104562 (= e!68085 (isEmpty!367 lt!53389))))

(declare-fun b!104563 () Bool)

(assert (=> b!104563 (= e!68084 (ListLongMap!1570 Nil!1608))))

(declare-fun b!104564 () Bool)

(assert (=> b!104564 (= e!68082 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(assert (=> b!104564 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!104565 () Bool)

(declare-fun res!52144 () Bool)

(assert (=> b!104565 (=> (not res!52144) (not e!68088))))

(assert (=> b!104565 (= res!52144 (not (contains!824 lt!53389 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28385 c!18106) b!104563))

(assert (= (and d!28385 (not c!18106)) b!104557))

(assert (= (and b!104557 c!18104) b!104560))

(assert (= (and b!104557 (not c!18104)) b!104558))

(assert (= (or b!104560 b!104558) bm!10988))

(assert (= (and d!28385 res!52143) b!104565))

(assert (= (and b!104565 res!52144) b!104554))

(assert (= (and b!104554 res!52142) b!104564))

(assert (= (and b!104554 c!18103) b!104559))

(assert (= (and b!104554 (not c!18103)) b!104561))

(assert (= (and b!104559 res!52141) b!104555))

(assert (= (and b!104561 c!18105) b!104556))

(assert (= (and b!104561 (not c!18105)) b!104562))

(declare-fun b_lambda!4665 () Bool)

(assert (=> (not b_lambda!4665) (not b!104555)))

(assert (=> b!104555 t!5669))

(declare-fun b_and!6455 () Bool)

(assert (= b_and!6451 (and (=> t!5669 result!3421) b_and!6455)))

(assert (=> b!104555 t!5671))

(declare-fun b_and!6457 () Bool)

(assert (= b_and!6453 (and (=> t!5671 result!3425) b_and!6457)))

(declare-fun b_lambda!4667 () Bool)

(assert (=> (not b_lambda!4667) (not b!104560)))

(assert (=> b!104560 t!5669))

(declare-fun b_and!6459 () Bool)

(assert (= b_and!6455 (and (=> t!5669 result!3421) b_and!6459)))

(assert (=> b!104560 t!5671))

(declare-fun b_and!6461 () Bool)

(assert (= b_and!6457 (and (=> t!5671 result!3425) b_and!6461)))

(declare-fun m!116225 () Bool)

(assert (=> b!104560 m!116225))

(declare-fun m!116227 () Bool)

(assert (=> b!104560 m!116227))

(declare-fun m!116229 () Bool)

(assert (=> b!104560 m!116229))

(assert (=> b!104560 m!114197))

(declare-fun m!116231 () Bool)

(assert (=> b!104560 m!116231))

(declare-fun m!116233 () Bool)

(assert (=> b!104560 m!116233))

(assert (=> b!104560 m!116229))

(assert (=> b!104560 m!116233))

(declare-fun m!116235 () Bool)

(assert (=> b!104560 m!116235))

(assert (=> b!104560 m!115601))

(assert (=> b!104560 m!114197))

(declare-fun m!116237 () Bool)

(assert (=> b!104565 m!116237))

(assert (=> b!104564 m!115601))

(assert (=> b!104564 m!115601))

(declare-fun m!116239 () Bool)

(assert (=> b!104564 m!116239))

(assert (=> b!104559 m!115601))

(assert (=> b!104559 m!115601))

(declare-fun m!116241 () Bool)

(assert (=> b!104559 m!116241))

(assert (=> b!104557 m!115601))

(assert (=> b!104557 m!115601))

(assert (=> b!104557 m!116239))

(declare-fun m!116243 () Bool)

(assert (=> b!104556 m!116243))

(assert (=> b!104555 m!116229))

(assert (=> b!104555 m!114197))

(assert (=> b!104555 m!116231))

(assert (=> b!104555 m!115601))

(declare-fun m!116245 () Bool)

(assert (=> b!104555 m!116245))

(assert (=> b!104555 m!116229))

(assert (=> b!104555 m!115601))

(assert (=> b!104555 m!114197))

(declare-fun m!116247 () Bool)

(assert (=> b!104562 m!116247))

(declare-fun m!116249 () Bool)

(assert (=> d!28385 m!116249))

(assert (=> d!28385 m!114181))

(assert (=> bm!10988 m!116243))

(assert (=> bm!10901 d!28385))

(declare-fun d!28387 () Bool)

(assert (=> d!28387 (= (get!1326 (getValueByKey!155 (toList!800 lt!52718) lt!52730)) (v!2880 (getValueByKey!155 (toList!800 lt!52718) lt!52730)))))

(assert (=> d!27985 d!28387))

(declare-fun d!28389 () Bool)

(declare-fun c!18107 () Bool)

(assert (=> d!28389 (= c!18107 (and ((_ is Cons!1607) (toList!800 lt!52718)) (= (_1!1211 (h!2203 (toList!800 lt!52718))) lt!52730)))))

(declare-fun e!68089 () Option!161)

(assert (=> d!28389 (= (getValueByKey!155 (toList!800 lt!52718) lt!52730) e!68089)))

(declare-fun b!104567 () Bool)

(declare-fun e!68090 () Option!161)

(assert (=> b!104567 (= e!68089 e!68090)))

(declare-fun c!18108 () Bool)

(assert (=> b!104567 (= c!18108 (and ((_ is Cons!1607) (toList!800 lt!52718)) (not (= (_1!1211 (h!2203 (toList!800 lt!52718))) lt!52730))))))

(declare-fun b!104568 () Bool)

(assert (=> b!104568 (= e!68090 (getValueByKey!155 (t!5673 (toList!800 lt!52718)) lt!52730))))

(declare-fun b!104569 () Bool)

(assert (=> b!104569 (= e!68090 None!159)))

(declare-fun b!104566 () Bool)

(assert (=> b!104566 (= e!68089 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52718)))))))

(assert (= (and d!28389 c!18107) b!104566))

(assert (= (and d!28389 (not c!18107)) b!104567))

(assert (= (and b!104567 c!18108) b!104568))

(assert (= (and b!104567 (not c!18108)) b!104569))

(declare-fun m!116251 () Bool)

(assert (=> b!104568 m!116251))

(assert (=> d!27985 d!28389))

(assert (=> b!103790 d!28031))

(declare-fun d!28391 () Bool)

(assert (=> d!28391 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540)))))))

(declare-fun bs!4296 () Bool)

(assert (= bs!4296 d!28391))

(assert (=> bs!4296 m!114469))

(declare-fun m!116253 () Bool)

(assert (=> bs!4296 m!116253))

(assert (=> b!103746 d!28391))

(assert (=> b!103746 d!27831))

(declare-fun d!28393 () Bool)

(declare-fun res!52145 () Bool)

(declare-fun e!68091 () Bool)

(assert (=> d!28393 (=> res!52145 e!68091)))

(assert (=> d!28393 (= res!52145 (and ((_ is Cons!1607) lt!52947) (= (_1!1211 (h!2203 lt!52947)) (_1!1211 lt!52538))))))

(assert (=> d!28393 (= (containsKey!159 lt!52947 (_1!1211 lt!52538)) e!68091)))

(declare-fun b!104570 () Bool)

(declare-fun e!68092 () Bool)

(assert (=> b!104570 (= e!68091 e!68092)))

(declare-fun res!52146 () Bool)

(assert (=> b!104570 (=> (not res!52146) (not e!68092))))

(assert (=> b!104570 (= res!52146 (and (or (not ((_ is Cons!1607) lt!52947)) (bvsle (_1!1211 (h!2203 lt!52947)) (_1!1211 lt!52538))) ((_ is Cons!1607) lt!52947) (bvslt (_1!1211 (h!2203 lt!52947)) (_1!1211 lt!52538))))))

(declare-fun b!104571 () Bool)

(assert (=> b!104571 (= e!68092 (containsKey!159 (t!5673 lt!52947) (_1!1211 lt!52538)))))

(assert (= (and d!28393 (not res!52145)) b!104570))

(assert (= (and b!104570 res!52146) b!104571))

(declare-fun m!116255 () Bool)

(assert (=> b!104571 m!116255))

(assert (=> b!103743 d!28393))

(assert (=> b!103824 d!28031))

(declare-fun d!28395 () Bool)

(declare-fun e!68094 () Bool)

(assert (=> d!28395 e!68094))

(declare-fun res!52147 () Bool)

(assert (=> d!28395 (=> res!52147 e!68094)))

(declare-fun lt!53394 () Bool)

(assert (=> d!28395 (= res!52147 (not lt!53394))))

(declare-fun lt!53395 () Bool)

(assert (=> d!28395 (= lt!53394 lt!53395)))

(declare-fun lt!53396 () Unit!3150)

(declare-fun e!68093 () Unit!3150)

(assert (=> d!28395 (= lt!53396 e!68093)))

(declare-fun c!18109 () Bool)

(assert (=> d!28395 (= c!18109 lt!53395)))

(assert (=> d!28395 (= lt!53395 (containsKey!159 (toList!800 (map!1282 (_2!1212 lt!52911))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28395 (= (contains!824 (map!1282 (_2!1212 lt!52911)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53394)))

(declare-fun b!104572 () Bool)

(declare-fun lt!53397 () Unit!3150)

(assert (=> b!104572 (= e!68093 lt!53397)))

(assert (=> b!104572 (= lt!53397 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (map!1282 (_2!1212 lt!52911))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104572 (isDefined!108 (getValueByKey!155 (toList!800 (map!1282 (_2!1212 lt!52911))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104573 () Bool)

(declare-fun Unit!3201 () Unit!3150)

(assert (=> b!104573 (= e!68093 Unit!3201)))

(declare-fun b!104574 () Bool)

(assert (=> b!104574 (= e!68094 (isDefined!108 (getValueByKey!155 (toList!800 (map!1282 (_2!1212 lt!52911))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!28395 c!18109) b!104572))

(assert (= (and d!28395 (not c!18109)) b!104573))

(assert (= (and d!28395 (not res!52147)) b!104574))

(assert (=> d!28395 m!114165))

(declare-fun m!116257 () Bool)

(assert (=> d!28395 m!116257))

(assert (=> b!104572 m!114165))

(declare-fun m!116259 () Bool)

(assert (=> b!104572 m!116259))

(assert (=> b!104572 m!114165))

(declare-fun m!116261 () Bool)

(assert (=> b!104572 m!116261))

(assert (=> b!104572 m!116261))

(declare-fun m!116263 () Bool)

(assert (=> b!104572 m!116263))

(assert (=> b!104574 m!114165))

(assert (=> b!104574 m!116261))

(assert (=> b!104574 m!116261))

(assert (=> b!104574 m!116263))

(assert (=> b!103705 d!28395))

(assert (=> b!103705 d!28241))

(assert (=> d!27825 d!28111))

(declare-fun d!28397 () Bool)

(declare-fun c!18110 () Bool)

(assert (=> d!28397 (= c!18110 (and ((_ is Cons!1607) (t!5673 lt!52790)) (= (_1!1211 (h!2203 (t!5673 lt!52790))) (_1!1211 lt!52540))))))

(declare-fun e!68095 () Option!161)

(assert (=> d!28397 (= (getValueByKey!155 (t!5673 lt!52790) (_1!1211 lt!52540)) e!68095)))

(declare-fun b!104576 () Bool)

(declare-fun e!68096 () Option!161)

(assert (=> b!104576 (= e!68095 e!68096)))

(declare-fun c!18111 () Bool)

(assert (=> b!104576 (= c!18111 (and ((_ is Cons!1607) (t!5673 lt!52790)) (not (= (_1!1211 (h!2203 (t!5673 lt!52790))) (_1!1211 lt!52540)))))))

(declare-fun b!104577 () Bool)

(assert (=> b!104577 (= e!68096 (getValueByKey!155 (t!5673 (t!5673 lt!52790)) (_1!1211 lt!52540)))))

(declare-fun b!104578 () Bool)

(assert (=> b!104578 (= e!68096 None!159)))

(declare-fun b!104575 () Bool)

(assert (=> b!104575 (= e!68095 (Some!160 (_2!1211 (h!2203 (t!5673 lt!52790)))))))

(assert (= (and d!28397 c!18110) b!104575))

(assert (= (and d!28397 (not c!18110)) b!104576))

(assert (= (and b!104576 c!18111) b!104577))

(assert (= (and b!104576 (not c!18111)) b!104578))

(declare-fun m!116265 () Bool)

(assert (=> b!104577 m!116265))

(assert (=> b!103749 d!28397))

(declare-fun d!28399 () Bool)

(assert (=> d!28399 (= (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731)) (not (isEmpty!369 (getValueByKey!155 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))))

(declare-fun bs!4297 () Bool)

(assert (= bs!4297 d!28399))

(assert (=> bs!4297 m!115239))

(declare-fun m!116267 () Bool)

(assert (=> bs!4297 m!116267))

(assert (=> b!103992 d!28399))

(declare-fun d!28401 () Bool)

(declare-fun c!18112 () Bool)

(assert (=> d!28401 (= c!18112 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52731)))))

(declare-fun e!68097 () Option!161)

(assert (=> d!28401 (= (getValueByKey!155 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731) e!68097)))

(declare-fun b!104580 () Bool)

(declare-fun e!68098 () Option!161)

(assert (=> b!104580 (= e!68097 e!68098)))

(declare-fun c!18113 () Bool)

(assert (=> b!104580 (= c!18113 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52731))))))

(declare-fun b!104581 () Bool)

(assert (=> b!104581 (= e!68098 (getValueByKey!155 (t!5673 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!52731))))

(declare-fun b!104582 () Bool)

(assert (=> b!104582 (= e!68098 None!159)))

(declare-fun b!104579 () Bool)

(assert (=> b!104579 (= e!68097 (Some!160 (_2!1211 (h!2203 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(assert (= (and d!28401 c!18112) b!104579))

(assert (= (and d!28401 (not c!18112)) b!104580))

(assert (= (and b!104580 c!18113) b!104581))

(assert (= (and b!104580 (not c!18113)) b!104582))

(declare-fun m!116269 () Bool)

(assert (=> b!104581 m!116269))

(assert (=> b!103992 d!28401))

(assert (=> b!103625 d!28031))

(declare-fun d!28403 () Bool)

(declare-fun res!52148 () Bool)

(declare-fun e!68099 () Bool)

(assert (=> d!28403 (=> res!52148 e!68099)))

(assert (=> d!28403 (= res!52148 (and ((_ is Cons!1607) lt!52805) (= (_1!1211 (h!2203 lt!52805)) (_1!1211 lt!52538))))))

(assert (=> d!28403 (= (containsKey!159 lt!52805 (_1!1211 lt!52538)) e!68099)))

(declare-fun b!104583 () Bool)

(declare-fun e!68100 () Bool)

(assert (=> b!104583 (= e!68099 e!68100)))

(declare-fun res!52149 () Bool)

(assert (=> b!104583 (=> (not res!52149) (not e!68100))))

(assert (=> b!104583 (= res!52149 (and (or (not ((_ is Cons!1607) lt!52805)) (bvsle (_1!1211 (h!2203 lt!52805)) (_1!1211 lt!52538))) ((_ is Cons!1607) lt!52805) (bvslt (_1!1211 (h!2203 lt!52805)) (_1!1211 lt!52538))))))

(declare-fun b!104584 () Bool)

(assert (=> b!104584 (= e!68100 (containsKey!159 (t!5673 lt!52805) (_1!1211 lt!52538)))))

(assert (= (and d!28403 (not res!52148)) b!104583))

(assert (= (and b!104583 res!52149) b!104584))

(declare-fun m!116271 () Bool)

(assert (=> b!104584 m!116271))

(assert (=> b!103600 d!28403))

(declare-fun d!28405 () Bool)

(declare-fun lt!53398 () Bool)

(assert (=> d!28405 (= lt!53398 (select (content!108 (toList!800 lt!53123)) (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68102 () Bool)

(assert (=> d!28405 (= lt!53398 e!68102)))

(declare-fun res!52150 () Bool)

(assert (=> d!28405 (=> (not res!52150) (not e!68102))))

(assert (=> d!28405 (= res!52150 ((_ is Cons!1607) (toList!800 lt!53123)))))

(assert (=> d!28405 (= (contains!826 (toList!800 lt!53123) (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53398)))

(declare-fun b!104585 () Bool)

(declare-fun e!68101 () Bool)

(assert (=> b!104585 (= e!68102 e!68101)))

(declare-fun res!52151 () Bool)

(assert (=> b!104585 (=> res!52151 e!68101)))

(assert (=> b!104585 (= res!52151 (= (h!2203 (toList!800 lt!53123)) (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104586 () Bool)

(assert (=> b!104586 (= e!68101 (contains!826 (t!5673 (toList!800 lt!53123)) (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28405 res!52150) b!104585))

(assert (= (and b!104585 (not res!52151)) b!104586))

(declare-fun m!116273 () Bool)

(assert (=> d!28405 m!116273))

(declare-fun m!116275 () Bool)

(assert (=> d!28405 m!116275))

(declare-fun m!116277 () Bool)

(assert (=> b!104586 m!116277))

(assert (=> b!103988 d!28405))

(declare-fun d!28407 () Bool)

(assert (=> d!28407 (= (apply!97 lt!52998 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52998) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4298 () Bool)

(assert (= bs!4298 d!28407))

(declare-fun m!116279 () Bool)

(assert (=> bs!4298 m!116279))

(assert (=> bs!4298 m!116279))

(declare-fun m!116281 () Bool)

(assert (=> bs!4298 m!116281))

(assert (=> b!103822 d!28407))

(declare-fun d!28409 () Bool)

(assert (=> d!28409 (= (inRange!0 (index!3180 lt!53148) (mask!6697 newMap!16)) (and (bvsge (index!3180 lt!53148) #b00000000000000000000000000000000) (bvslt (index!3180 lt!53148) (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!104010 d!28409))

(assert (=> d!27855 d!27853))

(declare-fun d!28411 () Bool)

(assert (=> d!28411 (= (getValueByKey!155 lt!52794 (_1!1211 lt!52538)) (Some!160 (_2!1211 lt!52538)))))

(assert (=> d!28411 true))

(declare-fun _$22!430 () Unit!3150)

(assert (=> d!28411 (= (choose!639 lt!52794 (_1!1211 lt!52538) (_2!1211 lt!52538)) _$22!430)))

(declare-fun bs!4299 () Bool)

(assert (= bs!4299 d!28411))

(assert (=> bs!4299 m!114475))

(assert (=> d!27855 d!28411))

(declare-fun d!28413 () Bool)

(declare-fun res!52152 () Bool)

(declare-fun e!68103 () Bool)

(assert (=> d!28413 (=> res!52152 e!68103)))

(assert (=> d!28413 (= res!52152 (or ((_ is Nil!1608) lt!52794) ((_ is Nil!1608) (t!5673 lt!52794))))))

(assert (=> d!28413 (= (isStrictlySorted!308 lt!52794) e!68103)))

(declare-fun b!104587 () Bool)

(declare-fun e!68104 () Bool)

(assert (=> b!104587 (= e!68103 e!68104)))

(declare-fun res!52153 () Bool)

(assert (=> b!104587 (=> (not res!52153) (not e!68104))))

(assert (=> b!104587 (= res!52153 (bvslt (_1!1211 (h!2203 lt!52794)) (_1!1211 (h!2203 (t!5673 lt!52794)))))))

(declare-fun b!104588 () Bool)

(assert (=> b!104588 (= e!68104 (isStrictlySorted!308 (t!5673 lt!52794)))))

(assert (= (and d!28413 (not res!52152)) b!104587))

(assert (= (and b!104587 res!52153) b!104588))

(declare-fun m!116283 () Bool)

(assert (=> b!104588 m!116283))

(assert (=> d!27855 d!28413))

(declare-fun d!28415 () Bool)

(declare-fun e!68106 () Bool)

(assert (=> d!28415 e!68106))

(declare-fun res!52154 () Bool)

(assert (=> d!28415 (=> res!52154 e!68106)))

(declare-fun lt!53399 () Bool)

(assert (=> d!28415 (= res!52154 (not lt!53399))))

(declare-fun lt!53400 () Bool)

(assert (=> d!28415 (= lt!53399 lt!53400)))

(declare-fun lt!53401 () Unit!3150)

(declare-fun e!68105 () Unit!3150)

(assert (=> d!28415 (= lt!53401 e!68105)))

(declare-fun c!18114 () Bool)

(assert (=> d!28415 (= c!18114 lt!53400)))

(assert (=> d!28415 (= lt!53400 (containsKey!159 (toList!800 lt!53118) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28415 (= (contains!824 lt!53118 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53399)))

(declare-fun b!104589 () Bool)

(declare-fun lt!53402 () Unit!3150)

(assert (=> b!104589 (= e!68105 lt!53402)))

(assert (=> b!104589 (= lt!53402 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53118) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104589 (isDefined!108 (getValueByKey!155 (toList!800 lt!53118) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104590 () Bool)

(declare-fun Unit!3202 () Unit!3150)

(assert (=> b!104590 (= e!68105 Unit!3202)))

(declare-fun b!104591 () Bool)

(assert (=> b!104591 (= e!68106 (isDefined!108 (getValueByKey!155 (toList!800 lt!53118) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28415 c!18114) b!104589))

(assert (= (and d!28415 (not c!18114)) b!104590))

(assert (= (and d!28415 (not res!52154)) b!104591))

(declare-fun m!116285 () Bool)

(assert (=> d!28415 m!116285))

(declare-fun m!116287 () Bool)

(assert (=> b!104589 m!116287))

(assert (=> b!104589 m!115207))

(assert (=> b!104589 m!115207))

(declare-fun m!116289 () Bool)

(assert (=> b!104589 m!116289))

(assert (=> b!104591 m!115207))

(assert (=> b!104591 m!115207))

(assert (=> b!104591 m!116289))

(assert (=> d!27973 d!28415))

(declare-fun c!18115 () Bool)

(declare-fun d!28417 () Bool)

(assert (=> d!28417 (= c!18115 (and ((_ is Cons!1607) lt!53119) (= (_1!1211 (h!2203 lt!53119)) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68107 () Option!161)

(assert (=> d!28417 (= (getValueByKey!155 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68107)))

(declare-fun b!104593 () Bool)

(declare-fun e!68108 () Option!161)

(assert (=> b!104593 (= e!68107 e!68108)))

(declare-fun c!18116 () Bool)

(assert (=> b!104593 (= c!18116 (and ((_ is Cons!1607) lt!53119) (not (= (_1!1211 (h!2203 lt!53119)) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104594 () Bool)

(assert (=> b!104594 (= e!68108 (getValueByKey!155 (t!5673 lt!53119) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104595 () Bool)

(assert (=> b!104595 (= e!68108 None!159)))

(declare-fun b!104592 () Bool)

(assert (=> b!104592 (= e!68107 (Some!160 (_2!1211 (h!2203 lt!53119))))))

(assert (= (and d!28417 c!18115) b!104592))

(assert (= (and d!28417 (not c!18115)) b!104593))

(assert (= (and b!104593 c!18116) b!104594))

(assert (= (and b!104593 (not c!18116)) b!104595))

(declare-fun m!116291 () Bool)

(assert (=> b!104594 m!116291))

(assert (=> d!27973 d!28417))

(declare-fun d!28419 () Bool)

(assert (=> d!28419 (= (getValueByKey!155 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53403 () Unit!3150)

(assert (=> d!28419 (= lt!53403 (choose!639 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68109 () Bool)

(assert (=> d!28419 e!68109))

(declare-fun res!52155 () Bool)

(assert (=> d!28419 (=> (not res!52155) (not e!68109))))

(assert (=> d!28419 (= res!52155 (isStrictlySorted!308 lt!53119))))

(assert (=> d!28419 (= (lemmaContainsTupThenGetReturnValue!71 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53403)))

(declare-fun b!104596 () Bool)

(declare-fun res!52156 () Bool)

(assert (=> b!104596 (=> (not res!52156) (not e!68109))))

(assert (=> b!104596 (= res!52156 (containsKey!159 lt!53119 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104597 () Bool)

(assert (=> b!104597 (= e!68109 (contains!826 lt!53119 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28419 res!52155) b!104596))

(assert (= (and b!104596 res!52156) b!104597))

(assert (=> d!28419 m!115201))

(declare-fun m!116293 () Bool)

(assert (=> d!28419 m!116293))

(declare-fun m!116295 () Bool)

(assert (=> d!28419 m!116295))

(declare-fun m!116297 () Bool)

(assert (=> b!104596 m!116297))

(declare-fun m!116299 () Bool)

(assert (=> b!104597 m!116299))

(assert (=> d!27973 d!28419))

(declare-fun b!104598 () Bool)

(declare-fun e!68114 () List!1611)

(declare-fun e!68110 () List!1611)

(assert (=> b!104598 (= e!68114 e!68110)))

(declare-fun c!18118 () Bool)

(assert (=> b!104598 (= c!18118 (and ((_ is Cons!1607) (toList!800 lt!52717)) (= (_1!1211 (h!2203 (toList!800 lt!52717))) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104599 () Bool)

(declare-fun call!10993 () List!1611)

(assert (=> b!104599 (= e!68110 call!10993)))

(declare-fun bm!10989 () Bool)

(declare-fun call!10994 () List!1611)

(assert (=> bm!10989 (= call!10993 call!10994)))

(declare-fun c!18120 () Bool)

(declare-fun b!104601 () Bool)

(declare-fun e!68111 () List!1611)

(assert (=> b!104601 (= e!68111 (ite c!18118 (t!5673 (toList!800 lt!52717)) (ite c!18120 (Cons!1607 (h!2203 (toList!800 lt!52717)) (t!5673 (toList!800 lt!52717))) Nil!1608)))))

(declare-fun bm!10990 () Bool)

(declare-fun call!10992 () List!1611)

(assert (=> bm!10990 (= call!10992 call!10993)))

(declare-fun b!104602 () Bool)

(assert (=> b!104602 (= e!68111 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52717)) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun c!18119 () Bool)

(declare-fun bm!10991 () Bool)

(assert (=> bm!10991 (= call!10994 ($colon$colon!80 e!68111 (ite c!18119 (h!2203 (toList!800 lt!52717)) (tuple2!2401 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18117 () Bool)

(assert (=> bm!10991 (= c!18117 c!18119)))

(declare-fun b!104603 () Bool)

(declare-fun e!68112 () List!1611)

(assert (=> b!104603 (= e!68112 call!10992)))

(declare-fun b!104604 () Bool)

(assert (=> b!104604 (= c!18120 (and ((_ is Cons!1607) (toList!800 lt!52717)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52717))) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104604 (= e!68110 e!68112)))

(declare-fun b!104605 () Bool)

(assert (=> b!104605 (= e!68114 call!10994)))

(declare-fun d!28421 () Bool)

(declare-fun e!68113 () Bool)

(assert (=> d!28421 e!68113))

(declare-fun res!52157 () Bool)

(assert (=> d!28421 (=> (not res!52157) (not e!68113))))

(declare-fun lt!53404 () List!1611)

(assert (=> d!28421 (= res!52157 (isStrictlySorted!308 lt!53404))))

(assert (=> d!28421 (= lt!53404 e!68114)))

(assert (=> d!28421 (= c!18119 (and ((_ is Cons!1607) (toList!800 lt!52717)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52717))) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28421 (isStrictlySorted!308 (toList!800 lt!52717))))

(assert (=> d!28421 (= (insertStrictlySorted!74 (toList!800 lt!52717) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53404)))

(declare-fun b!104600 () Bool)

(assert (=> b!104600 (= e!68112 call!10992)))

(declare-fun b!104606 () Bool)

(assert (=> b!104606 (= e!68113 (contains!826 lt!53404 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104607 () Bool)

(declare-fun res!52158 () Bool)

(assert (=> b!104607 (=> (not res!52158) (not e!68113))))

(assert (=> b!104607 (= res!52158 (containsKey!159 lt!53404 (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28421 c!18119) b!104605))

(assert (= (and d!28421 (not c!18119)) b!104598))

(assert (= (and b!104598 c!18118) b!104599))

(assert (= (and b!104598 (not c!18118)) b!104604))

(assert (= (and b!104604 c!18120) b!104600))

(assert (= (and b!104604 (not c!18120)) b!104603))

(assert (= (or b!104600 b!104603) bm!10990))

(assert (= (or b!104599 bm!10990) bm!10989))

(assert (= (or b!104605 bm!10989) bm!10991))

(assert (= (and bm!10991 c!18117) b!104602))

(assert (= (and bm!10991 (not c!18117)) b!104601))

(assert (= (and d!28421 res!52157) b!104607))

(assert (= (and b!104607 res!52158) b!104606))

(declare-fun m!116301 () Bool)

(assert (=> b!104606 m!116301))

(declare-fun m!116303 () Bool)

(assert (=> b!104602 m!116303))

(declare-fun m!116305 () Bool)

(assert (=> bm!10991 m!116305))

(declare-fun m!116307 () Bool)

(assert (=> d!28421 m!116307))

(declare-fun m!116309 () Bool)

(assert (=> d!28421 m!116309))

(declare-fun m!116311 () Bool)

(assert (=> b!104607 m!116311))

(assert (=> d!27973 d!28421))

(declare-fun lt!53405 () Bool)

(declare-fun d!28423 () Bool)

(assert (=> d!28423 (= lt!53405 (select (content!108 (toList!800 lt!53092)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!68116 () Bool)

(assert (=> d!28423 (= lt!53405 e!68116)))

(declare-fun res!52159 () Bool)

(assert (=> d!28423 (=> (not res!52159) (not e!68116))))

(assert (=> d!28423 (= res!52159 ((_ is Cons!1607) (toList!800 lt!53092)))))

(assert (=> d!28423 (= (contains!826 (toList!800 lt!53092) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!53405)))

(declare-fun b!104608 () Bool)

(declare-fun e!68115 () Bool)

(assert (=> b!104608 (= e!68116 e!68115)))

(declare-fun res!52160 () Bool)

(assert (=> b!104608 (=> res!52160 e!68115)))

(assert (=> b!104608 (= res!52160 (= (h!2203 (toList!800 lt!53092)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104609 () Bool)

(assert (=> b!104609 (= e!68115 (contains!826 (t!5673 (toList!800 lt!53092)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!28423 res!52159) b!104608))

(assert (= (and b!104608 (not res!52160)) b!104609))

(declare-fun m!116313 () Bool)

(assert (=> d!28423 m!116313))

(declare-fun m!116315 () Bool)

(assert (=> d!28423 m!116315))

(declare-fun m!116317 () Bool)

(assert (=> b!104609 m!116317))

(assert (=> b!103943 d!28423))

(declare-fun d!28425 () Bool)

(assert (=> d!28425 (isDefined!108 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!53406 () Unit!3150)

(assert (=> d!28425 (= lt!53406 (choose!649 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!68117 () Bool)

(assert (=> d!28425 e!68117))

(declare-fun res!52161 () Bool)

(assert (=> d!28425 (=> (not res!52161) (not e!68117))))

(assert (=> d!28425 (= res!52161 (isStrictlySorted!308 (toList!800 lt!52783)))))

(assert (=> d!28425 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!53406)))

(declare-fun b!104610 () Bool)

(assert (=> b!104610 (= e!68117 (containsKey!159 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28425 res!52161) b!104610))

(assert (=> d!28425 m!114339))

(assert (=> d!28425 m!114685))

(assert (=> d!28425 m!114685))

(assert (=> d!28425 m!114687))

(assert (=> d!28425 m!114339))

(declare-fun m!116319 () Bool)

(assert (=> d!28425 m!116319))

(assert (=> d!28425 m!115379))

(assert (=> b!104610 m!114339))

(assert (=> b!104610 m!114681))

(assert (=> b!103716 d!28425))

(assert (=> b!103716 d!28257))

(assert (=> b!103716 d!28259))

(declare-fun d!28427 () Bool)

(declare-fun e!68119 () Bool)

(assert (=> d!28427 e!68119))

(declare-fun res!52162 () Bool)

(assert (=> d!28427 (=> res!52162 e!68119)))

(declare-fun lt!53407 () Bool)

(assert (=> d!28427 (= res!52162 (not lt!53407))))

(declare-fun lt!53408 () Bool)

(assert (=> d!28427 (= lt!53407 lt!53408)))

(declare-fun lt!53409 () Unit!3150)

(declare-fun e!68118 () Unit!3150)

(assert (=> d!28427 (= lt!53409 e!68118)))

(declare-fun c!18121 () Bool)

(assert (=> d!28427 (= c!18121 lt!53408)))

(assert (=> d!28427 (= lt!53408 (containsKey!159 (toList!800 lt!52956) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28427 (= (contains!824 lt!52956 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53407)))

(declare-fun b!104611 () Bool)

(declare-fun lt!53410 () Unit!3150)

(assert (=> b!104611 (= e!68118 lt!53410)))

(assert (=> b!104611 (= lt!53410 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52956) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104611 (isDefined!108 (getValueByKey!155 (toList!800 lt!52956) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104612 () Bool)

(declare-fun Unit!3203 () Unit!3150)

(assert (=> b!104612 (= e!68118 Unit!3203)))

(declare-fun b!104613 () Bool)

(assert (=> b!104613 (= e!68119 (isDefined!108 (getValueByKey!155 (toList!800 lt!52956) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28427 c!18121) b!104611))

(assert (= (and d!28427 (not c!18121)) b!104612))

(assert (= (and d!28427 (not res!52162)) b!104613))

(declare-fun m!116321 () Bool)

(assert (=> d!28427 m!116321))

(declare-fun m!116323 () Bool)

(assert (=> b!104611 m!116323))

(declare-fun m!116325 () Bool)

(assert (=> b!104611 m!116325))

(assert (=> b!104611 m!116325))

(declare-fun m!116327 () Bool)

(assert (=> b!104611 m!116327))

(assert (=> b!104613 m!116325))

(assert (=> b!104613 m!116325))

(assert (=> b!104613 m!116327))

(assert (=> b!103774 d!28427))

(declare-fun d!28429 () Bool)

(assert (=> d!28429 (= (get!1326 (getValueByKey!155 (toList!800 lt!52717) lt!52733)) (v!2880 (getValueByKey!155 (toList!800 lt!52717) lt!52733)))))

(assert (=> d!27987 d!28429))

(declare-fun d!28431 () Bool)

(declare-fun c!18122 () Bool)

(assert (=> d!28431 (= c!18122 (and ((_ is Cons!1607) (toList!800 lt!52717)) (= (_1!1211 (h!2203 (toList!800 lt!52717))) lt!52733)))))

(declare-fun e!68120 () Option!161)

(assert (=> d!28431 (= (getValueByKey!155 (toList!800 lt!52717) lt!52733) e!68120)))

(declare-fun b!104615 () Bool)

(declare-fun e!68121 () Option!161)

(assert (=> b!104615 (= e!68120 e!68121)))

(declare-fun c!18123 () Bool)

(assert (=> b!104615 (= c!18123 (and ((_ is Cons!1607) (toList!800 lt!52717)) (not (= (_1!1211 (h!2203 (toList!800 lt!52717))) lt!52733))))))

(declare-fun b!104616 () Bool)

(assert (=> b!104616 (= e!68121 (getValueByKey!155 (t!5673 (toList!800 lt!52717)) lt!52733))))

(declare-fun b!104617 () Bool)

(assert (=> b!104617 (= e!68121 None!159)))

(declare-fun b!104614 () Bool)

(assert (=> b!104614 (= e!68120 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52717)))))))

(assert (= (and d!28431 c!18122) b!104614))

(assert (= (and d!28431 (not c!18122)) b!104615))

(assert (= (and b!104615 c!18123) b!104616))

(assert (= (and b!104615 (not c!18123)) b!104617))

(declare-fun m!116329 () Bool)

(assert (=> b!104616 m!116329))

(assert (=> d!27987 d!28431))

(declare-fun e!68134 () SeekEntryResult!258)

(declare-fun b!104636 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!104636 (= e!68134 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16)) #b00000000000000000000000000000000 (mask!6697 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun b!104637 () Bool)

(declare-fun lt!53416 () SeekEntryResult!258)

(assert (=> b!104637 (and (bvsge (index!3181 lt!53416) #b00000000000000000000000000000000) (bvslt (index!3181 lt!53416) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun e!68136 () Bool)

(assert (=> b!104637 (= e!68136 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3181 lt!53416)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104638 () Bool)

(assert (=> b!104638 (and (bvsge (index!3181 lt!53416) #b00000000000000000000000000000000) (bvslt (index!3181 lt!53416) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun res!52171 () Bool)

(assert (=> b!104638 (= res!52171 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3181 lt!53416)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104638 (=> res!52171 e!68136)))

(declare-fun e!68132 () Bool)

(assert (=> b!104638 (= e!68132 e!68136)))

(declare-fun b!104640 () Bool)

(declare-fun e!68133 () SeekEntryResult!258)

(assert (=> b!104640 (= e!68133 e!68134)))

(declare-fun lt!53415 () (_ BitVec 64))

(declare-fun c!18132 () Bool)

(assert (=> b!104640 (= c!18132 (or (= lt!53415 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (= (bvadd lt!53415 lt!53415) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104641 () Bool)

(assert (=> b!104641 (= e!68134 (Intermediate!258 false (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!104642 () Bool)

(assert (=> b!104642 (= e!68133 (Intermediate!258 true (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun d!28433 () Bool)

(declare-fun e!68135 () Bool)

(assert (=> d!28433 e!68135))

(declare-fun c!18130 () Bool)

(assert (=> d!28433 (= c!18130 (and ((_ is Intermediate!258) lt!53416) (undefined!1070 lt!53416)))))

(assert (=> d!28433 (= lt!53416 e!68133)))

(declare-fun c!18131 () Bool)

(assert (=> d!28433 (= c!18131 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!28433 (= lt!53415 (select (arr!2057 (_keys!4263 newMap!16)) (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16))))))

(assert (=> d!28433 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28433 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53416)))

(declare-fun b!104639 () Bool)

(assert (=> b!104639 (= e!68135 e!68132)))

(declare-fun res!52170 () Bool)

(assert (=> b!104639 (= res!52170 (and ((_ is Intermediate!258) lt!53416) (not (undefined!1070 lt!53416)) (bvslt (x!13500 lt!53416) #b01111111111111111111111111111110) (bvsge (x!13500 lt!53416) #b00000000000000000000000000000000) (bvsge (x!13500 lt!53416) #b00000000000000000000000000000000)))))

(assert (=> b!104639 (=> (not res!52170) (not e!68132))))

(declare-fun b!104643 () Bool)

(assert (=> b!104643 (and (bvsge (index!3181 lt!53416) #b00000000000000000000000000000000) (bvslt (index!3181 lt!53416) (size!2311 (_keys!4263 newMap!16))))))

(declare-fun res!52169 () Bool)

(assert (=> b!104643 (= res!52169 (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3181 lt!53416)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104643 (=> res!52169 e!68136)))

(declare-fun b!104644 () Bool)

(assert (=> b!104644 (= e!68135 (bvsge (x!13500 lt!53416) #b01111111111111111111111111111110))))

(assert (= (and d!28433 c!18131) b!104642))

(assert (= (and d!28433 (not c!18131)) b!104640))

(assert (= (and b!104640 c!18132) b!104641))

(assert (= (and b!104640 (not c!18132)) b!104636))

(assert (= (and d!28433 c!18130) b!104644))

(assert (= (and d!28433 (not c!18130)) b!104639))

(assert (= (and b!104639 res!52170) b!104638))

(assert (= (and b!104638 (not res!52171)) b!104643))

(assert (= (and b!104643 (not res!52169)) b!104637))

(declare-fun m!116331 () Bool)

(assert (=> b!104643 m!116331))

(assert (=> b!104637 m!116331))

(assert (=> b!104638 m!116331))

(assert (=> d!28433 m!114899))

(declare-fun m!116333 () Bool)

(assert (=> d!28433 m!116333))

(assert (=> d!28433 m!114575))

(assert (=> b!104636 m!114899))

(declare-fun m!116335 () Bool)

(assert (=> b!104636 m!116335))

(assert (=> b!104636 m!116335))

(assert (=> b!104636 m!114165))

(declare-fun m!116337 () Bool)

(assert (=> b!104636 m!116337))

(assert (=> d!27885 d!28433))

(declare-fun d!28435 () Bool)

(declare-fun lt!53422 () (_ BitVec 32))

(declare-fun lt!53421 () (_ BitVec 32))

(assert (=> d!28435 (= lt!53422 (bvmul (bvxor lt!53421 (bvlshr lt!53421 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!28435 (= lt!53421 ((_ extract 31 0) (bvand (bvxor (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvlshr (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!28435 (and (bvsge (mask!6697 newMap!16) #b00000000000000000000000000000000) (let ((res!52172 (let ((h!2206 ((_ extract 31 0) (bvand (bvxor (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvlshr (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!13602 (bvmul (bvxor h!2206 (bvlshr h!2206 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!13602 (bvlshr x!13602 #b00000000000000000000000000001101)) (mask!6697 newMap!16)))))) (and (bvslt res!52172 (bvadd (mask!6697 newMap!16) #b00000000000000000000000000000001)) (bvsge res!52172 #b00000000000000000000000000000000))))))

(assert (=> d!28435 (= (toIndex!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (mask!6697 newMap!16)) (bvand (bvxor lt!53422 (bvlshr lt!53422 #b00000000000000000000000000001101)) (mask!6697 newMap!16)))))

(assert (=> d!27885 d!28435))

(assert (=> d!27885 d!28111))

(declare-fun c!18133 () Bool)

(declare-fun d!28437 () Bool)

(assert (=> d!28437 (= c!18133 (and ((_ is Cons!1607) (toList!800 lt!52842)) (= (_1!1211 (h!2203 (toList!800 lt!52842))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!68137 () Option!161)

(assert (=> d!28437 (= (getValueByKey!155 (toList!800 lt!52842) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) e!68137)))

(declare-fun b!104646 () Bool)

(declare-fun e!68138 () Option!161)

(assert (=> b!104646 (= e!68137 e!68138)))

(declare-fun c!18134 () Bool)

(assert (=> b!104646 (= c!18134 (and ((_ is Cons!1607) (toList!800 lt!52842)) (not (= (_1!1211 (h!2203 (toList!800 lt!52842))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!104647 () Bool)

(assert (=> b!104647 (= e!68138 (getValueByKey!155 (t!5673 (toList!800 lt!52842)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104648 () Bool)

(assert (=> b!104648 (= e!68138 None!159)))

(declare-fun b!104645 () Bool)

(assert (=> b!104645 (= e!68137 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52842)))))))

(assert (= (and d!28437 c!18133) b!104645))

(assert (= (and d!28437 (not c!18133)) b!104646))

(assert (= (and b!104646 c!18134) b!104647))

(assert (= (and b!104646 (not c!18134)) b!104648))

(declare-fun m!116339 () Bool)

(assert (=> b!104647 m!116339))

(assert (=> b!103657 d!28437))

(declare-fun d!28439 () Bool)

(declare-fun e!68139 () Bool)

(assert (=> d!28439 e!68139))

(declare-fun res!52174 () Bool)

(assert (=> d!28439 (=> (not res!52174) (not e!68139))))

(declare-fun lt!53424 () ListLongMap!1569)

(assert (=> d!28439 (= res!52174 (contains!824 lt!53424 (_1!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun lt!53425 () List!1611)

(assert (=> d!28439 (= lt!53424 (ListLongMap!1570 lt!53425))))

(declare-fun lt!53423 () Unit!3150)

(declare-fun lt!53426 () Unit!3150)

(assert (=> d!28439 (= lt!53423 lt!53426)))

(assert (=> d!28439 (= (getValueByKey!155 lt!53425 (_1!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28439 (= lt!53426 (lemmaContainsTupThenGetReturnValue!71 lt!53425 (_1!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28439 (= lt!53425 (insertStrictlySorted!74 (toList!800 (ite c!17852 call!10880 (ite c!17856 call!10881 call!10879))) (_1!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28439 (= (+!141 (ite c!17852 call!10880 (ite c!17856 call!10881 call!10879)) (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) lt!53424)))

(declare-fun b!104649 () Bool)

(declare-fun res!52173 () Bool)

(assert (=> b!104649 (=> (not res!52173) (not e!68139))))

(assert (=> b!104649 (= res!52173 (= (getValueByKey!155 (toList!800 lt!53424) (_1!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))))

(declare-fun b!104650 () Bool)

(assert (=> b!104650 (= e!68139 (contains!826 (toList!800 lt!53424) (ite (or c!17852 c!17856) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (= (and d!28439 res!52174) b!104649))

(assert (= (and b!104649 res!52173) b!104650))

(declare-fun m!116341 () Bool)

(assert (=> d!28439 m!116341))

(declare-fun m!116343 () Bool)

(assert (=> d!28439 m!116343))

(declare-fun m!116345 () Bool)

(assert (=> d!28439 m!116345))

(declare-fun m!116347 () Bool)

(assert (=> d!28439 m!116347))

(declare-fun m!116349 () Bool)

(assert (=> b!104649 m!116349))

(declare-fun m!116351 () Bool)

(assert (=> b!104650 m!116351))

(assert (=> bm!10878 d!28439))

(declare-fun d!28441 () Bool)

(declare-fun res!52175 () Bool)

(declare-fun e!68140 () Bool)

(assert (=> d!28441 (=> res!52175 e!68140)))

(assert (=> d!28441 (= res!52175 (and ((_ is Cons!1607) lt!52765) (= (_1!1211 (h!2203 lt!52765)) (_1!1211 lt!52540))))))

(assert (=> d!28441 (= (containsKey!159 lt!52765 (_1!1211 lt!52540)) e!68140)))

(declare-fun b!104651 () Bool)

(declare-fun e!68141 () Bool)

(assert (=> b!104651 (= e!68140 e!68141)))

(declare-fun res!52176 () Bool)

(assert (=> b!104651 (=> (not res!52176) (not e!68141))))

(assert (=> b!104651 (= res!52176 (and (or (not ((_ is Cons!1607) lt!52765)) (bvsle (_1!1211 (h!2203 lt!52765)) (_1!1211 lt!52540))) ((_ is Cons!1607) lt!52765) (bvslt (_1!1211 (h!2203 lt!52765)) (_1!1211 lt!52540))))))

(declare-fun b!104652 () Bool)

(assert (=> b!104652 (= e!68141 (containsKey!159 (t!5673 lt!52765) (_1!1211 lt!52540)))))

(assert (= (and d!28441 (not res!52175)) b!104651))

(assert (= (and b!104651 res!52176) b!104652))

(declare-fun m!116353 () Bool)

(assert (=> b!104652 m!116353))

(assert (=> b!103864 d!28441))

(declare-fun d!28443 () Bool)

(declare-fun e!68142 () Bool)

(assert (=> d!28443 e!68142))

(declare-fun res!52178 () Bool)

(assert (=> d!28443 (=> (not res!52178) (not e!68142))))

(declare-fun lt!53428 () ListLongMap!1569)

(assert (=> d!28443 (= res!52178 (contains!824 lt!53428 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(declare-fun lt!53429 () List!1611)

(assert (=> d!28443 (= lt!53428 (ListLongMap!1570 lt!53429))))

(declare-fun lt!53427 () Unit!3150)

(declare-fun lt!53430 () Unit!3150)

(assert (=> d!28443 (= lt!53427 lt!53430)))

(assert (=> d!28443 (= (getValueByKey!155 lt!53429 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(assert (=> d!28443 (= lt!53430 (lemmaContainsTupThenGetReturnValue!71 lt!53429 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(assert (=> d!28443 (= lt!53429 (insertStrictlySorted!74 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(assert (=> d!28443 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) lt!53428)))

(declare-fun b!104653 () Bool)

(declare-fun res!52177 () Bool)

(assert (=> b!104653 (=> (not res!52177) (not e!68142))))

(assert (=> b!104653 (= res!52177 (= (getValueByKey!155 (toList!800 lt!53428) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)))))))

(declare-fun b!104654 () Bool)

(assert (=> b!104654 (= e!68142 (contains!826 (toList!800 lt!53428) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)))))

(assert (= (and d!28443 res!52178) b!104653))

(assert (= (and b!104653 res!52177) b!104654))

(declare-fun m!116355 () Bool)

(assert (=> d!28443 m!116355))

(declare-fun m!116357 () Bool)

(assert (=> d!28443 m!116357))

(declare-fun m!116359 () Bool)

(assert (=> d!28443 m!116359))

(declare-fun m!116361 () Bool)

(assert (=> d!28443 m!116361))

(declare-fun m!116363 () Bool)

(assert (=> b!104653 m!116363))

(declare-fun m!116365 () Bool)

(assert (=> b!104654 m!116365))

(assert (=> d!28003 d!28443))

(declare-fun b!104655 () Bool)

(declare-fun e!68151 () Bool)

(declare-fun e!68152 () Bool)

(assert (=> b!104655 (= e!68151 e!68152)))

(declare-fun res!52187 () Bool)

(declare-fun call!10996 () Bool)

(assert (=> b!104655 (= res!52187 call!10996)))

(assert (=> b!104655 (=> (not res!52187) (not e!68152))))

(declare-fun bm!10992 () Bool)

(declare-fun call!10997 () ListLongMap!1569)

(declare-fun call!11001 () ListLongMap!1569)

(assert (=> bm!10992 (= call!10997 call!11001)))

(declare-fun call!10999 () ListLongMap!1569)

(declare-fun bm!10993 () Bool)

(assert (=> bm!10993 (= call!10999 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!10994 () Bool)

(declare-fun call!10995 () Bool)

(declare-fun lt!53442 () ListLongMap!1569)

(assert (=> bm!10994 (= call!10995 (contains!824 lt!53442 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!10995 () Bool)

(declare-fun call!10998 () ListLongMap!1569)

(declare-fun call!11000 () ListLongMap!1569)

(assert (=> bm!10995 (= call!10998 call!11000)))

(declare-fun b!104656 () Bool)

(declare-fun e!68144 () ListLongMap!1569)

(assert (=> b!104656 (= e!68144 (+!141 call!11001 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)))))

(declare-fun b!104657 () Bool)

(assert (=> b!104657 (= e!68151 (not call!10996))))

(declare-fun b!104658 () Bool)

(declare-fun e!68146 () ListLongMap!1569)

(assert (=> b!104658 (= e!68146 call!10997)))

(declare-fun b!104659 () Bool)

(declare-fun e!68145 () Bool)

(declare-fun e!68149 () Bool)

(assert (=> b!104659 (= e!68145 e!68149)))

(declare-fun res!52183 () Bool)

(assert (=> b!104659 (=> (not res!52183) (not e!68149))))

(assert (=> b!104659 (= res!52183 (contains!824 lt!53442 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104659 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun bm!10996 () Bool)

(assert (=> bm!10996 (= call!11000 call!10999)))

(declare-fun b!104660 () Bool)

(declare-fun e!68147 () Unit!3150)

(declare-fun lt!53437 () Unit!3150)

(assert (=> b!104660 (= e!68147 lt!53437)))

(declare-fun lt!53436 () ListLongMap!1569)

(assert (=> b!104660 (= lt!53436 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53446 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53446 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53445 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53445 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53440 () Unit!3150)

(assert (=> b!104660 (= lt!53440 (addStillContains!73 lt!53436 lt!53446 (zeroValue!2438 newMap!16) lt!53445))))

(assert (=> b!104660 (contains!824 (+!141 lt!53436 (tuple2!2401 lt!53446 (zeroValue!2438 newMap!16))) lt!53445)))

(declare-fun lt!53449 () Unit!3150)

(assert (=> b!104660 (= lt!53449 lt!53440)))

(declare-fun lt!53439 () ListLongMap!1569)

(assert (=> b!104660 (= lt!53439 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53443 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53443 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53448 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53448 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53451 () Unit!3150)

(assert (=> b!104660 (= lt!53451 (addApplyDifferent!73 lt!53439 lt!53443 lt!52542 lt!53448))))

(assert (=> b!104660 (= (apply!97 (+!141 lt!53439 (tuple2!2401 lt!53443 lt!52542)) lt!53448) (apply!97 lt!53439 lt!53448))))

(declare-fun lt!53433 () Unit!3150)

(assert (=> b!104660 (= lt!53433 lt!53451)))

(declare-fun lt!53432 () ListLongMap!1569)

(assert (=> b!104660 (= lt!53432 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53441 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53441 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53444 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53444 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!53452 () Unit!3150)

(assert (=> b!104660 (= lt!53452 (addApplyDifferent!73 lt!53432 lt!53441 (zeroValue!2438 newMap!16) lt!53444))))

(assert (=> b!104660 (= (apply!97 (+!141 lt!53432 (tuple2!2401 lt!53441 (zeroValue!2438 newMap!16))) lt!53444) (apply!97 lt!53432 lt!53444))))

(declare-fun lt!53450 () Unit!3150)

(assert (=> b!104660 (= lt!53450 lt!53452)))

(declare-fun lt!53431 () ListLongMap!1569)

(assert (=> b!104660 (= lt!53431 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53438 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53438 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53447 () (_ BitVec 64))

(assert (=> b!104660 (= lt!53447 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104660 (= lt!53437 (addApplyDifferent!73 lt!53431 lt!53438 lt!52542 lt!53447))))

(assert (=> b!104660 (= (apply!97 (+!141 lt!53431 (tuple2!2401 lt!53438 lt!52542)) lt!53447) (apply!97 lt!53431 lt!53447))))

(declare-fun b!104661 () Bool)

(declare-fun e!68143 () Bool)

(assert (=> b!104661 (= e!68143 (not call!10995))))

(declare-fun b!104662 () Bool)

(declare-fun e!68155 () ListLongMap!1569)

(assert (=> b!104662 (= e!68155 call!10997)))

(declare-fun b!104663 () Bool)

(assert (=> b!104663 (= e!68155 call!10998)))

(declare-fun b!104664 () Bool)

(declare-fun c!18135 () Bool)

(assert (=> b!104664 (= c!18135 (and (not (= (bvand lt!52664 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!52664 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104664 (= e!68146 e!68155)))

(declare-fun b!104665 () Bool)

(declare-fun e!68154 () Bool)

(assert (=> b!104665 (= e!68143 e!68154)))

(declare-fun res!52181 () Bool)

(assert (=> b!104665 (= res!52181 call!10995)))

(assert (=> b!104665 (=> (not res!52181) (not e!68154))))

(declare-fun b!104666 () Bool)

(assert (=> b!104666 (= e!68149 (= (apply!97 lt!53442 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104666 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (_values!2544 newMap!16))))))

(assert (=> b!104666 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104667 () Bool)

(declare-fun res!52185 () Bool)

(declare-fun e!68153 () Bool)

(assert (=> b!104667 (=> (not res!52185) (not e!68153))))

(assert (=> b!104667 (= res!52185 e!68151)))

(declare-fun c!18138 () Bool)

(assert (=> b!104667 (= c!18138 (not (= (bvand lt!52664 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28445 () Bool)

(assert (=> d!28445 e!68153))

(declare-fun res!52186 () Bool)

(assert (=> d!28445 (=> (not res!52186) (not e!68153))))

(assert (=> d!28445 (= res!52186 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun lt!53434 () ListLongMap!1569)

(assert (=> d!28445 (= lt!53442 lt!53434)))

(declare-fun lt!53435 () Unit!3150)

(assert (=> d!28445 (= lt!53435 e!68147)))

(declare-fun c!18139 () Bool)

(declare-fun e!68148 () Bool)

(assert (=> d!28445 (= c!18139 e!68148)))

(declare-fun res!52184 () Bool)

(assert (=> d!28445 (=> (not res!52184) (not e!68148))))

(assert (=> d!28445 (= res!52184 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28445 (= lt!53434 e!68144)))

(declare-fun c!18136 () Bool)

(assert (=> d!28445 (= c!18136 (and (not (= (bvand lt!52664 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!52664 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28445 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28445 (= (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53442)))

(declare-fun bm!10997 () Bool)

(declare-fun c!18140 () Bool)

(assert (=> bm!10997 (= call!11001 (+!141 (ite c!18136 call!10999 (ite c!18140 call!11000 call!10998)) (ite (or c!18136 c!18140) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542))))))

(declare-fun b!104668 () Bool)

(assert (=> b!104668 (= e!68152 (= (apply!97 lt!53442 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!104669 () Bool)

(assert (=> b!104669 (= e!68153 e!68143)))

(declare-fun c!18137 () Bool)

(assert (=> b!104669 (= c!18137 (not (= (bvand lt!52664 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104670 () Bool)

(assert (=> b!104670 (= e!68148 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104671 () Bool)

(declare-fun res!52180 () Bool)

(assert (=> b!104671 (=> (not res!52180) (not e!68153))))

(assert (=> b!104671 (= res!52180 e!68145)))

(declare-fun res!52182 () Bool)

(assert (=> b!104671 (=> res!52182 e!68145)))

(declare-fun e!68150 () Bool)

(assert (=> b!104671 (= res!52182 (not e!68150))))

(declare-fun res!52179 () Bool)

(assert (=> b!104671 (=> (not res!52179) (not e!68150))))

(assert (=> b!104671 (= res!52179 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104672 () Bool)

(assert (=> b!104672 (= e!68144 e!68146)))

(assert (=> b!104672 (= c!18140 (and (not (= (bvand lt!52664 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!52664 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104673 () Bool)

(declare-fun Unit!3204 () Unit!3150)

(assert (=> b!104673 (= e!68147 Unit!3204)))

(declare-fun b!104674 () Bool)

(assert (=> b!104674 (= e!68154 (= (apply!97 lt!53442 #b1000000000000000000000000000000000000000000000000000000000000000) lt!52542))))

(declare-fun b!104675 () Bool)

(assert (=> b!104675 (= e!68150 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!10998 () Bool)

(assert (=> bm!10998 (= call!10996 (contains!824 lt!53442 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28445 c!18136) b!104656))

(assert (= (and d!28445 (not c!18136)) b!104672))

(assert (= (and b!104672 c!18140) b!104658))

(assert (= (and b!104672 (not c!18140)) b!104664))

(assert (= (and b!104664 c!18135) b!104662))

(assert (= (and b!104664 (not c!18135)) b!104663))

(assert (= (or b!104662 b!104663) bm!10995))

(assert (= (or b!104658 bm!10995) bm!10996))

(assert (= (or b!104658 b!104662) bm!10992))

(assert (= (or b!104656 bm!10996) bm!10993))

(assert (= (or b!104656 bm!10992) bm!10997))

(assert (= (and d!28445 res!52184) b!104670))

(assert (= (and d!28445 c!18139) b!104660))

(assert (= (and d!28445 (not c!18139)) b!104673))

(assert (= (and d!28445 res!52186) b!104671))

(assert (= (and b!104671 res!52179) b!104675))

(assert (= (and b!104671 (not res!52182)) b!104659))

(assert (= (and b!104659 res!52183) b!104666))

(assert (= (and b!104671 res!52180) b!104667))

(assert (= (and b!104667 c!18138) b!104655))

(assert (= (and b!104667 (not c!18138)) b!104657))

(assert (= (and b!104655 res!52187) b!104668))

(assert (= (or b!104655 b!104657) bm!10998))

(assert (= (and b!104667 res!52185) b!104669))

(assert (= (and b!104669 c!18137) b!104665))

(assert (= (and b!104669 (not c!18137)) b!104661))

(assert (= (and b!104665 res!52181) b!104674))

(assert (= (or b!104665 b!104661) bm!10994))

(declare-fun b_lambda!4669 () Bool)

(assert (=> (not b_lambda!4669) (not b!104666)))

(assert (=> b!104666 t!5681))

(declare-fun b_and!6463 () Bool)

(assert (= b_and!6459 (and (=> t!5681 result!3435) b_and!6463)))

(assert (=> b!104666 t!5683))

(declare-fun b_and!6465 () Bool)

(assert (= b_and!6461 (and (=> t!5683 result!3437) b_and!6465)))

(assert (=> b!104675 m!114525))

(assert (=> b!104675 m!114525))

(assert (=> b!104675 m!114527))

(declare-fun m!116367 () Bool)

(assert (=> bm!10993 m!116367))

(assert (=> b!104659 m!114525))

(assert (=> b!104659 m!114525))

(declare-fun m!116369 () Bool)

(assert (=> b!104659 m!116369))

(declare-fun m!116371 () Bool)

(assert (=> bm!10994 m!116371))

(assert (=> b!104666 m!114535))

(assert (=> b!104666 m!114535))

(assert (=> b!104666 m!114537))

(assert (=> b!104666 m!114539))

(assert (=> b!104666 m!114525))

(assert (=> b!104666 m!114525))

(declare-fun m!116373 () Bool)

(assert (=> b!104666 m!116373))

(assert (=> b!104666 m!114537))

(declare-fun m!116375 () Bool)

(assert (=> b!104656 m!116375))

(declare-fun m!116377 () Bool)

(assert (=> b!104660 m!116377))

(declare-fun m!116379 () Bool)

(assert (=> b!104660 m!116379))

(declare-fun m!116381 () Bool)

(assert (=> b!104660 m!116381))

(declare-fun m!116383 () Bool)

(assert (=> b!104660 m!116383))

(declare-fun m!116385 () Bool)

(assert (=> b!104660 m!116385))

(declare-fun m!116387 () Bool)

(assert (=> b!104660 m!116387))

(declare-fun m!116389 () Bool)

(assert (=> b!104660 m!116389))

(declare-fun m!116391 () Bool)

(assert (=> b!104660 m!116391))

(assert (=> b!104660 m!114525))

(assert (=> b!104660 m!116377))

(declare-fun m!116393 () Bool)

(assert (=> b!104660 m!116393))

(assert (=> b!104660 m!116391))

(declare-fun m!116395 () Bool)

(assert (=> b!104660 m!116395))

(assert (=> b!104660 m!116383))

(declare-fun m!116397 () Bool)

(assert (=> b!104660 m!116397))

(declare-fun m!116399 () Bool)

(assert (=> b!104660 m!116399))

(declare-fun m!116401 () Bool)

(assert (=> b!104660 m!116401))

(assert (=> b!104660 m!116367))

(declare-fun m!116403 () Bool)

(assert (=> b!104660 m!116403))

(assert (=> b!104660 m!116387))

(declare-fun m!116405 () Bool)

(assert (=> b!104660 m!116405))

(assert (=> d!28445 m!114575))

(declare-fun m!116407 () Bool)

(assert (=> bm!10998 m!116407))

(declare-fun m!116409 () Bool)

(assert (=> b!104674 m!116409))

(assert (=> b!104670 m!114525))

(assert (=> b!104670 m!114525))

(assert (=> b!104670 m!114527))

(declare-fun m!116411 () Bool)

(assert (=> b!104668 m!116411))

(declare-fun m!116413 () Bool)

(assert (=> bm!10997 m!116413))

(assert (=> d!28003 d!28445))

(assert (=> d!28003 d!27825))

(declare-fun d!28447 () Bool)

(assert (=> d!28447 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) lt!52664 (zeroValue!2438 newMap!16) lt!52542 #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28447 true))

(declare-fun _$8!91 () Unit!3150)

(assert (=> d!28447 (= (choose!648 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) lt!52664 (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) lt!52542 (defaultEntry!2561 newMap!16)) _$8!91)))

(declare-fun bs!4300 () Bool)

(assert (= bs!4300 d!28447))

(assert (=> bs!4300 m!114331))

(assert (=> bs!4300 m!114331))

(assert (=> bs!4300 m!115295))

(assert (=> bs!4300 m!115291))

(assert (=> d!28003 d!28447))

(assert (=> d!28003 d!28111))

(declare-fun d!28449 () Bool)

(declare-fun e!68157 () Bool)

(assert (=> d!28449 e!68157))

(declare-fun res!52188 () Bool)

(assert (=> d!28449 (=> res!52188 e!68157)))

(declare-fun lt!53453 () Bool)

(assert (=> d!28449 (= res!52188 (not lt!53453))))

(declare-fun lt!53454 () Bool)

(assert (=> d!28449 (= lt!53453 lt!53454)))

(declare-fun lt!53455 () Unit!3150)

(declare-fun e!68156 () Unit!3150)

(assert (=> d!28449 (= lt!53455 e!68156)))

(declare-fun c!18141 () Bool)

(assert (=> d!28449 (= c!18141 lt!53454)))

(assert (=> d!28449 (= lt!53454 (containsKey!159 (toList!800 lt!52972) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28449 (= (contains!824 lt!52972 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53453)))

(declare-fun b!104676 () Bool)

(declare-fun lt!53456 () Unit!3150)

(assert (=> b!104676 (= e!68156 lt!53456)))

(assert (=> b!104676 (= lt!53456 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52972) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104676 (isDefined!108 (getValueByKey!155 (toList!800 lt!52972) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104677 () Bool)

(declare-fun Unit!3205 () Unit!3150)

(assert (=> b!104677 (= e!68156 Unit!3205)))

(declare-fun b!104678 () Bool)

(assert (=> b!104678 (= e!68157 (isDefined!108 (getValueByKey!155 (toList!800 lt!52972) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28449 c!18141) b!104676))

(assert (= (and d!28449 (not c!18141)) b!104677))

(assert (= (and d!28449 (not res!52188)) b!104678))

(declare-fun m!116415 () Bool)

(assert (=> d!28449 m!116415))

(declare-fun m!116417 () Bool)

(assert (=> b!104676 m!116417))

(assert (=> b!104676 m!115397))

(assert (=> b!104676 m!115397))

(declare-fun m!116419 () Bool)

(assert (=> b!104676 m!116419))

(assert (=> b!104678 m!115397))

(assert (=> b!104678 m!115397))

(assert (=> b!104678 m!116419))

(assert (=> bm!10904 d!28449))

(declare-fun d!28451 () Bool)

(assert (=> d!28451 (= (get!1324 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2875 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!103931 d!28451))

(declare-fun d!28453 () Bool)

(assert (=> d!28453 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540))) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540)))))))

(declare-fun bs!4301 () Bool)

(assert (= bs!4301 d!28453))

(assert (=> bs!4301 m!114437))

(declare-fun m!116421 () Bool)

(assert (=> bs!4301 m!116421))

(assert (=> b!103859 d!28453))

(assert (=> b!103859 d!27847))

(declare-fun b!104679 () Bool)

(declare-fun e!68166 () Bool)

(declare-fun e!68167 () Bool)

(assert (=> b!104679 (= e!68166 e!68167)))

(declare-fun res!52197 () Bool)

(declare-fun call!11003 () Bool)

(assert (=> b!104679 (= res!52197 call!11003)))

(assert (=> b!104679 (=> (not res!52197) (not e!68167))))

(declare-fun bm!10999 () Bool)

(declare-fun call!11004 () ListLongMap!1569)

(declare-fun call!11008 () ListLongMap!1569)

(assert (=> bm!10999 (= call!11004 call!11008)))

(declare-fun bm!11000 () Bool)

(declare-fun call!11006 () ListLongMap!1569)

(assert (=> bm!11000 (= call!11006 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))))))

(declare-fun bm!11001 () Bool)

(declare-fun call!11002 () Bool)

(declare-fun lt!53468 () ListLongMap!1569)

(assert (=> bm!11001 (= call!11002 (contains!824 lt!53468 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11002 () Bool)

(declare-fun call!11005 () ListLongMap!1569)

(declare-fun call!11007 () ListLongMap!1569)

(assert (=> bm!11002 (= call!11005 call!11007)))

(declare-fun b!104680 () Bool)

(declare-fun e!68159 () ListLongMap!1569)

(assert (=> b!104680 (= e!68159 (+!141 call!11008 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (_2!1212 lt!52658)))))))

(declare-fun b!104681 () Bool)

(assert (=> b!104681 (= e!68166 (not call!11003))))

(declare-fun b!104682 () Bool)

(declare-fun e!68161 () ListLongMap!1569)

(assert (=> b!104682 (= e!68161 call!11004)))

(declare-fun b!104683 () Bool)

(declare-fun e!68160 () Bool)

(declare-fun e!68164 () Bool)

(assert (=> b!104683 (= e!68160 e!68164)))

(declare-fun res!52193 () Bool)

(assert (=> b!104683 (=> (not res!52193) (not e!68164))))

(assert (=> b!104683 (= res!52193 (contains!824 lt!53468 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(assert (=> b!104683 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(declare-fun bm!11003 () Bool)

(assert (=> bm!11003 (= call!11007 call!11006)))

(declare-fun b!104684 () Bool)

(declare-fun e!68162 () Unit!3150)

(declare-fun lt!53463 () Unit!3150)

(assert (=> b!104684 (= e!68162 lt!53463)))

(declare-fun lt!53462 () ListLongMap!1569)

(assert (=> b!104684 (= lt!53462 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))))))

(declare-fun lt!53472 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53472 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53471 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53471 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000))))

(declare-fun lt!53466 () Unit!3150)

(assert (=> b!104684 (= lt!53466 (addStillContains!73 lt!53462 lt!53472 (zeroValue!2438 (_2!1212 lt!52658)) lt!53471))))

(assert (=> b!104684 (contains!824 (+!141 lt!53462 (tuple2!2401 lt!53472 (zeroValue!2438 (_2!1212 lt!52658)))) lt!53471)))

(declare-fun lt!53475 () Unit!3150)

(assert (=> b!104684 (= lt!53475 lt!53466)))

(declare-fun lt!53465 () ListLongMap!1569)

(assert (=> b!104684 (= lt!53465 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))))))

(declare-fun lt!53469 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53469 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53474 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53474 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000))))

(declare-fun lt!53477 () Unit!3150)

(assert (=> b!104684 (= lt!53477 (addApplyDifferent!73 lt!53465 lt!53469 (minValue!2438 (_2!1212 lt!52658)) lt!53474))))

(assert (=> b!104684 (= (apply!97 (+!141 lt!53465 (tuple2!2401 lt!53469 (minValue!2438 (_2!1212 lt!52658)))) lt!53474) (apply!97 lt!53465 lt!53474))))

(declare-fun lt!53459 () Unit!3150)

(assert (=> b!104684 (= lt!53459 lt!53477)))

(declare-fun lt!53458 () ListLongMap!1569)

(assert (=> b!104684 (= lt!53458 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))))))

(declare-fun lt!53467 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53467 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53470 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53470 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000))))

(declare-fun lt!53478 () Unit!3150)

(assert (=> b!104684 (= lt!53478 (addApplyDifferent!73 lt!53458 lt!53467 (zeroValue!2438 (_2!1212 lt!52658)) lt!53470))))

(assert (=> b!104684 (= (apply!97 (+!141 lt!53458 (tuple2!2401 lt!53467 (zeroValue!2438 (_2!1212 lt!52658)))) lt!53470) (apply!97 lt!53458 lt!53470))))

(declare-fun lt!53476 () Unit!3150)

(assert (=> b!104684 (= lt!53476 lt!53478)))

(declare-fun lt!53457 () ListLongMap!1569)

(assert (=> b!104684 (= lt!53457 (getCurrentListMapNoExtraKeys!107 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))))))

(declare-fun lt!53464 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53464 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53473 () (_ BitVec 64))

(assert (=> b!104684 (= lt!53473 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000))))

(assert (=> b!104684 (= lt!53463 (addApplyDifferent!73 lt!53457 lt!53464 (minValue!2438 (_2!1212 lt!52658)) lt!53473))))

(assert (=> b!104684 (= (apply!97 (+!141 lt!53457 (tuple2!2401 lt!53464 (minValue!2438 (_2!1212 lt!52658)))) lt!53473) (apply!97 lt!53457 lt!53473))))

(declare-fun b!104685 () Bool)

(declare-fun e!68158 () Bool)

(assert (=> b!104685 (= e!68158 (not call!11002))))

(declare-fun b!104686 () Bool)

(declare-fun e!68170 () ListLongMap!1569)

(assert (=> b!104686 (= e!68170 call!11004)))

(declare-fun b!104687 () Bool)

(assert (=> b!104687 (= e!68170 call!11005)))

(declare-fun b!104688 () Bool)

(declare-fun c!18142 () Bool)

(assert (=> b!104688 (= c!18142 (and (not (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!104688 (= e!68161 e!68170)))

(declare-fun b!104689 () Bool)

(declare-fun e!68169 () Bool)

(assert (=> b!104689 (= e!68158 e!68169)))

(declare-fun res!52191 () Bool)

(assert (=> b!104689 (= res!52191 call!11002)))

(assert (=> b!104689 (=> (not res!52191) (not e!68169))))

(declare-fun b!104690 () Bool)

(assert (=> b!104690 (= e!68164 (= (apply!97 lt!53468 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (_values!2544 (_2!1212 lt!52658))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 (_2!1212 lt!52658)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!104690 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (_values!2544 (_2!1212 lt!52658)))))))

(assert (=> b!104690 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(declare-fun b!104691 () Bool)

(declare-fun res!52195 () Bool)

(declare-fun e!68168 () Bool)

(assert (=> b!104691 (=> (not res!52195) (not e!68168))))

(assert (=> b!104691 (= res!52195 e!68166)))

(declare-fun c!18145 () Bool)

(assert (=> b!104691 (= c!18145 (not (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28455 () Bool)

(assert (=> d!28455 e!68168))

(declare-fun res!52196 () Bool)

(assert (=> d!28455 (=> (not res!52196) (not e!68168))))

(assert (=> d!28455 (= res!52196 (or (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))))

(declare-fun lt!53460 () ListLongMap!1569)

(assert (=> d!28455 (= lt!53468 lt!53460)))

(declare-fun lt!53461 () Unit!3150)

(assert (=> d!28455 (= lt!53461 e!68162)))

(declare-fun c!18146 () Bool)

(declare-fun e!68163 () Bool)

(assert (=> d!28455 (= c!18146 e!68163)))

(declare-fun res!52194 () Bool)

(assert (=> d!28455 (=> (not res!52194) (not e!68163))))

(assert (=> d!28455 (= res!52194 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(assert (=> d!28455 (= lt!53460 e!68159)))

(declare-fun c!18143 () Bool)

(assert (=> d!28455 (= c!18143 (and (not (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28455 (validMask!0 (mask!6697 (_2!1212 lt!52658)))))

(assert (=> d!28455 (= (getCurrentListMap!487 (_keys!4263 (_2!1212 lt!52658)) (_values!2544 (_2!1212 lt!52658)) (mask!6697 (_2!1212 lt!52658)) (extraKeys!2370 (_2!1212 lt!52658)) (zeroValue!2438 (_2!1212 lt!52658)) (minValue!2438 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (defaultEntry!2561 (_2!1212 lt!52658))) lt!53468)))

(declare-fun c!18147 () Bool)

(declare-fun bm!11004 () Bool)

(assert (=> bm!11004 (= call!11008 (+!141 (ite c!18143 call!11006 (ite c!18147 call!11007 call!11005)) (ite (or c!18143 c!18147) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (_2!1212 lt!52658))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (_2!1212 lt!52658))))))))

(declare-fun b!104692 () Bool)

(assert (=> b!104692 (= e!68167 (= (apply!97 lt!53468 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 (_2!1212 lt!52658))))))

(declare-fun b!104693 () Bool)

(assert (=> b!104693 (= e!68168 e!68158)))

(declare-fun c!18144 () Bool)

(assert (=> b!104693 (= c!18144 (not (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104694 () Bool)

(assert (=> b!104694 (= e!68163 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(declare-fun b!104695 () Bool)

(declare-fun res!52190 () Bool)

(assert (=> b!104695 (=> (not res!52190) (not e!68168))))

(assert (=> b!104695 (= res!52190 e!68160)))

(declare-fun res!52192 () Bool)

(assert (=> b!104695 (=> res!52192 e!68160)))

(declare-fun e!68165 () Bool)

(assert (=> b!104695 (= res!52192 (not e!68165))))

(declare-fun res!52189 () Bool)

(assert (=> b!104695 (=> (not res!52189) (not e!68165))))

(assert (=> b!104695 (= res!52189 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(declare-fun b!104696 () Bool)

(assert (=> b!104696 (= e!68159 e!68161)))

(assert (=> b!104696 (= c!18147 (and (not (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 (_2!1212 lt!52658)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!104697 () Bool)

(declare-fun Unit!3206 () Unit!3150)

(assert (=> b!104697 (= e!68162 Unit!3206)))

(declare-fun b!104698 () Bool)

(assert (=> b!104698 (= e!68169 (= (apply!97 lt!53468 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 (_2!1212 lt!52658))))))

(declare-fun b!104699 () Bool)

(assert (=> b!104699 (= e!68165 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(declare-fun bm!11005 () Bool)

(assert (=> bm!11005 (= call!11003 (contains!824 lt!53468 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28455 c!18143) b!104680))

(assert (= (and d!28455 (not c!18143)) b!104696))

(assert (= (and b!104696 c!18147) b!104682))

(assert (= (and b!104696 (not c!18147)) b!104688))

(assert (= (and b!104688 c!18142) b!104686))

(assert (= (and b!104688 (not c!18142)) b!104687))

(assert (= (or b!104686 b!104687) bm!11002))

(assert (= (or b!104682 bm!11002) bm!11003))

(assert (= (or b!104682 b!104686) bm!10999))

(assert (= (or b!104680 bm!11003) bm!11000))

(assert (= (or b!104680 bm!10999) bm!11004))

(assert (= (and d!28455 res!52194) b!104694))

(assert (= (and d!28455 c!18146) b!104684))

(assert (= (and d!28455 (not c!18146)) b!104697))

(assert (= (and d!28455 res!52196) b!104695))

(assert (= (and b!104695 res!52189) b!104699))

(assert (= (and b!104695 (not res!52192)) b!104683))

(assert (= (and b!104683 res!52193) b!104690))

(assert (= (and b!104695 res!52190) b!104691))

(assert (= (and b!104691 c!18145) b!104679))

(assert (= (and b!104691 (not c!18145)) b!104681))

(assert (= (and b!104679 res!52197) b!104692))

(assert (= (or b!104679 b!104681) bm!11005))

(assert (= (and b!104691 res!52195) b!104693))

(assert (= (and b!104693 c!18144) b!104689))

(assert (= (and b!104693 (not c!18144)) b!104685))

(assert (= (and b!104689 res!52191) b!104698))

(assert (= (or b!104689 b!104685) bm!11001))

(declare-fun b_lambda!4671 () Bool)

(assert (=> (not b_lambda!4671) (not b!104690)))

(declare-fun t!5686 () Bool)

(declare-fun tb!2041 () Bool)

(assert (=> (and b!103176 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 (_2!1212 lt!52658))) t!5686) tb!2041))

(declare-fun result!3439 () Bool)

(assert (=> tb!2041 (= result!3439 tp_is_empty!2673)))

(assert (=> b!104690 t!5686))

(declare-fun b_and!6467 () Bool)

(assert (= b_and!6463 (and (=> t!5686 result!3439) b_and!6467)))

(declare-fun tb!2043 () Bool)

(declare-fun t!5688 () Bool)

(assert (=> (and b!103179 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (_2!1212 lt!52658))) t!5688) tb!2043))

(declare-fun result!3441 () Bool)

(assert (= result!3441 result!3439))

(assert (=> b!104690 t!5688))

(declare-fun b_and!6469 () Bool)

(assert (= b_and!6465 (and (=> t!5688 result!3441) b_and!6469)))

(assert (=> b!104699 m!115947))

(assert (=> b!104699 m!115947))

(assert (=> b!104699 m!115951))

(declare-fun m!116423 () Bool)

(assert (=> bm!11000 m!116423))

(assert (=> b!104683 m!115947))

(assert (=> b!104683 m!115947))

(declare-fun m!116425 () Bool)

(assert (=> b!104683 m!116425))

(declare-fun m!116427 () Bool)

(assert (=> bm!11001 m!116427))

(declare-fun m!116429 () Bool)

(assert (=> b!104690 m!116429))

(assert (=> b!104690 m!116429))

(declare-fun m!116431 () Bool)

(assert (=> b!104690 m!116431))

(declare-fun m!116433 () Bool)

(assert (=> b!104690 m!116433))

(assert (=> b!104690 m!115947))

(assert (=> b!104690 m!115947))

(declare-fun m!116435 () Bool)

(assert (=> b!104690 m!116435))

(assert (=> b!104690 m!116431))

(declare-fun m!116437 () Bool)

(assert (=> b!104680 m!116437))

(declare-fun m!116439 () Bool)

(assert (=> b!104684 m!116439))

(declare-fun m!116441 () Bool)

(assert (=> b!104684 m!116441))

(declare-fun m!116443 () Bool)

(assert (=> b!104684 m!116443))

(declare-fun m!116445 () Bool)

(assert (=> b!104684 m!116445))

(declare-fun m!116447 () Bool)

(assert (=> b!104684 m!116447))

(declare-fun m!116449 () Bool)

(assert (=> b!104684 m!116449))

(declare-fun m!116451 () Bool)

(assert (=> b!104684 m!116451))

(declare-fun m!116453 () Bool)

(assert (=> b!104684 m!116453))

(assert (=> b!104684 m!115947))

(assert (=> b!104684 m!116439))

(declare-fun m!116455 () Bool)

(assert (=> b!104684 m!116455))

(assert (=> b!104684 m!116453))

(declare-fun m!116457 () Bool)

(assert (=> b!104684 m!116457))

(assert (=> b!104684 m!116445))

(declare-fun m!116459 () Bool)

(assert (=> b!104684 m!116459))

(declare-fun m!116461 () Bool)

(assert (=> b!104684 m!116461))

(declare-fun m!116463 () Bool)

(assert (=> b!104684 m!116463))

(assert (=> b!104684 m!116423))

(declare-fun m!116465 () Bool)

(assert (=> b!104684 m!116465))

(assert (=> b!104684 m!116449))

(declare-fun m!116467 () Bool)

(assert (=> b!104684 m!116467))

(assert (=> d!28455 m!115861))

(declare-fun m!116469 () Bool)

(assert (=> bm!11005 m!116469))

(declare-fun m!116471 () Bool)

(assert (=> b!104698 m!116471))

(assert (=> b!104694 m!115947))

(assert (=> b!104694 m!115947))

(assert (=> b!104694 m!115951))

(declare-fun m!116473 () Bool)

(assert (=> b!104692 m!116473))

(declare-fun m!116475 () Bool)

(assert (=> bm!11004 m!116475))

(assert (=> d!27911 d!28455))

(declare-fun d!28457 () Bool)

(assert (=> d!28457 (= (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52734)) (v!2880 (getValueByKey!155 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52734)))))

(assert (=> d!27961 d!28457))

(declare-fun d!28459 () Bool)

(declare-fun c!18148 () Bool)

(assert (=> d!28459 (= c!18148 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52734)))))

(declare-fun e!68171 () Option!161)

(assert (=> d!28459 (= (getValueByKey!155 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52734) e!68171)))

(declare-fun b!104701 () Bool)

(declare-fun e!68172 () Option!161)

(assert (=> b!104701 (= e!68171 e!68172)))

(declare-fun c!18149 () Bool)

(assert (=> b!104701 (= c!18149 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) (not (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))) lt!52734))))))

(declare-fun b!104702 () Bool)

(assert (=> b!104702 (= e!68172 (getValueByKey!155 (t!5673 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) lt!52734))))

(declare-fun b!104703 () Bool)

(assert (=> b!104703 (= e!68172 None!159)))

(declare-fun b!104700 () Bool)

(assert (=> b!104700 (= e!68171 (Some!160 (_2!1211 (h!2203 (toList!800 (+!141 lt!52725 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(assert (= (and d!28459 c!18148) b!104700))

(assert (= (and d!28459 (not c!18148)) b!104701))

(assert (= (and b!104701 c!18149) b!104702))

(assert (= (and b!104701 (not c!18149)) b!104703))

(declare-fun m!116477 () Bool)

(assert (=> b!104702 m!116477))

(assert (=> d!27961 d!28459))

(declare-fun d!28461 () Bool)

(declare-fun c!18150 () Bool)

(assert (=> d!28461 (= c!18150 (and ((_ is Cons!1607) (toList!800 lt!53077)) (= (_1!1211 (h!2203 (toList!800 lt!53077))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun e!68173 () Option!161)

(assert (=> d!28461 (= (getValueByKey!155 (toList!800 lt!53077) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))) e!68173)))

(declare-fun b!104705 () Bool)

(declare-fun e!68174 () Option!161)

(assert (=> b!104705 (= e!68173 e!68174)))

(declare-fun c!18151 () Bool)

(assert (=> b!104705 (= c!18151 (and ((_ is Cons!1607) (toList!800 lt!53077)) (not (= (_1!1211 (h!2203 (toList!800 lt!53077))) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))))

(declare-fun b!104706 () Bool)

(assert (=> b!104706 (= e!68174 (getValueByKey!155 (t!5673 (toList!800 lt!53077)) (_1!1211 (ite (or c!17807 c!17811) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104707 () Bool)

(assert (=> b!104707 (= e!68174 None!159)))

(declare-fun b!104704 () Bool)

(assert (=> b!104704 (= e!68173 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53077)))))))

(assert (= (and d!28461 c!18150) b!104704))

(assert (= (and d!28461 (not c!18150)) b!104705))

(assert (= (and b!104705 c!18151) b!104706))

(assert (= (and b!104705 (not c!18151)) b!104707))

(declare-fun m!116479 () Bool)

(assert (=> b!104706 m!116479))

(assert (=> b!103929 d!28461))

(declare-fun b!104708 () Bool)

(declare-fun e!68176 () (_ BitVec 32))

(declare-fun call!11009 () (_ BitVec 32))

(assert (=> b!104708 (= e!68176 call!11009)))

(declare-fun b!104709 () Bool)

(assert (=> b!104709 (= e!68176 (bvadd #b00000000000000000000000000000001 call!11009))))

(declare-fun b!104710 () Bool)

(declare-fun e!68175 () (_ BitVec 32))

(assert (=> b!104710 (= e!68175 e!68176)))

(declare-fun c!18153 () Bool)

(assert (=> b!104710 (= c!18153 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(declare-fun d!28463 () Bool)

(declare-fun lt!53479 () (_ BitVec 32))

(assert (=> d!28463 (and (bvsge lt!53479 #b00000000000000000000000000000000) (bvsle lt!53479 (bvsub (size!2311 (_keys!4263 (_2!1212 lt!52658))) #b00000000000000000000000000000000)))))

(assert (=> d!28463 (= lt!53479 e!68175)))

(declare-fun c!18152 () Bool)

(assert (=> d!28463 (= c!18152 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(assert (=> d!28463 (and (bvsle #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2311 (_keys!4263 (_2!1212 lt!52658))) (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(assert (=> d!28463 (= (arrayCountValidKeys!0 (_keys!4263 (_2!1212 lt!52658)) #b00000000000000000000000000000000 (size!2311 (_keys!4263 (_2!1212 lt!52658)))) lt!53479)))

(declare-fun b!104711 () Bool)

(assert (=> b!104711 (= e!68175 #b00000000000000000000000000000000)))

(declare-fun bm!11006 () Bool)

(assert (=> bm!11006 (= call!11009 (arrayCountValidKeys!0 (_keys!4263 (_2!1212 lt!52658)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 (_2!1212 lt!52658)))))))

(assert (= (and d!28463 c!18152) b!104711))

(assert (= (and d!28463 (not c!18152)) b!104710))

(assert (= (and b!104710 c!18153) b!104709))

(assert (= (and b!104710 (not c!18153)) b!104708))

(assert (= (or b!104709 b!104708) bm!11006))

(assert (=> b!104710 m!115947))

(assert (=> b!104710 m!115947))

(assert (=> b!104710 m!115951))

(declare-fun m!116481 () Bool)

(assert (=> bm!11006 m!116481))

(assert (=> b!103946 d!28463))

(declare-fun c!18154 () Bool)

(declare-fun d!28465 () Bool)

(assert (=> d!28465 (= c!18154 (and ((_ is Cons!1607) (toList!800 lt!53036)) (= (_1!1211 (h!2203 (toList!800 lt!53036))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!68177 () Option!161)

(assert (=> d!28465 (= (getValueByKey!155 (toList!800 lt!53036) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) e!68177)))

(declare-fun b!104713 () Bool)

(declare-fun e!68178 () Option!161)

(assert (=> b!104713 (= e!68177 e!68178)))

(declare-fun c!18155 () Bool)

(assert (=> b!104713 (= c!18155 (and ((_ is Cons!1607) (toList!800 lt!53036)) (not (= (_1!1211 (h!2203 (toList!800 lt!53036))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!104714 () Bool)

(assert (=> b!104714 (= e!68178 (getValueByKey!155 (t!5673 (toList!800 lt!53036)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104715 () Bool)

(assert (=> b!104715 (= e!68178 None!159)))

(declare-fun b!104712 () Bool)

(assert (=> b!104712 (= e!68177 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53036)))))))

(assert (= (and d!28465 c!18154) b!104712))

(assert (= (and d!28465 (not c!18154)) b!104713))

(assert (= (and b!104713 c!18155) b!104714))

(assert (= (and b!104713 (not c!18155)) b!104715))

(declare-fun m!116483 () Bool)

(assert (=> b!104714 m!116483))

(assert (=> b!103878 d!28465))

(declare-fun lt!53480 () Bool)

(declare-fun d!28467 () Bool)

(assert (=> d!28467 (= lt!53480 (select (content!108 (toList!800 lt!53118)) (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68180 () Bool)

(assert (=> d!28467 (= lt!53480 e!68180)))

(declare-fun res!52198 () Bool)

(assert (=> d!28467 (=> (not res!52198) (not e!68180))))

(assert (=> d!28467 (= res!52198 ((_ is Cons!1607) (toList!800 lt!53118)))))

(assert (=> d!28467 (= (contains!826 (toList!800 lt!53118) (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53480)))

(declare-fun b!104716 () Bool)

(declare-fun e!68179 () Bool)

(assert (=> b!104716 (= e!68180 e!68179)))

(declare-fun res!52199 () Bool)

(assert (=> b!104716 (=> res!52199 e!68179)))

(assert (=> b!104716 (= res!52199 (= (h!2203 (toList!800 lt!53118)) (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104717 () Bool)

(assert (=> b!104717 (= e!68179 (contains!826 (t!5673 (toList!800 lt!53118)) (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28467 res!52198) b!104716))

(assert (= (and b!104716 (not res!52199)) b!104717))

(declare-fun m!116485 () Bool)

(assert (=> d!28467 m!116485))

(declare-fun m!116487 () Bool)

(assert (=> d!28467 m!116487))

(declare-fun m!116489 () Bool)

(assert (=> b!104717 m!116489))

(assert (=> b!103985 d!28467))

(declare-fun d!28469 () Bool)

(declare-fun res!52200 () Bool)

(declare-fun e!68181 () Bool)

(assert (=> d!28469 (=> res!52200 e!68181)))

(assert (=> d!28469 (= res!52200 (and ((_ is Cons!1607) lt!52758) (= (_1!1211 (h!2203 lt!52758)) (_1!1211 lt!52538))))))

(assert (=> d!28469 (= (containsKey!159 lt!52758 (_1!1211 lt!52538)) e!68181)))

(declare-fun b!104718 () Bool)

(declare-fun e!68182 () Bool)

(assert (=> b!104718 (= e!68181 e!68182)))

(declare-fun res!52201 () Bool)

(assert (=> b!104718 (=> (not res!52201) (not e!68182))))

(assert (=> b!104718 (= res!52201 (and (or (not ((_ is Cons!1607) lt!52758)) (bvsle (_1!1211 (h!2203 lt!52758)) (_1!1211 lt!52538))) ((_ is Cons!1607) lt!52758) (bvslt (_1!1211 (h!2203 lt!52758)) (_1!1211 lt!52538))))))

(declare-fun b!104719 () Bool)

(assert (=> b!104719 (= e!68182 (containsKey!159 (t!5673 lt!52758) (_1!1211 lt!52538)))))

(assert (= (and d!28469 (not res!52200)) b!104718))

(assert (= (and b!104718 res!52201) b!104719))

(declare-fun m!116491 () Bool)

(assert (=> b!104719 m!116491))

(assert (=> b!103569 d!28469))

(declare-fun d!28471 () Bool)

(assert (not d!28471))

(assert (=> b!103835 d!28471))

(declare-fun d!28473 () Bool)

(assert (=> d!28473 (= (content!107 Nil!1607) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!27883 d!28473))

(declare-fun d!28475 () Bool)

(declare-fun e!68184 () Bool)

(assert (=> d!28475 e!68184))

(declare-fun res!52202 () Bool)

(assert (=> d!28475 (=> res!52202 e!68184)))

(declare-fun lt!53481 () Bool)

(assert (=> d!28475 (= res!52202 (not lt!53481))))

(declare-fun lt!53482 () Bool)

(assert (=> d!28475 (= lt!53481 lt!53482)))

(declare-fun lt!53483 () Unit!3150)

(declare-fun e!68183 () Unit!3150)

(assert (=> d!28475 (= lt!53483 e!68183)))

(declare-fun c!18156 () Bool)

(assert (=> d!28475 (= c!18156 lt!53482)))

(assert (=> d!28475 (= lt!53482 (containsKey!159 (toList!800 lt!52842) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28475 (= (contains!824 lt!52842 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53481)))

(declare-fun b!104720 () Bool)

(declare-fun lt!53484 () Unit!3150)

(assert (=> b!104720 (= e!68183 lt!53484)))

(assert (=> b!104720 (= lt!53484 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52842) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> b!104720 (isDefined!108 (getValueByKey!155 (toList!800 lt!52842) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104721 () Bool)

(declare-fun Unit!3207 () Unit!3150)

(assert (=> b!104721 (= e!68183 Unit!3207)))

(declare-fun b!104722 () Bool)

(assert (=> b!104722 (= e!68184 (isDefined!108 (getValueByKey!155 (toList!800 lt!52842) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28475 c!18156) b!104720))

(assert (= (and d!28475 (not c!18156)) b!104721))

(assert (= (and d!28475 (not res!52202)) b!104722))

(declare-fun m!116493 () Bool)

(assert (=> d!28475 m!116493))

(declare-fun m!116495 () Bool)

(assert (=> b!104720 m!116495))

(assert (=> b!104720 m!114613))

(assert (=> b!104720 m!114613))

(declare-fun m!116497 () Bool)

(assert (=> b!104720 m!116497))

(assert (=> b!104722 m!114613))

(assert (=> b!104722 m!114613))

(assert (=> b!104722 m!116497))

(assert (=> d!27837 d!28475))

(declare-fun c!18157 () Bool)

(declare-fun d!28477 () Bool)

(assert (=> d!28477 (= c!18157 (and ((_ is Cons!1607) lt!52843) (= (_1!1211 (h!2203 lt!52843)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!68185 () Option!161)

(assert (=> d!28477 (= (getValueByKey!155 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) e!68185)))

(declare-fun b!104724 () Bool)

(declare-fun e!68186 () Option!161)

(assert (=> b!104724 (= e!68185 e!68186)))

(declare-fun c!18158 () Bool)

(assert (=> b!104724 (= c!18158 (and ((_ is Cons!1607) lt!52843) (not (= (_1!1211 (h!2203 lt!52843)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!104725 () Bool)

(assert (=> b!104725 (= e!68186 (getValueByKey!155 (t!5673 lt!52843) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104726 () Bool)

(assert (=> b!104726 (= e!68186 None!159)))

(declare-fun b!104723 () Bool)

(assert (=> b!104723 (= e!68185 (Some!160 (_2!1211 (h!2203 lt!52843))))))

(assert (= (and d!28477 c!18157) b!104723))

(assert (= (and d!28477 (not c!18157)) b!104724))

(assert (= (and b!104724 c!18158) b!104725))

(assert (= (and b!104724 (not c!18158)) b!104726))

(declare-fun m!116499 () Bool)

(assert (=> b!104725 m!116499))

(assert (=> d!27837 d!28477))

(declare-fun d!28479 () Bool)

(assert (=> d!28479 (= (getValueByKey!155 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun lt!53485 () Unit!3150)

(assert (=> d!28479 (= lt!53485 (choose!639 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun e!68187 () Bool)

(assert (=> d!28479 e!68187))

(declare-fun res!52203 () Bool)

(assert (=> d!28479 (=> (not res!52203) (not e!68187))))

(assert (=> d!28479 (= res!52203 (isStrictlySorted!308 lt!52843))))

(assert (=> d!28479 (= (lemmaContainsTupThenGetReturnValue!71 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53485)))

(declare-fun b!104727 () Bool)

(declare-fun res!52204 () Bool)

(assert (=> b!104727 (=> (not res!52204) (not e!68187))))

(assert (=> b!104727 (= res!52204 (containsKey!159 lt!52843 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104728 () Bool)

(assert (=> b!104728 (= e!68187 (contains!826 lt!52843 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28479 res!52203) b!104727))

(assert (= (and b!104727 res!52204) b!104728))

(assert (=> d!28479 m!114607))

(declare-fun m!116501 () Bool)

(assert (=> d!28479 m!116501))

(declare-fun m!116503 () Bool)

(assert (=> d!28479 m!116503))

(declare-fun m!116505 () Bool)

(assert (=> b!104727 m!116505))

(declare-fun m!116507 () Bool)

(assert (=> b!104728 m!116507))

(assert (=> d!27837 d!28479))

(declare-fun b!104729 () Bool)

(declare-fun e!68192 () List!1611)

(declare-fun e!68188 () List!1611)

(assert (=> b!104729 (= e!68192 e!68188)))

(declare-fun c!18160 () Bool)

(assert (=> b!104729 (= c!18160 (and ((_ is Cons!1607) (toList!800 call!10833)) (= (_1!1211 (h!2203 (toList!800 call!10833))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104730 () Bool)

(declare-fun call!11011 () List!1611)

(assert (=> b!104730 (= e!68188 call!11011)))

(declare-fun bm!11007 () Bool)

(declare-fun call!11012 () List!1611)

(assert (=> bm!11007 (= call!11011 call!11012)))

(declare-fun c!18162 () Bool)

(declare-fun b!104732 () Bool)

(declare-fun e!68189 () List!1611)

(assert (=> b!104732 (= e!68189 (ite c!18160 (t!5673 (toList!800 call!10833)) (ite c!18162 (Cons!1607 (h!2203 (toList!800 call!10833)) (t!5673 (toList!800 call!10833))) Nil!1608)))))

(declare-fun bm!11008 () Bool)

(declare-fun call!11010 () List!1611)

(assert (=> bm!11008 (= call!11010 call!11011)))

(declare-fun b!104733 () Bool)

(assert (=> b!104733 (= e!68189 (insertStrictlySorted!74 (t!5673 (toList!800 call!10833)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun c!18161 () Bool)

(declare-fun bm!11009 () Bool)

(assert (=> bm!11009 (= call!11012 ($colon$colon!80 e!68189 (ite c!18161 (h!2203 (toList!800 call!10833)) (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun c!18159 () Bool)

(assert (=> bm!11009 (= c!18159 c!18161)))

(declare-fun b!104734 () Bool)

(declare-fun e!68190 () List!1611)

(assert (=> b!104734 (= e!68190 call!11010)))

(declare-fun b!104735 () Bool)

(assert (=> b!104735 (= c!18162 (and ((_ is Cons!1607) (toList!800 call!10833)) (bvsgt (_1!1211 (h!2203 (toList!800 call!10833))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> b!104735 (= e!68188 e!68190)))

(declare-fun b!104736 () Bool)

(assert (=> b!104736 (= e!68192 call!11012)))

(declare-fun d!28481 () Bool)

(declare-fun e!68191 () Bool)

(assert (=> d!28481 e!68191))

(declare-fun res!52205 () Bool)

(assert (=> d!28481 (=> (not res!52205) (not e!68191))))

(declare-fun lt!53486 () List!1611)

(assert (=> d!28481 (= res!52205 (isStrictlySorted!308 lt!53486))))

(assert (=> d!28481 (= lt!53486 e!68192)))

(assert (=> d!28481 (= c!18161 (and ((_ is Cons!1607) (toList!800 call!10833)) (bvslt (_1!1211 (h!2203 (toList!800 call!10833))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!28481 (isStrictlySorted!308 (toList!800 call!10833))))

(assert (=> d!28481 (= (insertStrictlySorted!74 (toList!800 call!10833) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53486)))

(declare-fun b!104731 () Bool)

(assert (=> b!104731 (= e!68190 call!11010)))

(declare-fun b!104737 () Bool)

(assert (=> b!104737 (= e!68191 (contains!826 lt!53486 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104738 () Bool)

(declare-fun res!52206 () Bool)

(assert (=> b!104738 (=> (not res!52206) (not e!68191))))

(assert (=> b!104738 (= res!52206 (containsKey!159 lt!53486 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (= (and d!28481 c!18161) b!104736))

(assert (= (and d!28481 (not c!18161)) b!104729))

(assert (= (and b!104729 c!18160) b!104730))

(assert (= (and b!104729 (not c!18160)) b!104735))

(assert (= (and b!104735 c!18162) b!104731))

(assert (= (and b!104735 (not c!18162)) b!104734))

(assert (= (or b!104731 b!104734) bm!11008))

(assert (= (or b!104730 bm!11008) bm!11007))

(assert (= (or b!104736 bm!11007) bm!11009))

(assert (= (and bm!11009 c!18159) b!104733))

(assert (= (and bm!11009 (not c!18159)) b!104732))

(assert (= (and d!28481 res!52205) b!104738))

(assert (= (and b!104738 res!52206) b!104737))

(declare-fun m!116509 () Bool)

(assert (=> b!104737 m!116509))

(declare-fun m!116511 () Bool)

(assert (=> b!104733 m!116511))

(declare-fun m!116513 () Bool)

(assert (=> bm!11009 m!116513))

(declare-fun m!116515 () Bool)

(assert (=> d!28481 m!116515))

(declare-fun m!116517 () Bool)

(assert (=> d!28481 m!116517))

(declare-fun m!116519 () Bool)

(assert (=> b!104738 m!116519))

(assert (=> d!27837 d!28481))

(declare-fun d!28483 () Bool)

(declare-fun e!68193 () Bool)

(assert (=> d!28483 e!68193))

(declare-fun res!52208 () Bool)

(assert (=> d!28483 (=> (not res!52208) (not e!68193))))

(declare-fun lt!53488 () ListLongMap!1569)

(assert (=> d!28483 (= res!52208 (contains!824 lt!53488 (_1!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))))))

(declare-fun lt!53489 () List!1611)

(assert (=> d!28483 (= lt!53488 (ListLongMap!1570 lt!53489))))

(declare-fun lt!53487 () Unit!3150)

(declare-fun lt!53490 () Unit!3150)

(assert (=> d!28483 (= lt!53487 lt!53490)))

(assert (=> d!28483 (= (getValueByKey!155 lt!53489 (_1!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))))))

(assert (=> d!28483 (= lt!53490 (lemmaContainsTupThenGetReturnValue!71 lt!53489 (_1!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))))))

(assert (=> d!28483 (= lt!53489 (insertStrictlySorted!74 (toList!800 lt!52806) (_1!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))))))

(assert (=> d!28483 (= (+!141 lt!52806 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))) lt!53488)))

(declare-fun b!104739 () Bool)

(declare-fun res!52207 () Bool)

(assert (=> b!104739 (=> (not res!52207) (not e!68193))))

(assert (=> b!104739 (= res!52207 (= (getValueByKey!155 (toList!800 lt!53488) (_1!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))))))))

(declare-fun b!104740 () Bool)

(assert (=> b!104740 (= e!68193 (contains!826 (toList!800 lt!53488) (tuple2!2401 lt!52813 (minValue!2438 newMap!16))))))

(assert (= (and d!28483 res!52208) b!104739))

(assert (= (and b!104739 res!52207) b!104740))

(declare-fun m!116521 () Bool)

(assert (=> d!28483 m!116521))

(declare-fun m!116523 () Bool)

(assert (=> d!28483 m!116523))

(declare-fun m!116525 () Bool)

(assert (=> d!28483 m!116525))

(declare-fun m!116527 () Bool)

(assert (=> d!28483 m!116527))

(declare-fun m!116529 () Bool)

(assert (=> b!104739 m!116529))

(declare-fun m!116531 () Bool)

(assert (=> b!104740 m!116531))

(assert (=> b!103610 d!28483))

(declare-fun d!28485 () Bool)

(assert (=> d!28485 (= (apply!97 (+!141 lt!52807 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))) lt!52819) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52807 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))) lt!52819)))))

(declare-fun bs!4302 () Bool)

(assert (= bs!4302 d!28485))

(declare-fun m!116533 () Bool)

(assert (=> bs!4302 m!116533))

(assert (=> bs!4302 m!116533))

(declare-fun m!116535 () Bool)

(assert (=> bs!4302 m!116535))

(assert (=> b!103610 d!28485))

(declare-fun d!28487 () Bool)

(assert (=> d!28487 (= (apply!97 (+!141 lt!52814 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))) lt!52823) (apply!97 lt!52814 lt!52823))))

(declare-fun lt!53491 () Unit!3150)

(assert (=> d!28487 (= lt!53491 (choose!645 lt!52814 lt!52818 (minValue!2438 newMap!16) lt!52823))))

(declare-fun e!68194 () Bool)

(assert (=> d!28487 e!68194))

(declare-fun res!52209 () Bool)

(assert (=> d!28487 (=> (not res!52209) (not e!68194))))

(assert (=> d!28487 (= res!52209 (contains!824 lt!52814 lt!52823))))

(assert (=> d!28487 (= (addApplyDifferent!73 lt!52814 lt!52818 (minValue!2438 newMap!16) lt!52823) lt!53491)))

(declare-fun b!104741 () Bool)

(assert (=> b!104741 (= e!68194 (not (= lt!52823 lt!52818)))))

(assert (= (and d!28487 res!52209) b!104741))

(declare-fun m!116537 () Bool)

(assert (=> d!28487 m!116537))

(assert (=> d!28487 m!114559))

(assert (=> d!28487 m!114563))

(declare-fun m!116539 () Bool)

(assert (=> d!28487 m!116539))

(assert (=> d!28487 m!114549))

(assert (=> d!28487 m!114559))

(assert (=> b!103610 d!28487))

(declare-fun d!28489 () Bool)

(assert (=> d!28489 (= (apply!97 (+!141 lt!52806 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))) lt!52822) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52806 (tuple2!2401 lt!52813 (minValue!2438 newMap!16)))) lt!52822)))))

(declare-fun bs!4303 () Bool)

(assert (= bs!4303 d!28489))

(declare-fun m!116541 () Bool)

(assert (=> bs!4303 m!116541))

(assert (=> bs!4303 m!116541))

(declare-fun m!116543 () Bool)

(assert (=> bs!4303 m!116543))

(assert (=> b!103610 d!28489))

(declare-fun d!28491 () Bool)

(declare-fun e!68195 () Bool)

(assert (=> d!28491 e!68195))

(declare-fun res!52211 () Bool)

(assert (=> d!28491 (=> (not res!52211) (not e!68195))))

(declare-fun lt!53493 () ListLongMap!1569)

(assert (=> d!28491 (= res!52211 (contains!824 lt!53493 (_1!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53494 () List!1611)

(assert (=> d!28491 (= lt!53493 (ListLongMap!1570 lt!53494))))

(declare-fun lt!53492 () Unit!3150)

(declare-fun lt!53495 () Unit!3150)

(assert (=> d!28491 (= lt!53492 lt!53495)))

(assert (=> d!28491 (= (getValueByKey!155 lt!53494 (_1!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28491 (= lt!53495 (lemmaContainsTupThenGetReturnValue!71 lt!53494 (_1!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28491 (= lt!53494 (insertStrictlySorted!74 (toList!800 lt!52807) (_1!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28491 (= (+!141 lt!52807 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))) lt!53493)))

(declare-fun b!104742 () Bool)

(declare-fun res!52210 () Bool)

(assert (=> b!104742 (=> (not res!52210) (not e!68195))))

(assert (=> b!104742 (= res!52210 (= (getValueByKey!155 (toList!800 lt!53493) (_1!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104743 () Bool)

(assert (=> b!104743 (= e!68195 (contains!826 (toList!800 lt!53493) (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28491 res!52211) b!104742))

(assert (= (and b!104742 res!52210) b!104743))

(declare-fun m!116545 () Bool)

(assert (=> d!28491 m!116545))

(declare-fun m!116547 () Bool)

(assert (=> d!28491 m!116547))

(declare-fun m!116549 () Bool)

(assert (=> d!28491 m!116549))

(declare-fun m!116551 () Bool)

(assert (=> d!28491 m!116551))

(declare-fun m!116553 () Bool)

(assert (=> b!104742 m!116553))

(declare-fun m!116555 () Bool)

(assert (=> b!104743 m!116555))

(assert (=> b!103610 d!28491))

(declare-fun d!28493 () Bool)

(assert (=> d!28493 (= (apply!97 (+!141 lt!52806 (tuple2!2401 lt!52813 (minValue!2438 newMap!16))) lt!52822) (apply!97 lt!52806 lt!52822))))

(declare-fun lt!53496 () Unit!3150)

(assert (=> d!28493 (= lt!53496 (choose!645 lt!52806 lt!52813 (minValue!2438 newMap!16) lt!52822))))

(declare-fun e!68196 () Bool)

(assert (=> d!28493 e!68196))

(declare-fun res!52212 () Bool)

(assert (=> d!28493 (=> (not res!52212) (not e!68196))))

(assert (=> d!28493 (= res!52212 (contains!824 lt!52806 lt!52822))))

(assert (=> d!28493 (= (addApplyDifferent!73 lt!52806 lt!52813 (minValue!2438 newMap!16) lt!52822) lt!53496)))

(declare-fun b!104744 () Bool)

(assert (=> b!104744 (= e!68196 (not (= lt!52822 lt!52813)))))

(assert (= (and d!28493 res!52212) b!104744))

(declare-fun m!116557 () Bool)

(assert (=> d!28493 m!116557))

(assert (=> d!28493 m!114545))

(assert (=> d!28493 m!114547))

(declare-fun m!116559 () Bool)

(assert (=> d!28493 m!116559))

(assert (=> d!28493 m!114553))

(assert (=> d!28493 m!114545))

(assert (=> b!103610 d!28493))

(declare-fun d!28495 () Bool)

(declare-fun e!68197 () Bool)

(assert (=> d!28495 e!68197))

(declare-fun res!52214 () Bool)

(assert (=> d!28495 (=> (not res!52214) (not e!68197))))

(declare-fun lt!53498 () ListLongMap!1569)

(assert (=> d!28495 (= res!52214 (contains!824 lt!53498 (_1!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53499 () List!1611)

(assert (=> d!28495 (= lt!53498 (ListLongMap!1570 lt!53499))))

(declare-fun lt!53497 () Unit!3150)

(declare-fun lt!53500 () Unit!3150)

(assert (=> d!28495 (= lt!53497 lt!53500)))

(assert (=> d!28495 (= (getValueByKey!155 lt!53499 (_1!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28495 (= lt!53500 (lemmaContainsTupThenGetReturnValue!71 lt!53499 (_1!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28495 (= lt!53499 (insertStrictlySorted!74 (toList!800 lt!52811) (_1!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28495 (= (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))) lt!53498)))

(declare-fun b!104745 () Bool)

(declare-fun res!52213 () Bool)

(assert (=> b!104745 (=> (not res!52213) (not e!68197))))

(assert (=> b!104745 (= res!52213 (= (getValueByKey!155 (toList!800 lt!53498) (_1!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104746 () Bool)

(assert (=> b!104746 (= e!68197 (contains!826 (toList!800 lt!53498) (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28495 res!52214) b!104745))

(assert (= (and b!104745 res!52213) b!104746))

(declare-fun m!116561 () Bool)

(assert (=> d!28495 m!116561))

(declare-fun m!116563 () Bool)

(assert (=> d!28495 m!116563))

(declare-fun m!116565 () Bool)

(assert (=> d!28495 m!116565))

(declare-fun m!116567 () Bool)

(assert (=> d!28495 m!116567))

(declare-fun m!116569 () Bool)

(assert (=> b!104745 m!116569))

(declare-fun m!116571 () Bool)

(assert (=> b!104746 m!116571))

(assert (=> b!103610 d!28495))

(declare-fun d!28497 () Bool)

(assert (=> d!28497 (contains!824 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))) lt!52820)))

(declare-fun lt!53501 () Unit!3150)

(assert (=> d!28497 (= lt!53501 (choose!646 lt!52811 lt!52821 (zeroValue!2438 newMap!16) lt!52820))))

(assert (=> d!28497 (contains!824 lt!52811 lt!52820)))

(assert (=> d!28497 (= (addStillContains!73 lt!52811 lt!52821 (zeroValue!2438 newMap!16) lt!52820) lt!53501)))

(declare-fun bs!4304 () Bool)

(assert (= bs!4304 d!28497))

(assert (=> bs!4304 m!114551))

(assert (=> bs!4304 m!114551))

(assert (=> bs!4304 m!114565))

(declare-fun m!116573 () Bool)

(assert (=> bs!4304 m!116573))

(declare-fun m!116575 () Bool)

(assert (=> bs!4304 m!116575))

(assert (=> b!103610 d!28497))

(declare-fun d!28499 () Bool)

(assert (=> d!28499 (= (apply!97 (+!141 lt!52814 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))) lt!52823) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52814 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))) lt!52823)))))

(declare-fun bs!4305 () Bool)

(assert (= bs!4305 d!28499))

(declare-fun m!116577 () Bool)

(assert (=> bs!4305 m!116577))

(assert (=> bs!4305 m!116577))

(declare-fun m!116579 () Bool)

(assert (=> bs!4305 m!116579))

(assert (=> b!103610 d!28499))

(assert (=> b!103610 d!28343))

(declare-fun d!28501 () Bool)

(assert (=> d!28501 (= (apply!97 (+!141 lt!52807 (tuple2!2401 lt!52816 (zeroValue!2438 newMap!16))) lt!52819) (apply!97 lt!52807 lt!52819))))

(declare-fun lt!53502 () Unit!3150)

(assert (=> d!28501 (= lt!53502 (choose!645 lt!52807 lt!52816 (zeroValue!2438 newMap!16) lt!52819))))

(declare-fun e!68198 () Bool)

(assert (=> d!28501 e!68198))

(declare-fun res!52215 () Bool)

(assert (=> d!28501 (=> (not res!52215) (not e!68198))))

(assert (=> d!28501 (= res!52215 (contains!824 lt!52807 lt!52819))))

(assert (=> d!28501 (= (addApplyDifferent!73 lt!52807 lt!52816 (zeroValue!2438 newMap!16) lt!52819) lt!53502)))

(declare-fun b!104747 () Bool)

(assert (=> b!104747 (= e!68198 (not (= lt!52819 lt!52816)))))

(assert (= (and d!28501 res!52215) b!104747))

(declare-fun m!116581 () Bool)

(assert (=> d!28501 m!116581))

(assert (=> d!28501 m!114555))

(assert (=> d!28501 m!114557))

(declare-fun m!116583 () Bool)

(assert (=> d!28501 m!116583))

(assert (=> d!28501 m!114567))

(assert (=> d!28501 m!114555))

(assert (=> b!103610 d!28501))

(declare-fun d!28503 () Bool)

(declare-fun e!68200 () Bool)

(assert (=> d!28503 e!68200))

(declare-fun res!52216 () Bool)

(assert (=> d!28503 (=> res!52216 e!68200)))

(declare-fun lt!53503 () Bool)

(assert (=> d!28503 (= res!52216 (not lt!53503))))

(declare-fun lt!53504 () Bool)

(assert (=> d!28503 (= lt!53503 lt!53504)))

(declare-fun lt!53505 () Unit!3150)

(declare-fun e!68199 () Unit!3150)

(assert (=> d!28503 (= lt!53505 e!68199)))

(declare-fun c!18163 () Bool)

(assert (=> d!28503 (= c!18163 lt!53504)))

(assert (=> d!28503 (= lt!53504 (containsKey!159 (toList!800 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))) lt!52820))))

(assert (=> d!28503 (= (contains!824 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16))) lt!52820) lt!53503)))

(declare-fun b!104748 () Bool)

(declare-fun lt!53506 () Unit!3150)

(assert (=> b!104748 (= e!68199 lt!53506)))

(assert (=> b!104748 (= lt!53506 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))) lt!52820))))

(assert (=> b!104748 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))) lt!52820))))

(declare-fun b!104749 () Bool)

(declare-fun Unit!3208 () Unit!3150)

(assert (=> b!104749 (= e!68199 Unit!3208)))

(declare-fun b!104750 () Bool)

(assert (=> b!104750 (= e!68200 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52811 (tuple2!2401 lt!52821 (zeroValue!2438 newMap!16)))) lt!52820)))))

(assert (= (and d!28503 c!18163) b!104748))

(assert (= (and d!28503 (not c!18163)) b!104749))

(assert (= (and d!28503 (not res!52216)) b!104750))

(declare-fun m!116585 () Bool)

(assert (=> d!28503 m!116585))

(declare-fun m!116587 () Bool)

(assert (=> b!104748 m!116587))

(declare-fun m!116589 () Bool)

(assert (=> b!104748 m!116589))

(assert (=> b!104748 m!116589))

(declare-fun m!116591 () Bool)

(assert (=> b!104748 m!116591))

(assert (=> b!104750 m!116589))

(assert (=> b!104750 m!116589))

(assert (=> b!104750 m!116591))

(assert (=> b!103610 d!28503))

(declare-fun d!28505 () Bool)

(assert (=> d!28505 (= (apply!97 lt!52807 lt!52819) (get!1326 (getValueByKey!155 (toList!800 lt!52807) lt!52819)))))

(declare-fun bs!4306 () Bool)

(assert (= bs!4306 d!28505))

(declare-fun m!116593 () Bool)

(assert (=> bs!4306 m!116593))

(assert (=> bs!4306 m!116593))

(declare-fun m!116595 () Bool)

(assert (=> bs!4306 m!116595))

(assert (=> b!103610 d!28505))

(declare-fun d!28507 () Bool)

(declare-fun e!68201 () Bool)

(assert (=> d!28507 e!68201))

(declare-fun res!52218 () Bool)

(assert (=> d!28507 (=> (not res!52218) (not e!68201))))

(declare-fun lt!53508 () ListLongMap!1569)

(assert (=> d!28507 (= res!52218 (contains!824 lt!53508 (_1!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))))))

(declare-fun lt!53509 () List!1611)

(assert (=> d!28507 (= lt!53508 (ListLongMap!1570 lt!53509))))

(declare-fun lt!53507 () Unit!3150)

(declare-fun lt!53510 () Unit!3150)

(assert (=> d!28507 (= lt!53507 lt!53510)))

(assert (=> d!28507 (= (getValueByKey!155 lt!53509 (_1!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))))))

(assert (=> d!28507 (= lt!53510 (lemmaContainsTupThenGetReturnValue!71 lt!53509 (_1!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))))))

(assert (=> d!28507 (= lt!53509 (insertStrictlySorted!74 (toList!800 lt!52814) (_1!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))))))

(assert (=> d!28507 (= (+!141 lt!52814 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))) lt!53508)))

(declare-fun b!104751 () Bool)

(declare-fun res!52217 () Bool)

(assert (=> b!104751 (=> (not res!52217) (not e!68201))))

(assert (=> b!104751 (= res!52217 (= (getValueByKey!155 (toList!800 lt!53508) (_1!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52818 (minValue!2438 newMap!16))))))))

(declare-fun b!104752 () Bool)

(assert (=> b!104752 (= e!68201 (contains!826 (toList!800 lt!53508) (tuple2!2401 lt!52818 (minValue!2438 newMap!16))))))

(assert (= (and d!28507 res!52218) b!104751))

(assert (= (and b!104751 res!52217) b!104752))

(declare-fun m!116597 () Bool)

(assert (=> d!28507 m!116597))

(declare-fun m!116599 () Bool)

(assert (=> d!28507 m!116599))

(declare-fun m!116601 () Bool)

(assert (=> d!28507 m!116601))

(declare-fun m!116603 () Bool)

(assert (=> d!28507 m!116603))

(declare-fun m!116605 () Bool)

(assert (=> b!104751 m!116605))

(declare-fun m!116607 () Bool)

(assert (=> b!104752 m!116607))

(assert (=> b!103610 d!28507))

(declare-fun d!28509 () Bool)

(assert (=> d!28509 (= (apply!97 lt!52806 lt!52822) (get!1326 (getValueByKey!155 (toList!800 lt!52806) lt!52822)))))

(declare-fun bs!4307 () Bool)

(assert (= bs!4307 d!28509))

(declare-fun m!116609 () Bool)

(assert (=> bs!4307 m!116609))

(assert (=> bs!4307 m!116609))

(declare-fun m!116611 () Bool)

(assert (=> bs!4307 m!116611))

(assert (=> b!103610 d!28509))

(declare-fun d!28511 () Bool)

(assert (=> d!28511 (= (apply!97 lt!52814 lt!52823) (get!1326 (getValueByKey!155 (toList!800 lt!52814) lt!52823)))))

(declare-fun bs!4308 () Bool)

(assert (= bs!4308 d!28511))

(declare-fun m!116613 () Bool)

(assert (=> bs!4308 m!116613))

(assert (=> bs!4308 m!116613))

(declare-fun m!116615 () Bool)

(assert (=> bs!4308 m!116615))

(assert (=> b!103610 d!28511))

(declare-fun d!28513 () Bool)

(declare-fun e!68203 () Bool)

(assert (=> d!28513 e!68203))

(declare-fun res!52219 () Bool)

(assert (=> d!28513 (=> res!52219 e!68203)))

(declare-fun lt!53511 () Bool)

(assert (=> d!28513 (= res!52219 (not lt!53511))))

(declare-fun lt!53512 () Bool)

(assert (=> d!28513 (= lt!53511 lt!53512)))

(declare-fun lt!53513 () Unit!3150)

(declare-fun e!68202 () Unit!3150)

(assert (=> d!28513 (= lt!53513 e!68202)))

(declare-fun c!18164 () Bool)

(assert (=> d!28513 (= c!18164 lt!53512)))

(assert (=> d!28513 (= lt!53512 (containsKey!159 (toList!800 lt!52998) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28513 (= (contains!824 lt!52998 #b1000000000000000000000000000000000000000000000000000000000000000) lt!53511)))

(declare-fun b!104753 () Bool)

(declare-fun lt!53514 () Unit!3150)

(assert (=> b!104753 (= e!68202 lt!53514)))

(assert (=> b!104753 (= lt!53514 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52998) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104753 (isDefined!108 (getValueByKey!155 (toList!800 lt!52998) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104754 () Bool)

(declare-fun Unit!3209 () Unit!3150)

(assert (=> b!104754 (= e!68202 Unit!3209)))

(declare-fun b!104755 () Bool)

(assert (=> b!104755 (= e!68203 (isDefined!108 (getValueByKey!155 (toList!800 lt!52998) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28513 c!18164) b!104753))

(assert (= (and d!28513 (not c!18164)) b!104754))

(assert (= (and d!28513 (not res!52219)) b!104755))

(declare-fun m!116617 () Bool)

(assert (=> d!28513 m!116617))

(declare-fun m!116619 () Bool)

(assert (=> b!104753 m!116619))

(assert (=> b!104753 m!115419))

(assert (=> b!104753 m!115419))

(declare-fun m!116621 () Bool)

(assert (=> b!104753 m!116621))

(assert (=> b!104755 m!115419))

(assert (=> b!104755 m!115419))

(assert (=> b!104755 m!116621))

(assert (=> bm!10911 d!28513))

(assert (=> d!27947 d!27945))

(assert (=> d!27947 d!27943))

(declare-fun d!28515 () Bool)

(assert (=> d!28515 (not (contains!824 (+!141 lt!52782 (tuple2!2401 lt!52781 lt!52787)) lt!52785))))

(assert (=> d!28515 true))

(declare-fun _$36!316 () Unit!3150)

(assert (=> d!28515 (= (choose!643 lt!52782 lt!52781 lt!52787 lt!52785) _$36!316)))

(declare-fun bs!4309 () Bool)

(assert (= bs!4309 d!28515))

(assert (=> bs!4309 m!114445))

(assert (=> bs!4309 m!114445))

(assert (=> bs!4309 m!114447))

(assert (=> d!27947 d!28515))

(declare-fun d!28517 () Bool)

(declare-fun e!68205 () Bool)

(assert (=> d!28517 e!68205))

(declare-fun res!52220 () Bool)

(assert (=> d!28517 (=> res!52220 e!68205)))

(declare-fun lt!53515 () Bool)

(assert (=> d!28517 (= res!52220 (not lt!53515))))

(declare-fun lt!53516 () Bool)

(assert (=> d!28517 (= lt!53515 lt!53516)))

(declare-fun lt!53517 () Unit!3150)

(declare-fun e!68204 () Unit!3150)

(assert (=> d!28517 (= lt!53517 e!68204)))

(declare-fun c!18165 () Bool)

(assert (=> d!28517 (= c!18165 lt!53516)))

(assert (=> d!28517 (= lt!53516 (containsKey!159 (toList!800 lt!52782) lt!52785))))

(assert (=> d!28517 (= (contains!824 lt!52782 lt!52785) lt!53515)))

(declare-fun b!104757 () Bool)

(declare-fun lt!53518 () Unit!3150)

(assert (=> b!104757 (= e!68204 lt!53518)))

(assert (=> b!104757 (= lt!53518 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52782) lt!52785))))

(assert (=> b!104757 (isDefined!108 (getValueByKey!155 (toList!800 lt!52782) lt!52785))))

(declare-fun b!104758 () Bool)

(declare-fun Unit!3210 () Unit!3150)

(assert (=> b!104758 (= e!68204 Unit!3210)))

(declare-fun b!104759 () Bool)

(assert (=> b!104759 (= e!68205 (isDefined!108 (getValueByKey!155 (toList!800 lt!52782) lt!52785)))))

(assert (= (and d!28517 c!18165) b!104757))

(assert (= (and d!28517 (not c!18165)) b!104758))

(assert (= (and d!28517 (not res!52220)) b!104759))

(declare-fun m!116623 () Bool)

(assert (=> d!28517 m!116623))

(declare-fun m!116625 () Bool)

(assert (=> b!104757 m!116625))

(declare-fun m!116627 () Bool)

(assert (=> b!104757 m!116627))

(assert (=> b!104757 m!116627))

(declare-fun m!116629 () Bool)

(assert (=> b!104757 m!116629))

(assert (=> b!104759 m!116627))

(assert (=> b!104759 m!116627))

(assert (=> b!104759 m!116629))

(assert (=> d!27947 d!28517))

(declare-fun d!28519 () Bool)

(assert (=> d!28519 (= ($colon$colon!80 e!67645 (ite c!17929 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540)))) (Cons!1607 (ite c!17929 (h!2203 (toList!800 lt!52539)) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))) e!67645))))

(assert (=> bm!10918 d!28519))

(declare-fun b!104761 () Bool)

(declare-fun res!52224 () Bool)

(declare-fun e!68206 () Bool)

(assert (=> b!104761 (=> (not res!52224) (not e!68206))))

(assert (=> b!104761 (= res!52224 (bvsge (size!2315 (v!2876 (underlying!358 thiss!992))) (_size!496 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun d!28521 () Bool)

(declare-fun res!52221 () Bool)

(assert (=> d!28521 (=> (not res!52221) (not e!68206))))

(assert (=> d!28521 (= res!52221 (validMask!0 (mask!6697 (v!2876 (underlying!358 thiss!992)))))))

(assert (=> d!28521 (= (simpleValid!73 (v!2876 (underlying!358 thiss!992))) e!68206)))

(declare-fun b!104763 () Bool)

(assert (=> b!104763 (= e!68206 (and (bvsge (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!496 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!104760 () Bool)

(declare-fun res!52223 () Bool)

(assert (=> b!104760 (=> (not res!52223) (not e!68206))))

(assert (=> b!104760 (= res!52223 (and (= (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001)) (= (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (size!2312 (_values!2544 (v!2876 (underlying!358 thiss!992))))) (bvsge (_size!496 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!496 (v!2876 (underlying!358 thiss!992))) (bvadd (mask!6697 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!104762 () Bool)

(declare-fun res!52222 () Bool)

(assert (=> b!104762 (=> (not res!52222) (not e!68206))))

(assert (=> b!104762 (= res!52222 (= (size!2315 (v!2876 (underlying!358 thiss!992))) (bvadd (_size!496 (v!2876 (underlying!358 thiss!992))) (bvsdiv (bvadd (extraKeys!2370 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!28521 res!52221) b!104760))

(assert (= (and b!104760 res!52223) b!104761))

(assert (= (and b!104761 res!52224) b!104762))

(assert (= (and b!104762 res!52222) b!104763))

(declare-fun m!116631 () Bool)

(assert (=> b!104761 m!116631))

(assert (=> d!28521 m!114181))

(assert (=> b!104762 m!116631))

(assert (=> d!27933 d!28521))

(declare-fun d!28523 () Bool)

(declare-fun lt!53519 () Bool)

(assert (=> d!28523 (= lt!53519 (select (content!108 lt!52805) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun e!68208 () Bool)

(assert (=> d!28523 (= lt!53519 e!68208)))

(declare-fun res!52225 () Bool)

(assert (=> d!28523 (=> (not res!52225) (not e!68208))))

(assert (=> d!28523 (= res!52225 ((_ is Cons!1607) lt!52805))))

(assert (=> d!28523 (= (contains!826 lt!52805 (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))) lt!53519)))

(declare-fun b!104764 () Bool)

(declare-fun e!68207 () Bool)

(assert (=> b!104764 (= e!68208 e!68207)))

(declare-fun res!52226 () Bool)

(assert (=> b!104764 (=> res!52226 e!68207)))

(assert (=> b!104764 (= res!52226 (= (h!2203 lt!52805) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(declare-fun b!104765 () Bool)

(assert (=> b!104765 (= e!68207 (contains!826 (t!5673 lt!52805) (tuple2!2401 (_1!1211 lt!52538) (_2!1211 lt!52538))))))

(assert (= (and d!28523 res!52225) b!104764))

(assert (= (and b!104764 (not res!52226)) b!104765))

(declare-fun m!116633 () Bool)

(assert (=> d!28523 m!116633))

(declare-fun m!116635 () Bool)

(assert (=> d!28523 m!116635))

(declare-fun m!116637 () Bool)

(assert (=> b!104765 m!116637))

(assert (=> b!103599 d!28523))

(declare-fun d!28525 () Bool)

(declare-fun e!68209 () Bool)

(assert (=> d!28525 e!68209))

(declare-fun res!52228 () Bool)

(assert (=> d!28525 (=> (not res!52228) (not e!68209))))

(declare-fun lt!53521 () ListLongMap!1569)

(assert (=> d!28525 (= res!52228 (contains!824 lt!53521 (_1!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(declare-fun lt!53522 () List!1611)

(assert (=> d!28525 (= lt!53521 (ListLongMap!1570 lt!53522))))

(declare-fun lt!53520 () Unit!3150)

(declare-fun lt!53523 () Unit!3150)

(assert (=> d!28525 (= lt!53520 lt!53523)))

(assert (=> d!28525 (= (getValueByKey!155 lt!53522 (_1!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28525 (= lt!53523 (lemmaContainsTupThenGetReturnValue!71 lt!53522 (_1!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28525 (= lt!53522 (insertStrictlySorted!74 (toList!800 (ite c!17909 call!10916 (ite c!17913 call!10917 call!10915))) (_1!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) (_2!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))))

(assert (=> d!28525 (= (+!141 (ite c!17909 call!10916 (ite c!17913 call!10917 call!10915)) (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))) lt!53521)))

(declare-fun b!104766 () Bool)

(declare-fun res!52227 () Bool)

(assert (=> b!104766 (=> (not res!52227) (not e!68209))))

(assert (=> b!104766 (= res!52227 (= (getValueByKey!155 (toList!800 lt!53521) (_1!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))))

(declare-fun b!104767 () Bool)

(assert (=> b!104767 (= e!68209 (contains!826 (toList!800 lt!53521) (ite (or c!17909 c!17913) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(assert (= (and d!28525 res!52228) b!104766))

(assert (= (and b!104766 res!52227) b!104767))

(declare-fun m!116639 () Bool)

(assert (=> d!28525 m!116639))

(declare-fun m!116641 () Bool)

(assert (=> d!28525 m!116641))

(declare-fun m!116643 () Bool)

(assert (=> d!28525 m!116643))

(declare-fun m!116645 () Bool)

(assert (=> d!28525 m!116645))

(declare-fun m!116647 () Bool)

(assert (=> b!104766 m!116647))

(declare-fun m!116649 () Bool)

(assert (=> b!104767 m!116649))

(assert (=> bm!10914 d!28525))

(declare-fun d!28527 () Bool)

(assert (=> d!28527 (= (get!1326 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2880 (getValueByKey!155 (toList!800 lt!52728) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27937 d!28527))

(assert (=> d!27937 d!28051))

(declare-fun d!28529 () Bool)

(declare-fun c!18166 () Bool)

(assert (=> d!28529 (= c!18166 (and ((_ is Cons!1607) (toList!800 lt!53104)) (= (_1!1211 (h!2203 (toList!800 lt!53104))) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68210 () Option!161)

(assert (=> d!28529 (= (getValueByKey!155 (toList!800 lt!53104) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68210)))

(declare-fun b!104769 () Bool)

(declare-fun e!68211 () Option!161)

(assert (=> b!104769 (= e!68210 e!68211)))

(declare-fun c!18167 () Bool)

(assert (=> b!104769 (= c!18167 (and ((_ is Cons!1607) (toList!800 lt!53104)) (not (= (_1!1211 (h!2203 (toList!800 lt!53104))) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104770 () Bool)

(assert (=> b!104770 (= e!68211 (getValueByKey!155 (t!5673 (toList!800 lt!53104)) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104771 () Bool)

(assert (=> b!104771 (= e!68211 None!159)))

(declare-fun b!104768 () Bool)

(assert (=> b!104768 (= e!68210 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53104)))))))

(assert (= (and d!28529 c!18166) b!104768))

(assert (= (and d!28529 (not c!18166)) b!104769))

(assert (= (and b!104769 c!18167) b!104770))

(assert (= (and b!104769 (not c!18167)) b!104771))

(declare-fun m!116651 () Bool)

(assert (=> b!104770 m!116651))

(assert (=> b!103975 d!28529))

(assert (=> b!103896 d!28031))

(declare-fun d!28531 () Bool)

(assert (=> d!28531 (= (isEmpty!368 (toList!800 lt!52783)) ((_ is Nil!1608) (toList!800 lt!52783)))))

(assert (=> d!27941 d!28531))

(declare-fun d!28533 () Bool)

(assert (=> d!28533 (= (apply!97 lt!52817 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52817) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4310 () Bool)

(assert (= bs!4310 d!28533))

(assert (=> bs!4310 m!115905))

(assert (=> bs!4310 m!115905))

(declare-fun m!116653 () Bool)

(assert (=> bs!4310 m!116653))

(assert (=> b!103624 d!28533))

(declare-fun c!18168 () Bool)

(declare-fun d!28535 () Bool)

(assert (=> d!28535 (= c!18168 (and ((_ is Cons!1607) (toList!800 lt!53123)) (= (_1!1211 (h!2203 (toList!800 lt!53123))) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68212 () Option!161)

(assert (=> d!28535 (= (getValueByKey!155 (toList!800 lt!53123) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68212)))

(declare-fun b!104773 () Bool)

(declare-fun e!68213 () Option!161)

(assert (=> b!104773 (= e!68212 e!68213)))

(declare-fun c!18169 () Bool)

(assert (=> b!104773 (= c!18169 (and ((_ is Cons!1607) (toList!800 lt!53123)) (not (= (_1!1211 (h!2203 (toList!800 lt!53123))) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104774 () Bool)

(assert (=> b!104774 (= e!68213 (getValueByKey!155 (t!5673 (toList!800 lt!53123)) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104775 () Bool)

(assert (=> b!104775 (= e!68213 None!159)))

(declare-fun b!104772 () Bool)

(assert (=> b!104772 (= e!68212 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53123)))))))

(assert (= (and d!28535 c!18168) b!104772))

(assert (= (and d!28535 (not c!18168)) b!104773))

(assert (= (and b!104773 c!18169) b!104774))

(assert (= (and b!104773 (not c!18169)) b!104775))

(declare-fun m!116655 () Bool)

(assert (=> b!104774 m!116655))

(assert (=> b!103987 d!28535))

(assert (=> b!104020 d!27873))

(declare-fun d!28537 () Bool)

(declare-fun res!52229 () Bool)

(declare-fun e!68214 () Bool)

(assert (=> d!28537 (=> res!52229 e!68214)))

(assert (=> d!28537 (= res!52229 (or ((_ is Nil!1608) lt!52947) ((_ is Nil!1608) (t!5673 lt!52947))))))

(assert (=> d!28537 (= (isStrictlySorted!308 lt!52947) e!68214)))

(declare-fun b!104776 () Bool)

(declare-fun e!68215 () Bool)

(assert (=> b!104776 (= e!68214 e!68215)))

(declare-fun res!52230 () Bool)

(assert (=> b!104776 (=> (not res!52230) (not e!68215))))

(assert (=> b!104776 (= res!52230 (bvslt (_1!1211 (h!2203 lt!52947)) (_1!1211 (h!2203 (t!5673 lt!52947)))))))

(declare-fun b!104777 () Bool)

(assert (=> b!104777 (= e!68215 (isStrictlySorted!308 (t!5673 lt!52947)))))

(assert (= (and d!28537 (not res!52229)) b!104776))

(assert (= (and b!104776 res!52230) b!104777))

(declare-fun m!116657 () Bool)

(assert (=> b!104777 m!116657))

(assert (=> d!27857 d!28537))

(declare-fun d!28539 () Bool)

(declare-fun res!52231 () Bool)

(declare-fun e!68216 () Bool)

(assert (=> d!28539 (=> res!52231 e!68216)))

(assert (=> d!28539 (= res!52231 (or ((_ is Nil!1608) (toList!800 (+!141 lt!52539 lt!52540))) ((_ is Nil!1608) (t!5673 (toList!800 (+!141 lt!52539 lt!52540))))))))

(assert (=> d!28539 (= (isStrictlySorted!308 (toList!800 (+!141 lt!52539 lt!52540))) e!68216)))

(declare-fun b!104778 () Bool)

(declare-fun e!68217 () Bool)

(assert (=> b!104778 (= e!68216 e!68217)))

(declare-fun res!52232 () Bool)

(assert (=> b!104778 (=> (not res!52232) (not e!68217))))

(assert (=> b!104778 (= res!52232 (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 lt!52540)))) (_1!1211 (h!2203 (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))))))))

(declare-fun b!104779 () Bool)

(assert (=> b!104779 (= e!68217 (isStrictlySorted!308 (t!5673 (toList!800 (+!141 lt!52539 lt!52540)))))))

(assert (= (and d!28539 (not res!52231)) b!104778))

(assert (= (and b!104778 res!52232) b!104779))

(assert (=> b!104779 m!115505))

(assert (=> d!27857 d!28539))

(assert (=> b!103937 d!28037))

(assert (=> b!103937 d!28039))

(declare-fun d!28541 () Bool)

(declare-fun e!68219 () Bool)

(assert (=> d!28541 e!68219))

(declare-fun res!52233 () Bool)

(assert (=> d!28541 (=> res!52233 e!68219)))

(declare-fun lt!53524 () Bool)

(assert (=> d!28541 (= res!52233 (not lt!53524))))

(declare-fun lt!53525 () Bool)

(assert (=> d!28541 (= lt!53524 lt!53525)))

(declare-fun lt!53526 () Unit!3150)

(declare-fun e!68218 () Unit!3150)

(assert (=> d!28541 (= lt!53526 e!68218)))

(declare-fun c!18170 () Bool)

(assert (=> d!28541 (= c!18170 lt!53525)))

(assert (=> d!28541 (= lt!53525 (containsKey!159 (toList!800 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) lt!52975))))

(assert (=> d!28541 (= (contains!824 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!52975) lt!53524)))

(declare-fun b!104780 () Bool)

(declare-fun lt!53527 () Unit!3150)

(assert (=> b!104780 (= e!68218 lt!53527)))

(assert (=> b!104780 (= lt!53527 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) lt!52975))))

(assert (=> b!104780 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) lt!52975))))

(declare-fun b!104781 () Bool)

(declare-fun Unit!3211 () Unit!3150)

(assert (=> b!104781 (= e!68218 Unit!3211)))

(declare-fun b!104782 () Bool)

(assert (=> b!104782 (= e!68219 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) lt!52975)))))

(assert (= (and d!28541 c!18170) b!104780))

(assert (= (and d!28541 (not c!18170)) b!104781))

(assert (= (and d!28541 (not res!52233)) b!104782))

(declare-fun m!116659 () Bool)

(assert (=> d!28541 m!116659))

(declare-fun m!116661 () Bool)

(assert (=> b!104780 m!116661))

(declare-fun m!116663 () Bool)

(assert (=> b!104780 m!116663))

(assert (=> b!104780 m!116663))

(declare-fun m!116665 () Bool)

(assert (=> b!104780 m!116665))

(assert (=> b!104782 m!116663))

(assert (=> b!104782 m!116663))

(assert (=> b!104782 m!116665))

(assert (=> b!103780 d!28541))

(declare-fun d!28543 () Bool)

(assert (=> d!28543 (= (apply!97 lt!52969 lt!52978) (get!1326 (getValueByKey!155 (toList!800 lt!52969) lt!52978)))))

(declare-fun bs!4311 () Bool)

(assert (= bs!4311 d!28543))

(declare-fun m!116667 () Bool)

(assert (=> bs!4311 m!116667))

(assert (=> bs!4311 m!116667))

(declare-fun m!116669 () Bool)

(assert (=> bs!4311 m!116669))

(assert (=> b!103780 d!28543))

(declare-fun d!28545 () Bool)

(declare-fun e!68220 () Bool)

(assert (=> d!28545 e!68220))

(declare-fun res!52235 () Bool)

(assert (=> d!28545 (=> (not res!52235) (not e!68220))))

(declare-fun lt!53529 () ListLongMap!1569)

(assert (=> d!28545 (= res!52235 (contains!824 lt!53529 (_1!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(declare-fun lt!53530 () List!1611)

(assert (=> d!28545 (= lt!53529 (ListLongMap!1570 lt!53530))))

(declare-fun lt!53528 () Unit!3150)

(declare-fun lt!53531 () Unit!3150)

(assert (=> d!28545 (= lt!53528 lt!53531)))

(assert (=> d!28545 (= (getValueByKey!155 lt!53530 (_1!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28545 (= lt!53531 (lemmaContainsTupThenGetReturnValue!71 lt!53530 (_1!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28545 (= lt!53530 (insertStrictlySorted!74 (toList!800 lt!52961) (_1!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28545 (= (+!141 lt!52961 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!53529)))

(declare-fun b!104783 () Bool)

(declare-fun res!52234 () Bool)

(assert (=> b!104783 (=> (not res!52234) (not e!68220))))

(assert (=> b!104783 (= res!52234 (= (getValueByKey!155 (toList!800 lt!53529) (_1!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(declare-fun b!104784 () Bool)

(assert (=> b!104784 (= e!68220 (contains!826 (toList!800 lt!53529) (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))

(assert (= (and d!28545 res!52235) b!104783))

(assert (= (and b!104783 res!52234) b!104784))

(declare-fun m!116671 () Bool)

(assert (=> d!28545 m!116671))

(declare-fun m!116673 () Bool)

(assert (=> d!28545 m!116673))

(declare-fun m!116675 () Bool)

(assert (=> d!28545 m!116675))

(declare-fun m!116677 () Bool)

(assert (=> d!28545 m!116677))

(declare-fun m!116679 () Bool)

(assert (=> b!104783 m!116679))

(declare-fun m!116681 () Bool)

(assert (=> b!104784 m!116681))

(assert (=> b!103780 d!28545))

(declare-fun d!28547 () Bool)

(assert (=> d!28547 (= (apply!97 (+!141 lt!52969 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!52978) (apply!97 lt!52969 lt!52978))))

(declare-fun lt!53532 () Unit!3150)

(assert (=> d!28547 (= lt!53532 (choose!645 lt!52969 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) lt!52978))))

(declare-fun e!68221 () Bool)

(assert (=> d!28547 e!68221))

(declare-fun res!52236 () Bool)

(assert (=> d!28547 (=> (not res!52236) (not e!68221))))

(assert (=> d!28547 (= res!52236 (contains!824 lt!52969 lt!52978))))

(assert (=> d!28547 (= (addApplyDifferent!73 lt!52969 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) lt!52978) lt!53532)))

(declare-fun b!104785 () Bool)

(assert (=> b!104785 (= e!68221 (not (= lt!52978 lt!52973)))))

(assert (= (and d!28547 res!52236) b!104785))

(declare-fun m!116683 () Bool)

(assert (=> d!28547 m!116683))

(assert (=> d!28547 m!114805))

(assert (=> d!28547 m!114809))

(declare-fun m!116685 () Bool)

(assert (=> d!28547 m!116685))

(assert (=> d!28547 m!114795))

(assert (=> d!28547 m!114805))

(assert (=> b!103780 d!28547))

(declare-fun d!28549 () Bool)

(assert (=> d!28549 (= (apply!97 (+!141 lt!52969 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!52978) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52969 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) lt!52978)))))

(declare-fun bs!4312 () Bool)

(assert (= bs!4312 d!28549))

(declare-fun m!116687 () Bool)

(assert (=> bs!4312 m!116687))

(assert (=> bs!4312 m!116687))

(declare-fun m!116689 () Bool)

(assert (=> bs!4312 m!116689))

(assert (=> b!103780 d!28549))

(declare-fun d!28551 () Bool)

(assert (=> d!28551 (= (apply!97 lt!52961 lt!52977) (get!1326 (getValueByKey!155 (toList!800 lt!52961) lt!52977)))))

(declare-fun bs!4313 () Bool)

(assert (= bs!4313 d!28551))

(declare-fun m!116691 () Bool)

(assert (=> bs!4313 m!116691))

(assert (=> bs!4313 m!116691))

(declare-fun m!116693 () Bool)

(assert (=> bs!4313 m!116693))

(assert (=> b!103780 d!28551))

(declare-fun b!104786 () Bool)

(declare-fun e!68228 () Bool)

(declare-fun e!68227 () Bool)

(assert (=> b!104786 (= e!68228 e!68227)))

(declare-fun c!18171 () Bool)

(declare-fun e!68222 () Bool)

(assert (=> b!104786 (= c!18171 e!68222)))

(declare-fun res!52238 () Bool)

(assert (=> b!104786 (=> (not res!52238) (not e!68222))))

(assert (=> b!104786 (= res!52238 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104787 () Bool)

(assert (=> b!104787 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> b!104787 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668))))))

(declare-fun lt!53535 () ListLongMap!1569)

(declare-fun e!68223 () Bool)

(assert (=> b!104787 (= e!68223 (= (apply!97 lt!53535 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun e!68225 () Bool)

(declare-fun b!104788 () Bool)

(assert (=> b!104788 (= e!68225 (= lt!53535 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16))))))

(declare-fun b!104789 () Bool)

(declare-fun e!68224 () ListLongMap!1569)

(declare-fun e!68226 () ListLongMap!1569)

(assert (=> b!104789 (= e!68224 e!68226)))

(declare-fun c!18172 () Bool)

(assert (=> b!104789 (= c!18172 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104790 () Bool)

(declare-fun call!11013 () ListLongMap!1569)

(assert (=> b!104790 (= e!68226 call!11013)))

(declare-fun bm!11010 () Bool)

(assert (=> bm!11010 (= call!11013 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16)))))

(declare-fun d!28553 () Bool)

(assert (=> d!28553 e!68228))

(declare-fun res!52239 () Bool)

(assert (=> d!28553 (=> (not res!52239) (not e!68228))))

(assert (=> d!28553 (= res!52239 (not (contains!824 lt!53535 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28553 (= lt!53535 e!68224)))

(declare-fun c!18174 () Bool)

(assert (=> d!28553 (= c!18174 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28553 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28553 (= (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668) (mask!6697 newMap!16) (ite c!17781 (ite c!17787 lt!52670 lt!52664) (extraKeys!2370 newMap!16)) (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53535)))

(declare-fun b!104791 () Bool)

(assert (=> b!104791 (= e!68227 e!68223)))

(assert (=> b!104791 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun res!52237 () Bool)

(assert (=> b!104791 (= res!52237 (contains!824 lt!53535 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104791 (=> (not res!52237) (not e!68223))))

(declare-fun b!104792 () Bool)

(declare-fun lt!53536 () Unit!3150)

(declare-fun lt!53538 () Unit!3150)

(assert (=> b!104792 (= lt!53536 lt!53538)))

(declare-fun lt!53539 () V!3211)

(declare-fun lt!53537 () (_ BitVec 64))

(declare-fun lt!53534 () ListLongMap!1569)

(declare-fun lt!53533 () (_ BitVec 64))

(assert (=> b!104792 (not (contains!824 (+!141 lt!53534 (tuple2!2401 lt!53533 lt!53539)) lt!53537))))

(assert (=> b!104792 (= lt!53538 (addStillNotContains!45 lt!53534 lt!53533 lt!53539 lt!53537))))

(assert (=> b!104792 (= lt!53537 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104792 (= lt!53539 (get!1323 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104792 (= lt!53533 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104792 (= lt!53534 call!11013)))

(assert (=> b!104792 (= e!68226 (+!141 call!11013 (tuple2!2401 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (get!1323 (select (arr!2058 (ite (or c!17781 c!17784) (_values!2544 newMap!16) lt!52668)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104793 () Bool)

(assert (=> b!104793 (= e!68227 e!68225)))

(declare-fun c!18173 () Bool)

(assert (=> b!104793 (= c!18173 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104794 () Bool)

(assert (=> b!104794 (= e!68225 (isEmpty!367 lt!53535))))

(declare-fun b!104795 () Bool)

(assert (=> b!104795 (= e!68224 (ListLongMap!1570 Nil!1608))))

(declare-fun b!104796 () Bool)

(assert (=> b!104796 (= e!68222 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104796 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104797 () Bool)

(declare-fun res!52240 () Bool)

(assert (=> b!104797 (=> (not res!52240) (not e!68228))))

(assert (=> b!104797 (= res!52240 (not (contains!824 lt!53535 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28553 c!18174) b!104795))

(assert (= (and d!28553 (not c!18174)) b!104789))

(assert (= (and b!104789 c!18172) b!104792))

(assert (= (and b!104789 (not c!18172)) b!104790))

(assert (= (or b!104792 b!104790) bm!11010))

(assert (= (and d!28553 res!52239) b!104797))

(assert (= (and b!104797 res!52240) b!104786))

(assert (= (and b!104786 res!52238) b!104796))

(assert (= (and b!104786 c!18171) b!104791))

(assert (= (and b!104786 (not c!18171)) b!104793))

(assert (= (and b!104791 res!52237) b!104787))

(assert (= (and b!104793 c!18173) b!104788))

(assert (= (and b!104793 (not c!18173)) b!104794))

(declare-fun b_lambda!4673 () Bool)

(assert (=> (not b_lambda!4673) (not b!104787)))

(assert (=> b!104787 t!5681))

(declare-fun b_and!6471 () Bool)

(assert (= b_and!6467 (and (=> t!5681 result!3435) b_and!6471)))

(assert (=> b!104787 t!5683))

(declare-fun b_and!6473 () Bool)

(assert (= b_and!6469 (and (=> t!5683 result!3437) b_and!6473)))

(declare-fun b_lambda!4675 () Bool)

(assert (=> (not b_lambda!4675) (not b!104792)))

(assert (=> b!104792 t!5681))

(declare-fun b_and!6475 () Bool)

(assert (= b_and!6471 (and (=> t!5681 result!3435) b_and!6475)))

(assert (=> b!104792 t!5683))

(declare-fun b_and!6477 () Bool)

(assert (= b_and!6473 (and (=> t!5683 result!3437) b_and!6477)))

(declare-fun m!116695 () Bool)

(assert (=> b!104792 m!116695))

(declare-fun m!116697 () Bool)

(assert (=> b!104792 m!116697))

(assert (=> b!104792 m!114783))

(assert (=> b!104792 m!114537))

(assert (=> b!104792 m!114785))

(declare-fun m!116699 () Bool)

(assert (=> b!104792 m!116699))

(assert (=> b!104792 m!114783))

(assert (=> b!104792 m!116699))

(declare-fun m!116701 () Bool)

(assert (=> b!104792 m!116701))

(assert (=> b!104792 m!114525))

(assert (=> b!104792 m!114537))

(declare-fun m!116703 () Bool)

(assert (=> b!104797 m!116703))

(assert (=> b!104796 m!114525))

(assert (=> b!104796 m!114525))

(assert (=> b!104796 m!114527))

(assert (=> b!104791 m!114525))

(assert (=> b!104791 m!114525))

(declare-fun m!116705 () Bool)

(assert (=> b!104791 m!116705))

(assert (=> b!104789 m!114525))

(assert (=> b!104789 m!114525))

(assert (=> b!104789 m!114527))

(declare-fun m!116707 () Bool)

(assert (=> b!104788 m!116707))

(assert (=> b!104787 m!114783))

(assert (=> b!104787 m!114537))

(assert (=> b!104787 m!114785))

(assert (=> b!104787 m!114525))

(declare-fun m!116709 () Bool)

(assert (=> b!104787 m!116709))

(assert (=> b!104787 m!114783))

(assert (=> b!104787 m!114525))

(assert (=> b!104787 m!114537))

(declare-fun m!116711 () Bool)

(assert (=> b!104794 m!116711))

(declare-fun m!116713 () Bool)

(assert (=> d!28553 m!116713))

(assert (=> d!28553 m!114575))

(assert (=> bm!11010 m!116707))

(assert (=> b!103780 d!28553))

(declare-fun d!28555 () Bool)

(assert (=> d!28555 (= (apply!97 lt!52962 lt!52974) (get!1326 (getValueByKey!155 (toList!800 lt!52962) lt!52974)))))

(declare-fun bs!4314 () Bool)

(assert (= bs!4314 d!28555))

(declare-fun m!116715 () Bool)

(assert (=> bs!4314 m!116715))

(assert (=> bs!4314 m!116715))

(declare-fun m!116717 () Bool)

(assert (=> bs!4314 m!116717))

(assert (=> b!103780 d!28555))

(declare-fun d!28557 () Bool)

(assert (=> d!28557 (contains!824 (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!52975)))

(declare-fun lt!53540 () Unit!3150)

(assert (=> d!28557 (= lt!53540 (choose!646 lt!52966 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) lt!52975))))

(assert (=> d!28557 (contains!824 lt!52966 lt!52975)))

(assert (=> d!28557 (= (addStillContains!73 lt!52966 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) lt!52975) lt!53540)))

(declare-fun bs!4315 () Bool)

(assert (= bs!4315 d!28557))

(assert (=> bs!4315 m!114797))

(assert (=> bs!4315 m!114797))

(assert (=> bs!4315 m!114811))

(declare-fun m!116719 () Bool)

(assert (=> bs!4315 m!116719))

(declare-fun m!116721 () Bool)

(assert (=> bs!4315 m!116721))

(assert (=> b!103780 d!28557))

(declare-fun d!28559 () Bool)

(declare-fun e!68229 () Bool)

(assert (=> d!28559 e!68229))

(declare-fun res!52242 () Bool)

(assert (=> d!28559 (=> (not res!52242) (not e!68229))))

(declare-fun lt!53542 () ListLongMap!1569)

(assert (=> d!28559 (= res!52242 (contains!824 lt!53542 (_1!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(declare-fun lt!53543 () List!1611)

(assert (=> d!28559 (= lt!53542 (ListLongMap!1570 lt!53543))))

(declare-fun lt!53541 () Unit!3150)

(declare-fun lt!53544 () Unit!3150)

(assert (=> d!28559 (= lt!53541 lt!53544)))

(assert (=> d!28559 (= (getValueByKey!155 lt!53543 (_1!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28559 (= lt!53544 (lemmaContainsTupThenGetReturnValue!71 lt!53543 (_1!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28559 (= lt!53543 (insertStrictlySorted!74 (toList!800 lt!52966) (_1!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28559 (= (+!141 lt!52966 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!53542)))

(declare-fun b!104798 () Bool)

(declare-fun res!52241 () Bool)

(assert (=> b!104798 (=> (not res!52241) (not e!68229))))

(assert (=> b!104798 (= res!52241 (= (getValueByKey!155 (toList!800 lt!53542) (_1!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))))))))

(declare-fun b!104799 () Bool)

(assert (=> b!104799 (= e!68229 (contains!826 (toList!800 lt!53542) (tuple2!2401 lt!52976 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))))))

(assert (= (and d!28559 res!52242) b!104798))

(assert (= (and b!104798 res!52241) b!104799))

(declare-fun m!116723 () Bool)

(assert (=> d!28559 m!116723))

(declare-fun m!116725 () Bool)

(assert (=> d!28559 m!116725))

(declare-fun m!116727 () Bool)

(assert (=> d!28559 m!116727))

(declare-fun m!116729 () Bool)

(assert (=> d!28559 m!116729))

(declare-fun m!116731 () Bool)

(assert (=> b!104798 m!116731))

(declare-fun m!116733 () Bool)

(assert (=> b!104799 m!116733))

(assert (=> b!103780 d!28559))

(declare-fun d!28561 () Bool)

(assert (=> d!28561 (= (apply!97 (+!141 lt!52962 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!52974) (apply!97 lt!52962 lt!52974))))

(declare-fun lt!53545 () Unit!3150)

(assert (=> d!28561 (= lt!53545 (choose!645 lt!52962 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) lt!52974))))

(declare-fun e!68230 () Bool)

(assert (=> d!28561 e!68230))

(declare-fun res!52243 () Bool)

(assert (=> d!28561 (=> (not res!52243) (not e!68230))))

(assert (=> d!28561 (= res!52243 (contains!824 lt!52962 lt!52974))))

(assert (=> d!28561 (= (addApplyDifferent!73 lt!52962 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)) lt!52974) lt!53545)))

(declare-fun b!104800 () Bool)

(assert (=> b!104800 (= e!68230 (not (= lt!52974 lt!52971)))))

(assert (= (and d!28561 res!52243) b!104800))

(declare-fun m!116735 () Bool)

(assert (=> d!28561 m!116735))

(assert (=> d!28561 m!114801))

(assert (=> d!28561 m!114803))

(declare-fun m!116737 () Bool)

(assert (=> d!28561 m!116737))

(assert (=> d!28561 m!114813))

(assert (=> d!28561 m!114801))

(assert (=> b!103780 d!28561))

(declare-fun d!28563 () Bool)

(declare-fun e!68231 () Bool)

(assert (=> d!28563 e!68231))

(declare-fun res!52245 () Bool)

(assert (=> d!28563 (=> (not res!52245) (not e!68231))))

(declare-fun lt!53547 () ListLongMap!1569)

(assert (=> d!28563 (= res!52245 (contains!824 lt!53547 (_1!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(declare-fun lt!53548 () List!1611)

(assert (=> d!28563 (= lt!53547 (ListLongMap!1570 lt!53548))))

(declare-fun lt!53546 () Unit!3150)

(declare-fun lt!53549 () Unit!3150)

(assert (=> d!28563 (= lt!53546 lt!53549)))

(assert (=> d!28563 (= (getValueByKey!155 lt!53548 (_1!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28563 (= lt!53549 (lemmaContainsTupThenGetReturnValue!71 lt!53548 (_1!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28563 (= lt!53548 (insertStrictlySorted!74 (toList!800 lt!52962) (_1!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))))))

(assert (=> d!28563 (= (+!141 lt!52962 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!53547)))

(declare-fun b!104801 () Bool)

(declare-fun res!52244 () Bool)

(assert (=> b!104801 (=> (not res!52244) (not e!68231))))

(assert (=> b!104801 (= res!52244 (= (getValueByKey!155 (toList!800 lt!53547) (_1!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))))))))

(declare-fun b!104802 () Bool)

(assert (=> b!104802 (= e!68231 (contains!826 (toList!800 lt!53547) (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))))))

(assert (= (and d!28563 res!52245) b!104801))

(assert (= (and b!104801 res!52244) b!104802))

(declare-fun m!116739 () Bool)

(assert (=> d!28563 m!116739))

(declare-fun m!116741 () Bool)

(assert (=> d!28563 m!116741))

(declare-fun m!116743 () Bool)

(assert (=> d!28563 m!116743))

(declare-fun m!116745 () Bool)

(assert (=> d!28563 m!116745))

(declare-fun m!116747 () Bool)

(assert (=> b!104801 m!116747))

(declare-fun m!116749 () Bool)

(assert (=> b!104802 m!116749))

(assert (=> b!103780 d!28563))

(declare-fun d!28565 () Bool)

(assert (=> d!28565 (= (apply!97 (+!141 lt!52961 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!52977) (apply!97 lt!52961 lt!52977))))

(declare-fun lt!53550 () Unit!3150)

(assert (=> d!28565 (= lt!53550 (choose!645 lt!52961 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) lt!52977))))

(declare-fun e!68232 () Bool)

(assert (=> d!28565 e!68232))

(declare-fun res!52246 () Bool)

(assert (=> d!28565 (=> (not res!52246) (not e!68232))))

(assert (=> d!28565 (= res!52246 (contains!824 lt!52961 lt!52977))))

(assert (=> d!28565 (= (addApplyDifferent!73 lt!52961 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)) lt!52977) lt!53550)))

(declare-fun b!104803 () Bool)

(assert (=> b!104803 (= e!68232 (not (= lt!52977 lt!52968)))))

(assert (= (and d!28565 res!52246) b!104803))

(declare-fun m!116751 () Bool)

(assert (=> d!28565 m!116751))

(assert (=> d!28565 m!114791))

(assert (=> d!28565 m!114793))

(declare-fun m!116753 () Bool)

(assert (=> d!28565 m!116753))

(assert (=> d!28565 m!114799))

(assert (=> d!28565 m!114791))

(assert (=> b!103780 d!28565))

(declare-fun d!28567 () Bool)

(declare-fun e!68233 () Bool)

(assert (=> d!28567 e!68233))

(declare-fun res!52248 () Bool)

(assert (=> d!28567 (=> (not res!52248) (not e!68233))))

(declare-fun lt!53552 () ListLongMap!1569)

(assert (=> d!28567 (= res!52248 (contains!824 lt!53552 (_1!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(declare-fun lt!53553 () List!1611)

(assert (=> d!28567 (= lt!53552 (ListLongMap!1570 lt!53553))))

(declare-fun lt!53551 () Unit!3150)

(declare-fun lt!53554 () Unit!3150)

(assert (=> d!28567 (= lt!53551 lt!53554)))

(assert (=> d!28567 (= (getValueByKey!155 lt!53553 (_1!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28567 (= lt!53554 (lemmaContainsTupThenGetReturnValue!71 lt!53553 (_1!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28567 (= lt!53553 (insertStrictlySorted!74 (toList!800 lt!52969) (_1!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) (_2!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (=> d!28567 (= (+!141 lt!52969 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!53552)))

(declare-fun b!104804 () Bool)

(declare-fun res!52247 () Bool)

(assert (=> b!104804 (=> (not res!52247) (not e!68233))))

(assert (=> b!104804 (= res!52247 (= (getValueByKey!155 (toList!800 lt!53552) (_1!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (Some!160 (_2!1211 (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(declare-fun b!104805 () Bool)

(assert (=> b!104805 (= e!68233 (contains!826 (toList!800 lt!53552) (tuple2!2401 lt!52973 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))

(assert (= (and d!28567 res!52248) b!104804))

(assert (= (and b!104804 res!52247) b!104805))

(declare-fun m!116755 () Bool)

(assert (=> d!28567 m!116755))

(declare-fun m!116757 () Bool)

(assert (=> d!28567 m!116757))

(declare-fun m!116759 () Bool)

(assert (=> d!28567 m!116759))

(declare-fun m!116761 () Bool)

(assert (=> d!28567 m!116761))

(declare-fun m!116763 () Bool)

(assert (=> b!104804 m!116763))

(declare-fun m!116765 () Bool)

(assert (=> b!104805 m!116765))

(assert (=> b!103780 d!28567))

(declare-fun d!28569 () Bool)

(assert (=> d!28569 (= (apply!97 (+!141 lt!52961 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))) lt!52977) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52961 (tuple2!2401 lt!52968 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) lt!52977)))))

(declare-fun bs!4316 () Bool)

(assert (= bs!4316 d!28569))

(declare-fun m!116767 () Bool)

(assert (=> bs!4316 m!116767))

(assert (=> bs!4316 m!116767))

(declare-fun m!116769 () Bool)

(assert (=> bs!4316 m!116769))

(assert (=> b!103780 d!28569))

(declare-fun d!28571 () Bool)

(assert (=> d!28571 (= (apply!97 (+!141 lt!52962 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16)))) lt!52974) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52962 (tuple2!2401 lt!52971 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))))) lt!52974)))))

(declare-fun bs!4317 () Bool)

(assert (= bs!4317 d!28571))

(declare-fun m!116771 () Bool)

(assert (=> bs!4317 m!116771))

(assert (=> bs!4317 m!116771))

(declare-fun m!116773 () Bool)

(assert (=> bs!4317 m!116773))

(assert (=> b!103780 d!28571))

(declare-fun d!28573 () Bool)

(declare-fun res!52249 () Bool)

(declare-fun e!68234 () Bool)

(assert (=> d!28573 (=> res!52249 e!68234)))

(assert (=> d!28573 (= res!52249 (and ((_ is Cons!1607) (toList!800 lt!52789)) (= (_1!1211 (h!2203 (toList!800 lt!52789))) (_1!1211 lt!52540))))))

(assert (=> d!28573 (= (containsKey!159 (toList!800 lt!52789) (_1!1211 lt!52540)) e!68234)))

(declare-fun b!104806 () Bool)

(declare-fun e!68235 () Bool)

(assert (=> b!104806 (= e!68234 e!68235)))

(declare-fun res!52250 () Bool)

(assert (=> b!104806 (=> (not res!52250) (not e!68235))))

(assert (=> b!104806 (= res!52250 (and (or (not ((_ is Cons!1607) (toList!800 lt!52789))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52789))) (_1!1211 lt!52540))) ((_ is Cons!1607) (toList!800 lt!52789)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52789))) (_1!1211 lt!52540))))))

(declare-fun b!104807 () Bool)

(assert (=> b!104807 (= e!68235 (containsKey!159 (t!5673 (toList!800 lt!52789)) (_1!1211 lt!52540)))))

(assert (= (and d!28573 (not res!52249)) b!104806))

(assert (= (and b!104806 res!52250) b!104807))

(declare-fun m!116775 () Bool)

(assert (=> b!104807 m!116775))

(assert (=> d!27859 d!28573))

(assert (=> b!103656 d!28061))

(assert (=> b!103656 d!28063))

(declare-fun c!18175 () Bool)

(declare-fun d!28575 () Bool)

(assert (=> d!28575 (= c!18175 (and ((_ is Cons!1607) (toList!800 lt!53092)) (= (_1!1211 (h!2203 (toList!800 lt!53092))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!68236 () Option!161)

(assert (=> d!28575 (= (getValueByKey!155 (toList!800 lt!53092) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!68236)))

(declare-fun b!104809 () Bool)

(declare-fun e!68237 () Option!161)

(assert (=> b!104809 (= e!68236 e!68237)))

(declare-fun c!18176 () Bool)

(assert (=> b!104809 (= c!18176 (and ((_ is Cons!1607) (toList!800 lt!53092)) (not (= (_1!1211 (h!2203 (toList!800 lt!53092))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104810 () Bool)

(assert (=> b!104810 (= e!68237 (getValueByKey!155 (t!5673 (toList!800 lt!53092)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104811 () Bool)

(assert (=> b!104811 (= e!68237 None!159)))

(declare-fun b!104808 () Bool)

(assert (=> b!104808 (= e!68236 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53092)))))))

(assert (= (and d!28575 c!18175) b!104808))

(assert (= (and d!28575 (not c!18175)) b!104809))

(assert (= (and b!104809 c!18176) b!104810))

(assert (= (and b!104809 (not c!18176)) b!104811))

(declare-fun m!116777 () Bool)

(assert (=> b!104810 m!116777))

(assert (=> b!103942 d!28575))

(declare-fun d!28577 () Bool)

(declare-fun lt!53555 () Bool)

(assert (=> d!28577 (= lt!53555 (select (content!108 (toList!800 lt!53032)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68239 () Bool)

(assert (=> d!28577 (= lt!53555 e!68239)))

(declare-fun res!52251 () Bool)

(assert (=> d!28577 (=> (not res!52251) (not e!68239))))

(assert (=> d!28577 (= res!52251 ((_ is Cons!1607) (toList!800 lt!53032)))))

(assert (=> d!28577 (= (contains!826 (toList!800 lt!53032) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53555)))

(declare-fun b!104812 () Bool)

(declare-fun e!68238 () Bool)

(assert (=> b!104812 (= e!68239 e!68238)))

(declare-fun res!52252 () Bool)

(assert (=> b!104812 (=> res!52252 e!68238)))

(assert (=> b!104812 (= res!52252 (= (h!2203 (toList!800 lt!53032)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104813 () Bool)

(assert (=> b!104813 (= e!68238 (contains!826 (t!5673 (toList!800 lt!53032)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28577 res!52251) b!104812))

(assert (= (and b!104812 (not res!52252)) b!104813))

(declare-fun m!116779 () Bool)

(assert (=> d!28577 m!116779))

(declare-fun m!116781 () Bool)

(assert (=> d!28577 m!116781))

(declare-fun m!116783 () Bool)

(assert (=> b!104813 m!116783))

(assert (=> b!103877 d!28577))

(declare-fun d!28579 () Bool)

(assert (=> d!28579 (contains!824 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))) lt!53001)))

(declare-fun lt!53556 () Unit!3150)

(assert (=> d!28579 (= lt!53556 (choose!646 lt!52992 lt!53002 (zeroValue!2438 newMap!16) lt!53001))))

(assert (=> d!28579 (contains!824 lt!52992 lt!53001)))

(assert (=> d!28579 (= (addStillContains!73 lt!52992 lt!53002 (zeroValue!2438 newMap!16) lt!53001) lt!53556)))

(declare-fun bs!4318 () Bool)

(assert (= bs!4318 d!28579))

(assert (=> bs!4318 m!114861))

(assert (=> bs!4318 m!114861))

(assert (=> bs!4318 m!114875))

(declare-fun m!116785 () Bool)

(assert (=> bs!4318 m!116785))

(declare-fun m!116787 () Bool)

(assert (=> bs!4318 m!116787))

(assert (=> b!103814 d!28579))

(declare-fun d!28581 () Bool)

(declare-fun e!68240 () Bool)

(assert (=> d!28581 e!68240))

(declare-fun res!52254 () Bool)

(assert (=> d!28581 (=> (not res!52254) (not e!68240))))

(declare-fun lt!53558 () ListLongMap!1569)

(assert (=> d!28581 (= res!52254 (contains!824 lt!53558 (_1!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))))))

(declare-fun lt!53559 () List!1611)

(assert (=> d!28581 (= lt!53558 (ListLongMap!1570 lt!53559))))

(declare-fun lt!53557 () Unit!3150)

(declare-fun lt!53560 () Unit!3150)

(assert (=> d!28581 (= lt!53557 lt!53560)))

(assert (=> d!28581 (= (getValueByKey!155 lt!53559 (_1!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))))))

(assert (=> d!28581 (= lt!53560 (lemmaContainsTupThenGetReturnValue!71 lt!53559 (_1!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))))))

(assert (=> d!28581 (= lt!53559 (insertStrictlySorted!74 (toList!800 lt!52995) (_1!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))))))

(assert (=> d!28581 (= (+!141 lt!52995 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))) lt!53558)))

(declare-fun b!104814 () Bool)

(declare-fun res!52253 () Bool)

(assert (=> b!104814 (=> (not res!52253) (not e!68240))))

(assert (=> b!104814 (= res!52253 (= (getValueByKey!155 (toList!800 lt!53558) (_1!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))))))))

(declare-fun b!104815 () Bool)

(assert (=> b!104815 (= e!68240 (contains!826 (toList!800 lt!53558) (tuple2!2401 lt!52999 (minValue!2438 newMap!16))))))

(assert (= (and d!28581 res!52254) b!104814))

(assert (= (and b!104814 res!52253) b!104815))

(declare-fun m!116789 () Bool)

(assert (=> d!28581 m!116789))

(declare-fun m!116791 () Bool)

(assert (=> d!28581 m!116791))

(declare-fun m!116793 () Bool)

(assert (=> d!28581 m!116793))

(declare-fun m!116795 () Bool)

(assert (=> d!28581 m!116795))

(declare-fun m!116797 () Bool)

(assert (=> b!104814 m!116797))

(declare-fun m!116799 () Bool)

(assert (=> b!104815 m!116799))

(assert (=> b!103814 d!28581))

(declare-fun d!28583 () Bool)

(assert (=> d!28583 (= (apply!97 (+!141 lt!52987 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))) lt!53003) (apply!97 lt!52987 lt!53003))))

(declare-fun lt!53561 () Unit!3150)

(assert (=> d!28583 (= lt!53561 (choose!645 lt!52987 lt!52994 (minValue!2438 newMap!16) lt!53003))))

(declare-fun e!68241 () Bool)

(assert (=> d!28583 e!68241))

(declare-fun res!52255 () Bool)

(assert (=> d!28583 (=> (not res!52255) (not e!68241))))

(assert (=> d!28583 (= res!52255 (contains!824 lt!52987 lt!53003))))

(assert (=> d!28583 (= (addApplyDifferent!73 lt!52987 lt!52994 (minValue!2438 newMap!16) lt!53003) lt!53561)))

(declare-fun b!104816 () Bool)

(assert (=> b!104816 (= e!68241 (not (= lt!53003 lt!52994)))))

(assert (= (and d!28583 res!52255) b!104816))

(declare-fun m!116801 () Bool)

(assert (=> d!28583 m!116801))

(assert (=> d!28583 m!114855))

(assert (=> d!28583 m!114857))

(declare-fun m!116803 () Bool)

(assert (=> d!28583 m!116803))

(assert (=> d!28583 m!114863))

(assert (=> d!28583 m!114855))

(assert (=> b!103814 d!28583))

(declare-fun d!28585 () Bool)

(assert (=> d!28585 (= (apply!97 (+!141 lt!52988 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))) lt!53000) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52988 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))) lt!53000)))))

(declare-fun bs!4319 () Bool)

(assert (= bs!4319 d!28585))

(declare-fun m!116805 () Bool)

(assert (=> bs!4319 m!116805))

(assert (=> bs!4319 m!116805))

(declare-fun m!116807 () Bool)

(assert (=> bs!4319 m!116807))

(assert (=> b!103814 d!28585))

(declare-fun d!28587 () Bool)

(assert (=> d!28587 (= (apply!97 (+!141 lt!52995 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))) lt!53004) (apply!97 lt!52995 lt!53004))))

(declare-fun lt!53562 () Unit!3150)

(assert (=> d!28587 (= lt!53562 (choose!645 lt!52995 lt!52999 (minValue!2438 newMap!16) lt!53004))))

(declare-fun e!68242 () Bool)

(assert (=> d!28587 e!68242))

(declare-fun res!52256 () Bool)

(assert (=> d!28587 (=> (not res!52256) (not e!68242))))

(assert (=> d!28587 (= res!52256 (contains!824 lt!52995 lt!53004))))

(assert (=> d!28587 (= (addApplyDifferent!73 lt!52995 lt!52999 (minValue!2438 newMap!16) lt!53004) lt!53562)))

(declare-fun b!104817 () Bool)

(assert (=> b!104817 (= e!68242 (not (= lt!53004 lt!52999)))))

(assert (= (and d!28587 res!52256) b!104817))

(declare-fun m!116809 () Bool)

(assert (=> d!28587 m!116809))

(assert (=> d!28587 m!114869))

(assert (=> d!28587 m!114873))

(declare-fun m!116811 () Bool)

(assert (=> d!28587 m!116811))

(assert (=> d!28587 m!114859))

(assert (=> d!28587 m!114869))

(assert (=> b!103814 d!28587))

(declare-fun b!104818 () Bool)

(declare-fun e!68249 () Bool)

(declare-fun e!68248 () Bool)

(assert (=> b!104818 (= e!68249 e!68248)))

(declare-fun c!18177 () Bool)

(declare-fun e!68243 () Bool)

(assert (=> b!104818 (= c!18177 e!68243)))

(declare-fun res!52258 () Bool)

(assert (=> b!104818 (=> (not res!52258) (not e!68243))))

(assert (=> b!104818 (= res!52258 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104819 () Bool)

(assert (=> b!104819 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> b!104819 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))))))))

(declare-fun lt!53565 () ListLongMap!1569)

(declare-fun e!68244 () Bool)

(assert (=> b!104819 (= e!68244 (= (apply!97 lt!53565 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!104820 () Bool)

(declare-fun e!68246 () Bool)

(assert (=> b!104820 (= e!68246 (= lt!53565 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16))))))

(declare-fun b!104821 () Bool)

(declare-fun e!68245 () ListLongMap!1569)

(declare-fun e!68247 () ListLongMap!1569)

(assert (=> b!104821 (= e!68245 e!68247)))

(declare-fun c!18178 () Bool)

(assert (=> b!104821 (= c!18178 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!104822 () Bool)

(declare-fun call!11014 () ListLongMap!1569)

(assert (=> b!104822 (= e!68247 call!11014)))

(declare-fun bm!11011 () Bool)

(assert (=> bm!11011 (= call!11014 (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2561 newMap!16)))))

(declare-fun d!28589 () Bool)

(assert (=> d!28589 e!68249))

(declare-fun res!52259 () Bool)

(assert (=> d!28589 (=> (not res!52259) (not e!68249))))

(assert (=> d!28589 (= res!52259 (not (contains!824 lt!53565 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!28589 (= lt!53565 e!68245)))

(declare-fun c!18180 () Bool)

(assert (=> d!28589 (= c!18180 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28589 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28589 (= (getCurrentListMapNoExtraKeys!107 (_keys!4263 newMap!16) (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53565)))

(declare-fun b!104823 () Bool)

(assert (=> b!104823 (= e!68248 e!68244)))

(assert (=> b!104823 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun res!52257 () Bool)

(assert (=> b!104823 (= res!52257 (contains!824 lt!53565 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104823 (=> (not res!52257) (not e!68244))))

(declare-fun b!104824 () Bool)

(declare-fun lt!53566 () Unit!3150)

(declare-fun lt!53568 () Unit!3150)

(assert (=> b!104824 (= lt!53566 lt!53568)))

(declare-fun lt!53567 () (_ BitVec 64))

(declare-fun lt!53569 () V!3211)

(declare-fun lt!53564 () ListLongMap!1569)

(declare-fun lt!53563 () (_ BitVec 64))

(assert (=> b!104824 (not (contains!824 (+!141 lt!53564 (tuple2!2401 lt!53563 lt!53569)) lt!53567))))

(assert (=> b!104824 (= lt!53568 (addStillNotContains!45 lt!53564 lt!53563 lt!53569 lt!53567))))

(assert (=> b!104824 (= lt!53567 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!104824 (= lt!53569 (get!1323 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!104824 (= lt!53563 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!104824 (= lt!53564 call!11014)))

(assert (=> b!104824 (= e!68247 (+!141 call!11014 (tuple2!2401 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) (get!1323 (select (arr!2058 (ite c!17781 (_values!2544 newMap!16) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (index!3180 lt!52655) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!104825 () Bool)

(assert (=> b!104825 (= e!68248 e!68246)))

(declare-fun c!18179 () Bool)

(assert (=> b!104825 (= c!18179 (bvslt #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(declare-fun b!104826 () Bool)

(assert (=> b!104826 (= e!68246 (isEmpty!367 lt!53565))))

(declare-fun b!104827 () Bool)

(assert (=> b!104827 (= e!68245 (ListLongMap!1570 Nil!1608))))

(declare-fun b!104828 () Bool)

(assert (=> b!104828 (= e!68243 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!104828 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!104829 () Bool)

(declare-fun res!52260 () Bool)

(assert (=> b!104829 (=> (not res!52260) (not e!68249))))

(assert (=> b!104829 (= res!52260 (not (contains!824 lt!53565 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28589 c!18180) b!104827))

(assert (= (and d!28589 (not c!18180)) b!104821))

(assert (= (and b!104821 c!18178) b!104824))

(assert (= (and b!104821 (not c!18178)) b!104822))

(assert (= (or b!104824 b!104822) bm!11011))

(assert (= (and d!28589 res!52259) b!104829))

(assert (= (and b!104829 res!52260) b!104818))

(assert (= (and b!104818 res!52258) b!104828))

(assert (= (and b!104818 c!18177) b!104823))

(assert (= (and b!104818 (not c!18177)) b!104825))

(assert (= (and b!104823 res!52257) b!104819))

(assert (= (and b!104825 c!18179) b!104820))

(assert (= (and b!104825 (not c!18179)) b!104826))

(declare-fun b_lambda!4677 () Bool)

(assert (=> (not b_lambda!4677) (not b!104819)))

(assert (=> b!104819 t!5681))

(declare-fun b_and!6479 () Bool)

(assert (= b_and!6475 (and (=> t!5681 result!3435) b_and!6479)))

(assert (=> b!104819 t!5683))

(declare-fun b_and!6481 () Bool)

(assert (= b_and!6477 (and (=> t!5683 result!3437) b_and!6481)))

(declare-fun b_lambda!4679 () Bool)

(assert (=> (not b_lambda!4679) (not b!104824)))

(assert (=> b!104824 t!5681))

(declare-fun b_and!6483 () Bool)

(assert (= b_and!6479 (and (=> t!5681 result!3435) b_and!6483)))

(assert (=> b!104824 t!5683))

(declare-fun b_and!6485 () Bool)

(assert (= b_and!6481 (and (=> t!5683 result!3437) b_and!6485)))

(declare-fun m!116813 () Bool)

(assert (=> b!104824 m!116813))

(declare-fun m!116815 () Bool)

(assert (=> b!104824 m!116815))

(assert (=> b!104824 m!114847))

(assert (=> b!104824 m!114537))

(assert (=> b!104824 m!114849))

(declare-fun m!116817 () Bool)

(assert (=> b!104824 m!116817))

(assert (=> b!104824 m!114847))

(assert (=> b!104824 m!116817))

(declare-fun m!116819 () Bool)

(assert (=> b!104824 m!116819))

(assert (=> b!104824 m!114525))

(assert (=> b!104824 m!114537))

(declare-fun m!116821 () Bool)

(assert (=> b!104829 m!116821))

(assert (=> b!104828 m!114525))

(assert (=> b!104828 m!114525))

(assert (=> b!104828 m!114527))

(assert (=> b!104823 m!114525))

(assert (=> b!104823 m!114525))

(declare-fun m!116823 () Bool)

(assert (=> b!104823 m!116823))

(assert (=> b!104821 m!114525))

(assert (=> b!104821 m!114525))

(assert (=> b!104821 m!114527))

(declare-fun m!116825 () Bool)

(assert (=> b!104820 m!116825))

(assert (=> b!104819 m!114847))

(assert (=> b!104819 m!114537))

(assert (=> b!104819 m!114849))

(assert (=> b!104819 m!114525))

(declare-fun m!116827 () Bool)

(assert (=> b!104819 m!116827))

(assert (=> b!104819 m!114847))

(assert (=> b!104819 m!114525))

(assert (=> b!104819 m!114537))

(declare-fun m!116829 () Bool)

(assert (=> b!104826 m!116829))

(declare-fun m!116831 () Bool)

(assert (=> d!28589 m!116831))

(assert (=> d!28589 m!114575))

(assert (=> bm!11011 m!116825))

(assert (=> b!103814 d!28589))

(declare-fun d!28591 () Bool)

(declare-fun e!68251 () Bool)

(assert (=> d!28591 e!68251))

(declare-fun res!52261 () Bool)

(assert (=> d!28591 (=> res!52261 e!68251)))

(declare-fun lt!53570 () Bool)

(assert (=> d!28591 (= res!52261 (not lt!53570))))

(declare-fun lt!53571 () Bool)

(assert (=> d!28591 (= lt!53570 lt!53571)))

(declare-fun lt!53572 () Unit!3150)

(declare-fun e!68250 () Unit!3150)

(assert (=> d!28591 (= lt!53572 e!68250)))

(declare-fun c!18181 () Bool)

(assert (=> d!28591 (= c!18181 lt!53571)))

(assert (=> d!28591 (= lt!53571 (containsKey!159 (toList!800 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))) lt!53001))))

(assert (=> d!28591 (= (contains!824 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))) lt!53001) lt!53570)))

(declare-fun b!104830 () Bool)

(declare-fun lt!53573 () Unit!3150)

(assert (=> b!104830 (= e!68250 lt!53573)))

(assert (=> b!104830 (= lt!53573 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))) lt!53001))))

(assert (=> b!104830 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))) lt!53001))))

(declare-fun b!104831 () Bool)

(declare-fun Unit!3212 () Unit!3150)

(assert (=> b!104831 (= e!68250 Unit!3212)))

(declare-fun b!104832 () Bool)

(assert (=> b!104832 (= e!68251 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))) lt!53001)))))

(assert (= (and d!28591 c!18181) b!104830))

(assert (= (and d!28591 (not c!18181)) b!104831))

(assert (= (and d!28591 (not res!52261)) b!104832))

(declare-fun m!116833 () Bool)

(assert (=> d!28591 m!116833))

(declare-fun m!116835 () Bool)

(assert (=> b!104830 m!116835))

(declare-fun m!116837 () Bool)

(assert (=> b!104830 m!116837))

(assert (=> b!104830 m!116837))

(declare-fun m!116839 () Bool)

(assert (=> b!104830 m!116839))

(assert (=> b!104832 m!116837))

(assert (=> b!104832 m!116837))

(assert (=> b!104832 m!116839))

(assert (=> b!103814 d!28591))

(declare-fun d!28593 () Bool)

(declare-fun e!68252 () Bool)

(assert (=> d!28593 e!68252))

(declare-fun res!52263 () Bool)

(assert (=> d!28593 (=> (not res!52263) (not e!68252))))

(declare-fun lt!53575 () ListLongMap!1569)

(assert (=> d!28593 (= res!52263 (contains!824 lt!53575 (_1!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53576 () List!1611)

(assert (=> d!28593 (= lt!53575 (ListLongMap!1570 lt!53576))))

(declare-fun lt!53574 () Unit!3150)

(declare-fun lt!53577 () Unit!3150)

(assert (=> d!28593 (= lt!53574 lt!53577)))

(assert (=> d!28593 (= (getValueByKey!155 lt!53576 (_1!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28593 (= lt!53577 (lemmaContainsTupThenGetReturnValue!71 lt!53576 (_1!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28593 (= lt!53576 (insertStrictlySorted!74 (toList!800 lt!52992) (_1!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28593 (= (+!141 lt!52992 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))) lt!53575)))

(declare-fun b!104833 () Bool)

(declare-fun res!52262 () Bool)

(assert (=> b!104833 (=> (not res!52262) (not e!68252))))

(assert (=> b!104833 (= res!52262 (= (getValueByKey!155 (toList!800 lt!53575) (_1!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104834 () Bool)

(assert (=> b!104834 (= e!68252 (contains!826 (toList!800 lt!53575) (tuple2!2401 lt!53002 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28593 res!52263) b!104833))

(assert (= (and b!104833 res!52262) b!104834))

(declare-fun m!116841 () Bool)

(assert (=> d!28593 m!116841))

(declare-fun m!116843 () Bool)

(assert (=> d!28593 m!116843))

(declare-fun m!116845 () Bool)

(assert (=> d!28593 m!116845))

(declare-fun m!116847 () Bool)

(assert (=> d!28593 m!116847))

(declare-fun m!116849 () Bool)

(assert (=> b!104833 m!116849))

(declare-fun m!116851 () Bool)

(assert (=> b!104834 m!116851))

(assert (=> b!103814 d!28593))

(declare-fun d!28595 () Bool)

(assert (=> d!28595 (= (apply!97 lt!52988 lt!53000) (get!1326 (getValueByKey!155 (toList!800 lt!52988) lt!53000)))))

(declare-fun bs!4320 () Bool)

(assert (= bs!4320 d!28595))

(declare-fun m!116853 () Bool)

(assert (=> bs!4320 m!116853))

(assert (=> bs!4320 m!116853))

(declare-fun m!116855 () Bool)

(assert (=> bs!4320 m!116855))

(assert (=> b!103814 d!28595))

(declare-fun d!28597 () Bool)

(assert (=> d!28597 (= (apply!97 (+!141 lt!52988 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))) lt!53000) (apply!97 lt!52988 lt!53000))))

(declare-fun lt!53578 () Unit!3150)

(assert (=> d!28597 (= lt!53578 (choose!645 lt!52988 lt!52997 (zeroValue!2438 newMap!16) lt!53000))))

(declare-fun e!68253 () Bool)

(assert (=> d!28597 e!68253))

(declare-fun res!52264 () Bool)

(assert (=> d!28597 (=> (not res!52264) (not e!68253))))

(assert (=> d!28597 (= res!52264 (contains!824 lt!52988 lt!53000))))

(assert (=> d!28597 (= (addApplyDifferent!73 lt!52988 lt!52997 (zeroValue!2438 newMap!16) lt!53000) lt!53578)))

(declare-fun b!104835 () Bool)

(assert (=> b!104835 (= e!68253 (not (= lt!53000 lt!52997)))))

(assert (= (and d!28597 res!52264) b!104835))

(declare-fun m!116857 () Bool)

(assert (=> d!28597 m!116857))

(assert (=> d!28597 m!114865))

(assert (=> d!28597 m!114867))

(declare-fun m!116859 () Bool)

(assert (=> d!28597 m!116859))

(assert (=> d!28597 m!114877))

(assert (=> d!28597 m!114865))

(assert (=> b!103814 d!28597))

(declare-fun d!28599 () Bool)

(assert (=> d!28599 (= (apply!97 (+!141 lt!52987 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))) lt!53003) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52987 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))) lt!53003)))))

(declare-fun bs!4321 () Bool)

(assert (= bs!4321 d!28599))

(declare-fun m!116861 () Bool)

(assert (=> bs!4321 m!116861))

(assert (=> bs!4321 m!116861))

(declare-fun m!116863 () Bool)

(assert (=> bs!4321 m!116863))

(assert (=> b!103814 d!28599))

(declare-fun d!28601 () Bool)

(declare-fun e!68254 () Bool)

(assert (=> d!28601 e!68254))

(declare-fun res!52266 () Bool)

(assert (=> d!28601 (=> (not res!52266) (not e!68254))))

(declare-fun lt!53580 () ListLongMap!1569)

(assert (=> d!28601 (= res!52266 (contains!824 lt!53580 (_1!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))))))

(declare-fun lt!53581 () List!1611)

(assert (=> d!28601 (= lt!53580 (ListLongMap!1570 lt!53581))))

(declare-fun lt!53579 () Unit!3150)

(declare-fun lt!53582 () Unit!3150)

(assert (=> d!28601 (= lt!53579 lt!53582)))

(assert (=> d!28601 (= (getValueByKey!155 lt!53581 (_1!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))))))

(assert (=> d!28601 (= lt!53582 (lemmaContainsTupThenGetReturnValue!71 lt!53581 (_1!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))))))

(assert (=> d!28601 (= lt!53581 (insertStrictlySorted!74 (toList!800 lt!52987) (_1!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))))))

(assert (=> d!28601 (= (+!141 lt!52987 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))) lt!53580)))

(declare-fun b!104836 () Bool)

(declare-fun res!52265 () Bool)

(assert (=> b!104836 (=> (not res!52265) (not e!68254))))

(assert (=> b!104836 (= res!52265 (= (getValueByKey!155 (toList!800 lt!53580) (_1!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52994 (minValue!2438 newMap!16))))))))

(declare-fun b!104837 () Bool)

(assert (=> b!104837 (= e!68254 (contains!826 (toList!800 lt!53580) (tuple2!2401 lt!52994 (minValue!2438 newMap!16))))))

(assert (= (and d!28601 res!52266) b!104836))

(assert (= (and b!104836 res!52265) b!104837))

(declare-fun m!116865 () Bool)

(assert (=> d!28601 m!116865))

(declare-fun m!116867 () Bool)

(assert (=> d!28601 m!116867))

(declare-fun m!116869 () Bool)

(assert (=> d!28601 m!116869))

(declare-fun m!116871 () Bool)

(assert (=> d!28601 m!116871))

(declare-fun m!116873 () Bool)

(assert (=> b!104836 m!116873))

(declare-fun m!116875 () Bool)

(assert (=> b!104837 m!116875))

(assert (=> b!103814 d!28601))

(declare-fun d!28603 () Bool)

(assert (=> d!28603 (= (apply!97 lt!52987 lt!53003) (get!1326 (getValueByKey!155 (toList!800 lt!52987) lt!53003)))))

(declare-fun bs!4322 () Bool)

(assert (= bs!4322 d!28603))

(declare-fun m!116877 () Bool)

(assert (=> bs!4322 m!116877))

(assert (=> bs!4322 m!116877))

(declare-fun m!116879 () Bool)

(assert (=> bs!4322 m!116879))

(assert (=> b!103814 d!28603))

(declare-fun d!28605 () Bool)

(declare-fun e!68255 () Bool)

(assert (=> d!28605 e!68255))

(declare-fun res!52268 () Bool)

(assert (=> d!28605 (=> (not res!52268) (not e!68255))))

(declare-fun lt!53584 () ListLongMap!1569)

(assert (=> d!28605 (= res!52268 (contains!824 lt!53584 (_1!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))))))

(declare-fun lt!53585 () List!1611)

(assert (=> d!28605 (= lt!53584 (ListLongMap!1570 lt!53585))))

(declare-fun lt!53583 () Unit!3150)

(declare-fun lt!53586 () Unit!3150)

(assert (=> d!28605 (= lt!53583 lt!53586)))

(assert (=> d!28605 (= (getValueByKey!155 lt!53585 (_1!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28605 (= lt!53586 (lemmaContainsTupThenGetReturnValue!71 lt!53585 (_1!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28605 (= lt!53585 (insertStrictlySorted!74 (toList!800 lt!52988) (_1!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))) (_2!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))))))

(assert (=> d!28605 (= (+!141 lt!52988 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))) lt!53584)))

(declare-fun b!104838 () Bool)

(declare-fun res!52267 () Bool)

(assert (=> b!104838 (=> (not res!52267) (not e!68255))))

(assert (=> b!104838 (= res!52267 (= (getValueByKey!155 (toList!800 lt!53584) (_1!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16)))) (Some!160 (_2!1211 (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))))))))

(declare-fun b!104839 () Bool)

(assert (=> b!104839 (= e!68255 (contains!826 (toList!800 lt!53584) (tuple2!2401 lt!52997 (zeroValue!2438 newMap!16))))))

(assert (= (and d!28605 res!52268) b!104838))

(assert (= (and b!104838 res!52267) b!104839))

(declare-fun m!116881 () Bool)

(assert (=> d!28605 m!116881))

(declare-fun m!116883 () Bool)

(assert (=> d!28605 m!116883))

(declare-fun m!116885 () Bool)

(assert (=> d!28605 m!116885))

(declare-fun m!116887 () Bool)

(assert (=> d!28605 m!116887))

(declare-fun m!116889 () Bool)

(assert (=> b!104838 m!116889))

(declare-fun m!116891 () Bool)

(assert (=> b!104839 m!116891))

(assert (=> b!103814 d!28605))

(declare-fun d!28607 () Bool)

(assert (=> d!28607 (= (apply!97 (+!141 lt!52995 (tuple2!2401 lt!52999 (minValue!2438 newMap!16))) lt!53004) (get!1326 (getValueByKey!155 (toList!800 (+!141 lt!52995 (tuple2!2401 lt!52999 (minValue!2438 newMap!16)))) lt!53004)))))

(declare-fun bs!4323 () Bool)

(assert (= bs!4323 d!28607))

(declare-fun m!116893 () Bool)

(assert (=> bs!4323 m!116893))

(assert (=> bs!4323 m!116893))

(declare-fun m!116895 () Bool)

(assert (=> bs!4323 m!116895))

(assert (=> b!103814 d!28607))

(declare-fun d!28609 () Bool)

(assert (=> d!28609 (= (apply!97 lt!52995 lt!53004) (get!1326 (getValueByKey!155 (toList!800 lt!52995) lt!53004)))))

(declare-fun bs!4324 () Bool)

(assert (= bs!4324 d!28609))

(declare-fun m!116897 () Bool)

(assert (=> bs!4324 m!116897))

(assert (=> bs!4324 m!116897))

(declare-fun m!116899 () Bool)

(assert (=> bs!4324 m!116899))

(assert (=> b!103814 d!28609))

(declare-fun d!28611 () Bool)

(declare-fun e!68257 () Bool)

(assert (=> d!28611 e!68257))

(declare-fun res!52269 () Bool)

(assert (=> d!28611 (=> res!52269 e!68257)))

(declare-fun lt!53587 () Bool)

(assert (=> d!28611 (= res!52269 (not lt!53587))))

(declare-fun lt!53588 () Bool)

(assert (=> d!28611 (= lt!53587 lt!53588)))

(declare-fun lt!53589 () Unit!3150)

(declare-fun e!68256 () Unit!3150)

(assert (=> d!28611 (= lt!53589 e!68256)))

(declare-fun c!18182 () Bool)

(assert (=> d!28611 (= c!18182 lt!53588)))

(assert (=> d!28611 (= lt!53588 (containsKey!159 (toList!800 lt!52972) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28611 (= (contains!824 lt!52972 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53587)))

(declare-fun b!104840 () Bool)

(declare-fun lt!53590 () Unit!3150)

(assert (=> b!104840 (= e!68256 lt!53590)))

(assert (=> b!104840 (= lt!53590 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52972) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104840 (isDefined!108 (getValueByKey!155 (toList!800 lt!52972) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104841 () Bool)

(declare-fun Unit!3213 () Unit!3150)

(assert (=> b!104841 (= e!68256 Unit!3213)))

(declare-fun b!104842 () Bool)

(assert (=> b!104842 (= e!68257 (isDefined!108 (getValueByKey!155 (toList!800 lt!52972) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28611 c!18182) b!104840))

(assert (= (and d!28611 (not c!18182)) b!104841))

(assert (= (and d!28611 (not res!52269)) b!104842))

(declare-fun m!116901 () Bool)

(assert (=> d!28611 m!116901))

(declare-fun m!116903 () Bool)

(assert (=> b!104840 m!116903))

(declare-fun m!116905 () Bool)

(assert (=> b!104840 m!116905))

(assert (=> b!104840 m!116905))

(declare-fun m!116907 () Bool)

(assert (=> b!104840 m!116907))

(assert (=> b!104842 m!116905))

(assert (=> b!104842 m!116905))

(assert (=> b!104842 m!116907))

(assert (=> bm!10908 d!28611))

(assert (=> b!103697 d!28001))

(declare-fun d!28613 () Bool)

(declare-fun e!68259 () Bool)

(assert (=> d!28613 e!68259))

(declare-fun res!52270 () Bool)

(assert (=> d!28613 (=> res!52270 e!68259)))

(declare-fun lt!53591 () Bool)

(assert (=> d!28613 (= res!52270 (not lt!53591))))

(declare-fun lt!53592 () Bool)

(assert (=> d!28613 (= lt!53591 lt!53592)))

(declare-fun lt!53593 () Unit!3150)

(declare-fun e!68258 () Unit!3150)

(assert (=> d!28613 (= lt!53593 e!68258)))

(declare-fun c!18183 () Bool)

(assert (=> d!28613 (= c!18183 lt!53592)))

(assert (=> d!28613 (= lt!53592 (containsKey!159 (toList!800 lt!53104) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28613 (= (contains!824 lt!53104 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53591)))

(declare-fun b!104843 () Bool)

(declare-fun lt!53594 () Unit!3150)

(assert (=> b!104843 (= e!68258 lt!53594)))

(assert (=> b!104843 (= lt!53594 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53104) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104843 (isDefined!108 (getValueByKey!155 (toList!800 lt!53104) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104844 () Bool)

(declare-fun Unit!3214 () Unit!3150)

(assert (=> b!104844 (= e!68258 Unit!3214)))

(declare-fun b!104845 () Bool)

(assert (=> b!104845 (= e!68259 (isDefined!108 (getValueByKey!155 (toList!800 lt!53104) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28613 c!18183) b!104843))

(assert (= (and d!28613 (not c!18183)) b!104844))

(assert (= (and d!28613 (not res!52270)) b!104845))

(declare-fun m!116909 () Bool)

(assert (=> d!28613 m!116909))

(declare-fun m!116911 () Bool)

(assert (=> b!104843 m!116911))

(assert (=> b!104843 m!115171))

(assert (=> b!104843 m!115171))

(declare-fun m!116913 () Bool)

(assert (=> b!104843 m!116913))

(assert (=> b!104845 m!115171))

(assert (=> b!104845 m!115171))

(assert (=> b!104845 m!116913))

(assert (=> d!27963 d!28613))

(declare-fun d!28615 () Bool)

(declare-fun c!18184 () Bool)

(assert (=> d!28615 (= c!18184 (and ((_ is Cons!1607) lt!53105) (= (_1!1211 (h!2203 lt!53105)) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68260 () Option!161)

(assert (=> d!28615 (= (getValueByKey!155 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68260)))

(declare-fun b!104847 () Bool)

(declare-fun e!68261 () Option!161)

(assert (=> b!104847 (= e!68260 e!68261)))

(declare-fun c!18185 () Bool)

(assert (=> b!104847 (= c!18185 (and ((_ is Cons!1607) lt!53105) (not (= (_1!1211 (h!2203 lt!53105)) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104848 () Bool)

(assert (=> b!104848 (= e!68261 (getValueByKey!155 (t!5673 lt!53105) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104849 () Bool)

(assert (=> b!104849 (= e!68261 None!159)))

(declare-fun b!104846 () Bool)

(assert (=> b!104846 (= e!68260 (Some!160 (_2!1211 (h!2203 lt!53105))))))

(assert (= (and d!28615 c!18184) b!104846))

(assert (= (and d!28615 (not c!18184)) b!104847))

(assert (= (and b!104847 c!18185) b!104848))

(assert (= (and b!104847 (not c!18185)) b!104849))

(declare-fun m!116915 () Bool)

(assert (=> b!104848 m!116915))

(assert (=> d!27963 d!28615))

(declare-fun d!28617 () Bool)

(assert (=> d!28617 (= (getValueByKey!155 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53595 () Unit!3150)

(assert (=> d!28617 (= lt!53595 (choose!639 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68262 () Bool)

(assert (=> d!28617 e!68262))

(declare-fun res!52271 () Bool)

(assert (=> d!28617 (=> (not res!52271) (not e!68262))))

(assert (=> d!28617 (= res!52271 (isStrictlySorted!308 lt!53105))))

(assert (=> d!28617 (= (lemmaContainsTupThenGetReturnValue!71 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53595)))

(declare-fun b!104850 () Bool)

(declare-fun res!52272 () Bool)

(assert (=> b!104850 (=> (not res!52272) (not e!68262))))

(assert (=> b!104850 (= res!52272 (containsKey!159 lt!53105 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104851 () Bool)

(assert (=> b!104851 (= e!68262 (contains!826 lt!53105 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28617 res!52271) b!104850))

(assert (= (and b!104850 res!52272) b!104851))

(assert (=> d!28617 m!115165))

(declare-fun m!116917 () Bool)

(assert (=> d!28617 m!116917))

(declare-fun m!116919 () Bool)

(assert (=> d!28617 m!116919))

(declare-fun m!116921 () Bool)

(assert (=> b!104850 m!116921))

(declare-fun m!116923 () Bool)

(assert (=> b!104851 m!116923))

(assert (=> d!27963 d!28617))

(declare-fun b!104852 () Bool)

(declare-fun e!68267 () List!1611)

(declare-fun e!68263 () List!1611)

(assert (=> b!104852 (= e!68267 e!68263)))

(declare-fun c!18187 () Bool)

(assert (=> b!104852 (= c!18187 (and ((_ is Cons!1607) (toList!800 lt!52725)) (= (_1!1211 (h!2203 (toList!800 lt!52725))) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104853 () Bool)

(declare-fun call!11016 () List!1611)

(assert (=> b!104853 (= e!68263 call!11016)))

(declare-fun bm!11012 () Bool)

(declare-fun call!11017 () List!1611)

(assert (=> bm!11012 (= call!11016 call!11017)))

(declare-fun b!104855 () Bool)

(declare-fun c!18189 () Bool)

(declare-fun e!68264 () List!1611)

(assert (=> b!104855 (= e!68264 (ite c!18187 (t!5673 (toList!800 lt!52725)) (ite c!18189 (Cons!1607 (h!2203 (toList!800 lt!52725)) (t!5673 (toList!800 lt!52725))) Nil!1608)))))

(declare-fun bm!11013 () Bool)

(declare-fun call!11015 () List!1611)

(assert (=> bm!11013 (= call!11015 call!11016)))

(declare-fun b!104856 () Bool)

(assert (=> b!104856 (= e!68264 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52725)) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun bm!11014 () Bool)

(declare-fun c!18188 () Bool)

(assert (=> bm!11014 (= call!11017 ($colon$colon!80 e!68264 (ite c!18188 (h!2203 (toList!800 lt!52725)) (tuple2!2401 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18186 () Bool)

(assert (=> bm!11014 (= c!18186 c!18188)))

(declare-fun b!104857 () Bool)

(declare-fun e!68265 () List!1611)

(assert (=> b!104857 (= e!68265 call!11015)))

(declare-fun b!104858 () Bool)

(assert (=> b!104858 (= c!18189 (and ((_ is Cons!1607) (toList!800 lt!52725)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52725))) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104858 (= e!68263 e!68265)))

(declare-fun b!104859 () Bool)

(assert (=> b!104859 (= e!68267 call!11017)))

(declare-fun d!28619 () Bool)

(declare-fun e!68266 () Bool)

(assert (=> d!28619 e!68266))

(declare-fun res!52273 () Bool)

(assert (=> d!28619 (=> (not res!52273) (not e!68266))))

(declare-fun lt!53596 () List!1611)

(assert (=> d!28619 (= res!52273 (isStrictlySorted!308 lt!53596))))

(assert (=> d!28619 (= lt!53596 e!68267)))

(assert (=> d!28619 (= c!18188 (and ((_ is Cons!1607) (toList!800 lt!52725)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52725))) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28619 (isStrictlySorted!308 (toList!800 lt!52725))))

(assert (=> d!28619 (= (insertStrictlySorted!74 (toList!800 lt!52725) (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53596)))

(declare-fun b!104854 () Bool)

(assert (=> b!104854 (= e!68265 call!11015)))

(declare-fun b!104860 () Bool)

(assert (=> b!104860 (= e!68266 (contains!826 lt!53596 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104861 () Bool)

(declare-fun res!52274 () Bool)

(assert (=> b!104861 (=> (not res!52274) (not e!68266))))

(assert (=> b!104861 (= res!52274 (containsKey!159 lt!53596 (_1!1211 (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28619 c!18188) b!104859))

(assert (= (and d!28619 (not c!18188)) b!104852))

(assert (= (and b!104852 c!18187) b!104853))

(assert (= (and b!104852 (not c!18187)) b!104858))

(assert (= (and b!104858 c!18189) b!104854))

(assert (= (and b!104858 (not c!18189)) b!104857))

(assert (= (or b!104854 b!104857) bm!11013))

(assert (= (or b!104853 bm!11013) bm!11012))

(assert (= (or b!104859 bm!11012) bm!11014))

(assert (= (and bm!11014 c!18186) b!104856))

(assert (= (and bm!11014 (not c!18186)) b!104855))

(assert (= (and d!28619 res!52273) b!104861))

(assert (= (and b!104861 res!52274) b!104860))

(declare-fun m!116925 () Bool)

(assert (=> b!104860 m!116925))

(declare-fun m!116927 () Bool)

(assert (=> b!104856 m!116927))

(declare-fun m!116929 () Bool)

(assert (=> bm!11014 m!116929))

(declare-fun m!116931 () Bool)

(assert (=> d!28619 m!116931))

(declare-fun m!116933 () Bool)

(assert (=> d!28619 m!116933))

(declare-fun m!116935 () Bool)

(assert (=> b!104861 m!116935))

(assert (=> d!27963 d!28619))

(declare-fun d!28621 () Bool)

(assert (=> d!28621 (= (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!103773 d!28621))

(declare-fun lt!53597 () Bool)

(declare-fun d!28623 () Bool)

(assert (=> d!28623 (= lt!53597 (select (content!108 (toList!800 lt!53081)) (tuple2!2401 lt!52781 lt!52787)))))

(declare-fun e!68269 () Bool)

(assert (=> d!28623 (= lt!53597 e!68269)))

(declare-fun res!52275 () Bool)

(assert (=> d!28623 (=> (not res!52275) (not e!68269))))

(assert (=> d!28623 (= res!52275 ((_ is Cons!1607) (toList!800 lt!53081)))))

(assert (=> d!28623 (= (contains!826 (toList!800 lt!53081) (tuple2!2401 lt!52781 lt!52787)) lt!53597)))

(declare-fun b!104862 () Bool)

(declare-fun e!68268 () Bool)

(assert (=> b!104862 (= e!68269 e!68268)))

(declare-fun res!52276 () Bool)

(assert (=> b!104862 (=> res!52276 e!68268)))

(assert (=> b!104862 (= res!52276 (= (h!2203 (toList!800 lt!53081)) (tuple2!2401 lt!52781 lt!52787)))))

(declare-fun b!104863 () Bool)

(assert (=> b!104863 (= e!68268 (contains!826 (t!5673 (toList!800 lt!53081)) (tuple2!2401 lt!52781 lt!52787)))))

(assert (= (and d!28623 res!52275) b!104862))

(assert (= (and b!104862 (not res!52276)) b!104863))

(declare-fun m!116937 () Bool)

(assert (=> d!28623 m!116937))

(declare-fun m!116939 () Bool)

(assert (=> d!28623 m!116939))

(declare-fun m!116941 () Bool)

(assert (=> b!104863 m!116941))

(assert (=> b!103934 d!28623))

(assert (=> b!103891 d!28079))

(assert (=> b!103891 d!28081))

(assert (=> b!103997 d!28049))

(assert (=> b!103997 d!28051))

(declare-fun d!28625 () Bool)

(declare-fun res!52277 () Bool)

(declare-fun e!68270 () Bool)

(assert (=> d!28625 (=> res!52277 e!68270)))

(assert (=> d!28625 (= res!52277 (and ((_ is Cons!1607) (toList!800 lt!52783)) (= (_1!1211 (h!2203 (toList!800 lt!52783))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!28625 (= (containsKey!159 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!68270)))

(declare-fun b!104864 () Bool)

(declare-fun e!68271 () Bool)

(assert (=> b!104864 (= e!68270 e!68271)))

(declare-fun res!52278 () Bool)

(assert (=> b!104864 (=> (not res!52278) (not e!68271))))

(assert (=> b!104864 (= res!52278 (and (or (not ((_ is Cons!1607) (toList!800 lt!52783))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52783))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1607) (toList!800 lt!52783)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52783))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!104865 () Bool)

(assert (=> b!104865 (= e!68271 (containsKey!159 (t!5673 (toList!800 lt!52783)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!28625 (not res!52277)) b!104864))

(assert (= (and b!104864 res!52278) b!104865))

(assert (=> b!104865 m!114339))

(declare-fun m!116943 () Bool)

(assert (=> b!104865 m!116943))

(assert (=> d!27845 d!28625))

(declare-fun b!104866 () Bool)

(declare-fun e!68273 () Bool)

(declare-fun call!11018 () Bool)

(assert (=> b!104866 (= e!68273 call!11018)))

(declare-fun b!104867 () Bool)

(declare-fun e!68274 () Bool)

(assert (=> b!104867 (= e!68274 (contains!825 Nil!1607 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!104868 () Bool)

(assert (=> b!104868 (= e!68273 call!11018)))

(declare-fun b!104869 () Bool)

(declare-fun e!68275 () Bool)

(assert (=> b!104869 (= e!68275 e!68273)))

(declare-fun c!18190 () Bool)

(assert (=> b!104869 (= c!18190 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!28627 () Bool)

(declare-fun res!52281 () Bool)

(declare-fun e!68272 () Bool)

(assert (=> d!28627 (=> res!52281 e!68272)))

(assert (=> d!28627 (= res!52281 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28627 (= (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) #b00000000000000000000000000000000 Nil!1607) e!68272)))

(declare-fun bm!11015 () Bool)

(assert (=> bm!11015 (= call!11018 (arrayNoDuplicates!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!18190 (Cons!1606 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000) Nil!1607) Nil!1607)))))

(declare-fun b!104870 () Bool)

(assert (=> b!104870 (= e!68272 e!68275)))

(declare-fun res!52280 () Bool)

(assert (=> b!104870 (=> (not res!52280) (not e!68275))))

(assert (=> b!104870 (= res!52280 (not e!68274))))

(declare-fun res!52279 () Bool)

(assert (=> b!104870 (=> (not res!52279) (not e!68274))))

(assert (=> b!104870 (= res!52279 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!28627 (not res!52281)) b!104870))

(assert (= (and b!104870 res!52279) b!104867))

(assert (= (and b!104870 res!52280) b!104869))

(assert (= (and b!104869 c!18190) b!104866))

(assert (= (and b!104869 (not c!18190)) b!104868))

(assert (= (or b!104866 b!104868) bm!11015))

(assert (=> b!104867 m!115433))

(assert (=> b!104867 m!115433))

(declare-fun m!116945 () Bool)

(assert (=> b!104867 m!116945))

(assert (=> b!104869 m!115433))

(assert (=> b!104869 m!115433))

(assert (=> b!104869 m!115435))

(assert (=> bm!11015 m!115433))

(declare-fun m!116947 () Bool)

(assert (=> bm!11015 m!116947))

(assert (=> b!104870 m!115433))

(assert (=> b!104870 m!115433))

(assert (=> b!104870 m!115435))

(assert (=> b!103928 d!28627))

(declare-fun lt!53598 () Bool)

(declare-fun d!28629 () Bool)

(assert (=> d!28629 (= lt!53598 (select (content!108 (toList!800 lt!53132)) (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun e!68277 () Bool)

(assert (=> d!28629 (= lt!53598 e!68277)))

(declare-fun res!52282 () Bool)

(assert (=> d!28629 (=> (not res!52282) (not e!68277))))

(assert (=> d!28629 (= res!52282 ((_ is Cons!1607) (toList!800 lt!53132)))))

(assert (=> d!28629 (= (contains!826 (toList!800 lt!53132) (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) lt!53598)))

(declare-fun b!104871 () Bool)

(declare-fun e!68276 () Bool)

(assert (=> b!104871 (= e!68277 e!68276)))

(declare-fun res!52283 () Bool)

(assert (=> b!104871 (=> res!52283 e!68276)))

(assert (=> b!104871 (= res!52283 (= (h!2203 (toList!800 lt!53132)) (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(declare-fun b!104872 () Bool)

(assert (=> b!104872 (= e!68276 (contains!826 (t!5673 (toList!800 lt!53132)) (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (= (and d!28629 res!52282) b!104871))

(assert (= (and b!104871 (not res!52283)) b!104872))

(declare-fun m!116949 () Bool)

(assert (=> d!28629 m!116949))

(declare-fun m!116951 () Bool)

(assert (=> d!28629 m!116951))

(declare-fun m!116953 () Bool)

(assert (=> b!104872 m!116953))

(assert (=> b!103994 d!28629))

(declare-fun d!28631 () Bool)

(declare-fun lt!53599 () Bool)

(assert (=> d!28631 (= lt!53599 (select (content!108 (toList!800 lt!53040)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68279 () Bool)

(assert (=> d!28631 (= lt!53599 e!68279)))

(declare-fun res!52284 () Bool)

(assert (=> d!28631 (=> (not res!52284) (not e!68279))))

(assert (=> d!28631 (= res!52284 ((_ is Cons!1607) (toList!800 lt!53040)))))

(assert (=> d!28631 (= (contains!826 (toList!800 lt!53040) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53599)))

(declare-fun b!104873 () Bool)

(declare-fun e!68278 () Bool)

(assert (=> b!104873 (= e!68279 e!68278)))

(declare-fun res!52285 () Bool)

(assert (=> b!104873 (=> res!52285 e!68278)))

(assert (=> b!104873 (= res!52285 (= (h!2203 (toList!800 lt!53040)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104874 () Bool)

(assert (=> b!104874 (= e!68278 (contains!826 (t!5673 (toList!800 lt!53040)) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28631 res!52284) b!104873))

(assert (= (and b!104873 (not res!52285)) b!104874))

(declare-fun m!116955 () Bool)

(assert (=> d!28631 m!116955))

(declare-fun m!116957 () Bool)

(assert (=> d!28631 m!116957))

(declare-fun m!116959 () Bool)

(assert (=> b!104874 m!116959))

(assert (=> b!103881 d!28631))

(declare-fun d!28633 () Bool)

(declare-fun e!68281 () Bool)

(assert (=> d!28633 e!68281))

(declare-fun res!52286 () Bool)

(assert (=> d!28633 (=> res!52286 e!68281)))

(declare-fun lt!53600 () Bool)

(assert (=> d!28633 (= res!52286 (not lt!53600))))

(declare-fun lt!53601 () Bool)

(assert (=> d!28633 (= lt!53600 lt!53601)))

(declare-fun lt!53602 () Unit!3150)

(declare-fun e!68280 () Unit!3150)

(assert (=> d!28633 (= lt!53602 e!68280)))

(declare-fun c!18191 () Bool)

(assert (=> d!28633 (= c!18191 lt!53601)))

(assert (=> d!28633 (= lt!53601 (containsKey!159 (toList!800 lt!53123) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28633 (= (contains!824 lt!53123 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53600)))

(declare-fun b!104875 () Bool)

(declare-fun lt!53603 () Unit!3150)

(assert (=> b!104875 (= e!68280 lt!53603)))

(assert (=> b!104875 (= lt!53603 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53123) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104875 (isDefined!108 (getValueByKey!155 (toList!800 lt!53123) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104876 () Bool)

(declare-fun Unit!3215 () Unit!3150)

(assert (=> b!104876 (= e!68280 Unit!3215)))

(declare-fun b!104877 () Bool)

(assert (=> b!104877 (= e!68281 (isDefined!108 (getValueByKey!155 (toList!800 lt!53123) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28633 c!18191) b!104875))

(assert (= (and d!28633 (not c!18191)) b!104876))

(assert (= (and d!28633 (not res!52286)) b!104877))

(declare-fun m!116961 () Bool)

(assert (=> d!28633 m!116961))

(declare-fun m!116963 () Bool)

(assert (=> b!104875 m!116963))

(assert (=> b!104875 m!115223))

(assert (=> b!104875 m!115223))

(declare-fun m!116965 () Bool)

(assert (=> b!104875 m!116965))

(assert (=> b!104877 m!115223))

(assert (=> b!104877 m!115223))

(assert (=> b!104877 m!116965))

(assert (=> d!27977 d!28633))

(declare-fun c!18192 () Bool)

(declare-fun d!28635 () Bool)

(assert (=> d!28635 (= c!18192 (and ((_ is Cons!1607) lt!53124) (= (_1!1211 (h!2203 lt!53124)) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68282 () Option!161)

(assert (=> d!28635 (= (getValueByKey!155 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68282)))

(declare-fun b!104879 () Bool)

(declare-fun e!68283 () Option!161)

(assert (=> b!104879 (= e!68282 e!68283)))

(declare-fun c!18193 () Bool)

(assert (=> b!104879 (= c!18193 (and ((_ is Cons!1607) lt!53124) (not (= (_1!1211 (h!2203 lt!53124)) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104880 () Bool)

(assert (=> b!104880 (= e!68283 (getValueByKey!155 (t!5673 lt!53124) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104881 () Bool)

(assert (=> b!104881 (= e!68283 None!159)))

(declare-fun b!104878 () Bool)

(assert (=> b!104878 (= e!68282 (Some!160 (_2!1211 (h!2203 lt!53124))))))

(assert (= (and d!28635 c!18192) b!104878))

(assert (= (and d!28635 (not c!18192)) b!104879))

(assert (= (and b!104879 c!18193) b!104880))

(assert (= (and b!104879 (not c!18193)) b!104881))

(declare-fun m!116967 () Bool)

(assert (=> b!104880 m!116967))

(assert (=> d!27977 d!28635))

(declare-fun d!28637 () Bool)

(assert (=> d!28637 (= (getValueByKey!155 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53604 () Unit!3150)

(assert (=> d!28637 (= lt!53604 (choose!639 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68284 () Bool)

(assert (=> d!28637 e!68284))

(declare-fun res!52287 () Bool)

(assert (=> d!28637 (=> (not res!52287) (not e!68284))))

(assert (=> d!28637 (= res!52287 (isStrictlySorted!308 lt!53124))))

(assert (=> d!28637 (= (lemmaContainsTupThenGetReturnValue!71 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53604)))

(declare-fun b!104882 () Bool)

(declare-fun res!52288 () Bool)

(assert (=> b!104882 (=> (not res!52288) (not e!68284))))

(assert (=> b!104882 (= res!52288 (containsKey!159 lt!53124 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104883 () Bool)

(assert (=> b!104883 (= e!68284 (contains!826 lt!53124 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28637 res!52287) b!104882))

(assert (= (and b!104882 res!52288) b!104883))

(assert (=> d!28637 m!115217))

(declare-fun m!116969 () Bool)

(assert (=> d!28637 m!116969))

(declare-fun m!116971 () Bool)

(assert (=> d!28637 m!116971))

(declare-fun m!116973 () Bool)

(assert (=> b!104882 m!116973))

(declare-fun m!116975 () Bool)

(assert (=> b!104883 m!116975))

(assert (=> d!27977 d!28637))

(declare-fun b!104884 () Bool)

(declare-fun e!68289 () List!1611)

(declare-fun e!68285 () List!1611)

(assert (=> b!104884 (= e!68289 e!68285)))

(declare-fun c!18195 () Bool)

(assert (=> b!104884 (= c!18195 (and ((_ is Cons!1607) (toList!800 lt!52718)) (= (_1!1211 (h!2203 (toList!800 lt!52718))) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104885 () Bool)

(declare-fun call!11020 () List!1611)

(assert (=> b!104885 (= e!68285 call!11020)))

(declare-fun bm!11016 () Bool)

(declare-fun call!11021 () List!1611)

(assert (=> bm!11016 (= call!11020 call!11021)))

(declare-fun c!18197 () Bool)

(declare-fun e!68286 () List!1611)

(declare-fun b!104887 () Bool)

(assert (=> b!104887 (= e!68286 (ite c!18195 (t!5673 (toList!800 lt!52718)) (ite c!18197 (Cons!1607 (h!2203 (toList!800 lt!52718)) (t!5673 (toList!800 lt!52718))) Nil!1608)))))

(declare-fun bm!11017 () Bool)

(declare-fun call!11019 () List!1611)

(assert (=> bm!11017 (= call!11019 call!11020)))

(declare-fun b!104888 () Bool)

(assert (=> b!104888 (= e!68286 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52718)) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun c!18196 () Bool)

(declare-fun bm!11018 () Bool)

(assert (=> bm!11018 (= call!11021 ($colon$colon!80 e!68286 (ite c!18196 (h!2203 (toList!800 lt!52718)) (tuple2!2401 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18194 () Bool)

(assert (=> bm!11018 (= c!18194 c!18196)))

(declare-fun b!104889 () Bool)

(declare-fun e!68287 () List!1611)

(assert (=> b!104889 (= e!68287 call!11019)))

(declare-fun b!104890 () Bool)

(assert (=> b!104890 (= c!18197 (and ((_ is Cons!1607) (toList!800 lt!52718)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52718))) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104890 (= e!68285 e!68287)))

(declare-fun b!104891 () Bool)

(assert (=> b!104891 (= e!68289 call!11021)))

(declare-fun d!28639 () Bool)

(declare-fun e!68288 () Bool)

(assert (=> d!28639 e!68288))

(declare-fun res!52289 () Bool)

(assert (=> d!28639 (=> (not res!52289) (not e!68288))))

(declare-fun lt!53605 () List!1611)

(assert (=> d!28639 (= res!52289 (isStrictlySorted!308 lt!53605))))

(assert (=> d!28639 (= lt!53605 e!68289)))

(assert (=> d!28639 (= c!18196 (and ((_ is Cons!1607) (toList!800 lt!52718)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52718))) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28639 (isStrictlySorted!308 (toList!800 lt!52718))))

(assert (=> d!28639 (= (insertStrictlySorted!74 (toList!800 lt!52718) (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53605)))

(declare-fun b!104886 () Bool)

(assert (=> b!104886 (= e!68287 call!11019)))

(declare-fun b!104892 () Bool)

(assert (=> b!104892 (= e!68288 (contains!826 lt!53605 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104893 () Bool)

(declare-fun res!52290 () Bool)

(assert (=> b!104893 (=> (not res!52290) (not e!68288))))

(assert (=> b!104893 (= res!52290 (containsKey!159 lt!53605 (_1!1211 (tuple2!2401 lt!52727 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28639 c!18196) b!104891))

(assert (= (and d!28639 (not c!18196)) b!104884))

(assert (= (and b!104884 c!18195) b!104885))

(assert (= (and b!104884 (not c!18195)) b!104890))

(assert (= (and b!104890 c!18197) b!104886))

(assert (= (and b!104890 (not c!18197)) b!104889))

(assert (= (or b!104886 b!104889) bm!11017))

(assert (= (or b!104885 bm!11017) bm!11016))

(assert (= (or b!104891 bm!11016) bm!11018))

(assert (= (and bm!11018 c!18194) b!104888))

(assert (= (and bm!11018 (not c!18194)) b!104887))

(assert (= (and d!28639 res!52289) b!104893))

(assert (= (and b!104893 res!52290) b!104892))

(declare-fun m!116977 () Bool)

(assert (=> b!104892 m!116977))

(declare-fun m!116979 () Bool)

(assert (=> b!104888 m!116979))

(declare-fun m!116981 () Bool)

(assert (=> bm!11018 m!116981))

(declare-fun m!116983 () Bool)

(assert (=> d!28639 m!116983))

(declare-fun m!116985 () Bool)

(assert (=> d!28639 m!116985))

(declare-fun m!116987 () Bool)

(assert (=> b!104893 m!116987))

(assert (=> d!27977 d!28639))

(declare-fun d!28641 () Bool)

(declare-fun e!68291 () Bool)

(assert (=> d!28641 e!68291))

(declare-fun res!52291 () Bool)

(assert (=> d!28641 (=> res!52291 e!68291)))

(declare-fun lt!53606 () Bool)

(assert (=> d!28641 (= res!52291 (not lt!53606))))

(declare-fun lt!53607 () Bool)

(assert (=> d!28641 (= lt!53606 lt!53607)))

(declare-fun lt!53608 () Unit!3150)

(declare-fun e!68290 () Unit!3150)

(assert (=> d!28641 (= lt!53608 e!68290)))

(declare-fun c!18198 () Bool)

(assert (=> d!28641 (= c!18198 lt!53607)))

(assert (=> d!28641 (= lt!53607 (containsKey!159 (toList!800 lt!52998) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28641 (= (contains!824 lt!52998 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53606)))

(declare-fun b!104894 () Bool)

(declare-fun lt!53609 () Unit!3150)

(assert (=> b!104894 (= e!68290 lt!53609)))

(assert (=> b!104894 (= lt!53609 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52998) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104894 (isDefined!108 (getValueByKey!155 (toList!800 lt!52998) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104895 () Bool)

(declare-fun Unit!3216 () Unit!3150)

(assert (=> b!104895 (= e!68290 Unit!3216)))

(declare-fun b!104896 () Bool)

(assert (=> b!104896 (= e!68291 (isDefined!108 (getValueByKey!155 (toList!800 lt!52998) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28641 c!18198) b!104894))

(assert (= (and d!28641 (not c!18198)) b!104895))

(assert (= (and d!28641 (not res!52291)) b!104896))

(declare-fun m!116989 () Bool)

(assert (=> d!28641 m!116989))

(declare-fun m!116991 () Bool)

(assert (=> b!104894 m!116991))

(assert (=> b!104894 m!116279))

(assert (=> b!104894 m!116279))

(declare-fun m!116993 () Bool)

(assert (=> b!104894 m!116993))

(assert (=> b!104896 m!116279))

(assert (=> b!104896 m!116279))

(assert (=> b!104896 m!116993))

(assert (=> bm!10915 d!28641))

(declare-fun d!28643 () Bool)

(declare-fun c!18199 () Bool)

(assert (=> d!28643 (= c!18199 (and ((_ is Cons!1607) (toList!800 lt!53118)) (= (_1!1211 (h!2203 (toList!800 lt!53118))) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68292 () Option!161)

(assert (=> d!28643 (= (getValueByKey!155 (toList!800 lt!53118) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68292)))

(declare-fun b!104898 () Bool)

(declare-fun e!68293 () Option!161)

(assert (=> b!104898 (= e!68292 e!68293)))

(declare-fun c!18200 () Bool)

(assert (=> b!104898 (= c!18200 (and ((_ is Cons!1607) (toList!800 lt!53118)) (not (= (_1!1211 (h!2203 (toList!800 lt!53118))) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104899 () Bool)

(assert (=> b!104899 (= e!68293 (getValueByKey!155 (t!5673 (toList!800 lt!53118)) (_1!1211 (tuple2!2401 lt!52724 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104900 () Bool)

(assert (=> b!104900 (= e!68293 None!159)))

(declare-fun b!104897 () Bool)

(assert (=> b!104897 (= e!68292 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53118)))))))

(assert (= (and d!28643 c!18199) b!104897))

(assert (= (and d!28643 (not c!18199)) b!104898))

(assert (= (and b!104898 c!18200) b!104899))

(assert (= (and b!104898 (not c!18200)) b!104900))

(declare-fun m!116995 () Bool)

(assert (=> b!104899 m!116995))

(assert (=> b!103984 d!28643))

(assert (=> bm!10903 d!28553))

(declare-fun d!28645 () Bool)

(declare-fun e!68295 () Bool)

(assert (=> d!28645 e!68295))

(declare-fun res!52292 () Bool)

(assert (=> d!28645 (=> res!52292 e!68295)))

(declare-fun lt!53610 () Bool)

(assert (=> d!28645 (= res!52292 (not lt!53610))))

(declare-fun lt!53611 () Bool)

(assert (=> d!28645 (= lt!53610 lt!53611)))

(declare-fun lt!53612 () Unit!3150)

(declare-fun e!68294 () Unit!3150)

(assert (=> d!28645 (= lt!53612 e!68294)))

(declare-fun c!18201 () Bool)

(assert (=> d!28645 (= c!18201 lt!53611)))

(assert (=> d!28645 (= lt!53611 (containsKey!159 (toList!800 lt!53092) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!28645 (= (contains!824 lt!53092 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53610)))

(declare-fun b!104901 () Bool)

(declare-fun lt!53613 () Unit!3150)

(assert (=> b!104901 (= e!68294 lt!53613)))

(assert (=> b!104901 (= lt!53613 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53092) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!104901 (isDefined!108 (getValueByKey!155 (toList!800 lt!53092) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104902 () Bool)

(declare-fun Unit!3217 () Unit!3150)

(assert (=> b!104902 (= e!68294 Unit!3217)))

(declare-fun b!104903 () Bool)

(assert (=> b!104903 (= e!68295 (isDefined!108 (getValueByKey!155 (toList!800 lt!53092) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28645 c!18201) b!104901))

(assert (= (and d!28645 (not c!18201)) b!104902))

(assert (= (and d!28645 (not res!52292)) b!104903))

(declare-fun m!116997 () Bool)

(assert (=> d!28645 m!116997))

(declare-fun m!116999 () Bool)

(assert (=> b!104901 m!116999))

(assert (=> b!104901 m!115123))

(assert (=> b!104901 m!115123))

(declare-fun m!117001 () Bool)

(assert (=> b!104901 m!117001))

(assert (=> b!104903 m!115123))

(assert (=> b!104903 m!115123))

(assert (=> b!104903 m!117001))

(assert (=> d!27949 d!28645))

(declare-fun c!18202 () Bool)

(declare-fun d!28647 () Bool)

(assert (=> d!28647 (= c!18202 (and ((_ is Cons!1607) lt!53093) (= (_1!1211 (h!2203 lt!53093)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!68296 () Option!161)

(assert (=> d!28647 (= (getValueByKey!155 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!68296)))

(declare-fun b!104905 () Bool)

(declare-fun e!68297 () Option!161)

(assert (=> b!104905 (= e!68296 e!68297)))

(declare-fun c!18203 () Bool)

(assert (=> b!104905 (= c!18203 (and ((_ is Cons!1607) lt!53093) (not (= (_1!1211 (h!2203 lt!53093)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!104906 () Bool)

(assert (=> b!104906 (= e!68297 (getValueByKey!155 (t!5673 lt!53093) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104907 () Bool)

(assert (=> b!104907 (= e!68297 None!159)))

(declare-fun b!104904 () Bool)

(assert (=> b!104904 (= e!68296 (Some!160 (_2!1211 (h!2203 lt!53093))))))

(assert (= (and d!28647 c!18202) b!104904))

(assert (= (and d!28647 (not c!18202)) b!104905))

(assert (= (and b!104905 c!18203) b!104906))

(assert (= (and b!104905 (not c!18203)) b!104907))

(declare-fun m!117003 () Bool)

(assert (=> b!104906 m!117003))

(assert (=> d!27949 d!28647))

(declare-fun d!28649 () Bool)

(assert (=> d!28649 (= (getValueByKey!155 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!160 (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!53614 () Unit!3150)

(assert (=> d!28649 (= lt!53614 (choose!639 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!68298 () Bool)

(assert (=> d!28649 e!68298))

(declare-fun res!52293 () Bool)

(assert (=> d!28649 (=> (not res!52293) (not e!68298))))

(assert (=> d!28649 (= res!52293 (isStrictlySorted!308 lt!53093))))

(assert (=> d!28649 (= (lemmaContainsTupThenGetReturnValue!71 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53614)))

(declare-fun b!104908 () Bool)

(declare-fun res!52294 () Bool)

(assert (=> b!104908 (=> (not res!52294) (not e!68298))))

(assert (=> b!104908 (= res!52294 (containsKey!159 lt!53093 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!104909 () Bool)

(assert (=> b!104909 (= e!68298 (contains!826 lt!53093 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!28649 res!52293) b!104908))

(assert (= (and b!104908 res!52294) b!104909))

(assert (=> d!28649 m!115117))

(declare-fun m!117005 () Bool)

(assert (=> d!28649 m!117005))

(declare-fun m!117007 () Bool)

(assert (=> d!28649 m!117007))

(declare-fun m!117009 () Bool)

(assert (=> b!104908 m!117009))

(declare-fun m!117011 () Bool)

(assert (=> b!104909 m!117011))

(assert (=> d!27949 d!28649))

(declare-fun b!104910 () Bool)

(declare-fun e!68303 () List!1611)

(declare-fun e!68299 () List!1611)

(assert (=> b!104910 (= e!68303 e!68299)))

(declare-fun c!18205 () Bool)

(assert (=> b!104910 (= c!18205 (and ((_ is Cons!1607) (toList!800 call!10866)) (= (_1!1211 (h!2203 (toList!800 call!10866))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104911 () Bool)

(declare-fun call!11023 () List!1611)

(assert (=> b!104911 (= e!68299 call!11023)))

(declare-fun bm!11019 () Bool)

(declare-fun call!11024 () List!1611)

(assert (=> bm!11019 (= call!11023 call!11024)))

(declare-fun c!18207 () Bool)

(declare-fun b!104913 () Bool)

(declare-fun e!68300 () List!1611)

(assert (=> b!104913 (= e!68300 (ite c!18205 (t!5673 (toList!800 call!10866)) (ite c!18207 (Cons!1607 (h!2203 (toList!800 call!10866)) (t!5673 (toList!800 call!10866))) Nil!1608)))))

(declare-fun bm!11020 () Bool)

(declare-fun call!11022 () List!1611)

(assert (=> bm!11020 (= call!11022 call!11023)))

(declare-fun b!104914 () Bool)

(assert (=> b!104914 (= e!68300 (insertStrictlySorted!74 (t!5673 (toList!800 call!10866)) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!11021 () Bool)

(declare-fun c!18206 () Bool)

(assert (=> bm!11021 (= call!11024 ($colon$colon!80 e!68300 (ite c!18206 (h!2203 (toList!800 call!10866)) (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!18204 () Bool)

(assert (=> bm!11021 (= c!18204 c!18206)))

(declare-fun b!104915 () Bool)

(declare-fun e!68301 () List!1611)

(assert (=> b!104915 (= e!68301 call!11022)))

(declare-fun b!104916 () Bool)

(assert (=> b!104916 (= c!18207 (and ((_ is Cons!1607) (toList!800 call!10866)) (bvsgt (_1!1211 (h!2203 (toList!800 call!10866))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!104916 (= e!68299 e!68301)))

(declare-fun b!104917 () Bool)

(assert (=> b!104917 (= e!68303 call!11024)))

(declare-fun d!28651 () Bool)

(declare-fun e!68302 () Bool)

(assert (=> d!28651 e!68302))

(declare-fun res!52295 () Bool)

(assert (=> d!28651 (=> (not res!52295) (not e!68302))))

(declare-fun lt!53615 () List!1611)

(assert (=> d!28651 (= res!52295 (isStrictlySorted!308 lt!53615))))

(assert (=> d!28651 (= lt!53615 e!68303)))

(assert (=> d!28651 (= c!18206 (and ((_ is Cons!1607) (toList!800 call!10866)) (bvslt (_1!1211 (h!2203 (toList!800 call!10866))) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!28651 (isStrictlySorted!308 (toList!800 call!10866))))

(assert (=> d!28651 (= (insertStrictlySorted!74 (toList!800 call!10866) (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!53615)))

(declare-fun b!104912 () Bool)

(assert (=> b!104912 (= e!68301 call!11022)))

(declare-fun b!104918 () Bool)

(assert (=> b!104918 (= e!68302 (contains!826 lt!53615 (tuple2!2401 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!104919 () Bool)

(declare-fun res!52296 () Bool)

(assert (=> b!104919 (=> (not res!52296) (not e!68302))))

(assert (=> b!104919 (= res!52296 (containsKey!159 lt!53615 (_1!1211 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1323 (select (arr!2058 (_values!2544 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!383 (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!28651 c!18206) b!104917))

(assert (= (and d!28651 (not c!18206)) b!104910))

(assert (= (and b!104910 c!18205) b!104911))

(assert (= (and b!104910 (not c!18205)) b!104916))

(assert (= (and b!104916 c!18207) b!104912))

(assert (= (and b!104916 (not c!18207)) b!104915))

(assert (= (or b!104912 b!104915) bm!11020))

(assert (= (or b!104911 bm!11020) bm!11019))

(assert (= (or b!104917 bm!11019) bm!11021))

(assert (= (and bm!11021 c!18204) b!104914))

(assert (= (and bm!11021 (not c!18204)) b!104913))

(assert (= (and d!28651 res!52295) b!104919))

(assert (= (and b!104919 res!52296) b!104918))

(declare-fun m!117013 () Bool)

(assert (=> b!104918 m!117013))

(declare-fun m!117015 () Bool)

(assert (=> b!104914 m!117015))

(declare-fun m!117017 () Bool)

(assert (=> bm!11021 m!117017))

(declare-fun m!117019 () Bool)

(assert (=> d!28651 m!117019))

(declare-fun m!117021 () Bool)

(assert (=> d!28651 m!117021))

(declare-fun m!117023 () Bool)

(assert (=> b!104919 m!117023))

(assert (=> d!27949 d!28651))

(declare-fun b!104920 () Bool)

(declare-fun e!68308 () List!1611)

(declare-fun e!68304 () List!1611)

(assert (=> b!104920 (= e!68308 e!68304)))

(declare-fun c!18209 () Bool)

(assert (=> b!104920 (= c!18209 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52539))) (= (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539)))) (_1!1211 lt!52540))))))

(declare-fun b!104921 () Bool)

(declare-fun call!11026 () List!1611)

(assert (=> b!104921 (= e!68304 call!11026)))

(declare-fun bm!11022 () Bool)

(declare-fun call!11027 () List!1611)

(assert (=> bm!11022 (= call!11026 call!11027)))

(declare-fun b!104923 () Bool)

(declare-fun c!18211 () Bool)

(declare-fun e!68305 () List!1611)

(assert (=> b!104923 (= e!68305 (ite c!18209 (t!5673 (t!5673 (toList!800 lt!52539))) (ite c!18211 (Cons!1607 (h!2203 (t!5673 (toList!800 lt!52539))) (t!5673 (t!5673 (toList!800 lt!52539)))) Nil!1608)))))

(declare-fun bm!11023 () Bool)

(declare-fun call!11025 () List!1611)

(assert (=> bm!11023 (= call!11025 call!11026)))

(declare-fun b!104924 () Bool)

(assert (=> b!104924 (= e!68305 (insertStrictlySorted!74 (t!5673 (t!5673 (toList!800 lt!52539))) (_1!1211 lt!52540) (_2!1211 lt!52540)))))

(declare-fun c!18210 () Bool)

(declare-fun bm!11024 () Bool)

(assert (=> bm!11024 (= call!11027 ($colon$colon!80 e!68305 (ite c!18210 (h!2203 (t!5673 (toList!800 lt!52539))) (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540)))))))

(declare-fun c!18208 () Bool)

(assert (=> bm!11024 (= c!18208 c!18210)))

(declare-fun b!104925 () Bool)

(declare-fun e!68306 () List!1611)

(assert (=> b!104925 (= e!68306 call!11025)))

(declare-fun b!104926 () Bool)

(assert (=> b!104926 (= c!18211 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52539))) (bvsgt (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539)))) (_1!1211 lt!52540))))))

(assert (=> b!104926 (= e!68304 e!68306)))

(declare-fun b!104927 () Bool)

(assert (=> b!104927 (= e!68308 call!11027)))

(declare-fun d!28653 () Bool)

(declare-fun e!68307 () Bool)

(assert (=> d!28653 e!68307))

(declare-fun res!52297 () Bool)

(assert (=> d!28653 (=> (not res!52297) (not e!68307))))

(declare-fun lt!53616 () List!1611)

(assert (=> d!28653 (= res!52297 (isStrictlySorted!308 lt!53616))))

(assert (=> d!28653 (= lt!53616 e!68308)))

(assert (=> d!28653 (= c!18210 (and ((_ is Cons!1607) (t!5673 (toList!800 lt!52539))) (bvslt (_1!1211 (h!2203 (t!5673 (toList!800 lt!52539)))) (_1!1211 lt!52540))))))

(assert (=> d!28653 (isStrictlySorted!308 (t!5673 (toList!800 lt!52539)))))

(assert (=> d!28653 (= (insertStrictlySorted!74 (t!5673 (toList!800 lt!52539)) (_1!1211 lt!52540) (_2!1211 lt!52540)) lt!53616)))

(declare-fun b!104922 () Bool)

(assert (=> b!104922 (= e!68306 call!11025)))

(declare-fun b!104928 () Bool)

(assert (=> b!104928 (= e!68307 (contains!826 lt!53616 (tuple2!2401 (_1!1211 lt!52540) (_2!1211 lt!52540))))))

(declare-fun b!104929 () Bool)

(declare-fun res!52298 () Bool)

(assert (=> b!104929 (=> (not res!52298) (not e!68307))))

(assert (=> b!104929 (= res!52298 (containsKey!159 lt!53616 (_1!1211 lt!52540)))))

(assert (= (and d!28653 c!18210) b!104927))

(assert (= (and d!28653 (not c!18210)) b!104920))

(assert (= (and b!104920 c!18209) b!104921))

(assert (= (and b!104920 (not c!18209)) b!104926))

(assert (= (and b!104926 c!18211) b!104922))

(assert (= (and b!104926 (not c!18211)) b!104925))

(assert (= (or b!104922 b!104925) bm!11023))

(assert (= (or b!104921 bm!11023) bm!11022))

(assert (= (or b!104927 bm!11022) bm!11024))

(assert (= (and bm!11024 c!18208) b!104924))

(assert (= (and bm!11024 (not c!18208)) b!104923))

(assert (= (and d!28653 res!52297) b!104929))

(assert (= (and b!104929 res!52298) b!104928))

(declare-fun m!117025 () Bool)

(assert (=> b!104928 m!117025))

(declare-fun m!117027 () Bool)

(assert (=> b!104924 m!117027))

(declare-fun m!117029 () Bool)

(assert (=> bm!11024 m!117029))

(declare-fun m!117031 () Bool)

(assert (=> d!28653 m!117031))

(assert (=> d!28653 m!115641))

(declare-fun m!117033 () Bool)

(assert (=> b!104929 m!117033))

(assert (=> b!103870 d!28653))

(assert (=> bm!10910 d!28589))

(declare-fun d!28655 () Bool)

(assert (=> d!28655 (= (apply!97 lt!52972 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1326 (getValueByKey!155 (toList!800 lt!52972) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!4325 () Bool)

(assert (= bs!4325 d!28655))

(assert (=> bs!4325 m!116905))

(assert (=> bs!4325 m!116905))

(declare-fun m!117035 () Bool)

(assert (=> bs!4325 m!117035))

(assert (=> b!103788 d!28655))

(assert (=> b!103766 d!28621))

(declare-fun d!28657 () Bool)

(assert (=> d!28657 (= (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!369 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!4326 () Bool)

(assert (= bs!4326 d!28657))

(assert (=> bs!4326 m!115013))

(declare-fun m!117037 () Bool)

(assert (=> bs!4326 m!117037))

(assert (=> b!103888 d!28657))

(assert (=> b!103888 d!28363))

(declare-fun d!28659 () Bool)

(declare-fun lt!53617 () Bool)

(assert (=> d!28659 (= lt!53617 (select (content!108 (toList!800 lt!53104)) (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun e!68310 () Bool)

(assert (=> d!28659 (= lt!53617 e!68310)))

(declare-fun res!52299 () Bool)

(assert (=> d!28659 (=> (not res!52299) (not e!68310))))

(assert (=> d!28659 (= res!52299 ((_ is Cons!1607) (toList!800 lt!53104)))))

(assert (=> d!28659 (= (contains!826 (toList!800 lt!53104) (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) lt!53617)))

(declare-fun b!104930 () Bool)

(declare-fun e!68309 () Bool)

(assert (=> b!104930 (= e!68310 e!68309)))

(declare-fun res!52300 () Bool)

(assert (=> b!104930 (=> res!52300 e!68309)))

(assert (=> b!104930 (= res!52300 (= (h!2203 (toList!800 lt!53104)) (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(declare-fun b!104931 () Bool)

(assert (=> b!104931 (= e!68309 (contains!826 (t!5673 (toList!800 lt!53104)) (tuple2!2401 lt!52729 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))

(assert (= (and d!28659 res!52299) b!104930))

(assert (= (and b!104930 (not res!52300)) b!104931))

(declare-fun m!117039 () Bool)

(assert (=> d!28659 m!117039))

(declare-fun m!117041 () Bool)

(assert (=> d!28659 m!117041))

(declare-fun m!117043 () Bool)

(assert (=> b!104931 m!117043))

(assert (=> b!103976 d!28659))

(declare-fun d!28661 () Bool)

(assert (=> d!28661 (isDefined!108 (getValueByKey!155 (toList!800 lt!52789) (_1!1211 lt!52540)))))

(declare-fun lt!53618 () Unit!3150)

(assert (=> d!28661 (= lt!53618 (choose!649 (toList!800 lt!52789) (_1!1211 lt!52540)))))

(declare-fun e!68311 () Bool)

(assert (=> d!28661 e!68311))

(declare-fun res!52301 () Bool)

(assert (=> d!28661 (=> (not res!52301) (not e!68311))))

(assert (=> d!28661 (= res!52301 (isStrictlySorted!308 (toList!800 lt!52789)))))

(assert (=> d!28661 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52789) (_1!1211 lt!52540)) lt!53618)))

(declare-fun b!104932 () Bool)

(assert (=> b!104932 (= e!68311 (containsKey!159 (toList!800 lt!52789) (_1!1211 lt!52540)))))

(assert (= (and d!28661 res!52301) b!104932))

(assert (=> d!28661 m!114469))

(assert (=> d!28661 m!114469))

(assert (=> d!28661 m!114727))

(declare-fun m!117045 () Bool)

(assert (=> d!28661 m!117045))

(declare-fun m!117047 () Bool)

(assert (=> d!28661 m!117047))

(assert (=> b!104932 m!114723))

(assert (=> b!103744 d!28661))

(assert (=> b!103744 d!28391))

(assert (=> b!103744 d!27831))

(assert (=> d!28013 d!28005))

(assert (=> d!28013 d!28007))

(declare-fun d!28663 () Bool)

(assert (=> d!28663 (isDefined!108 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28663 true))

(declare-fun _$12!350 () Unit!3150)

(assert (=> d!28663 (= (choose!649 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) _$12!350)))

(declare-fun bs!4327 () Bool)

(assert (= bs!4327 d!28663))

(assert (=> bs!4327 m!114165))

(assert (=> bs!4327 m!114275))

(assert (=> bs!4327 m!114275))

(assert (=> bs!4327 m!114277))

(assert (=> d!28013 d!28663))

(declare-fun d!28665 () Bool)

(declare-fun res!52302 () Bool)

(declare-fun e!68312 () Bool)

(assert (=> d!28665 (=> res!52302 e!68312)))

(assert (=> d!28665 (= res!52302 (or ((_ is Nil!1608) (toList!800 lt!52534)) ((_ is Nil!1608) (t!5673 (toList!800 lt!52534)))))))

(assert (=> d!28665 (= (isStrictlySorted!308 (toList!800 lt!52534)) e!68312)))

(declare-fun b!104933 () Bool)

(declare-fun e!68313 () Bool)

(assert (=> b!104933 (= e!68312 e!68313)))

(declare-fun res!52303 () Bool)

(assert (=> b!104933 (=> (not res!52303) (not e!68313))))

(assert (=> b!104933 (= res!52303 (bvslt (_1!1211 (h!2203 (toList!800 lt!52534))) (_1!1211 (h!2203 (t!5673 (toList!800 lt!52534))))))))

(declare-fun b!104934 () Bool)

(assert (=> b!104934 (= e!68313 (isStrictlySorted!308 (t!5673 (toList!800 lt!52534))))))

(assert (= (and d!28665 (not res!52302)) b!104933))

(assert (= (and b!104933 res!52303) b!104934))

(declare-fun m!117049 () Bool)

(assert (=> b!104934 m!117049))

(assert (=> d!28013 d!28665))

(assert (=> b!104005 d!28123))

(assert (=> b!104005 d!28125))

(declare-fun d!28667 () Bool)

(declare-fun res!52304 () Bool)

(declare-fun e!68314 () Bool)

(assert (=> d!28667 (=> res!52304 e!68314)))

(assert (=> d!28667 (= res!52304 (and ((_ is Cons!1607) (toList!800 lt!52764)) (= (_1!1211 (h!2203 (toList!800 lt!52764))) (_1!1211 lt!52540))))))

(assert (=> d!28667 (= (containsKey!159 (toList!800 lt!52764) (_1!1211 lt!52540)) e!68314)))

(declare-fun b!104935 () Bool)

(declare-fun e!68315 () Bool)

(assert (=> b!104935 (= e!68314 e!68315)))

(declare-fun res!52305 () Bool)

(assert (=> b!104935 (=> (not res!52305) (not e!68315))))

(assert (=> b!104935 (= res!52305 (and (or (not ((_ is Cons!1607) (toList!800 lt!52764))) (bvsle (_1!1211 (h!2203 (toList!800 lt!52764))) (_1!1211 lt!52540))) ((_ is Cons!1607) (toList!800 lt!52764)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52764))) (_1!1211 lt!52540))))))

(declare-fun b!104936 () Bool)

(assert (=> b!104936 (= e!68315 (containsKey!159 (t!5673 (toList!800 lt!52764)) (_1!1211 lt!52540)))))

(assert (= (and d!28667 (not res!52304)) b!104935))

(assert (= (and b!104935 res!52305) b!104936))

(declare-fun m!117051 () Bool)

(assert (=> b!104936 m!117051))

(assert (=> d!27889 d!28667))

(declare-fun d!28669 () Bool)

(declare-fun e!68317 () Bool)

(assert (=> d!28669 e!68317))

(declare-fun res!52306 () Bool)

(assert (=> d!28669 (=> res!52306 e!68317)))

(declare-fun lt!53619 () Bool)

(assert (=> d!28669 (= res!52306 (not lt!53619))))

(declare-fun lt!53620 () Bool)

(assert (=> d!28669 (= lt!53619 lt!53620)))

(declare-fun lt!53621 () Unit!3150)

(declare-fun e!68316 () Unit!3150)

(assert (=> d!28669 (= lt!53621 e!68316)))

(declare-fun c!18212 () Bool)

(assert (=> d!28669 (= c!18212 lt!53620)))

(assert (=> d!28669 (= lt!53620 (containsKey!159 (toList!800 lt!52956) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!28669 (= (contains!824 lt!52956 #b0000000000000000000000000000000000000000000000000000000000000000) lt!53619)))

(declare-fun b!104937 () Bool)

(declare-fun lt!53622 () Unit!3150)

(assert (=> b!104937 (= e!68316 lt!53622)))

(assert (=> b!104937 (= lt!53622 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52956) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!104937 (isDefined!108 (getValueByKey!155 (toList!800 lt!52956) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!104938 () Bool)

(declare-fun Unit!3218 () Unit!3150)

(assert (=> b!104938 (= e!68316 Unit!3218)))

(declare-fun b!104939 () Bool)

(assert (=> b!104939 (= e!68317 (isDefined!108 (getValueByKey!155 (toList!800 lt!52956) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28669 c!18212) b!104937))

(assert (= (and d!28669 (not c!18212)) b!104938))

(assert (= (and d!28669 (not res!52306)) b!104939))

(declare-fun m!117053 () Bool)

(assert (=> d!28669 m!117053))

(declare-fun m!117055 () Bool)

(assert (=> b!104937 m!117055))

(declare-fun m!117057 () Bool)

(assert (=> b!104937 m!117057))

(assert (=> b!104937 m!117057))

(declare-fun m!117059 () Bool)

(assert (=> b!104937 m!117059))

(assert (=> b!104939 m!117057))

(assert (=> b!104939 m!117057))

(assert (=> b!104939 m!117059))

(assert (=> d!27869 d!28669))

(assert (=> d!27869 d!27807))

(declare-fun d!28671 () Bool)

(assert (=> d!28671 (isDefined!108 (getValueByKey!155 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!53623 () Unit!3150)

(assert (=> d!28671 (= lt!53623 (choose!649 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!68318 () Bool)

(assert (=> d!28671 e!68318))

(declare-fun res!52307 () Bool)

(assert (=> d!28671 (=> (not res!52307) (not e!68318))))

(assert (=> d!28671 (= res!52307 (isStrictlySorted!308 (toList!800 lt!52728)))))

(assert (=> d!28671 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000) lt!53623)))

(declare-fun b!104940 () Bool)

(assert (=> b!104940 (= e!68318 (containsKey!159 (toList!800 lt!52728) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28671 res!52307) b!104940))

(assert (=> d!28671 m!115013))

(assert (=> d!28671 m!115013))

(assert (=> d!28671 m!115015))

(declare-fun m!117061 () Bool)

(assert (=> d!28671 m!117061))

(assert (=> d!28671 m!115361))

(assert (=> b!104940 m!115009))

(assert (=> b!103886 d!28671))

(assert (=> b!103886 d!28657))

(assert (=> b!103886 d!28363))

(declare-fun d!28673 () Bool)

(assert (=> d!28673 (isDefined!108 (getValueByKey!155 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))

(declare-fun lt!53624 () Unit!3150)

(assert (=> d!28673 (= lt!53624 (choose!649 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))

(declare-fun e!68319 () Bool)

(assert (=> d!28673 e!68319))

(declare-fun res!52308 () Bool)

(assert (=> d!28673 (=> (not res!52308) (not e!68319))))

(assert (=> d!28673 (= res!52308 (isStrictlySorted!308 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28673 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731) lt!53624)))

(declare-fun b!104941 () Bool)

(assert (=> b!104941 (= e!68319 (containsKey!159 (toList!800 (+!141 lt!52722 (tuple2!2401 lt!52732 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!52731))))

(assert (= (and d!28673 res!52308) b!104941))

(assert (=> d!28673 m!115239))

(assert (=> d!28673 m!115239))

(assert (=> d!28673 m!115241))

(declare-fun m!117063 () Bool)

(assert (=> d!28673 m!117063))

(declare-fun m!117065 () Bool)

(assert (=> d!28673 m!117065))

(assert (=> b!104941 m!115235))

(assert (=> b!103990 d!28673))

(assert (=> b!103990 d!28399))

(assert (=> b!103990 d!28401))

(declare-fun d!28675 () Bool)

(assert (=> d!28675 (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))

(declare-fun lt!53627 () Unit!3150)

(declare-fun choose!650 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 64) (_ BitVec 32) Int) Unit!3150)

(assert (=> d!28675 (= lt!53627 (choose!650 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28675 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28675 (= (lemmaArrayContainsKeyThenInListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53627)))

(declare-fun bs!4328 () Bool)

(assert (= bs!4328 d!28675))

(assert (=> bs!4328 m!114331))

(assert (=> bs!4328 m!114331))

(assert (=> bs!4328 m!114165))

(assert (=> bs!4328 m!114649))

(assert (=> bs!4328 m!114165))

(declare-fun m!117067 () Bool)

(assert (=> bs!4328 m!117067))

(assert (=> bs!4328 m!114575))

(assert (=> b!103703 d!28675))

(declare-fun d!28677 () Bool)

(declare-fun e!68321 () Bool)

(assert (=> d!28677 e!68321))

(declare-fun res!52309 () Bool)

(assert (=> d!28677 (=> res!52309 e!68321)))

(declare-fun lt!53628 () Bool)

(assert (=> d!28677 (= res!52309 (not lt!53628))))

(declare-fun lt!53629 () Bool)

(assert (=> d!28677 (= lt!53628 lt!53629)))

(declare-fun lt!53630 () Unit!3150)

(declare-fun e!68320 () Unit!3150)

(assert (=> d!28677 (= lt!53630 e!68320)))

(declare-fun c!18213 () Bool)

(assert (=> d!28677 (= c!18213 lt!53629)))

(assert (=> d!28677 (= lt!53629 (containsKey!159 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28677 (= (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53628)))

(declare-fun b!104942 () Bool)

(declare-fun lt!53631 () Unit!3150)

(assert (=> b!104942 (= e!68320 lt!53631)))

(assert (=> b!104942 (= lt!53631 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> b!104942 (isDefined!108 (getValueByKey!155 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!104943 () Bool)

(declare-fun Unit!3219 () Unit!3150)

(assert (=> b!104943 (= e!68320 Unit!3219)))

(declare-fun b!104944 () Bool)

(assert (=> b!104944 (= e!68321 (isDefined!108 (getValueByKey!155 (toList!800 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))))))

(assert (= (and d!28677 c!18213) b!104942))

(assert (= (and d!28677 (not c!18213)) b!104943))

(assert (= (and d!28677 (not res!52309)) b!104944))

(assert (=> d!28677 m!114165))

(declare-fun m!117069 () Bool)

(assert (=> d!28677 m!117069))

(assert (=> b!104942 m!114165))

(declare-fun m!117071 () Bool)

(assert (=> b!104942 m!117071))

(assert (=> b!104942 m!114165))

(declare-fun m!117073 () Bool)

(assert (=> b!104942 m!117073))

(assert (=> b!104942 m!117073))

(declare-fun m!117075 () Bool)

(assert (=> b!104942 m!117075))

(assert (=> b!104944 m!114165))

(assert (=> b!104944 m!117073))

(assert (=> b!104944 m!117073))

(assert (=> b!104944 m!117075))

(assert (=> b!103703 d!28677))

(assert (=> b!103703 d!27825))

(declare-fun d!28679 () Bool)

(declare-fun c!18214 () Bool)

(assert (=> d!28679 (= c!18214 (and ((_ is Cons!1607) (toList!800 lt!53032)) (= (_1!1211 (h!2203 (toList!800 lt!53032))) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68322 () Option!161)

(assert (=> d!28679 (= (getValueByKey!155 (toList!800 lt!53032) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68322)))

(declare-fun b!104946 () Bool)

(declare-fun e!68323 () Option!161)

(assert (=> b!104946 (= e!68322 e!68323)))

(declare-fun c!18215 () Bool)

(assert (=> b!104946 (= c!18215 (and ((_ is Cons!1607) (toList!800 lt!53032)) (not (= (_1!1211 (h!2203 (toList!800 lt!53032))) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104947 () Bool)

(assert (=> b!104947 (= e!68323 (getValueByKey!155 (t!5673 (toList!800 lt!53032)) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104948 () Bool)

(assert (=> b!104948 (= e!68323 None!159)))

(declare-fun b!104945 () Bool)

(assert (=> b!104945 (= e!68322 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53032)))))))

(assert (= (and d!28679 c!18214) b!104945))

(assert (= (and d!28679 (not c!18214)) b!104946))

(assert (= (and b!104946 c!18215) b!104947))

(assert (= (and b!104946 (not c!18215)) b!104948))

(declare-fun m!117077 () Bool)

(assert (=> b!104947 m!117077))

(assert (=> b!103876 d!28679))

(declare-fun b!104949 () Bool)

(declare-fun e!68325 () Bool)

(declare-fun call!11028 () Bool)

(assert (=> b!104949 (= e!68325 call!11028)))

(declare-fun b!104950 () Bool)

(declare-fun e!68326 () Bool)

(assert (=> b!104950 (= e!68326 (contains!825 (ite c!17933 (Cons!1606 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607) (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!104951 () Bool)

(assert (=> b!104951 (= e!68325 call!11028)))

(declare-fun b!104952 () Bool)

(declare-fun e!68327 () Bool)

(assert (=> b!104952 (= e!68327 e!68325)))

(declare-fun c!18216 () Bool)

(assert (=> b!104952 (= c!18216 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!28681 () Bool)

(declare-fun res!52312 () Bool)

(declare-fun e!68324 () Bool)

(assert (=> d!28681 (=> res!52312 e!68324)))

(assert (=> d!28681 (= res!52312 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28681 (= (arrayNoDuplicates!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!17933 (Cons!1606 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607)) e!68324)))

(declare-fun bm!11025 () Bool)

(assert (=> bm!11025 (= call!11028 (arrayNoDuplicates!0 (_keys!4263 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!18216 (Cons!1606 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!17933 (Cons!1606 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607)) (ite c!17933 (Cons!1606 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000) Nil!1607) Nil!1607))))))

(declare-fun b!104953 () Bool)

(assert (=> b!104953 (= e!68324 e!68327)))

(declare-fun res!52311 () Bool)

(assert (=> b!104953 (=> (not res!52311) (not e!68327))))

(assert (=> b!104953 (= res!52311 (not e!68326))))

(declare-fun res!52310 () Bool)

(assert (=> b!104953 (=> (not res!52310) (not e!68326))))

(assert (=> b!104953 (= res!52310 (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!28681 (not res!52312)) b!104953))

(assert (= (and b!104953 res!52310) b!104950))

(assert (= (and b!104953 res!52311) b!104952))

(assert (= (and b!104952 c!18216) b!104949))

(assert (= (and b!104952 (not c!18216)) b!104951))

(assert (= (or b!104949 b!104951) bm!11025))

(assert (=> b!104950 m!115313))

(assert (=> b!104950 m!115313))

(declare-fun m!117079 () Bool)

(assert (=> b!104950 m!117079))

(assert (=> b!104952 m!115313))

(assert (=> b!104952 m!115313))

(assert (=> b!104952 m!115315))

(assert (=> bm!11025 m!115313))

(declare-fun m!117081 () Bool)

(assert (=> bm!11025 m!117081))

(assert (=> b!104953 m!115313))

(assert (=> b!104953 m!115313))

(assert (=> b!104953 m!115315))

(assert (=> bm!10919 d!28681))

(assert (=> d!27871 d!28111))

(assert (=> d!27829 d!28111))

(declare-fun c!18217 () Bool)

(declare-fun d!28683 () Bool)

(assert (=> d!28683 (= c!18217 (and ((_ is Cons!1607) (toList!800 lt!53081)) (= (_1!1211 (h!2203 (toList!800 lt!53081))) (_1!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(declare-fun e!68328 () Option!161)

(assert (=> d!28683 (= (getValueByKey!155 (toList!800 lt!53081) (_1!1211 (tuple2!2401 lt!52781 lt!52787))) e!68328)))

(declare-fun b!104955 () Bool)

(declare-fun e!68329 () Option!161)

(assert (=> b!104955 (= e!68328 e!68329)))

(declare-fun c!18218 () Bool)

(assert (=> b!104955 (= c!18218 (and ((_ is Cons!1607) (toList!800 lt!53081)) (not (= (_1!1211 (h!2203 (toList!800 lt!53081))) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))))

(declare-fun b!104956 () Bool)

(assert (=> b!104956 (= e!68329 (getValueByKey!155 (t!5673 (toList!800 lt!53081)) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun b!104957 () Bool)

(assert (=> b!104957 (= e!68329 None!159)))

(declare-fun b!104954 () Bool)

(assert (=> b!104954 (= e!68328 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53081)))))))

(assert (= (and d!28683 c!18217) b!104954))

(assert (= (and d!28683 (not c!18217)) b!104955))

(assert (= (and b!104955 c!18218) b!104956))

(assert (= (and b!104955 (not c!18218)) b!104957))

(declare-fun m!117083 () Bool)

(assert (=> b!104956 m!117083))

(assert (=> b!103933 d!28683))

(assert (=> bm!10927 d!28011))

(declare-fun d!28685 () Bool)

(assert (=> d!28685 (= (apply!97 lt!52817 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) (get!1326 (getValueByKey!155 (toList!800 lt!52817) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!4329 () Bool)

(assert (= bs!4329 d!28685))

(assert (=> bs!4329 m!114525))

(declare-fun m!117085 () Bool)

(assert (=> bs!4329 m!117085))

(assert (=> bs!4329 m!117085))

(declare-fun m!117087 () Bool)

(assert (=> bs!4329 m!117087))

(assert (=> b!103616 d!28685))

(declare-fun d!28687 () Bool)

(declare-fun c!18219 () Bool)

(assert (=> d!28687 (= c!18219 ((_ is ValueCellFull!993) (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!68330 () V!3211)

(assert (=> d!28687 (= (get!1323 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!68330)))

(declare-fun b!104958 () Bool)

(assert (=> b!104958 (= e!68330 (get!1324 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!104959 () Bool)

(assert (=> b!104959 (= e!68330 (get!1325 (select (arr!2058 (_values!2544 newMap!16)) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!28687 c!18219) b!104958))

(assert (= (and d!28687 (not c!18219)) b!104959))

(assert (=> b!104958 m!114535))

(assert (=> b!104958 m!114537))

(declare-fun m!117089 () Bool)

(assert (=> b!104958 m!117089))

(assert (=> b!104959 m!114535))

(assert (=> b!104959 m!114537))

(declare-fun m!117091 () Bool)

(assert (=> b!104959 m!117091))

(assert (=> b!103616 d!28687))

(declare-fun d!28689 () Bool)

(declare-fun c!18220 () Bool)

(assert (=> d!28689 (= c!18220 (and ((_ is Cons!1607) (toList!800 lt!53040)) (= (_1!1211 (h!2203 (toList!800 lt!53040))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68331 () Option!161)

(assert (=> d!28689 (= (getValueByKey!155 (toList!800 lt!53040) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68331)))

(declare-fun b!104961 () Bool)

(declare-fun e!68332 () Option!161)

(assert (=> b!104961 (= e!68331 e!68332)))

(declare-fun c!18221 () Bool)

(assert (=> b!104961 (= c!18221 (and ((_ is Cons!1607) (toList!800 lt!53040)) (not (= (_1!1211 (h!2203 (toList!800 lt!53040))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104962 () Bool)

(assert (=> b!104962 (= e!68332 (getValueByKey!155 (t!5673 (toList!800 lt!53040)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104963 () Bool)

(assert (=> b!104963 (= e!68332 None!159)))

(declare-fun b!104960 () Bool)

(assert (=> b!104960 (= e!68331 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53040)))))))

(assert (= (and d!28689 c!18220) b!104960))

(assert (= (and d!28689 (not c!18220)) b!104961))

(assert (= (and b!104961 c!18221) b!104962))

(assert (= (and b!104961 (not c!18221)) b!104963))

(declare-fun m!117093 () Bool)

(assert (=> b!104962 m!117093))

(assert (=> b!103880 d!28689))

(declare-fun d!28691 () Bool)

(declare-fun c!18222 () Bool)

(assert (=> d!28691 (= c!18222 (and ((_ is Cons!1607) (toList!800 lt!53132)) (= (_1!1211 (h!2203 (toList!800 lt!53132))) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun e!68333 () Option!161)

(assert (=> d!28691 (= (getValueByKey!155 (toList!800 lt!53132) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) e!68333)))

(declare-fun b!104965 () Bool)

(declare-fun e!68334 () Option!161)

(assert (=> b!104965 (= e!68333 e!68334)))

(declare-fun c!18223 () Bool)

(assert (=> b!104965 (= c!18223 (and ((_ is Cons!1607) (toList!800 lt!53132)) (not (= (_1!1211 (h!2203 (toList!800 lt!53132))) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))))

(declare-fun b!104966 () Bool)

(assert (=> b!104966 (= e!68334 (getValueByKey!155 (t!5673 (toList!800 lt!53132)) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!104967 () Bool)

(assert (=> b!104967 (= e!68334 None!159)))

(declare-fun b!104964 () Bool)

(assert (=> b!104964 (= e!68333 (Some!160 (_2!1211 (h!2203 (toList!800 lt!53132)))))))

(assert (= (and d!28691 c!18222) b!104964))

(assert (= (and d!28691 (not c!18222)) b!104965))

(assert (= (and b!104965 c!18223) b!104966))

(assert (= (and b!104965 (not c!18223)) b!104967))

(declare-fun m!117095 () Bool)

(assert (=> b!104966 m!117095))

(assert (=> b!103993 d!28691))

(declare-fun bm!11026 () Bool)

(declare-fun call!11029 () Bool)

(assert (=> bm!11026 (= call!11029 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4263 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992)))))))

(declare-fun b!104968 () Bool)

(declare-fun e!68336 () Bool)

(declare-fun e!68337 () Bool)

(assert (=> b!104968 (= e!68336 e!68337)))

(declare-fun lt!53634 () (_ BitVec 64))

(assert (=> b!104968 (= lt!53634 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!53632 () Unit!3150)

(assert (=> b!104968 (= lt!53632 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) lt!53634 #b00000000000000000000000000000000))))

(assert (=> b!104968 (arrayContainsKey!0 (_keys!4263 (v!2876 (underlying!358 thiss!992))) lt!53634 #b00000000000000000000000000000000)))

(declare-fun lt!53633 () Unit!3150)

(assert (=> b!104968 (= lt!53633 lt!53632)))

(declare-fun res!52314 () Bool)

(assert (=> b!104968 (= res!52314 (= (seekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000) (_keys!4263 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992)))) (Found!258 #b00000000000000000000000000000000)))))

(assert (=> b!104968 (=> (not res!52314) (not e!68337))))

(declare-fun d!28693 () Bool)

(declare-fun res!52313 () Bool)

(declare-fun e!68335 () Bool)

(assert (=> d!28693 (=> res!52313 e!68335)))

(assert (=> d!28693 (= res!52313 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 (v!2876 (underlying!358 thiss!992))))))))

(assert (=> d!28693 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4263 (v!2876 (underlying!358 thiss!992))) (mask!6697 (v!2876 (underlying!358 thiss!992)))) e!68335)))

(declare-fun b!104969 () Bool)

(assert (=> b!104969 (= e!68336 call!11029)))

(declare-fun b!104970 () Bool)

(assert (=> b!104970 (= e!68337 call!11029)))

(declare-fun b!104971 () Bool)

(assert (=> b!104971 (= e!68335 e!68336)))

(declare-fun c!18224 () Bool)

(assert (=> b!104971 (= c!18224 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!28693 (not res!52313)) b!104971))

(assert (= (and b!104971 c!18224) b!104968))

(assert (= (and b!104971 (not c!18224)) b!104969))

(assert (= (and b!104968 res!52314) b!104970))

(assert (= (or b!104970 b!104969) bm!11026))

(declare-fun m!117097 () Bool)

(assert (=> bm!11026 m!117097))

(assert (=> b!104968 m!115433))

(declare-fun m!117099 () Bool)

(assert (=> b!104968 m!117099))

(declare-fun m!117101 () Bool)

(assert (=> b!104968 m!117101))

(assert (=> b!104968 m!115433))

(declare-fun m!117103 () Bool)

(assert (=> b!104968 m!117103))

(assert (=> b!104971 m!115433))

(assert (=> b!104971 m!115433))

(assert (=> b!104971 m!115435))

(assert (=> b!103927 d!28693))

(declare-fun d!28695 () Bool)

(assert (=> d!28695 (= (isEmpty!369 (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355))) (not ((_ is Some!160) (getValueByKey!155 (toList!800 lt!52534) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))))

(assert (=> d!28005 d!28695))

(assert (=> b!103795 d!28031))

(assert (=> bm!10891 d!28011))

(declare-fun d!28697 () Bool)

(declare-fun e!68339 () Bool)

(assert (=> d!28697 e!68339))

(declare-fun res!52315 () Bool)

(assert (=> d!28697 (=> res!52315 e!68339)))

(declare-fun lt!53635 () Bool)

(assert (=> d!28697 (= res!52315 (not lt!53635))))

(declare-fun lt!53636 () Bool)

(assert (=> d!28697 (= lt!53635 lt!53636)))

(declare-fun lt!53637 () Unit!3150)

(declare-fun e!68338 () Unit!3150)

(assert (=> d!28697 (= lt!53637 e!68338)))

(declare-fun c!18225 () Bool)

(assert (=> d!28697 (= c!18225 lt!53636)))

(assert (=> d!28697 (= lt!53636 (containsKey!159 (toList!800 lt!53032) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28697 (= (contains!824 lt!53032 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53635)))

(declare-fun b!104972 () Bool)

(declare-fun lt!53638 () Unit!3150)

(assert (=> b!104972 (= e!68338 lt!53638)))

(assert (=> b!104972 (= lt!53638 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53032) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!104972 (isDefined!108 (getValueByKey!155 (toList!800 lt!53032) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104973 () Bool)

(declare-fun Unit!3220 () Unit!3150)

(assert (=> b!104973 (= e!68338 Unit!3220)))

(declare-fun b!104974 () Bool)

(assert (=> b!104974 (= e!68339 (isDefined!108 (getValueByKey!155 (toList!800 lt!53032) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28697 c!18225) b!104972))

(assert (= (and d!28697 (not c!18225)) b!104973))

(assert (= (and d!28697 (not res!52315)) b!104974))

(declare-fun m!117105 () Bool)

(assert (=> d!28697 m!117105))

(declare-fun m!117107 () Bool)

(assert (=> b!104972 m!117107))

(assert (=> b!104972 m!114955))

(assert (=> b!104972 m!114955))

(declare-fun m!117109 () Bool)

(assert (=> b!104972 m!117109))

(assert (=> b!104974 m!114955))

(assert (=> b!104974 m!114955))

(assert (=> b!104974 m!117109))

(assert (=> d!27899 d!28697))

(declare-fun d!28699 () Bool)

(declare-fun c!18226 () Bool)

(assert (=> d!28699 (= c!18226 (and ((_ is Cons!1607) lt!53033) (= (_1!1211 (h!2203 lt!53033)) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68340 () Option!161)

(assert (=> d!28699 (= (getValueByKey!155 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68340)))

(declare-fun b!104976 () Bool)

(declare-fun e!68341 () Option!161)

(assert (=> b!104976 (= e!68340 e!68341)))

(declare-fun c!18227 () Bool)

(assert (=> b!104976 (= c!18227 (and ((_ is Cons!1607) lt!53033) (not (= (_1!1211 (h!2203 lt!53033)) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!104977 () Bool)

(assert (=> b!104977 (= e!68341 (getValueByKey!155 (t!5673 lt!53033) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104978 () Bool)

(assert (=> b!104978 (= e!68341 None!159)))

(declare-fun b!104975 () Bool)

(assert (=> b!104975 (= e!68340 (Some!160 (_2!1211 (h!2203 lt!53033))))))

(assert (= (and d!28699 c!18226) b!104975))

(assert (= (and d!28699 (not c!18226)) b!104976))

(assert (= (and b!104976 c!18227) b!104977))

(assert (= (and b!104976 (not c!18227)) b!104978))

(declare-fun m!117111 () Bool)

(assert (=> b!104977 m!117111))

(assert (=> d!27899 d!28699))

(declare-fun d!28701 () Bool)

(assert (=> d!28701 (= (getValueByKey!155 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53639 () Unit!3150)

(assert (=> d!28701 (= lt!53639 (choose!639 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68342 () Bool)

(assert (=> d!28701 e!68342))

(declare-fun res!52316 () Bool)

(assert (=> d!28701 (=> (not res!52316) (not e!68342))))

(assert (=> d!28701 (= res!52316 (isStrictlySorted!308 lt!53033))))

(assert (=> d!28701 (= (lemmaContainsTupThenGetReturnValue!71 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53639)))

(declare-fun b!104979 () Bool)

(declare-fun res!52317 () Bool)

(assert (=> b!104979 (=> (not res!52317) (not e!68342))))

(assert (=> b!104979 (= res!52317 (containsKey!159 lt!53033 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!104980 () Bool)

(assert (=> b!104980 (= e!68342 (contains!826 lt!53033 (tuple2!2401 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28701 res!52316) b!104979))

(assert (= (and b!104979 res!52317) b!104980))

(assert (=> d!28701 m!114949))

(declare-fun m!117113 () Bool)

(assert (=> d!28701 m!117113))

(declare-fun m!117115 () Bool)

(assert (=> d!28701 m!117115))

(declare-fun m!117117 () Bool)

(assert (=> b!104979 m!117117))

(declare-fun m!117119 () Bool)

(assert (=> b!104980 m!117119))

(assert (=> d!27899 d!28701))

(declare-fun b!104981 () Bool)

(declare-fun e!68347 () List!1611)

(declare-fun e!68343 () List!1611)

(assert (=> b!104981 (= e!68347 e!68343)))

(declare-fun c!18229 () Bool)

(assert (=> b!104981 (= c!18229 (and ((_ is Cons!1607) (toList!800 call!10860)) (= (_1!1211 (h!2203 (toList!800 call!10860))) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104982 () Bool)

(declare-fun call!11031 () List!1611)

(assert (=> b!104982 (= e!68343 call!11031)))

(declare-fun bm!11027 () Bool)

(declare-fun call!11032 () List!1611)

(assert (=> bm!11027 (= call!11031 call!11032)))

(declare-fun b!104984 () Bool)

(declare-fun c!18231 () Bool)

(declare-fun e!68344 () List!1611)

(assert (=> b!104984 (= e!68344 (ite c!18229 (t!5673 (toList!800 call!10860)) (ite c!18231 (Cons!1607 (h!2203 (toList!800 call!10860)) (t!5673 (toList!800 call!10860))) Nil!1608)))))

(declare-fun bm!11028 () Bool)

(declare-fun call!11030 () List!1611)

(assert (=> bm!11028 (= call!11030 call!11031)))

(declare-fun b!104985 () Bool)

(assert (=> b!104985 (= e!68344 (insertStrictlySorted!74 (t!5673 (toList!800 call!10860)) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun c!18230 () Bool)

(declare-fun bm!11029 () Bool)

(assert (=> bm!11029 (= call!11032 ($colon$colon!80 e!68344 (ite c!18230 (h!2203 (toList!800 call!10860)) (tuple2!2401 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18228 () Bool)

(assert (=> bm!11029 (= c!18228 c!18230)))

(declare-fun b!104986 () Bool)

(declare-fun e!68345 () List!1611)

(assert (=> b!104986 (= e!68345 call!11030)))

(declare-fun b!104987 () Bool)

(assert (=> b!104987 (= c!18231 (and ((_ is Cons!1607) (toList!800 call!10860)) (bvsgt (_1!1211 (h!2203 (toList!800 call!10860))) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!104987 (= e!68343 e!68345)))

(declare-fun b!104988 () Bool)

(assert (=> b!104988 (= e!68347 call!11032)))

(declare-fun d!28703 () Bool)

(declare-fun e!68346 () Bool)

(assert (=> d!28703 e!68346))

(declare-fun res!52318 () Bool)

(assert (=> d!28703 (=> (not res!52318) (not e!68346))))

(declare-fun lt!53640 () List!1611)

(assert (=> d!28703 (= res!52318 (isStrictlySorted!308 lt!53640))))

(assert (=> d!28703 (= lt!53640 e!68347)))

(assert (=> d!28703 (= c!18230 (and ((_ is Cons!1607) (toList!800 call!10860)) (bvslt (_1!1211 (h!2203 (toList!800 call!10860))) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28703 (isStrictlySorted!308 (toList!800 call!10860))))

(assert (=> d!28703 (= (insertStrictlySorted!74 (toList!800 call!10860) (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53640)))

(declare-fun b!104983 () Bool)

(assert (=> b!104983 (= e!68345 call!11030)))

(declare-fun b!104989 () Bool)

(assert (=> b!104989 (= e!68346 (contains!826 lt!53640 (tuple2!2401 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!104990 () Bool)

(declare-fun res!52319 () Bool)

(assert (=> b!104990 (=> (not res!52319) (not e!68346))))

(assert (=> b!104990 (= res!52319 (containsKey!159 lt!53640 (_1!1211 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28703 c!18230) b!104988))

(assert (= (and d!28703 (not c!18230)) b!104981))

(assert (= (and b!104981 c!18229) b!104982))

(assert (= (and b!104981 (not c!18229)) b!104987))

(assert (= (and b!104987 c!18231) b!104983))

(assert (= (and b!104987 (not c!18231)) b!104986))

(assert (= (or b!104983 b!104986) bm!11028))

(assert (= (or b!104982 bm!11028) bm!11027))

(assert (= (or b!104988 bm!11027) bm!11029))

(assert (= (and bm!11029 c!18228) b!104985))

(assert (= (and bm!11029 (not c!18228)) b!104984))

(assert (= (and d!28703 res!52318) b!104990))

(assert (= (and b!104990 res!52319) b!104989))

(declare-fun m!117121 () Bool)

(assert (=> b!104989 m!117121))

(declare-fun m!117123 () Bool)

(assert (=> b!104985 m!117123))

(declare-fun m!117125 () Bool)

(assert (=> bm!11029 m!117125))

(declare-fun m!117127 () Bool)

(assert (=> d!28703 m!117127))

(declare-fun m!117129 () Bool)

(assert (=> d!28703 m!117129))

(declare-fun m!117131 () Bool)

(assert (=> b!104990 m!117131))

(assert (=> d!27899 d!28703))

(assert (=> b!103829 d!28031))

(declare-fun d!28705 () Bool)

(assert (=> d!28705 (contains!824 (getCurrentListMap!487 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!52655)))))

(assert (=> d!28705 true))

(declare-fun _$16!123 () Unit!3150)

(assert (=> d!28705 (= (choose!641 (_keys!4263 newMap!16) lt!52668 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (index!3180 lt!52655) (defaultEntry!2561 newMap!16)) _$16!123)))

(declare-fun bs!4330 () Bool)

(assert (= bs!4330 d!28705))

(assert (=> bs!4330 m!115051))

(assert (=> bs!4330 m!114297))

(assert (=> bs!4330 m!115051))

(assert (=> bs!4330 m!114297))

(assert (=> bs!4330 m!115053))

(assert (=> d!27927 d!28705))

(assert (=> d!27927 d!28111))

(declare-fun d!28707 () Bool)

(assert (=> d!28707 (isDefined!108 (getValueByKey!155 (toList!800 lt!52764) (_1!1211 lt!52540)))))

(declare-fun lt!53641 () Unit!3150)

(assert (=> d!28707 (= lt!53641 (choose!649 (toList!800 lt!52764) (_1!1211 lt!52540)))))

(declare-fun e!68348 () Bool)

(assert (=> d!28707 e!68348))

(declare-fun res!52320 () Bool)

(assert (=> d!28707 (=> (not res!52320) (not e!68348))))

(assert (=> d!28707 (= res!52320 (isStrictlySorted!308 (toList!800 lt!52764)))))

(assert (=> d!28707 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52764) (_1!1211 lt!52540)) lt!53641)))

(declare-fun b!104991 () Bool)

(assert (=> b!104991 (= e!68348 (containsKey!159 (toList!800 lt!52764) (_1!1211 lt!52540)))))

(assert (= (and d!28707 res!52320) b!104991))

(assert (=> d!28707 m!114437))

(assert (=> d!28707 m!114437))

(assert (=> d!28707 m!114925))

(declare-fun m!117133 () Bool)

(assert (=> d!28707 m!117133))

(declare-fun m!117135 () Bool)

(assert (=> d!28707 m!117135))

(assert (=> b!104991 m!114921))

(assert (=> b!103857 d!28707))

(assert (=> b!103857 d!28453))

(assert (=> b!103857 d!27847))

(assert (=> d!27881 d!28111))

(assert (=> b!103765 d!28385))

(declare-fun d!28709 () Bool)

(assert (=> d!28709 (= (get!1326 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2880 (getValueByKey!155 (toList!800 lt!52783) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!27995 d!28709))

(assert (=> d!27995 d!28259))

(declare-fun d!28711 () Bool)

(declare-fun e!68350 () Bool)

(assert (=> d!28711 e!68350))

(declare-fun res!52321 () Bool)

(assert (=> d!28711 (=> res!52321 e!68350)))

(declare-fun lt!53642 () Bool)

(assert (=> d!28711 (= res!52321 (not lt!53642))))

(declare-fun lt!53643 () Bool)

(assert (=> d!28711 (= lt!53642 lt!53643)))

(declare-fun lt!53644 () Unit!3150)

(declare-fun e!68349 () Unit!3150)

(assert (=> d!28711 (= lt!53644 e!68349)))

(declare-fun c!18232 () Bool)

(assert (=> d!28711 (= c!18232 lt!53643)))

(assert (=> d!28711 (= lt!53643 (containsKey!159 (toList!800 lt!53081) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(assert (=> d!28711 (= (contains!824 lt!53081 (_1!1211 (tuple2!2401 lt!52781 lt!52787))) lt!53642)))

(declare-fun b!104992 () Bool)

(declare-fun lt!53645 () Unit!3150)

(assert (=> b!104992 (= e!68349 lt!53645)))

(assert (=> b!104992 (= lt!53645 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53081) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(assert (=> b!104992 (isDefined!108 (getValueByKey!155 (toList!800 lt!53081) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun b!104993 () Bool)

(declare-fun Unit!3221 () Unit!3150)

(assert (=> b!104993 (= e!68349 Unit!3221)))

(declare-fun b!104994 () Bool)

(assert (=> b!104994 (= e!68350 (isDefined!108 (getValueByKey!155 (toList!800 lt!53081) (_1!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(assert (= (and d!28711 c!18232) b!104992))

(assert (= (and d!28711 (not c!18232)) b!104993))

(assert (= (and d!28711 (not res!52321)) b!104994))

(declare-fun m!117137 () Bool)

(assert (=> d!28711 m!117137))

(declare-fun m!117139 () Bool)

(assert (=> b!104992 m!117139))

(assert (=> b!104992 m!115099))

(assert (=> b!104992 m!115099))

(declare-fun m!117141 () Bool)

(assert (=> b!104992 m!117141))

(assert (=> b!104994 m!115099))

(assert (=> b!104994 m!115099))

(assert (=> b!104994 m!117141))

(assert (=> d!27943 d!28711))

(declare-fun c!18233 () Bool)

(declare-fun d!28713 () Bool)

(assert (=> d!28713 (= c!18233 (and ((_ is Cons!1607) lt!53082) (= (_1!1211 (h!2203 lt!53082)) (_1!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(declare-fun e!68351 () Option!161)

(assert (=> d!28713 (= (getValueByKey!155 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787))) e!68351)))

(declare-fun b!104996 () Bool)

(declare-fun e!68352 () Option!161)

(assert (=> b!104996 (= e!68351 e!68352)))

(declare-fun c!18234 () Bool)

(assert (=> b!104996 (= c!18234 (and ((_ is Cons!1607) lt!53082) (not (= (_1!1211 (h!2203 lt!53082)) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))))

(declare-fun b!104997 () Bool)

(assert (=> b!104997 (= e!68352 (getValueByKey!155 (t!5673 lt!53082) (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun b!104998 () Bool)

(assert (=> b!104998 (= e!68352 None!159)))

(declare-fun b!104995 () Bool)

(assert (=> b!104995 (= e!68351 (Some!160 (_2!1211 (h!2203 lt!53082))))))

(assert (= (and d!28713 c!18233) b!104995))

(assert (= (and d!28713 (not c!18233)) b!104996))

(assert (= (and b!104996 c!18234) b!104997))

(assert (= (and b!104996 (not c!18234)) b!104998))

(declare-fun m!117143 () Bool)

(assert (=> b!104997 m!117143))

(assert (=> d!27943 d!28713))

(declare-fun d!28715 () Bool)

(assert (=> d!28715 (= (getValueByKey!155 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787))) (Some!160 (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun lt!53646 () Unit!3150)

(assert (=> d!28715 (= lt!53646 (choose!639 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun e!68353 () Bool)

(assert (=> d!28715 e!68353))

(declare-fun res!52322 () Bool)

(assert (=> d!28715 (=> (not res!52322) (not e!68353))))

(assert (=> d!28715 (= res!52322 (isStrictlySorted!308 lt!53082))))

(assert (=> d!28715 (= (lemmaContainsTupThenGetReturnValue!71 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))) lt!53646)))

(declare-fun b!104999 () Bool)

(declare-fun res!52323 () Bool)

(assert (=> b!104999 (=> (not res!52323) (not e!68353))))

(assert (=> b!104999 (= res!52323 (containsKey!159 lt!53082 (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun b!105000 () Bool)

(assert (=> b!105000 (= e!68353 (contains!826 lt!53082 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(assert (= (and d!28715 res!52322) b!104999))

(assert (= (and b!104999 res!52323) b!105000))

(assert (=> d!28715 m!115093))

(declare-fun m!117145 () Bool)

(assert (=> d!28715 m!117145))

(declare-fun m!117147 () Bool)

(assert (=> d!28715 m!117147))

(declare-fun m!117149 () Bool)

(assert (=> b!104999 m!117149))

(declare-fun m!117151 () Bool)

(assert (=> b!105000 m!117151))

(assert (=> d!27943 d!28715))

(declare-fun b!105001 () Bool)

(declare-fun e!68358 () List!1611)

(declare-fun e!68354 () List!1611)

(assert (=> b!105001 (= e!68358 e!68354)))

(declare-fun c!18236 () Bool)

(assert (=> b!105001 (= c!18236 (and ((_ is Cons!1607) (toList!800 lt!52782)) (= (_1!1211 (h!2203 (toList!800 lt!52782))) (_1!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(declare-fun b!105002 () Bool)

(declare-fun call!11034 () List!1611)

(assert (=> b!105002 (= e!68354 call!11034)))

(declare-fun bm!11030 () Bool)

(declare-fun call!11035 () List!1611)

(assert (=> bm!11030 (= call!11034 call!11035)))

(declare-fun e!68355 () List!1611)

(declare-fun b!105004 () Bool)

(declare-fun c!18238 () Bool)

(assert (=> b!105004 (= e!68355 (ite c!18236 (t!5673 (toList!800 lt!52782)) (ite c!18238 (Cons!1607 (h!2203 (toList!800 lt!52782)) (t!5673 (toList!800 lt!52782))) Nil!1608)))))

(declare-fun bm!11031 () Bool)

(declare-fun call!11033 () List!1611)

(assert (=> bm!11031 (= call!11033 call!11034)))

(declare-fun b!105005 () Bool)

(assert (=> b!105005 (= e!68355 (insertStrictlySorted!74 (t!5673 (toList!800 lt!52782)) (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))

(declare-fun c!18237 () Bool)

(declare-fun bm!11032 () Bool)

(assert (=> bm!11032 (= call!11035 ($colon$colon!80 e!68355 (ite c!18237 (h!2203 (toList!800 lt!52782)) (tuple2!2401 (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))))))))

(declare-fun c!18235 () Bool)

(assert (=> bm!11032 (= c!18235 c!18237)))

(declare-fun b!105006 () Bool)

(declare-fun e!68356 () List!1611)

(assert (=> b!105006 (= e!68356 call!11033)))

(declare-fun b!105007 () Bool)

(assert (=> b!105007 (= c!18238 (and ((_ is Cons!1607) (toList!800 lt!52782)) (bvsgt (_1!1211 (h!2203 (toList!800 lt!52782))) (_1!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(assert (=> b!105007 (= e!68354 e!68356)))

(declare-fun b!105008 () Bool)

(assert (=> b!105008 (= e!68358 call!11035)))

(declare-fun d!28717 () Bool)

(declare-fun e!68357 () Bool)

(assert (=> d!28717 e!68357))

(declare-fun res!52324 () Bool)

(assert (=> d!28717 (=> (not res!52324) (not e!68357))))

(declare-fun lt!53647 () List!1611)

(assert (=> d!28717 (= res!52324 (isStrictlySorted!308 lt!53647))))

(assert (=> d!28717 (= lt!53647 e!68358)))

(assert (=> d!28717 (= c!18237 (and ((_ is Cons!1607) (toList!800 lt!52782)) (bvslt (_1!1211 (h!2203 (toList!800 lt!52782))) (_1!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(assert (=> d!28717 (isStrictlySorted!308 (toList!800 lt!52782))))

(assert (=> d!28717 (= (insertStrictlySorted!74 (toList!800 lt!52782) (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787))) lt!53647)))

(declare-fun b!105003 () Bool)

(assert (=> b!105003 (= e!68356 call!11033)))

(declare-fun b!105009 () Bool)

(assert (=> b!105009 (= e!68357 (contains!826 lt!53647 (tuple2!2401 (_1!1211 (tuple2!2401 lt!52781 lt!52787)) (_2!1211 (tuple2!2401 lt!52781 lt!52787)))))))

(declare-fun b!105010 () Bool)

(declare-fun res!52325 () Bool)

(assert (=> b!105010 (=> (not res!52325) (not e!68357))))

(assert (=> b!105010 (= res!52325 (containsKey!159 lt!53647 (_1!1211 (tuple2!2401 lt!52781 lt!52787))))))

(assert (= (and d!28717 c!18237) b!105008))

(assert (= (and d!28717 (not c!18237)) b!105001))

(assert (= (and b!105001 c!18236) b!105002))

(assert (= (and b!105001 (not c!18236)) b!105007))

(assert (= (and b!105007 c!18238) b!105003))

(assert (= (and b!105007 (not c!18238)) b!105006))

(assert (= (or b!105003 b!105006) bm!11031))

(assert (= (or b!105002 bm!11031) bm!11030))

(assert (= (or b!105008 bm!11030) bm!11032))

(assert (= (and bm!11032 c!18235) b!105005))

(assert (= (and bm!11032 (not c!18235)) b!105004))

(assert (= (and d!28717 res!52324) b!105010))

(assert (= (and b!105010 res!52325) b!105009))

(declare-fun m!117153 () Bool)

(assert (=> b!105009 m!117153))

(declare-fun m!117155 () Bool)

(assert (=> b!105005 m!117155))

(declare-fun m!117157 () Bool)

(assert (=> bm!11032 m!117157))

(declare-fun m!117159 () Bool)

(assert (=> d!28717 m!117159))

(declare-fun m!117161 () Bool)

(assert (=> d!28717 m!117161))

(declare-fun m!117163 () Bool)

(assert (=> b!105010 m!117163))

(assert (=> d!27943 d!28717))

(declare-fun d!28719 () Bool)

(declare-fun c!18239 () Bool)

(assert (=> d!28719 (= c!18239 (and ((_ is Cons!1607) (t!5673 lt!52765)) (= (_1!1211 (h!2203 (t!5673 lt!52765))) (_1!1211 lt!52540))))))

(declare-fun e!68359 () Option!161)

(assert (=> d!28719 (= (getValueByKey!155 (t!5673 lt!52765) (_1!1211 lt!52540)) e!68359)))

(declare-fun b!105012 () Bool)

(declare-fun e!68360 () Option!161)

(assert (=> b!105012 (= e!68359 e!68360)))

(declare-fun c!18240 () Bool)

(assert (=> b!105012 (= c!18240 (and ((_ is Cons!1607) (t!5673 lt!52765)) (not (= (_1!1211 (h!2203 (t!5673 lt!52765))) (_1!1211 lt!52540)))))))

(declare-fun b!105013 () Bool)

(assert (=> b!105013 (= e!68360 (getValueByKey!155 (t!5673 (t!5673 lt!52765)) (_1!1211 lt!52540)))))

(declare-fun b!105014 () Bool)

(assert (=> b!105014 (= e!68360 None!159)))

(declare-fun b!105011 () Bool)

(assert (=> b!105011 (= e!68359 (Some!160 (_2!1211 (h!2203 (t!5673 lt!52765)))))))

(assert (= (and d!28719 c!18239) b!105011))

(assert (= (and d!28719 (not c!18239)) b!105012))

(assert (= (and b!105012 c!18240) b!105013))

(assert (= (and b!105012 (not c!18240)) b!105014))

(declare-fun m!117165 () Bool)

(assert (=> b!105013 m!117165))

(assert (=> b!103862 d!28719))

(declare-fun d!28721 () Bool)

(declare-fun e!68362 () Bool)

(assert (=> d!28721 e!68362))

(declare-fun res!52326 () Bool)

(assert (=> d!28721 (=> res!52326 e!68362)))

(declare-fun lt!53648 () Bool)

(assert (=> d!28721 (= res!52326 (not lt!53648))))

(declare-fun lt!53649 () Bool)

(assert (=> d!28721 (= lt!53648 lt!53649)))

(declare-fun lt!53650 () Unit!3150)

(declare-fun e!68361 () Unit!3150)

(assert (=> d!28721 (= lt!53650 e!68361)))

(declare-fun c!18241 () Bool)

(assert (=> d!28721 (= c!18241 lt!53649)))

(assert (=> d!28721 (= lt!53649 (containsKey!159 (toList!800 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(assert (=> d!28721 (= (contains!824 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))) lt!53648)))

(declare-fun b!105015 () Bool)

(declare-fun lt!53651 () Unit!3150)

(assert (=> b!105015 (= e!68361 lt!53651)))

(assert (=> b!105015 (= lt!53651 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(assert (=> b!105015 (isDefined!108 (getValueByKey!155 (toList!800 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(declare-fun b!105016 () Bool)

(declare-fun Unit!3222 () Unit!3150)

(assert (=> b!105016 (= e!68361 Unit!3222)))

(declare-fun b!105017 () Bool)

(assert (=> b!105017 (= e!68362 (isDefined!108 (getValueByKey!155 (toList!800 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))) (select (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))))

(assert (= (and d!28721 c!18241) b!105015))

(assert (= (and d!28721 (not c!18241)) b!105016))

(assert (= (and d!28721 (not res!52326)) b!105017))

(assert (=> d!28721 m!114635))

(declare-fun m!117167 () Bool)

(assert (=> d!28721 m!117167))

(assert (=> b!105015 m!114635))

(declare-fun m!117169 () Bool)

(assert (=> b!105015 m!117169))

(assert (=> b!105015 m!114635))

(declare-fun m!117171 () Bool)

(assert (=> b!105015 m!117171))

(assert (=> b!105015 m!117171))

(declare-fun m!117173 () Bool)

(assert (=> b!105015 m!117173))

(assert (=> b!105017 m!114635))

(assert (=> b!105017 m!117171))

(assert (=> b!105017 m!117171))

(assert (=> b!105017 m!117173))

(assert (=> d!27839 d!28721))

(declare-fun d!28723 () Bool)

(declare-fun e!68365 () Bool)

(assert (=> d!28723 e!68365))

(declare-fun res!52329 () Bool)

(assert (=> d!28723 (=> (not res!52329) (not e!68365))))

(assert (=> d!28723 (= res!52329 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 (_keys!4263 newMap!16)))))))

(declare-fun lt!53654 () Unit!3150)

(declare-fun choose!41 (array!4335 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1610) Unit!3150)

(assert (=> d!28723 (= lt!53654 (choose!41 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) lt!52919 lt!52923))))

(assert (=> d!28723 (bvslt (size!2311 (_keys!4263 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!28723 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4263 newMap!16) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) lt!52919 lt!52923) lt!53654)))

(declare-fun b!105020 () Bool)

(assert (=> b!105020 (= e!68365 (arrayNoDuplicates!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) lt!52919 lt!52923))))

(assert (= (and d!28723 res!52329) b!105020))

(assert (=> d!28723 m!114165))

(declare-fun m!117175 () Bool)

(assert (=> d!28723 m!117175))

(assert (=> b!105020 m!114645))

(assert (=> b!105020 m!114627))

(assert (=> d!27839 d!28723))

(declare-fun b!105030 () Bool)

(declare-fun res!52338 () Bool)

(declare-fun e!68371 () Bool)

(assert (=> b!105030 (=> (not res!52338) (not e!68371))))

(assert (=> b!105030 (= res!52338 (validKeyInArray!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!105031 () Bool)

(assert (=> b!105031 (= e!68371 (bvslt (size!2311 (_keys!4263 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun e!68370 () Bool)

(declare-fun b!105032 () Bool)

(assert (=> b!105032 (= e!68370 (= (arrayCountValidKeys!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4263 newMap!16) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun d!28725 () Bool)

(assert (=> d!28725 e!68370))

(declare-fun res!52339 () Bool)

(assert (=> d!28725 (=> (not res!52339) (not e!68370))))

(assert (=> d!28725 (= res!52339 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 (_keys!4263 newMap!16)))))))

(declare-fun lt!53657 () Unit!3150)

(declare-fun choose!1 (array!4335 (_ BitVec 32) (_ BitVec 64)) Unit!3150)

(assert (=> d!28725 (= lt!53657 (choose!1 (_keys!4263 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28725 e!68371))

(declare-fun res!52341 () Bool)

(assert (=> d!28725 (=> (not res!52341) (not e!68371))))

(assert (=> d!28725 (= res!52341 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 (_keys!4263 newMap!16)))))))

(assert (=> d!28725 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4263 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) lt!53657)))

(declare-fun b!105029 () Bool)

(declare-fun res!52340 () Bool)

(assert (=> b!105029 (=> (not res!52340) (not e!68371))))

(assert (=> b!105029 (= res!52340 (not (validKeyInArray!0 (select (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))))

(assert (= (and d!28725 res!52341) b!105029))

(assert (= (and b!105029 res!52340) b!105030))

(assert (= (and b!105030 res!52338) b!105031))

(assert (= (and d!28725 res!52339) b!105032))

(assert (=> b!105030 m!114165))

(assert (=> b!105030 m!114403))

(assert (=> b!105032 m!114645))

(assert (=> b!105032 m!114617))

(assert (=> b!105032 m!114265))

(assert (=> d!28725 m!114165))

(declare-fun m!117177 () Bool)

(assert (=> d!28725 m!117177))

(declare-fun m!117179 () Bool)

(assert (=> b!105029 m!117179))

(assert (=> b!105029 m!117179))

(declare-fun m!117181 () Bool)

(assert (=> b!105029 m!117181))

(assert (=> d!27839 d!28725))

(assert (=> d!27839 d!28677))

(assert (=> d!27839 d!27825))

(declare-fun b!105033 () Bool)

(declare-fun e!68380 () Bool)

(declare-fun e!68381 () Bool)

(assert (=> b!105033 (= e!68380 e!68381)))

(declare-fun res!52350 () Bool)

(declare-fun call!11037 () Bool)

(assert (=> b!105033 (= res!52350 call!11037)))

(assert (=> b!105033 (=> (not res!52350) (not e!68381))))

(declare-fun bm!11033 () Bool)

(declare-fun call!11038 () ListLongMap!1569)

(declare-fun call!11042 () ListLongMap!1569)

(assert (=> bm!11033 (= call!11038 call!11042)))

(declare-fun bm!11034 () Bool)

(declare-fun call!11040 () ListLongMap!1569)

(assert (=> bm!11034 (= call!11040 (getCurrentListMapNoExtraKeys!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!11035 () Bool)

(declare-fun call!11036 () Bool)

(declare-fun lt!53669 () ListLongMap!1569)

(assert (=> bm!11035 (= call!11036 (contains!824 lt!53669 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11036 () Bool)

(declare-fun call!11039 () ListLongMap!1569)

(declare-fun call!11041 () ListLongMap!1569)

(assert (=> bm!11036 (= call!11039 call!11041)))

(declare-fun b!105034 () Bool)

(declare-fun e!68373 () ListLongMap!1569)

(assert (=> b!105034 (= e!68373 (+!141 call!11042 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!105035 () Bool)

(assert (=> b!105035 (= e!68380 (not call!11037))))

(declare-fun b!105036 () Bool)

(declare-fun e!68375 () ListLongMap!1569)

(assert (=> b!105036 (= e!68375 call!11038)))

(declare-fun b!105037 () Bool)

(declare-fun e!68374 () Bool)

(declare-fun e!68378 () Bool)

(assert (=> b!105037 (= e!68374 e!68378)))

(declare-fun res!52346 () Bool)

(assert (=> b!105037 (=> (not res!52346) (not e!68378))))

(assert (=> b!105037 (= res!52346 (contains!824 lt!53669 (select (arr!2057 lt!52914) #b00000000000000000000000000000000)))))

(assert (=> b!105037 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 lt!52914)))))

(declare-fun bm!11037 () Bool)

(assert (=> bm!11037 (= call!11041 call!11040)))

(declare-fun b!105038 () Bool)

(declare-fun e!68376 () Unit!3150)

(declare-fun lt!53664 () Unit!3150)

(assert (=> b!105038 (= e!68376 lt!53664)))

(declare-fun lt!53663 () ListLongMap!1569)

(assert (=> b!105038 (= lt!53663 (getCurrentListMapNoExtraKeys!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53673 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53673 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53672 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53672 (select (arr!2057 lt!52914) #b00000000000000000000000000000000))))

(declare-fun lt!53667 () Unit!3150)

(assert (=> b!105038 (= lt!53667 (addStillContains!73 lt!53663 lt!53673 (zeroValue!2438 newMap!16) lt!53672))))

(assert (=> b!105038 (contains!824 (+!141 lt!53663 (tuple2!2401 lt!53673 (zeroValue!2438 newMap!16))) lt!53672)))

(declare-fun lt!53676 () Unit!3150)

(assert (=> b!105038 (= lt!53676 lt!53667)))

(declare-fun lt!53666 () ListLongMap!1569)

(assert (=> b!105038 (= lt!53666 (getCurrentListMapNoExtraKeys!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53670 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53670 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53675 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53675 (select (arr!2057 lt!52914) #b00000000000000000000000000000000))))

(declare-fun lt!53678 () Unit!3150)

(assert (=> b!105038 (= lt!53678 (addApplyDifferent!73 lt!53666 lt!53670 (minValue!2438 newMap!16) lt!53675))))

(assert (=> b!105038 (= (apply!97 (+!141 lt!53666 (tuple2!2401 lt!53670 (minValue!2438 newMap!16))) lt!53675) (apply!97 lt!53666 lt!53675))))

(declare-fun lt!53660 () Unit!3150)

(assert (=> b!105038 (= lt!53660 lt!53678)))

(declare-fun lt!53659 () ListLongMap!1569)

(assert (=> b!105038 (= lt!53659 (getCurrentListMapNoExtraKeys!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53668 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53668 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53671 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53671 (select (arr!2057 lt!52914) #b00000000000000000000000000000000))))

(declare-fun lt!53679 () Unit!3150)

(assert (=> b!105038 (= lt!53679 (addApplyDifferent!73 lt!53659 lt!53668 (zeroValue!2438 newMap!16) lt!53671))))

(assert (=> b!105038 (= (apply!97 (+!141 lt!53659 (tuple2!2401 lt!53668 (zeroValue!2438 newMap!16))) lt!53671) (apply!97 lt!53659 lt!53671))))

(declare-fun lt!53677 () Unit!3150)

(assert (=> b!105038 (= lt!53677 lt!53679)))

(declare-fun lt!53658 () ListLongMap!1569)

(assert (=> b!105038 (= lt!53658 (getCurrentListMapNoExtraKeys!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53665 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53665 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53674 () (_ BitVec 64))

(assert (=> b!105038 (= lt!53674 (select (arr!2057 lt!52914) #b00000000000000000000000000000000))))

(assert (=> b!105038 (= lt!53664 (addApplyDifferent!73 lt!53658 lt!53665 (minValue!2438 newMap!16) lt!53674))))

(assert (=> b!105038 (= (apply!97 (+!141 lt!53658 (tuple2!2401 lt!53665 (minValue!2438 newMap!16))) lt!53674) (apply!97 lt!53658 lt!53674))))

(declare-fun b!105039 () Bool)

(declare-fun e!68372 () Bool)

(assert (=> b!105039 (= e!68372 (not call!11036))))

(declare-fun b!105040 () Bool)

(declare-fun e!68384 () ListLongMap!1569)

(assert (=> b!105040 (= e!68384 call!11038)))

(declare-fun b!105041 () Bool)

(assert (=> b!105041 (= e!68384 call!11039)))

(declare-fun b!105042 () Bool)

(declare-fun c!18242 () Bool)

(assert (=> b!105042 (= c!18242 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105042 (= e!68375 e!68384)))

(declare-fun b!105043 () Bool)

(declare-fun e!68383 () Bool)

(assert (=> b!105043 (= e!68372 e!68383)))

(declare-fun res!52344 () Bool)

(assert (=> b!105043 (= res!52344 call!11036)))

(assert (=> b!105043 (=> (not res!52344) (not e!68383))))

(declare-fun b!105044 () Bool)

(assert (=> b!105044 (= e!68378 (= (apply!97 lt!53669 (select (arr!2057 lt!52914) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 lt!52917) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105044 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 lt!52917)))))

(assert (=> b!105044 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 lt!52914)))))

(declare-fun b!105045 () Bool)

(declare-fun res!52348 () Bool)

(declare-fun e!68382 () Bool)

(assert (=> b!105045 (=> (not res!52348) (not e!68382))))

(assert (=> b!105045 (= res!52348 e!68380)))

(declare-fun c!18245 () Bool)

(assert (=> b!105045 (= c!18245 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28727 () Bool)

(assert (=> d!28727 e!68382))

(declare-fun res!52349 () Bool)

(assert (=> d!28727 (=> (not res!52349) (not e!68382))))

(assert (=> d!28727 (= res!52349 (or (bvsge #b00000000000000000000000000000000 (size!2311 lt!52914)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 lt!52914)))))))

(declare-fun lt!53661 () ListLongMap!1569)

(assert (=> d!28727 (= lt!53669 lt!53661)))

(declare-fun lt!53662 () Unit!3150)

(assert (=> d!28727 (= lt!53662 e!68376)))

(declare-fun c!18246 () Bool)

(declare-fun e!68377 () Bool)

(assert (=> d!28727 (= c!18246 e!68377)))

(declare-fun res!52347 () Bool)

(assert (=> d!28727 (=> (not res!52347) (not e!68377))))

(assert (=> d!28727 (= res!52347 (bvslt #b00000000000000000000000000000000 (size!2311 lt!52914)))))

(assert (=> d!28727 (= lt!53661 e!68373)))

(declare-fun c!18243 () Bool)

(assert (=> d!28727 (= c!18243 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28727 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28727 (= (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53669)))

(declare-fun bm!11038 () Bool)

(declare-fun c!18247 () Bool)

(assert (=> bm!11038 (= call!11042 (+!141 (ite c!18243 call!11040 (ite c!18247 call!11041 call!11039)) (ite (or c!18243 c!18247) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!105046 () Bool)

(assert (=> b!105046 (= e!68381 (= (apply!97 lt!53669 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!105047 () Bool)

(assert (=> b!105047 (= e!68382 e!68372)))

(declare-fun c!18244 () Bool)

(assert (=> b!105047 (= c!18244 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105048 () Bool)

(assert (=> b!105048 (= e!68377 (validKeyInArray!0 (select (arr!2057 lt!52914) #b00000000000000000000000000000000)))))

(declare-fun b!105049 () Bool)

(declare-fun res!52343 () Bool)

(assert (=> b!105049 (=> (not res!52343) (not e!68382))))

(assert (=> b!105049 (= res!52343 e!68374)))

(declare-fun res!52345 () Bool)

(assert (=> b!105049 (=> res!52345 e!68374)))

(declare-fun e!68379 () Bool)

(assert (=> b!105049 (= res!52345 (not e!68379))))

(declare-fun res!52342 () Bool)

(assert (=> b!105049 (=> (not res!52342) (not e!68379))))

(assert (=> b!105049 (= res!52342 (bvslt #b00000000000000000000000000000000 (size!2311 lt!52914)))))

(declare-fun b!105050 () Bool)

(assert (=> b!105050 (= e!68373 e!68375)))

(assert (=> b!105050 (= c!18247 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105051 () Bool)

(declare-fun Unit!3223 () Unit!3150)

(assert (=> b!105051 (= e!68376 Unit!3223)))

(declare-fun b!105052 () Bool)

(assert (=> b!105052 (= e!68383 (= (apply!97 lt!53669 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!105053 () Bool)

(assert (=> b!105053 (= e!68379 (validKeyInArray!0 (select (arr!2057 lt!52914) #b00000000000000000000000000000000)))))

(declare-fun bm!11039 () Bool)

(assert (=> bm!11039 (= call!11037 (contains!824 lt!53669 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28727 c!18243) b!105034))

(assert (= (and d!28727 (not c!18243)) b!105050))

(assert (= (and b!105050 c!18247) b!105036))

(assert (= (and b!105050 (not c!18247)) b!105042))

(assert (= (and b!105042 c!18242) b!105040))

(assert (= (and b!105042 (not c!18242)) b!105041))

(assert (= (or b!105040 b!105041) bm!11036))

(assert (= (or b!105036 bm!11036) bm!11037))

(assert (= (or b!105036 b!105040) bm!11033))

(assert (= (or b!105034 bm!11037) bm!11034))

(assert (= (or b!105034 bm!11033) bm!11038))

(assert (= (and d!28727 res!52347) b!105048))

(assert (= (and d!28727 c!18246) b!105038))

(assert (= (and d!28727 (not c!18246)) b!105051))

(assert (= (and d!28727 res!52349) b!105049))

(assert (= (and b!105049 res!52342) b!105053))

(assert (= (and b!105049 (not res!52345)) b!105037))

(assert (= (and b!105037 res!52346) b!105044))

(assert (= (and b!105049 res!52343) b!105045))

(assert (= (and b!105045 c!18245) b!105033))

(assert (= (and b!105045 (not c!18245)) b!105035))

(assert (= (and b!105033 res!52350) b!105046))

(assert (= (or b!105033 b!105035) bm!11039))

(assert (= (and b!105045 res!52348) b!105047))

(assert (= (and b!105047 c!18244) b!105043))

(assert (= (and b!105047 (not c!18244)) b!105039))

(assert (= (and b!105043 res!52344) b!105052))

(assert (= (or b!105043 b!105039) bm!11035))

(declare-fun b_lambda!4681 () Bool)

(assert (=> (not b_lambda!4681) (not b!105044)))

(assert (=> b!105044 t!5681))

(declare-fun b_and!6487 () Bool)

(assert (= b_and!6483 (and (=> t!5681 result!3435) b_and!6487)))

(assert (=> b!105044 t!5683))

(declare-fun b_and!6489 () Bool)

(assert (= b_and!6485 (and (=> t!5683 result!3437) b_and!6489)))

(declare-fun m!117183 () Bool)

(assert (=> b!105053 m!117183))

(assert (=> b!105053 m!117183))

(declare-fun m!117185 () Bool)

(assert (=> b!105053 m!117185))

(declare-fun m!117187 () Bool)

(assert (=> bm!11034 m!117187))

(assert (=> b!105037 m!117183))

(assert (=> b!105037 m!117183))

(declare-fun m!117189 () Bool)

(assert (=> b!105037 m!117189))

(declare-fun m!117191 () Bool)

(assert (=> bm!11035 m!117191))

(declare-fun m!117193 () Bool)

(assert (=> b!105044 m!117193))

(assert (=> b!105044 m!117193))

(assert (=> b!105044 m!114537))

(declare-fun m!117195 () Bool)

(assert (=> b!105044 m!117195))

(assert (=> b!105044 m!117183))

(assert (=> b!105044 m!117183))

(declare-fun m!117197 () Bool)

(assert (=> b!105044 m!117197))

(assert (=> b!105044 m!114537))

(declare-fun m!117199 () Bool)

(assert (=> b!105034 m!117199))

(declare-fun m!117201 () Bool)

(assert (=> b!105038 m!117201))

(declare-fun m!117203 () Bool)

(assert (=> b!105038 m!117203))

(declare-fun m!117205 () Bool)

(assert (=> b!105038 m!117205))

(declare-fun m!117207 () Bool)

(assert (=> b!105038 m!117207))

(declare-fun m!117209 () Bool)

(assert (=> b!105038 m!117209))

(declare-fun m!117211 () Bool)

(assert (=> b!105038 m!117211))

(declare-fun m!117213 () Bool)

(assert (=> b!105038 m!117213))

(declare-fun m!117215 () Bool)

(assert (=> b!105038 m!117215))

(assert (=> b!105038 m!117183))

(assert (=> b!105038 m!117201))

(declare-fun m!117217 () Bool)

(assert (=> b!105038 m!117217))

(assert (=> b!105038 m!117215))

(declare-fun m!117219 () Bool)

(assert (=> b!105038 m!117219))

(assert (=> b!105038 m!117207))

(declare-fun m!117221 () Bool)

(assert (=> b!105038 m!117221))

(declare-fun m!117223 () Bool)

(assert (=> b!105038 m!117223))

(declare-fun m!117225 () Bool)

(assert (=> b!105038 m!117225))

(assert (=> b!105038 m!117187))

(declare-fun m!117227 () Bool)

(assert (=> b!105038 m!117227))

(assert (=> b!105038 m!117211))

(declare-fun m!117229 () Bool)

(assert (=> b!105038 m!117229))

(assert (=> d!28727 m!114575))

(declare-fun m!117231 () Bool)

(assert (=> bm!11039 m!117231))

(declare-fun m!117233 () Bool)

(assert (=> b!105052 m!117233))

(assert (=> b!105048 m!117183))

(assert (=> b!105048 m!117183))

(assert (=> b!105048 m!117185))

(declare-fun m!117235 () Bool)

(assert (=> b!105046 m!117235))

(declare-fun m!117237 () Bool)

(assert (=> bm!11038 m!117237))

(assert (=> d!27839 d!28727))

(assert (=> d!27839 d!28011))

(declare-fun bm!11040 () Bool)

(declare-fun call!11043 () Bool)

(assert (=> bm!11040 (= call!11043 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (mask!6697 newMap!16)))))

(declare-fun b!105054 () Bool)

(declare-fun e!68386 () Bool)

(declare-fun e!68387 () Bool)

(assert (=> b!105054 (= e!68386 e!68387)))

(declare-fun lt!53682 () (_ BitVec 64))

(assert (=> b!105054 (= lt!53682 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53680 () Unit!3150)

(assert (=> b!105054 (= lt!53680 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) lt!53682 #b00000000000000000000000000000000))))

(assert (=> b!105054 (arrayContainsKey!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) lt!53682 #b00000000000000000000000000000000)))

(declare-fun lt!53681 () Unit!3150)

(assert (=> b!105054 (= lt!53681 lt!53680)))

(declare-fun res!52352 () Bool)

(assert (=> b!105054 (= res!52352 (= (seekEntryOrOpen!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000) (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (mask!6697 newMap!16)) (Found!258 #b00000000000000000000000000000000)))))

(assert (=> b!105054 (=> (not res!52352) (not e!68387))))

(declare-fun d!28729 () Bool)

(declare-fun res!52351 () Bool)

(declare-fun e!68385 () Bool)

(assert (=> d!28729 (=> res!52351 e!68385)))

(assert (=> d!28729 (= res!52351 (bvsge #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(assert (=> d!28729 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (mask!6697 newMap!16)) e!68385)))

(declare-fun b!105055 () Bool)

(assert (=> b!105055 (= e!68386 call!11043)))

(declare-fun b!105056 () Bool)

(assert (=> b!105056 (= e!68387 call!11043)))

(declare-fun b!105057 () Bool)

(assert (=> b!105057 (= e!68385 e!68386)))

(declare-fun c!18248 () Bool)

(assert (=> b!105057 (= c!18248 (validKeyInArray!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!28729 (not res!52351)) b!105057))

(assert (= (and b!105057 c!18248) b!105054))

(assert (= (and b!105057 (not c!18248)) b!105055))

(assert (= (and b!105054 res!52352) b!105056))

(assert (= (or b!105056 b!105055) bm!11040))

(declare-fun m!117239 () Bool)

(assert (=> bm!11040 m!117239))

(declare-fun m!117241 () Bool)

(assert (=> b!105054 m!117241))

(declare-fun m!117243 () Bool)

(assert (=> b!105054 m!117243))

(declare-fun m!117245 () Bool)

(assert (=> b!105054 m!117245))

(assert (=> b!105054 m!117241))

(declare-fun m!117247 () Bool)

(assert (=> b!105054 m!117247))

(assert (=> b!105057 m!117241))

(assert (=> b!105057 m!117241))

(declare-fun m!117249 () Bool)

(assert (=> b!105057 m!117249))

(assert (=> d!27839 d!28729))

(assert (=> d!27839 d!27931))

(declare-fun b!105058 () Bool)

(declare-fun e!68389 () (_ BitVec 32))

(declare-fun call!11044 () (_ BitVec 32))

(assert (=> b!105058 (= e!68389 call!11044)))

(declare-fun b!105059 () Bool)

(assert (=> b!105059 (= e!68389 (bvadd #b00000000000000000000000000000001 call!11044))))

(declare-fun b!105060 () Bool)

(declare-fun e!68388 () (_ BitVec 32))

(assert (=> b!105060 (= e!68388 e!68389)))

(declare-fun c!18250 () Bool)

(assert (=> b!105060 (= c!18250 (validKeyInArray!0 (select (arr!2057 lt!52910) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(declare-fun d!28731 () Bool)

(declare-fun lt!53683 () (_ BitVec 32))

(assert (=> d!28731 (and (bvsge lt!53683 #b00000000000000000000000000000000) (bvsle lt!53683 (bvsub (size!2311 lt!52910) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(assert (=> d!28731 (= lt!53683 e!68388)))

(declare-fun c!18249 () Bool)

(assert (=> d!28731 (= c!18249 (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001)))))

(assert (=> d!28731 (and (bvsle (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001)) (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001) (size!2311 lt!52910)))))

(assert (=> d!28731 (= (arrayCountValidKeys!0 lt!52910 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001)) lt!53683)))

(declare-fun b!105061 () Bool)

(assert (=> b!105061 (= e!68388 #b00000000000000000000000000000000)))

(declare-fun bm!11041 () Bool)

(assert (=> bm!11041 (= call!11044 (arrayCountValidKeys!0 lt!52910 (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001) (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001)))))

(assert (= (and d!28731 c!18249) b!105061))

(assert (= (and d!28731 (not c!18249)) b!105060))

(assert (= (and b!105060 c!18250) b!105059))

(assert (= (and b!105060 (not c!18250)) b!105058))

(assert (= (or b!105059 b!105058) bm!11041))

(declare-fun m!117251 () Bool)

(assert (=> b!105060 m!117251))

(assert (=> b!105060 m!117251))

(declare-fun m!117253 () Bool)

(assert (=> b!105060 m!117253))

(declare-fun m!117255 () Bool)

(assert (=> bm!11041 m!117255))

(assert (=> d!27839 d!28731))

(declare-fun b!105062 () Bool)

(declare-fun e!68391 () Bool)

(declare-fun call!11045 () Bool)

(assert (=> b!105062 (= e!68391 call!11045)))

(declare-fun b!105063 () Bool)

(declare-fun e!68392 () Bool)

(assert (=> b!105063 (= e!68392 (contains!825 lt!52923 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) lt!52919)))))

(declare-fun b!105064 () Bool)

(assert (=> b!105064 (= e!68391 call!11045)))

(declare-fun b!105065 () Bool)

(declare-fun e!68393 () Bool)

(assert (=> b!105065 (= e!68393 e!68391)))

(declare-fun c!18251 () Bool)

(assert (=> b!105065 (= c!18251 (validKeyInArray!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) lt!52919)))))

(declare-fun d!28733 () Bool)

(declare-fun res!52355 () Bool)

(declare-fun e!68390 () Bool)

(assert (=> d!28733 (=> res!52355 e!68390)))

(assert (=> d!28733 (= res!52355 (bvsge lt!52919 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(assert (=> d!28733 (= (arrayNoDuplicates!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) lt!52919 lt!52923) e!68390)))

(declare-fun bm!11042 () Bool)

(assert (=> bm!11042 (= call!11045 (arrayNoDuplicates!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (bvadd lt!52919 #b00000000000000000000000000000001) (ite c!18251 (Cons!1606 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) lt!52919) lt!52923) lt!52923)))))

(declare-fun b!105066 () Bool)

(assert (=> b!105066 (= e!68390 e!68393)))

(declare-fun res!52354 () Bool)

(assert (=> b!105066 (=> (not res!52354) (not e!68393))))

(assert (=> b!105066 (= res!52354 (not e!68392))))

(declare-fun res!52353 () Bool)

(assert (=> b!105066 (=> (not res!52353) (not e!68392))))

(assert (=> b!105066 (= res!52353 (validKeyInArray!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) lt!52919)))))

(assert (= (and d!28733 (not res!52355)) b!105066))

(assert (= (and b!105066 res!52353) b!105063))

(assert (= (and b!105066 res!52354) b!105065))

(assert (= (and b!105065 c!18251) b!105062))

(assert (= (and b!105065 (not c!18251)) b!105064))

(assert (= (or b!105062 b!105064) bm!11042))

(declare-fun m!117257 () Bool)

(assert (=> b!105063 m!117257))

(assert (=> b!105063 m!117257))

(declare-fun m!117259 () Bool)

(assert (=> b!105063 m!117259))

(assert (=> b!105065 m!117257))

(assert (=> b!105065 m!117257))

(declare-fun m!117261 () Bool)

(assert (=> b!105065 m!117261))

(assert (=> bm!11042 m!117257))

(declare-fun m!117263 () Bool)

(assert (=> bm!11042 m!117263))

(assert (=> b!105066 m!117257))

(assert (=> b!105066 m!117257))

(assert (=> b!105066 m!117261))

(assert (=> d!27839 d!28733))

(declare-fun d!28735 () Bool)

(declare-fun e!68396 () Bool)

(assert (=> d!28735 e!68396))

(declare-fun res!52358 () Bool)

(assert (=> d!28735 (=> (not res!52358) (not e!68396))))

(assert (=> d!28735 (= res!52358 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 (_keys!4263 newMap!16)))))))

(declare-fun lt!53686 () Unit!3150)

(declare-fun choose!102 ((_ BitVec 64) array!4335 (_ BitVec 32) (_ BitVec 32)) Unit!3150)

(assert (=> d!28735 (= lt!53686 (choose!102 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (mask!6697 newMap!16)))))

(assert (=> d!28735 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28735 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (mask!6697 newMap!16)) lt!53686)))

(declare-fun b!105069 () Bool)

(assert (=> b!105069 (= e!68396 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (mask!6697 newMap!16)))))

(assert (= (and d!28735 res!52358) b!105069))

(assert (=> d!28735 m!114165))

(declare-fun m!117265 () Bool)

(assert (=> d!28735 m!117265))

(assert (=> d!28735 m!114575))

(assert (=> b!105069 m!114645))

(assert (=> b!105069 m!114639))

(assert (=> d!27839 d!28735))

(declare-fun d!28737 () Bool)

(assert (=> d!28737 (arrayContainsKey!0 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!53687 () Unit!3150)

(assert (=> d!28737 (= lt!53687 (choose!13 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))

(assert (=> d!28737 (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000)))

(assert (=> d!28737 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))) lt!53687)))

(declare-fun bs!4331 () Bool)

(assert (= bs!4331 d!28737))

(assert (=> bs!4331 m!114165))

(assert (=> bs!4331 m!114619))

(assert (=> bs!4331 m!114165))

(declare-fun m!117267 () Bool)

(assert (=> bs!4331 m!117267))

(assert (=> d!27839 d!28737))

(declare-fun d!28739 () Bool)

(declare-fun e!68399 () Bool)

(assert (=> d!28739 e!68399))

(declare-fun res!52361 () Bool)

(assert (=> d!28739 (=> (not res!52361) (not e!68399))))

(assert (=> d!28739 (= res!52361 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 (_keys!4263 newMap!16))) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2312 (_values!2544 newMap!16)))))))

(declare-fun lt!53690 () Unit!3150)

(declare-fun choose!651 (array!4335 array!4337 (_ BitVec 32) (_ BitVec 32) V!3211 V!3211 (_ BitVec 32) (_ BitVec 64) V!3211 Int) Unit!3150)

(assert (=> d!28739 (= lt!53690 (choose!651 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)))))

(assert (=> d!28739 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28739 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!29 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542 (defaultEntry!2561 newMap!16)) lt!53690)))

(declare-fun b!105072 () Bool)

(assert (=> b!105072 (= e!68399 (= (+!141 (getCurrentListMap!487 (_keys!4263 newMap!16) (_values!2544 newMap!16) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)) (getCurrentListMap!487 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16))))))

(assert (= (and d!28739 res!52361) b!105072))

(assert (=> d!28739 m!114165))

(declare-fun m!117269 () Bool)

(assert (=> d!28739 m!117269))

(assert (=> d!28739 m!114575))

(assert (=> b!105072 m!114623))

(assert (=> b!105072 m!114637))

(assert (=> b!105072 m!114331))

(assert (=> b!105072 m!114633))

(assert (=> b!105072 m!114331))

(assert (=> b!105072 m!114645))

(assert (=> d!27839 d!28739))

(declare-fun d!28741 () Bool)

(declare-fun res!52362 () Bool)

(declare-fun e!68400 () Bool)

(assert (=> d!28741 (=> res!52362 e!68400)))

(assert (=> d!28741 (= res!52362 (= (select (arr!2057 lt!52918) #b00000000000000000000000000000000) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(assert (=> d!28741 (= (arrayContainsKey!0 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) #b00000000000000000000000000000000) e!68400)))

(declare-fun b!105073 () Bool)

(declare-fun e!68401 () Bool)

(assert (=> b!105073 (= e!68400 e!68401)))

(declare-fun res!52363 () Bool)

(assert (=> b!105073 (=> (not res!52363) (not e!68401))))

(assert (=> b!105073 (= res!52363 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 lt!52918)))))

(declare-fun b!105074 () Bool)

(assert (=> b!105074 (= e!68401 (arrayContainsKey!0 lt!52918 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!28741 (not res!52362)) b!105073))

(assert (= (and b!105073 res!52363) b!105074))

(declare-fun m!117271 () Bool)

(assert (=> d!28741 m!117271))

(assert (=> b!105074 m!114165))

(declare-fun m!117273 () Bool)

(assert (=> b!105074 m!117273))

(assert (=> d!27839 d!28741))

(declare-fun b!105075 () Bool)

(declare-fun e!68403 () (_ BitVec 32))

(declare-fun call!11046 () (_ BitVec 32))

(assert (=> b!105075 (= e!68403 call!11046)))

(declare-fun b!105076 () Bool)

(assert (=> b!105076 (= e!68403 (bvadd #b00000000000000000000000000000001 call!11046))))

(declare-fun b!105077 () Bool)

(declare-fun e!68402 () (_ BitVec 32))

(assert (=> b!105077 (= e!68402 e!68403)))

(declare-fun c!18253 () Bool)

(assert (=> b!105077 (= c!18253 (validKeyInArray!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun d!28743 () Bool)

(declare-fun lt!53691 () (_ BitVec 32))

(assert (=> d!28743 (and (bvsge lt!53691 #b00000000000000000000000000000000) (bvsle lt!53691 (bvsub (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> d!28743 (= lt!53691 e!68402)))

(declare-fun c!18252 () Bool)

(assert (=> d!28743 (= c!18252 (bvsge #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))))))

(assert (=> d!28743 (and (bvsle #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2311 (_keys!4263 newMap!16)) (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(assert (=> d!28743 (= (arrayCountValidKeys!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) #b00000000000000000000000000000000 (size!2311 (_keys!4263 newMap!16))) lt!53691)))

(declare-fun b!105078 () Bool)

(assert (=> b!105078 (= e!68402 #b00000000000000000000000000000000)))

(declare-fun bm!11043 () Bool)

(assert (=> bm!11043 (= call!11046 (arrayCountValidKeys!0 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2311 (_keys!4263 newMap!16))))))

(assert (= (and d!28743 c!18252) b!105078))

(assert (= (and d!28743 (not c!18252)) b!105077))

(assert (= (and b!105077 c!18253) b!105076))

(assert (= (and b!105077 (not c!18253)) b!105075))

(assert (= (or b!105076 b!105075) bm!11043))

(assert (=> b!105077 m!117241))

(assert (=> b!105077 m!117241))

(assert (=> b!105077 m!117249))

(declare-fun m!117275 () Bool)

(assert (=> bm!11043 m!117275))

(assert (=> d!27839 d!28743))

(declare-fun d!28745 () Bool)

(assert (=> d!28745 (= (arrayCountValidKeys!0 lt!52910 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (bvadd (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!53694 () Unit!3150)

(declare-fun choose!2 (array!4335 (_ BitVec 32)) Unit!3150)

(assert (=> d!28745 (= lt!53694 (choose!2 lt!52910 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))))))

(declare-fun e!68406 () Bool)

(assert (=> d!28745 e!68406))

(declare-fun res!52368 () Bool)

(assert (=> d!28745 (=> (not res!52368) (not e!68406))))

(assert (=> d!28745 (= res!52368 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 lt!52910))))))

(assert (=> d!28745 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!52910 (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655))) lt!53694)))

(declare-fun b!105083 () Bool)

(declare-fun res!52369 () Bool)

(assert (=> b!105083 (=> (not res!52369) (not e!68406))))

(assert (=> b!105083 (= res!52369 (validKeyInArray!0 (select (arr!2057 lt!52910) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(declare-fun b!105084 () Bool)

(assert (=> b!105084 (= e!68406 (bvslt (size!2311 lt!52910) #b01111111111111111111111111111111))))

(assert (= (and d!28745 res!52368) b!105083))

(assert (= (and b!105083 res!52369) b!105084))

(assert (=> d!28745 m!114629))

(declare-fun m!117277 () Bool)

(assert (=> d!28745 m!117277))

(assert (=> b!105083 m!117251))

(assert (=> b!105083 m!117251))

(assert (=> b!105083 m!117253))

(assert (=> d!27839 d!28745))

(assert (=> d!27839 d!27765))

(declare-fun d!28747 () Bool)

(declare-fun e!68407 () Bool)

(assert (=> d!28747 e!68407))

(declare-fun res!52370 () Bool)

(assert (=> d!28747 (=> (not res!52370) (not e!68407))))

(assert (=> d!28747 (= res!52370 (and (bvsge (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) #b00000000000000000000000000000000) (bvslt (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (size!2311 lt!52914))))))

(declare-fun lt!53695 () Unit!3150)

(assert (=> d!28747 (= lt!53695 (choose!641 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (defaultEntry!2561 newMap!16)))))

(assert (=> d!28747 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28747 (= (lemmaValidKeyInArrayIsInListMap!107 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (defaultEntry!2561 newMap!16)) lt!53695)))

(declare-fun b!105085 () Bool)

(assert (=> b!105085 (= e!68407 (contains!824 (getCurrentListMap!487 lt!52914 lt!52917 (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) (select (arr!2057 lt!52914) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)))))))

(assert (= (and d!28747 res!52370) b!105085))

(declare-fun m!117279 () Bool)

(assert (=> d!28747 m!117279))

(assert (=> d!28747 m!114575))

(assert (=> b!105085 m!114621))

(declare-fun m!117281 () Bool)

(assert (=> b!105085 m!117281))

(assert (=> b!105085 m!114621))

(assert (=> b!105085 m!117281))

(declare-fun m!117283 () Bool)

(assert (=> b!105085 m!117283))

(assert (=> d!27839 d!28747))

(declare-fun b!105086 () Bool)

(declare-fun e!68416 () Bool)

(declare-fun e!68417 () Bool)

(assert (=> b!105086 (= e!68416 e!68417)))

(declare-fun res!52379 () Bool)

(declare-fun call!11048 () Bool)

(assert (=> b!105086 (= res!52379 call!11048)))

(assert (=> b!105086 (=> (not res!52379) (not e!68417))))

(declare-fun bm!11044 () Bool)

(declare-fun call!11049 () ListLongMap!1569)

(declare-fun call!11053 () ListLongMap!1569)

(assert (=> bm!11044 (= call!11049 call!11053)))

(declare-fun call!11051 () ListLongMap!1569)

(declare-fun bm!11045 () Bool)

(assert (=> bm!11045 (= call!11051 (getCurrentListMapNoExtraKeys!107 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun bm!11046 () Bool)

(declare-fun call!11047 () Bool)

(declare-fun lt!53707 () ListLongMap!1569)

(assert (=> bm!11046 (= call!11047 (contains!824 lt!53707 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!11047 () Bool)

(declare-fun call!11050 () ListLongMap!1569)

(declare-fun call!11052 () ListLongMap!1569)

(assert (=> bm!11047 (= call!11050 call!11052)))

(declare-fun b!105087 () Bool)

(declare-fun e!68409 () ListLongMap!1569)

(assert (=> b!105087 (= e!68409 (+!141 call!11053 (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16))))))

(declare-fun b!105088 () Bool)

(assert (=> b!105088 (= e!68416 (not call!11048))))

(declare-fun b!105089 () Bool)

(declare-fun e!68411 () ListLongMap!1569)

(assert (=> b!105089 (= e!68411 call!11049)))

(declare-fun b!105090 () Bool)

(declare-fun e!68410 () Bool)

(declare-fun e!68414 () Bool)

(assert (=> b!105090 (= e!68410 e!68414)))

(declare-fun res!52375 () Bool)

(assert (=> b!105090 (=> (not res!52375) (not e!68414))))

(assert (=> b!105090 (= res!52375 (contains!824 lt!53707 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!105090 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun bm!11048 () Bool)

(assert (=> bm!11048 (= call!11052 call!11051)))

(declare-fun b!105091 () Bool)

(declare-fun e!68412 () Unit!3150)

(declare-fun lt!53702 () Unit!3150)

(assert (=> b!105091 (= e!68412 lt!53702)))

(declare-fun lt!53701 () ListLongMap!1569)

(assert (=> b!105091 (= lt!53701 (getCurrentListMapNoExtraKeys!107 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53711 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53711 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53710 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53710 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53705 () Unit!3150)

(assert (=> b!105091 (= lt!53705 (addStillContains!73 lt!53701 lt!53711 (zeroValue!2438 newMap!16) lt!53710))))

(assert (=> b!105091 (contains!824 (+!141 lt!53701 (tuple2!2401 lt!53711 (zeroValue!2438 newMap!16))) lt!53710)))

(declare-fun lt!53714 () Unit!3150)

(assert (=> b!105091 (= lt!53714 lt!53705)))

(declare-fun lt!53704 () ListLongMap!1569)

(assert (=> b!105091 (= lt!53704 (getCurrentListMapNoExtraKeys!107 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53708 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53708 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53713 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53713 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53716 () Unit!3150)

(assert (=> b!105091 (= lt!53716 (addApplyDifferent!73 lt!53704 lt!53708 (minValue!2438 newMap!16) lt!53713))))

(assert (=> b!105091 (= (apply!97 (+!141 lt!53704 (tuple2!2401 lt!53708 (minValue!2438 newMap!16))) lt!53713) (apply!97 lt!53704 lt!53713))))

(declare-fun lt!53698 () Unit!3150)

(assert (=> b!105091 (= lt!53698 lt!53716)))

(declare-fun lt!53697 () ListLongMap!1569)

(assert (=> b!105091 (= lt!53697 (getCurrentListMapNoExtraKeys!107 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53706 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53706 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53709 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53709 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!53717 () Unit!3150)

(assert (=> b!105091 (= lt!53717 (addApplyDifferent!73 lt!53697 lt!53706 (zeroValue!2438 newMap!16) lt!53709))))

(assert (=> b!105091 (= (apply!97 (+!141 lt!53697 (tuple2!2401 lt!53706 (zeroValue!2438 newMap!16))) lt!53709) (apply!97 lt!53697 lt!53709))))

(declare-fun lt!53715 () Unit!3150)

(assert (=> b!105091 (= lt!53715 lt!53717)))

(declare-fun lt!53696 () ListLongMap!1569)

(assert (=> b!105091 (= lt!53696 (getCurrentListMapNoExtraKeys!107 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)))))

(declare-fun lt!53703 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53703 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!53712 () (_ BitVec 64))

(assert (=> b!105091 (= lt!53712 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!105091 (= lt!53702 (addApplyDifferent!73 lt!53696 lt!53703 (minValue!2438 newMap!16) lt!53712))))

(assert (=> b!105091 (= (apply!97 (+!141 lt!53696 (tuple2!2401 lt!53703 (minValue!2438 newMap!16))) lt!53712) (apply!97 lt!53696 lt!53712))))

(declare-fun b!105092 () Bool)

(declare-fun e!68408 () Bool)

(assert (=> b!105092 (= e!68408 (not call!11047))))

(declare-fun b!105093 () Bool)

(declare-fun e!68420 () ListLongMap!1569)

(assert (=> b!105093 (= e!68420 call!11049)))

(declare-fun b!105094 () Bool)

(assert (=> b!105094 (= e!68420 call!11050)))

(declare-fun b!105095 () Bool)

(declare-fun c!18254 () Bool)

(assert (=> b!105095 (= c!18254 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!105095 (= e!68411 e!68420)))

(declare-fun b!105096 () Bool)

(declare-fun e!68419 () Bool)

(assert (=> b!105096 (= e!68408 e!68419)))

(declare-fun res!52373 () Bool)

(assert (=> b!105096 (= res!52373 call!11047)))

(assert (=> b!105096 (=> (not res!52373) (not e!68419))))

(declare-fun b!105097 () Bool)

(assert (=> b!105097 (= e!68414 (= (apply!97 lt!53707 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)) (get!1323 (select (arr!2058 (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!383 (defaultEntry!2561 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!105097 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2312 (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))))))))

(assert (=> b!105097 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun b!105098 () Bool)

(declare-fun res!52377 () Bool)

(declare-fun e!68418 () Bool)

(assert (=> b!105098 (=> (not res!52377) (not e!68418))))

(assert (=> b!105098 (= res!52377 e!68416)))

(declare-fun c!18257 () Bool)

(assert (=> b!105098 (= c!18257 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun d!28749 () Bool)

(assert (=> d!28749 e!68418))

(declare-fun res!52378 () Bool)

(assert (=> d!28749 (=> (not res!52378) (not e!68418))))

(assert (=> d!28749 (= res!52378 (or (bvsge #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))))

(declare-fun lt!53699 () ListLongMap!1569)

(assert (=> d!28749 (= lt!53707 lt!53699)))

(declare-fun lt!53700 () Unit!3150)

(assert (=> d!28749 (= lt!53700 e!68412)))

(declare-fun c!18258 () Bool)

(declare-fun e!68413 () Bool)

(assert (=> d!28749 (= c!18258 e!68413)))

(declare-fun res!52376 () Bool)

(assert (=> d!28749 (=> (not res!52376) (not e!68413))))

(assert (=> d!28749 (= res!52376 (bvslt #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(assert (=> d!28749 (= lt!53699 e!68409)))

(declare-fun c!18255 () Bool)

(assert (=> d!28749 (= c!18255 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!28749 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28749 (= (getCurrentListMap!487 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))) (array!4338 (store (arr!2058 (_values!2544 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (ValueCellFull!993 lt!52542)) (size!2312 (_values!2544 newMap!16))) (mask!6697 newMap!16) (extraKeys!2370 newMap!16) (zeroValue!2438 newMap!16) (minValue!2438 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2561 newMap!16)) lt!53707)))

(declare-fun c!18259 () Bool)

(declare-fun bm!11049 () Bool)

(assert (=> bm!11049 (= call!11053 (+!141 (ite c!18255 call!11051 (ite c!18259 call!11052 call!11050)) (ite (or c!18255 c!18259) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 newMap!16)) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2438 newMap!16)))))))

(declare-fun b!105099 () Bool)

(assert (=> b!105099 (= e!68417 (= (apply!97 lt!53707 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2438 newMap!16)))))

(declare-fun b!105100 () Bool)

(assert (=> b!105100 (= e!68418 e!68408)))

(declare-fun c!18256 () Bool)

(assert (=> b!105100 (= c!18256 (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105101 () Bool)

(assert (=> b!105101 (= e!68413 (validKeyInArray!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!105102 () Bool)

(declare-fun res!52372 () Bool)

(assert (=> b!105102 (=> (not res!52372) (not e!68418))))

(assert (=> b!105102 (= res!52372 e!68410)))

(declare-fun res!52374 () Bool)

(assert (=> b!105102 (=> res!52374 e!68410)))

(declare-fun e!68415 () Bool)

(assert (=> b!105102 (= res!52374 (not e!68415))))

(declare-fun res!52371 () Bool)

(assert (=> b!105102 (=> (not res!52371) (not e!68415))))

(assert (=> b!105102 (= res!52371 (bvslt #b00000000000000000000000000000000 (size!2311 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16))))))))

(declare-fun b!105103 () Bool)

(assert (=> b!105103 (= e!68409 e!68411)))

(assert (=> b!105103 (= c!18259 (and (not (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2370 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!105104 () Bool)

(declare-fun Unit!3224 () Unit!3150)

(assert (=> b!105104 (= e!68412 Unit!3224)))

(declare-fun b!105105 () Bool)

(assert (=> b!105105 (= e!68419 (= (apply!97 lt!53707 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2438 newMap!16)))))

(declare-fun b!105106 () Bool)

(assert (=> b!105106 (= e!68415 (validKeyInArray!0 (select (arr!2057 (array!4336 (store (arr!2057 (_keys!4263 newMap!16)) (ite c!17783 (index!3182 lt!52655) (index!3179 lt!52655)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (size!2311 (_keys!4263 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!11050 () Bool)

(assert (=> bm!11050 (= call!11048 (contains!824 lt!53707 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!28749 c!18255) b!105087))

(assert (= (and d!28749 (not c!18255)) b!105103))

(assert (= (and b!105103 c!18259) b!105089))

(assert (= (and b!105103 (not c!18259)) b!105095))

(assert (= (and b!105095 c!18254) b!105093))

(assert (= (and b!105095 (not c!18254)) b!105094))

(assert (= (or b!105093 b!105094) bm!11047))

(assert (= (or b!105089 bm!11047) bm!11048))

(assert (= (or b!105089 b!105093) bm!11044))

(assert (= (or b!105087 bm!11048) bm!11045))

(assert (= (or b!105087 bm!11044) bm!11049))

(assert (= (and d!28749 res!52376) b!105101))

(assert (= (and d!28749 c!18258) b!105091))

(assert (= (and d!28749 (not c!18258)) b!105104))

(assert (= (and d!28749 res!52378) b!105102))

(assert (= (and b!105102 res!52371) b!105106))

(assert (= (and b!105102 (not res!52374)) b!105090))

(assert (= (and b!105090 res!52375) b!105097))

(assert (= (and b!105102 res!52372) b!105098))

(assert (= (and b!105098 c!18257) b!105086))

(assert (= (and b!105098 (not c!18257)) b!105088))

(assert (= (and b!105086 res!52379) b!105099))

(assert (= (or b!105086 b!105088) bm!11050))

(assert (= (and b!105098 res!52377) b!105100))

(assert (= (and b!105100 c!18256) b!105096))

(assert (= (and b!105100 (not c!18256)) b!105092))

(assert (= (and b!105096 res!52373) b!105105))

(assert (= (or b!105096 b!105092) bm!11046))

(declare-fun b_lambda!4683 () Bool)

(assert (=> (not b_lambda!4683) (not b!105097)))

(assert (=> b!105097 t!5681))

(declare-fun b_and!6491 () Bool)

(assert (= b_and!6487 (and (=> t!5681 result!3435) b_and!6491)))

(assert (=> b!105097 t!5683))

(declare-fun b_and!6493 () Bool)

(assert (= b_and!6489 (and (=> t!5683 result!3437) b_and!6493)))

(assert (=> b!105106 m!117241))

(assert (=> b!105106 m!117241))

(assert (=> b!105106 m!117249))

(declare-fun m!117285 () Bool)

(assert (=> bm!11045 m!117285))

(assert (=> b!105090 m!117241))

(assert (=> b!105090 m!117241))

(declare-fun m!117287 () Bool)

(assert (=> b!105090 m!117287))

(declare-fun m!117289 () Bool)

(assert (=> bm!11046 m!117289))

(declare-fun m!117291 () Bool)

(assert (=> b!105097 m!117291))

(assert (=> b!105097 m!117291))

(assert (=> b!105097 m!114537))

(declare-fun m!117293 () Bool)

(assert (=> b!105097 m!117293))

(assert (=> b!105097 m!117241))

(assert (=> b!105097 m!117241))

(declare-fun m!117295 () Bool)

(assert (=> b!105097 m!117295))

(assert (=> b!105097 m!114537))

(declare-fun m!117297 () Bool)

(assert (=> b!105087 m!117297))

(declare-fun m!117299 () Bool)

(assert (=> b!105091 m!117299))

(declare-fun m!117301 () Bool)

(assert (=> b!105091 m!117301))

(declare-fun m!117303 () Bool)

(assert (=> b!105091 m!117303))

(declare-fun m!117305 () Bool)

(assert (=> b!105091 m!117305))

(declare-fun m!117307 () Bool)

(assert (=> b!105091 m!117307))

(declare-fun m!117309 () Bool)

(assert (=> b!105091 m!117309))

(declare-fun m!117311 () Bool)

(assert (=> b!105091 m!117311))

(declare-fun m!117313 () Bool)

(assert (=> b!105091 m!117313))

(assert (=> b!105091 m!117241))

(assert (=> b!105091 m!117299))

(declare-fun m!117315 () Bool)

(assert (=> b!105091 m!117315))

(assert (=> b!105091 m!117313))

(declare-fun m!117317 () Bool)

(assert (=> b!105091 m!117317))

(assert (=> b!105091 m!117305))

(declare-fun m!117319 () Bool)

(assert (=> b!105091 m!117319))

(declare-fun m!117321 () Bool)

(assert (=> b!105091 m!117321))

(declare-fun m!117323 () Bool)

(assert (=> b!105091 m!117323))

(assert (=> b!105091 m!117285))

(declare-fun m!117325 () Bool)

(assert (=> b!105091 m!117325))

(assert (=> b!105091 m!117309))

(declare-fun m!117327 () Bool)

(assert (=> b!105091 m!117327))

(assert (=> d!28749 m!114575))

(declare-fun m!117329 () Bool)

(assert (=> bm!11050 m!117329))

(declare-fun m!117331 () Bool)

(assert (=> b!105105 m!117331))

(assert (=> b!105101 m!117241))

(assert (=> b!105101 m!117241))

(assert (=> b!105101 m!117249))

(declare-fun m!117333 () Bool)

(assert (=> b!105099 m!117333))

(declare-fun m!117335 () Bool)

(assert (=> bm!11049 m!117335))

(assert (=> d!27839 d!28749))

(assert (=> d!27839 d!28199))

(declare-fun d!28751 () Bool)

(declare-fun res!52380 () Bool)

(declare-fun e!68421 () Bool)

(assert (=> d!28751 (=> res!52380 e!68421)))

(assert (=> d!28751 (= res!52380 (and ((_ is Cons!1607) lt!52953) (= (_1!1211 (h!2203 lt!52953)) (_1!1211 lt!52540))))))

(assert (=> d!28751 (= (containsKey!159 lt!52953 (_1!1211 lt!52540)) e!68421)))

(declare-fun b!105107 () Bool)

(declare-fun e!68422 () Bool)

(assert (=> b!105107 (= e!68421 e!68422)))

(declare-fun res!52381 () Bool)

(assert (=> b!105107 (=> (not res!52381) (not e!68422))))

(assert (=> b!105107 (= res!52381 (and (or (not ((_ is Cons!1607) lt!52953)) (bvsle (_1!1211 (h!2203 lt!52953)) (_1!1211 lt!52540))) ((_ is Cons!1607) lt!52953) (bvslt (_1!1211 (h!2203 lt!52953)) (_1!1211 lt!52540))))))

(declare-fun b!105108 () Bool)

(assert (=> b!105108 (= e!68422 (containsKey!159 (t!5673 lt!52953) (_1!1211 lt!52540)))))

(assert (= (and d!28751 (not res!52380)) b!105107))

(assert (= (and b!105107 res!52381) b!105108))

(declare-fun m!117337 () Bool)

(assert (=> b!105108 m!117337))

(assert (=> b!103762 d!28751))

(assert (=> b!103714 d!27785))

(declare-fun d!28753 () Bool)

(declare-fun e!68424 () Bool)

(assert (=> d!28753 e!68424))

(declare-fun res!52382 () Bool)

(assert (=> d!28753 (=> res!52382 e!68424)))

(declare-fun lt!53718 () Bool)

(assert (=> d!28753 (= res!52382 (not lt!53718))))

(declare-fun lt!53719 () Bool)

(assert (=> d!28753 (= lt!53718 lt!53719)))

(declare-fun lt!53720 () Unit!3150)

(declare-fun e!68423 () Unit!3150)

(assert (=> d!28753 (= lt!53720 e!68423)))

(declare-fun c!18260 () Bool)

(assert (=> d!28753 (= c!18260 lt!53719)))

(assert (=> d!28753 (= lt!53719 (containsKey!159 (toList!800 lt!52817) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!28753 (= (contains!824 lt!52817 (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)) lt!53718)))

(declare-fun b!105109 () Bool)

(declare-fun lt!53721 () Unit!3150)

(assert (=> b!105109 (= e!68423 lt!53721)))

(assert (=> b!105109 (= lt!53721 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!52817) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!105109 (isDefined!108 (getValueByKey!155 (toList!800 lt!52817) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!105110 () Bool)

(declare-fun Unit!3225 () Unit!3150)

(assert (=> b!105110 (= e!68423 Unit!3225)))

(declare-fun b!105111 () Bool)

(assert (=> b!105111 (= e!68424 (isDefined!108 (getValueByKey!155 (toList!800 lt!52817) (select (arr!2057 (_keys!4263 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!28753 c!18260) b!105109))

(assert (= (and d!28753 (not c!18260)) b!105110))

(assert (= (and d!28753 (not res!52382)) b!105111))

(assert (=> d!28753 m!114525))

(declare-fun m!117339 () Bool)

(assert (=> d!28753 m!117339))

(assert (=> b!105109 m!114525))

(declare-fun m!117341 () Bool)

(assert (=> b!105109 m!117341))

(assert (=> b!105109 m!114525))

(assert (=> b!105109 m!117085))

(assert (=> b!105109 m!117085))

(declare-fun m!117343 () Bool)

(assert (=> b!105109 m!117343))

(assert (=> b!105111 m!114525))

(assert (=> b!105111 m!117085))

(assert (=> b!105111 m!117085))

(assert (=> b!105111 m!117343))

(assert (=> b!103609 d!28753))

(declare-fun d!28755 () Bool)

(declare-fun e!68426 () Bool)

(assert (=> d!28755 e!68426))

(declare-fun res!52383 () Bool)

(assert (=> d!28755 (=> res!52383 e!68426)))

(declare-fun lt!53722 () Bool)

(assert (=> d!28755 (= res!52383 (not lt!53722))))

(declare-fun lt!53723 () Bool)

(assert (=> d!28755 (= lt!53722 lt!53723)))

(declare-fun lt!53724 () Unit!3150)

(declare-fun e!68425 () Unit!3150)

(assert (=> d!28755 (= lt!53724 e!68425)))

(declare-fun c!18261 () Bool)

(assert (=> d!28755 (= c!18261 lt!53723)))

(assert (=> d!28755 (= lt!53723 (containsKey!159 (toList!800 lt!53040) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> d!28755 (= (contains!824 lt!53040 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53722)))

(declare-fun b!105112 () Bool)

(declare-fun lt!53725 () Unit!3150)

(assert (=> b!105112 (= e!68425 lt!53725)))

(assert (=> b!105112 (= lt!53725 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53040) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (=> b!105112 (isDefined!108 (getValueByKey!155 (toList!800 lt!53040) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105113 () Bool)

(declare-fun Unit!3226 () Unit!3150)

(assert (=> b!105113 (= e!68425 Unit!3226)))

(declare-fun b!105114 () Bool)

(assert (=> b!105114 (= e!68426 (isDefined!108 (getValueByKey!155 (toList!800 lt!53040) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28755 c!18261) b!105112))

(assert (= (and d!28755 (not c!18261)) b!105113))

(assert (= (and d!28755 (not res!52383)) b!105114))

(declare-fun m!117345 () Bool)

(assert (=> d!28755 m!117345))

(declare-fun m!117347 () Bool)

(assert (=> b!105112 m!117347))

(assert (=> b!105112 m!114979))

(assert (=> b!105112 m!114979))

(declare-fun m!117349 () Bool)

(assert (=> b!105112 m!117349))

(assert (=> b!105114 m!114979))

(assert (=> b!105114 m!114979))

(assert (=> b!105114 m!117349))

(assert (=> d!27905 d!28755))

(declare-fun d!28757 () Bool)

(declare-fun c!18262 () Bool)

(assert (=> d!28757 (= c!18262 (and ((_ is Cons!1607) lt!53041) (= (_1!1211 (h!2203 lt!53041)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun e!68427 () Option!161)

(assert (=> d!28757 (= (getValueByKey!155 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) e!68427)))

(declare-fun b!105116 () Bool)

(declare-fun e!68428 () Option!161)

(assert (=> b!105116 (= e!68427 e!68428)))

(declare-fun c!18263 () Bool)

(assert (=> b!105116 (= c!18263 (and ((_ is Cons!1607) lt!53041) (not (= (_1!1211 (h!2203 lt!53041)) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun b!105117 () Bool)

(assert (=> b!105117 (= e!68428 (getValueByKey!155 (t!5673 lt!53041) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105118 () Bool)

(assert (=> b!105118 (= e!68428 None!159)))

(declare-fun b!105115 () Bool)

(assert (=> b!105115 (= e!68427 (Some!160 (_2!1211 (h!2203 lt!53041))))))

(assert (= (and d!28757 c!18262) b!105115))

(assert (= (and d!28757 (not c!18262)) b!105116))

(assert (= (and b!105116 c!18263) b!105117))

(assert (= (and b!105116 (not c!18263)) b!105118))

(declare-fun m!117351 () Bool)

(assert (=> b!105117 m!117351))

(assert (=> d!27905 d!28757))

(declare-fun d!28759 () Bool)

(assert (=> d!28759 (= (getValueByKey!155 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) (Some!160 (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun lt!53726 () Unit!3150)

(assert (=> d!28759 (= lt!53726 (choose!639 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun e!68429 () Bool)

(assert (=> d!28759 e!68429))

(declare-fun res!52384 () Bool)

(assert (=> d!28759 (=> (not res!52384) (not e!68429))))

(assert (=> d!28759 (= res!52384 (isStrictlySorted!308 lt!53041))))

(assert (=> d!28759 (= (lemmaContainsTupThenGetReturnValue!71 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53726)))

(declare-fun b!105119 () Bool)

(declare-fun res!52385 () Bool)

(assert (=> b!105119 (=> (not res!52385) (not e!68429))))

(assert (=> b!105119 (= res!52385 (containsKey!159 lt!53041 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun b!105120 () Bool)

(assert (=> b!105120 (= e!68429 (contains!826 lt!53041 (tuple2!2401 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (= (and d!28759 res!52384) b!105119))

(assert (= (and b!105119 res!52385) b!105120))

(assert (=> d!28759 m!114973))

(declare-fun m!117353 () Bool)

(assert (=> d!28759 m!117353))

(declare-fun m!117355 () Bool)

(assert (=> d!28759 m!117355))

(declare-fun m!117357 () Bool)

(assert (=> b!105119 m!117357))

(declare-fun m!117359 () Bool)

(assert (=> b!105120 m!117359))

(assert (=> d!27905 d!28759))

(declare-fun b!105121 () Bool)

(declare-fun e!68434 () List!1611)

(declare-fun e!68430 () List!1611)

(assert (=> b!105121 (= e!68434 e!68430)))

(declare-fun c!18265 () Bool)

(assert (=> b!105121 (= c!18265 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (= (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!105122 () Bool)

(declare-fun call!11055 () List!1611)

(assert (=> b!105122 (= e!68430 call!11055)))

(declare-fun bm!11051 () Bool)

(declare-fun call!11056 () List!1611)

(assert (=> bm!11051 (= call!11055 call!11056)))

(declare-fun c!18267 () Bool)

(declare-fun b!105124 () Bool)

(declare-fun e!68431 () List!1611)

(assert (=> b!105124 (= e!68431 (ite c!18265 (t!5673 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (ite c!18267 (Cons!1607 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (t!5673 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))) Nil!1608)))))

(declare-fun bm!11052 () Bool)

(declare-fun call!11054 () List!1611)

(assert (=> bm!11052 (= call!11054 call!11055)))

(declare-fun b!105125 () Bool)

(assert (=> b!105125 (= e!68431 (insertStrictlySorted!74 (t!5673 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(declare-fun bm!11053 () Bool)

(declare-fun c!18266 () Bool)

(assert (=> bm!11053 (= call!11056 ($colon$colon!80 e!68431 (ite c!18266 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (tuple2!2401 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))))

(declare-fun c!18264 () Bool)

(assert (=> bm!11053 (= c!18264 c!18266)))

(declare-fun b!105126 () Bool)

(declare-fun e!68432 () List!1611)

(assert (=> b!105126 (= e!68432 call!11054)))

(declare-fun b!105127 () Bool)

(assert (=> b!105127 (= c!18267 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (bvsgt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> b!105127 (= e!68430 e!68432)))

(declare-fun b!105128 () Bool)

(assert (=> b!105128 (= e!68434 call!11056)))

(declare-fun d!28761 () Bool)

(declare-fun e!68433 () Bool)

(assert (=> d!28761 e!68433))

(declare-fun res!52386 () Bool)

(assert (=> d!28761 (=> (not res!52386) (not e!68433))))

(declare-fun lt!53727 () List!1611)

(assert (=> d!28761 (= res!52386 (isStrictlySorted!308 lt!53727))))

(assert (=> d!28761 (= lt!53727 e!68434)))

(assert (=> d!28761 (= c!18266 (and ((_ is Cons!1607) (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (bvslt (_1!1211 (h!2203 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(assert (=> d!28761 (isStrictlySorted!308 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))

(assert (=> d!28761 (= (insertStrictlySorted!74 (toList!800 (+!141 lt!52539 (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))) lt!53727)))

(declare-fun b!105123 () Bool)

(assert (=> b!105123 (= e!68432 call!11054)))

(declare-fun b!105129 () Bool)

(assert (=> b!105129 (= e!68433 (contains!826 lt!53727 (tuple2!2401 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))) (_2!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992))))))))))

(declare-fun b!105130 () Bool)

(declare-fun res!52387 () Bool)

(assert (=> b!105130 (=> (not res!52387) (not e!68433))))

(assert (=> b!105130 (= res!52387 (containsKey!159 lt!53727 (_1!1211 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2438 (v!2876 (underlying!358 thiss!992)))))))))

(assert (= (and d!28761 c!18266) b!105128))

(assert (= (and d!28761 (not c!18266)) b!105121))

(assert (= (and b!105121 c!18265) b!105122))

(assert (= (and b!105121 (not c!18265)) b!105127))

(assert (= (and b!105127 c!18267) b!105123))

(assert (= (and b!105127 (not c!18267)) b!105126))

(assert (= (or b!105123 b!105126) bm!11052))

(assert (= (or b!105122 bm!11052) bm!11051))

(assert (= (or b!105128 bm!11051) bm!11053))

(assert (= (and bm!11053 c!18264) b!105125))

(assert (= (and bm!11053 (not c!18264)) b!105124))

(assert (= (and d!28761 res!52386) b!105130))

(assert (= (and b!105130 res!52387) b!105129))

(declare-fun m!117361 () Bool)

(assert (=> b!105129 m!117361))

(declare-fun m!117363 () Bool)

(assert (=> b!105125 m!117363))

(declare-fun m!117365 () Bool)

(assert (=> bm!11053 m!117365))

(declare-fun m!117367 () Bool)

(assert (=> d!28761 m!117367))

(declare-fun m!117369 () Bool)

(assert (=> d!28761 m!117369))

(declare-fun m!117371 () Bool)

(assert (=> b!105130 m!117371))

(assert (=> d!27905 d!28761))

(declare-fun d!28763 () Bool)

(declare-fun e!68436 () Bool)

(assert (=> d!28763 e!68436))

(declare-fun res!52388 () Bool)

(assert (=> d!28763 (=> res!52388 e!68436)))

(declare-fun lt!53728 () Bool)

(assert (=> d!28763 (= res!52388 (not lt!53728))))

(declare-fun lt!53729 () Bool)

(assert (=> d!28763 (= lt!53728 lt!53729)))

(declare-fun lt!53730 () Unit!3150)

(declare-fun e!68435 () Unit!3150)

(assert (=> d!28763 (= lt!53730 e!68435)))

(declare-fun c!18268 () Bool)

(assert (=> d!28763 (= c!18268 lt!53729)))

(assert (=> d!28763 (= lt!53729 (containsKey!159 (toList!800 lt!53132) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> d!28763 (= (contains!824 lt!53132 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) lt!53728)))

(declare-fun b!105131 () Bool)

(declare-fun lt!53731 () Unit!3150)

(assert (=> b!105131 (= e!68435 lt!53731)))

(assert (=> b!105131 (= lt!53731 (lemmaContainsKeyImpliesGetValueByKeyDefined!107 (toList!800 lt!53132) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (=> b!105131 (isDefined!108 (getValueByKey!155 (toList!800 lt!53132) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!105132 () Bool)

(declare-fun Unit!3227 () Unit!3150)

(assert (=> b!105132 (= e!68435 Unit!3227)))

(declare-fun b!105133 () Bool)

(assert (=> b!105133 (= e!68436 (isDefined!108 (getValueByKey!155 (toList!800 lt!53132) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(assert (= (and d!28763 c!18268) b!105131))

(assert (= (and d!28763 (not c!18268)) b!105132))

(assert (= (and d!28763 (not res!52388)) b!105133))

(declare-fun m!117373 () Bool)

(assert (=> d!28763 m!117373))

(declare-fun m!117375 () Bool)

(assert (=> b!105131 m!117375))

(assert (=> b!105131 m!115259))

(assert (=> b!105131 m!115259))

(declare-fun m!117377 () Bool)

(assert (=> b!105131 m!117377))

(assert (=> b!105133 m!115259))

(assert (=> b!105133 m!115259))

(assert (=> b!105133 m!117377))

(assert (=> d!27989 d!28763))

(declare-fun c!18269 () Bool)

(declare-fun d!28765 () Bool)

(assert (=> d!28765 (= c!18269 (and ((_ is Cons!1607) lt!53133) (= (_1!1211 (h!2203 lt!53133)) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun e!68437 () Option!161)

(assert (=> d!28765 (= (getValueByKey!155 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) e!68437)))

(declare-fun b!105135 () Bool)

(declare-fun e!68438 () Option!161)

(assert (=> b!105135 (= e!68437 e!68438)))

(declare-fun c!18270 () Bool)

(assert (=> b!105135 (= c!18270 (and ((_ is Cons!1607) lt!53133) (not (= (_1!1211 (h!2203 lt!53133)) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))))

(declare-fun b!105136 () Bool)

(assert (=> b!105136 (= e!68438 (getValueByKey!155 (t!5673 lt!53133) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!105137 () Bool)

(assert (=> b!105137 (= e!68438 None!159)))

(declare-fun b!105134 () Bool)

(assert (=> b!105134 (= e!68437 (Some!160 (_2!1211 (h!2203 lt!53133))))))

(assert (= (and d!28765 c!18269) b!105134))

(assert (= (and d!28765 (not c!18269)) b!105135))

(assert (= (and b!105135 c!18270) b!105136))

(assert (= (and b!105135 (not c!18270)) b!105137))

(declare-fun m!117379 () Bool)

(assert (=> b!105136 m!117379))

(assert (=> d!27989 d!28765))

(declare-fun d!28767 () Bool)

(assert (=> d!28767 (= (getValueByKey!155 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) (Some!160 (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun lt!53732 () Unit!3150)

(assert (=> d!28767 (= lt!53732 (choose!639 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun e!68439 () Bool)

(assert (=> d!28767 e!68439))

(declare-fun res!52389 () Bool)

(assert (=> d!28767 (=> (not res!52389) (not e!68439))))

(assert (=> d!28767 (= res!52389 (isStrictlySorted!308 lt!53133))))

(assert (=> d!28767 (= (lemmaContainsTupThenGetReturnValue!71 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) lt!53732)))

(declare-fun b!105138 () Bool)

(declare-fun res!52390 () Bool)

(assert (=> b!105138 (=> (not res!52390) (not e!68439))))

(assert (=> b!105138 (= res!52390 (containsKey!159 lt!53133 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun b!105139 () Bool)

(assert (=> b!105139 (= e!68439 (contains!826 lt!53133 (tuple2!2401 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(assert (= (and d!28767 res!52389) b!105138))

(assert (= (and b!105138 res!52390) b!105139))

(assert (=> d!28767 m!115253))

(declare-fun m!117381 () Bool)

(assert (=> d!28767 m!117381))

(declare-fun m!117383 () Bool)

(assert (=> d!28767 m!117383))

(declare-fun m!117385 () Bool)

(assert (=> b!105138 m!117385))

(declare-fun m!117387 () Bool)

(assert (=> b!105139 m!117387))

(assert (=> d!27989 d!28767))

(declare-fun b!105140 () Bool)

(declare-fun e!68444 () List!1611)

(declare-fun e!68440 () List!1611)

(assert (=> b!105140 (= e!68444 e!68440)))

(declare-fun c!18272 () Bool)

(assert (=> b!105140 (= c!18272 (and ((_ is Cons!1607) (toList!800 e!67358)) (= (_1!1211 (h!2203 (toList!800 e!67358))) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!105141 () Bool)

(declare-fun call!11058 () List!1611)

(assert (=> b!105141 (= e!68440 call!11058)))

(declare-fun bm!11054 () Bool)

(declare-fun call!11059 () List!1611)

(assert (=> bm!11054 (= call!11058 call!11059)))

(declare-fun c!18274 () Bool)

(declare-fun e!68441 () List!1611)

(declare-fun b!105143 () Bool)

(assert (=> b!105143 (= e!68441 (ite c!18272 (t!5673 (toList!800 e!67358)) (ite c!18274 (Cons!1607 (h!2203 (toList!800 e!67358)) (t!5673 (toList!800 e!67358))) Nil!1608)))))

(declare-fun bm!11055 () Bool)

(declare-fun call!11057 () List!1611)

(assert (=> bm!11055 (= call!11057 call!11058)))

(declare-fun b!105144 () Bool)

(assert (=> b!105144 (= e!68441 (insertStrictlySorted!74 (t!5673 (toList!800 e!67358)) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(declare-fun bm!11056 () Bool)

(declare-fun c!18273 () Bool)

(assert (=> bm!11056 (= call!11059 ($colon$colon!80 e!68441 (ite c!18273 (h!2203 (toList!800 e!67358)) (tuple2!2401 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))))

(declare-fun c!18271 () Bool)

(assert (=> bm!11056 (= c!18271 c!18273)))

(declare-fun b!105145 () Bool)

(declare-fun e!68442 () List!1611)

(assert (=> b!105145 (= e!68442 call!11057)))

(declare-fun b!105146 () Bool)

(assert (=> b!105146 (= c!18274 (and ((_ is Cons!1607) (toList!800 e!67358)) (bvsgt (_1!1211 (h!2203 (toList!800 e!67358))) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(assert (=> b!105146 (= e!68440 e!68442)))

(declare-fun b!105147 () Bool)

(assert (=> b!105147 (= e!68444 call!11059)))

(declare-fun d!28769 () Bool)

(declare-fun e!68443 () Bool)

(assert (=> d!28769 e!68443))

(declare-fun res!52391 () Bool)

(assert (=> d!28769 (=> (not res!52391) (not e!68443))))

(declare-fun lt!53733 () List!1611)

(assert (=> d!28769 (= res!52391 (isStrictlySorted!308 lt!53733))))

(assert (=> d!28769 (= lt!53733 e!68444)))

(assert (=> d!28769 (= c!18273 (and ((_ is Cons!1607) (toList!800 e!67358)) (bvslt (_1!1211 (h!2203 (toList!800 e!67358))) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(assert (=> d!28769 (isStrictlySorted!308 (toList!800 e!67358))))

(assert (=> d!28769 (= (insertStrictlySorted!74 (toList!800 e!67358) (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))) lt!53733)))

(declare-fun b!105142 () Bool)

(assert (=> b!105142 (= e!68442 call!11057)))

(declare-fun b!105148 () Bool)

(assert (=> b!105148 (= e!68443 (contains!826 lt!53733 (tuple2!2401 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))) (_2!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542))))))))

(declare-fun b!105149 () Bool)

(declare-fun res!52392 () Bool)

(assert (=> b!105149 (=> (not res!52392) (not e!68443))))

(assert (=> b!105149 (= res!52392 (containsKey!159 lt!53733 (_1!1211 (ite c!17781 (ite c!17787 (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 lt!52542) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 lt!52542)) (tuple2!2401 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) lt!52542)))))))

(assert (= (and d!28769 c!18273) b!105147))

(assert (= (and d!28769 (not c!18273)) b!105140))

(assert (= (and b!105140 c!18272) b!105141))

(assert (= (and b!105140 (not c!18272)) b!105146))

(assert (= (and b!105146 c!18274) b!105142))

(assert (= (and b!105146 (not c!18274)) b!105145))

(assert (= (or b!105142 b!105145) bm!11055))

(assert (= (or b!105141 bm!11055) bm!11054))

(assert (= (or b!105147 bm!11054) bm!11056))

(assert (= (and bm!11056 c!18271) b!105144))

(assert (= (and bm!11056 (not c!18271)) b!105143))

(assert (= (and d!28769 res!52391) b!105149))

(assert (= (and b!105149 res!52392) b!105148))

(declare-fun m!117389 () Bool)

(assert (=> b!105148 m!117389))

(declare-fun m!117391 () Bool)

(assert (=> b!105144 m!117391))

(declare-fun m!117393 () Bool)

(assert (=> bm!11056 m!117393))

(declare-fun m!117395 () Bool)

(assert (=> d!28769 m!117395))

(declare-fun m!117397 () Bool)

(assert (=> d!28769 m!117397))

(declare-fun m!117399 () Bool)

(assert (=> b!105149 m!117399))

(assert (=> d!27989 d!28769))

(declare-fun b!105162 () Bool)

(declare-fun e!68451 () SeekEntryResult!258)

(assert (=> b!105162 (= e!68451 (Found!258 (index!3181 lt!53019)))))

(declare-fun b!105163 () Bool)

(declare-fun e!68453 () SeekEntryResult!258)

(assert (=> b!105163 (= e!68453 Undefined!258)))

(declare-fun b!105164 () Bool)

(declare-fun e!68452 () SeekEntryResult!258)

(assert (=> b!105164 (= e!68452 (MissingVacant!258 (index!3181 lt!53019)))))

(declare-fun b!105165 () Bool)

(declare-fun c!18283 () Bool)

(declare-fun lt!53739 () (_ BitVec 64))

(assert (=> b!105165 (= c!18283 (= lt!53739 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!105165 (= e!68451 e!68452)))

(declare-fun b!105166 () Bool)

(assert (=> b!105166 (= e!68453 e!68451)))

(declare-fun c!18282 () Bool)

(assert (=> b!105166 (= c!18282 (= lt!53739 (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)))))

(declare-fun b!105167 () Bool)

(assert (=> b!105167 (= e!68452 (seekKeyOrZeroReturnVacant!0 (bvadd (x!13500 lt!53019) #b00000000000000000000000000000001) (nextIndex!0 (index!3181 lt!53019) (x!13500 lt!53019) (mask!6697 newMap!16)) (index!3181 lt!53019) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)))))

(declare-fun d!28771 () Bool)

(declare-fun lt!53738 () SeekEntryResult!258)

(assert (=> d!28771 (and (or ((_ is Undefined!258) lt!53738) (not ((_ is Found!258) lt!53738)) (and (bvsge (index!3180 lt!53738) #b00000000000000000000000000000000) (bvslt (index!3180 lt!53738) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53738) ((_ is Found!258) lt!53738) (not ((_ is MissingVacant!258) lt!53738)) (not (= (index!3182 lt!53738) (index!3181 lt!53019))) (and (bvsge (index!3182 lt!53738) #b00000000000000000000000000000000) (bvslt (index!3182 lt!53738) (size!2311 (_keys!4263 newMap!16))))) (or ((_ is Undefined!258) lt!53738) (ite ((_ is Found!258) lt!53738) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3180 lt!53738)) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355)) (and ((_ is MissingVacant!258) lt!53738) (= (index!3182 lt!53738) (index!3181 lt!53019)) (= (select (arr!2057 (_keys!4263 newMap!16)) (index!3182 lt!53738)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!28771 (= lt!53738 e!68453)))

(declare-fun c!18281 () Bool)

(assert (=> d!28771 (= c!18281 (bvsge (x!13500 lt!53019) #b01111111111111111111111111111110))))

(assert (=> d!28771 (= lt!53739 (select (arr!2057 (_keys!4263 newMap!16)) (index!3181 lt!53019)))))

(assert (=> d!28771 (validMask!0 (mask!6697 newMap!16))))

(assert (=> d!28771 (= (seekKeyOrZeroReturnVacant!0 (x!13500 lt!53019) (index!3181 lt!53019) (index!3181 lt!53019) (select (arr!2057 (_keys!4263 (v!2876 (underlying!358 thiss!992)))) from!355) (_keys!4263 newMap!16) (mask!6697 newMap!16)) lt!53738)))

(assert (= (and d!28771 c!18281) b!105163))

(assert (= (and d!28771 (not c!18281)) b!105166))

(assert (= (and b!105166 c!18282) b!105162))

(assert (= (and b!105166 (not c!18282)) b!105165))

(assert (= (and b!105165 c!18283) b!105164))

(assert (= (and b!105165 (not c!18283)) b!105167))

(declare-fun m!117401 () Bool)

(assert (=> b!105167 m!117401))

(assert (=> b!105167 m!117401))

(assert (=> b!105167 m!114165))

(declare-fun m!117403 () Bool)

(assert (=> b!105167 m!117403))

(declare-fun m!117405 () Bool)

(assert (=> d!28771 m!117405))

(declare-fun m!117407 () Bool)

(assert (=> d!28771 m!117407))

(assert (=> d!28771 m!114911))

(assert (=> d!28771 m!114575))

(assert (=> b!103849 d!28771))

(declare-fun d!28773 () Bool)

(assert (=> d!28773 (= (get!1326 (getValueByKey!155 (toList!800 lt!52725) lt!52734)) (v!2880 (getValueByKey!155 (toList!800 lt!52725) lt!52734)))))

(assert (=> d!27981 d!28773))

(declare-fun d!28775 () Bool)

(declare-fun c!18284 () Bool)

(assert (=> d!28775 (= c!18284 (and ((_ is Cons!1607) (toList!800 lt!52725)) (= (_1!1211 (h!2203 (toList!800 lt!52725))) lt!52734)))))

(declare-fun e!68454 () Option!161)

(assert (=> d!28775 (= (getValueByKey!155 (toList!800 lt!52725) lt!52734) e!68454)))

(declare-fun b!105169 () Bool)

(declare-fun e!68455 () Option!161)

(assert (=> b!105169 (= e!68454 e!68455)))

(declare-fun c!18285 () Bool)

(assert (=> b!105169 (= c!18285 (and ((_ is Cons!1607) (toList!800 lt!52725)) (not (= (_1!1211 (h!2203 (toList!800 lt!52725))) lt!52734))))))

(declare-fun b!105170 () Bool)

(assert (=> b!105170 (= e!68455 (getValueByKey!155 (t!5673 (toList!800 lt!52725)) lt!52734))))

(declare-fun b!105171 () Bool)

(assert (=> b!105171 (= e!68455 None!159)))

(declare-fun b!105168 () Bool)

(assert (=> b!105168 (= e!68454 (Some!160 (_2!1211 (h!2203 (toList!800 lt!52725)))))))

(assert (= (and d!28775 c!18284) b!105168))

(assert (= (and d!28775 (not c!18284)) b!105169))

(assert (= (and b!105169 c!18285) b!105170))

(assert (= (and b!105169 (not c!18285)) b!105171))

(declare-fun m!117409 () Bool)

(assert (=> b!105170 m!117409))

(assert (=> d!27981 d!28775))

(declare-fun d!28777 () Bool)

(declare-fun c!18286 () Bool)

(assert (=> d!28777 (= c!18286 (and ((_ is Cons!1607) (t!5673 lt!52758)) (= (_1!1211 (h!2203 (t!5673 lt!52758))) (_1!1211 lt!52538))))))

(declare-fun e!68456 () Option!161)

(assert (=> d!28777 (= (getValueByKey!155 (t!5673 lt!52758) (_1!1211 lt!52538)) e!68456)))

(declare-fun b!105173 () Bool)

(declare-fun e!68457 () Option!161)

(assert (=> b!105173 (= e!68456 e!68457)))

(declare-fun c!18287 () Bool)

(assert (=> b!105173 (= c!18287 (and ((_ is Cons!1607) (t!5673 lt!52758)) (not (= (_1!1211 (h!2203 (t!5673 lt!52758))) (_1!1211 lt!52538)))))))

(declare-fun b!105174 () Bool)

(assert (=> b!105174 (= e!68457 (getValueByKey!155 (t!5673 (t!5673 lt!52758)) (_1!1211 lt!52538)))))

(declare-fun b!105175 () Bool)

(assert (=> b!105175 (= e!68457 None!159)))

(declare-fun b!105172 () Bool)

(assert (=> b!105172 (= e!68456 (Some!160 (_2!1211 (h!2203 (t!5673 lt!52758)))))))

(assert (= (and d!28777 c!18286) b!105172))

(assert (= (and d!28777 (not c!18286)) b!105173))

(assert (= (and b!105173 c!18287) b!105174))

(assert (= (and b!105173 (not c!18287)) b!105175))

(declare-fun m!117411 () Bool)

(assert (=> b!105174 m!117411))

(assert (=> b!103563 d!28777))

(declare-fun d!28779 () Bool)

(declare-fun e!68458 () Bool)

(assert (=> d!28779 e!68458))

(declare-fun res!52394 () Bool)

(assert (=> d!28779 (=> (not res!52394) (not e!68458))))

(declare-fun lt!53741 () ListLongMap!1569)

(assert (=> d!28779 (= res!52394 (contains!824 lt!53741 (_1!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(declare-fun lt!53742 () List!1611)

(assert (=> d!28779 (= lt!53741 (ListLongMap!1570 lt!53742))))

(declare-fun lt!53740 () Unit!3150)

(declare-fun lt!53743 () Unit!3150)

(assert (=> d!28779 (= lt!53740 lt!53743)))

(assert (=> d!28779 (= (getValueByKey!155 lt!53742 (_1!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))) (Some!160 (_2!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(assert (=> d!28779 (= lt!53743 (lemmaContainsTupThenGetReturnValue!71 lt!53742 (_1!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (_2!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(assert (=> d!28779 (= lt!53742 (insertStrictlySorted!74 (toList!800 (ite c!17900 call!10909 (ite c!17904 call!10910 call!10908))) (_1!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) (_2!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))))))

(assert (=> d!28779 (= (+!141 (ite c!17900 call!10909 (ite c!17904 call!10910 call!10908)) (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))) lt!53741)))

(declare-fun b!105176 () Bool)

(declare-fun res!52393 () Bool)

(assert (=> b!105176 (=> (not res!52393) (not e!68458))))

(assert (=> b!105176 (= res!52393 (= (getValueByKey!155 (toList!800 lt!53741) (_1!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16)))))) (Some!160 (_2!1211 (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))))

(declare-fun b!105177 () Bool)

(assert (=> b!105177 (= e!68458 (contains!826 (toList!800 lt!53741) (ite (or c!17900 c!17904) (tuple2!2401 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!17781 c!17787) lt!52542 (zeroValue!2438 newMap!16))) (tuple2!2401 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!17781 (ite c!17787 (minValue!2438 newMap!16) lt!52542) (minValue!2438 newMap!16))))))))

(assert (= (and d!28779 res!52394) b!105176))

(assert (= (and b!105176 res!52393) b!105177))

(declare-fun m!117413 () Bool)

(assert (=> d!28779 m!117413))

(declare-fun m!117415 () Bool)

(assert (=> d!28779 m!117415))

(declare-fun m!117417 () Bool)

(assert (=> d!28779 m!117417))

(declare-fun m!117419 () Bool)

(assert (=> d!28779 m!117419))

(declare-fun m!117421 () Bool)

(assert (=> b!105176 m!117421))

(declare-fun m!117423 () Bool)

(assert (=> b!105177 m!117423))

(assert (=> bm!10907 d!28779))

(declare-fun b!105179 () Bool)

(declare-fun e!68459 () Bool)

(assert (=> b!105179 (= e!68459 tp_is_empty!2673)))

(declare-fun b!105178 () Bool)

(declare-fun e!68460 () Bool)

(assert (=> b!105178 (= e!68460 tp_is_empty!2673)))

(declare-fun condMapEmpty!3917 () Bool)

(declare-fun mapDefault!3917 () ValueCell!993)

(assert (=> mapNonEmpty!3916 (= condMapEmpty!3917 (= mapRest!3916 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3917)))))

(declare-fun mapRes!3917 () Bool)

(assert (=> mapNonEmpty!3916 (= tp!9874 (and e!68459 mapRes!3917))))

(declare-fun mapNonEmpty!3917 () Bool)

(declare-fun tp!9875 () Bool)

(assert (=> mapNonEmpty!3917 (= mapRes!3917 (and tp!9875 e!68460))))

(declare-fun mapKey!3917 () (_ BitVec 32))

(declare-fun mapRest!3917 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapValue!3917 () ValueCell!993)

(assert (=> mapNonEmpty!3917 (= mapRest!3916 (store mapRest!3917 mapKey!3917 mapValue!3917))))

(declare-fun mapIsEmpty!3917 () Bool)

(assert (=> mapIsEmpty!3917 mapRes!3917))

(assert (= (and mapNonEmpty!3916 condMapEmpty!3917) mapIsEmpty!3917))

(assert (= (and mapNonEmpty!3916 (not condMapEmpty!3917)) mapNonEmpty!3917))

(assert (= (and mapNonEmpty!3917 ((_ is ValueCellFull!993) mapValue!3917)) b!105178))

(assert (= (and mapNonEmpty!3916 ((_ is ValueCellFull!993) mapDefault!3917)) b!105179))

(declare-fun m!117425 () Bool)

(assert (=> mapNonEmpty!3917 m!117425))

(declare-fun b!105181 () Bool)

(declare-fun e!68461 () Bool)

(assert (=> b!105181 (= e!68461 tp_is_empty!2673)))

(declare-fun b!105180 () Bool)

(declare-fun e!68462 () Bool)

(assert (=> b!105180 (= e!68462 tp_is_empty!2673)))

(declare-fun condMapEmpty!3918 () Bool)

(declare-fun mapDefault!3918 () ValueCell!993)

(assert (=> mapNonEmpty!3915 (= condMapEmpty!3918 (= mapRest!3915 ((as const (Array (_ BitVec 32) ValueCell!993)) mapDefault!3918)))))

(declare-fun mapRes!3918 () Bool)

(assert (=> mapNonEmpty!3915 (= tp!9873 (and e!68461 mapRes!3918))))

(declare-fun mapNonEmpty!3918 () Bool)

(declare-fun tp!9876 () Bool)

(assert (=> mapNonEmpty!3918 (= mapRes!3918 (and tp!9876 e!68462))))

(declare-fun mapRest!3918 () (Array (_ BitVec 32) ValueCell!993))

(declare-fun mapKey!3918 () (_ BitVec 32))

(declare-fun mapValue!3918 () ValueCell!993)

(assert (=> mapNonEmpty!3918 (= mapRest!3915 (store mapRest!3918 mapKey!3918 mapValue!3918))))

(declare-fun mapIsEmpty!3918 () Bool)

(assert (=> mapIsEmpty!3918 mapRes!3918))

(assert (= (and mapNonEmpty!3915 condMapEmpty!3918) mapIsEmpty!3918))

(assert (= (and mapNonEmpty!3915 (not condMapEmpty!3918)) mapNonEmpty!3918))

(assert (= (and mapNonEmpty!3918 ((_ is ValueCellFull!993) mapValue!3918)) b!105180))

(assert (= (and mapNonEmpty!3915 ((_ is ValueCellFull!993) mapDefault!3918)) b!105181))

(declare-fun m!117427 () Bool)

(assert (=> mapNonEmpty!3918 m!117427))

(declare-fun b_lambda!4685 () Bool)

(assert (= b_lambda!4667 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4685)))

(declare-fun b_lambda!4687 () Bool)

(assert (= b_lambda!4675 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4687)))

(declare-fun b_lambda!4689 () Bool)

(assert (= b_lambda!4661 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4689)))

(declare-fun b_lambda!4691 () Bool)

(assert (= b_lambda!4669 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4691)))

(declare-fun b_lambda!4693 () Bool)

(assert (= b_lambda!4659 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4693)))

(declare-fun b_lambda!4695 () Bool)

(assert (= b_lambda!4683 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4695)))

(declare-fun b_lambda!4697 () Bool)

(assert (= b_lambda!4663 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4697)))

(declare-fun b_lambda!4699 () Bool)

(assert (= b_lambda!4677 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4699)))

(declare-fun b_lambda!4701 () Bool)

(assert (= b_lambda!4665 (or (and b!103176 b_free!2513) (and b!103179 b_free!2515 (= (defaultEntry!2561 newMap!16) (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))))) b_lambda!4701)))

(declare-fun b_lambda!4703 () Bool)

(assert (= b_lambda!4657 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4703)))

(declare-fun b_lambda!4705 () Bool)

(assert (= b_lambda!4655 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4705)))

(declare-fun b_lambda!4707 () Bool)

(assert (= b_lambda!4673 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4707)))

(declare-fun b_lambda!4709 () Bool)

(assert (= b_lambda!4679 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4709)))

(declare-fun b_lambda!4711 () Bool)

(assert (= b_lambda!4681 (or (and b!103176 b_free!2513 (= (defaultEntry!2561 (v!2876 (underlying!358 thiss!992))) (defaultEntry!2561 newMap!16))) (and b!103179 b_free!2515) b_lambda!4711)))

(check-sat (not b!104999) (not b!104979) (not d!28721) (not b!104676) (not bm!10977) (not b!104896) (not b!104564) (not d!28395) (not bm!11045) (not b!104568) (not d!28327) (not b!104813) (not b!104197) (not b!104807) (not b!104755) (not b!105133) (not b!104506) (not b!104971) (not b!104777) (not b!104834) (not b!105136) (not d!28739) (not b!104488) (not b!104202) (not d!28261) (not bm!10988) (not b!104319) (not bm!11014) (not b!104051) (not b!105112) (not b!105066) (not b!105108) (not d!28037) (not d!28489) (not b!104647) (not b!104235) (not d!28513) (not d!28767) (not d!28517) (not d!28701) (not b!104994) (not b!104294) (not b!105029) (not b!104076) (not d!28499) (not d!28509) (not d!28075) (not b!104678) (not b!104802) (not b!104495) (not b!104804) (not b!104656) b_and!6491 (not bm!10974) (not b!104607) (not b!104767) (not b!104030) (not b!104403) (not b!105052) (not d!28481) (not d!28601) (not b!104559) (not b!104203) (not b!104836) (not d!28717) (not d!28107) (not b!104452) (not d!28611) (not d!28227) (not b!104819) (not d!28065) (not b!104659) (not bm!11029) (not bm!11041) (not b!104237) (not b!105101) (not b!104391) (not b!104156) (not b!104231) (not d!28347) (not b_lambda!4691) (not d!28569) (not b!104609) (not b!104410) (not d!28725) (not bm!10982) (not b!105077) (not b!104753) (not b!104770) (not d!28761) (not b!104597) (not b!104165) (not d!28483) (not b!104276) (not b!104815) (not d!28149) (not b!104366) (not b!104899) (not d!28239) (not b!104157) (not b!104805) (not b!104953) (not d!28415) (not b_lambda!4707) (not d!28645) (not b!104914) (not bm!10949) (not bm!11043) (not b!105111) (not b!104273) (not b!104668) (not b!104336) (not bm!10980) (not d!28589) (not b!104254) (not bm!11046) (not d!28599) (not b!104997) (not b!104407) (not d!28581) (not b!104745) (not d!28559) (not b!104091) (not bm!10964) (not b!104394) (not b!104974) (not b!104101) (not b!104956) (not b!104511) (not b!104200) (not d!28369) (not b!105072) (not b!104519) (not d!28515) (not d!28383) (not b!105125) (not d!28585) (not b!104404) (not d!28309) (not b!104299) (not d!28659) (not b!104258) (not d!28753) (not b!104333) (not b!105063) (not b!104130) (not b_lambda!4631) (not d!28187) (not b_lambda!4697) (not b!104650) (not d!28127) (not b!104901) (not bm!11039) (not b!104860) (not b!104378) (not b!104355) (not d!28711) (not b!104782) (not b!104292) (not b!105048) (not b!104370) (not d!28085) (not b!104141) (not bm!11021) (not b!104304) (not bm!11026) (not d!28045) (not b!104737) (not b!104610) (not b!104740) (not b!104694) (not d!28385) (not b!104330) (not b!104748) (not bm!11038) (not b!104546) (not b!104797) (not d!28089) (not d!28305) (not b!104137) (not d!28487) (not b!104699) (not b!104683) (not b!104515) (not b!104266) (not b!104555) (not b!104047) (not b_lambda!4685) (not b_lambda!4671) (not bm!11025) (not d!28027) (not bm!11010) (not b!104698) (not b!104383) (not b!104323) (not b!104532) (not b!104478) (not b!104888) (not b!104830) (not b!104100) (not b!104653) (not b!104061) (not b!104397) (not b!104504) (not d!28099) (not b!104192) (not d!28703) (not d!28017) (not b!104040) (not b!104838) (not b!104596) (not d!28715) (not d!28405) (not b!104284) (not d!28551) (not b!104057) (not b!104189) (not d!28443) (not bm!10987) (not d!28521) (not b!104727) (not b!104877) (not b!104783) (not b!104649) (not bm!10943) (not b!104843) (not b!104528) (not bm!11001) (not b!104518) (not d!28747) (not b!104784) (not bm!11024) (not b_lambda!4703) (not d!28685) (not b!104346) (not d!28567) (not b!104446) (not b!104210) (not b!104759) (not b!105129) (not b!104411) (not d!28203) (not d!28337) (not b!104577) (not b!105105) (not b!104833) (not d!28605) (not b!104958) (not b!104725) (not d!28105) (not b!104233) (not d!28653) (not b!104406) (not b!104594) (not b!104085) (not d!28255) (not b!105114) (not d!28073) (not d!28619) (not b!104065) (not b!104328) (not b!105170) (not b!104903) (not b!104952) (not d!28133) (not b!105065) (not b!104068) (not b!104432) (not b!104814) (not b_lambda!4647) (not b!104980) (not b!104717) (not b!104787) (not b!105015) (not b!105120) (not b!104250) (not d!28215) (not d!28507) (not b!104977) (not b!104589) (not d!28493) (not b!104368) (not b!104550) (not d!28557) (not d!28257) (not b!104702) (not d!28423) (not b!104826) (not b_lambda!4687) (not b!104398) (not b!104535) (not d!28433) (not d!28359) (not b!104339) (not bm!11034) (not bm!10965) (not bm!11004) (not d!28287) (not b!104799) (not d!28177) (not d!28047) (not b!104048) (not d!28525) (not b!105099) (not b!104942) (not d!28411) (not b!104728) (not d!28453) (not b!104863) (not b!105032) (not b!104739) (not d!28541) (not b!104075) (not b!104464) (not b!104245) (not b!104094) (not d!28533) (not b!104553) (not bm!10936) (not b!104757) (not b!105060) (not b!105149) (not bm!10937) (not b!105013) (not b!105130) (not b!104574) (not d!28339) (not b!104940) (not b!104058) (not d!28391) (not d!28057) (not d!28497) (not d!28407) (not b!104839) (not d!28285) (not d!28467) (not b!104055) (not b!104502) (not bm!10930) (not d!28657) (not d!28129) (not b!104837) (not b!105083) (not bm!10954) (not bm!10957) (not b!104870) (not mapNonEmpty!3918) (not b!105117) (not d!28723) (not b!104145) (not b!104950) (not d!28353) (not b!104382) (not b!104063) (not bm!10960) (not d!28265) (not b!104893) (not d!28505) (not d!28173) (not b_lambda!4653) (not b!104211) (not b!104350) (not d!28455) (not b!104706) (not b!104894) (not b!104779) (not b!105038) (not b!104033) (not d!28103) (not b!104959) (not d!28549) (not b!104139) (not b!104848) (not b!104462) (not b!104279) (not b!104499) (not d!28663) (not d!28123) (not b!104962) (not b!105034) (not bm!11049) (not b!104932) (not b!104131) (not b!104174) (not b!104170) (not b!104560) (not d!28609) (not d!28485) (not b!104079) (not b!104102) (not b!104208) (not b!104875) (not d!28543) (not d!28447) (not b!104305) (not d!28603) (not b!105054) (not b!105037) (not b!104307) (not b!104272) (not b!104342) (not b!104142) (not d!28313) (not b!104082) (not d!28649) (not d!28675) (not bm!10950) (not d!28155) (not b!104680) (not b!105020) (not b!104794) (not b!104829) (not d!28553) (not b!104990) (not b!105010) (not b!104054) (not d!28629) (not b_lambda!4651) (not b!104044) (not bm!10947) (not b!104591) (not b!104309) (not b!104908) (not d!28199) (not b!104184) (not d!28479) (not b!104529) (not b!105000) (not d!28341) (not d!28501) (not b!104321) (not b!104972) (not b!104420) (not b!104229) (not b!104526) (not b_lambda!4649) (not b!105009) (not b!104412) (not b!104449) (not b!104371) (not b!104461) (not b!104602) (not b!104422) (not b!104264) (not b!104268) (not d!28307) (not d!28613) (not b!104820) (not b!104968) (not d!28399) (not d!28491) (not d!28583) (not b!104883) (not b!105044) (not b!104616) (not d!28053) (not d!28555) (not b!104690) (not b!104840) (not d!28595) (not d!28087) (not b!104362) (not b_lambda!4699) (not b!104832) (not d!28235) (not b!104919) (not d!28329) (not b!105138) (not b!104934) (not b!104719) (not bm!11005) (not b!105046) (not b!104720) (not b!104571) (not b_lambda!4701) (not mapNonEmpty!3917) (not d!28763) (not b!105119) (not b!104414) (not d!28579) (not b!104929) (not b!104386) (not d!28677) (not d!28427) (not b!104751) (not d!28379) (not d!28331) (not b!104227) (not bm!10997) (not b!104159) (not d!28737) (not b!104674) (not b!105131) (not b!104710) (not b!104544) (not b!104588) (not b!105176) (not d!28759) (not b!104472) (not bm!10983) (not d!28755) (not bm!10944) (not b!104636) (not b!104823) (not d!28221) (not bm!11000) (not b!104928) (not b!104892) (not b!104738) (not b!104482) (not b!104489) (not b!104492) (not b!105085) (not bm!10968) (not b!104798) (not b!104490) (not b_lambda!4645) (not b!104565) (not d!28141) (not d!28523) (not b!104037) (not d!28023) (not b!104312) (not b!104675) (not b!104151) (not b!104353) (not b!105139) (not d!28191) (not b!104856) (not b!104733) (not d!28607) (not b!104331) (not d!28059) (not b_lambda!4711) (not d!28419) (not b!104530) (not d!28673) (not d!28449) (not b!104821) (not b_lambda!4633) (not d!28769) (not b!104882) (not b!104027) (not bm!10961) (not b!104842) (not d!28319) (not bm!11042) (not d!28705) (not d!28545) (not b!104293) (not b!104850) (not b!104824) (not b!104792) (not b!105106) (not b!104221) (not d!28503) (not d!28293) (not b!104433) (not b!104186) (not d!28661) (not b!104985) (not d!28213) (not b!104248) (not b!104562) (not b!105097) (not b!104164) (not b!104872) (not b!104865) (not b_next!2515) (not d!28061) (not b!104613) (not d!28749) (not b!105167) (not d!28233) (not d!28671) (not b!104486) (not d!28381) (not b!104924) (not bm!11018) (not b!104444) (not b!105053) (not d!28343) (not b!104083) (not d!28735) (not b!104216) (not b!104508) (not d!28243) (not d!28067) (not bm!10971) (not b!104224) (not d!28587) (not b!104522) (not b!104936) (not b!105087) (not d!28077) (not b!104181) (not d!28445) (not d!28547) (not b!105177) (not d!28745) (not b!104155) (not b!104586) (not d!28617) (not d!28299) (not d!28639) (not bm!11015) (not b!104042) (not b!104851) (not b!104810) (not d!28181) (not b!104752) (not bm!10994) (not b!104470) (not b!104581) (not b!104465) (not d!28035) (not b!104762) (not b!104796) (not d!28597) (not d!28207) (not b!104743) (not d!28211) (not b!104097) (not b!104880) (not b!104105) (not d!28565) (not b!104992) (not d!28283) (not d!28697) (not b!104313) (not bm!10986) (not b_lambda!4705) (not b!104029) (not d!28375) (not d!28631) (not d!28475) (not d!28669) (not d!28201) (not b!104457) (not b!104257) (not b_lambda!4695) (not b!104557) (not b!104035) (not d!28217) (not b!105174) (not b!104205) (not d!28563) (not b!104765) (not d!28577) (not b!105005) (not b!104556) (not b!105069) (not b!105090) (not b!104742) (not b!104241) (not b!104239) (not d!28633) (not b!104789) (not b!104365) (not b!104332) (not b!104828) (not d!28109) (not d!28323) (not b!104484) (not bm!10931) (not b!104428) (not b!104175) (not bm!10991) (not b_next!2513) (not b!104989) (not b!105017) (not b!104524) (not d!28623) (not b_lambda!4693) (not b!104542) (not b!104536) (not b!105091) (not b!105074) (not b!104788) (not b!104750) (not d!28297) (not b!104246) (not d!28135) (not d!28771) (not b!104442) (not b!104991) (not d!28707) (not b!104746) (not b!104417) (not bm!10953) (not b!104584) (not b!104722) (not b!104666) (not b!104415) (not b!104327) (not b!104087) (not bm!10979) (not d!28079) (not d!28727) (not b!104660) (not d!28223) (not d!28277) (not d!28421) (not d!28641) (not b!104670) (not b!104869) (not b_lambda!4621) (not b!104451) (not d!28147) (not b!104867) (not bm!11032) (not b!104443) (not b!104103) (not d!28637) (not b!104409) (not d!28249) (not bm!11011) (not d!28377) (not d!28165) (not b!104289) (not b!104483) (not d!28113) (not d!28163) (not b!104183) (not d!28043) (not b!104684) (not d!28241) (not bm!11053) (not d!28591) (not bm!11009) (not d!28121) (not b!104874) (not b!104714) (not d!28219) (not d!28373) (not d!28333) (not b!104780) (not b!104243) (not bm!10940) (not b!104861) (not b!104937) (not bm!10993) (not d!28571) (not b!104423) (not b!104906) (not b!104941) (not bm!10978) (not b!104036) (not d!28049) (not b!104345) (not b!105148) (not b!104498) (not b!104931) (not b_lambda!4689) (not b!104791) (not b!104572) (not b!105030) (not b!104947) (not d!28321) (not d!28655) (not b!104251) (not b!104467) tp_is_empty!2673 (not d!28281) (not b!104194) (not b!104944) (not b!104438) (not b!104654) (not b!104373) (not b!104098) (not b!104766) (not b!104162) (not d!28561) (not b!104611) (not b!104302) (not b!104099) (not b!104282) (not b!104389) (not b!104692) (not b!104774) (not bm!10998) (not d!28231) (not d!28593) (not d!28439) (not b!104252) (not b!104401) (not b!104652) (not b!104295) (not b!104298) (not b!104473) (not b!104606) (not d!28317) (not d!28041) (not d!28779) (not b!105109) (not d!28425) (not b_lambda!4629) (not d!28511) (not d!28159) (not bm!11040) (not b!105057) (not b!104845) (not b!104801) (not b!104909) b_and!6493 (not b!104918) (not b!104761) (not bm!11006) (not b!104497) (not bm!11056) (not b!104966) (not b!104297) (not d!28651) (not b!104089) (not b!104220) (not b!105144) (not bm!11035) (not b!104178) (not b!104551) (not b_lambda!4709) (not d!28495) (not b!104493) (not b!104939) (not bm!10956) (not d!28097) (not b!104399) (not bm!11050))
(check-sat b_and!6491 b_and!6493 (not b_next!2513) (not b_next!2515))
