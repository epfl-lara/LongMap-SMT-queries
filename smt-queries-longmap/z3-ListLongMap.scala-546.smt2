; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!14432 () Bool)

(assert start!14432)

(declare-fun b!136327 () Bool)

(declare-fun b_free!2941 () Bool)

(declare-fun b_next!2941 () Bool)

(assert (=> b!136327 (= b_free!2941 (not b_next!2941))))

(declare-fun tp!11276 () Bool)

(declare-fun b_and!8413 () Bool)

(assert (=> b!136327 (= tp!11276 b_and!8413)))

(declare-fun b!136330 () Bool)

(declare-fun b_free!2943 () Bool)

(declare-fun b_next!2943 () Bool)

(assert (=> b!136330 (= b_free!2943 (not b_next!2943))))

(declare-fun tp!11275 () Bool)

(declare-fun b_and!8415 () Bool)

(assert (=> b!136330 (= tp!11275 b_and!8415)))

(declare-fun b!136315 () Bool)

(declare-fun res!65343 () Bool)

(declare-fun e!88757 () Bool)

(assert (=> b!136315 (=> (not res!65343) (not e!88757))))

(declare-datatypes ((V!3497 0))(
  ( (V!3498 (val!1488 Int)) )
))
(declare-datatypes ((array!4783 0))(
  ( (array!4784 (arr!2260 (Array (_ BitVec 32) (_ BitVec 64))) (size!2531 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!1100 0))(
  ( (ValueCellFull!1100 (v!3214 V!3497)) (EmptyCell!1100) )
))
(declare-datatypes ((array!4785 0))(
  ( (array!4786 (arr!2261 (Array (_ BitVec 32) ValueCell!1100)) (size!2532 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!1108 0))(
  ( (LongMapFixedSize!1109 (defaultEntry!2888 Int) (mask!7201 (_ BitVec 32)) (extraKeys!2649 (_ BitVec 32)) (zeroValue!2741 V!3497) (minValue!2741 V!3497) (_size!603 (_ BitVec 32)) (_keys!4640 array!4783) (_values!2871 array!4785) (_vacant!603 (_ BitVec 32))) )
))
(declare-fun newMap!16 () LongMapFixedSize!1108)

(declare-fun valid!535 (LongMapFixedSize!1108) Bool)

(assert (=> b!136315 (= res!65343 (valid!535 newMap!16))))

(declare-fun b!136316 () Bool)

(declare-fun e!88756 () Bool)

(declare-fun e!88762 () Bool)

(declare-fun mapRes!4683 () Bool)

(assert (=> b!136316 (= e!88756 (and e!88762 mapRes!4683))))

(declare-fun condMapEmpty!4684 () Bool)

(declare-datatypes ((Cell!892 0))(
  ( (Cell!893 (v!3215 LongMapFixedSize!1108)) )
))
(declare-datatypes ((LongMap!892 0))(
  ( (LongMap!893 (underlying!457 Cell!892)) )
))
(declare-fun thiss!992 () LongMap!892)

(declare-fun mapDefault!4684 () ValueCell!1100)

(assert (=> b!136316 (= condMapEmpty!4684 (= (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4684)))))

(declare-fun b!136317 () Bool)

(declare-fun e!88761 () Bool)

(declare-fun e!88752 () Bool)

(assert (=> b!136317 (= e!88761 e!88752)))

(declare-fun b!136318 () Bool)

(declare-fun e!88764 () Bool)

(declare-fun e!88765 () Bool)

(declare-fun mapRes!4684 () Bool)

(assert (=> b!136318 (= e!88764 (and e!88765 mapRes!4684))))

(declare-fun condMapEmpty!4683 () Bool)

(declare-fun mapDefault!4683 () ValueCell!1100)

(assert (=> b!136318 (= condMapEmpty!4683 (= (arr!2261 (_values!2871 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4683)))))

(declare-fun b!136319 () Bool)

(declare-fun e!88763 () Bool)

(assert (=> b!136319 (= e!88757 e!88763)))

(declare-fun res!65340 () Bool)

(assert (=> b!136319 (=> (not res!65340) (not e!88763))))

(declare-datatypes ((tuple2!2598 0))(
  ( (tuple2!2599 (_1!1310 (_ BitVec 64)) (_2!1310 V!3497)) )
))
(declare-datatypes ((List!1716 0))(
  ( (Nil!1713) (Cons!1712 (h!2318 tuple2!2598) (t!6195 List!1716)) )
))
(declare-datatypes ((ListLongMap!1679 0))(
  ( (ListLongMap!1680 (toList!855 List!1716)) )
))
(declare-fun lt!71024 () ListLongMap!1679)

(declare-fun lt!71022 () ListLongMap!1679)

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!136319 (= res!65340 (and (= lt!71022 lt!71024) (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1397 (LongMapFixedSize!1108) ListLongMap!1679)

(assert (=> b!136319 (= lt!71024 (map!1397 newMap!16))))

(declare-fun getCurrentListMap!521 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) Int) ListLongMap!1679)

(assert (=> b!136319 (= lt!71022 (getCurrentListMap!521 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!136320 () Bool)

(declare-fun res!65342 () Bool)

(assert (=> b!136320 (=> (not res!65342) (not e!88757))))

(assert (=> b!136320 (= res!65342 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!136321 () Bool)

(declare-fun tp_is_empty!2887 () Bool)

(assert (=> b!136321 (= e!88765 tp_is_empty!2887)))

(declare-fun b!136322 () Bool)

(declare-fun e!88760 () Bool)

(assert (=> b!136322 (= e!88763 e!88760)))

(declare-fun res!65339 () Bool)

(assert (=> b!136322 (=> (not res!65339) (not e!88760))))

(declare-fun contains!892 (ListLongMap!1679 (_ BitVec 64)) Bool)

(assert (=> b!136322 (= res!65339 (contains!892 lt!71024 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-datatypes ((tuple2!2600 0))(
  ( (tuple2!2601 (_1!1311 Bool) (_2!1311 LongMapFixedSize!1108)) )
))
(declare-fun lt!71021 () tuple2!2600)

(declare-fun update!195 (LongMapFixedSize!1108 (_ BitVec 64) V!3497) tuple2!2600)

(declare-fun get!1488 (ValueCell!1100 V!3497) V!3497)

(declare-fun dynLambda!421 (Int (_ BitVec 64)) V!3497)

(assert (=> b!136322 (= lt!71021 (update!195 newMap!16 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun res!65338 () Bool)

(assert (=> start!14432 (=> (not res!65338) (not e!88757))))

(declare-fun valid!536 (LongMap!892) Bool)

(assert (=> start!14432 (= res!65338 (valid!536 thiss!992))))

(assert (=> start!14432 e!88757))

(assert (=> start!14432 e!88761))

(assert (=> start!14432 true))

(declare-fun e!88758 () Bool)

(assert (=> start!14432 e!88758))

(declare-fun mapIsEmpty!4683 () Bool)

(assert (=> mapIsEmpty!4683 mapRes!4683))

(declare-fun b!136323 () Bool)

(declare-fun res!65341 () Bool)

(assert (=> b!136323 (=> (not res!65341) (not e!88757))))

(assert (=> b!136323 (= res!65341 (bvsge (bvadd #b00000000000000000000000000000001 (mask!7201 newMap!16)) (_size!603 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!136324 () Bool)

(assert (=> b!136324 (= e!88762 tp_is_empty!2887)))

(declare-fun b!136325 () Bool)

(declare-fun e!88753 () Bool)

(assert (=> b!136325 (= e!88752 e!88753)))

(declare-fun mapNonEmpty!4683 () Bool)

(declare-fun tp!11277 () Bool)

(declare-fun e!88759 () Bool)

(assert (=> mapNonEmpty!4683 (= mapRes!4683 (and tp!11277 e!88759))))

(declare-fun mapValue!4684 () ValueCell!1100)

(declare-fun mapKey!4683 () (_ BitVec 32))

(declare-fun mapRest!4684 () (Array (_ BitVec 32) ValueCell!1100))

(assert (=> mapNonEmpty!4683 (= (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (store mapRest!4684 mapKey!4683 mapValue!4684))))

(declare-fun b!136326 () Bool)

(assert (=> b!136326 (= e!88760 (not (bvslt (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b01111111111111111111111111111111)))))

(declare-fun arrayContainsKey!0 (array!4783 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!136326 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-datatypes ((Unit!4286 0))(
  ( (Unit!4287) )
))
(declare-fun lt!71023 () Unit!4286)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!129 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) (_ BitVec 32) Int) Unit!4286)

(assert (=> b!136326 (= lt!71023 (lemmaListMapContainsThenArrayContainsFrom!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun array_inv!1439 (array!4783) Bool)

(declare-fun array_inv!1440 (array!4785) Bool)

(assert (=> b!136327 (= e!88753 (and tp!11276 tp_is_empty!2887 (array_inv!1439 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (array_inv!1440 (_values!2871 (v!3215 (underlying!457 thiss!992)))) e!88756))))

(declare-fun b!136328 () Bool)

(assert (=> b!136328 (= e!88759 tp_is_empty!2887)))

(declare-fun b!136329 () Bool)

(declare-fun e!88766 () Bool)

(assert (=> b!136329 (= e!88766 tp_is_empty!2887)))

(assert (=> b!136330 (= e!88758 (and tp!11275 tp_is_empty!2887 (array_inv!1439 (_keys!4640 newMap!16)) (array_inv!1440 (_values!2871 newMap!16)) e!88764))))

(declare-fun mapIsEmpty!4684 () Bool)

(assert (=> mapIsEmpty!4684 mapRes!4684))

(declare-fun mapNonEmpty!4684 () Bool)

(declare-fun tp!11278 () Bool)

(assert (=> mapNonEmpty!4684 (= mapRes!4684 (and tp!11278 e!88766))))

(declare-fun mapKey!4684 () (_ BitVec 32))

(declare-fun mapRest!4683 () (Array (_ BitVec 32) ValueCell!1100))

(declare-fun mapValue!4683 () ValueCell!1100)

(assert (=> mapNonEmpty!4684 (= (arr!2261 (_values!2871 newMap!16)) (store mapRest!4683 mapKey!4684 mapValue!4683))))

(assert (= (and start!14432 res!65338) b!136320))

(assert (= (and b!136320 res!65342) b!136315))

(assert (= (and b!136315 res!65343) b!136323))

(assert (= (and b!136323 res!65341) b!136319))

(assert (= (and b!136319 res!65340) b!136322))

(assert (= (and b!136322 res!65339) b!136326))

(assert (= (and b!136316 condMapEmpty!4684) mapIsEmpty!4683))

(assert (= (and b!136316 (not condMapEmpty!4684)) mapNonEmpty!4683))

(get-info :version)

(assert (= (and mapNonEmpty!4683 ((_ is ValueCellFull!1100) mapValue!4684)) b!136328))

(assert (= (and b!136316 ((_ is ValueCellFull!1100) mapDefault!4684)) b!136324))

(assert (= b!136327 b!136316))

(assert (= b!136325 b!136327))

(assert (= b!136317 b!136325))

(assert (= start!14432 b!136317))

(assert (= (and b!136318 condMapEmpty!4683) mapIsEmpty!4684))

(assert (= (and b!136318 (not condMapEmpty!4683)) mapNonEmpty!4684))

(assert (= (and mapNonEmpty!4684 ((_ is ValueCellFull!1100) mapValue!4683)) b!136329))

(assert (= (and b!136318 ((_ is ValueCellFull!1100) mapDefault!4683)) b!136321))

(assert (= b!136330 b!136318))

(assert (= start!14432 b!136330))

(declare-fun b_lambda!6077 () Bool)

(assert (=> (not b_lambda!6077) (not b!136322)))

(declare-fun t!6192 () Bool)

(declare-fun tb!2441 () Bool)

(assert (=> (and b!136327 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) t!6192) tb!2441))

(declare-fun result!4023 () Bool)

(assert (=> tb!2441 (= result!4023 tp_is_empty!2887)))

(assert (=> b!136322 t!6192))

(declare-fun b_and!8417 () Bool)

(assert (= b_and!8413 (and (=> t!6192 result!4023) b_and!8417)))

(declare-fun tb!2443 () Bool)

(declare-fun t!6194 () Bool)

(assert (=> (and b!136330 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) t!6194) tb!2443))

(declare-fun result!4027 () Bool)

(assert (= result!4027 result!4023))

(assert (=> b!136322 t!6194))

(declare-fun b_and!8419 () Bool)

(assert (= b_and!8415 (and (=> t!6194 result!4027) b_and!8419)))

(declare-fun m!162419 () Bool)

(assert (=> b!136315 m!162419))

(declare-fun m!162421 () Bool)

(assert (=> b!136326 m!162421))

(assert (=> b!136326 m!162421))

(declare-fun m!162423 () Bool)

(assert (=> b!136326 m!162423))

(assert (=> b!136326 m!162421))

(declare-fun m!162425 () Bool)

(assert (=> b!136326 m!162425))

(declare-fun m!162427 () Bool)

(assert (=> mapNonEmpty!4684 m!162427))

(declare-fun m!162429 () Bool)

(assert (=> b!136327 m!162429))

(declare-fun m!162431 () Bool)

(assert (=> b!136327 m!162431))

(assert (=> b!136319 m!162421))

(declare-fun m!162433 () Bool)

(assert (=> b!136319 m!162433))

(declare-fun m!162435 () Bool)

(assert (=> b!136319 m!162435))

(declare-fun m!162437 () Bool)

(assert (=> start!14432 m!162437))

(declare-fun m!162439 () Bool)

(assert (=> mapNonEmpty!4683 m!162439))

(declare-fun m!162441 () Bool)

(assert (=> b!136322 m!162441))

(declare-fun m!162443 () Bool)

(assert (=> b!136322 m!162443))

(declare-fun m!162445 () Bool)

(assert (=> b!136322 m!162445))

(assert (=> b!136322 m!162421))

(assert (=> b!136322 m!162443))

(assert (=> b!136322 m!162421))

(declare-fun m!162447 () Bool)

(assert (=> b!136322 m!162447))

(assert (=> b!136322 m!162421))

(assert (=> b!136322 m!162445))

(declare-fun m!162449 () Bool)

(assert (=> b!136322 m!162449))

(assert (=> b!136322 m!162441))

(declare-fun m!162451 () Bool)

(assert (=> b!136330 m!162451))

(declare-fun m!162453 () Bool)

(assert (=> b!136330 m!162453))

(check-sat (not b!136319) (not b_next!2943) (not b!136327) (not b!136322) (not mapNonEmpty!4683) (not mapNonEmpty!4684) (not start!14432) b_and!8419 (not b!136315) (not b_lambda!6077) (not b!136330) tp_is_empty!2887 (not b!136326) (not b_next!2941) b_and!8417)
(check-sat b_and!8417 b_and!8419 (not b_next!2941) (not b_next!2943))
(get-model)

(declare-fun b_lambda!6083 () Bool)

(assert (= b_lambda!6077 (or (and b!136327 b_free!2941) (and b!136330 b_free!2943 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))) b_lambda!6083)))

(check-sat (not b!136319) (not b_next!2943) (not b!136327) (not b!136322) (not mapNonEmpty!4684) (not start!14432) b_and!8419 (not b!136315) (not b!136330) tp_is_empty!2887 (not b!136326) (not b_lambda!6083) (not mapNonEmpty!4683) (not b_next!2941) b_and!8417)
(check-sat b_and!8417 b_and!8419 (not b_next!2941) (not b_next!2943))
(get-model)

(declare-fun d!42689 () Bool)

(assert (=> d!42689 (= (valid!536 thiss!992) (valid!535 (v!3215 (underlying!457 thiss!992))))))

(declare-fun bs!5714 () Bool)

(assert (= bs!5714 d!42689))

(declare-fun m!162527 () Bool)

(assert (=> bs!5714 m!162527))

(assert (=> start!14432 d!42689))

(declare-fun d!42691 () Bool)

(declare-fun res!65386 () Bool)

(declare-fun e!88859 () Bool)

(assert (=> d!42691 (=> (not res!65386) (not e!88859))))

(declare-fun simpleValid!93 (LongMapFixedSize!1108) Bool)

(assert (=> d!42691 (= res!65386 (simpleValid!93 newMap!16))))

(assert (=> d!42691 (= (valid!535 newMap!16) e!88859)))

(declare-fun b!136439 () Bool)

(declare-fun res!65387 () Bool)

(assert (=> b!136439 (=> (not res!65387) (not e!88859))))

(declare-fun arrayCountValidKeys!0 (array!4783 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!136439 (= res!65387 (= (arrayCountValidKeys!0 (_keys!4640 newMap!16) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (_size!603 newMap!16)))))

(declare-fun b!136440 () Bool)

(declare-fun res!65388 () Bool)

(assert (=> b!136440 (=> (not res!65388) (not e!88859))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4783 (_ BitVec 32)) Bool)

(assert (=> b!136440 (= res!65388 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!136441 () Bool)

(declare-datatypes ((List!1719 0))(
  ( (Nil!1716) (Cons!1715 (h!2321 (_ BitVec 64)) (t!6206 List!1719)) )
))
(declare-fun arrayNoDuplicates!0 (array!4783 (_ BitVec 32) List!1719) Bool)

(assert (=> b!136441 (= e!88859 (arrayNoDuplicates!0 (_keys!4640 newMap!16) #b00000000000000000000000000000000 Nil!1716))))

(assert (= (and d!42691 res!65386) b!136439))

(assert (= (and b!136439 res!65387) b!136440))

(assert (= (and b!136440 res!65388) b!136441))

(declare-fun m!162529 () Bool)

(assert (=> d!42691 m!162529))

(declare-fun m!162531 () Bool)

(assert (=> b!136439 m!162531))

(declare-fun m!162533 () Bool)

(assert (=> b!136440 m!162533))

(declare-fun m!162535 () Bool)

(assert (=> b!136441 m!162535))

(assert (=> b!136315 d!42691))

(declare-fun d!42693 () Bool)

(assert (=> d!42693 (= (array_inv!1439 (_keys!4640 newMap!16)) (bvsge (size!2531 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!136330 d!42693))

(declare-fun d!42695 () Bool)

(assert (=> d!42695 (= (array_inv!1440 (_values!2871 newMap!16)) (bvsge (size!2532 (_values!2871 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!136330 d!42695))

(declare-fun d!42697 () Bool)

(declare-fun e!88864 () Bool)

(assert (=> d!42697 e!88864))

(declare-fun res!65391 () Bool)

(assert (=> d!42697 (=> res!65391 e!88864)))

(declare-fun lt!71057 () Bool)

(assert (=> d!42697 (= res!65391 (not lt!71057))))

(declare-fun lt!71059 () Bool)

(assert (=> d!42697 (= lt!71057 lt!71059)))

(declare-fun lt!71060 () Unit!4286)

(declare-fun e!88865 () Unit!4286)

(assert (=> d!42697 (= lt!71060 e!88865)))

(declare-fun c!25549 () Bool)

(assert (=> d!42697 (= c!25549 lt!71059)))

(declare-fun containsKey!175 (List!1716 (_ BitVec 64)) Bool)

(assert (=> d!42697 (= lt!71059 (containsKey!175 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42697 (= (contains!892 lt!71024 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71057)))

(declare-fun b!136448 () Bool)

(declare-fun lt!71058 () Unit!4286)

(assert (=> b!136448 (= e!88865 lt!71058)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!124 (List!1716 (_ BitVec 64)) Unit!4286)

(assert (=> b!136448 (= lt!71058 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-datatypes ((Option!177 0))(
  ( (Some!176 (v!3221 V!3497)) (None!175) )
))
(declare-fun isDefined!125 (Option!177) Bool)

(declare-fun getValueByKey!171 (List!1716 (_ BitVec 64)) Option!177)

(assert (=> b!136448 (isDefined!125 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136449 () Bool)

(declare-fun Unit!4292 () Unit!4286)

(assert (=> b!136449 (= e!88865 Unit!4292)))

(declare-fun b!136450 () Bool)

(assert (=> b!136450 (= e!88864 (isDefined!125 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (= (and d!42697 c!25549) b!136448))

(assert (= (and d!42697 (not c!25549)) b!136449))

(assert (= (and d!42697 (not res!65391)) b!136450))

(assert (=> d!42697 m!162421))

(declare-fun m!162537 () Bool)

(assert (=> d!42697 m!162537))

(assert (=> b!136448 m!162421))

(declare-fun m!162539 () Bool)

(assert (=> b!136448 m!162539))

(assert (=> b!136448 m!162421))

(declare-fun m!162541 () Bool)

(assert (=> b!136448 m!162541))

(assert (=> b!136448 m!162541))

(declare-fun m!162543 () Bool)

(assert (=> b!136448 m!162543))

(assert (=> b!136450 m!162421))

(assert (=> b!136450 m!162541))

(assert (=> b!136450 m!162541))

(assert (=> b!136450 m!162543))

(assert (=> b!136322 d!42697))

(declare-fun b!136535 () Bool)

(declare-fun e!88922 () Unit!4286)

(declare-fun Unit!4293 () Unit!4286)

(assert (=> b!136535 (= e!88922 Unit!4293)))

(declare-fun lt!71125 () Unit!4286)

(declare-fun call!14977 () Unit!4286)

(assert (=> b!136535 (= lt!71125 call!14977)))

(declare-datatypes ((SeekEntryResult!279 0))(
  ( (MissingZero!279 (index!3277 (_ BitVec 32))) (Found!279 (index!3278 (_ BitVec 32))) (Intermediate!279 (undefined!1091 Bool) (index!3279 (_ BitVec 32)) (x!15806 (_ BitVec 32))) (Undefined!279) (MissingVacant!279 (index!3280 (_ BitVec 32))) )
))
(declare-fun lt!71116 () SeekEntryResult!279)

(declare-fun call!14998 () SeekEntryResult!279)

(assert (=> b!136535 (= lt!71116 call!14998)))

(declare-fun res!65425 () Bool)

(assert (=> b!136535 (= res!65425 ((_ is Found!279) lt!71116))))

(declare-fun e!88917 () Bool)

(assert (=> b!136535 (=> (not res!65425) (not e!88917))))

(assert (=> b!136535 e!88917))

(declare-fun lt!71122 () Unit!4286)

(assert (=> b!136535 (= lt!71122 lt!71125)))

(assert (=> b!136535 false))

(declare-fun bm!14973 () Bool)

(declare-fun call!14984 () SeekEntryResult!279)

(assert (=> bm!14973 (= call!14998 call!14984)))

(declare-fun bm!14974 () Bool)

(declare-fun call!14997 () ListLongMap!1679)

(declare-fun call!14990 () ListLongMap!1679)

(assert (=> bm!14974 (= call!14997 call!14990)))

(declare-fun d!42699 () Bool)

(declare-fun e!88929 () Bool)

(assert (=> d!42699 e!88929))

(declare-fun res!65422 () Bool)

(assert (=> d!42699 (=> (not res!65422) (not e!88929))))

(declare-fun lt!71138 () tuple2!2600)

(assert (=> d!42699 (= res!65422 (valid!535 (_2!1311 lt!71138)))))

(declare-fun e!88919 () tuple2!2600)

(assert (=> d!42699 (= lt!71138 e!88919)))

(declare-fun c!25588 () Bool)

(assert (=> d!42699 (= c!25588 (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvneg (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!42699 (valid!535 newMap!16)))

(assert (=> d!42699 (= (update!195 newMap!16 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!71138)))

(declare-fun b!136536 () Bool)

(declare-fun c!25581 () Bool)

(declare-fun lt!71133 () SeekEntryResult!279)

(assert (=> b!136536 (= c!25581 ((_ is MissingVacant!279) lt!71133))))

(declare-fun e!88918 () tuple2!2600)

(declare-fun e!88931 () tuple2!2600)

(assert (=> b!136536 (= e!88918 e!88931)))

(declare-fun b!136537 () Bool)

(declare-fun lt!71129 () Unit!4286)

(declare-fun lt!71137 () Unit!4286)

(assert (=> b!136537 (= lt!71129 lt!71137)))

(declare-fun call!14978 () ListLongMap!1679)

(assert (=> b!136537 (= call!14997 call!14978)))

(declare-fun lt!71132 () (_ BitVec 32))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!62 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 V!3497 Int) Unit!4286)

(assert (=> b!136537 (= lt!71137 (lemmaChangeZeroKeyThenAddPairToListMap!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71132 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) (defaultEntry!2888 newMap!16)))))

(assert (=> b!136537 (= lt!71132 (bvor (extraKeys!2649 newMap!16) #b00000000000000000000000000000001))))

(declare-fun e!88928 () tuple2!2600)

(assert (=> b!136537 (= e!88928 (tuple2!2601 true (LongMapFixedSize!1109 (defaultEntry!2888 newMap!16) (mask!7201 newMap!16) (bvor (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) (_size!603 newMap!16) (_keys!4640 newMap!16) (_values!2871 newMap!16) (_vacant!603 newMap!16))))))

(declare-fun b!136538 () Bool)

(declare-fun e!88910 () ListLongMap!1679)

(declare-fun call!14981 () ListLongMap!1679)

(assert (=> b!136538 (= e!88910 call!14981)))

(declare-fun b!136539 () Bool)

(declare-fun e!88927 () ListLongMap!1679)

(assert (=> b!136539 (= e!88927 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun b!136540 () Bool)

(declare-fun res!65420 () Bool)

(declare-fun lt!71120 () SeekEntryResult!279)

(assert (=> b!136540 (= res!65420 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!71120)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!88926 () Bool)

(assert (=> b!136540 (=> (not res!65420) (not e!88926))))

(declare-fun b!136541 () Bool)

(assert (=> b!136541 (= e!88917 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71116)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun bm!14975 () Bool)

(declare-fun call!14987 () Bool)

(declare-fun call!14996 () Bool)

(assert (=> bm!14975 (= call!14987 call!14996)))

(declare-fun bm!14976 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!62 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) Int) Unit!4286)

(assert (=> bm!14976 (= call!14977 (lemmaInListMapThenSeekEntryOrOpenFindsIt!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)))))

(declare-fun call!14991 () ListLongMap!1679)

(declare-fun lt!71135 () (_ BitVec 32))

(declare-fun lt!71128 () array!4785)

(declare-fun c!25580 () Bool)

(declare-fun bm!14977 () Bool)

(declare-fun c!25585 () Bool)

(assert (=> bm!14977 (= call!14991 (getCurrentListMap!521 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun b!136542 () Bool)

(declare-fun lt!71121 () Unit!4286)

(declare-fun lt!71119 () Unit!4286)

(assert (=> b!136542 (= lt!71121 lt!71119)))

(declare-fun call!14999 () ListLongMap!1679)

(assert (=> b!136542 (contains!892 call!14999 (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))

(declare-fun lemmaValidKeyInArrayIsInListMap!121 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) Int) Unit!4286)

(assert (=> b!136542 (= lt!71119 (lemmaValidKeyInArrayIsInListMap!121 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (defaultEntry!2888 newMap!16)))))

(assert (=> b!136542 (= lt!71128 (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))))

(declare-fun lt!71115 () Unit!4286)

(declare-fun lt!71127 () Unit!4286)

(assert (=> b!136542 (= lt!71115 lt!71127)))

(declare-fun call!14983 () ListLongMap!1679)

(assert (=> b!136542 (= call!14990 call!14983)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!62 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) (_ BitVec 64) V!3497 Int) Unit!4286)

(assert (=> b!136542 (= lt!71127 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71130 () Unit!4286)

(declare-fun e!88924 () Unit!4286)

(assert (=> b!136542 (= lt!71130 e!88924)))

(declare-fun c!25579 () Bool)

(declare-fun call!14992 () Bool)

(assert (=> b!136542 (= c!25579 call!14992)))

(declare-fun e!88911 () tuple2!2600)

(assert (=> b!136542 (= e!88911 (tuple2!2601 true (LongMapFixedSize!1109 (defaultEntry!2888 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (_size!603 newMap!16) (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (_vacant!603 newMap!16))))))

(declare-fun bm!14978 () Bool)

(declare-fun call!14993 () Bool)

(declare-fun call!14986 () Bool)

(assert (=> bm!14978 (= call!14993 call!14986)))

(declare-fun b!136543 () Bool)

(declare-fun e!88912 () Bool)

(declare-fun e!88913 () Bool)

(assert (=> b!136543 (= e!88912 e!88913)))

(declare-fun res!65423 () Bool)

(declare-fun call!14985 () Bool)

(assert (=> b!136543 (= res!65423 call!14985)))

(assert (=> b!136543 (=> (not res!65423) (not e!88913))))

(declare-fun bm!14979 () Bool)

(declare-fun call!14980 () tuple2!2600)

(declare-fun updateHelperNewKey!62 (LongMapFixedSize!1108 (_ BitVec 64) V!3497 (_ BitVec 32)) tuple2!2600)

(assert (=> bm!14979 (= call!14980 (updateHelperNewKey!62 newMap!16 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))

(declare-fun b!136544 () Bool)

(declare-fun c!25589 () Bool)

(declare-fun lt!71126 () SeekEntryResult!279)

(assert (=> b!136544 (= c!25589 ((_ is MissingVacant!279) lt!71126))))

(declare-fun e!88914 () Bool)

(assert (=> b!136544 (= e!88914 e!88912)))

(declare-fun b!136545 () Bool)

(assert (=> b!136545 (= e!88912 ((_ is Undefined!279) lt!71126))))

(declare-fun b!136546 () Bool)

(declare-fun call!14995 () Bool)

(assert (=> b!136546 (= e!88913 (not call!14995))))

(declare-fun bm!14980 () Bool)

(declare-fun call!14982 () SeekEntryResult!279)

(assert (=> bm!14980 (= call!14982 call!14984)))

(declare-fun bm!14981 () Bool)

(assert (=> bm!14981 (= call!14983 (getCurrentListMap!521 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun b!136547 () Bool)

(declare-fun e!88923 () Bool)

(declare-fun call!14979 () ListLongMap!1679)

(declare-fun call!14989 () ListLongMap!1679)

(assert (=> b!136547 (= e!88923 (= call!14979 call!14989))))

(declare-fun call!14994 () Unit!4286)

(declare-fun bm!14982 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!62 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) Int) Unit!4286)

(assert (=> bm!14982 (= call!14994 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)))))

(declare-fun b!136548 () Bool)

(declare-fun e!88921 () Bool)

(declare-fun call!14988 () Bool)

(assert (=> b!136548 (= e!88921 (not call!14988))))

(declare-fun b!136549 () Bool)

(declare-fun lt!71123 () Unit!4286)

(declare-fun lt!71141 () Unit!4286)

(assert (=> b!136549 (= lt!71123 lt!71141)))

(assert (=> b!136549 (= call!14997 call!14978)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!62 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 V!3497 Int) Unit!4286)

(assert (=> b!136549 (= lt!71141 (lemmaChangeLongMinValueKeyThenAddPairToListMap!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)))))

(assert (=> b!136549 (= lt!71135 (bvor (extraKeys!2649 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!136549 (= e!88928 (tuple2!2601 true (LongMapFixedSize!1109 (defaultEntry!2888 newMap!16) (mask!7201 newMap!16) (bvor (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!603 newMap!16) (_keys!4640 newMap!16) (_values!2871 newMap!16) (_vacant!603 newMap!16))))))

(declare-fun b!136550 () Bool)

(declare-fun lt!71131 () Unit!4286)

(assert (=> b!136550 (= e!88924 lt!71131)))

(assert (=> b!136550 (= lt!71131 call!14977)))

(declare-fun lt!71139 () SeekEntryResult!279)

(assert (=> b!136550 (= lt!71139 call!14982)))

(declare-fun res!65429 () Bool)

(assert (=> b!136550 (= res!65429 ((_ is Found!279) lt!71139))))

(declare-fun e!88916 () Bool)

(assert (=> b!136550 (=> (not res!65429) (not e!88916))))

(assert (=> b!136550 e!88916))

(declare-fun b!136551 () Bool)

(assert (=> b!136551 (= e!88916 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71139)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun e!88925 () Bool)

(declare-fun b!136552 () Bool)

(declare-fun +!164 (ListLongMap!1679 tuple2!2598) ListLongMap!1679)

(assert (=> b!136552 (= e!88925 (= call!14979 (+!164 call!14989 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!136553 () Bool)

(assert (=> b!136553 (= e!88929 e!88923)))

(declare-fun c!25584 () Bool)

(assert (=> b!136553 (= c!25584 (_1!1311 lt!71138))))

(declare-fun bm!14983 () Bool)

(declare-fun c!25578 () Bool)

(assert (=> bm!14983 (= c!25578 c!25585)))

(assert (=> bm!14983 (= call!14992 (contains!892 e!88927 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun call!14976 () Bool)

(declare-fun bm!14984 () Bool)

(assert (=> bm!14984 (= call!14976 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!14985 () Bool)

(assert (=> bm!14985 (= call!14995 call!14976)))

(declare-fun b!136554 () Bool)

(assert (=> b!136554 (= e!88927 call!14999)))

(declare-fun bm!14986 () Bool)

(assert (=> bm!14986 (= call!14981 call!14983)))

(declare-fun b!136555 () Bool)

(assert (=> b!136555 (= e!88919 e!88928)))

(assert (=> b!136555 (= c!25580 (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14987 () Bool)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4783 (_ BitVec 32)) SeekEntryResult!279)

(assert (=> bm!14987 (= call!14984 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun bm!14988 () Bool)

(assert (=> bm!14988 (= call!14989 (map!1397 newMap!16))))

(declare-fun b!136556 () Bool)

(declare-fun c!25582 () Bool)

(assert (=> b!136556 (= c!25582 ((_ is MissingVacant!279) lt!71120))))

(declare-fun e!88920 () Bool)

(declare-fun e!88930 () Bool)

(assert (=> b!136556 (= e!88920 e!88930)))

(declare-fun c!25586 () Bool)

(declare-fun bm!14989 () Bool)

(declare-fun c!25590 () Bool)

(declare-fun c!25591 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!14989 (= call!14986 (inRange!0 (ite c!25585 (ite c!25591 (index!3278 lt!71116) (ite c!25586 (index!3277 lt!71126) (index!3280 lt!71126))) (ite c!25579 (index!3278 lt!71139) (ite c!25590 (index!3277 lt!71120) (index!3280 lt!71120)))) (mask!7201 newMap!16)))))

(declare-fun b!136557 () Bool)

(assert (=> b!136557 (= e!88910 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun b!136558 () Bool)

(declare-fun res!65432 () Bool)

(declare-fun e!88915 () Bool)

(assert (=> b!136558 (=> (not res!65432) (not e!88915))))

(assert (=> b!136558 (= res!65432 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!71126)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!136559 () Bool)

(declare-fun lt!71117 () Unit!4286)

(assert (=> b!136559 (= lt!71117 e!88922)))

(assert (=> b!136559 (= c!25591 call!14992)))

(assert (=> b!136559 (= e!88918 (tuple2!2601 false newMap!16))))

(declare-fun b!136560 () Bool)

(declare-fun res!65424 () Bool)

(assert (=> b!136560 (= res!65424 call!14996)))

(assert (=> b!136560 (=> (not res!65424) (not e!88916))))

(declare-fun b!136561 () Bool)

(assert (=> b!136561 (= e!88926 (not call!14988))))

(declare-fun b!136562 () Bool)

(assert (=> b!136562 (= e!88915 (not call!14995))))

(declare-fun b!136563 () Bool)

(declare-fun lt!71118 () tuple2!2600)

(assert (=> b!136563 (= lt!71118 call!14980)))

(assert (=> b!136563 (= e!88911 (tuple2!2601 (_1!1311 lt!71118) (_2!1311 lt!71118)))))

(declare-fun b!136564 () Bool)

(assert (=> b!136564 (= e!88930 ((_ is Undefined!279) lt!71120))))

(declare-fun bm!14990 () Bool)

(assert (=> bm!14990 (= call!14999 call!14991)))

(declare-fun bm!14991 () Bool)

(assert (=> bm!14991 (= call!14990 (+!164 e!88910 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!25583 () Bool)

(assert (=> bm!14991 (= c!25583 c!25588)))

(declare-fun b!136565 () Bool)

(assert (=> b!136565 (= e!88931 e!88911)))

(declare-fun c!25587 () Bool)

(assert (=> b!136565 (= c!25587 ((_ is MissingZero!279) lt!71133))))

(declare-fun b!136566 () Bool)

(assert (=> b!136566 (= e!88919 e!88918)))

(assert (=> b!136566 (= lt!71133 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(assert (=> b!136566 (= c!25585 ((_ is Undefined!279) lt!71133))))

(declare-fun bm!14992 () Bool)

(assert (=> bm!14992 (= call!14978 call!14991)))

(declare-fun b!136567 () Bool)

(declare-fun res!65431 () Bool)

(assert (=> b!136567 (=> (not res!65431) (not e!88915))))

(assert (=> b!136567 (= res!65431 call!14985)))

(assert (=> b!136567 (= e!88914 e!88915)))

(declare-fun b!136568 () Bool)

(declare-fun Unit!4294 () Unit!4286)

(assert (=> b!136568 (= e!88924 Unit!4294)))

(declare-fun lt!71140 () Unit!4286)

(assert (=> b!136568 (= lt!71140 call!14994)))

(assert (=> b!136568 (= lt!71120 call!14982)))

(assert (=> b!136568 (= c!25590 ((_ is MissingZero!279) lt!71120))))

(assert (=> b!136568 e!88920))

(declare-fun lt!71136 () Unit!4286)

(assert (=> b!136568 (= lt!71136 lt!71140)))

(assert (=> b!136568 false))

(declare-fun b!136569 () Bool)

(declare-fun lt!71124 () tuple2!2600)

(assert (=> b!136569 (= e!88931 (tuple2!2601 (_1!1311 lt!71124) (_2!1311 lt!71124)))))

(assert (=> b!136569 (= lt!71124 call!14980)))

(declare-fun bm!14993 () Bool)

(assert (=> bm!14993 (= call!14996 call!14986)))

(declare-fun bm!14994 () Bool)

(assert (=> bm!14994 (= call!14988 call!14976)))

(declare-fun b!136570 () Bool)

(declare-fun res!65426 () Bool)

(assert (=> b!136570 (= res!65426 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!71126)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136570 (=> (not res!65426) (not e!88913))))

(declare-fun b!136571 () Bool)

(declare-fun lt!71134 () Unit!4286)

(assert (=> b!136571 (= e!88922 lt!71134)))

(assert (=> b!136571 (= lt!71134 call!14994)))

(assert (=> b!136571 (= lt!71126 call!14998)))

(assert (=> b!136571 (= c!25586 ((_ is MissingZero!279) lt!71126))))

(assert (=> b!136571 e!88914))

(declare-fun b!136572 () Bool)

(assert (=> b!136572 (= e!88930 e!88926)))

(declare-fun res!65428 () Bool)

(assert (=> b!136572 (= res!65428 call!14987)))

(assert (=> b!136572 (=> (not res!65428) (not e!88926))))

(declare-fun b!136573 () Bool)

(assert (=> b!136573 (= e!88923 e!88925)))

(declare-fun res!65427 () Bool)

(assert (=> b!136573 (= res!65427 (contains!892 call!14979 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!136573 (=> (not res!65427) (not e!88925))))

(declare-fun b!136574 () Bool)

(declare-fun res!65433 () Bool)

(assert (=> b!136574 (=> (not res!65433) (not e!88921))))

(assert (=> b!136574 (= res!65433 call!14987)))

(assert (=> b!136574 (= e!88920 e!88921)))

(declare-fun b!136575 () Bool)

(declare-fun res!65421 () Bool)

(assert (=> b!136575 (= res!65421 call!14993)))

(assert (=> b!136575 (=> (not res!65421) (not e!88917))))

(declare-fun b!136576 () Bool)

(declare-fun res!65430 () Bool)

(assert (=> b!136576 (=> (not res!65430) (not e!88921))))

(assert (=> b!136576 (= res!65430 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!71120)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!14995 () Bool)

(assert (=> bm!14995 (= call!14979 (map!1397 (_2!1311 lt!71138)))))

(declare-fun bm!14996 () Bool)

(assert (=> bm!14996 (= call!14985 call!14993)))

(assert (= (and d!42699 c!25588) b!136555))

(assert (= (and d!42699 (not c!25588)) b!136566))

(assert (= (and b!136555 c!25580) b!136537))

(assert (= (and b!136555 (not c!25580)) b!136549))

(assert (= (or b!136537 b!136549) bm!14992))

(assert (= (or b!136537 b!136549) bm!14986))

(assert (= (or b!136537 b!136549) bm!14974))

(assert (= (and b!136566 c!25585) b!136559))

(assert (= (and b!136566 (not c!25585)) b!136536))

(assert (= (and b!136559 c!25591) b!136535))

(assert (= (and b!136559 (not c!25591)) b!136571))

(assert (= (and b!136535 res!65425) b!136575))

(assert (= (and b!136575 res!65421) b!136541))

(assert (= (and b!136571 c!25586) b!136567))

(assert (= (and b!136571 (not c!25586)) b!136544))

(assert (= (and b!136567 res!65431) b!136558))

(assert (= (and b!136558 res!65432) b!136562))

(assert (= (and b!136544 c!25589) b!136543))

(assert (= (and b!136544 (not c!25589)) b!136545))

(assert (= (and b!136543 res!65423) b!136570))

(assert (= (and b!136570 res!65426) b!136546))

(assert (= (or b!136567 b!136543) bm!14996))

(assert (= (or b!136562 b!136546) bm!14985))

(assert (= (or b!136575 bm!14996) bm!14978))

(assert (= (or b!136535 b!136571) bm!14973))

(assert (= (and b!136536 c!25581) b!136569))

(assert (= (and b!136536 (not c!25581)) b!136565))

(assert (= (and b!136565 c!25587) b!136563))

(assert (= (and b!136565 (not c!25587)) b!136542))

(assert (= (and b!136542 c!25579) b!136550))

(assert (= (and b!136542 (not c!25579)) b!136568))

(assert (= (and b!136550 res!65429) b!136560))

(assert (= (and b!136560 res!65424) b!136551))

(assert (= (and b!136568 c!25590) b!136574))

(assert (= (and b!136568 (not c!25590)) b!136556))

(assert (= (and b!136574 res!65433) b!136576))

(assert (= (and b!136576 res!65430) b!136548))

(assert (= (and b!136556 c!25582) b!136572))

(assert (= (and b!136556 (not c!25582)) b!136564))

(assert (= (and b!136572 res!65428) b!136540))

(assert (= (and b!136540 res!65420) b!136561))

(assert (= (or b!136574 b!136572) bm!14975))

(assert (= (or b!136548 b!136561) bm!14994))

(assert (= (or b!136560 bm!14975) bm!14993))

(assert (= (or b!136550 b!136568) bm!14980))

(assert (= (or b!136569 b!136563) bm!14979))

(assert (= (or bm!14973 bm!14980) bm!14987))

(assert (= (or b!136559 b!136542) bm!14990))

(assert (= (or b!136571 b!136568) bm!14982))

(assert (= (or bm!14985 bm!14994) bm!14984))

(assert (= (or bm!14978 bm!14993) bm!14989))

(assert (= (or b!136535 b!136550) bm!14976))

(assert (= (or b!136559 b!136542) bm!14983))

(assert (= (and bm!14983 c!25578) b!136554))

(assert (= (and bm!14983 (not c!25578)) b!136539))

(assert (= (or bm!14992 bm!14990) bm!14977))

(assert (= (or bm!14986 b!136542) bm!14981))

(assert (= (or bm!14974 b!136542) bm!14991))

(assert (= (and bm!14991 c!25583) b!136538))

(assert (= (and bm!14991 (not c!25583)) b!136557))

(assert (= (and d!42699 res!65422) b!136553))

(assert (= (and b!136553 c!25584) b!136573))

(assert (= (and b!136553 (not c!25584)) b!136547))

(assert (= (and b!136573 res!65427) b!136552))

(assert (= (or b!136552 b!136547) bm!14988))

(assert (= (or b!136573 b!136552 b!136547) bm!14995))

(declare-fun m!162545 () Bool)

(assert (=> b!136557 m!162545))

(assert (=> b!136549 m!162445))

(declare-fun m!162547 () Bool)

(assert (=> b!136549 m!162547))

(assert (=> b!136539 m!162545))

(assert (=> bm!14983 m!162421))

(declare-fun m!162549 () Bool)

(assert (=> bm!14983 m!162549))

(declare-fun m!162551 () Bool)

(assert (=> bm!14989 m!162551))

(assert (=> b!136566 m!162421))

(declare-fun m!162553 () Bool)

(assert (=> b!136566 m!162553))

(assert (=> bm!14979 m!162421))

(assert (=> bm!14979 m!162445))

(declare-fun m!162555 () Bool)

(assert (=> bm!14979 m!162555))

(assert (=> bm!14976 m!162421))

(declare-fun m!162557 () Bool)

(assert (=> bm!14976 m!162557))

(declare-fun m!162559 () Bool)

(assert (=> bm!14977 m!162559))

(declare-fun m!162561 () Bool)

(assert (=> b!136570 m!162561))

(declare-fun m!162563 () Bool)

(assert (=> b!136541 m!162563))

(declare-fun m!162565 () Bool)

(assert (=> bm!14995 m!162565))

(assert (=> b!136573 m!162421))

(declare-fun m!162567 () Bool)

(assert (=> b!136573 m!162567))

(assert (=> bm!14987 m!162421))

(assert (=> bm!14987 m!162553))

(declare-fun m!162569 () Bool)

(assert (=> b!136558 m!162569))

(declare-fun m!162571 () Bool)

(assert (=> b!136542 m!162571))

(declare-fun m!162573 () Bool)

(assert (=> b!136542 m!162573))

(assert (=> b!136542 m!162573))

(declare-fun m!162575 () Bool)

(assert (=> b!136542 m!162575))

(assert (=> b!136542 m!162421))

(assert (=> b!136542 m!162445))

(declare-fun m!162577 () Bool)

(assert (=> b!136542 m!162577))

(declare-fun m!162579 () Bool)

(assert (=> b!136542 m!162579))

(assert (=> bm!14981 m!162571))

(declare-fun m!162581 () Bool)

(assert (=> bm!14981 m!162581))

(assert (=> bm!14982 m!162421))

(declare-fun m!162583 () Bool)

(assert (=> bm!14982 m!162583))

(declare-fun m!162585 () Bool)

(assert (=> b!136576 m!162585))

(declare-fun m!162587 () Bool)

(assert (=> b!136540 m!162587))

(declare-fun m!162589 () Bool)

(assert (=> d!42699 m!162589))

(assert (=> d!42699 m!162419))

(declare-fun m!162591 () Bool)

(assert (=> bm!14991 m!162591))

(assert (=> bm!14988 m!162433))

(declare-fun m!162593 () Bool)

(assert (=> b!136552 m!162593))

(assert (=> b!136537 m!162445))

(declare-fun m!162595 () Bool)

(assert (=> b!136537 m!162595))

(declare-fun m!162597 () Bool)

(assert (=> b!136551 m!162597))

(assert (=> bm!14984 m!162421))

(declare-fun m!162599 () Bool)

(assert (=> bm!14984 m!162599))

(assert (=> b!136322 d!42699))

(declare-fun d!42701 () Bool)

(declare-fun c!25594 () Bool)

(assert (=> d!42701 (= c!25594 ((_ is ValueCellFull!1100) (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun e!88934 () V!3497)

(assert (=> d!42701 (= (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!88934)))

(declare-fun b!136581 () Bool)

(declare-fun get!1491 (ValueCell!1100 V!3497) V!3497)

(assert (=> b!136581 (= e!88934 (get!1491 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!136582 () Bool)

(declare-fun get!1492 (ValueCell!1100 V!3497) V!3497)

(assert (=> b!136582 (= e!88934 (get!1492 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42701 c!25594) b!136581))

(assert (= (and d!42701 (not c!25594)) b!136582))

(assert (=> b!136581 m!162441))

(assert (=> b!136581 m!162443))

(declare-fun m!162601 () Bool)

(assert (=> b!136581 m!162601))

(assert (=> b!136582 m!162441))

(assert (=> b!136582 m!162443))

(declare-fun m!162603 () Bool)

(assert (=> b!136582 m!162603))

(assert (=> b!136322 d!42701))

(declare-fun d!42703 () Bool)

(declare-fun res!65438 () Bool)

(declare-fun e!88939 () Bool)

(assert (=> d!42703 (=> res!65438 e!88939)))

(assert (=> d!42703 (= res!65438 (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42703 (= (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!88939)))

(declare-fun b!136587 () Bool)

(declare-fun e!88940 () Bool)

(assert (=> b!136587 (= e!88939 e!88940)))

(declare-fun res!65439 () Bool)

(assert (=> b!136587 (=> (not res!65439) (not e!88940))))

(assert (=> b!136587 (= res!65439 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136588 () Bool)

(assert (=> b!136588 (= e!88940 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!42703 (not res!65438)) b!136587))

(assert (= (and b!136587 res!65439) b!136588))

(declare-fun m!162605 () Bool)

(assert (=> d!42703 m!162605))

(assert (=> b!136588 m!162421))

(declare-fun m!162607 () Bool)

(assert (=> b!136588 m!162607))

(assert (=> b!136326 d!42703))

(declare-fun d!42705 () Bool)

(declare-fun e!88943 () Bool)

(assert (=> d!42705 e!88943))

(declare-fun c!25597 () Bool)

(assert (=> d!42705 (= c!25597 (and (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!71144 () Unit!4286)

(declare-fun choose!837 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) (_ BitVec 32) Int) Unit!4286)

(assert (=> d!42705 (= lt!71144 (choose!837 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> d!42705 (validMask!0 (mask!7201 (v!3215 (underlying!457 thiss!992))))))

(assert (=> d!42705 (= (lemmaListMapContainsThenArrayContainsFrom!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) lt!71144)))

(declare-fun b!136593 () Bool)

(assert (=> b!136593 (= e!88943 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!136594 () Bool)

(assert (=> b!136594 (= e!88943 (ite (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!42705 c!25597) b!136593))

(assert (= (and d!42705 (not c!25597)) b!136594))

(assert (=> d!42705 m!162421))

(declare-fun m!162609 () Bool)

(assert (=> d!42705 m!162609))

(declare-fun m!162611 () Bool)

(assert (=> d!42705 m!162611))

(assert (=> b!136593 m!162421))

(assert (=> b!136593 m!162423))

(assert (=> b!136326 d!42705))

(declare-fun d!42707 () Bool)

(assert (=> d!42707 (= (array_inv!1439 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvsge (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!136327 d!42707))

(declare-fun d!42709 () Bool)

(assert (=> d!42709 (= (array_inv!1440 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvsge (size!2532 (_values!2871 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!136327 d!42709))

(declare-fun d!42711 () Bool)

(assert (=> d!42711 (= (map!1397 newMap!16) (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bs!5715 () Bool)

(assert (= bs!5715 d!42711))

(assert (=> bs!5715 m!162545))

(assert (=> b!136319 d!42711))

(declare-fun d!42713 () Bool)

(declare-fun e!88975 () Bool)

(assert (=> d!42713 e!88975))

(declare-fun res!65465 () Bool)

(assert (=> d!42713 (=> (not res!65465) (not e!88975))))

(assert (=> d!42713 (= res!65465 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun lt!71204 () ListLongMap!1679)

(declare-fun lt!71189 () ListLongMap!1679)

(assert (=> d!42713 (= lt!71204 lt!71189)))

(declare-fun lt!71207 () Unit!4286)

(declare-fun e!88974 () Unit!4286)

(assert (=> d!42713 (= lt!71207 e!88974)))

(declare-fun c!25614 () Bool)

(declare-fun e!88981 () Bool)

(assert (=> d!42713 (= c!25614 e!88981)))

(declare-fun res!65459 () Bool)

(assert (=> d!42713 (=> (not res!65459) (not e!88981))))

(assert (=> d!42713 (= res!65459 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!88970 () ListLongMap!1679)

(assert (=> d!42713 (= lt!71189 e!88970)))

(declare-fun c!25615 () Bool)

(assert (=> d!42713 (= c!25615 (and (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42713 (validMask!0 (mask!7201 (v!3215 (underlying!457 thiss!992))))))

(assert (=> d!42713 (= (getCurrentListMap!521 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) lt!71204)))

(declare-fun b!136637 () Bool)

(declare-fun c!25611 () Bool)

(assert (=> b!136637 (= c!25611 (and (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!88980 () ListLongMap!1679)

(declare-fun e!88977 () ListLongMap!1679)

(assert (=> b!136637 (= e!88980 e!88977)))

(declare-fun b!136638 () Bool)

(declare-fun call!15019 () ListLongMap!1679)

(assert (=> b!136638 (= e!88980 call!15019)))

(declare-fun b!136639 () Bool)

(declare-fun e!88979 () Bool)

(declare-fun apply!117 (ListLongMap!1679 (_ BitVec 64)) V!3497)

(assert (=> b!136639 (= e!88979 (= (apply!117 lt!71204 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun bm!15011 () Bool)

(declare-fun call!15020 () Bool)

(assert (=> bm!15011 (= call!15020 (contains!892 lt!71204 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15012 () Bool)

(declare-fun call!15016 () ListLongMap!1679)

(declare-fun getCurrentListMapNoExtraKeys!129 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) Int) ListLongMap!1679)

(assert (=> bm!15012 (= call!15016 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun bm!15013 () Bool)

(declare-fun call!15017 () ListLongMap!1679)

(assert (=> bm!15013 (= call!15019 call!15017)))

(declare-fun b!136640 () Bool)

(declare-fun res!65462 () Bool)

(assert (=> b!136640 (=> (not res!65462) (not e!88975))))

(declare-fun e!88973 () Bool)

(assert (=> b!136640 (= res!65462 e!88973)))

(declare-fun c!25612 () Bool)

(assert (=> b!136640 (= c!25612 (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!136641 () Bool)

(assert (=> b!136641 (= e!88970 e!88980)))

(declare-fun c!25610 () Bool)

(assert (=> b!136641 (= c!25610 (and (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!136642 () Bool)

(declare-fun call!15015 () ListLongMap!1679)

(assert (=> b!136642 (= e!88977 call!15015)))

(declare-fun bm!15014 () Bool)

(declare-fun call!15014 () ListLongMap!1679)

(assert (=> bm!15014 (= call!15017 (+!164 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!136643 () Bool)

(declare-fun e!88976 () Bool)

(assert (=> b!136643 (= e!88975 e!88976)))

(declare-fun c!25613 () Bool)

(assert (=> b!136643 (= c!25613 (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15015 () Bool)

(assert (=> bm!15015 (= call!15015 call!15014)))

(declare-fun b!136644 () Bool)

(declare-fun res!65464 () Bool)

(assert (=> b!136644 (=> (not res!65464) (not e!88975))))

(declare-fun e!88971 () Bool)

(assert (=> b!136644 (= res!65464 e!88971)))

(declare-fun res!65466 () Bool)

(assert (=> b!136644 (=> res!65466 e!88971)))

(declare-fun e!88982 () Bool)

(assert (=> b!136644 (= res!65466 (not e!88982))))

(declare-fun res!65463 () Bool)

(assert (=> b!136644 (=> (not res!65463) (not e!88982))))

(assert (=> b!136644 (= res!65463 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136645 () Bool)

(declare-fun e!88978 () Bool)

(assert (=> b!136645 (= e!88971 e!88978)))

(declare-fun res!65461 () Bool)

(assert (=> b!136645 (=> (not res!65461) (not e!88978))))

(assert (=> b!136645 (= res!65461 (contains!892 lt!71204 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!136645 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136646 () Bool)

(assert (=> b!136646 (= e!88973 (not call!15020))))

(declare-fun b!136647 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!136647 (= e!88982 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!136648 () Bool)

(assert (=> b!136648 (= e!88978 (= (apply!117 lt!71204 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!136648 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2532 (_values!2871 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> b!136648 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136649 () Bool)

(declare-fun e!88972 () Bool)

(assert (=> b!136649 (= e!88972 (= (apply!117 lt!71204 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!136650 () Bool)

(assert (=> b!136650 (= e!88977 call!15019)))

(declare-fun b!136651 () Bool)

(assert (=> b!136651 (= e!88970 (+!164 call!15017 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136652 () Bool)

(assert (=> b!136652 (= e!88973 e!88979)))

(declare-fun res!65460 () Bool)

(assert (=> b!136652 (= res!65460 call!15020)))

(assert (=> b!136652 (=> (not res!65460) (not e!88979))))

(declare-fun b!136653 () Bool)

(declare-fun Unit!4295 () Unit!4286)

(assert (=> b!136653 (= e!88974 Unit!4295)))

(declare-fun b!136654 () Bool)

(assert (=> b!136654 (= e!88976 e!88972)))

(declare-fun res!65458 () Bool)

(declare-fun call!15018 () Bool)

(assert (=> b!136654 (= res!65458 call!15018)))

(assert (=> b!136654 (=> (not res!65458) (not e!88972))))

(declare-fun bm!15016 () Bool)

(assert (=> bm!15016 (= call!15014 call!15016)))

(declare-fun b!136655 () Bool)

(declare-fun lt!71205 () Unit!4286)

(assert (=> b!136655 (= e!88974 lt!71205)))

(declare-fun lt!71198 () ListLongMap!1679)

(assert (=> b!136655 (= lt!71198 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun lt!71196 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71196 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71210 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71210 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!71191 () Unit!4286)

(declare-fun addStillContains!93 (ListLongMap!1679 (_ BitVec 64) V!3497 (_ BitVec 64)) Unit!4286)

(assert (=> b!136655 (= lt!71191 (addStillContains!93 lt!71198 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71210))))

(assert (=> b!136655 (contains!892 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71210)))

(declare-fun lt!71197 () Unit!4286)

(assert (=> b!136655 (= lt!71197 lt!71191)))

(declare-fun lt!71200 () ListLongMap!1679)

(assert (=> b!136655 (= lt!71200 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun lt!71193 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71193 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71206 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71206 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!71190 () Unit!4286)

(declare-fun addApplyDifferent!93 (ListLongMap!1679 (_ BitVec 64) V!3497 (_ BitVec 64)) Unit!4286)

(assert (=> b!136655 (= lt!71190 (addApplyDifferent!93 lt!71200 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71206))))

(assert (=> b!136655 (= (apply!117 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71206) (apply!117 lt!71200 lt!71206))))

(declare-fun lt!71203 () Unit!4286)

(assert (=> b!136655 (= lt!71203 lt!71190)))

(declare-fun lt!71208 () ListLongMap!1679)

(assert (=> b!136655 (= lt!71208 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun lt!71201 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71201 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71195 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71195 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!71194 () Unit!4286)

(assert (=> b!136655 (= lt!71194 (addApplyDifferent!93 lt!71208 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71195))))

(assert (=> b!136655 (= (apply!117 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71195) (apply!117 lt!71208 lt!71195))))

(declare-fun lt!71202 () Unit!4286)

(assert (=> b!136655 (= lt!71202 lt!71194)))

(declare-fun lt!71199 () ListLongMap!1679)

(assert (=> b!136655 (= lt!71199 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun lt!71209 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71209 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71192 () (_ BitVec 64))

(assert (=> b!136655 (= lt!71192 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!136655 (= lt!71205 (addApplyDifferent!93 lt!71199 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71192))))

(assert (=> b!136655 (= (apply!117 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71192) (apply!117 lt!71199 lt!71192))))

(declare-fun b!136656 () Bool)

(assert (=> b!136656 (= e!88981 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!136657 () Bool)

(assert (=> b!136657 (= e!88976 (not call!15018))))

(declare-fun bm!15017 () Bool)

(assert (=> bm!15017 (= call!15018 (contains!892 lt!71204 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42713 c!25615) b!136651))

(assert (= (and d!42713 (not c!25615)) b!136641))

(assert (= (and b!136641 c!25610) b!136638))

(assert (= (and b!136641 (not c!25610)) b!136637))

(assert (= (and b!136637 c!25611) b!136650))

(assert (= (and b!136637 (not c!25611)) b!136642))

(assert (= (or b!136650 b!136642) bm!15015))

(assert (= (or b!136638 bm!15015) bm!15016))

(assert (= (or b!136638 b!136650) bm!15013))

(assert (= (or b!136651 bm!15016) bm!15012))

(assert (= (or b!136651 bm!15013) bm!15014))

(assert (= (and d!42713 res!65459) b!136656))

(assert (= (and d!42713 c!25614) b!136655))

(assert (= (and d!42713 (not c!25614)) b!136653))

(assert (= (and d!42713 res!65465) b!136644))

(assert (= (and b!136644 res!65463) b!136647))

(assert (= (and b!136644 (not res!65466)) b!136645))

(assert (= (and b!136645 res!65461) b!136648))

(assert (= (and b!136644 res!65464) b!136640))

(assert (= (and b!136640 c!25612) b!136652))

(assert (= (and b!136640 (not c!25612)) b!136646))

(assert (= (and b!136652 res!65460) b!136639))

(assert (= (or b!136652 b!136646) bm!15011))

(assert (= (and b!136640 res!65462) b!136643))

(assert (= (and b!136643 c!25613) b!136654))

(assert (= (and b!136643 (not c!25613)) b!136657))

(assert (= (and b!136654 res!65458) b!136649))

(assert (= (or b!136654 b!136657) bm!15017))

(declare-fun b_lambda!6085 () Bool)

(assert (=> (not b_lambda!6085) (not b!136648)))

(assert (=> b!136648 t!6192))

(declare-fun b_and!8437 () Bool)

(assert (= b_and!8417 (and (=> t!6192 result!4023) b_and!8437)))

(assert (=> b!136648 t!6194))

(declare-fun b_and!8439 () Bool)

(assert (= b_and!8419 (and (=> t!6194 result!4027) b_and!8439)))

(assert (=> b!136656 m!162605))

(assert (=> b!136656 m!162605))

(declare-fun m!162613 () Bool)

(assert (=> b!136656 m!162613))

(assert (=> d!42713 m!162611))

(declare-fun m!162615 () Bool)

(assert (=> b!136651 m!162615))

(assert (=> b!136648 m!162443))

(declare-fun m!162617 () Bool)

(assert (=> b!136648 m!162617))

(assert (=> b!136648 m!162617))

(assert (=> b!136648 m!162443))

(declare-fun m!162619 () Bool)

(assert (=> b!136648 m!162619))

(assert (=> b!136648 m!162605))

(assert (=> b!136648 m!162605))

(declare-fun m!162621 () Bool)

(assert (=> b!136648 m!162621))

(declare-fun m!162623 () Bool)

(assert (=> b!136649 m!162623))

(assert (=> b!136647 m!162605))

(assert (=> b!136647 m!162605))

(assert (=> b!136647 m!162613))

(declare-fun m!162625 () Bool)

(assert (=> bm!15017 m!162625))

(declare-fun m!162627 () Bool)

(assert (=> bm!15012 m!162627))

(declare-fun m!162629 () Bool)

(assert (=> b!136639 m!162629))

(declare-fun m!162631 () Bool)

(assert (=> b!136655 m!162631))

(declare-fun m!162633 () Bool)

(assert (=> b!136655 m!162633))

(declare-fun m!162635 () Bool)

(assert (=> b!136655 m!162635))

(declare-fun m!162637 () Bool)

(assert (=> b!136655 m!162637))

(declare-fun m!162639 () Bool)

(assert (=> b!136655 m!162639))

(declare-fun m!162641 () Bool)

(assert (=> b!136655 m!162641))

(assert (=> b!136655 m!162631))

(declare-fun m!162643 () Bool)

(assert (=> b!136655 m!162643))

(declare-fun m!162645 () Bool)

(assert (=> b!136655 m!162645))

(declare-fun m!162647 () Bool)

(assert (=> b!136655 m!162647))

(assert (=> b!136655 m!162627))

(assert (=> b!136655 m!162645))

(declare-fun m!162649 () Bool)

(assert (=> b!136655 m!162649))

(assert (=> b!136655 m!162641))

(declare-fun m!162651 () Bool)

(assert (=> b!136655 m!162651))

(declare-fun m!162653 () Bool)

(assert (=> b!136655 m!162653))

(declare-fun m!162655 () Bool)

(assert (=> b!136655 m!162655))

(assert (=> b!136655 m!162635))

(declare-fun m!162657 () Bool)

(assert (=> b!136655 m!162657))

(declare-fun m!162659 () Bool)

(assert (=> b!136655 m!162659))

(assert (=> b!136655 m!162605))

(assert (=> b!136645 m!162605))

(assert (=> b!136645 m!162605))

(declare-fun m!162661 () Bool)

(assert (=> b!136645 m!162661))

(declare-fun m!162663 () Bool)

(assert (=> bm!15011 m!162663))

(declare-fun m!162665 () Bool)

(assert (=> bm!15014 m!162665))

(assert (=> b!136319 d!42713))

(declare-fun b!136665 () Bool)

(declare-fun e!88987 () Bool)

(assert (=> b!136665 (= e!88987 tp_is_empty!2887)))

(declare-fun mapNonEmpty!4699 () Bool)

(declare-fun mapRes!4699 () Bool)

(declare-fun tp!11305 () Bool)

(declare-fun e!88988 () Bool)

(assert (=> mapNonEmpty!4699 (= mapRes!4699 (and tp!11305 e!88988))))

(declare-fun mapValue!4699 () ValueCell!1100)

(declare-fun mapRest!4699 () (Array (_ BitVec 32) ValueCell!1100))

(declare-fun mapKey!4699 () (_ BitVec 32))

(assert (=> mapNonEmpty!4699 (= mapRest!4684 (store mapRest!4699 mapKey!4699 mapValue!4699))))

(declare-fun mapIsEmpty!4699 () Bool)

(assert (=> mapIsEmpty!4699 mapRes!4699))

(declare-fun b!136664 () Bool)

(assert (=> b!136664 (= e!88988 tp_is_empty!2887)))

(declare-fun condMapEmpty!4699 () Bool)

(declare-fun mapDefault!4699 () ValueCell!1100)

(assert (=> mapNonEmpty!4683 (= condMapEmpty!4699 (= mapRest!4684 ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4699)))))

(assert (=> mapNonEmpty!4683 (= tp!11277 (and e!88987 mapRes!4699))))

(assert (= (and mapNonEmpty!4683 condMapEmpty!4699) mapIsEmpty!4699))

(assert (= (and mapNonEmpty!4683 (not condMapEmpty!4699)) mapNonEmpty!4699))

(assert (= (and mapNonEmpty!4699 ((_ is ValueCellFull!1100) mapValue!4699)) b!136664))

(assert (= (and mapNonEmpty!4683 ((_ is ValueCellFull!1100) mapDefault!4699)) b!136665))

(declare-fun m!162667 () Bool)

(assert (=> mapNonEmpty!4699 m!162667))

(declare-fun b!136667 () Bool)

(declare-fun e!88989 () Bool)

(assert (=> b!136667 (= e!88989 tp_is_empty!2887)))

(declare-fun mapNonEmpty!4700 () Bool)

(declare-fun mapRes!4700 () Bool)

(declare-fun tp!11306 () Bool)

(declare-fun e!88990 () Bool)

(assert (=> mapNonEmpty!4700 (= mapRes!4700 (and tp!11306 e!88990))))

(declare-fun mapRest!4700 () (Array (_ BitVec 32) ValueCell!1100))

(declare-fun mapValue!4700 () ValueCell!1100)

(declare-fun mapKey!4700 () (_ BitVec 32))

(assert (=> mapNonEmpty!4700 (= mapRest!4683 (store mapRest!4700 mapKey!4700 mapValue!4700))))

(declare-fun mapIsEmpty!4700 () Bool)

(assert (=> mapIsEmpty!4700 mapRes!4700))

(declare-fun b!136666 () Bool)

(assert (=> b!136666 (= e!88990 tp_is_empty!2887)))

(declare-fun condMapEmpty!4700 () Bool)

(declare-fun mapDefault!4700 () ValueCell!1100)

(assert (=> mapNonEmpty!4684 (= condMapEmpty!4700 (= mapRest!4683 ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4700)))))

(assert (=> mapNonEmpty!4684 (= tp!11278 (and e!88989 mapRes!4700))))

(assert (= (and mapNonEmpty!4684 condMapEmpty!4700) mapIsEmpty!4700))

(assert (= (and mapNonEmpty!4684 (not condMapEmpty!4700)) mapNonEmpty!4700))

(assert (= (and mapNonEmpty!4700 ((_ is ValueCellFull!1100) mapValue!4700)) b!136666))

(assert (= (and mapNonEmpty!4684 ((_ is ValueCellFull!1100) mapDefault!4700)) b!136667))

(declare-fun m!162669 () Bool)

(assert (=> mapNonEmpty!4700 m!162669))

(declare-fun b_lambda!6087 () Bool)

(assert (= b_lambda!6085 (or (and b!136327 b_free!2941) (and b!136330 b_free!2943 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))) b_lambda!6087)))

(check-sat (not b!136573) (not b!136439) (not d!42697) (not b_next!2943) (not b!136648) (not d!42711) (not d!42713) (not b!136639) (not b!136542) (not d!42689) (not b!136649) (not b!136593) (not b!136537) (not d!42691) (not b_lambda!6087) (not b!136581) (not b!136440) (not bm!14981) (not bm!14995) tp_is_empty!2887 (not bm!14979) (not d!42699) (not b!136448) (not bm!15012) (not bm!14982) (not bm!14989) (not mapNonEmpty!4700) (not b!136557) (not bm!14988) (not b!136450) (not b_lambda!6083) (not bm!14977) (not b!136656) (not b!136549) (not bm!14987) (not b!136552) (not bm!14976) (not b!136566) (not bm!14991) (not bm!15017) (not b!136441) (not b!136651) (not bm!14984) (not bm!15014) (not b!136645) (not bm!15011) (not mapNonEmpty!4699) (not b!136655) (not b!136588) (not b!136539) (not bm!14983) (not b!136582) b_and!8437 (not d!42705) (not b_next!2941) b_and!8439 (not b!136647))
(check-sat b_and!8437 b_and!8439 (not b_next!2941) (not b_next!2943))
(get-model)

(declare-fun d!42715 () Bool)

(assert (=> d!42715 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71213 () Unit!4286)

(declare-fun choose!838 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 V!3497 Int) Unit!4286)

(assert (=> d!42715 (= lt!71213 (choose!838 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42715 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42715 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)) lt!71213)))

(declare-fun bs!5716 () Bool)

(assert (= bs!5716 d!42715))

(declare-fun m!162671 () Bool)

(assert (=> bs!5716 m!162671))

(assert (=> bs!5716 m!162445))

(declare-fun m!162673 () Bool)

(assert (=> bs!5716 m!162673))

(assert (=> bs!5716 m!162545))

(declare-fun m!162675 () Bool)

(assert (=> bs!5716 m!162675))

(assert (=> bs!5716 m!162545))

(assert (=> bs!5716 m!162445))

(declare-fun m!162677 () Bool)

(assert (=> bs!5716 m!162677))

(assert (=> b!136549 d!42715))

(declare-fun d!42717 () Bool)

(declare-fun get!1493 (Option!177) V!3497)

(assert (=> d!42717 (= (apply!117 lt!71204 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5717 () Bool)

(assert (= bs!5717 d!42717))

(declare-fun m!162679 () Bool)

(assert (=> bs!5717 m!162679))

(assert (=> bs!5717 m!162679))

(declare-fun m!162681 () Bool)

(assert (=> bs!5717 m!162681))

(assert (=> b!136649 d!42717))

(declare-fun b!136684 () Bool)

(declare-fun e!88999 () Bool)

(declare-fun e!89001 () Bool)

(assert (=> b!136684 (= e!88999 e!89001)))

(declare-fun c!25621 () Bool)

(declare-fun lt!71219 () SeekEntryResult!279)

(assert (=> b!136684 (= c!25621 ((_ is MissingVacant!279) lt!71219))))

(declare-fun b!136685 () Bool)

(declare-fun res!65475 () Bool)

(declare-fun e!89000 () Bool)

(assert (=> b!136685 (=> (not res!65475) (not e!89000))))

(assert (=> b!136685 (= res!65475 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!71219)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136685 (and (bvsge (index!3280 lt!71219) #b00000000000000000000000000000000) (bvslt (index!3280 lt!71219) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136686 () Bool)

(assert (=> b!136686 (and (bvsge (index!3277 lt!71219) #b00000000000000000000000000000000) (bvslt (index!3277 lt!71219) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun res!65478 () Bool)

(assert (=> b!136686 (= res!65478 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!71219)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!89002 () Bool)

(assert (=> b!136686 (=> (not res!65478) (not e!89002))))

(declare-fun b!136687 () Bool)

(declare-fun res!65477 () Bool)

(assert (=> b!136687 (=> (not res!65477) (not e!89000))))

(declare-fun call!15026 () Bool)

(assert (=> b!136687 (= res!65477 call!15026)))

(assert (=> b!136687 (= e!89001 e!89000)))

(declare-fun d!42719 () Bool)

(assert (=> d!42719 e!88999))

(declare-fun c!25620 () Bool)

(assert (=> d!42719 (= c!25620 ((_ is MissingZero!279) lt!71219))))

(assert (=> d!42719 (= lt!71219 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun lt!71218 () Unit!4286)

(declare-fun choose!839 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) Int) Unit!4286)

(assert (=> d!42719 (= lt!71218 (choose!839 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42719 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42719 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)) lt!71218)))

(declare-fun b!136688 () Bool)

(assert (=> b!136688 (= e!89001 ((_ is Undefined!279) lt!71219))))

(declare-fun b!136689 () Bool)

(declare-fun call!15025 () Bool)

(assert (=> b!136689 (= e!89000 (not call!15025))))

(declare-fun bm!15022 () Bool)

(assert (=> bm!15022 (= call!15026 (inRange!0 (ite c!25620 (index!3277 lt!71219) (index!3280 lt!71219)) (mask!7201 newMap!16)))))

(declare-fun b!136690 () Bool)

(assert (=> b!136690 (= e!88999 e!89002)))

(declare-fun res!65476 () Bool)

(assert (=> b!136690 (= res!65476 call!15026)))

(assert (=> b!136690 (=> (not res!65476) (not e!89002))))

(declare-fun b!136691 () Bool)

(assert (=> b!136691 (= e!89002 (not call!15025))))

(declare-fun bm!15023 () Bool)

(assert (=> bm!15023 (= call!15025 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(assert (= (and d!42719 c!25620) b!136690))

(assert (= (and d!42719 (not c!25620)) b!136684))

(assert (= (and b!136690 res!65476) b!136686))

(assert (= (and b!136686 res!65478) b!136691))

(assert (= (and b!136684 c!25621) b!136687))

(assert (= (and b!136684 (not c!25621)) b!136688))

(assert (= (and b!136687 res!65477) b!136685))

(assert (= (and b!136685 res!65475) b!136689))

(assert (= (or b!136690 b!136687) bm!15022))

(assert (= (or b!136691 b!136689) bm!15023))

(declare-fun m!162683 () Bool)

(assert (=> bm!15022 m!162683))

(assert (=> d!42719 m!162421))

(assert (=> d!42719 m!162553))

(assert (=> d!42719 m!162421))

(declare-fun m!162685 () Bool)

(assert (=> d!42719 m!162685))

(assert (=> d!42719 m!162671))

(declare-fun m!162687 () Bool)

(assert (=> b!136685 m!162687))

(declare-fun m!162689 () Bool)

(assert (=> b!136686 m!162689))

(assert (=> bm!15023 m!162421))

(assert (=> bm!15023 m!162599))

(assert (=> bm!14982 d!42719))

(declare-fun d!42721 () Bool)

(assert (=> d!42721 (= (map!1397 (_2!1311 lt!71138)) (getCurrentListMap!521 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))))))

(declare-fun bs!5718 () Bool)

(assert (= bs!5718 d!42721))

(declare-fun m!162691 () Bool)

(assert (=> bs!5718 m!162691))

(assert (=> bm!14995 d!42721))

(declare-fun d!42723 () Bool)

(assert (=> d!42723 (= (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!136647 d!42723))

(declare-fun d!42725 () Bool)

(declare-fun e!89008 () Bool)

(assert (=> d!42725 e!89008))

(declare-fun res!65486 () Bool)

(assert (=> d!42725 (=> (not res!65486) (not e!89008))))

(assert (=> d!42725 (= res!65486 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71235 () ListLongMap!1679)

(declare-fun lt!71220 () ListLongMap!1679)

(assert (=> d!42725 (= lt!71235 lt!71220)))

(declare-fun lt!71238 () Unit!4286)

(declare-fun e!89007 () Unit!4286)

(assert (=> d!42725 (= lt!71238 e!89007)))

(declare-fun c!25626 () Bool)

(declare-fun e!89014 () Bool)

(assert (=> d!42725 (= c!25626 e!89014)))

(declare-fun res!65480 () Bool)

(assert (=> d!42725 (=> (not res!65480) (not e!89014))))

(assert (=> d!42725 (= res!65480 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89003 () ListLongMap!1679)

(assert (=> d!42725 (= lt!71220 e!89003)))

(declare-fun c!25627 () Bool)

(assert (=> d!42725 (= c!25627 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42725 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42725 (= (getCurrentListMap!521 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71235)))

(declare-fun b!136692 () Bool)

(declare-fun c!25623 () Bool)

(assert (=> b!136692 (= c!25623 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89013 () ListLongMap!1679)

(declare-fun e!89010 () ListLongMap!1679)

(assert (=> b!136692 (= e!89013 e!89010)))

(declare-fun b!136693 () Bool)

(declare-fun call!15032 () ListLongMap!1679)

(assert (=> b!136693 (= e!89013 call!15032)))

(declare-fun b!136694 () Bool)

(declare-fun e!89012 () Bool)

(assert (=> b!136694 (= e!89012 (= (apply!117 lt!71235 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15024 () Bool)

(declare-fun call!15033 () Bool)

(assert (=> bm!15024 (= call!15033 (contains!892 lt!71235 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15025 () Bool)

(declare-fun call!15029 () ListLongMap!1679)

(assert (=> bm!15025 (= call!15029 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15026 () Bool)

(declare-fun call!15030 () ListLongMap!1679)

(assert (=> bm!15026 (= call!15032 call!15030)))

(declare-fun b!136695 () Bool)

(declare-fun res!65483 () Bool)

(assert (=> b!136695 (=> (not res!65483) (not e!89008))))

(declare-fun e!89006 () Bool)

(assert (=> b!136695 (= res!65483 e!89006)))

(declare-fun c!25624 () Bool)

(assert (=> b!136695 (= c!25624 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!136696 () Bool)

(assert (=> b!136696 (= e!89003 e!89013)))

(declare-fun c!25622 () Bool)

(assert (=> b!136696 (= c!25622 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!136697 () Bool)

(declare-fun call!15028 () ListLongMap!1679)

(assert (=> b!136697 (= e!89010 call!15028)))

(declare-fun call!15027 () ListLongMap!1679)

(declare-fun bm!15027 () Bool)

(assert (=> bm!15027 (= call!15030 (+!164 (ite c!25627 call!15029 (ite c!25622 call!15027 call!15028)) (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!136698 () Bool)

(declare-fun e!89009 () Bool)

(assert (=> b!136698 (= e!89008 e!89009)))

(declare-fun c!25625 () Bool)

(assert (=> b!136698 (= c!25625 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15028 () Bool)

(assert (=> bm!15028 (= call!15028 call!15027)))

(declare-fun b!136699 () Bool)

(declare-fun res!65485 () Bool)

(assert (=> b!136699 (=> (not res!65485) (not e!89008))))

(declare-fun e!89004 () Bool)

(assert (=> b!136699 (= res!65485 e!89004)))

(declare-fun res!65487 () Bool)

(assert (=> b!136699 (=> res!65487 e!89004)))

(declare-fun e!89015 () Bool)

(assert (=> b!136699 (= res!65487 (not e!89015))))

(declare-fun res!65484 () Bool)

(assert (=> b!136699 (=> (not res!65484) (not e!89015))))

(assert (=> b!136699 (= res!65484 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136700 () Bool)

(declare-fun e!89011 () Bool)

(assert (=> b!136700 (= e!89004 e!89011)))

(declare-fun res!65482 () Bool)

(assert (=> b!136700 (=> (not res!65482) (not e!89011))))

(assert (=> b!136700 (= res!65482 (contains!892 lt!71235 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!136700 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136701 () Bool)

(assert (=> b!136701 (= e!89006 (not call!15033))))

(declare-fun b!136702 () Bool)

(assert (=> b!136702 (= e!89015 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136703 () Bool)

(assert (=> b!136703 (= e!89011 (= (apply!117 lt!71235 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!136703 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))))))))

(assert (=> b!136703 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136704 () Bool)

(declare-fun e!89005 () Bool)

(assert (=> b!136704 (= e!89005 (= (apply!117 lt!71235 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!136705 () Bool)

(assert (=> b!136705 (= e!89010 call!15032)))

(declare-fun b!136706 () Bool)

(assert (=> b!136706 (= e!89003 (+!164 call!15030 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!136707 () Bool)

(assert (=> b!136707 (= e!89006 e!89012)))

(declare-fun res!65481 () Bool)

(assert (=> b!136707 (= res!65481 call!15033)))

(assert (=> b!136707 (=> (not res!65481) (not e!89012))))

(declare-fun b!136708 () Bool)

(declare-fun Unit!4296 () Unit!4286)

(assert (=> b!136708 (= e!89007 Unit!4296)))

(declare-fun b!136709 () Bool)

(assert (=> b!136709 (= e!89009 e!89005)))

(declare-fun res!65479 () Bool)

(declare-fun call!15031 () Bool)

(assert (=> b!136709 (= res!65479 call!15031)))

(assert (=> b!136709 (=> (not res!65479) (not e!89005))))

(declare-fun bm!15029 () Bool)

(assert (=> bm!15029 (= call!15027 call!15029)))

(declare-fun b!136710 () Bool)

(declare-fun lt!71236 () Unit!4286)

(assert (=> b!136710 (= e!89007 lt!71236)))

(declare-fun lt!71229 () ListLongMap!1679)

(assert (=> b!136710 (= lt!71229 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71227 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71227 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71241 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71241 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71222 () Unit!4286)

(assert (=> b!136710 (= lt!71222 (addStillContains!93 lt!71229 lt!71227 (zeroValue!2741 newMap!16) lt!71241))))

(assert (=> b!136710 (contains!892 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))) lt!71241)))

(declare-fun lt!71228 () Unit!4286)

(assert (=> b!136710 (= lt!71228 lt!71222)))

(declare-fun lt!71231 () ListLongMap!1679)

(assert (=> b!136710 (= lt!71231 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71224 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71224 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71237 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71237 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71221 () Unit!4286)

(assert (=> b!136710 (= lt!71221 (addApplyDifferent!93 lt!71231 lt!71224 (minValue!2741 newMap!16) lt!71237))))

(assert (=> b!136710 (= (apply!117 (+!164 lt!71231 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))) lt!71237) (apply!117 lt!71231 lt!71237))))

(declare-fun lt!71234 () Unit!4286)

(assert (=> b!136710 (= lt!71234 lt!71221)))

(declare-fun lt!71239 () ListLongMap!1679)

(assert (=> b!136710 (= lt!71239 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71232 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71232 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71226 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71226 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71225 () Unit!4286)

(assert (=> b!136710 (= lt!71225 (addApplyDifferent!93 lt!71239 lt!71232 (zeroValue!2741 newMap!16) lt!71226))))

(assert (=> b!136710 (= (apply!117 (+!164 lt!71239 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))) lt!71226) (apply!117 lt!71239 lt!71226))))

(declare-fun lt!71233 () Unit!4286)

(assert (=> b!136710 (= lt!71233 lt!71225)))

(declare-fun lt!71230 () ListLongMap!1679)

(assert (=> b!136710 (= lt!71230 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71240 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71240 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71223 () (_ BitVec 64))

(assert (=> b!136710 (= lt!71223 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!136710 (= lt!71236 (addApplyDifferent!93 lt!71230 lt!71240 (minValue!2741 newMap!16) lt!71223))))

(assert (=> b!136710 (= (apply!117 (+!164 lt!71230 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))) lt!71223) (apply!117 lt!71230 lt!71223))))

(declare-fun b!136711 () Bool)

(assert (=> b!136711 (= e!89014 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136712 () Bool)

(assert (=> b!136712 (= e!89009 (not call!15031))))

(declare-fun bm!15030 () Bool)

(assert (=> bm!15030 (= call!15031 (contains!892 lt!71235 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42725 c!25627) b!136706))

(assert (= (and d!42725 (not c!25627)) b!136696))

(assert (= (and b!136696 c!25622) b!136693))

(assert (= (and b!136696 (not c!25622)) b!136692))

(assert (= (and b!136692 c!25623) b!136705))

(assert (= (and b!136692 (not c!25623)) b!136697))

(assert (= (or b!136705 b!136697) bm!15028))

(assert (= (or b!136693 bm!15028) bm!15029))

(assert (= (or b!136693 b!136705) bm!15026))

(assert (= (or b!136706 bm!15029) bm!15025))

(assert (= (or b!136706 bm!15026) bm!15027))

(assert (= (and d!42725 res!65480) b!136711))

(assert (= (and d!42725 c!25626) b!136710))

(assert (= (and d!42725 (not c!25626)) b!136708))

(assert (= (and d!42725 res!65486) b!136699))

(assert (= (and b!136699 res!65484) b!136702))

(assert (= (and b!136699 (not res!65487)) b!136700))

(assert (= (and b!136700 res!65482) b!136703))

(assert (= (and b!136699 res!65485) b!136695))

(assert (= (and b!136695 c!25624) b!136707))

(assert (= (and b!136695 (not c!25624)) b!136701))

(assert (= (and b!136707 res!65481) b!136694))

(assert (= (or b!136707 b!136701) bm!15024))

(assert (= (and b!136695 res!65483) b!136698))

(assert (= (and b!136698 c!25625) b!136709))

(assert (= (and b!136698 (not c!25625)) b!136712))

(assert (= (and b!136709 res!65479) b!136704))

(assert (= (or b!136709 b!136712) bm!15030))

(declare-fun b_lambda!6089 () Bool)

(assert (=> (not b_lambda!6089) (not b!136703)))

(declare-fun tb!2453 () Bool)

(declare-fun t!6208 () Bool)

(assert (=> (and b!136327 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16)) t!6208) tb!2453))

(declare-fun result!4043 () Bool)

(assert (=> tb!2453 (= result!4043 tp_is_empty!2887)))

(assert (=> b!136703 t!6208))

(declare-fun b_and!8441 () Bool)

(assert (= b_and!8437 (and (=> t!6208 result!4043) b_and!8441)))

(declare-fun t!6210 () Bool)

(declare-fun tb!2455 () Bool)

(assert (=> (and b!136330 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 newMap!16)) t!6210) tb!2455))

(declare-fun result!4045 () Bool)

(assert (= result!4045 result!4043))

(assert (=> b!136703 t!6210))

(declare-fun b_and!8443 () Bool)

(assert (= b_and!8439 (and (=> t!6210 result!4045) b_and!8443)))

(declare-fun m!162693 () Bool)

(assert (=> b!136711 m!162693))

(assert (=> b!136711 m!162693))

(declare-fun m!162695 () Bool)

(assert (=> b!136711 m!162695))

(assert (=> d!42725 m!162671))

(declare-fun m!162697 () Bool)

(assert (=> b!136706 m!162697))

(declare-fun m!162699 () Bool)

(assert (=> b!136703 m!162699))

(declare-fun m!162701 () Bool)

(assert (=> b!136703 m!162701))

(assert (=> b!136703 m!162701))

(assert (=> b!136703 m!162699))

(declare-fun m!162703 () Bool)

(assert (=> b!136703 m!162703))

(assert (=> b!136703 m!162693))

(assert (=> b!136703 m!162693))

(declare-fun m!162705 () Bool)

(assert (=> b!136703 m!162705))

(declare-fun m!162707 () Bool)

(assert (=> b!136704 m!162707))

(assert (=> b!136702 m!162693))

(assert (=> b!136702 m!162693))

(assert (=> b!136702 m!162695))

(declare-fun m!162709 () Bool)

(assert (=> bm!15030 m!162709))

(declare-fun m!162711 () Bool)

(assert (=> bm!15025 m!162711))

(declare-fun m!162713 () Bool)

(assert (=> b!136694 m!162713))

(declare-fun m!162715 () Bool)

(assert (=> b!136710 m!162715))

(declare-fun m!162717 () Bool)

(assert (=> b!136710 m!162717))

(declare-fun m!162719 () Bool)

(assert (=> b!136710 m!162719))

(declare-fun m!162721 () Bool)

(assert (=> b!136710 m!162721))

(declare-fun m!162723 () Bool)

(assert (=> b!136710 m!162723))

(declare-fun m!162725 () Bool)

(assert (=> b!136710 m!162725))

(assert (=> b!136710 m!162715))

(declare-fun m!162727 () Bool)

(assert (=> b!136710 m!162727))

(declare-fun m!162729 () Bool)

(assert (=> b!136710 m!162729))

(declare-fun m!162731 () Bool)

(assert (=> b!136710 m!162731))

(assert (=> b!136710 m!162711))

(assert (=> b!136710 m!162729))

(declare-fun m!162733 () Bool)

(assert (=> b!136710 m!162733))

(assert (=> b!136710 m!162725))

(declare-fun m!162735 () Bool)

(assert (=> b!136710 m!162735))

(declare-fun m!162737 () Bool)

(assert (=> b!136710 m!162737))

(declare-fun m!162739 () Bool)

(assert (=> b!136710 m!162739))

(assert (=> b!136710 m!162719))

(declare-fun m!162741 () Bool)

(assert (=> b!136710 m!162741))

(declare-fun m!162743 () Bool)

(assert (=> b!136710 m!162743))

(assert (=> b!136710 m!162693))

(assert (=> b!136700 m!162693))

(assert (=> b!136700 m!162693))

(declare-fun m!162745 () Bool)

(assert (=> b!136700 m!162745))

(declare-fun m!162747 () Bool)

(assert (=> bm!15024 m!162747))

(declare-fun m!162749 () Bool)

(assert (=> bm!15027 m!162749))

(assert (=> bm!14981 d!42725))

(declare-fun d!42727 () Bool)

(declare-fun e!89016 () Bool)

(assert (=> d!42727 e!89016))

(declare-fun res!65488 () Bool)

(assert (=> d!42727 (=> res!65488 e!89016)))

(declare-fun lt!71242 () Bool)

(assert (=> d!42727 (= res!65488 (not lt!71242))))

(declare-fun lt!71244 () Bool)

(assert (=> d!42727 (= lt!71242 lt!71244)))

(declare-fun lt!71245 () Unit!4286)

(declare-fun e!89017 () Unit!4286)

(assert (=> d!42727 (= lt!71245 e!89017)))

(declare-fun c!25628 () Bool)

(assert (=> d!42727 (= c!25628 lt!71244)))

(assert (=> d!42727 (= lt!71244 (containsKey!175 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!42727 (= (contains!892 lt!71204 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!71242)))

(declare-fun b!136713 () Bool)

(declare-fun lt!71243 () Unit!4286)

(assert (=> b!136713 (= e!89017 lt!71243)))

(assert (=> b!136713 (= lt!71243 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!136713 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!136714 () Bool)

(declare-fun Unit!4297 () Unit!4286)

(assert (=> b!136714 (= e!89017 Unit!4297)))

(declare-fun b!136715 () Bool)

(assert (=> b!136715 (= e!89016 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!42727 c!25628) b!136713))

(assert (= (and d!42727 (not c!25628)) b!136714))

(assert (= (and d!42727 (not res!65488)) b!136715))

(assert (=> d!42727 m!162605))

(declare-fun m!162751 () Bool)

(assert (=> d!42727 m!162751))

(assert (=> b!136713 m!162605))

(declare-fun m!162753 () Bool)

(assert (=> b!136713 m!162753))

(assert (=> b!136713 m!162605))

(declare-fun m!162755 () Bool)

(assert (=> b!136713 m!162755))

(assert (=> b!136713 m!162755))

(declare-fun m!162757 () Bool)

(assert (=> b!136713 m!162757))

(assert (=> b!136715 m!162605))

(assert (=> b!136715 m!162755))

(assert (=> b!136715 m!162755))

(assert (=> b!136715 m!162757))

(assert (=> b!136645 d!42727))

(declare-fun d!42729 () Bool)

(declare-fun e!89023 () Bool)

(assert (=> d!42729 e!89023))

(declare-fun res!65496 () Bool)

(assert (=> d!42729 (=> (not res!65496) (not e!89023))))

(assert (=> d!42729 (= res!65496 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71261 () ListLongMap!1679)

(declare-fun lt!71246 () ListLongMap!1679)

(assert (=> d!42729 (= lt!71261 lt!71246)))

(declare-fun lt!71264 () Unit!4286)

(declare-fun e!89022 () Unit!4286)

(assert (=> d!42729 (= lt!71264 e!89022)))

(declare-fun c!25633 () Bool)

(declare-fun e!89029 () Bool)

(assert (=> d!42729 (= c!25633 e!89029)))

(declare-fun res!65490 () Bool)

(assert (=> d!42729 (=> (not res!65490) (not e!89029))))

(assert (=> d!42729 (= res!65490 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89018 () ListLongMap!1679)

(assert (=> d!42729 (= lt!71246 e!89018)))

(declare-fun c!25634 () Bool)

(assert (=> d!42729 (= c!25634 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42729 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42729 (= (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71261)))

(declare-fun b!136716 () Bool)

(declare-fun c!25630 () Bool)

(assert (=> b!136716 (= c!25630 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89028 () ListLongMap!1679)

(declare-fun e!89025 () ListLongMap!1679)

(assert (=> b!136716 (= e!89028 e!89025)))

(declare-fun b!136717 () Bool)

(declare-fun call!15039 () ListLongMap!1679)

(assert (=> b!136717 (= e!89028 call!15039)))

(declare-fun b!136718 () Bool)

(declare-fun e!89027 () Bool)

(assert (=> b!136718 (= e!89027 (= (apply!117 lt!71261 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15031 () Bool)

(declare-fun call!15040 () Bool)

(assert (=> bm!15031 (= call!15040 (contains!892 lt!71261 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15032 () Bool)

(declare-fun call!15036 () ListLongMap!1679)

(assert (=> bm!15032 (= call!15036 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15033 () Bool)

(declare-fun call!15037 () ListLongMap!1679)

(assert (=> bm!15033 (= call!15039 call!15037)))

(declare-fun b!136719 () Bool)

(declare-fun res!65493 () Bool)

(assert (=> b!136719 (=> (not res!65493) (not e!89023))))

(declare-fun e!89021 () Bool)

(assert (=> b!136719 (= res!65493 e!89021)))

(declare-fun c!25631 () Bool)

(assert (=> b!136719 (= c!25631 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!136720 () Bool)

(assert (=> b!136720 (= e!89018 e!89028)))

(declare-fun c!25629 () Bool)

(assert (=> b!136720 (= c!25629 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!136721 () Bool)

(declare-fun call!15035 () ListLongMap!1679)

(assert (=> b!136721 (= e!89025 call!15035)))

(declare-fun call!15034 () ListLongMap!1679)

(declare-fun bm!15034 () Bool)

(assert (=> bm!15034 (= call!15037 (+!164 (ite c!25634 call!15036 (ite c!25629 call!15034 call!15035)) (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!136722 () Bool)

(declare-fun e!89024 () Bool)

(assert (=> b!136722 (= e!89023 e!89024)))

(declare-fun c!25632 () Bool)

(assert (=> b!136722 (= c!25632 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15035 () Bool)

(assert (=> bm!15035 (= call!15035 call!15034)))

(declare-fun b!136723 () Bool)

(declare-fun res!65495 () Bool)

(assert (=> b!136723 (=> (not res!65495) (not e!89023))))

(declare-fun e!89019 () Bool)

(assert (=> b!136723 (= res!65495 e!89019)))

(declare-fun res!65497 () Bool)

(assert (=> b!136723 (=> res!65497 e!89019)))

(declare-fun e!89030 () Bool)

(assert (=> b!136723 (= res!65497 (not e!89030))))

(declare-fun res!65494 () Bool)

(assert (=> b!136723 (=> (not res!65494) (not e!89030))))

(assert (=> b!136723 (= res!65494 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136724 () Bool)

(declare-fun e!89026 () Bool)

(assert (=> b!136724 (= e!89019 e!89026)))

(declare-fun res!65492 () Bool)

(assert (=> b!136724 (=> (not res!65492) (not e!89026))))

(assert (=> b!136724 (= res!65492 (contains!892 lt!71261 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!136724 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136725 () Bool)

(assert (=> b!136725 (= e!89021 (not call!15040))))

(declare-fun b!136726 () Bool)

(assert (=> b!136726 (= e!89030 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136727 () Bool)

(assert (=> b!136727 (= e!89026 (= (apply!117 lt!71261 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!136727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (_values!2871 newMap!16))))))

(assert (=> b!136727 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136728 () Bool)

(declare-fun e!89020 () Bool)

(assert (=> b!136728 (= e!89020 (= (apply!117 lt!71261 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!136729 () Bool)

(assert (=> b!136729 (= e!89025 call!15039)))

(declare-fun b!136730 () Bool)

(assert (=> b!136730 (= e!89018 (+!164 call!15037 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!136731 () Bool)

(assert (=> b!136731 (= e!89021 e!89027)))

(declare-fun res!65491 () Bool)

(assert (=> b!136731 (= res!65491 call!15040)))

(assert (=> b!136731 (=> (not res!65491) (not e!89027))))

(declare-fun b!136732 () Bool)

(declare-fun Unit!4298 () Unit!4286)

(assert (=> b!136732 (= e!89022 Unit!4298)))

(declare-fun b!136733 () Bool)

(assert (=> b!136733 (= e!89024 e!89020)))

(declare-fun res!65489 () Bool)

(declare-fun call!15038 () Bool)

(assert (=> b!136733 (= res!65489 call!15038)))

(assert (=> b!136733 (=> (not res!65489) (not e!89020))))

(declare-fun bm!15036 () Bool)

(assert (=> bm!15036 (= call!15034 call!15036)))

(declare-fun b!136734 () Bool)

(declare-fun lt!71262 () Unit!4286)

(assert (=> b!136734 (= e!89022 lt!71262)))

(declare-fun lt!71255 () ListLongMap!1679)

(assert (=> b!136734 (= lt!71255 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71253 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71253 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71267 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71267 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71248 () Unit!4286)

(assert (=> b!136734 (= lt!71248 (addStillContains!93 lt!71255 lt!71253 (zeroValue!2741 newMap!16) lt!71267))))

(assert (=> b!136734 (contains!892 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))) lt!71267)))

(declare-fun lt!71254 () Unit!4286)

(assert (=> b!136734 (= lt!71254 lt!71248)))

(declare-fun lt!71257 () ListLongMap!1679)

(assert (=> b!136734 (= lt!71257 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71250 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71250 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71263 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71263 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71247 () Unit!4286)

(assert (=> b!136734 (= lt!71247 (addApplyDifferent!93 lt!71257 lt!71250 (minValue!2741 newMap!16) lt!71263))))

(assert (=> b!136734 (= (apply!117 (+!164 lt!71257 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))) lt!71263) (apply!117 lt!71257 lt!71263))))

(declare-fun lt!71260 () Unit!4286)

(assert (=> b!136734 (= lt!71260 lt!71247)))

(declare-fun lt!71265 () ListLongMap!1679)

(assert (=> b!136734 (= lt!71265 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71258 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71258 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71252 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71252 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71251 () Unit!4286)

(assert (=> b!136734 (= lt!71251 (addApplyDifferent!93 lt!71265 lt!71258 (zeroValue!2741 newMap!16) lt!71252))))

(assert (=> b!136734 (= (apply!117 (+!164 lt!71265 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))) lt!71252) (apply!117 lt!71265 lt!71252))))

(declare-fun lt!71259 () Unit!4286)

(assert (=> b!136734 (= lt!71259 lt!71251)))

(declare-fun lt!71256 () ListLongMap!1679)

(assert (=> b!136734 (= lt!71256 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71266 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71266 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71249 () (_ BitVec 64))

(assert (=> b!136734 (= lt!71249 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!136734 (= lt!71262 (addApplyDifferent!93 lt!71256 lt!71266 (minValue!2741 newMap!16) lt!71249))))

(assert (=> b!136734 (= (apply!117 (+!164 lt!71256 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))) lt!71249) (apply!117 lt!71256 lt!71249))))

(declare-fun b!136735 () Bool)

(assert (=> b!136735 (= e!89029 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136736 () Bool)

(assert (=> b!136736 (= e!89024 (not call!15038))))

(declare-fun bm!15037 () Bool)

(assert (=> bm!15037 (= call!15038 (contains!892 lt!71261 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42729 c!25634) b!136730))

(assert (= (and d!42729 (not c!25634)) b!136720))

(assert (= (and b!136720 c!25629) b!136717))

(assert (= (and b!136720 (not c!25629)) b!136716))

(assert (= (and b!136716 c!25630) b!136729))

(assert (= (and b!136716 (not c!25630)) b!136721))

(assert (= (or b!136729 b!136721) bm!15035))

(assert (= (or b!136717 bm!15035) bm!15036))

(assert (= (or b!136717 b!136729) bm!15033))

(assert (= (or b!136730 bm!15036) bm!15032))

(assert (= (or b!136730 bm!15033) bm!15034))

(assert (= (and d!42729 res!65490) b!136735))

(assert (= (and d!42729 c!25633) b!136734))

(assert (= (and d!42729 (not c!25633)) b!136732))

(assert (= (and d!42729 res!65496) b!136723))

(assert (= (and b!136723 res!65494) b!136726))

(assert (= (and b!136723 (not res!65497)) b!136724))

(assert (= (and b!136724 res!65492) b!136727))

(assert (= (and b!136723 res!65495) b!136719))

(assert (= (and b!136719 c!25631) b!136731))

(assert (= (and b!136719 (not c!25631)) b!136725))

(assert (= (and b!136731 res!65491) b!136718))

(assert (= (or b!136731 b!136725) bm!15031))

(assert (= (and b!136719 res!65493) b!136722))

(assert (= (and b!136722 c!25632) b!136733))

(assert (= (and b!136722 (not c!25632)) b!136736))

(assert (= (and b!136733 res!65489) b!136728))

(assert (= (or b!136733 b!136736) bm!15037))

(declare-fun b_lambda!6091 () Bool)

(assert (=> (not b_lambda!6091) (not b!136727)))

(assert (=> b!136727 t!6208))

(declare-fun b_and!8445 () Bool)

(assert (= b_and!8441 (and (=> t!6208 result!4043) b_and!8445)))

(assert (=> b!136727 t!6210))

(declare-fun b_and!8447 () Bool)

(assert (= b_and!8443 (and (=> t!6210 result!4045) b_and!8447)))

(assert (=> b!136735 m!162693))

(assert (=> b!136735 m!162693))

(assert (=> b!136735 m!162695))

(assert (=> d!42729 m!162671))

(declare-fun m!162759 () Bool)

(assert (=> b!136730 m!162759))

(assert (=> b!136727 m!162699))

(declare-fun m!162761 () Bool)

(assert (=> b!136727 m!162761))

(assert (=> b!136727 m!162761))

(assert (=> b!136727 m!162699))

(declare-fun m!162763 () Bool)

(assert (=> b!136727 m!162763))

(assert (=> b!136727 m!162693))

(assert (=> b!136727 m!162693))

(declare-fun m!162765 () Bool)

(assert (=> b!136727 m!162765))

(declare-fun m!162767 () Bool)

(assert (=> b!136728 m!162767))

(assert (=> b!136726 m!162693))

(assert (=> b!136726 m!162693))

(assert (=> b!136726 m!162695))

(declare-fun m!162769 () Bool)

(assert (=> bm!15037 m!162769))

(declare-fun m!162771 () Bool)

(assert (=> bm!15032 m!162771))

(declare-fun m!162773 () Bool)

(assert (=> b!136718 m!162773))

(declare-fun m!162775 () Bool)

(assert (=> b!136734 m!162775))

(declare-fun m!162777 () Bool)

(assert (=> b!136734 m!162777))

(declare-fun m!162779 () Bool)

(assert (=> b!136734 m!162779))

(declare-fun m!162781 () Bool)

(assert (=> b!136734 m!162781))

(declare-fun m!162783 () Bool)

(assert (=> b!136734 m!162783))

(declare-fun m!162785 () Bool)

(assert (=> b!136734 m!162785))

(assert (=> b!136734 m!162775))

(declare-fun m!162787 () Bool)

(assert (=> b!136734 m!162787))

(declare-fun m!162789 () Bool)

(assert (=> b!136734 m!162789))

(declare-fun m!162791 () Bool)

(assert (=> b!136734 m!162791))

(assert (=> b!136734 m!162771))

(assert (=> b!136734 m!162789))

(declare-fun m!162793 () Bool)

(assert (=> b!136734 m!162793))

(assert (=> b!136734 m!162785))

(declare-fun m!162795 () Bool)

(assert (=> b!136734 m!162795))

(declare-fun m!162797 () Bool)

(assert (=> b!136734 m!162797))

(declare-fun m!162799 () Bool)

(assert (=> b!136734 m!162799))

(assert (=> b!136734 m!162779))

(declare-fun m!162801 () Bool)

(assert (=> b!136734 m!162801))

(declare-fun m!162803 () Bool)

(assert (=> b!136734 m!162803))

(assert (=> b!136734 m!162693))

(assert (=> b!136724 m!162693))

(assert (=> b!136724 m!162693))

(declare-fun m!162805 () Bool)

(assert (=> b!136724 m!162805))

(declare-fun m!162807 () Bool)

(assert (=> bm!15031 m!162807))

(declare-fun m!162809 () Bool)

(assert (=> bm!15034 m!162809))

(assert (=> b!136557 d!42729))

(declare-fun d!42731 () Bool)

(declare-fun e!89031 () Bool)

(assert (=> d!42731 e!89031))

(declare-fun res!65498 () Bool)

(assert (=> d!42731 (=> res!65498 e!89031)))

(declare-fun lt!71268 () Bool)

(assert (=> d!42731 (= res!65498 (not lt!71268))))

(declare-fun lt!71270 () Bool)

(assert (=> d!42731 (= lt!71268 lt!71270)))

(declare-fun lt!71271 () Unit!4286)

(declare-fun e!89032 () Unit!4286)

(assert (=> d!42731 (= lt!71271 e!89032)))

(declare-fun c!25635 () Bool)

(assert (=> d!42731 (= c!25635 lt!71270)))

(assert (=> d!42731 (= lt!71270 (containsKey!175 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42731 (= (contains!892 call!14979 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71268)))

(declare-fun b!136737 () Bool)

(declare-fun lt!71269 () Unit!4286)

(assert (=> b!136737 (= e!89032 lt!71269)))

(assert (=> b!136737 (= lt!71269 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!136737 (isDefined!125 (getValueByKey!171 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136738 () Bool)

(declare-fun Unit!4299 () Unit!4286)

(assert (=> b!136738 (= e!89032 Unit!4299)))

(declare-fun b!136739 () Bool)

(assert (=> b!136739 (= e!89031 (isDefined!125 (getValueByKey!171 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (= (and d!42731 c!25635) b!136737))

(assert (= (and d!42731 (not c!25635)) b!136738))

(assert (= (and d!42731 (not res!65498)) b!136739))

(assert (=> d!42731 m!162421))

(declare-fun m!162811 () Bool)

(assert (=> d!42731 m!162811))

(assert (=> b!136737 m!162421))

(declare-fun m!162813 () Bool)

(assert (=> b!136737 m!162813))

(assert (=> b!136737 m!162421))

(declare-fun m!162815 () Bool)

(assert (=> b!136737 m!162815))

(assert (=> b!136737 m!162815))

(declare-fun m!162817 () Bool)

(assert (=> b!136737 m!162817))

(assert (=> b!136739 m!162421))

(assert (=> b!136739 m!162815))

(assert (=> b!136739 m!162815))

(assert (=> b!136739 m!162817))

(assert (=> b!136573 d!42731))

(declare-fun d!42733 () Bool)

(declare-fun e!89035 () Bool)

(assert (=> d!42733 e!89035))

(declare-fun res!65503 () Bool)

(assert (=> d!42733 (=> (not res!65503) (not e!89035))))

(declare-fun lt!71281 () ListLongMap!1679)

(assert (=> d!42733 (= res!65503 (contains!892 lt!71281 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun lt!71282 () List!1716)

(assert (=> d!42733 (= lt!71281 (ListLongMap!1680 lt!71282))))

(declare-fun lt!71283 () Unit!4286)

(declare-fun lt!71280 () Unit!4286)

(assert (=> d!42733 (= lt!71283 lt!71280)))

(assert (=> d!42733 (= (getValueByKey!171 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (Some!176 (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!89 (List!1716 (_ BitVec 64) V!3497) Unit!4286)

(assert (=> d!42733 (= lt!71280 (lemmaContainsTupThenGetReturnValue!89 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun insertStrictlySorted!92 (List!1716 (_ BitVec 64) V!3497) List!1716)

(assert (=> d!42733 (= lt!71282 (insertStrictlySorted!92 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42733 (= (+!164 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71281)))

(declare-fun b!136744 () Bool)

(declare-fun res!65504 () Bool)

(assert (=> b!136744 (=> (not res!65504) (not e!89035))))

(assert (=> b!136744 (= res!65504 (= (getValueByKey!171 (toList!855 lt!71281) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (Some!176 (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun b!136745 () Bool)

(declare-fun contains!895 (List!1716 tuple2!2598) Bool)

(assert (=> b!136745 (= e!89035 (contains!895 (toList!855 lt!71281) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (= (and d!42733 res!65503) b!136744))

(assert (= (and b!136744 res!65504) b!136745))

(declare-fun m!162819 () Bool)

(assert (=> d!42733 m!162819))

(declare-fun m!162821 () Bool)

(assert (=> d!42733 m!162821))

(declare-fun m!162823 () Bool)

(assert (=> d!42733 m!162823))

(declare-fun m!162825 () Bool)

(assert (=> d!42733 m!162825))

(declare-fun m!162827 () Bool)

(assert (=> b!136744 m!162827))

(declare-fun m!162829 () Bool)

(assert (=> b!136745 m!162829))

(assert (=> bm!15014 d!42733))

(declare-fun b!136758 () Bool)

(declare-fun c!25643 () Bool)

(declare-fun lt!71292 () (_ BitVec 64))

(assert (=> b!136758 (= c!25643 (= lt!71292 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!89043 () SeekEntryResult!279)

(declare-fun e!89042 () SeekEntryResult!279)

(assert (=> b!136758 (= e!89043 e!89042)))

(declare-fun b!136759 () Bool)

(declare-fun lt!71291 () SeekEntryResult!279)

(assert (=> b!136759 (= e!89043 (Found!279 (index!3279 lt!71291)))))

(declare-fun b!136760 () Bool)

(assert (=> b!136760 (= e!89042 (MissingZero!279 (index!3279 lt!71291)))))

(declare-fun lt!71290 () SeekEntryResult!279)

(declare-fun d!42735 () Bool)

(assert (=> d!42735 (and (or ((_ is Undefined!279) lt!71290) (not ((_ is Found!279) lt!71290)) (and (bvsge (index!3278 lt!71290) #b00000000000000000000000000000000) (bvslt (index!3278 lt!71290) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!71290) ((_ is Found!279) lt!71290) (not ((_ is MissingZero!279) lt!71290)) (and (bvsge (index!3277 lt!71290) #b00000000000000000000000000000000) (bvslt (index!3277 lt!71290) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!71290) ((_ is Found!279) lt!71290) ((_ is MissingZero!279) lt!71290) (not ((_ is MissingVacant!279) lt!71290)) (and (bvsge (index!3280 lt!71290) #b00000000000000000000000000000000) (bvslt (index!3280 lt!71290) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!71290) (ite ((_ is Found!279) lt!71290) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71290)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite ((_ is MissingZero!279) lt!71290) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!71290)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!71290) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!71290)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!89044 () SeekEntryResult!279)

(assert (=> d!42735 (= lt!71290 e!89044)))

(declare-fun c!25642 () Bool)

(assert (=> d!42735 (= c!25642 (and ((_ is Intermediate!279) lt!71291) (undefined!1091 lt!71291)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4783 (_ BitVec 32)) SeekEntryResult!279)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!42735 (= lt!71291 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(assert (=> d!42735 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42735 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)) lt!71290)))

(declare-fun b!136761 () Bool)

(assert (=> b!136761 (= e!89044 e!89043)))

(assert (=> b!136761 (= lt!71292 (select (arr!2260 (_keys!4640 newMap!16)) (index!3279 lt!71291)))))

(declare-fun c!25644 () Bool)

(assert (=> b!136761 (= c!25644 (= lt!71292 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136762 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4783 (_ BitVec 32)) SeekEntryResult!279)

(assert (=> b!136762 (= e!89042 (seekKeyOrZeroReturnVacant!0 (x!15806 lt!71291) (index!3279 lt!71291) (index!3279 lt!71291) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!136763 () Bool)

(assert (=> b!136763 (= e!89044 Undefined!279)))

(assert (= (and d!42735 c!25642) b!136763))

(assert (= (and d!42735 (not c!25642)) b!136761))

(assert (= (and b!136761 c!25644) b!136759))

(assert (= (and b!136761 (not c!25644)) b!136758))

(assert (= (and b!136758 c!25643) b!136760))

(assert (= (and b!136758 (not c!25643)) b!136762))

(declare-fun m!162831 () Bool)

(assert (=> d!42735 m!162831))

(assert (=> d!42735 m!162421))

(declare-fun m!162833 () Bool)

(assert (=> d!42735 m!162833))

(assert (=> d!42735 m!162421))

(assert (=> d!42735 m!162831))

(declare-fun m!162835 () Bool)

(assert (=> d!42735 m!162835))

(assert (=> d!42735 m!162671))

(declare-fun m!162837 () Bool)

(assert (=> d!42735 m!162837))

(declare-fun m!162839 () Bool)

(assert (=> d!42735 m!162839))

(declare-fun m!162841 () Bool)

(assert (=> b!136761 m!162841))

(assert (=> b!136762 m!162421))

(declare-fun m!162843 () Bool)

(assert (=> b!136762 m!162843))

(assert (=> bm!14987 d!42735))

(declare-fun d!42737 () Bool)

(declare-fun e!89045 () Bool)

(assert (=> d!42737 e!89045))

(declare-fun res!65505 () Bool)

(assert (=> d!42737 (=> res!65505 e!89045)))

(declare-fun lt!71293 () Bool)

(assert (=> d!42737 (= res!65505 (not lt!71293))))

(declare-fun lt!71295 () Bool)

(assert (=> d!42737 (= lt!71293 lt!71295)))

(declare-fun lt!71296 () Unit!4286)

(declare-fun e!89046 () Unit!4286)

(assert (=> d!42737 (= lt!71296 e!89046)))

(declare-fun c!25645 () Bool)

(assert (=> d!42737 (= c!25645 lt!71295)))

(assert (=> d!42737 (= lt!71295 (containsKey!175 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (=> d!42737 (= (contains!892 call!14999 (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))) lt!71293)))

(declare-fun b!136764 () Bool)

(declare-fun lt!71294 () Unit!4286)

(assert (=> b!136764 (= e!89046 lt!71294)))

(assert (=> b!136764 (= lt!71294 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (=> b!136764 (isDefined!125 (getValueByKey!171 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(declare-fun b!136765 () Bool)

(declare-fun Unit!4300 () Unit!4286)

(assert (=> b!136765 (= e!89046 Unit!4300)))

(declare-fun b!136766 () Bool)

(assert (=> b!136766 (= e!89045 (isDefined!125 (getValueByKey!171 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))))

(assert (= (and d!42737 c!25645) b!136764))

(assert (= (and d!42737 (not c!25645)) b!136765))

(assert (= (and d!42737 (not res!65505)) b!136766))

(assert (=> d!42737 m!162573))

(declare-fun m!162845 () Bool)

(assert (=> d!42737 m!162845))

(assert (=> b!136764 m!162573))

(declare-fun m!162847 () Bool)

(assert (=> b!136764 m!162847))

(assert (=> b!136764 m!162573))

(declare-fun m!162849 () Bool)

(assert (=> b!136764 m!162849))

(assert (=> b!136764 m!162849))

(declare-fun m!162851 () Bool)

(assert (=> b!136764 m!162851))

(assert (=> b!136766 m!162573))

(assert (=> b!136766 m!162849))

(assert (=> b!136766 m!162849))

(assert (=> b!136766 m!162851))

(assert (=> b!136542 d!42737))

(declare-fun d!42739 () Bool)

(declare-fun e!89049 () Bool)

(assert (=> d!42739 e!89049))

(declare-fun res!65508 () Bool)

(assert (=> d!42739 (=> (not res!65508) (not e!89049))))

(assert (=> d!42739 (= res!65508 (and (bvsge (index!3278 lt!71133) #b00000000000000000000000000000000) (bvslt (index!3278 lt!71133) (size!2531 (_keys!4640 newMap!16)))))))

(declare-fun lt!71299 () Unit!4286)

(declare-fun choose!840 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) Int) Unit!4286)

(assert (=> d!42739 (= lt!71299 (choose!840 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42739 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42739 (= (lemmaValidKeyInArrayIsInListMap!121 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (defaultEntry!2888 newMap!16)) lt!71299)))

(declare-fun b!136769 () Bool)

(assert (=> b!136769 (= e!89049 (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (= (and d!42739 res!65508) b!136769))

(declare-fun m!162853 () Bool)

(assert (=> d!42739 m!162853))

(assert (=> d!42739 m!162671))

(declare-fun m!162855 () Bool)

(assert (=> b!136769 m!162855))

(assert (=> b!136769 m!162573))

(assert (=> b!136769 m!162855))

(assert (=> b!136769 m!162573))

(declare-fun m!162857 () Bool)

(assert (=> b!136769 m!162857))

(assert (=> b!136542 d!42739))

(declare-fun d!42741 () Bool)

(declare-fun e!89052 () Bool)

(assert (=> d!42741 e!89052))

(declare-fun res!65511 () Bool)

(assert (=> d!42741 (=> (not res!65511) (not e!89052))))

(assert (=> d!42741 (= res!65511 (and (bvsge (index!3278 lt!71133) #b00000000000000000000000000000000) (bvslt (index!3278 lt!71133) (size!2532 (_values!2871 newMap!16)))))))

(declare-fun lt!71302 () Unit!4286)

(declare-fun choose!841 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) (_ BitVec 64) V!3497 Int) Unit!4286)

(assert (=> d!42741 (= lt!71302 (choose!841 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42741 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42741 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)) lt!71302)))

(declare-fun b!136772 () Bool)

(assert (=> b!136772 (= e!89052 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))))))

(assert (= (and d!42741 res!65511) b!136772))

(assert (=> d!42741 m!162421))

(assert (=> d!42741 m!162445))

(declare-fun m!162859 () Bool)

(assert (=> d!42741 m!162859))

(assert (=> d!42741 m!162671))

(assert (=> b!136772 m!162545))

(assert (=> b!136772 m!162545))

(declare-fun m!162861 () Bool)

(assert (=> b!136772 m!162861))

(assert (=> b!136772 m!162571))

(declare-fun m!162863 () Bool)

(assert (=> b!136772 m!162863))

(assert (=> b!136542 d!42741))

(declare-fun d!42743 () Bool)

(assert (=> d!42743 (isDefined!125 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun lt!71305 () Unit!4286)

(declare-fun choose!842 (List!1716 (_ BitVec 64)) Unit!4286)

(assert (=> d!42743 (= lt!71305 (choose!842 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun e!89055 () Bool)

(assert (=> d!42743 e!89055))

(declare-fun res!65514 () Bool)

(assert (=> d!42743 (=> (not res!65514) (not e!89055))))

(declare-fun isStrictlySorted!318 (List!1716) Bool)

(assert (=> d!42743 (= res!65514 (isStrictlySorted!318 (toList!855 lt!71024)))))

(assert (=> d!42743 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71305)))

(declare-fun b!136775 () Bool)

(assert (=> b!136775 (= e!89055 (containsKey!175 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!42743 res!65514) b!136775))

(assert (=> d!42743 m!162421))

(assert (=> d!42743 m!162541))

(assert (=> d!42743 m!162541))

(assert (=> d!42743 m!162543))

(assert (=> d!42743 m!162421))

(declare-fun m!162865 () Bool)

(assert (=> d!42743 m!162865))

(declare-fun m!162867 () Bool)

(assert (=> d!42743 m!162867))

(assert (=> b!136775 m!162421))

(assert (=> b!136775 m!162537))

(assert (=> b!136448 d!42743))

(declare-fun d!42745 () Bool)

(declare-fun isEmpty!416 (Option!177) Bool)

(assert (=> d!42745 (= (isDefined!125 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun bs!5719 () Bool)

(assert (= bs!5719 d!42745))

(assert (=> bs!5719 m!162541))

(declare-fun m!162869 () Bool)

(assert (=> bs!5719 m!162869))

(assert (=> b!136448 d!42745))

(declare-fun b!136786 () Bool)

(declare-fun e!89061 () Option!177)

(assert (=> b!136786 (= e!89061 (getValueByKey!171 (t!6195 (toList!855 lt!71024)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136787 () Bool)

(assert (=> b!136787 (= e!89061 None!175)))

(declare-fun b!136785 () Bool)

(declare-fun e!89060 () Option!177)

(assert (=> b!136785 (= e!89060 e!89061)))

(declare-fun c!25651 () Bool)

(assert (=> b!136785 (= c!25651 (and ((_ is Cons!1712) (toList!855 lt!71024)) (not (= (_1!1310 (h!2318 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun c!25650 () Bool)

(declare-fun d!42747 () Bool)

(assert (=> d!42747 (= c!25650 (and ((_ is Cons!1712) (toList!855 lt!71024)) (= (_1!1310 (h!2318 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!42747 (= (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89060)))

(declare-fun b!136784 () Bool)

(assert (=> b!136784 (= e!89060 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71024)))))))

(assert (= (and d!42747 c!25650) b!136784))

(assert (= (and d!42747 (not c!25650)) b!136785))

(assert (= (and b!136785 c!25651) b!136786))

(assert (= (and b!136785 (not c!25651)) b!136787))

(assert (=> b!136786 m!162421))

(declare-fun m!162871 () Bool)

(assert (=> b!136786 m!162871))

(assert (=> b!136448 d!42747))

(declare-fun d!42749 () Bool)

(assert (=> d!42749 (= (get!1491 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3214 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!136581 d!42749))

(declare-fun d!42751 () Bool)

(declare-fun e!89064 () Bool)

(assert (=> d!42751 e!89064))

(declare-fun res!65519 () Bool)

(assert (=> d!42751 (=> (not res!65519) (not e!89064))))

(declare-fun lt!71311 () SeekEntryResult!279)

(assert (=> d!42751 (= res!65519 ((_ is Found!279) lt!71311))))

(assert (=> d!42751 (= lt!71311 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun lt!71310 () Unit!4286)

(declare-fun choose!843 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) Int) Unit!4286)

(assert (=> d!42751 (= lt!71310 (choose!843 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42751 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42751 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)) lt!71310)))

(declare-fun b!136792 () Bool)

(declare-fun res!65520 () Bool)

(assert (=> b!136792 (=> (not res!65520) (not e!89064))))

(assert (=> b!136792 (= res!65520 (inRange!0 (index!3278 lt!71311) (mask!7201 newMap!16)))))

(declare-fun b!136793 () Bool)

(assert (=> b!136793 (= e!89064 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71311)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!136793 (and (bvsge (index!3278 lt!71311) #b00000000000000000000000000000000) (bvslt (index!3278 lt!71311) (size!2531 (_keys!4640 newMap!16))))))

(assert (= (and d!42751 res!65519) b!136792))

(assert (= (and b!136792 res!65520) b!136793))

(assert (=> d!42751 m!162421))

(assert (=> d!42751 m!162553))

(assert (=> d!42751 m!162421))

(declare-fun m!162873 () Bool)

(assert (=> d!42751 m!162873))

(assert (=> d!42751 m!162671))

(declare-fun m!162875 () Bool)

(assert (=> b!136792 m!162875))

(declare-fun m!162877 () Bool)

(assert (=> b!136793 m!162877))

(assert (=> bm!14976 d!42751))

(assert (=> b!136450 d!42745))

(assert (=> b!136450 d!42747))

(declare-fun d!42753 () Bool)

(declare-fun e!89065 () Bool)

(assert (=> d!42753 e!89065))

(declare-fun res!65521 () Bool)

(assert (=> d!42753 (=> res!65521 e!89065)))

(declare-fun lt!71312 () Bool)

(assert (=> d!42753 (= res!65521 (not lt!71312))))

(declare-fun lt!71314 () Bool)

(assert (=> d!42753 (= lt!71312 lt!71314)))

(declare-fun lt!71315 () Unit!4286)

(declare-fun e!89066 () Unit!4286)

(assert (=> d!42753 (= lt!71315 e!89066)))

(declare-fun c!25652 () Bool)

(assert (=> d!42753 (= c!25652 lt!71314)))

(assert (=> d!42753 (= lt!71314 (containsKey!175 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42753 (= (contains!892 lt!71204 #b0000000000000000000000000000000000000000000000000000000000000000) lt!71312)))

(declare-fun b!136794 () Bool)

(declare-fun lt!71313 () Unit!4286)

(assert (=> b!136794 (= e!89066 lt!71313)))

(assert (=> b!136794 (= lt!71313 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136794 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!136795 () Bool)

(declare-fun Unit!4301 () Unit!4286)

(assert (=> b!136795 (= e!89066 Unit!4301)))

(declare-fun b!136796 () Bool)

(assert (=> b!136796 (= e!89065 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42753 c!25652) b!136794))

(assert (= (and d!42753 (not c!25652)) b!136795))

(assert (= (and d!42753 (not res!65521)) b!136796))

(declare-fun m!162879 () Bool)

(assert (=> d!42753 m!162879))

(declare-fun m!162881 () Bool)

(assert (=> b!136794 m!162881))

(declare-fun m!162883 () Bool)

(assert (=> b!136794 m!162883))

(assert (=> b!136794 m!162883))

(declare-fun m!162885 () Bool)

(assert (=> b!136794 m!162885))

(assert (=> b!136796 m!162883))

(assert (=> b!136796 m!162883))

(assert (=> b!136796 m!162885))

(assert (=> bm!15011 d!42753))

(declare-fun d!42755 () Bool)

(assert (=> d!42755 (contains!892 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71210)))

(declare-fun lt!71318 () Unit!4286)

(declare-fun choose!844 (ListLongMap!1679 (_ BitVec 64) V!3497 (_ BitVec 64)) Unit!4286)

(assert (=> d!42755 (= lt!71318 (choose!844 lt!71198 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71210))))

(assert (=> d!42755 (contains!892 lt!71198 lt!71210)))

(assert (=> d!42755 (= (addStillContains!93 lt!71198 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71210) lt!71318)))

(declare-fun bs!5720 () Bool)

(assert (= bs!5720 d!42755))

(assert (=> bs!5720 m!162645))

(assert (=> bs!5720 m!162645))

(assert (=> bs!5720 m!162649))

(declare-fun m!162887 () Bool)

(assert (=> bs!5720 m!162887))

(declare-fun m!162889 () Bool)

(assert (=> bs!5720 m!162889))

(assert (=> b!136655 d!42755))

(declare-fun d!42757 () Bool)

(declare-fun e!89067 () Bool)

(assert (=> d!42757 e!89067))

(declare-fun res!65522 () Bool)

(assert (=> d!42757 (=> res!65522 e!89067)))

(declare-fun lt!71319 () Bool)

(assert (=> d!42757 (= res!65522 (not lt!71319))))

(declare-fun lt!71321 () Bool)

(assert (=> d!42757 (= lt!71319 lt!71321)))

(declare-fun lt!71322 () Unit!4286)

(declare-fun e!89068 () Unit!4286)

(assert (=> d!42757 (= lt!71322 e!89068)))

(declare-fun c!25653 () Bool)

(assert (=> d!42757 (= c!25653 lt!71321)))

(assert (=> d!42757 (= lt!71321 (containsKey!175 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))

(assert (=> d!42757 (= (contains!892 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71210) lt!71319)))

(declare-fun b!136798 () Bool)

(declare-fun lt!71320 () Unit!4286)

(assert (=> b!136798 (= e!89068 lt!71320)))

(assert (=> b!136798 (= lt!71320 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))

(assert (=> b!136798 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))

(declare-fun b!136799 () Bool)

(declare-fun Unit!4302 () Unit!4286)

(assert (=> b!136799 (= e!89068 Unit!4302)))

(declare-fun b!136800 () Bool)

(assert (=> b!136800 (= e!89067 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210)))))

(assert (= (and d!42757 c!25653) b!136798))

(assert (= (and d!42757 (not c!25653)) b!136799))

(assert (= (and d!42757 (not res!65522)) b!136800))

(declare-fun m!162891 () Bool)

(assert (=> d!42757 m!162891))

(declare-fun m!162893 () Bool)

(assert (=> b!136798 m!162893))

(declare-fun m!162895 () Bool)

(assert (=> b!136798 m!162895))

(assert (=> b!136798 m!162895))

(declare-fun m!162897 () Bool)

(assert (=> b!136798 m!162897))

(assert (=> b!136800 m!162895))

(assert (=> b!136800 m!162895))

(assert (=> b!136800 m!162897))

(assert (=> b!136655 d!42757))

(declare-fun d!42759 () Bool)

(assert (=> d!42759 (= (apply!117 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71192) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71192)))))

(declare-fun bs!5721 () Bool)

(assert (= bs!5721 d!42759))

(declare-fun m!162899 () Bool)

(assert (=> bs!5721 m!162899))

(assert (=> bs!5721 m!162899))

(declare-fun m!162901 () Bool)

(assert (=> bs!5721 m!162901))

(assert (=> b!136655 d!42759))

(declare-fun d!42761 () Bool)

(assert (=> d!42761 (= (apply!117 lt!71200 lt!71206) (get!1493 (getValueByKey!171 (toList!855 lt!71200) lt!71206)))))

(declare-fun bs!5722 () Bool)

(assert (= bs!5722 d!42761))

(declare-fun m!162903 () Bool)

(assert (=> bs!5722 m!162903))

(assert (=> bs!5722 m!162903))

(declare-fun m!162905 () Bool)

(assert (=> bs!5722 m!162905))

(assert (=> b!136655 d!42761))

(declare-fun d!42763 () Bool)

(assert (=> d!42763 (= (apply!117 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71206) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71206)))))

(declare-fun bs!5723 () Bool)

(assert (= bs!5723 d!42763))

(declare-fun m!162907 () Bool)

(assert (=> bs!5723 m!162907))

(assert (=> bs!5723 m!162907))

(declare-fun m!162909 () Bool)

(assert (=> bs!5723 m!162909))

(assert (=> b!136655 d!42763))

(declare-fun d!42765 () Bool)

(declare-fun e!89069 () Bool)

(assert (=> d!42765 e!89069))

(declare-fun res!65523 () Bool)

(assert (=> d!42765 (=> (not res!65523) (not e!89069))))

(declare-fun lt!71324 () ListLongMap!1679)

(assert (=> d!42765 (= res!65523 (contains!892 lt!71324 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71325 () List!1716)

(assert (=> d!42765 (= lt!71324 (ListLongMap!1680 lt!71325))))

(declare-fun lt!71326 () Unit!4286)

(declare-fun lt!71323 () Unit!4286)

(assert (=> d!42765 (= lt!71326 lt!71323)))

(assert (=> d!42765 (= (getValueByKey!171 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42765 (= lt!71323 (lemmaContainsTupThenGetReturnValue!89 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42765 (= lt!71325 (insertStrictlySorted!92 (toList!855 lt!71199) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42765 (= (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71324)))

(declare-fun b!136801 () Bool)

(declare-fun res!65524 () Bool)

(assert (=> b!136801 (=> (not res!65524) (not e!89069))))

(assert (=> b!136801 (= res!65524 (= (getValueByKey!171 (toList!855 lt!71324) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!136802 () Bool)

(assert (=> b!136802 (= e!89069 (contains!895 (toList!855 lt!71324) (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!42765 res!65523) b!136801))

(assert (= (and b!136801 res!65524) b!136802))

(declare-fun m!162911 () Bool)

(assert (=> d!42765 m!162911))

(declare-fun m!162913 () Bool)

(assert (=> d!42765 m!162913))

(declare-fun m!162915 () Bool)

(assert (=> d!42765 m!162915))

(declare-fun m!162917 () Bool)

(assert (=> d!42765 m!162917))

(declare-fun m!162919 () Bool)

(assert (=> b!136801 m!162919))

(declare-fun m!162921 () Bool)

(assert (=> b!136802 m!162921))

(assert (=> b!136655 d!42765))

(declare-fun d!42767 () Bool)

(assert (=> d!42767 (= (apply!117 lt!71208 lt!71195) (get!1493 (getValueByKey!171 (toList!855 lt!71208) lt!71195)))))

(declare-fun bs!5724 () Bool)

(assert (= bs!5724 d!42767))

(declare-fun m!162923 () Bool)

(assert (=> bs!5724 m!162923))

(assert (=> bs!5724 m!162923))

(declare-fun m!162925 () Bool)

(assert (=> bs!5724 m!162925))

(assert (=> b!136655 d!42767))

(declare-fun d!42769 () Bool)

(assert (=> d!42769 (= (apply!117 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71206) (apply!117 lt!71200 lt!71206))))

(declare-fun lt!71329 () Unit!4286)

(declare-fun choose!845 (ListLongMap!1679 (_ BitVec 64) V!3497 (_ BitVec 64)) Unit!4286)

(assert (=> d!42769 (= lt!71329 (choose!845 lt!71200 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71206))))

(declare-fun e!89072 () Bool)

(assert (=> d!42769 e!89072))

(declare-fun res!65527 () Bool)

(assert (=> d!42769 (=> (not res!65527) (not e!89072))))

(assert (=> d!42769 (= res!65527 (contains!892 lt!71200 lt!71206))))

(assert (=> d!42769 (= (addApplyDifferent!93 lt!71200 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71206) lt!71329)))

(declare-fun b!136806 () Bool)

(assert (=> b!136806 (= e!89072 (not (= lt!71206 lt!71193)))))

(assert (= (and d!42769 res!65527) b!136806))

(declare-fun m!162927 () Bool)

(assert (=> d!42769 m!162927))

(assert (=> d!42769 m!162655))

(assert (=> d!42769 m!162631))

(assert (=> d!42769 m!162633))

(assert (=> d!42769 m!162631))

(declare-fun m!162929 () Bool)

(assert (=> d!42769 m!162929))

(assert (=> b!136655 d!42769))

(declare-fun d!42771 () Bool)

(declare-fun e!89073 () Bool)

(assert (=> d!42771 e!89073))

(declare-fun res!65528 () Bool)

(assert (=> d!42771 (=> (not res!65528) (not e!89073))))

(declare-fun lt!71331 () ListLongMap!1679)

(assert (=> d!42771 (= res!65528 (contains!892 lt!71331 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71332 () List!1716)

(assert (=> d!42771 (= lt!71331 (ListLongMap!1680 lt!71332))))

(declare-fun lt!71333 () Unit!4286)

(declare-fun lt!71330 () Unit!4286)

(assert (=> d!42771 (= lt!71333 lt!71330)))

(assert (=> d!42771 (= (getValueByKey!171 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42771 (= lt!71330 (lemmaContainsTupThenGetReturnValue!89 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42771 (= lt!71332 (insertStrictlySorted!92 (toList!855 lt!71208) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42771 (= (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71331)))

(declare-fun b!136807 () Bool)

(declare-fun res!65529 () Bool)

(assert (=> b!136807 (=> (not res!65529) (not e!89073))))

(assert (=> b!136807 (= res!65529 (= (getValueByKey!171 (toList!855 lt!71331) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!136808 () Bool)

(assert (=> b!136808 (= e!89073 (contains!895 (toList!855 lt!71331) (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!42771 res!65528) b!136807))

(assert (= (and b!136807 res!65529) b!136808))

(declare-fun m!162931 () Bool)

(assert (=> d!42771 m!162931))

(declare-fun m!162933 () Bool)

(assert (=> d!42771 m!162933))

(declare-fun m!162935 () Bool)

(assert (=> d!42771 m!162935))

(declare-fun m!162937 () Bool)

(assert (=> d!42771 m!162937))

(declare-fun m!162939 () Bool)

(assert (=> b!136807 m!162939))

(declare-fun m!162941 () Bool)

(assert (=> b!136808 m!162941))

(assert (=> b!136655 d!42771))

(declare-fun d!42773 () Bool)

(assert (=> d!42773 (= (apply!117 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71195) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71195)))))

(declare-fun bs!5725 () Bool)

(assert (= bs!5725 d!42773))

(declare-fun m!162943 () Bool)

(assert (=> bs!5725 m!162943))

(assert (=> bs!5725 m!162943))

(declare-fun m!162945 () Bool)

(assert (=> bs!5725 m!162945))

(assert (=> b!136655 d!42773))

(declare-fun b!136833 () Bool)

(declare-fun e!89091 () Bool)

(declare-fun e!89090 () Bool)

(assert (=> b!136833 (= e!89091 e!89090)))

(declare-fun c!25664 () Bool)

(assert (=> b!136833 (= c!25664 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun bm!15040 () Bool)

(declare-fun call!15043 () ListLongMap!1679)

(assert (=> bm!15040 (= call!15043 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!136834 () Bool)

(declare-fun lt!71354 () Unit!4286)

(declare-fun lt!71351 () Unit!4286)

(assert (=> b!136834 (= lt!71354 lt!71351)))

(declare-fun lt!71349 () (_ BitVec 64))

(declare-fun lt!71353 () (_ BitVec 64))

(declare-fun lt!71348 () V!3497)

(declare-fun lt!71352 () ListLongMap!1679)

(assert (=> b!136834 (not (contains!892 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348)) lt!71349))))

(declare-fun addStillNotContains!63 (ListLongMap!1679 (_ BitVec 64) V!3497 (_ BitVec 64)) Unit!4286)

(assert (=> b!136834 (= lt!71351 (addStillNotContains!63 lt!71352 lt!71353 lt!71348 lt!71349))))

(assert (=> b!136834 (= lt!71349 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!136834 (= lt!71348 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!136834 (= lt!71353 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!136834 (= lt!71352 call!15043)))

(declare-fun e!89089 () ListLongMap!1679)

(assert (=> b!136834 (= e!89089 (+!164 call!15043 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!136835 () Bool)

(declare-fun e!89088 () Bool)

(assert (=> b!136835 (= e!89088 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!136835 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun b!136836 () Bool)

(assert (=> b!136836 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> b!136836 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2532 (_values!2871 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!89093 () Bool)

(declare-fun lt!71350 () ListLongMap!1679)

(assert (=> b!136836 (= e!89093 (= (apply!117 lt!71350 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42775 () Bool)

(declare-fun e!89092 () Bool)

(assert (=> d!42775 e!89092))

(declare-fun res!65541 () Bool)

(assert (=> d!42775 (=> (not res!65541) (not e!89092))))

(assert (=> d!42775 (= res!65541 (not (contains!892 lt!71350 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!89094 () ListLongMap!1679)

(assert (=> d!42775 (= lt!71350 e!89094)))

(declare-fun c!25665 () Bool)

(assert (=> d!42775 (= c!25665 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> d!42775 (validMask!0 (mask!7201 (v!3215 (underlying!457 thiss!992))))))

(assert (=> d!42775 (= (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) lt!71350)))

(declare-fun b!136837 () Bool)

(assert (=> b!136837 (= e!89092 e!89091)))

(declare-fun c!25662 () Bool)

(assert (=> b!136837 (= c!25662 e!89088)))

(declare-fun res!65539 () Bool)

(assert (=> b!136837 (=> (not res!65539) (not e!89088))))

(assert (=> b!136837 (= res!65539 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136838 () Bool)

(assert (=> b!136838 (= e!89094 e!89089)))

(declare-fun c!25663 () Bool)

(assert (=> b!136838 (= c!25663 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!136839 () Bool)

(assert (=> b!136839 (= e!89090 (= lt!71350 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136840 () Bool)

(declare-fun res!65538 () Bool)

(assert (=> b!136840 (=> (not res!65538) (not e!89092))))

(assert (=> b!136840 (= res!65538 (not (contains!892 lt!71350 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!136841 () Bool)

(assert (=> b!136841 (= e!89094 (ListLongMap!1680 Nil!1713))))

(declare-fun b!136842 () Bool)

(assert (=> b!136842 (= e!89091 e!89093)))

(assert (=> b!136842 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun res!65540 () Bool)

(assert (=> b!136842 (= res!65540 (contains!892 lt!71350 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!136842 (=> (not res!65540) (not e!89093))))

(declare-fun b!136843 () Bool)

(assert (=> b!136843 (= e!89089 call!15043)))

(declare-fun b!136844 () Bool)

(declare-fun isEmpty!417 (ListLongMap!1679) Bool)

(assert (=> b!136844 (= e!89090 (isEmpty!417 lt!71350))))

(assert (= (and d!42775 c!25665) b!136841))

(assert (= (and d!42775 (not c!25665)) b!136838))

(assert (= (and b!136838 c!25663) b!136834))

(assert (= (and b!136838 (not c!25663)) b!136843))

(assert (= (or b!136834 b!136843) bm!15040))

(assert (= (and d!42775 res!65541) b!136840))

(assert (= (and b!136840 res!65538) b!136837))

(assert (= (and b!136837 res!65539) b!136835))

(assert (= (and b!136837 c!25662) b!136842))

(assert (= (and b!136837 (not c!25662)) b!136833))

(assert (= (and b!136842 res!65540) b!136836))

(assert (= (and b!136833 c!25664) b!136839))

(assert (= (and b!136833 (not c!25664)) b!136844))

(declare-fun b_lambda!6093 () Bool)

(assert (=> (not b_lambda!6093) (not b!136834)))

(assert (=> b!136834 t!6192))

(declare-fun b_and!8449 () Bool)

(assert (= b_and!8445 (and (=> t!6192 result!4023) b_and!8449)))

(assert (=> b!136834 t!6194))

(declare-fun b_and!8451 () Bool)

(assert (= b_and!8447 (and (=> t!6194 result!4027) b_and!8451)))

(declare-fun b_lambda!6095 () Bool)

(assert (=> (not b_lambda!6095) (not b!136836)))

(assert (=> b!136836 t!6192))

(declare-fun b_and!8453 () Bool)

(assert (= b_and!8449 (and (=> t!6192 result!4023) b_and!8453)))

(assert (=> b!136836 t!6194))

(declare-fun b_and!8455 () Bool)

(assert (= b_and!8451 (and (=> t!6194 result!4027) b_and!8455)))

(declare-fun m!162947 () Bool)

(assert (=> b!136844 m!162947))

(declare-fun m!162949 () Bool)

(assert (=> d!42775 m!162949))

(assert (=> d!42775 m!162611))

(assert (=> b!136836 m!162617))

(assert (=> b!136836 m!162443))

(assert (=> b!136836 m!162619))

(assert (=> b!136836 m!162617))

(assert (=> b!136836 m!162443))

(assert (=> b!136836 m!162605))

(assert (=> b!136836 m!162605))

(declare-fun m!162951 () Bool)

(assert (=> b!136836 m!162951))

(declare-fun m!162953 () Bool)

(assert (=> bm!15040 m!162953))

(assert (=> b!136838 m!162605))

(assert (=> b!136838 m!162605))

(assert (=> b!136838 m!162613))

(declare-fun m!162955 () Bool)

(assert (=> b!136834 m!162955))

(assert (=> b!136834 m!162617))

(assert (=> b!136834 m!162443))

(assert (=> b!136834 m!162619))

(assert (=> b!136834 m!162605))

(assert (=> b!136834 m!162955))

(declare-fun m!162957 () Bool)

(assert (=> b!136834 m!162957))

(declare-fun m!162959 () Bool)

(assert (=> b!136834 m!162959))

(assert (=> b!136834 m!162617))

(declare-fun m!162961 () Bool)

(assert (=> b!136834 m!162961))

(assert (=> b!136834 m!162443))

(assert (=> b!136842 m!162605))

(assert (=> b!136842 m!162605))

(declare-fun m!162963 () Bool)

(assert (=> b!136842 m!162963))

(declare-fun m!162965 () Bool)

(assert (=> b!136840 m!162965))

(assert (=> b!136839 m!162953))

(assert (=> b!136835 m!162605))

(assert (=> b!136835 m!162605))

(assert (=> b!136835 m!162613))

(assert (=> b!136655 d!42775))

(declare-fun d!42777 () Bool)

(assert (=> d!42777 (= (apply!117 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71195) (apply!117 lt!71208 lt!71195))))

(declare-fun lt!71355 () Unit!4286)

(assert (=> d!42777 (= lt!71355 (choose!845 lt!71208 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71195))))

(declare-fun e!89095 () Bool)

(assert (=> d!42777 e!89095))

(declare-fun res!65542 () Bool)

(assert (=> d!42777 (=> (not res!65542) (not e!89095))))

(assert (=> d!42777 (= res!65542 (contains!892 lt!71208 lt!71195))))

(assert (=> d!42777 (= (addApplyDifferent!93 lt!71208 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71195) lt!71355)))

(declare-fun b!136845 () Bool)

(assert (=> b!136845 (= e!89095 (not (= lt!71195 lt!71201)))))

(assert (= (and d!42777 res!65542) b!136845))

(declare-fun m!162967 () Bool)

(assert (=> d!42777 m!162967))

(assert (=> d!42777 m!162639))

(assert (=> d!42777 m!162641))

(assert (=> d!42777 m!162651))

(assert (=> d!42777 m!162641))

(declare-fun m!162969 () Bool)

(assert (=> d!42777 m!162969))

(assert (=> b!136655 d!42777))

(declare-fun d!42779 () Bool)

(assert (=> d!42779 (= (apply!117 lt!71199 lt!71192) (get!1493 (getValueByKey!171 (toList!855 lt!71199) lt!71192)))))

(declare-fun bs!5726 () Bool)

(assert (= bs!5726 d!42779))

(declare-fun m!162971 () Bool)

(assert (=> bs!5726 m!162971))

(assert (=> bs!5726 m!162971))

(declare-fun m!162973 () Bool)

(assert (=> bs!5726 m!162973))

(assert (=> b!136655 d!42779))

(declare-fun d!42781 () Bool)

(declare-fun e!89096 () Bool)

(assert (=> d!42781 e!89096))

(declare-fun res!65543 () Bool)

(assert (=> d!42781 (=> (not res!65543) (not e!89096))))

(declare-fun lt!71357 () ListLongMap!1679)

(assert (=> d!42781 (= res!65543 (contains!892 lt!71357 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71358 () List!1716)

(assert (=> d!42781 (= lt!71357 (ListLongMap!1680 lt!71358))))

(declare-fun lt!71359 () Unit!4286)

(declare-fun lt!71356 () Unit!4286)

(assert (=> d!42781 (= lt!71359 lt!71356)))

(assert (=> d!42781 (= (getValueByKey!171 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42781 (= lt!71356 (lemmaContainsTupThenGetReturnValue!89 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42781 (= lt!71358 (insertStrictlySorted!92 (toList!855 lt!71198) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42781 (= (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71357)))

(declare-fun b!136846 () Bool)

(declare-fun res!65544 () Bool)

(assert (=> b!136846 (=> (not res!65544) (not e!89096))))

(assert (=> b!136846 (= res!65544 (= (getValueByKey!171 (toList!855 lt!71357) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!136847 () Bool)

(assert (=> b!136847 (= e!89096 (contains!895 (toList!855 lt!71357) (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!42781 res!65543) b!136846))

(assert (= (and b!136846 res!65544) b!136847))

(declare-fun m!162975 () Bool)

(assert (=> d!42781 m!162975))

(declare-fun m!162977 () Bool)

(assert (=> d!42781 m!162977))

(declare-fun m!162979 () Bool)

(assert (=> d!42781 m!162979))

(declare-fun m!162981 () Bool)

(assert (=> d!42781 m!162981))

(declare-fun m!162983 () Bool)

(assert (=> b!136846 m!162983))

(declare-fun m!162985 () Bool)

(assert (=> b!136847 m!162985))

(assert (=> b!136655 d!42781))

(declare-fun d!42783 () Bool)

(assert (=> d!42783 (= (apply!117 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71192) (apply!117 lt!71199 lt!71192))))

(declare-fun lt!71360 () Unit!4286)

(assert (=> d!42783 (= lt!71360 (choose!845 lt!71199 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71192))))

(declare-fun e!89097 () Bool)

(assert (=> d!42783 e!89097))

(declare-fun res!65545 () Bool)

(assert (=> d!42783 (=> (not res!65545) (not e!89097))))

(assert (=> d!42783 (= res!65545 (contains!892 lt!71199 lt!71192))))

(assert (=> d!42783 (= (addApplyDifferent!93 lt!71199 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71192) lt!71360)))

(declare-fun b!136848 () Bool)

(assert (=> b!136848 (= e!89097 (not (= lt!71192 lt!71209)))))

(assert (= (and d!42783 res!65545) b!136848))

(declare-fun m!162987 () Bool)

(assert (=> d!42783 m!162987))

(assert (=> d!42783 m!162637))

(assert (=> d!42783 m!162635))

(assert (=> d!42783 m!162657))

(assert (=> d!42783 m!162635))

(declare-fun m!162989 () Bool)

(assert (=> d!42783 m!162989))

(assert (=> b!136655 d!42783))

(declare-fun d!42785 () Bool)

(declare-fun e!89098 () Bool)

(assert (=> d!42785 e!89098))

(declare-fun res!65546 () Bool)

(assert (=> d!42785 (=> (not res!65546) (not e!89098))))

(declare-fun lt!71362 () ListLongMap!1679)

(assert (=> d!42785 (= res!65546 (contains!892 lt!71362 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71363 () List!1716)

(assert (=> d!42785 (= lt!71362 (ListLongMap!1680 lt!71363))))

(declare-fun lt!71364 () Unit!4286)

(declare-fun lt!71361 () Unit!4286)

(assert (=> d!42785 (= lt!71364 lt!71361)))

(assert (=> d!42785 (= (getValueByKey!171 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42785 (= lt!71361 (lemmaContainsTupThenGetReturnValue!89 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42785 (= lt!71363 (insertStrictlySorted!92 (toList!855 lt!71200) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42785 (= (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71362)))

(declare-fun b!136849 () Bool)

(declare-fun res!65547 () Bool)

(assert (=> b!136849 (=> (not res!65547) (not e!89098))))

(assert (=> b!136849 (= res!65547 (= (getValueByKey!171 (toList!855 lt!71362) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!136850 () Bool)

(assert (=> b!136850 (= e!89098 (contains!895 (toList!855 lt!71362) (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!42785 res!65546) b!136849))

(assert (= (and b!136849 res!65547) b!136850))

(declare-fun m!162991 () Bool)

(assert (=> d!42785 m!162991))

(declare-fun m!162993 () Bool)

(assert (=> d!42785 m!162993))

(declare-fun m!162995 () Bool)

(assert (=> d!42785 m!162995))

(declare-fun m!162997 () Bool)

(assert (=> d!42785 m!162997))

(declare-fun m!162999 () Bool)

(assert (=> b!136849 m!162999))

(declare-fun m!163001 () Bool)

(assert (=> b!136850 m!163001))

(assert (=> b!136655 d!42785))

(declare-fun d!42787 () Bool)

(declare-fun e!89099 () Bool)

(assert (=> d!42787 e!89099))

(declare-fun res!65548 () Bool)

(assert (=> d!42787 (=> res!65548 e!89099)))

(declare-fun lt!71365 () Bool)

(assert (=> d!42787 (= res!65548 (not lt!71365))))

(declare-fun lt!71367 () Bool)

(assert (=> d!42787 (= lt!71365 lt!71367)))

(declare-fun lt!71368 () Unit!4286)

(declare-fun e!89100 () Unit!4286)

(assert (=> d!42787 (= lt!71368 e!89100)))

(declare-fun c!25666 () Bool)

(assert (=> d!42787 (= c!25666 lt!71367)))

(assert (=> d!42787 (= lt!71367 (containsKey!175 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42787 (= (contains!892 e!88927 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71365)))

(declare-fun b!136851 () Bool)

(declare-fun lt!71366 () Unit!4286)

(assert (=> b!136851 (= e!89100 lt!71366)))

(assert (=> b!136851 (= lt!71366 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!136851 (isDefined!125 (getValueByKey!171 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136852 () Bool)

(declare-fun Unit!4303 () Unit!4286)

(assert (=> b!136852 (= e!89100 Unit!4303)))

(declare-fun b!136853 () Bool)

(assert (=> b!136853 (= e!89099 (isDefined!125 (getValueByKey!171 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (= (and d!42787 c!25666) b!136851))

(assert (= (and d!42787 (not c!25666)) b!136852))

(assert (= (and d!42787 (not res!65548)) b!136853))

(assert (=> d!42787 m!162421))

(declare-fun m!163003 () Bool)

(assert (=> d!42787 m!163003))

(assert (=> b!136851 m!162421))

(declare-fun m!163005 () Bool)

(assert (=> b!136851 m!163005))

(assert (=> b!136851 m!162421))

(declare-fun m!163007 () Bool)

(assert (=> b!136851 m!163007))

(assert (=> b!136851 m!163007))

(declare-fun m!163009 () Bool)

(assert (=> b!136851 m!163009))

(assert (=> b!136853 m!162421))

(assert (=> b!136853 m!163007))

(assert (=> b!136853 m!163007))

(assert (=> b!136853 m!163009))

(assert (=> bm!14983 d!42787))

(assert (=> b!136566 d!42735))

(assert (=> b!136593 d!42703))

(assert (=> b!136539 d!42729))

(declare-fun d!42789 () Bool)

(declare-fun e!89101 () Bool)

(assert (=> d!42789 e!89101))

(declare-fun res!65549 () Bool)

(assert (=> d!42789 (=> (not res!65549) (not e!89101))))

(declare-fun lt!71370 () ListLongMap!1679)

(assert (=> d!42789 (= res!65549 (contains!892 lt!71370 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71371 () List!1716)

(assert (=> d!42789 (= lt!71370 (ListLongMap!1680 lt!71371))))

(declare-fun lt!71372 () Unit!4286)

(declare-fun lt!71369 () Unit!4286)

(assert (=> d!42789 (= lt!71372 lt!71369)))

(assert (=> d!42789 (= (getValueByKey!171 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42789 (= lt!71369 (lemmaContainsTupThenGetReturnValue!89 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42789 (= lt!71371 (insertStrictlySorted!92 (toList!855 call!14989) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42789 (= (+!164 call!14989 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71370)))

(declare-fun b!136854 () Bool)

(declare-fun res!65550 () Bool)

(assert (=> b!136854 (=> (not res!65550) (not e!89101))))

(assert (=> b!136854 (= res!65550 (= (getValueByKey!171 (toList!855 lt!71370) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!136855 () Bool)

(assert (=> b!136855 (= e!89101 (contains!895 (toList!855 lt!71370) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42789 res!65549) b!136854))

(assert (= (and b!136854 res!65550) b!136855))

(declare-fun m!163011 () Bool)

(assert (=> d!42789 m!163011))

(declare-fun m!163013 () Bool)

(assert (=> d!42789 m!163013))

(declare-fun m!163015 () Bool)

(assert (=> d!42789 m!163015))

(declare-fun m!163017 () Bool)

(assert (=> d!42789 m!163017))

(declare-fun m!163019 () Bool)

(assert (=> b!136854 m!163019))

(declare-fun m!163021 () Bool)

(assert (=> b!136855 m!163021))

(assert (=> b!136552 d!42789))

(declare-fun d!42791 () Bool)

(declare-fun e!89102 () Bool)

(assert (=> d!42791 e!89102))

(declare-fun res!65551 () Bool)

(assert (=> d!42791 (=> (not res!65551) (not e!89102))))

(declare-fun lt!71374 () ListLongMap!1679)

(assert (=> d!42791 (= res!65551 (contains!892 lt!71374 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!71375 () List!1716)

(assert (=> d!42791 (= lt!71374 (ListLongMap!1680 lt!71375))))

(declare-fun lt!71376 () Unit!4286)

(declare-fun lt!71373 () Unit!4286)

(assert (=> d!42791 (= lt!71376 lt!71373)))

(assert (=> d!42791 (= (getValueByKey!171 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42791 (= lt!71373 (lemmaContainsTupThenGetReturnValue!89 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42791 (= lt!71375 (insertStrictlySorted!92 (toList!855 e!88910) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42791 (= (+!164 e!88910 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71374)))

(declare-fun b!136856 () Bool)

(declare-fun res!65552 () Bool)

(assert (=> b!136856 (=> (not res!65552) (not e!89102))))

(assert (=> b!136856 (= res!65552 (= (getValueByKey!171 (toList!855 lt!71374) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!136857 () Bool)

(assert (=> b!136857 (= e!89102 (contains!895 (toList!855 lt!71374) (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!42791 res!65551) b!136856))

(assert (= (and b!136856 res!65552) b!136857))

(declare-fun m!163023 () Bool)

(assert (=> d!42791 m!163023))

(declare-fun m!163025 () Bool)

(assert (=> d!42791 m!163025))

(declare-fun m!163027 () Bool)

(assert (=> d!42791 m!163027))

(declare-fun m!163029 () Bool)

(assert (=> d!42791 m!163029))

(declare-fun m!163031 () Bool)

(assert (=> b!136856 m!163031))

(declare-fun m!163033 () Bool)

(assert (=> b!136857 m!163033))

(assert (=> bm!14991 d!42791))

(declare-fun bm!15043 () Bool)

(declare-fun call!15046 () (_ BitVec 32))

(assert (=> bm!15043 (= call!15046 (arrayCountValidKeys!0 (_keys!4640 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136866 () Bool)

(declare-fun e!89108 () (_ BitVec 32))

(assert (=> b!136866 (= e!89108 (bvadd #b00000000000000000000000000000001 call!15046))))

(declare-fun b!136867 () Bool)

(assert (=> b!136867 (= e!89108 call!15046)))

(declare-fun d!42793 () Bool)

(declare-fun lt!71379 () (_ BitVec 32))

(assert (=> d!42793 (and (bvsge lt!71379 #b00000000000000000000000000000000) (bvsle lt!71379 (bvsub (size!2531 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!89107 () (_ BitVec 32))

(assert (=> d!42793 (= lt!71379 e!89107)))

(declare-fun c!25672 () Bool)

(assert (=> d!42793 (= c!25672 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42793 (and (bvsle #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2531 (_keys!4640 newMap!16)) (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42793 (= (arrayCountValidKeys!0 (_keys!4640 newMap!16) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) lt!71379)))

(declare-fun b!136868 () Bool)

(assert (=> b!136868 (= e!89107 #b00000000000000000000000000000000)))

(declare-fun b!136869 () Bool)

(assert (=> b!136869 (= e!89107 e!89108)))

(declare-fun c!25671 () Bool)

(assert (=> b!136869 (= c!25671 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!42793 c!25672) b!136868))

(assert (= (and d!42793 (not c!25672)) b!136869))

(assert (= (and b!136869 c!25671) b!136866))

(assert (= (and b!136869 (not c!25671)) b!136867))

(assert (= (or b!136866 b!136867) bm!15043))

(declare-fun m!163035 () Bool)

(assert (=> bm!15043 m!163035))

(assert (=> b!136869 m!162693))

(assert (=> b!136869 m!162693))

(assert (=> b!136869 m!162695))

(assert (=> b!136439 d!42793))

(declare-fun d!42795 () Bool)

(assert (=> d!42795 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71382 () Unit!4286)

(declare-fun choose!846 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 V!3497 Int) Unit!4286)

(assert (=> d!42795 (= lt!71382 (choose!846 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71132 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42795 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42795 (= (lemmaChangeZeroKeyThenAddPairToListMap!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71132 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) (defaultEntry!2888 newMap!16)) lt!71382)))

(declare-fun bs!5727 () Bool)

(assert (= bs!5727 d!42795))

(assert (=> bs!5727 m!162445))

(declare-fun m!163037 () Bool)

(assert (=> bs!5727 m!163037))

(assert (=> bs!5727 m!162545))

(declare-fun m!163039 () Bool)

(assert (=> bs!5727 m!163039))

(assert (=> bs!5727 m!162445))

(declare-fun m!163041 () Bool)

(assert (=> bs!5727 m!163041))

(assert (=> bs!5727 m!162545))

(assert (=> bs!5727 m!162671))

(assert (=> b!136537 d!42795))

(declare-fun d!42797 () Bool)

(declare-fun e!89111 () Bool)

(assert (=> d!42797 e!89111))

(declare-fun c!25675 () Bool)

(assert (=> d!42797 (= c!25675 (and (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!42797 true))

(declare-fun _$29!159 () Unit!4286)

(assert (=> d!42797 (= (choose!837 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) _$29!159)))

(declare-fun b!136874 () Bool)

(assert (=> b!136874 (= e!89111 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!136875 () Bool)

(assert (=> b!136875 (= e!89111 (ite (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!42797 c!25675) b!136874))

(assert (= (and d!42797 (not c!25675)) b!136875))

(assert (=> b!136874 m!162421))

(assert (=> b!136874 m!162423))

(assert (=> d!42705 d!42797))

(declare-fun d!42799 () Bool)

(assert (=> d!42799 (= (validMask!0 (mask!7201 (v!3215 (underlying!457 thiss!992)))) (and (or (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000001111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000011111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000001111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000011111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000001111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000011111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000001111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000011111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000001111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000011111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000001111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000011111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000001111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000011111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000111111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000001111111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000011111111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000111111111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00001111111111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00011111111111111111111111111111) (= (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> d!42705 d!42799))

(assert (=> d!42713 d!42799))

(declare-fun d!42801 () Bool)

(declare-fun res!65560 () Bool)

(declare-fun e!89121 () Bool)

(assert (=> d!42801 (=> res!65560 e!89121)))

(assert (=> d!42801 (= res!65560 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42801 (= (arrayNoDuplicates!0 (_keys!4640 newMap!16) #b00000000000000000000000000000000 Nil!1716) e!89121)))

(declare-fun b!136886 () Bool)

(declare-fun e!89123 () Bool)

(declare-fun e!89120 () Bool)

(assert (=> b!136886 (= e!89123 e!89120)))

(declare-fun c!25678 () Bool)

(assert (=> b!136886 (= c!25678 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136887 () Bool)

(declare-fun e!89122 () Bool)

(declare-fun contains!896 (List!1719 (_ BitVec 64)) Bool)

(assert (=> b!136887 (= e!89122 (contains!896 Nil!1716 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136888 () Bool)

(declare-fun call!15049 () Bool)

(assert (=> b!136888 (= e!89120 call!15049)))

(declare-fun bm!15046 () Bool)

(assert (=> bm!15046 (= call!15049 (arrayNoDuplicates!0 (_keys!4640 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25678 (Cons!1715 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) Nil!1716) Nil!1716)))))

(declare-fun b!136889 () Bool)

(assert (=> b!136889 (= e!89121 e!89123)))

(declare-fun res!65559 () Bool)

(assert (=> b!136889 (=> (not res!65559) (not e!89123))))

(assert (=> b!136889 (= res!65559 (not e!89122))))

(declare-fun res!65561 () Bool)

(assert (=> b!136889 (=> (not res!65561) (not e!89122))))

(assert (=> b!136889 (= res!65561 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136890 () Bool)

(assert (=> b!136890 (= e!89120 call!15049)))

(assert (= (and d!42801 (not res!65560)) b!136889))

(assert (= (and b!136889 res!65561) b!136887))

(assert (= (and b!136889 res!65559) b!136886))

(assert (= (and b!136886 c!25678) b!136890))

(assert (= (and b!136886 (not c!25678)) b!136888))

(assert (= (or b!136890 b!136888) bm!15046))

(assert (=> b!136886 m!162693))

(assert (=> b!136886 m!162693))

(assert (=> b!136886 m!162695))

(assert (=> b!136887 m!162693))

(assert (=> b!136887 m!162693))

(declare-fun m!163043 () Bool)

(assert (=> b!136887 m!163043))

(assert (=> bm!15046 m!162693))

(declare-fun m!163045 () Bool)

(assert (=> bm!15046 m!163045))

(assert (=> b!136889 m!162693))

(assert (=> b!136889 m!162693))

(assert (=> b!136889 m!162695))

(assert (=> b!136441 d!42801))

(declare-fun d!42803 () Bool)

(assert (=> d!42803 (= (apply!117 lt!71204 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1493 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5728 () Bool)

(assert (= bs!5728 d!42803))

(assert (=> bs!5728 m!162605))

(assert (=> bs!5728 m!162755))

(assert (=> bs!5728 m!162755))

(declare-fun m!163047 () Bool)

(assert (=> bs!5728 m!163047))

(assert (=> b!136648 d!42803))

(declare-fun d!42805 () Bool)

(declare-fun c!25679 () Bool)

(assert (=> d!42805 (= c!25679 ((_ is ValueCellFull!1100) (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!89124 () V!3497)

(assert (=> d!42805 (= (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!89124)))

(declare-fun b!136891 () Bool)

(assert (=> b!136891 (= e!89124 (get!1491 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!136892 () Bool)

(assert (=> b!136892 (= e!89124 (get!1492 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42805 c!25679) b!136891))

(assert (= (and d!42805 (not c!25679)) b!136892))

(assert (=> b!136891 m!162617))

(assert (=> b!136891 m!162443))

(declare-fun m!163049 () Bool)

(assert (=> b!136891 m!163049))

(assert (=> b!136892 m!162617))

(assert (=> b!136892 m!162443))

(declare-fun m!163051 () Bool)

(assert (=> b!136892 m!163051))

(assert (=> b!136648 d!42805))

(declare-fun d!42807 () Bool)

(declare-fun res!65562 () Bool)

(declare-fun e!89125 () Bool)

(assert (=> d!42807 (=> (not res!65562) (not e!89125))))

(assert (=> d!42807 (= res!65562 (simpleValid!93 (_2!1311 lt!71138)))))

(assert (=> d!42807 (= (valid!535 (_2!1311 lt!71138)) e!89125)))

(declare-fun b!136893 () Bool)

(declare-fun res!65563 () Bool)

(assert (=> b!136893 (=> (not res!65563) (not e!89125))))

(assert (=> b!136893 (= res!65563 (= (arrayCountValidKeys!0 (_keys!4640 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))) (_size!603 (_2!1311 lt!71138))))))

(declare-fun b!136894 () Bool)

(declare-fun res!65564 () Bool)

(assert (=> b!136894 (=> (not res!65564) (not e!89125))))

(assert (=> b!136894 (= res!65564 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138))))))

(declare-fun b!136895 () Bool)

(assert (=> b!136895 (= e!89125 (arrayNoDuplicates!0 (_keys!4640 (_2!1311 lt!71138)) #b00000000000000000000000000000000 Nil!1716))))

(assert (= (and d!42807 res!65562) b!136893))

(assert (= (and b!136893 res!65563) b!136894))

(assert (= (and b!136894 res!65564) b!136895))

(declare-fun m!163053 () Bool)

(assert (=> d!42807 m!163053))

(declare-fun m!163055 () Bool)

(assert (=> b!136893 m!163055))

(declare-fun m!163057 () Bool)

(assert (=> b!136894 m!163057))

(declare-fun m!163059 () Bool)

(assert (=> b!136895 m!163059))

(assert (=> d!42699 d!42807))

(assert (=> d!42699 d!42691))

(declare-fun d!42809 () Bool)

(declare-fun res!65565 () Bool)

(declare-fun e!89126 () Bool)

(assert (=> d!42809 (=> res!65565 e!89126)))

(assert (=> d!42809 (= res!65565 (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42809 (= (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!89126)))

(declare-fun b!136896 () Bool)

(declare-fun e!89127 () Bool)

(assert (=> b!136896 (= e!89126 e!89127)))

(declare-fun res!65566 () Bool)

(assert (=> b!136896 (=> (not res!65566) (not e!89127))))

(assert (=> b!136896 (= res!65566 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!136897 () Bool)

(assert (=> b!136897 (= e!89127 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42809 (not res!65565)) b!136896))

(assert (= (and b!136896 res!65566) b!136897))

(declare-fun m!163061 () Bool)

(assert (=> d!42809 m!163061))

(assert (=> b!136897 m!162421))

(declare-fun m!163063 () Bool)

(assert (=> b!136897 m!163063))

(assert (=> b!136588 d!42809))

(assert (=> d!42711 d!42729))

(declare-fun d!42811 () Bool)

(assert (=> d!42811 (= (inRange!0 (ite c!25585 (ite c!25591 (index!3278 lt!71116) (ite c!25586 (index!3277 lt!71126) (index!3280 lt!71126))) (ite c!25579 (index!3278 lt!71139) (ite c!25590 (index!3277 lt!71120) (index!3280 lt!71120)))) (mask!7201 newMap!16)) (and (bvsge (ite c!25585 (ite c!25591 (index!3278 lt!71116) (ite c!25586 (index!3277 lt!71126) (index!3280 lt!71126))) (ite c!25579 (index!3278 lt!71139) (ite c!25590 (index!3277 lt!71120) (index!3280 lt!71120)))) #b00000000000000000000000000000000) (bvslt (ite c!25585 (ite c!25591 (index!3278 lt!71116) (ite c!25586 (index!3277 lt!71126) (index!3280 lt!71126))) (ite c!25579 (index!3278 lt!71139) (ite c!25590 (index!3277 lt!71120) (index!3280 lt!71120)))) (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!14989 d!42811))

(declare-fun b!136932 () Bool)

(declare-fun res!65587 () Bool)

(declare-fun e!89145 () Bool)

(assert (=> b!136932 (=> (not res!65587) (not e!89145))))

(declare-fun lt!71446 () tuple2!2600)

(assert (=> b!136932 (= res!65587 (contains!892 (map!1397 (_2!1311 lt!71446)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136933 () Bool)

(declare-fun e!89146 () Unit!4286)

(declare-fun Unit!4304 () Unit!4286)

(assert (=> b!136933 (= e!89146 Unit!4304)))

(declare-fun b!136934 () Bool)

(declare-fun e!89148 () Bool)

(declare-fun call!15059 () Bool)

(assert (=> b!136934 (= e!89148 (not call!15059))))

(declare-fun b!136935 () Bool)

(declare-fun res!65591 () Bool)

(assert (=> b!136935 (=> (not res!65591) (not e!89148))))

(declare-fun call!15060 () Bool)

(assert (=> b!136935 (= res!65591 call!15060)))

(declare-fun e!89144 () Bool)

(assert (=> b!136935 (= e!89144 e!89148)))

(declare-fun b!136936 () Bool)

(assert (=> b!136936 (= e!89145 (= (map!1397 (_2!1311 lt!71446)) (+!164 (map!1397 newMap!16) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71459 () SeekEntryResult!279)

(declare-fun e!89147 () Bool)

(declare-fun b!136937 () Bool)

(assert (=> b!136937 (= e!89147 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71459)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!136938 () Bool)

(declare-fun res!65593 () Bool)

(declare-fun call!15061 () Bool)

(assert (=> b!136938 (= res!65593 call!15061)))

(assert (=> b!136938 (=> (not res!65593) (not e!89147))))

(declare-fun call!15058 () SeekEntryResult!279)

(declare-fun bm!15055 () Bool)

(assert (=> bm!15055 (= call!15058 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun bm!15056 () Bool)

(assert (=> bm!15056 (= call!15060 call!15061)))

(declare-fun b!136939 () Bool)

(declare-fun e!89151 () Unit!4286)

(declare-fun lt!71451 () Unit!4286)

(assert (=> b!136939 (= e!89151 lt!71451)))

(assert (=> b!136939 (= lt!71451 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71457 () SeekEntryResult!279)

(assert (=> b!136939 (= lt!71457 call!15058)))

(declare-fun c!25689 () Bool)

(assert (=> b!136939 (= c!25689 ((_ is MissingZero!279) lt!71457))))

(assert (=> b!136939 e!89144))

(declare-fun b!136940 () Bool)

(declare-fun res!65592 () Bool)

(assert (=> b!136940 (= res!65592 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!71457)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!89149 () Bool)

(assert (=> b!136940 (=> (not res!65592) (not e!89149))))

(declare-fun bm!15057 () Bool)

(assert (=> bm!15057 (= call!15059 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!136942 () Bool)

(declare-fun res!65590 () Bool)

(assert (=> b!136942 (=> (not res!65590) (not e!89145))))

(assert (=> b!136942 (= res!65590 (valid!535 (_2!1311 lt!71446)))))

(declare-fun b!136943 () Bool)

(declare-fun e!89150 () Bool)

(assert (=> b!136943 (= e!89150 ((_ is Undefined!279) lt!71457))))

(declare-fun c!25691 () Bool)

(declare-fun bm!15058 () Bool)

(assert (=> bm!15058 (= call!15061 (inRange!0 (ite c!25691 (index!3278 lt!71459) (ite c!25689 (index!3277 lt!71457) (index!3280 lt!71457))) (mask!7201 newMap!16)))))

(declare-fun b!136944 () Bool)

(declare-fun res!65588 () Bool)

(assert (=> b!136944 (=> (not res!65588) (not e!89148))))

(assert (=> b!136944 (= res!65588 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!71457)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!136945 () Bool)

(declare-fun Unit!4305 () Unit!4286)

(assert (=> b!136945 (= e!89146 Unit!4305)))

(declare-fun lt!71452 () Unit!4286)

(declare-fun lemmaArrayContainsKeyThenInListMap!43 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) (_ BitVec 32) Int) Unit!4286)

(assert (=> b!136945 (= lt!71452 (lemmaArrayContainsKeyThenInListMap!43 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(assert (=> b!136945 (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))

(declare-fun lt!71470 () Unit!4286)

(assert (=> b!136945 (= lt!71470 lt!71452)))

(assert (=> b!136945 false))

(declare-fun b!136946 () Bool)

(assert (=> b!136946 (= e!89150 e!89149)))

(declare-fun res!65586 () Bool)

(assert (=> b!136946 (= res!65586 call!15060)))

(assert (=> b!136946 (=> (not res!65586) (not e!89149))))

(declare-fun d!42813 () Bool)

(assert (=> d!42813 e!89145))

(declare-fun res!65589 () Bool)

(assert (=> d!42813 (=> (not res!65589) (not e!89145))))

(assert (=> d!42813 (= res!65589 (_1!1311 lt!71446))))

(assert (=> d!42813 (= lt!71446 (tuple2!2601 true (LongMapFixedSize!1109 (defaultEntry!2888 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (bvadd (_size!603 newMap!16) #b00000000000000000000000000000001) (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (_vacant!603 newMap!16))))))

(declare-fun lt!71472 () Unit!4286)

(declare-fun lt!71448 () Unit!4286)

(assert (=> d!42813 (= lt!71472 lt!71448)))

(declare-fun lt!71471 () array!4783)

(declare-fun lt!71467 () array!4785)

(assert (=> d!42813 (contains!892 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))

(assert (=> d!42813 (= lt!71448 (lemmaValidKeyInArrayIsInListMap!121 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (defaultEntry!2888 newMap!16)))))

(assert (=> d!42813 (= lt!71467 (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))))

(assert (=> d!42813 (= lt!71471 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun lt!71455 () Unit!4286)

(declare-fun lt!71468 () Unit!4286)

(assert (=> d!42813 (= lt!71455 lt!71468)))

(declare-fun lt!71449 () array!4783)

(assert (=> d!42813 (= (arrayCountValidKeys!0 lt!71449 (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4783 (_ BitVec 32)) Unit!4286)

(assert (=> d!42813 (= lt!71468 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!71449 (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))

(assert (=> d!42813 (= lt!71449 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun lt!71460 () Unit!4286)

(declare-fun lt!71444 () Unit!4286)

(assert (=> d!42813 (= lt!71460 lt!71444)))

(declare-fun lt!71464 () array!4783)

(assert (=> d!42813 (arrayContainsKey!0 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4783 (_ BitVec 64) (_ BitVec 32)) Unit!4286)

(assert (=> d!42813 (= lt!71444 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))

(assert (=> d!42813 (= lt!71464 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun lt!71447 () Unit!4286)

(declare-fun lt!71456 () Unit!4286)

(assert (=> d!42813 (= lt!71447 lt!71456)))

(assert (=> d!42813 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!43 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) (_ BitVec 64) V!3497 Int) Unit!4286)

(assert (=> d!42813 (= lt!71456 (lemmaAddValidKeyToArrayThenAddPairToListMap!43 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71450 () Unit!4286)

(declare-fun lt!71454 () Unit!4286)

(assert (=> d!42813 (= lt!71450 lt!71454)))

(assert (=> d!42813 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (mask!7201 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4783 (_ BitVec 32) (_ BitVec 32)) Unit!4286)

(assert (=> d!42813 (= lt!71454 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (mask!7201 newMap!16)))))

(declare-fun lt!71443 () Unit!4286)

(declare-fun lt!71462 () Unit!4286)

(assert (=> d!42813 (= lt!71443 lt!71462)))

(assert (=> d!42813 (= (arrayCountValidKeys!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4640 newMap!16) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4783 (_ BitVec 32) (_ BitVec 64)) Unit!4286)

(assert (=> d!42813 (= lt!71462 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4640 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun lt!71466 () Unit!4286)

(declare-fun lt!71463 () Unit!4286)

(assert (=> d!42813 (= lt!71466 lt!71463)))

(declare-fun lt!71465 () (_ BitVec 32))

(declare-fun lt!71445 () List!1719)

(assert (=> d!42813 (arrayNoDuplicates!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) lt!71465 lt!71445)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4783 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1719) Unit!4286)

(assert (=> d!42813 (= lt!71463 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) lt!71465 lt!71445))))

(assert (=> d!42813 (= lt!71445 Nil!1716)))

(assert (=> d!42813 (= lt!71465 #b00000000000000000000000000000000)))

(declare-fun lt!71461 () Unit!4286)

(assert (=> d!42813 (= lt!71461 e!89146)))

(declare-fun c!25688 () Bool)

(assert (=> d!42813 (= c!25688 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!71453 () Unit!4286)

(assert (=> d!42813 (= lt!71453 e!89151)))

(assert (=> d!42813 (= c!25691 (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42813 (valid!535 newMap!16)))

(assert (=> d!42813 (= (updateHelperNewKey!62 newMap!16 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))) lt!71446)))

(declare-fun b!136941 () Bool)

(declare-fun Unit!4306 () Unit!4286)

(assert (=> b!136941 (= e!89151 Unit!4306)))

(declare-fun lt!71469 () Unit!4286)

(assert (=> b!136941 (= lt!71469 (lemmaInListMapThenSeekEntryOrOpenFindsIt!62 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)))))

(assert (=> b!136941 (= lt!71459 call!15058)))

(declare-fun res!65585 () Bool)

(assert (=> b!136941 (= res!65585 ((_ is Found!279) lt!71459))))

(assert (=> b!136941 (=> (not res!65585) (not e!89147))))

(assert (=> b!136941 e!89147))

(declare-fun lt!71458 () Unit!4286)

(assert (=> b!136941 (= lt!71458 lt!71469)))

(assert (=> b!136941 false))

(declare-fun b!136947 () Bool)

(assert (=> b!136947 (= e!89149 (not call!15059))))

(declare-fun b!136948 () Bool)

(declare-fun c!25690 () Bool)

(assert (=> b!136948 (= c!25690 ((_ is MissingVacant!279) lt!71457))))

(assert (=> b!136948 (= e!89144 e!89150)))

(assert (= (and d!42813 c!25691) b!136941))

(assert (= (and d!42813 (not c!25691)) b!136939))

(assert (= (and b!136941 res!65585) b!136938))

(assert (= (and b!136938 res!65593) b!136937))

(assert (= (and b!136939 c!25689) b!136935))

(assert (= (and b!136939 (not c!25689)) b!136948))

(assert (= (and b!136935 res!65591) b!136944))

(assert (= (and b!136944 res!65588) b!136934))

(assert (= (and b!136948 c!25690) b!136946))

(assert (= (and b!136948 (not c!25690)) b!136943))

(assert (= (and b!136946 res!65586) b!136940))

(assert (= (and b!136940 res!65592) b!136947))

(assert (= (or b!136935 b!136946) bm!15056))

(assert (= (or b!136934 b!136947) bm!15057))

(assert (= (or b!136938 bm!15056) bm!15058))

(assert (= (or b!136941 b!136939) bm!15055))

(assert (= (and d!42813 c!25688) b!136945))

(assert (= (and d!42813 (not c!25688)) b!136933))

(assert (= (and d!42813 res!65589) b!136942))

(assert (= (and b!136942 res!65590) b!136932))

(assert (= (and b!136932 res!65587) b!136936))

(assert (=> bm!15057 m!162421))

(assert (=> bm!15057 m!162599))

(declare-fun m!163065 () Bool)

(assert (=> b!136942 m!163065))

(assert (=> b!136941 m!162421))

(assert (=> b!136941 m!162557))

(declare-fun m!163067 () Bool)

(assert (=> bm!15058 m!163067))

(assert (=> b!136939 m!162421))

(assert (=> b!136939 m!162583))

(declare-fun m!163069 () Bool)

(assert (=> b!136940 m!163069))

(declare-fun m!163071 () Bool)

(assert (=> d!42813 m!163071))

(declare-fun m!163073 () Bool)

(assert (=> d!42813 m!163073))

(assert (=> d!42813 m!163073))

(declare-fun m!163075 () Bool)

(assert (=> d!42813 m!163075))

(declare-fun m!163077 () Bool)

(assert (=> d!42813 m!163077))

(declare-fun m!163079 () Bool)

(assert (=> d!42813 m!163079))

(assert (=> d!42813 m!162421))

(declare-fun m!163081 () Bool)

(assert (=> d!42813 m!163081))

(assert (=> d!42813 m!162531))

(assert (=> d!42813 m!162421))

(declare-fun m!163083 () Bool)

(assert (=> d!42813 m!163083))

(declare-fun m!163085 () Bool)

(assert (=> d!42813 m!163085))

(declare-fun m!163087 () Bool)

(assert (=> d!42813 m!163087))

(assert (=> d!42813 m!162421))

(assert (=> d!42813 m!162445))

(declare-fun m!163089 () Bool)

(assert (=> d!42813 m!163089))

(declare-fun m!163091 () Bool)

(assert (=> d!42813 m!163091))

(declare-fun m!163093 () Bool)

(assert (=> d!42813 m!163093))

(assert (=> d!42813 m!162545))

(assert (=> d!42813 m!162861))

(assert (=> d!42813 m!163075))

(assert (=> d!42813 m!162545))

(assert (=> d!42813 m!162421))

(declare-fun m!163095 () Bool)

(assert (=> d!42813 m!163095))

(assert (=> d!42813 m!162421))

(declare-fun m!163097 () Bool)

(assert (=> d!42813 m!163097))

(assert (=> d!42813 m!162421))

(declare-fun m!163099 () Bool)

(assert (=> d!42813 m!163099))

(declare-fun m!163101 () Bool)

(assert (=> d!42813 m!163101))

(declare-fun m!163103 () Bool)

(assert (=> d!42813 m!163103))

(declare-fun m!163105 () Bool)

(assert (=> d!42813 m!163105))

(assert (=> d!42813 m!162421))

(declare-fun m!163107 () Bool)

(assert (=> d!42813 m!163107))

(assert (=> d!42813 m!162419))

(assert (=> d!42813 m!162545))

(assert (=> d!42813 m!162421))

(assert (=> d!42813 m!162599))

(declare-fun m!163109 () Bool)

(assert (=> b!136936 m!163109))

(assert (=> b!136936 m!162433))

(assert (=> b!136936 m!162433))

(declare-fun m!163111 () Bool)

(assert (=> b!136936 m!163111))

(assert (=> b!136932 m!163109))

(assert (=> b!136932 m!163109))

(assert (=> b!136932 m!162421))

(declare-fun m!163113 () Bool)

(assert (=> b!136932 m!163113))

(declare-fun m!163115 () Bool)

(assert (=> b!136937 m!163115))

(declare-fun m!163117 () Bool)

(assert (=> b!136944 m!163117))

(assert (=> b!136945 m!162421))

(declare-fun m!163119 () Bool)

(assert (=> b!136945 m!163119))

(assert (=> b!136945 m!162545))

(assert (=> b!136945 m!162545))

(assert (=> b!136945 m!162421))

(assert (=> b!136945 m!163095))

(assert (=> bm!15055 m!162421))

(assert (=> bm!15055 m!162553))

(assert (=> bm!14979 d!42813))

(assert (=> bm!14988 d!42711))

(declare-fun d!42815 () Bool)

(declare-fun res!65594 () Bool)

(declare-fun e!89152 () Bool)

(assert (=> d!42815 (=> (not res!65594) (not e!89152))))

(assert (=> d!42815 (= res!65594 (simpleValid!93 (v!3215 (underlying!457 thiss!992))))))

(assert (=> d!42815 (= (valid!535 (v!3215 (underlying!457 thiss!992))) e!89152)))

(declare-fun b!136949 () Bool)

(declare-fun res!65595 () Bool)

(assert (=> b!136949 (=> (not res!65595) (not e!89152))))

(assert (=> b!136949 (= res!65595 (= (arrayCountValidKeys!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))) (_size!603 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!136950 () Bool)

(declare-fun res!65596 () Bool)

(assert (=> b!136950 (=> (not res!65596) (not e!89152))))

(assert (=> b!136950 (= res!65596 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!136951 () Bool)

(assert (=> b!136951 (= e!89152 (arrayNoDuplicates!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000 Nil!1716))))

(assert (= (and d!42815 res!65594) b!136949))

(assert (= (and b!136949 res!65595) b!136950))

(assert (= (and b!136950 res!65596) b!136951))

(declare-fun m!163121 () Bool)

(assert (=> d!42815 m!163121))

(declare-fun m!163123 () Bool)

(assert (=> b!136949 m!163123))

(declare-fun m!163125 () Bool)

(assert (=> b!136950 m!163125))

(declare-fun m!163127 () Bool)

(assert (=> b!136951 m!163127))

(assert (=> d!42689 d!42815))

(declare-fun d!42817 () Bool)

(declare-fun e!89153 () Bool)

(assert (=> d!42817 e!89153))

(declare-fun res!65597 () Bool)

(assert (=> d!42817 (=> res!65597 e!89153)))

(declare-fun lt!71473 () Bool)

(assert (=> d!42817 (= res!65597 (not lt!71473))))

(declare-fun lt!71475 () Bool)

(assert (=> d!42817 (= lt!71473 lt!71475)))

(declare-fun lt!71476 () Unit!4286)

(declare-fun e!89154 () Unit!4286)

(assert (=> d!42817 (= lt!71476 e!89154)))

(declare-fun c!25692 () Bool)

(assert (=> d!42817 (= c!25692 lt!71475)))

(assert (=> d!42817 (= lt!71475 (containsKey!175 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42817 (= (contains!892 lt!71204 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71473)))

(declare-fun b!136952 () Bool)

(declare-fun lt!71474 () Unit!4286)

(assert (=> b!136952 (= e!89154 lt!71474)))

(assert (=> b!136952 (= lt!71474 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136952 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!136953 () Bool)

(declare-fun Unit!4307 () Unit!4286)

(assert (=> b!136953 (= e!89154 Unit!4307)))

(declare-fun b!136954 () Bool)

(assert (=> b!136954 (= e!89153 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42817 c!25692) b!136952))

(assert (= (and d!42817 (not c!25692)) b!136953))

(assert (= (and d!42817 (not res!65597)) b!136954))

(declare-fun m!163129 () Bool)

(assert (=> d!42817 m!163129))

(declare-fun m!163131 () Bool)

(assert (=> b!136952 m!163131))

(assert (=> b!136952 m!162679))

(assert (=> b!136952 m!162679))

(declare-fun m!163133 () Bool)

(assert (=> b!136952 m!163133))

(assert (=> b!136954 m!162679))

(assert (=> b!136954 m!162679))

(assert (=> b!136954 m!163133))

(assert (=> bm!15017 d!42817))

(declare-fun d!42819 () Bool)

(assert (=> d!42819 (= (get!1492 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136582 d!42819))

(declare-fun d!42821 () Bool)

(declare-fun e!89160 () Bool)

(assert (=> d!42821 e!89160))

(declare-fun res!65605 () Bool)

(assert (=> d!42821 (=> (not res!65605) (not e!89160))))

(assert (=> d!42821 (= res!65605 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71492 () ListLongMap!1679)

(declare-fun lt!71477 () ListLongMap!1679)

(assert (=> d!42821 (= lt!71492 lt!71477)))

(declare-fun lt!71495 () Unit!4286)

(declare-fun e!89159 () Unit!4286)

(assert (=> d!42821 (= lt!71495 e!89159)))

(declare-fun c!25697 () Bool)

(declare-fun e!89166 () Bool)

(assert (=> d!42821 (= c!25697 e!89166)))

(declare-fun res!65599 () Bool)

(assert (=> d!42821 (=> (not res!65599) (not e!89166))))

(assert (=> d!42821 (= res!65599 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89155 () ListLongMap!1679)

(assert (=> d!42821 (= lt!71477 e!89155)))

(declare-fun c!25698 () Bool)

(assert (=> d!42821 (= c!25698 (and (not (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42821 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42821 (= (getCurrentListMap!521 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71492)))

(declare-fun c!25694 () Bool)

(declare-fun b!136955 () Bool)

(assert (=> b!136955 (= c!25694 (and (not (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89165 () ListLongMap!1679)

(declare-fun e!89162 () ListLongMap!1679)

(assert (=> b!136955 (= e!89165 e!89162)))

(declare-fun b!136956 () Bool)

(declare-fun call!15067 () ListLongMap!1679)

(assert (=> b!136956 (= e!89165 call!15067)))

(declare-fun b!136957 () Bool)

(declare-fun e!89164 () Bool)

(assert (=> b!136957 (= e!89164 (= (apply!117 lt!71492 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))

(declare-fun bm!15059 () Bool)

(declare-fun call!15068 () Bool)

(assert (=> bm!15059 (= call!15068 (contains!892 lt!71492 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15060 () Bool)

(declare-fun call!15064 () ListLongMap!1679)

(assert (=> bm!15060 (= call!15064 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15061 () Bool)

(declare-fun call!15065 () ListLongMap!1679)

(assert (=> bm!15061 (= call!15067 call!15065)))

(declare-fun b!136958 () Bool)

(declare-fun res!65602 () Bool)

(assert (=> b!136958 (=> (not res!65602) (not e!89160))))

(declare-fun e!89158 () Bool)

(assert (=> b!136958 (= res!65602 e!89158)))

(declare-fun c!25695 () Bool)

(assert (=> b!136958 (= c!25695 (not (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!136959 () Bool)

(assert (=> b!136959 (= e!89155 e!89165)))

(declare-fun c!25693 () Bool)

(assert (=> b!136959 (= c!25693 (and (not (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!136960 () Bool)

(declare-fun call!15063 () ListLongMap!1679)

(assert (=> b!136960 (= e!89162 call!15063)))

(declare-fun bm!15062 () Bool)

(declare-fun call!15062 () ListLongMap!1679)

(assert (=> bm!15062 (= call!15065 (+!164 (ite c!25698 call!15064 (ite c!25693 call!15062 call!15063)) (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(declare-fun b!136961 () Bool)

(declare-fun e!89161 () Bool)

(assert (=> b!136961 (= e!89160 e!89161)))

(declare-fun c!25696 () Bool)

(assert (=> b!136961 (= c!25696 (not (= (bvand (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15063 () Bool)

(assert (=> bm!15063 (= call!15063 call!15062)))

(declare-fun b!136962 () Bool)

(declare-fun res!65604 () Bool)

(assert (=> b!136962 (=> (not res!65604) (not e!89160))))

(declare-fun e!89156 () Bool)

(assert (=> b!136962 (= res!65604 e!89156)))

(declare-fun res!65606 () Bool)

(assert (=> b!136962 (=> res!65606 e!89156)))

(declare-fun e!89167 () Bool)

(assert (=> b!136962 (= res!65606 (not e!89167))))

(declare-fun res!65603 () Bool)

(assert (=> b!136962 (=> (not res!65603) (not e!89167))))

(assert (=> b!136962 (= res!65603 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136963 () Bool)

(declare-fun e!89163 () Bool)

(assert (=> b!136963 (= e!89156 e!89163)))

(declare-fun res!65601 () Bool)

(assert (=> b!136963 (=> (not res!65601) (not e!89163))))

(assert (=> b!136963 (= res!65601 (contains!892 lt!71492 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!136963 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136964 () Bool)

(assert (=> b!136964 (= e!89158 (not call!15068))))

(declare-fun b!136965 () Bool)

(assert (=> b!136965 (= e!89167 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136966 () Bool)

(assert (=> b!136966 (= e!89163 (= (apply!117 lt!71492 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!136966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128))))))

(assert (=> b!136966 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89157 () Bool)

(declare-fun b!136967 () Bool)

(assert (=> b!136967 (= e!89157 (= (apply!117 lt!71492 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))

(declare-fun b!136968 () Bool)

(assert (=> b!136968 (= e!89162 call!15067)))

(declare-fun b!136969 () Bool)

(assert (=> b!136969 (= e!89155 (+!164 call!15065 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))

(declare-fun b!136970 () Bool)

(assert (=> b!136970 (= e!89158 e!89164)))

(declare-fun res!65600 () Bool)

(assert (=> b!136970 (= res!65600 call!15068)))

(assert (=> b!136970 (=> (not res!65600) (not e!89164))))

(declare-fun b!136971 () Bool)

(declare-fun Unit!4308 () Unit!4286)

(assert (=> b!136971 (= e!89159 Unit!4308)))

(declare-fun b!136972 () Bool)

(assert (=> b!136972 (= e!89161 e!89157)))

(declare-fun res!65598 () Bool)

(declare-fun call!15066 () Bool)

(assert (=> b!136972 (= res!65598 call!15066)))

(assert (=> b!136972 (=> (not res!65598) (not e!89157))))

(declare-fun bm!15064 () Bool)

(assert (=> bm!15064 (= call!15062 call!15064)))

(declare-fun b!136973 () Bool)

(declare-fun lt!71493 () Unit!4286)

(assert (=> b!136973 (= e!89159 lt!71493)))

(declare-fun lt!71486 () ListLongMap!1679)

(assert (=> b!136973 (= lt!71486 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71484 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71484 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71498 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71498 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71479 () Unit!4286)

(assert (=> b!136973 (= lt!71479 (addStillContains!93 lt!71486 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) lt!71498))))

(assert (=> b!136973 (contains!892 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71498)))

(declare-fun lt!71485 () Unit!4286)

(assert (=> b!136973 (= lt!71485 lt!71479)))

(declare-fun lt!71488 () ListLongMap!1679)

(assert (=> b!136973 (= lt!71488 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71481 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71481 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71494 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71494 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71478 () Unit!4286)

(assert (=> b!136973 (= lt!71478 (addApplyDifferent!93 lt!71488 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) lt!71494))))

(assert (=> b!136973 (= (apply!117 (+!164 lt!71488 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71494) (apply!117 lt!71488 lt!71494))))

(declare-fun lt!71491 () Unit!4286)

(assert (=> b!136973 (= lt!71491 lt!71478)))

(declare-fun lt!71496 () ListLongMap!1679)

(assert (=> b!136973 (= lt!71496 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71489 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71489 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71483 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71483 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71482 () Unit!4286)

(assert (=> b!136973 (= lt!71482 (addApplyDifferent!93 lt!71496 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) lt!71483))))

(assert (=> b!136973 (= (apply!117 (+!164 lt!71496 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71483) (apply!117 lt!71496 lt!71483))))

(declare-fun lt!71490 () Unit!4286)

(assert (=> b!136973 (= lt!71490 lt!71482)))

(declare-fun lt!71487 () ListLongMap!1679)

(assert (=> b!136973 (= lt!71487 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71497 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71497 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71480 () (_ BitVec 64))

(assert (=> b!136973 (= lt!71480 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!136973 (= lt!71493 (addApplyDifferent!93 lt!71487 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) lt!71480))))

(assert (=> b!136973 (= (apply!117 (+!164 lt!71487 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71480) (apply!117 lt!71487 lt!71480))))

(declare-fun b!136974 () Bool)

(assert (=> b!136974 (= e!89166 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!136975 () Bool)

(assert (=> b!136975 (= e!89161 (not call!15066))))

(declare-fun bm!15065 () Bool)

(assert (=> bm!15065 (= call!15066 (contains!892 lt!71492 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42821 c!25698) b!136969))

(assert (= (and d!42821 (not c!25698)) b!136959))

(assert (= (and b!136959 c!25693) b!136956))

(assert (= (and b!136959 (not c!25693)) b!136955))

(assert (= (and b!136955 c!25694) b!136968))

(assert (= (and b!136955 (not c!25694)) b!136960))

(assert (= (or b!136968 b!136960) bm!15063))

(assert (= (or b!136956 bm!15063) bm!15064))

(assert (= (or b!136956 b!136968) bm!15061))

(assert (= (or b!136969 bm!15064) bm!15060))

(assert (= (or b!136969 bm!15061) bm!15062))

(assert (= (and d!42821 res!65599) b!136974))

(assert (= (and d!42821 c!25697) b!136973))

(assert (= (and d!42821 (not c!25697)) b!136971))

(assert (= (and d!42821 res!65605) b!136962))

(assert (= (and b!136962 res!65603) b!136965))

(assert (= (and b!136962 (not res!65606)) b!136963))

(assert (= (and b!136963 res!65601) b!136966))

(assert (= (and b!136962 res!65604) b!136958))

(assert (= (and b!136958 c!25695) b!136970))

(assert (= (and b!136958 (not c!25695)) b!136964))

(assert (= (and b!136970 res!65600) b!136957))

(assert (= (or b!136970 b!136964) bm!15059))

(assert (= (and b!136958 res!65602) b!136961))

(assert (= (and b!136961 c!25696) b!136972))

(assert (= (and b!136961 (not c!25696)) b!136975))

(assert (= (and b!136972 res!65598) b!136967))

(assert (= (or b!136972 b!136975) bm!15065))

(declare-fun b_lambda!6097 () Bool)

(assert (=> (not b_lambda!6097) (not b!136966)))

(assert (=> b!136966 t!6208))

(declare-fun b_and!8457 () Bool)

(assert (= b_and!8453 (and (=> t!6208 result!4043) b_and!8457)))

(assert (=> b!136966 t!6210))

(declare-fun b_and!8459 () Bool)

(assert (= b_and!8455 (and (=> t!6210 result!4045) b_and!8459)))

(assert (=> b!136974 m!162693))

(assert (=> b!136974 m!162693))

(assert (=> b!136974 m!162695))

(assert (=> d!42821 m!162671))

(declare-fun m!163135 () Bool)

(assert (=> b!136969 m!163135))

(assert (=> b!136966 m!162699))

(declare-fun m!163137 () Bool)

(assert (=> b!136966 m!163137))

(assert (=> b!136966 m!163137))

(assert (=> b!136966 m!162699))

(declare-fun m!163139 () Bool)

(assert (=> b!136966 m!163139))

(assert (=> b!136966 m!162693))

(assert (=> b!136966 m!162693))

(declare-fun m!163141 () Bool)

(assert (=> b!136966 m!163141))

(declare-fun m!163143 () Bool)

(assert (=> b!136967 m!163143))

(assert (=> b!136965 m!162693))

(assert (=> b!136965 m!162693))

(assert (=> b!136965 m!162695))

(declare-fun m!163145 () Bool)

(assert (=> bm!15065 m!163145))

(declare-fun m!163147 () Bool)

(assert (=> bm!15060 m!163147))

(declare-fun m!163149 () Bool)

(assert (=> b!136957 m!163149))

(declare-fun m!163151 () Bool)

(assert (=> b!136973 m!163151))

(declare-fun m!163153 () Bool)

(assert (=> b!136973 m!163153))

(declare-fun m!163155 () Bool)

(assert (=> b!136973 m!163155))

(declare-fun m!163157 () Bool)

(assert (=> b!136973 m!163157))

(declare-fun m!163159 () Bool)

(assert (=> b!136973 m!163159))

(declare-fun m!163161 () Bool)

(assert (=> b!136973 m!163161))

(assert (=> b!136973 m!163151))

(declare-fun m!163163 () Bool)

(assert (=> b!136973 m!163163))

(declare-fun m!163165 () Bool)

(assert (=> b!136973 m!163165))

(declare-fun m!163167 () Bool)

(assert (=> b!136973 m!163167))

(assert (=> b!136973 m!163147))

(assert (=> b!136973 m!163165))

(declare-fun m!163169 () Bool)

(assert (=> b!136973 m!163169))

(assert (=> b!136973 m!163161))

(declare-fun m!163171 () Bool)

(assert (=> b!136973 m!163171))

(declare-fun m!163173 () Bool)

(assert (=> b!136973 m!163173))

(declare-fun m!163175 () Bool)

(assert (=> b!136973 m!163175))

(assert (=> b!136973 m!163155))

(declare-fun m!163177 () Bool)

(assert (=> b!136973 m!163177))

(declare-fun m!163179 () Bool)

(assert (=> b!136973 m!163179))

(assert (=> b!136973 m!162693))

(assert (=> b!136963 m!162693))

(assert (=> b!136963 m!162693))

(declare-fun m!163181 () Bool)

(assert (=> b!136963 m!163181))

(declare-fun m!163183 () Bool)

(assert (=> bm!15059 m!163183))

(declare-fun m!163185 () Bool)

(assert (=> bm!15062 m!163185))

(assert (=> bm!14977 d!42821))

(assert (=> bm!15012 d!42775))

(assert (=> b!136656 d!42723))

(declare-fun d!42823 () Bool)

(declare-fun res!65607 () Bool)

(declare-fun e!89168 () Bool)

(assert (=> d!42823 (=> res!65607 e!89168)))

(assert (=> d!42823 (= res!65607 (= (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42823 (= (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000) e!89168)))

(declare-fun b!136976 () Bool)

(declare-fun e!89169 () Bool)

(assert (=> b!136976 (= e!89168 e!89169)))

(declare-fun res!65608 () Bool)

(assert (=> b!136976 (=> (not res!65608) (not e!89169))))

(assert (=> b!136976 (= res!65608 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!136977 () Bool)

(assert (=> b!136977 (= e!89169 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!42823 (not res!65607)) b!136976))

(assert (= (and b!136976 res!65608) b!136977))

(assert (=> d!42823 m!162693))

(assert (=> b!136977 m!162421))

(declare-fun m!163187 () Bool)

(assert (=> b!136977 m!163187))

(assert (=> bm!14984 d!42823))

(declare-fun d!42825 () Bool)

(assert (=> d!42825 (= (apply!117 lt!71204 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5729 () Bool)

(assert (= bs!5729 d!42825))

(assert (=> bs!5729 m!162883))

(assert (=> bs!5729 m!162883))

(declare-fun m!163189 () Bool)

(assert (=> bs!5729 m!163189))

(assert (=> b!136639 d!42825))

(declare-fun b!136986 () Bool)

(declare-fun res!65617 () Bool)

(declare-fun e!89172 () Bool)

(assert (=> b!136986 (=> (not res!65617) (not e!89172))))

(assert (=> b!136986 (= res!65617 (and (= (size!2532 (_values!2871 newMap!16)) (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001)) (= (size!2531 (_keys!4640 newMap!16)) (size!2532 (_values!2871 newMap!16))) (bvsge (_size!603 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!603 newMap!16) (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun d!42827 () Bool)

(declare-fun res!65618 () Bool)

(assert (=> d!42827 (=> (not res!65618) (not e!89172))))

(assert (=> d!42827 (= res!65618 (validMask!0 (mask!7201 newMap!16)))))

(assert (=> d!42827 (= (simpleValid!93 newMap!16) e!89172)))

(declare-fun b!136989 () Bool)

(assert (=> b!136989 (= e!89172 (and (bvsge (extraKeys!2649 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2649 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!603 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun b!136987 () Bool)

(declare-fun res!65620 () Bool)

(assert (=> b!136987 (=> (not res!65620) (not e!89172))))

(declare-fun size!2537 (LongMapFixedSize!1108) (_ BitVec 32))

(assert (=> b!136987 (= res!65620 (bvsge (size!2537 newMap!16) (_size!603 newMap!16)))))

(declare-fun b!136988 () Bool)

(declare-fun res!65619 () Bool)

(assert (=> b!136988 (=> (not res!65619) (not e!89172))))

(assert (=> b!136988 (= res!65619 (= (size!2537 newMap!16) (bvadd (_size!603 newMap!16) (bvsdiv (bvadd (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!42827 res!65618) b!136986))

(assert (= (and b!136986 res!65617) b!136987))

(assert (= (and b!136987 res!65620) b!136988))

(assert (= (and b!136988 res!65619) b!136989))

(assert (=> d!42827 m!162671))

(declare-fun m!163191 () Bool)

(assert (=> b!136987 m!163191))

(assert (=> b!136988 m!163191))

(assert (=> d!42691 d!42827))

(declare-fun d!42829 () Bool)

(declare-fun res!65625 () Bool)

(declare-fun e!89177 () Bool)

(assert (=> d!42829 (=> res!65625 e!89177)))

(assert (=> d!42829 (= res!65625 (and ((_ is Cons!1712) (toList!855 lt!71024)) (= (_1!1310 (h!2318 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!42829 (= (containsKey!175 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89177)))

(declare-fun b!136994 () Bool)

(declare-fun e!89178 () Bool)

(assert (=> b!136994 (= e!89177 e!89178)))

(declare-fun res!65626 () Bool)

(assert (=> b!136994 (=> (not res!65626) (not e!89178))))

(assert (=> b!136994 (= res!65626 (and (or (not ((_ is Cons!1712) (toList!855 lt!71024))) (bvsle (_1!1310 (h!2318 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!855 lt!71024)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(declare-fun b!136995 () Bool)

(assert (=> b!136995 (= e!89178 (containsKey!175 (t!6195 (toList!855 lt!71024)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!42829 (not res!65625)) b!136994))

(assert (= (and b!136994 res!65626) b!136995))

(assert (=> b!136995 m!162421))

(declare-fun m!163193 () Bool)

(assert (=> b!136995 m!163193))

(assert (=> d!42697 d!42829))

(declare-fun d!42831 () Bool)

(declare-fun e!89179 () Bool)

(assert (=> d!42831 e!89179))

(declare-fun res!65627 () Bool)

(assert (=> d!42831 (=> (not res!65627) (not e!89179))))

(declare-fun lt!71500 () ListLongMap!1679)

(assert (=> d!42831 (= res!65627 (contains!892 lt!71500 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71501 () List!1716)

(assert (=> d!42831 (= lt!71500 (ListLongMap!1680 lt!71501))))

(declare-fun lt!71502 () Unit!4286)

(declare-fun lt!71499 () Unit!4286)

(assert (=> d!42831 (= lt!71502 lt!71499)))

(assert (=> d!42831 (= (getValueByKey!171 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42831 (= lt!71499 (lemmaContainsTupThenGetReturnValue!89 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42831 (= lt!71501 (insertStrictlySorted!92 (toList!855 call!15017) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42831 (= (+!164 call!15017 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71500)))

(declare-fun b!136996 () Bool)

(declare-fun res!65628 () Bool)

(assert (=> b!136996 (=> (not res!65628) (not e!89179))))

(assert (=> b!136996 (= res!65628 (= (getValueByKey!171 (toList!855 lt!71500) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!136997 () Bool)

(assert (=> b!136997 (= e!89179 (contains!895 (toList!855 lt!71500) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!42831 res!65627) b!136996))

(assert (= (and b!136996 res!65628) b!136997))

(declare-fun m!163195 () Bool)

(assert (=> d!42831 m!163195))

(declare-fun m!163197 () Bool)

(assert (=> d!42831 m!163197))

(declare-fun m!163199 () Bool)

(assert (=> d!42831 m!163199))

(declare-fun m!163201 () Bool)

(assert (=> d!42831 m!163201))

(declare-fun m!163203 () Bool)

(assert (=> b!136996 m!163203))

(declare-fun m!163205 () Bool)

(assert (=> b!136997 m!163205))

(assert (=> b!136651 d!42831))

(declare-fun b!137006 () Bool)

(declare-fun e!89188 () Bool)

(declare-fun call!15071 () Bool)

(assert (=> b!137006 (= e!89188 call!15071)))

(declare-fun d!42833 () Bool)

(declare-fun res!65633 () Bool)

(declare-fun e!89187 () Bool)

(assert (=> d!42833 (=> res!65633 e!89187)))

(assert (=> d!42833 (= res!65633 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42833 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 newMap!16) (mask!7201 newMap!16)) e!89187)))

(declare-fun b!137007 () Bool)

(declare-fun e!89186 () Bool)

(assert (=> b!137007 (= e!89187 e!89186)))

(declare-fun c!25701 () Bool)

(assert (=> b!137007 (= c!25701 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!15068 () Bool)

(assert (=> bm!15068 (= call!15071 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!137008 () Bool)

(assert (=> b!137008 (= e!89186 e!89188)))

(declare-fun lt!71509 () (_ BitVec 64))

(assert (=> b!137008 (= lt!71509 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71510 () Unit!4286)

(assert (=> b!137008 (= lt!71510 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4640 newMap!16) lt!71509 #b00000000000000000000000000000000))))

(assert (=> b!137008 (arrayContainsKey!0 (_keys!4640 newMap!16) lt!71509 #b00000000000000000000000000000000)))

(declare-fun lt!71511 () Unit!4286)

(assert (=> b!137008 (= lt!71511 lt!71510)))

(declare-fun res!65634 () Bool)

(assert (=> b!137008 (= res!65634 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (_keys!4640 newMap!16) (mask!7201 newMap!16)) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!137008 (=> (not res!65634) (not e!89188))))

(declare-fun b!137009 () Bool)

(assert (=> b!137009 (= e!89186 call!15071)))

(assert (= (and d!42833 (not res!65633)) b!137007))

(assert (= (and b!137007 c!25701) b!137008))

(assert (= (and b!137007 (not c!25701)) b!137009))

(assert (= (and b!137008 res!65634) b!137006))

(assert (= (or b!137006 b!137009) bm!15068))

(assert (=> b!137007 m!162693))

(assert (=> b!137007 m!162693))

(assert (=> b!137007 m!162695))

(declare-fun m!163207 () Bool)

(assert (=> bm!15068 m!163207))

(assert (=> b!137008 m!162693))

(declare-fun m!163209 () Bool)

(assert (=> b!137008 m!163209))

(declare-fun m!163211 () Bool)

(assert (=> b!137008 m!163211))

(assert (=> b!137008 m!162693))

(declare-fun m!163213 () Bool)

(assert (=> b!137008 m!163213))

(assert (=> b!136440 d!42833))

(declare-fun b!137011 () Bool)

(declare-fun e!89189 () Bool)

(assert (=> b!137011 (= e!89189 tp_is_empty!2887)))

(declare-fun mapNonEmpty!4701 () Bool)

(declare-fun mapRes!4701 () Bool)

(declare-fun tp!11307 () Bool)

(declare-fun e!89190 () Bool)

(assert (=> mapNonEmpty!4701 (= mapRes!4701 (and tp!11307 e!89190))))

(declare-fun mapValue!4701 () ValueCell!1100)

(declare-fun mapRest!4701 () (Array (_ BitVec 32) ValueCell!1100))

(declare-fun mapKey!4701 () (_ BitVec 32))

(assert (=> mapNonEmpty!4701 (= mapRest!4699 (store mapRest!4701 mapKey!4701 mapValue!4701))))

(declare-fun mapIsEmpty!4701 () Bool)

(assert (=> mapIsEmpty!4701 mapRes!4701))

(declare-fun b!137010 () Bool)

(assert (=> b!137010 (= e!89190 tp_is_empty!2887)))

(declare-fun condMapEmpty!4701 () Bool)

(declare-fun mapDefault!4701 () ValueCell!1100)

(assert (=> mapNonEmpty!4699 (= condMapEmpty!4701 (= mapRest!4699 ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4701)))))

(assert (=> mapNonEmpty!4699 (= tp!11305 (and e!89189 mapRes!4701))))

(assert (= (and mapNonEmpty!4699 condMapEmpty!4701) mapIsEmpty!4701))

(assert (= (and mapNonEmpty!4699 (not condMapEmpty!4701)) mapNonEmpty!4701))

(assert (= (and mapNonEmpty!4701 ((_ is ValueCellFull!1100) mapValue!4701)) b!137010))

(assert (= (and mapNonEmpty!4699 ((_ is ValueCellFull!1100) mapDefault!4701)) b!137011))

(declare-fun m!163215 () Bool)

(assert (=> mapNonEmpty!4701 m!163215))

(declare-fun b!137013 () Bool)

(declare-fun e!89191 () Bool)

(assert (=> b!137013 (= e!89191 tp_is_empty!2887)))

(declare-fun mapNonEmpty!4702 () Bool)

(declare-fun mapRes!4702 () Bool)

(declare-fun tp!11308 () Bool)

(declare-fun e!89192 () Bool)

(assert (=> mapNonEmpty!4702 (= mapRes!4702 (and tp!11308 e!89192))))

(declare-fun mapValue!4702 () ValueCell!1100)

(declare-fun mapKey!4702 () (_ BitVec 32))

(declare-fun mapRest!4702 () (Array (_ BitVec 32) ValueCell!1100))

(assert (=> mapNonEmpty!4702 (= mapRest!4700 (store mapRest!4702 mapKey!4702 mapValue!4702))))

(declare-fun mapIsEmpty!4702 () Bool)

(assert (=> mapIsEmpty!4702 mapRes!4702))

(declare-fun b!137012 () Bool)

(assert (=> b!137012 (= e!89192 tp_is_empty!2887)))

(declare-fun condMapEmpty!4702 () Bool)

(declare-fun mapDefault!4702 () ValueCell!1100)

(assert (=> mapNonEmpty!4700 (= condMapEmpty!4702 (= mapRest!4700 ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4702)))))

(assert (=> mapNonEmpty!4700 (= tp!11306 (and e!89191 mapRes!4702))))

(assert (= (and mapNonEmpty!4700 condMapEmpty!4702) mapIsEmpty!4702))

(assert (= (and mapNonEmpty!4700 (not condMapEmpty!4702)) mapNonEmpty!4702))

(assert (= (and mapNonEmpty!4702 ((_ is ValueCellFull!1100) mapValue!4702)) b!137012))

(assert (= (and mapNonEmpty!4700 ((_ is ValueCellFull!1100) mapDefault!4702)) b!137013))

(declare-fun m!163217 () Bool)

(assert (=> mapNonEmpty!4702 m!163217))

(declare-fun b_lambda!6099 () Bool)

(assert (= b_lambda!6089 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6099)))

(declare-fun b_lambda!6101 () Bool)

(assert (= b_lambda!6095 (or (and b!136327 b_free!2941) (and b!136330 b_free!2943 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))) b_lambda!6101)))

(declare-fun b_lambda!6103 () Bool)

(assert (= b_lambda!6093 (or (and b!136327 b_free!2941) (and b!136330 b_free!2943 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))) b_lambda!6103)))

(declare-fun b_lambda!6105 () Bool)

(assert (= b_lambda!6091 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6105)))

(declare-fun b_lambda!6107 () Bool)

(assert (= b_lambda!6097 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6107)))

(check-sat (not b!136808) (not b!136973) (not d!42821) (not b!136702) (not d!42727) (not d!42759) (not bm!15022) (not bm!15060) (not b!136950) (not b!136889) (not d!42779) (not d!42717) (not b!136952) (not b!136704) (not d!42815) (not b!136957) (not b!136886) (not d!42817) (not b!136842) (not b!136700) (not b!136762) (not b!136807) (not b!136932) (not d!42741) tp_is_empty!2887 (not b!136951) (not bm!15068) (not bm!15046) (not b!136724) (not b!136847) (not b_lambda!6107) (not mapNonEmpty!4701) (not b!136801) (not b!137008) (not b!136893) (not b!136936) (not b!136967) (not bm!15043) (not b!136744) (not b!136730) (not d!42751) (not b!136775) (not d!42781) (not b!136739) (not b_next!2943) (not b!136734) (not d!42737) (not d!42789) (not b!136856) (not b!136713) (not d!42753) (not d!42763) (not d!42767) (not d!42757) (not b_lambda!6105) (not d!42765) (not b!136965) (not d!42745) (not b!136891) (not bm!15034) (not d!42743) (not b!136840) (not b!136997) (not b!136849) (not b!136737) (not b!136802) (not b!136974) (not b!136894) (not b!136792) (not b!136850) (not d!42715) (not d!42791) (not b!136769) (not bm!15062) (not d!42783) (not bm!15040) (not b!136706) (not b!136945) (not d!42729) (not b!136728) (not b_lambda!6083) (not b!136942) (not b!136897) (not bm!15037) b_and!8459 (not b!137007) (not bm!15030) (not b!136794) (not b!136727) (not d!42719) (not b!136764) (not b_lambda!6099) (not b!136869) (not b!136834) (not d!42827) (not b!136954) (not b!136941) (not b!136718) (not b!136838) (not b!136715) (not bm!15059) (not b!136800) (not bm!15032) (not b!136895) (not bm!15031) (not b!136839) (not b!136844) (not b!136854) (not d!42773) (not d!42813) (not b!136853) (not bm!15024) (not b!136836) (not b!136995) (not d!42725) (not b!136786) (not bm!15025) (not b!136735) (not d!42733) (not d!42761) (not d!42769) (not d!42735) (not b!136703) (not b!136694) (not d!42787) (not b!136796) (not b_lambda!6103) (not b!136766) (not d!42807) (not d!42739) (not bm!15065) (not b!136772) (not d!42755) b_and!8457 (not b!136857) (not b!136835) (not b!136969) (not b_lambda!6101) (not d!42731) (not bm!15055) (not b!136846) (not b!136939) (not b!136987) (not b!136963) (not b!136977) (not b!136745) (not bm!15023) (not b!136988) (not mapNonEmpty!4702) (not d!42771) (not b!136798) (not bm!15058) (not b!136966) (not b_lambda!6087) (not d!42831) (not d!42795) (not d!42721) (not b!136996) (not b!136949) (not b!136855) (not b!136874) (not d!42825) (not d!42785) (not b!136887) (not d!42803) (not bm!15057) (not bm!15027) (not b!136892) (not b_next!2941) (not d!42777) (not b!136711) (not d!42775) (not b!136710) (not b!136851) (not b!136726))
(check-sat b_and!8457 b_and!8459 (not b_next!2941) (not b_next!2943))
(get-model)

(declare-fun d!42835 () Bool)

(declare-fun res!65636 () Bool)

(declare-fun e!89194 () Bool)

(assert (=> d!42835 (=> res!65636 e!89194)))

(assert (=> d!42835 (= res!65636 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> d!42835 (= (arrayNoDuplicates!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000 Nil!1716) e!89194)))

(declare-fun b!137014 () Bool)

(declare-fun e!89196 () Bool)

(declare-fun e!89193 () Bool)

(assert (=> b!137014 (= e!89196 e!89193)))

(declare-fun c!25702 () Bool)

(assert (=> b!137014 (= c!25702 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!137015 () Bool)

(declare-fun e!89195 () Bool)

(assert (=> b!137015 (= e!89195 (contains!896 Nil!1716 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!137016 () Bool)

(declare-fun call!15072 () Bool)

(assert (=> b!137016 (= e!89193 call!15072)))

(declare-fun bm!15069 () Bool)

(assert (=> bm!15069 (= call!15072 (arrayNoDuplicates!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25702 (Cons!1715 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000) Nil!1716) Nil!1716)))))

(declare-fun b!137017 () Bool)

(assert (=> b!137017 (= e!89194 e!89196)))

(declare-fun res!65635 () Bool)

(assert (=> b!137017 (=> (not res!65635) (not e!89196))))

(assert (=> b!137017 (= res!65635 (not e!89195))))

(declare-fun res!65637 () Bool)

(assert (=> b!137017 (=> (not res!65637) (not e!89195))))

(assert (=> b!137017 (= res!65637 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!137018 () Bool)

(assert (=> b!137018 (= e!89193 call!15072)))

(assert (= (and d!42835 (not res!65636)) b!137017))

(assert (= (and b!137017 res!65637) b!137015))

(assert (= (and b!137017 res!65635) b!137014))

(assert (= (and b!137014 c!25702) b!137018))

(assert (= (and b!137014 (not c!25702)) b!137016))

(assert (= (or b!137018 b!137016) bm!15069))

(declare-fun m!163219 () Bool)

(assert (=> b!137014 m!163219))

(assert (=> b!137014 m!163219))

(declare-fun m!163221 () Bool)

(assert (=> b!137014 m!163221))

(assert (=> b!137015 m!163219))

(assert (=> b!137015 m!163219))

(declare-fun m!163223 () Bool)

(assert (=> b!137015 m!163223))

(assert (=> bm!15069 m!163219))

(declare-fun m!163225 () Bool)

(assert (=> bm!15069 m!163225))

(assert (=> b!137017 m!163219))

(assert (=> b!137017 m!163219))

(assert (=> b!137017 m!163221))

(assert (=> b!136951 d!42835))

(assert (=> d!42743 d!42745))

(assert (=> d!42743 d!42747))

(declare-fun d!42837 () Bool)

(assert (=> d!42837 (isDefined!125 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42837 true))

(declare-fun _$12!409 () Unit!4286)

(assert (=> d!42837 (= (choose!842 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) _$12!409)))

(declare-fun bs!5730 () Bool)

(assert (= bs!5730 d!42837))

(assert (=> bs!5730 m!162421))

(assert (=> bs!5730 m!162541))

(assert (=> bs!5730 m!162541))

(assert (=> bs!5730 m!162543))

(assert (=> d!42743 d!42837))

(declare-fun d!42839 () Bool)

(declare-fun res!65642 () Bool)

(declare-fun e!89201 () Bool)

(assert (=> d!42839 (=> res!65642 e!89201)))

(assert (=> d!42839 (= res!65642 (or ((_ is Nil!1713) (toList!855 lt!71024)) ((_ is Nil!1713) (t!6195 (toList!855 lt!71024)))))))

(assert (=> d!42839 (= (isStrictlySorted!318 (toList!855 lt!71024)) e!89201)))

(declare-fun b!137023 () Bool)

(declare-fun e!89202 () Bool)

(assert (=> b!137023 (= e!89201 e!89202)))

(declare-fun res!65643 () Bool)

(assert (=> b!137023 (=> (not res!65643) (not e!89202))))

(assert (=> b!137023 (= res!65643 (bvslt (_1!1310 (h!2318 (toList!855 lt!71024))) (_1!1310 (h!2318 (t!6195 (toList!855 lt!71024))))))))

(declare-fun b!137024 () Bool)

(assert (=> b!137024 (= e!89202 (isStrictlySorted!318 (t!6195 (toList!855 lt!71024))))))

(assert (= (and d!42839 (not res!65642)) b!137023))

(assert (= (and b!137023 res!65643) b!137024))

(declare-fun m!163227 () Bool)

(assert (=> b!137024 m!163227))

(assert (=> d!42743 d!42839))

(declare-fun d!42841 () Bool)

(assert (=> d!42841 (= (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5731 () Bool)

(assert (= bs!5731 d!42841))

(assert (=> bs!5731 m!162679))

(declare-fun m!163229 () Bool)

(assert (=> bs!5731 m!163229))

(assert (=> b!136954 d!42841))

(declare-fun b!137027 () Bool)

(declare-fun e!89204 () Option!177)

(assert (=> b!137027 (= e!89204 (getValueByKey!171 (t!6195 (toList!855 lt!71204)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137028 () Bool)

(assert (=> b!137028 (= e!89204 None!175)))

(declare-fun b!137026 () Bool)

(declare-fun e!89203 () Option!177)

(assert (=> b!137026 (= e!89203 e!89204)))

(declare-fun c!25704 () Bool)

(assert (=> b!137026 (= c!25704 (and ((_ is Cons!1712) (toList!855 lt!71204)) (not (= (_1!1310 (h!2318 (toList!855 lt!71204))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42843 () Bool)

(declare-fun c!25703 () Bool)

(assert (=> d!42843 (= c!25703 (and ((_ is Cons!1712) (toList!855 lt!71204)) (= (_1!1310 (h!2318 (toList!855 lt!71204))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42843 (= (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000) e!89203)))

(declare-fun b!137025 () Bool)

(assert (=> b!137025 (= e!89203 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71204)))))))

(assert (= (and d!42843 c!25703) b!137025))

(assert (= (and d!42843 (not c!25703)) b!137026))

(assert (= (and b!137026 c!25704) b!137027))

(assert (= (and b!137026 (not c!25704)) b!137028))

(declare-fun m!163231 () Bool)

(assert (=> b!137027 m!163231))

(assert (=> b!136954 d!42843))

(declare-fun d!42845 () Bool)

(assert (=> d!42845 (= (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!136735 d!42845))

(declare-fun b!137029 () Bool)

(declare-fun e!89208 () Bool)

(declare-fun e!89207 () Bool)

(assert (=> b!137029 (= e!89208 e!89207)))

(declare-fun c!25707 () Bool)

(assert (=> b!137029 (= c!25707 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun bm!15070 () Bool)

(declare-fun call!15073 () ListLongMap!1679)

(assert (=> bm!15070 (= call!15073 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2888 newMap!16)))))

(declare-fun b!137030 () Bool)

(declare-fun lt!71518 () Unit!4286)

(declare-fun lt!71515 () Unit!4286)

(assert (=> b!137030 (= lt!71518 lt!71515)))

(declare-fun lt!71512 () V!3497)

(declare-fun lt!71513 () (_ BitVec 64))

(declare-fun lt!71517 () (_ BitVec 64))

(declare-fun lt!71516 () ListLongMap!1679)

(assert (=> b!137030 (not (contains!892 (+!164 lt!71516 (tuple2!2599 lt!71517 lt!71512)) lt!71513))))

(assert (=> b!137030 (= lt!71515 (addStillNotContains!63 lt!71516 lt!71517 lt!71512 lt!71513))))

(assert (=> b!137030 (= lt!71513 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!137030 (= lt!71512 (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!137030 (= lt!71517 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137030 (= lt!71516 call!15073)))

(declare-fun e!89206 () ListLongMap!1679)

(assert (=> b!137030 (= e!89206 (+!164 call!15073 (tuple2!2599 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!137031 () Bool)

(declare-fun e!89205 () Bool)

(assert (=> b!137031 (= e!89205 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137031 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!137032 () Bool)

(assert (=> b!137032 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> b!137032 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (_values!2871 newMap!16))))))

(declare-fun e!89210 () Bool)

(declare-fun lt!71514 () ListLongMap!1679)

(assert (=> b!137032 (= e!89210 (= (apply!117 lt!71514 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42847 () Bool)

(declare-fun e!89209 () Bool)

(assert (=> d!42847 e!89209))

(declare-fun res!65647 () Bool)

(assert (=> d!42847 (=> (not res!65647) (not e!89209))))

(assert (=> d!42847 (= res!65647 (not (contains!892 lt!71514 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!89211 () ListLongMap!1679)

(assert (=> d!42847 (= lt!71514 e!89211)))

(declare-fun c!25708 () Bool)

(assert (=> d!42847 (= c!25708 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42847 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42847 (= (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71514)))

(declare-fun b!137033 () Bool)

(assert (=> b!137033 (= e!89209 e!89208)))

(declare-fun c!25705 () Bool)

(assert (=> b!137033 (= c!25705 e!89205)))

(declare-fun res!65645 () Bool)

(assert (=> b!137033 (=> (not res!65645) (not e!89205))))

(assert (=> b!137033 (= res!65645 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137034 () Bool)

(assert (=> b!137034 (= e!89211 e!89206)))

(declare-fun c!25706 () Bool)

(assert (=> b!137034 (= c!25706 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137035 () Bool)

(assert (=> b!137035 (= e!89207 (= lt!71514 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2888 newMap!16))))))

(declare-fun b!137036 () Bool)

(declare-fun res!65644 () Bool)

(assert (=> b!137036 (=> (not res!65644) (not e!89209))))

(assert (=> b!137036 (= res!65644 (not (contains!892 lt!71514 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137037 () Bool)

(assert (=> b!137037 (= e!89211 (ListLongMap!1680 Nil!1713))))

(declare-fun b!137038 () Bool)

(assert (=> b!137038 (= e!89208 e!89210)))

(assert (=> b!137038 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun res!65646 () Bool)

(assert (=> b!137038 (= res!65646 (contains!892 lt!71514 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137038 (=> (not res!65646) (not e!89210))))

(declare-fun b!137039 () Bool)

(assert (=> b!137039 (= e!89206 call!15073)))

(declare-fun b!137040 () Bool)

(assert (=> b!137040 (= e!89207 (isEmpty!417 lt!71514))))

(assert (= (and d!42847 c!25708) b!137037))

(assert (= (and d!42847 (not c!25708)) b!137034))

(assert (= (and b!137034 c!25706) b!137030))

(assert (= (and b!137034 (not c!25706)) b!137039))

(assert (= (or b!137030 b!137039) bm!15070))

(assert (= (and d!42847 res!65647) b!137036))

(assert (= (and b!137036 res!65644) b!137033))

(assert (= (and b!137033 res!65645) b!137031))

(assert (= (and b!137033 c!25705) b!137038))

(assert (= (and b!137033 (not c!25705)) b!137029))

(assert (= (and b!137038 res!65646) b!137032))

(assert (= (and b!137029 c!25707) b!137035))

(assert (= (and b!137029 (not c!25707)) b!137040))

(declare-fun b_lambda!6109 () Bool)

(assert (=> (not b_lambda!6109) (not b!137030)))

(assert (=> b!137030 t!6208))

(declare-fun b_and!8461 () Bool)

(assert (= b_and!8457 (and (=> t!6208 result!4043) b_and!8461)))

(assert (=> b!137030 t!6210))

(declare-fun b_and!8463 () Bool)

(assert (= b_and!8459 (and (=> t!6210 result!4045) b_and!8463)))

(declare-fun b_lambda!6111 () Bool)

(assert (=> (not b_lambda!6111) (not b!137032)))

(assert (=> b!137032 t!6208))

(declare-fun b_and!8465 () Bool)

(assert (= b_and!8461 (and (=> t!6208 result!4043) b_and!8465)))

(assert (=> b!137032 t!6210))

(declare-fun b_and!8467 () Bool)

(assert (= b_and!8463 (and (=> t!6210 result!4045) b_and!8467)))

(declare-fun m!163233 () Bool)

(assert (=> b!137040 m!163233))

(declare-fun m!163235 () Bool)

(assert (=> d!42847 m!163235))

(assert (=> d!42847 m!162671))

(assert (=> b!137032 m!162761))

(assert (=> b!137032 m!162699))

(assert (=> b!137032 m!162763))

(assert (=> b!137032 m!162761))

(assert (=> b!137032 m!162699))

(assert (=> b!137032 m!162693))

(assert (=> b!137032 m!162693))

(declare-fun m!163237 () Bool)

(assert (=> b!137032 m!163237))

(declare-fun m!163239 () Bool)

(assert (=> bm!15070 m!163239))

(assert (=> b!137034 m!162693))

(assert (=> b!137034 m!162693))

(assert (=> b!137034 m!162695))

(declare-fun m!163241 () Bool)

(assert (=> b!137030 m!163241))

(assert (=> b!137030 m!162761))

(assert (=> b!137030 m!162699))

(assert (=> b!137030 m!162763))

(assert (=> b!137030 m!162693))

(assert (=> b!137030 m!163241))

(declare-fun m!163243 () Bool)

(assert (=> b!137030 m!163243))

(declare-fun m!163245 () Bool)

(assert (=> b!137030 m!163245))

(assert (=> b!137030 m!162761))

(declare-fun m!163247 () Bool)

(assert (=> b!137030 m!163247))

(assert (=> b!137030 m!162699))

(assert (=> b!137038 m!162693))

(assert (=> b!137038 m!162693))

(declare-fun m!163249 () Bool)

(assert (=> b!137038 m!163249))

(declare-fun m!163251 () Bool)

(assert (=> b!137036 m!163251))

(assert (=> b!137035 m!163239))

(assert (=> b!137031 m!162693))

(assert (=> b!137031 m!162693))

(assert (=> b!137031 m!162695))

(assert (=> bm!15032 d!42847))

(declare-fun d!42849 () Bool)

(declare-fun e!89217 () Bool)

(assert (=> d!42849 e!89217))

(declare-fun res!65655 () Bool)

(assert (=> d!42849 (=> (not res!65655) (not e!89217))))

(assert (=> d!42849 (= res!65655 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))))

(declare-fun lt!71534 () ListLongMap!1679)

(declare-fun lt!71519 () ListLongMap!1679)

(assert (=> d!42849 (= lt!71534 lt!71519)))

(declare-fun lt!71537 () Unit!4286)

(declare-fun e!89216 () Unit!4286)

(assert (=> d!42849 (= lt!71537 e!89216)))

(declare-fun c!25713 () Bool)

(declare-fun e!89223 () Bool)

(assert (=> d!42849 (= c!25713 e!89223)))

(declare-fun res!65649 () Bool)

(assert (=> d!42849 (=> (not res!65649) (not e!89223))))

(assert (=> d!42849 (= res!65649 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(declare-fun e!89212 () ListLongMap!1679)

(assert (=> d!42849 (= lt!71519 e!89212)))

(declare-fun c!25714 () Bool)

(assert (=> d!42849 (= c!25714 (and (not (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42849 (validMask!0 (mask!7201 (_2!1311 lt!71138)))))

(assert (=> d!42849 (= (getCurrentListMap!521 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))) lt!71534)))

(declare-fun b!137041 () Bool)

(declare-fun c!25710 () Bool)

(assert (=> b!137041 (= c!25710 (and (not (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89222 () ListLongMap!1679)

(declare-fun e!89219 () ListLongMap!1679)

(assert (=> b!137041 (= e!89222 e!89219)))

(declare-fun b!137042 () Bool)

(declare-fun call!15079 () ListLongMap!1679)

(assert (=> b!137042 (= e!89222 call!15079)))

(declare-fun b!137043 () Bool)

(declare-fun e!89221 () Bool)

(assert (=> b!137043 (= e!89221 (= (apply!117 lt!71534 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 (_2!1311 lt!71138))))))

(declare-fun bm!15071 () Bool)

(declare-fun call!15080 () Bool)

(assert (=> bm!15071 (= call!15080 (contains!892 lt!71534 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15072 () Bool)

(declare-fun call!15076 () ListLongMap!1679)

(assert (=> bm!15072 (= call!15076 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))))))

(declare-fun bm!15073 () Bool)

(declare-fun call!15077 () ListLongMap!1679)

(assert (=> bm!15073 (= call!15079 call!15077)))

(declare-fun b!137044 () Bool)

(declare-fun res!65652 () Bool)

(assert (=> b!137044 (=> (not res!65652) (not e!89217))))

(declare-fun e!89215 () Bool)

(assert (=> b!137044 (= res!65652 e!89215)))

(declare-fun c!25711 () Bool)

(assert (=> b!137044 (= c!25711 (not (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137045 () Bool)

(assert (=> b!137045 (= e!89212 e!89222)))

(declare-fun c!25709 () Bool)

(assert (=> b!137045 (= c!25709 (and (not (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137046 () Bool)

(declare-fun call!15075 () ListLongMap!1679)

(assert (=> b!137046 (= e!89219 call!15075)))

(declare-fun bm!15074 () Bool)

(declare-fun call!15074 () ListLongMap!1679)

(assert (=> bm!15074 (= call!15077 (+!164 (ite c!25714 call!15076 (ite c!25709 call!15074 call!15075)) (ite (or c!25714 c!25709) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (_2!1311 lt!71138))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (_2!1311 lt!71138))))))))

(declare-fun b!137047 () Bool)

(declare-fun e!89218 () Bool)

(assert (=> b!137047 (= e!89217 e!89218)))

(declare-fun c!25712 () Bool)

(assert (=> b!137047 (= c!25712 (not (= (bvand (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15075 () Bool)

(assert (=> bm!15075 (= call!15075 call!15074)))

(declare-fun b!137048 () Bool)

(declare-fun res!65654 () Bool)

(assert (=> b!137048 (=> (not res!65654) (not e!89217))))

(declare-fun e!89213 () Bool)

(assert (=> b!137048 (= res!65654 e!89213)))

(declare-fun res!65656 () Bool)

(assert (=> b!137048 (=> res!65656 e!89213)))

(declare-fun e!89224 () Bool)

(assert (=> b!137048 (= res!65656 (not e!89224))))

(declare-fun res!65653 () Bool)

(assert (=> b!137048 (=> (not res!65653) (not e!89224))))

(assert (=> b!137048 (= res!65653 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(declare-fun b!137049 () Bool)

(declare-fun e!89220 () Bool)

(assert (=> b!137049 (= e!89213 e!89220)))

(declare-fun res!65651 () Bool)

(assert (=> b!137049 (=> (not res!65651) (not e!89220))))

(assert (=> b!137049 (= res!65651 (contains!892 lt!71534 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(assert (=> b!137049 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(declare-fun b!137050 () Bool)

(assert (=> b!137050 (= e!89215 (not call!15080))))

(declare-fun b!137051 () Bool)

(assert (=> b!137051 (= e!89224 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun b!137052 () Bool)

(assert (=> b!137052 (= e!89220 (= (apply!117 lt!71534 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2871 (_2!1311 lt!71138))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 (_2!1311 lt!71138)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137052 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (_values!2871 (_2!1311 lt!71138)))))))

(assert (=> b!137052 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(declare-fun b!137053 () Bool)

(declare-fun e!89214 () Bool)

(assert (=> b!137053 (= e!89214 (= (apply!117 lt!71534 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 (_2!1311 lt!71138))))))

(declare-fun b!137054 () Bool)

(assert (=> b!137054 (= e!89219 call!15079)))

(declare-fun b!137055 () Bool)

(assert (=> b!137055 (= e!89212 (+!164 call!15077 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (_2!1311 lt!71138)))))))

(declare-fun b!137056 () Bool)

(assert (=> b!137056 (= e!89215 e!89221)))

(declare-fun res!65650 () Bool)

(assert (=> b!137056 (= res!65650 call!15080)))

(assert (=> b!137056 (=> (not res!65650) (not e!89221))))

(declare-fun b!137057 () Bool)

(declare-fun Unit!4309 () Unit!4286)

(assert (=> b!137057 (= e!89216 Unit!4309)))

(declare-fun b!137058 () Bool)

(assert (=> b!137058 (= e!89218 e!89214)))

(declare-fun res!65648 () Bool)

(declare-fun call!15078 () Bool)

(assert (=> b!137058 (= res!65648 call!15078)))

(assert (=> b!137058 (=> (not res!65648) (not e!89214))))

(declare-fun bm!15076 () Bool)

(assert (=> bm!15076 (= call!15074 call!15076)))

(declare-fun b!137059 () Bool)

(declare-fun lt!71535 () Unit!4286)

(assert (=> b!137059 (= e!89216 lt!71535)))

(declare-fun lt!71528 () ListLongMap!1679)

(assert (=> b!137059 (= lt!71528 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))))))

(declare-fun lt!71526 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71526 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71540 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71540 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000))))

(declare-fun lt!71521 () Unit!4286)

(assert (=> b!137059 (= lt!71521 (addStillContains!93 lt!71528 lt!71526 (zeroValue!2741 (_2!1311 lt!71138)) lt!71540))))

(assert (=> b!137059 (contains!892 (+!164 lt!71528 (tuple2!2599 lt!71526 (zeroValue!2741 (_2!1311 lt!71138)))) lt!71540)))

(declare-fun lt!71527 () Unit!4286)

(assert (=> b!137059 (= lt!71527 lt!71521)))

(declare-fun lt!71530 () ListLongMap!1679)

(assert (=> b!137059 (= lt!71530 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))))))

(declare-fun lt!71523 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71523 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71536 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71536 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000))))

(declare-fun lt!71520 () Unit!4286)

(assert (=> b!137059 (= lt!71520 (addApplyDifferent!93 lt!71530 lt!71523 (minValue!2741 (_2!1311 lt!71138)) lt!71536))))

(assert (=> b!137059 (= (apply!117 (+!164 lt!71530 (tuple2!2599 lt!71523 (minValue!2741 (_2!1311 lt!71138)))) lt!71536) (apply!117 lt!71530 lt!71536))))

(declare-fun lt!71533 () Unit!4286)

(assert (=> b!137059 (= lt!71533 lt!71520)))

(declare-fun lt!71538 () ListLongMap!1679)

(assert (=> b!137059 (= lt!71538 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))))))

(declare-fun lt!71531 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71531 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71525 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71525 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000))))

(declare-fun lt!71524 () Unit!4286)

(assert (=> b!137059 (= lt!71524 (addApplyDifferent!93 lt!71538 lt!71531 (zeroValue!2741 (_2!1311 lt!71138)) lt!71525))))

(assert (=> b!137059 (= (apply!117 (+!164 lt!71538 (tuple2!2599 lt!71531 (zeroValue!2741 (_2!1311 lt!71138)))) lt!71525) (apply!117 lt!71538 lt!71525))))

(declare-fun lt!71532 () Unit!4286)

(assert (=> b!137059 (= lt!71532 lt!71524)))

(declare-fun lt!71529 () ListLongMap!1679)

(assert (=> b!137059 (= lt!71529 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (_2!1311 lt!71138)) (_values!2871 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138)) (extraKeys!2649 (_2!1311 lt!71138)) (zeroValue!2741 (_2!1311 lt!71138)) (minValue!2741 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71138))))))

(declare-fun lt!71539 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71539 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71522 () (_ BitVec 64))

(assert (=> b!137059 (= lt!71522 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000))))

(assert (=> b!137059 (= lt!71535 (addApplyDifferent!93 lt!71529 lt!71539 (minValue!2741 (_2!1311 lt!71138)) lt!71522))))

(assert (=> b!137059 (= (apply!117 (+!164 lt!71529 (tuple2!2599 lt!71539 (minValue!2741 (_2!1311 lt!71138)))) lt!71522) (apply!117 lt!71529 lt!71522))))

(declare-fun b!137060 () Bool)

(assert (=> b!137060 (= e!89223 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun b!137061 () Bool)

(assert (=> b!137061 (= e!89218 (not call!15078))))

(declare-fun bm!15077 () Bool)

(assert (=> bm!15077 (= call!15078 (contains!892 lt!71534 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42849 c!25714) b!137055))

(assert (= (and d!42849 (not c!25714)) b!137045))

(assert (= (and b!137045 c!25709) b!137042))

(assert (= (and b!137045 (not c!25709)) b!137041))

(assert (= (and b!137041 c!25710) b!137054))

(assert (= (and b!137041 (not c!25710)) b!137046))

(assert (= (or b!137054 b!137046) bm!15075))

(assert (= (or b!137042 bm!15075) bm!15076))

(assert (= (or b!137042 b!137054) bm!15073))

(assert (= (or b!137055 bm!15076) bm!15072))

(assert (= (or b!137055 bm!15073) bm!15074))

(assert (= (and d!42849 res!65649) b!137060))

(assert (= (and d!42849 c!25713) b!137059))

(assert (= (and d!42849 (not c!25713)) b!137057))

(assert (= (and d!42849 res!65655) b!137048))

(assert (= (and b!137048 res!65653) b!137051))

(assert (= (and b!137048 (not res!65656)) b!137049))

(assert (= (and b!137049 res!65651) b!137052))

(assert (= (and b!137048 res!65654) b!137044))

(assert (= (and b!137044 c!25711) b!137056))

(assert (= (and b!137044 (not c!25711)) b!137050))

(assert (= (and b!137056 res!65650) b!137043))

(assert (= (or b!137056 b!137050) bm!15071))

(assert (= (and b!137044 res!65652) b!137047))

(assert (= (and b!137047 c!25712) b!137058))

(assert (= (and b!137047 (not c!25712)) b!137061))

(assert (= (and b!137058 res!65648) b!137053))

(assert (= (or b!137058 b!137061) bm!15077))

(declare-fun b_lambda!6113 () Bool)

(assert (=> (not b_lambda!6113) (not b!137052)))

(declare-fun tb!2457 () Bool)

(declare-fun t!6212 () Bool)

(assert (=> (and b!136327 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 (_2!1311 lt!71138))) t!6212) tb!2457))

(declare-fun result!4047 () Bool)

(assert (=> tb!2457 (= result!4047 tp_is_empty!2887)))

(assert (=> b!137052 t!6212))

(declare-fun b_and!8469 () Bool)

(assert (= b_and!8465 (and (=> t!6212 result!4047) b_and!8469)))

(declare-fun t!6214 () Bool)

(declare-fun tb!2459 () Bool)

(assert (=> (and b!136330 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (_2!1311 lt!71138))) t!6214) tb!2459))

(declare-fun result!4049 () Bool)

(assert (= result!4049 result!4047))

(assert (=> b!137052 t!6214))

(declare-fun b_and!8471 () Bool)

(assert (= b_and!8467 (and (=> t!6214 result!4049) b_and!8471)))

(declare-fun m!163253 () Bool)

(assert (=> b!137060 m!163253))

(assert (=> b!137060 m!163253))

(declare-fun m!163255 () Bool)

(assert (=> b!137060 m!163255))

(declare-fun m!163257 () Bool)

(assert (=> d!42849 m!163257))

(declare-fun m!163259 () Bool)

(assert (=> b!137055 m!163259))

(declare-fun m!163261 () Bool)

(assert (=> b!137052 m!163261))

(declare-fun m!163263 () Bool)

(assert (=> b!137052 m!163263))

(assert (=> b!137052 m!163263))

(assert (=> b!137052 m!163261))

(declare-fun m!163265 () Bool)

(assert (=> b!137052 m!163265))

(assert (=> b!137052 m!163253))

(assert (=> b!137052 m!163253))

(declare-fun m!163267 () Bool)

(assert (=> b!137052 m!163267))

(declare-fun m!163269 () Bool)

(assert (=> b!137053 m!163269))

(assert (=> b!137051 m!163253))

(assert (=> b!137051 m!163253))

(assert (=> b!137051 m!163255))

(declare-fun m!163271 () Bool)

(assert (=> bm!15077 m!163271))

(declare-fun m!163273 () Bool)

(assert (=> bm!15072 m!163273))

(declare-fun m!163275 () Bool)

(assert (=> b!137043 m!163275))

(declare-fun m!163277 () Bool)

(assert (=> b!137059 m!163277))

(declare-fun m!163279 () Bool)

(assert (=> b!137059 m!163279))

(declare-fun m!163281 () Bool)

(assert (=> b!137059 m!163281))

(declare-fun m!163283 () Bool)

(assert (=> b!137059 m!163283))

(declare-fun m!163285 () Bool)

(assert (=> b!137059 m!163285))

(declare-fun m!163287 () Bool)

(assert (=> b!137059 m!163287))

(assert (=> b!137059 m!163277))

(declare-fun m!163289 () Bool)

(assert (=> b!137059 m!163289))

(declare-fun m!163291 () Bool)

(assert (=> b!137059 m!163291))

(declare-fun m!163293 () Bool)

(assert (=> b!137059 m!163293))

(assert (=> b!137059 m!163273))

(assert (=> b!137059 m!163291))

(declare-fun m!163295 () Bool)

(assert (=> b!137059 m!163295))

(assert (=> b!137059 m!163287))

(declare-fun m!163297 () Bool)

(assert (=> b!137059 m!163297))

(declare-fun m!163299 () Bool)

(assert (=> b!137059 m!163299))

(declare-fun m!163301 () Bool)

(assert (=> b!137059 m!163301))

(assert (=> b!137059 m!163281))

(declare-fun m!163303 () Bool)

(assert (=> b!137059 m!163303))

(declare-fun m!163305 () Bool)

(assert (=> b!137059 m!163305))

(assert (=> b!137059 m!163253))

(assert (=> b!137049 m!163253))

(assert (=> b!137049 m!163253))

(declare-fun m!163307 () Bool)

(assert (=> b!137049 m!163307))

(declare-fun m!163309 () Bool)

(assert (=> bm!15071 m!163309))

(declare-fun m!163311 () Bool)

(assert (=> bm!15074 m!163311))

(assert (=> d!42721 d!42849))

(declare-fun d!42851 () Bool)

(assert (=> d!42851 (= (apply!117 lt!71235 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1493 (getValueByKey!171 (toList!855 lt!71235) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5732 () Bool)

(assert (= bs!5732 d!42851))

(assert (=> bs!5732 m!162693))

(declare-fun m!163313 () Bool)

(assert (=> bs!5732 m!163313))

(assert (=> bs!5732 m!163313))

(declare-fun m!163315 () Bool)

(assert (=> bs!5732 m!163315))

(assert (=> b!136703 d!42851))

(declare-fun d!42853 () Bool)

(declare-fun c!25715 () Bool)

(assert (=> d!42853 (= c!25715 ((_ is ValueCellFull!1100) (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!89225 () V!3497)

(assert (=> d!42853 (= (get!1488 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!89225)))

(declare-fun b!137062 () Bool)

(assert (=> b!137062 (= e!89225 (get!1491 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137063 () Bool)

(assert (=> b!137063 (= e!89225 (get!1492 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42853 c!25715) b!137062))

(assert (= (and d!42853 (not c!25715)) b!137063))

(assert (=> b!137062 m!162701))

(assert (=> b!137062 m!162699))

(declare-fun m!163317 () Bool)

(assert (=> b!137062 m!163317))

(assert (=> b!137063 m!162701))

(assert (=> b!137063 m!162699))

(declare-fun m!163319 () Bool)

(assert (=> b!137063 m!163319))

(assert (=> b!136703 d!42853))

(declare-fun b!137064 () Bool)

(declare-fun e!89229 () Bool)

(declare-fun e!89228 () Bool)

(assert (=> b!137064 (= e!89229 e!89228)))

(declare-fun c!25718 () Bool)

(assert (=> b!137064 (= c!25718 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun bm!15078 () Bool)

(declare-fun call!15081 () ListLongMap!1679)

(assert (=> bm!15078 (= call!15081 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!137065 () Bool)

(declare-fun lt!71547 () Unit!4286)

(declare-fun lt!71544 () Unit!4286)

(assert (=> b!137065 (= lt!71547 lt!71544)))

(declare-fun lt!71546 () (_ BitVec 64))

(declare-fun lt!71541 () V!3497)

(declare-fun lt!71545 () ListLongMap!1679)

(declare-fun lt!71542 () (_ BitVec 64))

(assert (=> b!137065 (not (contains!892 (+!164 lt!71545 (tuple2!2599 lt!71546 lt!71541)) lt!71542))))

(assert (=> b!137065 (= lt!71544 (addStillNotContains!63 lt!71545 lt!71546 lt!71541 lt!71542))))

(assert (=> b!137065 (= lt!71542 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!137065 (= lt!71541 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!137065 (= lt!71546 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!137065 (= lt!71545 call!15081)))

(declare-fun e!89227 () ListLongMap!1679)

(assert (=> b!137065 (= e!89227 (+!164 call!15081 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!137066 () Bool)

(declare-fun e!89226 () Bool)

(assert (=> b!137066 (= e!89226 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!137066 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun b!137067 () Bool)

(assert (=> b!137067 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> b!137067 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2532 (_values!2871 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun lt!71543 () ListLongMap!1679)

(declare-fun e!89231 () Bool)

(assert (=> b!137067 (= e!89231 (= (apply!117 lt!71543 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42855 () Bool)

(declare-fun e!89230 () Bool)

(assert (=> d!42855 e!89230))

(declare-fun res!65660 () Bool)

(assert (=> d!42855 (=> (not res!65660) (not e!89230))))

(assert (=> d!42855 (= res!65660 (not (contains!892 lt!71543 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!89232 () ListLongMap!1679)

(assert (=> d!42855 (= lt!71543 e!89232)))

(declare-fun c!25719 () Bool)

(assert (=> d!42855 (= c!25719 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> d!42855 (validMask!0 (mask!7201 (v!3215 (underlying!457 thiss!992))))))

(assert (=> d!42855 (= (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992)))) lt!71543)))

(declare-fun b!137068 () Bool)

(assert (=> b!137068 (= e!89230 e!89229)))

(declare-fun c!25716 () Bool)

(assert (=> b!137068 (= c!25716 e!89226)))

(declare-fun res!65658 () Bool)

(assert (=> b!137068 (=> (not res!65658) (not e!89226))))

(assert (=> b!137068 (= res!65658 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137069 () Bool)

(assert (=> b!137069 (= e!89232 e!89227)))

(declare-fun c!25717 () Bool)

(assert (=> b!137069 (= c!25717 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!137070 () Bool)

(assert (=> b!137070 (= e!89228 (= lt!71543 (getCurrentListMapNoExtraKeys!129 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (_values!2871 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992))) (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) (minValue!2741 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137071 () Bool)

(declare-fun res!65657 () Bool)

(assert (=> b!137071 (=> (not res!65657) (not e!89230))))

(assert (=> b!137071 (= res!65657 (not (contains!892 lt!71543 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137072 () Bool)

(assert (=> b!137072 (= e!89232 (ListLongMap!1680 Nil!1713))))

(declare-fun b!137073 () Bool)

(assert (=> b!137073 (= e!89229 e!89231)))

(assert (=> b!137073 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun res!65659 () Bool)

(assert (=> b!137073 (= res!65659 (contains!892 lt!71543 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!137073 (=> (not res!65659) (not e!89231))))

(declare-fun b!137074 () Bool)

(assert (=> b!137074 (= e!89227 call!15081)))

(declare-fun b!137075 () Bool)

(assert (=> b!137075 (= e!89228 (isEmpty!417 lt!71543))))

(assert (= (and d!42855 c!25719) b!137072))

(assert (= (and d!42855 (not c!25719)) b!137069))

(assert (= (and b!137069 c!25717) b!137065))

(assert (= (and b!137069 (not c!25717)) b!137074))

(assert (= (or b!137065 b!137074) bm!15078))

(assert (= (and d!42855 res!65660) b!137071))

(assert (= (and b!137071 res!65657) b!137068))

(assert (= (and b!137068 res!65658) b!137066))

(assert (= (and b!137068 c!25716) b!137073))

(assert (= (and b!137068 (not c!25716)) b!137064))

(assert (= (and b!137073 res!65659) b!137067))

(assert (= (and b!137064 c!25718) b!137070))

(assert (= (and b!137064 (not c!25718)) b!137075))

(declare-fun b_lambda!6115 () Bool)

(assert (=> (not b_lambda!6115) (not b!137065)))

(assert (=> b!137065 t!6192))

(declare-fun b_and!8473 () Bool)

(assert (= b_and!8469 (and (=> t!6192 result!4023) b_and!8473)))

(assert (=> b!137065 t!6194))

(declare-fun b_and!8475 () Bool)

(assert (= b_and!8471 (and (=> t!6194 result!4027) b_and!8475)))

(declare-fun b_lambda!6117 () Bool)

(assert (=> (not b_lambda!6117) (not b!137067)))

(assert (=> b!137067 t!6192))

(declare-fun b_and!8477 () Bool)

(assert (= b_and!8473 (and (=> t!6192 result!4023) b_and!8477)))

(assert (=> b!137067 t!6194))

(declare-fun b_and!8479 () Bool)

(assert (= b_and!8475 (and (=> t!6194 result!4027) b_and!8479)))

(declare-fun m!163321 () Bool)

(assert (=> b!137075 m!163321))

(declare-fun m!163323 () Bool)

(assert (=> d!42855 m!163323))

(assert (=> d!42855 m!162611))

(declare-fun m!163325 () Bool)

(assert (=> b!137067 m!163325))

(assert (=> b!137067 m!162443))

(declare-fun m!163327 () Bool)

(assert (=> b!137067 m!163327))

(assert (=> b!137067 m!163325))

(assert (=> b!137067 m!162443))

(assert (=> b!137067 m!163061))

(assert (=> b!137067 m!163061))

(declare-fun m!163329 () Bool)

(assert (=> b!137067 m!163329))

(declare-fun m!163331 () Bool)

(assert (=> bm!15078 m!163331))

(assert (=> b!137069 m!163061))

(assert (=> b!137069 m!163061))

(declare-fun m!163333 () Bool)

(assert (=> b!137069 m!163333))

(declare-fun m!163335 () Bool)

(assert (=> b!137065 m!163335))

(assert (=> b!137065 m!163325))

(assert (=> b!137065 m!162443))

(assert (=> b!137065 m!163327))

(assert (=> b!137065 m!163061))

(assert (=> b!137065 m!163335))

(declare-fun m!163337 () Bool)

(assert (=> b!137065 m!163337))

(declare-fun m!163339 () Bool)

(assert (=> b!137065 m!163339))

(assert (=> b!137065 m!163325))

(declare-fun m!163341 () Bool)

(assert (=> b!137065 m!163341))

(assert (=> b!137065 m!162443))

(assert (=> b!137073 m!163061))

(assert (=> b!137073 m!163061))

(declare-fun m!163343 () Bool)

(assert (=> b!137073 m!163343))

(declare-fun m!163345 () Bool)

(assert (=> b!137071 m!163345))

(assert (=> b!137070 m!163331))

(assert (=> b!137066 m!163061))

(assert (=> b!137066 m!163061))

(assert (=> b!137066 m!163333))

(assert (=> bm!15040 d!42855))

(declare-fun d!42857 () Bool)

(declare-fun res!65662 () Bool)

(declare-fun e!89234 () Bool)

(assert (=> d!42857 (=> res!65662 e!89234)))

(assert (=> d!42857 (= res!65662 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(assert (=> d!42857 (= (arrayNoDuplicates!0 (_keys!4640 (_2!1311 lt!71138)) #b00000000000000000000000000000000 Nil!1716) e!89234)))

(declare-fun b!137076 () Bool)

(declare-fun e!89236 () Bool)

(declare-fun e!89233 () Bool)

(assert (=> b!137076 (= e!89236 e!89233)))

(declare-fun c!25720 () Bool)

(assert (=> b!137076 (= c!25720 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun b!137077 () Bool)

(declare-fun e!89235 () Bool)

(assert (=> b!137077 (= e!89235 (contains!896 Nil!1716 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun b!137078 () Bool)

(declare-fun call!15082 () Bool)

(assert (=> b!137078 (= e!89233 call!15082)))

(declare-fun bm!15079 () Bool)

(assert (=> bm!15079 (= call!15082 (arrayNoDuplicates!0 (_keys!4640 (_2!1311 lt!71138)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25720 (Cons!1715 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000) Nil!1716) Nil!1716)))))

(declare-fun b!137079 () Bool)

(assert (=> b!137079 (= e!89234 e!89236)))

(declare-fun res!65661 () Bool)

(assert (=> b!137079 (=> (not res!65661) (not e!89236))))

(assert (=> b!137079 (= res!65661 (not e!89235))))

(declare-fun res!65663 () Bool)

(assert (=> b!137079 (=> (not res!65663) (not e!89235))))

(assert (=> b!137079 (= res!65663 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun b!137080 () Bool)

(assert (=> b!137080 (= e!89233 call!15082)))

(assert (= (and d!42857 (not res!65662)) b!137079))

(assert (= (and b!137079 res!65663) b!137077))

(assert (= (and b!137079 res!65661) b!137076))

(assert (= (and b!137076 c!25720) b!137080))

(assert (= (and b!137076 (not c!25720)) b!137078))

(assert (= (or b!137080 b!137078) bm!15079))

(assert (=> b!137076 m!163253))

(assert (=> b!137076 m!163253))

(assert (=> b!137076 m!163255))

(assert (=> b!137077 m!163253))

(assert (=> b!137077 m!163253))

(declare-fun m!163347 () Bool)

(assert (=> b!137077 m!163347))

(assert (=> bm!15079 m!163253))

(declare-fun m!163349 () Bool)

(assert (=> bm!15079 m!163349))

(assert (=> b!137079 m!163253))

(assert (=> b!137079 m!163253))

(assert (=> b!137079 m!163255))

(assert (=> b!136895 d!42857))

(declare-fun b!137083 () Bool)

(declare-fun e!89238 () Option!177)

(assert (=> b!137083 (= e!89238 (getValueByKey!171 (t!6195 (toList!855 lt!71331)) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137084 () Bool)

(assert (=> b!137084 (= e!89238 None!175)))

(declare-fun b!137082 () Bool)

(declare-fun e!89237 () Option!177)

(assert (=> b!137082 (= e!89237 e!89238)))

(declare-fun c!25722 () Bool)

(assert (=> b!137082 (= c!25722 (and ((_ is Cons!1712) (toList!855 lt!71331)) (not (= (_1!1310 (h!2318 (toList!855 lt!71331))) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25721 () Bool)

(declare-fun d!42859 () Bool)

(assert (=> d!42859 (= c!25721 (and ((_ is Cons!1712) (toList!855 lt!71331)) (= (_1!1310 (h!2318 (toList!855 lt!71331))) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42859 (= (getValueByKey!171 (toList!855 lt!71331) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89237)))

(declare-fun b!137081 () Bool)

(assert (=> b!137081 (= e!89237 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71331)))))))

(assert (= (and d!42859 c!25721) b!137081))

(assert (= (and d!42859 (not c!25721)) b!137082))

(assert (= (and b!137082 c!25722) b!137083))

(assert (= (and b!137082 (not c!25722)) b!137084))

(declare-fun m!163351 () Bool)

(assert (=> b!137083 m!163351))

(assert (=> b!136807 d!42859))

(declare-fun d!42861 () Bool)

(declare-fun e!89239 () Bool)

(assert (=> d!42861 e!89239))

(declare-fun res!65664 () Bool)

(assert (=> d!42861 (=> (not res!65664) (not e!89239))))

(declare-fun lt!71549 () ListLongMap!1679)

(assert (=> d!42861 (= res!65664 (contains!892 lt!71549 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71550 () List!1716)

(assert (=> d!42861 (= lt!71549 (ListLongMap!1680 lt!71550))))

(declare-fun lt!71551 () Unit!4286)

(declare-fun lt!71548 () Unit!4286)

(assert (=> d!42861 (= lt!71551 lt!71548)))

(assert (=> d!42861 (= (getValueByKey!171 lt!71550 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42861 (= lt!71548 (lemmaContainsTupThenGetReturnValue!89 lt!71550 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42861 (= lt!71550 (insertStrictlySorted!92 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42861 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71549)))

(declare-fun b!137085 () Bool)

(declare-fun res!65665 () Bool)

(assert (=> b!137085 (=> (not res!65665) (not e!89239))))

(assert (=> b!137085 (= res!65665 (= (getValueByKey!171 (toList!855 lt!71549) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137086 () Bool)

(assert (=> b!137086 (= e!89239 (contains!895 (toList!855 lt!71549) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42861 res!65664) b!137085))

(assert (= (and b!137085 res!65665) b!137086))

(declare-fun m!163353 () Bool)

(assert (=> d!42861 m!163353))

(declare-fun m!163355 () Bool)

(assert (=> d!42861 m!163355))

(declare-fun m!163357 () Bool)

(assert (=> d!42861 m!163357))

(declare-fun m!163359 () Bool)

(assert (=> d!42861 m!163359))

(declare-fun m!163361 () Bool)

(assert (=> b!137085 m!163361))

(declare-fun m!163363 () Bool)

(assert (=> b!137086 m!163363))

(assert (=> b!136772 d!42861))

(assert (=> b!136772 d!42729))

(declare-fun d!42863 () Bool)

(declare-fun e!89245 () Bool)

(assert (=> d!42863 e!89245))

(declare-fun res!65673 () Bool)

(assert (=> d!42863 (=> (not res!65673) (not e!89245))))

(assert (=> d!42863 (= res!65673 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71567 () ListLongMap!1679)

(declare-fun lt!71552 () ListLongMap!1679)

(assert (=> d!42863 (= lt!71567 lt!71552)))

(declare-fun lt!71570 () Unit!4286)

(declare-fun e!89244 () Unit!4286)

(assert (=> d!42863 (= lt!71570 e!89244)))

(declare-fun c!25727 () Bool)

(declare-fun e!89251 () Bool)

(assert (=> d!42863 (= c!25727 e!89251)))

(declare-fun res!65667 () Bool)

(assert (=> d!42863 (=> (not res!65667) (not e!89251))))

(assert (=> d!42863 (= res!65667 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89240 () ListLongMap!1679)

(assert (=> d!42863 (= lt!71552 e!89240)))

(declare-fun c!25728 () Bool)

(assert (=> d!42863 (= c!25728 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42863 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42863 (= (getCurrentListMap!521 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71567)))

(declare-fun b!137087 () Bool)

(declare-fun c!25724 () Bool)

(assert (=> b!137087 (= c!25724 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89250 () ListLongMap!1679)

(declare-fun e!89247 () ListLongMap!1679)

(assert (=> b!137087 (= e!89250 e!89247)))

(declare-fun b!137088 () Bool)

(declare-fun call!15088 () ListLongMap!1679)

(assert (=> b!137088 (= e!89250 call!15088)))

(declare-fun b!137089 () Bool)

(declare-fun e!89249 () Bool)

(assert (=> b!137089 (= e!89249 (= (apply!117 lt!71567 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15080 () Bool)

(declare-fun call!15089 () Bool)

(assert (=> bm!15080 (= call!15089 (contains!892 lt!71567 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!15085 () ListLongMap!1679)

(declare-fun bm!15081 () Bool)

(assert (=> bm!15081 (= call!15085 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15082 () Bool)

(declare-fun call!15086 () ListLongMap!1679)

(assert (=> bm!15082 (= call!15088 call!15086)))

(declare-fun b!137090 () Bool)

(declare-fun res!65670 () Bool)

(assert (=> b!137090 (=> (not res!65670) (not e!89245))))

(declare-fun e!89243 () Bool)

(assert (=> b!137090 (= res!65670 e!89243)))

(declare-fun c!25725 () Bool)

(assert (=> b!137090 (= c!25725 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137091 () Bool)

(assert (=> b!137091 (= e!89240 e!89250)))

(declare-fun c!25723 () Bool)

(assert (=> b!137091 (= c!25723 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137092 () Bool)

(declare-fun call!15084 () ListLongMap!1679)

(assert (=> b!137092 (= e!89247 call!15084)))

(declare-fun call!15083 () ListLongMap!1679)

(declare-fun bm!15083 () Bool)

(assert (=> bm!15083 (= call!15086 (+!164 (ite c!25728 call!15085 (ite c!25723 call!15083 call!15084)) (ite (or c!25728 c!25723) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!137093 () Bool)

(declare-fun e!89246 () Bool)

(assert (=> b!137093 (= e!89245 e!89246)))

(declare-fun c!25726 () Bool)

(assert (=> b!137093 (= c!25726 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15084 () Bool)

(assert (=> bm!15084 (= call!15084 call!15083)))

(declare-fun b!137094 () Bool)

(declare-fun res!65672 () Bool)

(assert (=> b!137094 (=> (not res!65672) (not e!89245))))

(declare-fun e!89241 () Bool)

(assert (=> b!137094 (= res!65672 e!89241)))

(declare-fun res!65674 () Bool)

(assert (=> b!137094 (=> res!65674 e!89241)))

(declare-fun e!89252 () Bool)

(assert (=> b!137094 (= res!65674 (not e!89252))))

(declare-fun res!65671 () Bool)

(assert (=> b!137094 (=> (not res!65671) (not e!89252))))

(assert (=> b!137094 (= res!65671 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137095 () Bool)

(declare-fun e!89248 () Bool)

(assert (=> b!137095 (= e!89241 e!89248)))

(declare-fun res!65669 () Bool)

(assert (=> b!137095 (=> (not res!65669) (not e!89248))))

(assert (=> b!137095 (= res!65669 (contains!892 lt!71567 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137095 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137096 () Bool)

(assert (=> b!137096 (= e!89243 (not call!15089))))

(declare-fun b!137097 () Bool)

(assert (=> b!137097 (= e!89252 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137098 () Bool)

(assert (=> b!137098 (= e!89248 (= (apply!117 lt!71567 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137098 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))))))

(assert (=> b!137098 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137099 () Bool)

(declare-fun e!89242 () Bool)

(assert (=> b!137099 (= e!89242 (= (apply!117 lt!71567 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!137100 () Bool)

(assert (=> b!137100 (= e!89247 call!15088)))

(declare-fun b!137101 () Bool)

(assert (=> b!137101 (= e!89240 (+!164 call!15086 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!137102 () Bool)

(assert (=> b!137102 (= e!89243 e!89249)))

(declare-fun res!65668 () Bool)

(assert (=> b!137102 (= res!65668 call!15089)))

(assert (=> b!137102 (=> (not res!65668) (not e!89249))))

(declare-fun b!137103 () Bool)

(declare-fun Unit!4310 () Unit!4286)

(assert (=> b!137103 (= e!89244 Unit!4310)))

(declare-fun b!137104 () Bool)

(assert (=> b!137104 (= e!89246 e!89242)))

(declare-fun res!65666 () Bool)

(declare-fun call!15087 () Bool)

(assert (=> b!137104 (= res!65666 call!15087)))

(assert (=> b!137104 (=> (not res!65666) (not e!89242))))

(declare-fun bm!15085 () Bool)

(assert (=> bm!15085 (= call!15083 call!15085)))

(declare-fun b!137105 () Bool)

(declare-fun lt!71568 () Unit!4286)

(assert (=> b!137105 (= e!89244 lt!71568)))

(declare-fun lt!71561 () ListLongMap!1679)

(assert (=> b!137105 (= lt!71561 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71559 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71559 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71573 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71573 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71554 () Unit!4286)

(assert (=> b!137105 (= lt!71554 (addStillContains!93 lt!71561 lt!71559 (zeroValue!2741 newMap!16) lt!71573))))

(assert (=> b!137105 (contains!892 (+!164 lt!71561 (tuple2!2599 lt!71559 (zeroValue!2741 newMap!16))) lt!71573)))

(declare-fun lt!71560 () Unit!4286)

(assert (=> b!137105 (= lt!71560 lt!71554)))

(declare-fun lt!71563 () ListLongMap!1679)

(assert (=> b!137105 (= lt!71563 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71556 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71556 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71569 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71569 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71553 () Unit!4286)

(assert (=> b!137105 (= lt!71553 (addApplyDifferent!93 lt!71563 lt!71556 (minValue!2741 newMap!16) lt!71569))))

(assert (=> b!137105 (= (apply!117 (+!164 lt!71563 (tuple2!2599 lt!71556 (minValue!2741 newMap!16))) lt!71569) (apply!117 lt!71563 lt!71569))))

(declare-fun lt!71566 () Unit!4286)

(assert (=> b!137105 (= lt!71566 lt!71553)))

(declare-fun lt!71571 () ListLongMap!1679)

(assert (=> b!137105 (= lt!71571 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71564 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71564 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71558 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71558 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71557 () Unit!4286)

(assert (=> b!137105 (= lt!71557 (addApplyDifferent!93 lt!71571 lt!71564 (zeroValue!2741 newMap!16) lt!71558))))

(assert (=> b!137105 (= (apply!117 (+!164 lt!71571 (tuple2!2599 lt!71564 (zeroValue!2741 newMap!16))) lt!71558) (apply!117 lt!71571 lt!71558))))

(declare-fun lt!71565 () Unit!4286)

(assert (=> b!137105 (= lt!71565 lt!71557)))

(declare-fun lt!71562 () ListLongMap!1679)

(assert (=> b!137105 (= lt!71562 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71572 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71572 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71555 () (_ BitVec 64))

(assert (=> b!137105 (= lt!71555 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137105 (= lt!71568 (addApplyDifferent!93 lt!71562 lt!71572 (minValue!2741 newMap!16) lt!71555))))

(assert (=> b!137105 (= (apply!117 (+!164 lt!71562 (tuple2!2599 lt!71572 (minValue!2741 newMap!16))) lt!71555) (apply!117 lt!71562 lt!71555))))

(declare-fun b!137106 () Bool)

(assert (=> b!137106 (= e!89251 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137107 () Bool)

(assert (=> b!137107 (= e!89246 (not call!15087))))

(declare-fun bm!15086 () Bool)

(assert (=> bm!15086 (= call!15087 (contains!892 lt!71567 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42863 c!25728) b!137101))

(assert (= (and d!42863 (not c!25728)) b!137091))

(assert (= (and b!137091 c!25723) b!137088))

(assert (= (and b!137091 (not c!25723)) b!137087))

(assert (= (and b!137087 c!25724) b!137100))

(assert (= (and b!137087 (not c!25724)) b!137092))

(assert (= (or b!137100 b!137092) bm!15084))

(assert (= (or b!137088 bm!15084) bm!15085))

(assert (= (or b!137088 b!137100) bm!15082))

(assert (= (or b!137101 bm!15085) bm!15081))

(assert (= (or b!137101 bm!15082) bm!15083))

(assert (= (and d!42863 res!65667) b!137106))

(assert (= (and d!42863 c!25727) b!137105))

(assert (= (and d!42863 (not c!25727)) b!137103))

(assert (= (and d!42863 res!65673) b!137094))

(assert (= (and b!137094 res!65671) b!137097))

(assert (= (and b!137094 (not res!65674)) b!137095))

(assert (= (and b!137095 res!65669) b!137098))

(assert (= (and b!137094 res!65672) b!137090))

(assert (= (and b!137090 c!25725) b!137102))

(assert (= (and b!137090 (not c!25725)) b!137096))

(assert (= (and b!137102 res!65668) b!137089))

(assert (= (or b!137102 b!137096) bm!15080))

(assert (= (and b!137090 res!65670) b!137093))

(assert (= (and b!137093 c!25726) b!137104))

(assert (= (and b!137093 (not c!25726)) b!137107))

(assert (= (and b!137104 res!65666) b!137099))

(assert (= (or b!137104 b!137107) bm!15086))

(declare-fun b_lambda!6119 () Bool)

(assert (=> (not b_lambda!6119) (not b!137098)))

(assert (=> b!137098 t!6208))

(declare-fun b_and!8481 () Bool)

(assert (= b_and!8477 (and (=> t!6208 result!4043) b_and!8481)))

(assert (=> b!137098 t!6210))

(declare-fun b_and!8483 () Bool)

(assert (= b_and!8479 (and (=> t!6210 result!4045) b_and!8483)))

(assert (=> b!137106 m!162693))

(assert (=> b!137106 m!162693))

(assert (=> b!137106 m!162695))

(assert (=> d!42863 m!162671))

(declare-fun m!163365 () Bool)

(assert (=> b!137101 m!163365))

(assert (=> b!137098 m!162699))

(declare-fun m!163367 () Bool)

(assert (=> b!137098 m!163367))

(assert (=> b!137098 m!163367))

(assert (=> b!137098 m!162699))

(declare-fun m!163369 () Bool)

(assert (=> b!137098 m!163369))

(assert (=> b!137098 m!162693))

(assert (=> b!137098 m!162693))

(declare-fun m!163371 () Bool)

(assert (=> b!137098 m!163371))

(declare-fun m!163373 () Bool)

(assert (=> b!137099 m!163373))

(assert (=> b!137097 m!162693))

(assert (=> b!137097 m!162693))

(assert (=> b!137097 m!162695))

(declare-fun m!163375 () Bool)

(assert (=> bm!15086 m!163375))

(declare-fun m!163377 () Bool)

(assert (=> bm!15081 m!163377))

(declare-fun m!163379 () Bool)

(assert (=> b!137089 m!163379))

(declare-fun m!163381 () Bool)

(assert (=> b!137105 m!163381))

(declare-fun m!163383 () Bool)

(assert (=> b!137105 m!163383))

(declare-fun m!163385 () Bool)

(assert (=> b!137105 m!163385))

(declare-fun m!163387 () Bool)

(assert (=> b!137105 m!163387))

(declare-fun m!163389 () Bool)

(assert (=> b!137105 m!163389))

(declare-fun m!163391 () Bool)

(assert (=> b!137105 m!163391))

(assert (=> b!137105 m!163381))

(declare-fun m!163393 () Bool)

(assert (=> b!137105 m!163393))

(declare-fun m!163395 () Bool)

(assert (=> b!137105 m!163395))

(declare-fun m!163397 () Bool)

(assert (=> b!137105 m!163397))

(assert (=> b!137105 m!163377))

(assert (=> b!137105 m!163395))

(declare-fun m!163399 () Bool)

(assert (=> b!137105 m!163399))

(assert (=> b!137105 m!163391))

(declare-fun m!163401 () Bool)

(assert (=> b!137105 m!163401))

(declare-fun m!163403 () Bool)

(assert (=> b!137105 m!163403))

(declare-fun m!163405 () Bool)

(assert (=> b!137105 m!163405))

(assert (=> b!137105 m!163385))

(declare-fun m!163407 () Bool)

(assert (=> b!137105 m!163407))

(declare-fun m!163409 () Bool)

(assert (=> b!137105 m!163409))

(assert (=> b!137105 m!162693))

(assert (=> b!137095 m!162693))

(assert (=> b!137095 m!162693))

(declare-fun m!163411 () Bool)

(assert (=> b!137095 m!163411))

(declare-fun m!163413 () Bool)

(assert (=> bm!15080 m!163413))

(declare-fun m!163415 () Bool)

(assert (=> bm!15083 m!163415))

(assert (=> b!136772 d!42863))

(declare-fun e!89254 () Option!177)

(declare-fun b!137110 () Bool)

(assert (=> b!137110 (= e!89254 (getValueByKey!171 (t!6195 (toList!855 lt!71370)) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!137111 () Bool)

(assert (=> b!137111 (= e!89254 None!175)))

(declare-fun b!137109 () Bool)

(declare-fun e!89253 () Option!177)

(assert (=> b!137109 (= e!89253 e!89254)))

(declare-fun c!25730 () Bool)

(assert (=> b!137109 (= c!25730 (and ((_ is Cons!1712) (toList!855 lt!71370)) (not (= (_1!1310 (h!2318 (toList!855 lt!71370))) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25729 () Bool)

(declare-fun d!42865 () Bool)

(assert (=> d!42865 (= c!25729 (and ((_ is Cons!1712) (toList!855 lt!71370)) (= (_1!1310 (h!2318 (toList!855 lt!71370))) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42865 (= (getValueByKey!171 (toList!855 lt!71370) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!89253)))

(declare-fun b!137108 () Bool)

(assert (=> b!137108 (= e!89253 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71370)))))))

(assert (= (and d!42865 c!25729) b!137108))

(assert (= (and d!42865 (not c!25729)) b!137109))

(assert (= (and b!137109 c!25730) b!137110))

(assert (= (and b!137109 (not c!25730)) b!137111))

(declare-fun m!163417 () Bool)

(assert (=> b!137110 m!163417))

(assert (=> b!136854 d!42865))

(declare-fun b!137112 () Bool)

(declare-fun e!89258 () Bool)

(declare-fun e!89257 () Bool)

(assert (=> b!137112 (= e!89258 e!89257)))

(declare-fun c!25733 () Bool)

(assert (=> b!137112 (= c!25733 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun bm!15087 () Bool)

(declare-fun call!15090 () ListLongMap!1679)

(assert (=> bm!15087 (= call!15090 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2888 newMap!16)))))

(declare-fun b!137113 () Bool)

(declare-fun lt!71580 () Unit!4286)

(declare-fun lt!71577 () Unit!4286)

(assert (=> b!137113 (= lt!71580 lt!71577)))

(declare-fun lt!71574 () V!3497)

(declare-fun lt!71578 () ListLongMap!1679)

(declare-fun lt!71579 () (_ BitVec 64))

(declare-fun lt!71575 () (_ BitVec 64))

(assert (=> b!137113 (not (contains!892 (+!164 lt!71578 (tuple2!2599 lt!71579 lt!71574)) lt!71575))))

(assert (=> b!137113 (= lt!71577 (addStillNotContains!63 lt!71578 lt!71579 lt!71574 lt!71575))))

(assert (=> b!137113 (= lt!71575 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!137113 (= lt!71574 (get!1488 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!137113 (= lt!71579 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137113 (= lt!71578 call!15090)))

(declare-fun e!89256 () ListLongMap!1679)

(assert (=> b!137113 (= e!89256 (+!164 call!15090 (tuple2!2599 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!137114 () Bool)

(declare-fun e!89255 () Bool)

(assert (=> b!137114 (= e!89255 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137114 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!137115 () Bool)

(assert (=> b!137115 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> b!137115 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128))))))

(declare-fun lt!71576 () ListLongMap!1679)

(declare-fun e!89260 () Bool)

(assert (=> b!137115 (= e!89260 (= (apply!117 lt!71576 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42867 () Bool)

(declare-fun e!89259 () Bool)

(assert (=> d!42867 e!89259))

(declare-fun res!65678 () Bool)

(assert (=> d!42867 (=> (not res!65678) (not e!89259))))

(assert (=> d!42867 (= res!65678 (not (contains!892 lt!71576 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!89261 () ListLongMap!1679)

(assert (=> d!42867 (= lt!71576 e!89261)))

(declare-fun c!25734 () Bool)

(assert (=> d!42867 (= c!25734 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42867 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42867 (= (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71576)))

(declare-fun b!137116 () Bool)

(assert (=> b!137116 (= e!89259 e!89258)))

(declare-fun c!25731 () Bool)

(assert (=> b!137116 (= c!25731 e!89255)))

(declare-fun res!65676 () Bool)

(assert (=> b!137116 (=> (not res!65676) (not e!89255))))

(assert (=> b!137116 (= res!65676 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137117 () Bool)

(assert (=> b!137117 (= e!89261 e!89256)))

(declare-fun c!25732 () Bool)

(assert (=> b!137117 (= c!25732 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137118 () Bool)

(assert (=> b!137118 (= e!89257 (= lt!71576 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128) (mask!7201 newMap!16) (ite c!25588 (ite c!25580 lt!71132 lt!71135) (extraKeys!2649 newMap!16)) (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2888 newMap!16))))))

(declare-fun b!137119 () Bool)

(declare-fun res!65675 () Bool)

(assert (=> b!137119 (=> (not res!65675) (not e!89259))))

(assert (=> b!137119 (= res!65675 (not (contains!892 lt!71576 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137120 () Bool)

(assert (=> b!137120 (= e!89261 (ListLongMap!1680 Nil!1713))))

(declare-fun b!137121 () Bool)

(assert (=> b!137121 (= e!89258 e!89260)))

(assert (=> b!137121 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun res!65677 () Bool)

(assert (=> b!137121 (= res!65677 (contains!892 lt!71576 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137121 (=> (not res!65677) (not e!89260))))

(declare-fun b!137122 () Bool)

(assert (=> b!137122 (= e!89256 call!15090)))

(declare-fun b!137123 () Bool)

(assert (=> b!137123 (= e!89257 (isEmpty!417 lt!71576))))

(assert (= (and d!42867 c!25734) b!137120))

(assert (= (and d!42867 (not c!25734)) b!137117))

(assert (= (and b!137117 c!25732) b!137113))

(assert (= (and b!137117 (not c!25732)) b!137122))

(assert (= (or b!137113 b!137122) bm!15087))

(assert (= (and d!42867 res!65678) b!137119))

(assert (= (and b!137119 res!65675) b!137116))

(assert (= (and b!137116 res!65676) b!137114))

(assert (= (and b!137116 c!25731) b!137121))

(assert (= (and b!137116 (not c!25731)) b!137112))

(assert (= (and b!137121 res!65677) b!137115))

(assert (= (and b!137112 c!25733) b!137118))

(assert (= (and b!137112 (not c!25733)) b!137123))

(declare-fun b_lambda!6121 () Bool)

(assert (=> (not b_lambda!6121) (not b!137113)))

(assert (=> b!137113 t!6208))

(declare-fun b_and!8485 () Bool)

(assert (= b_and!8481 (and (=> t!6208 result!4043) b_and!8485)))

(assert (=> b!137113 t!6210))

(declare-fun b_and!8487 () Bool)

(assert (= b_and!8483 (and (=> t!6210 result!4045) b_and!8487)))

(declare-fun b_lambda!6123 () Bool)

(assert (=> (not b_lambda!6123) (not b!137115)))

(assert (=> b!137115 t!6208))

(declare-fun b_and!8489 () Bool)

(assert (= b_and!8485 (and (=> t!6208 result!4043) b_and!8489)))

(assert (=> b!137115 t!6210))

(declare-fun b_and!8491 () Bool)

(assert (= b_and!8487 (and (=> t!6210 result!4045) b_and!8491)))

(declare-fun m!163419 () Bool)

(assert (=> b!137123 m!163419))

(declare-fun m!163421 () Bool)

(assert (=> d!42867 m!163421))

(assert (=> d!42867 m!162671))

(assert (=> b!137115 m!163137))

(assert (=> b!137115 m!162699))

(assert (=> b!137115 m!163139))

(assert (=> b!137115 m!163137))

(assert (=> b!137115 m!162699))

(assert (=> b!137115 m!162693))

(assert (=> b!137115 m!162693))

(declare-fun m!163423 () Bool)

(assert (=> b!137115 m!163423))

(declare-fun m!163425 () Bool)

(assert (=> bm!15087 m!163425))

(assert (=> b!137117 m!162693))

(assert (=> b!137117 m!162693))

(assert (=> b!137117 m!162695))

(declare-fun m!163427 () Bool)

(assert (=> b!137113 m!163427))

(assert (=> b!137113 m!163137))

(assert (=> b!137113 m!162699))

(assert (=> b!137113 m!163139))

(assert (=> b!137113 m!162693))

(assert (=> b!137113 m!163427))

(declare-fun m!163429 () Bool)

(assert (=> b!137113 m!163429))

(declare-fun m!163431 () Bool)

(assert (=> b!137113 m!163431))

(assert (=> b!137113 m!163137))

(declare-fun m!163433 () Bool)

(assert (=> b!137113 m!163433))

(assert (=> b!137113 m!162699))

(assert (=> b!137121 m!162693))

(assert (=> b!137121 m!162693))

(declare-fun m!163435 () Bool)

(assert (=> b!137121 m!163435))

(declare-fun m!163437 () Bool)

(assert (=> b!137119 m!163437))

(assert (=> b!137118 m!163425))

(assert (=> b!137114 m!162693))

(assert (=> b!137114 m!162693))

(assert (=> b!137114 m!162695))

(assert (=> bm!15060 d!42867))

(assert (=> d!42719 d!42735))

(declare-fun call!15096 () Bool)

(declare-fun bm!15092 () Bool)

(assert (=> bm!15092 (= call!15096 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!137140 () Bool)

(declare-fun e!89273 () Bool)

(assert (=> b!137140 (= e!89273 (not call!15096))))

(declare-fun b!137141 () Bool)

(declare-fun res!65688 () Bool)

(declare-fun lt!71583 () SeekEntryResult!279)

(assert (=> b!137141 (= res!65688 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!71583)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137141 (=> (not res!65688) (not e!89273))))

(declare-fun b!137142 () Bool)

(declare-fun e!89271 () Bool)

(declare-fun e!89270 () Bool)

(assert (=> b!137142 (= e!89271 e!89270)))

(declare-fun c!25740 () Bool)

(assert (=> b!137142 (= c!25740 ((_ is MissingVacant!279) lt!71583))))

(declare-fun b!137143 () Bool)

(assert (=> b!137143 (= e!89271 e!89273)))

(declare-fun res!65687 () Bool)

(declare-fun call!15095 () Bool)

(assert (=> b!137143 (= res!65687 call!15095)))

(assert (=> b!137143 (=> (not res!65687) (not e!89273))))

(declare-fun b!137144 () Bool)

(declare-fun e!89272 () Bool)

(assert (=> b!137144 (= e!89272 (not call!15096))))

(declare-fun b!137145 () Bool)

(declare-fun res!65689 () Bool)

(assert (=> b!137145 (=> (not res!65689) (not e!89272))))

(assert (=> b!137145 (= res!65689 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!71583)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!42869 () Bool)

(assert (=> d!42869 e!89271))

(declare-fun c!25739 () Bool)

(assert (=> d!42869 (= c!25739 ((_ is MissingZero!279) lt!71583))))

(assert (=> d!42869 (= lt!71583 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(assert (=> d!42869 true))

(declare-fun _$34!994 () Unit!4286)

(assert (=> d!42869 (= (choose!839 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)) _$34!994)))

(declare-fun b!137146 () Bool)

(assert (=> b!137146 (= e!89270 ((_ is Undefined!279) lt!71583))))

(declare-fun bm!15093 () Bool)

(assert (=> bm!15093 (= call!15095 (inRange!0 (ite c!25739 (index!3277 lt!71583) (index!3280 lt!71583)) (mask!7201 newMap!16)))))

(declare-fun b!137147 () Bool)

(declare-fun res!65690 () Bool)

(assert (=> b!137147 (=> (not res!65690) (not e!89272))))

(assert (=> b!137147 (= res!65690 call!15095)))

(assert (=> b!137147 (= e!89270 e!89272)))

(assert (= (and d!42869 c!25739) b!137143))

(assert (= (and d!42869 (not c!25739)) b!137142))

(assert (= (and b!137143 res!65687) b!137141))

(assert (= (and b!137141 res!65688) b!137140))

(assert (= (and b!137142 c!25740) b!137147))

(assert (= (and b!137142 (not c!25740)) b!137146))

(assert (= (and b!137147 res!65690) b!137145))

(assert (= (and b!137145 res!65689) b!137144))

(assert (= (or b!137143 b!137147) bm!15093))

(assert (= (or b!137140 b!137144) bm!15092))

(declare-fun m!163439 () Bool)

(assert (=> b!137145 m!163439))

(declare-fun m!163441 () Bool)

(assert (=> b!137141 m!163441))

(assert (=> bm!15092 m!162421))

(assert (=> bm!15092 m!162599))

(declare-fun m!163443 () Bool)

(assert (=> bm!15093 m!163443))

(assert (=> d!42869 m!162421))

(assert (=> d!42869 m!162553))

(assert (=> d!42719 d!42869))

(declare-fun d!42871 () Bool)

(assert (=> d!42871 (= (validMask!0 (mask!7201 newMap!16)) (and (or (= (mask!7201 newMap!16) #b00000000000000000000000000000111) (= (mask!7201 newMap!16) #b00000000000000000000000000001111) (= (mask!7201 newMap!16) #b00000000000000000000000000011111) (= (mask!7201 newMap!16) #b00000000000000000000000000111111) (= (mask!7201 newMap!16) #b00000000000000000000000001111111) (= (mask!7201 newMap!16) #b00000000000000000000000011111111) (= (mask!7201 newMap!16) #b00000000000000000000000111111111) (= (mask!7201 newMap!16) #b00000000000000000000001111111111) (= (mask!7201 newMap!16) #b00000000000000000000011111111111) (= (mask!7201 newMap!16) #b00000000000000000000111111111111) (= (mask!7201 newMap!16) #b00000000000000000001111111111111) (= (mask!7201 newMap!16) #b00000000000000000011111111111111) (= (mask!7201 newMap!16) #b00000000000000000111111111111111) (= (mask!7201 newMap!16) #b00000000000000001111111111111111) (= (mask!7201 newMap!16) #b00000000000000011111111111111111) (= (mask!7201 newMap!16) #b00000000000000111111111111111111) (= (mask!7201 newMap!16) #b00000000000001111111111111111111) (= (mask!7201 newMap!16) #b00000000000011111111111111111111) (= (mask!7201 newMap!16) #b00000000000111111111111111111111) (= (mask!7201 newMap!16) #b00000000001111111111111111111111) (= (mask!7201 newMap!16) #b00000000011111111111111111111111) (= (mask!7201 newMap!16) #b00000000111111111111111111111111) (= (mask!7201 newMap!16) #b00000001111111111111111111111111) (= (mask!7201 newMap!16) #b00000011111111111111111111111111) (= (mask!7201 newMap!16) #b00000111111111111111111111111111) (= (mask!7201 newMap!16) #b00001111111111111111111111111111) (= (mask!7201 newMap!16) #b00011111111111111111111111111111) (= (mask!7201 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!7201 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!42719 d!42871))

(declare-fun d!42873 () Bool)

(assert (=> d!42873 (= (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!416 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!5733 () Bool)

(assert (= bs!5733 d!42873))

(assert (=> bs!5733 m!162883))

(declare-fun m!163445 () Bool)

(assert (=> bs!5733 m!163445))

(assert (=> b!136796 d!42873))

(declare-fun b!137150 () Bool)

(declare-fun e!89275 () Option!177)

(assert (=> b!137150 (= e!89275 (getValueByKey!171 (t!6195 (toList!855 lt!71204)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137151 () Bool)

(assert (=> b!137151 (= e!89275 None!175)))

(declare-fun b!137149 () Bool)

(declare-fun e!89274 () Option!177)

(assert (=> b!137149 (= e!89274 e!89275)))

(declare-fun c!25742 () Bool)

(assert (=> b!137149 (= c!25742 (and ((_ is Cons!1712) (toList!855 lt!71204)) (not (= (_1!1310 (h!2318 (toList!855 lt!71204))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42875 () Bool)

(declare-fun c!25741 () Bool)

(assert (=> d!42875 (= c!25741 (and ((_ is Cons!1712) (toList!855 lt!71204)) (= (_1!1310 (h!2318 (toList!855 lt!71204))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42875 (= (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000) e!89274)))

(declare-fun b!137148 () Bool)

(assert (=> b!137148 (= e!89274 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71204)))))))

(assert (= (and d!42875 c!25741) b!137148))

(assert (= (and d!42875 (not c!25741)) b!137149))

(assert (= (and b!137149 c!25742) b!137150))

(assert (= (and b!137149 (not c!25742)) b!137151))

(declare-fun m!163447 () Bool)

(assert (=> b!137150 m!163447))

(assert (=> b!136796 d!42875))

(declare-fun d!42877 () Bool)

(assert (=> d!42877 (isDefined!125 (getValueByKey!171 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(declare-fun lt!71584 () Unit!4286)

(assert (=> d!42877 (= lt!71584 (choose!842 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(declare-fun e!89276 () Bool)

(assert (=> d!42877 e!89276))

(declare-fun res!65691 () Bool)

(assert (=> d!42877 (=> (not res!65691) (not e!89276))))

(assert (=> d!42877 (= res!65691 (isStrictlySorted!318 (toList!855 call!14999)))))

(assert (=> d!42877 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))) lt!71584)))

(declare-fun b!137152 () Bool)

(assert (=> b!137152 (= e!89276 (containsKey!175 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (= (and d!42877 res!65691) b!137152))

(assert (=> d!42877 m!162573))

(assert (=> d!42877 m!162849))

(assert (=> d!42877 m!162849))

(assert (=> d!42877 m!162851))

(assert (=> d!42877 m!162573))

(declare-fun m!163449 () Bool)

(assert (=> d!42877 m!163449))

(declare-fun m!163451 () Bool)

(assert (=> d!42877 m!163451))

(assert (=> b!137152 m!162573))

(assert (=> b!137152 m!162845))

(assert (=> b!136764 d!42877))

(declare-fun d!42879 () Bool)

(assert (=> d!42879 (= (isDefined!125 (getValueByKey!171 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))) (not (isEmpty!416 (getValueByKey!171 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))))

(declare-fun bs!5734 () Bool)

(assert (= bs!5734 d!42879))

(assert (=> bs!5734 m!162849))

(declare-fun m!163453 () Bool)

(assert (=> bs!5734 m!163453))

(assert (=> b!136764 d!42879))

(declare-fun b!137155 () Bool)

(declare-fun e!89278 () Option!177)

(assert (=> b!137155 (= e!89278 (getValueByKey!171 (t!6195 (toList!855 call!14999)) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(declare-fun b!137156 () Bool)

(assert (=> b!137156 (= e!89278 None!175)))

(declare-fun b!137154 () Bool)

(declare-fun e!89277 () Option!177)

(assert (=> b!137154 (= e!89277 e!89278)))

(declare-fun c!25744 () Bool)

(assert (=> b!137154 (= c!25744 (and ((_ is Cons!1712) (toList!855 call!14999)) (not (= (_1!1310 (h!2318 (toList!855 call!14999))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))))

(declare-fun c!25743 () Bool)

(declare-fun d!42881 () Bool)

(assert (=> d!42881 (= c!25743 (and ((_ is Cons!1712) (toList!855 call!14999)) (= (_1!1310 (h!2318 (toList!855 call!14999))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))))

(assert (=> d!42881 (= (getValueByKey!171 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))) e!89277)))

(declare-fun b!137153 () Bool)

(assert (=> b!137153 (= e!89277 (Some!176 (_2!1310 (h!2318 (toList!855 call!14999)))))))

(assert (= (and d!42881 c!25743) b!137153))

(assert (= (and d!42881 (not c!25743)) b!137154))

(assert (= (and b!137154 c!25744) b!137155))

(assert (= (and b!137154 (not c!25744)) b!137156))

(assert (=> b!137155 m!162573))

(declare-fun m!163455 () Bool)

(assert (=> b!137155 m!163455))

(assert (=> b!136764 d!42881))

(declare-fun d!42883 () Bool)

(assert (=> d!42883 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (_keys!4640 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(assert (=> d!42883 true))

(declare-fun _$5!137 () Unit!4286)

(assert (=> d!42883 (= (choose!841 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)) _$5!137)))

(declare-fun bs!5735 () Bool)

(assert (= bs!5735 d!42883))

(assert (=> bs!5735 m!162545))

(assert (=> bs!5735 m!162545))

(assert (=> bs!5735 m!162861))

(assert (=> bs!5735 m!162571))

(assert (=> bs!5735 m!162863))

(assert (=> d!42741 d!42883))

(assert (=> d!42741 d!42871))

(declare-fun d!42885 () Bool)

(assert (=> d!42885 (= (apply!117 lt!71261 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71261) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5736 () Bool)

(assert (= bs!5736 d!42885))

(declare-fun m!163457 () Bool)

(assert (=> bs!5736 m!163457))

(assert (=> bs!5736 m!163457))

(declare-fun m!163459 () Bool)

(assert (=> bs!5736 m!163459))

(assert (=> b!136728 d!42885))

(assert (=> b!136974 d!42845))

(declare-fun d!42887 () Bool)

(assert (=> d!42887 (= (size!2537 newMap!16) (bvadd (_size!603 newMap!16) (bvsdiv (bvadd (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!136987 d!42887))

(declare-fun d!42889 () Bool)

(declare-fun e!89279 () Bool)

(assert (=> d!42889 e!89279))

(declare-fun res!65692 () Bool)

(assert (=> d!42889 (=> (not res!65692) (not e!89279))))

(declare-fun lt!71586 () ListLongMap!1679)

(assert (=> d!42889 (= res!65692 (contains!892 lt!71586 (_1!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71587 () List!1716)

(assert (=> d!42889 (= lt!71586 (ListLongMap!1680 lt!71587))))

(declare-fun lt!71588 () Unit!4286)

(declare-fun lt!71585 () Unit!4286)

(assert (=> d!42889 (= lt!71588 lt!71585)))

(assert (=> d!42889 (= (getValueByKey!171 lt!71587 (_1!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42889 (= lt!71585 (lemmaContainsTupThenGetReturnValue!89 lt!71587 (_1!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42889 (= lt!71587 (insertStrictlySorted!92 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (_1!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42889 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71586)))

(declare-fun b!137157 () Bool)

(declare-fun res!65693 () Bool)

(assert (=> b!137157 (=> (not res!65693) (not e!89279))))

(assert (=> b!137157 (= res!65693 (= (getValueByKey!171 (toList!855 lt!71586) (_1!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137158 () Bool)

(assert (=> b!137158 (= e!89279 (contains!895 (toList!855 lt!71586) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42889 res!65692) b!137157))

(assert (= (and b!137157 res!65693) b!137158))

(declare-fun m!163461 () Bool)

(assert (=> d!42889 m!163461))

(declare-fun m!163463 () Bool)

(assert (=> d!42889 m!163463))

(declare-fun m!163465 () Bool)

(assert (=> d!42889 m!163465))

(declare-fun m!163467 () Bool)

(assert (=> d!42889 m!163467))

(declare-fun m!163469 () Bool)

(assert (=> b!137157 m!163469))

(declare-fun m!163471 () Bool)

(assert (=> b!137158 m!163471))

(assert (=> d!42795 d!42889))

(declare-fun d!42891 () Bool)

(declare-fun e!89285 () Bool)

(assert (=> d!42891 e!89285))

(declare-fun res!65701 () Bool)

(assert (=> d!42891 (=> (not res!65701) (not e!89285))))

(assert (=> d!42891 (= res!65701 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71604 () ListLongMap!1679)

(declare-fun lt!71589 () ListLongMap!1679)

(assert (=> d!42891 (= lt!71604 lt!71589)))

(declare-fun lt!71607 () Unit!4286)

(declare-fun e!89284 () Unit!4286)

(assert (=> d!42891 (= lt!71607 e!89284)))

(declare-fun c!25749 () Bool)

(declare-fun e!89291 () Bool)

(assert (=> d!42891 (= c!25749 e!89291)))

(declare-fun res!65695 () Bool)

(assert (=> d!42891 (=> (not res!65695) (not e!89291))))

(assert (=> d!42891 (= res!65695 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89280 () ListLongMap!1679)

(assert (=> d!42891 (= lt!71589 e!89280)))

(declare-fun c!25750 () Bool)

(assert (=> d!42891 (= c!25750 (and (not (= (bvand lt!71132 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!71132 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42891 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42891 (= (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71604)))

(declare-fun b!137159 () Bool)

(declare-fun c!25746 () Bool)

(assert (=> b!137159 (= c!25746 (and (not (= (bvand lt!71132 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!71132 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89290 () ListLongMap!1679)

(declare-fun e!89287 () ListLongMap!1679)

(assert (=> b!137159 (= e!89290 e!89287)))

(declare-fun b!137160 () Bool)

(declare-fun call!15102 () ListLongMap!1679)

(assert (=> b!137160 (= e!89290 call!15102)))

(declare-fun e!89289 () Bool)

(declare-fun b!137161 () Bool)

(assert (=> b!137161 (= e!89289 (= (apply!117 lt!71604 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bm!15094 () Bool)

(declare-fun call!15103 () Bool)

(assert (=> bm!15094 (= call!15103 (contains!892 lt!71604 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15095 () Bool)

(declare-fun call!15099 () ListLongMap!1679)

(assert (=> bm!15095 (= call!15099 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15096 () Bool)

(declare-fun call!15100 () ListLongMap!1679)

(assert (=> bm!15096 (= call!15102 call!15100)))

(declare-fun b!137162 () Bool)

(declare-fun res!65698 () Bool)

(assert (=> b!137162 (=> (not res!65698) (not e!89285))))

(declare-fun e!89283 () Bool)

(assert (=> b!137162 (= res!65698 e!89283)))

(declare-fun c!25747 () Bool)

(assert (=> b!137162 (= c!25747 (not (= (bvand lt!71132 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137163 () Bool)

(assert (=> b!137163 (= e!89280 e!89290)))

(declare-fun c!25745 () Bool)

(assert (=> b!137163 (= c!25745 (and (not (= (bvand lt!71132 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!71132 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137164 () Bool)

(declare-fun call!15098 () ListLongMap!1679)

(assert (=> b!137164 (= e!89287 call!15098)))

(declare-fun call!15097 () ListLongMap!1679)

(declare-fun bm!15097 () Bool)

(assert (=> bm!15097 (= call!15100 (+!164 (ite c!25750 call!15099 (ite c!25745 call!15097 call!15098)) (ite (or c!25750 c!25745) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!137165 () Bool)

(declare-fun e!89286 () Bool)

(assert (=> b!137165 (= e!89285 e!89286)))

(declare-fun c!25748 () Bool)

(assert (=> b!137165 (= c!25748 (not (= (bvand lt!71132 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15098 () Bool)

(assert (=> bm!15098 (= call!15098 call!15097)))

(declare-fun b!137166 () Bool)

(declare-fun res!65700 () Bool)

(assert (=> b!137166 (=> (not res!65700) (not e!89285))))

(declare-fun e!89281 () Bool)

(assert (=> b!137166 (= res!65700 e!89281)))

(declare-fun res!65702 () Bool)

(assert (=> b!137166 (=> res!65702 e!89281)))

(declare-fun e!89292 () Bool)

(assert (=> b!137166 (= res!65702 (not e!89292))))

(declare-fun res!65699 () Bool)

(assert (=> b!137166 (=> (not res!65699) (not e!89292))))

(assert (=> b!137166 (= res!65699 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137167 () Bool)

(declare-fun e!89288 () Bool)

(assert (=> b!137167 (= e!89281 e!89288)))

(declare-fun res!65697 () Bool)

(assert (=> b!137167 (=> (not res!65697) (not e!89288))))

(assert (=> b!137167 (= res!65697 (contains!892 lt!71604 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137167 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137168 () Bool)

(assert (=> b!137168 (= e!89283 (not call!15103))))

(declare-fun b!137169 () Bool)

(assert (=> b!137169 (= e!89292 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137170 () Bool)

(assert (=> b!137170 (= e!89288 (= (apply!117 lt!71604 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137170 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (_values!2871 newMap!16))))))

(assert (=> b!137170 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137171 () Bool)

(declare-fun e!89282 () Bool)

(assert (=> b!137171 (= e!89282 (= (apply!117 lt!71604 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!137172 () Bool)

(assert (=> b!137172 (= e!89287 call!15102)))

(declare-fun b!137173 () Bool)

(assert (=> b!137173 (= e!89280 (+!164 call!15100 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!137174 () Bool)

(assert (=> b!137174 (= e!89283 e!89289)))

(declare-fun res!65696 () Bool)

(assert (=> b!137174 (= res!65696 call!15103)))

(assert (=> b!137174 (=> (not res!65696) (not e!89289))))

(declare-fun b!137175 () Bool)

(declare-fun Unit!4311 () Unit!4286)

(assert (=> b!137175 (= e!89284 Unit!4311)))

(declare-fun b!137176 () Bool)

(assert (=> b!137176 (= e!89286 e!89282)))

(declare-fun res!65694 () Bool)

(declare-fun call!15101 () Bool)

(assert (=> b!137176 (= res!65694 call!15101)))

(assert (=> b!137176 (=> (not res!65694) (not e!89282))))

(declare-fun bm!15099 () Bool)

(assert (=> bm!15099 (= call!15097 call!15099)))

(declare-fun b!137177 () Bool)

(declare-fun lt!71605 () Unit!4286)

(assert (=> b!137177 (= e!89284 lt!71605)))

(declare-fun lt!71598 () ListLongMap!1679)

(assert (=> b!137177 (= lt!71598 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71596 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71596 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71610 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71610 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71591 () Unit!4286)

(assert (=> b!137177 (= lt!71591 (addStillContains!93 lt!71598 lt!71596 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!71610))))

(assert (=> b!137177 (contains!892 (+!164 lt!71598 (tuple2!2599 lt!71596 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71610)))

(declare-fun lt!71597 () Unit!4286)

(assert (=> b!137177 (= lt!71597 lt!71591)))

(declare-fun lt!71600 () ListLongMap!1679)

(assert (=> b!137177 (= lt!71600 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71593 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71593 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71606 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71606 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71590 () Unit!4286)

(assert (=> b!137177 (= lt!71590 (addApplyDifferent!93 lt!71600 lt!71593 (minValue!2741 newMap!16) lt!71606))))

(assert (=> b!137177 (= (apply!117 (+!164 lt!71600 (tuple2!2599 lt!71593 (minValue!2741 newMap!16))) lt!71606) (apply!117 lt!71600 lt!71606))))

(declare-fun lt!71603 () Unit!4286)

(assert (=> b!137177 (= lt!71603 lt!71590)))

(declare-fun lt!71608 () ListLongMap!1679)

(assert (=> b!137177 (= lt!71608 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71601 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71601 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71595 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71595 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71594 () Unit!4286)

(assert (=> b!137177 (= lt!71594 (addApplyDifferent!93 lt!71608 lt!71601 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!71595))))

(assert (=> b!137177 (= (apply!117 (+!164 lt!71608 (tuple2!2599 lt!71601 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71595) (apply!117 lt!71608 lt!71595))))

(declare-fun lt!71602 () Unit!4286)

(assert (=> b!137177 (= lt!71602 lt!71594)))

(declare-fun lt!71599 () ListLongMap!1679)

(assert (=> b!137177 (= lt!71599 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71609 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71609 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71592 () (_ BitVec 64))

(assert (=> b!137177 (= lt!71592 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137177 (= lt!71605 (addApplyDifferent!93 lt!71599 lt!71609 (minValue!2741 newMap!16) lt!71592))))

(assert (=> b!137177 (= (apply!117 (+!164 lt!71599 (tuple2!2599 lt!71609 (minValue!2741 newMap!16))) lt!71592) (apply!117 lt!71599 lt!71592))))

(declare-fun b!137178 () Bool)

(assert (=> b!137178 (= e!89291 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137179 () Bool)

(assert (=> b!137179 (= e!89286 (not call!15101))))

(declare-fun bm!15100 () Bool)

(assert (=> bm!15100 (= call!15101 (contains!892 lt!71604 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42891 c!25750) b!137173))

(assert (= (and d!42891 (not c!25750)) b!137163))

(assert (= (and b!137163 c!25745) b!137160))

(assert (= (and b!137163 (not c!25745)) b!137159))

(assert (= (and b!137159 c!25746) b!137172))

(assert (= (and b!137159 (not c!25746)) b!137164))

(assert (= (or b!137172 b!137164) bm!15098))

(assert (= (or b!137160 bm!15098) bm!15099))

(assert (= (or b!137160 b!137172) bm!15096))

(assert (= (or b!137173 bm!15099) bm!15095))

(assert (= (or b!137173 bm!15096) bm!15097))

(assert (= (and d!42891 res!65695) b!137178))

(assert (= (and d!42891 c!25749) b!137177))

(assert (= (and d!42891 (not c!25749)) b!137175))

(assert (= (and d!42891 res!65701) b!137166))

(assert (= (and b!137166 res!65699) b!137169))

(assert (= (and b!137166 (not res!65702)) b!137167))

(assert (= (and b!137167 res!65697) b!137170))

(assert (= (and b!137166 res!65700) b!137162))

(assert (= (and b!137162 c!25747) b!137174))

(assert (= (and b!137162 (not c!25747)) b!137168))

(assert (= (and b!137174 res!65696) b!137161))

(assert (= (or b!137174 b!137168) bm!15094))

(assert (= (and b!137162 res!65698) b!137165))

(assert (= (and b!137165 c!25748) b!137176))

(assert (= (and b!137165 (not c!25748)) b!137179))

(assert (= (and b!137176 res!65694) b!137171))

(assert (= (or b!137176 b!137179) bm!15100))

(declare-fun b_lambda!6125 () Bool)

(assert (=> (not b_lambda!6125) (not b!137170)))

(assert (=> b!137170 t!6208))

(declare-fun b_and!8493 () Bool)

(assert (= b_and!8489 (and (=> t!6208 result!4043) b_and!8493)))

(assert (=> b!137170 t!6210))

(declare-fun b_and!8495 () Bool)

(assert (= b_and!8491 (and (=> t!6210 result!4045) b_and!8495)))

(assert (=> b!137178 m!162693))

(assert (=> b!137178 m!162693))

(assert (=> b!137178 m!162695))

(assert (=> d!42891 m!162671))

(declare-fun m!163473 () Bool)

(assert (=> b!137173 m!163473))

(assert (=> b!137170 m!162699))

(assert (=> b!137170 m!162761))

(assert (=> b!137170 m!162761))

(assert (=> b!137170 m!162699))

(assert (=> b!137170 m!162763))

(assert (=> b!137170 m!162693))

(assert (=> b!137170 m!162693))

(declare-fun m!163475 () Bool)

(assert (=> b!137170 m!163475))

(declare-fun m!163477 () Bool)

(assert (=> b!137171 m!163477))

(assert (=> b!137169 m!162693))

(assert (=> b!137169 m!162693))

(assert (=> b!137169 m!162695))

(declare-fun m!163479 () Bool)

(assert (=> bm!15100 m!163479))

(assert (=> bm!15095 m!162445))

(declare-fun m!163481 () Bool)

(assert (=> bm!15095 m!163481))

(declare-fun m!163483 () Bool)

(assert (=> b!137161 m!163483))

(declare-fun m!163485 () Bool)

(assert (=> b!137177 m!163485))

(declare-fun m!163487 () Bool)

(assert (=> b!137177 m!163487))

(declare-fun m!163489 () Bool)

(assert (=> b!137177 m!163489))

(declare-fun m!163491 () Bool)

(assert (=> b!137177 m!163491))

(declare-fun m!163493 () Bool)

(assert (=> b!137177 m!163493))

(declare-fun m!163495 () Bool)

(assert (=> b!137177 m!163495))

(assert (=> b!137177 m!163485))

(declare-fun m!163497 () Bool)

(assert (=> b!137177 m!163497))

(declare-fun m!163499 () Bool)

(assert (=> b!137177 m!163499))

(assert (=> b!137177 m!162445))

(declare-fun m!163501 () Bool)

(assert (=> b!137177 m!163501))

(assert (=> b!137177 m!162445))

(assert (=> b!137177 m!163481))

(assert (=> b!137177 m!163499))

(declare-fun m!163503 () Bool)

(assert (=> b!137177 m!163503))

(assert (=> b!137177 m!163495))

(declare-fun m!163505 () Bool)

(assert (=> b!137177 m!163505))

(declare-fun m!163507 () Bool)

(assert (=> b!137177 m!163507))

(declare-fun m!163509 () Bool)

(assert (=> b!137177 m!163509))

(assert (=> b!137177 m!163489))

(declare-fun m!163511 () Bool)

(assert (=> b!137177 m!163511))

(assert (=> b!137177 m!162445))

(declare-fun m!163513 () Bool)

(assert (=> b!137177 m!163513))

(assert (=> b!137177 m!162693))

(assert (=> b!137167 m!162693))

(assert (=> b!137167 m!162693))

(declare-fun m!163515 () Bool)

(assert (=> b!137167 m!163515))

(declare-fun m!163517 () Bool)

(assert (=> bm!15094 m!163517))

(declare-fun m!163519 () Bool)

(assert (=> bm!15097 m!163519))

(assert (=> d!42795 d!42891))

(assert (=> d!42795 d!42729))

(declare-fun d!42893 () Bool)

(assert (=> d!42893 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71132 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(assert (=> d!42893 true))

(declare-fun _$7!119 () Unit!4286)

(assert (=> d!42893 (= (choose!846 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71132 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2741 newMap!16) (defaultEntry!2888 newMap!16)) _$7!119)))

(declare-fun bs!5737 () Bool)

(assert (= bs!5737 d!42893))

(assert (=> bs!5737 m!162545))

(assert (=> bs!5737 m!162545))

(assert (=> bs!5737 m!163039))

(assert (=> bs!5737 m!162445))

(assert (=> bs!5737 m!163037))

(assert (=> d!42795 d!42893))

(assert (=> d!42795 d!42871))

(assert (=> b!136889 d!42845))

(declare-fun d!42895 () Bool)

(declare-fun e!89293 () Bool)

(assert (=> d!42895 e!89293))

(declare-fun res!65703 () Bool)

(assert (=> d!42895 (=> res!65703 e!89293)))

(declare-fun lt!71611 () Bool)

(assert (=> d!42895 (= res!65703 (not lt!71611))))

(declare-fun lt!71613 () Bool)

(assert (=> d!42895 (= lt!71611 lt!71613)))

(declare-fun lt!71614 () Unit!4286)

(declare-fun e!89294 () Unit!4286)

(assert (=> d!42895 (= lt!71614 e!89294)))

(declare-fun c!25751 () Bool)

(assert (=> d!42895 (= c!25751 lt!71613)))

(assert (=> d!42895 (= lt!71613 (containsKey!175 (toList!855 lt!71261) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42895 (= (contains!892 lt!71261 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) lt!71611)))

(declare-fun b!137180 () Bool)

(declare-fun lt!71612 () Unit!4286)

(assert (=> b!137180 (= e!89294 lt!71612)))

(assert (=> b!137180 (= lt!71612 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71261) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137180 (isDefined!125 (getValueByKey!171 (toList!855 lt!71261) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137181 () Bool)

(declare-fun Unit!4312 () Unit!4286)

(assert (=> b!137181 (= e!89294 Unit!4312)))

(declare-fun b!137182 () Bool)

(assert (=> b!137182 (= e!89293 (isDefined!125 (getValueByKey!171 (toList!855 lt!71261) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42895 c!25751) b!137180))

(assert (= (and d!42895 (not c!25751)) b!137181))

(assert (= (and d!42895 (not res!65703)) b!137182))

(assert (=> d!42895 m!162693))

(declare-fun m!163521 () Bool)

(assert (=> d!42895 m!163521))

(assert (=> b!137180 m!162693))

(declare-fun m!163523 () Bool)

(assert (=> b!137180 m!163523))

(assert (=> b!137180 m!162693))

(declare-fun m!163525 () Bool)

(assert (=> b!137180 m!163525))

(assert (=> b!137180 m!163525))

(declare-fun m!163527 () Bool)

(assert (=> b!137180 m!163527))

(assert (=> b!137182 m!162693))

(assert (=> b!137182 m!163525))

(assert (=> b!137182 m!163525))

(assert (=> b!137182 m!163527))

(assert (=> b!136724 d!42895))

(declare-fun d!42897 () Bool)

(assert (=> d!42897 (= (get!1493 (getValueByKey!171 (toList!855 lt!71199) lt!71192)) (v!3221 (getValueByKey!171 (toList!855 lt!71199) lt!71192)))))

(assert (=> d!42779 d!42897))

(declare-fun b!137185 () Bool)

(declare-fun e!89296 () Option!177)

(assert (=> b!137185 (= e!89296 (getValueByKey!171 (t!6195 (toList!855 lt!71199)) lt!71192))))

(declare-fun b!137186 () Bool)

(assert (=> b!137186 (= e!89296 None!175)))

(declare-fun b!137184 () Bool)

(declare-fun e!89295 () Option!177)

(assert (=> b!137184 (= e!89295 e!89296)))

(declare-fun c!25753 () Bool)

(assert (=> b!137184 (= c!25753 (and ((_ is Cons!1712) (toList!855 lt!71199)) (not (= (_1!1310 (h!2318 (toList!855 lt!71199))) lt!71192))))))

(declare-fun d!42899 () Bool)

(declare-fun c!25752 () Bool)

(assert (=> d!42899 (= c!25752 (and ((_ is Cons!1712) (toList!855 lt!71199)) (= (_1!1310 (h!2318 (toList!855 lt!71199))) lt!71192)))))

(assert (=> d!42899 (= (getValueByKey!171 (toList!855 lt!71199) lt!71192) e!89295)))

(declare-fun b!137183 () Bool)

(assert (=> b!137183 (= e!89295 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71199)))))))

(assert (= (and d!42899 c!25752) b!137183))

(assert (= (and d!42899 (not c!25752)) b!137184))

(assert (= (and b!137184 c!25753) b!137185))

(assert (= (and b!137184 (not c!25753)) b!137186))

(declare-fun m!163529 () Bool)

(assert (=> b!137185 m!163529))

(assert (=> d!42779 d!42899))

(declare-fun d!42901 () Bool)

(declare-fun e!89297 () Bool)

(assert (=> d!42901 e!89297))

(declare-fun res!65704 () Bool)

(assert (=> d!42901 (=> res!65704 e!89297)))

(declare-fun lt!71615 () Bool)

(assert (=> d!42901 (= res!65704 (not lt!71615))))

(declare-fun lt!71617 () Bool)

(assert (=> d!42901 (= lt!71615 lt!71617)))

(declare-fun lt!71618 () Unit!4286)

(declare-fun e!89298 () Unit!4286)

(assert (=> d!42901 (= lt!71618 e!89298)))

(declare-fun c!25754 () Bool)

(assert (=> d!42901 (= c!25754 lt!71617)))

(assert (=> d!42901 (= lt!71617 (containsKey!175 (toList!855 lt!71331) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42901 (= (contains!892 lt!71331 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71615)))

(declare-fun b!137187 () Bool)

(declare-fun lt!71616 () Unit!4286)

(assert (=> b!137187 (= e!89298 lt!71616)))

(assert (=> b!137187 (= lt!71616 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71331) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> b!137187 (isDefined!125 (getValueByKey!171 (toList!855 lt!71331) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137188 () Bool)

(declare-fun Unit!4313 () Unit!4286)

(assert (=> b!137188 (= e!89298 Unit!4313)))

(declare-fun b!137189 () Bool)

(assert (=> b!137189 (= e!89297 (isDefined!125 (getValueByKey!171 (toList!855 lt!71331) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!42901 c!25754) b!137187))

(assert (= (and d!42901 (not c!25754)) b!137188))

(assert (= (and d!42901 (not res!65704)) b!137189))

(declare-fun m!163531 () Bool)

(assert (=> d!42901 m!163531))

(declare-fun m!163533 () Bool)

(assert (=> b!137187 m!163533))

(assert (=> b!137187 m!162939))

(assert (=> b!137187 m!162939))

(declare-fun m!163535 () Bool)

(assert (=> b!137187 m!163535))

(assert (=> b!137189 m!162939))

(assert (=> b!137189 m!162939))

(assert (=> b!137189 m!163535))

(assert (=> d!42771 d!42901))

(declare-fun e!89300 () Option!177)

(declare-fun b!137192 () Bool)

(assert (=> b!137192 (= e!89300 (getValueByKey!171 (t!6195 lt!71332) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137193 () Bool)

(assert (=> b!137193 (= e!89300 None!175)))

(declare-fun b!137191 () Bool)

(declare-fun e!89299 () Option!177)

(assert (=> b!137191 (= e!89299 e!89300)))

(declare-fun c!25756 () Bool)

(assert (=> b!137191 (= c!25756 (and ((_ is Cons!1712) lt!71332) (not (= (_1!1310 (h!2318 lt!71332)) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25755 () Bool)

(declare-fun d!42903 () Bool)

(assert (=> d!42903 (= c!25755 (and ((_ is Cons!1712) lt!71332) (= (_1!1310 (h!2318 lt!71332)) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42903 (= (getValueByKey!171 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89299)))

(declare-fun b!137190 () Bool)

(assert (=> b!137190 (= e!89299 (Some!176 (_2!1310 (h!2318 lt!71332))))))

(assert (= (and d!42903 c!25755) b!137190))

(assert (= (and d!42903 (not c!25755)) b!137191))

(assert (= (and b!137191 c!25756) b!137192))

(assert (= (and b!137191 (not c!25756)) b!137193))

(declare-fun m!163537 () Bool)

(assert (=> b!137192 m!163537))

(assert (=> d!42771 d!42903))

(declare-fun d!42905 () Bool)

(assert (=> d!42905 (= (getValueByKey!171 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71621 () Unit!4286)

(declare-fun choose!847 (List!1716 (_ BitVec 64) V!3497) Unit!4286)

(assert (=> d!42905 (= lt!71621 (choose!847 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun e!89303 () Bool)

(assert (=> d!42905 e!89303))

(declare-fun res!65709 () Bool)

(assert (=> d!42905 (=> (not res!65709) (not e!89303))))

(assert (=> d!42905 (= res!65709 (isStrictlySorted!318 lt!71332))))

(assert (=> d!42905 (= (lemmaContainsTupThenGetReturnValue!89 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71621)))

(declare-fun b!137198 () Bool)

(declare-fun res!65710 () Bool)

(assert (=> b!137198 (=> (not res!65710) (not e!89303))))

(assert (=> b!137198 (= res!65710 (containsKey!175 lt!71332 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137199 () Bool)

(assert (=> b!137199 (= e!89303 (contains!895 lt!71332 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!42905 res!65709) b!137198))

(assert (= (and b!137198 res!65710) b!137199))

(assert (=> d!42905 m!162933))

(declare-fun m!163539 () Bool)

(assert (=> d!42905 m!163539))

(declare-fun m!163541 () Bool)

(assert (=> d!42905 m!163541))

(declare-fun m!163543 () Bool)

(assert (=> b!137198 m!163543))

(declare-fun m!163545 () Bool)

(assert (=> b!137199 m!163545))

(assert (=> d!42771 d!42905))

(declare-fun b!137220 () Bool)

(declare-fun e!89318 () List!1716)

(declare-fun call!15112 () List!1716)

(assert (=> b!137220 (= e!89318 call!15112)))

(declare-fun e!89316 () List!1716)

(declare-fun b!137221 () Bool)

(assert (=> b!137221 (= e!89316 (insertStrictlySorted!92 (t!6195 (toList!855 lt!71208)) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15107 () Bool)

(declare-fun call!15110 () List!1716)

(assert (=> bm!15107 (= call!15110 call!15112)))

(declare-fun b!137222 () Bool)

(declare-fun e!89315 () List!1716)

(declare-fun call!15111 () List!1716)

(assert (=> b!137222 (= e!89315 call!15111)))

(declare-fun c!25768 () Bool)

(declare-fun b!137223 () Bool)

(declare-fun c!25766 () Bool)

(assert (=> b!137223 (= e!89316 (ite c!25766 (t!6195 (toList!855 lt!71208)) (ite c!25768 (Cons!1712 (h!2318 (toList!855 lt!71208)) (t!6195 (toList!855 lt!71208))) Nil!1713)))))

(declare-fun lt!71624 () List!1716)

(declare-fun b!137224 () Bool)

(declare-fun e!89314 () Bool)

(assert (=> b!137224 (= e!89314 (contains!895 lt!71624 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137225 () Bool)

(declare-fun e!89317 () List!1716)

(assert (=> b!137225 (= e!89318 e!89317)))

(assert (=> b!137225 (= c!25766 (and ((_ is Cons!1712) (toList!855 lt!71208)) (= (_1!1310 (h!2318 (toList!855 lt!71208))) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137226 () Bool)

(declare-fun res!65716 () Bool)

(assert (=> b!137226 (=> (not res!65716) (not e!89314))))

(assert (=> b!137226 (= res!65716 (containsKey!175 lt!71624 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15108 () Bool)

(assert (=> bm!15108 (= call!15111 call!15110)))

(declare-fun b!137227 () Bool)

(assert (=> b!137227 (= c!25768 (and ((_ is Cons!1712) (toList!855 lt!71208)) (bvsgt (_1!1310 (h!2318 (toList!855 lt!71208))) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> b!137227 (= e!89317 e!89315)))

(declare-fun b!137228 () Bool)

(assert (=> b!137228 (= e!89315 call!15111)))

(declare-fun bm!15109 () Bool)

(declare-fun c!25765 () Bool)

(declare-fun $colon$colon!92 (List!1716 tuple2!2598) List!1716)

(assert (=> bm!15109 (= call!15112 ($colon$colon!92 e!89316 (ite c!25765 (h!2318 (toList!855 lt!71208)) (tuple2!2599 (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25767 () Bool)

(assert (=> bm!15109 (= c!25767 c!25765)))

(declare-fun d!42907 () Bool)

(assert (=> d!42907 e!89314))

(declare-fun res!65715 () Bool)

(assert (=> d!42907 (=> (not res!65715) (not e!89314))))

(assert (=> d!42907 (= res!65715 (isStrictlySorted!318 lt!71624))))

(assert (=> d!42907 (= lt!71624 e!89318)))

(assert (=> d!42907 (= c!25765 (and ((_ is Cons!1712) (toList!855 lt!71208)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71208))) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42907 (isStrictlySorted!318 (toList!855 lt!71208))))

(assert (=> d!42907 (= (insertStrictlySorted!92 (toList!855 lt!71208) (_1!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71624)))

(declare-fun b!137229 () Bool)

(assert (=> b!137229 (= e!89317 call!15110)))

(assert (= (and d!42907 c!25765) b!137220))

(assert (= (and d!42907 (not c!25765)) b!137225))

(assert (= (and b!137225 c!25766) b!137229))

(assert (= (and b!137225 (not c!25766)) b!137227))

(assert (= (and b!137227 c!25768) b!137222))

(assert (= (and b!137227 (not c!25768)) b!137228))

(assert (= (or b!137222 b!137228) bm!15108))

(assert (= (or b!137229 bm!15108) bm!15107))

(assert (= (or b!137220 bm!15107) bm!15109))

(assert (= (and bm!15109 c!25767) b!137221))

(assert (= (and bm!15109 (not c!25767)) b!137223))

(assert (= (and d!42907 res!65715) b!137226))

(assert (= (and b!137226 res!65716) b!137224))

(declare-fun m!163547 () Bool)

(assert (=> b!137224 m!163547))

(declare-fun m!163549 () Bool)

(assert (=> b!137221 m!163549))

(declare-fun m!163551 () Bool)

(assert (=> d!42907 m!163551))

(declare-fun m!163553 () Bool)

(assert (=> d!42907 m!163553))

(declare-fun m!163555 () Bool)

(assert (=> b!137226 m!163555))

(declare-fun m!163557 () Bool)

(assert (=> bm!15109 m!163557))

(assert (=> d!42771 d!42907))

(assert (=> b!136711 d!42845))

(declare-fun d!42909 () Bool)

(declare-fun res!65717 () Bool)

(declare-fun e!89319 () Bool)

(assert (=> d!42909 (=> res!65717 e!89319)))

(assert (=> d!42909 (= res!65717 (and ((_ is Cons!1712) (toList!855 e!88927)) (= (_1!1310 (h!2318 (toList!855 e!88927))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!42909 (= (containsKey!175 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89319)))

(declare-fun b!137230 () Bool)

(declare-fun e!89320 () Bool)

(assert (=> b!137230 (= e!89319 e!89320)))

(declare-fun res!65718 () Bool)

(assert (=> b!137230 (=> (not res!65718) (not e!89320))))

(assert (=> b!137230 (= res!65718 (and (or (not ((_ is Cons!1712) (toList!855 e!88927))) (bvsle (_1!1310 (h!2318 (toList!855 e!88927))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!855 e!88927)) (bvslt (_1!1310 (h!2318 (toList!855 e!88927))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(declare-fun b!137231 () Bool)

(assert (=> b!137231 (= e!89320 (containsKey!175 (t!6195 (toList!855 e!88927)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!42909 (not res!65717)) b!137230))

(assert (= (and b!137230 res!65718) b!137231))

(assert (=> b!137231 m!162421))

(declare-fun m!163559 () Bool)

(assert (=> b!137231 m!163559))

(assert (=> d!42787 d!42909))

(declare-fun b!137232 () Bool)

(declare-fun e!89324 () Bool)

(declare-fun e!89323 () Bool)

(assert (=> b!137232 (= e!89324 e!89323)))

(declare-fun c!25771 () Bool)

(assert (=> b!137232 (= c!25771 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun bm!15110 () Bool)

(declare-fun call!15113 () ListLongMap!1679)

(assert (=> bm!15110 (= call!15113 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2888 newMap!16)))))

(declare-fun b!137233 () Bool)

(declare-fun lt!71631 () Unit!4286)

(declare-fun lt!71628 () Unit!4286)

(assert (=> b!137233 (= lt!71631 lt!71628)))

(declare-fun lt!71626 () (_ BitVec 64))

(declare-fun lt!71630 () (_ BitVec 64))

(declare-fun lt!71629 () ListLongMap!1679)

(declare-fun lt!71625 () V!3497)

(assert (=> b!137233 (not (contains!892 (+!164 lt!71629 (tuple2!2599 lt!71630 lt!71625)) lt!71626))))

(assert (=> b!137233 (= lt!71628 (addStillNotContains!63 lt!71629 lt!71630 lt!71625 lt!71626))))

(assert (=> b!137233 (= lt!71626 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!137233 (= lt!71625 (get!1488 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!137233 (= lt!71630 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137233 (= lt!71629 call!15113)))

(declare-fun e!89322 () ListLongMap!1679)

(assert (=> b!137233 (= e!89322 (+!164 call!15113 (tuple2!2599 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (get!1488 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!137234 () Bool)

(declare-fun e!89321 () Bool)

(assert (=> b!137234 (= e!89321 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137234 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun b!137235 () Bool)

(assert (=> b!137235 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> b!137235 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))))))))

(declare-fun e!89326 () Bool)

(declare-fun lt!71627 () ListLongMap!1679)

(assert (=> b!137235 (= e!89326 (= (apply!117 lt!71627 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun d!42911 () Bool)

(declare-fun e!89325 () Bool)

(assert (=> d!42911 e!89325))

(declare-fun res!65722 () Bool)

(assert (=> d!42911 (=> (not res!65722) (not e!89325))))

(assert (=> d!42911 (= res!65722 (not (contains!892 lt!71627 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!89327 () ListLongMap!1679)

(assert (=> d!42911 (= lt!71627 e!89327)))

(declare-fun c!25772 () Bool)

(assert (=> d!42911 (= c!25772 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42911 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42911 (= (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71627)))

(declare-fun b!137236 () Bool)

(assert (=> b!137236 (= e!89325 e!89324)))

(declare-fun c!25769 () Bool)

(assert (=> b!137236 (= c!25769 e!89321)))

(declare-fun res!65720 () Bool)

(assert (=> b!137236 (=> (not res!65720) (not e!89321))))

(assert (=> b!137236 (= res!65720 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137237 () Bool)

(assert (=> b!137237 (= e!89327 e!89322)))

(declare-fun c!25770 () Bool)

(assert (=> b!137237 (= c!25770 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137238 () Bool)

(assert (=> b!137238 (= e!89323 (= lt!71627 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (ite c!25588 (_values!2871 newMap!16) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (index!3278 lt!71133) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2888 newMap!16))))))

(declare-fun b!137239 () Bool)

(declare-fun res!65719 () Bool)

(assert (=> b!137239 (=> (not res!65719) (not e!89325))))

(assert (=> b!137239 (= res!65719 (not (contains!892 lt!71627 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137240 () Bool)

(assert (=> b!137240 (= e!89327 (ListLongMap!1680 Nil!1713))))

(declare-fun b!137241 () Bool)

(assert (=> b!137241 (= e!89324 e!89326)))

(assert (=> b!137241 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun res!65721 () Bool)

(assert (=> b!137241 (= res!65721 (contains!892 lt!71627 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137241 (=> (not res!65721) (not e!89326))))

(declare-fun b!137242 () Bool)

(assert (=> b!137242 (= e!89322 call!15113)))

(declare-fun b!137243 () Bool)

(assert (=> b!137243 (= e!89323 (isEmpty!417 lt!71627))))

(assert (= (and d!42911 c!25772) b!137240))

(assert (= (and d!42911 (not c!25772)) b!137237))

(assert (= (and b!137237 c!25770) b!137233))

(assert (= (and b!137237 (not c!25770)) b!137242))

(assert (= (or b!137233 b!137242) bm!15110))

(assert (= (and d!42911 res!65722) b!137239))

(assert (= (and b!137239 res!65719) b!137236))

(assert (= (and b!137236 res!65720) b!137234))

(assert (= (and b!137236 c!25769) b!137241))

(assert (= (and b!137236 (not c!25769)) b!137232))

(assert (= (and b!137241 res!65721) b!137235))

(assert (= (and b!137232 c!25771) b!137238))

(assert (= (and b!137232 (not c!25771)) b!137243))

(declare-fun b_lambda!6127 () Bool)

(assert (=> (not b_lambda!6127) (not b!137233)))

(assert (=> b!137233 t!6208))

(declare-fun b_and!8497 () Bool)

(assert (= b_and!8493 (and (=> t!6208 result!4043) b_and!8497)))

(assert (=> b!137233 t!6210))

(declare-fun b_and!8499 () Bool)

(assert (= b_and!8495 (and (=> t!6210 result!4045) b_and!8499)))

(declare-fun b_lambda!6129 () Bool)

(assert (=> (not b_lambda!6129) (not b!137235)))

(assert (=> b!137235 t!6208))

(declare-fun b_and!8501 () Bool)

(assert (= b_and!8497 (and (=> t!6208 result!4043) b_and!8501)))

(assert (=> b!137235 t!6210))

(declare-fun b_and!8503 () Bool)

(assert (= b_and!8499 (and (=> t!6210 result!4045) b_and!8503)))

(declare-fun m!163561 () Bool)

(assert (=> b!137243 m!163561))

(declare-fun m!163563 () Bool)

(assert (=> d!42911 m!163563))

(assert (=> d!42911 m!162671))

(assert (=> b!137235 m!162701))

(assert (=> b!137235 m!162699))

(assert (=> b!137235 m!162703))

(assert (=> b!137235 m!162701))

(assert (=> b!137235 m!162699))

(assert (=> b!137235 m!162693))

(assert (=> b!137235 m!162693))

(declare-fun m!163565 () Bool)

(assert (=> b!137235 m!163565))

(declare-fun m!163567 () Bool)

(assert (=> bm!15110 m!163567))

(assert (=> b!137237 m!162693))

(assert (=> b!137237 m!162693))

(assert (=> b!137237 m!162695))

(declare-fun m!163569 () Bool)

(assert (=> b!137233 m!163569))

(assert (=> b!137233 m!162701))

(assert (=> b!137233 m!162699))

(assert (=> b!137233 m!162703))

(assert (=> b!137233 m!162693))

(assert (=> b!137233 m!163569))

(declare-fun m!163571 () Bool)

(assert (=> b!137233 m!163571))

(declare-fun m!163573 () Bool)

(assert (=> b!137233 m!163573))

(assert (=> b!137233 m!162701))

(declare-fun m!163575 () Bool)

(assert (=> b!137233 m!163575))

(assert (=> b!137233 m!162699))

(assert (=> b!137241 m!162693))

(assert (=> b!137241 m!162693))

(declare-fun m!163577 () Bool)

(assert (=> b!137241 m!163577))

(declare-fun m!163579 () Bool)

(assert (=> b!137239 m!163579))

(assert (=> b!137238 m!163567))

(assert (=> b!137234 m!162693))

(assert (=> b!137234 m!162693))

(assert (=> b!137234 m!162695))

(assert (=> bm!15025 d!42911))

(declare-fun d!42913 () Bool)

(declare-fun e!89328 () Bool)

(assert (=> d!42913 e!89328))

(declare-fun res!65723 () Bool)

(assert (=> d!42913 (=> res!65723 e!89328)))

(declare-fun lt!71632 () Bool)

(assert (=> d!42913 (= res!65723 (not lt!71632))))

(declare-fun lt!71634 () Bool)

(assert (=> d!42913 (= lt!71632 lt!71634)))

(declare-fun lt!71635 () Unit!4286)

(declare-fun e!89329 () Unit!4286)

(assert (=> d!42913 (= lt!71635 e!89329)))

(declare-fun c!25773 () Bool)

(assert (=> d!42913 (= c!25773 lt!71634)))

(assert (=> d!42913 (= lt!71634 (containsKey!175 (toList!855 lt!71370) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42913 (= (contains!892 lt!71370 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71632)))

(declare-fun b!137244 () Bool)

(declare-fun lt!71633 () Unit!4286)

(assert (=> b!137244 (= e!89329 lt!71633)))

(assert (=> b!137244 (= lt!71633 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71370) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!137244 (isDefined!125 (getValueByKey!171 (toList!855 lt!71370) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!137245 () Bool)

(declare-fun Unit!4314 () Unit!4286)

(assert (=> b!137245 (= e!89329 Unit!4314)))

(declare-fun b!137246 () Bool)

(assert (=> b!137246 (= e!89328 (isDefined!125 (getValueByKey!171 (toList!855 lt!71370) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42913 c!25773) b!137244))

(assert (= (and d!42913 (not c!25773)) b!137245))

(assert (= (and d!42913 (not res!65723)) b!137246))

(declare-fun m!163581 () Bool)

(assert (=> d!42913 m!163581))

(declare-fun m!163583 () Bool)

(assert (=> b!137244 m!163583))

(assert (=> b!137244 m!163019))

(assert (=> b!137244 m!163019))

(declare-fun m!163585 () Bool)

(assert (=> b!137244 m!163585))

(assert (=> b!137246 m!163019))

(assert (=> b!137246 m!163019))

(assert (=> b!137246 m!163585))

(assert (=> d!42789 d!42913))

(declare-fun b!137249 () Bool)

(declare-fun e!89331 () Option!177)

(assert (=> b!137249 (= e!89331 (getValueByKey!171 (t!6195 lt!71371) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!137250 () Bool)

(assert (=> b!137250 (= e!89331 None!175)))

(declare-fun b!137248 () Bool)

(declare-fun e!89330 () Option!177)

(assert (=> b!137248 (= e!89330 e!89331)))

(declare-fun c!25775 () Bool)

(assert (=> b!137248 (= c!25775 (and ((_ is Cons!1712) lt!71371) (not (= (_1!1310 (h!2318 lt!71371)) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!42915 () Bool)

(declare-fun c!25774 () Bool)

(assert (=> d!42915 (= c!25774 (and ((_ is Cons!1712) lt!71371) (= (_1!1310 (h!2318 lt!71371)) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42915 (= (getValueByKey!171 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!89330)))

(declare-fun b!137247 () Bool)

(assert (=> b!137247 (= e!89330 (Some!176 (_2!1310 (h!2318 lt!71371))))))

(assert (= (and d!42915 c!25774) b!137247))

(assert (= (and d!42915 (not c!25774)) b!137248))

(assert (= (and b!137248 c!25775) b!137249))

(assert (= (and b!137248 (not c!25775)) b!137250))

(declare-fun m!163587 () Bool)

(assert (=> b!137249 m!163587))

(assert (=> d!42789 d!42915))

(declare-fun d!42917 () Bool)

(assert (=> d!42917 (= (getValueByKey!171 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71636 () Unit!4286)

(assert (=> d!42917 (= lt!71636 (choose!847 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!89332 () Bool)

(assert (=> d!42917 e!89332))

(declare-fun res!65724 () Bool)

(assert (=> d!42917 (=> (not res!65724) (not e!89332))))

(assert (=> d!42917 (= res!65724 (isStrictlySorted!318 lt!71371))))

(assert (=> d!42917 (= (lemmaContainsTupThenGetReturnValue!89 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71636)))

(declare-fun b!137251 () Bool)

(declare-fun res!65725 () Bool)

(assert (=> b!137251 (=> (not res!65725) (not e!89332))))

(assert (=> b!137251 (= res!65725 (containsKey!175 lt!71371 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!137252 () Bool)

(assert (=> b!137252 (= e!89332 (contains!895 lt!71371 (tuple2!2599 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!42917 res!65724) b!137251))

(assert (= (and b!137251 res!65725) b!137252))

(assert (=> d!42917 m!163013))

(declare-fun m!163589 () Bool)

(assert (=> d!42917 m!163589))

(declare-fun m!163591 () Bool)

(assert (=> d!42917 m!163591))

(declare-fun m!163593 () Bool)

(assert (=> b!137251 m!163593))

(declare-fun m!163595 () Bool)

(assert (=> b!137252 m!163595))

(assert (=> d!42789 d!42917))

(declare-fun b!137253 () Bool)

(declare-fun e!89337 () List!1716)

(declare-fun call!15116 () List!1716)

(assert (=> b!137253 (= e!89337 call!15116)))

(declare-fun e!89335 () List!1716)

(declare-fun b!137254 () Bool)

(assert (=> b!137254 (= e!89335 (insertStrictlySorted!92 (t!6195 (toList!855 call!14989)) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15111 () Bool)

(declare-fun call!15114 () List!1716)

(assert (=> bm!15111 (= call!15114 call!15116)))

(declare-fun b!137255 () Bool)

(declare-fun e!89334 () List!1716)

(declare-fun call!15115 () List!1716)

(assert (=> b!137255 (= e!89334 call!15115)))

(declare-fun b!137256 () Bool)

(declare-fun c!25777 () Bool)

(declare-fun c!25779 () Bool)

(assert (=> b!137256 (= e!89335 (ite c!25777 (t!6195 (toList!855 call!14989)) (ite c!25779 (Cons!1712 (h!2318 (toList!855 call!14989)) (t!6195 (toList!855 call!14989))) Nil!1713)))))

(declare-fun b!137257 () Bool)

(declare-fun e!89333 () Bool)

(declare-fun lt!71637 () List!1716)

(assert (=> b!137257 (= e!89333 (contains!895 lt!71637 (tuple2!2599 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137258 () Bool)

(declare-fun e!89336 () List!1716)

(assert (=> b!137258 (= e!89337 e!89336)))

(assert (=> b!137258 (= c!25777 (and ((_ is Cons!1712) (toList!855 call!14989)) (= (_1!1310 (h!2318 (toList!855 call!14989))) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137259 () Bool)

(declare-fun res!65727 () Bool)

(assert (=> b!137259 (=> (not res!65727) (not e!89333))))

(assert (=> b!137259 (= res!65727 (containsKey!175 lt!71637 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!15112 () Bool)

(assert (=> bm!15112 (= call!15115 call!15114)))

(declare-fun b!137260 () Bool)

(assert (=> b!137260 (= c!25779 (and ((_ is Cons!1712) (toList!855 call!14989)) (bvsgt (_1!1310 (h!2318 (toList!855 call!14989))) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!137260 (= e!89336 e!89334)))

(declare-fun b!137261 () Bool)

(assert (=> b!137261 (= e!89334 call!15115)))

(declare-fun c!25776 () Bool)

(declare-fun bm!15113 () Bool)

(assert (=> bm!15113 (= call!15116 ($colon$colon!92 e!89335 (ite c!25776 (h!2318 (toList!855 call!14989)) (tuple2!2599 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!25778 () Bool)

(assert (=> bm!15113 (= c!25778 c!25776)))

(declare-fun d!42919 () Bool)

(assert (=> d!42919 e!89333))

(declare-fun res!65726 () Bool)

(assert (=> d!42919 (=> (not res!65726) (not e!89333))))

(assert (=> d!42919 (= res!65726 (isStrictlySorted!318 lt!71637))))

(assert (=> d!42919 (= lt!71637 e!89337)))

(assert (=> d!42919 (= c!25776 (and ((_ is Cons!1712) (toList!855 call!14989)) (bvslt (_1!1310 (h!2318 (toList!855 call!14989))) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!42919 (isStrictlySorted!318 (toList!855 call!14989))))

(assert (=> d!42919 (= (insertStrictlySorted!92 (toList!855 call!14989) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71637)))

(declare-fun b!137262 () Bool)

(assert (=> b!137262 (= e!89336 call!15114)))

(assert (= (and d!42919 c!25776) b!137253))

(assert (= (and d!42919 (not c!25776)) b!137258))

(assert (= (and b!137258 c!25777) b!137262))

(assert (= (and b!137258 (not c!25777)) b!137260))

(assert (= (and b!137260 c!25779) b!137255))

(assert (= (and b!137260 (not c!25779)) b!137261))

(assert (= (or b!137255 b!137261) bm!15112))

(assert (= (or b!137262 bm!15112) bm!15111))

(assert (= (or b!137253 bm!15111) bm!15113))

(assert (= (and bm!15113 c!25778) b!137254))

(assert (= (and bm!15113 (not c!25778)) b!137256))

(assert (= (and d!42919 res!65726) b!137259))

(assert (= (and b!137259 res!65727) b!137257))

(declare-fun m!163597 () Bool)

(assert (=> b!137257 m!163597))

(declare-fun m!163599 () Bool)

(assert (=> b!137254 m!163599))

(declare-fun m!163601 () Bool)

(assert (=> d!42919 m!163601))

(declare-fun m!163603 () Bool)

(assert (=> d!42919 m!163603))

(declare-fun m!163605 () Bool)

(assert (=> b!137259 m!163605))

(declare-fun m!163607 () Bool)

(assert (=> bm!15113 m!163607))

(assert (=> d!42789 d!42919))

(declare-fun lt!71640 () Bool)

(declare-fun d!42921 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!134 (List!1716) (InoxSet tuple2!2598))

(assert (=> d!42921 (= lt!71640 (select (content!134 (toList!855 lt!71281)) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun e!89342 () Bool)

(assert (=> d!42921 (= lt!71640 e!89342)))

(declare-fun res!65732 () Bool)

(assert (=> d!42921 (=> (not res!65732) (not e!89342))))

(assert (=> d!42921 (= res!65732 ((_ is Cons!1712) (toList!855 lt!71281)))))

(assert (=> d!42921 (= (contains!895 (toList!855 lt!71281) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71640)))

(declare-fun b!137267 () Bool)

(declare-fun e!89343 () Bool)

(assert (=> b!137267 (= e!89342 e!89343)))

(declare-fun res!65733 () Bool)

(assert (=> b!137267 (=> res!65733 e!89343)))

(assert (=> b!137267 (= res!65733 (= (h!2318 (toList!855 lt!71281)) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137268 () Bool)

(assert (=> b!137268 (= e!89343 (contains!895 (t!6195 (toList!855 lt!71281)) (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (= (and d!42921 res!65732) b!137267))

(assert (= (and b!137267 (not res!65733)) b!137268))

(declare-fun m!163609 () Bool)

(assert (=> d!42921 m!163609))

(declare-fun m!163611 () Bool)

(assert (=> d!42921 m!163611))

(declare-fun m!163613 () Bool)

(assert (=> b!137268 m!163613))

(assert (=> b!136745 d!42921))

(assert (=> d!42751 d!42735))

(declare-fun d!42923 () Bool)

(declare-fun e!89346 () Bool)

(assert (=> d!42923 e!89346))

(declare-fun res!65739 () Bool)

(assert (=> d!42923 (=> (not res!65739) (not e!89346))))

(declare-fun lt!71643 () SeekEntryResult!279)

(assert (=> d!42923 (= res!65739 ((_ is Found!279) lt!71643))))

(assert (=> d!42923 (= lt!71643 (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(assert (=> d!42923 true))

(declare-fun _$33!117 () Unit!4286)

(assert (=> d!42923 (= (choose!843 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (defaultEntry!2888 newMap!16)) _$33!117)))

(declare-fun b!137273 () Bool)

(declare-fun res!65738 () Bool)

(assert (=> b!137273 (=> (not res!65738) (not e!89346))))

(assert (=> b!137273 (= res!65738 (inRange!0 (index!3278 lt!71643) (mask!7201 newMap!16)))))

(declare-fun b!137274 () Bool)

(assert (=> b!137274 (= e!89346 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71643)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!42923 res!65739) b!137273))

(assert (= (and b!137273 res!65738) b!137274))

(assert (=> d!42923 m!162421))

(assert (=> d!42923 m!162553))

(declare-fun m!163615 () Bool)

(assert (=> b!137273 m!163615))

(declare-fun m!163617 () Bool)

(assert (=> b!137274 m!163617))

(assert (=> d!42751 d!42923))

(assert (=> d!42751 d!42871))

(declare-fun d!42925 () Bool)

(declare-fun e!89347 () Bool)

(assert (=> d!42925 e!89347))

(declare-fun res!65740 () Bool)

(assert (=> d!42925 (=> res!65740 e!89347)))

(declare-fun lt!71644 () Bool)

(assert (=> d!42925 (= res!65740 (not lt!71644))))

(declare-fun lt!71646 () Bool)

(assert (=> d!42925 (= lt!71644 lt!71646)))

(declare-fun lt!71647 () Unit!4286)

(declare-fun e!89348 () Unit!4286)

(assert (=> d!42925 (= lt!71647 e!89348)))

(declare-fun c!25780 () Bool)

(assert (=> d!42925 (= c!25780 lt!71646)))

(assert (=> d!42925 (= lt!71646 (containsKey!175 (toList!855 lt!71350) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!42925 (= (contains!892 lt!71350 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!71644)))

(declare-fun b!137275 () Bool)

(declare-fun lt!71645 () Unit!4286)

(assert (=> b!137275 (= e!89348 lt!71645)))

(assert (=> b!137275 (= lt!71645 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71350) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!137275 (isDefined!125 (getValueByKey!171 (toList!855 lt!71350) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!137276 () Bool)

(declare-fun Unit!4315 () Unit!4286)

(assert (=> b!137276 (= e!89348 Unit!4315)))

(declare-fun b!137277 () Bool)

(assert (=> b!137277 (= e!89347 (isDefined!125 (getValueByKey!171 (toList!855 lt!71350) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!42925 c!25780) b!137275))

(assert (= (and d!42925 (not c!25780)) b!137276))

(assert (= (and d!42925 (not res!65740)) b!137277))

(assert (=> d!42925 m!162605))

(declare-fun m!163619 () Bool)

(assert (=> d!42925 m!163619))

(assert (=> b!137275 m!162605))

(declare-fun m!163621 () Bool)

(assert (=> b!137275 m!163621))

(assert (=> b!137275 m!162605))

(declare-fun m!163623 () Bool)

(assert (=> b!137275 m!163623))

(assert (=> b!137275 m!163623))

(declare-fun m!163625 () Bool)

(assert (=> b!137275 m!163625))

(assert (=> b!137277 m!162605))

(assert (=> b!137277 m!163623))

(assert (=> b!137277 m!163623))

(assert (=> b!137277 m!163625))

(assert (=> b!136842 d!42925))

(assert (=> b!136869 d!42845))

(assert (=> b!136886 d!42845))

(declare-fun d!42927 () Bool)

(declare-fun e!89349 () Bool)

(assert (=> d!42927 e!89349))

(declare-fun res!65741 () Bool)

(assert (=> d!42927 (=> res!65741 e!89349)))

(declare-fun lt!71648 () Bool)

(assert (=> d!42927 (= res!65741 (not lt!71648))))

(declare-fun lt!71650 () Bool)

(assert (=> d!42927 (= lt!71648 lt!71650)))

(declare-fun lt!71651 () Unit!4286)

(declare-fun e!89350 () Unit!4286)

(assert (=> d!42927 (= lt!71651 e!89350)))

(declare-fun c!25781 () Bool)

(assert (=> d!42927 (= c!25781 lt!71650)))

(assert (=> d!42927 (= lt!71650 (containsKey!175 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (=> d!42927 (= (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))) lt!71648)))

(declare-fun b!137278 () Bool)

(declare-fun lt!71649 () Unit!4286)

(assert (=> b!137278 (= e!89350 lt!71649)))

(assert (=> b!137278 (= lt!71649 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (=> b!137278 (isDefined!125 (getValueByKey!171 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(declare-fun b!137279 () Bool)

(declare-fun Unit!4316 () Unit!4286)

(assert (=> b!137279 (= e!89350 Unit!4316)))

(declare-fun b!137280 () Bool)

(assert (=> b!137280 (= e!89349 (isDefined!125 (getValueByKey!171 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))))

(assert (= (and d!42927 c!25781) b!137278))

(assert (= (and d!42927 (not c!25781)) b!137279))

(assert (= (and d!42927 (not res!65741)) b!137280))

(assert (=> d!42927 m!162573))

(declare-fun m!163627 () Bool)

(assert (=> d!42927 m!163627))

(assert (=> b!137278 m!162573))

(declare-fun m!163629 () Bool)

(assert (=> b!137278 m!163629))

(assert (=> b!137278 m!162573))

(declare-fun m!163631 () Bool)

(assert (=> b!137278 m!163631))

(assert (=> b!137278 m!163631))

(declare-fun m!163633 () Bool)

(assert (=> b!137278 m!163633))

(assert (=> b!137280 m!162573))

(assert (=> b!137280 m!163631))

(assert (=> b!137280 m!163631))

(assert (=> b!137280 m!163633))

(assert (=> b!136769 d!42927))

(declare-fun d!42929 () Bool)

(declare-fun e!89356 () Bool)

(assert (=> d!42929 e!89356))

(declare-fun res!65749 () Bool)

(assert (=> d!42929 (=> (not res!65749) (not e!89356))))

(assert (=> d!42929 (= res!65749 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71667 () ListLongMap!1679)

(declare-fun lt!71652 () ListLongMap!1679)

(assert (=> d!42929 (= lt!71667 lt!71652)))

(declare-fun lt!71670 () Unit!4286)

(declare-fun e!89355 () Unit!4286)

(assert (=> d!42929 (= lt!71670 e!89355)))

(declare-fun c!25786 () Bool)

(declare-fun e!89362 () Bool)

(assert (=> d!42929 (= c!25786 e!89362)))

(declare-fun res!65743 () Bool)

(assert (=> d!42929 (=> (not res!65743) (not e!89362))))

(assert (=> d!42929 (= res!65743 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89351 () ListLongMap!1679)

(assert (=> d!42929 (= lt!71652 e!89351)))

(declare-fun c!25787 () Bool)

(assert (=> d!42929 (= c!25787 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!42929 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!42929 (= (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71667)))

(declare-fun b!137281 () Bool)

(declare-fun c!25783 () Bool)

(assert (=> b!137281 (= c!25783 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89361 () ListLongMap!1679)

(declare-fun e!89358 () ListLongMap!1679)

(assert (=> b!137281 (= e!89361 e!89358)))

(declare-fun b!137282 () Bool)

(declare-fun call!15122 () ListLongMap!1679)

(assert (=> b!137282 (= e!89361 call!15122)))

(declare-fun b!137283 () Bool)

(declare-fun e!89360 () Bool)

(assert (=> b!137283 (= e!89360 (= (apply!117 lt!71667 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15114 () Bool)

(declare-fun call!15123 () Bool)

(assert (=> bm!15114 (= call!15123 (contains!892 lt!71667 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15115 () Bool)

(declare-fun call!15119 () ListLongMap!1679)

(assert (=> bm!15115 (= call!15119 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15116 () Bool)

(declare-fun call!15120 () ListLongMap!1679)

(assert (=> bm!15116 (= call!15122 call!15120)))

(declare-fun b!137284 () Bool)

(declare-fun res!65746 () Bool)

(assert (=> b!137284 (=> (not res!65746) (not e!89356))))

(declare-fun e!89354 () Bool)

(assert (=> b!137284 (= res!65746 e!89354)))

(declare-fun c!25784 () Bool)

(assert (=> b!137284 (= c!25784 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137285 () Bool)

(assert (=> b!137285 (= e!89351 e!89361)))

(declare-fun c!25782 () Bool)

(assert (=> b!137285 (= c!25782 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137286 () Bool)

(declare-fun call!15118 () ListLongMap!1679)

(assert (=> b!137286 (= e!89358 call!15118)))

(declare-fun bm!15117 () Bool)

(declare-fun call!15117 () ListLongMap!1679)

(assert (=> bm!15117 (= call!15120 (+!164 (ite c!25787 call!15119 (ite c!25782 call!15117 call!15118)) (ite (or c!25787 c!25782) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!137287 () Bool)

(declare-fun e!89357 () Bool)

(assert (=> b!137287 (= e!89356 e!89357)))

(declare-fun c!25785 () Bool)

(assert (=> b!137287 (= c!25785 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15118 () Bool)

(assert (=> bm!15118 (= call!15118 call!15117)))

(declare-fun b!137288 () Bool)

(declare-fun res!65748 () Bool)

(assert (=> b!137288 (=> (not res!65748) (not e!89356))))

(declare-fun e!89352 () Bool)

(assert (=> b!137288 (= res!65748 e!89352)))

(declare-fun res!65750 () Bool)

(assert (=> b!137288 (=> res!65750 e!89352)))

(declare-fun e!89363 () Bool)

(assert (=> b!137288 (= res!65750 (not e!89363))))

(declare-fun res!65747 () Bool)

(assert (=> b!137288 (=> (not res!65747) (not e!89363))))

(assert (=> b!137288 (= res!65747 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137289 () Bool)

(declare-fun e!89359 () Bool)

(assert (=> b!137289 (= e!89352 e!89359)))

(declare-fun res!65745 () Bool)

(assert (=> b!137289 (=> (not res!65745) (not e!89359))))

(assert (=> b!137289 (= res!65745 (contains!892 lt!71667 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137289 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137290 () Bool)

(assert (=> b!137290 (= e!89354 (not call!15123))))

(declare-fun b!137291 () Bool)

(assert (=> b!137291 (= e!89363 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137292 () Bool)

(assert (=> b!137292 (= e!89359 (= (apply!117 lt!71667 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 lt!71128) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137292 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 lt!71128)))))

(assert (=> b!137292 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137293 () Bool)

(declare-fun e!89353 () Bool)

(assert (=> b!137293 (= e!89353 (= (apply!117 lt!71667 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!137294 () Bool)

(assert (=> b!137294 (= e!89358 call!15122)))

(declare-fun b!137295 () Bool)

(assert (=> b!137295 (= e!89351 (+!164 call!15120 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!137296 () Bool)

(assert (=> b!137296 (= e!89354 e!89360)))

(declare-fun res!65744 () Bool)

(assert (=> b!137296 (= res!65744 call!15123)))

(assert (=> b!137296 (=> (not res!65744) (not e!89360))))

(declare-fun b!137297 () Bool)

(declare-fun Unit!4317 () Unit!4286)

(assert (=> b!137297 (= e!89355 Unit!4317)))

(declare-fun b!137298 () Bool)

(assert (=> b!137298 (= e!89357 e!89353)))

(declare-fun res!65742 () Bool)

(declare-fun call!15121 () Bool)

(assert (=> b!137298 (= res!65742 call!15121)))

(assert (=> b!137298 (=> (not res!65742) (not e!89353))))

(declare-fun bm!15119 () Bool)

(assert (=> bm!15119 (= call!15117 call!15119)))

(declare-fun b!137299 () Bool)

(declare-fun lt!71668 () Unit!4286)

(assert (=> b!137299 (= e!89355 lt!71668)))

(declare-fun lt!71661 () ListLongMap!1679)

(assert (=> b!137299 (= lt!71661 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71659 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71659 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71673 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71673 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71654 () Unit!4286)

(assert (=> b!137299 (= lt!71654 (addStillContains!93 lt!71661 lt!71659 (zeroValue!2741 newMap!16) lt!71673))))

(assert (=> b!137299 (contains!892 (+!164 lt!71661 (tuple2!2599 lt!71659 (zeroValue!2741 newMap!16))) lt!71673)))

(declare-fun lt!71660 () Unit!4286)

(assert (=> b!137299 (= lt!71660 lt!71654)))

(declare-fun lt!71663 () ListLongMap!1679)

(assert (=> b!137299 (= lt!71663 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71656 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71656 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71669 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71669 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71653 () Unit!4286)

(assert (=> b!137299 (= lt!71653 (addApplyDifferent!93 lt!71663 lt!71656 (minValue!2741 newMap!16) lt!71669))))

(assert (=> b!137299 (= (apply!117 (+!164 lt!71663 (tuple2!2599 lt!71656 (minValue!2741 newMap!16))) lt!71669) (apply!117 lt!71663 lt!71669))))

(declare-fun lt!71666 () Unit!4286)

(assert (=> b!137299 (= lt!71666 lt!71653)))

(declare-fun lt!71671 () ListLongMap!1679)

(assert (=> b!137299 (= lt!71671 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71664 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71664 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71658 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71658 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71657 () Unit!4286)

(assert (=> b!137299 (= lt!71657 (addApplyDifferent!93 lt!71671 lt!71664 (zeroValue!2741 newMap!16) lt!71658))))

(assert (=> b!137299 (= (apply!117 (+!164 lt!71671 (tuple2!2599 lt!71664 (zeroValue!2741 newMap!16))) lt!71658) (apply!117 lt!71671 lt!71658))))

(declare-fun lt!71665 () Unit!4286)

(assert (=> b!137299 (= lt!71665 lt!71657)))

(declare-fun lt!71662 () ListLongMap!1679)

(assert (=> b!137299 (= lt!71662 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71672 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71672 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71655 () (_ BitVec 64))

(assert (=> b!137299 (= lt!71655 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137299 (= lt!71668 (addApplyDifferent!93 lt!71662 lt!71672 (minValue!2741 newMap!16) lt!71655))))

(assert (=> b!137299 (= (apply!117 (+!164 lt!71662 (tuple2!2599 lt!71672 (minValue!2741 newMap!16))) lt!71655) (apply!117 lt!71662 lt!71655))))

(declare-fun b!137300 () Bool)

(assert (=> b!137300 (= e!89362 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137301 () Bool)

(assert (=> b!137301 (= e!89357 (not call!15121))))

(declare-fun bm!15120 () Bool)

(assert (=> bm!15120 (= call!15121 (contains!892 lt!71667 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!42929 c!25787) b!137295))

(assert (= (and d!42929 (not c!25787)) b!137285))

(assert (= (and b!137285 c!25782) b!137282))

(assert (= (and b!137285 (not c!25782)) b!137281))

(assert (= (and b!137281 c!25783) b!137294))

(assert (= (and b!137281 (not c!25783)) b!137286))

(assert (= (or b!137294 b!137286) bm!15118))

(assert (= (or b!137282 bm!15118) bm!15119))

(assert (= (or b!137282 b!137294) bm!15116))

(assert (= (or b!137295 bm!15119) bm!15115))

(assert (= (or b!137295 bm!15116) bm!15117))

(assert (= (and d!42929 res!65743) b!137300))

(assert (= (and d!42929 c!25786) b!137299))

(assert (= (and d!42929 (not c!25786)) b!137297))

(assert (= (and d!42929 res!65749) b!137288))

(assert (= (and b!137288 res!65747) b!137291))

(assert (= (and b!137288 (not res!65750)) b!137289))

(assert (= (and b!137289 res!65745) b!137292))

(assert (= (and b!137288 res!65748) b!137284))

(assert (= (and b!137284 c!25784) b!137296))

(assert (= (and b!137284 (not c!25784)) b!137290))

(assert (= (and b!137296 res!65744) b!137283))

(assert (= (or b!137296 b!137290) bm!15114))

(assert (= (and b!137284 res!65746) b!137287))

(assert (= (and b!137287 c!25785) b!137298))

(assert (= (and b!137287 (not c!25785)) b!137301))

(assert (= (and b!137298 res!65742) b!137293))

(assert (= (or b!137298 b!137301) bm!15120))

(declare-fun b_lambda!6131 () Bool)

(assert (=> (not b_lambda!6131) (not b!137292)))

(assert (=> b!137292 t!6208))

(declare-fun b_and!8505 () Bool)

(assert (= b_and!8501 (and (=> t!6208 result!4043) b_and!8505)))

(assert (=> b!137292 t!6210))

(declare-fun b_and!8507 () Bool)

(assert (= b_and!8503 (and (=> t!6210 result!4045) b_and!8507)))

(assert (=> b!137300 m!162693))

(assert (=> b!137300 m!162693))

(assert (=> b!137300 m!162695))

(assert (=> d!42929 m!162671))

(declare-fun m!163635 () Bool)

(assert (=> b!137295 m!163635))

(assert (=> b!137292 m!162699))

(declare-fun m!163637 () Bool)

(assert (=> b!137292 m!163637))

(assert (=> b!137292 m!163637))

(assert (=> b!137292 m!162699))

(declare-fun m!163639 () Bool)

(assert (=> b!137292 m!163639))

(assert (=> b!137292 m!162693))

(assert (=> b!137292 m!162693))

(declare-fun m!163641 () Bool)

(assert (=> b!137292 m!163641))

(declare-fun m!163643 () Bool)

(assert (=> b!137293 m!163643))

(assert (=> b!137291 m!162693))

(assert (=> b!137291 m!162693))

(assert (=> b!137291 m!162695))

(declare-fun m!163645 () Bool)

(assert (=> bm!15120 m!163645))

(declare-fun m!163647 () Bool)

(assert (=> bm!15115 m!163647))

(declare-fun m!163649 () Bool)

(assert (=> b!137283 m!163649))

(declare-fun m!163651 () Bool)

(assert (=> b!137299 m!163651))

(declare-fun m!163653 () Bool)

(assert (=> b!137299 m!163653))

(declare-fun m!163655 () Bool)

(assert (=> b!137299 m!163655))

(declare-fun m!163657 () Bool)

(assert (=> b!137299 m!163657))

(declare-fun m!163659 () Bool)

(assert (=> b!137299 m!163659))

(declare-fun m!163661 () Bool)

(assert (=> b!137299 m!163661))

(assert (=> b!137299 m!163651))

(declare-fun m!163663 () Bool)

(assert (=> b!137299 m!163663))

(declare-fun m!163665 () Bool)

(assert (=> b!137299 m!163665))

(declare-fun m!163667 () Bool)

(assert (=> b!137299 m!163667))

(assert (=> b!137299 m!163647))

(assert (=> b!137299 m!163665))

(declare-fun m!163669 () Bool)

(assert (=> b!137299 m!163669))

(assert (=> b!137299 m!163661))

(declare-fun m!163671 () Bool)

(assert (=> b!137299 m!163671))

(declare-fun m!163673 () Bool)

(assert (=> b!137299 m!163673))

(declare-fun m!163675 () Bool)

(assert (=> b!137299 m!163675))

(assert (=> b!137299 m!163655))

(declare-fun m!163677 () Bool)

(assert (=> b!137299 m!163677))

(declare-fun m!163679 () Bool)

(assert (=> b!137299 m!163679))

(assert (=> b!137299 m!162693))

(assert (=> b!137289 m!162693))

(assert (=> b!137289 m!162693))

(declare-fun m!163681 () Bool)

(assert (=> b!137289 m!163681))

(declare-fun m!163683 () Bool)

(assert (=> bm!15114 m!163683))

(declare-fun m!163685 () Bool)

(assert (=> bm!15117 m!163685))

(assert (=> b!136769 d!42929))

(declare-fun d!42931 () Bool)

(declare-fun e!89364 () Bool)

(assert (=> d!42931 e!89364))

(declare-fun res!65751 () Bool)

(assert (=> d!42931 (=> (not res!65751) (not e!89364))))

(declare-fun lt!71675 () ListLongMap!1679)

(assert (=> d!42931 (= res!65751 (contains!892 lt!71675 (_1!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(declare-fun lt!71676 () List!1716)

(assert (=> d!42931 (= lt!71675 (ListLongMap!1680 lt!71676))))

(declare-fun lt!71677 () Unit!4286)

(declare-fun lt!71674 () Unit!4286)

(assert (=> d!42931 (= lt!71677 lt!71674)))

(assert (=> d!42931 (= (getValueByKey!171 lt!71676 (_1!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(assert (=> d!42931 (= lt!71674 (lemmaContainsTupThenGetReturnValue!89 lt!71676 (_1!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (_2!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(assert (=> d!42931 (= lt!71676 (insertStrictlySorted!92 (toList!855 (ite c!25634 call!15036 (ite c!25629 call!15034 call!15035))) (_1!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (_2!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(assert (=> d!42931 (= (+!164 (ite c!25634 call!15036 (ite c!25629 call!15034 call!15035)) (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) lt!71675)))

(declare-fun b!137302 () Bool)

(declare-fun res!65752 () Bool)

(assert (=> b!137302 (=> (not res!65752) (not e!89364))))

(assert (=> b!137302 (= res!65752 (= (getValueByKey!171 (toList!855 lt!71675) (_1!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))))

(declare-fun b!137303 () Bool)

(assert (=> b!137303 (= e!89364 (contains!895 (toList!855 lt!71675) (ite (or c!25634 c!25629) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (= (and d!42931 res!65751) b!137302))

(assert (= (and b!137302 res!65752) b!137303))

(declare-fun m!163687 () Bool)

(assert (=> d!42931 m!163687))

(declare-fun m!163689 () Bool)

(assert (=> d!42931 m!163689))

(declare-fun m!163691 () Bool)

(assert (=> d!42931 m!163691))

(declare-fun m!163693 () Bool)

(assert (=> d!42931 m!163693))

(declare-fun m!163695 () Bool)

(assert (=> b!137302 m!163695))

(declare-fun m!163697 () Bool)

(assert (=> b!137303 m!163697))

(assert (=> bm!15034 d!42931))

(declare-fun d!42933 () Bool)

(assert (=> d!42933 (= (apply!117 lt!71492 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71492) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5738 () Bool)

(assert (= bs!5738 d!42933))

(declare-fun m!163699 () Bool)

(assert (=> bs!5738 m!163699))

(assert (=> bs!5738 m!163699))

(declare-fun m!163701 () Bool)

(assert (=> bs!5738 m!163701))

(assert (=> b!136967 d!42933))

(declare-fun e!89366 () Option!177)

(declare-fun b!137306 () Bool)

(assert (=> b!137306 (= e!89366 (getValueByKey!171 (t!6195 (toList!855 lt!71324)) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137307 () Bool)

(assert (=> b!137307 (= e!89366 None!175)))

(declare-fun b!137305 () Bool)

(declare-fun e!89365 () Option!177)

(assert (=> b!137305 (= e!89365 e!89366)))

(declare-fun c!25789 () Bool)

(assert (=> b!137305 (= c!25789 (and ((_ is Cons!1712) (toList!855 lt!71324)) (not (= (_1!1310 (h!2318 (toList!855 lt!71324))) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun d!42935 () Bool)

(declare-fun c!25788 () Bool)

(assert (=> d!42935 (= c!25788 (and ((_ is Cons!1712) (toList!855 lt!71324)) (= (_1!1310 (h!2318 (toList!855 lt!71324))) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42935 (= (getValueByKey!171 (toList!855 lt!71324) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89365)))

(declare-fun b!137304 () Bool)

(assert (=> b!137304 (= e!89365 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71324)))))))

(assert (= (and d!42935 c!25788) b!137304))

(assert (= (and d!42935 (not c!25788)) b!137305))

(assert (= (and b!137305 c!25789) b!137306))

(assert (= (and b!137305 (not c!25789)) b!137307))

(declare-fun m!163703 () Bool)

(assert (=> b!137306 m!163703))

(assert (=> b!136801 d!42935))

(declare-fun d!42937 () Bool)

(assert (=> d!42937 (= (isEmpty!416 (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) (not ((_ is Some!176) (getValueByKey!171 (toList!855 lt!71024) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(assert (=> d!42745 d!42937))

(assert (=> b!136838 d!42723))

(declare-fun d!42939 () Bool)

(declare-fun res!65753 () Bool)

(declare-fun e!89367 () Bool)

(assert (=> d!42939 (=> res!65753 e!89367)))

(assert (=> d!42939 (= res!65753 (and ((_ is Cons!1712) (toList!855 lt!71204)) (= (_1!1310 (h!2318 (toList!855 lt!71204))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!42939 (= (containsKey!175 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!89367)))

(declare-fun b!137308 () Bool)

(declare-fun e!89368 () Bool)

(assert (=> b!137308 (= e!89367 e!89368)))

(declare-fun res!65754 () Bool)

(assert (=> b!137308 (=> (not res!65754) (not e!89368))))

(assert (=> b!137308 (= res!65754 (and (or (not ((_ is Cons!1712) (toList!855 lt!71204))) (bvsle (_1!1310 (h!2318 (toList!855 lt!71204))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1712) (toList!855 lt!71204)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71204))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!137309 () Bool)

(assert (=> b!137309 (= e!89368 (containsKey!175 (t!6195 (toList!855 lt!71204)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!42939 (not res!65753)) b!137308))

(assert (= (and b!137308 res!65754) b!137309))

(assert (=> b!137309 m!162605))

(declare-fun m!163705 () Bool)

(assert (=> b!137309 m!163705))

(assert (=> d!42727 d!42939))

(declare-fun bm!15121 () Bool)

(declare-fun call!15124 () (_ BitVec 32))

(assert (=> bm!15121 (= call!15124 (arrayCountValidKeys!0 (_keys!4640 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137310 () Bool)

(declare-fun e!89370 () (_ BitVec 32))

(assert (=> b!137310 (= e!89370 (bvadd #b00000000000000000000000000000001 call!15124))))

(declare-fun b!137311 () Bool)

(assert (=> b!137311 (= e!89370 call!15124)))

(declare-fun d!42941 () Bool)

(declare-fun lt!71678 () (_ BitVec 32))

(assert (=> d!42941 (and (bvsge lt!71678 #b00000000000000000000000000000000) (bvsle lt!71678 (bvsub (size!2531 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!89369 () (_ BitVec 32))

(assert (=> d!42941 (= lt!71678 e!89369)))

(declare-fun c!25791 () Bool)

(assert (=> d!42941 (= c!25791 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42941 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2531 (_keys!4640 newMap!16)) (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!42941 (= (arrayCountValidKeys!0 (_keys!4640 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))) lt!71678)))

(declare-fun b!137312 () Bool)

(assert (=> b!137312 (= e!89369 #b00000000000000000000000000000000)))

(declare-fun b!137313 () Bool)

(assert (=> b!137313 (= e!89369 e!89370)))

(declare-fun c!25790 () Bool)

(assert (=> b!137313 (= c!25790 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!42941 c!25791) b!137312))

(assert (= (and d!42941 (not c!25791)) b!137313))

(assert (= (and b!137313 c!25790) b!137310))

(assert (= (and b!137313 (not c!25790)) b!137311))

(assert (= (or b!137310 b!137311) bm!15121))

(declare-fun m!163707 () Bool)

(assert (=> bm!15121 m!163707))

(declare-fun m!163709 () Bool)

(assert (=> b!137313 m!163709))

(assert (=> b!137313 m!163709))

(declare-fun m!163711 () Bool)

(assert (=> b!137313 m!163711))

(assert (=> bm!15043 d!42941))

(assert (=> d!42729 d!42871))

(declare-fun d!42943 () Bool)

(declare-fun e!89371 () Bool)

(assert (=> d!42943 e!89371))

(declare-fun res!65755 () Bool)

(assert (=> d!42943 (=> res!65755 e!89371)))

(declare-fun lt!71679 () Bool)

(assert (=> d!42943 (= res!65755 (not lt!71679))))

(declare-fun lt!71681 () Bool)

(assert (=> d!42943 (= lt!71679 lt!71681)))

(declare-fun lt!71682 () Unit!4286)

(declare-fun e!89372 () Unit!4286)

(assert (=> d!42943 (= lt!71682 e!89372)))

(declare-fun c!25792 () Bool)

(assert (=> d!42943 (= c!25792 lt!71681)))

(assert (=> d!42943 (= lt!71681 (containsKey!175 (toList!855 lt!71492) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42943 (= (contains!892 lt!71492 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) lt!71679)))

(declare-fun b!137314 () Bool)

(declare-fun lt!71680 () Unit!4286)

(assert (=> b!137314 (= e!89372 lt!71680)))

(assert (=> b!137314 (= lt!71680 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71492) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137314 (isDefined!125 (getValueByKey!171 (toList!855 lt!71492) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137315 () Bool)

(declare-fun Unit!4318 () Unit!4286)

(assert (=> b!137315 (= e!89372 Unit!4318)))

(declare-fun b!137316 () Bool)

(assert (=> b!137316 (= e!89371 (isDefined!125 (getValueByKey!171 (toList!855 lt!71492) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42943 c!25792) b!137314))

(assert (= (and d!42943 (not c!25792)) b!137315))

(assert (= (and d!42943 (not res!65755)) b!137316))

(assert (=> d!42943 m!162693))

(declare-fun m!163713 () Bool)

(assert (=> d!42943 m!163713))

(assert (=> b!137314 m!162693))

(declare-fun m!163715 () Bool)

(assert (=> b!137314 m!163715))

(assert (=> b!137314 m!162693))

(declare-fun m!163717 () Bool)

(assert (=> b!137314 m!163717))

(assert (=> b!137314 m!163717))

(declare-fun m!163719 () Bool)

(assert (=> b!137314 m!163719))

(assert (=> b!137316 m!162693))

(assert (=> b!137316 m!163717))

(assert (=> b!137316 m!163717))

(assert (=> b!137316 m!163719))

(assert (=> b!136963 d!42943))

(declare-fun d!42945 () Bool)

(assert (=> d!42945 (= (apply!117 lt!71235 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71235) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5739 () Bool)

(assert (= bs!5739 d!42945))

(declare-fun m!163721 () Bool)

(assert (=> bs!5739 m!163721))

(assert (=> bs!5739 m!163721))

(declare-fun m!163723 () Bool)

(assert (=> bs!5739 m!163723))

(assert (=> b!136704 d!42945))

(declare-fun d!42947 () Bool)

(assert (=> d!42947 (= (get!1493 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3221 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42825 d!42947))

(assert (=> d!42825 d!42875))

(assert (=> b!136834 d!42805))

(declare-fun d!42949 () Bool)

(declare-fun e!89373 () Bool)

(assert (=> d!42949 e!89373))

(declare-fun res!65756 () Bool)

(assert (=> d!42949 (=> res!65756 e!89373)))

(declare-fun lt!71683 () Bool)

(assert (=> d!42949 (= res!65756 (not lt!71683))))

(declare-fun lt!71685 () Bool)

(assert (=> d!42949 (= lt!71683 lt!71685)))

(declare-fun lt!71686 () Unit!4286)

(declare-fun e!89374 () Unit!4286)

(assert (=> d!42949 (= lt!71686 e!89374)))

(declare-fun c!25793 () Bool)

(assert (=> d!42949 (= c!25793 lt!71685)))

(assert (=> d!42949 (= lt!71685 (containsKey!175 (toList!855 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348))) lt!71349))))

(assert (=> d!42949 (= (contains!892 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348)) lt!71349) lt!71683)))

(declare-fun b!137317 () Bool)

(declare-fun lt!71684 () Unit!4286)

(assert (=> b!137317 (= e!89374 lt!71684)))

(assert (=> b!137317 (= lt!71684 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348))) lt!71349))))

(assert (=> b!137317 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348))) lt!71349))))

(declare-fun b!137318 () Bool)

(declare-fun Unit!4319 () Unit!4286)

(assert (=> b!137318 (= e!89374 Unit!4319)))

(declare-fun b!137319 () Bool)

(assert (=> b!137319 (= e!89373 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348))) lt!71349)))))

(assert (= (and d!42949 c!25793) b!137317))

(assert (= (and d!42949 (not c!25793)) b!137318))

(assert (= (and d!42949 (not res!65756)) b!137319))

(declare-fun m!163725 () Bool)

(assert (=> d!42949 m!163725))

(declare-fun m!163727 () Bool)

(assert (=> b!137317 m!163727))

(declare-fun m!163729 () Bool)

(assert (=> b!137317 m!163729))

(assert (=> b!137317 m!163729))

(declare-fun m!163731 () Bool)

(assert (=> b!137317 m!163731))

(assert (=> b!137319 m!163729))

(assert (=> b!137319 m!163729))

(assert (=> b!137319 m!163731))

(assert (=> b!136834 d!42949))

(declare-fun d!42951 () Bool)

(assert (=> d!42951 (not (contains!892 (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348)) lt!71349))))

(declare-fun lt!71689 () Unit!4286)

(declare-fun choose!848 (ListLongMap!1679 (_ BitVec 64) V!3497 (_ BitVec 64)) Unit!4286)

(assert (=> d!42951 (= lt!71689 (choose!848 lt!71352 lt!71353 lt!71348 lt!71349))))

(declare-fun e!89377 () Bool)

(assert (=> d!42951 e!89377))

(declare-fun res!65759 () Bool)

(assert (=> d!42951 (=> (not res!65759) (not e!89377))))

(assert (=> d!42951 (= res!65759 (not (contains!892 lt!71352 lt!71349)))))

(assert (=> d!42951 (= (addStillNotContains!63 lt!71352 lt!71353 lt!71348 lt!71349) lt!71689)))

(declare-fun b!137323 () Bool)

(assert (=> b!137323 (= e!89377 (not (= lt!71353 lt!71349)))))

(assert (= (and d!42951 res!65759) b!137323))

(assert (=> d!42951 m!162955))

(assert (=> d!42951 m!162955))

(assert (=> d!42951 m!162957))

(declare-fun m!163733 () Bool)

(assert (=> d!42951 m!163733))

(declare-fun m!163735 () Bool)

(assert (=> d!42951 m!163735))

(assert (=> b!136834 d!42951))

(declare-fun d!42953 () Bool)

(declare-fun e!89378 () Bool)

(assert (=> d!42953 e!89378))

(declare-fun res!65760 () Bool)

(assert (=> d!42953 (=> (not res!65760) (not e!89378))))

(declare-fun lt!71691 () ListLongMap!1679)

(assert (=> d!42953 (= res!65760 (contains!892 lt!71691 (_1!1310 (tuple2!2599 lt!71353 lt!71348))))))

(declare-fun lt!71692 () List!1716)

(assert (=> d!42953 (= lt!71691 (ListLongMap!1680 lt!71692))))

(declare-fun lt!71693 () Unit!4286)

(declare-fun lt!71690 () Unit!4286)

(assert (=> d!42953 (= lt!71693 lt!71690)))

(assert (=> d!42953 (= (getValueByKey!171 lt!71692 (_1!1310 (tuple2!2599 lt!71353 lt!71348))) (Some!176 (_2!1310 (tuple2!2599 lt!71353 lt!71348))))))

(assert (=> d!42953 (= lt!71690 (lemmaContainsTupThenGetReturnValue!89 lt!71692 (_1!1310 (tuple2!2599 lt!71353 lt!71348)) (_2!1310 (tuple2!2599 lt!71353 lt!71348))))))

(assert (=> d!42953 (= lt!71692 (insertStrictlySorted!92 (toList!855 lt!71352) (_1!1310 (tuple2!2599 lt!71353 lt!71348)) (_2!1310 (tuple2!2599 lt!71353 lt!71348))))))

(assert (=> d!42953 (= (+!164 lt!71352 (tuple2!2599 lt!71353 lt!71348)) lt!71691)))

(declare-fun b!137324 () Bool)

(declare-fun res!65761 () Bool)

(assert (=> b!137324 (=> (not res!65761) (not e!89378))))

(assert (=> b!137324 (= res!65761 (= (getValueByKey!171 (toList!855 lt!71691) (_1!1310 (tuple2!2599 lt!71353 lt!71348))) (Some!176 (_2!1310 (tuple2!2599 lt!71353 lt!71348)))))))

(declare-fun b!137325 () Bool)

(assert (=> b!137325 (= e!89378 (contains!895 (toList!855 lt!71691) (tuple2!2599 lt!71353 lt!71348)))))

(assert (= (and d!42953 res!65760) b!137324))

(assert (= (and b!137324 res!65761) b!137325))

(declare-fun m!163737 () Bool)

(assert (=> d!42953 m!163737))

(declare-fun m!163739 () Bool)

(assert (=> d!42953 m!163739))

(declare-fun m!163741 () Bool)

(assert (=> d!42953 m!163741))

(declare-fun m!163743 () Bool)

(assert (=> d!42953 m!163743))

(declare-fun m!163745 () Bool)

(assert (=> b!137324 m!163745))

(declare-fun m!163747 () Bool)

(assert (=> b!137325 m!163747))

(assert (=> b!136834 d!42953))

(declare-fun d!42955 () Bool)

(declare-fun e!89379 () Bool)

(assert (=> d!42955 e!89379))

(declare-fun res!65762 () Bool)

(assert (=> d!42955 (=> (not res!65762) (not e!89379))))

(declare-fun lt!71695 () ListLongMap!1679)

(assert (=> d!42955 (= res!65762 (contains!892 lt!71695 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71696 () List!1716)

(assert (=> d!42955 (= lt!71695 (ListLongMap!1680 lt!71696))))

(declare-fun lt!71697 () Unit!4286)

(declare-fun lt!71694 () Unit!4286)

(assert (=> d!42955 (= lt!71697 lt!71694)))

(assert (=> d!42955 (= (getValueByKey!171 lt!71696 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42955 (= lt!71694 (lemmaContainsTupThenGetReturnValue!89 lt!71696 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42955 (= lt!71696 (insertStrictlySorted!92 (toList!855 call!15043) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!42955 (= (+!164 call!15043 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71695)))

(declare-fun b!137326 () Bool)

(declare-fun res!65763 () Bool)

(assert (=> b!137326 (=> (not res!65763) (not e!89379))))

(assert (=> b!137326 (= res!65763 (= (getValueByKey!171 (toList!855 lt!71695) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137327 () Bool)

(assert (=> b!137327 (= e!89379 (contains!895 (toList!855 lt!71695) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42955 res!65762) b!137326))

(assert (= (and b!137326 res!65763) b!137327))

(declare-fun m!163749 () Bool)

(assert (=> d!42955 m!163749))

(declare-fun m!163751 () Bool)

(assert (=> d!42955 m!163751))

(declare-fun m!163753 () Bool)

(assert (=> d!42955 m!163753))

(declare-fun m!163755 () Bool)

(assert (=> d!42955 m!163755))

(declare-fun m!163757 () Bool)

(assert (=> b!137326 m!163757))

(declare-fun m!163759 () Bool)

(assert (=> b!137327 m!163759))

(assert (=> b!136834 d!42955))

(declare-fun d!42957 () Bool)

(assert (=> d!42957 (= (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71192)) (v!3221 (getValueByKey!171 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71192)))))

(assert (=> d!42759 d!42957))

(declare-fun b!137330 () Bool)

(declare-fun e!89381 () Option!177)

(assert (=> b!137330 (= e!89381 (getValueByKey!171 (t!6195 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71192))))

(declare-fun b!137331 () Bool)

(assert (=> b!137331 (= e!89381 None!175)))

(declare-fun b!137329 () Bool)

(declare-fun e!89380 () Option!177)

(assert (=> b!137329 (= e!89380 e!89381)))

(declare-fun c!25795 () Bool)

(assert (=> b!137329 (= c!25795 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (not (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71192))))))

(declare-fun d!42959 () Bool)

(declare-fun c!25794 () Bool)

(assert (=> d!42959 (= c!25794 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71192)))))

(assert (=> d!42959 (= (getValueByKey!171 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71192) e!89380)))

(declare-fun b!137328 () Bool)

(assert (=> b!137328 (= e!89380 (Some!176 (_2!1310 (h!2318 (toList!855 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(assert (= (and d!42959 c!25794) b!137328))

(assert (= (and d!42959 (not c!25794)) b!137329))

(assert (= (and b!137329 c!25795) b!137330))

(assert (= (and b!137329 (not c!25795)) b!137331))

(declare-fun m!163761 () Bool)

(assert (=> b!137330 m!163761))

(assert (=> d!42759 d!42959))

(declare-fun d!42961 () Bool)

(declare-fun res!65764 () Bool)

(declare-fun e!89382 () Bool)

(assert (=> d!42961 (=> res!65764 e!89382)))

(assert (=> d!42961 (= res!65764 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71210)))))

(assert (=> d!42961 (= (containsKey!175 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210) e!89382)))

(declare-fun b!137332 () Bool)

(declare-fun e!89383 () Bool)

(assert (=> b!137332 (= e!89382 e!89383)))

(declare-fun res!65765 () Bool)

(assert (=> b!137332 (=> (not res!65765) (not e!89383))))

(assert (=> b!137332 (= res!65765 (and (or (not ((_ is Cons!1712) (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) (bvsle (_1!1310 (h!2318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71210)) ((_ is Cons!1712) (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) (bvslt (_1!1310 (h!2318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71210)))))

(declare-fun b!137333 () Bool)

(assert (=> b!137333 (= e!89383 (containsKey!175 (t!6195 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71210))))

(assert (= (and d!42961 (not res!65764)) b!137332))

(assert (= (and b!137332 res!65765) b!137333))

(declare-fun m!163763 () Bool)

(assert (=> b!137333 m!163763))

(assert (=> d!42757 d!42961))

(assert (=> d!42783 d!42759))

(declare-fun d!42963 () Bool)

(assert (=> d!42963 (= (apply!117 (+!164 lt!71199 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71192) (apply!117 lt!71199 lt!71192))))

(assert (=> d!42963 true))

(declare-fun _$34!997 () Unit!4286)

(assert (=> d!42963 (= (choose!845 lt!71199 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71192) _$34!997)))

(declare-fun bs!5740 () Bool)

(assert (= bs!5740 d!42963))

(assert (=> bs!5740 m!162635))

(assert (=> bs!5740 m!162635))

(assert (=> bs!5740 m!162657))

(assert (=> bs!5740 m!162637))

(assert (=> d!42783 d!42963))

(declare-fun d!42965 () Bool)

(declare-fun e!89384 () Bool)

(assert (=> d!42965 e!89384))

(declare-fun res!65766 () Bool)

(assert (=> d!42965 (=> res!65766 e!89384)))

(declare-fun lt!71698 () Bool)

(assert (=> d!42965 (= res!65766 (not lt!71698))))

(declare-fun lt!71700 () Bool)

(assert (=> d!42965 (= lt!71698 lt!71700)))

(declare-fun lt!71701 () Unit!4286)

(declare-fun e!89385 () Unit!4286)

(assert (=> d!42965 (= lt!71701 e!89385)))

(declare-fun c!25796 () Bool)

(assert (=> d!42965 (= c!25796 lt!71700)))

(assert (=> d!42965 (= lt!71700 (containsKey!175 (toList!855 lt!71199) lt!71192))))

(assert (=> d!42965 (= (contains!892 lt!71199 lt!71192) lt!71698)))

(declare-fun b!137335 () Bool)

(declare-fun lt!71699 () Unit!4286)

(assert (=> b!137335 (= e!89385 lt!71699)))

(assert (=> b!137335 (= lt!71699 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71199) lt!71192))))

(assert (=> b!137335 (isDefined!125 (getValueByKey!171 (toList!855 lt!71199) lt!71192))))

(declare-fun b!137336 () Bool)

(declare-fun Unit!4320 () Unit!4286)

(assert (=> b!137336 (= e!89385 Unit!4320)))

(declare-fun b!137337 () Bool)

(assert (=> b!137337 (= e!89384 (isDefined!125 (getValueByKey!171 (toList!855 lt!71199) lt!71192)))))

(assert (= (and d!42965 c!25796) b!137335))

(assert (= (and d!42965 (not c!25796)) b!137336))

(assert (= (and d!42965 (not res!65766)) b!137337))

(declare-fun m!163765 () Bool)

(assert (=> d!42965 m!163765))

(declare-fun m!163767 () Bool)

(assert (=> b!137335 m!163767))

(assert (=> b!137335 m!162971))

(assert (=> b!137335 m!162971))

(declare-fun m!163769 () Bool)

(assert (=> b!137335 m!163769))

(assert (=> b!137337 m!162971))

(assert (=> b!137337 m!162971))

(assert (=> b!137337 m!163769))

(assert (=> d!42783 d!42965))

(assert (=> d!42783 d!42779))

(assert (=> d!42783 d!42765))

(declare-fun d!42967 () Bool)

(declare-fun e!89386 () Bool)

(assert (=> d!42967 e!89386))

(declare-fun res!65767 () Bool)

(assert (=> d!42967 (=> (not res!65767) (not e!89386))))

(declare-fun lt!71703 () ListLongMap!1679)

(assert (=> d!42967 (= res!65767 (contains!892 lt!71703 (_1!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(declare-fun lt!71704 () List!1716)

(assert (=> d!42967 (= lt!71703 (ListLongMap!1680 lt!71704))))

(declare-fun lt!71705 () Unit!4286)

(declare-fun lt!71702 () Unit!4286)

(assert (=> d!42967 (= lt!71705 lt!71702)))

(assert (=> d!42967 (= (getValueByKey!171 lt!71704 (_1!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))) (Some!176 (_2!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(assert (=> d!42967 (= lt!71702 (lemmaContainsTupThenGetReturnValue!89 lt!71704 (_1!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (_2!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(assert (=> d!42967 (= lt!71704 (insertStrictlySorted!92 (toList!855 (ite c!25698 call!15064 (ite c!25693 call!15062 call!15063))) (_1!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (_2!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(assert (=> d!42967 (= (+!164 (ite c!25698 call!15064 (ite c!25693 call!15062 call!15063)) (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) lt!71703)))

(declare-fun b!137338 () Bool)

(declare-fun res!65768 () Bool)

(assert (=> b!137338 (=> (not res!65768) (not e!89386))))

(assert (=> b!137338 (= res!65768 (= (getValueByKey!171 (toList!855 lt!71703) (_1!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))) (Some!176 (_2!1310 (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))))

(declare-fun b!137339 () Bool)

(assert (=> b!137339 (= e!89386 (contains!895 (toList!855 lt!71703) (ite (or c!25698 c!25693) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (= (and d!42967 res!65767) b!137338))

(assert (= (and b!137338 res!65768) b!137339))

(declare-fun m!163771 () Bool)

(assert (=> d!42967 m!163771))

(declare-fun m!163773 () Bool)

(assert (=> d!42967 m!163773))

(declare-fun m!163775 () Bool)

(assert (=> d!42967 m!163775))

(declare-fun m!163777 () Bool)

(assert (=> d!42967 m!163777))

(declare-fun m!163779 () Bool)

(assert (=> b!137338 m!163779))

(declare-fun m!163781 () Bool)

(assert (=> b!137339 m!163781))

(assert (=> bm!15062 d!42967))

(declare-fun d!42969 () Bool)

(declare-fun e!89387 () Bool)

(assert (=> d!42969 e!89387))

(declare-fun res!65769 () Bool)

(assert (=> d!42969 (=> res!65769 e!89387)))

(declare-fun lt!71706 () Bool)

(assert (=> d!42969 (= res!65769 (not lt!71706))))

(declare-fun lt!71708 () Bool)

(assert (=> d!42969 (= lt!71706 lt!71708)))

(declare-fun lt!71709 () Unit!4286)

(declare-fun e!89388 () Unit!4286)

(assert (=> d!42969 (= lt!71709 e!89388)))

(declare-fun c!25797 () Bool)

(assert (=> d!42969 (= c!25797 lt!71708)))

(assert (=> d!42969 (= lt!71708 (containsKey!175 (toList!855 lt!71324) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!42969 (= (contains!892 lt!71324 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71706)))

(declare-fun b!137340 () Bool)

(declare-fun lt!71707 () Unit!4286)

(assert (=> b!137340 (= e!89388 lt!71707)))

(assert (=> b!137340 (= lt!71707 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71324) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> b!137340 (isDefined!125 (getValueByKey!171 (toList!855 lt!71324) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137341 () Bool)

(declare-fun Unit!4321 () Unit!4286)

(assert (=> b!137341 (= e!89388 Unit!4321)))

(declare-fun b!137342 () Bool)

(assert (=> b!137342 (= e!89387 (isDefined!125 (getValueByKey!171 (toList!855 lt!71324) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!42969 c!25797) b!137340))

(assert (= (and d!42969 (not c!25797)) b!137341))

(assert (= (and d!42969 (not res!65769)) b!137342))

(declare-fun m!163783 () Bool)

(assert (=> d!42969 m!163783))

(declare-fun m!163785 () Bool)

(assert (=> b!137340 m!163785))

(assert (=> b!137340 m!162919))

(assert (=> b!137340 m!162919))

(declare-fun m!163787 () Bool)

(assert (=> b!137340 m!163787))

(assert (=> b!137342 m!162919))

(assert (=> b!137342 m!162919))

(assert (=> b!137342 m!163787))

(assert (=> d!42765 d!42969))

(declare-fun e!89390 () Option!177)

(declare-fun b!137345 () Bool)

(assert (=> b!137345 (= e!89390 (getValueByKey!171 (t!6195 lt!71325) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137346 () Bool)

(assert (=> b!137346 (= e!89390 None!175)))

(declare-fun b!137344 () Bool)

(declare-fun e!89389 () Option!177)

(assert (=> b!137344 (= e!89389 e!89390)))

(declare-fun c!25799 () Bool)

(assert (=> b!137344 (= c!25799 (and ((_ is Cons!1712) lt!71325) (not (= (_1!1310 (h!2318 lt!71325)) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25798 () Bool)

(declare-fun d!42971 () Bool)

(assert (=> d!42971 (= c!25798 (and ((_ is Cons!1712) lt!71325) (= (_1!1310 (h!2318 lt!71325)) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42971 (= (getValueByKey!171 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89389)))

(declare-fun b!137343 () Bool)

(assert (=> b!137343 (= e!89389 (Some!176 (_2!1310 (h!2318 lt!71325))))))

(assert (= (and d!42971 c!25798) b!137343))

(assert (= (and d!42971 (not c!25798)) b!137344))

(assert (= (and b!137344 c!25799) b!137345))

(assert (= (and b!137344 (not c!25799)) b!137346))

(declare-fun m!163789 () Bool)

(assert (=> b!137345 m!163789))

(assert (=> d!42765 d!42971))

(declare-fun d!42973 () Bool)

(assert (=> d!42973 (= (getValueByKey!171 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71710 () Unit!4286)

(assert (=> d!42973 (= lt!71710 (choose!847 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun e!89391 () Bool)

(assert (=> d!42973 e!89391))

(declare-fun res!65770 () Bool)

(assert (=> d!42973 (=> (not res!65770) (not e!89391))))

(assert (=> d!42973 (= res!65770 (isStrictlySorted!318 lt!71325))))

(assert (=> d!42973 (= (lemmaContainsTupThenGetReturnValue!89 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71710)))

(declare-fun b!137347 () Bool)

(declare-fun res!65771 () Bool)

(assert (=> b!137347 (=> (not res!65771) (not e!89391))))

(assert (=> b!137347 (= res!65771 (containsKey!175 lt!71325 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137348 () Bool)

(assert (=> b!137348 (= e!89391 (contains!895 lt!71325 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!42973 res!65770) b!137347))

(assert (= (and b!137347 res!65771) b!137348))

(assert (=> d!42973 m!162913))

(declare-fun m!163791 () Bool)

(assert (=> d!42973 m!163791))

(declare-fun m!163793 () Bool)

(assert (=> d!42973 m!163793))

(declare-fun m!163795 () Bool)

(assert (=> b!137347 m!163795))

(declare-fun m!163797 () Bool)

(assert (=> b!137348 m!163797))

(assert (=> d!42765 d!42973))

(declare-fun b!137349 () Bool)

(declare-fun e!89396 () List!1716)

(declare-fun call!15127 () List!1716)

(assert (=> b!137349 (= e!89396 call!15127)))

(declare-fun e!89394 () List!1716)

(declare-fun b!137350 () Bool)

(assert (=> b!137350 (= e!89394 (insertStrictlySorted!92 (t!6195 (toList!855 lt!71199)) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15122 () Bool)

(declare-fun call!15125 () List!1716)

(assert (=> bm!15122 (= call!15125 call!15127)))

(declare-fun b!137351 () Bool)

(declare-fun e!89393 () List!1716)

(declare-fun call!15126 () List!1716)

(assert (=> b!137351 (= e!89393 call!15126)))

(declare-fun b!137352 () Bool)

(declare-fun c!25801 () Bool)

(declare-fun c!25803 () Bool)

(assert (=> b!137352 (= e!89394 (ite c!25801 (t!6195 (toList!855 lt!71199)) (ite c!25803 (Cons!1712 (h!2318 (toList!855 lt!71199)) (t!6195 (toList!855 lt!71199))) Nil!1713)))))

(declare-fun b!137353 () Bool)

(declare-fun e!89392 () Bool)

(declare-fun lt!71711 () List!1716)

(assert (=> b!137353 (= e!89392 (contains!895 lt!71711 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137354 () Bool)

(declare-fun e!89395 () List!1716)

(assert (=> b!137354 (= e!89396 e!89395)))

(assert (=> b!137354 (= c!25801 (and ((_ is Cons!1712) (toList!855 lt!71199)) (= (_1!1310 (h!2318 (toList!855 lt!71199))) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137355 () Bool)

(declare-fun res!65773 () Bool)

(assert (=> b!137355 (=> (not res!65773) (not e!89392))))

(assert (=> b!137355 (= res!65773 (containsKey!175 lt!71711 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15123 () Bool)

(assert (=> bm!15123 (= call!15126 call!15125)))

(declare-fun b!137356 () Bool)

(assert (=> b!137356 (= c!25803 (and ((_ is Cons!1712) (toList!855 lt!71199)) (bvsgt (_1!1310 (h!2318 (toList!855 lt!71199))) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> b!137356 (= e!89395 e!89393)))

(declare-fun b!137357 () Bool)

(assert (=> b!137357 (= e!89393 call!15126)))

(declare-fun c!25800 () Bool)

(declare-fun bm!15124 () Bool)

(assert (=> bm!15124 (= call!15127 ($colon$colon!92 e!89394 (ite c!25800 (h!2318 (toList!855 lt!71199)) (tuple2!2599 (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25802 () Bool)

(assert (=> bm!15124 (= c!25802 c!25800)))

(declare-fun d!42975 () Bool)

(assert (=> d!42975 e!89392))

(declare-fun res!65772 () Bool)

(assert (=> d!42975 (=> (not res!65772) (not e!89392))))

(assert (=> d!42975 (= res!65772 (isStrictlySorted!318 lt!71711))))

(assert (=> d!42975 (= lt!71711 e!89396)))

(assert (=> d!42975 (= c!25800 (and ((_ is Cons!1712) (toList!855 lt!71199)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71199))) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!42975 (isStrictlySorted!318 (toList!855 lt!71199))))

(assert (=> d!42975 (= (insertStrictlySorted!92 (toList!855 lt!71199) (_1!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71711)))

(declare-fun b!137358 () Bool)

(assert (=> b!137358 (= e!89395 call!15125)))

(assert (= (and d!42975 c!25800) b!137349))

(assert (= (and d!42975 (not c!25800)) b!137354))

(assert (= (and b!137354 c!25801) b!137358))

(assert (= (and b!137354 (not c!25801)) b!137356))

(assert (= (and b!137356 c!25803) b!137351))

(assert (= (and b!137356 (not c!25803)) b!137357))

(assert (= (or b!137351 b!137357) bm!15123))

(assert (= (or b!137358 bm!15123) bm!15122))

(assert (= (or b!137349 bm!15122) bm!15124))

(assert (= (and bm!15124 c!25802) b!137350))

(assert (= (and bm!15124 (not c!25802)) b!137352))

(assert (= (and d!42975 res!65772) b!137355))

(assert (= (and b!137355 res!65773) b!137353))

(declare-fun m!163799 () Bool)

(assert (=> b!137353 m!163799))

(declare-fun m!163801 () Bool)

(assert (=> b!137350 m!163801))

(declare-fun m!163803 () Bool)

(assert (=> d!42975 m!163803))

(declare-fun m!163805 () Bool)

(assert (=> d!42975 m!163805))

(declare-fun m!163807 () Bool)

(assert (=> b!137355 m!163807))

(declare-fun m!163809 () Bool)

(assert (=> bm!15124 m!163809))

(assert (=> d!42765 d!42975))

(declare-fun lt!71712 () Bool)

(declare-fun d!42977 () Bool)

(assert (=> d!42977 (= lt!71712 (select (content!134 (toList!855 lt!71331)) (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!89397 () Bool)

(assert (=> d!42977 (= lt!71712 e!89397)))

(declare-fun res!65774 () Bool)

(assert (=> d!42977 (=> (not res!65774) (not e!89397))))

(assert (=> d!42977 (= res!65774 ((_ is Cons!1712) (toList!855 lt!71331)))))

(assert (=> d!42977 (= (contains!895 (toList!855 lt!71331) (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71712)))

(declare-fun b!137359 () Bool)

(declare-fun e!89398 () Bool)

(assert (=> b!137359 (= e!89397 e!89398)))

(declare-fun res!65775 () Bool)

(assert (=> b!137359 (=> res!65775 e!89398)))

(assert (=> b!137359 (= res!65775 (= (h!2318 (toList!855 lt!71331)) (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137360 () Bool)

(assert (=> b!137360 (= e!89398 (contains!895 (t!6195 (toList!855 lt!71331)) (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!42977 res!65774) b!137359))

(assert (= (and b!137359 (not res!65775)) b!137360))

(declare-fun m!163811 () Bool)

(assert (=> d!42977 m!163811))

(declare-fun m!163813 () Bool)

(assert (=> d!42977 m!163813))

(declare-fun m!163815 () Bool)

(assert (=> b!137360 m!163815))

(assert (=> b!136808 d!42977))

(declare-fun lt!71713 () Bool)

(declare-fun d!42979 () Bool)

(assert (=> d!42979 (= lt!71713 (select (content!134 (toList!855 lt!71370)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!89399 () Bool)

(assert (=> d!42979 (= lt!71713 e!89399)))

(declare-fun res!65776 () Bool)

(assert (=> d!42979 (=> (not res!65776) (not e!89399))))

(assert (=> d!42979 (= res!65776 ((_ is Cons!1712) (toList!855 lt!71370)))))

(assert (=> d!42979 (= (contains!895 (toList!855 lt!71370) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71713)))

(declare-fun b!137361 () Bool)

(declare-fun e!89400 () Bool)

(assert (=> b!137361 (= e!89399 e!89400)))

(declare-fun res!65777 () Bool)

(assert (=> b!137361 (=> res!65777 e!89400)))

(assert (=> b!137361 (= res!65777 (= (h!2318 (toList!855 lt!71370)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!137362 () Bool)

(assert (=> b!137362 (= e!89400 (contains!895 (t!6195 (toList!855 lt!71370)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!42979 res!65776) b!137361))

(assert (= (and b!137361 (not res!65777)) b!137362))

(declare-fun m!163817 () Bool)

(assert (=> d!42979 m!163817))

(declare-fun m!163819 () Bool)

(assert (=> d!42979 m!163819))

(declare-fun m!163821 () Bool)

(assert (=> b!137362 m!163821))

(assert (=> b!136855 d!42979))

(declare-fun b!137363 () Bool)

(declare-fun res!65778 () Bool)

(declare-fun e!89401 () Bool)

(assert (=> b!137363 (=> (not res!65778) (not e!89401))))

(assert (=> b!137363 (= res!65778 (and (= (size!2532 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001)) (= (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (size!2532 (_values!2871 (v!3215 (underlying!457 thiss!992))))) (bvsge (_size!603 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!603 (v!3215 (underlying!457 thiss!992))) (bvadd (mask!7201 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun d!42981 () Bool)

(declare-fun res!65779 () Bool)

(assert (=> d!42981 (=> (not res!65779) (not e!89401))))

(assert (=> d!42981 (= res!65779 (validMask!0 (mask!7201 (v!3215 (underlying!457 thiss!992)))))))

(assert (=> d!42981 (= (simpleValid!93 (v!3215 (underlying!457 thiss!992))) e!89401)))

(declare-fun b!137366 () Bool)

(assert (=> b!137366 (= e!89401 (and (bvsge (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!603 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun b!137364 () Bool)

(declare-fun res!65781 () Bool)

(assert (=> b!137364 (=> (not res!65781) (not e!89401))))

(assert (=> b!137364 (= res!65781 (bvsge (size!2537 (v!3215 (underlying!457 thiss!992))) (_size!603 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!137365 () Bool)

(declare-fun res!65780 () Bool)

(assert (=> b!137365 (=> (not res!65780) (not e!89401))))

(assert (=> b!137365 (= res!65780 (= (size!2537 (v!3215 (underlying!457 thiss!992))) (bvadd (_size!603 (v!3215 (underlying!457 thiss!992))) (bvsdiv (bvadd (extraKeys!2649 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!42981 res!65779) b!137363))

(assert (= (and b!137363 res!65778) b!137364))

(assert (= (and b!137364 res!65781) b!137365))

(assert (= (and b!137365 res!65780) b!137366))

(assert (=> d!42981 m!162611))

(declare-fun m!163823 () Bool)

(assert (=> b!137364 m!163823))

(assert (=> b!137365 m!163823))

(assert (=> d!42815 d!42981))

(declare-fun d!42983 () Bool)

(declare-fun e!89402 () Bool)

(assert (=> d!42983 e!89402))

(declare-fun res!65782 () Bool)

(assert (=> d!42983 (=> res!65782 e!89402)))

(declare-fun lt!71714 () Bool)

(assert (=> d!42983 (= res!65782 (not lt!71714))))

(declare-fun lt!71716 () Bool)

(assert (=> d!42983 (= lt!71714 lt!71716)))

(declare-fun lt!71717 () Unit!4286)

(declare-fun e!89403 () Unit!4286)

(assert (=> d!42983 (= lt!71717 e!89403)))

(declare-fun c!25804 () Bool)

(assert (=> d!42983 (= c!25804 lt!71716)))

(assert (=> d!42983 (= lt!71716 (containsKey!175 (toList!855 lt!71235) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!42983 (= (contains!892 lt!71235 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) lt!71714)))

(declare-fun b!137367 () Bool)

(declare-fun lt!71715 () Unit!4286)

(assert (=> b!137367 (= e!89403 lt!71715)))

(assert (=> b!137367 (= lt!71715 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71235) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137367 (isDefined!125 (getValueByKey!171 (toList!855 lt!71235) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137368 () Bool)

(declare-fun Unit!4322 () Unit!4286)

(assert (=> b!137368 (= e!89403 Unit!4322)))

(declare-fun b!137369 () Bool)

(assert (=> b!137369 (= e!89402 (isDefined!125 (getValueByKey!171 (toList!855 lt!71235) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!42983 c!25804) b!137367))

(assert (= (and d!42983 (not c!25804)) b!137368))

(assert (= (and d!42983 (not res!65782)) b!137369))

(assert (=> d!42983 m!162693))

(declare-fun m!163825 () Bool)

(assert (=> d!42983 m!163825))

(assert (=> b!137367 m!162693))

(declare-fun m!163827 () Bool)

(assert (=> b!137367 m!163827))

(assert (=> b!137367 m!162693))

(assert (=> b!137367 m!163313))

(assert (=> b!137367 m!163313))

(declare-fun m!163829 () Bool)

(assert (=> b!137367 m!163829))

(assert (=> b!137369 m!162693))

(assert (=> b!137369 m!163313))

(assert (=> b!137369 m!163313))

(assert (=> b!137369 m!163829))

(assert (=> b!136700 d!42983))

(declare-fun d!42985 () Bool)

(declare-fun res!65783 () Bool)

(declare-fun e!89404 () Bool)

(assert (=> d!42985 (=> res!65783 e!89404)))

(assert (=> d!42985 (= res!65783 (= (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!42985 (= (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!89404)))

(declare-fun b!137370 () Bool)

(declare-fun e!89405 () Bool)

(assert (=> b!137370 (= e!89404 e!89405)))

(declare-fun res!65784 () Bool)

(assert (=> b!137370 (=> (not res!65784) (not e!89405))))

(assert (=> b!137370 (= res!65784 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137371 () Bool)

(assert (=> b!137371 (= e!89405 (arrayContainsKey!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!42985 (not res!65783)) b!137370))

(assert (= (and b!137370 res!65784) b!137371))

(assert (=> d!42985 m!163709))

(assert (=> b!137371 m!162421))

(declare-fun m!163831 () Bool)

(assert (=> b!137371 m!163831))

(assert (=> b!136977 d!42985))

(declare-fun d!42987 () Bool)

(assert (=> d!42987 (= (inRange!0 (ite c!25691 (index!3278 lt!71459) (ite c!25689 (index!3277 lt!71457) (index!3280 lt!71457))) (mask!7201 newMap!16)) (and (bvsge (ite c!25691 (index!3278 lt!71459) (ite c!25689 (index!3277 lt!71457) (index!3280 lt!71457))) #b00000000000000000000000000000000) (bvslt (ite c!25691 (index!3278 lt!71459) (ite c!25689 (index!3277 lt!71457) (index!3280 lt!71457))) (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15058 d!42987))

(declare-fun d!42989 () Bool)

(declare-fun e!89406 () Bool)

(assert (=> d!42989 e!89406))

(declare-fun res!65785 () Bool)

(assert (=> d!42989 (=> res!65785 e!89406)))

(declare-fun lt!71718 () Bool)

(assert (=> d!42989 (= res!65785 (not lt!71718))))

(declare-fun lt!71720 () Bool)

(assert (=> d!42989 (= lt!71718 lt!71720)))

(declare-fun lt!71721 () Unit!4286)

(declare-fun e!89407 () Unit!4286)

(assert (=> d!42989 (= lt!71721 e!89407)))

(declare-fun c!25805 () Bool)

(assert (=> d!42989 (= c!25805 lt!71720)))

(assert (=> d!42989 (= lt!71720 (containsKey!175 (toList!855 lt!71350) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!42989 (= (contains!892 lt!71350 #b0000000000000000000000000000000000000000000000000000000000000000) lt!71718)))

(declare-fun b!137372 () Bool)

(declare-fun lt!71719 () Unit!4286)

(assert (=> b!137372 (= e!89407 lt!71719)))

(assert (=> b!137372 (= lt!71719 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71350) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137372 (isDefined!125 (getValueByKey!171 (toList!855 lt!71350) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137373 () Bool)

(declare-fun Unit!4323 () Unit!4286)

(assert (=> b!137373 (= e!89407 Unit!4323)))

(declare-fun b!137374 () Bool)

(assert (=> b!137374 (= e!89406 (isDefined!125 (getValueByKey!171 (toList!855 lt!71350) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!42989 c!25805) b!137372))

(assert (= (and d!42989 (not c!25805)) b!137373))

(assert (= (and d!42989 (not res!65785)) b!137374))

(declare-fun m!163833 () Bool)

(assert (=> d!42989 m!163833))

(declare-fun m!163835 () Bool)

(assert (=> b!137372 m!163835))

(declare-fun m!163837 () Bool)

(assert (=> b!137372 m!163837))

(assert (=> b!137372 m!163837))

(declare-fun m!163839 () Bool)

(assert (=> b!137372 m!163839))

(assert (=> b!137374 m!163837))

(assert (=> b!137374 m!163837))

(assert (=> b!137374 m!163839))

(assert (=> d!42775 d!42989))

(assert (=> d!42775 d!42799))

(declare-fun d!42991 () Bool)

(assert (=> d!42991 (isDefined!125 (getValueByKey!171 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun lt!71722 () Unit!4286)

(assert (=> d!42991 (= lt!71722 (choose!842 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun e!89408 () Bool)

(assert (=> d!42991 e!89408))

(declare-fun res!65786 () Bool)

(assert (=> d!42991 (=> (not res!65786) (not e!89408))))

(assert (=> d!42991 (= res!65786 (isStrictlySorted!318 (toList!855 e!88927)))))

(assert (=> d!42991 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71722)))

(declare-fun b!137375 () Bool)

(assert (=> b!137375 (= e!89408 (containsKey!175 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!42991 res!65786) b!137375))

(assert (=> d!42991 m!162421))

(assert (=> d!42991 m!163007))

(assert (=> d!42991 m!163007))

(assert (=> d!42991 m!163009))

(assert (=> d!42991 m!162421))

(declare-fun m!163841 () Bool)

(assert (=> d!42991 m!163841))

(declare-fun m!163843 () Bool)

(assert (=> d!42991 m!163843))

(assert (=> b!137375 m!162421))

(assert (=> b!137375 m!163003))

(assert (=> b!136851 d!42991))

(declare-fun d!42993 () Bool)

(assert (=> d!42993 (= (isDefined!125 (getValueByKey!171 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!171 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun bs!5741 () Bool)

(assert (= bs!5741 d!42993))

(assert (=> bs!5741 m!163007))

(declare-fun m!163845 () Bool)

(assert (=> bs!5741 m!163845))

(assert (=> b!136851 d!42993))

(declare-fun b!137378 () Bool)

(declare-fun e!89410 () Option!177)

(assert (=> b!137378 (= e!89410 (getValueByKey!171 (t!6195 (toList!855 e!88927)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137379 () Bool)

(assert (=> b!137379 (= e!89410 None!175)))

(declare-fun b!137377 () Bool)

(declare-fun e!89409 () Option!177)

(assert (=> b!137377 (= e!89409 e!89410)))

(declare-fun c!25807 () Bool)

(assert (=> b!137377 (= c!25807 (and ((_ is Cons!1712) (toList!855 e!88927)) (not (= (_1!1310 (h!2318 (toList!855 e!88927))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun d!42995 () Bool)

(declare-fun c!25806 () Bool)

(assert (=> d!42995 (= c!25806 (and ((_ is Cons!1712) (toList!855 e!88927)) (= (_1!1310 (h!2318 (toList!855 e!88927))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!42995 (= (getValueByKey!171 (toList!855 e!88927) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89409)))

(declare-fun b!137376 () Bool)

(assert (=> b!137376 (= e!89409 (Some!176 (_2!1310 (h!2318 (toList!855 e!88927)))))))

(assert (= (and d!42995 c!25806) b!137376))

(assert (= (and d!42995 (not c!25806)) b!137377))

(assert (= (and b!137377 c!25807) b!137378))

(assert (= (and b!137377 (not c!25807)) b!137379))

(assert (=> b!137378 m!162421))

(declare-fun m!163847 () Bool)

(assert (=> b!137378 m!163847))

(assert (=> b!136851 d!42995))

(declare-fun d!42997 () Bool)

(assert (=> d!42997 (= (inRange!0 (index!3278 lt!71311) (mask!7201 newMap!16)) (and (bvsge (index!3278 lt!71311) #b00000000000000000000000000000000) (bvslt (index!3278 lt!71311) (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!136792 d!42997))

(assert (=> d!42821 d!42871))

(assert (=> b!136988 d!42887))

(declare-fun d!42999 () Bool)

(declare-fun e!89411 () Bool)

(assert (=> d!42999 e!89411))

(declare-fun res!65787 () Bool)

(assert (=> d!42999 (=> (not res!65787) (not e!89411))))

(declare-fun lt!71724 () ListLongMap!1679)

(assert (=> d!42999 (= res!65787 (contains!892 lt!71724 (_1!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(declare-fun lt!71725 () List!1716)

(assert (=> d!42999 (= lt!71724 (ListLongMap!1680 lt!71725))))

(declare-fun lt!71726 () Unit!4286)

(declare-fun lt!71723 () Unit!4286)

(assert (=> d!42999 (= lt!71726 lt!71723)))

(assert (=> d!42999 (= (getValueByKey!171 lt!71725 (_1!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(assert (=> d!42999 (= lt!71723 (lemmaContainsTupThenGetReturnValue!89 lt!71725 (_1!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (_2!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(assert (=> d!42999 (= lt!71725 (insertStrictlySorted!92 (toList!855 (ite c!25627 call!15029 (ite c!25622 call!15027 call!15028))) (_1!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (_2!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(assert (=> d!42999 (= (+!164 (ite c!25627 call!15029 (ite c!25622 call!15027 call!15028)) (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) lt!71724)))

(declare-fun b!137380 () Bool)

(declare-fun res!65788 () Bool)

(assert (=> b!137380 (=> (not res!65788) (not e!89411))))

(assert (=> b!137380 (= res!65788 (= (getValueByKey!171 (toList!855 lt!71724) (_1!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))))

(declare-fun b!137381 () Bool)

(assert (=> b!137381 (= e!89411 (contains!895 (toList!855 lt!71724) (ite (or c!25627 c!25622) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (= (and d!42999 res!65787) b!137380))

(assert (= (and b!137380 res!65788) b!137381))

(declare-fun m!163849 () Bool)

(assert (=> d!42999 m!163849))

(declare-fun m!163851 () Bool)

(assert (=> d!42999 m!163851))

(declare-fun m!163853 () Bool)

(assert (=> d!42999 m!163853))

(declare-fun m!163855 () Bool)

(assert (=> d!42999 m!163855))

(declare-fun m!163857 () Bool)

(assert (=> b!137380 m!163857))

(declare-fun m!163859 () Bool)

(assert (=> b!137381 m!163859))

(assert (=> bm!15027 d!42999))

(assert (=> b!136941 d!42751))

(declare-fun d!43001 () Bool)

(declare-fun res!65789 () Bool)

(declare-fun e!89412 () Bool)

(assert (=> d!43001 (=> res!65789 e!89412)))

(assert (=> d!43001 (= res!65789 (and ((_ is Cons!1712) (toList!855 lt!71204)) (= (_1!1310 (h!2318 (toList!855 lt!71204))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43001 (= (containsKey!175 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000) e!89412)))

(declare-fun b!137382 () Bool)

(declare-fun e!89413 () Bool)

(assert (=> b!137382 (= e!89412 e!89413)))

(declare-fun res!65790 () Bool)

(assert (=> b!137382 (=> (not res!65790) (not e!89413))))

(assert (=> b!137382 (= res!65790 (and (or (not ((_ is Cons!1712) (toList!855 lt!71204))) (bvsle (_1!1310 (h!2318 (toList!855 lt!71204))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!855 lt!71204)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71204))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137383 () Bool)

(assert (=> b!137383 (= e!89413 (containsKey!175 (t!6195 (toList!855 lt!71204)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43001 (not res!65789)) b!137382))

(assert (= (and b!137382 res!65790) b!137383))

(declare-fun m!163861 () Bool)

(assert (=> b!137383 m!163861))

(assert (=> d!42817 d!43001))

(declare-fun d!43003 () Bool)

(assert (=> d!43003 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!71727 () Unit!4286)

(assert (=> d!43003 (= lt!71727 (choose!842 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!89414 () Bool)

(assert (=> d!43003 e!89414))

(declare-fun res!65791 () Bool)

(assert (=> d!43003 (=> (not res!65791) (not e!89414))))

(assert (=> d!43003 (= res!65791 (isStrictlySorted!318 (toList!855 lt!71204)))))

(assert (=> d!43003 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!71727)))

(declare-fun b!137384 () Bool)

(assert (=> b!137384 (= e!89414 (containsKey!175 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!43003 res!65791) b!137384))

(assert (=> d!43003 m!162605))

(assert (=> d!43003 m!162755))

(assert (=> d!43003 m!162755))

(assert (=> d!43003 m!162757))

(assert (=> d!43003 m!162605))

(declare-fun m!163863 () Bool)

(assert (=> d!43003 m!163863))

(declare-fun m!163865 () Bool)

(assert (=> d!43003 m!163865))

(assert (=> b!137384 m!162605))

(assert (=> b!137384 m!162751))

(assert (=> b!136713 d!43003))

(declare-fun d!43005 () Bool)

(assert (=> d!43005 (= (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!416 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!5742 () Bool)

(assert (= bs!5742 d!43005))

(assert (=> bs!5742 m!162755))

(declare-fun m!163867 () Bool)

(assert (=> bs!5742 m!163867))

(assert (=> b!136713 d!43005))

(declare-fun e!89416 () Option!177)

(declare-fun b!137387 () Bool)

(assert (=> b!137387 (= e!89416 (getValueByKey!171 (t!6195 (toList!855 lt!71204)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!137388 () Bool)

(assert (=> b!137388 (= e!89416 None!175)))

(declare-fun b!137386 () Bool)

(declare-fun e!89415 () Option!177)

(assert (=> b!137386 (= e!89415 e!89416)))

(declare-fun c!25809 () Bool)

(assert (=> b!137386 (= c!25809 (and ((_ is Cons!1712) (toList!855 lt!71204)) (not (= (_1!1310 (h!2318 (toList!855 lt!71204))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun c!25808 () Bool)

(declare-fun d!43007 () Bool)

(assert (=> d!43007 (= c!25808 (and ((_ is Cons!1712) (toList!855 lt!71204)) (= (_1!1310 (h!2318 (toList!855 lt!71204))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!43007 (= (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!89415)))

(declare-fun b!137385 () Bool)

(assert (=> b!137385 (= e!89415 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71204)))))))

(assert (= (and d!43007 c!25808) b!137385))

(assert (= (and d!43007 (not c!25808)) b!137386))

(assert (= (and b!137386 c!25809) b!137387))

(assert (= (and b!137386 (not c!25809)) b!137388))

(assert (=> b!137387 m!162605))

(declare-fun m!163869 () Bool)

(assert (=> b!137387 m!163869))

(assert (=> b!136713 d!43007))

(assert (=> d!42725 d!42871))

(assert (=> bm!15055 d!42735))

(declare-fun b!137389 () Bool)

(declare-fun res!65792 () Bool)

(declare-fun e!89417 () Bool)

(assert (=> b!137389 (=> (not res!65792) (not e!89417))))

(assert (=> b!137389 (= res!65792 (and (= (size!2532 (_values!2871 (_2!1311 lt!71138))) (bvadd (mask!7201 (_2!1311 lt!71138)) #b00000000000000000000000000000001)) (= (size!2531 (_keys!4640 (_2!1311 lt!71138))) (size!2532 (_values!2871 (_2!1311 lt!71138)))) (bvsge (_size!603 (_2!1311 lt!71138)) #b00000000000000000000000000000000) (bvsle (_size!603 (_2!1311 lt!71138)) (bvadd (mask!7201 (_2!1311 lt!71138)) #b00000000000000000000000000000001))))))

(declare-fun d!43009 () Bool)

(declare-fun res!65793 () Bool)

(assert (=> d!43009 (=> (not res!65793) (not e!89417))))

(assert (=> d!43009 (= res!65793 (validMask!0 (mask!7201 (_2!1311 lt!71138))))))

(assert (=> d!43009 (= (simpleValid!93 (_2!1311 lt!71138)) e!89417)))

(declare-fun b!137392 () Bool)

(assert (=> b!137392 (= e!89417 (and (bvsge (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000000) (bvsle (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000011) (bvsge (_vacant!603 (_2!1311 lt!71138)) #b00000000000000000000000000000000)))))

(declare-fun b!137390 () Bool)

(declare-fun res!65795 () Bool)

(assert (=> b!137390 (=> (not res!65795) (not e!89417))))

(assert (=> b!137390 (= res!65795 (bvsge (size!2537 (_2!1311 lt!71138)) (_size!603 (_2!1311 lt!71138))))))

(declare-fun b!137391 () Bool)

(declare-fun res!65794 () Bool)

(assert (=> b!137391 (=> (not res!65794) (not e!89417))))

(assert (=> b!137391 (= res!65794 (= (size!2537 (_2!1311 lt!71138)) (bvadd (_size!603 (_2!1311 lt!71138)) (bvsdiv (bvadd (extraKeys!2649 (_2!1311 lt!71138)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!43009 res!65793) b!137389))

(assert (= (and b!137389 res!65792) b!137390))

(assert (= (and b!137390 res!65795) b!137391))

(assert (= (and b!137391 res!65794) b!137392))

(assert (=> d!43009 m!163257))

(declare-fun m!163871 () Bool)

(assert (=> b!137390 m!163871))

(assert (=> b!137391 m!163871))

(assert (=> d!42807 d!43009))

(declare-fun d!43011 () Bool)

(assert (=> d!43011 (= (isDefined!125 (getValueByKey!171 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) (not (isEmpty!416 (getValueByKey!171 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun bs!5743 () Bool)

(assert (= bs!5743 d!43011))

(assert (=> bs!5743 m!162815))

(declare-fun m!163873 () Bool)

(assert (=> bs!5743 m!163873))

(assert (=> b!136739 d!43011))

(declare-fun e!89419 () Option!177)

(declare-fun b!137395 () Bool)

(assert (=> b!137395 (= e!89419 (getValueByKey!171 (t!6195 (toList!855 call!14979)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137396 () Bool)

(assert (=> b!137396 (= e!89419 None!175)))

(declare-fun b!137394 () Bool)

(declare-fun e!89418 () Option!177)

(assert (=> b!137394 (= e!89418 e!89419)))

(declare-fun c!25811 () Bool)

(assert (=> b!137394 (= c!25811 (and ((_ is Cons!1712) (toList!855 call!14979)) (not (= (_1!1310 (h!2318 (toList!855 call!14979))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun c!25810 () Bool)

(declare-fun d!43013 () Bool)

(assert (=> d!43013 (= c!25810 (and ((_ is Cons!1712) (toList!855 call!14979)) (= (_1!1310 (h!2318 (toList!855 call!14979))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!43013 (= (getValueByKey!171 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89418)))

(declare-fun b!137393 () Bool)

(assert (=> b!137393 (= e!89418 (Some!176 (_2!1310 (h!2318 (toList!855 call!14979)))))))

(assert (= (and d!43013 c!25810) b!137393))

(assert (= (and d!43013 (not c!25810)) b!137394))

(assert (= (and b!137394 c!25811) b!137395))

(assert (= (and b!137394 (not c!25811)) b!137396))

(assert (=> b!137395 m!162421))

(declare-fun m!163875 () Bool)

(assert (=> b!137395 m!163875))

(assert (=> b!136739 d!43013))

(assert (=> b!137007 d!42845))

(declare-fun d!43015 () Bool)

(assert (=> d!43015 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))

(declare-fun lt!71728 () Unit!4286)

(assert (=> d!43015 (= lt!71728 (choose!842 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))

(declare-fun e!89420 () Bool)

(assert (=> d!43015 e!89420))

(declare-fun res!65796 () Bool)

(assert (=> d!43015 (=> (not res!65796) (not e!89420))))

(assert (=> d!43015 (= res!65796 (isStrictlySorted!318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43015 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210) lt!71728)))

(declare-fun b!137397 () Bool)

(assert (=> b!137397 (= e!89420 (containsKey!175 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))

(assert (= (and d!43015 res!65796) b!137397))

(assert (=> d!43015 m!162895))

(assert (=> d!43015 m!162895))

(assert (=> d!43015 m!162897))

(declare-fun m!163877 () Bool)

(assert (=> d!43015 m!163877))

(declare-fun m!163879 () Bool)

(assert (=> d!43015 m!163879))

(assert (=> b!137397 m!162891))

(assert (=> b!136798 d!43015))

(declare-fun d!43017 () Bool)

(assert (=> d!43017 (= (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210)) (not (isEmpty!416 (getValueByKey!171 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210))))))

(declare-fun bs!5744 () Bool)

(assert (= bs!5744 d!43017))

(assert (=> bs!5744 m!162895))

(declare-fun m!163881 () Bool)

(assert (=> bs!5744 m!163881))

(assert (=> b!136798 d!43017))

(declare-fun b!137400 () Bool)

(declare-fun e!89422 () Option!177)

(assert (=> b!137400 (= e!89422 (getValueByKey!171 (t!6195 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71210))))

(declare-fun b!137401 () Bool)

(assert (=> b!137401 (= e!89422 None!175)))

(declare-fun b!137399 () Bool)

(declare-fun e!89421 () Option!177)

(assert (=> b!137399 (= e!89421 e!89422)))

(declare-fun c!25813 () Bool)

(assert (=> b!137399 (= c!25813 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) (not (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71210))))))

(declare-fun c!25812 () Bool)

(declare-fun d!43019 () Bool)

(assert (=> d!43019 (= c!25812 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71210)))))

(assert (=> d!43019 (= (getValueByKey!171 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71210) e!89421)))

(declare-fun b!137398 () Bool)

(assert (=> b!137398 (= e!89421 (Some!176 (_2!1310 (h!2318 (toList!855 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(assert (= (and d!43019 c!25812) b!137398))

(assert (= (and d!43019 (not c!25812)) b!137399))

(assert (= (and b!137399 c!25813) b!137400))

(assert (= (and b!137399 (not c!25813)) b!137401))

(declare-fun m!163883 () Bool)

(assert (=> b!137400 m!163883))

(assert (=> b!136798 d!43019))

(declare-fun d!43021 () Bool)

(declare-fun lt!71731 () Bool)

(declare-fun content!135 (List!1719) (InoxSet (_ BitVec 64)))

(assert (=> d!43021 (= lt!71731 (select (content!135 Nil!1716) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!89427 () Bool)

(assert (=> d!43021 (= lt!71731 e!89427)))

(declare-fun res!65801 () Bool)

(assert (=> d!43021 (=> (not res!65801) (not e!89427))))

(assert (=> d!43021 (= res!65801 ((_ is Cons!1715) Nil!1716))))

(assert (=> d!43021 (= (contains!896 Nil!1716 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) lt!71731)))

(declare-fun b!137406 () Bool)

(declare-fun e!89428 () Bool)

(assert (=> b!137406 (= e!89427 e!89428)))

(declare-fun res!65802 () Bool)

(assert (=> b!137406 (=> res!65802 e!89428)))

(assert (=> b!137406 (= res!65802 (= (h!2321 Nil!1716) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137407 () Bool)

(assert (=> b!137407 (= e!89428 (contains!896 (t!6206 Nil!1716) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!43021 res!65801) b!137406))

(assert (= (and b!137406 (not res!65802)) b!137407))

(declare-fun m!163885 () Bool)

(assert (=> d!43021 m!163885))

(assert (=> d!43021 m!162693))

(declare-fun m!163887 () Bool)

(assert (=> d!43021 m!163887))

(assert (=> b!137407 m!162693))

(declare-fun m!163889 () Bool)

(assert (=> b!137407 m!163889))

(assert (=> b!136887 d!43021))

(declare-fun d!43023 () Bool)

(declare-fun lt!71732 () Bool)

(assert (=> d!43023 (= lt!71732 (select (content!134 (toList!855 lt!71324)) (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!89429 () Bool)

(assert (=> d!43023 (= lt!71732 e!89429)))

(declare-fun res!65803 () Bool)

(assert (=> d!43023 (=> (not res!65803) (not e!89429))))

(assert (=> d!43023 (= res!65803 ((_ is Cons!1712) (toList!855 lt!71324)))))

(assert (=> d!43023 (= (contains!895 (toList!855 lt!71324) (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71732)))

(declare-fun b!137408 () Bool)

(declare-fun e!89430 () Bool)

(assert (=> b!137408 (= e!89429 e!89430)))

(declare-fun res!65804 () Bool)

(assert (=> b!137408 (=> res!65804 e!89430)))

(assert (=> b!137408 (= res!65804 (= (h!2318 (toList!855 lt!71324)) (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137409 () Bool)

(assert (=> b!137409 (= e!89430 (contains!895 (t!6195 (toList!855 lt!71324)) (tuple2!2599 lt!71209 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!43023 res!65803) b!137408))

(assert (= (and b!137408 (not res!65804)) b!137409))

(declare-fun m!163891 () Bool)

(assert (=> d!43023 m!163891))

(declare-fun m!163893 () Bool)

(assert (=> d!43023 m!163893))

(declare-fun m!163895 () Bool)

(assert (=> b!137409 m!163895))

(assert (=> b!136802 d!43023))

(assert (=> d!42769 d!42761))

(assert (=> d!42769 d!42763))

(assert (=> d!42769 d!42785))

(declare-fun d!43025 () Bool)

(assert (=> d!43025 (= (apply!117 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71206) (apply!117 lt!71200 lt!71206))))

(assert (=> d!43025 true))

(declare-fun _$34!998 () Unit!4286)

(assert (=> d!43025 (= (choose!845 lt!71200 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71206) _$34!998)))

(declare-fun bs!5745 () Bool)

(assert (= bs!5745 d!43025))

(assert (=> bs!5745 m!162631))

(assert (=> bs!5745 m!162631))

(assert (=> bs!5745 m!162633))

(assert (=> bs!5745 m!162655))

(assert (=> d!42769 d!43025))

(declare-fun d!43027 () Bool)

(declare-fun e!89431 () Bool)

(assert (=> d!43027 e!89431))

(declare-fun res!65805 () Bool)

(assert (=> d!43027 (=> res!65805 e!89431)))

(declare-fun lt!71733 () Bool)

(assert (=> d!43027 (= res!65805 (not lt!71733))))

(declare-fun lt!71735 () Bool)

(assert (=> d!43027 (= lt!71733 lt!71735)))

(declare-fun lt!71736 () Unit!4286)

(declare-fun e!89432 () Unit!4286)

(assert (=> d!43027 (= lt!71736 e!89432)))

(declare-fun c!25814 () Bool)

(assert (=> d!43027 (= c!25814 lt!71735)))

(assert (=> d!43027 (= lt!71735 (containsKey!175 (toList!855 lt!71200) lt!71206))))

(assert (=> d!43027 (= (contains!892 lt!71200 lt!71206) lt!71733)))

(declare-fun b!137410 () Bool)

(declare-fun lt!71734 () Unit!4286)

(assert (=> b!137410 (= e!89432 lt!71734)))

(assert (=> b!137410 (= lt!71734 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71200) lt!71206))))

(assert (=> b!137410 (isDefined!125 (getValueByKey!171 (toList!855 lt!71200) lt!71206))))

(declare-fun b!137411 () Bool)

(declare-fun Unit!4324 () Unit!4286)

(assert (=> b!137411 (= e!89432 Unit!4324)))

(declare-fun b!137412 () Bool)

(assert (=> b!137412 (= e!89431 (isDefined!125 (getValueByKey!171 (toList!855 lt!71200) lt!71206)))))

(assert (= (and d!43027 c!25814) b!137410))

(assert (= (and d!43027 (not c!25814)) b!137411))

(assert (= (and d!43027 (not res!65805)) b!137412))

(declare-fun m!163897 () Bool)

(assert (=> d!43027 m!163897))

(declare-fun m!163899 () Bool)

(assert (=> b!137410 m!163899))

(assert (=> b!137410 m!162903))

(assert (=> b!137410 m!162903))

(declare-fun m!163901 () Bool)

(assert (=> b!137410 m!163901))

(assert (=> b!137412 m!162903))

(assert (=> b!137412 m!162903))

(assert (=> b!137412 m!163901))

(assert (=> d!42769 d!43027))

(assert (=> d!42827 d!42871))

(declare-fun d!43029 () Bool)

(declare-fun res!65806 () Bool)

(declare-fun e!89433 () Bool)

(assert (=> d!43029 (=> res!65806 e!89433)))

(assert (=> d!43029 (= res!65806 (and ((_ is Cons!1712) (toList!855 lt!71204)) (= (_1!1310 (h!2318 (toList!855 lt!71204))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!43029 (= (containsKey!175 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000) e!89433)))

(declare-fun b!137413 () Bool)

(declare-fun e!89434 () Bool)

(assert (=> b!137413 (= e!89433 e!89434)))

(declare-fun res!65807 () Bool)

(assert (=> b!137413 (=> (not res!65807) (not e!89434))))

(assert (=> b!137413 (= res!65807 (and (or (not ((_ is Cons!1712) (toList!855 lt!71204))) (bvsle (_1!1310 (h!2318 (toList!855 lt!71204))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1712) (toList!855 lt!71204)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71204))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137414 () Bool)

(assert (=> b!137414 (= e!89434 (containsKey!175 (t!6195 (toList!855 lt!71204)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43029 (not res!65806)) b!137413))

(assert (= (and b!137413 res!65807) b!137414))

(declare-fun m!163903 () Bool)

(assert (=> b!137414 m!163903))

(assert (=> d!42753 d!43029))

(declare-fun d!43031 () Bool)

(assert (=> d!43031 (= (get!1493 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!3221 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!42717 d!43031))

(assert (=> d!42717 d!42843))

(assert (=> b!136839 d!42855))

(assert (=> d!42755 d!42757))

(assert (=> d!42755 d!42781))

(declare-fun d!43033 () Bool)

(assert (=> d!43033 (contains!892 (+!164 lt!71198 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71210)))

(assert (=> d!43033 true))

(declare-fun _$35!388 () Unit!4286)

(assert (=> d!43033 (= (choose!844 lt!71198 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71210) _$35!388)))

(declare-fun bs!5746 () Bool)

(assert (= bs!5746 d!43033))

(assert (=> bs!5746 m!162645))

(assert (=> bs!5746 m!162645))

(assert (=> bs!5746 m!162649))

(assert (=> d!42755 d!43033))

(declare-fun d!43035 () Bool)

(declare-fun e!89435 () Bool)

(assert (=> d!43035 e!89435))

(declare-fun res!65808 () Bool)

(assert (=> d!43035 (=> res!65808 e!89435)))

(declare-fun lt!71737 () Bool)

(assert (=> d!43035 (= res!65808 (not lt!71737))))

(declare-fun lt!71739 () Bool)

(assert (=> d!43035 (= lt!71737 lt!71739)))

(declare-fun lt!71740 () Unit!4286)

(declare-fun e!89436 () Unit!4286)

(assert (=> d!43035 (= lt!71740 e!89436)))

(declare-fun c!25815 () Bool)

(assert (=> d!43035 (= c!25815 lt!71739)))

(assert (=> d!43035 (= lt!71739 (containsKey!175 (toList!855 lt!71198) lt!71210))))

(assert (=> d!43035 (= (contains!892 lt!71198 lt!71210) lt!71737)))

(declare-fun b!137416 () Bool)

(declare-fun lt!71738 () Unit!4286)

(assert (=> b!137416 (= e!89436 lt!71738)))

(assert (=> b!137416 (= lt!71738 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71198) lt!71210))))

(assert (=> b!137416 (isDefined!125 (getValueByKey!171 (toList!855 lt!71198) lt!71210))))

(declare-fun b!137417 () Bool)

(declare-fun Unit!4325 () Unit!4286)

(assert (=> b!137417 (= e!89436 Unit!4325)))

(declare-fun b!137418 () Bool)

(assert (=> b!137418 (= e!89435 (isDefined!125 (getValueByKey!171 (toList!855 lt!71198) lt!71210)))))

(assert (= (and d!43035 c!25815) b!137416))

(assert (= (and d!43035 (not c!25815)) b!137417))

(assert (= (and d!43035 (not res!65808)) b!137418))

(declare-fun m!163905 () Bool)

(assert (=> d!43035 m!163905))

(declare-fun m!163907 () Bool)

(assert (=> b!137416 m!163907))

(declare-fun m!163909 () Bool)

(assert (=> b!137416 m!163909))

(assert (=> b!137416 m!163909))

(declare-fun m!163911 () Bool)

(assert (=> b!137416 m!163911))

(assert (=> b!137418 m!163909))

(assert (=> b!137418 m!163909))

(assert (=> b!137418 m!163911))

(assert (=> d!42755 d!43035))

(declare-fun d!43037 () Bool)

(declare-fun e!89437 () Bool)

(assert (=> d!43037 e!89437))

(declare-fun res!65809 () Bool)

(assert (=> d!43037 (=> res!65809 e!89437)))

(declare-fun lt!71741 () Bool)

(assert (=> d!43037 (= res!65809 (not lt!71741))))

(declare-fun lt!71743 () Bool)

(assert (=> d!43037 (= lt!71741 lt!71743)))

(declare-fun lt!71744 () Unit!4286)

(declare-fun e!89438 () Unit!4286)

(assert (=> d!43037 (= lt!71744 e!89438)))

(declare-fun c!25816 () Bool)

(assert (=> d!43037 (= c!25816 lt!71743)))

(assert (=> d!43037 (= lt!71743 (containsKey!175 (toList!855 lt!71261) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43037 (= (contains!892 lt!71261 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71741)))

(declare-fun b!137419 () Bool)

(declare-fun lt!71742 () Unit!4286)

(assert (=> b!137419 (= e!89438 lt!71742)))

(assert (=> b!137419 (= lt!71742 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71261) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137419 (isDefined!125 (getValueByKey!171 (toList!855 lt!71261) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137420 () Bool)

(declare-fun Unit!4326 () Unit!4286)

(assert (=> b!137420 (= e!89438 Unit!4326)))

(declare-fun b!137421 () Bool)

(assert (=> b!137421 (= e!89437 (isDefined!125 (getValueByKey!171 (toList!855 lt!71261) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43037 c!25816) b!137419))

(assert (= (and d!43037 (not c!25816)) b!137420))

(assert (= (and d!43037 (not res!65809)) b!137421))

(declare-fun m!163913 () Bool)

(assert (=> d!43037 m!163913))

(declare-fun m!163915 () Bool)

(assert (=> b!137419 m!163915))

(assert (=> b!137419 m!163457))

(assert (=> b!137419 m!163457))

(declare-fun m!163917 () Bool)

(assert (=> b!137419 m!163917))

(assert (=> b!137421 m!163457))

(assert (=> b!137421 m!163457))

(assert (=> b!137421 m!163917))

(assert (=> bm!15037 d!43037))

(declare-fun d!43039 () Bool)

(declare-fun e!89444 () Bool)

(assert (=> d!43039 e!89444))

(declare-fun res!65817 () Bool)

(assert (=> d!43039 (=> (not res!65817) (not e!89444))))

(assert (=> d!43039 (= res!65817 (or (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun lt!71760 () ListLongMap!1679)

(declare-fun lt!71745 () ListLongMap!1679)

(assert (=> d!43039 (= lt!71760 lt!71745)))

(declare-fun lt!71763 () Unit!4286)

(declare-fun e!89443 () Unit!4286)

(assert (=> d!43039 (= lt!71763 e!89443)))

(declare-fun c!25821 () Bool)

(declare-fun e!89450 () Bool)

(assert (=> d!43039 (= c!25821 e!89450)))

(declare-fun res!65811 () Bool)

(assert (=> d!43039 (=> (not res!65811) (not e!89450))))

(assert (=> d!43039 (= res!65811 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89439 () ListLongMap!1679)

(assert (=> d!43039 (= lt!71745 e!89439)))

(declare-fun c!25822 () Bool)

(assert (=> d!43039 (= c!25822 (and (not (= (bvand lt!71135 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!71135 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43039 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43039 (= (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71760)))

(declare-fun b!137422 () Bool)

(declare-fun c!25818 () Bool)

(assert (=> b!137422 (= c!25818 (and (not (= (bvand lt!71135 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!71135 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89449 () ListLongMap!1679)

(declare-fun e!89446 () ListLongMap!1679)

(assert (=> b!137422 (= e!89449 e!89446)))

(declare-fun b!137423 () Bool)

(declare-fun call!15133 () ListLongMap!1679)

(assert (=> b!137423 (= e!89449 call!15133)))

(declare-fun b!137424 () Bool)

(declare-fun e!89448 () Bool)

(assert (=> b!137424 (= e!89448 (= (apply!117 lt!71760 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15125 () Bool)

(declare-fun call!15134 () Bool)

(assert (=> bm!15125 (= call!15134 (contains!892 lt!71760 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15126 () Bool)

(declare-fun call!15130 () ListLongMap!1679)

(assert (=> bm!15126 (= call!15130 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15127 () Bool)

(declare-fun call!15131 () ListLongMap!1679)

(assert (=> bm!15127 (= call!15133 call!15131)))

(declare-fun b!137425 () Bool)

(declare-fun res!65814 () Bool)

(assert (=> b!137425 (=> (not res!65814) (not e!89444))))

(declare-fun e!89442 () Bool)

(assert (=> b!137425 (= res!65814 e!89442)))

(declare-fun c!25819 () Bool)

(assert (=> b!137425 (= c!25819 (not (= (bvand lt!71135 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137426 () Bool)

(assert (=> b!137426 (= e!89439 e!89449)))

(declare-fun c!25817 () Bool)

(assert (=> b!137426 (= c!25817 (and (not (= (bvand lt!71135 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!71135 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137427 () Bool)

(declare-fun call!15129 () ListLongMap!1679)

(assert (=> b!137427 (= e!89446 call!15129)))

(declare-fun bm!15128 () Bool)

(declare-fun call!15128 () ListLongMap!1679)

(assert (=> bm!15128 (= call!15131 (+!164 (ite c!25822 call!15130 (ite c!25817 call!15128 call!15129)) (ite (or c!25822 c!25817) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!137428 () Bool)

(declare-fun e!89445 () Bool)

(assert (=> b!137428 (= e!89444 e!89445)))

(declare-fun c!25820 () Bool)

(assert (=> b!137428 (= c!25820 (not (= (bvand lt!71135 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15129 () Bool)

(assert (=> bm!15129 (= call!15129 call!15128)))

(declare-fun b!137429 () Bool)

(declare-fun res!65816 () Bool)

(assert (=> b!137429 (=> (not res!65816) (not e!89444))))

(declare-fun e!89440 () Bool)

(assert (=> b!137429 (= res!65816 e!89440)))

(declare-fun res!65818 () Bool)

(assert (=> b!137429 (=> res!65818 e!89440)))

(declare-fun e!89451 () Bool)

(assert (=> b!137429 (= res!65818 (not e!89451))))

(declare-fun res!65815 () Bool)

(assert (=> b!137429 (=> (not res!65815) (not e!89451))))

(assert (=> b!137429 (= res!65815 (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137430 () Bool)

(declare-fun e!89447 () Bool)

(assert (=> b!137430 (= e!89440 e!89447)))

(declare-fun res!65813 () Bool)

(assert (=> b!137430 (=> (not res!65813) (not e!89447))))

(assert (=> b!137430 (= res!65813 (contains!892 lt!71760 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!137430 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137431 () Bool)

(assert (=> b!137431 (= e!89442 (not call!15134))))

(declare-fun b!137432 () Bool)

(assert (=> b!137432 (= e!89451 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137433 () Bool)

(assert (=> b!137433 (= e!89447 (= (apply!117 lt!71760 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137433 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (_values!2871 newMap!16))))))

(assert (=> b!137433 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89441 () Bool)

(declare-fun b!137434 () Bool)

(assert (=> b!137434 (= e!89441 (= (apply!117 lt!71760 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!137435 () Bool)

(assert (=> b!137435 (= e!89446 call!15133)))

(declare-fun b!137436 () Bool)

(assert (=> b!137436 (= e!89439 (+!164 call!15131 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!137437 () Bool)

(assert (=> b!137437 (= e!89442 e!89448)))

(declare-fun res!65812 () Bool)

(assert (=> b!137437 (= res!65812 call!15134)))

(assert (=> b!137437 (=> (not res!65812) (not e!89448))))

(declare-fun b!137438 () Bool)

(declare-fun Unit!4327 () Unit!4286)

(assert (=> b!137438 (= e!89443 Unit!4327)))

(declare-fun b!137439 () Bool)

(assert (=> b!137439 (= e!89445 e!89441)))

(declare-fun res!65810 () Bool)

(declare-fun call!15132 () Bool)

(assert (=> b!137439 (= res!65810 call!15132)))

(assert (=> b!137439 (=> (not res!65810) (not e!89441))))

(declare-fun bm!15130 () Bool)

(assert (=> bm!15130 (= call!15128 call!15130)))

(declare-fun b!137440 () Bool)

(declare-fun lt!71761 () Unit!4286)

(assert (=> b!137440 (= e!89443 lt!71761)))

(declare-fun lt!71754 () ListLongMap!1679)

(assert (=> b!137440 (= lt!71754 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71752 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71752 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71766 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71766 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71747 () Unit!4286)

(assert (=> b!137440 (= lt!71747 (addStillContains!93 lt!71754 lt!71752 (zeroValue!2741 newMap!16) lt!71766))))

(assert (=> b!137440 (contains!892 (+!164 lt!71754 (tuple2!2599 lt!71752 (zeroValue!2741 newMap!16))) lt!71766)))

(declare-fun lt!71753 () Unit!4286)

(assert (=> b!137440 (= lt!71753 lt!71747)))

(declare-fun lt!71756 () ListLongMap!1679)

(assert (=> b!137440 (= lt!71756 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71749 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71749 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71762 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71762 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71746 () Unit!4286)

(assert (=> b!137440 (= lt!71746 (addApplyDifferent!93 lt!71756 lt!71749 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!71762))))

(assert (=> b!137440 (= (apply!117 (+!164 lt!71756 (tuple2!2599 lt!71749 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71762) (apply!117 lt!71756 lt!71762))))

(declare-fun lt!71759 () Unit!4286)

(assert (=> b!137440 (= lt!71759 lt!71746)))

(declare-fun lt!71764 () ListLongMap!1679)

(assert (=> b!137440 (= lt!71764 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71757 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71757 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71751 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71751 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!71750 () Unit!4286)

(assert (=> b!137440 (= lt!71750 (addApplyDifferent!93 lt!71764 lt!71757 (zeroValue!2741 newMap!16) lt!71751))))

(assert (=> b!137440 (= (apply!117 (+!164 lt!71764 (tuple2!2599 lt!71757 (zeroValue!2741 newMap!16))) lt!71751) (apply!117 lt!71764 lt!71751))))

(declare-fun lt!71758 () Unit!4286)

(assert (=> b!137440 (= lt!71758 lt!71750)))

(declare-fun lt!71755 () ListLongMap!1679)

(assert (=> b!137440 (= lt!71755 (getCurrentListMapNoExtraKeys!129 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71765 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71765 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71748 () (_ BitVec 64))

(assert (=> b!137440 (= lt!71748 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!137440 (= lt!71761 (addApplyDifferent!93 lt!71755 lt!71765 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!71748))))

(assert (=> b!137440 (= (apply!117 (+!164 lt!71755 (tuple2!2599 lt!71765 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71748) (apply!117 lt!71755 lt!71748))))

(declare-fun b!137441 () Bool)

(assert (=> b!137441 (= e!89450 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137442 () Bool)

(assert (=> b!137442 (= e!89445 (not call!15132))))

(declare-fun bm!15131 () Bool)

(assert (=> bm!15131 (= call!15132 (contains!892 lt!71760 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43039 c!25822) b!137436))

(assert (= (and d!43039 (not c!25822)) b!137426))

(assert (= (and b!137426 c!25817) b!137423))

(assert (= (and b!137426 (not c!25817)) b!137422))

(assert (= (and b!137422 c!25818) b!137435))

(assert (= (and b!137422 (not c!25818)) b!137427))

(assert (= (or b!137435 b!137427) bm!15129))

(assert (= (or b!137423 bm!15129) bm!15130))

(assert (= (or b!137423 b!137435) bm!15127))

(assert (= (or b!137436 bm!15130) bm!15126))

(assert (= (or b!137436 bm!15127) bm!15128))

(assert (= (and d!43039 res!65811) b!137441))

(assert (= (and d!43039 c!25821) b!137440))

(assert (= (and d!43039 (not c!25821)) b!137438))

(assert (= (and d!43039 res!65817) b!137429))

(assert (= (and b!137429 res!65815) b!137432))

(assert (= (and b!137429 (not res!65818)) b!137430))

(assert (= (and b!137430 res!65813) b!137433))

(assert (= (and b!137429 res!65816) b!137425))

(assert (= (and b!137425 c!25819) b!137437))

(assert (= (and b!137425 (not c!25819)) b!137431))

(assert (= (and b!137437 res!65812) b!137424))

(assert (= (or b!137437 b!137431) bm!15125))

(assert (= (and b!137425 res!65814) b!137428))

(assert (= (and b!137428 c!25820) b!137439))

(assert (= (and b!137428 (not c!25820)) b!137442))

(assert (= (and b!137439 res!65810) b!137434))

(assert (= (or b!137439 b!137442) bm!15131))

(declare-fun b_lambda!6133 () Bool)

(assert (=> (not b_lambda!6133) (not b!137433)))

(assert (=> b!137433 t!6208))

(declare-fun b_and!8509 () Bool)

(assert (= b_and!8505 (and (=> t!6208 result!4043) b_and!8509)))

(assert (=> b!137433 t!6210))

(declare-fun b_and!8511 () Bool)

(assert (= b_and!8507 (and (=> t!6210 result!4045) b_and!8511)))

(assert (=> b!137441 m!162693))

(assert (=> b!137441 m!162693))

(assert (=> b!137441 m!162695))

(assert (=> d!43039 m!162671))

(declare-fun m!163919 () Bool)

(assert (=> b!137436 m!163919))

(assert (=> b!137433 m!162699))

(assert (=> b!137433 m!162761))

(assert (=> b!137433 m!162761))

(assert (=> b!137433 m!162699))

(assert (=> b!137433 m!162763))

(assert (=> b!137433 m!162693))

(assert (=> b!137433 m!162693))

(declare-fun m!163921 () Bool)

(assert (=> b!137433 m!163921))

(declare-fun m!163923 () Bool)

(assert (=> b!137434 m!163923))

(assert (=> b!137432 m!162693))

(assert (=> b!137432 m!162693))

(assert (=> b!137432 m!162695))

(declare-fun m!163925 () Bool)

(assert (=> bm!15131 m!163925))

(assert (=> bm!15126 m!162445))

(declare-fun m!163927 () Bool)

(assert (=> bm!15126 m!163927))

(declare-fun m!163929 () Bool)

(assert (=> b!137424 m!163929))

(declare-fun m!163931 () Bool)

(assert (=> b!137440 m!163931))

(declare-fun m!163933 () Bool)

(assert (=> b!137440 m!163933))

(declare-fun m!163935 () Bool)

(assert (=> b!137440 m!163935))

(declare-fun m!163937 () Bool)

(assert (=> b!137440 m!163937))

(declare-fun m!163939 () Bool)

(assert (=> b!137440 m!163939))

(declare-fun m!163941 () Bool)

(assert (=> b!137440 m!163941))

(assert (=> b!137440 m!163931))

(assert (=> b!137440 m!162445))

(declare-fun m!163943 () Bool)

(assert (=> b!137440 m!163943))

(declare-fun m!163945 () Bool)

(assert (=> b!137440 m!163945))

(declare-fun m!163947 () Bool)

(assert (=> b!137440 m!163947))

(assert (=> b!137440 m!162445))

(assert (=> b!137440 m!163927))

(assert (=> b!137440 m!163945))

(declare-fun m!163949 () Bool)

(assert (=> b!137440 m!163949))

(assert (=> b!137440 m!163941))

(declare-fun m!163951 () Bool)

(assert (=> b!137440 m!163951))

(assert (=> b!137440 m!162445))

(declare-fun m!163953 () Bool)

(assert (=> b!137440 m!163953))

(declare-fun m!163955 () Bool)

(assert (=> b!137440 m!163955))

(assert (=> b!137440 m!163935))

(declare-fun m!163957 () Bool)

(assert (=> b!137440 m!163957))

(declare-fun m!163959 () Bool)

(assert (=> b!137440 m!163959))

(assert (=> b!137440 m!162693))

(assert (=> b!137430 m!162693))

(assert (=> b!137430 m!162693))

(declare-fun m!163961 () Bool)

(assert (=> b!137430 m!163961))

(declare-fun m!163963 () Bool)

(assert (=> bm!15125 m!163963))

(declare-fun m!163965 () Bool)

(assert (=> bm!15128 m!163965))

(assert (=> d!42715 d!43039))

(declare-fun d!43041 () Bool)

(declare-fun e!89452 () Bool)

(assert (=> d!43041 e!89452))

(declare-fun res!65819 () Bool)

(assert (=> d!43041 (=> (not res!65819) (not e!89452))))

(declare-fun lt!71768 () ListLongMap!1679)

(assert (=> d!43041 (= res!65819 (contains!892 lt!71768 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71769 () List!1716)

(assert (=> d!43041 (= lt!71768 (ListLongMap!1680 lt!71769))))

(declare-fun lt!71770 () Unit!4286)

(declare-fun lt!71767 () Unit!4286)

(assert (=> d!43041 (= lt!71770 lt!71767)))

(assert (=> d!43041 (= (getValueByKey!171 lt!71769 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43041 (= lt!71767 (lemmaContainsTupThenGetReturnValue!89 lt!71769 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43041 (= lt!71769 (insertStrictlySorted!92 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43041 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71768)))

(declare-fun b!137443 () Bool)

(declare-fun res!65820 () Bool)

(assert (=> b!137443 (=> (not res!65820) (not e!89452))))

(assert (=> b!137443 (= res!65820 (= (getValueByKey!171 (toList!855 lt!71768) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137444 () Bool)

(assert (=> b!137444 (= e!89452 (contains!895 (toList!855 lt!71768) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43041 res!65819) b!137443))

(assert (= (and b!137443 res!65820) b!137444))

(declare-fun m!163967 () Bool)

(assert (=> d!43041 m!163967))

(declare-fun m!163969 () Bool)

(assert (=> d!43041 m!163969))

(declare-fun m!163971 () Bool)

(assert (=> d!43041 m!163971))

(declare-fun m!163973 () Bool)

(assert (=> d!43041 m!163973))

(declare-fun m!163975 () Bool)

(assert (=> b!137443 m!163975))

(declare-fun m!163977 () Bool)

(assert (=> b!137444 m!163977))

(assert (=> d!42715 d!43041))

(assert (=> d!42715 d!42729))

(declare-fun d!43043 () Bool)

(assert (=> d!43043 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(assert (=> d!43043 true))

(declare-fun _$8!121 () Unit!4286)

(assert (=> d!43043 (= (choose!838 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) lt!71135 (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)) _$8!121)))

(declare-fun bs!5747 () Bool)

(assert (= bs!5747 d!43043))

(assert (=> bs!5747 m!162545))

(assert (=> bs!5747 m!162545))

(assert (=> bs!5747 m!162675))

(assert (=> bs!5747 m!162445))

(assert (=> bs!5747 m!162673))

(assert (=> d!42715 d!43043))

(assert (=> d!42715 d!42871))

(declare-fun e!89464 () SeekEntryResult!279)

(declare-fun b!137463 () Bool)

(assert (=> b!137463 (= e!89464 (Intermediate!279 false (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!137464 () Bool)

(declare-fun e!89465 () Bool)

(declare-fun e!89466 () Bool)

(assert (=> b!137464 (= e!89465 e!89466)))

(declare-fun res!65829 () Bool)

(declare-fun lt!71775 () SeekEntryResult!279)

(assert (=> b!137464 (= res!65829 (and ((_ is Intermediate!279) lt!71775) (not (undefined!1091 lt!71775)) (bvslt (x!15806 lt!71775) #b01111111111111111111111111111110) (bvsge (x!15806 lt!71775) #b00000000000000000000000000000000) (bvsge (x!15806 lt!71775) #b00000000000000000000000000000000)))))

(assert (=> b!137464 (=> (not res!65829) (not e!89466))))

(declare-fun b!137465 () Bool)

(declare-fun e!89463 () SeekEntryResult!279)

(assert (=> b!137465 (= e!89463 e!89464)))

(declare-fun c!25829 () Bool)

(declare-fun lt!71776 () (_ BitVec 64))

(assert (=> b!137465 (= c!25829 (or (= lt!71776 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (= (bvadd lt!71776 lt!71776) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137466 () Bool)

(assert (=> b!137466 (and (bvsge (index!3279 lt!71775) #b00000000000000000000000000000000) (bvslt (index!3279 lt!71775) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun e!89467 () Bool)

(assert (=> b!137466 (= e!89467 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3279 lt!71775)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137467 () Bool)

(assert (=> b!137467 (and (bvsge (index!3279 lt!71775) #b00000000000000000000000000000000) (bvslt (index!3279 lt!71775) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun res!65827 () Bool)

(assert (=> b!137467 (= res!65827 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3279 lt!71775)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!137467 (=> res!65827 e!89467)))

(assert (=> b!137467 (= e!89466 e!89467)))

(declare-fun b!137468 () Bool)

(assert (=> b!137468 (= e!89465 (bvsge (x!15806 lt!71775) #b01111111111111111111111111111110))))

(declare-fun b!137469 () Bool)

(assert (=> b!137469 (and (bvsge (index!3279 lt!71775) #b00000000000000000000000000000000) (bvslt (index!3279 lt!71775) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun res!65828 () Bool)

(assert (=> b!137469 (= res!65828 (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3279 lt!71775)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137469 (=> res!65828 e!89467)))

(declare-fun d!43045 () Bool)

(assert (=> d!43045 e!89465))

(declare-fun c!25830 () Bool)

(assert (=> d!43045 (= c!25830 (and ((_ is Intermediate!279) lt!71775) (undefined!1091 lt!71775)))))

(assert (=> d!43045 (= lt!71775 e!89463)))

(declare-fun c!25831 () Bool)

(assert (=> d!43045 (= c!25831 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!43045 (= lt!71776 (select (arr!2260 (_keys!4640 newMap!16)) (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16))))))

(assert (=> d!43045 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43045 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)) lt!71775)))

(declare-fun b!137470 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!137470 (= e!89464 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16)) #b00000000000000000000000000000000 (mask!7201 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!137471 () Bool)

(assert (=> b!137471 (= e!89463 (Intermediate!279 true (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16)) #b00000000000000000000000000000000))))

(assert (= (and d!43045 c!25831) b!137471))

(assert (= (and d!43045 (not c!25831)) b!137465))

(assert (= (and b!137465 c!25829) b!137463))

(assert (= (and b!137465 (not c!25829)) b!137470))

(assert (= (and d!43045 c!25830) b!137468))

(assert (= (and d!43045 (not c!25830)) b!137464))

(assert (= (and b!137464 res!65829) b!137467))

(assert (= (and b!137467 (not res!65827)) b!137469))

(assert (= (and b!137469 (not res!65828)) b!137466))

(declare-fun m!163979 () Bool)

(assert (=> b!137469 m!163979))

(assert (=> b!137470 m!162831))

(declare-fun m!163981 () Bool)

(assert (=> b!137470 m!163981))

(assert (=> b!137470 m!163981))

(assert (=> b!137470 m!162421))

(declare-fun m!163983 () Bool)

(assert (=> b!137470 m!163983))

(assert (=> d!43045 m!162831))

(declare-fun m!163985 () Bool)

(assert (=> d!43045 m!163985))

(assert (=> d!43045 m!162671))

(assert (=> b!137467 m!163979))

(assert (=> b!137466 m!163979))

(assert (=> d!42735 d!43045))

(declare-fun d!43047 () Bool)

(declare-fun lt!71782 () (_ BitVec 32))

(declare-fun lt!71781 () (_ BitVec 32))

(assert (=> d!43047 (= lt!71782 (bvmul (bvxor lt!71781 (bvlshr lt!71781 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!43047 (= lt!71781 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvlshr (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!43047 (and (bvsge (mask!7201 newMap!16) #b00000000000000000000000000000000) (let ((res!65830 (let ((h!2322 ((_ extract 31 0) (bvand (bvxor (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvlshr (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!15909 (bvmul (bvxor h!2322 (bvlshr h!2322 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!15909 (bvlshr x!15909 #b00000000000000000000000000001101)) (mask!7201 newMap!16)))))) (and (bvslt res!65830 (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001)) (bvsge res!65830 #b00000000000000000000000000000000))))))

(assert (=> d!43047 (= (toIndex!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (mask!7201 newMap!16)) (bvand (bvxor lt!71782 (bvlshr lt!71782 #b00000000000000000000000000001101)) (mask!7201 newMap!16)))))

(assert (=> d!42735 d!43047))

(assert (=> d!42735 d!42871))

(declare-fun bm!15132 () Bool)

(declare-fun call!15135 () (_ BitVec 32))

(assert (=> bm!15132 (= call!15135 (arrayCountValidKeys!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137472 () Bool)

(declare-fun e!89469 () (_ BitVec 32))

(assert (=> b!137472 (= e!89469 (bvadd #b00000000000000000000000000000001 call!15135))))

(declare-fun b!137473 () Bool)

(assert (=> b!137473 (= e!89469 call!15135)))

(declare-fun d!43049 () Bool)

(declare-fun lt!71783 () (_ BitVec 32))

(assert (=> d!43049 (and (bvsge lt!71783 #b00000000000000000000000000000000) (bvsle lt!71783 (bvsub (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!89468 () (_ BitVec 32))

(assert (=> d!43049 (= lt!71783 e!89468)))

(declare-fun c!25833 () Bool)

(assert (=> d!43049 (= c!25833 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> d!43049 (and (bvsle #b00000000000000000000000000000000 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> d!43049 (= (arrayCountValidKeys!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) #b00000000000000000000000000000000 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))) lt!71783)))

(declare-fun b!137474 () Bool)

(assert (=> b!137474 (= e!89468 #b00000000000000000000000000000000)))

(declare-fun b!137475 () Bool)

(assert (=> b!137475 (= e!89468 e!89469)))

(declare-fun c!25832 () Bool)

(assert (=> b!137475 (= c!25832 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!43049 c!25833) b!137474))

(assert (= (and d!43049 (not c!25833)) b!137475))

(assert (= (and b!137475 c!25832) b!137472))

(assert (= (and b!137475 (not c!25832)) b!137473))

(assert (= (or b!137472 b!137473) bm!15132))

(declare-fun m!163987 () Bool)

(assert (=> bm!15132 m!163987))

(assert (=> b!137475 m!163219))

(assert (=> b!137475 m!163219))

(assert (=> b!137475 m!163221))

(assert (=> b!136949 d!43049))

(declare-fun d!43051 () Bool)

(assert (=> d!43051 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!71784 () Unit!4286)

(assert (=> d!43051 (= lt!71784 (choose!842 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!89470 () Bool)

(assert (=> d!43051 e!89470))

(declare-fun res!65831 () Bool)

(assert (=> d!43051 (=> (not res!65831) (not e!89470))))

(assert (=> d!43051 (= res!65831 (isStrictlySorted!318 (toList!855 lt!71204)))))

(assert (=> d!43051 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000) lt!71784)))

(declare-fun b!137476 () Bool)

(assert (=> b!137476 (= e!89470 (containsKey!175 (toList!855 lt!71204) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43051 res!65831) b!137476))

(assert (=> d!43051 m!162679))

(assert (=> d!43051 m!162679))

(assert (=> d!43051 m!163133))

(declare-fun m!163989 () Bool)

(assert (=> d!43051 m!163989))

(assert (=> d!43051 m!163865))

(assert (=> b!137476 m!163129))

(assert (=> b!136952 d!43051))

(assert (=> b!136952 d!42841))

(assert (=> b!136952 d!42843))

(assert (=> b!136835 d!42723))

(declare-fun d!43053 () Bool)

(assert (=> d!43053 (= (apply!117 lt!71261 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71261) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5748 () Bool)

(assert (= bs!5748 d!43053))

(declare-fun m!163991 () Bool)

(assert (=> bs!5748 m!163991))

(assert (=> bs!5748 m!163991))

(declare-fun m!163993 () Bool)

(assert (=> bs!5748 m!163993))

(assert (=> b!136718 d!43053))

(declare-fun b!137479 () Bool)

(declare-fun e!89472 () Option!177)

(assert (=> b!137479 (= e!89472 (getValueByKey!171 (t!6195 (t!6195 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137480 () Bool)

(assert (=> b!137480 (= e!89472 None!175)))

(declare-fun b!137478 () Bool)

(declare-fun e!89471 () Option!177)

(assert (=> b!137478 (= e!89471 e!89472)))

(declare-fun c!25835 () Bool)

(assert (=> b!137478 (= c!25835 (and ((_ is Cons!1712) (t!6195 (toList!855 lt!71024))) (not (= (_1!1310 (h!2318 (t!6195 (toList!855 lt!71024)))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))))

(declare-fun c!25834 () Bool)

(declare-fun d!43055 () Bool)

(assert (=> d!43055 (= c!25834 (and ((_ is Cons!1712) (t!6195 (toList!855 lt!71024))) (= (_1!1310 (h!2318 (t!6195 (toList!855 lt!71024)))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!43055 (= (getValueByKey!171 (t!6195 (toList!855 lt!71024)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89471)))

(declare-fun b!137477 () Bool)

(assert (=> b!137477 (= e!89471 (Some!176 (_2!1310 (h!2318 (t!6195 (toList!855 lt!71024))))))))

(assert (= (and d!43055 c!25834) b!137477))

(assert (= (and d!43055 (not c!25834)) b!137478))

(assert (= (and b!137478 c!25835) b!137479))

(assert (= (and b!137478 (not c!25835)) b!137480))

(assert (=> b!137479 m!162421))

(declare-fun m!163995 () Bool)

(assert (=> b!137479 m!163995))

(assert (=> b!136786 d!43055))

(declare-fun e!89474 () Option!177)

(declare-fun b!137483 () Bool)

(assert (=> b!137483 (= e!89474 (getValueByKey!171 (t!6195 (toList!855 lt!71374)) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137484 () Bool)

(assert (=> b!137484 (= e!89474 None!175)))

(declare-fun b!137482 () Bool)

(declare-fun e!89473 () Option!177)

(assert (=> b!137482 (= e!89473 e!89474)))

(declare-fun c!25837 () Bool)

(assert (=> b!137482 (= c!25837 (and ((_ is Cons!1712) (toList!855 lt!71374)) (not (= (_1!1310 (h!2318 (toList!855 lt!71374))) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun d!43057 () Bool)

(declare-fun c!25836 () Bool)

(assert (=> d!43057 (= c!25836 (and ((_ is Cons!1712) (toList!855 lt!71374)) (= (_1!1310 (h!2318 (toList!855 lt!71374))) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43057 (= (getValueByKey!171 (toList!855 lt!71374) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!89473)))

(declare-fun b!137481 () Bool)

(assert (=> b!137481 (= e!89473 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71374)))))))

(assert (= (and d!43057 c!25836) b!137481))

(assert (= (and d!43057 (not c!25836)) b!137482))

(assert (= (and b!137482 c!25837) b!137483))

(assert (= (and b!137482 (not c!25837)) b!137484))

(declare-fun m!163997 () Bool)

(assert (=> b!137483 m!163997))

(assert (=> b!136856 d!43057))

(declare-fun d!43059 () Bool)

(declare-fun e!89475 () Bool)

(assert (=> d!43059 e!89475))

(declare-fun res!65832 () Bool)

(assert (=> d!43059 (=> res!65832 e!89475)))

(declare-fun lt!71785 () Bool)

(assert (=> d!43059 (= res!65832 (not lt!71785))))

(declare-fun lt!71787 () Bool)

(assert (=> d!43059 (= lt!71785 lt!71787)))

(declare-fun lt!71788 () Unit!4286)

(declare-fun e!89476 () Unit!4286)

(assert (=> d!43059 (= lt!71788 e!89476)))

(declare-fun c!25838 () Bool)

(assert (=> d!43059 (= c!25838 lt!71787)))

(assert (=> d!43059 (= lt!71787 (containsKey!175 (toList!855 lt!71492) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43059 (= (contains!892 lt!71492 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71785)))

(declare-fun b!137485 () Bool)

(declare-fun lt!71786 () Unit!4286)

(assert (=> b!137485 (= e!89476 lt!71786)))

(assert (=> b!137485 (= lt!71786 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71492) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137485 (isDefined!125 (getValueByKey!171 (toList!855 lt!71492) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137486 () Bool)

(declare-fun Unit!4328 () Unit!4286)

(assert (=> b!137486 (= e!89476 Unit!4328)))

(declare-fun b!137487 () Bool)

(assert (=> b!137487 (= e!89475 (isDefined!125 (getValueByKey!171 (toList!855 lt!71492) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43059 c!25838) b!137485))

(assert (= (and d!43059 (not c!25838)) b!137486))

(assert (= (and d!43059 (not res!65832)) b!137487))

(declare-fun m!163999 () Bool)

(assert (=> d!43059 m!163999))

(declare-fun m!164001 () Bool)

(assert (=> b!137485 m!164001))

(assert (=> b!137485 m!163699))

(assert (=> b!137485 m!163699))

(declare-fun m!164003 () Bool)

(assert (=> b!137485 m!164003))

(assert (=> b!137487 m!163699))

(assert (=> b!137487 m!163699))

(assert (=> b!137487 m!164003))

(assert (=> bm!15065 d!43059))

(assert (=> b!136766 d!42879))

(assert (=> b!136766 d!42881))

(assert (=> b!136874 d!42703))

(declare-fun d!43061 () Bool)

(declare-fun e!89477 () Bool)

(assert (=> d!43061 e!89477))

(declare-fun res!65833 () Bool)

(assert (=> d!43061 (=> (not res!65833) (not e!89477))))

(declare-fun lt!71790 () ListLongMap!1679)

(assert (=> d!43061 (= res!65833 (contains!892 lt!71790 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun lt!71791 () List!1716)

(assert (=> d!43061 (= lt!71790 (ListLongMap!1680 lt!71791))))

(declare-fun lt!71792 () Unit!4286)

(declare-fun lt!71789 () Unit!4286)

(assert (=> d!43061 (= lt!71792 lt!71789)))

(assert (=> d!43061 (= (getValueByKey!171 lt!71791 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (=> d!43061 (= lt!71789 (lemmaContainsTupThenGetReturnValue!89 lt!71791 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (=> d!43061 (= lt!71791 (insertStrictlySorted!92 (toList!855 call!15037) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (=> d!43061 (= (+!164 call!15037 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))) lt!71790)))

(declare-fun b!137488 () Bool)

(declare-fun res!65834 () Bool)

(assert (=> b!137488 (=> (not res!65834) (not e!89477))))

(assert (=> b!137488 (= res!65834 (= (getValueByKey!171 (toList!855 lt!71790) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(declare-fun b!137489 () Bool)

(assert (=> b!137489 (= e!89477 (contains!895 (toList!855 lt!71790) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(assert (= (and d!43061 res!65833) b!137488))

(assert (= (and b!137488 res!65834) b!137489))

(declare-fun m!164005 () Bool)

(assert (=> d!43061 m!164005))

(declare-fun m!164007 () Bool)

(assert (=> d!43061 m!164007))

(declare-fun m!164009 () Bool)

(assert (=> d!43061 m!164009))

(declare-fun m!164011 () Bool)

(assert (=> d!43061 m!164011))

(declare-fun m!164013 () Bool)

(assert (=> b!137488 m!164013))

(declare-fun m!164015 () Bool)

(assert (=> b!137489 m!164015))

(assert (=> b!136730 d!43061))

(assert (=> bm!15057 d!42823))

(declare-fun bm!15133 () Bool)

(declare-fun call!15136 () (_ BitVec 32))

(assert (=> bm!15133 (= call!15136 (arrayCountValidKeys!0 (_keys!4640 (_2!1311 lt!71138)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(declare-fun b!137490 () Bool)

(declare-fun e!89479 () (_ BitVec 32))

(assert (=> b!137490 (= e!89479 (bvadd #b00000000000000000000000000000001 call!15136))))

(declare-fun b!137491 () Bool)

(assert (=> b!137491 (= e!89479 call!15136)))

(declare-fun d!43063 () Bool)

(declare-fun lt!71793 () (_ BitVec 32))

(assert (=> d!43063 (and (bvsge lt!71793 #b00000000000000000000000000000000) (bvsle lt!71793 (bvsub (size!2531 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun e!89478 () (_ BitVec 32))

(assert (=> d!43063 (= lt!71793 e!89478)))

(declare-fun c!25840 () Bool)

(assert (=> d!43063 (= c!25840 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(assert (=> d!43063 (and (bvsle #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2531 (_keys!4640 (_2!1311 lt!71138))) (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(assert (=> d!43063 (= (arrayCountValidKeys!0 (_keys!4640 (_2!1311 lt!71138)) #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))) lt!71793)))

(declare-fun b!137492 () Bool)

(assert (=> b!137492 (= e!89478 #b00000000000000000000000000000000)))

(declare-fun b!137493 () Bool)

(assert (=> b!137493 (= e!89478 e!89479)))

(declare-fun c!25839 () Bool)

(assert (=> b!137493 (= c!25839 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(assert (= (and d!43063 c!25840) b!137492))

(assert (= (and d!43063 (not c!25840)) b!137493))

(assert (= (and b!137493 c!25839) b!137490))

(assert (= (and b!137493 (not c!25839)) b!137491))

(assert (= (or b!137490 b!137491) bm!15133))

(declare-fun m!164017 () Bool)

(assert (=> bm!15133 m!164017))

(assert (=> b!137493 m!163253))

(assert (=> b!137493 m!163253))

(assert (=> b!137493 m!163255))

(assert (=> b!136893 d!43063))

(declare-fun e!89481 () Option!177)

(declare-fun b!137496 () Bool)

(assert (=> b!137496 (= e!89481 (getValueByKey!171 (t!6195 (toList!855 lt!71362)) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137497 () Bool)

(assert (=> b!137497 (= e!89481 None!175)))

(declare-fun b!137495 () Bool)

(declare-fun e!89480 () Option!177)

(assert (=> b!137495 (= e!89480 e!89481)))

(declare-fun c!25842 () Bool)

(assert (=> b!137495 (= c!25842 (and ((_ is Cons!1712) (toList!855 lt!71362)) (not (= (_1!1310 (h!2318 (toList!855 lt!71362))) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun d!43065 () Bool)

(declare-fun c!25841 () Bool)

(assert (=> d!43065 (= c!25841 (and ((_ is Cons!1712) (toList!855 lt!71362)) (= (_1!1310 (h!2318 (toList!855 lt!71362))) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43065 (= (getValueByKey!171 (toList!855 lt!71362) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89480)))

(declare-fun b!137494 () Bool)

(assert (=> b!137494 (= e!89480 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71362)))))))

(assert (= (and d!43065 c!25841) b!137494))

(assert (= (and d!43065 (not c!25841)) b!137495))

(assert (= (and b!137495 c!25842) b!137496))

(assert (= (and b!137495 (not c!25842)) b!137497))

(declare-fun m!164019 () Bool)

(assert (=> b!137496 m!164019))

(assert (=> b!136849 d!43065))

(declare-fun d!43067 () Bool)

(assert (=> d!43067 (isDefined!125 (getValueByKey!171 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!71794 () Unit!4286)

(assert (=> d!43067 (= lt!71794 (choose!842 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!89482 () Bool)

(assert (=> d!43067 e!89482))

(declare-fun res!65835 () Bool)

(assert (=> d!43067 (=> (not res!65835) (not e!89482))))

(assert (=> d!43067 (= res!65835 (isStrictlySorted!318 (toList!855 lt!71204)))))

(assert (=> d!43067 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000) lt!71794)))

(declare-fun b!137498 () Bool)

(assert (=> b!137498 (= e!89482 (containsKey!175 (toList!855 lt!71204) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43067 res!65835) b!137498))

(assert (=> d!43067 m!162883))

(assert (=> d!43067 m!162883))

(assert (=> d!43067 m!162885))

(declare-fun m!164021 () Bool)

(assert (=> d!43067 m!164021))

(assert (=> d!43067 m!163865))

(assert (=> b!137498 m!162879))

(assert (=> b!136794 d!43067))

(assert (=> b!136794 d!42873))

(assert (=> b!136794 d!42875))

(declare-fun d!43069 () Bool)

(assert (=> d!43069 (= (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71206)) (v!3221 (getValueByKey!171 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71206)))))

(assert (=> d!42763 d!43069))

(declare-fun b!137501 () Bool)

(declare-fun e!89484 () Option!177)

(assert (=> b!137501 (= e!89484 (getValueByKey!171 (t!6195 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71206))))

(declare-fun b!137502 () Bool)

(assert (=> b!137502 (= e!89484 None!175)))

(declare-fun b!137500 () Bool)

(declare-fun e!89483 () Option!177)

(assert (=> b!137500 (= e!89483 e!89484)))

(declare-fun c!25844 () Bool)

(assert (=> b!137500 (= c!25844 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (not (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71206))))))

(declare-fun d!43071 () Bool)

(declare-fun c!25843 () Bool)

(assert (=> d!43071 (= c!25843 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71206)))))

(assert (=> d!43071 (= (getValueByKey!171 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71206) e!89483)))

(declare-fun b!137499 () Bool)

(assert (=> b!137499 (= e!89483 (Some!176 (_2!1310 (h!2318 (toList!855 (+!164 lt!71200 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(assert (= (and d!43071 c!25843) b!137499))

(assert (= (and d!43071 (not c!25843)) b!137500))

(assert (= (and b!137500 c!25844) b!137501))

(assert (= (and b!137500 (not c!25844)) b!137502))

(declare-fun m!164023 () Bool)

(assert (=> b!137501 m!164023))

(assert (=> d!42763 d!43071))

(declare-fun d!43073 () Bool)

(assert (=> d!43073 (= (apply!117 lt!71492 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71492) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5749 () Bool)

(assert (= bs!5749 d!43073))

(declare-fun m!164025 () Bool)

(assert (=> bs!5749 m!164025))

(assert (=> bs!5749 m!164025))

(declare-fun m!164027 () Bool)

(assert (=> bs!5749 m!164027))

(assert (=> b!136957 d!43073))

(assert (=> b!136726 d!42845))

(assert (=> bm!15023 d!42823))

(declare-fun d!43075 () Bool)

(assert (=> d!43075 (= (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71195)) (v!3221 (getValueByKey!171 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71195)))))

(assert (=> d!42773 d!43075))

(declare-fun e!89486 () Option!177)

(declare-fun b!137505 () Bool)

(assert (=> b!137505 (= e!89486 (getValueByKey!171 (t!6195 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71195))))

(declare-fun b!137506 () Bool)

(assert (=> b!137506 (= e!89486 None!175)))

(declare-fun b!137504 () Bool)

(declare-fun e!89485 () Option!177)

(assert (=> b!137504 (= e!89485 e!89486)))

(declare-fun c!25846 () Bool)

(assert (=> b!137504 (= c!25846 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) (not (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71195))))))

(declare-fun c!25845 () Bool)

(declare-fun d!43077 () Bool)

(assert (=> d!43077 (= c!25845 (and ((_ is Cons!1712) (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))) (= (_1!1310 (h!2318 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))) lt!71195)))))

(assert (=> d!43077 (= (getValueByKey!171 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71195) e!89485)))

(declare-fun b!137503 () Bool)

(assert (=> b!137503 (= e!89485 (Some!176 (_2!1310 (h!2318 (toList!855 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(assert (= (and d!43077 c!25845) b!137503))

(assert (= (and d!43077 (not c!25845)) b!137504))

(assert (= (and b!137504 c!25846) b!137505))

(assert (= (and b!137504 (not c!25846)) b!137506))

(declare-fun m!164029 () Bool)

(assert (=> b!137505 m!164029))

(assert (=> d!42773 d!43077))

(declare-fun d!43079 () Bool)

(declare-fun e!89487 () Bool)

(assert (=> d!43079 e!89487))

(declare-fun res!65836 () Bool)

(assert (=> d!43079 (=> res!65836 e!89487)))

(declare-fun lt!71795 () Bool)

(assert (=> d!43079 (= res!65836 (not lt!71795))))

(declare-fun lt!71797 () Bool)

(assert (=> d!43079 (= lt!71795 lt!71797)))

(declare-fun lt!71798 () Unit!4286)

(declare-fun e!89488 () Unit!4286)

(assert (=> d!43079 (= lt!71798 e!89488)))

(declare-fun c!25847 () Bool)

(assert (=> d!43079 (= c!25847 lt!71797)))

(assert (=> d!43079 (= lt!71797 (containsKey!175 (toList!855 lt!71235) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43079 (= (contains!892 lt!71235 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71795)))

(declare-fun b!137507 () Bool)

(declare-fun lt!71796 () Unit!4286)

(assert (=> b!137507 (= e!89488 lt!71796)))

(assert (=> b!137507 (= lt!71796 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71235) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137507 (isDefined!125 (getValueByKey!171 (toList!855 lt!71235) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137508 () Bool)

(declare-fun Unit!4329 () Unit!4286)

(assert (=> b!137508 (= e!89488 Unit!4329)))

(declare-fun b!137509 () Bool)

(assert (=> b!137509 (= e!89487 (isDefined!125 (getValueByKey!171 (toList!855 lt!71235) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43079 c!25847) b!137507))

(assert (= (and d!43079 (not c!25847)) b!137508))

(assert (= (and d!43079 (not res!65836)) b!137509))

(declare-fun m!164031 () Bool)

(assert (=> d!43079 m!164031))

(declare-fun m!164033 () Bool)

(assert (=> b!137507 m!164033))

(assert (=> b!137507 m!163721))

(assert (=> b!137507 m!163721))

(declare-fun m!164035 () Bool)

(assert (=> b!137507 m!164035))

(assert (=> b!137509 m!163721))

(assert (=> b!137509 m!163721))

(assert (=> b!137509 m!164035))

(assert (=> bm!15030 d!43079))

(declare-fun d!43081 () Bool)

(declare-fun e!89489 () Bool)

(assert (=> d!43081 e!89489))

(declare-fun res!65837 () Bool)

(assert (=> d!43081 (=> res!65837 e!89489)))

(declare-fun lt!71799 () Bool)

(assert (=> d!43081 (= res!65837 (not lt!71799))))

(declare-fun lt!71801 () Bool)

(assert (=> d!43081 (= lt!71799 lt!71801)))

(declare-fun lt!71802 () Unit!4286)

(declare-fun e!89490 () Unit!4286)

(assert (=> d!43081 (= lt!71802 e!89490)))

(declare-fun c!25848 () Bool)

(assert (=> d!43081 (= c!25848 lt!71801)))

(assert (=> d!43081 (= lt!71801 (containsKey!175 (toList!855 lt!71374) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!43081 (= (contains!892 lt!71374 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!71799)))

(declare-fun b!137510 () Bool)

(declare-fun lt!71800 () Unit!4286)

(assert (=> b!137510 (= e!89490 lt!71800)))

(assert (=> b!137510 (= lt!71800 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71374) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!137510 (isDefined!125 (getValueByKey!171 (toList!855 lt!71374) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137511 () Bool)

(declare-fun Unit!4330 () Unit!4286)

(assert (=> b!137511 (= e!89490 Unit!4330)))

(declare-fun b!137512 () Bool)

(assert (=> b!137512 (= e!89489 (isDefined!125 (getValueByKey!171 (toList!855 lt!71374) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43081 c!25848) b!137510))

(assert (= (and d!43081 (not c!25848)) b!137511))

(assert (= (and d!43081 (not res!65837)) b!137512))

(declare-fun m!164037 () Bool)

(assert (=> d!43081 m!164037))

(declare-fun m!164039 () Bool)

(assert (=> b!137510 m!164039))

(assert (=> b!137510 m!163031))

(assert (=> b!137510 m!163031))

(declare-fun m!164041 () Bool)

(assert (=> b!137510 m!164041))

(assert (=> b!137512 m!163031))

(assert (=> b!137512 m!163031))

(assert (=> b!137512 m!164041))

(assert (=> d!42791 d!43081))

(declare-fun b!137515 () Bool)

(declare-fun e!89492 () Option!177)

(assert (=> b!137515 (= e!89492 (getValueByKey!171 (t!6195 lt!71375) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137516 () Bool)

(assert (=> b!137516 (= e!89492 None!175)))

(declare-fun b!137514 () Bool)

(declare-fun e!89491 () Option!177)

(assert (=> b!137514 (= e!89491 e!89492)))

(declare-fun c!25850 () Bool)

(assert (=> b!137514 (= c!25850 (and ((_ is Cons!1712) lt!71375) (not (= (_1!1310 (h!2318 lt!71375)) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25849 () Bool)

(declare-fun d!43083 () Bool)

(assert (=> d!43083 (= c!25849 (and ((_ is Cons!1712) lt!71375) (= (_1!1310 (h!2318 lt!71375)) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43083 (= (getValueByKey!171 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!89491)))

(declare-fun b!137513 () Bool)

(assert (=> b!137513 (= e!89491 (Some!176 (_2!1310 (h!2318 lt!71375))))))

(assert (= (and d!43083 c!25849) b!137513))

(assert (= (and d!43083 (not c!25849)) b!137514))

(assert (= (and b!137514 c!25850) b!137515))

(assert (= (and b!137514 (not c!25850)) b!137516))

(declare-fun m!164043 () Bool)

(assert (=> b!137515 m!164043))

(assert (=> d!42791 d!43083))

(declare-fun d!43085 () Bool)

(assert (=> d!43085 (= (getValueByKey!171 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!176 (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!71803 () Unit!4286)

(assert (=> d!43085 (= lt!71803 (choose!847 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!89493 () Bool)

(assert (=> d!43085 e!89493))

(declare-fun res!65838 () Bool)

(assert (=> d!43085 (=> (not res!65838) (not e!89493))))

(assert (=> d!43085 (= res!65838 (isStrictlySorted!318 lt!71375))))

(assert (=> d!43085 (= (lemmaContainsTupThenGetReturnValue!89 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!71803)))

(declare-fun b!137517 () Bool)

(declare-fun res!65839 () Bool)

(assert (=> b!137517 (=> (not res!65839) (not e!89493))))

(assert (=> b!137517 (= res!65839 (containsKey!175 lt!71375 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137518 () Bool)

(assert (=> b!137518 (= e!89493 (contains!895 lt!71375 (tuple2!2599 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!43085 res!65838) b!137517))

(assert (= (and b!137517 res!65839) b!137518))

(assert (=> d!43085 m!163025))

(declare-fun m!164045 () Bool)

(assert (=> d!43085 m!164045))

(declare-fun m!164047 () Bool)

(assert (=> d!43085 m!164047))

(declare-fun m!164049 () Bool)

(assert (=> b!137517 m!164049))

(declare-fun m!164051 () Bool)

(assert (=> b!137518 m!164051))

(assert (=> d!42791 d!43085))

(declare-fun b!137519 () Bool)

(declare-fun e!89498 () List!1716)

(declare-fun call!15139 () List!1716)

(assert (=> b!137519 (= e!89498 call!15139)))

(declare-fun e!89496 () List!1716)

(declare-fun b!137520 () Bool)

(assert (=> b!137520 (= e!89496 (insertStrictlySorted!92 (t!6195 (toList!855 e!88910)) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!15134 () Bool)

(declare-fun call!15137 () List!1716)

(assert (=> bm!15134 (= call!15137 call!15139)))

(declare-fun b!137521 () Bool)

(declare-fun e!89495 () List!1716)

(declare-fun call!15138 () List!1716)

(assert (=> b!137521 (= e!89495 call!15138)))

(declare-fun b!137522 () Bool)

(declare-fun c!25854 () Bool)

(declare-fun c!25852 () Bool)

(assert (=> b!137522 (= e!89496 (ite c!25852 (t!6195 (toList!855 e!88910)) (ite c!25854 (Cons!1712 (h!2318 (toList!855 e!88910)) (t!6195 (toList!855 e!88910))) Nil!1713)))))

(declare-fun e!89494 () Bool)

(declare-fun lt!71804 () List!1716)

(declare-fun b!137523 () Bool)

(assert (=> b!137523 (= e!89494 (contains!895 lt!71804 (tuple2!2599 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!137524 () Bool)

(declare-fun e!89497 () List!1716)

(assert (=> b!137524 (= e!89498 e!89497)))

(assert (=> b!137524 (= c!25852 (and ((_ is Cons!1712) (toList!855 e!88910)) (= (_1!1310 (h!2318 (toList!855 e!88910))) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!137525 () Bool)

(declare-fun res!65841 () Bool)

(assert (=> b!137525 (=> (not res!65841) (not e!89494))))

(assert (=> b!137525 (= res!65841 (containsKey!175 lt!71804 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!15135 () Bool)

(assert (=> bm!15135 (= call!15138 call!15137)))

(declare-fun b!137526 () Bool)

(assert (=> b!137526 (= c!25854 (and ((_ is Cons!1712) (toList!855 e!88910)) (bvsgt (_1!1310 (h!2318 (toList!855 e!88910))) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> b!137526 (= e!89497 e!89495)))

(declare-fun b!137527 () Bool)

(assert (=> b!137527 (= e!89495 call!15138)))

(declare-fun bm!15136 () Bool)

(declare-fun c!25851 () Bool)

(assert (=> bm!15136 (= call!15139 ($colon$colon!92 e!89496 (ite c!25851 (h!2318 (toList!855 e!88910)) (tuple2!2599 (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!25853 () Bool)

(assert (=> bm!15136 (= c!25853 c!25851)))

(declare-fun d!43087 () Bool)

(assert (=> d!43087 e!89494))

(declare-fun res!65840 () Bool)

(assert (=> d!43087 (=> (not res!65840) (not e!89494))))

(assert (=> d!43087 (= res!65840 (isStrictlySorted!318 lt!71804))))

(assert (=> d!43087 (= lt!71804 e!89498)))

(assert (=> d!43087 (= c!25851 (and ((_ is Cons!1712) (toList!855 e!88910)) (bvslt (_1!1310 (h!2318 (toList!855 e!88910))) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!43087 (isStrictlySorted!318 (toList!855 e!88910))))

(assert (=> d!43087 (= (insertStrictlySorted!92 (toList!855 e!88910) (_1!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1310 (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!71804)))

(declare-fun b!137528 () Bool)

(assert (=> b!137528 (= e!89497 call!15137)))

(assert (= (and d!43087 c!25851) b!137519))

(assert (= (and d!43087 (not c!25851)) b!137524))

(assert (= (and b!137524 c!25852) b!137528))

(assert (= (and b!137524 (not c!25852)) b!137526))

(assert (= (and b!137526 c!25854) b!137521))

(assert (= (and b!137526 (not c!25854)) b!137527))

(assert (= (or b!137521 b!137527) bm!15135))

(assert (= (or b!137528 bm!15135) bm!15134))

(assert (= (or b!137519 bm!15134) bm!15136))

(assert (= (and bm!15136 c!25853) b!137520))

(assert (= (and bm!15136 (not c!25853)) b!137522))

(assert (= (and d!43087 res!65840) b!137525))

(assert (= (and b!137525 res!65841) b!137523))

(declare-fun m!164053 () Bool)

(assert (=> b!137523 m!164053))

(declare-fun m!164055 () Bool)

(assert (=> b!137520 m!164055))

(declare-fun m!164057 () Bool)

(assert (=> d!43087 m!164057))

(declare-fun m!164059 () Bool)

(assert (=> d!43087 m!164059))

(declare-fun m!164061 () Bool)

(assert (=> b!137525 m!164061))

(declare-fun m!164063 () Bool)

(assert (=> bm!15136 m!164063))

(assert (=> d!42791 d!43087))

(declare-fun b!137531 () Bool)

(declare-fun e!89500 () Option!177)

(assert (=> b!137531 (= e!89500 (getValueByKey!171 (t!6195 (toList!855 lt!71500)) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137532 () Bool)

(assert (=> b!137532 (= e!89500 None!175)))

(declare-fun b!137530 () Bool)

(declare-fun e!89499 () Option!177)

(assert (=> b!137530 (= e!89499 e!89500)))

(declare-fun c!25856 () Bool)

(assert (=> b!137530 (= c!25856 (and ((_ is Cons!1712) (toList!855 lt!71500)) (not (= (_1!1310 (h!2318 (toList!855 lt!71500))) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun d!43089 () Bool)

(declare-fun c!25855 () Bool)

(assert (=> d!43089 (= c!25855 (and ((_ is Cons!1712) (toList!855 lt!71500)) (= (_1!1310 (h!2318 (toList!855 lt!71500))) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43089 (= (getValueByKey!171 (toList!855 lt!71500) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89499)))

(declare-fun b!137529 () Bool)

(assert (=> b!137529 (= e!89499 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71500)))))))

(assert (= (and d!43089 c!25855) b!137529))

(assert (= (and d!43089 (not c!25855)) b!137530))

(assert (= (and b!137530 c!25856) b!137531))

(assert (= (and b!137530 (not c!25856)) b!137532))

(declare-fun m!164065 () Bool)

(assert (=> b!137531 m!164065))

(assert (=> b!136996 d!43089))

(declare-fun d!43091 () Bool)

(declare-fun isEmpty!418 (List!1716) Bool)

(assert (=> d!43091 (= (isEmpty!417 lt!71350) (isEmpty!418 (toList!855 lt!71350)))))

(declare-fun bs!5750 () Bool)

(assert (= bs!5750 d!43091))

(declare-fun m!164067 () Bool)

(assert (=> bs!5750 m!164067))

(assert (=> b!136844 d!43091))

(declare-fun d!43093 () Bool)

(declare-fun e!89501 () Bool)

(assert (=> d!43093 e!89501))

(declare-fun res!65842 () Bool)

(assert (=> d!43093 (=> (not res!65842) (not e!89501))))

(declare-fun lt!71806 () ListLongMap!1679)

(assert (=> d!43093 (= res!65842 (contains!892 lt!71806 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(declare-fun lt!71807 () List!1716)

(assert (=> d!43093 (= lt!71806 (ListLongMap!1680 lt!71807))))

(declare-fun lt!71808 () Unit!4286)

(declare-fun lt!71805 () Unit!4286)

(assert (=> d!43093 (= lt!71808 lt!71805)))

(assert (=> d!43093 (= (getValueByKey!171 lt!71807 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43093 (= lt!71805 (lemmaContainsTupThenGetReturnValue!89 lt!71807 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43093 (= lt!71807 (insertStrictlySorted!92 (toList!855 call!15065) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43093 (= (+!164 call!15065 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71806)))

(declare-fun b!137533 () Bool)

(declare-fun res!65843 () Bool)

(assert (=> b!137533 (=> (not res!65843) (not e!89501))))

(assert (=> b!137533 (= res!65843 (= (getValueByKey!171 (toList!855 lt!71806) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(declare-fun b!137534 () Bool)

(assert (=> b!137534 (= e!89501 (contains!895 (toList!855 lt!71806) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))

(assert (= (and d!43093 res!65842) b!137533))

(assert (= (and b!137533 res!65843) b!137534))

(declare-fun m!164069 () Bool)

(assert (=> d!43093 m!164069))

(declare-fun m!164071 () Bool)

(assert (=> d!43093 m!164071))

(declare-fun m!164073 () Bool)

(assert (=> d!43093 m!164073))

(declare-fun m!164075 () Bool)

(assert (=> d!43093 m!164075))

(declare-fun m!164077 () Bool)

(assert (=> b!137533 m!164077))

(declare-fun m!164079 () Bool)

(assert (=> b!137534 m!164079))

(assert (=> b!136969 d!43093))

(declare-fun b!137535 () Bool)

(declare-fun e!89504 () Bool)

(declare-fun call!15140 () Bool)

(assert (=> b!137535 (= e!89504 call!15140)))

(declare-fun d!43095 () Bool)

(declare-fun res!65844 () Bool)

(declare-fun e!89503 () Bool)

(assert (=> d!43095 (=> res!65844 e!89503)))

(assert (=> d!43095 (= res!65844 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!43095 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4640 newMap!16) (mask!7201 newMap!16)) e!89503)))

(declare-fun b!137536 () Bool)

(declare-fun e!89502 () Bool)

(assert (=> b!137536 (= e!89503 e!89502)))

(declare-fun c!25857 () Bool)

(assert (=> b!137536 (= c!25857 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!15137 () Bool)

(assert (=> bm!15137 (= call!15140 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!137537 () Bool)

(assert (=> b!137537 (= e!89502 e!89504)))

(declare-fun lt!71809 () (_ BitVec 64))

(assert (=> b!137537 (= lt!71809 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!71810 () Unit!4286)

(assert (=> b!137537 (= lt!71810 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4640 newMap!16) lt!71809 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!137537 (arrayContainsKey!0 (_keys!4640 newMap!16) lt!71809 #b00000000000000000000000000000000)))

(declare-fun lt!71811 () Unit!4286)

(assert (=> b!137537 (= lt!71811 lt!71810)))

(declare-fun res!65845 () Bool)

(assert (=> b!137537 (= res!65845 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4640 newMap!16) (mask!7201 newMap!16)) (Found!279 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!137537 (=> (not res!65845) (not e!89504))))

(declare-fun b!137538 () Bool)

(assert (=> b!137538 (= e!89502 call!15140)))

(assert (= (and d!43095 (not res!65844)) b!137536))

(assert (= (and b!137536 c!25857) b!137537))

(assert (= (and b!137536 (not c!25857)) b!137538))

(assert (= (and b!137537 res!65845) b!137535))

(assert (= (or b!137535 b!137538) bm!15137))

(assert (=> b!137536 m!163709))

(assert (=> b!137536 m!163709))

(assert (=> b!137536 m!163711))

(declare-fun m!164081 () Bool)

(assert (=> bm!15137 m!164081))

(assert (=> b!137537 m!163709))

(declare-fun m!164083 () Bool)

(assert (=> b!137537 m!164083))

(declare-fun m!164085 () Bool)

(assert (=> b!137537 m!164085))

(assert (=> b!137537 m!163709))

(declare-fun m!164087 () Bool)

(assert (=> b!137537 m!164087))

(assert (=> bm!15068 d!43095))

(declare-fun d!43097 () Bool)

(assert (=> d!43097 (= (map!1397 (_2!1311 lt!71446)) (getCurrentListMap!521 (_keys!4640 (_2!1311 lt!71446)) (_values!2871 (_2!1311 lt!71446)) (mask!7201 (_2!1311 lt!71446)) (extraKeys!2649 (_2!1311 lt!71446)) (zeroValue!2741 (_2!1311 lt!71446)) (minValue!2741 (_2!1311 lt!71446)) #b00000000000000000000000000000000 (defaultEntry!2888 (_2!1311 lt!71446))))))

(declare-fun bs!5751 () Bool)

(assert (= bs!5751 d!43097))

(declare-fun m!164089 () Bool)

(assert (=> bs!5751 m!164089))

(assert (=> b!136936 d!43097))

(declare-fun d!43099 () Bool)

(declare-fun e!89505 () Bool)

(assert (=> d!43099 e!89505))

(declare-fun res!65846 () Bool)

(assert (=> d!43099 (=> (not res!65846) (not e!89505))))

(declare-fun lt!71813 () ListLongMap!1679)

(assert (=> d!43099 (= res!65846 (contains!892 lt!71813 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!71814 () List!1716)

(assert (=> d!43099 (= lt!71813 (ListLongMap!1680 lt!71814))))

(declare-fun lt!71815 () Unit!4286)

(declare-fun lt!71812 () Unit!4286)

(assert (=> d!43099 (= lt!71815 lt!71812)))

(assert (=> d!43099 (= (getValueByKey!171 lt!71814 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43099 (= lt!71812 (lemmaContainsTupThenGetReturnValue!89 lt!71814 (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43099 (= lt!71814 (insertStrictlySorted!92 (toList!855 (map!1397 newMap!16)) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!43099 (= (+!164 (map!1397 newMap!16) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!71813)))

(declare-fun b!137539 () Bool)

(declare-fun res!65847 () Bool)

(assert (=> b!137539 (=> (not res!65847) (not e!89505))))

(assert (=> b!137539 (= res!65847 (= (getValueByKey!171 (toList!855 lt!71813) (_1!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!176 (_2!1310 (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!137540 () Bool)

(assert (=> b!137540 (= e!89505 (contains!895 (toList!855 lt!71813) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!43099 res!65846) b!137539))

(assert (= (and b!137539 res!65847) b!137540))

(declare-fun m!164091 () Bool)

(assert (=> d!43099 m!164091))

(declare-fun m!164093 () Bool)

(assert (=> d!43099 m!164093))

(declare-fun m!164095 () Bool)

(assert (=> d!43099 m!164095))

(declare-fun m!164097 () Bool)

(assert (=> d!43099 m!164097))

(declare-fun m!164099 () Bool)

(assert (=> b!137539 m!164099))

(declare-fun m!164101 () Bool)

(assert (=> b!137540 m!164101))

(assert (=> b!136936 d!43099))

(assert (=> b!136936 d!42711))

(declare-fun d!43101 () Bool)

(declare-fun e!89506 () Bool)

(assert (=> d!43101 e!89506))

(declare-fun res!65848 () Bool)

(assert (=> d!43101 (=> res!65848 e!89506)))

(declare-fun lt!71816 () Bool)

(assert (=> d!43101 (= res!65848 (not lt!71816))))

(declare-fun lt!71818 () Bool)

(assert (=> d!43101 (= lt!71816 lt!71818)))

(declare-fun lt!71819 () Unit!4286)

(declare-fun e!89507 () Unit!4286)

(assert (=> d!43101 (= lt!71819 e!89507)))

(declare-fun c!25858 () Bool)

(assert (=> d!43101 (= c!25858 lt!71818)))

(assert (=> d!43101 (= lt!71818 (containsKey!175 (toList!855 lt!71362) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!43101 (= (contains!892 lt!71362 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71816)))

(declare-fun b!137541 () Bool)

(declare-fun lt!71817 () Unit!4286)

(assert (=> b!137541 (= e!89507 lt!71817)))

(assert (=> b!137541 (= lt!71817 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71362) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> b!137541 (isDefined!125 (getValueByKey!171 (toList!855 lt!71362) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137542 () Bool)

(declare-fun Unit!4331 () Unit!4286)

(assert (=> b!137542 (= e!89507 Unit!4331)))

(declare-fun b!137543 () Bool)

(assert (=> b!137543 (= e!89506 (isDefined!125 (getValueByKey!171 (toList!855 lt!71362) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!43101 c!25858) b!137541))

(assert (= (and d!43101 (not c!25858)) b!137542))

(assert (= (and d!43101 (not res!65848)) b!137543))

(declare-fun m!164103 () Bool)

(assert (=> d!43101 m!164103))

(declare-fun m!164105 () Bool)

(assert (=> b!137541 m!164105))

(assert (=> b!137541 m!162999))

(assert (=> b!137541 m!162999))

(declare-fun m!164107 () Bool)

(assert (=> b!137541 m!164107))

(assert (=> b!137543 m!162999))

(assert (=> b!137543 m!162999))

(assert (=> b!137543 m!164107))

(assert (=> d!42785 d!43101))

(declare-fun e!89509 () Option!177)

(declare-fun b!137546 () Bool)

(assert (=> b!137546 (= e!89509 (getValueByKey!171 (t!6195 lt!71363) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137547 () Bool)

(assert (=> b!137547 (= e!89509 None!175)))

(declare-fun b!137545 () Bool)

(declare-fun e!89508 () Option!177)

(assert (=> b!137545 (= e!89508 e!89509)))

(declare-fun c!25860 () Bool)

(assert (=> b!137545 (= c!25860 (and ((_ is Cons!1712) lt!71363) (not (= (_1!1310 (h!2318 lt!71363)) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25859 () Bool)

(declare-fun d!43103 () Bool)

(assert (=> d!43103 (= c!25859 (and ((_ is Cons!1712) lt!71363) (= (_1!1310 (h!2318 lt!71363)) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43103 (= (getValueByKey!171 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89508)))

(declare-fun b!137544 () Bool)

(assert (=> b!137544 (= e!89508 (Some!176 (_2!1310 (h!2318 lt!71363))))))

(assert (= (and d!43103 c!25859) b!137544))

(assert (= (and d!43103 (not c!25859)) b!137545))

(assert (= (and b!137545 c!25860) b!137546))

(assert (= (and b!137545 (not c!25860)) b!137547))

(declare-fun m!164109 () Bool)

(assert (=> b!137546 m!164109))

(assert (=> d!42785 d!43103))

(declare-fun d!43105 () Bool)

(assert (=> d!43105 (= (getValueByKey!171 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71820 () Unit!4286)

(assert (=> d!43105 (= lt!71820 (choose!847 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun e!89510 () Bool)

(assert (=> d!43105 e!89510))

(declare-fun res!65849 () Bool)

(assert (=> d!43105 (=> (not res!65849) (not e!89510))))

(assert (=> d!43105 (= res!65849 (isStrictlySorted!318 lt!71363))))

(assert (=> d!43105 (= (lemmaContainsTupThenGetReturnValue!89 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71820)))

(declare-fun b!137548 () Bool)

(declare-fun res!65850 () Bool)

(assert (=> b!137548 (=> (not res!65850) (not e!89510))))

(assert (=> b!137548 (= res!65850 (containsKey!175 lt!71363 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137549 () Bool)

(assert (=> b!137549 (= e!89510 (contains!895 lt!71363 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!43105 res!65849) b!137548))

(assert (= (and b!137548 res!65850) b!137549))

(assert (=> d!43105 m!162993))

(declare-fun m!164111 () Bool)

(assert (=> d!43105 m!164111))

(declare-fun m!164113 () Bool)

(assert (=> d!43105 m!164113))

(declare-fun m!164115 () Bool)

(assert (=> b!137548 m!164115))

(declare-fun m!164117 () Bool)

(assert (=> b!137549 m!164117))

(assert (=> d!42785 d!43105))

(declare-fun b!137550 () Bool)

(declare-fun e!89515 () List!1716)

(declare-fun call!15143 () List!1716)

(assert (=> b!137550 (= e!89515 call!15143)))

(declare-fun b!137551 () Bool)

(declare-fun e!89513 () List!1716)

(assert (=> b!137551 (= e!89513 (insertStrictlySorted!92 (t!6195 (toList!855 lt!71200)) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15138 () Bool)

(declare-fun call!15141 () List!1716)

(assert (=> bm!15138 (= call!15141 call!15143)))

(declare-fun b!137552 () Bool)

(declare-fun e!89512 () List!1716)

(declare-fun call!15142 () List!1716)

(assert (=> b!137552 (= e!89512 call!15142)))

(declare-fun c!25864 () Bool)

(declare-fun c!25862 () Bool)

(declare-fun b!137553 () Bool)

(assert (=> b!137553 (= e!89513 (ite c!25862 (t!6195 (toList!855 lt!71200)) (ite c!25864 (Cons!1712 (h!2318 (toList!855 lt!71200)) (t!6195 (toList!855 lt!71200))) Nil!1713)))))

(declare-fun e!89511 () Bool)

(declare-fun b!137554 () Bool)

(declare-fun lt!71821 () List!1716)

(assert (=> b!137554 (= e!89511 (contains!895 lt!71821 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137555 () Bool)

(declare-fun e!89514 () List!1716)

(assert (=> b!137555 (= e!89515 e!89514)))

(assert (=> b!137555 (= c!25862 (and ((_ is Cons!1712) (toList!855 lt!71200)) (= (_1!1310 (h!2318 (toList!855 lt!71200))) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137556 () Bool)

(declare-fun res!65852 () Bool)

(assert (=> b!137556 (=> (not res!65852) (not e!89511))))

(assert (=> b!137556 (= res!65852 (containsKey!175 lt!71821 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15139 () Bool)

(assert (=> bm!15139 (= call!15142 call!15141)))

(declare-fun b!137557 () Bool)

(assert (=> b!137557 (= c!25864 (and ((_ is Cons!1712) (toList!855 lt!71200)) (bvsgt (_1!1310 (h!2318 (toList!855 lt!71200))) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> b!137557 (= e!89514 e!89512)))

(declare-fun b!137558 () Bool)

(assert (=> b!137558 (= e!89512 call!15142)))

(declare-fun bm!15140 () Bool)

(declare-fun c!25861 () Bool)

(assert (=> bm!15140 (= call!15143 ($colon$colon!92 e!89513 (ite c!25861 (h!2318 (toList!855 lt!71200)) (tuple2!2599 (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25863 () Bool)

(assert (=> bm!15140 (= c!25863 c!25861)))

(declare-fun d!43107 () Bool)

(assert (=> d!43107 e!89511))

(declare-fun res!65851 () Bool)

(assert (=> d!43107 (=> (not res!65851) (not e!89511))))

(assert (=> d!43107 (= res!65851 (isStrictlySorted!318 lt!71821))))

(assert (=> d!43107 (= lt!71821 e!89515)))

(assert (=> d!43107 (= c!25861 (and ((_ is Cons!1712) (toList!855 lt!71200)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71200))) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43107 (isStrictlySorted!318 (toList!855 lt!71200))))

(assert (=> d!43107 (= (insertStrictlySorted!92 (toList!855 lt!71200) (_1!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71821)))

(declare-fun b!137559 () Bool)

(assert (=> b!137559 (= e!89514 call!15141)))

(assert (= (and d!43107 c!25861) b!137550))

(assert (= (and d!43107 (not c!25861)) b!137555))

(assert (= (and b!137555 c!25862) b!137559))

(assert (= (and b!137555 (not c!25862)) b!137557))

(assert (= (and b!137557 c!25864) b!137552))

(assert (= (and b!137557 (not c!25864)) b!137558))

(assert (= (or b!137552 b!137558) bm!15139))

(assert (= (or b!137559 bm!15139) bm!15138))

(assert (= (or b!137550 bm!15138) bm!15140))

(assert (= (and bm!15140 c!25863) b!137551))

(assert (= (and bm!15140 (not c!25863)) b!137553))

(assert (= (and d!43107 res!65851) b!137556))

(assert (= (and b!137556 res!65852) b!137554))

(declare-fun m!164119 () Bool)

(assert (=> b!137554 m!164119))

(declare-fun m!164121 () Bool)

(assert (=> b!137551 m!164121))

(declare-fun m!164123 () Bool)

(assert (=> d!43107 m!164123))

(declare-fun m!164125 () Bool)

(assert (=> d!43107 m!164125))

(declare-fun m!164127 () Bool)

(assert (=> b!137556 m!164127))

(declare-fun m!164129 () Bool)

(assert (=> bm!15140 m!164129))

(assert (=> d!42785 d!43107))

(declare-fun d!43109 () Bool)

(assert (=> d!43109 (= (apply!117 lt!71235 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1493 (getValueByKey!171 (toList!855 lt!71235) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!5752 () Bool)

(assert (= bs!5752 d!43109))

(declare-fun m!164131 () Bool)

(assert (=> bs!5752 m!164131))

(assert (=> bs!5752 m!164131))

(declare-fun m!164133 () Bool)

(assert (=> bs!5752 m!164133))

(assert (=> b!136694 d!43109))

(declare-fun d!43111 () Bool)

(declare-fun e!89516 () Bool)

(assert (=> d!43111 e!89516))

(declare-fun res!65853 () Bool)

(assert (=> d!43111 (=> res!65853 e!89516)))

(declare-fun lt!71822 () Bool)

(assert (=> d!43111 (= res!65853 (not lt!71822))))

(declare-fun lt!71824 () Bool)

(assert (=> d!43111 (= lt!71822 lt!71824)))

(declare-fun lt!71825 () Unit!4286)

(declare-fun e!89517 () Unit!4286)

(assert (=> d!43111 (= lt!71825 e!89517)))

(declare-fun c!25865 () Bool)

(assert (=> d!43111 (= c!25865 lt!71824)))

(assert (=> d!43111 (= lt!71824 (containsKey!175 (toList!855 lt!71350) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43111 (= (contains!892 lt!71350 #b1000000000000000000000000000000000000000000000000000000000000000) lt!71822)))

(declare-fun b!137560 () Bool)

(declare-fun lt!71823 () Unit!4286)

(assert (=> b!137560 (= e!89517 lt!71823)))

(assert (=> b!137560 (= lt!71823 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71350) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137560 (isDefined!125 (getValueByKey!171 (toList!855 lt!71350) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137561 () Bool)

(declare-fun Unit!4332 () Unit!4286)

(assert (=> b!137561 (= e!89517 Unit!4332)))

(declare-fun b!137562 () Bool)

(assert (=> b!137562 (= e!89516 (isDefined!125 (getValueByKey!171 (toList!855 lt!71350) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43111 c!25865) b!137560))

(assert (= (and d!43111 (not c!25865)) b!137561))

(assert (= (and d!43111 (not res!65853)) b!137562))

(declare-fun m!164135 () Bool)

(assert (=> d!43111 m!164135))

(declare-fun m!164137 () Bool)

(assert (=> b!137560 m!164137))

(declare-fun m!164139 () Bool)

(assert (=> b!137560 m!164139))

(assert (=> b!137560 m!164139))

(declare-fun m!164141 () Bool)

(assert (=> b!137560 m!164141))

(assert (=> b!137562 m!164139))

(assert (=> b!137562 m!164139))

(assert (=> b!137562 m!164141))

(assert (=> b!136840 d!43111))

(assert (=> b!136965 d!42845))

(declare-fun d!43113 () Bool)

(declare-fun e!89523 () Bool)

(assert (=> d!43113 e!89523))

(declare-fun res!65861 () Bool)

(assert (=> d!43113 (=> (not res!65861) (not e!89523))))

(assert (=> d!43113 (= res!65861 (or (bvsge #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))))

(declare-fun lt!71841 () ListLongMap!1679)

(declare-fun lt!71826 () ListLongMap!1679)

(assert (=> d!43113 (= lt!71841 lt!71826)))

(declare-fun lt!71844 () Unit!4286)

(declare-fun e!89522 () Unit!4286)

(assert (=> d!43113 (= lt!71844 e!89522)))

(declare-fun c!25870 () Bool)

(declare-fun e!89529 () Bool)

(assert (=> d!43113 (= c!25870 e!89529)))

(declare-fun res!65855 () Bool)

(assert (=> d!43113 (=> (not res!65855) (not e!89529))))

(assert (=> d!43113 (= res!65855 (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun e!89518 () ListLongMap!1679)

(assert (=> d!43113 (= lt!71826 e!89518)))

(declare-fun c!25871 () Bool)

(assert (=> d!43113 (= c!25871 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43113 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43113 (= (getCurrentListMap!521 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71841)))

(declare-fun b!137563 () Bool)

(declare-fun c!25867 () Bool)

(assert (=> b!137563 (= c!25867 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89528 () ListLongMap!1679)

(declare-fun e!89525 () ListLongMap!1679)

(assert (=> b!137563 (= e!89528 e!89525)))

(declare-fun b!137564 () Bool)

(declare-fun call!15149 () ListLongMap!1679)

(assert (=> b!137564 (= e!89528 call!15149)))

(declare-fun b!137565 () Bool)

(declare-fun e!89527 () Bool)

(assert (=> b!137565 (= e!89527 (= (apply!117 lt!71841 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15141 () Bool)

(declare-fun call!15150 () Bool)

(assert (=> bm!15141 (= call!15150 (contains!892 lt!71841 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun call!15146 () ListLongMap!1679)

(declare-fun bm!15142 () Bool)

(assert (=> bm!15142 (= call!15146 (getCurrentListMapNoExtraKeys!129 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15143 () Bool)

(declare-fun call!15147 () ListLongMap!1679)

(assert (=> bm!15143 (= call!15149 call!15147)))

(declare-fun b!137566 () Bool)

(declare-fun res!65858 () Bool)

(assert (=> b!137566 (=> (not res!65858) (not e!89523))))

(declare-fun e!89521 () Bool)

(assert (=> b!137566 (= res!65858 e!89521)))

(declare-fun c!25868 () Bool)

(assert (=> b!137566 (= c!25868 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137567 () Bool)

(assert (=> b!137567 (= e!89518 e!89528)))

(declare-fun c!25866 () Bool)

(assert (=> b!137567 (= c!25866 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137568 () Bool)

(declare-fun call!15145 () ListLongMap!1679)

(assert (=> b!137568 (= e!89525 call!15145)))

(declare-fun bm!15144 () Bool)

(declare-fun call!15144 () ListLongMap!1679)

(assert (=> bm!15144 (= call!15147 (+!164 (ite c!25871 call!15146 (ite c!25866 call!15144 call!15145)) (ite (or c!25871 c!25866) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!137569 () Bool)

(declare-fun e!89524 () Bool)

(assert (=> b!137569 (= e!89523 e!89524)))

(declare-fun c!25869 () Bool)

(assert (=> b!137569 (= c!25869 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15145 () Bool)

(assert (=> bm!15145 (= call!15145 call!15144)))

(declare-fun b!137570 () Bool)

(declare-fun res!65860 () Bool)

(assert (=> b!137570 (=> (not res!65860) (not e!89523))))

(declare-fun e!89519 () Bool)

(assert (=> b!137570 (= res!65860 e!89519)))

(declare-fun res!65862 () Bool)

(assert (=> b!137570 (=> res!65862 e!89519)))

(declare-fun e!89530 () Bool)

(assert (=> b!137570 (= res!65862 (not e!89530))))

(declare-fun res!65859 () Bool)

(assert (=> b!137570 (=> (not res!65859) (not e!89530))))

(assert (=> b!137570 (= res!65859 (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun b!137571 () Bool)

(declare-fun e!89526 () Bool)

(assert (=> b!137571 (= e!89519 e!89526)))

(declare-fun res!65857 () Bool)

(assert (=> b!137571 (=> (not res!65857) (not e!89526))))

(assert (=> b!137571 (= res!65857 (contains!892 lt!71841 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!137571 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun b!137572 () Bool)

(assert (=> b!137572 (= e!89521 (not call!15150))))

(declare-fun b!137573 () Bool)

(assert (=> b!137573 (= e!89530 (validKeyInArray!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!137574 () Bool)

(assert (=> b!137574 (= e!89526 (= (apply!117 lt!71841 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))))))))

(assert (=> b!137574 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(declare-fun b!137575 () Bool)

(declare-fun e!89520 () Bool)

(assert (=> b!137575 (= e!89520 (= (apply!117 lt!71841 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!137576 () Bool)

(assert (=> b!137576 (= e!89525 call!15149)))

(declare-fun b!137577 () Bool)

(assert (=> b!137577 (= e!89518 (+!164 call!15147 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!137578 () Bool)

(assert (=> b!137578 (= e!89521 e!89527)))

(declare-fun res!65856 () Bool)

(assert (=> b!137578 (= res!65856 call!15150)))

(assert (=> b!137578 (=> (not res!65856) (not e!89527))))

(declare-fun b!137579 () Bool)

(declare-fun Unit!4333 () Unit!4286)

(assert (=> b!137579 (= e!89522 Unit!4333)))

(declare-fun b!137580 () Bool)

(assert (=> b!137580 (= e!89524 e!89520)))

(declare-fun res!65854 () Bool)

(declare-fun call!15148 () Bool)

(assert (=> b!137580 (= res!65854 call!15148)))

(assert (=> b!137580 (=> (not res!65854) (not e!89520))))

(declare-fun bm!15146 () Bool)

(assert (=> bm!15146 (= call!15144 call!15146)))

(declare-fun b!137581 () Bool)

(declare-fun lt!71842 () Unit!4286)

(assert (=> b!137581 (= e!89522 lt!71842)))

(declare-fun lt!71835 () ListLongMap!1679)

(assert (=> b!137581 (= lt!71835 (getCurrentListMapNoExtraKeys!129 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71833 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71833 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71847 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71847 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!71828 () Unit!4286)

(assert (=> b!137581 (= lt!71828 (addStillContains!93 lt!71835 lt!71833 (zeroValue!2741 newMap!16) lt!71847))))

(assert (=> b!137581 (contains!892 (+!164 lt!71835 (tuple2!2599 lt!71833 (zeroValue!2741 newMap!16))) lt!71847)))

(declare-fun lt!71834 () Unit!4286)

(assert (=> b!137581 (= lt!71834 lt!71828)))

(declare-fun lt!71837 () ListLongMap!1679)

(assert (=> b!137581 (= lt!71837 (getCurrentListMapNoExtraKeys!129 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71830 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71830 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71843 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71843 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!71827 () Unit!4286)

(assert (=> b!137581 (= lt!71827 (addApplyDifferent!93 lt!71837 lt!71830 (minValue!2741 newMap!16) lt!71843))))

(assert (=> b!137581 (= (apply!117 (+!164 lt!71837 (tuple2!2599 lt!71830 (minValue!2741 newMap!16))) lt!71843) (apply!117 lt!71837 lt!71843))))

(declare-fun lt!71840 () Unit!4286)

(assert (=> b!137581 (= lt!71840 lt!71827)))

(declare-fun lt!71845 () ListLongMap!1679)

(assert (=> b!137581 (= lt!71845 (getCurrentListMapNoExtraKeys!129 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71838 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71838 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71832 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71832 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!71831 () Unit!4286)

(assert (=> b!137581 (= lt!71831 (addApplyDifferent!93 lt!71845 lt!71838 (zeroValue!2741 newMap!16) lt!71832))))

(assert (=> b!137581 (= (apply!117 (+!164 lt!71845 (tuple2!2599 lt!71838 (zeroValue!2741 newMap!16))) lt!71832) (apply!117 lt!71845 lt!71832))))

(declare-fun lt!71839 () Unit!4286)

(assert (=> b!137581 (= lt!71839 lt!71831)))

(declare-fun lt!71836 () ListLongMap!1679)

(assert (=> b!137581 (= lt!71836 (getCurrentListMapNoExtraKeys!129 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71846 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71846 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71829 () (_ BitVec 64))

(assert (=> b!137581 (= lt!71829 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!137581 (= lt!71842 (addApplyDifferent!93 lt!71836 lt!71846 (minValue!2741 newMap!16) lt!71829))))

(assert (=> b!137581 (= (apply!117 (+!164 lt!71836 (tuple2!2599 lt!71846 (minValue!2741 newMap!16))) lt!71829) (apply!117 lt!71836 lt!71829))))

(declare-fun b!137582 () Bool)

(assert (=> b!137582 (= e!89529 (validKeyInArray!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!137583 () Bool)

(assert (=> b!137583 (= e!89524 (not call!15148))))

(declare-fun bm!15147 () Bool)

(assert (=> bm!15147 (= call!15148 (contains!892 lt!71841 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43113 c!25871) b!137577))

(assert (= (and d!43113 (not c!25871)) b!137567))

(assert (= (and b!137567 c!25866) b!137564))

(assert (= (and b!137567 (not c!25866)) b!137563))

(assert (= (and b!137563 c!25867) b!137576))

(assert (= (and b!137563 (not c!25867)) b!137568))

(assert (= (or b!137576 b!137568) bm!15145))

(assert (= (or b!137564 bm!15145) bm!15146))

(assert (= (or b!137564 b!137576) bm!15143))

(assert (= (or b!137577 bm!15146) bm!15142))

(assert (= (or b!137577 bm!15143) bm!15144))

(assert (= (and d!43113 res!65855) b!137582))

(assert (= (and d!43113 c!25870) b!137581))

(assert (= (and d!43113 (not c!25870)) b!137579))

(assert (= (and d!43113 res!65861) b!137570))

(assert (= (and b!137570 res!65859) b!137573))

(assert (= (and b!137570 (not res!65862)) b!137571))

(assert (= (and b!137571 res!65857) b!137574))

(assert (= (and b!137570 res!65860) b!137566))

(assert (= (and b!137566 c!25868) b!137578))

(assert (= (and b!137566 (not c!25868)) b!137572))

(assert (= (and b!137578 res!65856) b!137565))

(assert (= (or b!137578 b!137572) bm!15141))

(assert (= (and b!137566 res!65858) b!137569))

(assert (= (and b!137569 c!25869) b!137580))

(assert (= (and b!137569 (not c!25869)) b!137583))

(assert (= (and b!137580 res!65854) b!137575))

(assert (= (or b!137580 b!137583) bm!15147))

(declare-fun b_lambda!6135 () Bool)

(assert (=> (not b_lambda!6135) (not b!137574)))

(assert (=> b!137574 t!6208))

(declare-fun b_and!8513 () Bool)

(assert (= b_and!8509 (and (=> t!6208 result!4043) b_and!8513)))

(assert (=> b!137574 t!6210))

(declare-fun b_and!8515 () Bool)

(assert (= b_and!8511 (and (=> t!6210 result!4045) b_and!8515)))

(declare-fun m!164143 () Bool)

(assert (=> b!137582 m!164143))

(assert (=> b!137582 m!164143))

(declare-fun m!164145 () Bool)

(assert (=> b!137582 m!164145))

(assert (=> d!43113 m!162671))

(declare-fun m!164147 () Bool)

(assert (=> b!137577 m!164147))

(assert (=> b!137574 m!162699))

(declare-fun m!164149 () Bool)

(assert (=> b!137574 m!164149))

(assert (=> b!137574 m!164149))

(assert (=> b!137574 m!162699))

(declare-fun m!164151 () Bool)

(assert (=> b!137574 m!164151))

(assert (=> b!137574 m!164143))

(assert (=> b!137574 m!164143))

(declare-fun m!164153 () Bool)

(assert (=> b!137574 m!164153))

(declare-fun m!164155 () Bool)

(assert (=> b!137575 m!164155))

(assert (=> b!137573 m!164143))

(assert (=> b!137573 m!164143))

(assert (=> b!137573 m!164145))

(declare-fun m!164157 () Bool)

(assert (=> bm!15147 m!164157))

(declare-fun m!164159 () Bool)

(assert (=> bm!15142 m!164159))

(declare-fun m!164161 () Bool)

(assert (=> b!137565 m!164161))

(declare-fun m!164163 () Bool)

(assert (=> b!137581 m!164163))

(declare-fun m!164165 () Bool)

(assert (=> b!137581 m!164165))

(declare-fun m!164167 () Bool)

(assert (=> b!137581 m!164167))

(declare-fun m!164169 () Bool)

(assert (=> b!137581 m!164169))

(declare-fun m!164171 () Bool)

(assert (=> b!137581 m!164171))

(declare-fun m!164173 () Bool)

(assert (=> b!137581 m!164173))

(assert (=> b!137581 m!164163))

(declare-fun m!164175 () Bool)

(assert (=> b!137581 m!164175))

(declare-fun m!164177 () Bool)

(assert (=> b!137581 m!164177))

(declare-fun m!164179 () Bool)

(assert (=> b!137581 m!164179))

(assert (=> b!137581 m!164159))

(assert (=> b!137581 m!164177))

(declare-fun m!164181 () Bool)

(assert (=> b!137581 m!164181))

(assert (=> b!137581 m!164173))

(declare-fun m!164183 () Bool)

(assert (=> b!137581 m!164183))

(declare-fun m!164185 () Bool)

(assert (=> b!137581 m!164185))

(declare-fun m!164187 () Bool)

(assert (=> b!137581 m!164187))

(assert (=> b!137581 m!164167))

(declare-fun m!164189 () Bool)

(assert (=> b!137581 m!164189))

(declare-fun m!164191 () Bool)

(assert (=> b!137581 m!164191))

(assert (=> b!137581 m!164143))

(assert (=> b!137571 m!164143))

(assert (=> b!137571 m!164143))

(declare-fun m!164193 () Bool)

(assert (=> b!137571 m!164193))

(declare-fun m!164195 () Bool)

(assert (=> bm!15141 m!164195))

(declare-fun m!164197 () Bool)

(assert (=> bm!15144 m!164197))

(assert (=> d!42813 d!43113))

(assert (=> d!42813 d!42729))

(assert (=> d!42813 d!42691))

(declare-fun b!137593 () Bool)

(declare-fun res!65872 () Bool)

(declare-fun e!89536 () Bool)

(assert (=> b!137593 (=> (not res!65872) (not e!89536))))

(assert (=> b!137593 (= res!65872 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137595 () Bool)

(declare-fun e!89535 () Bool)

(assert (=> b!137595 (= e!89535 (= (arrayCountValidKeys!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4640 newMap!16) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!137592 () Bool)

(declare-fun res!65873 () Bool)

(assert (=> b!137592 (=> (not res!65873) (not e!89536))))

(assert (=> b!137592 (= res!65873 (not (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))))

(declare-fun d!43115 () Bool)

(assert (=> d!43115 e!89535))

(declare-fun res!65874 () Bool)

(assert (=> d!43115 (=> (not res!65874) (not e!89535))))

(assert (=> d!43115 (= res!65874 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 (_keys!4640 newMap!16)))))))

(declare-fun lt!71850 () Unit!4286)

(declare-fun choose!1 (array!4783 (_ BitVec 32) (_ BitVec 64)) Unit!4286)

(assert (=> d!43115 (= lt!71850 (choose!1 (_keys!4640 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!43115 e!89536))

(declare-fun res!65871 () Bool)

(assert (=> d!43115 (=> (not res!65871) (not e!89536))))

(assert (=> d!43115 (= res!65871 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 (_keys!4640 newMap!16)))))))

(assert (=> d!43115 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4640 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71850)))

(declare-fun b!137594 () Bool)

(assert (=> b!137594 (= e!89536 (bvslt (size!2531 (_keys!4640 newMap!16)) #b01111111111111111111111111111111))))

(assert (= (and d!43115 res!65871) b!137592))

(assert (= (and b!137592 res!65873) b!137593))

(assert (= (and b!137593 res!65872) b!137594))

(assert (= (and d!43115 res!65874) b!137595))

(assert (=> b!137593 m!162421))

(declare-fun m!164199 () Bool)

(assert (=> b!137593 m!164199))

(assert (=> b!137595 m!163091))

(assert (=> b!137595 m!163085))

(assert (=> b!137595 m!162531))

(declare-fun m!164201 () Bool)

(assert (=> b!137592 m!164201))

(assert (=> b!137592 m!164201))

(declare-fun m!164203 () Bool)

(assert (=> b!137592 m!164203))

(assert (=> d!43115 m!162421))

(declare-fun m!164205 () Bool)

(assert (=> d!43115 m!164205))

(assert (=> d!42813 d!43115))

(assert (=> d!42813 d!42823))

(assert (=> d!42813 d!42793))

(declare-fun bm!15148 () Bool)

(declare-fun call!15151 () (_ BitVec 32))

(assert (=> bm!15148 (= call!15151 (arrayCountValidKeys!0 lt!71449 (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001) (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001)))))

(declare-fun b!137596 () Bool)

(declare-fun e!89538 () (_ BitVec 32))

(assert (=> b!137596 (= e!89538 (bvadd #b00000000000000000000000000000001 call!15151))))

(declare-fun b!137597 () Bool)

(assert (=> b!137597 (= e!89538 call!15151)))

(declare-fun d!43117 () Bool)

(declare-fun lt!71851 () (_ BitVec 32))

(assert (=> d!43117 (and (bvsge lt!71851 #b00000000000000000000000000000000) (bvsle lt!71851 (bvsub (size!2531 lt!71449) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(declare-fun e!89537 () (_ BitVec 32))

(assert (=> d!43117 (= lt!71851 e!89537)))

(declare-fun c!25873 () Bool)

(assert (=> d!43117 (= c!25873 (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001)))))

(assert (=> d!43117 (and (bvsle (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001)) (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001) (size!2531 lt!71449)))))

(assert (=> d!43117 (= (arrayCountValidKeys!0 lt!71449 (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001)) lt!71851)))

(declare-fun b!137598 () Bool)

(assert (=> b!137598 (= e!89537 #b00000000000000000000000000000000)))

(declare-fun b!137599 () Bool)

(assert (=> b!137599 (= e!89537 e!89538)))

(declare-fun c!25872 () Bool)

(assert (=> b!137599 (= c!25872 (validKeyInArray!0 (select (arr!2260 lt!71449) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(assert (= (and d!43117 c!25873) b!137598))

(assert (= (and d!43117 (not c!25873)) b!137599))

(assert (= (and b!137599 c!25872) b!137596))

(assert (= (and b!137599 (not c!25872)) b!137597))

(assert (= (or b!137596 b!137597) bm!15148))

(declare-fun m!164207 () Bool)

(assert (=> bm!15148 m!164207))

(declare-fun m!164209 () Bool)

(assert (=> b!137599 m!164209))

(assert (=> b!137599 m!164209))

(declare-fun m!164211 () Bool)

(assert (=> b!137599 m!164211))

(assert (=> d!42813 d!43117))

(declare-fun d!43119 () Bool)

(declare-fun e!89539 () Bool)

(assert (=> d!43119 e!89539))

(declare-fun res!65875 () Bool)

(assert (=> d!43119 (=> res!65875 e!89539)))

(declare-fun lt!71852 () Bool)

(assert (=> d!43119 (= res!65875 (not lt!71852))))

(declare-fun lt!71854 () Bool)

(assert (=> d!43119 (= lt!71852 lt!71854)))

(declare-fun lt!71855 () Unit!4286)

(declare-fun e!89540 () Unit!4286)

(assert (=> d!43119 (= lt!71855 e!89540)))

(declare-fun c!25874 () Bool)

(assert (=> d!43119 (= c!25874 lt!71854)))

(assert (=> d!43119 (= lt!71854 (containsKey!175 (toList!855 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(assert (=> d!43119 (= (contains!892 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))) lt!71852)))

(declare-fun b!137600 () Bool)

(declare-fun lt!71853 () Unit!4286)

(assert (=> b!137600 (= e!89540 lt!71853)))

(assert (=> b!137600 (= lt!71853 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(assert (=> b!137600 (isDefined!125 (getValueByKey!171 (toList!855 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(declare-fun b!137601 () Bool)

(declare-fun Unit!4334 () Unit!4286)

(assert (=> b!137601 (= e!89540 Unit!4334)))

(declare-fun b!137602 () Bool)

(assert (=> b!137602 (= e!89539 (isDefined!125 (getValueByKey!171 (toList!855 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))))

(assert (= (and d!43119 c!25874) b!137600))

(assert (= (and d!43119 (not c!25874)) b!137601))

(assert (= (and d!43119 (not res!65875)) b!137602))

(assert (=> d!43119 m!163075))

(declare-fun m!164213 () Bool)

(assert (=> d!43119 m!164213))

(assert (=> b!137600 m!163075))

(declare-fun m!164215 () Bool)

(assert (=> b!137600 m!164215))

(assert (=> b!137600 m!163075))

(declare-fun m!164217 () Bool)

(assert (=> b!137600 m!164217))

(assert (=> b!137600 m!164217))

(declare-fun m!164219 () Bool)

(assert (=> b!137600 m!164219))

(assert (=> b!137602 m!163075))

(assert (=> b!137602 m!164217))

(assert (=> b!137602 m!164217))

(assert (=> b!137602 m!164219))

(assert (=> d!42813 d!43119))

(declare-fun d!43121 () Bool)

(declare-fun e!89543 () Bool)

(assert (=> d!43121 e!89543))

(declare-fun res!65878 () Bool)

(assert (=> d!43121 (=> (not res!65878) (not e!89543))))

(assert (=> d!43121 (= res!65878 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 (_keys!4640 newMap!16)))))))

(declare-fun lt!71858 () Unit!4286)

(declare-fun choose!41 (array!4783 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1719) Unit!4286)

(assert (=> d!43121 (= lt!71858 (choose!41 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) lt!71465 lt!71445))))

(assert (=> d!43121 (bvslt (size!2531 (_keys!4640 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!43121 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4640 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) lt!71465 lt!71445) lt!71858)))

(declare-fun b!137605 () Bool)

(assert (=> b!137605 (= e!89543 (arrayNoDuplicates!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) lt!71465 lt!71445))))

(assert (= (and d!43121 res!65878) b!137605))

(assert (=> d!43121 m!162421))

(declare-fun m!164221 () Bool)

(assert (=> d!43121 m!164221))

(assert (=> b!137605 m!163091))

(assert (=> b!137605 m!163101))

(assert (=> d!42813 d!43121))

(declare-fun d!43123 () Bool)

(assert (=> d!43123 (= (arrayCountValidKeys!0 lt!71449 (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (bvadd (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!71861 () Unit!4286)

(declare-fun choose!2 (array!4783 (_ BitVec 32)) Unit!4286)

(assert (=> d!43123 (= lt!71861 (choose!2 lt!71449 (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))

(declare-fun e!89546 () Bool)

(assert (=> d!43123 e!89546))

(declare-fun res!65883 () Bool)

(assert (=> d!43123 (=> (not res!65883) (not e!89546))))

(assert (=> d!43123 (= res!65883 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 lt!71449))))))

(assert (=> d!43123 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!71449 (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))) lt!71861)))

(declare-fun b!137610 () Bool)

(declare-fun res!65884 () Bool)

(assert (=> b!137610 (=> (not res!65884) (not e!89546))))

(assert (=> b!137610 (= res!65884 (validKeyInArray!0 (select (arr!2260 lt!71449) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(declare-fun b!137611 () Bool)

(assert (=> b!137611 (= e!89546 (bvslt (size!2531 lt!71449) #b01111111111111111111111111111111))))

(assert (= (and d!43123 res!65883) b!137610))

(assert (= (and b!137610 res!65884) b!137611))

(assert (=> d!43123 m!163079))

(declare-fun m!164223 () Bool)

(assert (=> d!43123 m!164223))

(assert (=> b!137610 m!164209))

(assert (=> b!137610 m!164209))

(assert (=> b!137610 m!164211))

(assert (=> d!42813 d!43123))

(declare-fun d!43125 () Bool)

(declare-fun e!89549 () Bool)

(assert (=> d!43125 e!89549))

(declare-fun res!65887 () Bool)

(assert (=> d!43125 (=> (not res!65887) (not e!89549))))

(assert (=> d!43125 (= res!65887 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 (_keys!4640 newMap!16)))))))

(declare-fun lt!71864 () Unit!4286)

(declare-fun choose!102 ((_ BitVec 64) array!4783 (_ BitVec 32) (_ BitVec 32)) Unit!4286)

(assert (=> d!43125 (= lt!71864 (choose!102 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (mask!7201 newMap!16)))))

(assert (=> d!43125 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43125 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (mask!7201 newMap!16)) lt!71864)))

(declare-fun b!137614 () Bool)

(assert (=> b!137614 (= e!89549 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (mask!7201 newMap!16)))))

(assert (= (and d!43125 res!65887) b!137614))

(assert (=> d!43125 m!162421))

(declare-fun m!164225 () Bool)

(assert (=> d!43125 m!164225))

(assert (=> d!43125 m!162671))

(assert (=> b!137614 m!163091))

(assert (=> b!137614 m!163103))

(assert (=> d!42813 d!43125))

(assert (=> d!42813 d!42861))

(declare-fun bm!15149 () Bool)

(declare-fun call!15152 () (_ BitVec 32))

(assert (=> bm!15149 (= call!15152 (arrayCountValidKeys!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137615 () Bool)

(declare-fun e!89551 () (_ BitVec 32))

(assert (=> b!137615 (= e!89551 (bvadd #b00000000000000000000000000000001 call!15152))))

(declare-fun b!137616 () Bool)

(assert (=> b!137616 (= e!89551 call!15152)))

(declare-fun d!43127 () Bool)

(declare-fun lt!71865 () (_ BitVec 32))

(assert (=> d!43127 (and (bvsge lt!71865 #b00000000000000000000000000000000) (bvsle lt!71865 (bvsub (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!89550 () (_ BitVec 32))

(assert (=> d!43127 (= lt!71865 e!89550)))

(declare-fun c!25876 () Bool)

(assert (=> d!43127 (= c!25876 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!43127 (and (bvsle #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2531 (_keys!4640 newMap!16)) (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(assert (=> d!43127 (= (arrayCountValidKeys!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) #b00000000000000000000000000000000 (size!2531 (_keys!4640 newMap!16))) lt!71865)))

(declare-fun b!137617 () Bool)

(assert (=> b!137617 (= e!89550 #b00000000000000000000000000000000)))

(declare-fun b!137618 () Bool)

(assert (=> b!137618 (= e!89550 e!89551)))

(declare-fun c!25875 () Bool)

(assert (=> b!137618 (= c!25875 (validKeyInArray!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!43127 c!25876) b!137617))

(assert (= (and d!43127 (not c!25876)) b!137618))

(assert (= (and b!137618 c!25875) b!137615))

(assert (= (and b!137618 (not c!25875)) b!137616))

(assert (= (or b!137615 b!137616) bm!15149))

(declare-fun m!164227 () Bool)

(assert (=> bm!15149 m!164227))

(assert (=> b!137618 m!164143))

(assert (=> b!137618 m!164143))

(assert (=> b!137618 m!164145))

(assert (=> d!42813 d!43127))

(declare-fun d!43129 () Bool)

(declare-fun res!65889 () Bool)

(declare-fun e!89553 () Bool)

(assert (=> d!43129 (=> res!65889 e!89553)))

(assert (=> d!43129 (= res!65889 (bvsge lt!71465 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(assert (=> d!43129 (= (arrayNoDuplicates!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) lt!71465 lt!71445) e!89553)))

(declare-fun b!137619 () Bool)

(declare-fun e!89555 () Bool)

(declare-fun e!89552 () Bool)

(assert (=> b!137619 (= e!89555 e!89552)))

(declare-fun c!25877 () Bool)

(assert (=> b!137619 (= c!25877 (validKeyInArray!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) lt!71465)))))

(declare-fun e!89554 () Bool)

(declare-fun b!137620 () Bool)

(assert (=> b!137620 (= e!89554 (contains!896 lt!71445 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) lt!71465)))))

(declare-fun b!137621 () Bool)

(declare-fun call!15153 () Bool)

(assert (=> b!137621 (= e!89552 call!15153)))

(declare-fun bm!15150 () Bool)

(assert (=> bm!15150 (= call!15153 (arrayNoDuplicates!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (bvadd lt!71465 #b00000000000000000000000000000001) (ite c!25877 (Cons!1715 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) lt!71465) lt!71445) lt!71445)))))

(declare-fun b!137622 () Bool)

(assert (=> b!137622 (= e!89553 e!89555)))

(declare-fun res!65888 () Bool)

(assert (=> b!137622 (=> (not res!65888) (not e!89555))))

(assert (=> b!137622 (= res!65888 (not e!89554))))

(declare-fun res!65890 () Bool)

(assert (=> b!137622 (=> (not res!65890) (not e!89554))))

(assert (=> b!137622 (= res!65890 (validKeyInArray!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) lt!71465)))))

(declare-fun b!137623 () Bool)

(assert (=> b!137623 (= e!89552 call!15153)))

(assert (= (and d!43129 (not res!65889)) b!137622))

(assert (= (and b!137622 res!65890) b!137620))

(assert (= (and b!137622 res!65888) b!137619))

(assert (= (and b!137619 c!25877) b!137623))

(assert (= (and b!137619 (not c!25877)) b!137621))

(assert (= (or b!137623 b!137621) bm!15150))

(declare-fun m!164229 () Bool)

(assert (=> b!137619 m!164229))

(assert (=> b!137619 m!164229))

(declare-fun m!164231 () Bool)

(assert (=> b!137619 m!164231))

(assert (=> b!137620 m!164229))

(assert (=> b!137620 m!164229))

(declare-fun m!164233 () Bool)

(assert (=> b!137620 m!164233))

(assert (=> bm!15150 m!164229))

(declare-fun m!164235 () Bool)

(assert (=> bm!15150 m!164235))

(assert (=> b!137622 m!164229))

(assert (=> b!137622 m!164229))

(assert (=> b!137622 m!164231))

(assert (=> d!42813 d!43129))

(declare-fun b!137624 () Bool)

(declare-fun e!89558 () Bool)

(declare-fun call!15154 () Bool)

(assert (=> b!137624 (= e!89558 call!15154)))

(declare-fun d!43131 () Bool)

(declare-fun res!65891 () Bool)

(declare-fun e!89557 () Bool)

(assert (=> d!43131 (=> res!65891 e!89557)))

(assert (=> d!43131 (= res!65891 (bvsge #b00000000000000000000000000000000 (size!2531 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))))))))

(assert (=> d!43131 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (mask!7201 newMap!16)) e!89557)))

(declare-fun b!137625 () Bool)

(declare-fun e!89556 () Bool)

(assert (=> b!137625 (= e!89557 e!89556)))

(declare-fun c!25878 () Bool)

(assert (=> b!137625 (= c!25878 (validKeyInArray!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!15151 () Bool)

(assert (=> bm!15151 (= call!15154 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (mask!7201 newMap!16)))))

(declare-fun b!137626 () Bool)

(assert (=> b!137626 (= e!89556 e!89558)))

(declare-fun lt!71866 () (_ BitVec 64))

(assert (=> b!137626 (= lt!71866 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!71867 () Unit!4286)

(assert (=> b!137626 (= lt!71867 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) lt!71866 #b00000000000000000000000000000000))))

(assert (=> b!137626 (arrayContainsKey!0 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) lt!71866 #b00000000000000000000000000000000)))

(declare-fun lt!71868 () Unit!4286)

(assert (=> b!137626 (= lt!71868 lt!71867)))

(declare-fun res!65892 () Bool)

(assert (=> b!137626 (= res!65892 (= (seekEntryOrOpen!0 (select (arr!2260 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16)))) #b00000000000000000000000000000000) (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (mask!7201 newMap!16)) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!137626 (=> (not res!65892) (not e!89558))))

(declare-fun b!137627 () Bool)

(assert (=> b!137627 (= e!89556 call!15154)))

(assert (= (and d!43131 (not res!65891)) b!137625))

(assert (= (and b!137625 c!25878) b!137626))

(assert (= (and b!137625 (not c!25878)) b!137627))

(assert (= (and b!137626 res!65892) b!137624))

(assert (= (or b!137624 b!137627) bm!15151))

(assert (=> b!137625 m!164143))

(assert (=> b!137625 m!164143))

(assert (=> b!137625 m!164145))

(declare-fun m!164237 () Bool)

(assert (=> bm!15151 m!164237))

(assert (=> b!137626 m!164143))

(declare-fun m!164239 () Bool)

(assert (=> b!137626 m!164239))

(declare-fun m!164241 () Bool)

(assert (=> b!137626 m!164241))

(assert (=> b!137626 m!164143))

(declare-fun m!164243 () Bool)

(assert (=> b!137626 m!164243))

(assert (=> d!42813 d!43131))

(declare-fun d!43133 () Bool)

(declare-fun res!65893 () Bool)

(declare-fun e!89559 () Bool)

(assert (=> d!43133 (=> res!65893 e!89559)))

(assert (=> d!43133 (= res!65893 (= (select (arr!2260 lt!71464) #b00000000000000000000000000000000) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!43133 (= (arrayContainsKey!0 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000) e!89559)))

(declare-fun b!137628 () Bool)

(declare-fun e!89560 () Bool)

(assert (=> b!137628 (= e!89559 e!89560)))

(declare-fun res!65894 () Bool)

(assert (=> b!137628 (=> (not res!65894) (not e!89560))))

(assert (=> b!137628 (= res!65894 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 lt!71464)))))

(declare-fun b!137629 () Bool)

(assert (=> b!137629 (= e!89560 (arrayContainsKey!0 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43133 (not res!65893)) b!137628))

(assert (= (and b!137628 res!65894) b!137629))

(declare-fun m!164245 () Bool)

(assert (=> d!43133 m!164245))

(assert (=> b!137629 m!162421))

(declare-fun m!164247 () Bool)

(assert (=> b!137629 m!164247))

(assert (=> d!42813 d!43133))

(declare-fun d!43135 () Bool)

(declare-fun e!89561 () Bool)

(assert (=> d!43135 e!89561))

(declare-fun res!65895 () Bool)

(assert (=> d!43135 (=> (not res!65895) (not e!89561))))

(assert (=> d!43135 (= res!65895 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 lt!71471))))))

(declare-fun lt!71869 () Unit!4286)

(assert (=> d!43135 (= lt!71869 (choose!840 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (defaultEntry!2888 newMap!16)))))

(assert (=> d!43135 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43135 (= (lemmaValidKeyInArrayIsInListMap!121 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (defaultEntry!2888 newMap!16)) lt!71869)))

(declare-fun b!137630 () Bool)

(assert (=> b!137630 (= e!89561 (contains!892 (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 lt!71471) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)))))))

(assert (= (and d!43135 res!65895) b!137630))

(declare-fun m!164249 () Bool)

(assert (=> d!43135 m!164249))

(assert (=> d!43135 m!162671))

(assert (=> b!137630 m!163073))

(declare-fun m!164251 () Bool)

(assert (=> b!137630 m!164251))

(assert (=> b!137630 m!163073))

(assert (=> b!137630 m!164251))

(declare-fun m!164253 () Bool)

(assert (=> b!137630 m!164253))

(assert (=> d!42813 d!43135))

(declare-fun d!43137 () Bool)

(declare-fun e!89564 () Bool)

(assert (=> d!43137 e!89564))

(declare-fun res!65898 () Bool)

(assert (=> d!43137 (=> (not res!65898) (not e!89564))))

(assert (=> d!43137 (= res!65898 (and (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2531 (_keys!4640 newMap!16))) (bvslt (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (size!2532 (_values!2871 newMap!16)))))))

(declare-fun lt!71872 () Unit!4286)

(declare-fun choose!849 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 32) (_ BitVec 64) V!3497 Int) Unit!4286)

(assert (=> d!43137 (= lt!71872 (choose!849 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)))))

(assert (=> d!43137 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43137 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!43 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2888 newMap!16)) lt!71872)))

(declare-fun b!137633 () Bool)

(assert (=> b!137633 (= e!89564 (= (+!164 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!521 (array!4784 (store (arr!2260 (_keys!4640 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (size!2531 (_keys!4640 newMap!16))) (array!4786 (store (arr!2261 (_values!2871 newMap!16)) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) (ValueCellFull!1100 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2532 (_values!2871 newMap!16))) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))))))

(assert (= (and d!43137 res!65898) b!137633))

(assert (=> d!43137 m!162421))

(assert (=> d!43137 m!162445))

(declare-fun m!164255 () Bool)

(assert (=> d!43137 m!164255))

(assert (=> d!43137 m!162671))

(assert (=> b!137633 m!163091))

(assert (=> b!137633 m!163093))

(assert (=> b!137633 m!162545))

(assert (=> b!137633 m!162861))

(assert (=> b!137633 m!163071))

(assert (=> b!137633 m!162545))

(assert (=> d!42813 d!43137))

(declare-fun d!43139 () Bool)

(declare-fun e!89565 () Bool)

(assert (=> d!43139 e!89565))

(declare-fun res!65899 () Bool)

(assert (=> d!43139 (=> res!65899 e!89565)))

(declare-fun lt!71873 () Bool)

(assert (=> d!43139 (= res!65899 (not lt!71873))))

(declare-fun lt!71875 () Bool)

(assert (=> d!43139 (= lt!71873 lt!71875)))

(declare-fun lt!71876 () Unit!4286)

(declare-fun e!89566 () Unit!4286)

(assert (=> d!43139 (= lt!71876 e!89566)))

(declare-fun c!25879 () Bool)

(assert (=> d!43139 (= c!25879 lt!71875)))

(assert (=> d!43139 (= lt!71875 (containsKey!175 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!43139 (= (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71873)))

(declare-fun b!137634 () Bool)

(declare-fun lt!71874 () Unit!4286)

(assert (=> b!137634 (= e!89566 lt!71874)))

(assert (=> b!137634 (= lt!71874 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!137634 (isDefined!125 (getValueByKey!171 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137635 () Bool)

(declare-fun Unit!4335 () Unit!4286)

(assert (=> b!137635 (= e!89566 Unit!4335)))

(declare-fun b!137636 () Bool)

(assert (=> b!137636 (= e!89565 (isDefined!125 (getValueByKey!171 (toList!855 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (= (and d!43139 c!25879) b!137634))

(assert (= (and d!43139 (not c!25879)) b!137635))

(assert (= (and d!43139 (not res!65899)) b!137636))

(assert (=> d!43139 m!162421))

(declare-fun m!164257 () Bool)

(assert (=> d!43139 m!164257))

(assert (=> b!137634 m!162421))

(declare-fun m!164259 () Bool)

(assert (=> b!137634 m!164259))

(assert (=> b!137634 m!162421))

(declare-fun m!164261 () Bool)

(assert (=> b!137634 m!164261))

(assert (=> b!137634 m!164261))

(declare-fun m!164263 () Bool)

(assert (=> b!137634 m!164263))

(assert (=> b!137636 m!162421))

(assert (=> b!137636 m!164261))

(assert (=> b!137636 m!164261))

(assert (=> b!137636 m!164263))

(assert (=> d!42813 d!43139))

(declare-fun d!43141 () Bool)

(declare-fun e!89572 () Bool)

(assert (=> d!43141 e!89572))

(declare-fun res!65907 () Bool)

(assert (=> d!43141 (=> (not res!65907) (not e!89572))))

(assert (=> d!43141 (= res!65907 (or (bvsge #b00000000000000000000000000000000 (size!2531 lt!71471)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!71471)))))))

(declare-fun lt!71892 () ListLongMap!1679)

(declare-fun lt!71877 () ListLongMap!1679)

(assert (=> d!43141 (= lt!71892 lt!71877)))

(declare-fun lt!71895 () Unit!4286)

(declare-fun e!89571 () Unit!4286)

(assert (=> d!43141 (= lt!71895 e!89571)))

(declare-fun c!25884 () Bool)

(declare-fun e!89578 () Bool)

(assert (=> d!43141 (= c!25884 e!89578)))

(declare-fun res!65901 () Bool)

(assert (=> d!43141 (=> (not res!65901) (not e!89578))))

(assert (=> d!43141 (= res!65901 (bvslt #b00000000000000000000000000000000 (size!2531 lt!71471)))))

(declare-fun e!89567 () ListLongMap!1679)

(assert (=> d!43141 (= lt!71877 e!89567)))

(declare-fun c!25885 () Bool)

(assert (=> d!43141 (= c!25885 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!43141 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43141 (= (getCurrentListMap!521 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71892)))

(declare-fun b!137637 () Bool)

(declare-fun c!25881 () Bool)

(assert (=> b!137637 (= c!25881 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun e!89577 () ListLongMap!1679)

(declare-fun e!89574 () ListLongMap!1679)

(assert (=> b!137637 (= e!89577 e!89574)))

(declare-fun b!137638 () Bool)

(declare-fun call!15160 () ListLongMap!1679)

(assert (=> b!137638 (= e!89577 call!15160)))

(declare-fun b!137639 () Bool)

(declare-fun e!89576 () Bool)

(assert (=> b!137639 (= e!89576 (= (apply!117 lt!71892 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2741 newMap!16)))))

(declare-fun bm!15152 () Bool)

(declare-fun call!15161 () Bool)

(assert (=> bm!15152 (= call!15161 (contains!892 lt!71892 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!15153 () Bool)

(declare-fun call!15157 () ListLongMap!1679)

(assert (=> bm!15153 (= call!15157 (getCurrentListMapNoExtraKeys!129 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun bm!15154 () Bool)

(declare-fun call!15158 () ListLongMap!1679)

(assert (=> bm!15154 (= call!15160 call!15158)))

(declare-fun b!137640 () Bool)

(declare-fun res!65904 () Bool)

(assert (=> b!137640 (=> (not res!65904) (not e!89572))))

(declare-fun e!89570 () Bool)

(assert (=> b!137640 (= res!65904 e!89570)))

(declare-fun c!25882 () Bool)

(assert (=> b!137640 (= c!25882 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun b!137641 () Bool)

(assert (=> b!137641 (= e!89567 e!89577)))

(declare-fun c!25880 () Bool)

(assert (=> b!137641 (= c!25880 (and (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!137642 () Bool)

(declare-fun call!15156 () ListLongMap!1679)

(assert (=> b!137642 (= e!89574 call!15156)))

(declare-fun bm!15155 () Bool)

(declare-fun call!15155 () ListLongMap!1679)

(assert (=> bm!15155 (= call!15158 (+!164 (ite c!25885 call!15157 (ite c!25880 call!15155 call!15156)) (ite (or c!25885 c!25880) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 newMap!16)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun b!137643 () Bool)

(declare-fun e!89573 () Bool)

(assert (=> b!137643 (= e!89572 e!89573)))

(declare-fun c!25883 () Bool)

(assert (=> b!137643 (= c!25883 (not (= (bvand (extraKeys!2649 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun bm!15156 () Bool)

(assert (=> bm!15156 (= call!15156 call!15155)))

(declare-fun b!137644 () Bool)

(declare-fun res!65906 () Bool)

(assert (=> b!137644 (=> (not res!65906) (not e!89572))))

(declare-fun e!89568 () Bool)

(assert (=> b!137644 (= res!65906 e!89568)))

(declare-fun res!65908 () Bool)

(assert (=> b!137644 (=> res!65908 e!89568)))

(declare-fun e!89579 () Bool)

(assert (=> b!137644 (= res!65908 (not e!89579))))

(declare-fun res!65905 () Bool)

(assert (=> b!137644 (=> (not res!65905) (not e!89579))))

(assert (=> b!137644 (= res!65905 (bvslt #b00000000000000000000000000000000 (size!2531 lt!71471)))))

(declare-fun b!137645 () Bool)

(declare-fun e!89575 () Bool)

(assert (=> b!137645 (= e!89568 e!89575)))

(declare-fun res!65903 () Bool)

(assert (=> b!137645 (=> (not res!65903) (not e!89575))))

(assert (=> b!137645 (= res!65903 (contains!892 lt!71892 (select (arr!2260 lt!71471) #b00000000000000000000000000000000)))))

(assert (=> b!137645 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!71471)))))

(declare-fun b!137646 () Bool)

(assert (=> b!137646 (= e!89570 (not call!15161))))

(declare-fun b!137647 () Bool)

(assert (=> b!137647 (= e!89579 (validKeyInArray!0 (select (arr!2260 lt!71471) #b00000000000000000000000000000000)))))

(declare-fun b!137648 () Bool)

(assert (=> b!137648 (= e!89575 (= (apply!117 lt!71892 (select (arr!2260 lt!71471) #b00000000000000000000000000000000)) (get!1488 (select (arr!2261 lt!71467) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!137648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2532 lt!71467)))))

(assert (=> b!137648 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2531 lt!71471)))))

(declare-fun b!137649 () Bool)

(declare-fun e!89569 () Bool)

(assert (=> b!137649 (= e!89569 (= (apply!117 lt!71892 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2741 newMap!16)))))

(declare-fun b!137650 () Bool)

(assert (=> b!137650 (= e!89574 call!15160)))

(declare-fun b!137651 () Bool)

(assert (=> b!137651 (= e!89567 (+!164 call!15158 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(declare-fun b!137652 () Bool)

(assert (=> b!137652 (= e!89570 e!89576)))

(declare-fun res!65902 () Bool)

(assert (=> b!137652 (= res!65902 call!15161)))

(assert (=> b!137652 (=> (not res!65902) (not e!89576))))

(declare-fun b!137653 () Bool)

(declare-fun Unit!4336 () Unit!4286)

(assert (=> b!137653 (= e!89571 Unit!4336)))

(declare-fun b!137654 () Bool)

(assert (=> b!137654 (= e!89573 e!89569)))

(declare-fun res!65900 () Bool)

(declare-fun call!15159 () Bool)

(assert (=> b!137654 (= res!65900 call!15159)))

(assert (=> b!137654 (=> (not res!65900) (not e!89569))))

(declare-fun bm!15157 () Bool)

(assert (=> bm!15157 (= call!15155 call!15157)))

(declare-fun b!137655 () Bool)

(declare-fun lt!71893 () Unit!4286)

(assert (=> b!137655 (= e!89571 lt!71893)))

(declare-fun lt!71886 () ListLongMap!1679)

(assert (=> b!137655 (= lt!71886 (getCurrentListMapNoExtraKeys!129 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71884 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71884 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71898 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71898 (select (arr!2260 lt!71471) #b00000000000000000000000000000000))))

(declare-fun lt!71879 () Unit!4286)

(assert (=> b!137655 (= lt!71879 (addStillContains!93 lt!71886 lt!71884 (zeroValue!2741 newMap!16) lt!71898))))

(assert (=> b!137655 (contains!892 (+!164 lt!71886 (tuple2!2599 lt!71884 (zeroValue!2741 newMap!16))) lt!71898)))

(declare-fun lt!71885 () Unit!4286)

(assert (=> b!137655 (= lt!71885 lt!71879)))

(declare-fun lt!71888 () ListLongMap!1679)

(assert (=> b!137655 (= lt!71888 (getCurrentListMapNoExtraKeys!129 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71881 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71881 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71894 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71894 (select (arr!2260 lt!71471) #b00000000000000000000000000000000))))

(declare-fun lt!71878 () Unit!4286)

(assert (=> b!137655 (= lt!71878 (addApplyDifferent!93 lt!71888 lt!71881 (minValue!2741 newMap!16) lt!71894))))

(assert (=> b!137655 (= (apply!117 (+!164 lt!71888 (tuple2!2599 lt!71881 (minValue!2741 newMap!16))) lt!71894) (apply!117 lt!71888 lt!71894))))

(declare-fun lt!71891 () Unit!4286)

(assert (=> b!137655 (= lt!71891 lt!71878)))

(declare-fun lt!71896 () ListLongMap!1679)

(assert (=> b!137655 (= lt!71896 (getCurrentListMapNoExtraKeys!129 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71889 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71889 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71883 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71883 (select (arr!2260 lt!71471) #b00000000000000000000000000000000))))

(declare-fun lt!71882 () Unit!4286)

(assert (=> b!137655 (= lt!71882 (addApplyDifferent!93 lt!71896 lt!71889 (zeroValue!2741 newMap!16) lt!71883))))

(assert (=> b!137655 (= (apply!117 (+!164 lt!71896 (tuple2!2599 lt!71889 (zeroValue!2741 newMap!16))) lt!71883) (apply!117 lt!71896 lt!71883))))

(declare-fun lt!71890 () Unit!4286)

(assert (=> b!137655 (= lt!71890 lt!71882)))

(declare-fun lt!71887 () ListLongMap!1679)

(assert (=> b!137655 (= lt!71887 (getCurrentListMapNoExtraKeys!129 lt!71471 lt!71467 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(declare-fun lt!71897 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71897 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!71880 () (_ BitVec 64))

(assert (=> b!137655 (= lt!71880 (select (arr!2260 lt!71471) #b00000000000000000000000000000000))))

(assert (=> b!137655 (= lt!71893 (addApplyDifferent!93 lt!71887 lt!71897 (minValue!2741 newMap!16) lt!71880))))

(assert (=> b!137655 (= (apply!117 (+!164 lt!71887 (tuple2!2599 lt!71897 (minValue!2741 newMap!16))) lt!71880) (apply!117 lt!71887 lt!71880))))

(declare-fun b!137656 () Bool)

(assert (=> b!137656 (= e!89578 (validKeyInArray!0 (select (arr!2260 lt!71471) #b00000000000000000000000000000000)))))

(declare-fun b!137657 () Bool)

(assert (=> b!137657 (= e!89573 (not call!15159))))

(declare-fun bm!15158 () Bool)

(assert (=> bm!15158 (= call!15159 (contains!892 lt!71892 #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!43141 c!25885) b!137651))

(assert (= (and d!43141 (not c!25885)) b!137641))

(assert (= (and b!137641 c!25880) b!137638))

(assert (= (and b!137641 (not c!25880)) b!137637))

(assert (= (and b!137637 c!25881) b!137650))

(assert (= (and b!137637 (not c!25881)) b!137642))

(assert (= (or b!137650 b!137642) bm!15156))

(assert (= (or b!137638 bm!15156) bm!15157))

(assert (= (or b!137638 b!137650) bm!15154))

(assert (= (or b!137651 bm!15157) bm!15153))

(assert (= (or b!137651 bm!15154) bm!15155))

(assert (= (and d!43141 res!65901) b!137656))

(assert (= (and d!43141 c!25884) b!137655))

(assert (= (and d!43141 (not c!25884)) b!137653))

(assert (= (and d!43141 res!65907) b!137644))

(assert (= (and b!137644 res!65905) b!137647))

(assert (= (and b!137644 (not res!65908)) b!137645))

(assert (= (and b!137645 res!65903) b!137648))

(assert (= (and b!137644 res!65906) b!137640))

(assert (= (and b!137640 c!25882) b!137652))

(assert (= (and b!137640 (not c!25882)) b!137646))

(assert (= (and b!137652 res!65902) b!137639))

(assert (= (or b!137652 b!137646) bm!15152))

(assert (= (and b!137640 res!65904) b!137643))

(assert (= (and b!137643 c!25883) b!137654))

(assert (= (and b!137643 (not c!25883)) b!137657))

(assert (= (and b!137654 res!65900) b!137649))

(assert (= (or b!137654 b!137657) bm!15158))

(declare-fun b_lambda!6137 () Bool)

(assert (=> (not b_lambda!6137) (not b!137648)))

(assert (=> b!137648 t!6208))

(declare-fun b_and!8517 () Bool)

(assert (= b_and!8513 (and (=> t!6208 result!4043) b_and!8517)))

(assert (=> b!137648 t!6210))

(declare-fun b_and!8519 () Bool)

(assert (= b_and!8515 (and (=> t!6210 result!4045) b_and!8519)))

(declare-fun m!164265 () Bool)

(assert (=> b!137656 m!164265))

(assert (=> b!137656 m!164265))

(declare-fun m!164267 () Bool)

(assert (=> b!137656 m!164267))

(assert (=> d!43141 m!162671))

(declare-fun m!164269 () Bool)

(assert (=> b!137651 m!164269))

(assert (=> b!137648 m!162699))

(declare-fun m!164271 () Bool)

(assert (=> b!137648 m!164271))

(assert (=> b!137648 m!164271))

(assert (=> b!137648 m!162699))

(declare-fun m!164273 () Bool)

(assert (=> b!137648 m!164273))

(assert (=> b!137648 m!164265))

(assert (=> b!137648 m!164265))

(declare-fun m!164275 () Bool)

(assert (=> b!137648 m!164275))

(declare-fun m!164277 () Bool)

(assert (=> b!137649 m!164277))

(assert (=> b!137647 m!164265))

(assert (=> b!137647 m!164265))

(assert (=> b!137647 m!164267))

(declare-fun m!164279 () Bool)

(assert (=> bm!15158 m!164279))

(declare-fun m!164281 () Bool)

(assert (=> bm!15153 m!164281))

(declare-fun m!164283 () Bool)

(assert (=> b!137639 m!164283))

(declare-fun m!164285 () Bool)

(assert (=> b!137655 m!164285))

(declare-fun m!164287 () Bool)

(assert (=> b!137655 m!164287))

(declare-fun m!164289 () Bool)

(assert (=> b!137655 m!164289))

(declare-fun m!164291 () Bool)

(assert (=> b!137655 m!164291))

(declare-fun m!164293 () Bool)

(assert (=> b!137655 m!164293))

(declare-fun m!164295 () Bool)

(assert (=> b!137655 m!164295))

(assert (=> b!137655 m!164285))

(declare-fun m!164297 () Bool)

(assert (=> b!137655 m!164297))

(declare-fun m!164299 () Bool)

(assert (=> b!137655 m!164299))

(declare-fun m!164301 () Bool)

(assert (=> b!137655 m!164301))

(assert (=> b!137655 m!164281))

(assert (=> b!137655 m!164299))

(declare-fun m!164303 () Bool)

(assert (=> b!137655 m!164303))

(assert (=> b!137655 m!164295))

(declare-fun m!164305 () Bool)

(assert (=> b!137655 m!164305))

(declare-fun m!164307 () Bool)

(assert (=> b!137655 m!164307))

(declare-fun m!164309 () Bool)

(assert (=> b!137655 m!164309))

(assert (=> b!137655 m!164289))

(declare-fun m!164311 () Bool)

(assert (=> b!137655 m!164311))

(declare-fun m!164313 () Bool)

(assert (=> b!137655 m!164313))

(assert (=> b!137655 m!164265))

(assert (=> b!137645 m!164265))

(assert (=> b!137645 m!164265))

(declare-fun m!164315 () Bool)

(assert (=> b!137645 m!164315))

(declare-fun m!164317 () Bool)

(assert (=> bm!15152 m!164317))

(declare-fun m!164319 () Bool)

(assert (=> bm!15155 m!164319))

(assert (=> d!42813 d!43141))

(declare-fun d!43143 () Bool)

(assert (=> d!43143 (arrayContainsKey!0 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!71901 () Unit!4286)

(declare-fun choose!13 (array!4783 (_ BitVec 64) (_ BitVec 32)) Unit!4286)

(assert (=> d!43143 (= lt!71901 (choose!13 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))))))

(assert (=> d!43143 (bvsge (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133)) #b00000000000000000000000000000000)))

(assert (=> d!43143 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!71464 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (ite c!25581 (index!3280 lt!71133) (index!3277 lt!71133))) lt!71901)))

(declare-fun bs!5753 () Bool)

(assert (= bs!5753 d!43143))

(assert (=> bs!5753 m!162421))

(assert (=> bs!5753 m!163081))

(assert (=> bs!5753 m!162421))

(declare-fun m!164321 () Bool)

(assert (=> bs!5753 m!164321))

(assert (=> d!42813 d!43143))

(declare-fun b!137660 () Bool)

(declare-fun e!89581 () Option!177)

(assert (=> b!137660 (= e!89581 (getValueByKey!171 (t!6195 (toList!855 lt!71357)) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137661 () Bool)

(assert (=> b!137661 (= e!89581 None!175)))

(declare-fun b!137659 () Bool)

(declare-fun e!89580 () Option!177)

(assert (=> b!137659 (= e!89580 e!89581)))

(declare-fun c!25887 () Bool)

(assert (=> b!137659 (= c!25887 (and ((_ is Cons!1712) (toList!855 lt!71357)) (not (= (_1!1310 (h!2318 (toList!855 lt!71357))) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun d!43145 () Bool)

(declare-fun c!25886 () Bool)

(assert (=> d!43145 (= c!25886 (and ((_ is Cons!1712) (toList!855 lt!71357)) (= (_1!1310 (h!2318 (toList!855 lt!71357))) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43145 (= (getValueByKey!171 (toList!855 lt!71357) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89580)))

(declare-fun b!137658 () Bool)

(assert (=> b!137658 (= e!89580 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71357)))))))

(assert (= (and d!43145 c!25886) b!137658))

(assert (= (and d!43145 (not c!25886)) b!137659))

(assert (= (and b!137659 c!25887) b!137660))

(assert (= (and b!137659 (not c!25887)) b!137661))

(declare-fun m!164323 () Bool)

(assert (=> b!137660 m!164323))

(assert (=> b!136846 d!43145))

(declare-fun d!43147 () Bool)

(declare-fun e!89582 () Bool)

(assert (=> d!43147 e!89582))

(declare-fun res!65909 () Bool)

(assert (=> d!43147 (=> res!65909 e!89582)))

(declare-fun lt!71902 () Bool)

(assert (=> d!43147 (= res!65909 (not lt!71902))))

(declare-fun lt!71904 () Bool)

(assert (=> d!43147 (= lt!71902 lt!71904)))

(declare-fun lt!71905 () Unit!4286)

(declare-fun e!89583 () Unit!4286)

(assert (=> d!43147 (= lt!71905 e!89583)))

(declare-fun c!25888 () Bool)

(assert (=> d!43147 (= c!25888 lt!71904)))

(assert (=> d!43147 (= lt!71904 (containsKey!175 (toList!855 (map!1397 (_2!1311 lt!71446))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!43147 (= (contains!892 (map!1397 (_2!1311 lt!71446)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!71902)))

(declare-fun b!137662 () Bool)

(declare-fun lt!71903 () Unit!4286)

(assert (=> b!137662 (= e!89583 lt!71903)))

(assert (=> b!137662 (= lt!71903 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (map!1397 (_2!1311 lt!71446))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> b!137662 (isDefined!125 (getValueByKey!171 (toList!855 (map!1397 (_2!1311 lt!71446))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137663 () Bool)

(declare-fun Unit!4337 () Unit!4286)

(assert (=> b!137663 (= e!89583 Unit!4337)))

(declare-fun b!137664 () Bool)

(assert (=> b!137664 (= e!89582 (isDefined!125 (getValueByKey!171 (toList!855 (map!1397 (_2!1311 lt!71446))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (= (and d!43147 c!25888) b!137662))

(assert (= (and d!43147 (not c!25888)) b!137663))

(assert (= (and d!43147 (not res!65909)) b!137664))

(assert (=> d!43147 m!162421))

(declare-fun m!164325 () Bool)

(assert (=> d!43147 m!164325))

(assert (=> b!137662 m!162421))

(declare-fun m!164327 () Bool)

(assert (=> b!137662 m!164327))

(assert (=> b!137662 m!162421))

(declare-fun m!164329 () Bool)

(assert (=> b!137662 m!164329))

(assert (=> b!137662 m!164329))

(declare-fun m!164331 () Bool)

(assert (=> b!137662 m!164331))

(assert (=> b!137664 m!162421))

(assert (=> b!137664 m!164329))

(assert (=> b!137664 m!164329))

(assert (=> b!137664 m!164331))

(assert (=> b!136932 d!43147))

(assert (=> b!136932 d!43097))

(declare-fun d!43149 () Bool)

(assert (=> d!43149 (= (get!1491 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!3214 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!136891 d!43149))

(declare-fun d!43151 () Bool)

(declare-fun e!89584 () Bool)

(assert (=> d!43151 e!89584))

(declare-fun res!65910 () Bool)

(assert (=> d!43151 (=> (not res!65910) (not e!89584))))

(declare-fun lt!71907 () ListLongMap!1679)

(assert (=> d!43151 (= res!65910 (contains!892 lt!71907 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(declare-fun lt!71908 () List!1716)

(assert (=> d!43151 (= lt!71907 (ListLongMap!1680 lt!71908))))

(declare-fun lt!71909 () Unit!4286)

(declare-fun lt!71906 () Unit!4286)

(assert (=> d!43151 (= lt!71909 lt!71906)))

(assert (=> d!43151 (= (getValueByKey!171 lt!71908 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (=> d!43151 (= lt!71906 (lemmaContainsTupThenGetReturnValue!89 lt!71908 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (=> d!43151 (= lt!71908 (insertStrictlySorted!92 (toList!855 call!15030) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))))))

(assert (=> d!43151 (= (+!164 call!15030 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))) lt!71907)))

(declare-fun b!137665 () Bool)

(declare-fun res!65911 () Bool)

(assert (=> b!137665 (=> (not res!65911) (not e!89584))))

(assert (=> b!137665 (= res!65911 (= (getValueByKey!171 (toList!855 lt!71907) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))))

(declare-fun b!137666 () Bool)

(assert (=> b!137666 (= e!89584 (contains!895 (toList!855 lt!71907) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 newMap!16))))))

(assert (= (and d!43151 res!65910) b!137665))

(assert (= (and b!137665 res!65911) b!137666))

(declare-fun m!164333 () Bool)

(assert (=> d!43151 m!164333))

(declare-fun m!164335 () Bool)

(assert (=> d!43151 m!164335))

(declare-fun m!164337 () Bool)

(assert (=> d!43151 m!164337))

(declare-fun m!164339 () Bool)

(assert (=> d!43151 m!164339))

(declare-fun m!164341 () Bool)

(assert (=> b!137665 m!164341))

(declare-fun m!164343 () Bool)

(assert (=> b!137666 m!164343))

(assert (=> b!136706 d!43151))

(declare-fun d!43153 () Bool)

(declare-fun e!89585 () Bool)

(assert (=> d!43153 e!89585))

(declare-fun res!65912 () Bool)

(assert (=> d!43153 (=> res!65912 e!89585)))

(declare-fun lt!71910 () Bool)

(assert (=> d!43153 (= res!65912 (not lt!71910))))

(declare-fun lt!71912 () Bool)

(assert (=> d!43153 (= lt!71910 lt!71912)))

(declare-fun lt!71913 () Unit!4286)

(declare-fun e!89586 () Unit!4286)

(assert (=> d!43153 (= lt!71913 e!89586)))

(declare-fun c!25889 () Bool)

(assert (=> d!43153 (= c!25889 lt!71912)))

(assert (=> d!43153 (= lt!71912 (containsKey!175 (toList!855 lt!71500) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!43153 (= (contains!892 lt!71500 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71910)))

(declare-fun b!137667 () Bool)

(declare-fun lt!71911 () Unit!4286)

(assert (=> b!137667 (= e!89586 lt!71911)))

(assert (=> b!137667 (= lt!71911 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71500) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> b!137667 (isDefined!125 (getValueByKey!171 (toList!855 lt!71500) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137668 () Bool)

(declare-fun Unit!4338 () Unit!4286)

(assert (=> b!137668 (= e!89586 Unit!4338)))

(declare-fun b!137669 () Bool)

(assert (=> b!137669 (= e!89585 (isDefined!125 (getValueByKey!171 (toList!855 lt!71500) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!43153 c!25889) b!137667))

(assert (= (and d!43153 (not c!25889)) b!137668))

(assert (= (and d!43153 (not res!65912)) b!137669))

(declare-fun m!164345 () Bool)

(assert (=> d!43153 m!164345))

(declare-fun m!164347 () Bool)

(assert (=> b!137667 m!164347))

(assert (=> b!137667 m!163203))

(assert (=> b!137667 m!163203))

(declare-fun m!164349 () Bool)

(assert (=> b!137667 m!164349))

(assert (=> b!137669 m!163203))

(assert (=> b!137669 m!163203))

(assert (=> b!137669 m!164349))

(assert (=> d!42831 d!43153))

(declare-fun b!137672 () Bool)

(declare-fun e!89588 () Option!177)

(assert (=> b!137672 (= e!89588 (getValueByKey!171 (t!6195 lt!71501) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137673 () Bool)

(assert (=> b!137673 (= e!89588 None!175)))

(declare-fun b!137671 () Bool)

(declare-fun e!89587 () Option!177)

(assert (=> b!137671 (= e!89587 e!89588)))

(declare-fun c!25891 () Bool)

(assert (=> b!137671 (= c!25891 (and ((_ is Cons!1712) lt!71501) (not (= (_1!1310 (h!2318 lt!71501)) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun d!43155 () Bool)

(declare-fun c!25890 () Bool)

(assert (=> d!43155 (= c!25890 (and ((_ is Cons!1712) lt!71501) (= (_1!1310 (h!2318 lt!71501)) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43155 (= (getValueByKey!171 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89587)))

(declare-fun b!137670 () Bool)

(assert (=> b!137670 (= e!89587 (Some!176 (_2!1310 (h!2318 lt!71501))))))

(assert (= (and d!43155 c!25890) b!137670))

(assert (= (and d!43155 (not c!25890)) b!137671))

(assert (= (and b!137671 c!25891) b!137672))

(assert (= (and b!137671 (not c!25891)) b!137673))

(declare-fun m!164351 () Bool)

(assert (=> b!137672 m!164351))

(assert (=> d!42831 d!43155))

(declare-fun d!43157 () Bool)

(assert (=> d!43157 (= (getValueByKey!171 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71914 () Unit!4286)

(assert (=> d!43157 (= lt!71914 (choose!847 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun e!89589 () Bool)

(assert (=> d!43157 e!89589))

(declare-fun res!65913 () Bool)

(assert (=> d!43157 (=> (not res!65913) (not e!89589))))

(assert (=> d!43157 (= res!65913 (isStrictlySorted!318 lt!71501))))

(assert (=> d!43157 (= (lemmaContainsTupThenGetReturnValue!89 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71914)))

(declare-fun b!137674 () Bool)

(declare-fun res!65914 () Bool)

(assert (=> b!137674 (=> (not res!65914) (not e!89589))))

(assert (=> b!137674 (= res!65914 (containsKey!175 lt!71501 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137675 () Bool)

(assert (=> b!137675 (= e!89589 (contains!895 lt!71501 (tuple2!2599 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!43157 res!65913) b!137674))

(assert (= (and b!137674 res!65914) b!137675))

(assert (=> d!43157 m!163197))

(declare-fun m!164353 () Bool)

(assert (=> d!43157 m!164353))

(declare-fun m!164355 () Bool)

(assert (=> d!43157 m!164355))

(declare-fun m!164357 () Bool)

(assert (=> b!137674 m!164357))

(declare-fun m!164359 () Bool)

(assert (=> b!137675 m!164359))

(assert (=> d!42831 d!43157))

(declare-fun b!137676 () Bool)

(declare-fun e!89594 () List!1716)

(declare-fun call!15164 () List!1716)

(assert (=> b!137676 (= e!89594 call!15164)))

(declare-fun b!137677 () Bool)

(declare-fun e!89592 () List!1716)

(assert (=> b!137677 (= e!89592 (insertStrictlySorted!92 (t!6195 (toList!855 call!15017)) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15159 () Bool)

(declare-fun call!15162 () List!1716)

(assert (=> bm!15159 (= call!15162 call!15164)))

(declare-fun b!137678 () Bool)

(declare-fun e!89591 () List!1716)

(declare-fun call!15163 () List!1716)

(assert (=> b!137678 (= e!89591 call!15163)))

(declare-fun b!137679 () Bool)

(declare-fun c!25895 () Bool)

(declare-fun c!25893 () Bool)

(assert (=> b!137679 (= e!89592 (ite c!25893 (t!6195 (toList!855 call!15017)) (ite c!25895 (Cons!1712 (h!2318 (toList!855 call!15017)) (t!6195 (toList!855 call!15017))) Nil!1713)))))

(declare-fun b!137680 () Bool)

(declare-fun e!89590 () Bool)

(declare-fun lt!71915 () List!1716)

(assert (=> b!137680 (= e!89590 (contains!895 lt!71915 (tuple2!2599 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137681 () Bool)

(declare-fun e!89593 () List!1716)

(assert (=> b!137681 (= e!89594 e!89593)))

(assert (=> b!137681 (= c!25893 (and ((_ is Cons!1712) (toList!855 call!15017)) (= (_1!1310 (h!2318 (toList!855 call!15017))) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137682 () Bool)

(declare-fun res!65916 () Bool)

(assert (=> b!137682 (=> (not res!65916) (not e!89590))))

(assert (=> b!137682 (= res!65916 (containsKey!175 lt!71915 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15160 () Bool)

(assert (=> bm!15160 (= call!15163 call!15162)))

(declare-fun b!137683 () Bool)

(assert (=> b!137683 (= c!25895 (and ((_ is Cons!1712) (toList!855 call!15017)) (bvsgt (_1!1310 (h!2318 (toList!855 call!15017))) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> b!137683 (= e!89593 e!89591)))

(declare-fun b!137684 () Bool)

(assert (=> b!137684 (= e!89591 call!15163)))

(declare-fun c!25892 () Bool)

(declare-fun bm!15161 () Bool)

(assert (=> bm!15161 (= call!15164 ($colon$colon!92 e!89592 (ite c!25892 (h!2318 (toList!855 call!15017)) (tuple2!2599 (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25894 () Bool)

(assert (=> bm!15161 (= c!25894 c!25892)))

(declare-fun d!43159 () Bool)

(assert (=> d!43159 e!89590))

(declare-fun res!65915 () Bool)

(assert (=> d!43159 (=> (not res!65915) (not e!89590))))

(assert (=> d!43159 (= res!65915 (isStrictlySorted!318 lt!71915))))

(assert (=> d!43159 (= lt!71915 e!89594)))

(assert (=> d!43159 (= c!25892 (and ((_ is Cons!1712) (toList!855 call!15017)) (bvslt (_1!1310 (h!2318 (toList!855 call!15017))) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43159 (isStrictlySorted!318 (toList!855 call!15017))))

(assert (=> d!43159 (= (insertStrictlySorted!92 (toList!855 call!15017) (_1!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71915)))

(declare-fun b!137685 () Bool)

(assert (=> b!137685 (= e!89593 call!15162)))

(assert (= (and d!43159 c!25892) b!137676))

(assert (= (and d!43159 (not c!25892)) b!137681))

(assert (= (and b!137681 c!25893) b!137685))

(assert (= (and b!137681 (not c!25893)) b!137683))

(assert (= (and b!137683 c!25895) b!137678))

(assert (= (and b!137683 (not c!25895)) b!137684))

(assert (= (or b!137678 b!137684) bm!15160))

(assert (= (or b!137685 bm!15160) bm!15159))

(assert (= (or b!137676 bm!15159) bm!15161))

(assert (= (and bm!15161 c!25894) b!137677))

(assert (= (and bm!15161 (not c!25894)) b!137679))

(assert (= (and d!43159 res!65915) b!137682))

(assert (= (and b!137682 res!65916) b!137680))

(declare-fun m!164361 () Bool)

(assert (=> b!137680 m!164361))

(declare-fun m!164363 () Bool)

(assert (=> b!137677 m!164363))

(declare-fun m!164365 () Bool)

(assert (=> d!43159 m!164365))

(declare-fun m!164367 () Bool)

(assert (=> d!43159 m!164367))

(declare-fun m!164369 () Bool)

(assert (=> b!137682 m!164369))

(declare-fun m!164371 () Bool)

(assert (=> bm!15161 m!164371))

(assert (=> d!42831 d!43159))

(declare-fun b!137686 () Bool)

(declare-fun e!89597 () Bool)

(declare-fun call!15165 () Bool)

(assert (=> b!137686 (= e!89597 call!15165)))

(declare-fun d!43161 () Bool)

(declare-fun res!65917 () Bool)

(declare-fun e!89596 () Bool)

(assert (=> d!43161 (=> res!65917 e!89596)))

(assert (=> d!43161 (= res!65917 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(assert (=> d!43161 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992)))) e!89596)))

(declare-fun b!137687 () Bool)

(declare-fun e!89595 () Bool)

(assert (=> b!137687 (= e!89596 e!89595)))

(declare-fun c!25896 () Bool)

(assert (=> b!137687 (= c!25896 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!15162 () Bool)

(assert (=> bm!15162 (= call!15165 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4640 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992)))))))

(declare-fun b!137688 () Bool)

(assert (=> b!137688 (= e!89595 e!89597)))

(declare-fun lt!71916 () (_ BitVec 64))

(assert (=> b!137688 (= lt!71916 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!71917 () Unit!4286)

(assert (=> b!137688 (= lt!71917 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) lt!71916 #b00000000000000000000000000000000))))

(assert (=> b!137688 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) lt!71916 #b00000000000000000000000000000000)))

(declare-fun lt!71918 () Unit!4286)

(assert (=> b!137688 (= lt!71918 lt!71917)))

(declare-fun res!65918 () Bool)

(assert (=> b!137688 (= res!65918 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) #b00000000000000000000000000000000) (_keys!4640 (v!3215 (underlying!457 thiss!992))) (mask!7201 (v!3215 (underlying!457 thiss!992)))) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!137688 (=> (not res!65918) (not e!89597))))

(declare-fun b!137689 () Bool)

(assert (=> b!137689 (= e!89595 call!15165)))

(assert (= (and d!43161 (not res!65917)) b!137687))

(assert (= (and b!137687 c!25896) b!137688))

(assert (= (and b!137687 (not c!25896)) b!137689))

(assert (= (and b!137688 res!65918) b!137686))

(assert (= (or b!137686 b!137689) bm!15162))

(assert (=> b!137687 m!163219))

(assert (=> b!137687 m!163219))

(assert (=> b!137687 m!163221))

(declare-fun m!164373 () Bool)

(assert (=> bm!15162 m!164373))

(assert (=> b!137688 m!163219))

(declare-fun m!164375 () Bool)

(assert (=> b!137688 m!164375))

(declare-fun m!164377 () Bool)

(assert (=> b!137688 m!164377))

(assert (=> b!137688 m!163219))

(declare-fun m!164379 () Bool)

(assert (=> b!137688 m!164379))

(assert (=> b!136950 d!43161))

(declare-fun d!43163 () Bool)

(assert (=> d!43163 (= (apply!117 lt!71350 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1493 (getValueByKey!171 (toList!855 lt!71350) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!5754 () Bool)

(assert (= bs!5754 d!43163))

(assert (=> bs!5754 m!162605))

(assert (=> bs!5754 m!163623))

(assert (=> bs!5754 m!163623))

(declare-fun m!164381 () Bool)

(assert (=> bs!5754 m!164381))

(assert (=> b!136836 d!43163))

(assert (=> b!136836 d!42805))

(declare-fun d!43165 () Bool)

(declare-fun e!89598 () Bool)

(assert (=> d!43165 e!89598))

(declare-fun res!65919 () Bool)

(assert (=> d!43165 (=> res!65919 e!89598)))

(declare-fun lt!71919 () Bool)

(assert (=> d!43165 (= res!65919 (not lt!71919))))

(declare-fun lt!71921 () Bool)

(assert (=> d!43165 (= lt!71919 lt!71921)))

(declare-fun lt!71922 () Unit!4286)

(declare-fun e!89599 () Unit!4286)

(assert (=> d!43165 (= lt!71922 e!89599)))

(declare-fun c!25897 () Bool)

(assert (=> d!43165 (= c!25897 lt!71921)))

(assert (=> d!43165 (= lt!71921 (containsKey!175 (toList!855 lt!71208) lt!71195))))

(assert (=> d!43165 (= (contains!892 lt!71208 lt!71195) lt!71919)))

(declare-fun b!137690 () Bool)

(declare-fun lt!71920 () Unit!4286)

(assert (=> b!137690 (= e!89599 lt!71920)))

(assert (=> b!137690 (= lt!71920 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71208) lt!71195))))

(assert (=> b!137690 (isDefined!125 (getValueByKey!171 (toList!855 lt!71208) lt!71195))))

(declare-fun b!137691 () Bool)

(declare-fun Unit!4339 () Unit!4286)

(assert (=> b!137691 (= e!89599 Unit!4339)))

(declare-fun b!137692 () Bool)

(assert (=> b!137692 (= e!89598 (isDefined!125 (getValueByKey!171 (toList!855 lt!71208) lt!71195)))))

(assert (= (and d!43165 c!25897) b!137690))

(assert (= (and d!43165 (not c!25897)) b!137691))

(assert (= (and d!43165 (not res!65919)) b!137692))

(declare-fun m!164383 () Bool)

(assert (=> d!43165 m!164383))

(declare-fun m!164385 () Bool)

(assert (=> b!137690 m!164385))

(assert (=> b!137690 m!162923))

(assert (=> b!137690 m!162923))

(declare-fun m!164387 () Bool)

(assert (=> b!137690 m!164387))

(assert (=> b!137692 m!162923))

(assert (=> b!137692 m!162923))

(assert (=> b!137692 m!164387))

(assert (=> d!42777 d!43165))

(declare-fun d!43167 () Bool)

(assert (=> d!43167 (= (apply!117 (+!164 lt!71208 (tuple2!2599 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71195) (apply!117 lt!71208 lt!71195))))

(assert (=> d!43167 true))

(declare-fun _$34!999 () Unit!4286)

(assert (=> d!43167 (= (choose!845 lt!71208 lt!71201 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))) lt!71195) _$34!999)))

(declare-fun bs!5755 () Bool)

(assert (= bs!5755 d!43167))

(assert (=> bs!5755 m!162641))

(assert (=> bs!5755 m!162641))

(assert (=> bs!5755 m!162651))

(assert (=> bs!5755 m!162639))

(assert (=> d!42777 d!43167))

(assert (=> d!42777 d!42767))

(assert (=> d!42777 d!42771))

(assert (=> d!42777 d!42773))

(declare-fun d!43169 () Bool)

(assert (=> d!43169 (= (get!1493 (getValueByKey!171 (toList!855 lt!71208) lt!71195)) (v!3221 (getValueByKey!171 (toList!855 lt!71208) lt!71195)))))

(assert (=> d!42767 d!43169))

(declare-fun b!137695 () Bool)

(declare-fun e!89601 () Option!177)

(assert (=> b!137695 (= e!89601 (getValueByKey!171 (t!6195 (toList!855 lt!71208)) lt!71195))))

(declare-fun b!137696 () Bool)

(assert (=> b!137696 (= e!89601 None!175)))

(declare-fun b!137694 () Bool)

(declare-fun e!89600 () Option!177)

(assert (=> b!137694 (= e!89600 e!89601)))

(declare-fun c!25899 () Bool)

(assert (=> b!137694 (= c!25899 (and ((_ is Cons!1712) (toList!855 lt!71208)) (not (= (_1!1310 (h!2318 (toList!855 lt!71208))) lt!71195))))))

(declare-fun d!43171 () Bool)

(declare-fun c!25898 () Bool)

(assert (=> d!43171 (= c!25898 (and ((_ is Cons!1712) (toList!855 lt!71208)) (= (_1!1310 (h!2318 (toList!855 lt!71208))) lt!71195)))))

(assert (=> d!43171 (= (getValueByKey!171 (toList!855 lt!71208) lt!71195) e!89600)))

(declare-fun b!137693 () Bool)

(assert (=> b!137693 (= e!89600 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71208)))))))

(assert (= (and d!43171 c!25898) b!137693))

(assert (= (and d!43171 (not c!25898)) b!137694))

(assert (= (and b!137694 c!25899) b!137695))

(assert (= (and b!137694 (not c!25899)) b!137696))

(declare-fun m!164389 () Bool)

(assert (=> b!137695 m!164389))

(assert (=> d!42767 d!43171))

(declare-fun d!43173 () Bool)

(declare-fun e!89602 () Bool)

(assert (=> d!43173 e!89602))

(declare-fun res!65920 () Bool)

(assert (=> d!43173 (=> res!65920 e!89602)))

(declare-fun lt!71923 () Bool)

(assert (=> d!43173 (= res!65920 (not lt!71923))))

(declare-fun lt!71925 () Bool)

(assert (=> d!43173 (= lt!71923 lt!71925)))

(declare-fun lt!71926 () Unit!4286)

(declare-fun e!89603 () Unit!4286)

(assert (=> d!43173 (= lt!71926 e!89603)))

(declare-fun c!25900 () Bool)

(assert (=> d!43173 (= c!25900 lt!71925)))

(assert (=> d!43173 (= lt!71925 (containsKey!175 (toList!855 lt!71261) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43173 (= (contains!892 lt!71261 #b0000000000000000000000000000000000000000000000000000000000000000) lt!71923)))

(declare-fun b!137697 () Bool)

(declare-fun lt!71924 () Unit!4286)

(assert (=> b!137697 (= e!89603 lt!71924)))

(assert (=> b!137697 (= lt!71924 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71261) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137697 (isDefined!125 (getValueByKey!171 (toList!855 lt!71261) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137698 () Bool)

(declare-fun Unit!4340 () Unit!4286)

(assert (=> b!137698 (= e!89603 Unit!4340)))

(declare-fun b!137699 () Bool)

(assert (=> b!137699 (= e!89602 (isDefined!125 (getValueByKey!171 (toList!855 lt!71261) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43173 c!25900) b!137697))

(assert (= (and d!43173 (not c!25900)) b!137698))

(assert (= (and d!43173 (not res!65920)) b!137699))

(declare-fun m!164391 () Bool)

(assert (=> d!43173 m!164391))

(declare-fun m!164393 () Bool)

(assert (=> b!137697 m!164393))

(assert (=> b!137697 m!163991))

(assert (=> b!137697 m!163991))

(declare-fun m!164395 () Bool)

(assert (=> b!137697 m!164395))

(assert (=> b!137699 m!163991))

(assert (=> b!137699 m!163991))

(assert (=> b!137699 m!164395))

(assert (=> bm!15031 d!43173))

(declare-fun d!43175 () Bool)

(assert (=> d!43175 (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))

(declare-fun lt!71929 () Unit!4286)

(declare-fun choose!850 (array!4783 array!4785 (_ BitVec 32) (_ BitVec 32) V!3497 V!3497 (_ BitVec 64) (_ BitVec 32) Int) Unit!4286)

(assert (=> d!43175 (= lt!71929 (choose!850 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)))))

(assert (=> d!43175 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43175 (= (lemmaArrayContainsKeyThenInListMap!43 (_keys!4640 newMap!16) (_values!2871 newMap!16) (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) lt!71929)))

(declare-fun bs!5756 () Bool)

(assert (= bs!5756 d!43175))

(assert (=> bs!5756 m!162545))

(assert (=> bs!5756 m!162545))

(assert (=> bs!5756 m!162421))

(assert (=> bs!5756 m!163095))

(assert (=> bs!5756 m!162421))

(declare-fun m!164397 () Bool)

(assert (=> bs!5756 m!164397))

(assert (=> bs!5756 m!162671))

(assert (=> b!136945 d!43175))

(assert (=> b!136945 d!43139))

(assert (=> b!136945 d!42729))

(assert (=> b!136853 d!42993))

(assert (=> b!136853 d!42995))

(declare-fun d!43177 () Bool)

(assert (=> d!43177 (= (apply!117 (+!164 lt!71256 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))) lt!71249) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71256 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))) lt!71249)))))

(declare-fun bs!5757 () Bool)

(assert (= bs!5757 d!43177))

(declare-fun m!164399 () Bool)

(assert (=> bs!5757 m!164399))

(assert (=> bs!5757 m!164399))

(declare-fun m!164401 () Bool)

(assert (=> bs!5757 m!164401))

(assert (=> b!136734 d!43177))

(declare-fun d!43179 () Bool)

(assert (=> d!43179 (= (apply!117 (+!164 lt!71256 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))) lt!71249) (apply!117 lt!71256 lt!71249))))

(declare-fun lt!71930 () Unit!4286)

(assert (=> d!43179 (= lt!71930 (choose!845 lt!71256 lt!71266 (minValue!2741 newMap!16) lt!71249))))

(declare-fun e!89604 () Bool)

(assert (=> d!43179 e!89604))

(declare-fun res!65921 () Bool)

(assert (=> d!43179 (=> (not res!65921) (not e!89604))))

(assert (=> d!43179 (= res!65921 (contains!892 lt!71256 lt!71249))))

(assert (=> d!43179 (= (addApplyDifferent!93 lt!71256 lt!71266 (minValue!2741 newMap!16) lt!71249) lt!71930)))

(declare-fun b!137700 () Bool)

(assert (=> b!137700 (= e!89604 (not (= lt!71249 lt!71266)))))

(assert (= (and d!43179 res!65921) b!137700))

(declare-fun m!164403 () Bool)

(assert (=> d!43179 m!164403))

(assert (=> d!43179 m!162781))

(assert (=> d!43179 m!162779))

(assert (=> d!43179 m!162801))

(assert (=> d!43179 m!162779))

(declare-fun m!164405 () Bool)

(assert (=> d!43179 m!164405))

(assert (=> b!136734 d!43179))

(declare-fun d!43181 () Bool)

(declare-fun e!89605 () Bool)

(assert (=> d!43181 e!89605))

(declare-fun res!65922 () Bool)

(assert (=> d!43181 (=> (not res!65922) (not e!89605))))

(declare-fun lt!71932 () ListLongMap!1679)

(assert (=> d!43181 (= res!65922 (contains!892 lt!71932 (_1!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))))))

(declare-fun lt!71933 () List!1716)

(assert (=> d!43181 (= lt!71932 (ListLongMap!1680 lt!71933))))

(declare-fun lt!71934 () Unit!4286)

(declare-fun lt!71931 () Unit!4286)

(assert (=> d!43181 (= lt!71934 lt!71931)))

(assert (=> d!43181 (= (getValueByKey!171 lt!71933 (_1!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43181 (= lt!71931 (lemmaContainsTupThenGetReturnValue!89 lt!71933 (_1!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43181 (= lt!71933 (insertStrictlySorted!92 (toList!855 lt!71265) (_1!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43181 (= (+!164 lt!71265 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))) lt!71932)))

(declare-fun b!137701 () Bool)

(declare-fun res!65923 () Bool)

(assert (=> b!137701 (=> (not res!65923) (not e!89605))))

(assert (=> b!137701 (= res!65923 (= (getValueByKey!171 (toList!855 lt!71932) (_1!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))))))))

(declare-fun b!137702 () Bool)

(assert (=> b!137702 (= e!89605 (contains!895 (toList!855 lt!71932) (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))))))

(assert (= (and d!43181 res!65922) b!137701))

(assert (= (and b!137701 res!65923) b!137702))

(declare-fun m!164407 () Bool)

(assert (=> d!43181 m!164407))

(declare-fun m!164409 () Bool)

(assert (=> d!43181 m!164409))

(declare-fun m!164411 () Bool)

(assert (=> d!43181 m!164411))

(declare-fun m!164413 () Bool)

(assert (=> d!43181 m!164413))

(declare-fun m!164415 () Bool)

(assert (=> b!137701 m!164415))

(declare-fun m!164417 () Bool)

(assert (=> b!137702 m!164417))

(assert (=> b!136734 d!43181))

(declare-fun d!43183 () Bool)

(declare-fun e!89606 () Bool)

(assert (=> d!43183 e!89606))

(declare-fun res!65924 () Bool)

(assert (=> d!43183 (=> (not res!65924) (not e!89606))))

(declare-fun lt!71936 () ListLongMap!1679)

(assert (=> d!43183 (= res!65924 (contains!892 lt!71936 (_1!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))))))

(declare-fun lt!71937 () List!1716)

(assert (=> d!43183 (= lt!71936 (ListLongMap!1680 lt!71937))))

(declare-fun lt!71938 () Unit!4286)

(declare-fun lt!71935 () Unit!4286)

(assert (=> d!43183 (= lt!71938 lt!71935)))

(assert (=> d!43183 (= (getValueByKey!171 lt!71937 (_1!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))))))

(assert (=> d!43183 (= lt!71935 (lemmaContainsTupThenGetReturnValue!89 lt!71937 (_1!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))))))

(assert (=> d!43183 (= lt!71937 (insertStrictlySorted!92 (toList!855 lt!71256) (_1!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))))))

(assert (=> d!43183 (= (+!164 lt!71256 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))) lt!71936)))

(declare-fun b!137703 () Bool)

(declare-fun res!65925 () Bool)

(assert (=> b!137703 (=> (not res!65925) (not e!89606))))

(assert (=> b!137703 (= res!65925 (= (getValueByKey!171 (toList!855 lt!71936) (_1!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71266 (minValue!2741 newMap!16))))))))

(declare-fun b!137704 () Bool)

(assert (=> b!137704 (= e!89606 (contains!895 (toList!855 lt!71936) (tuple2!2599 lt!71266 (minValue!2741 newMap!16))))))

(assert (= (and d!43183 res!65924) b!137703))

(assert (= (and b!137703 res!65925) b!137704))

(declare-fun m!164419 () Bool)

(assert (=> d!43183 m!164419))

(declare-fun m!164421 () Bool)

(assert (=> d!43183 m!164421))

(declare-fun m!164423 () Bool)

(assert (=> d!43183 m!164423))

(declare-fun m!164425 () Bool)

(assert (=> d!43183 m!164425))

(declare-fun m!164427 () Bool)

(assert (=> b!137703 m!164427))

(declare-fun m!164429 () Bool)

(assert (=> b!137704 m!164429))

(assert (=> b!136734 d!43183))

(declare-fun d!43185 () Bool)

(assert (=> d!43185 (= (apply!117 (+!164 lt!71265 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))) lt!71252) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71265 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16)))) lt!71252)))))

(declare-fun bs!5758 () Bool)

(assert (= bs!5758 d!43185))

(declare-fun m!164431 () Bool)

(assert (=> bs!5758 m!164431))

(assert (=> bs!5758 m!164431))

(declare-fun m!164433 () Bool)

(assert (=> bs!5758 m!164433))

(assert (=> b!136734 d!43185))

(declare-fun d!43187 () Bool)

(assert (=> d!43187 (= (apply!117 (+!164 lt!71265 (tuple2!2599 lt!71258 (zeroValue!2741 newMap!16))) lt!71252) (apply!117 lt!71265 lt!71252))))

(declare-fun lt!71939 () Unit!4286)

(assert (=> d!43187 (= lt!71939 (choose!845 lt!71265 lt!71258 (zeroValue!2741 newMap!16) lt!71252))))

(declare-fun e!89607 () Bool)

(assert (=> d!43187 e!89607))

(declare-fun res!65926 () Bool)

(assert (=> d!43187 (=> (not res!65926) (not e!89607))))

(assert (=> d!43187 (= res!65926 (contains!892 lt!71265 lt!71252))))

(assert (=> d!43187 (= (addApplyDifferent!93 lt!71265 lt!71258 (zeroValue!2741 newMap!16) lt!71252) lt!71939)))

(declare-fun b!137705 () Bool)

(assert (=> b!137705 (= e!89607 (not (= lt!71252 lt!71258)))))

(assert (= (and d!43187 res!65926) b!137705))

(declare-fun m!164435 () Bool)

(assert (=> d!43187 m!164435))

(assert (=> d!43187 m!162783))

(assert (=> d!43187 m!162785))

(assert (=> d!43187 m!162795))

(assert (=> d!43187 m!162785))

(declare-fun m!164437 () Bool)

(assert (=> d!43187 m!164437))

(assert (=> b!136734 d!43187))

(declare-fun d!43189 () Bool)

(assert (=> d!43189 (= (apply!117 lt!71257 lt!71263) (get!1493 (getValueByKey!171 (toList!855 lt!71257) lt!71263)))))

(declare-fun bs!5759 () Bool)

(assert (= bs!5759 d!43189))

(declare-fun m!164439 () Bool)

(assert (=> bs!5759 m!164439))

(assert (=> bs!5759 m!164439))

(declare-fun m!164441 () Bool)

(assert (=> bs!5759 m!164441))

(assert (=> b!136734 d!43189))

(declare-fun d!43191 () Bool)

(assert (=> d!43191 (= (apply!117 (+!164 lt!71257 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))) lt!71263) (apply!117 lt!71257 lt!71263))))

(declare-fun lt!71940 () Unit!4286)

(assert (=> d!43191 (= lt!71940 (choose!845 lt!71257 lt!71250 (minValue!2741 newMap!16) lt!71263))))

(declare-fun e!89608 () Bool)

(assert (=> d!43191 e!89608))

(declare-fun res!65927 () Bool)

(assert (=> d!43191 (=> (not res!65927) (not e!89608))))

(assert (=> d!43191 (= res!65927 (contains!892 lt!71257 lt!71263))))

(assert (=> d!43191 (= (addApplyDifferent!93 lt!71257 lt!71250 (minValue!2741 newMap!16) lt!71263) lt!71940)))

(declare-fun b!137706 () Bool)

(assert (=> b!137706 (= e!89608 (not (= lt!71263 lt!71250)))))

(assert (= (and d!43191 res!65927) b!137706))

(declare-fun m!164443 () Bool)

(assert (=> d!43191 m!164443))

(assert (=> d!43191 m!162799))

(assert (=> d!43191 m!162775))

(assert (=> d!43191 m!162777))

(assert (=> d!43191 m!162775))

(declare-fun m!164445 () Bool)

(assert (=> d!43191 m!164445))

(assert (=> b!136734 d!43191))

(assert (=> b!136734 d!42847))

(declare-fun d!43193 () Bool)

(declare-fun e!89609 () Bool)

(assert (=> d!43193 e!89609))

(declare-fun res!65928 () Bool)

(assert (=> d!43193 (=> (not res!65928) (not e!89609))))

(declare-fun lt!71942 () ListLongMap!1679)

(assert (=> d!43193 (= res!65928 (contains!892 lt!71942 (_1!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))))))

(declare-fun lt!71943 () List!1716)

(assert (=> d!43193 (= lt!71942 (ListLongMap!1680 lt!71943))))

(declare-fun lt!71944 () Unit!4286)

(declare-fun lt!71941 () Unit!4286)

(assert (=> d!43193 (= lt!71944 lt!71941)))

(assert (=> d!43193 (= (getValueByKey!171 lt!71943 (_1!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))))))

(assert (=> d!43193 (= lt!71941 (lemmaContainsTupThenGetReturnValue!89 lt!71943 (_1!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))))))

(assert (=> d!43193 (= lt!71943 (insertStrictlySorted!92 (toList!855 lt!71257) (_1!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))))))

(assert (=> d!43193 (= (+!164 lt!71257 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))) lt!71942)))

(declare-fun b!137707 () Bool)

(declare-fun res!65929 () Bool)

(assert (=> b!137707 (=> (not res!65929) (not e!89609))))

(assert (=> b!137707 (= res!65929 (= (getValueByKey!171 (toList!855 lt!71942) (_1!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))))))))

(declare-fun b!137708 () Bool)

(assert (=> b!137708 (= e!89609 (contains!895 (toList!855 lt!71942) (tuple2!2599 lt!71250 (minValue!2741 newMap!16))))))

(assert (= (and d!43193 res!65928) b!137707))

(assert (= (and b!137707 res!65929) b!137708))

(declare-fun m!164447 () Bool)

(assert (=> d!43193 m!164447))

(declare-fun m!164449 () Bool)

(assert (=> d!43193 m!164449))

(declare-fun m!164451 () Bool)

(assert (=> d!43193 m!164451))

(declare-fun m!164453 () Bool)

(assert (=> d!43193 m!164453))

(declare-fun m!164455 () Bool)

(assert (=> b!137707 m!164455))

(declare-fun m!164457 () Bool)

(assert (=> b!137708 m!164457))

(assert (=> b!136734 d!43193))

(declare-fun d!43195 () Bool)

(assert (=> d!43195 (= (apply!117 lt!71265 lt!71252) (get!1493 (getValueByKey!171 (toList!855 lt!71265) lt!71252)))))

(declare-fun bs!5760 () Bool)

(assert (= bs!5760 d!43195))

(declare-fun m!164459 () Bool)

(assert (=> bs!5760 m!164459))

(assert (=> bs!5760 m!164459))

(declare-fun m!164461 () Bool)

(assert (=> bs!5760 m!164461))

(assert (=> b!136734 d!43195))

(declare-fun d!43197 () Bool)

(assert (=> d!43197 (= (apply!117 (+!164 lt!71257 (tuple2!2599 lt!71250 (minValue!2741 newMap!16))) lt!71263) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71257 (tuple2!2599 lt!71250 (minValue!2741 newMap!16)))) lt!71263)))))

(declare-fun bs!5761 () Bool)

(assert (= bs!5761 d!43197))

(declare-fun m!164463 () Bool)

(assert (=> bs!5761 m!164463))

(assert (=> bs!5761 m!164463))

(declare-fun m!164465 () Bool)

(assert (=> bs!5761 m!164465))

(assert (=> b!136734 d!43197))

(declare-fun d!43199 () Bool)

(assert (=> d!43199 (contains!892 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))) lt!71267)))

(declare-fun lt!71945 () Unit!4286)

(assert (=> d!43199 (= lt!71945 (choose!844 lt!71255 lt!71253 (zeroValue!2741 newMap!16) lt!71267))))

(assert (=> d!43199 (contains!892 lt!71255 lt!71267)))

(assert (=> d!43199 (= (addStillContains!93 lt!71255 lt!71253 (zeroValue!2741 newMap!16) lt!71267) lt!71945)))

(declare-fun bs!5762 () Bool)

(assert (= bs!5762 d!43199))

(assert (=> bs!5762 m!162789))

(assert (=> bs!5762 m!162789))

(assert (=> bs!5762 m!162793))

(declare-fun m!164467 () Bool)

(assert (=> bs!5762 m!164467))

(declare-fun m!164469 () Bool)

(assert (=> bs!5762 m!164469))

(assert (=> b!136734 d!43199))

(declare-fun d!43201 () Bool)

(assert (=> d!43201 (= (apply!117 lt!71256 lt!71249) (get!1493 (getValueByKey!171 (toList!855 lt!71256) lt!71249)))))

(declare-fun bs!5763 () Bool)

(assert (= bs!5763 d!43201))

(declare-fun m!164471 () Bool)

(assert (=> bs!5763 m!164471))

(assert (=> bs!5763 m!164471))

(declare-fun m!164473 () Bool)

(assert (=> bs!5763 m!164473))

(assert (=> b!136734 d!43201))

(declare-fun d!43203 () Bool)

(declare-fun e!89610 () Bool)

(assert (=> d!43203 e!89610))

(declare-fun res!65930 () Bool)

(assert (=> d!43203 (=> (not res!65930) (not e!89610))))

(declare-fun lt!71947 () ListLongMap!1679)

(assert (=> d!43203 (= res!65930 (contains!892 lt!71947 (_1!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))))))

(declare-fun lt!71948 () List!1716)

(assert (=> d!43203 (= lt!71947 (ListLongMap!1680 lt!71948))))

(declare-fun lt!71949 () Unit!4286)

(declare-fun lt!71946 () Unit!4286)

(assert (=> d!43203 (= lt!71949 lt!71946)))

(assert (=> d!43203 (= (getValueByKey!171 lt!71948 (_1!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43203 (= lt!71946 (lemmaContainsTupThenGetReturnValue!89 lt!71948 (_1!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43203 (= lt!71948 (insertStrictlySorted!92 (toList!855 lt!71255) (_1!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43203 (= (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))) lt!71947)))

(declare-fun b!137709 () Bool)

(declare-fun res!65931 () Bool)

(assert (=> b!137709 (=> (not res!65931) (not e!89610))))

(assert (=> b!137709 (= res!65931 (= (getValueByKey!171 (toList!855 lt!71947) (_1!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))))))))

(declare-fun b!137710 () Bool)

(assert (=> b!137710 (= e!89610 (contains!895 (toList!855 lt!71947) (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))))))

(assert (= (and d!43203 res!65930) b!137709))

(assert (= (and b!137709 res!65931) b!137710))

(declare-fun m!164475 () Bool)

(assert (=> d!43203 m!164475))

(declare-fun m!164477 () Bool)

(assert (=> d!43203 m!164477))

(declare-fun m!164479 () Bool)

(assert (=> d!43203 m!164479))

(declare-fun m!164481 () Bool)

(assert (=> d!43203 m!164481))

(declare-fun m!164483 () Bool)

(assert (=> b!137709 m!164483))

(declare-fun m!164485 () Bool)

(assert (=> b!137710 m!164485))

(assert (=> b!136734 d!43203))

(declare-fun d!43205 () Bool)

(declare-fun e!89611 () Bool)

(assert (=> d!43205 e!89611))

(declare-fun res!65932 () Bool)

(assert (=> d!43205 (=> res!65932 e!89611)))

(declare-fun lt!71950 () Bool)

(assert (=> d!43205 (= res!65932 (not lt!71950))))

(declare-fun lt!71952 () Bool)

(assert (=> d!43205 (= lt!71950 lt!71952)))

(declare-fun lt!71953 () Unit!4286)

(declare-fun e!89612 () Unit!4286)

(assert (=> d!43205 (= lt!71953 e!89612)))

(declare-fun c!25901 () Bool)

(assert (=> d!43205 (= c!25901 lt!71952)))

(assert (=> d!43205 (= lt!71952 (containsKey!175 (toList!855 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))) lt!71267))))

(assert (=> d!43205 (= (contains!892 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16))) lt!71267) lt!71950)))

(declare-fun b!137711 () Bool)

(declare-fun lt!71951 () Unit!4286)

(assert (=> b!137711 (= e!89612 lt!71951)))

(assert (=> b!137711 (= lt!71951 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))) lt!71267))))

(assert (=> b!137711 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))) lt!71267))))

(declare-fun b!137712 () Bool)

(declare-fun Unit!4341 () Unit!4286)

(assert (=> b!137712 (= e!89612 Unit!4341)))

(declare-fun b!137713 () Bool)

(assert (=> b!137713 (= e!89611 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71255 (tuple2!2599 lt!71253 (zeroValue!2741 newMap!16)))) lt!71267)))))

(assert (= (and d!43205 c!25901) b!137711))

(assert (= (and d!43205 (not c!25901)) b!137712))

(assert (= (and d!43205 (not res!65932)) b!137713))

(declare-fun m!164487 () Bool)

(assert (=> d!43205 m!164487))

(declare-fun m!164489 () Bool)

(assert (=> b!137711 m!164489))

(declare-fun m!164491 () Bool)

(assert (=> b!137711 m!164491))

(assert (=> b!137711 m!164491))

(declare-fun m!164493 () Bool)

(assert (=> b!137711 m!164493))

(assert (=> b!137713 m!164491))

(assert (=> b!137713 m!164491))

(assert (=> b!137713 m!164493))

(assert (=> b!136734 d!43205))

(declare-fun d!43207 () Bool)

(declare-fun res!65933 () Bool)

(declare-fun e!89613 () Bool)

(assert (=> d!43207 (=> res!65933 e!89613)))

(assert (=> d!43207 (= res!65933 (and ((_ is Cons!1712) (toList!855 call!14979)) (= (_1!1310 (h!2318 (toList!855 call!14979))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!43207 (= (containsKey!175 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89613)))

(declare-fun b!137714 () Bool)

(declare-fun e!89614 () Bool)

(assert (=> b!137714 (= e!89613 e!89614)))

(declare-fun res!65934 () Bool)

(assert (=> b!137714 (=> (not res!65934) (not e!89614))))

(assert (=> b!137714 (= res!65934 (and (or (not ((_ is Cons!1712) (toList!855 call!14979))) (bvsle (_1!1310 (h!2318 (toList!855 call!14979))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) ((_ is Cons!1712) (toList!855 call!14979)) (bvslt (_1!1310 (h!2318 (toList!855 call!14979))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(declare-fun b!137715 () Bool)

(assert (=> b!137715 (= e!89614 (containsKey!175 (t!6195 (toList!855 call!14979)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!43207 (not res!65933)) b!137714))

(assert (= (and b!137714 res!65934) b!137715))

(assert (=> b!137715 m!162421))

(declare-fun m!164495 () Bool)

(assert (=> b!137715 m!164495))

(assert (=> d!42731 d!43207))

(assert (=> b!136702 d!42845))

(assert (=> b!136775 d!42829))

(declare-fun d!43209 () Bool)

(declare-fun e!89615 () Bool)

(assert (=> d!43209 e!89615))

(declare-fun res!65935 () Bool)

(assert (=> d!43209 (=> res!65935 e!89615)))

(declare-fun lt!71954 () Bool)

(assert (=> d!43209 (= res!65935 (not lt!71954))))

(declare-fun lt!71956 () Bool)

(assert (=> d!43209 (= lt!71954 lt!71956)))

(declare-fun lt!71957 () Unit!4286)

(declare-fun e!89616 () Unit!4286)

(assert (=> d!43209 (= lt!71957 e!89616)))

(declare-fun c!25902 () Bool)

(assert (=> d!43209 (= c!25902 lt!71956)))

(assert (=> d!43209 (= lt!71956 (containsKey!175 (toList!855 lt!71281) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43209 (= (contains!892 lt!71281 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71954)))

(declare-fun b!137716 () Bool)

(declare-fun lt!71955 () Unit!4286)

(assert (=> b!137716 (= e!89616 lt!71955)))

(assert (=> b!137716 (= lt!71955 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71281) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> b!137716 (isDefined!125 (getValueByKey!171 (toList!855 lt!71281) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137717 () Bool)

(declare-fun Unit!4342 () Unit!4286)

(assert (=> b!137717 (= e!89616 Unit!4342)))

(declare-fun b!137718 () Bool)

(assert (=> b!137718 (= e!89615 (isDefined!125 (getValueByKey!171 (toList!855 lt!71281) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(assert (= (and d!43209 c!25902) b!137716))

(assert (= (and d!43209 (not c!25902)) b!137717))

(assert (= (and d!43209 (not res!65935)) b!137718))

(declare-fun m!164497 () Bool)

(assert (=> d!43209 m!164497))

(declare-fun m!164499 () Bool)

(assert (=> b!137716 m!164499))

(assert (=> b!137716 m!162827))

(assert (=> b!137716 m!162827))

(declare-fun m!164501 () Bool)

(assert (=> b!137716 m!164501))

(assert (=> b!137718 m!162827))

(assert (=> b!137718 m!162827))

(assert (=> b!137718 m!164501))

(assert (=> d!42733 d!43209))

(declare-fun b!137721 () Bool)

(declare-fun e!89618 () Option!177)

(assert (=> b!137721 (= e!89618 (getValueByKey!171 (t!6195 lt!71282) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137722 () Bool)

(assert (=> b!137722 (= e!89618 None!175)))

(declare-fun b!137720 () Bool)

(declare-fun e!89617 () Option!177)

(assert (=> b!137720 (= e!89617 e!89618)))

(declare-fun c!25904 () Bool)

(assert (=> b!137720 (= c!25904 (and ((_ is Cons!1712) lt!71282) (not (= (_1!1310 (h!2318 lt!71282)) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(declare-fun c!25903 () Bool)

(declare-fun d!43211 () Bool)

(assert (=> d!43211 (= c!25903 (and ((_ is Cons!1712) lt!71282) (= (_1!1310 (h!2318 lt!71282)) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(assert (=> d!43211 (= (getValueByKey!171 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) e!89617)))

(declare-fun b!137719 () Bool)

(assert (=> b!137719 (= e!89617 (Some!176 (_2!1310 (h!2318 lt!71282))))))

(assert (= (and d!43211 c!25903) b!137719))

(assert (= (and d!43211 (not c!25903)) b!137720))

(assert (= (and b!137720 c!25904) b!137721))

(assert (= (and b!137720 (not c!25904)) b!137722))

(declare-fun m!164503 () Bool)

(assert (=> b!137721 m!164503))

(assert (=> d!42733 d!43211))

(declare-fun d!43213 () Bool)

(assert (=> d!43213 (= (getValueByKey!171 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) (Some!176 (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun lt!71958 () Unit!4286)

(assert (=> d!43213 (= lt!71958 (choose!847 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun e!89619 () Bool)

(assert (=> d!43213 e!89619))

(declare-fun res!65936 () Bool)

(assert (=> d!43213 (=> (not res!65936) (not e!89619))))

(assert (=> d!43213 (= res!65936 (isStrictlySorted!318 lt!71282))))

(assert (=> d!43213 (= (lemmaContainsTupThenGetReturnValue!89 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71958)))

(declare-fun b!137723 () Bool)

(declare-fun res!65937 () Bool)

(assert (=> b!137723 (=> (not res!65937) (not e!89619))))

(assert (=> b!137723 (= res!65937 (containsKey!175 lt!71282 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137724 () Bool)

(assert (=> b!137724 (= e!89619 (contains!895 lt!71282 (tuple2!2599 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(assert (= (and d!43213 res!65936) b!137723))

(assert (= (and b!137723 res!65937) b!137724))

(assert (=> d!43213 m!162821))

(declare-fun m!164505 () Bool)

(assert (=> d!43213 m!164505))

(declare-fun m!164507 () Bool)

(assert (=> d!43213 m!164507))

(declare-fun m!164509 () Bool)

(assert (=> b!137723 m!164509))

(declare-fun m!164511 () Bool)

(assert (=> b!137724 m!164511))

(assert (=> d!42733 d!43213))

(declare-fun b!137725 () Bool)

(declare-fun e!89624 () List!1716)

(declare-fun call!15168 () List!1716)

(assert (=> b!137725 (= e!89624 call!15168)))

(declare-fun e!89622 () List!1716)

(declare-fun b!137726 () Bool)

(assert (=> b!137726 (= e!89622 (insertStrictlySorted!92 (t!6195 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun bm!15163 () Bool)

(declare-fun call!15166 () List!1716)

(assert (=> bm!15163 (= call!15166 call!15168)))

(declare-fun b!137727 () Bool)

(declare-fun e!89621 () List!1716)

(declare-fun call!15167 () List!1716)

(assert (=> b!137727 (= e!89621 call!15167)))

(declare-fun c!25908 () Bool)

(declare-fun c!25906 () Bool)

(declare-fun b!137728 () Bool)

(assert (=> b!137728 (= e!89622 (ite c!25906 (t!6195 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (ite c!25908 (Cons!1712 (h!2318 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (t!6195 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))))) Nil!1713)))))

(declare-fun b!137729 () Bool)

(declare-fun lt!71959 () List!1716)

(declare-fun e!89620 () Bool)

(assert (=> b!137729 (= e!89620 (contains!895 lt!71959 (tuple2!2599 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun b!137730 () Bool)

(declare-fun e!89623 () List!1716)

(assert (=> b!137730 (= e!89624 e!89623)))

(assert (=> b!137730 (= c!25906 (and ((_ is Cons!1712) (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (= (_1!1310 (h!2318 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun b!137731 () Bool)

(declare-fun res!65939 () Bool)

(assert (=> b!137731 (=> (not res!65939) (not e!89620))))

(assert (=> b!137731 (= res!65939 (containsKey!175 lt!71959 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun bm!15164 () Bool)

(assert (=> bm!15164 (= call!15167 call!15166)))

(declare-fun b!137732 () Bool)

(assert (=> b!137732 (= c!25908 (and ((_ is Cons!1712) (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (bvsgt (_1!1310 (h!2318 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(assert (=> b!137732 (= e!89623 e!89621)))

(declare-fun b!137733 () Bool)

(assert (=> b!137733 (= e!89621 call!15167)))

(declare-fun c!25905 () Bool)

(declare-fun bm!15165 () Bool)

(assert (=> bm!15165 (= call!15168 ($colon$colon!92 e!89622 (ite c!25905 (h!2318 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (tuple2!2599 (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(declare-fun c!25907 () Bool)

(assert (=> bm!15165 (= c!25907 c!25905)))

(declare-fun d!43215 () Bool)

(assert (=> d!43215 e!89620))

(declare-fun res!65938 () Bool)

(assert (=> d!43215 (=> (not res!65938) (not e!89620))))

(assert (=> d!43215 (= res!65938 (isStrictlySorted!318 lt!71959))))

(assert (=> d!43215 (= lt!71959 e!89624)))

(assert (=> d!43215 (= c!25905 (and ((_ is Cons!1712) (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015)))) (bvslt (_1!1310 (h!2318 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(assert (=> d!43215 (isStrictlySorted!318 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))))))

(assert (=> d!43215 (= (insertStrictlySorted!92 (toList!855 (ite c!25615 call!15016 (ite c!25610 call!15014 call!15015))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))) (_2!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) lt!71959)))

(declare-fun b!137734 () Bool)

(assert (=> b!137734 (= e!89623 call!15166)))

(assert (= (and d!43215 c!25905) b!137725))

(assert (= (and d!43215 (not c!25905)) b!137730))

(assert (= (and b!137730 c!25906) b!137734))

(assert (= (and b!137730 (not c!25906)) b!137732))

(assert (= (and b!137732 c!25908) b!137727))

(assert (= (and b!137732 (not c!25908)) b!137733))

(assert (= (or b!137727 b!137733) bm!15164))

(assert (= (or b!137734 bm!15164) bm!15163))

(assert (= (or b!137725 bm!15163) bm!15165))

(assert (= (and bm!15165 c!25907) b!137726))

(assert (= (and bm!15165 (not c!25907)) b!137728))

(assert (= (and d!43215 res!65938) b!137731))

(assert (= (and b!137731 res!65939) b!137729))

(declare-fun m!164513 () Bool)

(assert (=> b!137729 m!164513))

(declare-fun m!164515 () Bool)

(assert (=> b!137726 m!164515))

(declare-fun m!164517 () Bool)

(assert (=> d!43215 m!164517))

(declare-fun m!164519 () Bool)

(assert (=> d!43215 m!164519))

(declare-fun m!164521 () Bool)

(assert (=> b!137731 m!164521))

(declare-fun m!164523 () Bool)

(assert (=> bm!15165 m!164523))

(assert (=> d!42733 d!43215))

(declare-fun d!43217 () Bool)

(declare-fun res!65940 () Bool)

(declare-fun e!89625 () Bool)

(assert (=> d!43217 (=> res!65940 e!89625)))

(assert (=> d!43217 (= res!65940 (and ((_ is Cons!1712) (t!6195 (toList!855 lt!71024))) (= (_1!1310 (h!2318 (t!6195 (toList!855 lt!71024)))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(assert (=> d!43217 (= (containsKey!175 (t!6195 (toList!855 lt!71024)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) e!89625)))

(declare-fun b!137735 () Bool)

(declare-fun e!89626 () Bool)

(assert (=> b!137735 (= e!89625 e!89626)))

(declare-fun res!65941 () Bool)

(assert (=> b!137735 (=> (not res!65941) (not e!89626))))

(assert (=> b!137735 (= res!65941 (and (or (not ((_ is Cons!1712) (t!6195 (toList!855 lt!71024)))) (bvsle (_1!1310 (h!2318 (t!6195 (toList!855 lt!71024)))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))) ((_ is Cons!1712) (t!6195 (toList!855 lt!71024))) (bvslt (_1!1310 (h!2318 (t!6195 (toList!855 lt!71024)))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355))))))

(declare-fun b!137736 () Bool)

(assert (=> b!137736 (= e!89626 (containsKey!175 (t!6195 (t!6195 (toList!855 lt!71024))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!43217 (not res!65940)) b!137735))

(assert (= (and b!137735 res!65941) b!137736))

(assert (=> b!137736 m!162421))

(declare-fun m!164525 () Bool)

(assert (=> b!137736 m!164525))

(assert (=> b!136995 d!43217))

(declare-fun lt!71960 () Bool)

(declare-fun d!43219 () Bool)

(assert (=> d!43219 (= lt!71960 (select (content!134 (toList!855 lt!71374)) (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!89627 () Bool)

(assert (=> d!43219 (= lt!71960 e!89627)))

(declare-fun res!65942 () Bool)

(assert (=> d!43219 (=> (not res!65942) (not e!89627))))

(assert (=> d!43219 (= res!65942 ((_ is Cons!1712) (toList!855 lt!71374)))))

(assert (=> d!43219 (= (contains!895 (toList!855 lt!71374) (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!71960)))

(declare-fun b!137737 () Bool)

(declare-fun e!89628 () Bool)

(assert (=> b!137737 (= e!89627 e!89628)))

(declare-fun res!65943 () Bool)

(assert (=> b!137737 (=> res!65943 e!89628)))

(assert (=> b!137737 (= res!65943 (= (h!2318 (toList!855 lt!71374)) (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!137738 () Bool)

(assert (=> b!137738 (= e!89628 (contains!895 (t!6195 (toList!855 lt!71374)) (ite c!25588 (ite c!25580 (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2599 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!43219 res!65942) b!137737))

(assert (= (and b!137737 (not res!65943)) b!137738))

(declare-fun m!164527 () Bool)

(assert (=> d!43219 m!164527))

(declare-fun m!164529 () Bool)

(assert (=> d!43219 m!164529))

(declare-fun m!164531 () Bool)

(assert (=> b!137738 m!164531))

(assert (=> b!136857 d!43219))

(declare-fun d!43221 () Bool)

(declare-fun res!65944 () Bool)

(declare-fun e!89629 () Bool)

(assert (=> d!43221 (=> (not res!65944) (not e!89629))))

(assert (=> d!43221 (= res!65944 (simpleValid!93 (_2!1311 lt!71446)))))

(assert (=> d!43221 (= (valid!535 (_2!1311 lt!71446)) e!89629)))

(declare-fun b!137739 () Bool)

(declare-fun res!65945 () Bool)

(assert (=> b!137739 (=> (not res!65945) (not e!89629))))

(assert (=> b!137739 (= res!65945 (= (arrayCountValidKeys!0 (_keys!4640 (_2!1311 lt!71446)) #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71446)))) (_size!603 (_2!1311 lt!71446))))))

(declare-fun b!137740 () Bool)

(declare-fun res!65946 () Bool)

(assert (=> b!137740 (=> (not res!65946) (not e!89629))))

(assert (=> b!137740 (= res!65946 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 (_2!1311 lt!71446)) (mask!7201 (_2!1311 lt!71446))))))

(declare-fun b!137741 () Bool)

(assert (=> b!137741 (= e!89629 (arrayNoDuplicates!0 (_keys!4640 (_2!1311 lt!71446)) #b00000000000000000000000000000000 Nil!1716))))

(assert (= (and d!43221 res!65944) b!137739))

(assert (= (and b!137739 res!65945) b!137740))

(assert (= (and b!137740 res!65946) b!137741))

(declare-fun m!164533 () Bool)

(assert (=> d!43221 m!164533))

(declare-fun m!164535 () Bool)

(assert (=> b!137739 m!164535))

(declare-fun m!164537 () Bool)

(assert (=> b!137740 m!164537))

(declare-fun m!164539 () Bool)

(assert (=> b!137741 m!164539))

(assert (=> b!136942 d!43221))

(declare-fun b!137742 () Bool)

(declare-fun e!89632 () Bool)

(declare-fun call!15169 () Bool)

(assert (=> b!137742 (= e!89632 call!15169)))

(declare-fun d!43223 () Bool)

(declare-fun res!65947 () Bool)

(declare-fun e!89631 () Bool)

(assert (=> d!43223 (=> res!65947 e!89631)))

(assert (=> d!43223 (= res!65947 (bvsge #b00000000000000000000000000000000 (size!2531 (_keys!4640 (_2!1311 lt!71138)))))))

(assert (=> d!43223 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4640 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138))) e!89631)))

(declare-fun b!137743 () Bool)

(declare-fun e!89630 () Bool)

(assert (=> b!137743 (= e!89631 e!89630)))

(declare-fun c!25909 () Bool)

(assert (=> b!137743 (= c!25909 (validKeyInArray!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000)))))

(declare-fun bm!15166 () Bool)

(assert (=> bm!15166 (= call!15169 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4640 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138))))))

(declare-fun b!137744 () Bool)

(assert (=> b!137744 (= e!89630 e!89632)))

(declare-fun lt!71961 () (_ BitVec 64))

(assert (=> b!137744 (= lt!71961 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000))))

(declare-fun lt!71962 () Unit!4286)

(assert (=> b!137744 (= lt!71962 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4640 (_2!1311 lt!71138)) lt!71961 #b00000000000000000000000000000000))))

(assert (=> b!137744 (arrayContainsKey!0 (_keys!4640 (_2!1311 lt!71138)) lt!71961 #b00000000000000000000000000000000)))

(declare-fun lt!71963 () Unit!4286)

(assert (=> b!137744 (= lt!71963 lt!71962)))

(declare-fun res!65948 () Bool)

(assert (=> b!137744 (= res!65948 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 (_2!1311 lt!71138))) #b00000000000000000000000000000000) (_keys!4640 (_2!1311 lt!71138)) (mask!7201 (_2!1311 lt!71138))) (Found!279 #b00000000000000000000000000000000)))))

(assert (=> b!137744 (=> (not res!65948) (not e!89632))))

(declare-fun b!137745 () Bool)

(assert (=> b!137745 (= e!89630 call!15169)))

(assert (= (and d!43223 (not res!65947)) b!137743))

(assert (= (and b!137743 c!25909) b!137744))

(assert (= (and b!137743 (not c!25909)) b!137745))

(assert (= (and b!137744 res!65948) b!137742))

(assert (= (or b!137742 b!137745) bm!15166))

(assert (=> b!137743 m!163253))

(assert (=> b!137743 m!163253))

(assert (=> b!137743 m!163255))

(declare-fun m!164541 () Bool)

(assert (=> bm!15166 m!164541))

(assert (=> b!137744 m!163253))

(declare-fun m!164543 () Bool)

(assert (=> b!137744 m!164543))

(declare-fun m!164545 () Bool)

(assert (=> b!137744 m!164545))

(assert (=> b!137744 m!163253))

(declare-fun m!164547 () Bool)

(assert (=> b!137744 m!164547))

(assert (=> b!136894 d!43223))

(declare-fun lt!71964 () Bool)

(declare-fun d!43225 () Bool)

(assert (=> d!43225 (= lt!71964 (select (content!134 (toList!855 lt!71362)) (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!89633 () Bool)

(assert (=> d!43225 (= lt!71964 e!89633)))

(declare-fun res!65949 () Bool)

(assert (=> d!43225 (=> (not res!65949) (not e!89633))))

(assert (=> d!43225 (= res!65949 ((_ is Cons!1712) (toList!855 lt!71362)))))

(assert (=> d!43225 (= (contains!895 (toList!855 lt!71362) (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71964)))

(declare-fun b!137746 () Bool)

(declare-fun e!89634 () Bool)

(assert (=> b!137746 (= e!89633 e!89634)))

(declare-fun res!65950 () Bool)

(assert (=> b!137746 (=> res!65950 e!89634)))

(assert (=> b!137746 (= res!65950 (= (h!2318 (toList!855 lt!71362)) (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137747 () Bool)

(assert (=> b!137747 (= e!89634 (contains!895 (t!6195 (toList!855 lt!71362)) (tuple2!2599 lt!71193 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!43225 res!65949) b!137746))

(assert (= (and b!137746 (not res!65950)) b!137747))

(declare-fun m!164549 () Bool)

(assert (=> d!43225 m!164549))

(declare-fun m!164551 () Bool)

(assert (=> d!43225 m!164551))

(declare-fun m!164553 () Bool)

(assert (=> b!137747 m!164553))

(assert (=> b!136850 d!43225))

(declare-fun d!43227 () Bool)

(declare-fun e!89635 () Bool)

(assert (=> d!43227 e!89635))

(declare-fun res!65951 () Bool)

(assert (=> d!43227 (=> res!65951 e!89635)))

(declare-fun lt!71965 () Bool)

(assert (=> d!43227 (= res!65951 (not lt!71965))))

(declare-fun lt!71967 () Bool)

(assert (=> d!43227 (= lt!71965 lt!71967)))

(declare-fun lt!71968 () Unit!4286)

(declare-fun e!89636 () Unit!4286)

(assert (=> d!43227 (= lt!71968 e!89636)))

(declare-fun c!25910 () Bool)

(assert (=> d!43227 (= c!25910 lt!71967)))

(assert (=> d!43227 (= lt!71967 (containsKey!175 (toList!855 lt!71357) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> d!43227 (= (contains!892 lt!71357 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71965)))

(declare-fun b!137748 () Bool)

(declare-fun lt!71966 () Unit!4286)

(assert (=> b!137748 (= e!89636 lt!71966)))

(assert (=> b!137748 (= lt!71966 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71357) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(assert (=> b!137748 (isDefined!125 (getValueByKey!171 (toList!855 lt!71357) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137749 () Bool)

(declare-fun Unit!4343 () Unit!4286)

(assert (=> b!137749 (= e!89636 Unit!4343)))

(declare-fun b!137750 () Bool)

(assert (=> b!137750 (= e!89635 (isDefined!125 (getValueByKey!171 (toList!855 lt!71357) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!43227 c!25910) b!137748))

(assert (= (and d!43227 (not c!25910)) b!137749))

(assert (= (and d!43227 (not res!65951)) b!137750))

(declare-fun m!164555 () Bool)

(assert (=> d!43227 m!164555))

(declare-fun m!164557 () Bool)

(assert (=> b!137748 m!164557))

(assert (=> b!137748 m!162983))

(assert (=> b!137748 m!162983))

(declare-fun m!164559 () Bool)

(assert (=> b!137748 m!164559))

(assert (=> b!137750 m!162983))

(assert (=> b!137750 m!162983))

(assert (=> b!137750 m!164559))

(assert (=> d!42781 d!43227))

(declare-fun e!89638 () Option!177)

(declare-fun b!137753 () Bool)

(assert (=> b!137753 (= e!89638 (getValueByKey!171 (t!6195 lt!71358) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137754 () Bool)

(assert (=> b!137754 (= e!89638 None!175)))

(declare-fun b!137752 () Bool)

(declare-fun e!89637 () Option!177)

(assert (=> b!137752 (= e!89637 e!89638)))

(declare-fun c!25912 () Bool)

(assert (=> b!137752 (= c!25912 (and ((_ is Cons!1712) lt!71358) (not (= (_1!1310 (h!2318 lt!71358)) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun d!43229 () Bool)

(declare-fun c!25911 () Bool)

(assert (=> d!43229 (= c!25911 (and ((_ is Cons!1712) lt!71358) (= (_1!1310 (h!2318 lt!71358)) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43229 (= (getValueByKey!171 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) e!89637)))

(declare-fun b!137751 () Bool)

(assert (=> b!137751 (= e!89637 (Some!176 (_2!1310 (h!2318 lt!71358))))))

(assert (= (and d!43229 c!25911) b!137751))

(assert (= (and d!43229 (not c!25911)) b!137752))

(assert (= (and b!137752 c!25912) b!137753))

(assert (= (and b!137752 (not c!25912)) b!137754))

(declare-fun m!164561 () Bool)

(assert (=> b!137753 m!164561))

(assert (=> d!42781 d!43229))

(declare-fun d!43231 () Bool)

(assert (=> d!43231 (= (getValueByKey!171 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) (Some!176 (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun lt!71969 () Unit!4286)

(assert (=> d!43231 (= lt!71969 (choose!847 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun e!89639 () Bool)

(assert (=> d!43231 e!89639))

(declare-fun res!65952 () Bool)

(assert (=> d!43231 (=> (not res!65952) (not e!89639))))

(assert (=> d!43231 (= res!65952 (isStrictlySorted!318 lt!71358))))

(assert (=> d!43231 (= (lemmaContainsTupThenGetReturnValue!89 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71969)))

(declare-fun b!137755 () Bool)

(declare-fun res!65953 () Bool)

(assert (=> b!137755 (=> (not res!65953) (not e!89639))))

(assert (=> b!137755 (= res!65953 (containsKey!175 lt!71358 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun b!137756 () Bool)

(assert (=> b!137756 (= e!89639 (contains!895 lt!71358 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (= (and d!43231 res!65952) b!137755))

(assert (= (and b!137755 res!65953) b!137756))

(assert (=> d!43231 m!162977))

(declare-fun m!164563 () Bool)

(assert (=> d!43231 m!164563))

(declare-fun m!164565 () Bool)

(assert (=> d!43231 m!164565))

(declare-fun m!164567 () Bool)

(assert (=> b!137755 m!164567))

(declare-fun m!164569 () Bool)

(assert (=> b!137756 m!164569))

(assert (=> d!42781 d!43231))

(declare-fun b!137757 () Bool)

(declare-fun e!89644 () List!1716)

(declare-fun call!15172 () List!1716)

(assert (=> b!137757 (= e!89644 call!15172)))

(declare-fun b!137758 () Bool)

(declare-fun e!89642 () List!1716)

(assert (=> b!137758 (= e!89642 (insertStrictlySorted!92 (t!6195 (toList!855 lt!71198)) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15167 () Bool)

(declare-fun call!15170 () List!1716)

(assert (=> bm!15167 (= call!15170 call!15172)))

(declare-fun b!137759 () Bool)

(declare-fun e!89641 () List!1716)

(declare-fun call!15171 () List!1716)

(assert (=> b!137759 (= e!89641 call!15171)))

(declare-fun c!25914 () Bool)

(declare-fun b!137760 () Bool)

(declare-fun c!25916 () Bool)

(assert (=> b!137760 (= e!89642 (ite c!25914 (t!6195 (toList!855 lt!71198)) (ite c!25916 (Cons!1712 (h!2318 (toList!855 lt!71198)) (t!6195 (toList!855 lt!71198))) Nil!1713)))))

(declare-fun e!89640 () Bool)

(declare-fun lt!71970 () List!1716)

(declare-fun b!137761 () Bool)

(assert (=> b!137761 (= e!89640 (contains!895 lt!71970 (tuple2!2599 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137762 () Bool)

(declare-fun e!89643 () List!1716)

(assert (=> b!137762 (= e!89644 e!89643)))

(assert (=> b!137762 (= c!25914 (and ((_ is Cons!1712) (toList!855 lt!71198)) (= (_1!1310 (h!2318 (toList!855 lt!71198))) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137763 () Bool)

(declare-fun res!65955 () Bool)

(assert (=> b!137763 (=> (not res!65955) (not e!89640))))

(assert (=> b!137763 (= res!65955 (containsKey!175 lt!71970 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))

(declare-fun bm!15168 () Bool)

(assert (=> bm!15168 (= call!15171 call!15170)))

(declare-fun b!137764 () Bool)

(assert (=> b!137764 (= c!25916 (and ((_ is Cons!1712) (toList!855 lt!71198)) (bvsgt (_1!1310 (h!2318 (toList!855 lt!71198))) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> b!137764 (= e!89643 e!89641)))

(declare-fun b!137765 () Bool)

(assert (=> b!137765 (= e!89641 call!15171)))

(declare-fun c!25913 () Bool)

(declare-fun bm!15169 () Bool)

(assert (=> bm!15169 (= call!15172 ($colon$colon!92 e!89642 (ite c!25913 (h!2318 (toList!855 lt!71198)) (tuple2!2599 (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(declare-fun c!25915 () Bool)

(assert (=> bm!15169 (= c!25915 c!25913)))

(declare-fun d!43233 () Bool)

(assert (=> d!43233 e!89640))

(declare-fun res!65954 () Bool)

(assert (=> d!43233 (=> (not res!65954) (not e!89640))))

(assert (=> d!43233 (= res!65954 (isStrictlySorted!318 lt!71970))))

(assert (=> d!43233 (= lt!71970 e!89644)))

(assert (=> d!43233 (= c!25913 (and ((_ is Cons!1712) (toList!855 lt!71198)) (bvslt (_1!1310 (h!2318 (toList!855 lt!71198))) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(assert (=> d!43233 (isStrictlySorted!318 (toList!855 lt!71198))))

(assert (=> d!43233 (= (insertStrictlySorted!92 (toList!855 lt!71198) (_1!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) (_2!1310 (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))))) lt!71970)))

(declare-fun b!137766 () Bool)

(assert (=> b!137766 (= e!89643 call!15170)))

(assert (= (and d!43233 c!25913) b!137757))

(assert (= (and d!43233 (not c!25913)) b!137762))

(assert (= (and b!137762 c!25914) b!137766))

(assert (= (and b!137762 (not c!25914)) b!137764))

(assert (= (and b!137764 c!25916) b!137759))

(assert (= (and b!137764 (not c!25916)) b!137765))

(assert (= (or b!137759 b!137765) bm!15168))

(assert (= (or b!137766 bm!15168) bm!15167))

(assert (= (or b!137757 bm!15167) bm!15169))

(assert (= (and bm!15169 c!25915) b!137758))

(assert (= (and bm!15169 (not c!25915)) b!137760))

(assert (= (and d!43233 res!65954) b!137763))

(assert (= (and b!137763 res!65955) b!137761))

(declare-fun m!164571 () Bool)

(assert (=> b!137761 m!164571))

(declare-fun m!164573 () Bool)

(assert (=> b!137758 m!164573))

(declare-fun m!164575 () Bool)

(assert (=> d!43233 m!164575))

(declare-fun m!164577 () Bool)

(assert (=> d!43233 m!164577))

(declare-fun m!164579 () Bool)

(assert (=> b!137763 m!164579))

(declare-fun m!164581 () Bool)

(assert (=> bm!15169 m!164581))

(assert (=> d!42781 d!43233))

(declare-fun d!43235 () Bool)

(assert (=> d!43235 (= (get!1493 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!3221 (getValueByKey!171 (toList!855 lt!71204) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!42803 d!43235))

(assert (=> d!42803 d!43007))

(declare-fun d!43237 () Bool)

(declare-fun e!89645 () Bool)

(assert (=> d!43237 e!89645))

(declare-fun res!65956 () Bool)

(assert (=> d!43237 (=> res!65956 e!89645)))

(declare-fun lt!71971 () Bool)

(assert (=> d!43237 (= res!65956 (not lt!71971))))

(declare-fun lt!71973 () Bool)

(assert (=> d!43237 (= lt!71971 lt!71973)))

(declare-fun lt!71974 () Unit!4286)

(declare-fun e!89646 () Unit!4286)

(assert (=> d!43237 (= lt!71974 e!89646)))

(declare-fun c!25917 () Bool)

(assert (=> d!43237 (= c!25917 lt!71973)))

(assert (=> d!43237 (= lt!71973 (containsKey!175 (toList!855 lt!71492) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43237 (= (contains!892 lt!71492 #b0000000000000000000000000000000000000000000000000000000000000000) lt!71971)))

(declare-fun b!137767 () Bool)

(declare-fun lt!71972 () Unit!4286)

(assert (=> b!137767 (= e!89646 lt!71972)))

(assert (=> b!137767 (= lt!71972 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71492) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137767 (isDefined!125 (getValueByKey!171 (toList!855 lt!71492) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137768 () Bool)

(declare-fun Unit!4344 () Unit!4286)

(assert (=> b!137768 (= e!89646 Unit!4344)))

(declare-fun b!137769 () Bool)

(assert (=> b!137769 (= e!89645 (isDefined!125 (getValueByKey!171 (toList!855 lt!71492) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43237 c!25917) b!137767))

(assert (= (and d!43237 (not c!25917)) b!137768))

(assert (= (and d!43237 (not res!65956)) b!137769))

(declare-fun m!164583 () Bool)

(assert (=> d!43237 m!164583))

(declare-fun m!164585 () Bool)

(assert (=> b!137767 m!164585))

(assert (=> b!137767 m!164025))

(assert (=> b!137767 m!164025))

(declare-fun m!164587 () Bool)

(assert (=> b!137767 m!164587))

(assert (=> b!137769 m!164025))

(assert (=> b!137769 m!164025))

(assert (=> b!137769 m!164587))

(assert (=> bm!15059 d!43237))

(declare-fun d!43239 () Bool)

(assert (=> d!43239 (= (apply!117 (+!164 lt!71496 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71483) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71496 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) lt!71483)))))

(declare-fun bs!5764 () Bool)

(assert (= bs!5764 d!43239))

(declare-fun m!164589 () Bool)

(assert (=> bs!5764 m!164589))

(assert (=> bs!5764 m!164589))

(declare-fun m!164591 () Bool)

(assert (=> bs!5764 m!164591))

(assert (=> b!136973 d!43239))

(declare-fun d!43241 () Bool)

(declare-fun e!89647 () Bool)

(assert (=> d!43241 e!89647))

(declare-fun res!65957 () Bool)

(assert (=> d!43241 (=> (not res!65957) (not e!89647))))

(declare-fun lt!71976 () ListLongMap!1679)

(assert (=> d!43241 (= res!65957 (contains!892 lt!71976 (_1!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(declare-fun lt!71977 () List!1716)

(assert (=> d!43241 (= lt!71976 (ListLongMap!1680 lt!71977))))

(declare-fun lt!71978 () Unit!4286)

(declare-fun lt!71975 () Unit!4286)

(assert (=> d!43241 (= lt!71978 lt!71975)))

(assert (=> d!43241 (= (getValueByKey!171 lt!71977 (_1!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43241 (= lt!71975 (lemmaContainsTupThenGetReturnValue!89 lt!71977 (_1!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43241 (= lt!71977 (insertStrictlySorted!92 (toList!855 lt!71487) (_1!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43241 (= (+!164 lt!71487 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71976)))

(declare-fun b!137770 () Bool)

(declare-fun res!65958 () Bool)

(assert (=> b!137770 (=> (not res!65958) (not e!89647))))

(assert (=> b!137770 (= res!65958 (= (getValueByKey!171 (toList!855 lt!71976) (_1!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(declare-fun b!137771 () Bool)

(assert (=> b!137771 (= e!89647 (contains!895 (toList!855 lt!71976) (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))

(assert (= (and d!43241 res!65957) b!137770))

(assert (= (and b!137770 res!65958) b!137771))

(declare-fun m!164593 () Bool)

(assert (=> d!43241 m!164593))

(declare-fun m!164595 () Bool)

(assert (=> d!43241 m!164595))

(declare-fun m!164597 () Bool)

(assert (=> d!43241 m!164597))

(declare-fun m!164599 () Bool)

(assert (=> d!43241 m!164599))

(declare-fun m!164601 () Bool)

(assert (=> b!137770 m!164601))

(declare-fun m!164603 () Bool)

(assert (=> b!137771 m!164603))

(assert (=> b!136973 d!43241))

(declare-fun d!43243 () Bool)

(assert (=> d!43243 (= (apply!117 (+!164 lt!71488 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71494) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71488 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) lt!71494)))))

(declare-fun bs!5765 () Bool)

(assert (= bs!5765 d!43243))

(declare-fun m!164605 () Bool)

(assert (=> bs!5765 m!164605))

(assert (=> bs!5765 m!164605))

(declare-fun m!164607 () Bool)

(assert (=> bs!5765 m!164607))

(assert (=> b!136973 d!43243))

(declare-fun d!43245 () Bool)

(assert (=> d!43245 (= (apply!117 (+!164 lt!71487 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71480) (apply!117 lt!71487 lt!71480))))

(declare-fun lt!71979 () Unit!4286)

(assert (=> d!43245 (= lt!71979 (choose!845 lt!71487 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) lt!71480))))

(declare-fun e!89648 () Bool)

(assert (=> d!43245 e!89648))

(declare-fun res!65959 () Bool)

(assert (=> d!43245 (=> (not res!65959) (not e!89648))))

(assert (=> d!43245 (= res!65959 (contains!892 lt!71487 lt!71480))))

(assert (=> d!43245 (= (addApplyDifferent!93 lt!71487 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) lt!71480) lt!71979)))

(declare-fun b!137772 () Bool)

(assert (=> b!137772 (= e!89648 (not (= lt!71480 lt!71497)))))

(assert (= (and d!43245 res!65959) b!137772))

(declare-fun m!164609 () Bool)

(assert (=> d!43245 m!164609))

(assert (=> d!43245 m!163157))

(assert (=> d!43245 m!163155))

(assert (=> d!43245 m!163177))

(assert (=> d!43245 m!163155))

(declare-fun m!164611 () Bool)

(assert (=> d!43245 m!164611))

(assert (=> b!136973 d!43245))

(declare-fun d!43247 () Bool)

(assert (=> d!43247 (= (apply!117 lt!71488 lt!71494) (get!1493 (getValueByKey!171 (toList!855 lt!71488) lt!71494)))))

(declare-fun bs!5766 () Bool)

(assert (= bs!5766 d!43247))

(declare-fun m!164613 () Bool)

(assert (=> bs!5766 m!164613))

(assert (=> bs!5766 m!164613))

(declare-fun m!164615 () Bool)

(assert (=> bs!5766 m!164615))

(assert (=> b!136973 d!43247))

(declare-fun d!43249 () Bool)

(assert (=> d!43249 (= (apply!117 (+!164 lt!71488 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71494) (apply!117 lt!71488 lt!71494))))

(declare-fun lt!71980 () Unit!4286)

(assert (=> d!43249 (= lt!71980 (choose!845 lt!71488 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) lt!71494))))

(declare-fun e!89649 () Bool)

(assert (=> d!43249 e!89649))

(declare-fun res!65960 () Bool)

(assert (=> d!43249 (=> (not res!65960) (not e!89649))))

(assert (=> d!43249 (= res!65960 (contains!892 lt!71488 lt!71494))))

(assert (=> d!43249 (= (addApplyDifferent!93 lt!71488 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)) lt!71494) lt!71980)))

(declare-fun b!137773 () Bool)

(assert (=> b!137773 (= e!89649 (not (= lt!71494 lt!71481)))))

(assert (= (and d!43249 res!65960) b!137773))

(declare-fun m!164617 () Bool)

(assert (=> d!43249 m!164617))

(assert (=> d!43249 m!163175))

(assert (=> d!43249 m!163151))

(assert (=> d!43249 m!163153))

(assert (=> d!43249 m!163151))

(declare-fun m!164619 () Bool)

(assert (=> d!43249 m!164619))

(assert (=> b!136973 d!43249))

(declare-fun d!43251 () Bool)

(declare-fun e!89650 () Bool)

(assert (=> d!43251 e!89650))

(declare-fun res!65961 () Bool)

(assert (=> d!43251 (=> (not res!65961) (not e!89650))))

(declare-fun lt!71982 () ListLongMap!1679)

(assert (=> d!43251 (= res!65961 (contains!892 lt!71982 (_1!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(declare-fun lt!71983 () List!1716)

(assert (=> d!43251 (= lt!71982 (ListLongMap!1680 lt!71983))))

(declare-fun lt!71984 () Unit!4286)

(declare-fun lt!71981 () Unit!4286)

(assert (=> d!43251 (= lt!71984 lt!71981)))

(assert (=> d!43251 (= (getValueByKey!171 lt!71983 (_1!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(assert (=> d!43251 (= lt!71981 (lemmaContainsTupThenGetReturnValue!89 lt!71983 (_1!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(assert (=> d!43251 (= lt!71983 (insertStrictlySorted!92 (toList!855 lt!71486) (_1!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(assert (=> d!43251 (= (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71982)))

(declare-fun b!137774 () Bool)

(declare-fun res!65962 () Bool)

(assert (=> b!137774 (=> (not res!65962) (not e!89650))))

(assert (=> b!137774 (= res!65962 (= (getValueByKey!171 (toList!855 lt!71982) (_1!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))))))))

(declare-fun b!137775 () Bool)

(assert (=> b!137775 (= e!89650 (contains!895 (toList!855 lt!71982) (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))))))

(assert (= (and d!43251 res!65961) b!137774))

(assert (= (and b!137774 res!65962) b!137775))

(declare-fun m!164621 () Bool)

(assert (=> d!43251 m!164621))

(declare-fun m!164623 () Bool)

(assert (=> d!43251 m!164623))

(declare-fun m!164625 () Bool)

(assert (=> d!43251 m!164625))

(declare-fun m!164627 () Bool)

(assert (=> d!43251 m!164627))

(declare-fun m!164629 () Bool)

(assert (=> b!137774 m!164629))

(declare-fun m!164631 () Bool)

(assert (=> b!137775 m!164631))

(assert (=> b!136973 d!43251))

(assert (=> b!136973 d!42867))

(declare-fun d!43253 () Bool)

(assert (=> d!43253 (= (apply!117 lt!71487 lt!71480) (get!1493 (getValueByKey!171 (toList!855 lt!71487) lt!71480)))))

(declare-fun bs!5767 () Bool)

(assert (= bs!5767 d!43253))

(declare-fun m!164633 () Bool)

(assert (=> bs!5767 m!164633))

(assert (=> bs!5767 m!164633))

(declare-fun m!164635 () Bool)

(assert (=> bs!5767 m!164635))

(assert (=> b!136973 d!43253))

(declare-fun d!43255 () Bool)

(declare-fun e!89651 () Bool)

(assert (=> d!43255 e!89651))

(declare-fun res!65963 () Bool)

(assert (=> d!43255 (=> (not res!65963) (not e!89651))))

(declare-fun lt!71986 () ListLongMap!1679)

(assert (=> d!43255 (= res!65963 (contains!892 lt!71986 (_1!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(declare-fun lt!71987 () List!1716)

(assert (=> d!43255 (= lt!71986 (ListLongMap!1680 lt!71987))))

(declare-fun lt!71988 () Unit!4286)

(declare-fun lt!71985 () Unit!4286)

(assert (=> d!43255 (= lt!71988 lt!71985)))

(assert (=> d!43255 (= (getValueByKey!171 lt!71987 (_1!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(assert (=> d!43255 (= lt!71985 (lemmaContainsTupThenGetReturnValue!89 lt!71987 (_1!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(assert (=> d!43255 (= lt!71987 (insertStrictlySorted!92 (toList!855 lt!71496) (_1!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))))))

(assert (=> d!43255 (= (+!164 lt!71496 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71986)))

(declare-fun b!137776 () Bool)

(declare-fun res!65964 () Bool)

(assert (=> b!137776 (=> (not res!65964) (not e!89651))))

(assert (=> b!137776 (= res!65964 (= (getValueByKey!171 (toList!855 lt!71986) (_1!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))))))))

(declare-fun b!137777 () Bool)

(assert (=> b!137777 (= e!89651 (contains!895 (toList!855 lt!71986) (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))))))

(assert (= (and d!43255 res!65963) b!137776))

(assert (= (and b!137776 res!65964) b!137777))

(declare-fun m!164637 () Bool)

(assert (=> d!43255 m!164637))

(declare-fun m!164639 () Bool)

(assert (=> d!43255 m!164639))

(declare-fun m!164641 () Bool)

(assert (=> d!43255 m!164641))

(declare-fun m!164643 () Bool)

(assert (=> d!43255 m!164643))

(declare-fun m!164645 () Bool)

(assert (=> b!137776 m!164645))

(declare-fun m!164647 () Bool)

(assert (=> b!137777 m!164647))

(assert (=> b!136973 d!43255))

(declare-fun d!43257 () Bool)

(declare-fun e!89652 () Bool)

(assert (=> d!43257 e!89652))

(declare-fun res!65965 () Bool)

(assert (=> d!43257 (=> res!65965 e!89652)))

(declare-fun lt!71989 () Bool)

(assert (=> d!43257 (= res!65965 (not lt!71989))))

(declare-fun lt!71991 () Bool)

(assert (=> d!43257 (= lt!71989 lt!71991)))

(declare-fun lt!71992 () Unit!4286)

(declare-fun e!89653 () Unit!4286)

(assert (=> d!43257 (= lt!71992 e!89653)))

(declare-fun c!25918 () Bool)

(assert (=> d!43257 (= c!25918 lt!71991)))

(assert (=> d!43257 (= lt!71991 (containsKey!175 (toList!855 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) lt!71498))))

(assert (=> d!43257 (= (contains!892 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71498) lt!71989)))

(declare-fun b!137778 () Bool)

(declare-fun lt!71990 () Unit!4286)

(assert (=> b!137778 (= e!89653 lt!71990)))

(assert (=> b!137778 (= lt!71990 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) lt!71498))))

(assert (=> b!137778 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) lt!71498))))

(declare-fun b!137779 () Bool)

(declare-fun Unit!4345 () Unit!4286)

(assert (=> b!137779 (= e!89653 Unit!4345)))

(declare-fun b!137780 () Bool)

(assert (=> b!137780 (= e!89652 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16))))) lt!71498)))))

(assert (= (and d!43257 c!25918) b!137778))

(assert (= (and d!43257 (not c!25918)) b!137779))

(assert (= (and d!43257 (not res!65965)) b!137780))

(declare-fun m!164649 () Bool)

(assert (=> d!43257 m!164649))

(declare-fun m!164651 () Bool)

(assert (=> b!137778 m!164651))

(declare-fun m!164653 () Bool)

(assert (=> b!137778 m!164653))

(assert (=> b!137778 m!164653))

(declare-fun m!164655 () Bool)

(assert (=> b!137778 m!164655))

(assert (=> b!137780 m!164653))

(assert (=> b!137780 m!164653))

(assert (=> b!137780 m!164655))

(assert (=> b!136973 d!43257))

(declare-fun d!43259 () Bool)

(assert (=> d!43259 (= (apply!117 (+!164 lt!71487 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71480) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71487 (tuple2!2599 lt!71497 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) lt!71480)))))

(declare-fun bs!5768 () Bool)

(assert (= bs!5768 d!43259))

(declare-fun m!164657 () Bool)

(assert (=> bs!5768 m!164657))

(assert (=> bs!5768 m!164657))

(declare-fun m!164659 () Bool)

(assert (=> bs!5768 m!164659))

(assert (=> b!136973 d!43259))

(declare-fun d!43261 () Bool)

(declare-fun e!89654 () Bool)

(assert (=> d!43261 e!89654))

(declare-fun res!65966 () Bool)

(assert (=> d!43261 (=> (not res!65966) (not e!89654))))

(declare-fun lt!71994 () ListLongMap!1679)

(assert (=> d!43261 (= res!65966 (contains!892 lt!71994 (_1!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(declare-fun lt!71995 () List!1716)

(assert (=> d!43261 (= lt!71994 (ListLongMap!1680 lt!71995))))

(declare-fun lt!71996 () Unit!4286)

(declare-fun lt!71993 () Unit!4286)

(assert (=> d!43261 (= lt!71996 lt!71993)))

(assert (=> d!43261 (= (getValueByKey!171 lt!71995 (_1!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43261 (= lt!71993 (lemmaContainsTupThenGetReturnValue!89 lt!71995 (_1!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43261 (= lt!71995 (insertStrictlySorted!92 (toList!855 lt!71488) (_1!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) (_2!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))))))

(assert (=> d!43261 (= (+!164 lt!71488 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))) lt!71994)))

(declare-fun b!137781 () Bool)

(declare-fun res!65967 () Bool)

(assert (=> b!137781 (=> (not res!65967) (not e!89654))))

(assert (=> b!137781 (= res!65967 (= (getValueByKey!171 (toList!855 lt!71994) (_1!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16))))) (Some!176 (_2!1310 (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))))

(declare-fun b!137782 () Bool)

(assert (=> b!137782 (= e!89654 (contains!895 (toList!855 lt!71994) (tuple2!2599 lt!71481 (ite c!25588 (ite c!25580 (minValue!2741 newMap!16) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2741 newMap!16)))))))

(assert (= (and d!43261 res!65966) b!137781))

(assert (= (and b!137781 res!65967) b!137782))

(declare-fun m!164661 () Bool)

(assert (=> d!43261 m!164661))

(declare-fun m!164663 () Bool)

(assert (=> d!43261 m!164663))

(declare-fun m!164665 () Bool)

(assert (=> d!43261 m!164665))

(declare-fun m!164667 () Bool)

(assert (=> d!43261 m!164667))

(declare-fun m!164669 () Bool)

(assert (=> b!137781 m!164669))

(declare-fun m!164671 () Bool)

(assert (=> b!137782 m!164671))

(assert (=> b!136973 d!43261))

(declare-fun d!43263 () Bool)

(assert (=> d!43263 (contains!892 (+!164 lt!71486 (tuple2!2599 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71498)))

(declare-fun lt!71997 () Unit!4286)

(assert (=> d!43263 (= lt!71997 (choose!844 lt!71486 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) lt!71498))))

(assert (=> d!43263 (contains!892 lt!71486 lt!71498)))

(assert (=> d!43263 (= (addStillContains!93 lt!71486 lt!71484 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) lt!71498) lt!71997)))

(declare-fun bs!5769 () Bool)

(assert (= bs!5769 d!43263))

(assert (=> bs!5769 m!163165))

(assert (=> bs!5769 m!163165))

(assert (=> bs!5769 m!163169))

(declare-fun m!164673 () Bool)

(assert (=> bs!5769 m!164673))

(declare-fun m!164675 () Bool)

(assert (=> bs!5769 m!164675))

(assert (=> b!136973 d!43263))

(declare-fun d!43265 () Bool)

(assert (=> d!43265 (= (apply!117 lt!71496 lt!71483) (get!1493 (getValueByKey!171 (toList!855 lt!71496) lt!71483)))))

(declare-fun bs!5770 () Bool)

(assert (= bs!5770 d!43265))

(declare-fun m!164677 () Bool)

(assert (=> bs!5770 m!164677))

(assert (=> bs!5770 m!164677))

(declare-fun m!164679 () Bool)

(assert (=> bs!5770 m!164679))

(assert (=> b!136973 d!43265))

(declare-fun d!43267 () Bool)

(assert (=> d!43267 (= (apply!117 (+!164 lt!71496 (tuple2!2599 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)))) lt!71483) (apply!117 lt!71496 lt!71483))))

(declare-fun lt!71998 () Unit!4286)

(assert (=> d!43267 (= lt!71998 (choose!845 lt!71496 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) lt!71483))))

(declare-fun e!89655 () Bool)

(assert (=> d!43267 e!89655))

(declare-fun res!65968 () Bool)

(assert (=> d!43267 (=> (not res!65968) (not e!89655))))

(assert (=> d!43267 (= res!65968 (contains!892 lt!71496 lt!71483))))

(assert (=> d!43267 (= (addApplyDifferent!93 lt!71496 lt!71489 (ite (and c!25588 c!25580) (get!1488 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) from!355) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2741 newMap!16)) lt!71483) lt!71998)))

(declare-fun b!137783 () Bool)

(assert (=> b!137783 (= e!89655 (not (= lt!71483 lt!71489)))))

(assert (= (and d!43267 res!65968) b!137783))

(declare-fun m!164681 () Bool)

(assert (=> d!43267 m!164681))

(assert (=> d!43267 m!163159))

(assert (=> d!43267 m!163161))

(assert (=> d!43267 m!163171))

(assert (=> d!43267 m!163161))

(declare-fun m!164683 () Bool)

(assert (=> d!43267 m!164683))

(assert (=> b!136973 d!43267))

(assert (=> b!136715 d!43005))

(assert (=> b!136715 d!43007))

(assert (=> b!136939 d!42719))

(declare-fun d!43269 () Bool)

(declare-fun res!65969 () Bool)

(declare-fun e!89656 () Bool)

(assert (=> d!43269 (=> res!65969 e!89656)))

(assert (=> d!43269 (= res!65969 (= (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (=> d!43269 (= (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!89656)))

(declare-fun b!137784 () Bool)

(declare-fun e!89657 () Bool)

(assert (=> b!137784 (= e!89656 e!89657)))

(declare-fun res!65970 () Bool)

(assert (=> b!137784 (=> (not res!65970) (not e!89657))))

(assert (=> b!137784 (= res!65970 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2531 (_keys!4640 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137785 () Bool)

(assert (=> b!137785 (= e!89657 (arrayContainsKey!0 (_keys!4640 (v!3215 (underlying!457 thiss!992))) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!43269 (not res!65969)) b!137784))

(assert (= (and b!137784 res!65970) b!137785))

(declare-fun m!164685 () Bool)

(assert (=> d!43269 m!164685))

(assert (=> b!137785 m!162421))

(declare-fun m!164687 () Bool)

(assert (=> b!137785 m!164687))

(assert (=> b!136897 d!43269))

(declare-fun d!43271 () Bool)

(assert (=> d!43271 (= (apply!117 lt!71261 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1493 (getValueByKey!171 (toList!855 lt!71261) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5771 () Bool)

(assert (= bs!5771 d!43271))

(assert (=> bs!5771 m!162693))

(assert (=> bs!5771 m!163525))

(assert (=> bs!5771 m!163525))

(declare-fun m!164689 () Bool)

(assert (=> bs!5771 m!164689))

(assert (=> b!136727 d!43271))

(declare-fun d!43273 () Bool)

(declare-fun c!25919 () Bool)

(assert (=> d!43273 (= c!25919 ((_ is ValueCellFull!1100) (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!89658 () V!3497)

(assert (=> d!43273 (= (get!1488 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!89658)))

(declare-fun b!137786 () Bool)

(assert (=> b!137786 (= e!89658 (get!1491 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137787 () Bool)

(assert (=> b!137787 (= e!89658 (get!1492 (select (arr!2261 (_values!2871 newMap!16)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43273 c!25919) b!137786))

(assert (= (and d!43273 (not c!25919)) b!137787))

(assert (=> b!137786 m!162761))

(assert (=> b!137786 m!162699))

(declare-fun m!164691 () Bool)

(assert (=> b!137786 m!164691))

(assert (=> b!137787 m!162761))

(assert (=> b!137787 m!162699))

(declare-fun m!164693 () Bool)

(assert (=> b!137787 m!164693))

(assert (=> b!136727 d!43273))

(declare-fun d!43275 () Bool)

(declare-fun lt!71999 () Bool)

(assert (=> d!43275 (= lt!71999 (select (content!134 (toList!855 lt!71500)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!89659 () Bool)

(assert (=> d!43275 (= lt!71999 e!89659)))

(declare-fun res!65971 () Bool)

(assert (=> d!43275 (=> (not res!65971) (not e!89659))))

(assert (=> d!43275 (= res!65971 ((_ is Cons!1712) (toList!855 lt!71500)))))

(assert (=> d!43275 (= (contains!895 (toList!855 lt!71500) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!71999)))

(declare-fun b!137788 () Bool)

(declare-fun e!89660 () Bool)

(assert (=> b!137788 (= e!89659 e!89660)))

(declare-fun res!65972 () Bool)

(assert (=> b!137788 (=> res!65972 e!89660)))

(assert (=> b!137788 (= res!65972 (= (h!2318 (toList!855 lt!71500)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137789 () Bool)

(assert (=> b!137789 (= e!89660 (contains!895 (t!6195 (toList!855 lt!71500)) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!43275 res!65971) b!137788))

(assert (= (and b!137788 (not res!65972)) b!137789))

(declare-fun m!164695 () Bool)

(assert (=> d!43275 m!164695))

(declare-fun m!164697 () Bool)

(assert (=> d!43275 m!164697))

(declare-fun m!164699 () Bool)

(assert (=> b!137789 m!164699))

(assert (=> b!136997 d!43275))

(assert (=> b!136800 d!43017))

(assert (=> b!136800 d!43019))

(declare-fun b!137802 () Bool)

(declare-fun e!89667 () SeekEntryResult!279)

(declare-fun e!89668 () SeekEntryResult!279)

(assert (=> b!137802 (= e!89667 e!89668)))

(declare-fun lt!72005 () (_ BitVec 64))

(declare-fun c!25927 () Bool)

(assert (=> b!137802 (= c!25927 (= lt!72005 (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun b!137803 () Bool)

(assert (=> b!137803 (= e!89667 Undefined!279)))

(declare-fun b!137805 () Bool)

(assert (=> b!137805 (= e!89668 (Found!279 (index!3279 lt!71291)))))

(declare-fun b!137806 () Bool)

(declare-fun e!89669 () SeekEntryResult!279)

(assert (=> b!137806 (= e!89669 (MissingVacant!279 (index!3279 lt!71291)))))

(declare-fun b!137807 () Bool)

(assert (=> b!137807 (= e!89669 (seekKeyOrZeroReturnVacant!0 (bvadd (x!15806 lt!71291) #b00000000000000000000000000000001) (nextIndex!0 (index!3279 lt!71291) (x!15806 lt!71291) (mask!7201 newMap!16)) (index!3279 lt!71291) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!137804 () Bool)

(declare-fun c!25928 () Bool)

(assert (=> b!137804 (= c!25928 (= lt!72005 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137804 (= e!89668 e!89669)))

(declare-fun lt!72004 () SeekEntryResult!279)

(declare-fun d!43277 () Bool)

(assert (=> d!43277 (and (or ((_ is Undefined!279) lt!72004) (not ((_ is Found!279) lt!72004)) (and (bvsge (index!3278 lt!72004) #b00000000000000000000000000000000) (bvslt (index!3278 lt!72004) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!72004) ((_ is Found!279) lt!72004) (not ((_ is MissingVacant!279) lt!72004)) (not (= (index!3280 lt!72004) (index!3279 lt!71291))) (and (bvsge (index!3280 lt!72004) #b00000000000000000000000000000000) (bvslt (index!3280 lt!72004) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!72004) (ite ((_ is Found!279) lt!72004) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!72004)) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) (and ((_ is MissingVacant!279) lt!72004) (= (index!3280 lt!72004) (index!3279 lt!71291)) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!72004)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (=> d!43277 (= lt!72004 e!89667)))

(declare-fun c!25926 () Bool)

(assert (=> d!43277 (= c!25926 (bvsge (x!15806 lt!71291) #b01111111111111111111111111111110))))

(assert (=> d!43277 (= lt!72005 (select (arr!2260 (_keys!4640 newMap!16)) (index!3279 lt!71291)))))

(assert (=> d!43277 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43277 (= (seekKeyOrZeroReturnVacant!0 (x!15806 lt!71291) (index!3279 lt!71291) (index!3279 lt!71291) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355) (_keys!4640 newMap!16) (mask!7201 newMap!16)) lt!72004)))

(assert (= (and d!43277 c!25926) b!137803))

(assert (= (and d!43277 (not c!25926)) b!137802))

(assert (= (and b!137802 c!25927) b!137805))

(assert (= (and b!137802 (not c!25927)) b!137804))

(assert (= (and b!137804 c!25928) b!137806))

(assert (= (and b!137804 (not c!25928)) b!137807))

(declare-fun m!164701 () Bool)

(assert (=> b!137807 m!164701))

(assert (=> b!137807 m!164701))

(assert (=> b!137807 m!162421))

(declare-fun m!164703 () Bool)

(assert (=> b!137807 m!164703))

(declare-fun m!164705 () Bool)

(assert (=> d!43277 m!164705))

(declare-fun m!164707 () Bool)

(assert (=> d!43277 m!164707))

(assert (=> d!43277 m!162841))

(assert (=> d!43277 m!162671))

(assert (=> b!136762 d!43277))

(declare-fun d!43279 () Bool)

(assert (=> d!43279 (arrayContainsKey!0 (_keys!4640 newMap!16) lt!71509 #b00000000000000000000000000000000)))

(declare-fun lt!72006 () Unit!4286)

(assert (=> d!43279 (= lt!72006 (choose!13 (_keys!4640 newMap!16) lt!71509 #b00000000000000000000000000000000))))

(assert (=> d!43279 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!43279 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4640 newMap!16) lt!71509 #b00000000000000000000000000000000) lt!72006)))

(declare-fun bs!5772 () Bool)

(assert (= bs!5772 d!43279))

(assert (=> bs!5772 m!163211))

(declare-fun m!164709 () Bool)

(assert (=> bs!5772 m!164709))

(assert (=> b!137008 d!43279))

(declare-fun d!43281 () Bool)

(declare-fun res!65973 () Bool)

(declare-fun e!89670 () Bool)

(assert (=> d!43281 (=> res!65973 e!89670)))

(assert (=> d!43281 (= res!65973 (= (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) lt!71509))))

(assert (=> d!43281 (= (arrayContainsKey!0 (_keys!4640 newMap!16) lt!71509 #b00000000000000000000000000000000) e!89670)))

(declare-fun b!137808 () Bool)

(declare-fun e!89671 () Bool)

(assert (=> b!137808 (= e!89670 e!89671)))

(declare-fun res!65974 () Bool)

(assert (=> b!137808 (=> (not res!65974) (not e!89671))))

(assert (=> b!137808 (= res!65974 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(declare-fun b!137809 () Bool)

(assert (=> b!137809 (= e!89671 (arrayContainsKey!0 (_keys!4640 newMap!16) lt!71509 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!43281 (not res!65973)) b!137808))

(assert (= (and b!137808 res!65974) b!137809))

(assert (=> d!43281 m!162693))

(declare-fun m!164711 () Bool)

(assert (=> b!137809 m!164711))

(assert (=> b!137008 d!43281))

(declare-fun b!137810 () Bool)

(declare-fun c!25930 () Bool)

(declare-fun lt!72009 () (_ BitVec 64))

(assert (=> b!137810 (= c!25930 (= lt!72009 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!89673 () SeekEntryResult!279)

(declare-fun e!89672 () SeekEntryResult!279)

(assert (=> b!137810 (= e!89673 e!89672)))

(declare-fun b!137811 () Bool)

(declare-fun lt!72008 () SeekEntryResult!279)

(assert (=> b!137811 (= e!89673 (Found!279 (index!3279 lt!72008)))))

(declare-fun b!137812 () Bool)

(assert (=> b!137812 (= e!89672 (MissingZero!279 (index!3279 lt!72008)))))

(declare-fun d!43283 () Bool)

(declare-fun lt!72007 () SeekEntryResult!279)

(assert (=> d!43283 (and (or ((_ is Undefined!279) lt!72007) (not ((_ is Found!279) lt!72007)) (and (bvsge (index!3278 lt!72007) #b00000000000000000000000000000000) (bvslt (index!3278 lt!72007) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!72007) ((_ is Found!279) lt!72007) (not ((_ is MissingZero!279) lt!72007)) (and (bvsge (index!3277 lt!72007) #b00000000000000000000000000000000) (bvslt (index!3277 lt!72007) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!72007) ((_ is Found!279) lt!72007) ((_ is MissingZero!279) lt!72007) (not ((_ is MissingVacant!279) lt!72007)) (and (bvsge (index!3280 lt!72007) #b00000000000000000000000000000000) (bvslt (index!3280 lt!72007) (size!2531 (_keys!4640 newMap!16))))) (or ((_ is Undefined!279) lt!72007) (ite ((_ is Found!279) lt!72007) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!72007)) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!279) lt!72007) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3277 lt!72007)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!279) lt!72007) (= (select (arr!2260 (_keys!4640 newMap!16)) (index!3280 lt!72007)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!89674 () SeekEntryResult!279)

(assert (=> d!43283 (= lt!72007 e!89674)))

(declare-fun c!25929 () Bool)

(assert (=> d!43283 (= c!25929 (and ((_ is Intermediate!279) lt!72008) (undefined!1091 lt!72008)))))

(assert (=> d!43283 (= lt!72008 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (mask!7201 newMap!16)) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(assert (=> d!43283 (validMask!0 (mask!7201 newMap!16))))

(assert (=> d!43283 (= (seekEntryOrOpen!0 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (_keys!4640 newMap!16) (mask!7201 newMap!16)) lt!72007)))

(declare-fun b!137813 () Bool)

(assert (=> b!137813 (= e!89674 e!89673)))

(assert (=> b!137813 (= lt!72009 (select (arr!2260 (_keys!4640 newMap!16)) (index!3279 lt!72008)))))

(declare-fun c!25931 () Bool)

(assert (=> b!137813 (= c!25931 (= lt!72009 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!137814 () Bool)

(assert (=> b!137814 (= e!89672 (seekKeyOrZeroReturnVacant!0 (x!15806 lt!72008) (index!3279 lt!72008) (index!3279 lt!72008) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) (_keys!4640 newMap!16) (mask!7201 newMap!16)))))

(declare-fun b!137815 () Bool)

(assert (=> b!137815 (= e!89674 Undefined!279)))

(assert (= (and d!43283 c!25929) b!137815))

(assert (= (and d!43283 (not c!25929)) b!137813))

(assert (= (and b!137813 c!25931) b!137811))

(assert (= (and b!137813 (not c!25931)) b!137810))

(assert (= (and b!137810 c!25930) b!137812))

(assert (= (and b!137810 (not c!25930)) b!137814))

(declare-fun m!164713 () Bool)

(assert (=> d!43283 m!164713))

(assert (=> d!43283 m!162693))

(declare-fun m!164715 () Bool)

(assert (=> d!43283 m!164715))

(assert (=> d!43283 m!162693))

(assert (=> d!43283 m!164713))

(declare-fun m!164717 () Bool)

(assert (=> d!43283 m!164717))

(assert (=> d!43283 m!162671))

(declare-fun m!164719 () Bool)

(assert (=> d!43283 m!164719))

(declare-fun m!164721 () Bool)

(assert (=> d!43283 m!164721))

(declare-fun m!164723 () Bool)

(assert (=> b!137813 m!164723))

(assert (=> b!137814 m!162693))

(declare-fun m!164725 () Bool)

(assert (=> b!137814 m!164725))

(assert (=> b!137008 d!43283))

(declare-fun d!43285 () Bool)

(assert (=> d!43285 (= (inRange!0 (ite c!25620 (index!3277 lt!71219) (index!3280 lt!71219)) (mask!7201 newMap!16)) (and (bvsge (ite c!25620 (index!3277 lt!71219) (index!3280 lt!71219)) #b00000000000000000000000000000000) (bvslt (ite c!25620 (index!3277 lt!71219) (index!3280 lt!71219)) (bvadd (mask!7201 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!15022 d!43285))

(declare-fun d!43287 () Bool)

(declare-fun res!65976 () Bool)

(declare-fun e!89676 () Bool)

(assert (=> d!43287 (=> res!65976 e!89676)))

(assert (=> d!43287 (= res!65976 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2531 (_keys!4640 newMap!16))))))

(assert (=> d!43287 (= (arrayNoDuplicates!0 (_keys!4640 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!25678 (Cons!1715 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) Nil!1716) Nil!1716)) e!89676)))

(declare-fun b!137816 () Bool)

(declare-fun e!89678 () Bool)

(declare-fun e!89675 () Bool)

(assert (=> b!137816 (= e!89678 e!89675)))

(declare-fun c!25932 () Bool)

(assert (=> b!137816 (= c!25932 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!137817 () Bool)

(declare-fun e!89677 () Bool)

(assert (=> b!137817 (= e!89677 (contains!896 (ite c!25678 (Cons!1715 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) Nil!1716) Nil!1716) (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!137818 () Bool)

(declare-fun call!15173 () Bool)

(assert (=> b!137818 (= e!89675 call!15173)))

(declare-fun bm!15170 () Bool)

(assert (=> bm!15170 (= call!15173 (arrayNoDuplicates!0 (_keys!4640 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!25932 (Cons!1715 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!25678 (Cons!1715 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) Nil!1716) Nil!1716)) (ite c!25678 (Cons!1715 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000) Nil!1716) Nil!1716))))))

(declare-fun b!137819 () Bool)

(assert (=> b!137819 (= e!89676 e!89678)))

(declare-fun res!65975 () Bool)

(assert (=> b!137819 (=> (not res!65975) (not e!89678))))

(assert (=> b!137819 (= res!65975 (not e!89677))))

(declare-fun res!65977 () Bool)

(assert (=> b!137819 (=> (not res!65977) (not e!89677))))

(assert (=> b!137819 (= res!65977 (validKeyInArray!0 (select (arr!2260 (_keys!4640 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!137820 () Bool)

(assert (=> b!137820 (= e!89675 call!15173)))

(assert (= (and d!43287 (not res!65976)) b!137819))

(assert (= (and b!137819 res!65977) b!137817))

(assert (= (and b!137819 res!65975) b!137816))

(assert (= (and b!137816 c!25932) b!137820))

(assert (= (and b!137816 (not c!25932)) b!137818))

(assert (= (or b!137820 b!137818) bm!15170))

(assert (=> b!137816 m!163709))

(assert (=> b!137816 m!163709))

(assert (=> b!137816 m!163711))

(assert (=> b!137817 m!163709))

(assert (=> b!137817 m!163709))

(declare-fun m!164727 () Bool)

(assert (=> b!137817 m!164727))

(assert (=> bm!15170 m!163709))

(declare-fun m!164729 () Bool)

(assert (=> bm!15170 m!164729))

(assert (=> b!137819 m!163709))

(assert (=> b!137819 m!163709))

(assert (=> b!137819 m!163711))

(assert (=> bm!15046 d!43287))

(declare-fun d!43289 () Bool)

(declare-fun e!89679 () Bool)

(assert (=> d!43289 e!89679))

(declare-fun res!65978 () Bool)

(assert (=> d!43289 (=> res!65978 e!89679)))

(declare-fun lt!72010 () Bool)

(assert (=> d!43289 (= res!65978 (not lt!72010))))

(declare-fun lt!72012 () Bool)

(assert (=> d!43289 (= lt!72010 lt!72012)))

(declare-fun lt!72013 () Unit!4286)

(declare-fun e!89680 () Unit!4286)

(assert (=> d!43289 (= lt!72013 e!89680)))

(declare-fun c!25933 () Bool)

(assert (=> d!43289 (= c!25933 lt!72012)))

(assert (=> d!43289 (= lt!72012 (containsKey!175 (toList!855 lt!71235) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!43289 (= (contains!892 lt!71235 #b0000000000000000000000000000000000000000000000000000000000000000) lt!72010)))

(declare-fun b!137821 () Bool)

(declare-fun lt!72011 () Unit!4286)

(assert (=> b!137821 (= e!89680 lt!72011)))

(assert (=> b!137821 (= lt!72011 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 lt!71235) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!137821 (isDefined!125 (getValueByKey!171 (toList!855 lt!71235) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!137822 () Bool)

(declare-fun Unit!4346 () Unit!4286)

(assert (=> b!137822 (= e!89680 Unit!4346)))

(declare-fun b!137823 () Bool)

(assert (=> b!137823 (= e!89679 (isDefined!125 (getValueByKey!171 (toList!855 lt!71235) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43289 c!25933) b!137821))

(assert (= (and d!43289 (not c!25933)) b!137822))

(assert (= (and d!43289 (not res!65978)) b!137823))

(declare-fun m!164731 () Bool)

(assert (=> d!43289 m!164731))

(declare-fun m!164733 () Bool)

(assert (=> b!137821 m!164733))

(assert (=> b!137821 m!164131))

(assert (=> b!137821 m!164131))

(declare-fun m!164735 () Bool)

(assert (=> b!137821 m!164735))

(assert (=> b!137823 m!164131))

(assert (=> b!137823 m!164131))

(assert (=> b!137823 m!164735))

(assert (=> bm!15024 d!43289))

(declare-fun d!43291 () Bool)

(assert (=> d!43291 (isDefined!125 (getValueByKey!171 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun lt!72014 () Unit!4286)

(assert (=> d!43291 (= lt!72014 (choose!842 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(declare-fun e!89681 () Bool)

(assert (=> d!43291 e!89681))

(declare-fun res!65979 () Bool)

(assert (=> d!43291 (=> (not res!65979) (not e!89681))))

(assert (=> d!43291 (= res!65979 (isStrictlySorted!318 (toList!855 call!14979)))))

(assert (=> d!43291 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)) lt!72014)))

(declare-fun b!137824 () Bool)

(assert (=> b!137824 (= e!89681 (containsKey!175 (toList!855 call!14979) (select (arr!2260 (_keys!4640 (v!3215 (underlying!457 thiss!992)))) from!355)))))

(assert (= (and d!43291 res!65979) b!137824))

(assert (=> d!43291 m!162421))

(assert (=> d!43291 m!162815))

(assert (=> d!43291 m!162815))

(assert (=> d!43291 m!162817))

(assert (=> d!43291 m!162421))

(declare-fun m!164737 () Bool)

(assert (=> d!43291 m!164737))

(declare-fun m!164739 () Bool)

(assert (=> d!43291 m!164739))

(assert (=> b!137824 m!162421))

(assert (=> b!137824 m!162811))

(assert (=> b!136737 d!43291))

(assert (=> b!136737 d!43011))

(assert (=> b!136737 d!43013))

(declare-fun d!43293 () Bool)

(assert (=> d!43293 (contains!892 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))) lt!71241)))

(declare-fun lt!72015 () Unit!4286)

(assert (=> d!43293 (= lt!72015 (choose!844 lt!71229 lt!71227 (zeroValue!2741 newMap!16) lt!71241))))

(assert (=> d!43293 (contains!892 lt!71229 lt!71241)))

(assert (=> d!43293 (= (addStillContains!93 lt!71229 lt!71227 (zeroValue!2741 newMap!16) lt!71241) lt!72015)))

(declare-fun bs!5773 () Bool)

(assert (= bs!5773 d!43293))

(assert (=> bs!5773 m!162729))

(assert (=> bs!5773 m!162729))

(assert (=> bs!5773 m!162733))

(declare-fun m!164741 () Bool)

(assert (=> bs!5773 m!164741))

(declare-fun m!164743 () Bool)

(assert (=> bs!5773 m!164743))

(assert (=> b!136710 d!43293))

(declare-fun d!43295 () Bool)

(assert (=> d!43295 (= (apply!117 (+!164 lt!71231 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))) lt!71237) (apply!117 lt!71231 lt!71237))))

(declare-fun lt!72016 () Unit!4286)

(assert (=> d!43295 (= lt!72016 (choose!845 lt!71231 lt!71224 (minValue!2741 newMap!16) lt!71237))))

(declare-fun e!89682 () Bool)

(assert (=> d!43295 e!89682))

(declare-fun res!65980 () Bool)

(assert (=> d!43295 (=> (not res!65980) (not e!89682))))

(assert (=> d!43295 (= res!65980 (contains!892 lt!71231 lt!71237))))

(assert (=> d!43295 (= (addApplyDifferent!93 lt!71231 lt!71224 (minValue!2741 newMap!16) lt!71237) lt!72016)))

(declare-fun b!137825 () Bool)

(assert (=> b!137825 (= e!89682 (not (= lt!71237 lt!71224)))))

(assert (= (and d!43295 res!65980) b!137825))

(declare-fun m!164745 () Bool)

(assert (=> d!43295 m!164745))

(assert (=> d!43295 m!162739))

(assert (=> d!43295 m!162715))

(assert (=> d!43295 m!162717))

(assert (=> d!43295 m!162715))

(declare-fun m!164747 () Bool)

(assert (=> d!43295 m!164747))

(assert (=> b!136710 d!43295))

(declare-fun d!43297 () Bool)

(assert (=> d!43297 (= (apply!117 (+!164 lt!71230 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))) lt!71223) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71230 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))) lt!71223)))))

(declare-fun bs!5774 () Bool)

(assert (= bs!5774 d!43297))

(declare-fun m!164749 () Bool)

(assert (=> bs!5774 m!164749))

(assert (=> bs!5774 m!164749))

(declare-fun m!164751 () Bool)

(assert (=> bs!5774 m!164751))

(assert (=> b!136710 d!43297))

(declare-fun d!43299 () Bool)

(assert (=> d!43299 (= (apply!117 (+!164 lt!71239 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))) lt!71226) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71239 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))) lt!71226)))))

(declare-fun bs!5775 () Bool)

(assert (= bs!5775 d!43299))

(declare-fun m!164753 () Bool)

(assert (=> bs!5775 m!164753))

(assert (=> bs!5775 m!164753))

(declare-fun m!164755 () Bool)

(assert (=> bs!5775 m!164755))

(assert (=> b!136710 d!43299))

(declare-fun d!43301 () Bool)

(declare-fun e!89683 () Bool)

(assert (=> d!43301 e!89683))

(declare-fun res!65981 () Bool)

(assert (=> d!43301 (=> (not res!65981) (not e!89683))))

(declare-fun lt!72018 () ListLongMap!1679)

(assert (=> d!43301 (= res!65981 (contains!892 lt!72018 (_1!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))))))

(declare-fun lt!72019 () List!1716)

(assert (=> d!43301 (= lt!72018 (ListLongMap!1680 lt!72019))))

(declare-fun lt!72020 () Unit!4286)

(declare-fun lt!72017 () Unit!4286)

(assert (=> d!43301 (= lt!72020 lt!72017)))

(assert (=> d!43301 (= (getValueByKey!171 lt!72019 (_1!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))))))

(assert (=> d!43301 (= lt!72017 (lemmaContainsTupThenGetReturnValue!89 lt!72019 (_1!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))))))

(assert (=> d!43301 (= lt!72019 (insertStrictlySorted!92 (toList!855 lt!71231) (_1!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))))))

(assert (=> d!43301 (= (+!164 lt!71231 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))) lt!72018)))

(declare-fun b!137826 () Bool)

(declare-fun res!65982 () Bool)

(assert (=> b!137826 (=> (not res!65982) (not e!89683))))

(assert (=> b!137826 (= res!65982 (= (getValueByKey!171 (toList!855 lt!72018) (_1!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))))))))

(declare-fun b!137827 () Bool)

(assert (=> b!137827 (= e!89683 (contains!895 (toList!855 lt!72018) (tuple2!2599 lt!71224 (minValue!2741 newMap!16))))))

(assert (= (and d!43301 res!65981) b!137826))

(assert (= (and b!137826 res!65982) b!137827))

(declare-fun m!164757 () Bool)

(assert (=> d!43301 m!164757))

(declare-fun m!164759 () Bool)

(assert (=> d!43301 m!164759))

(declare-fun m!164761 () Bool)

(assert (=> d!43301 m!164761))

(declare-fun m!164763 () Bool)

(assert (=> d!43301 m!164763))

(declare-fun m!164765 () Bool)

(assert (=> b!137826 m!164765))

(declare-fun m!164767 () Bool)

(assert (=> b!137827 m!164767))

(assert (=> b!136710 d!43301))

(declare-fun d!43303 () Bool)

(declare-fun e!89684 () Bool)

(assert (=> d!43303 e!89684))

(declare-fun res!65983 () Bool)

(assert (=> d!43303 (=> (not res!65983) (not e!89684))))

(declare-fun lt!72022 () ListLongMap!1679)

(assert (=> d!43303 (= res!65983 (contains!892 lt!72022 (_1!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))))))

(declare-fun lt!72023 () List!1716)

(assert (=> d!43303 (= lt!72022 (ListLongMap!1680 lt!72023))))

(declare-fun lt!72024 () Unit!4286)

(declare-fun lt!72021 () Unit!4286)

(assert (=> d!43303 (= lt!72024 lt!72021)))

(assert (=> d!43303 (= (getValueByKey!171 lt!72023 (_1!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43303 (= lt!72021 (lemmaContainsTupThenGetReturnValue!89 lt!72023 (_1!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43303 (= lt!72023 (insertStrictlySorted!92 (toList!855 lt!71239) (_1!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43303 (= (+!164 lt!71239 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))) lt!72022)))

(declare-fun b!137828 () Bool)

(declare-fun res!65984 () Bool)

(assert (=> b!137828 (=> (not res!65984) (not e!89684))))

(assert (=> b!137828 (= res!65984 (= (getValueByKey!171 (toList!855 lt!72022) (_1!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))))))))

(declare-fun b!137829 () Bool)

(assert (=> b!137829 (= e!89684 (contains!895 (toList!855 lt!72022) (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))))))

(assert (= (and d!43303 res!65983) b!137828))

(assert (= (and b!137828 res!65984) b!137829))

(declare-fun m!164769 () Bool)

(assert (=> d!43303 m!164769))

(declare-fun m!164771 () Bool)

(assert (=> d!43303 m!164771))

(declare-fun m!164773 () Bool)

(assert (=> d!43303 m!164773))

(declare-fun m!164775 () Bool)

(assert (=> d!43303 m!164775))

(declare-fun m!164777 () Bool)

(assert (=> b!137828 m!164777))

(declare-fun m!164779 () Bool)

(assert (=> b!137829 m!164779))

(assert (=> b!136710 d!43303))

(declare-fun d!43305 () Bool)

(assert (=> d!43305 (= (apply!117 (+!164 lt!71231 (tuple2!2599 lt!71224 (minValue!2741 newMap!16))) lt!71237) (get!1493 (getValueByKey!171 (toList!855 (+!164 lt!71231 (tuple2!2599 lt!71224 (minValue!2741 newMap!16)))) lt!71237)))))

(declare-fun bs!5776 () Bool)

(assert (= bs!5776 d!43305))

(declare-fun m!164781 () Bool)

(assert (=> bs!5776 m!164781))

(assert (=> bs!5776 m!164781))

(declare-fun m!164783 () Bool)

(assert (=> bs!5776 m!164783))

(assert (=> b!136710 d!43305))

(assert (=> b!136710 d!42911))

(declare-fun d!43307 () Bool)

(assert (=> d!43307 (= (apply!117 lt!71230 lt!71223) (get!1493 (getValueByKey!171 (toList!855 lt!71230) lt!71223)))))

(declare-fun bs!5777 () Bool)

(assert (= bs!5777 d!43307))

(declare-fun m!164785 () Bool)

(assert (=> bs!5777 m!164785))

(assert (=> bs!5777 m!164785))

(declare-fun m!164787 () Bool)

(assert (=> bs!5777 m!164787))

(assert (=> b!136710 d!43307))

(declare-fun d!43309 () Bool)

(assert (=> d!43309 (= (apply!117 lt!71231 lt!71237) (get!1493 (getValueByKey!171 (toList!855 lt!71231) lt!71237)))))

(declare-fun bs!5778 () Bool)

(assert (= bs!5778 d!43309))

(declare-fun m!164789 () Bool)

(assert (=> bs!5778 m!164789))

(assert (=> bs!5778 m!164789))

(declare-fun m!164791 () Bool)

(assert (=> bs!5778 m!164791))

(assert (=> b!136710 d!43309))

(declare-fun d!43311 () Bool)

(assert (=> d!43311 (= (apply!117 lt!71239 lt!71226) (get!1493 (getValueByKey!171 (toList!855 lt!71239) lt!71226)))))

(declare-fun bs!5779 () Bool)

(assert (= bs!5779 d!43311))

(declare-fun m!164793 () Bool)

(assert (=> bs!5779 m!164793))

(assert (=> bs!5779 m!164793))

(declare-fun m!164795 () Bool)

(assert (=> bs!5779 m!164795))

(assert (=> b!136710 d!43311))

(declare-fun d!43313 () Bool)

(declare-fun e!89685 () Bool)

(assert (=> d!43313 e!89685))

(declare-fun res!65985 () Bool)

(assert (=> d!43313 (=> (not res!65985) (not e!89685))))

(declare-fun lt!72026 () ListLongMap!1679)

(assert (=> d!43313 (= res!65985 (contains!892 lt!72026 (_1!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))))))

(declare-fun lt!72027 () List!1716)

(assert (=> d!43313 (= lt!72026 (ListLongMap!1680 lt!72027))))

(declare-fun lt!72028 () Unit!4286)

(declare-fun lt!72025 () Unit!4286)

(assert (=> d!43313 (= lt!72028 lt!72025)))

(assert (=> d!43313 (= (getValueByKey!171 lt!72027 (_1!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43313 (= lt!72025 (lemmaContainsTupThenGetReturnValue!89 lt!72027 (_1!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43313 (= lt!72027 (insertStrictlySorted!92 (toList!855 lt!71229) (_1!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))))))

(assert (=> d!43313 (= (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))) lt!72026)))

(declare-fun b!137830 () Bool)

(declare-fun res!65986 () Bool)

(assert (=> b!137830 (=> (not res!65986) (not e!89685))))

(assert (=> b!137830 (= res!65986 (= (getValueByKey!171 (toList!855 lt!72026) (_1!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))))))))

(declare-fun b!137831 () Bool)

(assert (=> b!137831 (= e!89685 (contains!895 (toList!855 lt!72026) (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))))))

(assert (= (and d!43313 res!65985) b!137830))

(assert (= (and b!137830 res!65986) b!137831))

(declare-fun m!164797 () Bool)

(assert (=> d!43313 m!164797))

(declare-fun m!164799 () Bool)

(assert (=> d!43313 m!164799))

(declare-fun m!164801 () Bool)

(assert (=> d!43313 m!164801))

(declare-fun m!164803 () Bool)

(assert (=> d!43313 m!164803))

(declare-fun m!164805 () Bool)

(assert (=> b!137830 m!164805))

(declare-fun m!164807 () Bool)

(assert (=> b!137831 m!164807))

(assert (=> b!136710 d!43313))

(declare-fun d!43315 () Bool)

(assert (=> d!43315 (= (apply!117 (+!164 lt!71239 (tuple2!2599 lt!71232 (zeroValue!2741 newMap!16))) lt!71226) (apply!117 lt!71239 lt!71226))))

(declare-fun lt!72029 () Unit!4286)

(assert (=> d!43315 (= lt!72029 (choose!845 lt!71239 lt!71232 (zeroValue!2741 newMap!16) lt!71226))))

(declare-fun e!89686 () Bool)

(assert (=> d!43315 e!89686))

(declare-fun res!65987 () Bool)

(assert (=> d!43315 (=> (not res!65987) (not e!89686))))

(assert (=> d!43315 (= res!65987 (contains!892 lt!71239 lt!71226))))

(assert (=> d!43315 (= (addApplyDifferent!93 lt!71239 lt!71232 (zeroValue!2741 newMap!16) lt!71226) lt!72029)))

(declare-fun b!137832 () Bool)

(assert (=> b!137832 (= e!89686 (not (= lt!71226 lt!71232)))))

(assert (= (and d!43315 res!65987) b!137832))

(declare-fun m!164809 () Bool)

(assert (=> d!43315 m!164809))

(assert (=> d!43315 m!162723))

(assert (=> d!43315 m!162725))

(assert (=> d!43315 m!162735))

(assert (=> d!43315 m!162725))

(declare-fun m!164811 () Bool)

(assert (=> d!43315 m!164811))

(assert (=> b!136710 d!43315))

(declare-fun d!43317 () Bool)

(assert (=> d!43317 (= (apply!117 (+!164 lt!71230 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))) lt!71223) (apply!117 lt!71230 lt!71223))))

(declare-fun lt!72030 () Unit!4286)

(assert (=> d!43317 (= lt!72030 (choose!845 lt!71230 lt!71240 (minValue!2741 newMap!16) lt!71223))))

(declare-fun e!89687 () Bool)

(assert (=> d!43317 e!89687))

(declare-fun res!65988 () Bool)

(assert (=> d!43317 (=> (not res!65988) (not e!89687))))

(assert (=> d!43317 (= res!65988 (contains!892 lt!71230 lt!71223))))

(assert (=> d!43317 (= (addApplyDifferent!93 lt!71230 lt!71240 (minValue!2741 newMap!16) lt!71223) lt!72030)))

(declare-fun b!137833 () Bool)

(assert (=> b!137833 (= e!89687 (not (= lt!71223 lt!71240)))))

(assert (= (and d!43317 res!65988) b!137833))

(declare-fun m!164813 () Bool)

(assert (=> d!43317 m!164813))

(assert (=> d!43317 m!162721))

(assert (=> d!43317 m!162719))

(assert (=> d!43317 m!162741))

(assert (=> d!43317 m!162719))

(declare-fun m!164815 () Bool)

(assert (=> d!43317 m!164815))

(assert (=> b!136710 d!43317))

(declare-fun d!43319 () Bool)

(declare-fun e!89688 () Bool)

(assert (=> d!43319 e!89688))

(declare-fun res!65989 () Bool)

(assert (=> d!43319 (=> (not res!65989) (not e!89688))))

(declare-fun lt!72032 () ListLongMap!1679)

(assert (=> d!43319 (= res!65989 (contains!892 lt!72032 (_1!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))))))

(declare-fun lt!72033 () List!1716)

(assert (=> d!43319 (= lt!72032 (ListLongMap!1680 lt!72033))))

(declare-fun lt!72034 () Unit!4286)

(declare-fun lt!72031 () Unit!4286)

(assert (=> d!43319 (= lt!72034 lt!72031)))

(assert (=> d!43319 (= (getValueByKey!171 lt!72033 (_1!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))))))

(assert (=> d!43319 (= lt!72031 (lemmaContainsTupThenGetReturnValue!89 lt!72033 (_1!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))))))

(assert (=> d!43319 (= lt!72033 (insertStrictlySorted!92 (toList!855 lt!71230) (_1!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))) (_2!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))))))

(assert (=> d!43319 (= (+!164 lt!71230 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))) lt!72032)))

(declare-fun b!137834 () Bool)

(declare-fun res!65990 () Bool)

(assert (=> b!137834 (=> (not res!65990) (not e!89688))))

(assert (=> b!137834 (= res!65990 (= (getValueByKey!171 (toList!855 lt!72032) (_1!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16)))) (Some!176 (_2!1310 (tuple2!2599 lt!71240 (minValue!2741 newMap!16))))))))

(declare-fun b!137835 () Bool)

(assert (=> b!137835 (= e!89688 (contains!895 (toList!855 lt!72032) (tuple2!2599 lt!71240 (minValue!2741 newMap!16))))))

(assert (= (and d!43319 res!65989) b!137834))

(assert (= (and b!137834 res!65990) b!137835))

(declare-fun m!164817 () Bool)

(assert (=> d!43319 m!164817))

(declare-fun m!164819 () Bool)

(assert (=> d!43319 m!164819))

(declare-fun m!164821 () Bool)

(assert (=> d!43319 m!164821))

(declare-fun m!164823 () Bool)

(assert (=> d!43319 m!164823))

(declare-fun m!164825 () Bool)

(assert (=> b!137834 m!164825))

(declare-fun m!164827 () Bool)

(assert (=> b!137835 m!164827))

(assert (=> b!136710 d!43319))

(declare-fun d!43321 () Bool)

(declare-fun e!89689 () Bool)

(assert (=> d!43321 e!89689))

(declare-fun res!65991 () Bool)

(assert (=> d!43321 (=> res!65991 e!89689)))

(declare-fun lt!72035 () Bool)

(assert (=> d!43321 (= res!65991 (not lt!72035))))

(declare-fun lt!72037 () Bool)

(assert (=> d!43321 (= lt!72035 lt!72037)))

(declare-fun lt!72038 () Unit!4286)

(declare-fun e!89690 () Unit!4286)

(assert (=> d!43321 (= lt!72038 e!89690)))

(declare-fun c!25934 () Bool)

(assert (=> d!43321 (= c!25934 lt!72037)))

(assert (=> d!43321 (= lt!72037 (containsKey!175 (toList!855 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))) lt!71241))))

(assert (=> d!43321 (= (contains!892 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16))) lt!71241) lt!72035)))

(declare-fun b!137836 () Bool)

(declare-fun lt!72036 () Unit!4286)

(assert (=> b!137836 (= e!89690 lt!72036)))

(assert (=> b!137836 (= lt!72036 (lemmaContainsKeyImpliesGetValueByKeyDefined!124 (toList!855 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))) lt!71241))))

(assert (=> b!137836 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))) lt!71241))))

(declare-fun b!137837 () Bool)

(declare-fun Unit!4347 () Unit!4286)

(assert (=> b!137837 (= e!89690 Unit!4347)))

(declare-fun b!137838 () Bool)

(assert (=> b!137838 (= e!89689 (isDefined!125 (getValueByKey!171 (toList!855 (+!164 lt!71229 (tuple2!2599 lt!71227 (zeroValue!2741 newMap!16)))) lt!71241)))))

(assert (= (and d!43321 c!25934) b!137836))

(assert (= (and d!43321 (not c!25934)) b!137837))

(assert (= (and d!43321 (not res!65991)) b!137838))

(declare-fun m!164829 () Bool)

(assert (=> d!43321 m!164829))

(declare-fun m!164831 () Bool)

(assert (=> b!137836 m!164831))

(declare-fun m!164833 () Bool)

(assert (=> b!137836 m!164833))

(assert (=> b!137836 m!164833))

(declare-fun m!164835 () Bool)

(assert (=> b!137836 m!164835))

(assert (=> b!137838 m!164833))

(assert (=> b!137838 m!164833))

(assert (=> b!137838 m!164835))

(assert (=> b!136710 d!43321))

(declare-fun b!137841 () Bool)

(declare-fun e!89692 () Option!177)

(assert (=> b!137841 (= e!89692 (getValueByKey!171 (t!6195 (toList!855 lt!71281)) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))

(declare-fun b!137842 () Bool)

(assert (=> b!137842 (= e!89692 None!175)))

(declare-fun b!137840 () Bool)

(declare-fun e!89691 () Option!177)

(assert (=> b!137840 (= e!89691 e!89692)))

(declare-fun c!25936 () Bool)

(assert (=> b!137840 (= c!25936 (and ((_ is Cons!1712) (toList!855 lt!71281)) (not (= (_1!1310 (h!2318 (toList!855 lt!71281))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))))))))

(declare-fun d!43323 () Bool)

(declare-fun c!25935 () Bool)

(assert (=> d!43323 (= c!25935 (and ((_ is Cons!1712) (toList!855 lt!71281)) (= (_1!1310 (h!2318 (toList!855 lt!71281))) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992)))))))))))

(assert (=> d!43323 (= (getValueByKey!171 (toList!855 lt!71281) (_1!1310 (ite (or c!25615 c!25610) (tuple2!2599 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2741 (v!3215 (underlying!457 thiss!992)))) (tuple2!2599 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2741 (v!3215 (underlying!457 thiss!992))))))) e!89691)))

(declare-fun b!137839 () Bool)

(assert (=> b!137839 (= e!89691 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71281)))))))

(assert (= (and d!43323 c!25935) b!137839))

(assert (= (and d!43323 (not c!25935)) b!137840))

(assert (= (and b!137840 c!25936) b!137841))

(assert (= (and b!137840 (not c!25936)) b!137842))

(declare-fun m!164837 () Bool)

(assert (=> b!137841 m!164837))

(assert (=> b!136744 d!43323))

(declare-fun d!43325 () Bool)

(assert (=> d!43325 (= (apply!117 lt!71492 (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000)) (get!1493 (getValueByKey!171 (toList!855 lt!71492) (select (arr!2260 (_keys!4640 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!5780 () Bool)

(assert (= bs!5780 d!43325))

(assert (=> bs!5780 m!162693))

(assert (=> bs!5780 m!163717))

(assert (=> bs!5780 m!163717))

(declare-fun m!164839 () Bool)

(assert (=> bs!5780 m!164839))

(assert (=> b!136966 d!43325))

(declare-fun c!25937 () Bool)

(declare-fun d!43327 () Bool)

(assert (=> d!43327 (= c!25937 ((_ is ValueCellFull!1100) (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000)))))

(declare-fun e!89693 () V!3497)

(assert (=> d!43327 (= (get!1488 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!89693)))

(declare-fun b!137843 () Bool)

(assert (=> b!137843 (= e!89693 (get!1491 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!137844 () Bool)

(assert (=> b!137844 (= e!89693 (get!1492 (select (arr!2261 (ite (or c!25588 c!25585) (_values!2871 newMap!16) lt!71128)) #b00000000000000000000000000000000) (dynLambda!421 (defaultEntry!2888 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!43327 c!25937) b!137843))

(assert (= (and d!43327 (not c!25937)) b!137844))

(assert (=> b!137843 m!163137))

(assert (=> b!137843 m!162699))

(declare-fun m!164841 () Bool)

(assert (=> b!137843 m!164841))

(assert (=> b!137844 m!163137))

(assert (=> b!137844 m!162699))

(declare-fun m!164843 () Bool)

(assert (=> b!137844 m!164843))

(assert (=> b!136966 d!43327))

(declare-fun d!43329 () Bool)

(assert (=> d!43329 (contains!892 (getCurrentListMap!521 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2888 newMap!16)) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))

(assert (=> d!43329 true))

(declare-fun _$16!155 () Unit!4286)

(assert (=> d!43329 (= (choose!840 (_keys!4640 newMap!16) lt!71128 (mask!7201 newMap!16) (extraKeys!2649 newMap!16) (zeroValue!2741 newMap!16) (minValue!2741 newMap!16) (index!3278 lt!71133) (defaultEntry!2888 newMap!16)) _$16!155)))

(declare-fun bs!5781 () Bool)

(assert (= bs!5781 d!43329))

(assert (=> bs!5781 m!162855))

(assert (=> bs!5781 m!162573))

(assert (=> bs!5781 m!162855))

(assert (=> bs!5781 m!162573))

(assert (=> bs!5781 m!162857))

(assert (=> d!42739 d!43329))

(assert (=> d!42739 d!42871))

(declare-fun d!43331 () Bool)

(assert (=> d!43331 (= (get!1492 (select (arr!2261 (_values!2871 (v!3215 (underlying!457 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!421 (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!136892 d!43331))

(declare-fun d!43333 () Bool)

(assert (=> d!43333 (= (get!1493 (getValueByKey!171 (toList!855 lt!71200) lt!71206)) (v!3221 (getValueByKey!171 (toList!855 lt!71200) lt!71206)))))

(assert (=> d!42761 d!43333))

(declare-fun b!137847 () Bool)

(declare-fun e!89695 () Option!177)

(assert (=> b!137847 (= e!89695 (getValueByKey!171 (t!6195 (toList!855 lt!71200)) lt!71206))))

(declare-fun b!137848 () Bool)

(assert (=> b!137848 (= e!89695 None!175)))

(declare-fun b!137846 () Bool)

(declare-fun e!89694 () Option!177)

(assert (=> b!137846 (= e!89694 e!89695)))

(declare-fun c!25939 () Bool)

(assert (=> b!137846 (= c!25939 (and ((_ is Cons!1712) (toList!855 lt!71200)) (not (= (_1!1310 (h!2318 (toList!855 lt!71200))) lt!71206))))))

(declare-fun d!43335 () Bool)

(declare-fun c!25938 () Bool)

(assert (=> d!43335 (= c!25938 (and ((_ is Cons!1712) (toList!855 lt!71200)) (= (_1!1310 (h!2318 (toList!855 lt!71200))) lt!71206)))))

(assert (=> d!43335 (= (getValueByKey!171 (toList!855 lt!71200) lt!71206) e!89694)))

(declare-fun b!137845 () Bool)

(assert (=> b!137845 (= e!89694 (Some!176 (_2!1310 (h!2318 (toList!855 lt!71200)))))))

(assert (= (and d!43335 c!25938) b!137845))

(assert (= (and d!43335 (not c!25938)) b!137846))

(assert (= (and b!137846 c!25939) b!137847))

(assert (= (and b!137846 (not c!25939)) b!137848))

(declare-fun m!164845 () Bool)

(assert (=> b!137847 m!164845))

(assert (=> d!42761 d!43335))

(declare-fun d!43337 () Bool)

(declare-fun res!65992 () Bool)

(declare-fun e!89696 () Bool)

(assert (=> d!43337 (=> res!65992 e!89696)))

(assert (=> d!43337 (= res!65992 (and ((_ is Cons!1712) (toList!855 call!14999)) (= (_1!1310 (h!2318 (toList!855 call!14999))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))))

(assert (=> d!43337 (= (containsKey!175 (toList!855 call!14999) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))) e!89696)))

(declare-fun b!137849 () Bool)

(declare-fun e!89697 () Bool)

(assert (=> b!137849 (= e!89696 e!89697)))

(declare-fun res!65993 () Bool)

(assert (=> b!137849 (=> (not res!65993) (not e!89697))))

(assert (=> b!137849 (= res!65993 (and (or (not ((_ is Cons!1712) (toList!855 call!14999))) (bvsle (_1!1310 (h!2318 (toList!855 call!14999))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))) ((_ is Cons!1712) (toList!855 call!14999)) (bvslt (_1!1310 (h!2318 (toList!855 call!14999))) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133)))))))

(declare-fun b!137850 () Bool)

(assert (=> b!137850 (= e!89697 (containsKey!175 (t!6195 (toList!855 call!14999)) (select (arr!2260 (_keys!4640 newMap!16)) (index!3278 lt!71133))))))

(assert (= (and d!43337 (not res!65992)) b!137849))

(assert (= (and b!137849 res!65993) b!137850))

(assert (=> b!137850 m!162573))

(declare-fun m!164847 () Bool)

(assert (=> b!137850 m!164847))

(assert (=> d!42737 d!43337))

(declare-fun d!43339 () Bool)

(declare-fun lt!72039 () Bool)

(assert (=> d!43339 (= lt!72039 (select (content!134 (toList!855 lt!71357)) (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun e!89698 () Bool)

(assert (=> d!43339 (= lt!72039 e!89698)))

(declare-fun res!65994 () Bool)

(assert (=> d!43339 (=> (not res!65994) (not e!89698))))

(assert (=> d!43339 (= res!65994 ((_ is Cons!1712) (toList!855 lt!71357)))))

(assert (=> d!43339 (= (contains!895 (toList!855 lt!71357) (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))) lt!72039)))

(declare-fun b!137851 () Bool)

(declare-fun e!89699 () Bool)

(assert (=> b!137851 (= e!89698 e!89699)))

(declare-fun res!65995 () Bool)

(assert (=> b!137851 (=> res!65995 e!89699)))

(assert (=> b!137851 (= res!65995 (= (h!2318 (toList!855 lt!71357)) (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(declare-fun b!137852 () Bool)

(assert (=> b!137852 (= e!89699 (contains!895 (t!6195 (toList!855 lt!71357)) (tuple2!2599 lt!71196 (zeroValue!2741 (v!3215 (underlying!457 thiss!992))))))))

(assert (= (and d!43339 res!65994) b!137851))

(assert (= (and b!137851 (not res!65995)) b!137852))

(declare-fun m!164849 () Bool)

(assert (=> d!43339 m!164849))

(declare-fun m!164851 () Bool)

(assert (=> d!43339 m!164851))

(declare-fun m!164853 () Bool)

(assert (=> b!137852 m!164853))

(assert (=> b!136847 d!43339))

(declare-fun b!137854 () Bool)

(declare-fun e!89700 () Bool)

(assert (=> b!137854 (= e!89700 tp_is_empty!2887)))

(declare-fun mapNonEmpty!4703 () Bool)

(declare-fun mapRes!4703 () Bool)

(declare-fun tp!11309 () Bool)

(declare-fun e!89701 () Bool)

(assert (=> mapNonEmpty!4703 (= mapRes!4703 (and tp!11309 e!89701))))

(declare-fun mapKey!4703 () (_ BitVec 32))

(declare-fun mapValue!4703 () ValueCell!1100)

(declare-fun mapRest!4703 () (Array (_ BitVec 32) ValueCell!1100))

(assert (=> mapNonEmpty!4703 (= mapRest!4701 (store mapRest!4703 mapKey!4703 mapValue!4703))))

(declare-fun mapIsEmpty!4703 () Bool)

(assert (=> mapIsEmpty!4703 mapRes!4703))

(declare-fun b!137853 () Bool)

(assert (=> b!137853 (= e!89701 tp_is_empty!2887)))

(declare-fun condMapEmpty!4703 () Bool)

(declare-fun mapDefault!4703 () ValueCell!1100)

(assert (=> mapNonEmpty!4701 (= condMapEmpty!4703 (= mapRest!4701 ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4703)))))

(assert (=> mapNonEmpty!4701 (= tp!11307 (and e!89700 mapRes!4703))))

(assert (= (and mapNonEmpty!4701 condMapEmpty!4703) mapIsEmpty!4703))

(assert (= (and mapNonEmpty!4701 (not condMapEmpty!4703)) mapNonEmpty!4703))

(assert (= (and mapNonEmpty!4703 ((_ is ValueCellFull!1100) mapValue!4703)) b!137853))

(assert (= (and mapNonEmpty!4701 ((_ is ValueCellFull!1100) mapDefault!4703)) b!137854))

(declare-fun m!164855 () Bool)

(assert (=> mapNonEmpty!4703 m!164855))

(declare-fun b!137856 () Bool)

(declare-fun e!89702 () Bool)

(assert (=> b!137856 (= e!89702 tp_is_empty!2887)))

(declare-fun mapNonEmpty!4704 () Bool)

(declare-fun mapRes!4704 () Bool)

(declare-fun tp!11310 () Bool)

(declare-fun e!89703 () Bool)

(assert (=> mapNonEmpty!4704 (= mapRes!4704 (and tp!11310 e!89703))))

(declare-fun mapValue!4704 () ValueCell!1100)

(declare-fun mapRest!4704 () (Array (_ BitVec 32) ValueCell!1100))

(declare-fun mapKey!4704 () (_ BitVec 32))

(assert (=> mapNonEmpty!4704 (= mapRest!4702 (store mapRest!4704 mapKey!4704 mapValue!4704))))

(declare-fun mapIsEmpty!4704 () Bool)

(assert (=> mapIsEmpty!4704 mapRes!4704))

(declare-fun b!137855 () Bool)

(assert (=> b!137855 (= e!89703 tp_is_empty!2887)))

(declare-fun condMapEmpty!4704 () Bool)

(declare-fun mapDefault!4704 () ValueCell!1100)

(assert (=> mapNonEmpty!4702 (= condMapEmpty!4704 (= mapRest!4702 ((as const (Array (_ BitVec 32) ValueCell!1100)) mapDefault!4704)))))

(assert (=> mapNonEmpty!4702 (= tp!11308 (and e!89702 mapRes!4704))))

(assert (= (and mapNonEmpty!4702 condMapEmpty!4704) mapIsEmpty!4704))

(assert (= (and mapNonEmpty!4702 (not condMapEmpty!4704)) mapNonEmpty!4704))

(assert (= (and mapNonEmpty!4704 ((_ is ValueCellFull!1100) mapValue!4704)) b!137855))

(assert (= (and mapNonEmpty!4702 ((_ is ValueCellFull!1100) mapDefault!4704)) b!137856))

(declare-fun m!164857 () Bool)

(assert (=> mapNonEmpty!4704 m!164857))

(declare-fun b_lambda!6139 () Bool)

(assert (= b_lambda!6137 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6139)))

(declare-fun b_lambda!6141 () Bool)

(assert (= b_lambda!6115 (or (and b!136327 b_free!2941) (and b!136330 b_free!2943 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))) b_lambda!6141)))

(declare-fun b_lambda!6143 () Bool)

(assert (= b_lambda!6131 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6143)))

(declare-fun b_lambda!6145 () Bool)

(assert (= b_lambda!6119 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6145)))

(declare-fun b_lambda!6147 () Bool)

(assert (= b_lambda!6125 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6147)))

(declare-fun b_lambda!6149 () Bool)

(assert (= b_lambda!6129 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6149)))

(declare-fun b_lambda!6151 () Bool)

(assert (= b_lambda!6109 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6151)))

(declare-fun b_lambda!6153 () Bool)

(assert (= b_lambda!6117 (or (and b!136327 b_free!2941) (and b!136330 b_free!2943 (= (defaultEntry!2888 newMap!16) (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))))) b_lambda!6153)))

(declare-fun b_lambda!6155 () Bool)

(assert (= b_lambda!6133 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6155)))

(declare-fun b_lambda!6157 () Bool)

(assert (= b_lambda!6127 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6157)))

(declare-fun b_lambda!6159 () Bool)

(assert (= b_lambda!6121 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6159)))

(declare-fun b_lambda!6161 () Bool)

(assert (= b_lambda!6123 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6161)))

(declare-fun b_lambda!6163 () Bool)

(assert (= b_lambda!6111 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6163)))

(declare-fun b_lambda!6165 () Bool)

(assert (= b_lambda!6135 (or (and b!136327 b_free!2941 (= (defaultEntry!2888 (v!3215 (underlying!457 thiss!992))) (defaultEntry!2888 newMap!16))) (and b!136330 b_free!2943) b_lambda!6165)))

(check-sat (not b!137697) (not b!137687) (not d!43067) (not d!43241) (not d!43165) (not b!137049) (not d!43247) (not b!137280) (not b!137275) (not b!137593) (not d!43003) (not b!137674) (not b!137574) (not b!137782) (not d!43195) (not b!137410) (not b!137239) (not b!137099) (not b!137292) (not bm!15077) (not b!137834) (not bm!15133) (not b!137539) (not b!137030) (not b!137525) (not d!43167) (not d!43053) (not d!42979) (not bm!15131) (not d!43153) (not b!137369) (not b!137565) (not d!42913) (not bm!15141) (not b!137831) (not b!137303) (not d!42953) (not b!137224) (not d!43073) (not b!137724) (not b!137485) (not b_lambda!6141) (not b!137169) (not d!43257) (not b!137052) (not b!137053) (not bm!15115) (not bm!15137) (not d!43093) (not b!137178) (not b!137541) (not b!137121) (not b!137688) (not b!137333) tp_is_empty!2887 (not b!137501) (not d!43205) (not d!43021) (not b!137602) (not bm!15072) (not b_lambda!6139) (not d!43087) (not b!137573) (not b!137348) (not b!137313) (not b!137035) (not b!137575) (not b!137233) (not b!137097) (not d!43135) (not bm!15081) (not b!137531) (not d!42943) (not b!137517) (not b_lambda!6107) (not bm!15126) (not d!43099) (not b!137622) (not b!137372) (not b!137086) (not d!42965) (not b!137828) (not d!43015) (not b!137758) (not b!137066) (not b!137537) (not b!137113) (not d!43105) (not b!137672) (not b!137347) (not b!137534) (not b!137367) (not b!137827) (not b!137360) (not b!137692) (not b!137342) (not b!137071) (not d!43251) (not bm!15162) (not d!43261) (not b!137443) (not bm!15094) (not d!43213) (not b!137198) (not b!137543) (not b_next!2943) (not b!137739) (not b!137031) (not bm!15113) (not d!42963) (not b!137106) (not d!43163) (not b!137177) (not b!137852) (not d!42923) (not b!137317) (not b!137634) (not b!137716) (not b!137433) (not b!137063) (not b!137540) (not b!137306) (not b!137170) (not d!43219) (not b!137554) (not b!137339) (not b!137387) (not bm!15132) (not d!43181) (not bm!15125) (not b!137835) (not d!42977) (not b!137809) (not d!42855) (not b!137238) (not b!137257) (not b!137836) (not b!137251) (not b!137038) (not b!137189) (not d!43157) (not b_lambda!6147) (not b!137738) (not d!43183) (not b!137786) (not b!137069) (not b!137470) (not b_lambda!6105) (not b!137718) (not b!137300) (not b!137748) (not d!43039) (not bm!15151) (not b!137787) (not d!42989) (not b!137185) (not d!42863) (not b!137254) (not d!43305) (not d!42993) (not d!43137) (not b!137338) (not b!137785) (not bm!15169) (not b!137741) (not b!137509) (not d!43243) (not b!137704) (not b!137702) (not d!42949) (not bm!15110) (not d!43249) (not b!137055) (not d!43061) (not b!137117) (not d!42905) (not b!137051) (not b!137680) (not d!43175) (not b!137710) (not d!43037) (not d!43159) (not d!43177) (not b!137337) (not b!137059) (not b!137295) (not b!137075) (not d!43329) (not d!43275) (not b_lambda!6149) (not b!137060) (not d!43059) (not b!137161) (not d!42849) (not b!137781) (not b!137440) (not b!137551) (not b!137715) (not b!137278) (not b!137518) (not d!43255) (not bm!15074) (not b!137747) (not d!42931) (not b!137630) (not bm!15109) (not d!43045) (not bm!15083) (not b!137549) (not d!42873) (not b!137819) (not b_lambda!6145) (not bm!15149) (not d!42969) (not b!137560) (not b!137085) (not d!42889) (not d!42981) (not b!137098) (not b!137778) (not d!42999) (not b!137769) (not d!43005) (not b!137775) (not b!137400) (not d!43215) (not bm!15100) (not d!43191) (not b!137182) (not d!43309) (not d!43097) (not d!43237) (not b!137441) (not b_lambda!6155) (not d!43143) (not d!43267) (not b!137708) (not b!137844) (not d!42901) (not b!137536) (not b!137767) (not b!137546) (not b!137043) (not b!137221) (not b!137077) (not b!137744) (not b!137034) (not b!137841) (not b!137015) (not b!137669) (not b!137173) (not bm!15152) (not b!137505) (not d!43315) (not b!137432) (not b!137014) (not d!43295) (not b!137774) (not d!43189) (not d!43325) (not b!137299) (not b!137556) (not b!137763) (not d!43321) (not b!137660) (not d!43289) (not d!43221) (not b!137666) (not b!137157) (not d!43283) (not b!137118) (not b!137414) (not b!137777) (not d!43185) (not b_lambda!6083) (not b!137619) (not b!137736) (not b!137273) (not d!43173) (not d!43233) (not d!43293) (not d!43271) (not b!137817) (not b!137515) (not b!137409) (not b!137316) (not b!137171) (not d!43079) (not b!137418) (not b!137244) (not b_lambda!6163) (not d!43035) (not b!137235) (not bm!15117) (not b!137330) (not b!137664) (not bm!15086) (not b!137397) (not b!137756) (not b!137731) (not b_lambda!6099) (not b!137353) (not b!137105) (not b!137243) (not d!43119) (not b!137507) (not b!137293) (not b!137378) (not d!42885) (not d!43121) (not b!137703) (not b!137625) (not d!42991) (not d!43101) (not b_lambda!6151) (not b!137821) (not b!137645) (not b!137776) (not bm!15142) (not bm!15078) (not d!42955) (not b!137384) (not d!43259) (not b!137629) (not b!137636) (not b!137475) (not d!43265) (not b!137713) (not d!43115) (not b!137421) (not b!137599) (not b!137395) (not d!43199) (not d!43297) (not b!137027) (not d!42925) (not d!42927) (not b!137533) (not b!137416) (not b!137582) (not b!137380) (not b!137487) (not b!137592) (not b!137327) (not b!137743) (not b!137701) (not d!43043) (not d!42929) (not b!137740) (not b!137847) (not b!137571) (not d!43109) (not bm!15150) (not d!43091) (not b!137364) (not b!137610) (not b!137062) (not d!43113) (not d!42893) (not d!43011) (not b!137750) (not b!137690) (not b!137249) (not b_lambda!6153) (not b!137381) (not d!42837) (not b!137371) (not d!43023) (not d!43231) (not b!137510) (not bm!15097) (not b!137187) (not d!43279) (not b!137365) (not b!137662) (not b!137067) (not d!42877) (not d!43299) (not b!137649) (not b!137523) (not b!137283) (not d!43179) (not b!137036) (not b!137816) (not b!137167) (not d!43203) (not b!137488) (not b!137277) (not b!137252) (not b!137375) (not b!137814) (not b!137155) (not bm!15120) (not b!137391) (not d!43227) (not b!137695) (not b!137237) (not b!137789) (not b!137675) (not d!42895) (not d!43141) (not bm!15153) (not bm!15093) (not d!43051) (not b!137620) (not d!43245) (not bm!15161) (not d!42867) (not bm!15071) (not b!137780) (not d!42967) (not d!42933) (not d!42951) (not bm!15148) (not d!43317) (not d!43197) (not d!42869) (not b!137032) (not b!137721) (not b!137726) (not b!137498) (not bm!15079) (not b!137101) (not b!137677) (not b!137319) (not bm!15170) (not b!137407) (not b!137383) (not b_lambda!6103) (not bm!15087) (not d!42847) (not b!137079) (not b!137496) (not b!137412) (not d!42907) (not b!137234) (not b!137314) (not b!137770) (not b!137073) (not b!137119) (not d!43313) (not d!43125) (not d!43111) (not b!137829) (not b!137807) (not d!43307) (not b!137424) (not d!42851) (not d!43301) (not b!137017) (not b!137326) (not b!137493) (not d!43085) (not b!137614) (not d!43187) (not bm!15114) (not b!137618) (not d!43151) (not b!137289) (not bm!15140) (not b!137548) (not b!137291) (not b!137374) (not b_lambda!6113) (not b_lambda!6157) (not b_lambda!6165) (not b!137231) (not b!137771) (not b!137605) (not b!137711) (not b!137723) (not d!43123) (not bm!15144) (not bm!15165) (not b!137520) (not b!137595) (not b!137707) (not b!137838) (not bm!15158) (not d!43263) (not d!43193) (not d!43253) (not mapNonEmpty!4703) (not b!137152) (not b!137070) (not b!137114) (not b!137350) (not b!137436) (not b!137192) (not d!43303) (not b!137302) (not d!43025) (not d!43017) (not b!137040) (not d!42917) (not bm!15092) (not b_lambda!6101) (not b!137826) (not d!43239) (not b!137655) (not bm!15147) (not bm!15080) (not bm!15070) b_and!8519 (not b!137476) (not b!137483) (not d!42879) (not d!43225) (not b_lambda!6159) (not d!43027) (not b!137095) (not b!137325) (not b!137600) (not b!137639) (not b!137824) (not b!137699) (not b!137626) (not b!137076) (not b!137850) (not d!43033) (not b!137309) (not b!137434) (not d!42861) (not b!137656) (not d!42945) (not b!137667) (not b!137150) (not d!43277) (not b!137024) (not d!43319) (not bm!15128) (not b!137755) (not b!137761) (not b!137362) (not b!137065) (not b!137226) (not b!137335) (not b!137709) (not b!137665) (not b!137199) (not b!137479) (not bm!15136) (not d!42975) (not b!137419) (not d!43147) (not b_lambda!6087) (not b!137648) (not b!137259) (not d!43009) (not d!42891) (not d!43201) (not d!42983) (not b_lambda!6143) (not b!137753) (not b!137843) (not b!137823) (not bm!15069) (not b!137562) (not mapNonEmpty!4704) (not d!42921) (not d!42841) (not d!42919) (not b_lambda!6161) (not b!137324) (not bm!15121) (not d!43291) (not b!137633) (not b!137083) (not d!42973) (not b!137577) (not bm!15124) (not b!137246) (not d!43107) (not b!137581) (not d!42883) (not b_next!2941) (not b!137115) b_and!8517 (not d!43139) (not b!137123) (not b!137345) (not d!43081) (not b!137340) (not d!43339) (not b!137489) (not b!137444) (not b!137430) (not b!137110) (not d!43311) (not b!137512) (not b!137268) (not b!137729) (not d!43209) (not d!42911) (not b!137651) (not b!137241) (not d!43041) (not b!137830) (not b!137180) (not b!137355) (not b!137647) (not bm!15166) (not bm!15095) (not bm!15155) (not b!137158) (not b!137390) (not b!137089) (not b!137682))
(check-sat b_and!8517 b_and!8519 (not b_next!2941) (not b_next!2943))
