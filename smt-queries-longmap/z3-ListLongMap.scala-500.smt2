; Options: -in -smt2
(set-option :produce-unsat-assumptions true)

(declare-fun start!11350 () Bool)

(assert start!11350)

(declare-fun b!94027 () Bool)

(declare-fun b_free!2393 () Bool)

(declare-fun b_next!2393 () Bool)

(assert (=> b!94027 (= b_free!2393 (not b_next!2393))))

(declare-fun tp!9446 () Bool)

(declare-fun b_and!5739 () Bool)

(assert (=> b!94027 (= tp!9446 b_and!5739)))

(declare-fun b!94030 () Bool)

(declare-fun b_free!2395 () Bool)

(declare-fun b_next!2395 () Bool)

(assert (=> b!94030 (= b_free!2395 (not b_next!2395))))

(declare-fun tp!9445 () Bool)

(declare-fun b_and!5741 () Bool)

(assert (=> b!94030 (= tp!9445 b_and!5741)))

(declare-fun b!94016 () Bool)

(declare-fun e!61393 () Bool)

(declare-fun e!61401 () Bool)

(declare-fun mapRes!3675 () Bool)

(assert (=> b!94016 (= e!61393 (and e!61401 mapRes!3675))))

(declare-fun condMapEmpty!3676 () Bool)

(declare-datatypes ((V!3131 0))(
  ( (V!3132 (val!1351 Int)) )
))
(declare-datatypes ((array!4201 0))(
  ( (array!4202 (arr!1997 (Array (_ BitVec 32) (_ BitVec 64))) (size!2245 (_ BitVec 32))) )
))
(declare-datatypes ((ValueCell!963 0))(
  ( (ValueCellFull!963 (v!2761 V!3131)) (EmptyCell!963) )
))
(declare-datatypes ((array!4203 0))(
  ( (array!4204 (arr!1998 (Array (_ BitVec 32) ValueCell!963)) (size!2246 (_ BitVec 32))) )
))
(declare-datatypes ((LongMapFixedSize!834 0))(
  ( (LongMapFixedSize!835 (defaultEntry!2436 Int) (mask!6511 (_ BitVec 32)) (extraKeys!2265 (_ BitVec 32)) (zeroValue!2323 V!3131) (minValue!2323 V!3131) (_size!466 (_ BitVec 32)) (_keys!4118 array!4201) (_values!2419 array!4203) (_vacant!466 (_ BitVec 32))) )
))
(declare-datatypes ((Cell!634 0))(
  ( (Cell!635 (v!2762 LongMapFixedSize!834)) )
))
(declare-datatypes ((LongMap!634 0))(
  ( (LongMap!635 (underlying!328 Cell!634)) )
))
(declare-fun thiss!992 () LongMap!634)

(declare-fun mapDefault!3675 () ValueCell!963)

(assert (=> b!94016 (= condMapEmpty!3676 (= (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3675)))))

(declare-fun b!94017 () Bool)

(declare-fun res!47641 () Bool)

(declare-fun e!61389 () Bool)

(assert (=> b!94017 (=> (not res!47641) (not e!61389))))

(declare-fun newMap!16 () LongMapFixedSize!834)

(declare-fun valid!373 (LongMapFixedSize!834) Bool)

(assert (=> b!94017 (= res!47641 (valid!373 newMap!16))))

(declare-fun b!94018 () Bool)

(declare-fun e!61392 () Bool)

(declare-fun tp_is_empty!2613 () Bool)

(assert (=> b!94018 (= e!61392 tp_is_empty!2613)))

(declare-fun mapIsEmpty!3675 () Bool)

(assert (=> mapIsEmpty!3675 mapRes!3675))

(declare-fun b!94019 () Bool)

(declare-fun e!61398 () Bool)

(assert (=> b!94019 (= e!61398 (not (= (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 (mask!6511 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!94020 () Bool)

(declare-fun e!61390 () Bool)

(assert (=> b!94020 (= e!61390 tp_is_empty!2613)))

(declare-fun b!94021 () Bool)

(declare-fun e!61395 () Bool)

(declare-fun e!61394 () Bool)

(assert (=> b!94021 (= e!61395 e!61394)))

(declare-fun mapIsEmpty!3676 () Bool)

(declare-fun mapRes!3676 () Bool)

(assert (=> mapIsEmpty!3676 mapRes!3676))

(declare-fun b!94022 () Bool)

(declare-fun res!47644 () Bool)

(assert (=> b!94022 (=> (not res!47644) (not e!61389))))

(assert (=> b!94022 (= res!47644 (bvsge (bvadd #b00000000000000000000000000000001 (mask!6511 newMap!16)) (_size!466 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94023 () Bool)

(declare-datatypes ((Unit!2798 0))(
  ( (Unit!2799) )
))
(declare-fun e!61404 () Unit!2798)

(declare-fun Unit!2800 () Unit!2798)

(assert (=> b!94023 (= e!61404 Unit!2800)))

(declare-fun b!94024 () Bool)

(declare-fun e!61403 () Bool)

(assert (=> b!94024 (= e!61403 (and e!61390 mapRes!3676))))

(declare-fun condMapEmpty!3675 () Bool)

(declare-fun mapDefault!3676 () ValueCell!963)

(assert (=> b!94024 (= condMapEmpty!3675 (= (arr!1998 (_values!2419 newMap!16)) ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3676)))))

(declare-fun res!47643 () Bool)

(assert (=> start!11350 (=> (not res!47643) (not e!61389))))

(declare-fun valid!374 (LongMap!634) Bool)

(assert (=> start!11350 (= res!47643 (valid!374 thiss!992))))

(assert (=> start!11350 e!61389))

(declare-fun e!61391 () Bool)

(assert (=> start!11350 e!61391))

(assert (=> start!11350 true))

(declare-fun e!61397 () Bool)

(assert (=> start!11350 e!61397))

(declare-fun b!94025 () Bool)

(declare-fun res!47646 () Bool)

(assert (=> b!94025 (=> (not res!47646) (not e!61398))))

(declare-fun validMask!0 ((_ BitVec 32)) Bool)

(assert (=> b!94025 (= res!47646 (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94026 () Bool)

(declare-fun res!47642 () Bool)

(assert (=> b!94026 (=> (not res!47642) (not e!61389))))

(declare-fun from!355 () (_ BitVec 32))

(assert (=> b!94026 (= res!47642 (and (bvsge from!355 #b00000000000000000000000000000000) (bvslt from!355 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun array_inv!1243 (array!4201) Bool)

(declare-fun array_inv!1244 (array!4203) Bool)

(assert (=> b!94027 (= e!61394 (and tp!9446 tp_is_empty!2613 (array_inv!1243 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (array_inv!1244 (_values!2419 (v!2762 (underlying!328 thiss!992)))) e!61393))))

(declare-fun b!94028 () Bool)

(declare-fun Unit!2801 () Unit!2798)

(assert (=> b!94028 (= e!61404 Unit!2801)))

(declare-fun lt!46579 () Unit!2798)

(declare-fun lemmaListMapContainsThenArrayContainsFrom!84 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2798)

(assert (=> b!94028 (= lt!46579 (lemmaListMapContainsThenArrayContainsFrom!84 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun arrayContainsKey!0 (array!4201 (_ BitVec 64) (_ BitVec 32)) Bool)

(assert (=> b!94028 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355))))

(declare-fun lt!46580 () Unit!2798)

(declare-fun lemmaNoDuplicateFromThenFromBigger!0 (array!4201 (_ BitVec 32) (_ BitVec 32)) Unit!2798)

(assert (=> b!94028 (= lt!46580 (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 from!355))))

(declare-datatypes ((List!1568 0))(
  ( (Nil!1565) (Cons!1564 (h!2156 (_ BitVec 64)) (t!5470 List!1568)) )
))
(declare-fun arrayNoDuplicates!0 (array!4201 (_ BitVec 32) List!1568) Bool)

(assert (=> b!94028 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) from!355 Nil!1565)))

(declare-fun lt!46577 () Unit!2798)

(declare-fun lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (array!4201 (_ BitVec 32) (_ BitVec 64) List!1568) Unit!2798)

(assert (=> b!94028 (= lt!46577 (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565)))))

(assert (=> b!94028 false))

(declare-fun b!94029 () Bool)

(assert (=> b!94029 (= e!61401 tp_is_empty!2613)))

(assert (=> b!94030 (= e!61397 (and tp!9445 tp_is_empty!2613 (array_inv!1243 (_keys!4118 newMap!16)) (array_inv!1244 (_values!2419 newMap!16)) e!61403))))

(declare-fun b!94031 () Bool)

(declare-fun e!61399 () Bool)

(assert (=> b!94031 (= e!61399 tp_is_empty!2613)))

(declare-fun b!94032 () Bool)

(assert (=> b!94032 (= e!61391 e!61395)))

(declare-fun mapNonEmpty!3675 () Bool)

(declare-fun tp!9447 () Bool)

(assert (=> mapNonEmpty!3675 (= mapRes!3675 (and tp!9447 e!61399))))

(declare-fun mapKey!3676 () (_ BitVec 32))

(declare-fun mapRest!3676 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3676 () ValueCell!963)

(assert (=> mapNonEmpty!3675 (= (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (store mapRest!3676 mapKey!3676 mapValue!3676))))

(declare-fun mapNonEmpty!3676 () Bool)

(declare-fun tp!9448 () Bool)

(assert (=> mapNonEmpty!3676 (= mapRes!3676 (and tp!9448 e!61392))))

(declare-fun mapKey!3675 () (_ BitVec 32))

(declare-fun mapValue!3675 () ValueCell!963)

(declare-fun mapRest!3675 () (Array (_ BitVec 32) ValueCell!963))

(assert (=> mapNonEmpty!3676 (= (arr!1998 (_values!2419 newMap!16)) (store mapRest!3675 mapKey!3675 mapValue!3675))))

(declare-fun b!94033 () Bool)

(declare-fun e!61400 () Bool)

(assert (=> b!94033 (= e!61389 e!61400)))

(declare-fun res!47640 () Bool)

(assert (=> b!94033 (=> (not res!47640) (not e!61400))))

(declare-datatypes ((tuple2!2310 0))(
  ( (tuple2!2311 (_1!1166 (_ BitVec 64)) (_2!1166 V!3131)) )
))
(declare-datatypes ((List!1569 0))(
  ( (Nil!1566) (Cons!1565 (h!2157 tuple2!2310) (t!5471 List!1569)) )
))
(declare-datatypes ((ListLongMap!1521 0))(
  ( (ListLongMap!1522 (toList!776 List!1569)) )
))
(declare-fun lt!46578 () ListLongMap!1521)

(declare-fun lt!46581 () ListLongMap!1521)

(assert (=> b!94033 (= res!47640 (and (= lt!46581 lt!46578) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun map!1243 (LongMapFixedSize!834) ListLongMap!1521)

(assert (=> b!94033 (= lt!46578 (map!1243 newMap!16))))

(declare-fun getCurrentListMap!468 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) ListLongMap!1521)

(assert (=> b!94033 (= lt!46581 (getCurrentListMap!468 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94034 () Bool)

(assert (=> b!94034 (= e!61400 e!61398)))

(declare-fun res!47645 () Bool)

(assert (=> b!94034 (=> (not res!47645) (not e!61398))))

(declare-datatypes ((tuple2!2312 0))(
  ( (tuple2!2313 (_1!1167 Bool) (_2!1167 LongMapFixedSize!834)) )
))
(declare-fun lt!46582 () tuple2!2312)

(assert (=> b!94034 (= res!47645 (and (_1!1167 lt!46582) (bvsle from!355 #b00000000000000000000000000000000)))))

(declare-fun lt!46583 () Unit!2798)

(assert (=> b!94034 (= lt!46583 e!61404)))

(declare-fun c!15661 () Bool)

(declare-fun contains!789 (ListLongMap!1521 (_ BitVec 64)) Bool)

(assert (=> b!94034 (= c!15661 (contains!789 lt!46578 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun update!133 (LongMapFixedSize!834 (_ BitVec 64) V!3131) tuple2!2312)

(declare-fun get!1261 (ValueCell!963 V!3131) V!3131)

(declare-fun dynLambda!361 (Int (_ BitVec 64)) V!3131)

(assert (=> b!94034 (= lt!46582 (update!133 newMap!16 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (= (and start!11350 res!47643) b!94026))

(assert (= (and b!94026 res!47642) b!94017))

(assert (= (and b!94017 res!47641) b!94022))

(assert (= (and b!94022 res!47644) b!94033))

(assert (= (and b!94033 res!47640) b!94034))

(assert (= (and b!94034 c!15661) b!94028))

(assert (= (and b!94034 (not c!15661)) b!94023))

(assert (= (and b!94034 res!47645) b!94025))

(assert (= (and b!94025 res!47646) b!94019))

(assert (= (and b!94016 condMapEmpty!3676) mapIsEmpty!3675))

(assert (= (and b!94016 (not condMapEmpty!3676)) mapNonEmpty!3675))

(get-info :version)

(assert (= (and mapNonEmpty!3675 ((_ is ValueCellFull!963) mapValue!3676)) b!94031))

(assert (= (and b!94016 ((_ is ValueCellFull!963) mapDefault!3675)) b!94029))

(assert (= b!94027 b!94016))

(assert (= b!94021 b!94027))

(assert (= b!94032 b!94021))

(assert (= start!11350 b!94032))

(assert (= (and b!94024 condMapEmpty!3675) mapIsEmpty!3676))

(assert (= (and b!94024 (not condMapEmpty!3675)) mapNonEmpty!3676))

(assert (= (and mapNonEmpty!3676 ((_ is ValueCellFull!963) mapValue!3675)) b!94018))

(assert (= (and b!94024 ((_ is ValueCellFull!963) mapDefault!3676)) b!94020))

(assert (= b!94030 b!94024))

(assert (= start!11350 b!94030))

(declare-fun b_lambda!4143 () Bool)

(assert (=> (not b_lambda!4143) (not b!94034)))

(declare-fun t!5467 () Bool)

(declare-fun tb!1869 () Bool)

(assert (=> (and b!94027 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) t!5467) tb!1869))

(declare-fun result!3187 () Bool)

(assert (=> tb!1869 (= result!3187 tp_is_empty!2613)))

(assert (=> b!94034 t!5467))

(declare-fun b_and!5743 () Bool)

(assert (= b_and!5739 (and (=> t!5467 result!3187) b_and!5743)))

(declare-fun tb!1871 () Bool)

(declare-fun t!5469 () Bool)

(assert (=> (and b!94030 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) t!5469) tb!1871))

(declare-fun result!3191 () Bool)

(assert (= result!3191 result!3187))

(assert (=> b!94034 t!5469))

(declare-fun b_and!5745 () Bool)

(assert (= b_and!5741 (and (=> t!5469 result!3191) b_and!5745)))

(declare-fun m!101357 () Bool)

(assert (=> b!94034 m!101357))

(declare-fun m!101359 () Bool)

(assert (=> b!94034 m!101359))

(declare-fun m!101361 () Bool)

(assert (=> b!94034 m!101361))

(declare-fun m!101363 () Bool)

(assert (=> b!94034 m!101363))

(assert (=> b!94034 m!101359))

(assert (=> b!94034 m!101363))

(declare-fun m!101365 () Bool)

(assert (=> b!94034 m!101365))

(assert (=> b!94034 m!101363))

(assert (=> b!94034 m!101361))

(declare-fun m!101367 () Bool)

(assert (=> b!94034 m!101367))

(assert (=> b!94034 m!101357))

(assert (=> b!94033 m!101363))

(declare-fun m!101369 () Bool)

(assert (=> b!94033 m!101369))

(declare-fun m!101371 () Bool)

(assert (=> b!94033 m!101371))

(declare-fun m!101373 () Bool)

(assert (=> b!94025 m!101373))

(declare-fun m!101375 () Bool)

(assert (=> b!94030 m!101375))

(declare-fun m!101377 () Bool)

(assert (=> b!94030 m!101377))

(declare-fun m!101379 () Bool)

(assert (=> b!94027 m!101379))

(declare-fun m!101381 () Bool)

(assert (=> b!94027 m!101381))

(declare-fun m!101383 () Bool)

(assert (=> b!94028 m!101383))

(declare-fun m!101385 () Bool)

(assert (=> b!94028 m!101385))

(assert (=> b!94028 m!101363))

(declare-fun m!101387 () Bool)

(assert (=> b!94028 m!101387))

(assert (=> b!94028 m!101363))

(assert (=> b!94028 m!101363))

(declare-fun m!101389 () Bool)

(assert (=> b!94028 m!101389))

(assert (=> b!94028 m!101363))

(declare-fun m!101391 () Bool)

(assert (=> b!94028 m!101391))

(declare-fun m!101393 () Bool)

(assert (=> mapNonEmpty!3676 m!101393))

(declare-fun m!101395 () Bool)

(assert (=> start!11350 m!101395))

(declare-fun m!101397 () Bool)

(assert (=> mapNonEmpty!3675 m!101397))

(declare-fun m!101399 () Bool)

(assert (=> b!94017 m!101399))

(check-sat tp_is_empty!2613 b_and!5745 (not b_next!2393) (not b_next!2395) (not b!94030) (not b!94027) (not b!94033) (not start!11350) (not b!94017) (not b_lambda!4143) (not b!94028) (not b!94034) (not b!94025) (not mapNonEmpty!3676) (not mapNonEmpty!3675) b_and!5743)
(check-sat b_and!5743 b_and!5745 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun b_lambda!4147 () Bool)

(assert (= b_lambda!4143 (or (and b!94027 b_free!2393) (and b!94030 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))) b_lambda!4147)))

(check-sat tp_is_empty!2613 b_and!5745 (not b_next!2393) (not b_next!2395) (not b!94030) (not b!94027) (not b!94033) (not b!94017) (not b!94028) (not b!94034) (not start!11350) (not b_lambda!4147) (not b!94025) (not mapNonEmpty!3676) (not mapNonEmpty!3675) b_and!5743)
(check-sat b_and!5743 b_and!5745 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun d!24587 () Bool)

(assert (=> d!24587 (= (valid!374 thiss!992) (valid!373 (v!2762 (underlying!328 thiss!992))))))

(declare-fun bs!3868 () Bool)

(assert (= bs!3868 d!24587))

(declare-fun m!101445 () Bool)

(assert (=> bs!3868 m!101445))

(assert (=> start!11350 d!24587))

(declare-fun d!24589 () Bool)

(assert (=> d!24589 (= (array_inv!1243 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvsge (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!94027 d!24589))

(declare-fun d!24591 () Bool)

(assert (=> d!24591 (= (array_inv!1244 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvsge (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000))))

(assert (=> b!94027 d!24591))

(declare-fun d!24593 () Bool)

(declare-fun e!61458 () Bool)

(assert (=> d!24593 e!61458))

(declare-fun res!47670 () Bool)

(assert (=> d!24593 (=> res!47670 e!61458)))

(declare-fun lt!46616 () Bool)

(assert (=> d!24593 (= res!47670 (not lt!46616))))

(declare-fun lt!46613 () Bool)

(assert (=> d!24593 (= lt!46616 lt!46613)))

(declare-fun lt!46615 () Unit!2798)

(declare-fun e!61457 () Unit!2798)

(assert (=> d!24593 (= lt!46615 e!61457)))

(declare-fun c!15667 () Bool)

(assert (=> d!24593 (= c!15667 lt!46613)))

(declare-fun containsKey!152 (List!1569 (_ BitVec 64)) Bool)

(assert (=> d!24593 (= lt!46613 (containsKey!152 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24593 (= (contains!789 lt!46578 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!46616)))

(declare-fun b!94102 () Bool)

(declare-fun lt!46614 () Unit!2798)

(assert (=> b!94102 (= e!61457 lt!46614)))

(declare-fun lemmaContainsKeyImpliesGetValueByKeyDefined!100 (List!1569 (_ BitVec 64)) Unit!2798)

(assert (=> b!94102 (= lt!46614 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-datatypes ((Option!154 0))(
  ( (Some!153 (v!2766 V!3131)) (None!152) )
))
(declare-fun isDefined!101 (Option!154) Bool)

(declare-fun getValueByKey!148 (List!1569 (_ BitVec 64)) Option!154)

(assert (=> b!94102 (isDefined!101 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94103 () Bool)

(declare-fun Unit!2806 () Unit!2798)

(assert (=> b!94103 (= e!61457 Unit!2806)))

(declare-fun b!94104 () Bool)

(assert (=> b!94104 (= e!61458 (isDefined!101 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (= (and d!24593 c!15667) b!94102))

(assert (= (and d!24593 (not c!15667)) b!94103))

(assert (= (and d!24593 (not res!47670)) b!94104))

(assert (=> d!24593 m!101363))

(declare-fun m!101447 () Bool)

(assert (=> d!24593 m!101447))

(assert (=> b!94102 m!101363))

(declare-fun m!101449 () Bool)

(assert (=> b!94102 m!101449))

(assert (=> b!94102 m!101363))

(declare-fun m!101451 () Bool)

(assert (=> b!94102 m!101451))

(assert (=> b!94102 m!101451))

(declare-fun m!101453 () Bool)

(assert (=> b!94102 m!101453))

(assert (=> b!94104 m!101363))

(assert (=> b!94104 m!101451))

(assert (=> b!94104 m!101451))

(assert (=> b!94104 m!101453))

(assert (=> b!94034 d!24593))

(declare-fun b!94189 () Bool)

(declare-fun lt!46683 () Unit!2798)

(declare-fun e!61521 () Unit!2798)

(assert (=> b!94189 (= lt!46683 e!61521)))

(declare-fun c!15704 () Bool)

(declare-fun call!9432 () Bool)

(assert (=> b!94189 (= c!15704 call!9432)))

(declare-fun e!61505 () tuple2!2312)

(assert (=> b!94189 (= e!61505 (tuple2!2313 false newMap!16))))

(declare-fun bm!9412 () Bool)

(declare-fun call!9415 () ListLongMap!1521)

(declare-fun call!9427 () ListLongMap!1521)

(assert (=> bm!9412 (= call!9415 call!9427)))

(declare-fun b!94190 () Bool)

(declare-fun res!47700 () Bool)

(declare-fun e!61507 () Bool)

(assert (=> b!94190 (=> (not res!47700) (not e!61507))))

(declare-fun call!9420 () Bool)

(assert (=> b!94190 (= res!47700 call!9420)))

(declare-fun e!61516 () Bool)

(assert (=> b!94190 (= e!61516 e!61507)))

(declare-fun b!94191 () Bool)

(declare-fun e!61524 () Bool)

(declare-datatypes ((SeekEntryResult!251 0))(
  ( (MissingZero!251 (index!3145 (_ BitVec 32))) (Found!251 (index!3146 (_ BitVec 32))) (Intermediate!251 (undefined!1063 Bool) (index!3147 (_ BitVec 32)) (x!12655 (_ BitVec 32))) (Undefined!251) (MissingVacant!251 (index!3148 (_ BitVec 32))) )
))
(declare-fun lt!46672 () SeekEntryResult!251)

(assert (=> b!94191 (= e!61524 ((_ is Undefined!251) lt!46672))))

(declare-fun call!9438 () Unit!2798)

(declare-fun bm!9413 () Bool)

(declare-fun lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2798)

(assert (=> bm!9413 (= call!9438 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun b!94192 () Bool)

(declare-fun c!15697 () Bool)

(assert (=> b!94192 (= c!15697 ((_ is MissingVacant!251) lt!46672))))

(declare-fun e!61511 () Bool)

(assert (=> b!94192 (= e!61511 e!61524)))

(declare-fun b!94193 () Bool)

(declare-fun res!47704 () Bool)

(declare-fun call!9416 () Bool)

(assert (=> b!94193 (= res!47704 call!9416)))

(declare-fun e!61518 () Bool)

(assert (=> b!94193 (=> (not res!47704) (not e!61518))))

(declare-fun b!94194 () Bool)

(declare-fun res!47709 () Bool)

(declare-fun e!61522 () Bool)

(assert (=> b!94194 (=> (not res!47709) (not e!61522))))

(declare-fun call!9422 () Bool)

(assert (=> b!94194 (= res!47709 call!9422)))

(assert (=> b!94194 (= e!61511 e!61522)))

(declare-fun b!94195 () Bool)

(declare-fun res!47710 () Bool)

(declare-fun call!9437 () Bool)

(assert (=> b!94195 (= res!47710 call!9437)))

(declare-fun e!61514 () Bool)

(assert (=> b!94195 (=> (not res!47710) (not e!61514))))

(declare-fun b!94196 () Bool)

(declare-fun call!9433 () Bool)

(assert (=> b!94196 (= e!61507 (not call!9433))))

(declare-fun bm!9415 () Bool)

(declare-fun call!9430 () ListLongMap!1521)

(declare-fun call!9421 () ListLongMap!1521)

(assert (=> bm!9415 (= call!9430 call!9421)))

(declare-fun b!94197 () Bool)

(declare-fun lt!46671 () SeekEntryResult!251)

(assert (=> b!94197 (= e!61518 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46671)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun bm!9416 () Bool)

(declare-fun call!9424 () ListLongMap!1521)

(assert (=> bm!9416 (= call!9424 call!9427)))

(declare-fun b!94198 () Bool)

(declare-fun e!61520 () Unit!2798)

(declare-fun Unit!2807 () Unit!2798)

(assert (=> b!94198 (= e!61520 Unit!2807)))

(declare-fun lt!46682 () Unit!2798)

(assert (=> b!94198 (= lt!46682 call!9438)))

(declare-fun lt!46695 () SeekEntryResult!251)

(declare-fun call!9425 () SeekEntryResult!251)

(assert (=> b!94198 (= lt!46695 call!9425)))

(declare-fun c!15698 () Bool)

(assert (=> b!94198 (= c!15698 ((_ is MissingZero!251) lt!46695))))

(assert (=> b!94198 e!61516))

(declare-fun lt!46693 () Unit!2798)

(assert (=> b!94198 (= lt!46693 lt!46682)))

(assert (=> b!94198 false))

(declare-fun b!94199 () Bool)

(declare-fun e!61510 () Bool)

(declare-fun e!61503 () Bool)

(assert (=> b!94199 (= e!61510 e!61503)))

(declare-fun res!47708 () Bool)

(declare-fun call!9436 () ListLongMap!1521)

(assert (=> b!94199 (= res!47708 (contains!789 call!9436 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!94199 (=> (not res!47708) (not e!61503))))

(declare-fun b!94200 () Bool)

(declare-fun res!47703 () Bool)

(assert (=> b!94200 (=> (not res!47703) (not e!61507))))

(assert (=> b!94200 (= res!47703 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!46695)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94201 () Bool)

(declare-fun lt!46690 () Unit!2798)

(assert (=> b!94201 (= e!61521 lt!46690)))

(assert (=> b!94201 (= lt!46690 call!9438)))

(declare-fun call!9429 () SeekEntryResult!251)

(assert (=> b!94201 (= lt!46672 call!9429)))

(declare-fun c!15707 () Bool)

(assert (=> b!94201 (= c!15707 ((_ is MissingZero!251) lt!46672))))

(assert (=> b!94201 e!61511))

(declare-fun call!9417 () tuple2!2312)

(declare-fun c!15699 () Bool)

(declare-fun lt!46675 () SeekEntryResult!251)

(declare-fun bm!9417 () Bool)

(declare-fun updateHelperNewKey!39 (LongMapFixedSize!834 (_ BitVec 64) V!3131 (_ BitVec 32)) tuple2!2312)

(assert (=> bm!9417 (= call!9417 (updateHelperNewKey!39 newMap!16 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))

(declare-fun bm!9418 () Bool)

(declare-fun call!9434 () Bool)

(declare-fun call!9419 () Bool)

(assert (=> bm!9418 (= call!9434 call!9419)))

(declare-fun b!94202 () Bool)

(declare-fun e!61509 () Bool)

(assert (=> b!94202 (= e!61509 (not call!9433))))

(declare-fun b!94203 () Bool)

(declare-fun e!61519 () Bool)

(assert (=> b!94203 (= e!61519 (not call!9434))))

(declare-fun bm!9419 () Bool)

(declare-fun call!9423 () Bool)

(assert (=> bm!9419 (= call!9416 call!9423)))

(declare-fun b!94204 () Bool)

(declare-fun c!15696 () Bool)

(assert (=> b!94204 (= c!15696 ((_ is MissingVacant!251) lt!46695))))

(declare-fun e!61517 () Bool)

(assert (=> b!94204 (= e!61516 e!61517)))

(declare-fun b!94205 () Bool)

(declare-fun Unit!2808 () Unit!2798)

(assert (=> b!94205 (= e!61521 Unit!2808)))

(declare-fun lt!46681 () Unit!2798)

(declare-fun call!9418 () Unit!2798)

(assert (=> b!94205 (= lt!46681 call!9418)))

(declare-fun lt!46692 () SeekEntryResult!251)

(assert (=> b!94205 (= lt!46692 call!9429)))

(declare-fun res!47701 () Bool)

(assert (=> b!94205 (= res!47701 ((_ is Found!251) lt!46692))))

(assert (=> b!94205 (=> (not res!47701) (not e!61514))))

(assert (=> b!94205 e!61514))

(declare-fun lt!46679 () Unit!2798)

(assert (=> b!94205 (= lt!46679 lt!46681)))

(assert (=> b!94205 false))

(declare-fun b!94206 () Bool)

(declare-fun res!47707 () Bool)

(assert (=> b!94206 (= res!47707 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!46672)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94206 (=> (not res!47707) (not e!61519))))

(declare-fun b!94207 () Bool)

(declare-fun lt!46691 () Unit!2798)

(assert (=> b!94207 (= e!61520 lt!46691)))

(assert (=> b!94207 (= lt!46691 call!9418)))

(assert (=> b!94207 (= lt!46671 call!9425)))

(declare-fun res!47705 () Bool)

(assert (=> b!94207 (= res!47705 ((_ is Found!251) lt!46671))))

(assert (=> b!94207 (=> (not res!47705) (not e!61518))))

(assert (=> b!94207 e!61518))

(declare-fun bm!9420 () Bool)

(declare-fun lt!46697 () tuple2!2312)

(assert (=> bm!9420 (= call!9436 (map!1243 (_2!1167 lt!46697)))))

(declare-fun bm!9421 () Bool)

(declare-fun call!9428 () SeekEntryResult!251)

(declare-fun seekEntryOrOpen!0 ((_ BitVec 64) array!4201 (_ BitVec 32)) SeekEntryResult!251)

(assert (=> bm!9421 (= call!9428 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94208 () Bool)

(declare-fun e!61515 () tuple2!2312)

(assert (=> b!94208 (= e!61515 e!61505)))

(assert (=> b!94208 (= lt!46675 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun c!15703 () Bool)

(assert (=> b!94208 (= c!15703 ((_ is Undefined!251) lt!46675))))

(declare-fun bm!9422 () Bool)

(declare-fun c!15701 () Bool)

(assert (=> bm!9422 (= c!15701 c!15703)))

(declare-fun e!61513 () ListLongMap!1521)

(assert (=> bm!9422 (= call!9432 (contains!789 e!61513 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun bm!9423 () Bool)

(declare-fun call!9431 () ListLongMap!1521)

(declare-fun call!9435 () ListLongMap!1521)

(assert (=> bm!9423 (= call!9431 call!9435)))

(declare-fun b!94209 () Bool)

(assert (=> b!94209 (= e!61524 e!61519)))

(declare-fun res!47702 () Bool)

(assert (=> b!94209 (= res!47702 call!9422)))

(assert (=> b!94209 (=> (not res!47702) (not e!61519))))

(declare-fun b!94210 () Bool)

(declare-fun call!9426 () ListLongMap!1521)

(declare-fun +!133 (ListLongMap!1521 tuple2!2310) ListLongMap!1521)

(assert (=> b!94210 (= e!61503 (= call!9436 (+!133 call!9426 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!94211 () Bool)

(declare-fun lt!46677 () Unit!2798)

(declare-fun lt!46696 () Unit!2798)

(assert (=> b!94211 (= lt!46677 lt!46696)))

(assert (=> b!94211 (contains!789 call!9435 (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))

(declare-fun lt!46687 () array!4203)

(declare-fun lemmaValidKeyInArrayIsInListMap!100 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) Unit!2798)

(assert (=> b!94211 (= lt!46696 (lemmaValidKeyInArrayIsInListMap!100 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94211 (= lt!46687 (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))))

(declare-fun lt!46685 () Unit!2798)

(declare-fun lt!46684 () Unit!2798)

(assert (=> b!94211 (= lt!46685 lt!46684)))

(assert (=> b!94211 (= call!9421 call!9424)))

(declare-fun lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2798)

(assert (=> b!94211 (= lt!46684 (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46694 () Unit!2798)

(assert (=> b!94211 (= lt!46694 e!61520)))

(declare-fun c!15709 () Bool)

(assert (=> b!94211 (= c!15709 call!9432)))

(declare-fun e!61523 () tuple2!2312)

(assert (=> b!94211 (= e!61523 (tuple2!2313 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (_size!466 newMap!16) (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (_vacant!466 newMap!16))))))

(declare-fun b!94212 () Bool)

(assert (=> b!94212 (= e!61513 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun b!94213 () Bool)

(declare-fun e!61508 () ListLongMap!1521)

(assert (=> b!94213 (= e!61508 call!9431)))

(declare-fun bm!9424 () Bool)

(assert (=> bm!9424 (= call!9437 call!9423)))

(declare-fun b!94214 () Bool)

(assert (=> b!94214 (= c!15699 ((_ is MissingVacant!251) lt!46675))))

(declare-fun e!61506 () tuple2!2312)

(assert (=> b!94214 (= e!61505 e!61506)))

(declare-fun bm!9425 () Bool)

(declare-fun c!15700 () Bool)

(declare-fun c!15706 () Bool)

(declare-fun lt!46674 () (_ BitVec 32))

(declare-fun lt!46686 () (_ BitVec 32))

(assert (=> bm!9425 (= call!9427 (getCurrentListMap!468 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun b!94215 () Bool)

(assert (=> b!94215 (= e!61506 e!61523)))

(declare-fun c!15702 () Bool)

(assert (=> b!94215 (= c!15702 ((_ is MissingZero!251) lt!46675))))

(declare-fun b!94216 () Bool)

(assert (=> b!94216 (= e!61517 e!61509)))

(declare-fun res!47712 () Bool)

(assert (=> b!94216 (= res!47712 call!9420)))

(assert (=> b!94216 (=> (not res!47712) (not e!61509))))

(declare-fun bm!9426 () Bool)

(declare-fun inRange!0 ((_ BitVec 32) (_ BitVec 32)) Bool)

(assert (=> bm!9426 (= call!9423 (inRange!0 (ite c!15703 (ite c!15704 (index!3146 lt!46692) (ite c!15707 (index!3145 lt!46672) (index!3148 lt!46672))) (ite c!15709 (index!3146 lt!46671) (ite c!15698 (index!3145 lt!46695) (index!3148 lt!46695)))) (mask!6511 newMap!16)))))

(declare-fun bm!9427 () Bool)

(assert (=> bm!9427 (= call!9420 call!9416)))

(declare-fun b!94217 () Bool)

(assert (=> b!94217 (= e!61517 ((_ is Undefined!251) lt!46695))))

(declare-fun b!94218 () Bool)

(assert (=> b!94218 (= e!61522 (not call!9434))))

(declare-fun bm!9428 () Bool)

(assert (=> bm!9428 (= call!9426 (map!1243 newMap!16))))

(declare-fun bm!9429 () Bool)

(assert (=> bm!9429 (= call!9435 (getCurrentListMap!468 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9430 () Bool)

(assert (=> bm!9430 (= call!9425 call!9428)))

(declare-fun b!94219 () Bool)

(assert (=> b!94219 (= e!61514 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46692)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94220 () Bool)

(assert (=> b!94220 (= e!61513 call!9424)))

(declare-fun b!94221 () Bool)

(declare-fun lt!46689 () tuple2!2312)

(assert (=> b!94221 (= e!61506 (tuple2!2313 (_1!1167 lt!46689) (_2!1167 lt!46689)))))

(assert (=> b!94221 (= lt!46689 call!9417)))

(declare-fun bm!9431 () Bool)

(assert (=> bm!9431 (= call!9421 (+!133 e!61508 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun c!15708 () Bool)

(assert (=> bm!9431 (= c!15708 c!15700)))

(declare-fun b!94222 () Bool)

(declare-fun e!61504 () tuple2!2312)

(assert (=> b!94222 (= e!61515 e!61504)))

(assert (=> b!94222 (= c!15706 (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94223 () Bool)

(declare-fun lt!46676 () Unit!2798)

(declare-fun lt!46678 () Unit!2798)

(assert (=> b!94223 (= lt!46676 lt!46678)))

(assert (=> b!94223 (= call!9430 call!9415)))

(declare-fun lemmaChangeZeroKeyThenAddPairToListMap!39 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2798)

(assert (=> b!94223 (= lt!46678 (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46686 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94223 (= lt!46686 (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000001))))

(assert (=> b!94223 (= e!61504 (tuple2!2313 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (_size!466 newMap!16) (_keys!4118 newMap!16) (_values!2419 newMap!16) (_vacant!466 newMap!16))))))

(declare-fun b!94224 () Bool)

(declare-fun res!47711 () Bool)

(assert (=> b!94224 (=> (not res!47711) (not e!61522))))

(assert (=> b!94224 (= res!47711 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!46672)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun bm!9414 () Bool)

(assert (=> bm!9414 (= call!9419 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun d!24595 () Bool)

(declare-fun e!61512 () Bool)

(assert (=> d!24595 e!61512))

(declare-fun res!47699 () Bool)

(assert (=> d!24595 (=> (not res!47699) (not e!61512))))

(assert (=> d!24595 (= res!47699 (valid!373 (_2!1167 lt!46697)))))

(assert (=> d!24595 (= lt!46697 e!61515)))

(assert (=> d!24595 (= c!15700 (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvneg (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (=> d!24595 (valid!373 newMap!16)))

(assert (=> d!24595 (= (update!133 newMap!16 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) lt!46697)))

(declare-fun bm!9432 () Bool)

(assert (=> bm!9432 (= call!9422 call!9437)))

(declare-fun b!94225 () Bool)

(declare-fun lt!46680 () tuple2!2312)

(assert (=> b!94225 (= lt!46680 call!9417)))

(assert (=> b!94225 (= e!61523 (tuple2!2313 (_1!1167 lt!46680) (_2!1167 lt!46680)))))

(declare-fun b!94226 () Bool)

(declare-fun res!47706 () Bool)

(assert (=> b!94226 (= res!47706 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!46695)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94226 (=> (not res!47706) (not e!61509))))

(declare-fun b!94227 () Bool)

(assert (=> b!94227 (= e!61508 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun b!94228 () Bool)

(assert (=> b!94228 (= e!61510 (= call!9436 call!9426))))

(declare-fun bm!9433 () Bool)

(declare-fun lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2798)

(assert (=> bm!9433 (= call!9418 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9434 () Bool)

(assert (=> bm!9434 (= call!9433 call!9419)))

(declare-fun b!94229 () Bool)

(assert (=> b!94229 (= e!61512 e!61510)))

(declare-fun c!15705 () Bool)

(assert (=> b!94229 (= c!15705 (_1!1167 lt!46697))))

(declare-fun b!94230 () Bool)

(declare-fun lt!46673 () Unit!2798)

(declare-fun lt!46688 () Unit!2798)

(assert (=> b!94230 (= lt!46673 lt!46688)))

(assert (=> b!94230 (= call!9430 call!9415)))

(declare-fun lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2798)

(assert (=> b!94230 (= lt!46688 (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94230 (= lt!46674 (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000010))))

(assert (=> b!94230 (= e!61504 (tuple2!2313 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (bvor (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (_size!466 newMap!16) (_keys!4118 newMap!16) (_values!2419 newMap!16) (_vacant!466 newMap!16))))))

(declare-fun bm!9435 () Bool)

(assert (=> bm!9435 (= call!9429 call!9428)))

(assert (= (and d!24595 c!15700) b!94222))

(assert (= (and d!24595 (not c!15700)) b!94208))

(assert (= (and b!94222 c!15706) b!94223))

(assert (= (and b!94222 (not c!15706)) b!94230))

(assert (= (or b!94223 b!94230) bm!9423))

(assert (= (or b!94223 b!94230) bm!9412))

(assert (= (or b!94223 b!94230) bm!9415))

(assert (= (and b!94208 c!15703) b!94189))

(assert (= (and b!94208 (not c!15703)) b!94214))

(assert (= (and b!94189 c!15704) b!94205))

(assert (= (and b!94189 (not c!15704)) b!94201))

(assert (= (and b!94205 res!47701) b!94195))

(assert (= (and b!94195 res!47710) b!94219))

(assert (= (and b!94201 c!15707) b!94194))

(assert (= (and b!94201 (not c!15707)) b!94192))

(assert (= (and b!94194 res!47709) b!94224))

(assert (= (and b!94224 res!47711) b!94218))

(assert (= (and b!94192 c!15697) b!94209))

(assert (= (and b!94192 (not c!15697)) b!94191))

(assert (= (and b!94209 res!47702) b!94206))

(assert (= (and b!94206 res!47707) b!94203))

(assert (= (or b!94194 b!94209) bm!9432))

(assert (= (or b!94218 b!94203) bm!9418))

(assert (= (or b!94195 bm!9432) bm!9424))

(assert (= (or b!94205 b!94201) bm!9435))

(assert (= (and b!94214 c!15699) b!94221))

(assert (= (and b!94214 (not c!15699)) b!94215))

(assert (= (and b!94215 c!15702) b!94225))

(assert (= (and b!94215 (not c!15702)) b!94211))

(assert (= (and b!94211 c!15709) b!94207))

(assert (= (and b!94211 (not c!15709)) b!94198))

(assert (= (and b!94207 res!47705) b!94193))

(assert (= (and b!94193 res!47704) b!94197))

(assert (= (and b!94198 c!15698) b!94190))

(assert (= (and b!94198 (not c!15698)) b!94204))

(assert (= (and b!94190 res!47700) b!94200))

(assert (= (and b!94200 res!47703) b!94196))

(assert (= (and b!94204 c!15696) b!94216))

(assert (= (and b!94204 (not c!15696)) b!94217))

(assert (= (and b!94216 res!47712) b!94226))

(assert (= (and b!94226 res!47706) b!94202))

(assert (= (or b!94190 b!94216) bm!9427))

(assert (= (or b!94196 b!94202) bm!9434))

(assert (= (or b!94193 bm!9427) bm!9419))

(assert (= (or b!94207 b!94198) bm!9430))

(assert (= (or b!94221 b!94225) bm!9417))

(assert (= (or b!94189 b!94211) bm!9416))

(assert (= (or bm!9418 bm!9434) bm!9414))

(assert (= (or bm!9424 bm!9419) bm!9426))

(assert (= (or b!94201 b!94198) bm!9413))

(assert (= (or bm!9435 bm!9430) bm!9421))

(assert (= (or b!94205 b!94207) bm!9433))

(assert (= (or b!94189 b!94211) bm!9422))

(assert (= (and bm!9422 c!15701) b!94220))

(assert (= (and bm!9422 (not c!15701)) b!94212))

(assert (= (or bm!9412 bm!9416) bm!9425))

(assert (= (or bm!9423 b!94211) bm!9429))

(assert (= (or bm!9415 b!94211) bm!9431))

(assert (= (and bm!9431 c!15708) b!94213))

(assert (= (and bm!9431 (not c!15708)) b!94227))

(assert (= (and d!24595 res!47699) b!94229))

(assert (= (and b!94229 c!15705) b!94199))

(assert (= (and b!94229 (not c!15705)) b!94228))

(assert (= (and b!94199 res!47708) b!94210))

(assert (= (or b!94210 b!94228) bm!9428))

(assert (= (or b!94199 b!94210 b!94228) bm!9420))

(assert (=> bm!9417 m!101363))

(assert (=> bm!9417 m!101361))

(declare-fun m!101455 () Bool)

(assert (=> bm!9417 m!101455))

(declare-fun m!101457 () Bool)

(assert (=> d!24595 m!101457))

(assert (=> d!24595 m!101399))

(declare-fun m!101459 () Bool)

(assert (=> b!94200 m!101459))

(assert (=> bm!9414 m!101363))

(declare-fun m!101461 () Bool)

(assert (=> bm!9414 m!101461))

(declare-fun m!101463 () Bool)

(assert (=> b!94224 m!101463))

(declare-fun m!101465 () Bool)

(assert (=> b!94212 m!101465))

(assert (=> b!94230 m!101361))

(declare-fun m!101467 () Bool)

(assert (=> b!94230 m!101467))

(declare-fun m!101469 () Bool)

(assert (=> bm!9425 m!101469))

(declare-fun m!101471 () Bool)

(assert (=> bm!9425 m!101471))

(declare-fun m!101473 () Bool)

(assert (=> bm!9429 m!101473))

(assert (=> b!94199 m!101363))

(declare-fun m!101475 () Bool)

(assert (=> b!94199 m!101475))

(declare-fun m!101477 () Bool)

(assert (=> b!94226 m!101477))

(assert (=> bm!9422 m!101363))

(declare-fun m!101479 () Bool)

(assert (=> bm!9422 m!101479))

(declare-fun m!101481 () Bool)

(assert (=> b!94197 m!101481))

(declare-fun m!101483 () Bool)

(assert (=> b!94210 m!101483))

(declare-fun m!101485 () Bool)

(assert (=> b!94211 m!101485))

(assert (=> b!94211 m!101469))

(assert (=> b!94211 m!101363))

(assert (=> b!94211 m!101361))

(declare-fun m!101487 () Bool)

(assert (=> b!94211 m!101487))

(declare-fun m!101489 () Bool)

(assert (=> b!94211 m!101489))

(declare-fun m!101491 () Bool)

(assert (=> b!94211 m!101491))

(assert (=> b!94211 m!101489))

(assert (=> bm!9428 m!101369))

(declare-fun m!101493 () Bool)

(assert (=> b!94219 m!101493))

(declare-fun m!101495 () Bool)

(assert (=> bm!9431 m!101495))

(assert (=> b!94227 m!101465))

(assert (=> bm!9413 m!101363))

(declare-fun m!101497 () Bool)

(assert (=> bm!9413 m!101497))

(assert (=> bm!9433 m!101363))

(declare-fun m!101499 () Bool)

(assert (=> bm!9433 m!101499))

(declare-fun m!101501 () Bool)

(assert (=> b!94206 m!101501))

(assert (=> b!94208 m!101363))

(declare-fun m!101503 () Bool)

(assert (=> b!94208 m!101503))

(assert (=> b!94223 m!101361))

(declare-fun m!101505 () Bool)

(assert (=> b!94223 m!101505))

(assert (=> bm!9421 m!101363))

(assert (=> bm!9421 m!101503))

(declare-fun m!101507 () Bool)

(assert (=> bm!9426 m!101507))

(declare-fun m!101509 () Bool)

(assert (=> bm!9420 m!101509))

(assert (=> b!94034 d!24595))

(declare-fun d!24597 () Bool)

(declare-fun c!15712 () Bool)

(assert (=> d!24597 (= c!15712 ((_ is ValueCellFull!963) (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun e!61527 () V!3131)

(assert (=> d!24597 (= (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61527)))

(declare-fun b!94235 () Bool)

(declare-fun get!1263 (ValueCell!963 V!3131) V!3131)

(assert (=> b!94235 (= e!61527 (get!1263 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94236 () Bool)

(declare-fun get!1264 (ValueCell!963 V!3131) V!3131)

(assert (=> b!94236 (= e!61527 (get!1264 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24597 c!15712) b!94235))

(assert (= (and d!24597 (not c!15712)) b!94236))

(assert (=> b!94235 m!101357))

(assert (=> b!94235 m!101359))

(declare-fun m!101511 () Bool)

(assert (=> b!94235 m!101511))

(assert (=> b!94236 m!101357))

(assert (=> b!94236 m!101359))

(declare-fun m!101513 () Bool)

(assert (=> b!94236 m!101513))

(assert (=> b!94034 d!24597))

(declare-fun d!24599 () Bool)

(declare-fun res!47719 () Bool)

(declare-fun e!61530 () Bool)

(assert (=> d!24599 (=> (not res!47719) (not e!61530))))

(declare-fun simpleValid!66 (LongMapFixedSize!834) Bool)

(assert (=> d!24599 (= res!47719 (simpleValid!66 newMap!16))))

(assert (=> d!24599 (= (valid!373 newMap!16) e!61530)))

(declare-fun b!94243 () Bool)

(declare-fun res!47720 () Bool)

(assert (=> b!94243 (=> (not res!47720) (not e!61530))))

(declare-fun arrayCountValidKeys!0 (array!4201 (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!94243 (= res!47720 (= (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (_size!466 newMap!16)))))

(declare-fun b!94244 () Bool)

(declare-fun res!47721 () Bool)

(assert (=> b!94244 (=> (not res!47721) (not e!61530))))

(declare-fun arrayForallSeekEntryOrOpenFound!0 ((_ BitVec 32) array!4201 (_ BitVec 32)) Bool)

(assert (=> b!94244 (= res!47721 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94245 () Bool)

(assert (=> b!94245 (= e!61530 (arrayNoDuplicates!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 Nil!1565))))

(assert (= (and d!24599 res!47719) b!94243))

(assert (= (and b!94243 res!47720) b!94244))

(assert (= (and b!94244 res!47721) b!94245))

(declare-fun m!101515 () Bool)

(assert (=> d!24599 m!101515))

(declare-fun m!101517 () Bool)

(assert (=> b!94243 m!101517))

(declare-fun m!101519 () Bool)

(assert (=> b!94244 m!101519))

(declare-fun m!101521 () Bool)

(assert (=> b!94245 m!101521))

(assert (=> b!94017 d!24599))

(declare-fun d!24601 () Bool)

(assert (=> d!24601 (= (map!1243 newMap!16) (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bs!3869 () Bool)

(assert (= bs!3869 d!24601))

(assert (=> bs!3869 m!101465))

(assert (=> b!94033 d!24601))

(declare-fun b!94289 () Bool)

(declare-fun e!61557 () Bool)

(declare-fun lt!46762 () ListLongMap!1521)

(declare-fun apply!90 (ListLongMap!1521 (_ BitVec 64)) V!3131)

(assert (=> b!94289 (= e!61557 (= (apply!90 lt!46762 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun e!61561 () Bool)

(declare-fun b!94290 () Bool)

(assert (=> b!94290 (= e!61561 (= (apply!90 lt!46762 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94290 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> b!94290 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94291 () Bool)

(declare-fun e!61567 () Bool)

(declare-fun validKeyInArray!0 ((_ BitVec 64)) Bool)

(assert (=> b!94291 (= e!61567 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94292 () Bool)

(declare-fun e!61562 () Bool)

(declare-fun e!61558 () Bool)

(assert (=> b!94292 (= e!61562 e!61558)))

(declare-fun res!47741 () Bool)

(declare-fun call!9454 () Bool)

(assert (=> b!94292 (= res!47741 call!9454)))

(assert (=> b!94292 (=> (not res!47741) (not e!61558))))

(declare-fun bm!9450 () Bool)

(declare-fun call!9456 () Bool)

(assert (=> bm!9450 (= call!9456 (contains!789 lt!46762 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94293 () Bool)

(assert (=> b!94293 (= e!61558 (= (apply!90 lt!46762 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94294 () Bool)

(declare-fun e!61565 () Bool)

(assert (=> b!94294 (= e!61565 e!61561)))

(declare-fun res!47748 () Bool)

(assert (=> b!94294 (=> (not res!47748) (not e!61561))))

(assert (=> b!94294 (= res!47748 (contains!789 lt!46762 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94294 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94295 () Bool)

(declare-fun e!61560 () Bool)

(declare-fun e!61563 () Bool)

(assert (=> b!94295 (= e!61560 e!61563)))

(declare-fun c!15730 () Bool)

(assert (=> b!94295 (= c!15730 (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94296 () Bool)

(assert (=> b!94296 (= e!61562 (not call!9454))))

(declare-fun b!94297 () Bool)

(declare-fun e!61559 () Unit!2798)

(declare-fun Unit!2809 () Unit!2798)

(assert (=> b!94297 (= e!61559 Unit!2809)))

(declare-fun b!94298 () Bool)

(assert (=> b!94298 (= e!61563 (not call!9456))))

(declare-fun b!94288 () Bool)

(declare-fun e!61566 () ListLongMap!1521)

(declare-fun call!9457 () ListLongMap!1521)

(assert (=> b!94288 (= e!61566 (+!133 call!9457 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun d!24603 () Bool)

(assert (=> d!24603 e!61560))

(declare-fun res!47743 () Bool)

(assert (=> d!24603 (=> (not res!47743) (not e!61560))))

(assert (=> d!24603 (= res!47743 (or (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))) (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun lt!46763 () ListLongMap!1521)

(assert (=> d!24603 (= lt!46762 lt!46763)))

(declare-fun lt!46761 () Unit!2798)

(assert (=> d!24603 (= lt!46761 e!61559)))

(declare-fun c!15728 () Bool)

(assert (=> d!24603 (= c!15728 e!61567)))

(declare-fun res!47740 () Bool)

(assert (=> d!24603 (=> (not res!47740) (not e!61567))))

(assert (=> d!24603 (= res!47740 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!24603 (= lt!46763 e!61566)))

(declare-fun c!15729 () Bool)

(assert (=> d!24603 (= c!15729 (and (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24603 (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992))))))

(assert (=> d!24603 (= (getCurrentListMap!468 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) lt!46762)))

(declare-fun b!94299 () Bool)

(declare-fun e!61569 () ListLongMap!1521)

(declare-fun call!9453 () ListLongMap!1521)

(assert (=> b!94299 (= e!61569 call!9453)))

(declare-fun b!94300 () Bool)

(declare-fun e!61568 () Bool)

(assert (=> b!94300 (= e!61568 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94301 () Bool)

(declare-fun e!61564 () ListLongMap!1521)

(declare-fun call!9455 () ListLongMap!1521)

(assert (=> b!94301 (= e!61564 call!9455)))

(declare-fun b!94302 () Bool)

(declare-fun res!47746 () Bool)

(assert (=> b!94302 (=> (not res!47746) (not e!61560))))

(assert (=> b!94302 (= res!47746 e!61565)))

(declare-fun res!47747 () Bool)

(assert (=> b!94302 (=> res!47747 e!61565)))

(assert (=> b!94302 (= res!47747 (not e!61568))))

(declare-fun res!47745 () Bool)

(assert (=> b!94302 (=> (not res!47745) (not e!61568))))

(assert (=> b!94302 (= res!47745 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94303 () Bool)

(declare-fun lt!46751 () Unit!2798)

(assert (=> b!94303 (= e!61559 lt!46751)))

(declare-fun lt!46758 () ListLongMap!1521)

(declare-fun getCurrentListMapNoExtraKeys!98 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) ListLongMap!1521)

(assert (=> b!94303 (= lt!46758 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun lt!46749 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46749 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46757 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46757 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46755 () Unit!2798)

(declare-fun addStillContains!66 (ListLongMap!1521 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2798)

(assert (=> b!94303 (= lt!46755 (addStillContains!66 lt!46758 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46757))))

(assert (=> b!94303 (contains!789 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46757)))

(declare-fun lt!46745 () Unit!2798)

(assert (=> b!94303 (= lt!46745 lt!46755)))

(declare-fun lt!46750 () ListLongMap!1521)

(assert (=> b!94303 (= lt!46750 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun lt!46756 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46756 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46744 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46744 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46760 () Unit!2798)

(declare-fun addApplyDifferent!66 (ListLongMap!1521 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2798)

(assert (=> b!94303 (= lt!46760 (addApplyDifferent!66 lt!46750 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46744))))

(assert (=> b!94303 (= (apply!90 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46744) (apply!90 lt!46750 lt!46744))))

(declare-fun lt!46753 () Unit!2798)

(assert (=> b!94303 (= lt!46753 lt!46760)))

(declare-fun lt!46754 () ListLongMap!1521)

(assert (=> b!94303 (= lt!46754 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun lt!46746 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46746 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46759 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46759 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46747 () Unit!2798)

(assert (=> b!94303 (= lt!46747 (addApplyDifferent!66 lt!46754 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46759))))

(assert (=> b!94303 (= (apply!90 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46759) (apply!90 lt!46754 lt!46759))))

(declare-fun lt!46743 () Unit!2798)

(assert (=> b!94303 (= lt!46743 lt!46747)))

(declare-fun lt!46752 () ListLongMap!1521)

(assert (=> b!94303 (= lt!46752 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun lt!46748 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46748 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46742 () (_ BitVec 64))

(assert (=> b!94303 (= lt!46742 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!94303 (= lt!46751 (addApplyDifferent!66 lt!46752 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46742))))

(assert (=> b!94303 (= (apply!90 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46742) (apply!90 lt!46752 lt!46742))))

(declare-fun b!94304 () Bool)

(declare-fun c!15727 () Bool)

(assert (=> b!94304 (= c!15727 (and (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94304 (= e!61564 e!61569)))

(declare-fun bm!9451 () Bool)

(assert (=> bm!9451 (= call!9454 (contains!789 lt!46762 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94305 () Bool)

(assert (=> b!94305 (= e!61569 call!9455)))

(declare-fun bm!9452 () Bool)

(declare-fun c!15726 () Bool)

(declare-fun call!9459 () ListLongMap!1521)

(declare-fun call!9458 () ListLongMap!1521)

(assert (=> bm!9452 (= call!9457 (+!133 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun bm!9453 () Bool)

(assert (=> bm!9453 (= call!9458 call!9459)))

(declare-fun b!94306 () Bool)

(declare-fun res!47742 () Bool)

(assert (=> b!94306 (=> (not res!47742) (not e!61560))))

(assert (=> b!94306 (= res!47742 e!61562)))

(declare-fun c!15725 () Bool)

(assert (=> b!94306 (= c!15725 (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9454 () Bool)

(assert (=> bm!9454 (= call!9459 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun bm!9455 () Bool)

(assert (=> bm!9455 (= call!9453 call!9458)))

(declare-fun b!94307 () Bool)

(assert (=> b!94307 (= e!61566 e!61564)))

(assert (=> b!94307 (= c!15726 (and (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94308 () Bool)

(assert (=> b!94308 (= e!61563 e!61557)))

(declare-fun res!47744 () Bool)

(assert (=> b!94308 (= res!47744 call!9456)))

(assert (=> b!94308 (=> (not res!47744) (not e!61557))))

(declare-fun bm!9456 () Bool)

(assert (=> bm!9456 (= call!9455 call!9457)))

(assert (= (and d!24603 c!15729) b!94288))

(assert (= (and d!24603 (not c!15729)) b!94307))

(assert (= (and b!94307 c!15726) b!94301))

(assert (= (and b!94307 (not c!15726)) b!94304))

(assert (= (and b!94304 c!15727) b!94305))

(assert (= (and b!94304 (not c!15727)) b!94299))

(assert (= (or b!94305 b!94299) bm!9455))

(assert (= (or b!94301 bm!9455) bm!9453))

(assert (= (or b!94301 b!94305) bm!9456))

(assert (= (or b!94288 bm!9453) bm!9454))

(assert (= (or b!94288 bm!9456) bm!9452))

(assert (= (and d!24603 res!47740) b!94291))

(assert (= (and d!24603 c!15728) b!94303))

(assert (= (and d!24603 (not c!15728)) b!94297))

(assert (= (and d!24603 res!47743) b!94302))

(assert (= (and b!94302 res!47745) b!94300))

(assert (= (and b!94302 (not res!47747)) b!94294))

(assert (= (and b!94294 res!47748) b!94290))

(assert (= (and b!94302 res!47746) b!94306))

(assert (= (and b!94306 c!15725) b!94292))

(assert (= (and b!94306 (not c!15725)) b!94296))

(assert (= (and b!94292 res!47741) b!94293))

(assert (= (or b!94292 b!94296) bm!9451))

(assert (= (and b!94306 res!47742) b!94295))

(assert (= (and b!94295 c!15730) b!94308))

(assert (= (and b!94295 (not c!15730)) b!94298))

(assert (= (and b!94308 res!47744) b!94289))

(assert (= (or b!94308 b!94298) bm!9450))

(declare-fun b_lambda!4149 () Bool)

(assert (=> (not b_lambda!4149) (not b!94290)))

(assert (=> b!94290 t!5467))

(declare-fun b_and!5755 () Bool)

(assert (= b_and!5743 (and (=> t!5467 result!3187) b_and!5755)))

(assert (=> b!94290 t!5469))

(declare-fun b_and!5757 () Bool)

(assert (= b_and!5745 (and (=> t!5469 result!3191) b_and!5757)))

(declare-fun m!101523 () Bool)

(assert (=> b!94288 m!101523))

(assert (=> d!24603 m!101373))

(declare-fun m!101525 () Bool)

(assert (=> b!94289 m!101525))

(declare-fun m!101527 () Bool)

(assert (=> b!94293 m!101527))

(declare-fun m!101529 () Bool)

(assert (=> bm!9452 m!101529))

(declare-fun m!101531 () Bool)

(assert (=> bm!9454 m!101531))

(declare-fun m!101533 () Bool)

(assert (=> b!94294 m!101533))

(assert (=> b!94294 m!101533))

(declare-fun m!101535 () Bool)

(assert (=> b!94294 m!101535))

(declare-fun m!101537 () Bool)

(assert (=> bm!9450 m!101537))

(assert (=> b!94291 m!101533))

(assert (=> b!94291 m!101533))

(declare-fun m!101539 () Bool)

(assert (=> b!94291 m!101539))

(assert (=> b!94290 m!101533))

(assert (=> b!94290 m!101359))

(declare-fun m!101541 () Bool)

(assert (=> b!94290 m!101541))

(assert (=> b!94290 m!101541))

(assert (=> b!94290 m!101359))

(declare-fun m!101543 () Bool)

(assert (=> b!94290 m!101543))

(assert (=> b!94290 m!101533))

(declare-fun m!101545 () Bool)

(assert (=> b!94290 m!101545))

(assert (=> b!94300 m!101533))

(assert (=> b!94300 m!101533))

(assert (=> b!94300 m!101539))

(declare-fun m!101547 () Bool)

(assert (=> b!94303 m!101547))

(assert (=> b!94303 m!101533))

(declare-fun m!101549 () Bool)

(assert (=> b!94303 m!101549))

(declare-fun m!101551 () Bool)

(assert (=> b!94303 m!101551))

(declare-fun m!101553 () Bool)

(assert (=> b!94303 m!101553))

(declare-fun m!101555 () Bool)

(assert (=> b!94303 m!101555))

(assert (=> b!94303 m!101553))

(declare-fun m!101557 () Bool)

(assert (=> b!94303 m!101557))

(declare-fun m!101559 () Bool)

(assert (=> b!94303 m!101559))

(declare-fun m!101561 () Bool)

(assert (=> b!94303 m!101561))

(declare-fun m!101563 () Bool)

(assert (=> b!94303 m!101563))

(declare-fun m!101565 () Bool)

(assert (=> b!94303 m!101565))

(assert (=> b!94303 m!101547))

(declare-fun m!101567 () Bool)

(assert (=> b!94303 m!101567))

(declare-fun m!101569 () Bool)

(assert (=> b!94303 m!101569))

(declare-fun m!101571 () Bool)

(assert (=> b!94303 m!101571))

(assert (=> b!94303 m!101563))

(declare-fun m!101573 () Bool)

(assert (=> b!94303 m!101573))

(assert (=> b!94303 m!101531))

(declare-fun m!101575 () Bool)

(assert (=> b!94303 m!101575))

(assert (=> b!94303 m!101569))

(declare-fun m!101577 () Bool)

(assert (=> bm!9451 m!101577))

(assert (=> b!94033 d!24603))

(declare-fun d!24605 () Bool)

(assert (=> d!24605 (= (array_inv!1243 (_keys!4118 newMap!16)) (bvsge (size!2245 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94030 d!24605))

(declare-fun d!24607 () Bool)

(assert (=> d!24607 (= (array_inv!1244 (_values!2419 newMap!16)) (bvsge (size!2246 (_values!2419 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94030 d!24607))

(declare-fun d!24609 () Bool)

(assert (=> d!24609 (= (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992)))) (and (or (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000001111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000011111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000001111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000011111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000001111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000011111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000001111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000011111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000001111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000011111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000001111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000011111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000001111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000011111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000111111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000001111111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000011111111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000111111111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00001111111111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00011111111111111111111111111111) (= (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00111111111111111111111111111111)) (bvsle (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00111111111111111111111111111111)))))

(assert (=> b!94025 d!24609))

(declare-fun d!24611 () Bool)

(assert (=> d!24611 (not (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun lt!46766 () Unit!2798)

(declare-fun choose!68 (array!4201 (_ BitVec 32) (_ BitVec 64) List!1568) Unit!2798)

(assert (=> d!24611 (= lt!46766 (choose!68 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565)))))

(assert (=> d!24611 (bvslt (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24611 (= (lemmaArrayNoDuplicateFromNotContainsKeysInAcc!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565)) lt!46766)))

(declare-fun bs!3870 () Bool)

(assert (= bs!3870 d!24611))

(assert (=> bs!3870 m!101363))

(assert (=> bs!3870 m!101389))

(assert (=> bs!3870 m!101363))

(declare-fun m!101579 () Bool)

(assert (=> bs!3870 m!101579))

(assert (=> b!94028 d!24611))

(declare-fun d!24613 () Bool)

(assert (=> d!24613 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) from!355 Nil!1565)))

(declare-fun lt!46769 () Unit!2798)

(declare-fun choose!39 (array!4201 (_ BitVec 32) (_ BitVec 32)) Unit!2798)

(assert (=> d!24613 (= lt!46769 (choose!39 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 from!355))))

(assert (=> d!24613 (bvslt (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b01111111111111111111111111111111)))

(assert (=> d!24613 (= (lemmaNoDuplicateFromThenFromBigger!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 from!355) lt!46769)))

(declare-fun bs!3871 () Bool)

(assert (= bs!3871 d!24613))

(assert (=> bs!3871 m!101385))

(declare-fun m!101581 () Bool)

(assert (=> bs!3871 m!101581))

(assert (=> b!94028 d!24613))

(declare-fun d!24615 () Bool)

(declare-fun res!47753 () Bool)

(declare-fun e!61574 () Bool)

(assert (=> d!24615 (=> res!47753 e!61574)))

(assert (=> d!24615 (= res!47753 (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24615 (= (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)) e!61574)))

(declare-fun b!94313 () Bool)

(declare-fun e!61575 () Bool)

(assert (=> b!94313 (= e!61574 e!61575)))

(declare-fun res!47754 () Bool)

(assert (=> b!94313 (=> (not res!47754) (not e!61575))))

(assert (=> b!94313 (= res!47754 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94314 () Bool)

(assert (=> b!94314 (= e!61575 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (= (and d!24615 (not res!47753)) b!94313))

(assert (= (and b!94313 res!47754) b!94314))

(assert (=> d!24615 m!101533))

(assert (=> b!94314 m!101363))

(declare-fun m!101583 () Bool)

(assert (=> b!94314 m!101583))

(assert (=> b!94028 d!24615))

(declare-fun d!24617 () Bool)

(declare-fun e!61578 () Bool)

(assert (=> d!24617 e!61578))

(declare-fun c!15733 () Bool)

(assert (=> d!24617 (= c!15733 (and (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun lt!46772 () Unit!2798)

(declare-fun choose!559 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2798)

(assert (=> d!24617 (= lt!46772 (choose!559 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(assert (=> d!24617 (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992))))))

(assert (=> d!24617 (= (lemmaListMapContainsThenArrayContainsFrom!84 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) lt!46772)))

(declare-fun b!94319 () Bool)

(assert (=> b!94319 (= e!61578 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94320 () Bool)

(assert (=> b!94320 (= e!61578 (ite (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24617 c!15733) b!94319))

(assert (= (and d!24617 (not c!15733)) b!94320))

(assert (=> d!24617 m!101363))

(declare-fun m!101585 () Bool)

(assert (=> d!24617 m!101585))

(assert (=> d!24617 m!101373))

(assert (=> b!94319 m!101363))

(assert (=> b!94319 m!101389))

(assert (=> b!94028 d!24617))

(declare-fun b!94331 () Bool)

(declare-fun e!61590 () Bool)

(declare-fun e!61589 () Bool)

(assert (=> b!94331 (= e!61590 e!61589)))

(declare-fun c!15736 () Bool)

(assert (=> b!94331 (= c!15736 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94332 () Bool)

(declare-fun call!9462 () Bool)

(assert (=> b!94332 (= e!61589 call!9462)))

(declare-fun b!94333 () Bool)

(assert (=> b!94333 (= e!61589 call!9462)))

(declare-fun bm!9459 () Bool)

(assert (=> bm!9459 (= call!9462 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)))))

(declare-fun b!94334 () Bool)

(declare-fun e!61588 () Bool)

(assert (=> b!94334 (= e!61588 e!61590)))

(declare-fun res!47763 () Bool)

(assert (=> b!94334 (=> (not res!47763) (not e!61590))))

(declare-fun e!61587 () Bool)

(assert (=> b!94334 (= res!47763 (not e!61587))))

(declare-fun res!47761 () Bool)

(assert (=> b!94334 (=> (not res!47761) (not e!61587))))

(assert (=> b!94334 (= res!47761 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94335 () Bool)

(declare-fun contains!791 (List!1568 (_ BitVec 64)) Bool)

(assert (=> b!94335 (= e!61587 (contains!791 Nil!1565 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun d!24619 () Bool)

(declare-fun res!47762 () Bool)

(assert (=> d!24619 (=> res!47762 e!61588)))

(assert (=> d!24619 (= res!47762 (bvsge from!355 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!24619 (= (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) from!355 Nil!1565) e!61588)))

(assert (= (and d!24619 (not res!47762)) b!94334))

(assert (= (and b!94334 res!47761) b!94335))

(assert (= (and b!94334 res!47763) b!94331))

(assert (= (and b!94331 c!15736) b!94332))

(assert (= (and b!94331 (not c!15736)) b!94333))

(assert (= (or b!94332 b!94333) bm!9459))

(assert (=> b!94331 m!101363))

(assert (=> b!94331 m!101363))

(declare-fun m!101587 () Bool)

(assert (=> b!94331 m!101587))

(assert (=> bm!9459 m!101363))

(declare-fun m!101589 () Bool)

(assert (=> bm!9459 m!101589))

(assert (=> b!94334 m!101363))

(assert (=> b!94334 m!101363))

(assert (=> b!94334 m!101587))

(assert (=> b!94335 m!101363))

(assert (=> b!94335 m!101363))

(declare-fun m!101591 () Bool)

(assert (=> b!94335 m!101591))

(assert (=> b!94028 d!24619))

(declare-fun b!94343 () Bool)

(declare-fun e!61595 () Bool)

(assert (=> b!94343 (= e!61595 tp_is_empty!2613)))

(declare-fun b!94342 () Bool)

(declare-fun e!61596 () Bool)

(assert (=> b!94342 (= e!61596 tp_is_empty!2613)))

(declare-fun mapNonEmpty!3685 () Bool)

(declare-fun mapRes!3685 () Bool)

(declare-fun tp!9463 () Bool)

(assert (=> mapNonEmpty!3685 (= mapRes!3685 (and tp!9463 e!61596))))

(declare-fun mapKey!3685 () (_ BitVec 32))

(declare-fun mapRest!3685 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3685 () ValueCell!963)

(assert (=> mapNonEmpty!3685 (= mapRest!3676 (store mapRest!3685 mapKey!3685 mapValue!3685))))

(declare-fun condMapEmpty!3685 () Bool)

(declare-fun mapDefault!3685 () ValueCell!963)

(assert (=> mapNonEmpty!3675 (= condMapEmpty!3685 (= mapRest!3676 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3685)))))

(assert (=> mapNonEmpty!3675 (= tp!9447 (and e!61595 mapRes!3685))))

(declare-fun mapIsEmpty!3685 () Bool)

(assert (=> mapIsEmpty!3685 mapRes!3685))

(assert (= (and mapNonEmpty!3675 condMapEmpty!3685) mapIsEmpty!3685))

(assert (= (and mapNonEmpty!3675 (not condMapEmpty!3685)) mapNonEmpty!3685))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!963) mapValue!3685)) b!94342))

(assert (= (and mapNonEmpty!3675 ((_ is ValueCellFull!963) mapDefault!3685)) b!94343))

(declare-fun m!101593 () Bool)

(assert (=> mapNonEmpty!3685 m!101593))

(declare-fun b!94345 () Bool)

(declare-fun e!61597 () Bool)

(assert (=> b!94345 (= e!61597 tp_is_empty!2613)))

(declare-fun b!94344 () Bool)

(declare-fun e!61598 () Bool)

(assert (=> b!94344 (= e!61598 tp_is_empty!2613)))

(declare-fun mapNonEmpty!3686 () Bool)

(declare-fun mapRes!3686 () Bool)

(declare-fun tp!9464 () Bool)

(assert (=> mapNonEmpty!3686 (= mapRes!3686 (and tp!9464 e!61598))))

(declare-fun mapKey!3686 () (_ BitVec 32))

(declare-fun mapValue!3686 () ValueCell!963)

(declare-fun mapRest!3686 () (Array (_ BitVec 32) ValueCell!963))

(assert (=> mapNonEmpty!3686 (= mapRest!3675 (store mapRest!3686 mapKey!3686 mapValue!3686))))

(declare-fun condMapEmpty!3686 () Bool)

(declare-fun mapDefault!3686 () ValueCell!963)

(assert (=> mapNonEmpty!3676 (= condMapEmpty!3686 (= mapRest!3675 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3686)))))

(assert (=> mapNonEmpty!3676 (= tp!9448 (and e!61597 mapRes!3686))))

(declare-fun mapIsEmpty!3686 () Bool)

(assert (=> mapIsEmpty!3686 mapRes!3686))

(assert (= (and mapNonEmpty!3676 condMapEmpty!3686) mapIsEmpty!3686))

(assert (= (and mapNonEmpty!3676 (not condMapEmpty!3686)) mapNonEmpty!3686))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!963) mapValue!3686)) b!94344))

(assert (= (and mapNonEmpty!3676 ((_ is ValueCellFull!963) mapDefault!3686)) b!94345))

(declare-fun m!101595 () Bool)

(assert (=> mapNonEmpty!3686 m!101595))

(declare-fun b_lambda!4151 () Bool)

(assert (= b_lambda!4149 (or (and b!94027 b_free!2393) (and b!94030 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))) b_lambda!4151)))

(check-sat (not bm!9452) (not b!94102) (not b!94230) (not b!94223) (not b!94319) (not d!24587) (not bm!9421) (not b!94236) (not d!24595) (not d!24603) (not b!94208) tp_is_empty!2613 (not mapNonEmpty!3686) (not b!94212) (not b!94211) (not b!94303) (not b!94199) (not b!94244) (not b_lambda!4151) (not d!24613) (not d!24599) (not b!94227) (not b!94314) (not b!94334) b_and!5755 (not b_next!2393) (not b_next!2395) (not d!24593) (not d!24601) (not bm!9413) (not bm!9414) (not b!94294) (not bm!9451) (not bm!9426) (not b!94293) (not d!24617) (not b!94291) (not bm!9431) (not bm!9428) (not bm!9425) (not bm!9422) (not bm!9450) (not b_lambda!4147) (not b!94335) (not d!24611) (not b!94331) b_and!5757 (not bm!9417) (not b!94210) (not b!94245) (not b!94235) (not b!94289) (not b!94288) (not bm!9433) (not b!94243) (not b!94300) (not mapNonEmpty!3685) (not bm!9420) (not bm!9429) (not bm!9454) (not b!94290) (not b!94104) (not bm!9459))
(check-sat b_and!5755 b_and!5757 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun b!94362 () Bool)

(declare-fun lt!46778 () SeekEntryResult!251)

(assert (=> b!94362 (and (bvsge (index!3145 lt!46778) #b00000000000000000000000000000000) (bvslt (index!3145 lt!46778) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun res!47772 () Bool)

(assert (=> b!94362 (= res!47772 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!46778)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!61609 () Bool)

(assert (=> b!94362 (=> (not res!47772) (not e!61609))))

(declare-fun b!94363 () Bool)

(declare-fun e!61607 () Bool)

(declare-fun call!9467 () Bool)

(assert (=> b!94363 (= e!61607 (not call!9467))))

(declare-fun b!94364 () Bool)

(declare-fun res!47775 () Bool)

(assert (=> b!94364 (=> (not res!47775) (not e!61607))))

(declare-fun call!9468 () Bool)

(assert (=> b!94364 (= res!47775 call!9468)))

(declare-fun e!61608 () Bool)

(assert (=> b!94364 (= e!61608 e!61607)))

(declare-fun b!94365 () Bool)

(declare-fun e!61610 () Bool)

(assert (=> b!94365 (= e!61610 e!61608)))

(declare-fun c!15742 () Bool)

(assert (=> b!94365 (= c!15742 ((_ is MissingVacant!251) lt!46778))))

(declare-fun b!94366 () Bool)

(declare-fun res!47774 () Bool)

(assert (=> b!94366 (=> (not res!47774) (not e!61607))))

(assert (=> b!94366 (= res!47774 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!46778)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94366 (and (bvsge (index!3148 lt!46778) #b00000000000000000000000000000000) (bvslt (index!3148 lt!46778) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun d!24621 () Bool)

(assert (=> d!24621 e!61610))

(declare-fun c!15741 () Bool)

(assert (=> d!24621 (= c!15741 ((_ is MissingZero!251) lt!46778))))

(assert (=> d!24621 (= lt!46778 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun lt!46777 () Unit!2798)

(declare-fun choose!560 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2798)

(assert (=> d!24621 (= lt!46777 (choose!560 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24621 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24621 (= (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) lt!46777)))

(declare-fun b!94367 () Bool)

(assert (=> b!94367 (= e!61609 (not call!9467))))

(declare-fun bm!9464 () Bool)

(assert (=> bm!9464 (= call!9467 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun bm!9465 () Bool)

(assert (=> bm!9465 (= call!9468 (inRange!0 (ite c!15741 (index!3145 lt!46778) (index!3148 lt!46778)) (mask!6511 newMap!16)))))

(declare-fun b!94368 () Bool)

(assert (=> b!94368 (= e!61608 ((_ is Undefined!251) lt!46778))))

(declare-fun b!94369 () Bool)

(assert (=> b!94369 (= e!61610 e!61609)))

(declare-fun res!47773 () Bool)

(assert (=> b!94369 (= res!47773 call!9468)))

(assert (=> b!94369 (=> (not res!47773) (not e!61609))))

(assert (= (and d!24621 c!15741) b!94369))

(assert (= (and d!24621 (not c!15741)) b!94365))

(assert (= (and b!94369 res!47773) b!94362))

(assert (= (and b!94362 res!47772) b!94367))

(assert (= (and b!94365 c!15742) b!94364))

(assert (= (and b!94365 (not c!15742)) b!94368))

(assert (= (and b!94364 res!47775) b!94366))

(assert (= (and b!94366 res!47774) b!94363))

(assert (= (or b!94369 b!94364) bm!9465))

(assert (= (or b!94367 b!94363) bm!9464))

(declare-fun m!101597 () Bool)

(assert (=> b!94362 m!101597))

(declare-fun m!101599 () Bool)

(assert (=> bm!9465 m!101599))

(assert (=> d!24621 m!101363))

(assert (=> d!24621 m!101503))

(assert (=> d!24621 m!101363))

(declare-fun m!101601 () Bool)

(assert (=> d!24621 m!101601))

(declare-fun m!101603 () Bool)

(assert (=> d!24621 m!101603))

(declare-fun m!101605 () Bool)

(assert (=> b!94366 m!101605))

(assert (=> bm!9464 m!101363))

(assert (=> bm!9464 m!101461))

(assert (=> bm!9413 d!24621))

(declare-fun d!24623 () Bool)

(declare-fun e!61612 () Bool)

(assert (=> d!24623 e!61612))

(declare-fun res!47776 () Bool)

(assert (=> d!24623 (=> res!47776 e!61612)))

(declare-fun lt!46782 () Bool)

(assert (=> d!24623 (= res!47776 (not lt!46782))))

(declare-fun lt!46779 () Bool)

(assert (=> d!24623 (= lt!46782 lt!46779)))

(declare-fun lt!46781 () Unit!2798)

(declare-fun e!61611 () Unit!2798)

(assert (=> d!24623 (= lt!46781 e!61611)))

(declare-fun c!15743 () Bool)

(assert (=> d!24623 (= c!15743 lt!46779)))

(assert (=> d!24623 (= lt!46779 (containsKey!152 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24623 (= (contains!789 lt!46762 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!46782)))

(declare-fun b!94370 () Bool)

(declare-fun lt!46780 () Unit!2798)

(assert (=> b!94370 (= e!61611 lt!46780)))

(assert (=> b!94370 (= lt!46780 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94370 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94371 () Bool)

(declare-fun Unit!2810 () Unit!2798)

(assert (=> b!94371 (= e!61611 Unit!2810)))

(declare-fun b!94372 () Bool)

(assert (=> b!94372 (= e!61612 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24623 c!15743) b!94370))

(assert (= (and d!24623 (not c!15743)) b!94371))

(assert (= (and d!24623 (not res!47776)) b!94372))

(assert (=> d!24623 m!101533))

(declare-fun m!101607 () Bool)

(assert (=> d!24623 m!101607))

(assert (=> b!94370 m!101533))

(declare-fun m!101609 () Bool)

(assert (=> b!94370 m!101609))

(assert (=> b!94370 m!101533))

(declare-fun m!101611 () Bool)

(assert (=> b!94370 m!101611))

(assert (=> b!94370 m!101611))

(declare-fun m!101613 () Bool)

(assert (=> b!94370 m!101613))

(assert (=> b!94372 m!101533))

(assert (=> b!94372 m!101611))

(assert (=> b!94372 m!101611))

(assert (=> b!94372 m!101613))

(assert (=> b!94294 d!24623))

(assert (=> bm!9428 d!24601))

(assert (=> d!24613 d!24619))

(declare-fun d!24625 () Bool)

(assert (=> d!24625 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) from!355 Nil!1565)))

(assert (=> d!24625 true))

(declare-fun _$71!126 () Unit!2798)

(assert (=> d!24625 (= (choose!39 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 from!355) _$71!126)))

(declare-fun bs!3872 () Bool)

(assert (= bs!3872 d!24625))

(assert (=> bs!3872 m!101385))

(assert (=> d!24613 d!24625))

(declare-fun d!24627 () Bool)

(assert (=> d!24627 (= (map!1243 (_2!1167 lt!46697)) (getCurrentListMap!468 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))))))

(declare-fun bs!3873 () Bool)

(assert (= bs!3873 d!24627))

(declare-fun m!101615 () Bool)

(assert (=> bs!3873 m!101615))

(assert (=> bm!9420 d!24627))

(assert (=> b!94319 d!24615))

(declare-fun d!24629 () Bool)

(declare-fun res!47777 () Bool)

(declare-fun e!61613 () Bool)

(assert (=> d!24629 (=> (not res!47777) (not e!61613))))

(assert (=> d!24629 (= res!47777 (simpleValid!66 (_2!1167 lt!46697)))))

(assert (=> d!24629 (= (valid!373 (_2!1167 lt!46697)) e!61613)))

(declare-fun b!94373 () Bool)

(declare-fun res!47778 () Bool)

(assert (=> b!94373 (=> (not res!47778) (not e!61613))))

(assert (=> b!94373 (= res!47778 (= (arrayCountValidKeys!0 (_keys!4118 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))) (_size!466 (_2!1167 lt!46697))))))

(declare-fun b!94374 () Bool)

(declare-fun res!47779 () Bool)

(assert (=> b!94374 (=> (not res!47779) (not e!61613))))

(assert (=> b!94374 (= res!47779 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697))))))

(declare-fun b!94375 () Bool)

(assert (=> b!94375 (= e!61613 (arrayNoDuplicates!0 (_keys!4118 (_2!1167 lt!46697)) #b00000000000000000000000000000000 Nil!1565))))

(assert (= (and d!24629 res!47777) b!94373))

(assert (= (and b!94373 res!47778) b!94374))

(assert (= (and b!94374 res!47779) b!94375))

(declare-fun m!101617 () Bool)

(assert (=> d!24629 m!101617))

(declare-fun m!101619 () Bool)

(assert (=> b!94373 m!101619))

(declare-fun m!101621 () Bool)

(assert (=> b!94374 m!101621))

(declare-fun m!101623 () Bool)

(assert (=> b!94375 m!101623))

(assert (=> d!24595 d!24629))

(assert (=> d!24595 d!24599))

(declare-fun d!24631 () Bool)

(declare-fun res!47780 () Bool)

(declare-fun e!61614 () Bool)

(assert (=> d!24631 (=> (not res!47780) (not e!61614))))

(assert (=> d!24631 (= res!47780 (simpleValid!66 (v!2762 (underlying!328 thiss!992))))))

(assert (=> d!24631 (= (valid!373 (v!2762 (underlying!328 thiss!992))) e!61614)))

(declare-fun b!94376 () Bool)

(declare-fun res!47781 () Bool)

(assert (=> b!94376 (=> (not res!47781) (not e!61614))))

(assert (=> b!94376 (= res!47781 (= (arrayCountValidKeys!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))) (_size!466 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94377 () Bool)

(declare-fun res!47782 () Bool)

(assert (=> b!94377 (=> (not res!47782) (not e!61614))))

(assert (=> b!94377 (= res!47782 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94378 () Bool)

(assert (=> b!94378 (= e!61614 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 Nil!1565))))

(assert (= (and d!24631 res!47780) b!94376))

(assert (= (and b!94376 res!47781) b!94377))

(assert (= (and b!94377 res!47782) b!94378))

(declare-fun m!101625 () Bool)

(assert (=> d!24631 m!101625))

(declare-fun m!101627 () Bool)

(assert (=> b!94376 m!101627))

(declare-fun m!101629 () Bool)

(assert (=> b!94377 m!101629))

(declare-fun m!101631 () Bool)

(assert (=> b!94378 m!101631))

(assert (=> d!24587 d!24631))

(declare-fun lt!46789 () SeekEntryResult!251)

(declare-fun d!24633 () Bool)

(assert (=> d!24633 (and (or ((_ is Undefined!251) lt!46789) (not ((_ is Found!251) lt!46789)) (and (bvsge (index!3146 lt!46789) #b00000000000000000000000000000000) (bvslt (index!3146 lt!46789) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!46789) ((_ is Found!251) lt!46789) (not ((_ is MissingZero!251) lt!46789)) (and (bvsge (index!3145 lt!46789) #b00000000000000000000000000000000) (bvslt (index!3145 lt!46789) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!46789) ((_ is Found!251) lt!46789) ((_ is MissingZero!251) lt!46789) (not ((_ is MissingVacant!251) lt!46789)) (and (bvsge (index!3148 lt!46789) #b00000000000000000000000000000000) (bvslt (index!3148 lt!46789) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!46789) (ite ((_ is Found!251) lt!46789) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46789)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite ((_ is MissingZero!251) lt!46789) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!46789)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!251) lt!46789) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!46789)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!61623 () SeekEntryResult!251)

(assert (=> d!24633 (= lt!46789 e!61623)))

(declare-fun c!15750 () Bool)

(declare-fun lt!46790 () SeekEntryResult!251)

(assert (=> d!24633 (= c!15750 (and ((_ is Intermediate!251) lt!46790) (undefined!1063 lt!46790)))))

(declare-fun seekKeyOrZeroOrLongMinValue!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4201 (_ BitVec 32)) SeekEntryResult!251)

(declare-fun toIndex!0 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))

(assert (=> d!24633 (= lt!46790 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!24633 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24633 (= (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!46789)))

(declare-fun b!94391 () Bool)

(declare-fun e!61622 () SeekEntryResult!251)

(assert (=> b!94391 (= e!61622 (Found!251 (index!3147 lt!46790)))))

(declare-fun b!94392 () Bool)

(declare-fun e!61621 () SeekEntryResult!251)

(assert (=> b!94392 (= e!61621 (MissingZero!251 (index!3147 lt!46790)))))

(declare-fun b!94393 () Bool)

(declare-fun seekKeyOrZeroReturnVacant!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32) (_ BitVec 64) array!4201 (_ BitVec 32)) SeekEntryResult!251)

(assert (=> b!94393 (= e!61621 (seekKeyOrZeroReturnVacant!0 (x!12655 lt!46790) (index!3147 lt!46790) (index!3147 lt!46790) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94394 () Bool)

(declare-fun c!15752 () Bool)

(declare-fun lt!46791 () (_ BitVec 64))

(assert (=> b!94394 (= c!15752 (= lt!46791 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94394 (= e!61622 e!61621)))

(declare-fun b!94395 () Bool)

(assert (=> b!94395 (= e!61623 Undefined!251)))

(declare-fun b!94396 () Bool)

(assert (=> b!94396 (= e!61623 e!61622)))

(assert (=> b!94396 (= lt!46791 (select (arr!1997 (_keys!4118 newMap!16)) (index!3147 lt!46790)))))

(declare-fun c!15751 () Bool)

(assert (=> b!94396 (= c!15751 (= lt!46791 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!24633 c!15750) b!94395))

(assert (= (and d!24633 (not c!15750)) b!94396))

(assert (= (and b!94396 c!15751) b!94391))

(assert (= (and b!94396 (not c!15751)) b!94394))

(assert (= (and b!94394 c!15752) b!94392))

(assert (= (and b!94394 (not c!15752)) b!94393))

(declare-fun m!101633 () Bool)

(assert (=> d!24633 m!101633))

(declare-fun m!101635 () Bool)

(assert (=> d!24633 m!101635))

(assert (=> d!24633 m!101603))

(declare-fun m!101637 () Bool)

(assert (=> d!24633 m!101637))

(assert (=> d!24633 m!101363))

(declare-fun m!101639 () Bool)

(assert (=> d!24633 m!101639))

(assert (=> d!24633 m!101363))

(assert (=> d!24633 m!101637))

(declare-fun m!101641 () Bool)

(assert (=> d!24633 m!101641))

(assert (=> b!94393 m!101363))

(declare-fun m!101643 () Bool)

(assert (=> b!94393 m!101643))

(declare-fun m!101645 () Bool)

(assert (=> b!94396 m!101645))

(assert (=> b!94208 d!24633))

(declare-fun d!24635 () Bool)

(assert (=> d!24635 (= (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (and (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94291 d!24635))

(declare-fun d!24637 () Bool)

(assert (=> d!24637 (= (inRange!0 (ite c!15703 (ite c!15704 (index!3146 lt!46692) (ite c!15707 (index!3145 lt!46672) (index!3148 lt!46672))) (ite c!15709 (index!3146 lt!46671) (ite c!15698 (index!3145 lt!46695) (index!3148 lt!46695)))) (mask!6511 newMap!16)) (and (bvsge (ite c!15703 (ite c!15704 (index!3146 lt!46692) (ite c!15707 (index!3145 lt!46672) (index!3148 lt!46672))) (ite c!15709 (index!3146 lt!46671) (ite c!15698 (index!3145 lt!46695) (index!3148 lt!46695)))) #b00000000000000000000000000000000) (bvslt (ite c!15703 (ite c!15704 (index!3146 lt!46692) (ite c!15707 (index!3145 lt!46672) (index!3148 lt!46672))) (ite c!15709 (index!3146 lt!46671) (ite c!15698 (index!3145 lt!46695) (index!3148 lt!46695)))) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9426 d!24637))

(declare-fun d!24639 () Bool)

(declare-fun e!61625 () Bool)

(assert (=> d!24639 e!61625))

(declare-fun res!47783 () Bool)

(assert (=> d!24639 (=> res!47783 e!61625)))

(declare-fun lt!46795 () Bool)

(assert (=> d!24639 (= res!47783 (not lt!46795))))

(declare-fun lt!46792 () Bool)

(assert (=> d!24639 (= lt!46795 lt!46792)))

(declare-fun lt!46794 () Unit!2798)

(declare-fun e!61624 () Unit!2798)

(assert (=> d!24639 (= lt!46794 e!61624)))

(declare-fun c!15753 () Bool)

(assert (=> d!24639 (= c!15753 lt!46792)))

(assert (=> d!24639 (= lt!46792 (containsKey!152 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24639 (= (contains!789 lt!46762 #b1000000000000000000000000000000000000000000000000000000000000000) lt!46795)))

(declare-fun b!94397 () Bool)

(declare-fun lt!46793 () Unit!2798)

(assert (=> b!94397 (= e!61624 lt!46793)))

(assert (=> b!94397 (= lt!46793 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94397 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94398 () Bool)

(declare-fun Unit!2811 () Unit!2798)

(assert (=> b!94398 (= e!61624 Unit!2811)))

(declare-fun b!94399 () Bool)

(assert (=> b!94399 (= e!61625 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24639 c!15753) b!94397))

(assert (= (and d!24639 (not c!15753)) b!94398))

(assert (= (and d!24639 (not res!47783)) b!94399))

(declare-fun m!101647 () Bool)

(assert (=> d!24639 m!101647))

(declare-fun m!101649 () Bool)

(assert (=> b!94397 m!101649))

(declare-fun m!101651 () Bool)

(assert (=> b!94397 m!101651))

(assert (=> b!94397 m!101651))

(declare-fun m!101653 () Bool)

(assert (=> b!94397 m!101653))

(assert (=> b!94399 m!101651))

(assert (=> b!94399 m!101651))

(assert (=> b!94399 m!101653))

(assert (=> bm!9450 d!24639))

(declare-fun d!24641 () Bool)

(declare-fun e!61628 () Bool)

(assert (=> d!24641 e!61628))

(declare-fun c!15756 () Bool)

(assert (=> d!24641 (= c!15756 (and (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> d!24641 true))

(declare-fun _$29!120 () Unit!2798)

(assert (=> d!24641 (= (choose!559 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) _$29!120)))

(declare-fun b!94404 () Bool)

(assert (=> b!94404 (= e!61628 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(declare-fun b!94405 () Bool)

(assert (=> b!94405 (= e!61628 (ite (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000) (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (= (and d!24641 c!15756) b!94404))

(assert (= (and d!24641 (not c!15756)) b!94405))

(assert (=> b!94404 m!101363))

(assert (=> b!94404 m!101389))

(assert (=> d!24617 d!24641))

(assert (=> d!24617 d!24609))

(declare-fun d!24643 () Bool)

(declare-fun e!61630 () Bool)

(assert (=> d!24643 e!61630))

(declare-fun res!47784 () Bool)

(assert (=> d!24643 (=> res!47784 e!61630)))

(declare-fun lt!46799 () Bool)

(assert (=> d!24643 (= res!47784 (not lt!46799))))

(declare-fun lt!46796 () Bool)

(assert (=> d!24643 (= lt!46799 lt!46796)))

(declare-fun lt!46798 () Unit!2798)

(declare-fun e!61629 () Unit!2798)

(assert (=> d!24643 (= lt!46798 e!61629)))

(declare-fun c!15757 () Bool)

(assert (=> d!24643 (= c!15757 lt!46796)))

(assert (=> d!24643 (= lt!46796 (containsKey!152 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24643 (= (contains!789 call!9436 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!46799)))

(declare-fun b!94406 () Bool)

(declare-fun lt!46797 () Unit!2798)

(assert (=> b!94406 (= e!61629 lt!46797)))

(assert (=> b!94406 (= lt!46797 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!94406 (isDefined!101 (getValueByKey!148 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94407 () Bool)

(declare-fun Unit!2812 () Unit!2798)

(assert (=> b!94407 (= e!61629 Unit!2812)))

(declare-fun b!94408 () Bool)

(assert (=> b!94408 (= e!61630 (isDefined!101 (getValueByKey!148 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (= (and d!24643 c!15757) b!94406))

(assert (= (and d!24643 (not c!15757)) b!94407))

(assert (= (and d!24643 (not res!47784)) b!94408))

(assert (=> d!24643 m!101363))

(declare-fun m!101655 () Bool)

(assert (=> d!24643 m!101655))

(assert (=> b!94406 m!101363))

(declare-fun m!101657 () Bool)

(assert (=> b!94406 m!101657))

(assert (=> b!94406 m!101363))

(declare-fun m!101659 () Bool)

(assert (=> b!94406 m!101659))

(assert (=> b!94406 m!101659))

(declare-fun m!101661 () Bool)

(assert (=> b!94406 m!101661))

(assert (=> b!94408 m!101363))

(assert (=> b!94408 m!101659))

(assert (=> b!94408 m!101659))

(assert (=> b!94408 m!101661))

(assert (=> b!94199 d!24643))

(declare-fun b!94409 () Bool)

(declare-fun e!61634 () Bool)

(declare-fun e!61633 () Bool)

(assert (=> b!94409 (= e!61634 e!61633)))

(declare-fun c!15758 () Bool)

(assert (=> b!94409 (= c!15758 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94410 () Bool)

(declare-fun call!9469 () Bool)

(assert (=> b!94410 (= e!61633 call!9469)))

(declare-fun b!94411 () Bool)

(assert (=> b!94411 (= e!61633 call!9469)))

(declare-fun bm!9466 () Bool)

(assert (=> bm!9466 (= call!9469 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15758 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565))))))

(declare-fun b!94412 () Bool)

(declare-fun e!61632 () Bool)

(assert (=> b!94412 (= e!61632 e!61634)))

(declare-fun res!47787 () Bool)

(assert (=> b!94412 (=> (not res!47787) (not e!61634))))

(declare-fun e!61631 () Bool)

(assert (=> b!94412 (= res!47787 (not e!61631))))

(declare-fun res!47785 () Bool)

(assert (=> b!94412 (=> (not res!47785) (not e!61631))))

(assert (=> b!94412 (= res!47785 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94413 () Bool)

(assert (=> b!94413 (= e!61631 (contains!791 (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun d!24645 () Bool)

(declare-fun res!47786 () Bool)

(assert (=> d!24645 (=> res!47786 e!61632)))

(assert (=> d!24645 (= res!47786 (bvsge (bvadd from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!24645 (= (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) e!61632)))

(assert (= (and d!24645 (not res!47786)) b!94412))

(assert (= (and b!94412 res!47785) b!94413))

(assert (= (and b!94412 res!47787) b!94409))

(assert (= (and b!94409 c!15758) b!94410))

(assert (= (and b!94409 (not c!15758)) b!94411))

(assert (= (or b!94410 b!94411) bm!9466))

(declare-fun m!101663 () Bool)

(assert (=> b!94409 m!101663))

(assert (=> b!94409 m!101663))

(declare-fun m!101665 () Bool)

(assert (=> b!94409 m!101665))

(assert (=> bm!9466 m!101663))

(declare-fun m!101667 () Bool)

(assert (=> bm!9466 m!101667))

(assert (=> b!94412 m!101663))

(assert (=> b!94412 m!101663))

(assert (=> b!94412 m!101665))

(assert (=> b!94413 m!101663))

(assert (=> b!94413 m!101663))

(declare-fun m!101669 () Bool)

(assert (=> b!94413 m!101669))

(assert (=> bm!9459 d!24645))

(assert (=> d!24603 d!24609))

(declare-fun d!24647 () Bool)

(declare-fun e!61636 () Bool)

(assert (=> d!24647 e!61636))

(declare-fun res!47788 () Bool)

(assert (=> d!24647 (=> res!47788 e!61636)))

(declare-fun lt!46803 () Bool)

(assert (=> d!24647 (= res!47788 (not lt!46803))))

(declare-fun lt!46800 () Bool)

(assert (=> d!24647 (= lt!46803 lt!46800)))

(declare-fun lt!46802 () Unit!2798)

(declare-fun e!61635 () Unit!2798)

(assert (=> d!24647 (= lt!46802 e!61635)))

(declare-fun c!15759 () Bool)

(assert (=> d!24647 (= c!15759 lt!46800)))

(assert (=> d!24647 (= lt!46800 (containsKey!152 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24647 (= (contains!789 lt!46762 #b0000000000000000000000000000000000000000000000000000000000000000) lt!46803)))

(declare-fun b!94414 () Bool)

(declare-fun lt!46801 () Unit!2798)

(assert (=> b!94414 (= e!61635 lt!46801)))

(assert (=> b!94414 (= lt!46801 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94414 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94415 () Bool)

(declare-fun Unit!2813 () Unit!2798)

(assert (=> b!94415 (= e!61635 Unit!2813)))

(declare-fun b!94416 () Bool)

(assert (=> b!94416 (= e!61636 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24647 c!15759) b!94414))

(assert (= (and d!24647 (not c!15759)) b!94415))

(assert (= (and d!24647 (not res!47788)) b!94416))

(declare-fun m!101671 () Bool)

(assert (=> d!24647 m!101671))

(declare-fun m!101673 () Bool)

(assert (=> b!94414 m!101673))

(declare-fun m!101675 () Bool)

(assert (=> b!94414 m!101675))

(assert (=> b!94414 m!101675))

(declare-fun m!101677 () Bool)

(assert (=> b!94414 m!101677))

(assert (=> b!94416 m!101675))

(assert (=> b!94416 m!101675))

(assert (=> b!94416 m!101677))

(assert (=> bm!9451 d!24647))

(declare-fun b!94418 () Bool)

(declare-fun e!61637 () Bool)

(declare-fun lt!46824 () ListLongMap!1521)

(assert (=> b!94418 (= e!61637 (= (apply!90 lt!46824 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94419 () Bool)

(declare-fun e!61641 () Bool)

(assert (=> b!94419 (= e!61641 (= (apply!90 lt!46824 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94419 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (_values!2419 newMap!16))))))

(assert (=> b!94419 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94420 () Bool)

(declare-fun e!61647 () Bool)

(assert (=> b!94420 (= e!61647 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94421 () Bool)

(declare-fun e!61642 () Bool)

(declare-fun e!61638 () Bool)

(assert (=> b!94421 (= e!61642 e!61638)))

(declare-fun res!47790 () Bool)

(declare-fun call!9471 () Bool)

(assert (=> b!94421 (= res!47790 call!9471)))

(assert (=> b!94421 (=> (not res!47790) (not e!61638))))

(declare-fun bm!9467 () Bool)

(declare-fun call!9473 () Bool)

(assert (=> bm!9467 (= call!9473 (contains!789 lt!46824 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94422 () Bool)

(assert (=> b!94422 (= e!61638 (= (apply!90 lt!46824 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94423 () Bool)

(declare-fun e!61645 () Bool)

(assert (=> b!94423 (= e!61645 e!61641)))

(declare-fun res!47797 () Bool)

(assert (=> b!94423 (=> (not res!47797) (not e!61641))))

(assert (=> b!94423 (= res!47797 (contains!789 lt!46824 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94423 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94424 () Bool)

(declare-fun e!61640 () Bool)

(declare-fun e!61643 () Bool)

(assert (=> b!94424 (= e!61640 e!61643)))

(declare-fun c!15765 () Bool)

(assert (=> b!94424 (= c!15765 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94425 () Bool)

(assert (=> b!94425 (= e!61642 (not call!9471))))

(declare-fun b!94426 () Bool)

(declare-fun e!61639 () Unit!2798)

(declare-fun Unit!2814 () Unit!2798)

(assert (=> b!94426 (= e!61639 Unit!2814)))

(declare-fun b!94427 () Bool)

(assert (=> b!94427 (= e!61643 (not call!9473))))

(declare-fun b!94417 () Bool)

(declare-fun e!61646 () ListLongMap!1521)

(declare-fun call!9474 () ListLongMap!1521)

(assert (=> b!94417 (= e!61646 (+!133 call!9474 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!24649 () Bool)

(assert (=> d!24649 e!61640))

(declare-fun res!47792 () Bool)

(assert (=> d!24649 (=> (not res!47792) (not e!61640))))

(assert (=> d!24649 (= res!47792 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!46825 () ListLongMap!1521)

(assert (=> d!24649 (= lt!46824 lt!46825)))

(declare-fun lt!46823 () Unit!2798)

(assert (=> d!24649 (= lt!46823 e!61639)))

(declare-fun c!15763 () Bool)

(assert (=> d!24649 (= c!15763 e!61647)))

(declare-fun res!47789 () Bool)

(assert (=> d!24649 (=> (not res!47789) (not e!61647))))

(assert (=> d!24649 (= res!47789 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24649 (= lt!46825 e!61646)))

(declare-fun c!15764 () Bool)

(assert (=> d!24649 (= c!15764 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24649 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24649 (= (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46824)))

(declare-fun b!94428 () Bool)

(declare-fun e!61649 () ListLongMap!1521)

(declare-fun call!9470 () ListLongMap!1521)

(assert (=> b!94428 (= e!61649 call!9470)))

(declare-fun b!94429 () Bool)

(declare-fun e!61648 () Bool)

(assert (=> b!94429 (= e!61648 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94430 () Bool)

(declare-fun e!61644 () ListLongMap!1521)

(declare-fun call!9472 () ListLongMap!1521)

(assert (=> b!94430 (= e!61644 call!9472)))

(declare-fun b!94431 () Bool)

(declare-fun res!47795 () Bool)

(assert (=> b!94431 (=> (not res!47795) (not e!61640))))

(assert (=> b!94431 (= res!47795 e!61645)))

(declare-fun res!47796 () Bool)

(assert (=> b!94431 (=> res!47796 e!61645)))

(assert (=> b!94431 (= res!47796 (not e!61648))))

(declare-fun res!47794 () Bool)

(assert (=> b!94431 (=> (not res!47794) (not e!61648))))

(assert (=> b!94431 (= res!47794 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94432 () Bool)

(declare-fun lt!46813 () Unit!2798)

(assert (=> b!94432 (= e!61639 lt!46813)))

(declare-fun lt!46820 () ListLongMap!1521)

(assert (=> b!94432 (= lt!46820 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46811 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46811 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46819 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46819 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46817 () Unit!2798)

(assert (=> b!94432 (= lt!46817 (addStillContains!66 lt!46820 lt!46811 (zeroValue!2323 newMap!16) lt!46819))))

(assert (=> b!94432 (contains!789 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))) lt!46819)))

(declare-fun lt!46807 () Unit!2798)

(assert (=> b!94432 (= lt!46807 lt!46817)))

(declare-fun lt!46812 () ListLongMap!1521)

(assert (=> b!94432 (= lt!46812 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46818 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46818 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46806 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46806 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46822 () Unit!2798)

(assert (=> b!94432 (= lt!46822 (addApplyDifferent!66 lt!46812 lt!46818 (minValue!2323 newMap!16) lt!46806))))

(assert (=> b!94432 (= (apply!90 (+!133 lt!46812 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))) lt!46806) (apply!90 lt!46812 lt!46806))))

(declare-fun lt!46815 () Unit!2798)

(assert (=> b!94432 (= lt!46815 lt!46822)))

(declare-fun lt!46816 () ListLongMap!1521)

(assert (=> b!94432 (= lt!46816 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46808 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46808 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46821 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46821 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46809 () Unit!2798)

(assert (=> b!94432 (= lt!46809 (addApplyDifferent!66 lt!46816 lt!46808 (zeroValue!2323 newMap!16) lt!46821))))

(assert (=> b!94432 (= (apply!90 (+!133 lt!46816 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))) lt!46821) (apply!90 lt!46816 lt!46821))))

(declare-fun lt!46805 () Unit!2798)

(assert (=> b!94432 (= lt!46805 lt!46809)))

(declare-fun lt!46814 () ListLongMap!1521)

(assert (=> b!94432 (= lt!46814 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46810 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46810 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46804 () (_ BitVec 64))

(assert (=> b!94432 (= lt!46804 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94432 (= lt!46813 (addApplyDifferent!66 lt!46814 lt!46810 (minValue!2323 newMap!16) lt!46804))))

(assert (=> b!94432 (= (apply!90 (+!133 lt!46814 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))) lt!46804) (apply!90 lt!46814 lt!46804))))

(declare-fun b!94433 () Bool)

(declare-fun c!15762 () Bool)

(assert (=> b!94433 (= c!15762 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94433 (= e!61644 e!61649)))

(declare-fun bm!9468 () Bool)

(assert (=> bm!9468 (= call!9471 (contains!789 lt!46824 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94434 () Bool)

(assert (=> b!94434 (= e!61649 call!9472)))

(declare-fun bm!9469 () Bool)

(declare-fun c!15761 () Bool)

(declare-fun call!9475 () ListLongMap!1521)

(declare-fun call!9476 () ListLongMap!1521)

(assert (=> bm!9469 (= call!9474 (+!133 (ite c!15764 call!9476 (ite c!15761 call!9475 call!9470)) (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9470 () Bool)

(assert (=> bm!9470 (= call!9475 call!9476)))

(declare-fun b!94435 () Bool)

(declare-fun res!47791 () Bool)

(assert (=> b!94435 (=> (not res!47791) (not e!61640))))

(assert (=> b!94435 (= res!47791 e!61642)))

(declare-fun c!15760 () Bool)

(assert (=> b!94435 (= c!15760 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9471 () Bool)

(assert (=> bm!9471 (= call!9476 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9472 () Bool)

(assert (=> bm!9472 (= call!9470 call!9475)))

(declare-fun b!94436 () Bool)

(assert (=> b!94436 (= e!61646 e!61644)))

(assert (=> b!94436 (= c!15761 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94437 () Bool)

(assert (=> b!94437 (= e!61643 e!61637)))

(declare-fun res!47793 () Bool)

(assert (=> b!94437 (= res!47793 call!9473)))

(assert (=> b!94437 (=> (not res!47793) (not e!61637))))

(declare-fun bm!9473 () Bool)

(assert (=> bm!9473 (= call!9472 call!9474)))

(assert (= (and d!24649 c!15764) b!94417))

(assert (= (and d!24649 (not c!15764)) b!94436))

(assert (= (and b!94436 c!15761) b!94430))

(assert (= (and b!94436 (not c!15761)) b!94433))

(assert (= (and b!94433 c!15762) b!94434))

(assert (= (and b!94433 (not c!15762)) b!94428))

(assert (= (or b!94434 b!94428) bm!9472))

(assert (= (or b!94430 bm!9472) bm!9470))

(assert (= (or b!94430 b!94434) bm!9473))

(assert (= (or b!94417 bm!9470) bm!9471))

(assert (= (or b!94417 bm!9473) bm!9469))

(assert (= (and d!24649 res!47789) b!94420))

(assert (= (and d!24649 c!15763) b!94432))

(assert (= (and d!24649 (not c!15763)) b!94426))

(assert (= (and d!24649 res!47792) b!94431))

(assert (= (and b!94431 res!47794) b!94429))

(assert (= (and b!94431 (not res!47796)) b!94423))

(assert (= (and b!94423 res!47797) b!94419))

(assert (= (and b!94431 res!47795) b!94435))

(assert (= (and b!94435 c!15760) b!94421))

(assert (= (and b!94435 (not c!15760)) b!94425))

(assert (= (and b!94421 res!47790) b!94422))

(assert (= (or b!94421 b!94425) bm!9468))

(assert (= (and b!94435 res!47791) b!94424))

(assert (= (and b!94424 c!15765) b!94437))

(assert (= (and b!94424 (not c!15765)) b!94427))

(assert (= (and b!94437 res!47793) b!94418))

(assert (= (or b!94437 b!94427) bm!9467))

(declare-fun b_lambda!4153 () Bool)

(assert (=> (not b_lambda!4153) (not b!94419)))

(declare-fun tb!1877 () Bool)

(declare-fun t!5479 () Bool)

(assert (=> (and b!94027 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16)) t!5479) tb!1877))

(declare-fun result!3201 () Bool)

(assert (=> tb!1877 (= result!3201 tp_is_empty!2613)))

(assert (=> b!94419 t!5479))

(declare-fun b_and!5759 () Bool)

(assert (= b_and!5755 (and (=> t!5479 result!3201) b_and!5759)))

(declare-fun t!5481 () Bool)

(declare-fun tb!1879 () Bool)

(assert (=> (and b!94030 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 newMap!16)) t!5481) tb!1879))

(declare-fun result!3203 () Bool)

(assert (= result!3203 result!3201))

(assert (=> b!94419 t!5481))

(declare-fun b_and!5761 () Bool)

(assert (= b_and!5757 (and (=> t!5481 result!3203) b_and!5761)))

(declare-fun m!101679 () Bool)

(assert (=> b!94417 m!101679))

(assert (=> d!24649 m!101603))

(declare-fun m!101681 () Bool)

(assert (=> b!94418 m!101681))

(declare-fun m!101683 () Bool)

(assert (=> b!94422 m!101683))

(declare-fun m!101685 () Bool)

(assert (=> bm!9469 m!101685))

(declare-fun m!101687 () Bool)

(assert (=> bm!9471 m!101687))

(declare-fun m!101689 () Bool)

(assert (=> b!94423 m!101689))

(assert (=> b!94423 m!101689))

(declare-fun m!101691 () Bool)

(assert (=> b!94423 m!101691))

(declare-fun m!101693 () Bool)

(assert (=> bm!9467 m!101693))

(assert (=> b!94420 m!101689))

(assert (=> b!94420 m!101689))

(declare-fun m!101695 () Bool)

(assert (=> b!94420 m!101695))

(assert (=> b!94419 m!101689))

(declare-fun m!101697 () Bool)

(assert (=> b!94419 m!101697))

(declare-fun m!101699 () Bool)

(assert (=> b!94419 m!101699))

(assert (=> b!94419 m!101699))

(assert (=> b!94419 m!101697))

(declare-fun m!101701 () Bool)

(assert (=> b!94419 m!101701))

(assert (=> b!94419 m!101689))

(declare-fun m!101703 () Bool)

(assert (=> b!94419 m!101703))

(assert (=> b!94429 m!101689))

(assert (=> b!94429 m!101689))

(assert (=> b!94429 m!101695))

(declare-fun m!101705 () Bool)

(assert (=> b!94432 m!101705))

(assert (=> b!94432 m!101689))

(declare-fun m!101707 () Bool)

(assert (=> b!94432 m!101707))

(declare-fun m!101709 () Bool)

(assert (=> b!94432 m!101709))

(declare-fun m!101711 () Bool)

(assert (=> b!94432 m!101711))

(declare-fun m!101713 () Bool)

(assert (=> b!94432 m!101713))

(assert (=> b!94432 m!101711))

(declare-fun m!101715 () Bool)

(assert (=> b!94432 m!101715))

(declare-fun m!101717 () Bool)

(assert (=> b!94432 m!101717))

(declare-fun m!101719 () Bool)

(assert (=> b!94432 m!101719))

(declare-fun m!101721 () Bool)

(assert (=> b!94432 m!101721))

(declare-fun m!101723 () Bool)

(assert (=> b!94432 m!101723))

(assert (=> b!94432 m!101705))

(declare-fun m!101725 () Bool)

(assert (=> b!94432 m!101725))

(declare-fun m!101727 () Bool)

(assert (=> b!94432 m!101727))

(declare-fun m!101729 () Bool)

(assert (=> b!94432 m!101729))

(assert (=> b!94432 m!101721))

(declare-fun m!101731 () Bool)

(assert (=> b!94432 m!101731))

(assert (=> b!94432 m!101687))

(declare-fun m!101733 () Bool)

(assert (=> b!94432 m!101733))

(assert (=> b!94432 m!101727))

(declare-fun m!101735 () Bool)

(assert (=> bm!9468 m!101735))

(assert (=> b!94227 d!24649))

(declare-fun d!24651 () Bool)

(assert (=> d!24651 (isDefined!101 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun lt!46828 () Unit!2798)

(declare-fun choose!561 (List!1569 (_ BitVec 64)) Unit!2798)

(assert (=> d!24651 (= lt!46828 (choose!561 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun e!61652 () Bool)

(assert (=> d!24651 e!61652))

(declare-fun res!47800 () Bool)

(assert (=> d!24651 (=> (not res!47800) (not e!61652))))

(declare-fun isStrictlySorted!302 (List!1569) Bool)

(assert (=> d!24651 (= res!47800 (isStrictlySorted!302 (toList!776 lt!46578)))))

(assert (=> d!24651 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!46828)))

(declare-fun b!94440 () Bool)

(assert (=> b!94440 (= e!61652 (containsKey!152 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!24651 res!47800) b!94440))

(assert (=> d!24651 m!101363))

(assert (=> d!24651 m!101451))

(assert (=> d!24651 m!101451))

(assert (=> d!24651 m!101453))

(assert (=> d!24651 m!101363))

(declare-fun m!101737 () Bool)

(assert (=> d!24651 m!101737))

(declare-fun m!101739 () Bool)

(assert (=> d!24651 m!101739))

(assert (=> b!94440 m!101363))

(assert (=> b!94440 m!101447))

(assert (=> b!94102 d!24651))

(declare-fun d!24653 () Bool)

(declare-fun isEmpty!350 (Option!154) Bool)

(assert (=> d!24653 (= (isDefined!101 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) (not (isEmpty!350 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun bs!3874 () Bool)

(assert (= bs!3874 d!24653))

(assert (=> bs!3874 m!101451))

(declare-fun m!101741 () Bool)

(assert (=> bs!3874 m!101741))

(assert (=> b!94102 d!24653))

(declare-fun c!15770 () Bool)

(declare-fun d!24655 () Bool)

(assert (=> d!24655 (= c!15770 (and ((_ is Cons!1565) (toList!776 lt!46578)) (= (_1!1166 (h!2157 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun e!61657 () Option!154)

(assert (=> d!24655 (= (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!61657)))

(declare-fun e!61658 () Option!154)

(declare-fun b!94451 () Bool)

(assert (=> b!94451 (= e!61658 (getValueByKey!148 (t!5471 (toList!776 lt!46578)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94452 () Bool)

(assert (=> b!94452 (= e!61658 None!152)))

(declare-fun b!94450 () Bool)

(assert (=> b!94450 (= e!61657 e!61658)))

(declare-fun c!15771 () Bool)

(assert (=> b!94450 (= c!15771 (and ((_ is Cons!1565) (toList!776 lt!46578)) (not (= (_1!1166 (h!2157 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun b!94449 () Bool)

(assert (=> b!94449 (= e!61657 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46578)))))))

(assert (= (and d!24655 c!15770) b!94449))

(assert (= (and d!24655 (not c!15770)) b!94450))

(assert (= (and b!94450 c!15771) b!94451))

(assert (= (and b!94450 (not c!15771)) b!94452))

(assert (=> b!94451 m!101363))

(declare-fun m!101743 () Bool)

(assert (=> b!94451 m!101743))

(assert (=> b!94102 d!24655))

(declare-fun d!24657 () Bool)

(declare-fun e!61661 () Bool)

(assert (=> d!24657 e!61661))

(declare-fun res!47805 () Bool)

(assert (=> d!24657 (=> (not res!47805) (not e!61661))))

(declare-fun lt!46838 () ListLongMap!1521)

(assert (=> d!24657 (= res!47805 (contains!789 lt!46838 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun lt!46839 () List!1569)

(assert (=> d!24657 (= lt!46838 (ListLongMap!1522 lt!46839))))

(declare-fun lt!46837 () Unit!2798)

(declare-fun lt!46840 () Unit!2798)

(assert (=> d!24657 (= lt!46837 lt!46840)))

(assert (=> d!24657 (= (getValueByKey!148 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (Some!153 (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun lemmaContainsTupThenGetReturnValue!64 (List!1569 (_ BitVec 64) V!3131) Unit!2798)

(assert (=> d!24657 (= lt!46840 (lemmaContainsTupThenGetReturnValue!64 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun insertStrictlySorted!67 (List!1569 (_ BitVec 64) V!3131) List!1569)

(assert (=> d!24657 (= lt!46839 (insertStrictlySorted!67 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!24657 (= (+!133 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46838)))

(declare-fun b!94457 () Bool)

(declare-fun res!47806 () Bool)

(assert (=> b!94457 (=> (not res!47806) (not e!61661))))

(assert (=> b!94457 (= res!47806 (= (getValueByKey!148 (toList!776 lt!46838) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (Some!153 (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!94458 () Bool)

(declare-fun contains!792 (List!1569 tuple2!2310) Bool)

(assert (=> b!94458 (= e!61661 (contains!792 (toList!776 lt!46838) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (= (and d!24657 res!47805) b!94457))

(assert (= (and b!94457 res!47806) b!94458))

(declare-fun m!101745 () Bool)

(assert (=> d!24657 m!101745))

(declare-fun m!101747 () Bool)

(assert (=> d!24657 m!101747))

(declare-fun m!101749 () Bool)

(assert (=> d!24657 m!101749))

(declare-fun m!101751 () Bool)

(assert (=> d!24657 m!101751))

(declare-fun m!101753 () Bool)

(assert (=> b!94457 m!101753))

(declare-fun m!101755 () Bool)

(assert (=> b!94458 m!101755))

(assert (=> bm!9452 d!24657))

(declare-fun b!94467 () Bool)

(declare-fun res!47818 () Bool)

(declare-fun e!61664 () Bool)

(assert (=> b!94467 (=> (not res!47818) (not e!61664))))

(assert (=> b!94467 (= res!47818 (and (= (size!2246 (_values!2419 newMap!16)) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001)) (= (size!2245 (_keys!4118 newMap!16)) (size!2246 (_values!2419 newMap!16))) (bvsge (_size!466 newMap!16) #b00000000000000000000000000000000) (bvsle (_size!466 newMap!16) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(declare-fun b!94470 () Bool)

(assert (=> b!94470 (= e!61664 (and (bvsge (extraKeys!2265 newMap!16) #b00000000000000000000000000000000) (bvsle (extraKeys!2265 newMap!16) #b00000000000000000000000000000011) (bvsge (_vacant!466 newMap!16) #b00000000000000000000000000000000)))))

(declare-fun d!24659 () Bool)

(declare-fun res!47815 () Bool)

(assert (=> d!24659 (=> (not res!47815) (not e!61664))))

(assert (=> d!24659 (= res!47815 (validMask!0 (mask!6511 newMap!16)))))

(assert (=> d!24659 (= (simpleValid!66 newMap!16) e!61664)))

(declare-fun b!94468 () Bool)

(declare-fun res!47816 () Bool)

(assert (=> b!94468 (=> (not res!47816) (not e!61664))))

(declare-fun size!2249 (LongMapFixedSize!834) (_ BitVec 32))

(assert (=> b!94468 (= res!47816 (bvsge (size!2249 newMap!16) (_size!466 newMap!16)))))

(declare-fun b!94469 () Bool)

(declare-fun res!47817 () Bool)

(assert (=> b!94469 (=> (not res!47817) (not e!61664))))

(assert (=> b!94469 (= res!47817 (= (size!2249 newMap!16) (bvadd (_size!466 newMap!16) (bvsdiv (bvadd (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!24659 res!47815) b!94467))

(assert (= (and b!94467 res!47818) b!94468))

(assert (= (and b!94468 res!47816) b!94469))

(assert (= (and b!94469 res!47817) b!94470))

(assert (=> d!24659 m!101603))

(declare-fun m!101757 () Bool)

(assert (=> b!94468 m!101757))

(assert (=> b!94469 m!101757))

(assert (=> d!24599 d!24659))

(declare-fun d!24661 () Bool)

(declare-fun lt!46843 () Bool)

(define-sort InoxSet (T) (Array T Bool))

(declare-fun content!97 (List!1568) (InoxSet (_ BitVec 64)))

(assert (=> d!24661 (= lt!46843 (select (content!97 Nil!1565) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun e!61670 () Bool)

(assert (=> d!24661 (= lt!46843 e!61670)))

(declare-fun res!47824 () Bool)

(assert (=> d!24661 (=> (not res!47824) (not e!61670))))

(assert (=> d!24661 (= res!47824 ((_ is Cons!1564) Nil!1565))))

(assert (=> d!24661 (= (contains!791 Nil!1565 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!46843)))

(declare-fun b!94475 () Bool)

(declare-fun e!61669 () Bool)

(assert (=> b!94475 (= e!61670 e!61669)))

(declare-fun res!47823 () Bool)

(assert (=> b!94475 (=> res!47823 e!61669)))

(assert (=> b!94475 (= res!47823 (= (h!2156 Nil!1565) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94476 () Bool)

(assert (=> b!94476 (= e!61669 (contains!791 (t!5470 Nil!1565) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!24661 res!47824) b!94475))

(assert (= (and b!94475 (not res!47823)) b!94476))

(declare-fun m!101759 () Bool)

(assert (=> d!24661 m!101759))

(assert (=> d!24661 m!101363))

(declare-fun m!101761 () Bool)

(assert (=> d!24661 m!101761))

(assert (=> b!94476 m!101363))

(declare-fun m!101763 () Bool)

(assert (=> b!94476 m!101763))

(assert (=> b!94335 d!24661))

(declare-fun d!24663 () Bool)

(declare-fun get!1265 (Option!154) V!3131)

(assert (=> d!24663 (= (apply!90 lt!46762 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3875 () Bool)

(assert (= bs!3875 d!24663))

(assert (=> bs!3875 m!101651))

(assert (=> bs!3875 m!101651))

(declare-fun m!101765 () Bool)

(assert (=> bs!3875 m!101765))

(assert (=> b!94289 d!24663))

(declare-fun d!24665 () Bool)

(declare-fun res!47829 () Bool)

(declare-fun e!61677 () Bool)

(assert (=> d!24665 (=> res!47829 e!61677)))

(assert (=> d!24665 (= res!47829 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24665 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 newMap!16) (mask!6511 newMap!16)) e!61677)))

(declare-fun b!94485 () Bool)

(declare-fun e!61679 () Bool)

(declare-fun call!9479 () Bool)

(assert (=> b!94485 (= e!61679 call!9479)))

(declare-fun b!94486 () Bool)

(declare-fun e!61678 () Bool)

(assert (=> b!94486 (= e!61678 e!61679)))

(declare-fun lt!46850 () (_ BitVec 64))

(assert (=> b!94486 (= lt!46850 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46852 () Unit!2798)

(declare-fun lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4201 (_ BitVec 64) (_ BitVec 32)) Unit!2798)

(assert (=> b!94486 (= lt!46852 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 newMap!16) lt!46850 #b00000000000000000000000000000000))))

(assert (=> b!94486 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46850 #b00000000000000000000000000000000)))

(declare-fun lt!46851 () Unit!2798)

(assert (=> b!94486 (= lt!46851 lt!46852)))

(declare-fun res!47830 () Bool)

(assert (=> b!94486 (= res!47830 (= (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!94486 (=> (not res!47830) (not e!61679))))

(declare-fun b!94487 () Bool)

(assert (=> b!94487 (= e!61677 e!61678)))

(declare-fun c!15774 () Bool)

(assert (=> b!94487 (= c!15774 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun bm!9476 () Bool)

(assert (=> bm!9476 (= call!9479 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94488 () Bool)

(assert (=> b!94488 (= e!61678 call!9479)))

(assert (= (and d!24665 (not res!47829)) b!94487))

(assert (= (and b!94487 c!15774) b!94486))

(assert (= (and b!94487 (not c!15774)) b!94488))

(assert (= (and b!94486 res!47830) b!94485))

(assert (= (or b!94485 b!94488) bm!9476))

(assert (=> b!94486 m!101689))

(declare-fun m!101767 () Bool)

(assert (=> b!94486 m!101767))

(declare-fun m!101769 () Bool)

(assert (=> b!94486 m!101769))

(assert (=> b!94486 m!101689))

(declare-fun m!101771 () Bool)

(assert (=> b!94486 m!101771))

(assert (=> b!94487 m!101689))

(assert (=> b!94487 m!101689))

(assert (=> b!94487 m!101695))

(declare-fun m!101773 () Bool)

(assert (=> bm!9476 m!101773))

(assert (=> b!94244 d!24665))

(declare-fun d!24667 () Bool)

(declare-fun e!61682 () Bool)

(assert (=> d!24667 e!61682))

(declare-fun res!47835 () Bool)

(assert (=> d!24667 (=> (not res!47835) (not e!61682))))

(declare-fun lt!46858 () SeekEntryResult!251)

(assert (=> d!24667 (= res!47835 ((_ is Found!251) lt!46858))))

(assert (=> d!24667 (= lt!46858 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun lt!46857 () Unit!2798)

(declare-fun choose!562 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) Int) Unit!2798)

(assert (=> d!24667 (= lt!46857 (choose!562 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24667 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24667 (= (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) lt!46857)))

(declare-fun b!94493 () Bool)

(declare-fun res!47836 () Bool)

(assert (=> b!94493 (=> (not res!47836) (not e!61682))))

(assert (=> b!94493 (= res!47836 (inRange!0 (index!3146 lt!46858) (mask!6511 newMap!16)))))

(declare-fun b!94494 () Bool)

(assert (=> b!94494 (= e!61682 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46858)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!94494 (and (bvsge (index!3146 lt!46858) #b00000000000000000000000000000000) (bvslt (index!3146 lt!46858) (size!2245 (_keys!4118 newMap!16))))))

(assert (= (and d!24667 res!47835) b!94493))

(assert (= (and b!94493 res!47836) b!94494))

(assert (=> d!24667 m!101363))

(assert (=> d!24667 m!101503))

(assert (=> d!24667 m!101363))

(declare-fun m!101775 () Bool)

(assert (=> d!24667 m!101775))

(assert (=> d!24667 m!101603))

(declare-fun m!101777 () Bool)

(assert (=> b!94493 m!101777))

(declare-fun m!101779 () Bool)

(assert (=> b!94494 m!101779))

(assert (=> bm!9433 d!24667))

(assert (=> b!94104 d!24653))

(assert (=> b!94104 d!24655))

(declare-fun d!24669 () Bool)

(declare-fun res!47837 () Bool)

(declare-fun e!61683 () Bool)

(assert (=> d!24669 (=> res!47837 e!61683)))

(assert (=> d!24669 (= res!47837 (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24669 (= (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) e!61683)))

(declare-fun b!94495 () Bool)

(declare-fun e!61684 () Bool)

(assert (=> b!94495 (= e!61683 e!61684)))

(declare-fun res!47838 () Bool)

(assert (=> b!94495 (=> (not res!47838) (not e!61684))))

(assert (=> b!94495 (= res!47838 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94496 () Bool)

(assert (=> b!94496 (= e!61684 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24669 (not res!47837)) b!94495))

(assert (= (and b!94495 res!47838) b!94496))

(declare-fun m!101781 () Bool)

(assert (=> d!24669 m!101781))

(assert (=> b!94496 m!101363))

(declare-fun m!101783 () Bool)

(assert (=> b!94496 m!101783))

(assert (=> b!94314 d!24669))

(declare-fun d!24671 () Bool)

(declare-fun e!61686 () Bool)

(assert (=> d!24671 e!61686))

(declare-fun res!47839 () Bool)

(assert (=> d!24671 (=> res!47839 e!61686)))

(declare-fun lt!46862 () Bool)

(assert (=> d!24671 (= res!47839 (not lt!46862))))

(declare-fun lt!46859 () Bool)

(assert (=> d!24671 (= lt!46862 lt!46859)))

(declare-fun lt!46861 () Unit!2798)

(declare-fun e!61685 () Unit!2798)

(assert (=> d!24671 (= lt!46861 e!61685)))

(declare-fun c!15775 () Bool)

(assert (=> d!24671 (= c!15775 lt!46859)))

(assert (=> d!24671 (= lt!46859 (containsKey!152 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24671 (= (contains!789 e!61513 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!46862)))

(declare-fun b!94497 () Bool)

(declare-fun lt!46860 () Unit!2798)

(assert (=> b!94497 (= e!61685 lt!46860)))

(assert (=> b!94497 (= lt!46860 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!94497 (isDefined!101 (getValueByKey!148 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94498 () Bool)

(declare-fun Unit!2815 () Unit!2798)

(assert (=> b!94498 (= e!61685 Unit!2815)))

(declare-fun b!94499 () Bool)

(assert (=> b!94499 (= e!61686 (isDefined!101 (getValueByKey!148 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (= (and d!24671 c!15775) b!94497))

(assert (= (and d!24671 (not c!15775)) b!94498))

(assert (= (and d!24671 (not res!47839)) b!94499))

(assert (=> d!24671 m!101363))

(declare-fun m!101785 () Bool)

(assert (=> d!24671 m!101785))

(assert (=> b!94497 m!101363))

(declare-fun m!101787 () Bool)

(assert (=> b!94497 m!101787))

(assert (=> b!94497 m!101363))

(declare-fun m!101789 () Bool)

(assert (=> b!94497 m!101789))

(assert (=> b!94497 m!101789))

(declare-fun m!101791 () Bool)

(assert (=> b!94497 m!101791))

(assert (=> b!94499 m!101363))

(assert (=> b!94499 m!101789))

(assert (=> b!94499 m!101789))

(assert (=> b!94499 m!101791))

(assert (=> bm!9422 d!24671))

(declare-fun d!24673 () Bool)

(assert (=> d!24673 (= (get!1264 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94236 d!24673))

(assert (=> d!24611 d!24615))

(declare-fun d!24675 () Bool)

(assert (=> d!24675 (not (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> d!24675 true))

(declare-fun _$68!85 () Unit!2798)

(assert (=> d!24675 (= (choose!68 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565)) _$68!85)))

(declare-fun bs!3876 () Bool)

(assert (= bs!3876 d!24675))

(assert (=> bs!3876 m!101363))

(assert (=> bs!3876 m!101389))

(assert (=> d!24611 d!24675))

(declare-fun d!24677 () Bool)

(assert (=> d!24677 (contains!789 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46757)))

(declare-fun lt!46865 () Unit!2798)

(declare-fun choose!563 (ListLongMap!1521 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2798)

(assert (=> d!24677 (= lt!46865 (choose!563 lt!46758 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46757))))

(assert (=> d!24677 (contains!789 lt!46758 lt!46757)))

(assert (=> d!24677 (= (addStillContains!66 lt!46758 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46757) lt!46865)))

(declare-fun bs!3877 () Bool)

(assert (= bs!3877 d!24677))

(assert (=> bs!3877 m!101547))

(assert (=> bs!3877 m!101547))

(assert (=> bs!3877 m!101567))

(declare-fun m!101793 () Bool)

(assert (=> bs!3877 m!101793))

(declare-fun m!101795 () Bool)

(assert (=> bs!3877 m!101795))

(assert (=> b!94303 d!24677))

(declare-fun d!24679 () Bool)

(assert (=> d!24679 (= (apply!90 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46744) (apply!90 lt!46750 lt!46744))))

(declare-fun lt!46868 () Unit!2798)

(declare-fun choose!564 (ListLongMap!1521 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2798)

(assert (=> d!24679 (= lt!46868 (choose!564 lt!46750 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46744))))

(declare-fun e!61689 () Bool)

(assert (=> d!24679 e!61689))

(declare-fun res!47842 () Bool)

(assert (=> d!24679 (=> (not res!47842) (not e!61689))))

(assert (=> d!24679 (= res!47842 (contains!789 lt!46750 lt!46744))))

(assert (=> d!24679 (= (addApplyDifferent!66 lt!46750 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46744) lt!46868)))

(declare-fun b!94504 () Bool)

(assert (=> b!94504 (= e!61689 (not (= lt!46744 lt!46756)))))

(assert (= (and d!24679 res!47842) b!94504))

(assert (=> d!24679 m!101569))

(assert (=> d!24679 m!101565))

(assert (=> d!24679 m!101569))

(assert (=> d!24679 m!101571))

(declare-fun m!101797 () Bool)

(assert (=> d!24679 m!101797))

(declare-fun m!101799 () Bool)

(assert (=> d!24679 m!101799))

(assert (=> b!94303 d!24679))

(declare-fun b!94529 () Bool)

(declare-fun e!61704 () Bool)

(declare-fun e!61706 () Bool)

(assert (=> b!94529 (= e!61704 e!61706)))

(declare-fun c!15785 () Bool)

(declare-fun e!61705 () Bool)

(assert (=> b!94529 (= c!15785 e!61705)))

(declare-fun res!47851 () Bool)

(assert (=> b!94529 (=> (not res!47851) (not e!61705))))

(assert (=> b!94529 (= res!47851 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94530 () Bool)

(assert (=> b!94530 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> b!94530 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun lt!46884 () ListLongMap!1521)

(declare-fun e!61710 () Bool)

(assert (=> b!94530 (= e!61710 (= (apply!90 lt!46884 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94531 () Bool)

(assert (=> b!94531 (= e!61706 e!61710)))

(assert (=> b!94531 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun res!47853 () Bool)

(assert (=> b!94531 (= res!47853 (contains!789 lt!46884 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94531 (=> (not res!47853) (not e!61710))))

(declare-fun d!24681 () Bool)

(assert (=> d!24681 e!61704))

(declare-fun res!47852 () Bool)

(assert (=> d!24681 (=> (not res!47852) (not e!61704))))

(assert (=> d!24681 (= res!47852 (not (contains!789 lt!46884 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61708 () ListLongMap!1521)

(assert (=> d!24681 (= lt!46884 e!61708)))

(declare-fun c!15786 () Bool)

(assert (=> d!24681 (= c!15786 (bvsge (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!24681 (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992))))))

(assert (=> d!24681 (= (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) lt!46884)))

(declare-fun b!94532 () Bool)

(declare-fun e!61707 () Bool)

(declare-fun isEmpty!351 (ListLongMap!1521) Bool)

(assert (=> b!94532 (= e!61707 (isEmpty!351 lt!46884))))

(declare-fun b!94533 () Bool)

(declare-fun e!61709 () ListLongMap!1521)

(assert (=> b!94533 (= e!61708 e!61709)))

(declare-fun c!15787 () Bool)

(assert (=> b!94533 (= c!15787 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94534 () Bool)

(assert (=> b!94534 (= e!61706 e!61707)))

(declare-fun c!15784 () Bool)

(assert (=> b!94534 (= c!15784 (bvslt (bvadd #b00000000000000000000000000000001 from!355) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94535 () Bool)

(declare-fun call!9482 () ListLongMap!1521)

(assert (=> b!94535 (= e!61709 call!9482)))

(declare-fun b!94536 () Bool)

(assert (=> b!94536 (= e!61708 (ListLongMap!1522 Nil!1566))))

(declare-fun b!94537 () Bool)

(assert (=> b!94537 (= e!61707 (= lt!46884 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!94538 () Bool)

(declare-fun res!47854 () Bool)

(assert (=> b!94538 (=> (not res!47854) (not e!61704))))

(assert (=> b!94538 (= res!47854 (not (contains!789 lt!46884 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94539 () Bool)

(declare-fun lt!46888 () Unit!2798)

(declare-fun lt!46886 () Unit!2798)

(assert (=> b!94539 (= lt!46888 lt!46886)))

(declare-fun lt!46887 () ListLongMap!1521)

(declare-fun lt!46883 () (_ BitVec 64))

(declare-fun lt!46885 () V!3131)

(declare-fun lt!46889 () (_ BitVec 64))

(assert (=> b!94539 (not (contains!789 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885)) lt!46889))))

(declare-fun addStillNotContains!38 (ListLongMap!1521 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2798)

(assert (=> b!94539 (= lt!46886 (addStillNotContains!38 lt!46887 lt!46883 lt!46885 lt!46889))))

(assert (=> b!94539 (= lt!46889 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94539 (= lt!46885 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94539 (= lt!46883 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))

(assert (=> b!94539 (= lt!46887 call!9482)))

(assert (=> b!94539 (= e!61709 (+!133 call!9482 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94540 () Bool)

(assert (=> b!94540 (= e!61705 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94540 (bvsge (bvadd #b00000000000000000000000000000001 from!355) #b00000000000000000000000000000000)))

(declare-fun bm!9479 () Bool)

(assert (=> bm!9479 (= call!9482 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(assert (= (and d!24681 c!15786) b!94536))

(assert (= (and d!24681 (not c!15786)) b!94533))

(assert (= (and b!94533 c!15787) b!94539))

(assert (= (and b!94533 (not c!15787)) b!94535))

(assert (= (or b!94539 b!94535) bm!9479))

(assert (= (and d!24681 res!47852) b!94538))

(assert (= (and b!94538 res!47854) b!94529))

(assert (= (and b!94529 res!47851) b!94540))

(assert (= (and b!94529 c!15785) b!94531))

(assert (= (and b!94529 (not c!15785)) b!94534))

(assert (= (and b!94531 res!47853) b!94530))

(assert (= (and b!94534 c!15784) b!94537))

(assert (= (and b!94534 (not c!15784)) b!94532))

(declare-fun b_lambda!4155 () Bool)

(assert (=> (not b_lambda!4155) (not b!94530)))

(assert (=> b!94530 t!5467))

(declare-fun b_and!5763 () Bool)

(assert (= b_and!5759 (and (=> t!5467 result!3187) b_and!5763)))

(assert (=> b!94530 t!5469))

(declare-fun b_and!5765 () Bool)

(assert (= b_and!5761 (and (=> t!5469 result!3191) b_and!5765)))

(declare-fun b_lambda!4157 () Bool)

(assert (=> (not b_lambda!4157) (not b!94539)))

(assert (=> b!94539 t!5467))

(declare-fun b_and!5767 () Bool)

(assert (= b_and!5763 (and (=> t!5467 result!3187) b_and!5767)))

(assert (=> b!94539 t!5469))

(declare-fun b_and!5769 () Bool)

(assert (= b_and!5765 (and (=> t!5469 result!3191) b_and!5769)))

(assert (=> b!94540 m!101533))

(assert (=> b!94540 m!101533))

(assert (=> b!94540 m!101539))

(declare-fun m!101801 () Bool)

(assert (=> b!94538 m!101801))

(assert (=> b!94530 m!101359))

(assert (=> b!94530 m!101541))

(assert (=> b!94530 m!101541))

(assert (=> b!94530 m!101359))

(assert (=> b!94530 m!101543))

(assert (=> b!94530 m!101533))

(assert (=> b!94530 m!101533))

(declare-fun m!101803 () Bool)

(assert (=> b!94530 m!101803))

(declare-fun m!101805 () Bool)

(assert (=> b!94532 m!101805))

(assert (=> b!94533 m!101533))

(assert (=> b!94533 m!101533))

(assert (=> b!94533 m!101539))

(declare-fun m!101807 () Bool)

(assert (=> b!94537 m!101807))

(assert (=> bm!9479 m!101807))

(declare-fun m!101809 () Bool)

(assert (=> b!94539 m!101809))

(declare-fun m!101811 () Bool)

(assert (=> b!94539 m!101811))

(declare-fun m!101813 () Bool)

(assert (=> b!94539 m!101813))

(assert (=> b!94539 m!101811))

(assert (=> b!94539 m!101541))

(assert (=> b!94539 m!101533))

(assert (=> b!94539 m!101541))

(assert (=> b!94539 m!101359))

(assert (=> b!94539 m!101543))

(assert (=> b!94539 m!101359))

(declare-fun m!101815 () Bool)

(assert (=> b!94539 m!101815))

(declare-fun m!101817 () Bool)

(assert (=> d!24681 m!101817))

(assert (=> d!24681 m!101373))

(assert (=> b!94531 m!101533))

(assert (=> b!94531 m!101533))

(declare-fun m!101819 () Bool)

(assert (=> b!94531 m!101819))

(assert (=> b!94303 d!24681))

(declare-fun d!24683 () Bool)

(declare-fun e!61712 () Bool)

(assert (=> d!24683 e!61712))

(declare-fun res!47855 () Bool)

(assert (=> d!24683 (=> res!47855 e!61712)))

(declare-fun lt!46893 () Bool)

(assert (=> d!24683 (= res!47855 (not lt!46893))))

(declare-fun lt!46890 () Bool)

(assert (=> d!24683 (= lt!46893 lt!46890)))

(declare-fun lt!46892 () Unit!2798)

(declare-fun e!61711 () Unit!2798)

(assert (=> d!24683 (= lt!46892 e!61711)))

(declare-fun c!15788 () Bool)

(assert (=> d!24683 (= c!15788 lt!46890)))

(assert (=> d!24683 (= lt!46890 (containsKey!152 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))

(assert (=> d!24683 (= (contains!789 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46757) lt!46893)))

(declare-fun b!94541 () Bool)

(declare-fun lt!46891 () Unit!2798)

(assert (=> b!94541 (= e!61711 lt!46891)))

(assert (=> b!94541 (= lt!46891 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))

(assert (=> b!94541 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))

(declare-fun b!94542 () Bool)

(declare-fun Unit!2816 () Unit!2798)

(assert (=> b!94542 (= e!61711 Unit!2816)))

(declare-fun b!94543 () Bool)

(assert (=> b!94543 (= e!61712 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757)))))

(assert (= (and d!24683 c!15788) b!94541))

(assert (= (and d!24683 (not c!15788)) b!94542))

(assert (= (and d!24683 (not res!47855)) b!94543))

(declare-fun m!101821 () Bool)

(assert (=> d!24683 m!101821))

(declare-fun m!101823 () Bool)

(assert (=> b!94541 m!101823))

(declare-fun m!101825 () Bool)

(assert (=> b!94541 m!101825))

(assert (=> b!94541 m!101825))

(declare-fun m!101827 () Bool)

(assert (=> b!94541 m!101827))

(assert (=> b!94543 m!101825))

(assert (=> b!94543 m!101825))

(assert (=> b!94543 m!101827))

(assert (=> b!94303 d!24683))

(declare-fun d!24685 () Bool)

(assert (=> d!24685 (= (apply!90 lt!46750 lt!46744) (get!1265 (getValueByKey!148 (toList!776 lt!46750) lt!46744)))))

(declare-fun bs!3878 () Bool)

(assert (= bs!3878 d!24685))

(declare-fun m!101829 () Bool)

(assert (=> bs!3878 m!101829))

(assert (=> bs!3878 m!101829))

(declare-fun m!101831 () Bool)

(assert (=> bs!3878 m!101831))

(assert (=> b!94303 d!24685))

(declare-fun d!24687 () Bool)

(declare-fun e!61713 () Bool)

(assert (=> d!24687 e!61713))

(declare-fun res!47856 () Bool)

(assert (=> d!24687 (=> (not res!47856) (not e!61713))))

(declare-fun lt!46895 () ListLongMap!1521)

(assert (=> d!24687 (= res!47856 (contains!789 lt!46895 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!46896 () List!1569)

(assert (=> d!24687 (= lt!46895 (ListLongMap!1522 lt!46896))))

(declare-fun lt!46894 () Unit!2798)

(declare-fun lt!46897 () Unit!2798)

(assert (=> d!24687 (= lt!46894 lt!46897)))

(assert (=> d!24687 (= (getValueByKey!148 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24687 (= lt!46897 (lemmaContainsTupThenGetReturnValue!64 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24687 (= lt!46896 (insertStrictlySorted!67 (toList!776 lt!46750) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24687 (= (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46895)))

(declare-fun b!94544 () Bool)

(declare-fun res!47857 () Bool)

(assert (=> b!94544 (=> (not res!47857) (not e!61713))))

(assert (=> b!94544 (= res!47857 (= (getValueByKey!148 (toList!776 lt!46895) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94545 () Bool)

(assert (=> b!94545 (= e!61713 (contains!792 (toList!776 lt!46895) (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!24687 res!47856) b!94544))

(assert (= (and b!94544 res!47857) b!94545))

(declare-fun m!101833 () Bool)

(assert (=> d!24687 m!101833))

(declare-fun m!101835 () Bool)

(assert (=> d!24687 m!101835))

(declare-fun m!101837 () Bool)

(assert (=> d!24687 m!101837))

(declare-fun m!101839 () Bool)

(assert (=> d!24687 m!101839))

(declare-fun m!101841 () Bool)

(assert (=> b!94544 m!101841))

(declare-fun m!101843 () Bool)

(assert (=> b!94545 m!101843))

(assert (=> b!94303 d!24687))

(declare-fun d!24689 () Bool)

(assert (=> d!24689 (= (apply!90 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46759) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46759)))))

(declare-fun bs!3879 () Bool)

(assert (= bs!3879 d!24689))

(declare-fun m!101845 () Bool)

(assert (=> bs!3879 m!101845))

(assert (=> bs!3879 m!101845))

(declare-fun m!101847 () Bool)

(assert (=> bs!3879 m!101847))

(assert (=> b!94303 d!24689))

(declare-fun d!24691 () Bool)

(declare-fun e!61714 () Bool)

(assert (=> d!24691 e!61714))

(declare-fun res!47858 () Bool)

(assert (=> d!24691 (=> (not res!47858) (not e!61714))))

(declare-fun lt!46899 () ListLongMap!1521)

(assert (=> d!24691 (= res!47858 (contains!789 lt!46899 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!46900 () List!1569)

(assert (=> d!24691 (= lt!46899 (ListLongMap!1522 lt!46900))))

(declare-fun lt!46898 () Unit!2798)

(declare-fun lt!46901 () Unit!2798)

(assert (=> d!24691 (= lt!46898 lt!46901)))

(assert (=> d!24691 (= (getValueByKey!148 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24691 (= lt!46901 (lemmaContainsTupThenGetReturnValue!64 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24691 (= lt!46900 (insertStrictlySorted!67 (toList!776 lt!46758) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24691 (= (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46899)))

(declare-fun b!94546 () Bool)

(declare-fun res!47859 () Bool)

(assert (=> b!94546 (=> (not res!47859) (not e!61714))))

(assert (=> b!94546 (= res!47859 (= (getValueByKey!148 (toList!776 lt!46899) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94547 () Bool)

(assert (=> b!94547 (= e!61714 (contains!792 (toList!776 lt!46899) (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!24691 res!47858) b!94546))

(assert (= (and b!94546 res!47859) b!94547))

(declare-fun m!101849 () Bool)

(assert (=> d!24691 m!101849))

(declare-fun m!101851 () Bool)

(assert (=> d!24691 m!101851))

(declare-fun m!101853 () Bool)

(assert (=> d!24691 m!101853))

(declare-fun m!101855 () Bool)

(assert (=> d!24691 m!101855))

(declare-fun m!101857 () Bool)

(assert (=> b!94546 m!101857))

(declare-fun m!101859 () Bool)

(assert (=> b!94547 m!101859))

(assert (=> b!94303 d!24691))

(declare-fun d!24693 () Bool)

(assert (=> d!24693 (= (apply!90 lt!46754 lt!46759) (get!1265 (getValueByKey!148 (toList!776 lt!46754) lt!46759)))))

(declare-fun bs!3880 () Bool)

(assert (= bs!3880 d!24693))

(declare-fun m!101861 () Bool)

(assert (=> bs!3880 m!101861))

(assert (=> bs!3880 m!101861))

(declare-fun m!101863 () Bool)

(assert (=> bs!3880 m!101863))

(assert (=> b!94303 d!24693))

(declare-fun d!24695 () Bool)

(declare-fun e!61715 () Bool)

(assert (=> d!24695 e!61715))

(declare-fun res!47860 () Bool)

(assert (=> d!24695 (=> (not res!47860) (not e!61715))))

(declare-fun lt!46903 () ListLongMap!1521)

(assert (=> d!24695 (= res!47860 (contains!789 lt!46903 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!46904 () List!1569)

(assert (=> d!24695 (= lt!46903 (ListLongMap!1522 lt!46904))))

(declare-fun lt!46902 () Unit!2798)

(declare-fun lt!46905 () Unit!2798)

(assert (=> d!24695 (= lt!46902 lt!46905)))

(assert (=> d!24695 (= (getValueByKey!148 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24695 (= lt!46905 (lemmaContainsTupThenGetReturnValue!64 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24695 (= lt!46904 (insertStrictlySorted!67 (toList!776 lt!46752) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24695 (= (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46903)))

(declare-fun b!94548 () Bool)

(declare-fun res!47861 () Bool)

(assert (=> b!94548 (=> (not res!47861) (not e!61715))))

(assert (=> b!94548 (= res!47861 (= (getValueByKey!148 (toList!776 lt!46903) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94549 () Bool)

(assert (=> b!94549 (= e!61715 (contains!792 (toList!776 lt!46903) (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!24695 res!47860) b!94548))

(assert (= (and b!94548 res!47861) b!94549))

(declare-fun m!101865 () Bool)

(assert (=> d!24695 m!101865))

(declare-fun m!101867 () Bool)

(assert (=> d!24695 m!101867))

(declare-fun m!101869 () Bool)

(assert (=> d!24695 m!101869))

(declare-fun m!101871 () Bool)

(assert (=> d!24695 m!101871))

(declare-fun m!101873 () Bool)

(assert (=> b!94548 m!101873))

(declare-fun m!101875 () Bool)

(assert (=> b!94549 m!101875))

(assert (=> b!94303 d!24695))

(declare-fun d!24697 () Bool)

(assert (=> d!24697 (= (apply!90 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46759) (apply!90 lt!46754 lt!46759))))

(declare-fun lt!46906 () Unit!2798)

(assert (=> d!24697 (= lt!46906 (choose!564 lt!46754 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46759))))

(declare-fun e!61716 () Bool)

(assert (=> d!24697 e!61716))

(declare-fun res!47862 () Bool)

(assert (=> d!24697 (=> (not res!47862) (not e!61716))))

(assert (=> d!24697 (= res!47862 (contains!789 lt!46754 lt!46759))))

(assert (=> d!24697 (= (addApplyDifferent!66 lt!46754 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46759) lt!46906)))

(declare-fun b!94550 () Bool)

(assert (=> b!94550 (= e!61716 (not (= lt!46759 lt!46746)))))

(assert (= (and d!24697 res!47862) b!94550))

(assert (=> d!24697 m!101563))

(assert (=> d!24697 m!101551))

(assert (=> d!24697 m!101563))

(assert (=> d!24697 m!101573))

(declare-fun m!101877 () Bool)

(assert (=> d!24697 m!101877))

(declare-fun m!101879 () Bool)

(assert (=> d!24697 m!101879))

(assert (=> b!94303 d!24697))

(declare-fun d!24699 () Bool)

(assert (=> d!24699 (= (apply!90 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46742) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46742)))))

(declare-fun bs!3881 () Bool)

(assert (= bs!3881 d!24699))

(declare-fun m!101881 () Bool)

(assert (=> bs!3881 m!101881))

(assert (=> bs!3881 m!101881))

(declare-fun m!101883 () Bool)

(assert (=> bs!3881 m!101883))

(assert (=> b!94303 d!24699))

(declare-fun d!24701 () Bool)

(assert (=> d!24701 (= (apply!90 lt!46752 lt!46742) (get!1265 (getValueByKey!148 (toList!776 lt!46752) lt!46742)))))

(declare-fun bs!3882 () Bool)

(assert (= bs!3882 d!24701))

(declare-fun m!101885 () Bool)

(assert (=> bs!3882 m!101885))

(assert (=> bs!3882 m!101885))

(declare-fun m!101887 () Bool)

(assert (=> bs!3882 m!101887))

(assert (=> b!94303 d!24701))

(declare-fun d!24703 () Bool)

(declare-fun e!61717 () Bool)

(assert (=> d!24703 e!61717))

(declare-fun res!47863 () Bool)

(assert (=> d!24703 (=> (not res!47863) (not e!61717))))

(declare-fun lt!46908 () ListLongMap!1521)

(assert (=> d!24703 (= res!47863 (contains!789 lt!46908 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!46909 () List!1569)

(assert (=> d!24703 (= lt!46908 (ListLongMap!1522 lt!46909))))

(declare-fun lt!46907 () Unit!2798)

(declare-fun lt!46910 () Unit!2798)

(assert (=> d!24703 (= lt!46907 lt!46910)))

(assert (=> d!24703 (= (getValueByKey!148 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24703 (= lt!46910 (lemmaContainsTupThenGetReturnValue!64 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24703 (= lt!46909 (insertStrictlySorted!67 (toList!776 lt!46754) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24703 (= (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46908)))

(declare-fun b!94551 () Bool)

(declare-fun res!47864 () Bool)

(assert (=> b!94551 (=> (not res!47864) (not e!61717))))

(assert (=> b!94551 (= res!47864 (= (getValueByKey!148 (toList!776 lt!46908) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94552 () Bool)

(assert (=> b!94552 (= e!61717 (contains!792 (toList!776 lt!46908) (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!24703 res!47863) b!94551))

(assert (= (and b!94551 res!47864) b!94552))

(declare-fun m!101889 () Bool)

(assert (=> d!24703 m!101889))

(declare-fun m!101891 () Bool)

(assert (=> d!24703 m!101891))

(declare-fun m!101893 () Bool)

(assert (=> d!24703 m!101893))

(declare-fun m!101895 () Bool)

(assert (=> d!24703 m!101895))

(declare-fun m!101897 () Bool)

(assert (=> b!94551 m!101897))

(declare-fun m!101899 () Bool)

(assert (=> b!94552 m!101899))

(assert (=> b!94303 d!24703))

(declare-fun d!24705 () Bool)

(assert (=> d!24705 (= (apply!90 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46742) (apply!90 lt!46752 lt!46742))))

(declare-fun lt!46911 () Unit!2798)

(assert (=> d!24705 (= lt!46911 (choose!564 lt!46752 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46742))))

(declare-fun e!61718 () Bool)

(assert (=> d!24705 e!61718))

(declare-fun res!47865 () Bool)

(assert (=> d!24705 (=> (not res!47865) (not e!61718))))

(assert (=> d!24705 (= res!47865 (contains!789 lt!46752 lt!46742))))

(assert (=> d!24705 (= (addApplyDifferent!66 lt!46752 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46742) lt!46911)))

(declare-fun b!94553 () Bool)

(assert (=> b!94553 (= e!61718 (not (= lt!46742 lt!46748)))))

(assert (= (and d!24705 res!47865) b!94553))

(assert (=> d!24705 m!101553))

(assert (=> d!24705 m!101575))

(assert (=> d!24705 m!101553))

(assert (=> d!24705 m!101555))

(declare-fun m!101901 () Bool)

(assert (=> d!24705 m!101901))

(declare-fun m!101903 () Bool)

(assert (=> d!24705 m!101903))

(assert (=> b!94303 d!24705))

(declare-fun d!24707 () Bool)

(assert (=> d!24707 (= (apply!90 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46744) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46744)))))

(declare-fun bs!3883 () Bool)

(assert (= bs!3883 d!24707))

(declare-fun m!101905 () Bool)

(assert (=> bs!3883 m!101905))

(assert (=> bs!3883 m!101905))

(declare-fun m!101907 () Bool)

(assert (=> bs!3883 m!101907))

(assert (=> b!94303 d!24707))

(declare-fun d!24709 () Bool)

(declare-fun e!61720 () Bool)

(assert (=> d!24709 e!61720))

(declare-fun res!47866 () Bool)

(assert (=> d!24709 (=> res!47866 e!61720)))

(declare-fun lt!46915 () Bool)

(assert (=> d!24709 (= res!47866 (not lt!46915))))

(declare-fun lt!46912 () Bool)

(assert (=> d!24709 (= lt!46915 lt!46912)))

(declare-fun lt!46914 () Unit!2798)

(declare-fun e!61719 () Unit!2798)

(assert (=> d!24709 (= lt!46914 e!61719)))

(declare-fun c!15789 () Bool)

(assert (=> d!24709 (= c!15789 lt!46912)))

(assert (=> d!24709 (= lt!46912 (containsKey!152 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (=> d!24709 (= (contains!789 call!9435 (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))) lt!46915)))

(declare-fun b!94554 () Bool)

(declare-fun lt!46913 () Unit!2798)

(assert (=> b!94554 (= e!61719 lt!46913)))

(assert (=> b!94554 (= lt!46913 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (=> b!94554 (isDefined!101 (getValueByKey!148 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(declare-fun b!94555 () Bool)

(declare-fun Unit!2817 () Unit!2798)

(assert (=> b!94555 (= e!61719 Unit!2817)))

(declare-fun b!94556 () Bool)

(assert (=> b!94556 (= e!61720 (isDefined!101 (getValueByKey!148 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))))

(assert (= (and d!24709 c!15789) b!94554))

(assert (= (and d!24709 (not c!15789)) b!94555))

(assert (= (and d!24709 (not res!47866)) b!94556))

(assert (=> d!24709 m!101489))

(declare-fun m!101909 () Bool)

(assert (=> d!24709 m!101909))

(assert (=> b!94554 m!101489))

(declare-fun m!101911 () Bool)

(assert (=> b!94554 m!101911))

(assert (=> b!94554 m!101489))

(declare-fun m!101913 () Bool)

(assert (=> b!94554 m!101913))

(assert (=> b!94554 m!101913))

(declare-fun m!101915 () Bool)

(assert (=> b!94554 m!101915))

(assert (=> b!94556 m!101489))

(assert (=> b!94556 m!101913))

(assert (=> b!94556 m!101913))

(assert (=> b!94556 m!101915))

(assert (=> b!94211 d!24709))

(declare-fun d!24711 () Bool)

(declare-fun e!61723 () Bool)

(assert (=> d!24711 e!61723))

(declare-fun res!47869 () Bool)

(assert (=> d!24711 (=> (not res!47869) (not e!61723))))

(assert (=> d!24711 (= res!47869 (and (bvsge (index!3146 lt!46675) #b00000000000000000000000000000000) (bvslt (index!3146 lt!46675) (size!2245 (_keys!4118 newMap!16)))))))

(declare-fun lt!46918 () Unit!2798)

(declare-fun choose!565 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) Int) Unit!2798)

(assert (=> d!24711 (= lt!46918 (choose!565 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24711 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24711 (= (lemmaValidKeyInArrayIsInListMap!100 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (defaultEntry!2436 newMap!16)) lt!46918)))

(declare-fun b!94559 () Bool)

(assert (=> b!94559 (= e!61723 (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (= (and d!24711 res!47869) b!94559))

(declare-fun m!101917 () Bool)

(assert (=> d!24711 m!101917))

(assert (=> d!24711 m!101603))

(declare-fun m!101919 () Bool)

(assert (=> b!94559 m!101919))

(assert (=> b!94559 m!101489))

(assert (=> b!94559 m!101919))

(assert (=> b!94559 m!101489))

(declare-fun m!101921 () Bool)

(assert (=> b!94559 m!101921))

(assert (=> b!94211 d!24711))

(declare-fun d!24713 () Bool)

(declare-fun e!61726 () Bool)

(assert (=> d!24713 e!61726))

(declare-fun res!47872 () Bool)

(assert (=> d!24713 (=> (not res!47872) (not e!61726))))

(assert (=> d!24713 (= res!47872 (and (bvsge (index!3146 lt!46675) #b00000000000000000000000000000000) (bvslt (index!3146 lt!46675) (size!2246 (_values!2419 newMap!16)))))))

(declare-fun lt!46921 () Unit!2798)

(declare-fun choose!566 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2798)

(assert (=> d!24713 (= lt!46921 (choose!566 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24713 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24713 (= (lemmaChangeValueExistingKeyToArrayThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) lt!46921)))

(declare-fun b!94562 () Bool)

(assert (=> b!94562 (= e!61726 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))))))

(assert (= (and d!24713 res!47872) b!94562))

(assert (=> d!24713 m!101363))

(assert (=> d!24713 m!101361))

(declare-fun m!101923 () Bool)

(assert (=> d!24713 m!101923))

(assert (=> d!24713 m!101603))

(assert (=> b!94562 m!101465))

(assert (=> b!94562 m!101465))

(declare-fun m!101925 () Bool)

(assert (=> b!94562 m!101925))

(assert (=> b!94562 m!101469))

(declare-fun m!101927 () Bool)

(assert (=> b!94562 m!101927))

(assert (=> b!94211 d!24713))

(declare-fun b!94564 () Bool)

(declare-fun e!61727 () Bool)

(declare-fun lt!46942 () ListLongMap!1521)

(assert (=> b!94564 (= e!61727 (= (apply!90 lt!46942 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun e!61731 () Bool)

(declare-fun b!94565 () Bool)

(assert (=> b!94565 (= e!61731 (= (apply!90 lt!46942 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94565 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (ite c!15700 (_values!2419 newMap!16) lt!46687))))))

(assert (=> b!94565 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94566 () Bool)

(declare-fun e!61737 () Bool)

(assert (=> b!94566 (= e!61737 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94567 () Bool)

(declare-fun e!61732 () Bool)

(declare-fun e!61728 () Bool)

(assert (=> b!94567 (= e!61732 e!61728)))

(declare-fun res!47874 () Bool)

(declare-fun call!9484 () Bool)

(assert (=> b!94567 (= res!47874 call!9484)))

(assert (=> b!94567 (=> (not res!47874) (not e!61728))))

(declare-fun bm!9480 () Bool)

(declare-fun call!9486 () Bool)

(assert (=> bm!9480 (= call!9486 (contains!789 lt!46942 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94568 () Bool)

(assert (=> b!94568 (= e!61728 (= (apply!90 lt!46942 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94569 () Bool)

(declare-fun e!61735 () Bool)

(assert (=> b!94569 (= e!61735 e!61731)))

(declare-fun res!47881 () Bool)

(assert (=> b!94569 (=> (not res!47881) (not e!61731))))

(assert (=> b!94569 (= res!47881 (contains!789 lt!46942 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94569 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94570 () Bool)

(declare-fun e!61730 () Bool)

(declare-fun e!61733 () Bool)

(assert (=> b!94570 (= e!61730 e!61733)))

(declare-fun c!15795 () Bool)

(assert (=> b!94570 (= c!15795 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94571 () Bool)

(assert (=> b!94571 (= e!61732 (not call!9484))))

(declare-fun b!94572 () Bool)

(declare-fun e!61729 () Unit!2798)

(declare-fun Unit!2818 () Unit!2798)

(assert (=> b!94572 (= e!61729 Unit!2818)))

(declare-fun b!94573 () Bool)

(assert (=> b!94573 (= e!61733 (not call!9486))))

(declare-fun b!94563 () Bool)

(declare-fun e!61736 () ListLongMap!1521)

(declare-fun call!9487 () ListLongMap!1521)

(assert (=> b!94563 (= e!61736 (+!133 call!9487 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!24715 () Bool)

(assert (=> d!24715 e!61730))

(declare-fun res!47876 () Bool)

(assert (=> d!24715 (=> (not res!47876) (not e!61730))))

(assert (=> d!24715 (= res!47876 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!46943 () ListLongMap!1521)

(assert (=> d!24715 (= lt!46942 lt!46943)))

(declare-fun lt!46941 () Unit!2798)

(assert (=> d!24715 (= lt!46941 e!61729)))

(declare-fun c!15793 () Bool)

(assert (=> d!24715 (= c!15793 e!61737)))

(declare-fun res!47873 () Bool)

(assert (=> d!24715 (=> (not res!47873) (not e!61737))))

(assert (=> d!24715 (= res!47873 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24715 (= lt!46943 e!61736)))

(declare-fun c!15794 () Bool)

(assert (=> d!24715 (= c!15794 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24715 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24715 (= (getCurrentListMap!468 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46942)))

(declare-fun b!94574 () Bool)

(declare-fun e!61739 () ListLongMap!1521)

(declare-fun call!9483 () ListLongMap!1521)

(assert (=> b!94574 (= e!61739 call!9483)))

(declare-fun b!94575 () Bool)

(declare-fun e!61738 () Bool)

(assert (=> b!94575 (= e!61738 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94576 () Bool)

(declare-fun e!61734 () ListLongMap!1521)

(declare-fun call!9485 () ListLongMap!1521)

(assert (=> b!94576 (= e!61734 call!9485)))

(declare-fun b!94577 () Bool)

(declare-fun res!47879 () Bool)

(assert (=> b!94577 (=> (not res!47879) (not e!61730))))

(assert (=> b!94577 (= res!47879 e!61735)))

(declare-fun res!47880 () Bool)

(assert (=> b!94577 (=> res!47880 e!61735)))

(assert (=> b!94577 (= res!47880 (not e!61738))))

(declare-fun res!47878 () Bool)

(assert (=> b!94577 (=> (not res!47878) (not e!61738))))

(assert (=> b!94577 (= res!47878 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94578 () Bool)

(declare-fun lt!46931 () Unit!2798)

(assert (=> b!94578 (= e!61729 lt!46931)))

(declare-fun lt!46938 () ListLongMap!1521)

(assert (=> b!94578 (= lt!46938 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46929 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46929 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46937 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46937 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46935 () Unit!2798)

(assert (=> b!94578 (= lt!46935 (addStillContains!66 lt!46938 lt!46929 (zeroValue!2323 newMap!16) lt!46937))))

(assert (=> b!94578 (contains!789 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))) lt!46937)))

(declare-fun lt!46925 () Unit!2798)

(assert (=> b!94578 (= lt!46925 lt!46935)))

(declare-fun lt!46930 () ListLongMap!1521)

(assert (=> b!94578 (= lt!46930 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46936 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46936 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46924 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46924 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46940 () Unit!2798)

(assert (=> b!94578 (= lt!46940 (addApplyDifferent!66 lt!46930 lt!46936 (minValue!2323 newMap!16) lt!46924))))

(assert (=> b!94578 (= (apply!90 (+!133 lt!46930 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))) lt!46924) (apply!90 lt!46930 lt!46924))))

(declare-fun lt!46933 () Unit!2798)

(assert (=> b!94578 (= lt!46933 lt!46940)))

(declare-fun lt!46934 () ListLongMap!1521)

(assert (=> b!94578 (= lt!46934 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46926 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46926 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46939 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46939 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46927 () Unit!2798)

(assert (=> b!94578 (= lt!46927 (addApplyDifferent!66 lt!46934 lt!46926 (zeroValue!2323 newMap!16) lt!46939))))

(assert (=> b!94578 (= (apply!90 (+!133 lt!46934 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))) lt!46939) (apply!90 lt!46934 lt!46939))))

(declare-fun lt!46923 () Unit!2798)

(assert (=> b!94578 (= lt!46923 lt!46927)))

(declare-fun lt!46932 () ListLongMap!1521)

(assert (=> b!94578 (= lt!46932 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46928 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46928 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46922 () (_ BitVec 64))

(assert (=> b!94578 (= lt!46922 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94578 (= lt!46931 (addApplyDifferent!66 lt!46932 lt!46928 (minValue!2323 newMap!16) lt!46922))))

(assert (=> b!94578 (= (apply!90 (+!133 lt!46932 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))) lt!46922) (apply!90 lt!46932 lt!46922))))

(declare-fun b!94579 () Bool)

(declare-fun c!15792 () Bool)

(assert (=> b!94579 (= c!15792 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94579 (= e!61734 e!61739)))

(declare-fun bm!9481 () Bool)

(assert (=> bm!9481 (= call!9484 (contains!789 lt!46942 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94580 () Bool)

(assert (=> b!94580 (= e!61739 call!9485)))

(declare-fun bm!9482 () Bool)

(declare-fun call!9488 () ListLongMap!1521)

(declare-fun call!9489 () ListLongMap!1521)

(declare-fun c!15791 () Bool)

(assert (=> bm!9482 (= call!9487 (+!133 (ite c!15794 call!9489 (ite c!15791 call!9488 call!9483)) (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9483 () Bool)

(assert (=> bm!9483 (= call!9488 call!9489)))

(declare-fun b!94581 () Bool)

(declare-fun res!47875 () Bool)

(assert (=> b!94581 (=> (not res!47875) (not e!61730))))

(assert (=> b!94581 (= res!47875 e!61732)))

(declare-fun c!15790 () Bool)

(assert (=> b!94581 (= c!15790 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9484 () Bool)

(assert (=> bm!9484 (= call!9489 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9485 () Bool)

(assert (=> bm!9485 (= call!9483 call!9488)))

(declare-fun b!94582 () Bool)

(assert (=> b!94582 (= e!61736 e!61734)))

(assert (=> b!94582 (= c!15791 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94583 () Bool)

(assert (=> b!94583 (= e!61733 e!61727)))

(declare-fun res!47877 () Bool)

(assert (=> b!94583 (= res!47877 call!9486)))

(assert (=> b!94583 (=> (not res!47877) (not e!61727))))

(declare-fun bm!9486 () Bool)

(assert (=> bm!9486 (= call!9485 call!9487)))

(assert (= (and d!24715 c!15794) b!94563))

(assert (= (and d!24715 (not c!15794)) b!94582))

(assert (= (and b!94582 c!15791) b!94576))

(assert (= (and b!94582 (not c!15791)) b!94579))

(assert (= (and b!94579 c!15792) b!94580))

(assert (= (and b!94579 (not c!15792)) b!94574))

(assert (= (or b!94580 b!94574) bm!9485))

(assert (= (or b!94576 bm!9485) bm!9483))

(assert (= (or b!94576 b!94580) bm!9486))

(assert (= (or b!94563 bm!9483) bm!9484))

(assert (= (or b!94563 bm!9486) bm!9482))

(assert (= (and d!24715 res!47873) b!94566))

(assert (= (and d!24715 c!15793) b!94578))

(assert (= (and d!24715 (not c!15793)) b!94572))

(assert (= (and d!24715 res!47876) b!94577))

(assert (= (and b!94577 res!47878) b!94575))

(assert (= (and b!94577 (not res!47880)) b!94569))

(assert (= (and b!94569 res!47881) b!94565))

(assert (= (and b!94577 res!47879) b!94581))

(assert (= (and b!94581 c!15790) b!94567))

(assert (= (and b!94581 (not c!15790)) b!94571))

(assert (= (and b!94567 res!47874) b!94568))

(assert (= (or b!94567 b!94571) bm!9481))

(assert (= (and b!94581 res!47875) b!94570))

(assert (= (and b!94570 c!15795) b!94583))

(assert (= (and b!94570 (not c!15795)) b!94573))

(assert (= (and b!94583 res!47877) b!94564))

(assert (= (or b!94583 b!94573) bm!9480))

(declare-fun b_lambda!4159 () Bool)

(assert (=> (not b_lambda!4159) (not b!94565)))

(assert (=> b!94565 t!5479))

(declare-fun b_and!5771 () Bool)

(assert (= b_and!5767 (and (=> t!5479 result!3201) b_and!5771)))

(assert (=> b!94565 t!5481))

(declare-fun b_and!5773 () Bool)

(assert (= b_and!5769 (and (=> t!5481 result!3203) b_and!5773)))

(declare-fun m!101929 () Bool)

(assert (=> b!94563 m!101929))

(assert (=> d!24715 m!101603))

(declare-fun m!101931 () Bool)

(assert (=> b!94564 m!101931))

(declare-fun m!101933 () Bool)

(assert (=> b!94568 m!101933))

(declare-fun m!101935 () Bool)

(assert (=> bm!9482 m!101935))

(declare-fun m!101937 () Bool)

(assert (=> bm!9484 m!101937))

(assert (=> b!94569 m!101689))

(assert (=> b!94569 m!101689))

(declare-fun m!101939 () Bool)

(assert (=> b!94569 m!101939))

(declare-fun m!101941 () Bool)

(assert (=> bm!9480 m!101941))

(assert (=> b!94566 m!101689))

(assert (=> b!94566 m!101689))

(assert (=> b!94566 m!101695))

(assert (=> b!94565 m!101689))

(assert (=> b!94565 m!101697))

(declare-fun m!101943 () Bool)

(assert (=> b!94565 m!101943))

(assert (=> b!94565 m!101943))

(assert (=> b!94565 m!101697))

(declare-fun m!101945 () Bool)

(assert (=> b!94565 m!101945))

(assert (=> b!94565 m!101689))

(declare-fun m!101947 () Bool)

(assert (=> b!94565 m!101947))

(assert (=> b!94575 m!101689))

(assert (=> b!94575 m!101689))

(assert (=> b!94575 m!101695))

(declare-fun m!101949 () Bool)

(assert (=> b!94578 m!101949))

(assert (=> b!94578 m!101689))

(declare-fun m!101951 () Bool)

(assert (=> b!94578 m!101951))

(declare-fun m!101953 () Bool)

(assert (=> b!94578 m!101953))

(declare-fun m!101955 () Bool)

(assert (=> b!94578 m!101955))

(declare-fun m!101957 () Bool)

(assert (=> b!94578 m!101957))

(assert (=> b!94578 m!101955))

(declare-fun m!101959 () Bool)

(assert (=> b!94578 m!101959))

(declare-fun m!101961 () Bool)

(assert (=> b!94578 m!101961))

(declare-fun m!101963 () Bool)

(assert (=> b!94578 m!101963))

(declare-fun m!101965 () Bool)

(assert (=> b!94578 m!101965))

(declare-fun m!101967 () Bool)

(assert (=> b!94578 m!101967))

(assert (=> b!94578 m!101949))

(declare-fun m!101969 () Bool)

(assert (=> b!94578 m!101969))

(declare-fun m!101971 () Bool)

(assert (=> b!94578 m!101971))

(declare-fun m!101973 () Bool)

(assert (=> b!94578 m!101973))

(assert (=> b!94578 m!101965))

(declare-fun m!101975 () Bool)

(assert (=> b!94578 m!101975))

(assert (=> b!94578 m!101937))

(declare-fun m!101977 () Bool)

(assert (=> b!94578 m!101977))

(assert (=> b!94578 m!101971))

(declare-fun m!101979 () Bool)

(assert (=> bm!9481 m!101979))

(assert (=> bm!9429 d!24715))

(declare-fun d!24717 () Bool)

(declare-fun res!47882 () Bool)

(declare-fun e!61740 () Bool)

(assert (=> d!24717 (=> res!47882 e!61740)))

(assert (=> d!24717 (= res!47882 (= (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24717 (= (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000) e!61740)))

(declare-fun b!94584 () Bool)

(declare-fun e!61741 () Bool)

(assert (=> b!94584 (= e!61740 e!61741)))

(declare-fun res!47883 () Bool)

(assert (=> b!94584 (=> (not res!47883) (not e!61741))))

(assert (=> b!94584 (= res!47883 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94585 () Bool)

(assert (=> b!94585 (= e!61741 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24717 (not res!47882)) b!94584))

(assert (= (and b!94584 res!47883) b!94585))

(assert (=> d!24717 m!101689))

(assert (=> b!94585 m!101363))

(declare-fun m!101981 () Bool)

(assert (=> b!94585 m!101981))

(assert (=> bm!9414 d!24717))

(assert (=> bm!9421 d!24633))

(assert (=> d!24601 d!24649))

(declare-fun b!94586 () Bool)

(declare-fun e!61745 () Bool)

(declare-fun e!61744 () Bool)

(assert (=> b!94586 (= e!61745 e!61744)))

(declare-fun c!15796 () Bool)

(assert (=> b!94586 (= c!15796 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94587 () Bool)

(declare-fun call!9490 () Bool)

(assert (=> b!94587 (= e!61744 call!9490)))

(declare-fun b!94588 () Bool)

(assert (=> b!94588 (= e!61744 call!9490)))

(declare-fun bm!9487 () Bool)

(assert (=> bm!9487 (= call!9490 (arrayNoDuplicates!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15796 (Cons!1564 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1565) Nil!1565)))))

(declare-fun b!94589 () Bool)

(declare-fun e!61743 () Bool)

(assert (=> b!94589 (= e!61743 e!61745)))

(declare-fun res!47886 () Bool)

(assert (=> b!94589 (=> (not res!47886) (not e!61745))))

(declare-fun e!61742 () Bool)

(assert (=> b!94589 (= res!47886 (not e!61742))))

(declare-fun res!47884 () Bool)

(assert (=> b!94589 (=> (not res!47884) (not e!61742))))

(assert (=> b!94589 (= res!47884 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94590 () Bool)

(assert (=> b!94590 (= e!61742 (contains!791 Nil!1565 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun d!24719 () Bool)

(declare-fun res!47885 () Bool)

(assert (=> d!24719 (=> res!47885 e!61743)))

(assert (=> d!24719 (= res!47885 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24719 (= (arrayNoDuplicates!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 Nil!1565) e!61743)))

(assert (= (and d!24719 (not res!47885)) b!94589))

(assert (= (and b!94589 res!47884) b!94590))

(assert (= (and b!94589 res!47886) b!94586))

(assert (= (and b!94586 c!15796) b!94587))

(assert (= (and b!94586 (not c!15796)) b!94588))

(assert (= (or b!94587 b!94588) bm!9487))

(assert (=> b!94586 m!101689))

(assert (=> b!94586 m!101689))

(assert (=> b!94586 m!101695))

(assert (=> bm!9487 m!101689))

(declare-fun m!101983 () Bool)

(assert (=> bm!9487 m!101983))

(assert (=> b!94589 m!101689))

(assert (=> b!94589 m!101689))

(assert (=> b!94589 m!101695))

(assert (=> b!94590 m!101689))

(assert (=> b!94590 m!101689))

(declare-fun m!101985 () Bool)

(assert (=> b!94590 m!101985))

(assert (=> b!94245 d!24719))

(assert (=> bm!9454 d!24681))

(declare-fun d!24721 () Bool)

(assert (=> d!24721 (= (apply!90 lt!46762 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1265 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3884 () Bool)

(assert (= bs!3884 d!24721))

(assert (=> bs!3884 m!101533))

(assert (=> bs!3884 m!101611))

(assert (=> bs!3884 m!101611))

(declare-fun m!101987 () Bool)

(assert (=> bs!3884 m!101987))

(assert (=> b!94290 d!24721))

(declare-fun d!24723 () Bool)

(declare-fun c!15797 () Bool)

(assert (=> d!24723 (= c!15797 ((_ is ValueCellFull!963) (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61746 () V!3131)

(assert (=> d!24723 (= (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) e!61746)))

(declare-fun b!94591 () Bool)

(assert (=> b!94591 (= e!61746 (get!1263 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94592 () Bool)

(assert (=> b!94592 (= e!61746 (get!1264 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24723 c!15797) b!94591))

(assert (= (and d!24723 (not c!15797)) b!94592))

(assert (=> b!94591 m!101541))

(assert (=> b!94591 m!101359))

(declare-fun m!101989 () Bool)

(assert (=> b!94591 m!101989))

(assert (=> b!94592 m!101541))

(assert (=> b!94592 m!101359))

(declare-fun m!101991 () Bool)

(assert (=> b!94592 m!101991))

(assert (=> b!94290 d!24723))

(declare-fun d!24725 () Bool)

(assert (=> d!24725 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46946 () Unit!2798)

(declare-fun choose!567 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2798)

(assert (=> d!24725 (= lt!46946 (choose!567 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24725 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24725 (= (lemmaChangeLongMinValueKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) lt!46946)))

(declare-fun bs!3885 () Bool)

(assert (= bs!3885 d!24725))

(assert (=> bs!3885 m!101361))

(declare-fun m!101993 () Bool)

(assert (=> bs!3885 m!101993))

(assert (=> bs!3885 m!101465))

(assert (=> bs!3885 m!101465))

(declare-fun m!101995 () Bool)

(assert (=> bs!3885 m!101995))

(assert (=> bs!3885 m!101361))

(declare-fun m!101997 () Bool)

(assert (=> bs!3885 m!101997))

(assert (=> bs!3885 m!101603))

(assert (=> b!94230 d!24725))

(declare-fun d!24727 () Bool)

(declare-fun res!47891 () Bool)

(declare-fun e!61751 () Bool)

(assert (=> d!24727 (=> res!47891 e!61751)))

(assert (=> d!24727 (= res!47891 (and ((_ is Cons!1565) (toList!776 lt!46578)) (= (_1!1166 (h!2157 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (=> d!24727 (= (containsKey!152 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!61751)))

(declare-fun b!94597 () Bool)

(declare-fun e!61752 () Bool)

(assert (=> b!94597 (= e!61751 e!61752)))

(declare-fun res!47892 () Bool)

(assert (=> b!94597 (=> (not res!47892) (not e!61752))))

(assert (=> b!94597 (= res!47892 (and (or (not ((_ is Cons!1565) (toList!776 lt!46578))) (bvsle (_1!1166 (h!2157 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) ((_ is Cons!1565) (toList!776 lt!46578)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun b!94598 () Bool)

(assert (=> b!94598 (= e!61752 (containsKey!152 (t!5471 (toList!776 lt!46578)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!24727 (not res!47891)) b!94597))

(assert (= (and b!94597 res!47892) b!94598))

(assert (=> b!94598 m!101363))

(declare-fun m!101999 () Bool)

(assert (=> b!94598 m!101999))

(assert (=> d!24593 d!24727))

(declare-fun d!24729 () Bool)

(assert (=> d!24729 (= (apply!90 lt!46762 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3886 () Bool)

(assert (= bs!3886 d!24729))

(assert (=> bs!3886 m!101675))

(assert (=> bs!3886 m!101675))

(declare-fun m!102001 () Bool)

(assert (=> bs!3886 m!102001))

(assert (=> b!94293 d!24729))

(declare-fun d!24731 () Bool)

(assert (=> d!24731 (= (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (and (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94334 d!24731))

(declare-fun d!24733 () Bool)

(declare-fun lt!46949 () (_ BitVec 32))

(assert (=> d!24733 (and (bvsge lt!46949 #b00000000000000000000000000000000) (bvsle lt!46949 (bvsub (size!2245 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!61757 () (_ BitVec 32))

(assert (=> d!24733 (= lt!46949 e!61757)))

(declare-fun c!15802 () Bool)

(assert (=> d!24733 (= c!15802 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24733 (and (bvsle #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2245 (_keys!4118 newMap!16)) (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24733 (= (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) lt!46949)))

(declare-fun b!94607 () Bool)

(declare-fun e!61758 () (_ BitVec 32))

(declare-fun call!9493 () (_ BitVec 32))

(assert (=> b!94607 (= e!61758 call!9493)))

(declare-fun bm!9490 () Bool)

(assert (=> bm!9490 (= call!9493 (arrayCountValidKeys!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94608 () Bool)

(assert (=> b!94608 (= e!61757 #b00000000000000000000000000000000)))

(declare-fun b!94609 () Bool)

(assert (=> b!94609 (= e!61758 (bvadd #b00000000000000000000000000000001 call!9493))))

(declare-fun b!94610 () Bool)

(assert (=> b!94610 (= e!61757 e!61758)))

(declare-fun c!15803 () Bool)

(assert (=> b!94610 (= c!15803 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24733 c!15802) b!94608))

(assert (= (and d!24733 (not c!15802)) b!94610))

(assert (= (and b!94610 c!15803) b!94609))

(assert (= (and b!94610 (not c!15803)) b!94607))

(assert (= (or b!94609 b!94607) bm!9490))

(declare-fun m!102003 () Bool)

(assert (=> bm!9490 m!102003))

(assert (=> b!94610 m!101689))

(assert (=> b!94610 m!101689))

(assert (=> b!94610 m!101695))

(assert (=> b!94243 d!24733))

(declare-fun e!61759 () Bool)

(declare-fun lt!46970 () ListLongMap!1521)

(declare-fun b!94612 () Bool)

(assert (=> b!94612 (= e!61759 (= (apply!90 lt!46970 #b1000000000000000000000000000000000000000000000000000000000000000) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))

(declare-fun e!61763 () Bool)

(declare-fun b!94613 () Bool)

(assert (=> b!94613 (= e!61763 (= (apply!90 lt!46970 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94613 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))))))))

(assert (=> b!94613 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94614 () Bool)

(declare-fun e!61769 () Bool)

(assert (=> b!94614 (= e!61769 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94615 () Bool)

(declare-fun e!61764 () Bool)

(declare-fun e!61760 () Bool)

(assert (=> b!94615 (= e!61764 e!61760)))

(declare-fun res!47894 () Bool)

(declare-fun call!9495 () Bool)

(assert (=> b!94615 (= res!47894 call!9495)))

(assert (=> b!94615 (=> (not res!47894) (not e!61760))))

(declare-fun bm!9491 () Bool)

(declare-fun call!9497 () Bool)

(assert (=> bm!9491 (= call!9497 (contains!789 lt!46970 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94616 () Bool)

(assert (=> b!94616 (= e!61760 (= (apply!90 lt!46970 #b0000000000000000000000000000000000000000000000000000000000000000) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))

(declare-fun b!94617 () Bool)

(declare-fun e!61767 () Bool)

(assert (=> b!94617 (= e!61767 e!61763)))

(declare-fun res!47901 () Bool)

(assert (=> b!94617 (=> (not res!47901) (not e!61763))))

(assert (=> b!94617 (= res!47901 (contains!789 lt!46970 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94617 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94618 () Bool)

(declare-fun e!61762 () Bool)

(declare-fun e!61765 () Bool)

(assert (=> b!94618 (= e!61762 e!61765)))

(declare-fun c!15809 () Bool)

(assert (=> b!94618 (= c!15809 (not (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94619 () Bool)

(assert (=> b!94619 (= e!61764 (not call!9495))))

(declare-fun b!94620 () Bool)

(declare-fun e!61761 () Unit!2798)

(declare-fun Unit!2819 () Unit!2798)

(assert (=> b!94620 (= e!61761 Unit!2819)))

(declare-fun b!94621 () Bool)

(assert (=> b!94621 (= e!61765 (not call!9497))))

(declare-fun b!94611 () Bool)

(declare-fun call!9498 () ListLongMap!1521)

(declare-fun e!61768 () ListLongMap!1521)

(assert (=> b!94611 (= e!61768 (+!133 call!9498 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(declare-fun d!24735 () Bool)

(assert (=> d!24735 e!61762))

(declare-fun res!47896 () Bool)

(assert (=> d!24735 (=> (not res!47896) (not e!61762))))

(assert (=> d!24735 (= res!47896 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!46971 () ListLongMap!1521)

(assert (=> d!24735 (= lt!46970 lt!46971)))

(declare-fun lt!46969 () Unit!2798)

(assert (=> d!24735 (= lt!46969 e!61761)))

(declare-fun c!15807 () Bool)

(assert (=> d!24735 (= c!15807 e!61769)))

(declare-fun res!47893 () Bool)

(assert (=> d!24735 (=> (not res!47893) (not e!61769))))

(assert (=> d!24735 (= res!47893 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24735 (= lt!46971 e!61768)))

(declare-fun c!15808 () Bool)

(assert (=> d!24735 (= c!15808 (and (not (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24735 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24735 (= (getCurrentListMap!468 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!46970)))

(declare-fun b!94622 () Bool)

(declare-fun e!61771 () ListLongMap!1521)

(declare-fun call!9494 () ListLongMap!1521)

(assert (=> b!94622 (= e!61771 call!9494)))

(declare-fun b!94623 () Bool)

(declare-fun e!61770 () Bool)

(assert (=> b!94623 (= e!61770 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94624 () Bool)

(declare-fun e!61766 () ListLongMap!1521)

(declare-fun call!9496 () ListLongMap!1521)

(assert (=> b!94624 (= e!61766 call!9496)))

(declare-fun b!94625 () Bool)

(declare-fun res!47899 () Bool)

(assert (=> b!94625 (=> (not res!47899) (not e!61762))))

(assert (=> b!94625 (= res!47899 e!61767)))

(declare-fun res!47900 () Bool)

(assert (=> b!94625 (=> res!47900 e!61767)))

(assert (=> b!94625 (= res!47900 (not e!61770))))

(declare-fun res!47898 () Bool)

(assert (=> b!94625 (=> (not res!47898) (not e!61770))))

(assert (=> b!94625 (= res!47898 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94626 () Bool)

(declare-fun lt!46959 () Unit!2798)

(assert (=> b!94626 (= e!61761 lt!46959)))

(declare-fun lt!46966 () ListLongMap!1521)

(assert (=> b!94626 (= lt!46966 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46957 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46957 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46965 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46965 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46963 () Unit!2798)

(assert (=> b!94626 (= lt!46963 (addStillContains!66 lt!46966 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46965))))

(assert (=> b!94626 (contains!789 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46965)))

(declare-fun lt!46953 () Unit!2798)

(assert (=> b!94626 (= lt!46953 lt!46963)))

(declare-fun lt!46958 () ListLongMap!1521)

(assert (=> b!94626 (= lt!46958 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46964 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46964 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46952 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46952 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46968 () Unit!2798)

(assert (=> b!94626 (= lt!46968 (addApplyDifferent!66 lt!46958 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46952))))

(assert (=> b!94626 (= (apply!90 (+!133 lt!46958 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46952) (apply!90 lt!46958 lt!46952))))

(declare-fun lt!46961 () Unit!2798)

(assert (=> b!94626 (= lt!46961 lt!46968)))

(declare-fun lt!46962 () ListLongMap!1521)

(assert (=> b!94626 (= lt!46962 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46954 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46954 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46967 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46967 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!46955 () Unit!2798)

(assert (=> b!94626 (= lt!46955 (addApplyDifferent!66 lt!46962 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46967))))

(assert (=> b!94626 (= (apply!90 (+!133 lt!46962 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46967) (apply!90 lt!46962 lt!46967))))

(declare-fun lt!46951 () Unit!2798)

(assert (=> b!94626 (= lt!46951 lt!46955)))

(declare-fun lt!46960 () ListLongMap!1521)

(assert (=> b!94626 (= lt!46960 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!46956 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46956 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!46950 () (_ BitVec 64))

(assert (=> b!94626 (= lt!46950 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94626 (= lt!46959 (addApplyDifferent!66 lt!46960 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46950))))

(assert (=> b!94626 (= (apply!90 (+!133 lt!46960 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46950) (apply!90 lt!46960 lt!46950))))

(declare-fun c!15806 () Bool)

(declare-fun b!94627 () Bool)

(assert (=> b!94627 (= c!15806 (and (not (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94627 (= e!61766 e!61771)))

(declare-fun bm!9492 () Bool)

(assert (=> bm!9492 (= call!9495 (contains!789 lt!46970 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94628 () Bool)

(assert (=> b!94628 (= e!61771 call!9496)))

(declare-fun call!9499 () ListLongMap!1521)

(declare-fun call!9500 () ListLongMap!1521)

(declare-fun bm!9493 () Bool)

(declare-fun c!15805 () Bool)

(assert (=> bm!9493 (= call!9498 (+!133 (ite c!15808 call!9500 (ite c!15805 call!9499 call!9494)) (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun bm!9494 () Bool)

(assert (=> bm!9494 (= call!9499 call!9500)))

(declare-fun b!94629 () Bool)

(declare-fun res!47895 () Bool)

(assert (=> b!94629 (=> (not res!47895) (not e!61762))))

(assert (=> b!94629 (= res!47895 e!61764)))

(declare-fun c!15804 () Bool)

(assert (=> b!94629 (= c!15804 (not (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9495 () Bool)

(assert (=> bm!9495 (= call!9500 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9496 () Bool)

(assert (=> bm!9496 (= call!9494 call!9499)))

(declare-fun b!94630 () Bool)

(assert (=> b!94630 (= e!61768 e!61766)))

(assert (=> b!94630 (= c!15805 (and (not (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94631 () Bool)

(assert (=> b!94631 (= e!61765 e!61759)))

(declare-fun res!47897 () Bool)

(assert (=> b!94631 (= res!47897 call!9497)))

(assert (=> b!94631 (=> (not res!47897) (not e!61759))))

(declare-fun bm!9497 () Bool)

(assert (=> bm!9497 (= call!9496 call!9498)))

(assert (= (and d!24735 c!15808) b!94611))

(assert (= (and d!24735 (not c!15808)) b!94630))

(assert (= (and b!94630 c!15805) b!94624))

(assert (= (and b!94630 (not c!15805)) b!94627))

(assert (= (and b!94627 c!15806) b!94628))

(assert (= (and b!94627 (not c!15806)) b!94622))

(assert (= (or b!94628 b!94622) bm!9496))

(assert (= (or b!94624 bm!9496) bm!9494))

(assert (= (or b!94624 b!94628) bm!9497))

(assert (= (or b!94611 bm!9494) bm!9495))

(assert (= (or b!94611 bm!9497) bm!9493))

(assert (= (and d!24735 res!47893) b!94614))

(assert (= (and d!24735 c!15807) b!94626))

(assert (= (and d!24735 (not c!15807)) b!94620))

(assert (= (and d!24735 res!47896) b!94625))

(assert (= (and b!94625 res!47898) b!94623))

(assert (= (and b!94625 (not res!47900)) b!94617))

(assert (= (and b!94617 res!47901) b!94613))

(assert (= (and b!94625 res!47899) b!94629))

(assert (= (and b!94629 c!15804) b!94615))

(assert (= (and b!94629 (not c!15804)) b!94619))

(assert (= (and b!94615 res!47894) b!94616))

(assert (= (or b!94615 b!94619) bm!9492))

(assert (= (and b!94629 res!47895) b!94618))

(assert (= (and b!94618 c!15809) b!94631))

(assert (= (and b!94618 (not c!15809)) b!94621))

(assert (= (and b!94631 res!47897) b!94612))

(assert (= (or b!94631 b!94621) bm!9491))

(declare-fun b_lambda!4161 () Bool)

(assert (=> (not b_lambda!4161) (not b!94613)))

(assert (=> b!94613 t!5479))

(declare-fun b_and!5775 () Bool)

(assert (= b_and!5771 (and (=> t!5479 result!3201) b_and!5775)))

(assert (=> b!94613 t!5481))

(declare-fun b_and!5777 () Bool)

(assert (= b_and!5773 (and (=> t!5481 result!3203) b_and!5777)))

(declare-fun m!102005 () Bool)

(assert (=> b!94611 m!102005))

(assert (=> d!24735 m!101603))

(declare-fun m!102007 () Bool)

(assert (=> b!94612 m!102007))

(declare-fun m!102009 () Bool)

(assert (=> b!94616 m!102009))

(declare-fun m!102011 () Bool)

(assert (=> bm!9493 m!102011))

(declare-fun m!102013 () Bool)

(assert (=> bm!9495 m!102013))

(assert (=> b!94617 m!101689))

(assert (=> b!94617 m!101689))

(declare-fun m!102015 () Bool)

(assert (=> b!94617 m!102015))

(declare-fun m!102017 () Bool)

(assert (=> bm!9491 m!102017))

(assert (=> b!94614 m!101689))

(assert (=> b!94614 m!101689))

(assert (=> b!94614 m!101695))

(assert (=> b!94613 m!101689))

(assert (=> b!94613 m!101697))

(declare-fun m!102019 () Bool)

(assert (=> b!94613 m!102019))

(assert (=> b!94613 m!102019))

(assert (=> b!94613 m!101697))

(declare-fun m!102021 () Bool)

(assert (=> b!94613 m!102021))

(assert (=> b!94613 m!101689))

(declare-fun m!102023 () Bool)

(assert (=> b!94613 m!102023))

(assert (=> b!94623 m!101689))

(assert (=> b!94623 m!101689))

(assert (=> b!94623 m!101695))

(declare-fun m!102025 () Bool)

(assert (=> b!94626 m!102025))

(assert (=> b!94626 m!101689))

(declare-fun m!102027 () Bool)

(assert (=> b!94626 m!102027))

(declare-fun m!102029 () Bool)

(assert (=> b!94626 m!102029))

(declare-fun m!102031 () Bool)

(assert (=> b!94626 m!102031))

(declare-fun m!102033 () Bool)

(assert (=> b!94626 m!102033))

(assert (=> b!94626 m!102031))

(declare-fun m!102035 () Bool)

(assert (=> b!94626 m!102035))

(declare-fun m!102037 () Bool)

(assert (=> b!94626 m!102037))

(declare-fun m!102039 () Bool)

(assert (=> b!94626 m!102039))

(declare-fun m!102041 () Bool)

(assert (=> b!94626 m!102041))

(declare-fun m!102043 () Bool)

(assert (=> b!94626 m!102043))

(assert (=> b!94626 m!102025))

(declare-fun m!102045 () Bool)

(assert (=> b!94626 m!102045))

(declare-fun m!102047 () Bool)

(assert (=> b!94626 m!102047))

(declare-fun m!102049 () Bool)

(assert (=> b!94626 m!102049))

(assert (=> b!94626 m!102041))

(declare-fun m!102051 () Bool)

(assert (=> b!94626 m!102051))

(assert (=> b!94626 m!102013))

(declare-fun m!102053 () Bool)

(assert (=> b!94626 m!102053))

(assert (=> b!94626 m!102047))

(declare-fun m!102055 () Bool)

(assert (=> bm!9492 m!102055))

(assert (=> bm!9425 d!24735))

(declare-fun d!24737 () Bool)

(declare-fun e!61772 () Bool)

(assert (=> d!24737 e!61772))

(declare-fun res!47902 () Bool)

(assert (=> d!24737 (=> (not res!47902) (not e!61772))))

(declare-fun lt!46973 () ListLongMap!1521)

(assert (=> d!24737 (= res!47902 (contains!789 lt!46973 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!46974 () List!1569)

(assert (=> d!24737 (= lt!46973 (ListLongMap!1522 lt!46974))))

(declare-fun lt!46972 () Unit!2798)

(declare-fun lt!46975 () Unit!2798)

(assert (=> d!24737 (= lt!46972 lt!46975)))

(assert (=> d!24737 (= (getValueByKey!148 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24737 (= lt!46975 (lemmaContainsTupThenGetReturnValue!64 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24737 (= lt!46974 (insertStrictlySorted!67 (toList!776 call!9457) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24737 (= (+!133 call!9457 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46973)))

(declare-fun b!94632 () Bool)

(declare-fun res!47903 () Bool)

(assert (=> b!94632 (=> (not res!47903) (not e!61772))))

(assert (=> b!94632 (= res!47903 (= (getValueByKey!148 (toList!776 lt!46973) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94633 () Bool)

(assert (=> b!94633 (= e!61772 (contains!792 (toList!776 lt!46973) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!24737 res!47902) b!94632))

(assert (= (and b!94632 res!47903) b!94633))

(declare-fun m!102057 () Bool)

(assert (=> d!24737 m!102057))

(declare-fun m!102059 () Bool)

(assert (=> d!24737 m!102059))

(declare-fun m!102061 () Bool)

(assert (=> d!24737 m!102061))

(declare-fun m!102063 () Bool)

(assert (=> d!24737 m!102063))

(declare-fun m!102065 () Bool)

(assert (=> b!94632 m!102065))

(declare-fun m!102067 () Bool)

(assert (=> b!94633 m!102067))

(assert (=> b!94288 d!24737))

(declare-fun b!94668 () Bool)

(declare-fun res!47927 () Bool)

(declare-fun e!61790 () Bool)

(assert (=> b!94668 (=> (not res!47927) (not e!61790))))

(declare-fun call!9511 () Bool)

(assert (=> b!94668 (= res!47927 call!9511)))

(declare-fun e!61792 () Bool)

(assert (=> b!94668 (= e!61792 e!61790)))

(declare-fun b!94669 () Bool)

(declare-fun e!61791 () Bool)

(declare-fun call!9509 () Bool)

(assert (=> b!94669 (= e!61791 (not call!9509))))

(declare-fun b!94670 () Bool)

(declare-fun e!61794 () Unit!2798)

(declare-fun Unit!2820 () Unit!2798)

(assert (=> b!94670 (= e!61794 Unit!2820)))

(declare-fun b!94671 () Bool)

(declare-fun Unit!2821 () Unit!2798)

(assert (=> b!94671 (= e!61794 Unit!2821)))

(declare-fun lt!47054 () Unit!2798)

(declare-fun lemmaArrayContainsKeyThenInListMap!23 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2798)

(assert (=> b!94671 (= lt!47054 (lemmaArrayContainsKeyThenInListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> b!94671 (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))

(declare-fun lt!47060 () Unit!2798)

(assert (=> b!94671 (= lt!47060 lt!47054)))

(assert (=> b!94671 false))

(declare-fun call!9510 () Bool)

(declare-fun bm!9506 () Bool)

(declare-fun c!15821 () Bool)

(declare-fun lt!47052 () SeekEntryResult!251)

(declare-fun c!15820 () Bool)

(declare-fun lt!47065 () SeekEntryResult!251)

(assert (=> bm!9506 (= call!9510 (inRange!0 (ite c!15821 (index!3146 lt!47052) (ite c!15820 (index!3145 lt!47065) (index!3148 lt!47065))) (mask!6511 newMap!16)))))

(declare-fun b!94672 () Bool)

(assert (=> b!94672 (= e!61790 (not call!9509))))

(declare-fun b!94674 () Bool)

(declare-fun res!47923 () Bool)

(assert (=> b!94674 (= res!47923 call!9510)))

(declare-fun e!61796 () Bool)

(assert (=> b!94674 (=> (not res!47923) (not e!61796))))

(declare-fun b!94675 () Bool)

(declare-fun lt!47044 () tuple2!2312)

(declare-fun e!61793 () Bool)

(assert (=> b!94675 (= e!61793 (= (map!1243 (_2!1167 lt!47044)) (+!133 (map!1243 newMap!16) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9507 () Bool)

(assert (=> bm!9507 (= call!9509 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!94676 () Bool)

(declare-fun res!47928 () Bool)

(assert (=> b!94676 (=> (not res!47928) (not e!61790))))

(assert (=> b!94676 (= res!47928 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!47065)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94677 () Bool)

(declare-fun e!61789 () Unit!2798)

(declare-fun Unit!2822 () Unit!2798)

(assert (=> b!94677 (= e!61789 Unit!2822)))

(declare-fun lt!47050 () Unit!2798)

(assert (=> b!94677 (= lt!47050 (lemmaInListMapThenSeekEntryOrOpenFindsIt!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(declare-fun call!9512 () SeekEntryResult!251)

(assert (=> b!94677 (= lt!47052 call!9512)))

(declare-fun res!47929 () Bool)

(assert (=> b!94677 (= res!47929 ((_ is Found!251) lt!47052))))

(assert (=> b!94677 (=> (not res!47929) (not e!61796))))

(assert (=> b!94677 e!61796))

(declare-fun lt!47037 () Unit!2798)

(assert (=> b!94677 (= lt!47037 lt!47050)))

(assert (=> b!94677 false))

(declare-fun b!94678 () Bool)

(declare-fun c!15819 () Bool)

(assert (=> b!94678 (= c!15819 ((_ is MissingVacant!251) lt!47065))))

(declare-fun e!61795 () Bool)

(assert (=> b!94678 (= e!61792 e!61795)))

(declare-fun b!94679 () Bool)

(assert (=> b!94679 (= e!61795 ((_ is Undefined!251) lt!47065))))

(declare-fun b!94680 () Bool)

(declare-fun res!47926 () Bool)

(assert (=> b!94680 (=> (not res!47926) (not e!61793))))

(assert (=> b!94680 (= res!47926 (contains!789 (map!1243 (_2!1167 lt!47044)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94681 () Bool)

(declare-fun lt!47063 () Unit!2798)

(assert (=> b!94681 (= e!61789 lt!47063)))

(assert (=> b!94681 (= lt!47063 (lemmaNotInListMapThenSeekEntryOrOpenFindsFreeOrNothing!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)))))

(assert (=> b!94681 (= lt!47065 call!9512)))

(assert (=> b!94681 (= c!15820 ((_ is MissingZero!251) lt!47065))))

(assert (=> b!94681 e!61792))

(declare-fun b!94682 () Bool)

(declare-fun res!47924 () Bool)

(assert (=> b!94682 (= res!47924 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!47065)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94682 (=> (not res!47924) (not e!61791))))

(declare-fun b!94683 () Bool)

(declare-fun res!47922 () Bool)

(assert (=> b!94683 (=> (not res!47922) (not e!61793))))

(assert (=> b!94683 (= res!47922 (valid!373 (_2!1167 lt!47044)))))

(declare-fun bm!9508 () Bool)

(assert (=> bm!9508 (= call!9512 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94684 () Bool)

(assert (=> b!94684 (= e!61796 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!47052)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun bm!9509 () Bool)

(assert (=> bm!9509 (= call!9511 call!9510)))

(declare-fun b!94673 () Bool)

(assert (=> b!94673 (= e!61795 e!61791)))

(declare-fun res!47925 () Bool)

(assert (=> b!94673 (= res!47925 call!9511)))

(assert (=> b!94673 (=> (not res!47925) (not e!61791))))

(declare-fun d!24739 () Bool)

(assert (=> d!24739 e!61793))

(declare-fun res!47930 () Bool)

(assert (=> d!24739 (=> (not res!47930) (not e!61793))))

(assert (=> d!24739 (= res!47930 (_1!1167 lt!47044))))

(assert (=> d!24739 (= lt!47044 (tuple2!2313 true (LongMapFixedSize!835 (defaultEntry!2436 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd (_size!466 newMap!16) #b00000000000000000000000000000001) (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (_vacant!466 newMap!16))))))

(declare-fun lt!47039 () Unit!2798)

(declare-fun lt!47055 () Unit!2798)

(assert (=> d!24739 (= lt!47039 lt!47055)))

(declare-fun lt!47049 () array!4203)

(declare-fun lt!47056 () array!4201)

(assert (=> d!24739 (contains!789 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))

(assert (=> d!24739 (= lt!47055 (lemmaValidKeyInArrayIsInListMap!100 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24739 (= lt!47049 (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))))

(assert (=> d!24739 (= lt!47056 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun lt!47058 () Unit!2798)

(declare-fun lt!47047 () Unit!2798)

(assert (=> d!24739 (= lt!47058 lt!47047)))

(declare-fun lt!47043 () array!4201)

(assert (=> d!24739 (= (arrayCountValidKeys!0 lt!47043 (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lemmaValidKeyAtIImpliesCountKeysIsOne!0 (array!4201 (_ BitVec 32)) Unit!2798)

(assert (=> d!24739 (= lt!47047 (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!47043 (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))

(assert (=> d!24739 (= lt!47043 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun lt!47041 () Unit!2798)

(declare-fun lt!47042 () Unit!2798)

(assert (=> d!24739 (= lt!47041 lt!47042)))

(declare-fun lt!47061 () array!4201)

(assert (=> d!24739 (arrayContainsKey!0 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(assert (=> d!24739 (= lt!47042 (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))

(assert (=> d!24739 (= lt!47061 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun lt!47057 () Unit!2798)

(declare-fun lt!47046 () Unit!2798)

(assert (=> d!24739 (= lt!47057 lt!47046)))

(assert (=> d!24739 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lemmaAddValidKeyToArrayThenAddPairToListMap!23 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2798)

(assert (=> d!24739 (= lt!47046 (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47053 () Unit!2798)

(declare-fun lt!47040 () Unit!2798)

(assert (=> d!24739 (= lt!47053 lt!47040)))

(assert (=> d!24739 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (mask!6511 newMap!16))))

(declare-fun lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 ((_ BitVec 64) array!4201 (_ BitVec 32) (_ BitVec 32)) Unit!2798)

(assert (=> d!24739 (= lt!47040 (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (mask!6511 newMap!16)))))

(declare-fun lt!47045 () Unit!2798)

(declare-fun lt!47038 () Unit!2798)

(assert (=> d!24739 (= lt!47045 lt!47038)))

(assert (=> d!24739 (= (arrayCountValidKeys!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) #b00000000000000000000000000000001))))

(declare-fun lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (array!4201 (_ BitVec 32) (_ BitVec 64)) Unit!2798)

(assert (=> d!24739 (= lt!47038 (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4118 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun lt!47036 () Unit!2798)

(declare-fun lt!47059 () Unit!2798)

(assert (=> d!24739 (= lt!47036 lt!47059)))

(declare-fun lt!47064 () (_ BitVec 32))

(declare-fun lt!47048 () List!1568)

(assert (=> d!24739 (arrayNoDuplicates!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) lt!47064 lt!47048)))

(declare-fun lemmaPutNewValidKeyPreservesNoDuplicate!0 (array!4201 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1568) Unit!2798)

(assert (=> d!24739 (= lt!47059 (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) lt!47064 lt!47048))))

(assert (=> d!24739 (= lt!47048 Nil!1565)))

(assert (=> d!24739 (= lt!47064 #b00000000000000000000000000000000)))

(declare-fun lt!47051 () Unit!2798)

(assert (=> d!24739 (= lt!47051 e!61794)))

(declare-fun c!15818 () Bool)

(assert (=> d!24739 (= c!15818 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun lt!47062 () Unit!2798)

(assert (=> d!24739 (= lt!47062 e!61789)))

(assert (=> d!24739 (= c!15821 (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24739 (valid!373 newMap!16)))

(assert (=> d!24739 (= (updateHelperNewKey!39 newMap!16 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))) lt!47044)))

(assert (= (and d!24739 c!15821) b!94677))

(assert (= (and d!24739 (not c!15821)) b!94681))

(assert (= (and b!94677 res!47929) b!94674))

(assert (= (and b!94674 res!47923) b!94684))

(assert (= (and b!94681 c!15820) b!94668))

(assert (= (and b!94681 (not c!15820)) b!94678))

(assert (= (and b!94668 res!47927) b!94676))

(assert (= (and b!94676 res!47928) b!94672))

(assert (= (and b!94678 c!15819) b!94673))

(assert (= (and b!94678 (not c!15819)) b!94679))

(assert (= (and b!94673 res!47925) b!94682))

(assert (= (and b!94682 res!47924) b!94669))

(assert (= (or b!94668 b!94673) bm!9509))

(assert (= (or b!94672 b!94669) bm!9507))

(assert (= (or b!94674 bm!9509) bm!9506))

(assert (= (or b!94677 b!94681) bm!9508))

(assert (= (and d!24739 c!15818) b!94671))

(assert (= (and d!24739 (not c!15818)) b!94670))

(assert (= (and d!24739 res!47930) b!94683))

(assert (= (and b!94683 res!47922) b!94680))

(assert (= (and b!94680 res!47926) b!94675))

(assert (=> b!94677 m!101363))

(assert (=> b!94677 m!101499))

(declare-fun m!102069 () Bool)

(assert (=> bm!9506 m!102069))

(declare-fun m!102071 () Bool)

(assert (=> b!94683 m!102071))

(assert (=> b!94671 m!101363))

(declare-fun m!102073 () Bool)

(assert (=> b!94671 m!102073))

(assert (=> b!94671 m!101465))

(assert (=> b!94671 m!101465))

(assert (=> b!94671 m!101363))

(declare-fun m!102075 () Bool)

(assert (=> b!94671 m!102075))

(assert (=> b!94681 m!101363))

(assert (=> b!94681 m!101497))

(declare-fun m!102077 () Bool)

(assert (=> b!94684 m!102077))

(declare-fun m!102079 () Bool)

(assert (=> b!94682 m!102079))

(declare-fun m!102081 () Bool)

(assert (=> b!94680 m!102081))

(assert (=> b!94680 m!102081))

(assert (=> b!94680 m!101363))

(declare-fun m!102083 () Bool)

(assert (=> b!94680 m!102083))

(assert (=> bm!9507 m!101363))

(assert (=> bm!9507 m!101461))

(assert (=> d!24739 m!101465))

(assert (=> d!24739 m!101925))

(declare-fun m!102085 () Bool)

(assert (=> d!24739 m!102085))

(assert (=> d!24739 m!101363))

(assert (=> d!24739 m!101461))

(assert (=> d!24739 m!101363))

(assert (=> d!24739 m!101361))

(declare-fun m!102087 () Bool)

(assert (=> d!24739 m!102087))

(declare-fun m!102089 () Bool)

(assert (=> d!24739 m!102089))

(assert (=> d!24739 m!101363))

(declare-fun m!102091 () Bool)

(assert (=> d!24739 m!102091))

(assert (=> d!24739 m!101363))

(declare-fun m!102093 () Bool)

(assert (=> d!24739 m!102093))

(declare-fun m!102095 () Bool)

(assert (=> d!24739 m!102095))

(assert (=> d!24739 m!101517))

(assert (=> d!24739 m!101399))

(declare-fun m!102097 () Bool)

(assert (=> d!24739 m!102097))

(declare-fun m!102099 () Bool)

(assert (=> d!24739 m!102099))

(assert (=> d!24739 m!101363))

(declare-fun m!102101 () Bool)

(assert (=> d!24739 m!102101))

(assert (=> d!24739 m!101465))

(assert (=> d!24739 m!101363))

(assert (=> d!24739 m!102075))

(declare-fun m!102103 () Bool)

(assert (=> d!24739 m!102103))

(assert (=> d!24739 m!101363))

(declare-fun m!102105 () Bool)

(assert (=> d!24739 m!102105))

(declare-fun m!102107 () Bool)

(assert (=> d!24739 m!102107))

(declare-fun m!102109 () Bool)

(assert (=> d!24739 m!102109))

(declare-fun m!102111 () Bool)

(assert (=> d!24739 m!102111))

(assert (=> d!24739 m!102107))

(assert (=> d!24739 m!102095))

(declare-fun m!102113 () Bool)

(assert (=> d!24739 m!102113))

(declare-fun m!102115 () Bool)

(assert (=> d!24739 m!102115))

(declare-fun m!102117 () Bool)

(assert (=> d!24739 m!102117))

(assert (=> d!24739 m!101465))

(assert (=> d!24739 m!101363))

(declare-fun m!102119 () Bool)

(assert (=> d!24739 m!102119))

(declare-fun m!102121 () Bool)

(assert (=> b!94676 m!102121))

(assert (=> b!94675 m!102081))

(assert (=> b!94675 m!101369))

(assert (=> b!94675 m!101369))

(declare-fun m!102123 () Bool)

(assert (=> b!94675 m!102123))

(assert (=> bm!9508 m!101363))

(assert (=> bm!9508 m!101503))

(assert (=> bm!9417 d!24739))

(assert (=> b!94300 d!24635))

(declare-fun d!24741 () Bool)

(declare-fun e!61797 () Bool)

(assert (=> d!24741 e!61797))

(declare-fun res!47931 () Bool)

(assert (=> d!24741 (=> (not res!47931) (not e!61797))))

(declare-fun lt!47067 () ListLongMap!1521)

(assert (=> d!24741 (= res!47931 (contains!789 lt!47067 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!47068 () List!1569)

(assert (=> d!24741 (= lt!47067 (ListLongMap!1522 lt!47068))))

(declare-fun lt!47066 () Unit!2798)

(declare-fun lt!47069 () Unit!2798)

(assert (=> d!24741 (= lt!47066 lt!47069)))

(assert (=> d!24741 (= (getValueByKey!148 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!153 (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24741 (= lt!47069 (lemmaContainsTupThenGetReturnValue!64 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24741 (= lt!47068 (insertStrictlySorted!67 (toList!776 e!61508) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!24741 (= (+!133 e!61508 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47067)))

(declare-fun b!94685 () Bool)

(declare-fun res!47932 () Bool)

(assert (=> b!94685 (=> (not res!47932) (not e!61797))))

(assert (=> b!94685 (= res!47932 (= (getValueByKey!148 (toList!776 lt!47067) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!153 (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!94686 () Bool)

(assert (=> b!94686 (= e!61797 (contains!792 (toList!776 lt!47067) (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!24741 res!47931) b!94685))

(assert (= (and b!94685 res!47932) b!94686))

(declare-fun m!102125 () Bool)

(assert (=> d!24741 m!102125))

(declare-fun m!102127 () Bool)

(assert (=> d!24741 m!102127))

(declare-fun m!102129 () Bool)

(assert (=> d!24741 m!102129))

(declare-fun m!102131 () Bool)

(assert (=> d!24741 m!102131))

(declare-fun m!102133 () Bool)

(assert (=> b!94685 m!102133))

(declare-fun m!102135 () Bool)

(assert (=> b!94686 m!102135))

(assert (=> bm!9431 d!24741))

(declare-fun d!24743 () Bool)

(assert (=> d!24743 (= (get!1263 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2761 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!94235 d!24743))

(assert (=> b!94331 d!24731))

(declare-fun d!24745 () Bool)

(declare-fun e!61798 () Bool)

(assert (=> d!24745 e!61798))

(declare-fun res!47933 () Bool)

(assert (=> d!24745 (=> (not res!47933) (not e!61798))))

(declare-fun lt!47071 () ListLongMap!1521)

(assert (=> d!24745 (= res!47933 (contains!789 lt!47071 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47072 () List!1569)

(assert (=> d!24745 (= lt!47071 (ListLongMap!1522 lt!47072))))

(declare-fun lt!47070 () Unit!2798)

(declare-fun lt!47073 () Unit!2798)

(assert (=> d!24745 (= lt!47070 lt!47073)))

(assert (=> d!24745 (= (getValueByKey!148 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24745 (= lt!47073 (lemmaContainsTupThenGetReturnValue!64 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24745 (= lt!47072 (insertStrictlySorted!67 (toList!776 call!9426) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24745 (= (+!133 call!9426 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47071)))

(declare-fun b!94687 () Bool)

(declare-fun res!47934 () Bool)

(assert (=> b!94687 (=> (not res!47934) (not e!61798))))

(assert (=> b!94687 (= res!47934 (= (getValueByKey!148 (toList!776 lt!47071) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94688 () Bool)

(assert (=> b!94688 (= e!61798 (contains!792 (toList!776 lt!47071) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24745 res!47933) b!94687))

(assert (= (and b!94687 res!47934) b!94688))

(declare-fun m!102137 () Bool)

(assert (=> d!24745 m!102137))

(declare-fun m!102139 () Bool)

(assert (=> d!24745 m!102139))

(declare-fun m!102141 () Bool)

(assert (=> d!24745 m!102141))

(declare-fun m!102143 () Bool)

(assert (=> d!24745 m!102143))

(declare-fun m!102145 () Bool)

(assert (=> b!94687 m!102145))

(declare-fun m!102147 () Bool)

(assert (=> b!94688 m!102147))

(assert (=> b!94210 d!24745))

(declare-fun d!24747 () Bool)

(assert (=> d!24747 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47076 () Unit!2798)

(declare-fun choose!568 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 V!3131 Int) Unit!2798)

(assert (=> d!24747 (= lt!47076 (choose!568 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46686 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24747 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24747 (= (lemmaChangeZeroKeyThenAddPairToListMap!39 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46686 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)) lt!47076)))

(declare-fun bs!3887 () Bool)

(assert (= bs!3887 d!24747))

(assert (=> bs!3887 m!101465))

(declare-fun m!102149 () Bool)

(assert (=> bs!3887 m!102149))

(assert (=> bs!3887 m!101603))

(assert (=> bs!3887 m!101465))

(assert (=> bs!3887 m!101361))

(declare-fun m!102151 () Bool)

(assert (=> bs!3887 m!102151))

(assert (=> bs!3887 m!101361))

(declare-fun m!102153 () Bool)

(assert (=> bs!3887 m!102153))

(assert (=> b!94223 d!24747))

(assert (=> b!94212 d!24649))

(declare-fun b!94690 () Bool)

(declare-fun e!61799 () Bool)

(assert (=> b!94690 (= e!61799 tp_is_empty!2613)))

(declare-fun b!94689 () Bool)

(declare-fun e!61800 () Bool)

(assert (=> b!94689 (= e!61800 tp_is_empty!2613)))

(declare-fun mapNonEmpty!3687 () Bool)

(declare-fun mapRes!3687 () Bool)

(declare-fun tp!9465 () Bool)

(assert (=> mapNonEmpty!3687 (= mapRes!3687 (and tp!9465 e!61800))))

(declare-fun mapRest!3687 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapKey!3687 () (_ BitVec 32))

(declare-fun mapValue!3687 () ValueCell!963)

(assert (=> mapNonEmpty!3687 (= mapRest!3686 (store mapRest!3687 mapKey!3687 mapValue!3687))))

(declare-fun condMapEmpty!3687 () Bool)

(declare-fun mapDefault!3687 () ValueCell!963)

(assert (=> mapNonEmpty!3686 (= condMapEmpty!3687 (= mapRest!3686 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3687)))))

(assert (=> mapNonEmpty!3686 (= tp!9464 (and e!61799 mapRes!3687))))

(declare-fun mapIsEmpty!3687 () Bool)

(assert (=> mapIsEmpty!3687 mapRes!3687))

(assert (= (and mapNonEmpty!3686 condMapEmpty!3687) mapIsEmpty!3687))

(assert (= (and mapNonEmpty!3686 (not condMapEmpty!3687)) mapNonEmpty!3687))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!963) mapValue!3687)) b!94689))

(assert (= (and mapNonEmpty!3686 ((_ is ValueCellFull!963) mapDefault!3687)) b!94690))

(declare-fun m!102155 () Bool)

(assert (=> mapNonEmpty!3687 m!102155))

(declare-fun b!94692 () Bool)

(declare-fun e!61801 () Bool)

(assert (=> b!94692 (= e!61801 tp_is_empty!2613)))

(declare-fun b!94691 () Bool)

(declare-fun e!61802 () Bool)

(assert (=> b!94691 (= e!61802 tp_is_empty!2613)))

(declare-fun mapNonEmpty!3688 () Bool)

(declare-fun mapRes!3688 () Bool)

(declare-fun tp!9466 () Bool)

(assert (=> mapNonEmpty!3688 (= mapRes!3688 (and tp!9466 e!61802))))

(declare-fun mapRest!3688 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapValue!3688 () ValueCell!963)

(declare-fun mapKey!3688 () (_ BitVec 32))

(assert (=> mapNonEmpty!3688 (= mapRest!3685 (store mapRest!3688 mapKey!3688 mapValue!3688))))

(declare-fun condMapEmpty!3688 () Bool)

(declare-fun mapDefault!3688 () ValueCell!963)

(assert (=> mapNonEmpty!3685 (= condMapEmpty!3688 (= mapRest!3685 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3688)))))

(assert (=> mapNonEmpty!3685 (= tp!9463 (and e!61801 mapRes!3688))))

(declare-fun mapIsEmpty!3688 () Bool)

(assert (=> mapIsEmpty!3688 mapRes!3688))

(assert (= (and mapNonEmpty!3685 condMapEmpty!3688) mapIsEmpty!3688))

(assert (= (and mapNonEmpty!3685 (not condMapEmpty!3688)) mapNonEmpty!3688))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!963) mapValue!3688)) b!94691))

(assert (= (and mapNonEmpty!3685 ((_ is ValueCellFull!963) mapDefault!3688)) b!94692))

(declare-fun m!102157 () Bool)

(assert (=> mapNonEmpty!3688 m!102157))

(declare-fun b_lambda!4163 () Bool)

(assert (= b_lambda!4159 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4163)))

(declare-fun b_lambda!4165 () Bool)

(assert (= b_lambda!4157 (or (and b!94027 b_free!2393) (and b!94030 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))) b_lambda!4165)))

(declare-fun b_lambda!4167 () Bool)

(assert (= b_lambda!4155 (or (and b!94027 b_free!2393) (and b!94030 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))) b_lambda!4167)))

(declare-fun b_lambda!4169 () Bool)

(assert (= b_lambda!4153 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4169)))

(declare-fun b_lambda!4171 () Bool)

(assert (= b_lambda!4161 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4171)))

(check-sat (not b!94406) (not bm!9480) (not d!24671) (not b!94537) (not bm!9467) (not d!24741) (not b!94409) (not d!24687) (not b!94530) (not bm!9508) (not b!94493) (not b_lambda!4169) (not bm!9468) (not bm!9490) (not b!94680) (not b!94404) (not b!94458) (not b!94543) (not d!24709) (not b!94563) (not bm!9464) (not b!94413) (not b_lambda!4165) (not b!94432) (not mapNonEmpty!3687) (not b!94418) (not b!94497) (not b!94613) (not b!94544) (not d!24691) (not b!94451) (not d!24657) tp_is_empty!2613 (not b!94554) (not b!94533) (not d!24679) (not d!24735) (not b!94612) (not b!94370) (not d!24689) (not b!94559) (not d!24729) (not b!94408) (not d!24631) (not b_lambda!4151) (not b_lambda!4171) (not b!94417) (not b!94377) (not b!94591) (not b!94688) (not b!94671) (not bm!9492) (not d!24659) (not d!24639) (not b!94422) (not d!24699) (not d!24725) (not d!24667) (not d!24681) (not b!94585) (not bm!9507) (not d!24697) (not mapNonEmpty!3688) (not b!94419) (not b!94414) (not b!94568) (not b!94374) (not d!24739) (not bm!9493) (not b!94675) (not d!24707) (not d!24653) (not d!24713) (not b!94532) (not b_lambda!4167) (not b_next!2393) (not b!94378) (not b!94610) (not b_next!2395) (not d!24649) (not b!94598) (not b!94397) (not d!24647) (not b!94632) (not bm!9487) (not d!24663) (not b!94457) (not b!94412) (not bm!9484) (not b!94373) (not b!94590) (not bm!9479) (not d!24621) (not b!94564) (not d!24633) (not d!24675) (not d!24747) (not b!94476) (not d!24701) (not b!94626) (not d!24737) (not b!94531) (not b!94589) (not d!24651) (not bm!9466) b_and!5775 (not d!24683) (not b!94372) (not d!24715) (not bm!9471) (not d!24627) (not b!94469) (not b!94592) (not b!94538) (not b!94539) (not d!24745) (not d!24643) (not d!24661) (not b!94440) (not b!94569) (not b!94548) (not b!94623) (not d!24695) (not b!94547) (not b!94549) (not bm!9465) (not bm!9491) (not b!94545) (not b!94393) (not b_lambda!4163) (not b!94541) (not b!94611) (not b!94617) (not d!24623) (not b!94486) (not b!94420) (not b!94683) (not bm!9476) (not bm!9469) (not b!94423) (not b!94578) b_and!5777 (not d!24703) (not b!94468) (not b_lambda!4147) (not b!94487) (not d!24693) (not d!24629) (not b!94496) (not b!94685) (not bm!9482) (not b!94556) (not d!24685) (not b!94499) (not b!94551) (not b!94566) (not b!94562) (not bm!9481) (not b!94540) (not b!94399) (not b!94677) (not b!94375) (not d!24705) (not b!94633) (not b!94575) (not d!24625) (not b!94546) (not b!94565) (not d!24721) (not b!94429) (not b!94681) (not bm!9495) (not b!94552) (not b!94586) (not bm!9506) (not b!94616) (not d!24711) (not b!94376) (not b!94614) (not b!94686) (not b!94687) (not b!94416) (not d!24677))
(check-sat b_and!5775 b_and!5777 (not b_next!2393) (not b_next!2395))
(get-model)

(declare-fun d!24749 () Bool)

(assert (=> d!24749 (= (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (and (not (= (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94420 d!24749))

(declare-fun d!24751 () Bool)

(assert (=> d!24751 (= (apply!90 (+!133 lt!46934 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))) lt!46939) (apply!90 lt!46934 lt!46939))))

(declare-fun lt!47077 () Unit!2798)

(assert (=> d!24751 (= lt!47077 (choose!564 lt!46934 lt!46926 (zeroValue!2323 newMap!16) lt!46939))))

(declare-fun e!61803 () Bool)

(assert (=> d!24751 e!61803))

(declare-fun res!47935 () Bool)

(assert (=> d!24751 (=> (not res!47935) (not e!61803))))

(assert (=> d!24751 (= res!47935 (contains!789 lt!46934 lt!46939))))

(assert (=> d!24751 (= (addApplyDifferent!66 lt!46934 lt!46926 (zeroValue!2323 newMap!16) lt!46939) lt!47077)))

(declare-fun b!94693 () Bool)

(assert (=> b!94693 (= e!61803 (not (= lt!46939 lt!46926)))))

(assert (= (and d!24751 res!47935) b!94693))

(assert (=> d!24751 m!101965))

(assert (=> d!24751 m!101953))

(assert (=> d!24751 m!101965))

(assert (=> d!24751 m!101975))

(declare-fun m!102159 () Bool)

(assert (=> d!24751 m!102159))

(declare-fun m!102161 () Bool)

(assert (=> d!24751 m!102161))

(assert (=> b!94578 d!24751))

(declare-fun d!24753 () Bool)

(assert (=> d!24753 (= (apply!90 lt!46930 lt!46924) (get!1265 (getValueByKey!148 (toList!776 lt!46930) lt!46924)))))

(declare-fun bs!3888 () Bool)

(assert (= bs!3888 d!24753))

(declare-fun m!102163 () Bool)

(assert (=> bs!3888 m!102163))

(assert (=> bs!3888 m!102163))

(declare-fun m!102165 () Bool)

(assert (=> bs!3888 m!102165))

(assert (=> b!94578 d!24753))

(declare-fun d!24755 () Bool)

(assert (=> d!24755 (= (apply!90 lt!46934 lt!46939) (get!1265 (getValueByKey!148 (toList!776 lt!46934) lt!46939)))))

(declare-fun bs!3889 () Bool)

(assert (= bs!3889 d!24755))

(declare-fun m!102167 () Bool)

(assert (=> bs!3889 m!102167))

(assert (=> bs!3889 m!102167))

(declare-fun m!102169 () Bool)

(assert (=> bs!3889 m!102169))

(assert (=> b!94578 d!24755))

(declare-fun d!24757 () Bool)

(assert (=> d!24757 (= (apply!90 lt!46932 lt!46922) (get!1265 (getValueByKey!148 (toList!776 lt!46932) lt!46922)))))

(declare-fun bs!3890 () Bool)

(assert (= bs!3890 d!24757))

(declare-fun m!102171 () Bool)

(assert (=> bs!3890 m!102171))

(assert (=> bs!3890 m!102171))

(declare-fun m!102173 () Bool)

(assert (=> bs!3890 m!102173))

(assert (=> b!94578 d!24757))

(declare-fun d!24759 () Bool)

(assert (=> d!24759 (= (apply!90 (+!133 lt!46934 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))) lt!46939) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46934 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))) lt!46939)))))

(declare-fun bs!3891 () Bool)

(assert (= bs!3891 d!24759))

(declare-fun m!102175 () Bool)

(assert (=> bs!3891 m!102175))

(assert (=> bs!3891 m!102175))

(declare-fun m!102177 () Bool)

(assert (=> bs!3891 m!102177))

(assert (=> b!94578 d!24759))

(declare-fun d!24761 () Bool)

(assert (=> d!24761 (= (apply!90 (+!133 lt!46932 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))) lt!46922) (apply!90 lt!46932 lt!46922))))

(declare-fun lt!47078 () Unit!2798)

(assert (=> d!24761 (= lt!47078 (choose!564 lt!46932 lt!46928 (minValue!2323 newMap!16) lt!46922))))

(declare-fun e!61804 () Bool)

(assert (=> d!24761 e!61804))

(declare-fun res!47936 () Bool)

(assert (=> d!24761 (=> (not res!47936) (not e!61804))))

(assert (=> d!24761 (= res!47936 (contains!789 lt!46932 lt!46922))))

(assert (=> d!24761 (= (addApplyDifferent!66 lt!46932 lt!46928 (minValue!2323 newMap!16) lt!46922) lt!47078)))

(declare-fun b!94694 () Bool)

(assert (=> b!94694 (= e!61804 (not (= lt!46922 lt!46928)))))

(assert (= (and d!24761 res!47936) b!94694))

(assert (=> d!24761 m!101955))

(assert (=> d!24761 m!101977))

(assert (=> d!24761 m!101955))

(assert (=> d!24761 m!101957))

(declare-fun m!102179 () Bool)

(assert (=> d!24761 m!102179))

(declare-fun m!102181 () Bool)

(assert (=> d!24761 m!102181))

(assert (=> b!94578 d!24761))

(declare-fun d!24763 () Bool)

(assert (=> d!24763 (= (apply!90 (+!133 lt!46930 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))) lt!46924) (apply!90 lt!46930 lt!46924))))

(declare-fun lt!47079 () Unit!2798)

(assert (=> d!24763 (= lt!47079 (choose!564 lt!46930 lt!46936 (minValue!2323 newMap!16) lt!46924))))

(declare-fun e!61805 () Bool)

(assert (=> d!24763 e!61805))

(declare-fun res!47937 () Bool)

(assert (=> d!24763 (=> (not res!47937) (not e!61805))))

(assert (=> d!24763 (= res!47937 (contains!789 lt!46930 lt!46924))))

(assert (=> d!24763 (= (addApplyDifferent!66 lt!46930 lt!46936 (minValue!2323 newMap!16) lt!46924) lt!47079)))

(declare-fun b!94695 () Bool)

(assert (=> b!94695 (= e!61805 (not (= lt!46924 lt!46936)))))

(assert (= (and d!24763 res!47937) b!94695))

(assert (=> d!24763 m!101971))

(assert (=> d!24763 m!101967))

(assert (=> d!24763 m!101971))

(assert (=> d!24763 m!101973))

(declare-fun m!102183 () Bool)

(assert (=> d!24763 m!102183))

(declare-fun m!102185 () Bool)

(assert (=> d!24763 m!102185))

(assert (=> b!94578 d!24763))

(declare-fun d!24765 () Bool)

(assert (=> d!24765 (= (apply!90 (+!133 lt!46930 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))) lt!46924) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46930 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))) lt!46924)))))

(declare-fun bs!3892 () Bool)

(assert (= bs!3892 d!24765))

(declare-fun m!102187 () Bool)

(assert (=> bs!3892 m!102187))

(assert (=> bs!3892 m!102187))

(declare-fun m!102189 () Bool)

(assert (=> bs!3892 m!102189))

(assert (=> b!94578 d!24765))

(declare-fun b!94696 () Bool)

(declare-fun e!61806 () Bool)

(declare-fun e!61808 () Bool)

(assert (=> b!94696 (= e!61806 e!61808)))

(declare-fun c!15823 () Bool)

(declare-fun e!61807 () Bool)

(assert (=> b!94696 (= c!15823 e!61807)))

(declare-fun res!47938 () Bool)

(assert (=> b!94696 (=> (not res!47938) (not e!61807))))

(assert (=> b!94696 (= res!47938 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94697 () Bool)

(assert (=> b!94697 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> b!94697 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (ite c!15700 (_values!2419 newMap!16) lt!46687))))))

(declare-fun e!61812 () Bool)

(declare-fun lt!47081 () ListLongMap!1521)

(assert (=> b!94697 (= e!61812 (= (apply!90 lt!47081 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94698 () Bool)

(assert (=> b!94698 (= e!61808 e!61812)))

(assert (=> b!94698 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun res!47940 () Bool)

(assert (=> b!94698 (= res!47940 (contains!789 lt!47081 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94698 (=> (not res!47940) (not e!61812))))

(declare-fun d!24767 () Bool)

(assert (=> d!24767 e!61806))

(declare-fun res!47939 () Bool)

(assert (=> d!24767 (=> (not res!47939) (not e!61806))))

(assert (=> d!24767 (= res!47939 (not (contains!789 lt!47081 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61810 () ListLongMap!1521)

(assert (=> d!24767 (= lt!47081 e!61810)))

(declare-fun c!15824 () Bool)

(assert (=> d!24767 (= c!15824 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24767 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24767 (= (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47081)))

(declare-fun b!94699 () Bool)

(declare-fun e!61809 () Bool)

(assert (=> b!94699 (= e!61809 (isEmpty!351 lt!47081))))

(declare-fun b!94700 () Bool)

(declare-fun e!61811 () ListLongMap!1521)

(assert (=> b!94700 (= e!61810 e!61811)))

(declare-fun c!15825 () Bool)

(assert (=> b!94700 (= c!15825 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94701 () Bool)

(assert (=> b!94701 (= e!61808 e!61809)))

(declare-fun c!15822 () Bool)

(assert (=> b!94701 (= c!15822 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94702 () Bool)

(declare-fun call!9513 () ListLongMap!1521)

(assert (=> b!94702 (= e!61811 call!9513)))

(declare-fun b!94703 () Bool)

(assert (=> b!94703 (= e!61810 (ListLongMap!1522 Nil!1566))))

(declare-fun b!94704 () Bool)

(assert (=> b!94704 (= e!61809 (= lt!47081 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!94705 () Bool)

(declare-fun res!47941 () Bool)

(assert (=> b!94705 (=> (not res!47941) (not e!61806))))

(assert (=> b!94705 (= res!47941 (not (contains!789 lt!47081 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94706 () Bool)

(declare-fun lt!47085 () Unit!2798)

(declare-fun lt!47083 () Unit!2798)

(assert (=> b!94706 (= lt!47085 lt!47083)))

(declare-fun lt!47082 () V!3131)

(declare-fun lt!47084 () ListLongMap!1521)

(declare-fun lt!47086 () (_ BitVec 64))

(declare-fun lt!47080 () (_ BitVec 64))

(assert (=> b!94706 (not (contains!789 (+!133 lt!47084 (tuple2!2311 lt!47080 lt!47082)) lt!47086))))

(assert (=> b!94706 (= lt!47083 (addStillNotContains!38 lt!47084 lt!47080 lt!47082 lt!47086))))

(assert (=> b!94706 (= lt!47086 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94706 (= lt!47082 (get!1261 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94706 (= lt!47080 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94706 (= lt!47084 call!9513)))

(assert (=> b!94706 (= e!61811 (+!133 call!9513 (tuple2!2311 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1261 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94707 () Bool)

(assert (=> b!94707 (= e!61807 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94707 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!9510 () Bool)

(assert (=> bm!9510 (= call!9513 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite c!15700 (_values!2419 newMap!16) lt!46687) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(assert (= (and d!24767 c!15824) b!94703))

(assert (= (and d!24767 (not c!15824)) b!94700))

(assert (= (and b!94700 c!15825) b!94706))

(assert (= (and b!94700 (not c!15825)) b!94702))

(assert (= (or b!94706 b!94702) bm!9510))

(assert (= (and d!24767 res!47939) b!94705))

(assert (= (and b!94705 res!47941) b!94696))

(assert (= (and b!94696 res!47938) b!94707))

(assert (= (and b!94696 c!15823) b!94698))

(assert (= (and b!94696 (not c!15823)) b!94701))

(assert (= (and b!94698 res!47940) b!94697))

(assert (= (and b!94701 c!15822) b!94704))

(assert (= (and b!94701 (not c!15822)) b!94699))

(declare-fun b_lambda!4173 () Bool)

(assert (=> (not b_lambda!4173) (not b!94697)))

(assert (=> b!94697 t!5479))

(declare-fun b_and!5779 () Bool)

(assert (= b_and!5775 (and (=> t!5479 result!3201) b_and!5779)))

(assert (=> b!94697 t!5481))

(declare-fun b_and!5781 () Bool)

(assert (= b_and!5777 (and (=> t!5481 result!3203) b_and!5781)))

(declare-fun b_lambda!4175 () Bool)

(assert (=> (not b_lambda!4175) (not b!94706)))

(assert (=> b!94706 t!5479))

(declare-fun b_and!5783 () Bool)

(assert (= b_and!5779 (and (=> t!5479 result!3201) b_and!5783)))

(assert (=> b!94706 t!5481))

(declare-fun b_and!5785 () Bool)

(assert (= b_and!5781 (and (=> t!5481 result!3203) b_and!5785)))

(assert (=> b!94707 m!101689))

(assert (=> b!94707 m!101689))

(assert (=> b!94707 m!101695))

(declare-fun m!102191 () Bool)

(assert (=> b!94705 m!102191))

(assert (=> b!94697 m!101697))

(assert (=> b!94697 m!101943))

(assert (=> b!94697 m!101943))

(assert (=> b!94697 m!101697))

(assert (=> b!94697 m!101945))

(assert (=> b!94697 m!101689))

(assert (=> b!94697 m!101689))

(declare-fun m!102193 () Bool)

(assert (=> b!94697 m!102193))

(declare-fun m!102195 () Bool)

(assert (=> b!94699 m!102195))

(assert (=> b!94700 m!101689))

(assert (=> b!94700 m!101689))

(assert (=> b!94700 m!101695))

(declare-fun m!102197 () Bool)

(assert (=> b!94704 m!102197))

(assert (=> bm!9510 m!102197))

(declare-fun m!102199 () Bool)

(assert (=> b!94706 m!102199))

(declare-fun m!102201 () Bool)

(assert (=> b!94706 m!102201))

(declare-fun m!102203 () Bool)

(assert (=> b!94706 m!102203))

(assert (=> b!94706 m!102201))

(assert (=> b!94706 m!101943))

(assert (=> b!94706 m!101689))

(assert (=> b!94706 m!101943))

(assert (=> b!94706 m!101697))

(assert (=> b!94706 m!101945))

(assert (=> b!94706 m!101697))

(declare-fun m!102205 () Bool)

(assert (=> b!94706 m!102205))

(declare-fun m!102207 () Bool)

(assert (=> d!24767 m!102207))

(assert (=> d!24767 m!101603))

(assert (=> b!94698 m!101689))

(assert (=> b!94698 m!101689))

(declare-fun m!102209 () Bool)

(assert (=> b!94698 m!102209))

(assert (=> b!94578 d!24767))

(declare-fun d!24769 () Bool)

(declare-fun e!61813 () Bool)

(assert (=> d!24769 e!61813))

(declare-fun res!47942 () Bool)

(assert (=> d!24769 (=> (not res!47942) (not e!61813))))

(declare-fun lt!47088 () ListLongMap!1521)

(assert (=> d!24769 (= res!47942 (contains!789 lt!47088 (_1!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))))))

(declare-fun lt!47089 () List!1569)

(assert (=> d!24769 (= lt!47088 (ListLongMap!1522 lt!47089))))

(declare-fun lt!47087 () Unit!2798)

(declare-fun lt!47090 () Unit!2798)

(assert (=> d!24769 (= lt!47087 lt!47090)))

(assert (=> d!24769 (= (getValueByKey!148 lt!47089 (_1!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))))))

(assert (=> d!24769 (= lt!47090 (lemmaContainsTupThenGetReturnValue!64 lt!47089 (_1!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))))))

(assert (=> d!24769 (= lt!47089 (insertStrictlySorted!67 (toList!776 lt!46932) (_1!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))))))

(assert (=> d!24769 (= (+!133 lt!46932 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))) lt!47088)))

(declare-fun b!94708 () Bool)

(declare-fun res!47943 () Bool)

(assert (=> b!94708 (=> (not res!47943) (not e!61813))))

(assert (=> b!94708 (= res!47943 (= (getValueByKey!148 (toList!776 lt!47088) (_1!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))))))))

(declare-fun b!94709 () Bool)

(assert (=> b!94709 (= e!61813 (contains!792 (toList!776 lt!47088) (tuple2!2311 lt!46928 (minValue!2323 newMap!16))))))

(assert (= (and d!24769 res!47942) b!94708))

(assert (= (and b!94708 res!47943) b!94709))

(declare-fun m!102211 () Bool)

(assert (=> d!24769 m!102211))

(declare-fun m!102213 () Bool)

(assert (=> d!24769 m!102213))

(declare-fun m!102215 () Bool)

(assert (=> d!24769 m!102215))

(declare-fun m!102217 () Bool)

(assert (=> d!24769 m!102217))

(declare-fun m!102219 () Bool)

(assert (=> b!94708 m!102219))

(declare-fun m!102221 () Bool)

(assert (=> b!94709 m!102221))

(assert (=> b!94578 d!24769))

(declare-fun d!24771 () Bool)

(declare-fun e!61814 () Bool)

(assert (=> d!24771 e!61814))

(declare-fun res!47944 () Bool)

(assert (=> d!24771 (=> (not res!47944) (not e!61814))))

(declare-fun lt!47092 () ListLongMap!1521)

(assert (=> d!24771 (= res!47944 (contains!789 lt!47092 (_1!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47093 () List!1569)

(assert (=> d!24771 (= lt!47092 (ListLongMap!1522 lt!47093))))

(declare-fun lt!47091 () Unit!2798)

(declare-fun lt!47094 () Unit!2798)

(assert (=> d!24771 (= lt!47091 lt!47094)))

(assert (=> d!24771 (= (getValueByKey!148 lt!47093 (_1!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24771 (= lt!47094 (lemmaContainsTupThenGetReturnValue!64 lt!47093 (_1!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24771 (= lt!47093 (insertStrictlySorted!67 (toList!776 lt!46938) (_1!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24771 (= (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))) lt!47092)))

(declare-fun b!94710 () Bool)

(declare-fun res!47945 () Bool)

(assert (=> b!94710 (=> (not res!47945) (not e!61814))))

(assert (=> b!94710 (= res!47945 (= (getValueByKey!148 (toList!776 lt!47092) (_1!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94711 () Bool)

(assert (=> b!94711 (= e!61814 (contains!792 (toList!776 lt!47092) (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24771 res!47944) b!94710))

(assert (= (and b!94710 res!47945) b!94711))

(declare-fun m!102223 () Bool)

(assert (=> d!24771 m!102223))

(declare-fun m!102225 () Bool)

(assert (=> d!24771 m!102225))

(declare-fun m!102227 () Bool)

(assert (=> d!24771 m!102227))

(declare-fun m!102229 () Bool)

(assert (=> d!24771 m!102229))

(declare-fun m!102231 () Bool)

(assert (=> b!94710 m!102231))

(declare-fun m!102233 () Bool)

(assert (=> b!94711 m!102233))

(assert (=> b!94578 d!24771))

(declare-fun d!24773 () Bool)

(declare-fun e!61815 () Bool)

(assert (=> d!24773 e!61815))

(declare-fun res!47946 () Bool)

(assert (=> d!24773 (=> (not res!47946) (not e!61815))))

(declare-fun lt!47096 () ListLongMap!1521)

(assert (=> d!24773 (= res!47946 (contains!789 lt!47096 (_1!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))))))

(declare-fun lt!47097 () List!1569)

(assert (=> d!24773 (= lt!47096 (ListLongMap!1522 lt!47097))))

(declare-fun lt!47095 () Unit!2798)

(declare-fun lt!47098 () Unit!2798)

(assert (=> d!24773 (= lt!47095 lt!47098)))

(assert (=> d!24773 (= (getValueByKey!148 lt!47097 (_1!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))))))

(assert (=> d!24773 (= lt!47098 (lemmaContainsTupThenGetReturnValue!64 lt!47097 (_1!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))))))

(assert (=> d!24773 (= lt!47097 (insertStrictlySorted!67 (toList!776 lt!46930) (_1!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))))))

(assert (=> d!24773 (= (+!133 lt!46930 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))) lt!47096)))

(declare-fun b!94712 () Bool)

(declare-fun res!47947 () Bool)

(assert (=> b!94712 (=> (not res!47947) (not e!61815))))

(assert (=> b!94712 (= res!47947 (= (getValueByKey!148 (toList!776 lt!47096) (_1!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46936 (minValue!2323 newMap!16))))))))

(declare-fun b!94713 () Bool)

(assert (=> b!94713 (= e!61815 (contains!792 (toList!776 lt!47096) (tuple2!2311 lt!46936 (minValue!2323 newMap!16))))))

(assert (= (and d!24773 res!47946) b!94712))

(assert (= (and b!94712 res!47947) b!94713))

(declare-fun m!102235 () Bool)

(assert (=> d!24773 m!102235))

(declare-fun m!102237 () Bool)

(assert (=> d!24773 m!102237))

(declare-fun m!102239 () Bool)

(assert (=> d!24773 m!102239))

(declare-fun m!102241 () Bool)

(assert (=> d!24773 m!102241))

(declare-fun m!102243 () Bool)

(assert (=> b!94712 m!102243))

(declare-fun m!102245 () Bool)

(assert (=> b!94713 m!102245))

(assert (=> b!94578 d!24773))

(declare-fun d!24775 () Bool)

(assert (=> d!24775 (contains!789 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))) lt!46937)))

(declare-fun lt!47099 () Unit!2798)

(assert (=> d!24775 (= lt!47099 (choose!563 lt!46938 lt!46929 (zeroValue!2323 newMap!16) lt!46937))))

(assert (=> d!24775 (contains!789 lt!46938 lt!46937)))

(assert (=> d!24775 (= (addStillContains!66 lt!46938 lt!46929 (zeroValue!2323 newMap!16) lt!46937) lt!47099)))

(declare-fun bs!3893 () Bool)

(assert (= bs!3893 d!24775))

(assert (=> bs!3893 m!101949))

(assert (=> bs!3893 m!101949))

(assert (=> bs!3893 m!101969))

(declare-fun m!102247 () Bool)

(assert (=> bs!3893 m!102247))

(declare-fun m!102249 () Bool)

(assert (=> bs!3893 m!102249))

(assert (=> b!94578 d!24775))

(declare-fun d!24777 () Bool)

(declare-fun e!61816 () Bool)

(assert (=> d!24777 e!61816))

(declare-fun res!47948 () Bool)

(assert (=> d!24777 (=> (not res!47948) (not e!61816))))

(declare-fun lt!47101 () ListLongMap!1521)

(assert (=> d!24777 (= res!47948 (contains!789 lt!47101 (_1!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47102 () List!1569)

(assert (=> d!24777 (= lt!47101 (ListLongMap!1522 lt!47102))))

(declare-fun lt!47100 () Unit!2798)

(declare-fun lt!47103 () Unit!2798)

(assert (=> d!24777 (= lt!47100 lt!47103)))

(assert (=> d!24777 (= (getValueByKey!148 lt!47102 (_1!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24777 (= lt!47103 (lemmaContainsTupThenGetReturnValue!64 lt!47102 (_1!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24777 (= lt!47102 (insertStrictlySorted!67 (toList!776 lt!46934) (_1!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24777 (= (+!133 lt!46934 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))) lt!47101)))

(declare-fun b!94714 () Bool)

(declare-fun res!47949 () Bool)

(assert (=> b!94714 (=> (not res!47949) (not e!61816))))

(assert (=> b!94714 (= res!47949 (= (getValueByKey!148 (toList!776 lt!47101) (_1!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94715 () Bool)

(assert (=> b!94715 (= e!61816 (contains!792 (toList!776 lt!47101) (tuple2!2311 lt!46926 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24777 res!47948) b!94714))

(assert (= (and b!94714 res!47949) b!94715))

(declare-fun m!102251 () Bool)

(assert (=> d!24777 m!102251))

(declare-fun m!102253 () Bool)

(assert (=> d!24777 m!102253))

(declare-fun m!102255 () Bool)

(assert (=> d!24777 m!102255))

(declare-fun m!102257 () Bool)

(assert (=> d!24777 m!102257))

(declare-fun m!102259 () Bool)

(assert (=> b!94714 m!102259))

(declare-fun m!102261 () Bool)

(assert (=> b!94715 m!102261))

(assert (=> b!94578 d!24777))

(declare-fun d!24779 () Bool)

(declare-fun e!61818 () Bool)

(assert (=> d!24779 e!61818))

(declare-fun res!47950 () Bool)

(assert (=> d!24779 (=> res!47950 e!61818)))

(declare-fun lt!47107 () Bool)

(assert (=> d!24779 (= res!47950 (not lt!47107))))

(declare-fun lt!47104 () Bool)

(assert (=> d!24779 (= lt!47107 lt!47104)))

(declare-fun lt!47106 () Unit!2798)

(declare-fun e!61817 () Unit!2798)

(assert (=> d!24779 (= lt!47106 e!61817)))

(declare-fun c!15826 () Bool)

(assert (=> d!24779 (= c!15826 lt!47104)))

(assert (=> d!24779 (= lt!47104 (containsKey!152 (toList!776 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))) lt!46937))))

(assert (=> d!24779 (= (contains!789 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16))) lt!46937) lt!47107)))

(declare-fun b!94716 () Bool)

(declare-fun lt!47105 () Unit!2798)

(assert (=> b!94716 (= e!61817 lt!47105)))

(assert (=> b!94716 (= lt!47105 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))) lt!46937))))

(assert (=> b!94716 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))) lt!46937))))

(declare-fun b!94717 () Bool)

(declare-fun Unit!2823 () Unit!2798)

(assert (=> b!94717 (= e!61817 Unit!2823)))

(declare-fun b!94718 () Bool)

(assert (=> b!94718 (= e!61818 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46938 (tuple2!2311 lt!46929 (zeroValue!2323 newMap!16)))) lt!46937)))))

(assert (= (and d!24779 c!15826) b!94716))

(assert (= (and d!24779 (not c!15826)) b!94717))

(assert (= (and d!24779 (not res!47950)) b!94718))

(declare-fun m!102263 () Bool)

(assert (=> d!24779 m!102263))

(declare-fun m!102265 () Bool)

(assert (=> b!94716 m!102265))

(declare-fun m!102267 () Bool)

(assert (=> b!94716 m!102267))

(assert (=> b!94716 m!102267))

(declare-fun m!102269 () Bool)

(assert (=> b!94716 m!102269))

(assert (=> b!94718 m!102267))

(assert (=> b!94718 m!102267))

(assert (=> b!94718 m!102269))

(assert (=> b!94578 d!24779))

(declare-fun d!24781 () Bool)

(assert (=> d!24781 (= (apply!90 (+!133 lt!46932 (tuple2!2311 lt!46928 (minValue!2323 newMap!16))) lt!46922) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46932 (tuple2!2311 lt!46928 (minValue!2323 newMap!16)))) lt!46922)))))

(declare-fun bs!3894 () Bool)

(assert (= bs!3894 d!24781))

(declare-fun m!102271 () Bool)

(assert (=> bs!3894 m!102271))

(assert (=> bs!3894 m!102271))

(declare-fun m!102273 () Bool)

(assert (=> bs!3894 m!102273))

(assert (=> b!94578 d!24781))

(declare-fun d!24783 () Bool)

(assert (=> d!24783 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun lt!47108 () Unit!2798)

(assert (=> d!24783 (= lt!47108 (choose!561 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun e!61819 () Bool)

(assert (=> d!24783 e!61819))

(declare-fun res!47951 () Bool)

(assert (=> d!24783 (=> (not res!47951) (not e!61819))))

(assert (=> d!24783 (= res!47951 (isStrictlySorted!302 (toList!776 lt!46762)))))

(assert (=> d!24783 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47108)))

(declare-fun b!94719 () Bool)

(assert (=> b!94719 (= e!61819 (containsKey!152 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!24783 res!47951) b!94719))

(assert (=> d!24783 m!101533))

(assert (=> d!24783 m!101611))

(assert (=> d!24783 m!101611))

(assert (=> d!24783 m!101613))

(assert (=> d!24783 m!101533))

(declare-fun m!102275 () Bool)

(assert (=> d!24783 m!102275))

(declare-fun m!102277 () Bool)

(assert (=> d!24783 m!102277))

(assert (=> b!94719 m!101533))

(assert (=> b!94719 m!101607))

(assert (=> b!94370 d!24783))

(declare-fun d!24785 () Bool)

(assert (=> d!24785 (= (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (not (isEmpty!350 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun bs!3895 () Bool)

(assert (= bs!3895 d!24785))

(assert (=> bs!3895 m!101611))

(declare-fun m!102279 () Bool)

(assert (=> bs!3895 m!102279))

(assert (=> b!94370 d!24785))

(declare-fun d!24787 () Bool)

(declare-fun c!15827 () Bool)

(assert (=> d!24787 (= c!15827 (and ((_ is Cons!1565) (toList!776 lt!46762)) (= (_1!1166 (h!2157 (toList!776 lt!46762))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun e!61820 () Option!154)

(assert (=> d!24787 (= (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!61820)))

(declare-fun e!61821 () Option!154)

(declare-fun b!94722 () Bool)

(assert (=> b!94722 (= e!61821 (getValueByKey!148 (t!5471 (toList!776 lt!46762)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94723 () Bool)

(assert (=> b!94723 (= e!61821 None!152)))

(declare-fun b!94721 () Bool)

(assert (=> b!94721 (= e!61820 e!61821)))

(declare-fun c!15828 () Bool)

(assert (=> b!94721 (= c!15828 (and ((_ is Cons!1565) (toList!776 lt!46762)) (not (= (_1!1166 (h!2157 (toList!776 lt!46762))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))))

(declare-fun b!94720 () Bool)

(assert (=> b!94720 (= e!61820 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46762)))))))

(assert (= (and d!24787 c!15827) b!94720))

(assert (= (and d!24787 (not c!15827)) b!94721))

(assert (= (and b!94721 c!15828) b!94722))

(assert (= (and b!94721 (not c!15828)) b!94723))

(assert (=> b!94722 m!101533))

(declare-fun m!102281 () Bool)

(assert (=> b!94722 m!102281))

(assert (=> b!94370 d!24787))

(declare-fun d!24789 () Bool)

(assert (=> d!24789 (= (isDefined!101 (getValueByKey!148 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) (not (isEmpty!350 (getValueByKey!148 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun bs!3896 () Bool)

(assert (= bs!3896 d!24789))

(assert (=> bs!3896 m!101789))

(declare-fun m!102283 () Bool)

(assert (=> bs!3896 m!102283))

(assert (=> b!94499 d!24789))

(declare-fun d!24791 () Bool)

(declare-fun c!15829 () Bool)

(assert (=> d!24791 (= c!15829 (and ((_ is Cons!1565) (toList!776 e!61513)) (= (_1!1166 (h!2157 (toList!776 e!61513))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun e!61822 () Option!154)

(assert (=> d!24791 (= (getValueByKey!148 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!61822)))

(declare-fun b!94726 () Bool)

(declare-fun e!61823 () Option!154)

(assert (=> b!94726 (= e!61823 (getValueByKey!148 (t!5471 (toList!776 e!61513)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94727 () Bool)

(assert (=> b!94727 (= e!61823 None!152)))

(declare-fun b!94725 () Bool)

(assert (=> b!94725 (= e!61822 e!61823)))

(declare-fun c!15830 () Bool)

(assert (=> b!94725 (= c!15830 (and ((_ is Cons!1565) (toList!776 e!61513)) (not (= (_1!1166 (h!2157 (toList!776 e!61513))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun b!94724 () Bool)

(assert (=> b!94724 (= e!61822 (Some!153 (_2!1166 (h!2157 (toList!776 e!61513)))))))

(assert (= (and d!24791 c!15829) b!94724))

(assert (= (and d!24791 (not c!15829)) b!94725))

(assert (= (and b!94725 c!15830) b!94726))

(assert (= (and b!94725 (not c!15830)) b!94727))

(assert (=> b!94726 m!101363))

(declare-fun m!102285 () Bool)

(assert (=> b!94726 m!102285))

(assert (=> b!94499 d!24791))

(declare-fun d!24793 () Bool)

(declare-fun res!47952 () Bool)

(declare-fun e!61824 () Bool)

(assert (=> d!24793 (=> res!47952 e!61824)))

(assert (=> d!24793 (= res!47952 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(assert (=> d!24793 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697))) e!61824)))

(declare-fun b!94728 () Bool)

(declare-fun e!61826 () Bool)

(declare-fun call!9514 () Bool)

(assert (=> b!94728 (= e!61826 call!9514)))

(declare-fun b!94729 () Bool)

(declare-fun e!61825 () Bool)

(assert (=> b!94729 (= e!61825 e!61826)))

(declare-fun lt!47109 () (_ BitVec 64))

(assert (=> b!94729 (= lt!47109 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000))))

(declare-fun lt!47111 () Unit!2798)

(assert (=> b!94729 (= lt!47111 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 (_2!1167 lt!46697)) lt!47109 #b00000000000000000000000000000000))))

(assert (=> b!94729 (arrayContainsKey!0 (_keys!4118 (_2!1167 lt!46697)) lt!47109 #b00000000000000000000000000000000)))

(declare-fun lt!47110 () Unit!2798)

(assert (=> b!94729 (= lt!47110 lt!47111)))

(declare-fun res!47953 () Bool)

(assert (=> b!94729 (= res!47953 (= (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000) (_keys!4118 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697))) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!94729 (=> (not res!47953) (not e!61826))))

(declare-fun b!94730 () Bool)

(assert (=> b!94730 (= e!61824 e!61825)))

(declare-fun c!15831 () Bool)

(assert (=> b!94730 (= c!15831 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun bm!9511 () Bool)

(assert (=> bm!9511 (= call!9514 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697))))))

(declare-fun b!94731 () Bool)

(assert (=> b!94731 (= e!61825 call!9514)))

(assert (= (and d!24793 (not res!47952)) b!94730))

(assert (= (and b!94730 c!15831) b!94729))

(assert (= (and b!94730 (not c!15831)) b!94731))

(assert (= (and b!94729 res!47953) b!94728))

(assert (= (or b!94728 b!94731) bm!9511))

(declare-fun m!102287 () Bool)

(assert (=> b!94729 m!102287))

(declare-fun m!102289 () Bool)

(assert (=> b!94729 m!102289))

(declare-fun m!102291 () Bool)

(assert (=> b!94729 m!102291))

(assert (=> b!94729 m!102287))

(declare-fun m!102293 () Bool)

(assert (=> b!94729 m!102293))

(assert (=> b!94730 m!102287))

(assert (=> b!94730 m!102287))

(declare-fun m!102295 () Bool)

(assert (=> b!94730 m!102295))

(declare-fun m!102297 () Bool)

(assert (=> bm!9511 m!102297))

(assert (=> b!94374 d!24793))

(declare-fun d!24795 () Bool)

(assert (=> d!24795 (contains!789 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))) lt!46819)))

(declare-fun lt!47112 () Unit!2798)

(assert (=> d!24795 (= lt!47112 (choose!563 lt!46820 lt!46811 (zeroValue!2323 newMap!16) lt!46819))))

(assert (=> d!24795 (contains!789 lt!46820 lt!46819)))

(assert (=> d!24795 (= (addStillContains!66 lt!46820 lt!46811 (zeroValue!2323 newMap!16) lt!46819) lt!47112)))

(declare-fun bs!3897 () Bool)

(assert (= bs!3897 d!24795))

(assert (=> bs!3897 m!101705))

(assert (=> bs!3897 m!101705))

(assert (=> bs!3897 m!101725))

(declare-fun m!102299 () Bool)

(assert (=> bs!3897 m!102299))

(declare-fun m!102301 () Bool)

(assert (=> bs!3897 m!102301))

(assert (=> b!94432 d!24795))

(declare-fun d!24797 () Bool)

(assert (=> d!24797 (= (apply!90 (+!133 lt!46812 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))) lt!46806) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46812 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))) lt!46806)))))

(declare-fun bs!3898 () Bool)

(assert (= bs!3898 d!24797))

(declare-fun m!102303 () Bool)

(assert (=> bs!3898 m!102303))

(assert (=> bs!3898 m!102303))

(declare-fun m!102305 () Bool)

(assert (=> bs!3898 m!102305))

(assert (=> b!94432 d!24797))

(declare-fun d!24799 () Bool)

(declare-fun e!61828 () Bool)

(assert (=> d!24799 e!61828))

(declare-fun res!47954 () Bool)

(assert (=> d!24799 (=> res!47954 e!61828)))

(declare-fun lt!47116 () Bool)

(assert (=> d!24799 (= res!47954 (not lt!47116))))

(declare-fun lt!47113 () Bool)

(assert (=> d!24799 (= lt!47116 lt!47113)))

(declare-fun lt!47115 () Unit!2798)

(declare-fun e!61827 () Unit!2798)

(assert (=> d!24799 (= lt!47115 e!61827)))

(declare-fun c!15832 () Bool)

(assert (=> d!24799 (= c!15832 lt!47113)))

(assert (=> d!24799 (= lt!47113 (containsKey!152 (toList!776 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))) lt!46819))))

(assert (=> d!24799 (= (contains!789 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))) lt!46819) lt!47116)))

(declare-fun b!94732 () Bool)

(declare-fun lt!47114 () Unit!2798)

(assert (=> b!94732 (= e!61827 lt!47114)))

(assert (=> b!94732 (= lt!47114 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))) lt!46819))))

(assert (=> b!94732 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))) lt!46819))))

(declare-fun b!94733 () Bool)

(declare-fun Unit!2824 () Unit!2798)

(assert (=> b!94733 (= e!61827 Unit!2824)))

(declare-fun b!94734 () Bool)

(assert (=> b!94734 (= e!61828 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))) lt!46819)))))

(assert (= (and d!24799 c!15832) b!94732))

(assert (= (and d!24799 (not c!15832)) b!94733))

(assert (= (and d!24799 (not res!47954)) b!94734))

(declare-fun m!102307 () Bool)

(assert (=> d!24799 m!102307))

(declare-fun m!102309 () Bool)

(assert (=> b!94732 m!102309))

(declare-fun m!102311 () Bool)

(assert (=> b!94732 m!102311))

(assert (=> b!94732 m!102311))

(declare-fun m!102313 () Bool)

(assert (=> b!94732 m!102313))

(assert (=> b!94734 m!102311))

(assert (=> b!94734 m!102311))

(assert (=> b!94734 m!102313))

(assert (=> b!94432 d!24799))

(declare-fun d!24801 () Bool)

(assert (=> d!24801 (= (apply!90 lt!46816 lt!46821) (get!1265 (getValueByKey!148 (toList!776 lt!46816) lt!46821)))))

(declare-fun bs!3899 () Bool)

(assert (= bs!3899 d!24801))

(declare-fun m!102315 () Bool)

(assert (=> bs!3899 m!102315))

(assert (=> bs!3899 m!102315))

(declare-fun m!102317 () Bool)

(assert (=> bs!3899 m!102317))

(assert (=> b!94432 d!24801))

(declare-fun d!24803 () Bool)

(assert (=> d!24803 (= (apply!90 (+!133 lt!46814 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))) lt!46804) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46814 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))) lt!46804)))))

(declare-fun bs!3900 () Bool)

(assert (= bs!3900 d!24803))

(declare-fun m!102319 () Bool)

(assert (=> bs!3900 m!102319))

(assert (=> bs!3900 m!102319))

(declare-fun m!102321 () Bool)

(assert (=> bs!3900 m!102321))

(assert (=> b!94432 d!24803))

(declare-fun d!24805 () Bool)

(assert (=> d!24805 (= (apply!90 lt!46812 lt!46806) (get!1265 (getValueByKey!148 (toList!776 lt!46812) lt!46806)))))

(declare-fun bs!3901 () Bool)

(assert (= bs!3901 d!24805))

(declare-fun m!102323 () Bool)

(assert (=> bs!3901 m!102323))

(assert (=> bs!3901 m!102323))

(declare-fun m!102325 () Bool)

(assert (=> bs!3901 m!102325))

(assert (=> b!94432 d!24805))

(declare-fun d!24807 () Bool)

(assert (=> d!24807 (= (apply!90 (+!133 lt!46814 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))) lt!46804) (apply!90 lt!46814 lt!46804))))

(declare-fun lt!47117 () Unit!2798)

(assert (=> d!24807 (= lt!47117 (choose!564 lt!46814 lt!46810 (minValue!2323 newMap!16) lt!46804))))

(declare-fun e!61829 () Bool)

(assert (=> d!24807 e!61829))

(declare-fun res!47955 () Bool)

(assert (=> d!24807 (=> (not res!47955) (not e!61829))))

(assert (=> d!24807 (= res!47955 (contains!789 lt!46814 lt!46804))))

(assert (=> d!24807 (= (addApplyDifferent!66 lt!46814 lt!46810 (minValue!2323 newMap!16) lt!46804) lt!47117)))

(declare-fun b!94735 () Bool)

(assert (=> b!94735 (= e!61829 (not (= lt!46804 lt!46810)))))

(assert (= (and d!24807 res!47955) b!94735))

(assert (=> d!24807 m!101711))

(assert (=> d!24807 m!101733))

(assert (=> d!24807 m!101711))

(assert (=> d!24807 m!101713))

(declare-fun m!102327 () Bool)

(assert (=> d!24807 m!102327))

(declare-fun m!102329 () Bool)

(assert (=> d!24807 m!102329))

(assert (=> b!94432 d!24807))

(declare-fun b!94736 () Bool)

(declare-fun e!61830 () Bool)

(declare-fun e!61832 () Bool)

(assert (=> b!94736 (= e!61830 e!61832)))

(declare-fun c!15834 () Bool)

(declare-fun e!61831 () Bool)

(assert (=> b!94736 (= c!15834 e!61831)))

(declare-fun res!47956 () Bool)

(assert (=> b!94736 (=> (not res!47956) (not e!61831))))

(assert (=> b!94736 (= res!47956 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94737 () Bool)

(assert (=> b!94737 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> b!94737 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (_values!2419 newMap!16))))))

(declare-fun e!61836 () Bool)

(declare-fun lt!47119 () ListLongMap!1521)

(assert (=> b!94737 (= e!61836 (= (apply!90 lt!47119 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94738 () Bool)

(assert (=> b!94738 (= e!61832 e!61836)))

(assert (=> b!94738 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun res!47958 () Bool)

(assert (=> b!94738 (= res!47958 (contains!789 lt!47119 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94738 (=> (not res!47958) (not e!61836))))

(declare-fun d!24809 () Bool)

(assert (=> d!24809 e!61830))

(declare-fun res!47957 () Bool)

(assert (=> d!24809 (=> (not res!47957) (not e!61830))))

(assert (=> d!24809 (= res!47957 (not (contains!789 lt!47119 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61834 () ListLongMap!1521)

(assert (=> d!24809 (= lt!47119 e!61834)))

(declare-fun c!15835 () Bool)

(assert (=> d!24809 (= c!15835 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24809 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24809 (= (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47119)))

(declare-fun b!94739 () Bool)

(declare-fun e!61833 () Bool)

(assert (=> b!94739 (= e!61833 (isEmpty!351 lt!47119))))

(declare-fun b!94740 () Bool)

(declare-fun e!61835 () ListLongMap!1521)

(assert (=> b!94740 (= e!61834 e!61835)))

(declare-fun c!15836 () Bool)

(assert (=> b!94740 (= c!15836 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94741 () Bool)

(assert (=> b!94741 (= e!61832 e!61833)))

(declare-fun c!15833 () Bool)

(assert (=> b!94741 (= c!15833 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94742 () Bool)

(declare-fun call!9515 () ListLongMap!1521)

(assert (=> b!94742 (= e!61835 call!9515)))

(declare-fun b!94743 () Bool)

(assert (=> b!94743 (= e!61834 (ListLongMap!1522 Nil!1566))))

(declare-fun b!94744 () Bool)

(assert (=> b!94744 (= e!61833 (= lt!47119 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!94745 () Bool)

(declare-fun res!47959 () Bool)

(assert (=> b!94745 (=> (not res!47959) (not e!61830))))

(assert (=> b!94745 (= res!47959 (not (contains!789 lt!47119 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!94746 () Bool)

(declare-fun lt!47123 () Unit!2798)

(declare-fun lt!47121 () Unit!2798)

(assert (=> b!94746 (= lt!47123 lt!47121)))

(declare-fun lt!47120 () V!3131)

(declare-fun lt!47118 () (_ BitVec 64))

(declare-fun lt!47124 () (_ BitVec 64))

(declare-fun lt!47122 () ListLongMap!1521)

(assert (=> b!94746 (not (contains!789 (+!133 lt!47122 (tuple2!2311 lt!47118 lt!47120)) lt!47124))))

(assert (=> b!94746 (= lt!47121 (addStillNotContains!38 lt!47122 lt!47118 lt!47120 lt!47124))))

(assert (=> b!94746 (= lt!47124 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!94746 (= lt!47120 (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!94746 (= lt!47118 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94746 (= lt!47122 call!9515)))

(assert (=> b!94746 (= e!61835 (+!133 call!9515 (tuple2!2311 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!94747 () Bool)

(assert (=> b!94747 (= e!61831 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94747 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!9512 () Bool)

(assert (=> bm!9512 (= call!9515 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(assert (= (and d!24809 c!15835) b!94743))

(assert (= (and d!24809 (not c!15835)) b!94740))

(assert (= (and b!94740 c!15836) b!94746))

(assert (= (and b!94740 (not c!15836)) b!94742))

(assert (= (or b!94746 b!94742) bm!9512))

(assert (= (and d!24809 res!47957) b!94745))

(assert (= (and b!94745 res!47959) b!94736))

(assert (= (and b!94736 res!47956) b!94747))

(assert (= (and b!94736 c!15834) b!94738))

(assert (= (and b!94736 (not c!15834)) b!94741))

(assert (= (and b!94738 res!47958) b!94737))

(assert (= (and b!94741 c!15833) b!94744))

(assert (= (and b!94741 (not c!15833)) b!94739))

(declare-fun b_lambda!4177 () Bool)

(assert (=> (not b_lambda!4177) (not b!94737)))

(assert (=> b!94737 t!5479))

(declare-fun b_and!5787 () Bool)

(assert (= b_and!5783 (and (=> t!5479 result!3201) b_and!5787)))

(assert (=> b!94737 t!5481))

(declare-fun b_and!5789 () Bool)

(assert (= b_and!5785 (and (=> t!5481 result!3203) b_and!5789)))

(declare-fun b_lambda!4179 () Bool)

(assert (=> (not b_lambda!4179) (not b!94746)))

(assert (=> b!94746 t!5479))

(declare-fun b_and!5791 () Bool)

(assert (= b_and!5787 (and (=> t!5479 result!3201) b_and!5791)))

(assert (=> b!94746 t!5481))

(declare-fun b_and!5793 () Bool)

(assert (= b_and!5789 (and (=> t!5481 result!3203) b_and!5793)))

(assert (=> b!94747 m!101689))

(assert (=> b!94747 m!101689))

(assert (=> b!94747 m!101695))

(declare-fun m!102331 () Bool)

(assert (=> b!94745 m!102331))

(assert (=> b!94737 m!101697))

(assert (=> b!94737 m!101699))

(assert (=> b!94737 m!101699))

(assert (=> b!94737 m!101697))

(assert (=> b!94737 m!101701))

(assert (=> b!94737 m!101689))

(assert (=> b!94737 m!101689))

(declare-fun m!102333 () Bool)

(assert (=> b!94737 m!102333))

(declare-fun m!102335 () Bool)

(assert (=> b!94739 m!102335))

(assert (=> b!94740 m!101689))

(assert (=> b!94740 m!101689))

(assert (=> b!94740 m!101695))

(declare-fun m!102337 () Bool)

(assert (=> b!94744 m!102337))

(assert (=> bm!9512 m!102337))

(declare-fun m!102339 () Bool)

(assert (=> b!94746 m!102339))

(declare-fun m!102341 () Bool)

(assert (=> b!94746 m!102341))

(declare-fun m!102343 () Bool)

(assert (=> b!94746 m!102343))

(assert (=> b!94746 m!102341))

(assert (=> b!94746 m!101699))

(assert (=> b!94746 m!101689))

(assert (=> b!94746 m!101699))

(assert (=> b!94746 m!101697))

(assert (=> b!94746 m!101701))

(assert (=> b!94746 m!101697))

(declare-fun m!102345 () Bool)

(assert (=> b!94746 m!102345))

(declare-fun m!102347 () Bool)

(assert (=> d!24809 m!102347))

(assert (=> d!24809 m!101603))

(assert (=> b!94738 m!101689))

(assert (=> b!94738 m!101689))

(declare-fun m!102349 () Bool)

(assert (=> b!94738 m!102349))

(assert (=> b!94432 d!24809))

(declare-fun d!24811 () Bool)

(declare-fun e!61837 () Bool)

(assert (=> d!24811 e!61837))

(declare-fun res!47960 () Bool)

(assert (=> d!24811 (=> (not res!47960) (not e!61837))))

(declare-fun lt!47126 () ListLongMap!1521)

(assert (=> d!24811 (= res!47960 (contains!789 lt!47126 (_1!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47127 () List!1569)

(assert (=> d!24811 (= lt!47126 (ListLongMap!1522 lt!47127))))

(declare-fun lt!47125 () Unit!2798)

(declare-fun lt!47128 () Unit!2798)

(assert (=> d!24811 (= lt!47125 lt!47128)))

(assert (=> d!24811 (= (getValueByKey!148 lt!47127 (_1!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24811 (= lt!47128 (lemmaContainsTupThenGetReturnValue!64 lt!47127 (_1!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24811 (= lt!47127 (insertStrictlySorted!67 (toList!776 lt!46820) (_1!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24811 (= (+!133 lt!46820 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))) lt!47126)))

(declare-fun b!94748 () Bool)

(declare-fun res!47961 () Bool)

(assert (=> b!94748 (=> (not res!47961) (not e!61837))))

(assert (=> b!94748 (= res!47961 (= (getValueByKey!148 (toList!776 lt!47126) (_1!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94749 () Bool)

(assert (=> b!94749 (= e!61837 (contains!792 (toList!776 lt!47126) (tuple2!2311 lt!46811 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24811 res!47960) b!94748))

(assert (= (and b!94748 res!47961) b!94749))

(declare-fun m!102351 () Bool)

(assert (=> d!24811 m!102351))

(declare-fun m!102353 () Bool)

(assert (=> d!24811 m!102353))

(declare-fun m!102355 () Bool)

(assert (=> d!24811 m!102355))

(declare-fun m!102357 () Bool)

(assert (=> d!24811 m!102357))

(declare-fun m!102359 () Bool)

(assert (=> b!94748 m!102359))

(declare-fun m!102361 () Bool)

(assert (=> b!94749 m!102361))

(assert (=> b!94432 d!24811))

(declare-fun d!24813 () Bool)

(assert (=> d!24813 (= (apply!90 (+!133 lt!46816 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))) lt!46821) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46816 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))) lt!46821)))))

(declare-fun bs!3902 () Bool)

(assert (= bs!3902 d!24813))

(declare-fun m!102363 () Bool)

(assert (=> bs!3902 m!102363))

(assert (=> bs!3902 m!102363))

(declare-fun m!102365 () Bool)

(assert (=> bs!3902 m!102365))

(assert (=> b!94432 d!24813))

(declare-fun d!24815 () Bool)

(declare-fun e!61838 () Bool)

(assert (=> d!24815 e!61838))

(declare-fun res!47962 () Bool)

(assert (=> d!24815 (=> (not res!47962) (not e!61838))))

(declare-fun lt!47130 () ListLongMap!1521)

(assert (=> d!24815 (= res!47962 (contains!789 lt!47130 (_1!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))))))

(declare-fun lt!47131 () List!1569)

(assert (=> d!24815 (= lt!47130 (ListLongMap!1522 lt!47131))))

(declare-fun lt!47129 () Unit!2798)

(declare-fun lt!47132 () Unit!2798)

(assert (=> d!24815 (= lt!47129 lt!47132)))

(assert (=> d!24815 (= (getValueByKey!148 lt!47131 (_1!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24815 (= lt!47132 (lemmaContainsTupThenGetReturnValue!64 lt!47131 (_1!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24815 (= lt!47131 (insertStrictlySorted!67 (toList!776 lt!46816) (_1!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))))))

(assert (=> d!24815 (= (+!133 lt!46816 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))) lt!47130)))

(declare-fun b!94750 () Bool)

(declare-fun res!47963 () Bool)

(assert (=> b!94750 (=> (not res!47963) (not e!61838))))

(assert (=> b!94750 (= res!47963 (= (getValueByKey!148 (toList!776 lt!47130) (_1!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))))))))

(declare-fun b!94751 () Bool)

(assert (=> b!94751 (= e!61838 (contains!792 (toList!776 lt!47130) (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))))))

(assert (= (and d!24815 res!47962) b!94750))

(assert (= (and b!94750 res!47963) b!94751))

(declare-fun m!102367 () Bool)

(assert (=> d!24815 m!102367))

(declare-fun m!102369 () Bool)

(assert (=> d!24815 m!102369))

(declare-fun m!102371 () Bool)

(assert (=> d!24815 m!102371))

(declare-fun m!102373 () Bool)

(assert (=> d!24815 m!102373))

(declare-fun m!102375 () Bool)

(assert (=> b!94750 m!102375))

(declare-fun m!102377 () Bool)

(assert (=> b!94751 m!102377))

(assert (=> b!94432 d!24815))

(declare-fun d!24817 () Bool)

(declare-fun e!61839 () Bool)

(assert (=> d!24817 e!61839))

(declare-fun res!47964 () Bool)

(assert (=> d!24817 (=> (not res!47964) (not e!61839))))

(declare-fun lt!47134 () ListLongMap!1521)

(assert (=> d!24817 (= res!47964 (contains!789 lt!47134 (_1!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))))))

(declare-fun lt!47135 () List!1569)

(assert (=> d!24817 (= lt!47134 (ListLongMap!1522 lt!47135))))

(declare-fun lt!47133 () Unit!2798)

(declare-fun lt!47136 () Unit!2798)

(assert (=> d!24817 (= lt!47133 lt!47136)))

(assert (=> d!24817 (= (getValueByKey!148 lt!47135 (_1!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))))))

(assert (=> d!24817 (= lt!47136 (lemmaContainsTupThenGetReturnValue!64 lt!47135 (_1!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))))))

(assert (=> d!24817 (= lt!47135 (insertStrictlySorted!67 (toList!776 lt!46814) (_1!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))))))

(assert (=> d!24817 (= (+!133 lt!46814 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))) lt!47134)))

(declare-fun b!94752 () Bool)

(declare-fun res!47965 () Bool)

(assert (=> b!94752 (=> (not res!47965) (not e!61839))))

(assert (=> b!94752 (= res!47965 (= (getValueByKey!148 (toList!776 lt!47134) (_1!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46810 (minValue!2323 newMap!16))))))))

(declare-fun b!94753 () Bool)

(assert (=> b!94753 (= e!61839 (contains!792 (toList!776 lt!47134) (tuple2!2311 lt!46810 (minValue!2323 newMap!16))))))

(assert (= (and d!24817 res!47964) b!94752))

(assert (= (and b!94752 res!47965) b!94753))

(declare-fun m!102379 () Bool)

(assert (=> d!24817 m!102379))

(declare-fun m!102381 () Bool)

(assert (=> d!24817 m!102381))

(declare-fun m!102383 () Bool)

(assert (=> d!24817 m!102383))

(declare-fun m!102385 () Bool)

(assert (=> d!24817 m!102385))

(declare-fun m!102387 () Bool)

(assert (=> b!94752 m!102387))

(declare-fun m!102389 () Bool)

(assert (=> b!94753 m!102389))

(assert (=> b!94432 d!24817))

(declare-fun d!24819 () Bool)

(assert (=> d!24819 (= (apply!90 (+!133 lt!46812 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))) lt!46806) (apply!90 lt!46812 lt!46806))))

(declare-fun lt!47137 () Unit!2798)

(assert (=> d!24819 (= lt!47137 (choose!564 lt!46812 lt!46818 (minValue!2323 newMap!16) lt!46806))))

(declare-fun e!61840 () Bool)

(assert (=> d!24819 e!61840))

(declare-fun res!47966 () Bool)

(assert (=> d!24819 (=> (not res!47966) (not e!61840))))

(assert (=> d!24819 (= res!47966 (contains!789 lt!46812 lt!46806))))

(assert (=> d!24819 (= (addApplyDifferent!66 lt!46812 lt!46818 (minValue!2323 newMap!16) lt!46806) lt!47137)))

(declare-fun b!94754 () Bool)

(assert (=> b!94754 (= e!61840 (not (= lt!46806 lt!46818)))))

(assert (= (and d!24819 res!47966) b!94754))

(assert (=> d!24819 m!101727))

(assert (=> d!24819 m!101723))

(assert (=> d!24819 m!101727))

(assert (=> d!24819 m!101729))

(declare-fun m!102391 () Bool)

(assert (=> d!24819 m!102391))

(declare-fun m!102393 () Bool)

(assert (=> d!24819 m!102393))

(assert (=> b!94432 d!24819))

(declare-fun d!24821 () Bool)

(assert (=> d!24821 (= (apply!90 (+!133 lt!46816 (tuple2!2311 lt!46808 (zeroValue!2323 newMap!16))) lt!46821) (apply!90 lt!46816 lt!46821))))

(declare-fun lt!47138 () Unit!2798)

(assert (=> d!24821 (= lt!47138 (choose!564 lt!46816 lt!46808 (zeroValue!2323 newMap!16) lt!46821))))

(declare-fun e!61841 () Bool)

(assert (=> d!24821 e!61841))

(declare-fun res!47967 () Bool)

(assert (=> d!24821 (=> (not res!47967) (not e!61841))))

(assert (=> d!24821 (= res!47967 (contains!789 lt!46816 lt!46821))))

(assert (=> d!24821 (= (addApplyDifferent!66 lt!46816 lt!46808 (zeroValue!2323 newMap!16) lt!46821) lt!47138)))

(declare-fun b!94755 () Bool)

(assert (=> b!94755 (= e!61841 (not (= lt!46821 lt!46808)))))

(assert (= (and d!24821 res!47967) b!94755))

(assert (=> d!24821 m!101721))

(assert (=> d!24821 m!101709))

(assert (=> d!24821 m!101721))

(assert (=> d!24821 m!101731))

(declare-fun m!102395 () Bool)

(assert (=> d!24821 m!102395))

(declare-fun m!102397 () Bool)

(assert (=> d!24821 m!102397))

(assert (=> b!94432 d!24821))

(declare-fun d!24823 () Bool)

(declare-fun e!61842 () Bool)

(assert (=> d!24823 e!61842))

(declare-fun res!47968 () Bool)

(assert (=> d!24823 (=> (not res!47968) (not e!61842))))

(declare-fun lt!47140 () ListLongMap!1521)

(assert (=> d!24823 (= res!47968 (contains!789 lt!47140 (_1!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))))))

(declare-fun lt!47141 () List!1569)

(assert (=> d!24823 (= lt!47140 (ListLongMap!1522 lt!47141))))

(declare-fun lt!47139 () Unit!2798)

(declare-fun lt!47142 () Unit!2798)

(assert (=> d!24823 (= lt!47139 lt!47142)))

(assert (=> d!24823 (= (getValueByKey!148 lt!47141 (_1!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))))))

(assert (=> d!24823 (= lt!47142 (lemmaContainsTupThenGetReturnValue!64 lt!47141 (_1!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))))))

(assert (=> d!24823 (= lt!47141 (insertStrictlySorted!67 (toList!776 lt!46812) (_1!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))))))

(assert (=> d!24823 (= (+!133 lt!46812 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))) lt!47140)))

(declare-fun b!94756 () Bool)

(declare-fun res!47969 () Bool)

(assert (=> b!94756 (=> (not res!47969) (not e!61842))))

(assert (=> b!94756 (= res!47969 (= (getValueByKey!148 (toList!776 lt!47140) (_1!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 lt!46818 (minValue!2323 newMap!16))))))))

(declare-fun b!94757 () Bool)

(assert (=> b!94757 (= e!61842 (contains!792 (toList!776 lt!47140) (tuple2!2311 lt!46818 (minValue!2323 newMap!16))))))

(assert (= (and d!24823 res!47968) b!94756))

(assert (= (and b!94756 res!47969) b!94757))

(declare-fun m!102399 () Bool)

(assert (=> d!24823 m!102399))

(declare-fun m!102401 () Bool)

(assert (=> d!24823 m!102401))

(declare-fun m!102403 () Bool)

(assert (=> d!24823 m!102403))

(declare-fun m!102405 () Bool)

(assert (=> d!24823 m!102405))

(declare-fun m!102407 () Bool)

(assert (=> b!94756 m!102407))

(declare-fun m!102409 () Bool)

(assert (=> b!94757 m!102409))

(assert (=> b!94432 d!24823))

(declare-fun d!24825 () Bool)

(assert (=> d!24825 (= (apply!90 lt!46814 lt!46804) (get!1265 (getValueByKey!148 (toList!776 lt!46814) lt!46804)))))

(declare-fun bs!3903 () Bool)

(assert (= bs!3903 d!24825))

(declare-fun m!102411 () Bool)

(assert (=> bs!3903 m!102411))

(assert (=> bs!3903 m!102411))

(declare-fun m!102413 () Bool)

(assert (=> bs!3903 m!102413))

(assert (=> b!94432 d!24825))

(assert (=> d!24697 d!24693))

(declare-fun d!24827 () Bool)

(assert (=> d!24827 (= (apply!90 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46759) (apply!90 lt!46754 lt!46759))))

(assert (=> d!24827 true))

(declare-fun _$34!847 () Unit!2798)

(assert (=> d!24827 (= (choose!564 lt!46754 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46759) _$34!847)))

(declare-fun bs!3904 () Bool)

(assert (= bs!3904 d!24827))

(assert (=> bs!3904 m!101563))

(assert (=> bs!3904 m!101563))

(assert (=> bs!3904 m!101573))

(assert (=> bs!3904 m!101551))

(assert (=> d!24697 d!24827))

(declare-fun d!24829 () Bool)

(declare-fun e!61844 () Bool)

(assert (=> d!24829 e!61844))

(declare-fun res!47970 () Bool)

(assert (=> d!24829 (=> res!47970 e!61844)))

(declare-fun lt!47146 () Bool)

(assert (=> d!24829 (= res!47970 (not lt!47146))))

(declare-fun lt!47143 () Bool)

(assert (=> d!24829 (= lt!47146 lt!47143)))

(declare-fun lt!47145 () Unit!2798)

(declare-fun e!61843 () Unit!2798)

(assert (=> d!24829 (= lt!47145 e!61843)))

(declare-fun c!15837 () Bool)

(assert (=> d!24829 (= c!15837 lt!47143)))

(assert (=> d!24829 (= lt!47143 (containsKey!152 (toList!776 lt!46754) lt!46759))))

(assert (=> d!24829 (= (contains!789 lt!46754 lt!46759) lt!47146)))

(declare-fun b!94759 () Bool)

(declare-fun lt!47144 () Unit!2798)

(assert (=> b!94759 (= e!61843 lt!47144)))

(assert (=> b!94759 (= lt!47144 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46754) lt!46759))))

(assert (=> b!94759 (isDefined!101 (getValueByKey!148 (toList!776 lt!46754) lt!46759))))

(declare-fun b!94760 () Bool)

(declare-fun Unit!2825 () Unit!2798)

(assert (=> b!94760 (= e!61843 Unit!2825)))

(declare-fun b!94761 () Bool)

(assert (=> b!94761 (= e!61844 (isDefined!101 (getValueByKey!148 (toList!776 lt!46754) lt!46759)))))

(assert (= (and d!24829 c!15837) b!94759))

(assert (= (and d!24829 (not c!15837)) b!94760))

(assert (= (and d!24829 (not res!47970)) b!94761))

(declare-fun m!102415 () Bool)

(assert (=> d!24829 m!102415))

(declare-fun m!102417 () Bool)

(assert (=> b!94759 m!102417))

(assert (=> b!94759 m!101861))

(assert (=> b!94759 m!101861))

(declare-fun m!102419 () Bool)

(assert (=> b!94759 m!102419))

(assert (=> b!94761 m!101861))

(assert (=> b!94761 m!101861))

(assert (=> b!94761 m!102419))

(assert (=> d!24697 d!24829))

(assert (=> d!24697 d!24689))

(assert (=> d!24697 d!24703))

(declare-fun d!24831 () Bool)

(declare-fun e!61846 () Bool)

(assert (=> d!24831 e!61846))

(declare-fun res!47971 () Bool)

(assert (=> d!24831 (=> res!47971 e!61846)))

(declare-fun lt!47150 () Bool)

(assert (=> d!24831 (= res!47971 (not lt!47150))))

(declare-fun lt!47147 () Bool)

(assert (=> d!24831 (= lt!47150 lt!47147)))

(declare-fun lt!47149 () Unit!2798)

(declare-fun e!61845 () Unit!2798)

(assert (=> d!24831 (= lt!47149 e!61845)))

(declare-fun c!15838 () Bool)

(assert (=> d!24831 (= c!15838 lt!47147)))

(assert (=> d!24831 (= lt!47147 (containsKey!152 (toList!776 lt!46838) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!24831 (= (contains!789 lt!46838 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!47150)))

(declare-fun b!94762 () Bool)

(declare-fun lt!47148 () Unit!2798)

(assert (=> b!94762 (= e!61845 lt!47148)))

(assert (=> b!94762 (= lt!47148 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46838) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> b!94762 (isDefined!101 (getValueByKey!148 (toList!776 lt!46838) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94763 () Bool)

(declare-fun Unit!2826 () Unit!2798)

(assert (=> b!94763 (= e!61845 Unit!2826)))

(declare-fun b!94764 () Bool)

(assert (=> b!94764 (= e!61846 (isDefined!101 (getValueByKey!148 (toList!776 lt!46838) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(assert (= (and d!24831 c!15838) b!94762))

(assert (= (and d!24831 (not c!15838)) b!94763))

(assert (= (and d!24831 (not res!47971)) b!94764))

(declare-fun m!102421 () Bool)

(assert (=> d!24831 m!102421))

(declare-fun m!102423 () Bool)

(assert (=> b!94762 m!102423))

(assert (=> b!94762 m!101753))

(assert (=> b!94762 m!101753))

(declare-fun m!102425 () Bool)

(assert (=> b!94762 m!102425))

(assert (=> b!94764 m!101753))

(assert (=> b!94764 m!101753))

(assert (=> b!94764 m!102425))

(assert (=> d!24657 d!24831))

(declare-fun d!24833 () Bool)

(declare-fun c!15839 () Bool)

(assert (=> d!24833 (= c!15839 (and ((_ is Cons!1565) lt!46839) (= (_1!1166 (h!2157 lt!46839)) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun e!61847 () Option!154)

(assert (=> d!24833 (= (getValueByKey!148 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) e!61847)))

(declare-fun b!94767 () Bool)

(declare-fun e!61848 () Option!154)

(assert (=> b!94767 (= e!61848 (getValueByKey!148 (t!5471 lt!46839) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94768 () Bool)

(assert (=> b!94768 (= e!61848 None!152)))

(declare-fun b!94766 () Bool)

(assert (=> b!94766 (= e!61847 e!61848)))

(declare-fun c!15840 () Bool)

(assert (=> b!94766 (= c!15840 (and ((_ is Cons!1565) lt!46839) (not (= (_1!1166 (h!2157 lt!46839)) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(declare-fun b!94765 () Bool)

(assert (=> b!94765 (= e!61847 (Some!153 (_2!1166 (h!2157 lt!46839))))))

(assert (= (and d!24833 c!15839) b!94765))

(assert (= (and d!24833 (not c!15839)) b!94766))

(assert (= (and b!94766 c!15840) b!94767))

(assert (= (and b!94766 (not c!15840)) b!94768))

(declare-fun m!102427 () Bool)

(assert (=> b!94767 m!102427))

(assert (=> d!24657 d!24833))

(declare-fun d!24835 () Bool)

(assert (=> d!24835 (= (getValueByKey!148 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (Some!153 (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun lt!47153 () Unit!2798)

(declare-fun choose!569 (List!1569 (_ BitVec 64) V!3131) Unit!2798)

(assert (=> d!24835 (= lt!47153 (choose!569 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!61851 () Bool)

(assert (=> d!24835 e!61851))

(declare-fun res!47976 () Bool)

(assert (=> d!24835 (=> (not res!47976) (not e!61851))))

(assert (=> d!24835 (= res!47976 (isStrictlySorted!302 lt!46839))))

(assert (=> d!24835 (= (lemmaContainsTupThenGetReturnValue!64 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!47153)))

(declare-fun b!94773 () Bool)

(declare-fun res!47977 () Bool)

(assert (=> b!94773 (=> (not res!47977) (not e!61851))))

(assert (=> b!94773 (= res!47977 (containsKey!152 lt!46839 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94774 () Bool)

(assert (=> b!94774 (= e!61851 (contains!792 lt!46839 (tuple2!2311 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(assert (= (and d!24835 res!47976) b!94773))

(assert (= (and b!94773 res!47977) b!94774))

(assert (=> d!24835 m!101747))

(declare-fun m!102429 () Bool)

(assert (=> d!24835 m!102429))

(declare-fun m!102431 () Bool)

(assert (=> d!24835 m!102431))

(declare-fun m!102433 () Bool)

(assert (=> b!94773 m!102433))

(declare-fun m!102435 () Bool)

(assert (=> b!94774 m!102435))

(assert (=> d!24657 d!24835))

(declare-fun c!15850 () Bool)

(declare-fun e!61864 () List!1569)

(declare-fun c!15852 () Bool)

(declare-fun b!94795 () Bool)

(assert (=> b!94795 (= e!61864 (ite c!15852 (t!5471 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (ite c!15850 (Cons!1565 (h!2157 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (t!5471 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))))) Nil!1566)))))

(declare-fun b!94796 () Bool)

(declare-fun e!61863 () List!1569)

(declare-fun call!9522 () List!1569)

(assert (=> b!94796 (= e!61863 call!9522)))

(declare-fun bm!9519 () Bool)

(declare-fun call!9524 () List!1569)

(assert (=> bm!9519 (= call!9524 call!9522)))

(declare-fun b!94797 () Bool)

(assert (=> b!94797 (= c!15850 (and ((_ is Cons!1565) (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (bvsgt (_1!1166 (h!2157 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun e!61866 () List!1569)

(declare-fun e!61862 () List!1569)

(assert (=> b!94797 (= e!61866 e!61862)))

(declare-fun b!94798 () Bool)

(declare-fun call!9523 () List!1569)

(assert (=> b!94798 (= e!61862 call!9523)))

(declare-fun b!94799 () Bool)

(assert (=> b!94799 (= e!61862 call!9523)))

(declare-fun b!94800 () Bool)

(assert (=> b!94800 (= e!61864 (insertStrictlySorted!67 (t!5471 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94801 () Bool)

(declare-fun res!47982 () Bool)

(declare-fun e!61865 () Bool)

(assert (=> b!94801 (=> (not res!47982) (not e!61865))))

(declare-fun lt!47156 () List!1569)

(assert (=> b!94801 (= res!47982 (containsKey!152 lt!47156 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun bm!9520 () Bool)

(assert (=> bm!9520 (= call!9523 call!9524)))

(declare-fun b!94802 () Bool)

(assert (=> b!94802 (= e!61863 e!61866)))

(assert (=> b!94802 (= c!15852 (and ((_ is Cons!1565) (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (= (_1!1166 (h!2157 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun d!24837 () Bool)

(assert (=> d!24837 e!61865))

(declare-fun res!47983 () Bool)

(assert (=> d!24837 (=> (not res!47983) (not e!61865))))

(assert (=> d!24837 (= res!47983 (isStrictlySorted!302 lt!47156))))

(assert (=> d!24837 (= lt!47156 e!61863)))

(declare-fun c!15851 () Bool)

(assert (=> d!24837 (= c!15851 (and ((_ is Cons!1565) (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (bvslt (_1!1166 (h!2157 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(assert (=> d!24837 (isStrictlySorted!302 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))))))

(assert (=> d!24837 (= (insertStrictlySorted!67 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!47156)))

(declare-fun b!94803 () Bool)

(assert (=> b!94803 (= e!61866 call!9524)))

(declare-fun bm!9521 () Bool)

(declare-fun $colon$colon!76 (List!1569 tuple2!2310) List!1569)

(assert (=> bm!9521 (= call!9522 ($colon$colon!76 e!61864 (ite c!15851 (h!2157 (toList!776 (ite c!15729 call!9459 (ite c!15726 call!9458 call!9453)))) (tuple2!2311 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(declare-fun c!15849 () Bool)

(assert (=> bm!9521 (= c!15849 c!15851)))

(declare-fun b!94804 () Bool)

(assert (=> b!94804 (= e!61865 (contains!792 lt!47156 (tuple2!2311 (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (_2!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(assert (= (and d!24837 c!15851) b!94796))

(assert (= (and d!24837 (not c!15851)) b!94802))

(assert (= (and b!94802 c!15852) b!94803))

(assert (= (and b!94802 (not c!15852)) b!94797))

(assert (= (and b!94797 c!15850) b!94799))

(assert (= (and b!94797 (not c!15850)) b!94798))

(assert (= (or b!94799 b!94798) bm!9520))

(assert (= (or b!94803 bm!9520) bm!9519))

(assert (= (or b!94796 bm!9519) bm!9521))

(assert (= (and bm!9521 c!15849) b!94800))

(assert (= (and bm!9521 (not c!15849)) b!94795))

(assert (= (and d!24837 res!47983) b!94801))

(assert (= (and b!94801 res!47982) b!94804))

(declare-fun m!102437 () Bool)

(assert (=> b!94801 m!102437))

(declare-fun m!102439 () Bool)

(assert (=> bm!9521 m!102439))

(declare-fun m!102441 () Bool)

(assert (=> b!94804 m!102441))

(declare-fun m!102443 () Bool)

(assert (=> b!94800 m!102443))

(declare-fun m!102445 () Bool)

(assert (=> d!24837 m!102445))

(declare-fun m!102447 () Bool)

(assert (=> d!24837 m!102447))

(assert (=> d!24657 d!24837))

(declare-fun d!24839 () Bool)

(assert (=> d!24839 (= (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!350 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3905 () Bool)

(assert (= bs!3905 d!24839))

(assert (=> bs!3905 m!101675))

(declare-fun m!102449 () Bool)

(assert (=> bs!3905 m!102449))

(assert (=> b!94416 d!24839))

(declare-fun d!24841 () Bool)

(declare-fun c!15853 () Bool)

(assert (=> d!24841 (= c!15853 (and ((_ is Cons!1565) (toList!776 lt!46762)) (= (_1!1166 (h!2157 (toList!776 lt!46762))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!61867 () Option!154)

(assert (=> d!24841 (= (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000) e!61867)))

(declare-fun b!94807 () Bool)

(declare-fun e!61868 () Option!154)

(assert (=> b!94807 (= e!61868 (getValueByKey!148 (t!5471 (toList!776 lt!46762)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94808 () Bool)

(assert (=> b!94808 (= e!61868 None!152)))

(declare-fun b!94806 () Bool)

(assert (=> b!94806 (= e!61867 e!61868)))

(declare-fun c!15854 () Bool)

(assert (=> b!94806 (= c!15854 (and ((_ is Cons!1565) (toList!776 lt!46762)) (not (= (_1!1166 (h!2157 (toList!776 lt!46762))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94805 () Bool)

(assert (=> b!94805 (= e!61867 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46762)))))))

(assert (= (and d!24841 c!15853) b!94805))

(assert (= (and d!24841 (not c!15853)) b!94806))

(assert (= (and b!94806 c!15854) b!94807))

(assert (= (and b!94806 (not c!15854)) b!94808))

(declare-fun m!102451 () Bool)

(assert (=> b!94807 m!102451))

(assert (=> b!94416 d!24841))

(declare-fun d!24843 () Bool)

(declare-fun lt!47157 () Bool)

(assert (=> d!24843 (= lt!47157 (select (content!97 (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun e!61870 () Bool)

(assert (=> d!24843 (= lt!47157 e!61870)))

(declare-fun res!47985 () Bool)

(assert (=> d!24843 (=> (not res!47985) (not e!61870))))

(assert (=> d!24843 (= res!47985 ((_ is Cons!1564) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)))))

(assert (=> d!24843 (= (contains!791 (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) lt!47157)))

(declare-fun b!94809 () Bool)

(declare-fun e!61869 () Bool)

(assert (=> b!94809 (= e!61870 e!61869)))

(declare-fun res!47984 () Bool)

(assert (=> b!94809 (=> res!47984 e!61869)))

(assert (=> b!94809 (= res!47984 (= (h!2156 (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(declare-fun b!94810 () Bool)

(assert (=> b!94810 (= e!61869 (contains!791 (t!5470 (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))))))

(assert (= (and d!24843 res!47985) b!94809))

(assert (= (and b!94809 (not res!47984)) b!94810))

(declare-fun m!102453 () Bool)

(assert (=> d!24843 m!102453))

(assert (=> d!24843 m!101663))

(declare-fun m!102455 () Bool)

(assert (=> d!24843 m!102455))

(assert (=> b!94810 m!101663))

(declare-fun m!102457 () Bool)

(assert (=> b!94810 m!102457))

(assert (=> b!94413 d!24843))

(declare-fun d!24845 () Bool)

(declare-fun e!61871 () Bool)

(assert (=> d!24845 e!61871))

(declare-fun res!47986 () Bool)

(assert (=> d!24845 (=> (not res!47986) (not e!61871))))

(declare-fun lt!47159 () ListLongMap!1521)

(assert (=> d!24845 (= res!47986 (contains!789 lt!47159 (_1!1166 (tuple2!2311 lt!46883 lt!46885))))))

(declare-fun lt!47160 () List!1569)

(assert (=> d!24845 (= lt!47159 (ListLongMap!1522 lt!47160))))

(declare-fun lt!47158 () Unit!2798)

(declare-fun lt!47161 () Unit!2798)

(assert (=> d!24845 (= lt!47158 lt!47161)))

(assert (=> d!24845 (= (getValueByKey!148 lt!47160 (_1!1166 (tuple2!2311 lt!46883 lt!46885))) (Some!153 (_2!1166 (tuple2!2311 lt!46883 lt!46885))))))

(assert (=> d!24845 (= lt!47161 (lemmaContainsTupThenGetReturnValue!64 lt!47160 (_1!1166 (tuple2!2311 lt!46883 lt!46885)) (_2!1166 (tuple2!2311 lt!46883 lt!46885))))))

(assert (=> d!24845 (= lt!47160 (insertStrictlySorted!67 (toList!776 lt!46887) (_1!1166 (tuple2!2311 lt!46883 lt!46885)) (_2!1166 (tuple2!2311 lt!46883 lt!46885))))))

(assert (=> d!24845 (= (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885)) lt!47159)))

(declare-fun b!94811 () Bool)

(declare-fun res!47987 () Bool)

(assert (=> b!94811 (=> (not res!47987) (not e!61871))))

(assert (=> b!94811 (= res!47987 (= (getValueByKey!148 (toList!776 lt!47159) (_1!1166 (tuple2!2311 lt!46883 lt!46885))) (Some!153 (_2!1166 (tuple2!2311 lt!46883 lt!46885)))))))

(declare-fun b!94812 () Bool)

(assert (=> b!94812 (= e!61871 (contains!792 (toList!776 lt!47159) (tuple2!2311 lt!46883 lt!46885)))))

(assert (= (and d!24845 res!47986) b!94811))

(assert (= (and b!94811 res!47987) b!94812))

(declare-fun m!102459 () Bool)

(assert (=> d!24845 m!102459))

(declare-fun m!102461 () Bool)

(assert (=> d!24845 m!102461))

(declare-fun m!102463 () Bool)

(assert (=> d!24845 m!102463))

(declare-fun m!102465 () Bool)

(assert (=> d!24845 m!102465))

(declare-fun m!102467 () Bool)

(assert (=> b!94811 m!102467))

(declare-fun m!102469 () Bool)

(assert (=> b!94812 m!102469))

(assert (=> b!94539 d!24845))

(assert (=> b!94539 d!24723))

(declare-fun d!24847 () Bool)

(assert (=> d!24847 (not (contains!789 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885)) lt!46889))))

(declare-fun lt!47164 () Unit!2798)

(declare-fun choose!570 (ListLongMap!1521 (_ BitVec 64) V!3131 (_ BitVec 64)) Unit!2798)

(assert (=> d!24847 (= lt!47164 (choose!570 lt!46887 lt!46883 lt!46885 lt!46889))))

(declare-fun e!61874 () Bool)

(assert (=> d!24847 e!61874))

(declare-fun res!47990 () Bool)

(assert (=> d!24847 (=> (not res!47990) (not e!61874))))

(assert (=> d!24847 (= res!47990 (not (contains!789 lt!46887 lt!46889)))))

(assert (=> d!24847 (= (addStillNotContains!38 lt!46887 lt!46883 lt!46885 lt!46889) lt!47164)))

(declare-fun b!94816 () Bool)

(assert (=> b!94816 (= e!61874 (not (= lt!46883 lt!46889)))))

(assert (= (and d!24847 res!47990) b!94816))

(assert (=> d!24847 m!101811))

(assert (=> d!24847 m!101811))

(assert (=> d!24847 m!101813))

(declare-fun m!102471 () Bool)

(assert (=> d!24847 m!102471))

(declare-fun m!102473 () Bool)

(assert (=> d!24847 m!102473))

(assert (=> b!94539 d!24847))

(declare-fun d!24849 () Bool)

(declare-fun e!61876 () Bool)

(assert (=> d!24849 e!61876))

(declare-fun res!47991 () Bool)

(assert (=> d!24849 (=> res!47991 e!61876)))

(declare-fun lt!47168 () Bool)

(assert (=> d!24849 (= res!47991 (not lt!47168))))

(declare-fun lt!47165 () Bool)

(assert (=> d!24849 (= lt!47168 lt!47165)))

(declare-fun lt!47167 () Unit!2798)

(declare-fun e!61875 () Unit!2798)

(assert (=> d!24849 (= lt!47167 e!61875)))

(declare-fun c!15855 () Bool)

(assert (=> d!24849 (= c!15855 lt!47165)))

(assert (=> d!24849 (= lt!47165 (containsKey!152 (toList!776 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885))) lt!46889))))

(assert (=> d!24849 (= (contains!789 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885)) lt!46889) lt!47168)))

(declare-fun b!94817 () Bool)

(declare-fun lt!47166 () Unit!2798)

(assert (=> b!94817 (= e!61875 lt!47166)))

(assert (=> b!94817 (= lt!47166 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885))) lt!46889))))

(assert (=> b!94817 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885))) lt!46889))))

(declare-fun b!94818 () Bool)

(declare-fun Unit!2827 () Unit!2798)

(assert (=> b!94818 (= e!61875 Unit!2827)))

(declare-fun b!94819 () Bool)

(assert (=> b!94819 (= e!61876 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46887 (tuple2!2311 lt!46883 lt!46885))) lt!46889)))))

(assert (= (and d!24849 c!15855) b!94817))

(assert (= (and d!24849 (not c!15855)) b!94818))

(assert (= (and d!24849 (not res!47991)) b!94819))

(declare-fun m!102475 () Bool)

(assert (=> d!24849 m!102475))

(declare-fun m!102477 () Bool)

(assert (=> b!94817 m!102477))

(declare-fun m!102479 () Bool)

(assert (=> b!94817 m!102479))

(assert (=> b!94817 m!102479))

(declare-fun m!102481 () Bool)

(assert (=> b!94817 m!102481))

(assert (=> b!94819 m!102479))

(assert (=> b!94819 m!102479))

(assert (=> b!94819 m!102481))

(assert (=> b!94539 d!24849))

(declare-fun d!24851 () Bool)

(declare-fun e!61877 () Bool)

(assert (=> d!24851 e!61877))

(declare-fun res!47992 () Bool)

(assert (=> d!24851 (=> (not res!47992) (not e!61877))))

(declare-fun lt!47170 () ListLongMap!1521)

(assert (=> d!24851 (= res!47992 (contains!789 lt!47170 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47171 () List!1569)

(assert (=> d!24851 (= lt!47170 (ListLongMap!1522 lt!47171))))

(declare-fun lt!47169 () Unit!2798)

(declare-fun lt!47172 () Unit!2798)

(assert (=> d!24851 (= lt!47169 lt!47172)))

(assert (=> d!24851 (= (getValueByKey!148 lt!47171 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24851 (= lt!47172 (lemmaContainsTupThenGetReturnValue!64 lt!47171 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24851 (= lt!47171 (insertStrictlySorted!67 (toList!776 call!9482) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24851 (= (+!133 call!9482 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47170)))

(declare-fun b!94820 () Bool)

(declare-fun res!47993 () Bool)

(assert (=> b!94820 (=> (not res!47993) (not e!61877))))

(assert (=> b!94820 (= res!47993 (= (getValueByKey!148 (toList!776 lt!47170) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94821 () Bool)

(assert (=> b!94821 (= e!61877 (contains!792 (toList!776 lt!47170) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24851 res!47992) b!94820))

(assert (= (and b!94820 res!47993) b!94821))

(declare-fun m!102483 () Bool)

(assert (=> d!24851 m!102483))

(declare-fun m!102485 () Bool)

(assert (=> d!24851 m!102485))

(declare-fun m!102487 () Bool)

(assert (=> d!24851 m!102487))

(declare-fun m!102489 () Bool)

(assert (=> d!24851 m!102489))

(declare-fun m!102491 () Bool)

(assert (=> b!94820 m!102491))

(declare-fun m!102493 () Bool)

(assert (=> b!94821 m!102493))

(assert (=> b!94539 d!24851))

(declare-fun d!24853 () Bool)

(declare-fun e!61878 () Bool)

(assert (=> d!24853 e!61878))

(declare-fun res!47994 () Bool)

(assert (=> d!24853 (=> (not res!47994) (not e!61878))))

(declare-fun lt!47174 () ListLongMap!1521)

(assert (=> d!24853 (= res!47994 (contains!789 lt!47174 (_1!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun lt!47175 () List!1569)

(assert (=> d!24853 (= lt!47174 (ListLongMap!1522 lt!47175))))

(declare-fun lt!47173 () Unit!2798)

(declare-fun lt!47176 () Unit!2798)

(assert (=> d!24853 (= lt!47173 lt!47176)))

(assert (=> d!24853 (= (getValueByKey!148 lt!47175 (_1!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!24853 (= lt!47176 (lemmaContainsTupThenGetReturnValue!64 lt!47175 (_1!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!24853 (= lt!47175 (insertStrictlySorted!67 (toList!776 (ite c!15764 call!9476 (ite c!15761 call!9475 call!9470))) (_1!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!24853 (= (+!133 (ite c!15764 call!9476 (ite c!15761 call!9475 call!9470)) (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) lt!47174)))

(declare-fun b!94822 () Bool)

(declare-fun res!47995 () Bool)

(assert (=> b!94822 (=> (not res!47995) (not e!61878))))

(assert (=> b!94822 (= res!47995 (= (getValueByKey!148 (toList!776 lt!47174) (_1!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))))

(declare-fun b!94823 () Bool)

(assert (=> b!94823 (= e!61878 (contains!792 (toList!776 lt!47174) (ite (or c!15764 c!15761) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (= (and d!24853 res!47994) b!94822))

(assert (= (and b!94822 res!47995) b!94823))

(declare-fun m!102495 () Bool)

(assert (=> d!24853 m!102495))

(declare-fun m!102497 () Bool)

(assert (=> d!24853 m!102497))

(declare-fun m!102499 () Bool)

(assert (=> d!24853 m!102499))

(declare-fun m!102501 () Bool)

(assert (=> d!24853 m!102501))

(declare-fun m!102503 () Bool)

(assert (=> b!94822 m!102503))

(declare-fun m!102505 () Bool)

(assert (=> b!94823 m!102505))

(assert (=> bm!9469 d!24853))

(declare-fun d!24855 () Bool)

(declare-fun e!61879 () Bool)

(assert (=> d!24855 e!61879))

(declare-fun res!47996 () Bool)

(assert (=> d!24855 (=> (not res!47996) (not e!61879))))

(declare-fun lt!47178 () ListLongMap!1521)

(assert (=> d!24855 (= res!47996 (contains!789 lt!47178 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun lt!47179 () List!1569)

(assert (=> d!24855 (= lt!47178 (ListLongMap!1522 lt!47179))))

(declare-fun lt!47177 () Unit!2798)

(declare-fun lt!47180 () Unit!2798)

(assert (=> d!24855 (= lt!47177 lt!47180)))

(assert (=> d!24855 (= (getValueByKey!148 lt!47179 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24855 (= lt!47180 (lemmaContainsTupThenGetReturnValue!64 lt!47179 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24855 (= lt!47179 (insertStrictlySorted!67 (toList!776 call!9498) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!24855 (= (+!133 call!9498 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!47178)))

(declare-fun b!94824 () Bool)

(declare-fun res!47997 () Bool)

(assert (=> b!94824 (=> (not res!47997) (not e!61879))))

(assert (=> b!94824 (= res!47997 (= (getValueByKey!148 (toList!776 lt!47178) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun b!94825 () Bool)

(assert (=> b!94825 (= e!61879 (contains!792 (toList!776 lt!47178) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(assert (= (and d!24855 res!47996) b!94824))

(assert (= (and b!94824 res!47997) b!94825))

(declare-fun m!102507 () Bool)

(assert (=> d!24855 m!102507))

(declare-fun m!102509 () Bool)

(assert (=> d!24855 m!102509))

(declare-fun m!102511 () Bool)

(assert (=> d!24855 m!102511))

(declare-fun m!102513 () Bool)

(assert (=> d!24855 m!102513))

(declare-fun m!102515 () Bool)

(assert (=> b!94824 m!102515))

(declare-fun m!102517 () Bool)

(assert (=> b!94825 m!102517))

(assert (=> b!94611 d!24855))

(declare-fun d!24857 () Bool)

(declare-fun e!61881 () Bool)

(assert (=> d!24857 e!61881))

(declare-fun res!47998 () Bool)

(assert (=> d!24857 (=> res!47998 e!61881)))

(declare-fun lt!47184 () Bool)

(assert (=> d!24857 (= res!47998 (not lt!47184))))

(declare-fun lt!47181 () Bool)

(assert (=> d!24857 (= lt!47184 lt!47181)))

(declare-fun lt!47183 () Unit!2798)

(declare-fun e!61880 () Unit!2798)

(assert (=> d!24857 (= lt!47183 e!61880)))

(declare-fun c!15856 () Bool)

(assert (=> d!24857 (= c!15856 lt!47181)))

(assert (=> d!24857 (= lt!47181 (containsKey!152 (toList!776 lt!46884) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> d!24857 (= (contains!789 lt!46884 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) lt!47184)))

(declare-fun b!94826 () Bool)

(declare-fun lt!47182 () Unit!2798)

(assert (=> b!94826 (= e!61880 lt!47182)))

(assert (=> b!94826 (= lt!47182 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46884) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94826 (isDefined!101 (getValueByKey!148 (toList!776 lt!46884) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(declare-fun b!94827 () Bool)

(declare-fun Unit!2828 () Unit!2798)

(assert (=> b!94827 (= e!61880 Unit!2828)))

(declare-fun b!94828 () Bool)

(assert (=> b!94828 (= e!61881 (isDefined!101 (getValueByKey!148 (toList!776 lt!46884) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (= (and d!24857 c!15856) b!94826))

(assert (= (and d!24857 (not c!15856)) b!94827))

(assert (= (and d!24857 (not res!47998)) b!94828))

(assert (=> d!24857 m!101533))

(declare-fun m!102519 () Bool)

(assert (=> d!24857 m!102519))

(assert (=> b!94826 m!101533))

(declare-fun m!102521 () Bool)

(assert (=> b!94826 m!102521))

(assert (=> b!94826 m!101533))

(declare-fun m!102523 () Bool)

(assert (=> b!94826 m!102523))

(assert (=> b!94826 m!102523))

(declare-fun m!102525 () Bool)

(assert (=> b!94826 m!102525))

(assert (=> b!94828 m!101533))

(assert (=> b!94828 m!102523))

(assert (=> b!94828 m!102523))

(assert (=> b!94828 m!102525))

(assert (=> b!94531 d!24857))

(declare-fun d!24859 () Bool)

(assert (=> d!24859 (= (map!1243 (_2!1167 lt!47044)) (getCurrentListMap!468 (_keys!4118 (_2!1167 lt!47044)) (_values!2419 (_2!1167 lt!47044)) (mask!6511 (_2!1167 lt!47044)) (extraKeys!2265 (_2!1167 lt!47044)) (zeroValue!2323 (_2!1167 lt!47044)) (minValue!2323 (_2!1167 lt!47044)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!47044))))))

(declare-fun bs!3906 () Bool)

(assert (= bs!3906 d!24859))

(declare-fun m!102527 () Bool)

(assert (=> bs!3906 m!102527))

(assert (=> b!94675 d!24859))

(declare-fun d!24861 () Bool)

(declare-fun e!61882 () Bool)

(assert (=> d!24861 e!61882))

(declare-fun res!47999 () Bool)

(assert (=> d!24861 (=> (not res!47999) (not e!61882))))

(declare-fun lt!47186 () ListLongMap!1521)

(assert (=> d!24861 (= res!47999 (contains!789 lt!47186 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47187 () List!1569)

(assert (=> d!24861 (= lt!47186 (ListLongMap!1522 lt!47187))))

(declare-fun lt!47185 () Unit!2798)

(declare-fun lt!47188 () Unit!2798)

(assert (=> d!24861 (= lt!47185 lt!47188)))

(assert (=> d!24861 (= (getValueByKey!148 lt!47187 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24861 (= lt!47188 (lemmaContainsTupThenGetReturnValue!64 lt!47187 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24861 (= lt!47187 (insertStrictlySorted!67 (toList!776 (map!1243 newMap!16)) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24861 (= (+!133 (map!1243 newMap!16) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47186)))

(declare-fun b!94829 () Bool)

(declare-fun res!48000 () Bool)

(assert (=> b!94829 (=> (not res!48000) (not e!61882))))

(assert (=> b!94829 (= res!48000 (= (getValueByKey!148 (toList!776 lt!47186) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94830 () Bool)

(assert (=> b!94830 (= e!61882 (contains!792 (toList!776 lt!47186) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24861 res!47999) b!94829))

(assert (= (and b!94829 res!48000) b!94830))

(declare-fun m!102529 () Bool)

(assert (=> d!24861 m!102529))

(declare-fun m!102531 () Bool)

(assert (=> d!24861 m!102531))

(declare-fun m!102533 () Bool)

(assert (=> d!24861 m!102533))

(declare-fun m!102535 () Bool)

(assert (=> d!24861 m!102535))

(declare-fun m!102537 () Bool)

(assert (=> b!94829 m!102537))

(declare-fun m!102539 () Bool)

(assert (=> b!94830 m!102539))

(assert (=> b!94675 d!24861))

(assert (=> b!94675 d!24601))

(declare-fun d!24863 () Bool)

(assert (=> d!24863 (= (get!1265 (getValueByKey!148 (toList!776 lt!46752) lt!46742)) (v!2766 (getValueByKey!148 (toList!776 lt!46752) lt!46742)))))

(assert (=> d!24701 d!24863))

(declare-fun d!24865 () Bool)

(declare-fun c!15857 () Bool)

(assert (=> d!24865 (= c!15857 (and ((_ is Cons!1565) (toList!776 lt!46752)) (= (_1!1166 (h!2157 (toList!776 lt!46752))) lt!46742)))))

(declare-fun e!61883 () Option!154)

(assert (=> d!24865 (= (getValueByKey!148 (toList!776 lt!46752) lt!46742) e!61883)))

(declare-fun b!94833 () Bool)

(declare-fun e!61884 () Option!154)

(assert (=> b!94833 (= e!61884 (getValueByKey!148 (t!5471 (toList!776 lt!46752)) lt!46742))))

(declare-fun b!94834 () Bool)

(assert (=> b!94834 (= e!61884 None!152)))

(declare-fun b!94832 () Bool)

(assert (=> b!94832 (= e!61883 e!61884)))

(declare-fun c!15858 () Bool)

(assert (=> b!94832 (= c!15858 (and ((_ is Cons!1565) (toList!776 lt!46752)) (not (= (_1!1166 (h!2157 (toList!776 lt!46752))) lt!46742))))))

(declare-fun b!94831 () Bool)

(assert (=> b!94831 (= e!61883 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46752)))))))

(assert (= (and d!24865 c!15857) b!94831))

(assert (= (and d!24865 (not c!15857)) b!94832))

(assert (= (and b!94832 c!15858) b!94833))

(assert (= (and b!94832 (not c!15858)) b!94834))

(declare-fun m!102541 () Bool)

(assert (=> b!94833 m!102541))

(assert (=> d!24701 d!24865))

(assert (=> b!94623 d!24749))

(declare-fun d!24867 () Bool)

(declare-fun res!48001 () Bool)

(declare-fun e!61885 () Bool)

(assert (=> d!24867 (=> res!48001 e!61885)))

(assert (=> d!24867 (= res!48001 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!24867 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992)))) e!61885)))

(declare-fun b!94835 () Bool)

(declare-fun e!61887 () Bool)

(declare-fun call!9525 () Bool)

(assert (=> b!94835 (= e!61887 call!9525)))

(declare-fun b!94836 () Bool)

(declare-fun e!61886 () Bool)

(assert (=> b!94836 (= e!61886 e!61887)))

(declare-fun lt!47189 () (_ BitVec 64))

(assert (=> b!94836 (= lt!47189 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000))))

(declare-fun lt!47191 () Unit!2798)

(assert (=> b!94836 (= lt!47191 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) lt!47189 #b00000000000000000000000000000000))))

(assert (=> b!94836 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) lt!47189 #b00000000000000000000000000000000)))

(declare-fun lt!47190 () Unit!2798)

(assert (=> b!94836 (= lt!47190 lt!47191)))

(declare-fun res!48002 () Bool)

(assert (=> b!94836 (= res!48002 (= (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000) (_keys!4118 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992)))) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!94836 (=> (not res!48002) (not e!61887))))

(declare-fun b!94837 () Bool)

(assert (=> b!94837 (= e!61885 e!61886)))

(declare-fun c!15859 () Bool)

(assert (=> b!94837 (= c!15859 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9522 () Bool)

(assert (=> bm!9522 (= call!9525 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!94838 () Bool)

(assert (=> b!94838 (= e!61886 call!9525)))

(assert (= (and d!24867 (not res!48001)) b!94837))

(assert (= (and b!94837 c!15859) b!94836))

(assert (= (and b!94837 (not c!15859)) b!94838))

(assert (= (and b!94836 res!48002) b!94835))

(assert (= (or b!94835 b!94838) bm!9522))

(declare-fun m!102543 () Bool)

(assert (=> b!94836 m!102543))

(declare-fun m!102545 () Bool)

(assert (=> b!94836 m!102545))

(declare-fun m!102547 () Bool)

(assert (=> b!94836 m!102547))

(assert (=> b!94836 m!102543))

(declare-fun m!102549 () Bool)

(assert (=> b!94836 m!102549))

(assert (=> b!94837 m!102543))

(assert (=> b!94837 m!102543))

(declare-fun m!102551 () Bool)

(assert (=> b!94837 m!102551))

(declare-fun m!102553 () Bool)

(assert (=> bm!9522 m!102553))

(assert (=> b!94377 d!24867))

(declare-fun d!24869 () Bool)

(assert (=> d!24869 (= (isDefined!101 (getValueByKey!148 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) (not (isEmpty!350 (getValueByKey!148 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun bs!3907 () Bool)

(assert (= bs!3907 d!24869))

(assert (=> bs!3907 m!101659))

(declare-fun m!102555 () Bool)

(assert (=> bs!3907 m!102555))

(assert (=> b!94408 d!24869))

(declare-fun c!15860 () Bool)

(declare-fun d!24871 () Bool)

(assert (=> d!24871 (= c!15860 (and ((_ is Cons!1565) (toList!776 call!9436)) (= (_1!1166 (h!2157 (toList!776 call!9436))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun e!61888 () Option!154)

(assert (=> d!24871 (= (getValueByKey!148 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!61888)))

(declare-fun e!61889 () Option!154)

(declare-fun b!94841 () Bool)

(assert (=> b!94841 (= e!61889 (getValueByKey!148 (t!5471 (toList!776 call!9436)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94842 () Bool)

(assert (=> b!94842 (= e!61889 None!152)))

(declare-fun b!94840 () Bool)

(assert (=> b!94840 (= e!61888 e!61889)))

(declare-fun c!15861 () Bool)

(assert (=> b!94840 (= c!15861 (and ((_ is Cons!1565) (toList!776 call!9436)) (not (= (_1!1166 (h!2157 (toList!776 call!9436))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun b!94839 () Bool)

(assert (=> b!94839 (= e!61888 (Some!153 (_2!1166 (h!2157 (toList!776 call!9436)))))))

(assert (= (and d!24871 c!15860) b!94839))

(assert (= (and d!24871 (not c!15860)) b!94840))

(assert (= (and b!94840 c!15861) b!94841))

(assert (= (and b!94840 (not c!15861)) b!94842))

(assert (=> b!94841 m!101363))

(declare-fun m!102557 () Bool)

(assert (=> b!94841 m!102557))

(assert (=> b!94408 d!24871))

(assert (=> b!94440 d!24727))

(declare-fun d!24873 () Bool)

(assert (=> d!24873 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46850 #b00000000000000000000000000000000)))

(declare-fun lt!47194 () Unit!2798)

(declare-fun choose!13 (array!4201 (_ BitVec 64) (_ BitVec 32)) Unit!2798)

(assert (=> d!24873 (= lt!47194 (choose!13 (_keys!4118 newMap!16) lt!46850 #b00000000000000000000000000000000))))

(assert (=> d!24873 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(assert (=> d!24873 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 newMap!16) lt!46850 #b00000000000000000000000000000000) lt!47194)))

(declare-fun bs!3908 () Bool)

(assert (= bs!3908 d!24873))

(assert (=> bs!3908 m!101769))

(declare-fun m!102559 () Bool)

(assert (=> bs!3908 m!102559))

(assert (=> b!94486 d!24873))

(declare-fun d!24875 () Bool)

(declare-fun res!48003 () Bool)

(declare-fun e!61890 () Bool)

(assert (=> d!24875 (=> res!48003 e!61890)))

(assert (=> d!24875 (= res!48003 (= (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) lt!46850))))

(assert (=> d!24875 (= (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46850 #b00000000000000000000000000000000) e!61890)))

(declare-fun b!94843 () Bool)

(declare-fun e!61891 () Bool)

(assert (=> b!94843 (= e!61890 e!61891)))

(declare-fun res!48004 () Bool)

(assert (=> b!94843 (=> (not res!48004) (not e!61891))))

(assert (=> b!94843 (= res!48004 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94844 () Bool)

(assert (=> b!94844 (= e!61891 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!46850 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24875 (not res!48003)) b!94843))

(assert (= (and b!94843 res!48004) b!94844))

(assert (=> d!24875 m!101689))

(declare-fun m!102561 () Bool)

(assert (=> b!94844 m!102561))

(assert (=> b!94486 d!24875))

(declare-fun d!24877 () Bool)

(declare-fun lt!47195 () SeekEntryResult!251)

(assert (=> d!24877 (and (or ((_ is Undefined!251) lt!47195) (not ((_ is Found!251) lt!47195)) (and (bvsge (index!3146 lt!47195) #b00000000000000000000000000000000) (bvslt (index!3146 lt!47195) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!47195) ((_ is Found!251) lt!47195) (not ((_ is MissingZero!251) lt!47195)) (and (bvsge (index!3145 lt!47195) #b00000000000000000000000000000000) (bvslt (index!3145 lt!47195) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!47195) ((_ is Found!251) lt!47195) ((_ is MissingZero!251) lt!47195) (not ((_ is MissingVacant!251) lt!47195)) (and (bvsge (index!3148 lt!47195) #b00000000000000000000000000000000) (bvslt (index!3148 lt!47195) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!47195) (ite ((_ is Found!251) lt!47195) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!47195)) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (ite ((_ is MissingZero!251) lt!47195) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!47195)) #b0000000000000000000000000000000000000000000000000000000000000000) (and ((_ is MissingVacant!251) lt!47195) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!47195)) #b1000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!61894 () SeekEntryResult!251)

(assert (=> d!24877 (= lt!47195 e!61894)))

(declare-fun c!15862 () Bool)

(declare-fun lt!47196 () SeekEntryResult!251)

(assert (=> d!24877 (= c!15862 (and ((_ is Intermediate!251) lt!47196) (undefined!1063 lt!47196)))))

(assert (=> d!24877 (= lt!47196 (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (mask!6511 newMap!16)) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!24877 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24877 (= (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!47195)))

(declare-fun b!94845 () Bool)

(declare-fun e!61893 () SeekEntryResult!251)

(assert (=> b!94845 (= e!61893 (Found!251 (index!3147 lt!47196)))))

(declare-fun b!94846 () Bool)

(declare-fun e!61892 () SeekEntryResult!251)

(assert (=> b!94846 (= e!61892 (MissingZero!251 (index!3147 lt!47196)))))

(declare-fun b!94847 () Bool)

(assert (=> b!94847 (= e!61892 (seekKeyOrZeroReturnVacant!0 (x!12655 lt!47196) (index!3147 lt!47196) (index!3147 lt!47196) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!94848 () Bool)

(declare-fun c!15864 () Bool)

(declare-fun lt!47197 () (_ BitVec 64))

(assert (=> b!94848 (= c!15864 (= lt!47197 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94848 (= e!61893 e!61892)))

(declare-fun b!94849 () Bool)

(assert (=> b!94849 (= e!61894 Undefined!251)))

(declare-fun b!94850 () Bool)

(assert (=> b!94850 (= e!61894 e!61893)))

(assert (=> b!94850 (= lt!47197 (select (arr!1997 (_keys!4118 newMap!16)) (index!3147 lt!47196)))))

(declare-fun c!15863 () Bool)

(assert (=> b!94850 (= c!15863 (= lt!47197 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!24877 c!15862) b!94849))

(assert (= (and d!24877 (not c!15862)) b!94850))

(assert (= (and b!94850 c!15863) b!94845))

(assert (= (and b!94850 (not c!15863)) b!94848))

(assert (= (and b!94848 c!15864) b!94846))

(assert (= (and b!94848 (not c!15864)) b!94847))

(declare-fun m!102563 () Bool)

(assert (=> d!24877 m!102563))

(declare-fun m!102565 () Bool)

(assert (=> d!24877 m!102565))

(assert (=> d!24877 m!101603))

(declare-fun m!102567 () Bool)

(assert (=> d!24877 m!102567))

(assert (=> d!24877 m!101689))

(declare-fun m!102569 () Bool)

(assert (=> d!24877 m!102569))

(assert (=> d!24877 m!101689))

(assert (=> d!24877 m!102567))

(declare-fun m!102571 () Bool)

(assert (=> d!24877 m!102571))

(assert (=> b!94847 m!101689))

(declare-fun m!102573 () Bool)

(assert (=> b!94847 m!102573))

(declare-fun m!102575 () Bool)

(assert (=> b!94850 m!102575))

(assert (=> b!94486 d!24877))

(declare-fun d!24879 () Bool)

(declare-fun c!15865 () Bool)

(assert (=> d!24879 (= c!15865 (and ((_ is Cons!1565) (toList!776 lt!46895)) (= (_1!1166 (h!2157 (toList!776 lt!46895))) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!61895 () Option!154)

(assert (=> d!24879 (= (getValueByKey!148 (toList!776 lt!46895) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!61895)))

(declare-fun e!61896 () Option!154)

(declare-fun b!94853 () Bool)

(assert (=> b!94853 (= e!61896 (getValueByKey!148 (t!5471 (toList!776 lt!46895)) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!94854 () Bool)

(assert (=> b!94854 (= e!61896 None!152)))

(declare-fun b!94852 () Bool)

(assert (=> b!94852 (= e!61895 e!61896)))

(declare-fun c!15866 () Bool)

(assert (=> b!94852 (= c!15866 (and ((_ is Cons!1565) (toList!776 lt!46895)) (not (= (_1!1166 (h!2157 (toList!776 lt!46895))) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!94851 () Bool)

(assert (=> b!94851 (= e!61895 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46895)))))))

(assert (= (and d!24879 c!15865) b!94851))

(assert (= (and d!24879 (not c!15865)) b!94852))

(assert (= (and b!94852 c!15866) b!94853))

(assert (= (and b!94852 (not c!15866)) b!94854))

(declare-fun m!102577 () Bool)

(assert (=> b!94853 m!102577))

(assert (=> b!94544 d!24879))

(declare-fun d!24881 () Bool)

(declare-fun e!61897 () Bool)

(assert (=> d!24881 e!61897))

(declare-fun res!48005 () Bool)

(assert (=> d!24881 (=> (not res!48005) (not e!61897))))

(declare-fun lt!47199 () ListLongMap!1521)

(assert (=> d!24881 (= res!48005 (contains!789 lt!47199 (_1!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47200 () List!1569)

(assert (=> d!24881 (= lt!47199 (ListLongMap!1522 lt!47200))))

(declare-fun lt!47198 () Unit!2798)

(declare-fun lt!47201 () Unit!2798)

(assert (=> d!24881 (= lt!47198 lt!47201)))

(assert (=> d!24881 (= (getValueByKey!148 lt!47200 (_1!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24881 (= lt!47201 (lemmaContainsTupThenGetReturnValue!64 lt!47200 (_1!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24881 (= lt!47200 (insertStrictlySorted!67 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (_1!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24881 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47199)))

(declare-fun b!94855 () Bool)

(declare-fun res!48006 () Bool)

(assert (=> b!94855 (=> (not res!48006) (not e!61897))))

(assert (=> b!94855 (= res!48006 (= (getValueByKey!148 (toList!776 lt!47199) (_1!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94856 () Bool)

(assert (=> b!94856 (= e!61897 (contains!792 (toList!776 lt!47199) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24881 res!48005) b!94855))

(assert (= (and b!94855 res!48006) b!94856))

(declare-fun m!102579 () Bool)

(assert (=> d!24881 m!102579))

(declare-fun m!102581 () Bool)

(assert (=> d!24881 m!102581))

(declare-fun m!102583 () Bool)

(assert (=> d!24881 m!102583))

(declare-fun m!102585 () Bool)

(assert (=> d!24881 m!102585))

(declare-fun m!102587 () Bool)

(assert (=> b!94855 m!102587))

(declare-fun m!102589 () Bool)

(assert (=> b!94856 m!102589))

(assert (=> d!24747 d!24881))

(assert (=> d!24747 d!24649))

(declare-fun d!24883 () Bool)

(assert (=> d!24883 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!24883 true))

(declare-fun _$7!77 () Unit!2798)

(assert (=> d!24883 (= (choose!568 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46686 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) (defaultEntry!2436 newMap!16)) _$7!77)))

(declare-fun bs!3909 () Bool)

(assert (= bs!3909 d!24883))

(assert (=> bs!3909 m!101465))

(assert (=> bs!3909 m!101465))

(assert (=> bs!3909 m!102149))

(assert (=> bs!3909 m!101361))

(assert (=> bs!3909 m!102151))

(assert (=> d!24747 d!24883))

(declare-fun b!94858 () Bool)

(declare-fun e!61898 () Bool)

(declare-fun lt!47222 () ListLongMap!1521)

(assert (=> b!94858 (= e!61898 (= (apply!90 lt!47222 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94859 () Bool)

(declare-fun e!61902 () Bool)

(assert (=> b!94859 (= e!61902 (= (apply!90 lt!47222 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94859 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (_values!2419 newMap!16))))))

(assert (=> b!94859 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94860 () Bool)

(declare-fun e!61908 () Bool)

(assert (=> b!94860 (= e!61908 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94861 () Bool)

(declare-fun e!61903 () Bool)

(declare-fun e!61899 () Bool)

(assert (=> b!94861 (= e!61903 e!61899)))

(declare-fun res!48008 () Bool)

(declare-fun call!9527 () Bool)

(assert (=> b!94861 (= res!48008 call!9527)))

(assert (=> b!94861 (=> (not res!48008) (not e!61899))))

(declare-fun bm!9523 () Bool)

(declare-fun call!9529 () Bool)

(assert (=> bm!9523 (= call!9529 (contains!789 lt!47222 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94862 () Bool)

(assert (=> b!94862 (= e!61899 (= (apply!90 lt!47222 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!94863 () Bool)

(declare-fun e!61906 () Bool)

(assert (=> b!94863 (= e!61906 e!61902)))

(declare-fun res!48015 () Bool)

(assert (=> b!94863 (=> (not res!48015) (not e!61902))))

(assert (=> b!94863 (= res!48015 (contains!789 lt!47222 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!94863 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94864 () Bool)

(declare-fun e!61901 () Bool)

(declare-fun e!61904 () Bool)

(assert (=> b!94864 (= e!61901 e!61904)))

(declare-fun c!15872 () Bool)

(assert (=> b!94864 (= c!15872 (not (= (bvand lt!46686 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94865 () Bool)

(assert (=> b!94865 (= e!61903 (not call!9527))))

(declare-fun b!94866 () Bool)

(declare-fun e!61900 () Unit!2798)

(declare-fun Unit!2829 () Unit!2798)

(assert (=> b!94866 (= e!61900 Unit!2829)))

(declare-fun b!94867 () Bool)

(assert (=> b!94867 (= e!61904 (not call!9529))))

(declare-fun b!94857 () Bool)

(declare-fun e!61907 () ListLongMap!1521)

(declare-fun call!9530 () ListLongMap!1521)

(assert (=> b!94857 (= e!61907 (+!133 call!9530 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!24885 () Bool)

(assert (=> d!24885 e!61901))

(declare-fun res!48010 () Bool)

(assert (=> d!24885 (=> (not res!48010) (not e!61901))))

(assert (=> d!24885 (= res!48010 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!47223 () ListLongMap!1521)

(assert (=> d!24885 (= lt!47222 lt!47223)))

(declare-fun lt!47221 () Unit!2798)

(assert (=> d!24885 (= lt!47221 e!61900)))

(declare-fun c!15870 () Bool)

(assert (=> d!24885 (= c!15870 e!61908)))

(declare-fun res!48007 () Bool)

(assert (=> d!24885 (=> (not res!48007) (not e!61908))))

(assert (=> d!24885 (= res!48007 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24885 (= lt!47223 e!61907)))

(declare-fun c!15871 () Bool)

(assert (=> d!24885 (= c!15871 (and (not (= (bvand lt!46686 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46686 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24885 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24885 (= (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47222)))

(declare-fun b!94868 () Bool)

(declare-fun e!61910 () ListLongMap!1521)

(declare-fun call!9526 () ListLongMap!1521)

(assert (=> b!94868 (= e!61910 call!9526)))

(declare-fun b!94869 () Bool)

(declare-fun e!61909 () Bool)

(assert (=> b!94869 (= e!61909 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!94870 () Bool)

(declare-fun e!61905 () ListLongMap!1521)

(declare-fun call!9528 () ListLongMap!1521)

(assert (=> b!94870 (= e!61905 call!9528)))

(declare-fun b!94871 () Bool)

(declare-fun res!48013 () Bool)

(assert (=> b!94871 (=> (not res!48013) (not e!61901))))

(assert (=> b!94871 (= res!48013 e!61906)))

(declare-fun res!48014 () Bool)

(assert (=> b!94871 (=> res!48014 e!61906)))

(assert (=> b!94871 (= res!48014 (not e!61909))))

(declare-fun res!48012 () Bool)

(assert (=> b!94871 (=> (not res!48012) (not e!61909))))

(assert (=> b!94871 (= res!48012 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94872 () Bool)

(declare-fun lt!47211 () Unit!2798)

(assert (=> b!94872 (= e!61900 lt!47211)))

(declare-fun lt!47218 () ListLongMap!1521)

(assert (=> b!94872 (= lt!47218 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47209 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47209 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47217 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47217 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47215 () Unit!2798)

(assert (=> b!94872 (= lt!47215 (addStillContains!66 lt!47218 lt!47209 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47217))))

(assert (=> b!94872 (contains!789 (+!133 lt!47218 (tuple2!2311 lt!47209 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47217)))

(declare-fun lt!47205 () Unit!2798)

(assert (=> b!94872 (= lt!47205 lt!47215)))

(declare-fun lt!47210 () ListLongMap!1521)

(assert (=> b!94872 (= lt!47210 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47216 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47216 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47204 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47204 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47220 () Unit!2798)

(assert (=> b!94872 (= lt!47220 (addApplyDifferent!66 lt!47210 lt!47216 (minValue!2323 newMap!16) lt!47204))))

(assert (=> b!94872 (= (apply!90 (+!133 lt!47210 (tuple2!2311 lt!47216 (minValue!2323 newMap!16))) lt!47204) (apply!90 lt!47210 lt!47204))))

(declare-fun lt!47213 () Unit!2798)

(assert (=> b!94872 (= lt!47213 lt!47220)))

(declare-fun lt!47214 () ListLongMap!1521)

(assert (=> b!94872 (= lt!47214 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47206 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47206 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47219 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47219 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47207 () Unit!2798)

(assert (=> b!94872 (= lt!47207 (addApplyDifferent!66 lt!47214 lt!47206 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47219))))

(assert (=> b!94872 (= (apply!90 (+!133 lt!47214 (tuple2!2311 lt!47206 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47219) (apply!90 lt!47214 lt!47219))))

(declare-fun lt!47203 () Unit!2798)

(assert (=> b!94872 (= lt!47203 lt!47207)))

(declare-fun lt!47212 () ListLongMap!1521)

(assert (=> b!94872 (= lt!47212 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47208 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47208 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47202 () (_ BitVec 64))

(assert (=> b!94872 (= lt!47202 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!94872 (= lt!47211 (addApplyDifferent!66 lt!47212 lt!47208 (minValue!2323 newMap!16) lt!47202))))

(assert (=> b!94872 (= (apply!90 (+!133 lt!47212 (tuple2!2311 lt!47208 (minValue!2323 newMap!16))) lt!47202) (apply!90 lt!47212 lt!47202))))

(declare-fun b!94873 () Bool)

(declare-fun c!15869 () Bool)

(assert (=> b!94873 (= c!15869 (and (not (= (bvand lt!46686 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46686 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94873 (= e!61905 e!61910)))

(declare-fun bm!9524 () Bool)

(assert (=> bm!9524 (= call!9527 (contains!789 lt!47222 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94874 () Bool)

(assert (=> b!94874 (= e!61910 call!9528)))

(declare-fun bm!9525 () Bool)

(declare-fun c!15868 () Bool)

(declare-fun call!9532 () ListLongMap!1521)

(declare-fun call!9531 () ListLongMap!1521)

(assert (=> bm!9525 (= call!9530 (+!133 (ite c!15871 call!9532 (ite c!15868 call!9531 call!9526)) (ite (or c!15871 c!15868) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9526 () Bool)

(assert (=> bm!9526 (= call!9531 call!9532)))

(declare-fun b!94875 () Bool)

(declare-fun res!48009 () Bool)

(assert (=> b!94875 (=> (not res!48009) (not e!61901))))

(assert (=> b!94875 (= res!48009 e!61903)))

(declare-fun c!15867 () Bool)

(assert (=> b!94875 (= c!15867 (not (= (bvand lt!46686 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9527 () Bool)

(assert (=> bm!9527 (= call!9532 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46686 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9528 () Bool)

(assert (=> bm!9528 (= call!9526 call!9531)))

(declare-fun b!94876 () Bool)

(assert (=> b!94876 (= e!61907 e!61905)))

(assert (=> b!94876 (= c!15868 (and (not (= (bvand lt!46686 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46686 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94877 () Bool)

(assert (=> b!94877 (= e!61904 e!61898)))

(declare-fun res!48011 () Bool)

(assert (=> b!94877 (= res!48011 call!9529)))

(assert (=> b!94877 (=> (not res!48011) (not e!61898))))

(declare-fun bm!9529 () Bool)

(assert (=> bm!9529 (= call!9528 call!9530)))

(assert (= (and d!24885 c!15871) b!94857))

(assert (= (and d!24885 (not c!15871)) b!94876))

(assert (= (and b!94876 c!15868) b!94870))

(assert (= (and b!94876 (not c!15868)) b!94873))

(assert (= (and b!94873 c!15869) b!94874))

(assert (= (and b!94873 (not c!15869)) b!94868))

(assert (= (or b!94874 b!94868) bm!9528))

(assert (= (or b!94870 bm!9528) bm!9526))

(assert (= (or b!94870 b!94874) bm!9529))

(assert (= (or b!94857 bm!9526) bm!9527))

(assert (= (or b!94857 bm!9529) bm!9525))

(assert (= (and d!24885 res!48007) b!94860))

(assert (= (and d!24885 c!15870) b!94872))

(assert (= (and d!24885 (not c!15870)) b!94866))

(assert (= (and d!24885 res!48010) b!94871))

(assert (= (and b!94871 res!48012) b!94869))

(assert (= (and b!94871 (not res!48014)) b!94863))

(assert (= (and b!94863 res!48015) b!94859))

(assert (= (and b!94871 res!48013) b!94875))

(assert (= (and b!94875 c!15867) b!94861))

(assert (= (and b!94875 (not c!15867)) b!94865))

(assert (= (and b!94861 res!48008) b!94862))

(assert (= (or b!94861 b!94865) bm!9524))

(assert (= (and b!94875 res!48009) b!94864))

(assert (= (and b!94864 c!15872) b!94877))

(assert (= (and b!94864 (not c!15872)) b!94867))

(assert (= (and b!94877 res!48011) b!94858))

(assert (= (or b!94877 b!94867) bm!9523))

(declare-fun b_lambda!4181 () Bool)

(assert (=> (not b_lambda!4181) (not b!94859)))

(assert (=> b!94859 t!5479))

(declare-fun b_and!5795 () Bool)

(assert (= b_and!5791 (and (=> t!5479 result!3201) b_and!5795)))

(assert (=> b!94859 t!5481))

(declare-fun b_and!5797 () Bool)

(assert (= b_and!5793 (and (=> t!5481 result!3203) b_and!5797)))

(declare-fun m!102591 () Bool)

(assert (=> b!94857 m!102591))

(assert (=> d!24885 m!101603))

(declare-fun m!102593 () Bool)

(assert (=> b!94858 m!102593))

(declare-fun m!102595 () Bool)

(assert (=> b!94862 m!102595))

(declare-fun m!102597 () Bool)

(assert (=> bm!9525 m!102597))

(assert (=> bm!9527 m!101361))

(declare-fun m!102599 () Bool)

(assert (=> bm!9527 m!102599))

(assert (=> b!94863 m!101689))

(assert (=> b!94863 m!101689))

(declare-fun m!102601 () Bool)

(assert (=> b!94863 m!102601))

(declare-fun m!102603 () Bool)

(assert (=> bm!9523 m!102603))

(assert (=> b!94860 m!101689))

(assert (=> b!94860 m!101689))

(assert (=> b!94860 m!101695))

(assert (=> b!94859 m!101689))

(assert (=> b!94859 m!101697))

(assert (=> b!94859 m!101699))

(assert (=> b!94859 m!101699))

(assert (=> b!94859 m!101697))

(assert (=> b!94859 m!101701))

(assert (=> b!94859 m!101689))

(declare-fun m!102605 () Bool)

(assert (=> b!94859 m!102605))

(assert (=> b!94869 m!101689))

(assert (=> b!94869 m!101689))

(assert (=> b!94869 m!101695))

(declare-fun m!102607 () Bool)

(assert (=> b!94872 m!102607))

(assert (=> b!94872 m!101689))

(assert (=> b!94872 m!101361))

(declare-fun m!102609 () Bool)

(assert (=> b!94872 m!102609))

(declare-fun m!102611 () Bool)

(assert (=> b!94872 m!102611))

(declare-fun m!102613 () Bool)

(assert (=> b!94872 m!102613))

(declare-fun m!102615 () Bool)

(assert (=> b!94872 m!102615))

(assert (=> b!94872 m!102613))

(declare-fun m!102617 () Bool)

(assert (=> b!94872 m!102617))

(assert (=> b!94872 m!101361))

(declare-fun m!102619 () Bool)

(assert (=> b!94872 m!102619))

(declare-fun m!102621 () Bool)

(assert (=> b!94872 m!102621))

(declare-fun m!102623 () Bool)

(assert (=> b!94872 m!102623))

(declare-fun m!102625 () Bool)

(assert (=> b!94872 m!102625))

(assert (=> b!94872 m!102607))

(declare-fun m!102627 () Bool)

(assert (=> b!94872 m!102627))

(declare-fun m!102629 () Bool)

(assert (=> b!94872 m!102629))

(declare-fun m!102631 () Bool)

(assert (=> b!94872 m!102631))

(assert (=> b!94872 m!102623))

(declare-fun m!102633 () Bool)

(assert (=> b!94872 m!102633))

(assert (=> b!94872 m!101361))

(assert (=> b!94872 m!102599))

(declare-fun m!102635 () Bool)

(assert (=> b!94872 m!102635))

(assert (=> b!94872 m!102629))

(declare-fun m!102637 () Bool)

(assert (=> bm!9524 m!102637))

(assert (=> d!24747 d!24885))

(declare-fun d!24887 () Bool)

(assert (=> d!24887 (= (validMask!0 (mask!6511 newMap!16)) (and (or (= (mask!6511 newMap!16) #b00000000000000000000000000000111) (= (mask!6511 newMap!16) #b00000000000000000000000000001111) (= (mask!6511 newMap!16) #b00000000000000000000000000011111) (= (mask!6511 newMap!16) #b00000000000000000000000000111111) (= (mask!6511 newMap!16) #b00000000000000000000000001111111) (= (mask!6511 newMap!16) #b00000000000000000000000011111111) (= (mask!6511 newMap!16) #b00000000000000000000000111111111) (= (mask!6511 newMap!16) #b00000000000000000000001111111111) (= (mask!6511 newMap!16) #b00000000000000000000011111111111) (= (mask!6511 newMap!16) #b00000000000000000000111111111111) (= (mask!6511 newMap!16) #b00000000000000000001111111111111) (= (mask!6511 newMap!16) #b00000000000000000011111111111111) (= (mask!6511 newMap!16) #b00000000000000000111111111111111) (= (mask!6511 newMap!16) #b00000000000000001111111111111111) (= (mask!6511 newMap!16) #b00000000000000011111111111111111) (= (mask!6511 newMap!16) #b00000000000000111111111111111111) (= (mask!6511 newMap!16) #b00000000000001111111111111111111) (= (mask!6511 newMap!16) #b00000000000011111111111111111111) (= (mask!6511 newMap!16) #b00000000000111111111111111111111) (= (mask!6511 newMap!16) #b00000000001111111111111111111111) (= (mask!6511 newMap!16) #b00000000011111111111111111111111) (= (mask!6511 newMap!16) #b00000000111111111111111111111111) (= (mask!6511 newMap!16) #b00000001111111111111111111111111) (= (mask!6511 newMap!16) #b00000011111111111111111111111111) (= (mask!6511 newMap!16) #b00000111111111111111111111111111) (= (mask!6511 newMap!16) #b00001111111111111111111111111111) (= (mask!6511 newMap!16) #b00011111111111111111111111111111) (= (mask!6511 newMap!16) #b00111111111111111111111111111111)) (bvsle (mask!6511 newMap!16) #b00111111111111111111111111111111)))))

(assert (=> d!24747 d!24887))

(assert (=> d!24735 d!24887))

(assert (=> d!24667 d!24633))

(declare-fun d!24889 () Bool)

(declare-fun e!61913 () Bool)

(assert (=> d!24889 e!61913))

(declare-fun res!48021 () Bool)

(assert (=> d!24889 (=> (not res!48021) (not e!61913))))

(declare-fun lt!47226 () SeekEntryResult!251)

(assert (=> d!24889 (= res!48021 ((_ is Found!251) lt!47226))))

(assert (=> d!24889 (= lt!47226 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!24889 true))

(declare-fun _$33!75 () Unit!2798)

(assert (=> d!24889 (= (choose!562 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) _$33!75)))

(declare-fun b!94882 () Bool)

(declare-fun res!48020 () Bool)

(assert (=> b!94882 (=> (not res!48020) (not e!61913))))

(assert (=> b!94882 (= res!48020 (inRange!0 (index!3146 lt!47226) (mask!6511 newMap!16)))))

(declare-fun b!94883 () Bool)

(assert (=> b!94883 (= e!61913 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!47226)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!24889 res!48021) b!94882))

(assert (= (and b!94882 res!48020) b!94883))

(assert (=> d!24889 m!101363))

(assert (=> d!24889 m!101503))

(declare-fun m!102639 () Bool)

(assert (=> b!94882 m!102639))

(declare-fun m!102641 () Bool)

(assert (=> b!94883 m!102641))

(assert (=> d!24667 d!24889))

(assert (=> d!24667 d!24887))

(declare-fun d!24891 () Bool)

(assert (=> d!24891 (= (get!1263 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2761 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (=> b!94591 d!24891))

(declare-fun d!24893 () Bool)

(assert (=> d!24893 (= (inRange!0 (ite c!15821 (index!3146 lt!47052) (ite c!15820 (index!3145 lt!47065) (index!3148 lt!47065))) (mask!6511 newMap!16)) (and (bvsge (ite c!15821 (index!3146 lt!47052) (ite c!15820 (index!3145 lt!47065) (index!3148 lt!47065))) #b00000000000000000000000000000000) (bvslt (ite c!15821 (index!3146 lt!47052) (ite c!15820 (index!3145 lt!47065) (index!3148 lt!47065))) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9506 d!24893))

(declare-fun d!24895 () Bool)

(declare-fun e!61915 () Bool)

(assert (=> d!24895 e!61915))

(declare-fun res!48022 () Bool)

(assert (=> d!24895 (=> res!48022 e!61915)))

(declare-fun lt!47230 () Bool)

(assert (=> d!24895 (= res!48022 (not lt!47230))))

(declare-fun lt!47227 () Bool)

(assert (=> d!24895 (= lt!47230 lt!47227)))

(declare-fun lt!47229 () Unit!2798)

(declare-fun e!61914 () Unit!2798)

(assert (=> d!24895 (= lt!47229 e!61914)))

(declare-fun c!15873 () Bool)

(assert (=> d!24895 (= c!15873 lt!47227)))

(assert (=> d!24895 (= lt!47227 (containsKey!152 (toList!776 lt!46884) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24895 (= (contains!789 lt!46884 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47230)))

(declare-fun b!94884 () Bool)

(declare-fun lt!47228 () Unit!2798)

(assert (=> b!94884 (= e!61914 lt!47228)))

(assert (=> b!94884 (= lt!47228 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46884) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94884 (isDefined!101 (getValueByKey!148 (toList!776 lt!46884) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94885 () Bool)

(declare-fun Unit!2830 () Unit!2798)

(assert (=> b!94885 (= e!61914 Unit!2830)))

(declare-fun b!94886 () Bool)

(assert (=> b!94886 (= e!61915 (isDefined!101 (getValueByKey!148 (toList!776 lt!46884) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24895 c!15873) b!94884))

(assert (= (and d!24895 (not c!15873)) b!94885))

(assert (= (and d!24895 (not res!48022)) b!94886))

(declare-fun m!102643 () Bool)

(assert (=> d!24895 m!102643))

(declare-fun m!102645 () Bool)

(assert (=> b!94884 m!102645))

(declare-fun m!102647 () Bool)

(assert (=> b!94884 m!102647))

(assert (=> b!94884 m!102647))

(declare-fun m!102649 () Bool)

(assert (=> b!94884 m!102649))

(assert (=> b!94886 m!102647))

(assert (=> b!94886 m!102647))

(assert (=> b!94886 m!102649))

(assert (=> d!24681 d!24895))

(assert (=> d!24681 d!24609))

(declare-fun d!24897 () Bool)

(declare-fun e!61916 () Bool)

(assert (=> d!24897 e!61916))

(declare-fun res!48023 () Bool)

(assert (=> d!24897 (=> (not res!48023) (not e!61916))))

(declare-fun lt!47232 () ListLongMap!1521)

(assert (=> d!24897 (= res!48023 (contains!789 lt!47232 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun lt!47233 () List!1569)

(assert (=> d!24897 (= lt!47232 (ListLongMap!1522 lt!47233))))

(declare-fun lt!47231 () Unit!2798)

(declare-fun lt!47234 () Unit!2798)

(assert (=> d!24897 (= lt!47231 lt!47234)))

(assert (=> d!24897 (= (getValueByKey!148 lt!47233 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24897 (= lt!47234 (lemmaContainsTupThenGetReturnValue!64 lt!47233 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24897 (= lt!47233 (insertStrictlySorted!67 (toList!776 call!9487) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24897 (= (+!133 call!9487 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) lt!47232)))

(declare-fun b!94887 () Bool)

(declare-fun res!48024 () Bool)

(assert (=> b!94887 (=> (not res!48024) (not e!61916))))

(assert (=> b!94887 (= res!48024 (= (getValueByKey!148 (toList!776 lt!47232) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun b!94888 () Bool)

(assert (=> b!94888 (= e!61916 (contains!792 (toList!776 lt!47232) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(assert (= (and d!24897 res!48023) b!94887))

(assert (= (and b!94887 res!48024) b!94888))

(declare-fun m!102651 () Bool)

(assert (=> d!24897 m!102651))

(declare-fun m!102653 () Bool)

(assert (=> d!24897 m!102653))

(declare-fun m!102655 () Bool)

(assert (=> d!24897 m!102655))

(declare-fun m!102657 () Bool)

(assert (=> d!24897 m!102657))

(declare-fun m!102659 () Bool)

(assert (=> b!94887 m!102659))

(declare-fun m!102661 () Bool)

(assert (=> b!94888 m!102661))

(assert (=> b!94563 d!24897))

(declare-fun d!24899 () Bool)

(declare-fun e!61917 () Bool)

(assert (=> d!24899 e!61917))

(declare-fun res!48025 () Bool)

(assert (=> d!24899 (=> (not res!48025) (not e!61917))))

(declare-fun lt!47236 () ListLongMap!1521)

(assert (=> d!24899 (= res!48025 (contains!789 lt!47236 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun lt!47237 () List!1569)

(assert (=> d!24899 (= lt!47236 (ListLongMap!1522 lt!47237))))

(declare-fun lt!47235 () Unit!2798)

(declare-fun lt!47238 () Unit!2798)

(assert (=> d!24899 (= lt!47235 lt!47238)))

(assert (=> d!24899 (= (getValueByKey!148 lt!47237 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24899 (= lt!47238 (lemmaContainsTupThenGetReturnValue!64 lt!47237 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24899 (= lt!47237 (insertStrictlySorted!67 (toList!776 call!9474) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (=> d!24899 (= (+!133 call!9474 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))) lt!47236)))

(declare-fun b!94889 () Bool)

(declare-fun res!48026 () Bool)

(assert (=> b!94889 (=> (not res!48026) (not e!61917))))

(assert (=> b!94889 (= res!48026 (= (getValueByKey!148 (toList!776 lt!47236) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun b!94890 () Bool)

(assert (=> b!94890 (= e!61917 (contains!792 (toList!776 lt!47236) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(assert (= (and d!24899 res!48025) b!94889))

(assert (= (and b!94889 res!48026) b!94890))

(declare-fun m!102663 () Bool)

(assert (=> d!24899 m!102663))

(declare-fun m!102665 () Bool)

(assert (=> d!24899 m!102665))

(declare-fun m!102667 () Bool)

(assert (=> d!24899 m!102667))

(declare-fun m!102669 () Bool)

(assert (=> d!24899 m!102669))

(declare-fun m!102671 () Bool)

(assert (=> b!94889 m!102671))

(declare-fun m!102673 () Bool)

(assert (=> b!94890 m!102673))

(assert (=> b!94417 d!24899))

(assert (=> b!94575 d!24749))

(declare-fun d!24901 () Bool)

(assert (=> d!24901 (= (apply!90 lt!46970 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46970) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3910 () Bool)

(assert (= bs!3910 d!24901))

(declare-fun m!102675 () Bool)

(assert (=> bs!3910 m!102675))

(assert (=> bs!3910 m!102675))

(declare-fun m!102677 () Bool)

(assert (=> bs!3910 m!102677))

(assert (=> b!94612 d!24901))

(assert (=> b!94610 d!24749))

(assert (=> bm!9464 d!24717))

(declare-fun d!24903 () Bool)

(assert (=> d!24903 (= (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757)) (not (isEmpty!350 (getValueByKey!148 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))))

(declare-fun bs!3911 () Bool)

(assert (= bs!3911 d!24903))

(assert (=> bs!3911 m!101825))

(declare-fun m!102679 () Bool)

(assert (=> bs!3911 m!102679))

(assert (=> b!94543 d!24903))

(declare-fun c!15874 () Bool)

(declare-fun d!24905 () Bool)

(assert (=> d!24905 (= c!15874 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46757)))))

(declare-fun e!61918 () Option!154)

(assert (=> d!24905 (= (getValueByKey!148 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757) e!61918)))

(declare-fun b!94893 () Bool)

(declare-fun e!61919 () Option!154)

(assert (=> b!94893 (= e!61919 (getValueByKey!148 (t!5471 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!46757))))

(declare-fun b!94894 () Bool)

(assert (=> b!94894 (= e!61919 None!152)))

(declare-fun b!94892 () Bool)

(assert (=> b!94892 (= e!61918 e!61919)))

(declare-fun c!15875 () Bool)

(assert (=> b!94892 (= c!15875 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) (not (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46757))))))

(declare-fun b!94891 () Bool)

(assert (=> b!94891 (= e!61918 (Some!153 (_2!1166 (h!2157 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(assert (= (and d!24905 c!15874) b!94891))

(assert (= (and d!24905 (not c!15874)) b!94892))

(assert (= (and b!94892 c!15875) b!94893))

(assert (= (and b!94892 (not c!15875)) b!94894))

(declare-fun m!102681 () Bool)

(assert (=> b!94893 m!102681))

(assert (=> b!94543 d!24905))

(declare-fun d!24907 () Bool)

(declare-fun e!61920 () Bool)

(assert (=> d!24907 e!61920))

(declare-fun res!48027 () Bool)

(assert (=> d!24907 (=> (not res!48027) (not e!61920))))

(declare-fun lt!47240 () ListLongMap!1521)

(assert (=> d!24907 (= res!48027 (contains!789 lt!47240 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47241 () List!1569)

(assert (=> d!24907 (= lt!47240 (ListLongMap!1522 lt!47241))))

(declare-fun lt!47239 () Unit!2798)

(declare-fun lt!47242 () Unit!2798)

(assert (=> d!24907 (= lt!47239 lt!47242)))

(assert (=> d!24907 (= (getValueByKey!148 lt!47241 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24907 (= lt!47242 (lemmaContainsTupThenGetReturnValue!64 lt!47241 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24907 (= lt!47241 (insertStrictlySorted!67 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!24907 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47240)))

(declare-fun b!94895 () Bool)

(declare-fun res!48028 () Bool)

(assert (=> b!94895 (=> (not res!48028) (not e!61920))))

(assert (=> b!94895 (= res!48028 (= (getValueByKey!148 (toList!776 lt!47240) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!94896 () Bool)

(assert (=> b!94896 (= e!61920 (contains!792 (toList!776 lt!47240) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!24907 res!48027) b!94895))

(assert (= (and b!94895 res!48028) b!94896))

(declare-fun m!102683 () Bool)

(assert (=> d!24907 m!102683))

(declare-fun m!102685 () Bool)

(assert (=> d!24907 m!102685))

(declare-fun m!102687 () Bool)

(assert (=> d!24907 m!102687))

(declare-fun m!102689 () Bool)

(assert (=> d!24907 m!102689))

(declare-fun m!102691 () Bool)

(assert (=> b!94895 m!102691))

(declare-fun m!102693 () Bool)

(assert (=> b!94896 m!102693))

(assert (=> d!24739 d!24907))

(declare-fun d!24909 () Bool)

(declare-fun e!61923 () Bool)

(assert (=> d!24909 e!61923))

(declare-fun res!48031 () Bool)

(assert (=> d!24909 (=> (not res!48031) (not e!61923))))

(assert (=> d!24909 (= res!48031 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 (_keys!4118 newMap!16)))))))

(declare-fun lt!47245 () Unit!2798)

(declare-fun choose!41 (array!4201 (_ BitVec 64) (_ BitVec 32) (_ BitVec 32) List!1568) Unit!2798)

(assert (=> d!24909 (= lt!47245 (choose!41 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) lt!47064 lt!47048))))

(assert (=> d!24909 (bvslt (size!2245 (_keys!4118 newMap!16)) #b01111111111111111111111111111111)))

(assert (=> d!24909 (= (lemmaPutNewValidKeyPreservesNoDuplicate!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) lt!47064 lt!47048) lt!47245)))

(declare-fun b!94899 () Bool)

(assert (=> b!94899 (= e!61923 (arrayNoDuplicates!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) lt!47064 lt!47048))))

(assert (= (and d!24909 res!48031) b!94899))

(assert (=> d!24909 m!101363))

(declare-fun m!102695 () Bool)

(assert (=> d!24909 m!102695))

(assert (=> b!94899 m!102111))

(assert (=> b!94899 m!102089))

(assert (=> d!24739 d!24909))

(declare-fun d!24911 () Bool)

(declare-fun res!48032 () Bool)

(declare-fun e!61924 () Bool)

(assert (=> d!24911 (=> res!48032 e!61924)))

(assert (=> d!24911 (= res!48032 (= (select (arr!1997 lt!47061) #b00000000000000000000000000000000) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24911 (= (arrayContainsKey!0 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000) e!61924)))

(declare-fun b!94900 () Bool)

(declare-fun e!61925 () Bool)

(assert (=> b!94900 (= e!61924 e!61925)))

(declare-fun res!48033 () Bool)

(assert (=> b!94900 (=> (not res!48033) (not e!61925))))

(assert (=> b!94900 (= res!48033 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 lt!47061)))))

(declare-fun b!94901 () Bool)

(assert (=> b!94901 (= e!61925 (arrayContainsKey!0 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (= (and d!24911 (not res!48032)) b!94900))

(assert (= (and b!94900 res!48033) b!94901))

(declare-fun m!102697 () Bool)

(assert (=> d!24911 m!102697))

(assert (=> b!94901 m!101363))

(declare-fun m!102699 () Bool)

(assert (=> b!94901 m!102699))

(assert (=> d!24739 d!24911))

(declare-fun b!94911 () Bool)

(declare-fun res!48045 () Bool)

(declare-fun e!61931 () Bool)

(assert (=> b!94911 (=> (not res!48045) (not e!61931))))

(assert (=> b!94911 (= res!48045 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94912 () Bool)

(assert (=> b!94912 (= e!61931 (bvslt (size!2245 (_keys!4118 newMap!16)) #b01111111111111111111111111111111))))

(declare-fun e!61930 () Bool)

(declare-fun b!94913 () Bool)

(assert (=> b!94913 (= e!61930 (= (arrayCountValidKeys!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (bvadd (arrayCountValidKeys!0 (_keys!4118 newMap!16) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) #b00000000000000000000000000000001)))))

(declare-fun b!94910 () Bool)

(declare-fun res!48042 () Bool)

(assert (=> b!94910 (=> (not res!48042) (not e!61931))))

(assert (=> b!94910 (= res!48042 (not (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))))

(declare-fun d!24913 () Bool)

(assert (=> d!24913 e!61930))

(declare-fun res!48043 () Bool)

(assert (=> d!24913 (=> (not res!48043) (not e!61930))))

(assert (=> d!24913 (= res!48043 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 (_keys!4118 newMap!16)))))))

(declare-fun lt!47248 () Unit!2798)

(declare-fun choose!1 (array!4201 (_ BitVec 32) (_ BitVec 64)) Unit!2798)

(assert (=> d!24913 (= lt!47248 (choose!1 (_keys!4118 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24913 e!61931))

(declare-fun res!48044 () Bool)

(assert (=> d!24913 (=> (not res!48044) (not e!61931))))

(assert (=> d!24913 (= res!48044 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 (_keys!4118 newMap!16)))))))

(assert (=> d!24913 (= (lemmaAddValidKeyIncreasesNumberOfValidKeysInArray!0 (_keys!4118 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!47248)))

(assert (= (and d!24913 res!48044) b!94910))

(assert (= (and b!94910 res!48042) b!94911))

(assert (= (and b!94911 res!48045) b!94912))

(assert (= (and d!24913 res!48043) b!94913))

(assert (=> b!94911 m!101363))

(assert (=> b!94911 m!101587))

(assert (=> b!94913 m!102111))

(assert (=> b!94913 m!102097))

(assert (=> b!94913 m!101517))

(declare-fun m!102701 () Bool)

(assert (=> b!94910 m!102701))

(assert (=> b!94910 m!102701))

(declare-fun m!102703 () Bool)

(assert (=> b!94910 m!102703))

(assert (=> d!24913 m!101363))

(declare-fun m!102705 () Bool)

(assert (=> d!24913 m!102705))

(assert (=> d!24739 d!24913))

(declare-fun b!94915 () Bool)

(declare-fun e!61932 () Bool)

(declare-fun lt!47269 () ListLongMap!1521)

(assert (=> b!94915 (= e!61932 (= (apply!90 lt!47269 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun e!61936 () Bool)

(declare-fun b!94916 () Bool)

(assert (=> b!94916 (= e!61936 (= (apply!90 lt!47269 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94916 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))))))

(assert (=> b!94916 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun b!94917 () Bool)

(declare-fun e!61942 () Bool)

(assert (=> b!94917 (= e!61942 (validKeyInArray!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!94918 () Bool)

(declare-fun e!61937 () Bool)

(declare-fun e!61933 () Bool)

(assert (=> b!94918 (= e!61937 e!61933)))

(declare-fun res!48047 () Bool)

(declare-fun call!9534 () Bool)

(assert (=> b!94918 (= res!48047 call!9534)))

(assert (=> b!94918 (=> (not res!48047) (not e!61933))))

(declare-fun bm!9530 () Bool)

(declare-fun call!9536 () Bool)

(assert (=> bm!9530 (= call!9536 (contains!789 lt!47269 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94919 () Bool)

(assert (=> b!94919 (= e!61933 (= (apply!90 lt!47269 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94920 () Bool)

(declare-fun e!61940 () Bool)

(assert (=> b!94920 (= e!61940 e!61936)))

(declare-fun res!48054 () Bool)

(assert (=> b!94920 (=> (not res!48054) (not e!61936))))

(assert (=> b!94920 (= res!48054 (contains!789 lt!47269 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (=> b!94920 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun b!94921 () Bool)

(declare-fun e!61935 () Bool)

(declare-fun e!61938 () Bool)

(assert (=> b!94921 (= e!61935 e!61938)))

(declare-fun c!15881 () Bool)

(assert (=> b!94921 (= c!15881 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94922 () Bool)

(assert (=> b!94922 (= e!61937 (not call!9534))))

(declare-fun b!94923 () Bool)

(declare-fun e!61934 () Unit!2798)

(declare-fun Unit!2831 () Unit!2798)

(assert (=> b!94923 (= e!61934 Unit!2831)))

(declare-fun b!94924 () Bool)

(assert (=> b!94924 (= e!61938 (not call!9536))))

(declare-fun b!94914 () Bool)

(declare-fun e!61941 () ListLongMap!1521)

(declare-fun call!9537 () ListLongMap!1521)

(assert (=> b!94914 (= e!61941 (+!133 call!9537 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!24915 () Bool)

(assert (=> d!24915 e!61935))

(declare-fun res!48049 () Bool)

(assert (=> d!24915 (=> (not res!48049) (not e!61935))))

(assert (=> d!24915 (= res!48049 (or (bvsge #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))))

(declare-fun lt!47270 () ListLongMap!1521)

(assert (=> d!24915 (= lt!47269 lt!47270)))

(declare-fun lt!47268 () Unit!2798)

(assert (=> d!24915 (= lt!47268 e!61934)))

(declare-fun c!15879 () Bool)

(assert (=> d!24915 (= c!15879 e!61942)))

(declare-fun res!48046 () Bool)

(assert (=> d!24915 (=> (not res!48046) (not e!61942))))

(assert (=> d!24915 (= res!48046 (bvslt #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(assert (=> d!24915 (= lt!47270 e!61941)))

(declare-fun c!15880 () Bool)

(assert (=> d!24915 (= c!15880 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24915 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24915 (= (getCurrentListMap!468 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47269)))

(declare-fun b!94925 () Bool)

(declare-fun e!61944 () ListLongMap!1521)

(declare-fun call!9533 () ListLongMap!1521)

(assert (=> b!94925 (= e!61944 call!9533)))

(declare-fun b!94926 () Bool)

(declare-fun e!61943 () Bool)

(assert (=> b!94926 (= e!61943 (validKeyInArray!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun b!94927 () Bool)

(declare-fun e!61939 () ListLongMap!1521)

(declare-fun call!9535 () ListLongMap!1521)

(assert (=> b!94927 (= e!61939 call!9535)))

(declare-fun b!94928 () Bool)

(declare-fun res!48052 () Bool)

(assert (=> b!94928 (=> (not res!48052) (not e!61935))))

(assert (=> b!94928 (= res!48052 e!61940)))

(declare-fun res!48053 () Bool)

(assert (=> b!94928 (=> res!48053 e!61940)))

(assert (=> b!94928 (= res!48053 (not e!61943))))

(declare-fun res!48051 () Bool)

(assert (=> b!94928 (=> (not res!48051) (not e!61943))))

(assert (=> b!94928 (= res!48051 (bvslt #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun b!94929 () Bool)

(declare-fun lt!47258 () Unit!2798)

(assert (=> b!94929 (= e!61934 lt!47258)))

(declare-fun lt!47265 () ListLongMap!1521)

(assert (=> b!94929 (= lt!47265 (getCurrentListMapNoExtraKeys!98 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47256 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47256 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47264 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47264 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47262 () Unit!2798)

(assert (=> b!94929 (= lt!47262 (addStillContains!66 lt!47265 lt!47256 (zeroValue!2323 newMap!16) lt!47264))))

(assert (=> b!94929 (contains!789 (+!133 lt!47265 (tuple2!2311 lt!47256 (zeroValue!2323 newMap!16))) lt!47264)))

(declare-fun lt!47252 () Unit!2798)

(assert (=> b!94929 (= lt!47252 lt!47262)))

(declare-fun lt!47257 () ListLongMap!1521)

(assert (=> b!94929 (= lt!47257 (getCurrentListMapNoExtraKeys!98 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47263 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47263 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47251 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47251 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47267 () Unit!2798)

(assert (=> b!94929 (= lt!47267 (addApplyDifferent!66 lt!47257 lt!47263 (minValue!2323 newMap!16) lt!47251))))

(assert (=> b!94929 (= (apply!90 (+!133 lt!47257 (tuple2!2311 lt!47263 (minValue!2323 newMap!16))) lt!47251) (apply!90 lt!47257 lt!47251))))

(declare-fun lt!47260 () Unit!2798)

(assert (=> b!94929 (= lt!47260 lt!47267)))

(declare-fun lt!47261 () ListLongMap!1521)

(assert (=> b!94929 (= lt!47261 (getCurrentListMapNoExtraKeys!98 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47253 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47253 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47266 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47266 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47254 () Unit!2798)

(assert (=> b!94929 (= lt!47254 (addApplyDifferent!66 lt!47261 lt!47253 (zeroValue!2323 newMap!16) lt!47266))))

(assert (=> b!94929 (= (apply!90 (+!133 lt!47261 (tuple2!2311 lt!47253 (zeroValue!2323 newMap!16))) lt!47266) (apply!90 lt!47261 lt!47266))))

(declare-fun lt!47250 () Unit!2798)

(assert (=> b!94929 (= lt!47250 lt!47254)))

(declare-fun lt!47259 () ListLongMap!1521)

(assert (=> b!94929 (= lt!47259 (getCurrentListMapNoExtraKeys!98 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47255 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47255 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47249 () (_ BitVec 64))

(assert (=> b!94929 (= lt!47249 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(assert (=> b!94929 (= lt!47258 (addApplyDifferent!66 lt!47259 lt!47255 (minValue!2323 newMap!16) lt!47249))))

(assert (=> b!94929 (= (apply!90 (+!133 lt!47259 (tuple2!2311 lt!47255 (minValue!2323 newMap!16))) lt!47249) (apply!90 lt!47259 lt!47249))))

(declare-fun b!94930 () Bool)

(declare-fun c!15878 () Bool)

(assert (=> b!94930 (= c!15878 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94930 (= e!61939 e!61944)))

(declare-fun bm!9531 () Bool)

(assert (=> bm!9531 (= call!9534 (contains!789 lt!47269 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94931 () Bool)

(assert (=> b!94931 (= e!61944 call!9535)))

(declare-fun call!9539 () ListLongMap!1521)

(declare-fun call!9538 () ListLongMap!1521)

(declare-fun c!15877 () Bool)

(declare-fun bm!9532 () Bool)

(assert (=> bm!9532 (= call!9537 (+!133 (ite c!15880 call!9539 (ite c!15877 call!9538 call!9533)) (ite (or c!15880 c!15877) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9533 () Bool)

(assert (=> bm!9533 (= call!9538 call!9539)))

(declare-fun b!94932 () Bool)

(declare-fun res!48048 () Bool)

(assert (=> b!94932 (=> (not res!48048) (not e!61935))))

(assert (=> b!94932 (= res!48048 e!61937)))

(declare-fun c!15876 () Bool)

(assert (=> b!94932 (= c!15876 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9534 () Bool)

(assert (=> bm!9534 (= call!9539 (getCurrentListMapNoExtraKeys!98 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9535 () Bool)

(assert (=> bm!9535 (= call!9533 call!9538)))

(declare-fun b!94933 () Bool)

(assert (=> b!94933 (= e!61941 e!61939)))

(assert (=> b!94933 (= c!15877 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94934 () Bool)

(assert (=> b!94934 (= e!61938 e!61932)))

(declare-fun res!48050 () Bool)

(assert (=> b!94934 (= res!48050 call!9536)))

(assert (=> b!94934 (=> (not res!48050) (not e!61932))))

(declare-fun bm!9536 () Bool)

(assert (=> bm!9536 (= call!9535 call!9537)))

(assert (= (and d!24915 c!15880) b!94914))

(assert (= (and d!24915 (not c!15880)) b!94933))

(assert (= (and b!94933 c!15877) b!94927))

(assert (= (and b!94933 (not c!15877)) b!94930))

(assert (= (and b!94930 c!15878) b!94931))

(assert (= (and b!94930 (not c!15878)) b!94925))

(assert (= (or b!94931 b!94925) bm!9535))

(assert (= (or b!94927 bm!9535) bm!9533))

(assert (= (or b!94927 b!94931) bm!9536))

(assert (= (or b!94914 bm!9533) bm!9534))

(assert (= (or b!94914 bm!9536) bm!9532))

(assert (= (and d!24915 res!48046) b!94917))

(assert (= (and d!24915 c!15879) b!94929))

(assert (= (and d!24915 (not c!15879)) b!94923))

(assert (= (and d!24915 res!48049) b!94928))

(assert (= (and b!94928 res!48051) b!94926))

(assert (= (and b!94928 (not res!48053)) b!94920))

(assert (= (and b!94920 res!48054) b!94916))

(assert (= (and b!94928 res!48052) b!94932))

(assert (= (and b!94932 c!15876) b!94918))

(assert (= (and b!94932 (not c!15876)) b!94922))

(assert (= (and b!94918 res!48047) b!94919))

(assert (= (or b!94918 b!94922) bm!9531))

(assert (= (and b!94932 res!48048) b!94921))

(assert (= (and b!94921 c!15881) b!94934))

(assert (= (and b!94921 (not c!15881)) b!94924))

(assert (= (and b!94934 res!48050) b!94915))

(assert (= (or b!94934 b!94924) bm!9530))

(declare-fun b_lambda!4183 () Bool)

(assert (=> (not b_lambda!4183) (not b!94916)))

(assert (=> b!94916 t!5479))

(declare-fun b_and!5799 () Bool)

(assert (= b_and!5795 (and (=> t!5479 result!3201) b_and!5799)))

(assert (=> b!94916 t!5481))

(declare-fun b_and!5801 () Bool)

(assert (= b_and!5797 (and (=> t!5481 result!3203) b_and!5801)))

(declare-fun m!102707 () Bool)

(assert (=> b!94914 m!102707))

(assert (=> d!24915 m!101603))

(declare-fun m!102709 () Bool)

(assert (=> b!94915 m!102709))

(declare-fun m!102711 () Bool)

(assert (=> b!94919 m!102711))

(declare-fun m!102713 () Bool)

(assert (=> bm!9532 m!102713))

(declare-fun m!102715 () Bool)

(assert (=> bm!9534 m!102715))

(declare-fun m!102717 () Bool)

(assert (=> b!94920 m!102717))

(assert (=> b!94920 m!102717))

(declare-fun m!102719 () Bool)

(assert (=> b!94920 m!102719))

(declare-fun m!102721 () Bool)

(assert (=> bm!9530 m!102721))

(assert (=> b!94917 m!102717))

(assert (=> b!94917 m!102717))

(declare-fun m!102723 () Bool)

(assert (=> b!94917 m!102723))

(assert (=> b!94916 m!102717))

(assert (=> b!94916 m!101697))

(declare-fun m!102725 () Bool)

(assert (=> b!94916 m!102725))

(assert (=> b!94916 m!102725))

(assert (=> b!94916 m!101697))

(declare-fun m!102727 () Bool)

(assert (=> b!94916 m!102727))

(assert (=> b!94916 m!102717))

(declare-fun m!102729 () Bool)

(assert (=> b!94916 m!102729))

(assert (=> b!94926 m!102717))

(assert (=> b!94926 m!102717))

(assert (=> b!94926 m!102723))

(declare-fun m!102731 () Bool)

(assert (=> b!94929 m!102731))

(assert (=> b!94929 m!102717))

(declare-fun m!102733 () Bool)

(assert (=> b!94929 m!102733))

(declare-fun m!102735 () Bool)

(assert (=> b!94929 m!102735))

(declare-fun m!102737 () Bool)

(assert (=> b!94929 m!102737))

(declare-fun m!102739 () Bool)

(assert (=> b!94929 m!102739))

(assert (=> b!94929 m!102737))

(declare-fun m!102741 () Bool)

(assert (=> b!94929 m!102741))

(declare-fun m!102743 () Bool)

(assert (=> b!94929 m!102743))

(declare-fun m!102745 () Bool)

(assert (=> b!94929 m!102745))

(declare-fun m!102747 () Bool)

(assert (=> b!94929 m!102747))

(declare-fun m!102749 () Bool)

(assert (=> b!94929 m!102749))

(assert (=> b!94929 m!102731))

(declare-fun m!102751 () Bool)

(assert (=> b!94929 m!102751))

(declare-fun m!102753 () Bool)

(assert (=> b!94929 m!102753))

(declare-fun m!102755 () Bool)

(assert (=> b!94929 m!102755))

(assert (=> b!94929 m!102747))

(declare-fun m!102757 () Bool)

(assert (=> b!94929 m!102757))

(assert (=> b!94929 m!102715))

(declare-fun m!102759 () Bool)

(assert (=> b!94929 m!102759))

(assert (=> b!94929 m!102753))

(declare-fun m!102761 () Bool)

(assert (=> bm!9531 m!102761))

(assert (=> d!24739 d!24915))

(declare-fun d!24917 () Bool)

(declare-fun e!61947 () Bool)

(assert (=> d!24917 e!61947))

(declare-fun res!48057 () Bool)

(assert (=> d!24917 (=> (not res!48057) (not e!61947))))

(assert (=> d!24917 (= res!48057 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 (_keys!4118 newMap!16)))))))

(declare-fun lt!47273 () Unit!2798)

(declare-fun choose!102 ((_ BitVec 64) array!4201 (_ BitVec 32) (_ BitVec 32)) Unit!2798)

(assert (=> d!24917 (= lt!47273 (choose!102 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (mask!6511 newMap!16)))))

(assert (=> d!24917 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24917 (= (lemmaPutValidKeyPreservesForallSeekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (mask!6511 newMap!16)) lt!47273)))

(declare-fun b!94937 () Bool)

(assert (=> b!94937 (= e!61947 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (mask!6511 newMap!16)))))

(assert (= (and d!24917 res!48057) b!94937))

(assert (=> d!24917 m!101363))

(declare-fun m!102763 () Bool)

(assert (=> d!24917 m!102763))

(assert (=> d!24917 m!101603))

(assert (=> b!94937 m!102111))

(assert (=> b!94937 m!102085))

(assert (=> d!24739 d!24917))

(assert (=> d!24739 d!24649))

(assert (=> d!24739 d!24599))

(declare-fun d!24919 () Bool)

(declare-fun lt!47274 () (_ BitVec 32))

(assert (=> d!24919 (and (bvsge lt!47274 #b00000000000000000000000000000000) (bvsle lt!47274 (bvsub (size!2245 lt!47043) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(declare-fun e!61948 () (_ BitVec 32))

(assert (=> d!24919 (= lt!47274 e!61948)))

(declare-fun c!15882 () Bool)

(assert (=> d!24919 (= c!15882 (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001)))))

(assert (=> d!24919 (and (bvsle (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001)) (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvsle (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001) (size!2245 lt!47043)))))

(assert (=> d!24919 (= (arrayCountValidKeys!0 lt!47043 (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001)) lt!47274)))

(declare-fun b!94938 () Bool)

(declare-fun e!61949 () (_ BitVec 32))

(declare-fun call!9540 () (_ BitVec 32))

(assert (=> b!94938 (= e!61949 call!9540)))

(declare-fun bm!9537 () Bool)

(assert (=> bm!9537 (= call!9540 (arrayCountValidKeys!0 lt!47043 (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001) (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001)))))

(declare-fun b!94939 () Bool)

(assert (=> b!94939 (= e!61948 #b00000000000000000000000000000000)))

(declare-fun b!94940 () Bool)

(assert (=> b!94940 (= e!61949 (bvadd #b00000000000000000000000000000001 call!9540))))

(declare-fun b!94941 () Bool)

(assert (=> b!94941 (= e!61948 e!61949)))

(declare-fun c!15883 () Bool)

(assert (=> b!94941 (= c!15883 (validKeyInArray!0 (select (arr!1997 lt!47043) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(assert (= (and d!24919 c!15882) b!94939))

(assert (= (and d!24919 (not c!15882)) b!94941))

(assert (= (and b!94941 c!15883) b!94940))

(assert (= (and b!94941 (not c!15883)) b!94938))

(assert (= (or b!94940 b!94938) bm!9537))

(declare-fun m!102765 () Bool)

(assert (=> bm!9537 m!102765))

(declare-fun m!102767 () Bool)

(assert (=> b!94941 m!102767))

(assert (=> b!94941 m!102767))

(declare-fun m!102769 () Bool)

(assert (=> b!94941 m!102769))

(assert (=> d!24739 d!24919))

(assert (=> d!24739 d!24717))

(assert (=> d!24739 d!24733))

(declare-fun d!24921 () Bool)

(assert (=> d!24921 (arrayContainsKey!0 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000)))

(declare-fun lt!47275 () Unit!2798)

(assert (=> d!24921 (= lt!47275 (choose!13 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))

(assert (=> d!24921 (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000)))

(assert (=> d!24921 (= (lemmaArrayContainsFromImpliesContainsFromZero!0 lt!47061 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))) lt!47275)))

(declare-fun bs!3912 () Bool)

(assert (= bs!3912 d!24921))

(assert (=> bs!3912 m!101363))

(assert (=> bs!3912 m!102105))

(assert (=> bs!3912 m!101363))

(declare-fun m!102771 () Bool)

(assert (=> bs!3912 m!102771))

(assert (=> d!24739 d!24921))

(declare-fun b!94943 () Bool)

(declare-fun e!61950 () Bool)

(declare-fun lt!47296 () ListLongMap!1521)

(assert (=> b!94943 (= e!61950 (= (apply!90 lt!47296 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun b!94944 () Bool)

(declare-fun e!61954 () Bool)

(assert (=> b!94944 (= e!61954 (= (apply!90 lt!47296 (select (arr!1997 lt!47056) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 lt!47049) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94944 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 lt!47049)))))

(assert (=> b!94944 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 lt!47056)))))

(declare-fun b!94945 () Bool)

(declare-fun e!61960 () Bool)

(assert (=> b!94945 (= e!61960 (validKeyInArray!0 (select (arr!1997 lt!47056) #b00000000000000000000000000000000)))))

(declare-fun b!94946 () Bool)

(declare-fun e!61955 () Bool)

(declare-fun e!61951 () Bool)

(assert (=> b!94946 (= e!61955 e!61951)))

(declare-fun res!48059 () Bool)

(declare-fun call!9542 () Bool)

(assert (=> b!94946 (= res!48059 call!9542)))

(assert (=> b!94946 (=> (not res!48059) (not e!61951))))

(declare-fun bm!9538 () Bool)

(declare-fun call!9544 () Bool)

(assert (=> bm!9538 (= call!9544 (contains!789 lt!47296 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94947 () Bool)

(assert (=> b!94947 (= e!61951 (= (apply!90 lt!47296 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!94948 () Bool)

(declare-fun e!61958 () Bool)

(assert (=> b!94948 (= e!61958 e!61954)))

(declare-fun res!48066 () Bool)

(assert (=> b!94948 (=> (not res!48066) (not e!61954))))

(assert (=> b!94948 (= res!48066 (contains!789 lt!47296 (select (arr!1997 lt!47056) #b00000000000000000000000000000000)))))

(assert (=> b!94948 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 lt!47056)))))

(declare-fun b!94949 () Bool)

(declare-fun e!61953 () Bool)

(declare-fun e!61956 () Bool)

(assert (=> b!94949 (= e!61953 e!61956)))

(declare-fun c!15889 () Bool)

(assert (=> b!94949 (= c!15889 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94950 () Bool)

(assert (=> b!94950 (= e!61955 (not call!9542))))

(declare-fun b!94951 () Bool)

(declare-fun e!61952 () Unit!2798)

(declare-fun Unit!2832 () Unit!2798)

(assert (=> b!94951 (= e!61952 Unit!2832)))

(declare-fun b!94952 () Bool)

(assert (=> b!94952 (= e!61956 (not call!9544))))

(declare-fun b!94942 () Bool)

(declare-fun e!61959 () ListLongMap!1521)

(declare-fun call!9545 () ListLongMap!1521)

(assert (=> b!94942 (= e!61959 (+!133 call!9545 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!24923 () Bool)

(assert (=> d!24923 e!61953))

(declare-fun res!48061 () Bool)

(assert (=> d!24923 (=> (not res!48061) (not e!61953))))

(assert (=> d!24923 (= res!48061 (or (bvsge #b00000000000000000000000000000000 (size!2245 lt!47056)) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 lt!47056)))))))

(declare-fun lt!47297 () ListLongMap!1521)

(assert (=> d!24923 (= lt!47296 lt!47297)))

(declare-fun lt!47295 () Unit!2798)

(assert (=> d!24923 (= lt!47295 e!61952)))

(declare-fun c!15887 () Bool)

(assert (=> d!24923 (= c!15887 e!61960)))

(declare-fun res!48058 () Bool)

(assert (=> d!24923 (=> (not res!48058) (not e!61960))))

(assert (=> d!24923 (= res!48058 (bvslt #b00000000000000000000000000000000 (size!2245 lt!47056)))))

(assert (=> d!24923 (= lt!47297 e!61959)))

(declare-fun c!15888 () Bool)

(assert (=> d!24923 (= c!15888 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!24923 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24923 (= (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47296)))

(declare-fun b!94953 () Bool)

(declare-fun e!61962 () ListLongMap!1521)

(declare-fun call!9541 () ListLongMap!1521)

(assert (=> b!94953 (= e!61962 call!9541)))

(declare-fun b!94954 () Bool)

(declare-fun e!61961 () Bool)

(assert (=> b!94954 (= e!61961 (validKeyInArray!0 (select (arr!1997 lt!47056) #b00000000000000000000000000000000)))))

(declare-fun b!94955 () Bool)

(declare-fun e!61957 () ListLongMap!1521)

(declare-fun call!9543 () ListLongMap!1521)

(assert (=> b!94955 (= e!61957 call!9543)))

(declare-fun b!94956 () Bool)

(declare-fun res!48064 () Bool)

(assert (=> b!94956 (=> (not res!48064) (not e!61953))))

(assert (=> b!94956 (= res!48064 e!61958)))

(declare-fun res!48065 () Bool)

(assert (=> b!94956 (=> res!48065 e!61958)))

(assert (=> b!94956 (= res!48065 (not e!61961))))

(declare-fun res!48063 () Bool)

(assert (=> b!94956 (=> (not res!48063) (not e!61961))))

(assert (=> b!94956 (= res!48063 (bvslt #b00000000000000000000000000000000 (size!2245 lt!47056)))))

(declare-fun b!94957 () Bool)

(declare-fun lt!47285 () Unit!2798)

(assert (=> b!94957 (= e!61952 lt!47285)))

(declare-fun lt!47292 () ListLongMap!1521)

(assert (=> b!94957 (= lt!47292 (getCurrentListMapNoExtraKeys!98 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47283 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47283 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47291 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47291 (select (arr!1997 lt!47056) #b00000000000000000000000000000000))))

(declare-fun lt!47289 () Unit!2798)

(assert (=> b!94957 (= lt!47289 (addStillContains!66 lt!47292 lt!47283 (zeroValue!2323 newMap!16) lt!47291))))

(assert (=> b!94957 (contains!789 (+!133 lt!47292 (tuple2!2311 lt!47283 (zeroValue!2323 newMap!16))) lt!47291)))

(declare-fun lt!47279 () Unit!2798)

(assert (=> b!94957 (= lt!47279 lt!47289)))

(declare-fun lt!47284 () ListLongMap!1521)

(assert (=> b!94957 (= lt!47284 (getCurrentListMapNoExtraKeys!98 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47290 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47290 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47278 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47278 (select (arr!1997 lt!47056) #b00000000000000000000000000000000))))

(declare-fun lt!47294 () Unit!2798)

(assert (=> b!94957 (= lt!47294 (addApplyDifferent!66 lt!47284 lt!47290 (minValue!2323 newMap!16) lt!47278))))

(assert (=> b!94957 (= (apply!90 (+!133 lt!47284 (tuple2!2311 lt!47290 (minValue!2323 newMap!16))) lt!47278) (apply!90 lt!47284 lt!47278))))

(declare-fun lt!47287 () Unit!2798)

(assert (=> b!94957 (= lt!47287 lt!47294)))

(declare-fun lt!47288 () ListLongMap!1521)

(assert (=> b!94957 (= lt!47288 (getCurrentListMapNoExtraKeys!98 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47280 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47280 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47293 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47293 (select (arr!1997 lt!47056) #b00000000000000000000000000000000))))

(declare-fun lt!47281 () Unit!2798)

(assert (=> b!94957 (= lt!47281 (addApplyDifferent!66 lt!47288 lt!47280 (zeroValue!2323 newMap!16) lt!47293))))

(assert (=> b!94957 (= (apply!90 (+!133 lt!47288 (tuple2!2311 lt!47280 (zeroValue!2323 newMap!16))) lt!47293) (apply!90 lt!47288 lt!47293))))

(declare-fun lt!47277 () Unit!2798)

(assert (=> b!94957 (= lt!47277 lt!47281)))

(declare-fun lt!47286 () ListLongMap!1521)

(assert (=> b!94957 (= lt!47286 (getCurrentListMapNoExtraKeys!98 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47282 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47282 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47276 () (_ BitVec 64))

(assert (=> b!94957 (= lt!47276 (select (arr!1997 lt!47056) #b00000000000000000000000000000000))))

(assert (=> b!94957 (= lt!47285 (addApplyDifferent!66 lt!47286 lt!47282 (minValue!2323 newMap!16) lt!47276))))

(assert (=> b!94957 (= (apply!90 (+!133 lt!47286 (tuple2!2311 lt!47282 (minValue!2323 newMap!16))) lt!47276) (apply!90 lt!47286 lt!47276))))

(declare-fun b!94958 () Bool)

(declare-fun c!15886 () Bool)

(assert (=> b!94958 (= c!15886 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!94958 (= e!61957 e!61962)))

(declare-fun bm!9539 () Bool)

(assert (=> bm!9539 (= call!9542 (contains!789 lt!47296 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94959 () Bool)

(assert (=> b!94959 (= e!61962 call!9543)))

(declare-fun c!15885 () Bool)

(declare-fun call!9546 () ListLongMap!1521)

(declare-fun call!9547 () ListLongMap!1521)

(declare-fun bm!9540 () Bool)

(assert (=> bm!9540 (= call!9545 (+!133 (ite c!15888 call!9547 (ite c!15885 call!9546 call!9541)) (ite (or c!15888 c!15885) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9541 () Bool)

(assert (=> bm!9541 (= call!9546 call!9547)))

(declare-fun b!94960 () Bool)

(declare-fun res!48060 () Bool)

(assert (=> b!94960 (=> (not res!48060) (not e!61953))))

(assert (=> b!94960 (= res!48060 e!61955)))

(declare-fun c!15884 () Bool)

(assert (=> b!94960 (= c!15884 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9542 () Bool)

(assert (=> bm!9542 (= call!9547 (getCurrentListMapNoExtraKeys!98 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9543 () Bool)

(assert (=> bm!9543 (= call!9541 call!9546)))

(declare-fun b!94961 () Bool)

(assert (=> b!94961 (= e!61959 e!61957)))

(assert (=> b!94961 (= c!15885 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!94962 () Bool)

(assert (=> b!94962 (= e!61956 e!61950)))

(declare-fun res!48062 () Bool)

(assert (=> b!94962 (= res!48062 call!9544)))

(assert (=> b!94962 (=> (not res!48062) (not e!61950))))

(declare-fun bm!9544 () Bool)

(assert (=> bm!9544 (= call!9543 call!9545)))

(assert (= (and d!24923 c!15888) b!94942))

(assert (= (and d!24923 (not c!15888)) b!94961))

(assert (= (and b!94961 c!15885) b!94955))

(assert (= (and b!94961 (not c!15885)) b!94958))

(assert (= (and b!94958 c!15886) b!94959))

(assert (= (and b!94958 (not c!15886)) b!94953))

(assert (= (or b!94959 b!94953) bm!9543))

(assert (= (or b!94955 bm!9543) bm!9541))

(assert (= (or b!94955 b!94959) bm!9544))

(assert (= (or b!94942 bm!9541) bm!9542))

(assert (= (or b!94942 bm!9544) bm!9540))

(assert (= (and d!24923 res!48058) b!94945))

(assert (= (and d!24923 c!15887) b!94957))

(assert (= (and d!24923 (not c!15887)) b!94951))

(assert (= (and d!24923 res!48061) b!94956))

(assert (= (and b!94956 res!48063) b!94954))

(assert (= (and b!94956 (not res!48065)) b!94948))

(assert (= (and b!94948 res!48066) b!94944))

(assert (= (and b!94956 res!48064) b!94960))

(assert (= (and b!94960 c!15884) b!94946))

(assert (= (and b!94960 (not c!15884)) b!94950))

(assert (= (and b!94946 res!48059) b!94947))

(assert (= (or b!94946 b!94950) bm!9539))

(assert (= (and b!94960 res!48060) b!94949))

(assert (= (and b!94949 c!15889) b!94962))

(assert (= (and b!94949 (not c!15889)) b!94952))

(assert (= (and b!94962 res!48062) b!94943))

(assert (= (or b!94962 b!94952) bm!9538))

(declare-fun b_lambda!4185 () Bool)

(assert (=> (not b_lambda!4185) (not b!94944)))

(assert (=> b!94944 t!5479))

(declare-fun b_and!5803 () Bool)

(assert (= b_and!5799 (and (=> t!5479 result!3201) b_and!5803)))

(assert (=> b!94944 t!5481))

(declare-fun b_and!5805 () Bool)

(assert (= b_and!5801 (and (=> t!5481 result!3203) b_and!5805)))

(declare-fun m!102773 () Bool)

(assert (=> b!94942 m!102773))

(assert (=> d!24923 m!101603))

(declare-fun m!102775 () Bool)

(assert (=> b!94943 m!102775))

(declare-fun m!102777 () Bool)

(assert (=> b!94947 m!102777))

(declare-fun m!102779 () Bool)

(assert (=> bm!9540 m!102779))

(declare-fun m!102781 () Bool)

(assert (=> bm!9542 m!102781))

(declare-fun m!102783 () Bool)

(assert (=> b!94948 m!102783))

(assert (=> b!94948 m!102783))

(declare-fun m!102785 () Bool)

(assert (=> b!94948 m!102785))

(declare-fun m!102787 () Bool)

(assert (=> bm!9538 m!102787))

(assert (=> b!94945 m!102783))

(assert (=> b!94945 m!102783))

(declare-fun m!102789 () Bool)

(assert (=> b!94945 m!102789))

(assert (=> b!94944 m!102783))

(assert (=> b!94944 m!101697))

(declare-fun m!102791 () Bool)

(assert (=> b!94944 m!102791))

(assert (=> b!94944 m!102791))

(assert (=> b!94944 m!101697))

(declare-fun m!102793 () Bool)

(assert (=> b!94944 m!102793))

(assert (=> b!94944 m!102783))

(declare-fun m!102795 () Bool)

(assert (=> b!94944 m!102795))

(assert (=> b!94954 m!102783))

(assert (=> b!94954 m!102783))

(assert (=> b!94954 m!102789))

(declare-fun m!102797 () Bool)

(assert (=> b!94957 m!102797))

(assert (=> b!94957 m!102783))

(declare-fun m!102799 () Bool)

(assert (=> b!94957 m!102799))

(declare-fun m!102801 () Bool)

(assert (=> b!94957 m!102801))

(declare-fun m!102803 () Bool)

(assert (=> b!94957 m!102803))

(declare-fun m!102805 () Bool)

(assert (=> b!94957 m!102805))

(assert (=> b!94957 m!102803))

(declare-fun m!102807 () Bool)

(assert (=> b!94957 m!102807))

(declare-fun m!102809 () Bool)

(assert (=> b!94957 m!102809))

(declare-fun m!102811 () Bool)

(assert (=> b!94957 m!102811))

(declare-fun m!102813 () Bool)

(assert (=> b!94957 m!102813))

(declare-fun m!102815 () Bool)

(assert (=> b!94957 m!102815))

(assert (=> b!94957 m!102797))

(declare-fun m!102817 () Bool)

(assert (=> b!94957 m!102817))

(declare-fun m!102819 () Bool)

(assert (=> b!94957 m!102819))

(declare-fun m!102821 () Bool)

(assert (=> b!94957 m!102821))

(assert (=> b!94957 m!102813))

(declare-fun m!102823 () Bool)

(assert (=> b!94957 m!102823))

(assert (=> b!94957 m!102781))

(declare-fun m!102825 () Bool)

(assert (=> b!94957 m!102825))

(assert (=> b!94957 m!102819))

(declare-fun m!102827 () Bool)

(assert (=> bm!9539 m!102827))

(assert (=> d!24739 d!24923))

(declare-fun d!24925 () Bool)

(declare-fun e!61963 () Bool)

(assert (=> d!24925 e!61963))

(declare-fun res!48067 () Bool)

(assert (=> d!24925 (=> (not res!48067) (not e!61963))))

(assert (=> d!24925 (= res!48067 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 lt!47056))))))

(declare-fun lt!47298 () Unit!2798)

(assert (=> d!24925 (= lt!47298 (choose!565 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24925 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24925 (= (lemmaValidKeyInArrayIsInListMap!100 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (defaultEntry!2436 newMap!16)) lt!47298)))

(declare-fun b!94963 () Bool)

(assert (=> b!94963 (= e!61963 (contains!789 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 lt!47056) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(assert (= (and d!24925 res!48067) b!94963))

(declare-fun m!102829 () Bool)

(assert (=> d!24925 m!102829))

(assert (=> d!24925 m!101603))

(assert (=> b!94963 m!102107))

(declare-fun m!102831 () Bool)

(assert (=> b!94963 m!102831))

(assert (=> b!94963 m!102107))

(assert (=> b!94963 m!102831))

(declare-fun m!102833 () Bool)

(assert (=> b!94963 m!102833))

(assert (=> d!24739 d!24925))

(declare-fun d!24927 () Bool)

(declare-fun e!61965 () Bool)

(assert (=> d!24927 e!61965))

(declare-fun res!48068 () Bool)

(assert (=> d!24927 (=> res!48068 e!61965)))

(declare-fun lt!47302 () Bool)

(assert (=> d!24927 (= res!48068 (not lt!47302))))

(declare-fun lt!47299 () Bool)

(assert (=> d!24927 (= lt!47302 lt!47299)))

(declare-fun lt!47301 () Unit!2798)

(declare-fun e!61964 () Unit!2798)

(assert (=> d!24927 (= lt!47301 e!61964)))

(declare-fun c!15890 () Bool)

(assert (=> d!24927 (= c!15890 lt!47299)))

(assert (=> d!24927 (= lt!47299 (containsKey!152 (toList!776 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(assert (=> d!24927 (= (contains!789 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))) lt!47302)))

(declare-fun b!94964 () Bool)

(declare-fun lt!47300 () Unit!2798)

(assert (=> b!94964 (= e!61964 lt!47300)))

(assert (=> b!94964 (= lt!47300 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(assert (=> b!94964 (isDefined!101 (getValueByKey!148 (toList!776 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(declare-fun b!94965 () Bool)

(declare-fun Unit!2833 () Unit!2798)

(assert (=> b!94965 (= e!61964 Unit!2833)))

(declare-fun b!94966 () Bool)

(assert (=> b!94966 (= e!61965 (isDefined!101 (getValueByKey!148 (toList!776 (getCurrentListMap!468 lt!47056 lt!47049 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))))

(assert (= (and d!24927 c!15890) b!94964))

(assert (= (and d!24927 (not c!15890)) b!94965))

(assert (= (and d!24927 (not res!48068)) b!94966))

(assert (=> d!24927 m!102095))

(declare-fun m!102835 () Bool)

(assert (=> d!24927 m!102835))

(assert (=> b!94964 m!102095))

(declare-fun m!102837 () Bool)

(assert (=> b!94964 m!102837))

(assert (=> b!94964 m!102095))

(declare-fun m!102839 () Bool)

(assert (=> b!94964 m!102839))

(assert (=> b!94964 m!102839))

(declare-fun m!102841 () Bool)

(assert (=> b!94964 m!102841))

(assert (=> b!94966 m!102095))

(assert (=> b!94966 m!102839))

(assert (=> b!94966 m!102839))

(assert (=> b!94966 m!102841))

(assert (=> d!24739 d!24927))

(declare-fun d!24929 () Bool)

(declare-fun res!48069 () Bool)

(declare-fun e!61966 () Bool)

(assert (=> d!24929 (=> res!48069 e!61966)))

(assert (=> d!24929 (= res!48069 (bvsge #b00000000000000000000000000000000 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(assert (=> d!24929 (= (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (mask!6511 newMap!16)) e!61966)))

(declare-fun b!94967 () Bool)

(declare-fun e!61968 () Bool)

(declare-fun call!9548 () Bool)

(assert (=> b!94967 (= e!61968 call!9548)))

(declare-fun b!94968 () Bool)

(declare-fun e!61967 () Bool)

(assert (=> b!94968 (= e!61967 e!61968)))

(declare-fun lt!47303 () (_ BitVec 64))

(assert (=> b!94968 (= lt!47303 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000))))

(declare-fun lt!47305 () Unit!2798)

(assert (=> b!94968 (= lt!47305 (lemmaArrayContainsFromImpliesContainsFromZero!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) lt!47303 #b00000000000000000000000000000000))))

(assert (=> b!94968 (arrayContainsKey!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) lt!47303 #b00000000000000000000000000000000)))

(declare-fun lt!47304 () Unit!2798)

(assert (=> b!94968 (= lt!47304 lt!47305)))

(declare-fun res!48070 () Bool)

(assert (=> b!94968 (= res!48070 (= (seekEntryOrOpen!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000) (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (mask!6511 newMap!16)) (Found!251 #b00000000000000000000000000000000)))))

(assert (=> b!94968 (=> (not res!48070) (not e!61968))))

(declare-fun b!94969 () Bool)

(assert (=> b!94969 (= e!61966 e!61967)))

(declare-fun c!15891 () Bool)

(assert (=> b!94969 (= c!15891 (validKeyInArray!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun bm!9545 () Bool)

(assert (=> bm!9545 (= call!9548 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (mask!6511 newMap!16)))))

(declare-fun b!94970 () Bool)

(assert (=> b!94970 (= e!61967 call!9548)))

(assert (= (and d!24929 (not res!48069)) b!94969))

(assert (= (and b!94969 c!15891) b!94968))

(assert (= (and b!94969 (not c!15891)) b!94970))

(assert (= (and b!94968 res!48070) b!94967))

(assert (= (or b!94967 b!94970) bm!9545))

(assert (=> b!94968 m!102717))

(declare-fun m!102843 () Bool)

(assert (=> b!94968 m!102843))

(declare-fun m!102845 () Bool)

(assert (=> b!94968 m!102845))

(assert (=> b!94968 m!102717))

(declare-fun m!102847 () Bool)

(assert (=> b!94968 m!102847))

(assert (=> b!94969 m!102717))

(assert (=> b!94969 m!102717))

(assert (=> b!94969 m!102723))

(declare-fun m!102849 () Bool)

(assert (=> bm!9545 m!102849))

(assert (=> d!24739 d!24929))

(declare-fun d!24931 () Bool)

(declare-fun e!61970 () Bool)

(assert (=> d!24931 e!61970))

(declare-fun res!48071 () Bool)

(assert (=> d!24931 (=> res!48071 e!61970)))

(declare-fun lt!47309 () Bool)

(assert (=> d!24931 (= res!48071 (not lt!47309))))

(declare-fun lt!47306 () Bool)

(assert (=> d!24931 (= lt!47309 lt!47306)))

(declare-fun lt!47308 () Unit!2798)

(declare-fun e!61969 () Unit!2798)

(assert (=> d!24931 (= lt!47308 e!61969)))

(declare-fun c!15892 () Bool)

(assert (=> d!24931 (= c!15892 lt!47306)))

(assert (=> d!24931 (= lt!47306 (containsKey!152 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24931 (= (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!47309)))

(declare-fun b!94971 () Bool)

(declare-fun lt!47307 () Unit!2798)

(assert (=> b!94971 (= e!61969 lt!47307)))

(assert (=> b!94971 (= lt!47307 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!94971 (isDefined!101 (getValueByKey!148 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!94972 () Bool)

(declare-fun Unit!2834 () Unit!2798)

(assert (=> b!94972 (= e!61969 Unit!2834)))

(declare-fun b!94973 () Bool)

(assert (=> b!94973 (= e!61970 (isDefined!101 (getValueByKey!148 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (= (and d!24931 c!15892) b!94971))

(assert (= (and d!24931 (not c!15892)) b!94972))

(assert (= (and d!24931 (not res!48071)) b!94973))

(assert (=> d!24931 m!101363))

(declare-fun m!102851 () Bool)

(assert (=> d!24931 m!102851))

(assert (=> b!94971 m!101363))

(declare-fun m!102853 () Bool)

(assert (=> b!94971 m!102853))

(assert (=> b!94971 m!101363))

(declare-fun m!102855 () Bool)

(assert (=> b!94971 m!102855))

(assert (=> b!94971 m!102855))

(declare-fun m!102857 () Bool)

(assert (=> b!94971 m!102857))

(assert (=> b!94973 m!101363))

(assert (=> b!94973 m!102855))

(assert (=> b!94973 m!102855))

(assert (=> b!94973 m!102857))

(assert (=> d!24739 d!24931))

(declare-fun d!24933 () Bool)

(assert (=> d!24933 (= (arrayCountValidKeys!0 lt!47043 (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (bvadd (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000001)) #b00000000000000000000000000000001)))

(declare-fun lt!47312 () Unit!2798)

(declare-fun choose!2 (array!4201 (_ BitVec 32)) Unit!2798)

(assert (=> d!24933 (= lt!47312 (choose!2 lt!47043 (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))))))

(declare-fun e!61973 () Bool)

(assert (=> d!24933 e!61973))

(declare-fun res!48076 () Bool)

(assert (=> d!24933 (=> (not res!48076) (not e!61973))))

(assert (=> d!24933 (= res!48076 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 lt!47043))))))

(assert (=> d!24933 (= (lemmaValidKeyAtIImpliesCountKeysIsOne!0 lt!47043 (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675))) lt!47312)))

(declare-fun b!94978 () Bool)

(declare-fun res!48077 () Bool)

(assert (=> b!94978 (=> (not res!48077) (not e!61973))))

(assert (=> b!94978 (= res!48077 (validKeyInArray!0 (select (arr!1997 lt!47043) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)))))))

(declare-fun b!94979 () Bool)

(assert (=> b!94979 (= e!61973 (bvslt (size!2245 lt!47043) #b01111111111111111111111111111111))))

(assert (= (and d!24933 res!48076) b!94978))

(assert (= (and b!94978 res!48077) b!94979))

(assert (=> d!24933 m!102099))

(declare-fun m!102859 () Bool)

(assert (=> d!24933 m!102859))

(assert (=> b!94978 m!102767))

(assert (=> b!94978 m!102767))

(assert (=> b!94978 m!102769))

(assert (=> d!24739 d!24933))

(declare-fun d!24935 () Bool)

(declare-fun e!61976 () Bool)

(assert (=> d!24935 e!61976))

(declare-fun res!48080 () Bool)

(assert (=> d!24935 (=> (not res!48080) (not e!61976))))

(assert (=> d!24935 (= res!48080 (and (bvsge (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) #b00000000000000000000000000000000) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2245 (_keys!4118 newMap!16))) (bvslt (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (size!2246 (_values!2419 newMap!16)))))))

(declare-fun lt!47315 () Unit!2798)

(declare-fun choose!571 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 32) (_ BitVec 64) V!3131 Int) Unit!2798)

(assert (=> d!24935 (= lt!47315 (choose!571 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)))))

(assert (=> d!24935 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!24935 (= (lemmaAddValidKeyToArrayThenAddPairToListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) lt!47315)))

(declare-fun b!94982 () Bool)

(assert (=> b!94982 (= e!61976 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))))))

(assert (= (and d!24935 res!48080) b!94982))

(assert (=> d!24935 m!101363))

(assert (=> d!24935 m!101361))

(declare-fun m!102861 () Bool)

(assert (=> d!24935 m!102861))

(assert (=> d!24935 m!101603))

(assert (=> b!94982 m!102103))

(assert (=> b!94982 m!102111))

(assert (=> b!94982 m!102109))

(assert (=> b!94982 m!101465))

(assert (=> b!94982 m!101465))

(assert (=> b!94982 m!101925))

(assert (=> d!24739 d!24935))

(declare-fun lt!47316 () (_ BitVec 32))

(declare-fun d!24937 () Bool)

(assert (=> d!24937 (and (bvsge lt!47316 #b00000000000000000000000000000000) (bvsle lt!47316 (bvsub (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(declare-fun e!61977 () (_ BitVec 32))

(assert (=> d!24937 (= lt!47316 e!61977)))

(declare-fun c!15893 () Bool)

(assert (=> d!24937 (= c!15893 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24937 (and (bvsle #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2245 (_keys!4118 newMap!16)) (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(assert (=> d!24937 (= (arrayCountValidKeys!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) lt!47316)))

(declare-fun b!94983 () Bool)

(declare-fun e!61978 () (_ BitVec 32))

(declare-fun call!9549 () (_ BitVec 32))

(assert (=> b!94983 (= e!61978 call!9549)))

(declare-fun bm!9546 () Bool)

(assert (=> bm!9546 (= call!9549 (arrayCountValidKeys!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!94984 () Bool)

(assert (=> b!94984 (= e!61977 #b00000000000000000000000000000000)))

(declare-fun b!94985 () Bool)

(assert (=> b!94985 (= e!61978 (bvadd #b00000000000000000000000000000001 call!9549))))

(declare-fun b!94986 () Bool)

(assert (=> b!94986 (= e!61977 e!61978)))

(declare-fun c!15894 () Bool)

(assert (=> b!94986 (= c!15894 (validKeyInArray!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) #b00000000000000000000000000000000)))))

(assert (= (and d!24937 c!15893) b!94984))

(assert (= (and d!24937 (not c!15893)) b!94986))

(assert (= (and b!94986 c!15894) b!94985))

(assert (= (and b!94986 (not c!15894)) b!94983))

(assert (= (or b!94985 b!94983) bm!9546))

(declare-fun m!102863 () Bool)

(assert (=> bm!9546 m!102863))

(assert (=> b!94986 m!102717))

(assert (=> b!94986 m!102717))

(assert (=> b!94986 m!102723))

(assert (=> d!24739 d!24937))

(declare-fun b!94987 () Bool)

(declare-fun e!61982 () Bool)

(declare-fun e!61981 () Bool)

(assert (=> b!94987 (= e!61982 e!61981)))

(declare-fun c!15895 () Bool)

(assert (=> b!94987 (= c!15895 (validKeyInArray!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) lt!47064)))))

(declare-fun b!94988 () Bool)

(declare-fun call!9550 () Bool)

(assert (=> b!94988 (= e!61981 call!9550)))

(declare-fun b!94989 () Bool)

(assert (=> b!94989 (= e!61981 call!9550)))

(declare-fun bm!9547 () Bool)

(assert (=> bm!9547 (= call!9550 (arrayNoDuplicates!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) (bvadd lt!47064 #b00000000000000000000000000000001) (ite c!15895 (Cons!1564 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) lt!47064) lt!47048) lt!47048)))))

(declare-fun b!94990 () Bool)

(declare-fun e!61980 () Bool)

(assert (=> b!94990 (= e!61980 e!61982)))

(declare-fun res!48083 () Bool)

(assert (=> b!94990 (=> (not res!48083) (not e!61982))))

(declare-fun e!61979 () Bool)

(assert (=> b!94990 (= res!48083 (not e!61979))))

(declare-fun res!48081 () Bool)

(assert (=> b!94990 (=> (not res!48081) (not e!61979))))

(assert (=> b!94990 (= res!48081 (validKeyInArray!0 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) lt!47064)))))

(declare-fun b!94991 () Bool)

(assert (=> b!94991 (= e!61979 (contains!791 lt!47048 (select (arr!1997 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16)))) lt!47064)))))

(declare-fun d!24939 () Bool)

(declare-fun res!48082 () Bool)

(assert (=> d!24939 (=> res!48082 e!61980)))

(assert (=> d!24939 (= res!48082 (bvsge lt!47064 (size!2245 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))))))))

(assert (=> d!24939 (= (arrayNoDuplicates!0 (array!4202 (store (arr!1997 (_keys!4118 newMap!16)) (ite c!15699 (index!3148 lt!46675) (index!3145 lt!46675)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (size!2245 (_keys!4118 newMap!16))) lt!47064 lt!47048) e!61980)))

(assert (= (and d!24939 (not res!48082)) b!94990))

(assert (= (and b!94990 res!48081) b!94991))

(assert (= (and b!94990 res!48083) b!94987))

(assert (= (and b!94987 c!15895) b!94988))

(assert (= (and b!94987 (not c!15895)) b!94989))

(assert (= (or b!94988 b!94989) bm!9547))

(declare-fun m!102865 () Bool)

(assert (=> b!94987 m!102865))

(assert (=> b!94987 m!102865))

(declare-fun m!102867 () Bool)

(assert (=> b!94987 m!102867))

(assert (=> bm!9547 m!102865))

(declare-fun m!102869 () Bool)

(assert (=> bm!9547 m!102869))

(assert (=> b!94990 m!102865))

(assert (=> b!94990 m!102865))

(assert (=> b!94990 m!102867))

(assert (=> b!94991 m!102865))

(assert (=> b!94991 m!102865))

(declare-fun m!102871 () Bool)

(assert (=> b!94991 m!102871))

(assert (=> d!24739 d!24939))

(declare-fun d!24941 () Bool)

(declare-fun c!15896 () Bool)

(assert (=> d!24941 (= c!15896 (and ((_ is Cons!1565) (toList!776 lt!46838)) (= (_1!1166 (h!2157 (toList!776 lt!46838))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun e!61983 () Option!154)

(assert (=> d!24941 (= (getValueByKey!148 (toList!776 lt!46838) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) e!61983)))

(declare-fun b!94994 () Bool)

(declare-fun e!61984 () Option!154)

(assert (=> b!94994 (= e!61984 (getValueByKey!148 (t!5471 (toList!776 lt!46838)) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun b!94995 () Bool)

(assert (=> b!94995 (= e!61984 None!152)))

(declare-fun b!94993 () Bool)

(assert (=> b!94993 (= e!61983 e!61984)))

(declare-fun c!15897 () Bool)

(assert (=> b!94993 (= c!15897 (and ((_ is Cons!1565) (toList!776 lt!46838)) (not (= (_1!1166 (h!2157 (toList!776 lt!46838))) (_1!1166 (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(declare-fun b!94992 () Bool)

(assert (=> b!94992 (= e!61983 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46838)))))))

(assert (= (and d!24941 c!15896) b!94992))

(assert (= (and d!24941 (not c!15896)) b!94993))

(assert (= (and b!94993 c!15897) b!94994))

(assert (= (and b!94993 (not c!15897)) b!94995))

(declare-fun m!102873 () Bool)

(assert (=> b!94994 m!102873))

(assert (=> b!94457 d!24941))

(declare-fun d!24943 () Bool)

(declare-fun e!61986 () Bool)

(assert (=> d!24943 e!61986))

(declare-fun res!48084 () Bool)

(assert (=> d!24943 (=> res!48084 e!61986)))

(declare-fun lt!47320 () Bool)

(assert (=> d!24943 (= res!48084 (not lt!47320))))

(declare-fun lt!47317 () Bool)

(assert (=> d!24943 (= lt!47320 lt!47317)))

(declare-fun lt!47319 () Unit!2798)

(declare-fun e!61985 () Unit!2798)

(assert (=> d!24943 (= lt!47319 e!61985)))

(declare-fun c!15898 () Bool)

(assert (=> d!24943 (= c!15898 lt!47317)))

(assert (=> d!24943 (= lt!47317 (containsKey!152 (toList!776 lt!46970) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24943 (= (contains!789 lt!46970 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47320)))

(declare-fun b!94996 () Bool)

(declare-fun lt!47318 () Unit!2798)

(assert (=> b!94996 (= e!61985 lt!47318)))

(assert (=> b!94996 (= lt!47318 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46970) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94996 (isDefined!101 (getValueByKey!148 (toList!776 lt!46970) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!94997 () Bool)

(declare-fun Unit!2835 () Unit!2798)

(assert (=> b!94997 (= e!61985 Unit!2835)))

(declare-fun b!94998 () Bool)

(assert (=> b!94998 (= e!61986 (isDefined!101 (getValueByKey!148 (toList!776 lt!46970) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24943 c!15898) b!94996))

(assert (= (and d!24943 (not c!15898)) b!94997))

(assert (= (and d!24943 (not res!48084)) b!94998))

(declare-fun m!102875 () Bool)

(assert (=> d!24943 m!102875))

(declare-fun m!102877 () Bool)

(assert (=> b!94996 m!102877))

(assert (=> b!94996 m!102675))

(assert (=> b!94996 m!102675))

(declare-fun m!102879 () Bool)

(assert (=> b!94996 m!102879))

(assert (=> b!94998 m!102675))

(assert (=> b!94998 m!102675))

(assert (=> b!94998 m!102879))

(assert (=> bm!9491 d!24943))

(declare-fun d!24945 () Bool)

(assert (=> d!24945 (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))

(assert (=> d!24945 true))

(declare-fun _$16!111 () Unit!2798)

(assert (=> d!24945 (= (choose!565 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (defaultEntry!2436 newMap!16)) _$16!111)))

(declare-fun bs!3913 () Bool)

(assert (= bs!3913 d!24945))

(assert (=> bs!3913 m!101919))

(assert (=> bs!3913 m!101489))

(assert (=> bs!3913 m!101919))

(assert (=> bs!3913 m!101489))

(assert (=> bs!3913 m!101921))

(assert (=> d!24711 d!24945))

(assert (=> d!24711 d!24887))

(assert (=> b!94487 d!24749))

(declare-fun d!24947 () Bool)

(declare-fun res!48085 () Bool)

(declare-fun e!61987 () Bool)

(assert (=> d!24947 (=> res!48085 e!61987)))

(assert (=> d!24947 (= res!48085 (= (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24947 (= (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) e!61987)))

(declare-fun b!94999 () Bool)

(declare-fun e!61988 () Bool)

(assert (=> b!94999 (= e!61987 e!61988)))

(declare-fun res!48086 () Bool)

(assert (=> b!94999 (=> (not res!48086) (not e!61988))))

(assert (=> b!94999 (= res!48086 (bvslt (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95000 () Bool)

(assert (=> b!95000 (= e!61988 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!24947 (not res!48085)) b!94999))

(assert (= (and b!94999 res!48086) b!95000))

(declare-fun m!102881 () Bool)

(assert (=> d!24947 m!102881))

(assert (=> b!95000 m!101363))

(declare-fun m!102883 () Bool)

(assert (=> b!95000 m!102883))

(assert (=> b!94585 d!24947))

(declare-fun d!24949 () Bool)

(declare-fun res!48087 () Bool)

(declare-fun e!61989 () Bool)

(assert (=> d!24949 (=> res!48087 e!61989)))

(assert (=> d!24949 (= res!48087 (and ((_ is Cons!1565) (toList!776 call!9435)) (= (_1!1166 (h!2157 (toList!776 call!9435))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))))

(assert (=> d!24949 (= (containsKey!152 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))) e!61989)))

(declare-fun b!95001 () Bool)

(declare-fun e!61990 () Bool)

(assert (=> b!95001 (= e!61989 e!61990)))

(declare-fun res!48088 () Bool)

(assert (=> b!95001 (=> (not res!48088) (not e!61990))))

(assert (=> b!95001 (= res!48088 (and (or (not ((_ is Cons!1565) (toList!776 call!9435))) (bvsle (_1!1166 (h!2157 (toList!776 call!9435))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))) ((_ is Cons!1565) (toList!776 call!9435)) (bvslt (_1!1166 (h!2157 (toList!776 call!9435))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))))

(declare-fun b!95002 () Bool)

(assert (=> b!95002 (= e!61990 (containsKey!152 (t!5471 (toList!776 call!9435)) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (= (and d!24949 (not res!48087)) b!95001))

(assert (= (and b!95001 res!48088) b!95002))

(assert (=> b!95002 m!101489))

(declare-fun m!102885 () Bool)

(assert (=> b!95002 m!102885))

(assert (=> d!24709 d!24949))

(declare-fun d!24951 () Bool)

(declare-fun e!61992 () Bool)

(assert (=> d!24951 e!61992))

(declare-fun res!48089 () Bool)

(assert (=> d!24951 (=> res!48089 e!61992)))

(declare-fun lt!47324 () Bool)

(assert (=> d!24951 (= res!48089 (not lt!47324))))

(declare-fun lt!47321 () Bool)

(assert (=> d!24951 (= lt!47324 lt!47321)))

(declare-fun lt!47323 () Unit!2798)

(declare-fun e!61991 () Unit!2798)

(assert (=> d!24951 (= lt!47323 e!61991)))

(declare-fun c!15899 () Bool)

(assert (=> d!24951 (= c!15899 lt!47321)))

(assert (=> d!24951 (= lt!47321 (containsKey!152 (toList!776 lt!46970) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24951 (= (contains!789 lt!46970 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47324)))

(declare-fun b!95003 () Bool)

(declare-fun lt!47322 () Unit!2798)

(assert (=> b!95003 (= e!61991 lt!47322)))

(assert (=> b!95003 (= lt!47322 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46970) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95003 (isDefined!101 (getValueByKey!148 (toList!776 lt!46970) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95004 () Bool)

(declare-fun Unit!2836 () Unit!2798)

(assert (=> b!95004 (= e!61991 Unit!2836)))

(declare-fun b!95005 () Bool)

(assert (=> b!95005 (= e!61992 (isDefined!101 (getValueByKey!148 (toList!776 lt!46970) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24951 c!15899) b!95003))

(assert (= (and d!24951 (not c!15899)) b!95004))

(assert (= (and d!24951 (not res!48089)) b!95005))

(declare-fun m!102887 () Bool)

(assert (=> d!24951 m!102887))

(declare-fun m!102889 () Bool)

(assert (=> b!95003 m!102889))

(declare-fun m!102891 () Bool)

(assert (=> b!95003 m!102891))

(assert (=> b!95003 m!102891))

(declare-fun m!102893 () Bool)

(assert (=> b!95003 m!102893))

(assert (=> b!95005 m!102891))

(assert (=> b!95005 m!102891))

(assert (=> b!95005 m!102893))

(assert (=> bm!9492 d!24951))

(declare-fun b!95006 () Bool)

(declare-fun e!61996 () Bool)

(declare-fun e!61995 () Bool)

(assert (=> b!95006 (= e!61996 e!61995)))

(declare-fun c!15900 () Bool)

(assert (=> b!95006 (= c!15900 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun b!95007 () Bool)

(declare-fun call!9551 () Bool)

(assert (=> b!95007 (= e!61995 call!9551)))

(declare-fun b!95008 () Bool)

(assert (=> b!95008 (= e!61995 call!9551)))

(declare-fun bm!9548 () Bool)

(assert (=> bm!9548 (= call!9551 (arrayNoDuplicates!0 (_keys!4118 (_2!1167 lt!46697)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15900 (Cons!1564 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000) Nil!1565) Nil!1565)))))

(declare-fun b!95009 () Bool)

(declare-fun e!61994 () Bool)

(assert (=> b!95009 (= e!61994 e!61996)))

(declare-fun res!48092 () Bool)

(assert (=> b!95009 (=> (not res!48092) (not e!61996))))

(declare-fun e!61993 () Bool)

(assert (=> b!95009 (= res!48092 (not e!61993))))

(declare-fun res!48090 () Bool)

(assert (=> b!95009 (=> (not res!48090) (not e!61993))))

(assert (=> b!95009 (= res!48090 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun b!95010 () Bool)

(assert (=> b!95010 (= e!61993 (contains!791 Nil!1565 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun d!24953 () Bool)

(declare-fun res!48091 () Bool)

(assert (=> d!24953 (=> res!48091 e!61994)))

(assert (=> d!24953 (= res!48091 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(assert (=> d!24953 (= (arrayNoDuplicates!0 (_keys!4118 (_2!1167 lt!46697)) #b00000000000000000000000000000000 Nil!1565) e!61994)))

(assert (= (and d!24953 (not res!48091)) b!95009))

(assert (= (and b!95009 res!48090) b!95010))

(assert (= (and b!95009 res!48092) b!95006))

(assert (= (and b!95006 c!15900) b!95007))

(assert (= (and b!95006 (not c!15900)) b!95008))

(assert (= (or b!95007 b!95008) bm!9548))

(assert (=> b!95006 m!102287))

(assert (=> b!95006 m!102287))

(assert (=> b!95006 m!102295))

(assert (=> bm!9548 m!102287))

(declare-fun m!102895 () Bool)

(assert (=> bm!9548 m!102895))

(assert (=> b!95009 m!102287))

(assert (=> b!95009 m!102287))

(assert (=> b!95009 m!102295))

(assert (=> b!95010 m!102287))

(assert (=> b!95010 m!102287))

(declare-fun m!102897 () Bool)

(assert (=> b!95010 m!102897))

(assert (=> b!94375 d!24953))

(declare-fun d!24955 () Bool)

(declare-fun e!61998 () Bool)

(assert (=> d!24955 e!61998))

(declare-fun res!48093 () Bool)

(assert (=> d!24955 (=> res!48093 e!61998)))

(declare-fun lt!47328 () Bool)

(assert (=> d!24955 (= res!48093 (not lt!47328))))

(declare-fun lt!47325 () Bool)

(assert (=> d!24955 (= lt!47328 lt!47325)))

(declare-fun lt!47327 () Unit!2798)

(declare-fun e!61997 () Unit!2798)

(assert (=> d!24955 (= lt!47327 e!61997)))

(declare-fun c!15901 () Bool)

(assert (=> d!24955 (= c!15901 lt!47325)))

(assert (=> d!24955 (= lt!47325 (containsKey!152 (toList!776 lt!46895) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24955 (= (contains!789 lt!46895 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47328)))

(declare-fun b!95011 () Bool)

(declare-fun lt!47326 () Unit!2798)

(assert (=> b!95011 (= e!61997 lt!47326)))

(assert (=> b!95011 (= lt!47326 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46895) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> b!95011 (isDefined!101 (getValueByKey!148 (toList!776 lt!46895) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95012 () Bool)

(declare-fun Unit!2837 () Unit!2798)

(assert (=> b!95012 (= e!61997 Unit!2837)))

(declare-fun b!95013 () Bool)

(assert (=> b!95013 (= e!61998 (isDefined!101 (getValueByKey!148 (toList!776 lt!46895) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!24955 c!15901) b!95011))

(assert (= (and d!24955 (not c!15901)) b!95012))

(assert (= (and d!24955 (not res!48093)) b!95013))

(declare-fun m!102899 () Bool)

(assert (=> d!24955 m!102899))

(declare-fun m!102901 () Bool)

(assert (=> b!95011 m!102901))

(assert (=> b!95011 m!101841))

(assert (=> b!95011 m!101841))

(declare-fun m!102903 () Bool)

(assert (=> b!95011 m!102903))

(assert (=> b!95013 m!101841))

(assert (=> b!95013 m!101841))

(assert (=> b!95013 m!102903))

(assert (=> d!24687 d!24955))

(declare-fun d!24957 () Bool)

(declare-fun c!15902 () Bool)

(assert (=> d!24957 (= c!15902 (and ((_ is Cons!1565) lt!46896) (= (_1!1166 (h!2157 lt!46896)) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!61999 () Option!154)

(assert (=> d!24957 (= (getValueByKey!148 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!61999)))

(declare-fun e!62000 () Option!154)

(declare-fun b!95016 () Bool)

(assert (=> b!95016 (= e!62000 (getValueByKey!148 (t!5471 lt!46896) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95017 () Bool)

(assert (=> b!95017 (= e!62000 None!152)))

(declare-fun b!95015 () Bool)

(assert (=> b!95015 (= e!61999 e!62000)))

(declare-fun c!15903 () Bool)

(assert (=> b!95015 (= c!15903 (and ((_ is Cons!1565) lt!46896) (not (= (_1!1166 (h!2157 lt!46896)) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95014 () Bool)

(assert (=> b!95014 (= e!61999 (Some!153 (_2!1166 (h!2157 lt!46896))))))

(assert (= (and d!24957 c!15902) b!95014))

(assert (= (and d!24957 (not c!15902)) b!95015))

(assert (= (and b!95015 c!15903) b!95016))

(assert (= (and b!95015 (not c!15903)) b!95017))

(declare-fun m!102905 () Bool)

(assert (=> b!95016 m!102905))

(assert (=> d!24687 d!24957))

(declare-fun d!24959 () Bool)

(assert (=> d!24959 (= (getValueByKey!148 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!47329 () Unit!2798)

(assert (=> d!24959 (= lt!47329 (choose!569 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun e!62001 () Bool)

(assert (=> d!24959 e!62001))

(declare-fun res!48094 () Bool)

(assert (=> d!24959 (=> (not res!48094) (not e!62001))))

(assert (=> d!24959 (= res!48094 (isStrictlySorted!302 lt!46896))))

(assert (=> d!24959 (= (lemmaContainsTupThenGetReturnValue!64 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47329)))

(declare-fun b!95018 () Bool)

(declare-fun res!48095 () Bool)

(assert (=> b!95018 (=> (not res!48095) (not e!62001))))

(assert (=> b!95018 (= res!48095 (containsKey!152 lt!46896 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95019 () Bool)

(assert (=> b!95019 (= e!62001 (contains!792 lt!46896 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!24959 res!48094) b!95018))

(assert (= (and b!95018 res!48095) b!95019))

(assert (=> d!24959 m!101835))

(declare-fun m!102907 () Bool)

(assert (=> d!24959 m!102907))

(declare-fun m!102909 () Bool)

(assert (=> d!24959 m!102909))

(declare-fun m!102911 () Bool)

(assert (=> b!95018 m!102911))

(declare-fun m!102913 () Bool)

(assert (=> b!95019 m!102913))

(assert (=> d!24687 d!24959))

(declare-fun c!15905 () Bool)

(declare-fun e!62004 () List!1569)

(declare-fun c!15907 () Bool)

(declare-fun b!95020 () Bool)

(assert (=> b!95020 (= e!62004 (ite c!15907 (t!5471 (toList!776 lt!46750)) (ite c!15905 (Cons!1565 (h!2157 (toList!776 lt!46750)) (t!5471 (toList!776 lt!46750))) Nil!1566)))))

(declare-fun b!95021 () Bool)

(declare-fun e!62003 () List!1569)

(declare-fun call!9552 () List!1569)

(assert (=> b!95021 (= e!62003 call!9552)))

(declare-fun bm!9549 () Bool)

(declare-fun call!9554 () List!1569)

(assert (=> bm!9549 (= call!9554 call!9552)))

(declare-fun b!95022 () Bool)

(assert (=> b!95022 (= c!15905 (and ((_ is Cons!1565) (toList!776 lt!46750)) (bvsgt (_1!1166 (h!2157 (toList!776 lt!46750))) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62006 () List!1569)

(declare-fun e!62002 () List!1569)

(assert (=> b!95022 (= e!62006 e!62002)))

(declare-fun b!95023 () Bool)

(declare-fun call!9553 () List!1569)

(assert (=> b!95023 (= e!62002 call!9553)))

(declare-fun b!95024 () Bool)

(assert (=> b!95024 (= e!62002 call!9553)))

(declare-fun b!95025 () Bool)

(assert (=> b!95025 (= e!62004 (insertStrictlySorted!67 (t!5471 (toList!776 lt!46750)) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95026 () Bool)

(declare-fun res!48096 () Bool)

(declare-fun e!62005 () Bool)

(assert (=> b!95026 (=> (not res!48096) (not e!62005))))

(declare-fun lt!47330 () List!1569)

(assert (=> b!95026 (= res!48096 (containsKey!152 lt!47330 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun bm!9550 () Bool)

(assert (=> bm!9550 (= call!9553 call!9554)))

(declare-fun b!95027 () Bool)

(assert (=> b!95027 (= e!62003 e!62006)))

(assert (=> b!95027 (= c!15907 (and ((_ is Cons!1565) (toList!776 lt!46750)) (= (_1!1166 (h!2157 (toList!776 lt!46750))) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun d!24961 () Bool)

(assert (=> d!24961 e!62005))

(declare-fun res!48097 () Bool)

(assert (=> d!24961 (=> (not res!48097) (not e!62005))))

(assert (=> d!24961 (= res!48097 (isStrictlySorted!302 lt!47330))))

(assert (=> d!24961 (= lt!47330 e!62003)))

(declare-fun c!15906 () Bool)

(assert (=> d!24961 (= c!15906 (and ((_ is Cons!1565) (toList!776 lt!46750)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46750))) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!24961 (isStrictlySorted!302 (toList!776 lt!46750))))

(assert (=> d!24961 (= (insertStrictlySorted!67 (toList!776 lt!46750) (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47330)))

(declare-fun b!95028 () Bool)

(assert (=> b!95028 (= e!62006 call!9554)))

(declare-fun bm!9551 () Bool)

(assert (=> bm!9551 (= call!9552 ($colon$colon!76 e!62004 (ite c!15906 (h!2157 (toList!776 lt!46750)) (tuple2!2311 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun c!15904 () Bool)

(assert (=> bm!9551 (= c!15904 c!15906)))

(declare-fun b!95029 () Bool)

(assert (=> b!95029 (= e!62005 (contains!792 lt!47330 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!24961 c!15906) b!95021))

(assert (= (and d!24961 (not c!15906)) b!95027))

(assert (= (and b!95027 c!15907) b!95028))

(assert (= (and b!95027 (not c!15907)) b!95022))

(assert (= (and b!95022 c!15905) b!95024))

(assert (= (and b!95022 (not c!15905)) b!95023))

(assert (= (or b!95024 b!95023) bm!9550))

(assert (= (or b!95028 bm!9550) bm!9549))

(assert (= (or b!95021 bm!9549) bm!9551))

(assert (= (and bm!9551 c!15904) b!95025))

(assert (= (and bm!9551 (not c!15904)) b!95020))

(assert (= (and d!24961 res!48097) b!95026))

(assert (= (and b!95026 res!48096) b!95029))

(declare-fun m!102915 () Bool)

(assert (=> b!95026 m!102915))

(declare-fun m!102917 () Bool)

(assert (=> bm!9551 m!102917))

(declare-fun m!102919 () Bool)

(assert (=> b!95029 m!102919))

(declare-fun m!102921 () Bool)

(assert (=> b!95025 m!102921))

(declare-fun m!102923 () Bool)

(assert (=> d!24961 m!102923))

(declare-fun m!102925 () Bool)

(assert (=> d!24961 m!102925))

(assert (=> d!24687 d!24961))

(assert (=> d!24651 d!24653))

(assert (=> d!24651 d!24655))

(declare-fun d!24963 () Bool)

(assert (=> d!24963 (isDefined!101 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!24963 true))

(declare-fun _$12!338 () Unit!2798)

(assert (=> d!24963 (= (choose!561 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) _$12!338)))

(declare-fun bs!3914 () Bool)

(assert (= bs!3914 d!24963))

(assert (=> bs!3914 m!101363))

(assert (=> bs!3914 m!101451))

(assert (=> bs!3914 m!101451))

(assert (=> bs!3914 m!101453))

(assert (=> d!24651 d!24963))

(declare-fun d!24965 () Bool)

(declare-fun res!48102 () Bool)

(declare-fun e!62011 () Bool)

(assert (=> d!24965 (=> res!48102 e!62011)))

(assert (=> d!24965 (= res!48102 (or ((_ is Nil!1566) (toList!776 lt!46578)) ((_ is Nil!1566) (t!5471 (toList!776 lt!46578)))))))

(assert (=> d!24965 (= (isStrictlySorted!302 (toList!776 lt!46578)) e!62011)))

(declare-fun b!95034 () Bool)

(declare-fun e!62012 () Bool)

(assert (=> b!95034 (= e!62011 e!62012)))

(declare-fun res!48103 () Bool)

(assert (=> b!95034 (=> (not res!48103) (not e!62012))))

(assert (=> b!95034 (= res!48103 (bvslt (_1!1166 (h!2157 (toList!776 lt!46578))) (_1!1166 (h!2157 (t!5471 (toList!776 lt!46578))))))))

(declare-fun b!95035 () Bool)

(assert (=> b!95035 (= e!62012 (isStrictlySorted!302 (t!5471 (toList!776 lt!46578))))))

(assert (= (and d!24965 (not res!48102)) b!95034))

(assert (= (and b!95034 res!48103) b!95035))

(declare-fun m!102927 () Bool)

(assert (=> b!95035 m!102927))

(assert (=> d!24651 d!24965))

(assert (=> b!94540 d!24635))

(assert (=> d!24705 d!24695))

(assert (=> d!24705 d!24699))

(declare-fun d!24967 () Bool)

(declare-fun e!62014 () Bool)

(assert (=> d!24967 e!62014))

(declare-fun res!48104 () Bool)

(assert (=> d!24967 (=> res!48104 e!62014)))

(declare-fun lt!47334 () Bool)

(assert (=> d!24967 (= res!48104 (not lt!47334))))

(declare-fun lt!47331 () Bool)

(assert (=> d!24967 (= lt!47334 lt!47331)))

(declare-fun lt!47333 () Unit!2798)

(declare-fun e!62013 () Unit!2798)

(assert (=> d!24967 (= lt!47333 e!62013)))

(declare-fun c!15908 () Bool)

(assert (=> d!24967 (= c!15908 lt!47331)))

(assert (=> d!24967 (= lt!47331 (containsKey!152 (toList!776 lt!46752) lt!46742))))

(assert (=> d!24967 (= (contains!789 lt!46752 lt!46742) lt!47334)))

(declare-fun b!95036 () Bool)

(declare-fun lt!47332 () Unit!2798)

(assert (=> b!95036 (= e!62013 lt!47332)))

(assert (=> b!95036 (= lt!47332 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46752) lt!46742))))

(assert (=> b!95036 (isDefined!101 (getValueByKey!148 (toList!776 lt!46752) lt!46742))))

(declare-fun b!95037 () Bool)

(declare-fun Unit!2838 () Unit!2798)

(assert (=> b!95037 (= e!62013 Unit!2838)))

(declare-fun b!95038 () Bool)

(assert (=> b!95038 (= e!62014 (isDefined!101 (getValueByKey!148 (toList!776 lt!46752) lt!46742)))))

(assert (= (and d!24967 c!15908) b!95036))

(assert (= (and d!24967 (not c!15908)) b!95037))

(assert (= (and d!24967 (not res!48104)) b!95038))

(declare-fun m!102929 () Bool)

(assert (=> d!24967 m!102929))

(declare-fun m!102931 () Bool)

(assert (=> b!95036 m!102931))

(assert (=> b!95036 m!101885))

(assert (=> b!95036 m!101885))

(declare-fun m!102933 () Bool)

(assert (=> b!95036 m!102933))

(assert (=> b!95038 m!101885))

(assert (=> b!95038 m!101885))

(assert (=> b!95038 m!102933))

(assert (=> d!24705 d!24967))

(assert (=> d!24705 d!24701))

(declare-fun d!24969 () Bool)

(assert (=> d!24969 (= (apply!90 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46742) (apply!90 lt!46752 lt!46742))))

(assert (=> d!24969 true))

(declare-fun _$34!848 () Unit!2798)

(assert (=> d!24969 (= (choose!564 lt!46752 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46742) _$34!848)))

(declare-fun bs!3915 () Bool)

(assert (= bs!3915 d!24969))

(assert (=> bs!3915 m!101553))

(assert (=> bs!3915 m!101553))

(assert (=> bs!3915 m!101555))

(assert (=> bs!3915 m!101575))

(assert (=> d!24705 d!24969))

(declare-fun d!24971 () Bool)

(declare-fun res!48105 () Bool)

(declare-fun e!62015 () Bool)

(assert (=> d!24971 (=> (not res!48105) (not e!62015))))

(assert (=> d!24971 (= res!48105 (simpleValid!66 (_2!1167 lt!47044)))))

(assert (=> d!24971 (= (valid!373 (_2!1167 lt!47044)) e!62015)))

(declare-fun b!95039 () Bool)

(declare-fun res!48106 () Bool)

(assert (=> b!95039 (=> (not res!48106) (not e!62015))))

(assert (=> b!95039 (= res!48106 (= (arrayCountValidKeys!0 (_keys!4118 (_2!1167 lt!47044)) #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!47044)))) (_size!466 (_2!1167 lt!47044))))))

(declare-fun b!95040 () Bool)

(declare-fun res!48107 () Bool)

(assert (=> b!95040 (=> (not res!48107) (not e!62015))))

(assert (=> b!95040 (= res!48107 (arrayForallSeekEntryOrOpenFound!0 #b00000000000000000000000000000000 (_keys!4118 (_2!1167 lt!47044)) (mask!6511 (_2!1167 lt!47044))))))

(declare-fun b!95041 () Bool)

(assert (=> b!95041 (= e!62015 (arrayNoDuplicates!0 (_keys!4118 (_2!1167 lt!47044)) #b00000000000000000000000000000000 Nil!1565))))

(assert (= (and d!24971 res!48105) b!95039))

(assert (= (and b!95039 res!48106) b!95040))

(assert (= (and b!95040 res!48107) b!95041))

(declare-fun m!102935 () Bool)

(assert (=> d!24971 m!102935))

(declare-fun m!102937 () Bool)

(assert (=> b!95039 m!102937))

(declare-fun m!102939 () Bool)

(assert (=> b!95040 m!102939))

(declare-fun m!102941 () Bool)

(assert (=> b!95041 m!102941))

(assert (=> b!94683 d!24971))

(declare-fun d!24973 () Bool)

(assert (=> d!24973 (= (get!1265 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) (v!2766 (getValueByKey!148 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!24721 d!24973))

(assert (=> d!24721 d!24787))

(assert (=> b!94429 d!24749))

(declare-fun d!24975 () Bool)

(declare-fun isEmpty!352 (List!1569) Bool)

(assert (=> d!24975 (= (isEmpty!351 lt!46884) (isEmpty!352 (toList!776 lt!46884)))))

(declare-fun bs!3916 () Bool)

(assert (= bs!3916 d!24975))

(declare-fun m!102943 () Bool)

(assert (=> bs!3916 m!102943))

(assert (=> b!94532 d!24975))

(assert (=> bm!9507 d!24717))

(declare-fun b!95042 () Bool)

(declare-fun e!62019 () Bool)

(declare-fun e!62018 () Bool)

(assert (=> b!95042 (= e!62019 e!62018)))

(declare-fun c!15909 () Bool)

(assert (=> b!95042 (= c!15909 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!95043 () Bool)

(declare-fun call!9555 () Bool)

(assert (=> b!95043 (= e!62018 call!9555)))

(declare-fun b!95044 () Bool)

(assert (=> b!95044 (= e!62018 call!9555)))

(declare-fun bm!9552 () Bool)

(assert (=> bm!9552 (= call!9555 (arrayNoDuplicates!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15909 (Cons!1564 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (ite c!15796 (Cons!1564 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1565) Nil!1565)) (ite c!15796 (Cons!1564 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1565) Nil!1565))))))

(declare-fun b!95045 () Bool)

(declare-fun e!62017 () Bool)

(assert (=> b!95045 (= e!62017 e!62019)))

(declare-fun res!48110 () Bool)

(assert (=> b!95045 (=> (not res!48110) (not e!62019))))

(declare-fun e!62016 () Bool)

(assert (=> b!95045 (= res!48110 (not e!62016))))

(declare-fun res!48108 () Bool)

(assert (=> b!95045 (=> (not res!48108) (not e!62016))))

(assert (=> b!95045 (= res!48108 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun b!95046 () Bool)

(assert (=> b!95046 (= e!62016 (contains!791 (ite c!15796 (Cons!1564 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1565) Nil!1565) (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun d!24977 () Bool)

(declare-fun res!48109 () Bool)

(assert (=> d!24977 (=> res!48109 e!62017)))

(assert (=> d!24977 (= res!48109 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!24977 (= (arrayNoDuplicates!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15796 (Cons!1564 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) Nil!1565) Nil!1565)) e!62017)))

(assert (= (and d!24977 (not res!48109)) b!95045))

(assert (= (and b!95045 res!48108) b!95046))

(assert (= (and b!95045 res!48110) b!95042))

(assert (= (and b!95042 c!15909) b!95043))

(assert (= (and b!95042 (not c!15909)) b!95044))

(assert (= (or b!95043 b!95044) bm!9552))

(assert (=> b!95042 m!102881))

(assert (=> b!95042 m!102881))

(declare-fun m!102945 () Bool)

(assert (=> b!95042 m!102945))

(assert (=> bm!9552 m!102881))

(declare-fun m!102947 () Bool)

(assert (=> bm!9552 m!102947))

(assert (=> b!95045 m!102881))

(assert (=> b!95045 m!102881))

(assert (=> b!95045 m!102945))

(assert (=> b!95046 m!102881))

(assert (=> b!95046 m!102881))

(declare-fun m!102949 () Bool)

(assert (=> b!95046 m!102949))

(assert (=> bm!9487 d!24977))

(declare-fun b!95047 () Bool)

(declare-fun e!62023 () Bool)

(declare-fun e!62022 () Bool)

(assert (=> b!95047 (= e!62023 e!62022)))

(declare-fun c!15910 () Bool)

(assert (=> b!95047 (= c!15910 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95048 () Bool)

(declare-fun call!9556 () Bool)

(assert (=> b!95048 (= e!62022 call!9556)))

(declare-fun b!95049 () Bool)

(assert (=> b!95049 (= e!62022 call!9556)))

(declare-fun bm!9553 () Bool)

(assert (=> bm!9553 (= call!9556 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (ite c!15910 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000) Nil!1565) Nil!1565)))))

(declare-fun b!95050 () Bool)

(declare-fun e!62021 () Bool)

(assert (=> b!95050 (= e!62021 e!62023)))

(declare-fun res!48113 () Bool)

(assert (=> b!95050 (=> (not res!48113) (not e!62023))))

(declare-fun e!62020 () Bool)

(assert (=> b!95050 (= res!48113 (not e!62020))))

(declare-fun res!48111 () Bool)

(assert (=> b!95050 (=> (not res!48111) (not e!62020))))

(assert (=> b!95050 (= res!48111 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun b!95051 () Bool)

(assert (=> b!95051 (= e!62020 (contains!791 Nil!1565 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun d!24979 () Bool)

(declare-fun res!48112 () Bool)

(assert (=> d!24979 (=> res!48112 e!62021)))

(assert (=> d!24979 (= res!48112 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!24979 (= (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 Nil!1565) e!62021)))

(assert (= (and d!24979 (not res!48112)) b!95050))

(assert (= (and b!95050 res!48111) b!95051))

(assert (= (and b!95050 res!48113) b!95047))

(assert (= (and b!95047 c!15910) b!95048))

(assert (= (and b!95047 (not c!15910)) b!95049))

(assert (= (or b!95048 b!95049) bm!9553))

(assert (=> b!95047 m!102543))

(assert (=> b!95047 m!102543))

(assert (=> b!95047 m!102551))

(assert (=> bm!9553 m!102543))

(declare-fun m!102951 () Bool)

(assert (=> bm!9553 m!102951))

(assert (=> b!95050 m!102543))

(assert (=> b!95050 m!102543))

(assert (=> b!95050 m!102551))

(assert (=> b!95051 m!102543))

(assert (=> b!95051 m!102543))

(declare-fun m!102953 () Bool)

(assert (=> b!95051 m!102953))

(assert (=> b!94378 d!24979))

(declare-fun d!24981 () Bool)

(declare-fun e!62025 () Bool)

(assert (=> d!24981 e!62025))

(declare-fun res!48114 () Bool)

(assert (=> d!24981 (=> res!48114 e!62025)))

(declare-fun lt!47338 () Bool)

(assert (=> d!24981 (= res!48114 (not lt!47338))))

(declare-fun lt!47335 () Bool)

(assert (=> d!24981 (= lt!47338 lt!47335)))

(declare-fun lt!47337 () Unit!2798)

(declare-fun e!62024 () Unit!2798)

(assert (=> d!24981 (= lt!47337 e!62024)))

(declare-fun c!15911 () Bool)

(assert (=> d!24981 (= c!15911 lt!47335)))

(assert (=> d!24981 (= lt!47335 (containsKey!152 (toList!776 lt!46942) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!24981 (= (contains!789 lt!46942 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47338)))

(declare-fun b!95052 () Bool)

(declare-fun lt!47336 () Unit!2798)

(assert (=> b!95052 (= e!62024 lt!47336)))

(assert (=> b!95052 (= lt!47336 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46942) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95052 (isDefined!101 (getValueByKey!148 (toList!776 lt!46942) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95053 () Bool)

(declare-fun Unit!2839 () Unit!2798)

(assert (=> b!95053 (= e!62024 Unit!2839)))

(declare-fun b!95054 () Bool)

(assert (=> b!95054 (= e!62025 (isDefined!101 (getValueByKey!148 (toList!776 lt!46942) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!24981 c!15911) b!95052))

(assert (= (and d!24981 (not c!15911)) b!95053))

(assert (= (and d!24981 (not res!48114)) b!95054))

(declare-fun m!102955 () Bool)

(assert (=> d!24981 m!102955))

(declare-fun m!102957 () Bool)

(assert (=> b!95052 m!102957))

(declare-fun m!102959 () Bool)

(assert (=> b!95052 m!102959))

(assert (=> b!95052 m!102959))

(declare-fun m!102961 () Bool)

(assert (=> b!95052 m!102961))

(assert (=> b!95054 m!102959))

(assert (=> b!95054 m!102959))

(assert (=> b!95054 m!102961))

(assert (=> bm!9480 d!24981))

(declare-fun d!24983 () Bool)

(declare-fun c!15912 () Bool)

(assert (=> d!24983 (= c!15912 (and ((_ is Cons!1565) (toList!776 lt!46899)) (= (_1!1166 (h!2157 (toList!776 lt!46899))) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62026 () Option!154)

(assert (=> d!24983 (= (getValueByKey!148 (toList!776 lt!46899) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62026)))

(declare-fun b!95057 () Bool)

(declare-fun e!62027 () Option!154)

(assert (=> b!95057 (= e!62027 (getValueByKey!148 (t!5471 (toList!776 lt!46899)) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95058 () Bool)

(assert (=> b!95058 (= e!62027 None!152)))

(declare-fun b!95056 () Bool)

(assert (=> b!95056 (= e!62026 e!62027)))

(declare-fun c!15913 () Bool)

(assert (=> b!95056 (= c!15913 (and ((_ is Cons!1565) (toList!776 lt!46899)) (not (= (_1!1166 (h!2157 (toList!776 lt!46899))) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95055 () Bool)

(assert (=> b!95055 (= e!62026 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46899)))))))

(assert (= (and d!24983 c!15912) b!95055))

(assert (= (and d!24983 (not c!15912)) b!95056))

(assert (= (and b!95056 c!15913) b!95057))

(assert (= (and b!95056 (not c!15913)) b!95058))

(declare-fun m!102963 () Bool)

(assert (=> b!95057 m!102963))

(assert (=> b!94546 d!24983))

(declare-fun d!24985 () Bool)

(declare-fun res!48115 () Bool)

(declare-fun e!62028 () Bool)

(assert (=> d!24985 (=> res!48115 e!62028)))

(assert (=> d!24985 (= res!48115 (and ((_ is Cons!1565) (toList!776 e!61513)) (= (_1!1166 (h!2157 (toList!776 e!61513))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (=> d!24985 (= (containsKey!152 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!62028)))

(declare-fun b!95059 () Bool)

(declare-fun e!62029 () Bool)

(assert (=> b!95059 (= e!62028 e!62029)))

(declare-fun res!48116 () Bool)

(assert (=> b!95059 (=> (not res!48116) (not e!62029))))

(assert (=> b!95059 (= res!48116 (and (or (not ((_ is Cons!1565) (toList!776 e!61513))) (bvsle (_1!1166 (h!2157 (toList!776 e!61513))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) ((_ is Cons!1565) (toList!776 e!61513)) (bvslt (_1!1166 (h!2157 (toList!776 e!61513))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun b!95060 () Bool)

(assert (=> b!95060 (= e!62029 (containsKey!152 (t!5471 (toList!776 e!61513)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!24985 (not res!48115)) b!95059))

(assert (= (and b!95059 res!48116) b!95060))

(assert (=> b!95060 m!101363))

(declare-fun m!102965 () Bool)

(assert (=> b!95060 m!102965))

(assert (=> d!24671 d!24985))

(assert (=> d!24715 d!24887))

(declare-fun d!24987 () Bool)

(assert (=> d!24987 (= (inRange!0 (index!3146 lt!46858) (mask!6511 newMap!16)) (and (bvsge (index!3146 lt!46858) #b00000000000000000000000000000000) (bvslt (index!3146 lt!46858) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> b!94493 d!24987))

(assert (=> d!24649 d!24887))

(assert (=> b!94372 d!24785))

(assert (=> b!94372 d!24787))

(declare-fun d!24989 () Bool)

(declare-fun res!48117 () Bool)

(declare-fun e!62030 () Bool)

(assert (=> d!24989 (=> res!48117 e!62030)))

(assert (=> d!24989 (= res!48117 (and ((_ is Cons!1565) (toList!776 lt!46762)) (= (_1!1166 (h!2157 (toList!776 lt!46762))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24989 (= (containsKey!152 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000) e!62030)))

(declare-fun b!95061 () Bool)

(declare-fun e!62031 () Bool)

(assert (=> b!95061 (= e!62030 e!62031)))

(declare-fun res!48118 () Bool)

(assert (=> b!95061 (=> (not res!48118) (not e!62031))))

(assert (=> b!95061 (= res!48118 (and (or (not ((_ is Cons!1565) (toList!776 lt!46762))) (bvsle (_1!1166 (h!2157 (toList!776 lt!46762))) #b0000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1565) (toList!776 lt!46762)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46762))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95062 () Bool)

(assert (=> b!95062 (= e!62031 (containsKey!152 (t!5471 (toList!776 lt!46762)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!24989 (not res!48117)) b!95061))

(assert (= (and b!95061 res!48118) b!95062))

(declare-fun m!102967 () Bool)

(assert (=> b!95062 m!102967))

(assert (=> d!24647 d!24989))

(declare-fun d!24991 () Bool)

(assert (=> d!24991 (= (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46742)) (v!2766 (getValueByKey!148 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46742)))))

(assert (=> d!24699 d!24991))

(declare-fun d!24993 () Bool)

(declare-fun c!15914 () Bool)

(assert (=> d!24993 (= c!15914 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46742)))))

(declare-fun e!62032 () Option!154)

(assert (=> d!24993 (= (getValueByKey!148 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46742) e!62032)))

(declare-fun b!95065 () Bool)

(declare-fun e!62033 () Option!154)

(assert (=> b!95065 (= e!62033 (getValueByKey!148 (t!5471 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!46742))))

(declare-fun b!95066 () Bool)

(assert (=> b!95066 (= e!62033 None!152)))

(declare-fun b!95064 () Bool)

(assert (=> b!95064 (= e!62032 e!62033)))

(declare-fun c!15915 () Bool)

(assert (=> b!95064 (= c!15915 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (not (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46742))))))

(declare-fun b!95063 () Bool)

(assert (=> b!95063 (= e!62032 (Some!153 (_2!1166 (h!2157 (toList!776 (+!133 lt!46752 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(assert (= (and d!24993 c!15914) b!95063))

(assert (= (and d!24993 (not c!15914)) b!95064))

(assert (= (and b!95064 c!15915) b!95065))

(assert (= (and b!95064 (not c!15915)) b!95066))

(declare-fun m!102969 () Bool)

(assert (=> b!95065 m!102969))

(assert (=> d!24699 d!24993))

(declare-fun d!24995 () Bool)

(assert (=> d!24995 (= (size!2249 newMap!16) (bvadd (_size!466 newMap!16) (bvsdiv (bvadd (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000010)))))

(assert (=> b!94468 d!24995))

(declare-fun d!24997 () Bool)

(assert (=> d!24997 (= (apply!90 lt!46970 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46970) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3917 () Bool)

(assert (= bs!3917 d!24997))

(assert (=> bs!3917 m!102891))

(assert (=> bs!3917 m!102891))

(declare-fun m!102971 () Bool)

(assert (=> bs!3917 m!102971))

(assert (=> b!94616 d!24997))

(declare-fun d!24999 () Bool)

(declare-fun e!62035 () Bool)

(assert (=> d!24999 e!62035))

(declare-fun res!48119 () Bool)

(assert (=> d!24999 (=> res!48119 e!62035)))

(declare-fun lt!47342 () Bool)

(assert (=> d!24999 (= res!48119 (not lt!47342))))

(declare-fun lt!47339 () Bool)

(assert (=> d!24999 (= lt!47342 lt!47339)))

(declare-fun lt!47341 () Unit!2798)

(declare-fun e!62034 () Unit!2798)

(assert (=> d!24999 (= lt!47341 e!62034)))

(declare-fun c!15916 () Bool)

(assert (=> d!24999 (= c!15916 lt!47339)))

(assert (=> d!24999 (= lt!47339 (containsKey!152 (toList!776 lt!46899) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!24999 (= (contains!789 lt!46899 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47342)))

(declare-fun b!95067 () Bool)

(declare-fun lt!47340 () Unit!2798)

(assert (=> b!95067 (= e!62034 lt!47340)))

(assert (=> b!95067 (= lt!47340 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46899) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> b!95067 (isDefined!101 (getValueByKey!148 (toList!776 lt!46899) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95068 () Bool)

(declare-fun Unit!2840 () Unit!2798)

(assert (=> b!95068 (= e!62034 Unit!2840)))

(declare-fun b!95069 () Bool)

(assert (=> b!95069 (= e!62035 (isDefined!101 (getValueByKey!148 (toList!776 lt!46899) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!24999 c!15916) b!95067))

(assert (= (and d!24999 (not c!15916)) b!95068))

(assert (= (and d!24999 (not res!48119)) b!95069))

(declare-fun m!102973 () Bool)

(assert (=> d!24999 m!102973))

(declare-fun m!102975 () Bool)

(assert (=> b!95067 m!102975))

(assert (=> b!95067 m!101857))

(assert (=> b!95067 m!101857))

(declare-fun m!102977 () Bool)

(assert (=> b!95067 m!102977))

(assert (=> b!95069 m!101857))

(assert (=> b!95069 m!101857))

(assert (=> b!95069 m!102977))

(assert (=> d!24691 d!24999))

(declare-fun c!15917 () Bool)

(declare-fun d!25001 () Bool)

(assert (=> d!25001 (= c!15917 (and ((_ is Cons!1565) lt!46900) (= (_1!1166 (h!2157 lt!46900)) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62036 () Option!154)

(assert (=> d!25001 (= (getValueByKey!148 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62036)))

(declare-fun b!95072 () Bool)

(declare-fun e!62037 () Option!154)

(assert (=> b!95072 (= e!62037 (getValueByKey!148 (t!5471 lt!46900) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95073 () Bool)

(assert (=> b!95073 (= e!62037 None!152)))

(declare-fun b!95071 () Bool)

(assert (=> b!95071 (= e!62036 e!62037)))

(declare-fun c!15918 () Bool)

(assert (=> b!95071 (= c!15918 (and ((_ is Cons!1565) lt!46900) (not (= (_1!1166 (h!2157 lt!46900)) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95070 () Bool)

(assert (=> b!95070 (= e!62036 (Some!153 (_2!1166 (h!2157 lt!46900))))))

(assert (= (and d!25001 c!15917) b!95070))

(assert (= (and d!25001 (not c!15917)) b!95071))

(assert (= (and b!95071 c!15918) b!95072))

(assert (= (and b!95071 (not c!15918)) b!95073))

(declare-fun m!102979 () Bool)

(assert (=> b!95072 m!102979))

(assert (=> d!24691 d!25001))

(declare-fun d!25003 () Bool)

(assert (=> d!25003 (= (getValueByKey!148 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!47343 () Unit!2798)

(assert (=> d!25003 (= lt!47343 (choose!569 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun e!62038 () Bool)

(assert (=> d!25003 e!62038))

(declare-fun res!48120 () Bool)

(assert (=> d!25003 (=> (not res!48120) (not e!62038))))

(assert (=> d!25003 (= res!48120 (isStrictlySorted!302 lt!46900))))

(assert (=> d!25003 (= (lemmaContainsTupThenGetReturnValue!64 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47343)))

(declare-fun b!95074 () Bool)

(declare-fun res!48121 () Bool)

(assert (=> b!95074 (=> (not res!48121) (not e!62038))))

(assert (=> b!95074 (= res!48121 (containsKey!152 lt!46900 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95075 () Bool)

(assert (=> b!95075 (= e!62038 (contains!792 lt!46900 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25003 res!48120) b!95074))

(assert (= (and b!95074 res!48121) b!95075))

(assert (=> d!25003 m!101851))

(declare-fun m!102981 () Bool)

(assert (=> d!25003 m!102981))

(declare-fun m!102983 () Bool)

(assert (=> d!25003 m!102983))

(declare-fun m!102985 () Bool)

(assert (=> b!95074 m!102985))

(declare-fun m!102987 () Bool)

(assert (=> b!95075 m!102987))

(assert (=> d!24691 d!25003))

(declare-fun b!95076 () Bool)

(declare-fun c!15922 () Bool)

(declare-fun c!15920 () Bool)

(declare-fun e!62041 () List!1569)

(assert (=> b!95076 (= e!62041 (ite c!15922 (t!5471 (toList!776 lt!46758)) (ite c!15920 (Cons!1565 (h!2157 (toList!776 lt!46758)) (t!5471 (toList!776 lt!46758))) Nil!1566)))))

(declare-fun b!95077 () Bool)

(declare-fun e!62040 () List!1569)

(declare-fun call!9557 () List!1569)

(assert (=> b!95077 (= e!62040 call!9557)))

(declare-fun bm!9554 () Bool)

(declare-fun call!9559 () List!1569)

(assert (=> bm!9554 (= call!9559 call!9557)))

(declare-fun b!95078 () Bool)

(assert (=> b!95078 (= c!15920 (and ((_ is Cons!1565) (toList!776 lt!46758)) (bvsgt (_1!1166 (h!2157 (toList!776 lt!46758))) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62043 () List!1569)

(declare-fun e!62039 () List!1569)

(assert (=> b!95078 (= e!62043 e!62039)))

(declare-fun b!95079 () Bool)

(declare-fun call!9558 () List!1569)

(assert (=> b!95079 (= e!62039 call!9558)))

(declare-fun b!95080 () Bool)

(assert (=> b!95080 (= e!62039 call!9558)))

(declare-fun b!95081 () Bool)

(assert (=> b!95081 (= e!62041 (insertStrictlySorted!67 (t!5471 (toList!776 lt!46758)) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95082 () Bool)

(declare-fun res!48122 () Bool)

(declare-fun e!62042 () Bool)

(assert (=> b!95082 (=> (not res!48122) (not e!62042))))

(declare-fun lt!47344 () List!1569)

(assert (=> b!95082 (= res!48122 (containsKey!152 lt!47344 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun bm!9555 () Bool)

(assert (=> bm!9555 (= call!9558 call!9559)))

(declare-fun b!95083 () Bool)

(assert (=> b!95083 (= e!62040 e!62043)))

(assert (=> b!95083 (= c!15922 (and ((_ is Cons!1565) (toList!776 lt!46758)) (= (_1!1166 (h!2157 (toList!776 lt!46758))) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun d!25005 () Bool)

(assert (=> d!25005 e!62042))

(declare-fun res!48123 () Bool)

(assert (=> d!25005 (=> (not res!48123) (not e!62042))))

(assert (=> d!25005 (= res!48123 (isStrictlySorted!302 lt!47344))))

(assert (=> d!25005 (= lt!47344 e!62040)))

(declare-fun c!15921 () Bool)

(assert (=> d!25005 (= c!15921 (and ((_ is Cons!1565) (toList!776 lt!46758)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46758))) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!25005 (isStrictlySorted!302 (toList!776 lt!46758))))

(assert (=> d!25005 (= (insertStrictlySorted!67 (toList!776 lt!46758) (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47344)))

(declare-fun b!95084 () Bool)

(assert (=> b!95084 (= e!62043 call!9559)))

(declare-fun bm!9556 () Bool)

(assert (=> bm!9556 (= call!9557 ($colon$colon!76 e!62041 (ite c!15921 (h!2157 (toList!776 lt!46758)) (tuple2!2311 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun c!15919 () Bool)

(assert (=> bm!9556 (= c!15919 c!15921)))

(declare-fun b!95085 () Bool)

(assert (=> b!95085 (= e!62042 (contains!792 lt!47344 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25005 c!15921) b!95077))

(assert (= (and d!25005 (not c!15921)) b!95083))

(assert (= (and b!95083 c!15922) b!95084))

(assert (= (and b!95083 (not c!15922)) b!95078))

(assert (= (and b!95078 c!15920) b!95080))

(assert (= (and b!95078 (not c!15920)) b!95079))

(assert (= (or b!95080 b!95079) bm!9555))

(assert (= (or b!95084 bm!9555) bm!9554))

(assert (= (or b!95077 bm!9554) bm!9556))

(assert (= (and bm!9556 c!15919) b!95081))

(assert (= (and bm!9556 (not c!15919)) b!95076))

(assert (= (and d!25005 res!48123) b!95082))

(assert (= (and b!95082 res!48122) b!95085))

(declare-fun m!102989 () Bool)

(assert (=> b!95082 m!102989))

(declare-fun m!102991 () Bool)

(assert (=> bm!9556 m!102991))

(declare-fun m!102993 () Bool)

(assert (=> b!95085 m!102993))

(declare-fun m!102995 () Bool)

(assert (=> b!95081 m!102995))

(declare-fun m!102997 () Bool)

(assert (=> d!25005 m!102997))

(declare-fun m!102999 () Bool)

(assert (=> d!25005 m!102999))

(assert (=> d!24691 d!25005))

(declare-fun b!95087 () Bool)

(declare-fun e!62044 () Bool)

(declare-fun lt!47365 () ListLongMap!1521)

(assert (=> b!95087 (= e!62044 (= (apply!90 lt!47365 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 (_2!1167 lt!46697))))))

(declare-fun b!95088 () Bool)

(declare-fun e!62048 () Bool)

(assert (=> b!95088 (= e!62048 (= (apply!90 lt!47365 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (_values!2419 (_2!1167 lt!46697))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 (_2!1167 lt!46697)) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (_values!2419 (_2!1167 lt!46697)))))))

(assert (=> b!95088 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(declare-fun b!95089 () Bool)

(declare-fun e!62054 () Bool)

(assert (=> b!95089 (= e!62054 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun b!95090 () Bool)

(declare-fun e!62049 () Bool)

(declare-fun e!62045 () Bool)

(assert (=> b!95090 (= e!62049 e!62045)))

(declare-fun res!48125 () Bool)

(declare-fun call!9561 () Bool)

(assert (=> b!95090 (= res!48125 call!9561)))

(assert (=> b!95090 (=> (not res!48125) (not e!62045))))

(declare-fun bm!9557 () Bool)

(declare-fun call!9563 () Bool)

(assert (=> bm!9557 (= call!9563 (contains!789 lt!47365 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95091 () Bool)

(assert (=> b!95091 (= e!62045 (= (apply!90 lt!47365 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 (_2!1167 lt!46697))))))

(declare-fun b!95092 () Bool)

(declare-fun e!62052 () Bool)

(assert (=> b!95092 (= e!62052 e!62048)))

(declare-fun res!48132 () Bool)

(assert (=> b!95092 (=> (not res!48132) (not e!62048))))

(assert (=> b!95092 (= res!48132 (contains!789 lt!47365 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(assert (=> b!95092 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(declare-fun b!95093 () Bool)

(declare-fun e!62047 () Bool)

(declare-fun e!62050 () Bool)

(assert (=> b!95093 (= e!62047 e!62050)))

(declare-fun c!15928 () Bool)

(assert (=> b!95093 (= c!15928 (not (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95094 () Bool)

(assert (=> b!95094 (= e!62049 (not call!9561))))

(declare-fun b!95095 () Bool)

(declare-fun e!62046 () Unit!2798)

(declare-fun Unit!2841 () Unit!2798)

(assert (=> b!95095 (= e!62046 Unit!2841)))

(declare-fun b!95096 () Bool)

(assert (=> b!95096 (= e!62050 (not call!9563))))

(declare-fun b!95086 () Bool)

(declare-fun e!62053 () ListLongMap!1521)

(declare-fun call!9564 () ListLongMap!1521)

(assert (=> b!95086 (= e!62053 (+!133 call!9564 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (_2!1167 lt!46697)))))))

(declare-fun d!25007 () Bool)

(assert (=> d!25007 e!62047))

(declare-fun res!48127 () Bool)

(assert (=> d!25007 (=> (not res!48127) (not e!62047))))

(assert (=> d!25007 (= res!48127 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))))

(declare-fun lt!47366 () ListLongMap!1521)

(assert (=> d!25007 (= lt!47365 lt!47366)))

(declare-fun lt!47364 () Unit!2798)

(assert (=> d!25007 (= lt!47364 e!62046)))

(declare-fun c!15926 () Bool)

(assert (=> d!25007 (= c!15926 e!62054)))

(declare-fun res!48124 () Bool)

(assert (=> d!25007 (=> (not res!48124) (not e!62054))))

(assert (=> d!25007 (= res!48124 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(assert (=> d!25007 (= lt!47366 e!62053)))

(declare-fun c!15927 () Bool)

(assert (=> d!25007 (= c!15927 (and (not (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25007 (validMask!0 (mask!6511 (_2!1167 lt!46697)))))

(assert (=> d!25007 (= (getCurrentListMap!468 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))) lt!47365)))

(declare-fun b!95097 () Bool)

(declare-fun e!62056 () ListLongMap!1521)

(declare-fun call!9560 () ListLongMap!1521)

(assert (=> b!95097 (= e!62056 call!9560)))

(declare-fun b!95098 () Bool)

(declare-fun e!62055 () Bool)

(assert (=> b!95098 (= e!62055 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun b!95099 () Bool)

(declare-fun e!62051 () ListLongMap!1521)

(declare-fun call!9562 () ListLongMap!1521)

(assert (=> b!95099 (= e!62051 call!9562)))

(declare-fun b!95100 () Bool)

(declare-fun res!48130 () Bool)

(assert (=> b!95100 (=> (not res!48130) (not e!62047))))

(assert (=> b!95100 (= res!48130 e!62052)))

(declare-fun res!48131 () Bool)

(assert (=> b!95100 (=> res!48131 e!62052)))

(assert (=> b!95100 (= res!48131 (not e!62055))))

(declare-fun res!48129 () Bool)

(assert (=> b!95100 (=> (not res!48129) (not e!62055))))

(assert (=> b!95100 (= res!48129 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(declare-fun b!95101 () Bool)

(declare-fun lt!47354 () Unit!2798)

(assert (=> b!95101 (= e!62046 lt!47354)))

(declare-fun lt!47361 () ListLongMap!1521)

(assert (=> b!95101 (= lt!47361 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))))))

(declare-fun lt!47352 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47352 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47360 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47360 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000))))

(declare-fun lt!47358 () Unit!2798)

(assert (=> b!95101 (= lt!47358 (addStillContains!66 lt!47361 lt!47352 (zeroValue!2323 (_2!1167 lt!46697)) lt!47360))))

(assert (=> b!95101 (contains!789 (+!133 lt!47361 (tuple2!2311 lt!47352 (zeroValue!2323 (_2!1167 lt!46697)))) lt!47360)))

(declare-fun lt!47348 () Unit!2798)

(assert (=> b!95101 (= lt!47348 lt!47358)))

(declare-fun lt!47353 () ListLongMap!1521)

(assert (=> b!95101 (= lt!47353 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))))))

(declare-fun lt!47359 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47359 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47347 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47347 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000))))

(declare-fun lt!47363 () Unit!2798)

(assert (=> b!95101 (= lt!47363 (addApplyDifferent!66 lt!47353 lt!47359 (minValue!2323 (_2!1167 lt!46697)) lt!47347))))

(assert (=> b!95101 (= (apply!90 (+!133 lt!47353 (tuple2!2311 lt!47359 (minValue!2323 (_2!1167 lt!46697)))) lt!47347) (apply!90 lt!47353 lt!47347))))

(declare-fun lt!47356 () Unit!2798)

(assert (=> b!95101 (= lt!47356 lt!47363)))

(declare-fun lt!47357 () ListLongMap!1521)

(assert (=> b!95101 (= lt!47357 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))))))

(declare-fun lt!47349 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47349 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47362 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47362 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000))))

(declare-fun lt!47350 () Unit!2798)

(assert (=> b!95101 (= lt!47350 (addApplyDifferent!66 lt!47357 lt!47349 (zeroValue!2323 (_2!1167 lt!46697)) lt!47362))))

(assert (=> b!95101 (= (apply!90 (+!133 lt!47357 (tuple2!2311 lt!47349 (zeroValue!2323 (_2!1167 lt!46697)))) lt!47362) (apply!90 lt!47357 lt!47362))))

(declare-fun lt!47346 () Unit!2798)

(assert (=> b!95101 (= lt!47346 lt!47350)))

(declare-fun lt!47355 () ListLongMap!1521)

(assert (=> b!95101 (= lt!47355 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))))))

(declare-fun lt!47351 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47351 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47345 () (_ BitVec 64))

(assert (=> b!95101 (= lt!47345 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000))))

(assert (=> b!95101 (= lt!47354 (addApplyDifferent!66 lt!47355 lt!47351 (minValue!2323 (_2!1167 lt!46697)) lt!47345))))

(assert (=> b!95101 (= (apply!90 (+!133 lt!47355 (tuple2!2311 lt!47351 (minValue!2323 (_2!1167 lt!46697)))) lt!47345) (apply!90 lt!47355 lt!47345))))

(declare-fun b!95102 () Bool)

(declare-fun c!15925 () Bool)

(assert (=> b!95102 (= c!15925 (and (not (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95102 (= e!62051 e!62056)))

(declare-fun bm!9558 () Bool)

(assert (=> bm!9558 (= call!9561 (contains!789 lt!47365 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95103 () Bool)

(assert (=> b!95103 (= e!62056 call!9562)))

(declare-fun bm!9559 () Bool)

(declare-fun call!9565 () ListLongMap!1521)

(declare-fun call!9566 () ListLongMap!1521)

(declare-fun c!15924 () Bool)

(assert (=> bm!9559 (= call!9564 (+!133 (ite c!15927 call!9566 (ite c!15924 call!9565 call!9560)) (ite (or c!15927 c!15924) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (_2!1167 lt!46697))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (_2!1167 lt!46697))))))))

(declare-fun bm!9560 () Bool)

(assert (=> bm!9560 (= call!9565 call!9566)))

(declare-fun b!95104 () Bool)

(declare-fun res!48126 () Bool)

(assert (=> b!95104 (=> (not res!48126) (not e!62047))))

(assert (=> b!95104 (= res!48126 e!62049)))

(declare-fun c!15923 () Bool)

(assert (=> b!95104 (= c!15923 (not (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9561 () Bool)

(assert (=> bm!9561 (= call!9566 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (_2!1167 lt!46697)) (_values!2419 (_2!1167 lt!46697)) (mask!6511 (_2!1167 lt!46697)) (extraKeys!2265 (_2!1167 lt!46697)) (zeroValue!2323 (_2!1167 lt!46697)) (minValue!2323 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (defaultEntry!2436 (_2!1167 lt!46697))))))

(declare-fun bm!9562 () Bool)

(assert (=> bm!9562 (= call!9560 call!9565)))

(declare-fun b!95105 () Bool)

(assert (=> b!95105 (= e!62053 e!62051)))

(assert (=> b!95105 (= c!15924 (and (not (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95106 () Bool)

(assert (=> b!95106 (= e!62050 e!62044)))

(declare-fun res!48128 () Bool)

(assert (=> b!95106 (= res!48128 call!9563)))

(assert (=> b!95106 (=> (not res!48128) (not e!62044))))

(declare-fun bm!9563 () Bool)

(assert (=> bm!9563 (= call!9562 call!9564)))

(assert (= (and d!25007 c!15927) b!95086))

(assert (= (and d!25007 (not c!15927)) b!95105))

(assert (= (and b!95105 c!15924) b!95099))

(assert (= (and b!95105 (not c!15924)) b!95102))

(assert (= (and b!95102 c!15925) b!95103))

(assert (= (and b!95102 (not c!15925)) b!95097))

(assert (= (or b!95103 b!95097) bm!9562))

(assert (= (or b!95099 bm!9562) bm!9560))

(assert (= (or b!95099 b!95103) bm!9563))

(assert (= (or b!95086 bm!9560) bm!9561))

(assert (= (or b!95086 bm!9563) bm!9559))

(assert (= (and d!25007 res!48124) b!95089))

(assert (= (and d!25007 c!15926) b!95101))

(assert (= (and d!25007 (not c!15926)) b!95095))

(assert (= (and d!25007 res!48127) b!95100))

(assert (= (and b!95100 res!48129) b!95098))

(assert (= (and b!95100 (not res!48131)) b!95092))

(assert (= (and b!95092 res!48132) b!95088))

(assert (= (and b!95100 res!48130) b!95104))

(assert (= (and b!95104 c!15923) b!95090))

(assert (= (and b!95104 (not c!15923)) b!95094))

(assert (= (and b!95090 res!48125) b!95091))

(assert (= (or b!95090 b!95094) bm!9558))

(assert (= (and b!95104 res!48126) b!95093))

(assert (= (and b!95093 c!15928) b!95106))

(assert (= (and b!95093 (not c!15928)) b!95096))

(assert (= (and b!95106 res!48128) b!95087))

(assert (= (or b!95106 b!95096) bm!9557))

(declare-fun b_lambda!4187 () Bool)

(assert (=> (not b_lambda!4187) (not b!95088)))

(declare-fun tb!1881 () Bool)

(declare-fun t!5483 () Bool)

(assert (=> (and b!94027 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 (_2!1167 lt!46697))) t!5483) tb!1881))

(declare-fun result!3205 () Bool)

(assert (=> tb!1881 (= result!3205 tp_is_empty!2613)))

(assert (=> b!95088 t!5483))

(declare-fun b_and!5807 () Bool)

(assert (= b_and!5803 (and (=> t!5483 result!3205) b_and!5807)))

(declare-fun t!5485 () Bool)

(declare-fun tb!1883 () Bool)

(assert (=> (and b!94030 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (_2!1167 lt!46697))) t!5485) tb!1883))

(declare-fun result!3207 () Bool)

(assert (= result!3207 result!3205))

(assert (=> b!95088 t!5485))

(declare-fun b_and!5809 () Bool)

(assert (= b_and!5805 (and (=> t!5485 result!3207) b_and!5809)))

(declare-fun m!103001 () Bool)

(assert (=> b!95086 m!103001))

(declare-fun m!103003 () Bool)

(assert (=> d!25007 m!103003))

(declare-fun m!103005 () Bool)

(assert (=> b!95087 m!103005))

(declare-fun m!103007 () Bool)

(assert (=> b!95091 m!103007))

(declare-fun m!103009 () Bool)

(assert (=> bm!9559 m!103009))

(declare-fun m!103011 () Bool)

(assert (=> bm!9561 m!103011))

(assert (=> b!95092 m!102287))

(assert (=> b!95092 m!102287))

(declare-fun m!103013 () Bool)

(assert (=> b!95092 m!103013))

(declare-fun m!103015 () Bool)

(assert (=> bm!9557 m!103015))

(assert (=> b!95089 m!102287))

(assert (=> b!95089 m!102287))

(assert (=> b!95089 m!102295))

(assert (=> b!95088 m!102287))

(declare-fun m!103017 () Bool)

(assert (=> b!95088 m!103017))

(declare-fun m!103019 () Bool)

(assert (=> b!95088 m!103019))

(assert (=> b!95088 m!103019))

(assert (=> b!95088 m!103017))

(declare-fun m!103021 () Bool)

(assert (=> b!95088 m!103021))

(assert (=> b!95088 m!102287))

(declare-fun m!103023 () Bool)

(assert (=> b!95088 m!103023))

(assert (=> b!95098 m!102287))

(assert (=> b!95098 m!102287))

(assert (=> b!95098 m!102295))

(declare-fun m!103025 () Bool)

(assert (=> b!95101 m!103025))

(assert (=> b!95101 m!102287))

(declare-fun m!103027 () Bool)

(assert (=> b!95101 m!103027))

(declare-fun m!103029 () Bool)

(assert (=> b!95101 m!103029))

(declare-fun m!103031 () Bool)

(assert (=> b!95101 m!103031))

(declare-fun m!103033 () Bool)

(assert (=> b!95101 m!103033))

(assert (=> b!95101 m!103031))

(declare-fun m!103035 () Bool)

(assert (=> b!95101 m!103035))

(declare-fun m!103037 () Bool)

(assert (=> b!95101 m!103037))

(declare-fun m!103039 () Bool)

(assert (=> b!95101 m!103039))

(declare-fun m!103041 () Bool)

(assert (=> b!95101 m!103041))

(declare-fun m!103043 () Bool)

(assert (=> b!95101 m!103043))

(assert (=> b!95101 m!103025))

(declare-fun m!103045 () Bool)

(assert (=> b!95101 m!103045))

(declare-fun m!103047 () Bool)

(assert (=> b!95101 m!103047))

(declare-fun m!103049 () Bool)

(assert (=> b!95101 m!103049))

(assert (=> b!95101 m!103041))

(declare-fun m!103051 () Bool)

(assert (=> b!95101 m!103051))

(assert (=> b!95101 m!103011))

(declare-fun m!103053 () Bool)

(assert (=> b!95101 m!103053))

(assert (=> b!95101 m!103047))

(declare-fun m!103055 () Bool)

(assert (=> bm!9558 m!103055))

(assert (=> d!24627 d!25007))

(declare-fun d!25009 () Bool)

(declare-fun e!62058 () Bool)

(assert (=> d!25009 e!62058))

(declare-fun res!48133 () Bool)

(assert (=> d!25009 (=> res!48133 e!62058)))

(declare-fun lt!47370 () Bool)

(assert (=> d!25009 (= res!48133 (not lt!47370))))

(declare-fun lt!47367 () Bool)

(assert (=> d!25009 (= lt!47370 lt!47367)))

(declare-fun lt!47369 () Unit!2798)

(declare-fun e!62057 () Unit!2798)

(assert (=> d!25009 (= lt!47369 e!62057)))

(declare-fun c!15929 () Bool)

(assert (=> d!25009 (= c!15929 lt!47367)))

(assert (=> d!25009 (= lt!47367 (containsKey!152 (toList!776 lt!46942) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25009 (= (contains!789 lt!46942 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47370)))

(declare-fun b!95107 () Bool)

(declare-fun lt!47368 () Unit!2798)

(assert (=> b!95107 (= e!62057 lt!47368)))

(assert (=> b!95107 (= lt!47368 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46942) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95107 (isDefined!101 (getValueByKey!148 (toList!776 lt!46942) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95108 () Bool)

(declare-fun Unit!2842 () Unit!2798)

(assert (=> b!95108 (= e!62057 Unit!2842)))

(declare-fun b!95109 () Bool)

(assert (=> b!95109 (= e!62058 (isDefined!101 (getValueByKey!148 (toList!776 lt!46942) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25009 c!15929) b!95107))

(assert (= (and d!25009 (not c!15929)) b!95108))

(assert (= (and d!25009 (not res!48133)) b!95109))

(declare-fun m!103057 () Bool)

(assert (=> d!25009 m!103057))

(declare-fun m!103059 () Bool)

(assert (=> b!95107 m!103059))

(declare-fun m!103061 () Bool)

(assert (=> b!95107 m!103061))

(assert (=> b!95107 m!103061))

(declare-fun m!103063 () Bool)

(assert (=> b!95107 m!103063))

(assert (=> b!95109 m!103061))

(assert (=> b!95109 m!103061))

(assert (=> b!95109 m!103063))

(assert (=> bm!9481 d!25009))

(declare-fun d!25011 () Bool)

(assert (=> d!25011 (= (apply!90 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46744) (apply!90 lt!46750 lt!46744))))

(assert (=> d!25011 true))

(declare-fun _$34!849 () Unit!2798)

(assert (=> d!25011 (= (choose!564 lt!46750 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46744) _$34!849)))

(declare-fun bs!3918 () Bool)

(assert (= bs!3918 d!25011))

(assert (=> bs!3918 m!101569))

(assert (=> bs!3918 m!101569))

(assert (=> bs!3918 m!101571))

(assert (=> bs!3918 m!101565))

(assert (=> d!24679 d!25011))

(declare-fun d!25013 () Bool)

(declare-fun e!62060 () Bool)

(assert (=> d!25013 e!62060))

(declare-fun res!48134 () Bool)

(assert (=> d!25013 (=> res!48134 e!62060)))

(declare-fun lt!47374 () Bool)

(assert (=> d!25013 (= res!48134 (not lt!47374))))

(declare-fun lt!47371 () Bool)

(assert (=> d!25013 (= lt!47374 lt!47371)))

(declare-fun lt!47373 () Unit!2798)

(declare-fun e!62059 () Unit!2798)

(assert (=> d!25013 (= lt!47373 e!62059)))

(declare-fun c!15930 () Bool)

(assert (=> d!25013 (= c!15930 lt!47371)))

(assert (=> d!25013 (= lt!47371 (containsKey!152 (toList!776 lt!46750) lt!46744))))

(assert (=> d!25013 (= (contains!789 lt!46750 lt!46744) lt!47374)))

(declare-fun b!95110 () Bool)

(declare-fun lt!47372 () Unit!2798)

(assert (=> b!95110 (= e!62059 lt!47372)))

(assert (=> b!95110 (= lt!47372 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46750) lt!46744))))

(assert (=> b!95110 (isDefined!101 (getValueByKey!148 (toList!776 lt!46750) lt!46744))))

(declare-fun b!95111 () Bool)

(declare-fun Unit!2843 () Unit!2798)

(assert (=> b!95111 (= e!62059 Unit!2843)))

(declare-fun b!95112 () Bool)

(assert (=> b!95112 (= e!62060 (isDefined!101 (getValueByKey!148 (toList!776 lt!46750) lt!46744)))))

(assert (= (and d!25013 c!15930) b!95110))

(assert (= (and d!25013 (not c!15930)) b!95111))

(assert (= (and d!25013 (not res!48134)) b!95112))

(declare-fun m!103065 () Bool)

(assert (=> d!25013 m!103065))

(declare-fun m!103067 () Bool)

(assert (=> b!95110 m!103067))

(assert (=> b!95110 m!101829))

(assert (=> b!95110 m!101829))

(declare-fun m!103069 () Bool)

(assert (=> b!95110 m!103069))

(assert (=> b!95112 m!101829))

(assert (=> b!95112 m!101829))

(assert (=> b!95112 m!103069))

(assert (=> d!24679 d!25013))

(assert (=> d!24679 d!24685))

(assert (=> d!24679 d!24687))

(assert (=> d!24679 d!24707))

(declare-fun lt!47377 () Bool)

(declare-fun d!25015 () Bool)

(declare-fun content!98 (List!1569) (InoxSet tuple2!2310))

(assert (=> d!25015 (= lt!47377 (select (content!98 (toList!776 lt!46838)) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun e!62066 () Bool)

(assert (=> d!25015 (= lt!47377 e!62066)))

(declare-fun res!48139 () Bool)

(assert (=> d!25015 (=> (not res!48139) (not e!62066))))

(assert (=> d!25015 (= res!48139 ((_ is Cons!1565) (toList!776 lt!46838)))))

(assert (=> d!25015 (= (contains!792 (toList!776 lt!46838) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47377)))

(declare-fun b!95117 () Bool)

(declare-fun e!62065 () Bool)

(assert (=> b!95117 (= e!62066 e!62065)))

(declare-fun res!48140 () Bool)

(assert (=> b!95117 (=> res!48140 e!62065)))

(assert (=> b!95117 (= res!48140 (= (h!2157 (toList!776 lt!46838)) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95118 () Bool)

(assert (=> b!95118 (= e!62065 (contains!792 (t!5471 (toList!776 lt!46838)) (ite (or c!15729 c!15726) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (= (and d!25015 res!48139) b!95117))

(assert (= (and b!95117 (not res!48140)) b!95118))

(declare-fun m!103071 () Bool)

(assert (=> d!25015 m!103071))

(declare-fun m!103073 () Bool)

(assert (=> d!25015 m!103073))

(declare-fun m!103075 () Bool)

(assert (=> b!95118 m!103075))

(assert (=> b!94458 d!25015))

(declare-fun d!25017 () Bool)

(assert (=> d!25017 (= (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000)) (not (isEmpty!350 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun bs!3919 () Bool)

(assert (= bs!3919 d!25017))

(assert (=> bs!3919 m!101651))

(declare-fun m!103077 () Bool)

(assert (=> bs!3919 m!103077))

(assert (=> b!94399 d!25017))

(declare-fun d!25019 () Bool)

(declare-fun c!15931 () Bool)

(assert (=> d!25019 (= c!15931 (and ((_ is Cons!1565) (toList!776 lt!46762)) (= (_1!1166 (h!2157 (toList!776 lt!46762))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!62067 () Option!154)

(assert (=> d!25019 (= (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000) e!62067)))

(declare-fun b!95121 () Bool)

(declare-fun e!62068 () Option!154)

(assert (=> b!95121 (= e!62068 (getValueByKey!148 (t!5471 (toList!776 lt!46762)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95122 () Bool)

(assert (=> b!95122 (= e!62068 None!152)))

(declare-fun b!95120 () Bool)

(assert (=> b!95120 (= e!62067 e!62068)))

(declare-fun c!15932 () Bool)

(assert (=> b!95120 (= c!15932 (and ((_ is Cons!1565) (toList!776 lt!46762)) (not (= (_1!1166 (h!2157 (toList!776 lt!46762))) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95119 () Bool)

(assert (=> b!95119 (= e!62067 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46762)))))))

(assert (= (and d!25019 c!15931) b!95119))

(assert (= (and d!25019 (not c!15931)) b!95120))

(assert (= (and b!95120 c!15932) b!95121))

(assert (= (and b!95120 (not c!15932)) b!95122))

(declare-fun m!103079 () Bool)

(assert (=> b!95121 m!103079))

(assert (=> b!94399 d!25019))

(assert (=> d!24621 d!24633))

(declare-fun bm!9568 () Bool)

(declare-fun call!9571 () Bool)

(assert (=> bm!9568 (= call!9571 (arrayContainsKey!0 (_keys!4118 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000))))

(declare-fun b!95139 () Bool)

(declare-fun e!62077 () Bool)

(assert (=> b!95139 (= e!62077 (not call!9571))))

(declare-fun b!95140 () Bool)

(declare-fun e!62080 () Bool)

(declare-fun e!62079 () Bool)

(assert (=> b!95140 (= e!62080 e!62079)))

(declare-fun c!15937 () Bool)

(declare-fun lt!47380 () SeekEntryResult!251)

(assert (=> b!95140 (= c!15937 ((_ is MissingVacant!251) lt!47380))))

(declare-fun b!95141 () Bool)

(declare-fun res!48149 () Bool)

(assert (=> b!95141 (= res!48149 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3145 lt!47380)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95141 (=> (not res!48149) (not e!62077))))

(declare-fun b!95142 () Bool)

(assert (=> b!95142 (= e!62079 ((_ is Undefined!251) lt!47380))))

(declare-fun b!95143 () Bool)

(declare-fun res!48151 () Bool)

(declare-fun e!62078 () Bool)

(assert (=> b!95143 (=> (not res!48151) (not e!62078))))

(assert (=> b!95143 (= res!48151 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!47380)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95144 () Bool)

(assert (=> b!95144 (= e!62078 (not call!9571))))

(declare-fun b!95145 () Bool)

(assert (=> b!95145 (= e!62080 e!62077)))

(declare-fun res!48152 () Bool)

(declare-fun call!9572 () Bool)

(assert (=> b!95145 (= res!48152 call!9572)))

(assert (=> b!95145 (=> (not res!48152) (not e!62077))))

(declare-fun d!25021 () Bool)

(assert (=> d!25021 e!62080))

(declare-fun c!15938 () Bool)

(assert (=> d!25021 (= c!15938 ((_ is MissingZero!251) lt!47380))))

(assert (=> d!25021 (= lt!47380 (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(assert (=> d!25021 true))

(declare-fun _$34!852 () Unit!2798)

(assert (=> d!25021 (= (choose!560 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (defaultEntry!2436 newMap!16)) _$34!852)))

(declare-fun bm!9569 () Bool)

(assert (=> bm!9569 (= call!9572 (inRange!0 (ite c!15938 (index!3145 lt!47380) (index!3148 lt!47380)) (mask!6511 newMap!16)))))

(declare-fun b!95146 () Bool)

(declare-fun res!48150 () Bool)

(assert (=> b!95146 (=> (not res!48150) (not e!62078))))

(assert (=> b!95146 (= res!48150 call!9572)))

(assert (=> b!95146 (= e!62079 e!62078)))

(assert (= (and d!25021 c!15938) b!95145))

(assert (= (and d!25021 (not c!15938)) b!95140))

(assert (= (and b!95145 res!48152) b!95141))

(assert (= (and b!95141 res!48149) b!95139))

(assert (= (and b!95140 c!15937) b!95146))

(assert (= (and b!95140 (not c!15937)) b!95142))

(assert (= (and b!95146 res!48150) b!95143))

(assert (= (and b!95143 res!48151) b!95144))

(assert (= (or b!95145 b!95146) bm!9569))

(assert (= (or b!95139 b!95144) bm!9568))

(declare-fun m!103081 () Bool)

(assert (=> b!95141 m!103081))

(declare-fun m!103083 () Bool)

(assert (=> b!95143 m!103083))

(assert (=> d!25021 m!101363))

(assert (=> d!25021 m!101503))

(declare-fun m!103085 () Bool)

(assert (=> bm!9569 m!103085))

(assert (=> bm!9568 m!101363))

(assert (=> bm!9568 m!101461))

(assert (=> d!24621 d!25021))

(assert (=> d!24621 d!24887))

(declare-fun d!25023 () Bool)

(declare-fun lt!47381 () Bool)

(assert (=> d!25023 (= lt!47381 (select (content!98 (toList!776 lt!46895)) (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun e!62082 () Bool)

(assert (=> d!25023 (= lt!47381 e!62082)))

(declare-fun res!48153 () Bool)

(assert (=> d!25023 (=> (not res!48153) (not e!62082))))

(assert (=> d!25023 (= res!48153 ((_ is Cons!1565) (toList!776 lt!46895)))))

(assert (=> d!25023 (= (contains!792 (toList!776 lt!46895) (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!47381)))

(declare-fun b!95147 () Bool)

(declare-fun e!62081 () Bool)

(assert (=> b!95147 (= e!62082 e!62081)))

(declare-fun res!48154 () Bool)

(assert (=> b!95147 (=> res!48154 e!62081)))

(assert (=> b!95147 (= res!48154 (= (h!2157 (toList!776 lt!46895)) (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95148 () Bool)

(assert (=> b!95148 (= e!62081 (contains!792 (t!5471 (toList!776 lt!46895)) (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!25023 res!48153) b!95147))

(assert (= (and b!95147 (not res!48154)) b!95148))

(declare-fun m!103087 () Bool)

(assert (=> d!25023 m!103087))

(declare-fun m!103089 () Bool)

(assert (=> d!25023 m!103089))

(declare-fun m!103091 () Bool)

(assert (=> b!95148 m!103091))

(assert (=> b!94545 d!25023))

(assert (=> b!94562 d!24907))

(assert (=> b!94562 d!24649))

(declare-fun b!95150 () Bool)

(declare-fun e!62083 () Bool)

(declare-fun lt!47402 () ListLongMap!1521)

(assert (=> b!95150 (= e!62083 (= (apply!90 lt!47402 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun e!62087 () Bool)

(declare-fun b!95151 () Bool)

(assert (=> b!95151 (= e!62087 (= (apply!90 lt!47402 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))))))

(assert (=> b!95151 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95152 () Bool)

(declare-fun e!62093 () Bool)

(assert (=> b!95152 (= e!62093 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95153 () Bool)

(declare-fun e!62088 () Bool)

(declare-fun e!62084 () Bool)

(assert (=> b!95153 (= e!62088 e!62084)))

(declare-fun res!48156 () Bool)

(declare-fun call!9574 () Bool)

(assert (=> b!95153 (= res!48156 call!9574)))

(assert (=> b!95153 (=> (not res!48156) (not e!62084))))

(declare-fun bm!9570 () Bool)

(declare-fun call!9576 () Bool)

(assert (=> bm!9570 (= call!9576 (contains!789 lt!47402 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95154 () Bool)

(assert (=> b!95154 (= e!62084 (= (apply!90 lt!47402 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!95155 () Bool)

(declare-fun e!62091 () Bool)

(assert (=> b!95155 (= e!62091 e!62087)))

(declare-fun res!48163 () Bool)

(assert (=> b!95155 (=> (not res!48163) (not e!62087))))

(assert (=> b!95155 (= res!48163 (contains!789 lt!47402 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95155 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95156 () Bool)

(declare-fun e!62086 () Bool)

(declare-fun e!62089 () Bool)

(assert (=> b!95156 (= e!62086 e!62089)))

(declare-fun c!15944 () Bool)

(assert (=> b!95156 (= c!15944 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95157 () Bool)

(assert (=> b!95157 (= e!62088 (not call!9574))))

(declare-fun b!95158 () Bool)

(declare-fun e!62085 () Unit!2798)

(declare-fun Unit!2844 () Unit!2798)

(assert (=> b!95158 (= e!62085 Unit!2844)))

(declare-fun b!95159 () Bool)

(assert (=> b!95159 (= e!62089 (not call!9576))))

(declare-fun b!95149 () Bool)

(declare-fun e!62092 () ListLongMap!1521)

(declare-fun call!9577 () ListLongMap!1521)

(assert (=> b!95149 (= e!62092 (+!133 call!9577 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!25025 () Bool)

(assert (=> d!25025 e!62086))

(declare-fun res!48158 () Bool)

(assert (=> d!25025 (=> (not res!48158) (not e!62086))))

(assert (=> d!25025 (= res!48158 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!47403 () ListLongMap!1521)

(assert (=> d!25025 (= lt!47402 lt!47403)))

(declare-fun lt!47401 () Unit!2798)

(assert (=> d!25025 (= lt!47401 e!62085)))

(declare-fun c!15942 () Bool)

(assert (=> d!25025 (= c!15942 e!62093)))

(declare-fun res!48155 () Bool)

(assert (=> d!25025 (=> (not res!48155) (not e!62093))))

(assert (=> d!25025 (= res!48155 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25025 (= lt!47403 e!62092)))

(declare-fun c!15943 () Bool)

(assert (=> d!25025 (= c!15943 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25025 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25025 (= (getCurrentListMap!468 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47402)))

(declare-fun b!95160 () Bool)

(declare-fun e!62095 () ListLongMap!1521)

(declare-fun call!9573 () ListLongMap!1521)

(assert (=> b!95160 (= e!62095 call!9573)))

(declare-fun b!95161 () Bool)

(declare-fun e!62094 () Bool)

(assert (=> b!95161 (= e!62094 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95162 () Bool)

(declare-fun e!62090 () ListLongMap!1521)

(declare-fun call!9575 () ListLongMap!1521)

(assert (=> b!95162 (= e!62090 call!9575)))

(declare-fun b!95163 () Bool)

(declare-fun res!48161 () Bool)

(assert (=> b!95163 (=> (not res!48161) (not e!62086))))

(assert (=> b!95163 (= res!48161 e!62091)))

(declare-fun res!48162 () Bool)

(assert (=> b!95163 (=> res!48162 e!62091)))

(assert (=> b!95163 (= res!48162 (not e!62094))))

(declare-fun res!48160 () Bool)

(assert (=> b!95163 (=> (not res!48160) (not e!62094))))

(assert (=> b!95163 (= res!48160 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95164 () Bool)

(declare-fun lt!47391 () Unit!2798)

(assert (=> b!95164 (= e!62085 lt!47391)))

(declare-fun lt!47398 () ListLongMap!1521)

(assert (=> b!95164 (= lt!47398 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47389 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47389 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47397 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47397 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47395 () Unit!2798)

(assert (=> b!95164 (= lt!47395 (addStillContains!66 lt!47398 lt!47389 (zeroValue!2323 newMap!16) lt!47397))))

(assert (=> b!95164 (contains!789 (+!133 lt!47398 (tuple2!2311 lt!47389 (zeroValue!2323 newMap!16))) lt!47397)))

(declare-fun lt!47385 () Unit!2798)

(assert (=> b!95164 (= lt!47385 lt!47395)))

(declare-fun lt!47390 () ListLongMap!1521)

(assert (=> b!95164 (= lt!47390 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47396 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47396 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47384 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47384 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47400 () Unit!2798)

(assert (=> b!95164 (= lt!47400 (addApplyDifferent!66 lt!47390 lt!47396 (minValue!2323 newMap!16) lt!47384))))

(assert (=> b!95164 (= (apply!90 (+!133 lt!47390 (tuple2!2311 lt!47396 (minValue!2323 newMap!16))) lt!47384) (apply!90 lt!47390 lt!47384))))

(declare-fun lt!47393 () Unit!2798)

(assert (=> b!95164 (= lt!47393 lt!47400)))

(declare-fun lt!47394 () ListLongMap!1521)

(assert (=> b!95164 (= lt!47394 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47386 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47386 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47399 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47399 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47387 () Unit!2798)

(assert (=> b!95164 (= lt!47387 (addApplyDifferent!66 lt!47394 lt!47386 (zeroValue!2323 newMap!16) lt!47399))))

(assert (=> b!95164 (= (apply!90 (+!133 lt!47394 (tuple2!2311 lt!47386 (zeroValue!2323 newMap!16))) lt!47399) (apply!90 lt!47394 lt!47399))))

(declare-fun lt!47383 () Unit!2798)

(assert (=> b!95164 (= lt!47383 lt!47387)))

(declare-fun lt!47392 () ListLongMap!1521)

(assert (=> b!95164 (= lt!47392 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47388 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47388 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47382 () (_ BitVec 64))

(assert (=> b!95164 (= lt!47382 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95164 (= lt!47391 (addApplyDifferent!66 lt!47392 lt!47388 (minValue!2323 newMap!16) lt!47382))))

(assert (=> b!95164 (= (apply!90 (+!133 lt!47392 (tuple2!2311 lt!47388 (minValue!2323 newMap!16))) lt!47382) (apply!90 lt!47392 lt!47382))))

(declare-fun b!95165 () Bool)

(declare-fun c!15941 () Bool)

(assert (=> b!95165 (= c!15941 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95165 (= e!62090 e!62095)))

(declare-fun bm!9571 () Bool)

(assert (=> bm!9571 (= call!9574 (contains!789 lt!47402 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95166 () Bool)

(assert (=> b!95166 (= e!62095 call!9575)))

(declare-fun c!15940 () Bool)

(declare-fun call!9578 () ListLongMap!1521)

(declare-fun bm!9572 () Bool)

(declare-fun call!9579 () ListLongMap!1521)

(assert (=> bm!9572 (= call!9577 (+!133 (ite c!15943 call!9579 (ite c!15940 call!9578 call!9573)) (ite (or c!15943 c!15940) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9573 () Bool)

(assert (=> bm!9573 (= call!9578 call!9579)))

(declare-fun b!95167 () Bool)

(declare-fun res!48157 () Bool)

(assert (=> b!95167 (=> (not res!48157) (not e!62086))))

(assert (=> b!95167 (= res!48157 e!62088)))

(declare-fun c!15939 () Bool)

(assert (=> b!95167 (= c!15939 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9574 () Bool)

(assert (=> bm!9574 (= call!9579 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9575 () Bool)

(assert (=> bm!9575 (= call!9573 call!9578)))

(declare-fun b!95168 () Bool)

(assert (=> b!95168 (= e!62092 e!62090)))

(assert (=> b!95168 (= c!15940 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95169 () Bool)

(assert (=> b!95169 (= e!62089 e!62083)))

(declare-fun res!48159 () Bool)

(assert (=> b!95169 (= res!48159 call!9576)))

(assert (=> b!95169 (=> (not res!48159) (not e!62083))))

(declare-fun bm!9576 () Bool)

(assert (=> bm!9576 (= call!9575 call!9577)))

(assert (= (and d!25025 c!15943) b!95149))

(assert (= (and d!25025 (not c!15943)) b!95168))

(assert (= (and b!95168 c!15940) b!95162))

(assert (= (and b!95168 (not c!15940)) b!95165))

(assert (= (and b!95165 c!15941) b!95166))

(assert (= (and b!95165 (not c!15941)) b!95160))

(assert (= (or b!95166 b!95160) bm!9575))

(assert (= (or b!95162 bm!9575) bm!9573))

(assert (= (or b!95162 b!95166) bm!9576))

(assert (= (or b!95149 bm!9573) bm!9574))

(assert (= (or b!95149 bm!9576) bm!9572))

(assert (= (and d!25025 res!48155) b!95152))

(assert (= (and d!25025 c!15942) b!95164))

(assert (= (and d!25025 (not c!15942)) b!95158))

(assert (= (and d!25025 res!48158) b!95163))

(assert (= (and b!95163 res!48160) b!95161))

(assert (= (and b!95163 (not res!48162)) b!95155))

(assert (= (and b!95155 res!48163) b!95151))

(assert (= (and b!95163 res!48161) b!95167))

(assert (= (and b!95167 c!15939) b!95153))

(assert (= (and b!95167 (not c!15939)) b!95157))

(assert (= (and b!95153 res!48156) b!95154))

(assert (= (or b!95153 b!95157) bm!9571))

(assert (= (and b!95167 res!48157) b!95156))

(assert (= (and b!95156 c!15944) b!95169))

(assert (= (and b!95156 (not c!15944)) b!95159))

(assert (= (and b!95169 res!48159) b!95150))

(assert (= (or b!95169 b!95159) bm!9570))

(declare-fun b_lambda!4189 () Bool)

(assert (=> (not b_lambda!4189) (not b!95151)))

(assert (=> b!95151 t!5479))

(declare-fun b_and!5811 () Bool)

(assert (= b_and!5807 (and (=> t!5479 result!3201) b_and!5811)))

(assert (=> b!95151 t!5481))

(declare-fun b_and!5813 () Bool)

(assert (= b_and!5809 (and (=> t!5481 result!3203) b_and!5813)))

(declare-fun m!103093 () Bool)

(assert (=> b!95149 m!103093))

(assert (=> d!25025 m!101603))

(declare-fun m!103095 () Bool)

(assert (=> b!95150 m!103095))

(declare-fun m!103097 () Bool)

(assert (=> b!95154 m!103097))

(declare-fun m!103099 () Bool)

(assert (=> bm!9572 m!103099))

(declare-fun m!103101 () Bool)

(assert (=> bm!9574 m!103101))

(assert (=> b!95155 m!101689))

(assert (=> b!95155 m!101689))

(declare-fun m!103103 () Bool)

(assert (=> b!95155 m!103103))

(declare-fun m!103105 () Bool)

(assert (=> bm!9570 m!103105))

(assert (=> b!95152 m!101689))

(assert (=> b!95152 m!101689))

(assert (=> b!95152 m!101695))

(assert (=> b!95151 m!101689))

(assert (=> b!95151 m!101697))

(declare-fun m!103107 () Bool)

(assert (=> b!95151 m!103107))

(assert (=> b!95151 m!103107))

(assert (=> b!95151 m!101697))

(declare-fun m!103109 () Bool)

(assert (=> b!95151 m!103109))

(assert (=> b!95151 m!101689))

(declare-fun m!103111 () Bool)

(assert (=> b!95151 m!103111))

(assert (=> b!95161 m!101689))

(assert (=> b!95161 m!101689))

(assert (=> b!95161 m!101695))

(declare-fun m!103113 () Bool)

(assert (=> b!95164 m!103113))

(assert (=> b!95164 m!101689))

(declare-fun m!103115 () Bool)

(assert (=> b!95164 m!103115))

(declare-fun m!103117 () Bool)

(assert (=> b!95164 m!103117))

(declare-fun m!103119 () Bool)

(assert (=> b!95164 m!103119))

(declare-fun m!103121 () Bool)

(assert (=> b!95164 m!103121))

(assert (=> b!95164 m!103119))

(declare-fun m!103123 () Bool)

(assert (=> b!95164 m!103123))

(declare-fun m!103125 () Bool)

(assert (=> b!95164 m!103125))

(declare-fun m!103127 () Bool)

(assert (=> b!95164 m!103127))

(declare-fun m!103129 () Bool)

(assert (=> b!95164 m!103129))

(declare-fun m!103131 () Bool)

(assert (=> b!95164 m!103131))

(assert (=> b!95164 m!103113))

(declare-fun m!103133 () Bool)

(assert (=> b!95164 m!103133))

(declare-fun m!103135 () Bool)

(assert (=> b!95164 m!103135))

(declare-fun m!103137 () Bool)

(assert (=> b!95164 m!103137))

(assert (=> b!95164 m!103129))

(declare-fun m!103139 () Bool)

(assert (=> b!95164 m!103139))

(assert (=> b!95164 m!103101))

(declare-fun m!103141 () Bool)

(assert (=> b!95164 m!103141))

(assert (=> b!95164 m!103135))

(declare-fun m!103143 () Bool)

(assert (=> bm!9571 m!103143))

(assert (=> b!94562 d!25025))

(declare-fun d!25027 () Bool)

(assert (=> d!25027 (= (get!1264 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!94592 d!25027))

(declare-fun d!25029 () Bool)

(assert (=> d!25029 (= (apply!90 lt!46942 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46942) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3920 () Bool)

(assert (= bs!3920 d!25029))

(assert (=> bs!3920 m!102959))

(assert (=> bs!3920 m!102959))

(declare-fun m!103145 () Bool)

(assert (=> bs!3920 m!103145))

(assert (=> b!94564 d!25029))

(declare-fun d!25031 () Bool)

(assert (=> d!25031 (= (apply!90 lt!46824 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46824) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3921 () Bool)

(assert (= bs!3921 d!25031))

(declare-fun m!103147 () Bool)

(assert (=> bs!3921 m!103147))

(assert (=> bs!3921 m!103147))

(declare-fun m!103149 () Bool)

(assert (=> bs!3921 m!103149))

(assert (=> b!94418 d!25031))

(assert (=> bm!9508 d!24633))

(declare-fun c!15945 () Bool)

(declare-fun d!25033 () Bool)

(assert (=> d!25033 (= c!15945 (and ((_ is Cons!1565) (toList!776 lt!46903)) (= (_1!1166 (h!2157 (toList!776 lt!46903))) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62096 () Option!154)

(assert (=> d!25033 (= (getValueByKey!148 (toList!776 lt!46903) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62096)))

(declare-fun b!95172 () Bool)

(declare-fun e!62097 () Option!154)

(assert (=> b!95172 (= e!62097 (getValueByKey!148 (t!5471 (toList!776 lt!46903)) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95173 () Bool)

(assert (=> b!95173 (= e!62097 None!152)))

(declare-fun b!95171 () Bool)

(assert (=> b!95171 (= e!62096 e!62097)))

(declare-fun c!15946 () Bool)

(assert (=> b!95171 (= c!15946 (and ((_ is Cons!1565) (toList!776 lt!46903)) (not (= (_1!1166 (h!2157 (toList!776 lt!46903))) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95170 () Bool)

(assert (=> b!95170 (= e!62096 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46903)))))))

(assert (= (and d!25033 c!15945) b!95170))

(assert (= (and d!25033 (not c!15945)) b!95171))

(assert (= (and b!95171 c!15946) b!95172))

(assert (= (and b!95171 (not c!15946)) b!95173))

(declare-fun m!103151 () Bool)

(assert (=> b!95172 m!103151))

(assert (=> b!94548 d!25033))

(declare-fun b!95174 () Bool)

(declare-fun e!62098 () Bool)

(declare-fun e!62100 () Bool)

(assert (=> b!95174 (= e!62098 e!62100)))

(declare-fun c!15948 () Bool)

(declare-fun e!62099 () Bool)

(assert (=> b!95174 (= c!15948 e!62099)))

(declare-fun res!48164 () Bool)

(assert (=> b!95174 (=> (not res!48164) (not e!62099))))

(assert (=> b!95174 (= res!48164 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95175 () Bool)

(assert (=> b!95175 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> b!95175 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))))))))

(declare-fun lt!47405 () ListLongMap!1521)

(declare-fun e!62104 () Bool)

(assert (=> b!95175 (= e!62104 (= (apply!90 lt!47405 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95176 () Bool)

(assert (=> b!95176 (= e!62100 e!62104)))

(assert (=> b!95176 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun res!48166 () Bool)

(assert (=> b!95176 (= res!48166 (contains!789 lt!47405 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95176 (=> (not res!48166) (not e!62104))))

(declare-fun d!25035 () Bool)

(assert (=> d!25035 e!62098))

(declare-fun res!48165 () Bool)

(assert (=> d!25035 (=> (not res!48165) (not e!62098))))

(assert (=> d!25035 (= res!48165 (not (contains!789 lt!47405 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!62102 () ListLongMap!1521)

(assert (=> d!25035 (= lt!47405 e!62102)))

(declare-fun c!15949 () Bool)

(assert (=> d!25035 (= c!15949 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25035 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25035 (= (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47405)))

(declare-fun b!95177 () Bool)

(declare-fun e!62101 () Bool)

(assert (=> b!95177 (= e!62101 (isEmpty!351 lt!47405))))

(declare-fun b!95178 () Bool)

(declare-fun e!62103 () ListLongMap!1521)

(assert (=> b!95178 (= e!62102 e!62103)))

(declare-fun c!15950 () Bool)

(assert (=> b!95178 (= c!15950 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95179 () Bool)

(assert (=> b!95179 (= e!62100 e!62101)))

(declare-fun c!15947 () Bool)

(assert (=> b!95179 (= c!15947 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95180 () Bool)

(declare-fun call!9580 () ListLongMap!1521)

(assert (=> b!95180 (= e!62103 call!9580)))

(declare-fun b!95181 () Bool)

(assert (=> b!95181 (= e!62102 (ListLongMap!1522 Nil!1566))))

(declare-fun b!95182 () Bool)

(assert (=> b!95182 (= e!62101 (= lt!47405 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16))))))

(declare-fun b!95183 () Bool)

(declare-fun res!48167 () Bool)

(assert (=> b!95183 (=> (not res!48167) (not e!62098))))

(assert (=> b!95183 (= res!48167 (not (contains!789 lt!47405 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95184 () Bool)

(declare-fun lt!47409 () Unit!2798)

(declare-fun lt!47407 () Unit!2798)

(assert (=> b!95184 (= lt!47409 lt!47407)))

(declare-fun lt!47410 () (_ BitVec 64))

(declare-fun lt!47406 () V!3131)

(declare-fun lt!47404 () (_ BitVec 64))

(declare-fun lt!47408 () ListLongMap!1521)

(assert (=> b!95184 (not (contains!789 (+!133 lt!47408 (tuple2!2311 lt!47404 lt!47406)) lt!47410))))

(assert (=> b!95184 (= lt!47407 (addStillNotContains!38 lt!47408 lt!47404 lt!47406 lt!47410))))

(assert (=> b!95184 (= lt!47410 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!95184 (= lt!47406 (get!1261 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!95184 (= lt!47404 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95184 (= lt!47408 call!9580)))

(assert (=> b!95184 (= e!62103 (+!133 call!9580 (tuple2!2311 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000) (get!1261 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95185 () Bool)

(assert (=> b!95185 (= e!62099 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95185 (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000)))

(declare-fun bm!9577 () Bool)

(assert (=> bm!9577 (= call!9580 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16)))) (mask!6511 newMap!16) (ite c!15700 (ite c!15706 lt!46686 lt!46674) (extraKeys!2265 newMap!16)) (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (defaultEntry!2436 newMap!16)))))

(assert (= (and d!25035 c!15949) b!95181))

(assert (= (and d!25035 (not c!15949)) b!95178))

(assert (= (and b!95178 c!15950) b!95184))

(assert (= (and b!95178 (not c!15950)) b!95180))

(assert (= (or b!95184 b!95180) bm!9577))

(assert (= (and d!25035 res!48165) b!95183))

(assert (= (and b!95183 res!48167) b!95174))

(assert (= (and b!95174 res!48164) b!95185))

(assert (= (and b!95174 c!15948) b!95176))

(assert (= (and b!95174 (not c!15948)) b!95179))

(assert (= (and b!95176 res!48166) b!95175))

(assert (= (and b!95179 c!15947) b!95182))

(assert (= (and b!95179 (not c!15947)) b!95177))

(declare-fun b_lambda!4191 () Bool)

(assert (=> (not b_lambda!4191) (not b!95175)))

(assert (=> b!95175 t!5479))

(declare-fun b_and!5815 () Bool)

(assert (= b_and!5811 (and (=> t!5479 result!3201) b_and!5815)))

(assert (=> b!95175 t!5481))

(declare-fun b_and!5817 () Bool)

(assert (= b_and!5813 (and (=> t!5481 result!3203) b_and!5817)))

(declare-fun b_lambda!4193 () Bool)

(assert (=> (not b_lambda!4193) (not b!95184)))

(assert (=> b!95184 t!5479))

(declare-fun b_and!5819 () Bool)

(assert (= b_and!5815 (and (=> t!5479 result!3201) b_and!5819)))

(assert (=> b!95184 t!5481))

(declare-fun b_and!5821 () Bool)

(assert (= b_and!5817 (and (=> t!5481 result!3203) b_and!5821)))

(assert (=> b!95185 m!101689))

(assert (=> b!95185 m!101689))

(assert (=> b!95185 m!101695))

(declare-fun m!103153 () Bool)

(assert (=> b!95183 m!103153))

(assert (=> b!95175 m!101697))

(assert (=> b!95175 m!102019))

(assert (=> b!95175 m!102019))

(assert (=> b!95175 m!101697))

(assert (=> b!95175 m!102021))

(assert (=> b!95175 m!101689))

(assert (=> b!95175 m!101689))

(declare-fun m!103155 () Bool)

(assert (=> b!95175 m!103155))

(declare-fun m!103157 () Bool)

(assert (=> b!95177 m!103157))

(assert (=> b!95178 m!101689))

(assert (=> b!95178 m!101689))

(assert (=> b!95178 m!101695))

(declare-fun m!103159 () Bool)

(assert (=> b!95182 m!103159))

(assert (=> bm!9577 m!103159))

(declare-fun m!103161 () Bool)

(assert (=> b!95184 m!103161))

(declare-fun m!103163 () Bool)

(assert (=> b!95184 m!103163))

(declare-fun m!103165 () Bool)

(assert (=> b!95184 m!103165))

(assert (=> b!95184 m!103163))

(assert (=> b!95184 m!102019))

(assert (=> b!95184 m!101689))

(assert (=> b!95184 m!102019))

(assert (=> b!95184 m!101697))

(assert (=> b!95184 m!102021))

(assert (=> b!95184 m!101697))

(declare-fun m!103167 () Bool)

(assert (=> b!95184 m!103167))

(declare-fun m!103169 () Bool)

(assert (=> d!25035 m!103169))

(assert (=> d!25035 m!101603))

(assert (=> b!95176 m!101689))

(assert (=> b!95176 m!101689))

(declare-fun m!103171 () Bool)

(assert (=> b!95176 m!103171))

(assert (=> bm!9495 d!25035))

(declare-fun d!25037 () Bool)

(assert (=> d!25037 (= (inRange!0 (ite c!15741 (index!3145 lt!46778) (index!3148 lt!46778)) (mask!6511 newMap!16)) (and (bvsge (ite c!15741 (index!3145 lt!46778) (index!3148 lt!46778)) #b00000000000000000000000000000000) (bvslt (ite c!15741 (index!3145 lt!46778) (index!3148 lt!46778)) (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001))))))

(assert (=> bm!9465 d!25037))

(declare-fun d!25039 () Bool)

(assert (=> d!25039 (= (apply!90 lt!46970 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1265 (getValueByKey!148 (toList!776 lt!46970) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3922 () Bool)

(assert (= bs!3922 d!25039))

(assert (=> bs!3922 m!101689))

(declare-fun m!103173 () Bool)

(assert (=> bs!3922 m!103173))

(assert (=> bs!3922 m!103173))

(declare-fun m!103175 () Bool)

(assert (=> bs!3922 m!103175))

(assert (=> b!94613 d!25039))

(declare-fun d!25041 () Bool)

(declare-fun c!15951 () Bool)

(assert (=> d!25041 (= c!15951 ((_ is ValueCellFull!963) (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000)))))

(declare-fun e!62105 () V!3131)

(assert (=> d!25041 (= (get!1261 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62105)))

(declare-fun b!95186 () Bool)

(assert (=> b!95186 (= e!62105 (get!1263 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95187 () Bool)

(assert (=> b!95187 (= e!62105 (get!1264 (select (arr!1998 (ite (or c!15700 c!15703) (_values!2419 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))))) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25041 c!15951) b!95186))

(assert (= (and d!25041 (not c!15951)) b!95187))

(assert (=> b!95186 m!102019))

(assert (=> b!95186 m!101697))

(declare-fun m!103177 () Bool)

(assert (=> b!95186 m!103177))

(assert (=> b!95187 m!102019))

(assert (=> b!95187 m!101697))

(declare-fun m!103179 () Bool)

(assert (=> b!95187 m!103179))

(assert (=> b!94613 d!25041))

(declare-fun d!25043 () Bool)

(assert (=> d!25043 (isDefined!101 (getValueByKey!148 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun lt!47411 () Unit!2798)

(assert (=> d!25043 (= lt!47411 (choose!561 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun e!62106 () Bool)

(assert (=> d!25043 e!62106))

(declare-fun res!48168 () Bool)

(assert (=> d!25043 (=> (not res!48168) (not e!62106))))

(assert (=> d!25043 (= res!48168 (isStrictlySorted!302 (toList!776 e!61513)))))

(assert (=> d!25043 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!47411)))

(declare-fun b!95188 () Bool)

(assert (=> b!95188 (= e!62106 (containsKey!152 (toList!776 e!61513) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!25043 res!48168) b!95188))

(assert (=> d!25043 m!101363))

(assert (=> d!25043 m!101789))

(assert (=> d!25043 m!101789))

(assert (=> d!25043 m!101791))

(assert (=> d!25043 m!101363))

(declare-fun m!103181 () Bool)

(assert (=> d!25043 m!103181))

(declare-fun m!103183 () Bool)

(assert (=> d!25043 m!103183))

(assert (=> b!95188 m!101363))

(assert (=> b!95188 m!101785))

(assert (=> b!94497 d!25043))

(assert (=> b!94497 d!24789))

(assert (=> b!94497 d!24791))

(declare-fun d!25045 () Bool)

(assert (=> d!25045 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (_keys!4118 newMap!16) (array!4204 (store (arr!1998 (_values!2419 newMap!16)) (index!3146 lt!46675) (ValueCellFull!963 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (size!2246 (_values!2419 newMap!16))) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!25045 true))

(declare-fun _$5!95 () Unit!2798)

(assert (=> d!25045 (= (choose!566 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (index!3146 lt!46675) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) _$5!95)))

(declare-fun bs!3923 () Bool)

(assert (= bs!3923 d!25045))

(assert (=> bs!3923 m!101465))

(assert (=> bs!3923 m!101465))

(assert (=> bs!3923 m!101925))

(assert (=> bs!3923 m!101469))

(assert (=> bs!3923 m!101927))

(assert (=> d!24713 d!25045))

(assert (=> d!24713 d!24887))

(declare-fun d!25047 () Bool)

(declare-fun res!48169 () Bool)

(declare-fun e!62107 () Bool)

(assert (=> d!25047 (=> res!48169 e!62107)))

(assert (=> d!25047 (= res!48169 (and ((_ is Cons!1565) (toList!776 call!9436)) (= (_1!1166 (h!2157 (toList!776 call!9436))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (=> d!25047 (= (containsKey!152 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!62107)))

(declare-fun b!95189 () Bool)

(declare-fun e!62108 () Bool)

(assert (=> b!95189 (= e!62107 e!62108)))

(declare-fun res!48170 () Bool)

(assert (=> b!95189 (=> (not res!48170) (not e!62108))))

(assert (=> b!95189 (= res!48170 (and (or (not ((_ is Cons!1565) (toList!776 call!9436))) (bvsle (_1!1166 (h!2157 (toList!776 call!9436))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) ((_ is Cons!1565) (toList!776 call!9436)) (bvslt (_1!1166 (h!2157 (toList!776 call!9436))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun b!95190 () Bool)

(assert (=> b!95190 (= e!62108 (containsKey!152 (t!5471 (toList!776 call!9436)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!25047 (not res!48169)) b!95189))

(assert (= (and b!95189 res!48170) b!95190))

(assert (=> b!95190 m!101363))

(declare-fun m!103185 () Bool)

(assert (=> b!95190 m!103185))

(assert (=> d!24643 d!25047))

(declare-fun d!25049 () Bool)

(assert (=> d!25049 (isDefined!101 (getValueByKey!148 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(declare-fun lt!47412 () Unit!2798)

(assert (=> d!25049 (= lt!47412 (choose!561 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(declare-fun e!62109 () Bool)

(assert (=> d!25049 e!62109))

(declare-fun res!48171 () Bool)

(assert (=> d!25049 (=> (not res!48171) (not e!62109))))

(assert (=> d!25049 (= res!48171 (isStrictlySorted!302 (toList!776 call!9435)))))

(assert (=> d!25049 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))) lt!47412)))

(declare-fun b!95191 () Bool)

(assert (=> b!95191 (= e!62109 (containsKey!152 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (= (and d!25049 res!48171) b!95191))

(assert (=> d!25049 m!101489))

(assert (=> d!25049 m!101913))

(assert (=> d!25049 m!101913))

(assert (=> d!25049 m!101915))

(assert (=> d!25049 m!101489))

(declare-fun m!103187 () Bool)

(assert (=> d!25049 m!103187))

(declare-fun m!103189 () Bool)

(assert (=> d!25049 m!103189))

(assert (=> b!95191 m!101489))

(assert (=> b!95191 m!101909))

(assert (=> b!94554 d!25049))

(declare-fun d!25051 () Bool)

(assert (=> d!25051 (= (isDefined!101 (getValueByKey!148 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))) (not (isEmpty!350 (getValueByKey!148 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))))

(declare-fun bs!3924 () Bool)

(assert (= bs!3924 d!25051))

(assert (=> bs!3924 m!101913))

(declare-fun m!103191 () Bool)

(assert (=> bs!3924 m!103191))

(assert (=> b!94554 d!25051))

(declare-fun c!15952 () Bool)

(declare-fun d!25053 () Bool)

(assert (=> d!25053 (= c!15952 (and ((_ is Cons!1565) (toList!776 call!9435)) (= (_1!1166 (h!2157 (toList!776 call!9435))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))))

(declare-fun e!62110 () Option!154)

(assert (=> d!25053 (= (getValueByKey!148 (toList!776 call!9435) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))) e!62110)))

(declare-fun e!62111 () Option!154)

(declare-fun b!95194 () Bool)

(assert (=> b!95194 (= e!62111 (getValueByKey!148 (t!5471 (toList!776 call!9435)) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(declare-fun b!95195 () Bool)

(assert (=> b!95195 (= e!62111 None!152)))

(declare-fun b!95193 () Bool)

(assert (=> b!95193 (= e!62110 e!62111)))

(declare-fun c!15953 () Bool)

(assert (=> b!95193 (= c!15953 (and ((_ is Cons!1565) (toList!776 call!9435)) (not (= (_1!1166 (h!2157 (toList!776 call!9435))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))))

(declare-fun b!95192 () Bool)

(assert (=> b!95192 (= e!62110 (Some!153 (_2!1166 (h!2157 (toList!776 call!9435)))))))

(assert (= (and d!25053 c!15952) b!95192))

(assert (= (and d!25053 (not c!15952)) b!95193))

(assert (= (and b!95193 c!15953) b!95194))

(assert (= (and b!95193 (not c!15953)) b!95195))

(assert (=> b!95194 m!101489))

(declare-fun m!103193 () Bool)

(assert (=> b!95194 m!103193))

(assert (=> b!94554 d!25053))

(declare-fun d!25055 () Bool)

(declare-fun e!62113 () Bool)

(assert (=> d!25055 e!62113))

(declare-fun res!48172 () Bool)

(assert (=> d!25055 (=> res!48172 e!62113)))

(declare-fun lt!47416 () Bool)

(assert (=> d!25055 (= res!48172 (not lt!47416))))

(declare-fun lt!47413 () Bool)

(assert (=> d!25055 (= lt!47416 lt!47413)))

(declare-fun lt!47415 () Unit!2798)

(declare-fun e!62112 () Unit!2798)

(assert (=> d!25055 (= lt!47415 e!62112)))

(declare-fun c!15954 () Bool)

(assert (=> d!25055 (= c!15954 lt!47413)))

(assert (=> d!25055 (= lt!47413 (containsKey!152 (toList!776 lt!46824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25055 (= (contains!789 lt!46824 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47416)))

(declare-fun b!95196 () Bool)

(declare-fun lt!47414 () Unit!2798)

(assert (=> b!95196 (= e!62112 lt!47414)))

(assert (=> b!95196 (= lt!47414 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95196 (isDefined!101 (getValueByKey!148 (toList!776 lt!46824) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95197 () Bool)

(declare-fun Unit!2845 () Unit!2798)

(assert (=> b!95197 (= e!62112 Unit!2845)))

(declare-fun b!95198 () Bool)

(assert (=> b!95198 (= e!62113 (isDefined!101 (getValueByKey!148 (toList!776 lt!46824) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25055 c!15954) b!95196))

(assert (= (and d!25055 (not c!15954)) b!95197))

(assert (= (and d!25055 (not res!48172)) b!95198))

(declare-fun m!103195 () Bool)

(assert (=> d!25055 m!103195))

(declare-fun m!103197 () Bool)

(assert (=> b!95196 m!103197))

(assert (=> b!95196 m!103147))

(assert (=> b!95196 m!103147))

(declare-fun m!103199 () Bool)

(assert (=> b!95196 m!103199))

(assert (=> b!95198 m!103147))

(assert (=> b!95198 m!103147))

(assert (=> b!95198 m!103199))

(assert (=> bm!9467 d!25055))

(declare-fun d!25057 () Bool)

(declare-fun e!62115 () Bool)

(assert (=> d!25057 e!62115))

(declare-fun res!48173 () Bool)

(assert (=> d!25057 (=> res!48173 e!62115)))

(declare-fun lt!47420 () Bool)

(assert (=> d!25057 (= res!48173 (not lt!47420))))

(declare-fun lt!47417 () Bool)

(assert (=> d!25057 (= lt!47420 lt!47417)))

(declare-fun lt!47419 () Unit!2798)

(declare-fun e!62114 () Unit!2798)

(assert (=> d!25057 (= lt!47419 e!62114)))

(declare-fun c!15955 () Bool)

(assert (=> d!25057 (= c!15955 lt!47417)))

(assert (=> d!25057 (= lt!47417 (containsKey!152 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (=> d!25057 (= (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))) lt!47420)))

(declare-fun b!95199 () Bool)

(declare-fun lt!47418 () Unit!2798)

(assert (=> b!95199 (= e!62114 lt!47418)))

(assert (=> b!95199 (= lt!47418 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(assert (=> b!95199 (isDefined!101 (getValueByKey!148 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675))))))

(declare-fun b!95200 () Bool)

(declare-fun Unit!2846 () Unit!2798)

(assert (=> b!95200 (= e!62114 Unit!2846)))

(declare-fun b!95201 () Bool)

(assert (=> b!95201 (= e!62115 (isDefined!101 (getValueByKey!148 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!46675)))))))

(assert (= (and d!25057 c!15955) b!95199))

(assert (= (and d!25057 (not c!15955)) b!95200))

(assert (= (and d!25057 (not res!48173)) b!95201))

(assert (=> d!25057 m!101489))

(declare-fun m!103201 () Bool)

(assert (=> d!25057 m!103201))

(assert (=> b!95199 m!101489))

(declare-fun m!103203 () Bool)

(assert (=> b!95199 m!103203))

(assert (=> b!95199 m!101489))

(declare-fun m!103205 () Bool)

(assert (=> b!95199 m!103205))

(assert (=> b!95199 m!103205))

(declare-fun m!103207 () Bool)

(assert (=> b!95199 m!103207))

(assert (=> b!95201 m!101489))

(assert (=> b!95201 m!103205))

(assert (=> b!95201 m!103205))

(assert (=> b!95201 m!103207))

(assert (=> b!94559 d!25057))

(declare-fun b!95203 () Bool)

(declare-fun e!62116 () Bool)

(declare-fun lt!47441 () ListLongMap!1521)

(assert (=> b!95203 (= e!62116 (= (apply!90 lt!47441 #b1000000000000000000000000000000000000000000000000000000000000000) (minValue!2323 newMap!16)))))

(declare-fun e!62120 () Bool)

(declare-fun b!95204 () Bool)

(assert (=> b!95204 (= e!62120 (= (apply!90 lt!47441 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 lt!46687) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95204 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 lt!46687)))))

(assert (=> b!95204 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95205 () Bool)

(declare-fun e!62126 () Bool)

(assert (=> b!95205 (= e!62126 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95206 () Bool)

(declare-fun e!62121 () Bool)

(declare-fun e!62117 () Bool)

(assert (=> b!95206 (= e!62121 e!62117)))

(declare-fun res!48175 () Bool)

(declare-fun call!9582 () Bool)

(assert (=> b!95206 (= res!48175 call!9582)))

(assert (=> b!95206 (=> (not res!48175) (not e!62117))))

(declare-fun bm!9578 () Bool)

(declare-fun call!9584 () Bool)

(assert (=> bm!9578 (= call!9584 (contains!789 lt!47441 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95207 () Bool)

(assert (=> b!95207 (= e!62117 (= (apply!90 lt!47441 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!95208 () Bool)

(declare-fun e!62124 () Bool)

(assert (=> b!95208 (= e!62124 e!62120)))

(declare-fun res!48182 () Bool)

(assert (=> b!95208 (=> (not res!48182) (not e!62120))))

(assert (=> b!95208 (= res!48182 (contains!789 lt!47441 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95208 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95209 () Bool)

(declare-fun e!62119 () Bool)

(declare-fun e!62122 () Bool)

(assert (=> b!95209 (= e!62119 e!62122)))

(declare-fun c!15961 () Bool)

(assert (=> b!95209 (= c!15961 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95210 () Bool)

(assert (=> b!95210 (= e!62121 (not call!9582))))

(declare-fun b!95211 () Bool)

(declare-fun e!62118 () Unit!2798)

(declare-fun Unit!2847 () Unit!2798)

(assert (=> b!95211 (= e!62118 Unit!2847)))

(declare-fun b!95212 () Bool)

(assert (=> b!95212 (= e!62122 (not call!9584))))

(declare-fun b!95202 () Bool)

(declare-fun e!62125 () ListLongMap!1521)

(declare-fun call!9585 () ListLongMap!1521)

(assert (=> b!95202 (= e!62125 (+!133 call!9585 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))

(declare-fun d!25059 () Bool)

(assert (=> d!25059 e!62119))

(declare-fun res!48177 () Bool)

(assert (=> d!25059 (=> (not res!48177) (not e!62119))))

(assert (=> d!25059 (= res!48177 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!47442 () ListLongMap!1521)

(assert (=> d!25059 (= lt!47441 lt!47442)))

(declare-fun lt!47440 () Unit!2798)

(assert (=> d!25059 (= lt!47440 e!62118)))

(declare-fun c!15959 () Bool)

(assert (=> d!25059 (= c!15959 e!62126)))

(declare-fun res!48174 () Bool)

(assert (=> d!25059 (=> (not res!48174) (not e!62126))))

(assert (=> d!25059 (= res!48174 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25059 (= lt!47442 e!62125)))

(declare-fun c!15960 () Bool)

(assert (=> d!25059 (= c!15960 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25059 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25059 (= (getCurrentListMap!468 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47441)))

(declare-fun b!95213 () Bool)

(declare-fun e!62128 () ListLongMap!1521)

(declare-fun call!9581 () ListLongMap!1521)

(assert (=> b!95213 (= e!62128 call!9581)))

(declare-fun b!95214 () Bool)

(declare-fun e!62127 () Bool)

(assert (=> b!95214 (= e!62127 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95215 () Bool)

(declare-fun e!62123 () ListLongMap!1521)

(declare-fun call!9583 () ListLongMap!1521)

(assert (=> b!95215 (= e!62123 call!9583)))

(declare-fun b!95216 () Bool)

(declare-fun res!48180 () Bool)

(assert (=> b!95216 (=> (not res!48180) (not e!62119))))

(assert (=> b!95216 (= res!48180 e!62124)))

(declare-fun res!48181 () Bool)

(assert (=> b!95216 (=> res!48181 e!62124)))

(assert (=> b!95216 (= res!48181 (not e!62127))))

(declare-fun res!48179 () Bool)

(assert (=> b!95216 (=> (not res!48179) (not e!62127))))

(assert (=> b!95216 (= res!48179 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95217 () Bool)

(declare-fun lt!47430 () Unit!2798)

(assert (=> b!95217 (= e!62118 lt!47430)))

(declare-fun lt!47437 () ListLongMap!1521)

(assert (=> b!95217 (= lt!47437 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47428 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47428 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47436 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47436 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47434 () Unit!2798)

(assert (=> b!95217 (= lt!47434 (addStillContains!66 lt!47437 lt!47428 (zeroValue!2323 newMap!16) lt!47436))))

(assert (=> b!95217 (contains!789 (+!133 lt!47437 (tuple2!2311 lt!47428 (zeroValue!2323 newMap!16))) lt!47436)))

(declare-fun lt!47424 () Unit!2798)

(assert (=> b!95217 (= lt!47424 lt!47434)))

(declare-fun lt!47429 () ListLongMap!1521)

(assert (=> b!95217 (= lt!47429 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47435 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47435 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47423 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47423 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47439 () Unit!2798)

(assert (=> b!95217 (= lt!47439 (addApplyDifferent!66 lt!47429 lt!47435 (minValue!2323 newMap!16) lt!47423))))

(assert (=> b!95217 (= (apply!90 (+!133 lt!47429 (tuple2!2311 lt!47435 (minValue!2323 newMap!16))) lt!47423) (apply!90 lt!47429 lt!47423))))

(declare-fun lt!47432 () Unit!2798)

(assert (=> b!95217 (= lt!47432 lt!47439)))

(declare-fun lt!47433 () ListLongMap!1521)

(assert (=> b!95217 (= lt!47433 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47425 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47425 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47438 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47438 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47426 () Unit!2798)

(assert (=> b!95217 (= lt!47426 (addApplyDifferent!66 lt!47433 lt!47425 (zeroValue!2323 newMap!16) lt!47438))))

(assert (=> b!95217 (= (apply!90 (+!133 lt!47433 (tuple2!2311 lt!47425 (zeroValue!2323 newMap!16))) lt!47438) (apply!90 lt!47433 lt!47438))))

(declare-fun lt!47422 () Unit!2798)

(assert (=> b!95217 (= lt!47422 lt!47426)))

(declare-fun lt!47431 () ListLongMap!1521)

(assert (=> b!95217 (= lt!47431 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47427 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47427 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47421 () (_ BitVec 64))

(assert (=> b!95217 (= lt!47421 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95217 (= lt!47430 (addApplyDifferent!66 lt!47431 lt!47427 (minValue!2323 newMap!16) lt!47421))))

(assert (=> b!95217 (= (apply!90 (+!133 lt!47431 (tuple2!2311 lt!47427 (minValue!2323 newMap!16))) lt!47421) (apply!90 lt!47431 lt!47421))))

(declare-fun b!95218 () Bool)

(declare-fun c!15958 () Bool)

(assert (=> b!95218 (= c!15958 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95218 (= e!62123 e!62128)))

(declare-fun bm!9579 () Bool)

(assert (=> bm!9579 (= call!9582 (contains!789 lt!47441 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95219 () Bool)

(assert (=> b!95219 (= e!62128 call!9583)))

(declare-fun call!9587 () ListLongMap!1521)

(declare-fun bm!9580 () Bool)

(declare-fun call!9586 () ListLongMap!1521)

(declare-fun c!15957 () Bool)

(assert (=> bm!9580 (= call!9585 (+!133 (ite c!15960 call!9587 (ite c!15957 call!9586 call!9581)) (ite (or c!15960 c!15957) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(declare-fun bm!9581 () Bool)

(assert (=> bm!9581 (= call!9586 call!9587)))

(declare-fun b!95220 () Bool)

(declare-fun res!48176 () Bool)

(assert (=> b!95220 (=> (not res!48176) (not e!62119))))

(assert (=> b!95220 (= res!48176 e!62121)))

(declare-fun c!15956 () Bool)

(assert (=> b!95220 (= c!15956 (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9582 () Bool)

(assert (=> bm!9582 (= call!9587 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) lt!46687 (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9583 () Bool)

(assert (=> bm!9583 (= call!9581 call!9586)))

(declare-fun b!95221 () Bool)

(assert (=> b!95221 (= e!62125 e!62123)))

(assert (=> b!95221 (= c!15957 (and (not (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand (extraKeys!2265 newMap!16) #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95222 () Bool)

(assert (=> b!95222 (= e!62122 e!62116)))

(declare-fun res!48178 () Bool)

(assert (=> b!95222 (= res!48178 call!9584)))

(assert (=> b!95222 (=> (not res!48178) (not e!62116))))

(declare-fun bm!9584 () Bool)

(assert (=> bm!9584 (= call!9583 call!9585)))

(assert (= (and d!25059 c!15960) b!95202))

(assert (= (and d!25059 (not c!15960)) b!95221))

(assert (= (and b!95221 c!15957) b!95215))

(assert (= (and b!95221 (not c!15957)) b!95218))

(assert (= (and b!95218 c!15958) b!95219))

(assert (= (and b!95218 (not c!15958)) b!95213))

(assert (= (or b!95219 b!95213) bm!9583))

(assert (= (or b!95215 bm!9583) bm!9581))

(assert (= (or b!95215 b!95219) bm!9584))

(assert (= (or b!95202 bm!9581) bm!9582))

(assert (= (or b!95202 bm!9584) bm!9580))

(assert (= (and d!25059 res!48174) b!95205))

(assert (= (and d!25059 c!15959) b!95217))

(assert (= (and d!25059 (not c!15959)) b!95211))

(assert (= (and d!25059 res!48177) b!95216))

(assert (= (and b!95216 res!48179) b!95214))

(assert (= (and b!95216 (not res!48181)) b!95208))

(assert (= (and b!95208 res!48182) b!95204))

(assert (= (and b!95216 res!48180) b!95220))

(assert (= (and b!95220 c!15956) b!95206))

(assert (= (and b!95220 (not c!15956)) b!95210))

(assert (= (and b!95206 res!48175) b!95207))

(assert (= (or b!95206 b!95210) bm!9579))

(assert (= (and b!95220 res!48176) b!95209))

(assert (= (and b!95209 c!15961) b!95222))

(assert (= (and b!95209 (not c!15961)) b!95212))

(assert (= (and b!95222 res!48178) b!95203))

(assert (= (or b!95222 b!95212) bm!9578))

(declare-fun b_lambda!4195 () Bool)

(assert (=> (not b_lambda!4195) (not b!95204)))

(assert (=> b!95204 t!5479))

(declare-fun b_and!5823 () Bool)

(assert (= b_and!5819 (and (=> t!5479 result!3201) b_and!5823)))

(assert (=> b!95204 t!5481))

(declare-fun b_and!5825 () Bool)

(assert (= b_and!5821 (and (=> t!5481 result!3203) b_and!5825)))

(declare-fun m!103209 () Bool)

(assert (=> b!95202 m!103209))

(assert (=> d!25059 m!101603))

(declare-fun m!103211 () Bool)

(assert (=> b!95203 m!103211))

(declare-fun m!103213 () Bool)

(assert (=> b!95207 m!103213))

(declare-fun m!103215 () Bool)

(assert (=> bm!9580 m!103215))

(declare-fun m!103217 () Bool)

(assert (=> bm!9582 m!103217))

(assert (=> b!95208 m!101689))

(assert (=> b!95208 m!101689))

(declare-fun m!103219 () Bool)

(assert (=> b!95208 m!103219))

(declare-fun m!103221 () Bool)

(assert (=> bm!9578 m!103221))

(assert (=> b!95205 m!101689))

(assert (=> b!95205 m!101689))

(assert (=> b!95205 m!101695))

(assert (=> b!95204 m!101689))

(assert (=> b!95204 m!101697))

(declare-fun m!103223 () Bool)

(assert (=> b!95204 m!103223))

(assert (=> b!95204 m!103223))

(assert (=> b!95204 m!101697))

(declare-fun m!103225 () Bool)

(assert (=> b!95204 m!103225))

(assert (=> b!95204 m!101689))

(declare-fun m!103227 () Bool)

(assert (=> b!95204 m!103227))

(assert (=> b!95214 m!101689))

(assert (=> b!95214 m!101689))

(assert (=> b!95214 m!101695))

(declare-fun m!103229 () Bool)

(assert (=> b!95217 m!103229))

(assert (=> b!95217 m!101689))

(declare-fun m!103231 () Bool)

(assert (=> b!95217 m!103231))

(declare-fun m!103233 () Bool)

(assert (=> b!95217 m!103233))

(declare-fun m!103235 () Bool)

(assert (=> b!95217 m!103235))

(declare-fun m!103237 () Bool)

(assert (=> b!95217 m!103237))

(assert (=> b!95217 m!103235))

(declare-fun m!103239 () Bool)

(assert (=> b!95217 m!103239))

(declare-fun m!103241 () Bool)

(assert (=> b!95217 m!103241))

(declare-fun m!103243 () Bool)

(assert (=> b!95217 m!103243))

(declare-fun m!103245 () Bool)

(assert (=> b!95217 m!103245))

(declare-fun m!103247 () Bool)

(assert (=> b!95217 m!103247))

(assert (=> b!95217 m!103229))

(declare-fun m!103249 () Bool)

(assert (=> b!95217 m!103249))

(declare-fun m!103251 () Bool)

(assert (=> b!95217 m!103251))

(declare-fun m!103253 () Bool)

(assert (=> b!95217 m!103253))

(assert (=> b!95217 m!103245))

(declare-fun m!103255 () Bool)

(assert (=> b!95217 m!103255))

(assert (=> b!95217 m!103217))

(declare-fun m!103257 () Bool)

(assert (=> b!95217 m!103257))

(assert (=> b!95217 m!103251))

(declare-fun m!103259 () Bool)

(assert (=> bm!9579 m!103259))

(assert (=> b!94559 d!25059))

(declare-fun b!95223 () Bool)

(declare-fun e!62129 () Bool)

(declare-fun e!62131 () Bool)

(assert (=> b!95223 (= e!62129 e!62131)))

(declare-fun c!15963 () Bool)

(declare-fun e!62130 () Bool)

(assert (=> b!95223 (= c!15963 e!62130)))

(declare-fun res!48183 () Bool)

(assert (=> b!95223 (=> (not res!48183) (not e!62130))))

(assert (=> b!95223 (= res!48183 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95224 () Bool)

(assert (=> b!95224 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> b!95224 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun e!62135 () Bool)

(declare-fun lt!47444 () ListLongMap!1521)

(assert (=> b!95224 (= e!62135 (= (apply!90 lt!47444 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95225 () Bool)

(assert (=> b!95225 (= e!62131 e!62135)))

(assert (=> b!95225 (and (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun res!48185 () Bool)

(assert (=> b!95225 (= res!48185 (contains!789 lt!47444 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!95225 (=> (not res!48185) (not e!62135))))

(declare-fun d!25061 () Bool)

(assert (=> d!25061 e!62129))

(declare-fun res!48184 () Bool)

(assert (=> d!25061 (=> (not res!48184) (not e!62129))))

(assert (=> d!25061 (= res!48184 (not (contains!789 lt!47444 #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun e!62133 () ListLongMap!1521)

(assert (=> d!25061 (= lt!47444 e!62133)))

(declare-fun c!15964 () Bool)

(assert (=> d!25061 (= c!15964 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!25061 (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992))))))

(assert (=> d!25061 (= (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))) lt!47444)))

(declare-fun b!95226 () Bool)

(declare-fun e!62132 () Bool)

(assert (=> b!95226 (= e!62132 (isEmpty!351 lt!47444))))

(declare-fun b!95227 () Bool)

(declare-fun e!62134 () ListLongMap!1521)

(assert (=> b!95227 (= e!62133 e!62134)))

(declare-fun c!15965 () Bool)

(assert (=> b!95227 (= c!15965 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(declare-fun b!95228 () Bool)

(assert (=> b!95228 (= e!62131 e!62132)))

(declare-fun c!15962 () Bool)

(assert (=> b!95228 (= c!15962 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95229 () Bool)

(declare-fun call!9588 () ListLongMap!1521)

(assert (=> b!95229 (= e!62134 call!9588)))

(declare-fun b!95230 () Bool)

(assert (=> b!95230 (= e!62133 (ListLongMap!1522 Nil!1566))))

(declare-fun b!95231 () Bool)

(assert (=> b!95231 (= e!62132 (= lt!47444 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95232 () Bool)

(declare-fun res!48186 () Bool)

(assert (=> b!95232 (=> (not res!48186) (not e!62129))))

(assert (=> b!95232 (= res!48186 (not (contains!789 lt!47444 #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95233 () Bool)

(declare-fun lt!47448 () Unit!2798)

(declare-fun lt!47446 () Unit!2798)

(assert (=> b!95233 (= lt!47448 lt!47446)))

(declare-fun lt!47449 () (_ BitVec 64))

(declare-fun lt!47445 () V!3131)

(declare-fun lt!47447 () ListLongMap!1521)

(declare-fun lt!47443 () (_ BitVec 64))

(assert (=> b!95233 (not (contains!789 (+!133 lt!47447 (tuple2!2311 lt!47443 lt!47445)) lt!47449))))

(assert (=> b!95233 (= lt!47446 (addStillNotContains!38 lt!47447 lt!47443 lt!47445 lt!47449))))

(assert (=> b!95233 (= lt!47449 #b0000000000000000000000000000000000000000000000000000000000000000)))

(assert (=> b!95233 (= lt!47445 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> b!95233 (= lt!47443 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)))))

(assert (=> b!95233 (= lt!47447 call!9588)))

(assert (=> b!95233 (= e!62134 (+!133 call!9588 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001)) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95234 () Bool)

(assert (=> b!95234 (= e!62130 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001))))))

(assert (=> b!95234 (bvsge (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))

(declare-fun bm!9585 () Bool)

(assert (=> bm!9585 (= call!9588 (getCurrentListMapNoExtraKeys!98 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (_values!2419 (v!2762 (underlying!328 thiss!992))) (mask!6511 (v!2762 (underlying!328 thiss!992))) (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) (minValue!2323 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992)))))))

(assert (= (and d!25061 c!15964) b!95230))

(assert (= (and d!25061 (not c!15964)) b!95227))

(assert (= (and b!95227 c!15965) b!95233))

(assert (= (and b!95227 (not c!15965)) b!95229))

(assert (= (or b!95233 b!95229) bm!9585))

(assert (= (and d!25061 res!48184) b!95232))

(assert (= (and b!95232 res!48186) b!95223))

(assert (= (and b!95223 res!48183) b!95234))

(assert (= (and b!95223 c!15963) b!95225))

(assert (= (and b!95223 (not c!15963)) b!95228))

(assert (= (and b!95225 res!48185) b!95224))

(assert (= (and b!95228 c!15962) b!95231))

(assert (= (and b!95228 (not c!15962)) b!95226))

(declare-fun b_lambda!4197 () Bool)

(assert (=> (not b_lambda!4197) (not b!95224)))

(assert (=> b!95224 t!5467))

(declare-fun b_and!5827 () Bool)

(assert (= b_and!5823 (and (=> t!5467 result!3187) b_and!5827)))

(assert (=> b!95224 t!5469))

(declare-fun b_and!5829 () Bool)

(assert (= b_and!5825 (and (=> t!5469 result!3191) b_and!5829)))

(declare-fun b_lambda!4199 () Bool)

(assert (=> (not b_lambda!4199) (not b!95233)))

(assert (=> b!95233 t!5467))

(declare-fun b_and!5831 () Bool)

(assert (= b_and!5827 (and (=> t!5467 result!3187) b_and!5831)))

(assert (=> b!95233 t!5469))

(declare-fun b_and!5833 () Bool)

(assert (= b_and!5829 (and (=> t!5469 result!3191) b_and!5833)))

(assert (=> b!95234 m!101781))

(assert (=> b!95234 m!101781))

(declare-fun m!103261 () Bool)

(assert (=> b!95234 m!103261))

(declare-fun m!103263 () Bool)

(assert (=> b!95232 m!103263))

(assert (=> b!95224 m!101359))

(declare-fun m!103265 () Bool)

(assert (=> b!95224 m!103265))

(assert (=> b!95224 m!103265))

(assert (=> b!95224 m!101359))

(declare-fun m!103267 () Bool)

(assert (=> b!95224 m!103267))

(assert (=> b!95224 m!101781))

(assert (=> b!95224 m!101781))

(declare-fun m!103269 () Bool)

(assert (=> b!95224 m!103269))

(declare-fun m!103271 () Bool)

(assert (=> b!95226 m!103271))

(assert (=> b!95227 m!101781))

(assert (=> b!95227 m!101781))

(assert (=> b!95227 m!103261))

(declare-fun m!103273 () Bool)

(assert (=> b!95231 m!103273))

(assert (=> bm!9585 m!103273))

(declare-fun m!103275 () Bool)

(assert (=> b!95233 m!103275))

(declare-fun m!103277 () Bool)

(assert (=> b!95233 m!103277))

(declare-fun m!103279 () Bool)

(assert (=> b!95233 m!103279))

(assert (=> b!95233 m!103277))

(assert (=> b!95233 m!103265))

(assert (=> b!95233 m!101781))

(assert (=> b!95233 m!103265))

(assert (=> b!95233 m!101359))

(assert (=> b!95233 m!103267))

(assert (=> b!95233 m!101359))

(declare-fun m!103281 () Bool)

(assert (=> b!95233 m!103281))

(declare-fun m!103283 () Bool)

(assert (=> d!25061 m!103283))

(assert (=> d!25061 m!101373))

(assert (=> b!95225 m!101781))

(assert (=> b!95225 m!101781))

(declare-fun m!103285 () Bool)

(assert (=> b!95225 m!103285))

(assert (=> b!94537 d!25061))

(declare-fun d!25063 () Bool)

(declare-fun res!48187 () Bool)

(declare-fun e!62136 () Bool)

(assert (=> d!25063 (=> res!48187 e!62136)))

(assert (=> d!25063 (= res!48187 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25063 (= (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (_keys!4118 newMap!16) (mask!6511 newMap!16)) e!62136)))

(declare-fun b!95235 () Bool)

(declare-fun e!62138 () Bool)

(declare-fun call!9589 () Bool)

(assert (=> b!95235 (= e!62138 call!9589)))

(declare-fun b!95236 () Bool)

(declare-fun e!62137 () Bool)

(assert (=> b!95236 (= e!62137 e!62138)))

(declare-fun lt!47450 () (_ BitVec 64))

(assert (=> b!95236 (= lt!47450 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(declare-fun lt!47452 () Unit!2798)

(assert (=> b!95236 (= lt!47452 (lemmaArrayContainsFromImpliesContainsFromZero!0 (_keys!4118 newMap!16) lt!47450 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)))))

(assert (=> b!95236 (arrayContainsKey!0 (_keys!4118 newMap!16) lt!47450 #b00000000000000000000000000000000)))

(declare-fun lt!47451 () Unit!2798)

(assert (=> b!95236 (= lt!47451 lt!47452)))

(declare-fun res!48188 () Bool)

(assert (=> b!95236 (= res!48188 (= (seekEntryOrOpen!0 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001)) (_keys!4118 newMap!16) (mask!6511 newMap!16)) (Found!251 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (=> b!95236 (=> (not res!48188) (not e!62138))))

(declare-fun b!95237 () Bool)

(assert (=> b!95237 (= e!62136 e!62137)))

(declare-fun c!15966 () Bool)

(assert (=> b!95237 (= c!15966 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun bm!9586 () Bool)

(assert (=> bm!9586 (= call!9589 (arrayForallSeekEntryOrOpenFound!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!95238 () Bool)

(assert (=> b!95238 (= e!62137 call!9589)))

(assert (= (and d!25063 (not res!48187)) b!95237))

(assert (= (and b!95237 c!15966) b!95236))

(assert (= (and b!95237 (not c!15966)) b!95238))

(assert (= (and b!95236 res!48188) b!95235))

(assert (= (or b!95235 b!95238) bm!9586))

(assert (=> b!95236 m!102881))

(declare-fun m!103287 () Bool)

(assert (=> b!95236 m!103287))

(declare-fun m!103289 () Bool)

(assert (=> b!95236 m!103289))

(assert (=> b!95236 m!102881))

(declare-fun m!103291 () Bool)

(assert (=> b!95236 m!103291))

(assert (=> b!95237 m!102881))

(assert (=> b!95237 m!102881))

(assert (=> b!95237 m!102945))

(declare-fun m!103293 () Bool)

(assert (=> bm!9586 m!103293))

(assert (=> bm!9476 d!25063))

(declare-fun d!25065 () Bool)

(declare-fun res!48189 () Bool)

(declare-fun e!62139 () Bool)

(assert (=> d!25065 (=> res!48189 e!62139)))

(assert (=> d!25065 (= res!48189 (and ((_ is Cons!1565) (t!5471 (toList!776 lt!46578))) (= (_1!1166 (h!2157 (t!5471 (toList!776 lt!46578)))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (=> d!25065 (= (containsKey!152 (t!5471 (toList!776 lt!46578)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!62139)))

(declare-fun b!95239 () Bool)

(declare-fun e!62140 () Bool)

(assert (=> b!95239 (= e!62139 e!62140)))

(declare-fun res!48190 () Bool)

(assert (=> b!95239 (=> (not res!48190) (not e!62140))))

(assert (=> b!95239 (= res!48190 (and (or (not ((_ is Cons!1565) (t!5471 (toList!776 lt!46578)))) (bvsle (_1!1166 (h!2157 (t!5471 (toList!776 lt!46578)))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) ((_ is Cons!1565) (t!5471 (toList!776 lt!46578))) (bvslt (_1!1166 (h!2157 (t!5471 (toList!776 lt!46578)))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun b!95240 () Bool)

(assert (=> b!95240 (= e!62140 (containsKey!152 (t!5471 (t!5471 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!25065 (not res!48189)) b!95239))

(assert (= (and b!95239 res!48190) b!95240))

(assert (=> b!95240 m!101363))

(declare-fun m!103295 () Bool)

(assert (=> b!95240 m!103295))

(assert (=> b!94598 d!25065))

(declare-fun d!25067 () Bool)

(declare-fun e!62142 () Bool)

(assert (=> d!25067 e!62142))

(declare-fun res!48191 () Bool)

(assert (=> d!25067 (=> res!48191 e!62142)))

(declare-fun lt!47456 () Bool)

(assert (=> d!25067 (= res!48191 (not lt!47456))))

(declare-fun lt!47453 () Bool)

(assert (=> d!25067 (= lt!47456 lt!47453)))

(declare-fun lt!47455 () Unit!2798)

(declare-fun e!62141 () Unit!2798)

(assert (=> d!25067 (= lt!47455 e!62141)))

(declare-fun c!15967 () Bool)

(assert (=> d!25067 (= c!15967 lt!47453)))

(assert (=> d!25067 (= lt!47453 (containsKey!152 (toList!776 lt!46824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25067 (= (contains!789 lt!46824 #b0000000000000000000000000000000000000000000000000000000000000000) lt!47456)))

(declare-fun b!95241 () Bool)

(declare-fun lt!47454 () Unit!2798)

(assert (=> b!95241 (= e!62141 lt!47454)))

(assert (=> b!95241 (= lt!47454 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95241 (isDefined!101 (getValueByKey!148 (toList!776 lt!46824) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95242 () Bool)

(declare-fun Unit!2848 () Unit!2798)

(assert (=> b!95242 (= e!62141 Unit!2848)))

(declare-fun b!95243 () Bool)

(assert (=> b!95243 (= e!62142 (isDefined!101 (getValueByKey!148 (toList!776 lt!46824) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25067 c!15967) b!95241))

(assert (= (and d!25067 (not c!15967)) b!95242))

(assert (= (and d!25067 (not res!48191)) b!95243))

(declare-fun m!103297 () Bool)

(assert (=> d!25067 m!103297))

(declare-fun m!103299 () Bool)

(assert (=> b!95241 m!103299))

(declare-fun m!103301 () Bool)

(assert (=> b!95241 m!103301))

(assert (=> b!95241 m!103301))

(declare-fun m!103303 () Bool)

(assert (=> b!95241 m!103303))

(assert (=> b!95243 m!103301))

(assert (=> b!95243 m!103301))

(assert (=> b!95243 m!103303))

(assert (=> bm!9468 d!25067))

(declare-fun d!25069 () Bool)

(declare-fun e!62144 () Bool)

(assert (=> d!25069 e!62144))

(declare-fun res!48192 () Bool)

(assert (=> d!25069 (=> res!48192 e!62144)))

(declare-fun lt!47460 () Bool)

(assert (=> d!25069 (= res!48192 (not lt!47460))))

(declare-fun lt!47457 () Bool)

(assert (=> d!25069 (= lt!47460 lt!47457)))

(declare-fun lt!47459 () Unit!2798)

(declare-fun e!62143 () Unit!2798)

(assert (=> d!25069 (= lt!47459 e!62143)))

(declare-fun c!15968 () Bool)

(assert (=> d!25069 (= c!15968 lt!47457)))

(assert (=> d!25069 (= lt!47457 (containsKey!152 (toList!776 (map!1243 (_2!1167 lt!47044))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!25069 (= (contains!789 (map!1243 (_2!1167 lt!47044)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!47460)))

(declare-fun b!95244 () Bool)

(declare-fun lt!47458 () Unit!2798)

(assert (=> b!95244 (= e!62143 lt!47458)))

(assert (=> b!95244 (= lt!47458 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (map!1243 (_2!1167 lt!47044))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!95244 (isDefined!101 (getValueByKey!148 (toList!776 (map!1243 (_2!1167 lt!47044))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!95245 () Bool)

(declare-fun Unit!2849 () Unit!2798)

(assert (=> b!95245 (= e!62143 Unit!2849)))

(declare-fun b!95246 () Bool)

(assert (=> b!95246 (= e!62144 (isDefined!101 (getValueByKey!148 (toList!776 (map!1243 (_2!1167 lt!47044))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(assert (= (and d!25069 c!15968) b!95244))

(assert (= (and d!25069 (not c!15968)) b!95245))

(assert (= (and d!25069 (not res!48192)) b!95246))

(assert (=> d!25069 m!101363))

(declare-fun m!103305 () Bool)

(assert (=> d!25069 m!103305))

(assert (=> b!95244 m!101363))

(declare-fun m!103307 () Bool)

(assert (=> b!95244 m!103307))

(assert (=> b!95244 m!101363))

(declare-fun m!103309 () Bool)

(assert (=> b!95244 m!103309))

(assert (=> b!95244 m!103309))

(declare-fun m!103311 () Bool)

(assert (=> b!95244 m!103311))

(assert (=> b!95246 m!101363))

(assert (=> b!95246 m!103309))

(assert (=> b!95246 m!103309))

(assert (=> b!95246 m!103311))

(assert (=> b!94680 d!25069))

(assert (=> b!94680 d!24859))

(declare-fun d!25071 () Bool)

(assert (=> d!25071 (= (isEmpty!350 (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))) (not ((_ is Some!153) (getValueByKey!148 (toList!776 lt!46578) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(assert (=> d!24653 d!25071))

(declare-fun d!25073 () Bool)

(declare-fun lt!47461 () (_ BitVec 32))

(assert (=> d!25073 (and (bvsge lt!47461 #b00000000000000000000000000000000) (bvsle lt!47461 (bvsub (size!2245 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(declare-fun e!62145 () (_ BitVec 32))

(assert (=> d!25073 (= lt!47461 e!62145)))

(declare-fun c!15969 () Bool)

(assert (=> d!25073 (= c!15969 (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25073 (and (bvsle (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))) (bvsge (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) #b00000000000000000000000000000000) (bvsle (size!2245 (_keys!4118 newMap!16)) (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25073 (= (arrayCountValidKeys!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))) lt!47461)))

(declare-fun b!95247 () Bool)

(declare-fun e!62146 () (_ BitVec 32))

(declare-fun call!9590 () (_ BitVec 32))

(assert (=> b!95247 (= e!62146 call!9590)))

(declare-fun bm!9587 () Bool)

(assert (=> bm!9587 (= call!9590 (arrayCountValidKeys!0 (_keys!4118 newMap!16) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95248 () Bool)

(assert (=> b!95248 (= e!62145 #b00000000000000000000000000000000)))

(declare-fun b!95249 () Bool)

(assert (=> b!95249 (= e!62146 (bvadd #b00000000000000000000000000000001 call!9590))))

(declare-fun b!95250 () Bool)

(assert (=> b!95250 (= e!62145 e!62146)))

(declare-fun c!15970 () Bool)

(assert (=> b!95250 (= c!15970 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001))))))

(assert (= (and d!25073 c!15969) b!95248))

(assert (= (and d!25073 (not c!15969)) b!95250))

(assert (= (and b!95250 c!15970) b!95249))

(assert (= (and b!95250 (not c!15970)) b!95247))

(assert (= (or b!95249 b!95247) bm!9587))

(declare-fun m!103313 () Bool)

(assert (=> bm!9587 m!103313))

(assert (=> b!95250 m!102881))

(assert (=> b!95250 m!102881))

(assert (=> b!95250 m!102945))

(assert (=> bm!9490 d!25073))

(assert (=> bm!9479 d!25061))

(declare-fun d!25075 () Bool)

(assert (=> d!25075 (= (get!1265 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000)) (v!2766 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24729 d!25075))

(assert (=> d!24729 d!24841))

(assert (=> bm!9484 d!24767))

(declare-fun b!95251 () Bool)

(declare-fun res!48196 () Bool)

(declare-fun e!62147 () Bool)

(assert (=> b!95251 (=> (not res!48196) (not e!62147))))

(assert (=> b!95251 (= res!48196 (and (= (size!2246 (_values!2419 (_2!1167 lt!46697))) (bvadd (mask!6511 (_2!1167 lt!46697)) #b00000000000000000000000000000001)) (= (size!2245 (_keys!4118 (_2!1167 lt!46697))) (size!2246 (_values!2419 (_2!1167 lt!46697)))) (bvsge (_size!466 (_2!1167 lt!46697)) #b00000000000000000000000000000000) (bvsle (_size!466 (_2!1167 lt!46697)) (bvadd (mask!6511 (_2!1167 lt!46697)) #b00000000000000000000000000000001))))))

(declare-fun b!95254 () Bool)

(assert (=> b!95254 (= e!62147 (and (bvsge (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000000) (bvsle (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000011) (bvsge (_vacant!466 (_2!1167 lt!46697)) #b00000000000000000000000000000000)))))

(declare-fun d!25077 () Bool)

(declare-fun res!48193 () Bool)

(assert (=> d!25077 (=> (not res!48193) (not e!62147))))

(assert (=> d!25077 (= res!48193 (validMask!0 (mask!6511 (_2!1167 lt!46697))))))

(assert (=> d!25077 (= (simpleValid!66 (_2!1167 lt!46697)) e!62147)))

(declare-fun b!95252 () Bool)

(declare-fun res!48194 () Bool)

(assert (=> b!95252 (=> (not res!48194) (not e!62147))))

(assert (=> b!95252 (= res!48194 (bvsge (size!2249 (_2!1167 lt!46697)) (_size!466 (_2!1167 lt!46697))))))

(declare-fun b!95253 () Bool)

(declare-fun res!48195 () Bool)

(assert (=> b!95253 (=> (not res!48195) (not e!62147))))

(assert (=> b!95253 (= res!48195 (= (size!2249 (_2!1167 lt!46697)) (bvadd (_size!466 (_2!1167 lt!46697)) (bvsdiv (bvadd (extraKeys!2265 (_2!1167 lt!46697)) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!25077 res!48193) b!95251))

(assert (= (and b!95251 res!48196) b!95252))

(assert (= (and b!95252 res!48194) b!95253))

(assert (= (and b!95253 res!48195) b!95254))

(assert (=> d!25077 m!103003))

(declare-fun m!103315 () Bool)

(assert (=> b!95252 m!103315))

(assert (=> b!95253 m!103315))

(assert (=> d!24629 d!25077))

(declare-fun d!25079 () Bool)

(assert (=> d!25079 (= (apply!90 lt!46942 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1265 (getValueByKey!148 (toList!776 lt!46942) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3925 () Bool)

(assert (= bs!3925 d!25079))

(assert (=> bs!3925 m!101689))

(declare-fun m!103317 () Bool)

(assert (=> bs!3925 m!103317))

(assert (=> bs!3925 m!103317))

(declare-fun m!103319 () Bool)

(assert (=> bs!3925 m!103319))

(assert (=> b!94565 d!25079))

(declare-fun d!25081 () Bool)

(declare-fun c!15971 () Bool)

(assert (=> d!25081 (= c!15971 ((_ is ValueCellFull!963) (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000)))))

(declare-fun e!62148 () V!3131)

(assert (=> d!25081 (= (get!1261 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62148)))

(declare-fun b!95255 () Bool)

(assert (=> b!95255 (= e!62148 (get!1263 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95256 () Bool)

(assert (=> b!95256 (= e!62148 (get!1264 (select (arr!1998 (ite c!15700 (_values!2419 newMap!16) lt!46687)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25081 c!15971) b!95255))

(assert (= (and d!25081 (not c!15971)) b!95256))

(assert (=> b!95255 m!101943))

(assert (=> b!95255 m!101697))

(declare-fun m!103321 () Bool)

(assert (=> b!95255 m!103321))

(assert (=> b!95256 m!101943))

(assert (=> b!95256 m!101697))

(declare-fun m!103323 () Bool)

(assert (=> b!95256 m!103323))

(assert (=> b!94565 d!25081))

(assert (=> d!24677 d!24683))

(assert (=> d!24677 d!24691))

(declare-fun d!25083 () Bool)

(assert (=> d!25083 (contains!789 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!46757)))

(assert (=> d!25083 true))

(declare-fun _$35!333 () Unit!2798)

(assert (=> d!25083 (= (choose!563 lt!46758 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))) lt!46757) _$35!333)))

(declare-fun bs!3926 () Bool)

(assert (= bs!3926 d!25083))

(assert (=> bs!3926 m!101547))

(assert (=> bs!3926 m!101547))

(assert (=> bs!3926 m!101567))

(assert (=> d!24677 d!25083))

(declare-fun d!25085 () Bool)

(declare-fun e!62150 () Bool)

(assert (=> d!25085 e!62150))

(declare-fun res!48197 () Bool)

(assert (=> d!25085 (=> res!48197 e!62150)))

(declare-fun lt!47465 () Bool)

(assert (=> d!25085 (= res!48197 (not lt!47465))))

(declare-fun lt!47462 () Bool)

(assert (=> d!25085 (= lt!47465 lt!47462)))

(declare-fun lt!47464 () Unit!2798)

(declare-fun e!62149 () Unit!2798)

(assert (=> d!25085 (= lt!47464 e!62149)))

(declare-fun c!15972 () Bool)

(assert (=> d!25085 (= c!15972 lt!47462)))

(assert (=> d!25085 (= lt!47462 (containsKey!152 (toList!776 lt!46758) lt!46757))))

(assert (=> d!25085 (= (contains!789 lt!46758 lt!46757) lt!47465)))

(declare-fun b!95258 () Bool)

(declare-fun lt!47463 () Unit!2798)

(assert (=> b!95258 (= e!62149 lt!47463)))

(assert (=> b!95258 (= lt!47463 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46758) lt!46757))))

(assert (=> b!95258 (isDefined!101 (getValueByKey!148 (toList!776 lt!46758) lt!46757))))

(declare-fun b!95259 () Bool)

(declare-fun Unit!2850 () Unit!2798)

(assert (=> b!95259 (= e!62149 Unit!2850)))

(declare-fun b!95260 () Bool)

(assert (=> b!95260 (= e!62150 (isDefined!101 (getValueByKey!148 (toList!776 lt!46758) lt!46757)))))

(assert (= (and d!25085 c!15972) b!95258))

(assert (= (and d!25085 (not c!15972)) b!95259))

(assert (= (and d!25085 (not res!48197)) b!95260))

(declare-fun m!103325 () Bool)

(assert (=> d!25085 m!103325))

(declare-fun m!103327 () Bool)

(assert (=> b!95258 m!103327))

(declare-fun m!103329 () Bool)

(assert (=> b!95258 m!103329))

(assert (=> b!95258 m!103329))

(declare-fun m!103331 () Bool)

(assert (=> b!95258 m!103331))

(assert (=> b!95260 m!103329))

(assert (=> b!95260 m!103329))

(assert (=> b!95260 m!103331))

(assert (=> d!24677 d!25085))

(declare-fun d!25087 () Bool)

(declare-fun res!48198 () Bool)

(declare-fun e!62151 () Bool)

(assert (=> d!25087 (=> res!48198 e!62151)))

(assert (=> d!25087 (= res!48198 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46757)))))

(assert (=> d!25087 (= (containsKey!152 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757) e!62151)))

(declare-fun b!95261 () Bool)

(declare-fun e!62152 () Bool)

(assert (=> b!95261 (= e!62151 e!62152)))

(declare-fun res!48199 () Bool)

(assert (=> b!95261 (=> (not res!48199) (not e!62152))))

(assert (=> b!95261 (= res!48199 (and (or (not ((_ is Cons!1565) (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) (bvsle (_1!1166 (h!2157 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46757)) ((_ is Cons!1565) (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) (bvslt (_1!1166 (h!2157 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46757)))))

(declare-fun b!95262 () Bool)

(assert (=> b!95262 (= e!62152 (containsKey!152 (t!5471 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!46757))))

(assert (= (and d!25087 (not res!48198)) b!95261))

(assert (= (and b!95261 res!48199) b!95262))

(declare-fun m!103333 () Bool)

(assert (=> b!95262 m!103333))

(assert (=> d!24683 d!25087))

(declare-fun d!25089 () Bool)

(declare-fun c!15973 () Bool)

(assert (=> d!25089 (= c!15973 (and ((_ is Cons!1565) (toList!776 lt!47071)) (= (_1!1166 (h!2157 (toList!776 lt!47071))) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62153 () Option!154)

(assert (=> d!25089 (= (getValueByKey!148 (toList!776 lt!47071) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62153)))

(declare-fun b!95265 () Bool)

(declare-fun e!62154 () Option!154)

(assert (=> b!95265 (= e!62154 (getValueByKey!148 (t!5471 (toList!776 lt!47071)) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95266 () Bool)

(assert (=> b!95266 (= e!62154 None!152)))

(declare-fun b!95264 () Bool)

(assert (=> b!95264 (= e!62153 e!62154)))

(declare-fun c!15974 () Bool)

(assert (=> b!95264 (= c!15974 (and ((_ is Cons!1565) (toList!776 lt!47071)) (not (= (_1!1166 (h!2157 (toList!776 lt!47071))) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!95263 () Bool)

(assert (=> b!95263 (= e!62153 (Some!153 (_2!1166 (h!2157 (toList!776 lt!47071)))))))

(assert (= (and d!25089 c!15973) b!95263))

(assert (= (and d!25089 (not c!15973)) b!95264))

(assert (= (and b!95264 c!15974) b!95265))

(assert (= (and b!95264 (not c!15974)) b!95266))

(declare-fun m!103335 () Bool)

(assert (=> b!95265 m!103335))

(assert (=> b!94687 d!25089))

(declare-fun d!25091 () Bool)

(assert (=> d!25091 (= (get!1265 (getValueByKey!148 (toList!776 lt!46750) lt!46744)) (v!2766 (getValueByKey!148 (toList!776 lt!46750) lt!46744)))))

(assert (=> d!24685 d!25091))

(declare-fun d!25093 () Bool)

(declare-fun c!15975 () Bool)

(assert (=> d!25093 (= c!15975 (and ((_ is Cons!1565) (toList!776 lt!46750)) (= (_1!1166 (h!2157 (toList!776 lt!46750))) lt!46744)))))

(declare-fun e!62155 () Option!154)

(assert (=> d!25093 (= (getValueByKey!148 (toList!776 lt!46750) lt!46744) e!62155)))

(declare-fun b!95269 () Bool)

(declare-fun e!62156 () Option!154)

(assert (=> b!95269 (= e!62156 (getValueByKey!148 (t!5471 (toList!776 lt!46750)) lt!46744))))

(declare-fun b!95270 () Bool)

(assert (=> b!95270 (= e!62156 None!152)))

(declare-fun b!95268 () Bool)

(assert (=> b!95268 (= e!62155 e!62156)))

(declare-fun c!15976 () Bool)

(assert (=> b!95268 (= c!15976 (and ((_ is Cons!1565) (toList!776 lt!46750)) (not (= (_1!1166 (h!2157 (toList!776 lt!46750))) lt!46744))))))

(declare-fun b!95267 () Bool)

(assert (=> b!95267 (= e!62155 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46750)))))))

(assert (= (and d!25093 c!15975) b!95267))

(assert (= (and d!25093 (not c!15975)) b!95268))

(assert (= (and b!95268 c!15976) b!95269))

(assert (= (and b!95268 (not c!15976)) b!95270))

(declare-fun m!103337 () Bool)

(assert (=> b!95269 m!103337))

(assert (=> d!24685 d!25093))

(declare-fun d!25095 () Bool)

(assert (=> d!25095 (isDefined!101 (getValueByKey!148 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun lt!47466 () Unit!2798)

(assert (=> d!25095 (= lt!47466 (choose!561 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun e!62157 () Bool)

(assert (=> d!25095 e!62157))

(declare-fun res!48200 () Bool)

(assert (=> d!25095 (=> (not res!48200) (not e!62157))))

(assert (=> d!25095 (= res!48200 (isStrictlySorted!302 (toList!776 call!9436)))))

(assert (=> d!25095 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) lt!47466)))

(declare-fun b!95271 () Bool)

(assert (=> b!95271 (= e!62157 (containsKey!152 (toList!776 call!9436) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (= (and d!25095 res!48200) b!95271))

(assert (=> d!25095 m!101363))

(assert (=> d!25095 m!101659))

(assert (=> d!25095 m!101659))

(assert (=> d!25095 m!101661))

(assert (=> d!25095 m!101363))

(declare-fun m!103339 () Bool)

(assert (=> d!25095 m!103339))

(declare-fun m!103341 () Bool)

(assert (=> d!25095 m!103341))

(assert (=> b!95271 m!101363))

(assert (=> b!95271 m!101655))

(assert (=> b!94406 d!25095))

(assert (=> b!94406 d!24869))

(assert (=> b!94406 d!24871))

(assert (=> b!94533 d!24635))

(assert (=> b!94589 d!24749))

(declare-fun d!25097 () Bool)

(assert (=> d!25097 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47467 () Unit!2798)

(assert (=> d!25097 (= lt!47467 (choose!561 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62158 () Bool)

(assert (=> d!25097 e!62158))

(declare-fun res!48201 () Bool)

(assert (=> d!25097 (=> (not res!48201) (not e!62158))))

(assert (=> d!25097 (= res!48201 (isStrictlySorted!302 (toList!776 lt!46762)))))

(assert (=> d!25097 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000) lt!47467)))

(declare-fun b!95272 () Bool)

(assert (=> b!95272 (= e!62158 (containsKey!152 (toList!776 lt!46762) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25097 res!48201) b!95272))

(assert (=> d!25097 m!101675))

(assert (=> d!25097 m!101675))

(assert (=> d!25097 m!101677))

(declare-fun m!103343 () Bool)

(assert (=> d!25097 m!103343))

(assert (=> d!25097 m!102277))

(assert (=> b!95272 m!101671))

(assert (=> b!94414 d!25097))

(assert (=> b!94414 d!24839))

(assert (=> b!94414 d!24841))

(declare-fun d!25099 () Bool)

(declare-fun e!62160 () Bool)

(assert (=> d!25099 e!62160))

(declare-fun res!48202 () Bool)

(assert (=> d!25099 (=> res!48202 e!62160)))

(declare-fun lt!47471 () Bool)

(assert (=> d!25099 (= res!48202 (not lt!47471))))

(declare-fun lt!47468 () Bool)

(assert (=> d!25099 (= lt!47471 lt!47468)))

(declare-fun lt!47470 () Unit!2798)

(declare-fun e!62159 () Unit!2798)

(assert (=> d!25099 (= lt!47470 e!62159)))

(declare-fun c!15977 () Bool)

(assert (=> d!25099 (= c!15977 lt!47468)))

(assert (=> d!25099 (= lt!47468 (containsKey!152 (toList!776 lt!46903) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!25099 (= (contains!789 lt!46903 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47471)))

(declare-fun b!95273 () Bool)

(declare-fun lt!47469 () Unit!2798)

(assert (=> b!95273 (= e!62159 lt!47469)))

(assert (=> b!95273 (= lt!47469 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46903) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> b!95273 (isDefined!101 (getValueByKey!148 (toList!776 lt!46903) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95274 () Bool)

(declare-fun Unit!2851 () Unit!2798)

(assert (=> b!95274 (= e!62159 Unit!2851)))

(declare-fun b!95275 () Bool)

(assert (=> b!95275 (= e!62160 (isDefined!101 (getValueByKey!148 (toList!776 lt!46903) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25099 c!15977) b!95273))

(assert (= (and d!25099 (not c!15977)) b!95274))

(assert (= (and d!25099 (not res!48202)) b!95275))

(declare-fun m!103345 () Bool)

(assert (=> d!25099 m!103345))

(declare-fun m!103347 () Bool)

(assert (=> b!95273 m!103347))

(assert (=> b!95273 m!101873))

(assert (=> b!95273 m!101873))

(declare-fun m!103349 () Bool)

(assert (=> b!95273 m!103349))

(assert (=> b!95275 m!101873))

(assert (=> b!95275 m!101873))

(assert (=> b!95275 m!103349))

(assert (=> d!24695 d!25099))

(declare-fun d!25101 () Bool)

(declare-fun c!15978 () Bool)

(assert (=> d!25101 (= c!15978 (and ((_ is Cons!1565) lt!46904) (= (_1!1166 (h!2157 lt!46904)) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62161 () Option!154)

(assert (=> d!25101 (= (getValueByKey!148 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62161)))

(declare-fun e!62162 () Option!154)

(declare-fun b!95278 () Bool)

(assert (=> b!95278 (= e!62162 (getValueByKey!148 (t!5471 lt!46904) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95279 () Bool)

(assert (=> b!95279 (= e!62162 None!152)))

(declare-fun b!95277 () Bool)

(assert (=> b!95277 (= e!62161 e!62162)))

(declare-fun c!15979 () Bool)

(assert (=> b!95277 (= c!15979 (and ((_ is Cons!1565) lt!46904) (not (= (_1!1166 (h!2157 lt!46904)) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95276 () Bool)

(assert (=> b!95276 (= e!62161 (Some!153 (_2!1166 (h!2157 lt!46904))))))

(assert (= (and d!25101 c!15978) b!95276))

(assert (= (and d!25101 (not c!15978)) b!95277))

(assert (= (and b!95277 c!15979) b!95278))

(assert (= (and b!95277 (not c!15979)) b!95279))

(declare-fun m!103351 () Bool)

(assert (=> b!95278 m!103351))

(assert (=> d!24695 d!25101))

(declare-fun d!25103 () Bool)

(assert (=> d!25103 (= (getValueByKey!148 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!47472 () Unit!2798)

(assert (=> d!25103 (= lt!47472 (choose!569 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun e!62163 () Bool)

(assert (=> d!25103 e!62163))

(declare-fun res!48203 () Bool)

(assert (=> d!25103 (=> (not res!48203) (not e!62163))))

(assert (=> d!25103 (= res!48203 (isStrictlySorted!302 lt!46904))))

(assert (=> d!25103 (= (lemmaContainsTupThenGetReturnValue!64 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47472)))

(declare-fun b!95280 () Bool)

(declare-fun res!48204 () Bool)

(assert (=> b!95280 (=> (not res!48204) (not e!62163))))

(assert (=> b!95280 (= res!48204 (containsKey!152 lt!46904 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95281 () Bool)

(assert (=> b!95281 (= e!62163 (contains!792 lt!46904 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25103 res!48203) b!95280))

(assert (= (and b!95280 res!48204) b!95281))

(assert (=> d!25103 m!101867))

(declare-fun m!103353 () Bool)

(assert (=> d!25103 m!103353))

(declare-fun m!103355 () Bool)

(assert (=> d!25103 m!103355))

(declare-fun m!103357 () Bool)

(assert (=> b!95280 m!103357))

(declare-fun m!103359 () Bool)

(assert (=> b!95281 m!103359))

(assert (=> d!24695 d!25103))

(declare-fun c!15981 () Bool)

(declare-fun e!62166 () List!1569)

(declare-fun c!15983 () Bool)

(declare-fun b!95282 () Bool)

(assert (=> b!95282 (= e!62166 (ite c!15983 (t!5471 (toList!776 lt!46752)) (ite c!15981 (Cons!1565 (h!2157 (toList!776 lt!46752)) (t!5471 (toList!776 lt!46752))) Nil!1566)))))

(declare-fun b!95283 () Bool)

(declare-fun e!62165 () List!1569)

(declare-fun call!9591 () List!1569)

(assert (=> b!95283 (= e!62165 call!9591)))

(declare-fun bm!9588 () Bool)

(declare-fun call!9593 () List!1569)

(assert (=> bm!9588 (= call!9593 call!9591)))

(declare-fun b!95284 () Bool)

(assert (=> b!95284 (= c!15981 (and ((_ is Cons!1565) (toList!776 lt!46752)) (bvsgt (_1!1166 (h!2157 (toList!776 lt!46752))) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62168 () List!1569)

(declare-fun e!62164 () List!1569)

(assert (=> b!95284 (= e!62168 e!62164)))

(declare-fun b!95285 () Bool)

(declare-fun call!9592 () List!1569)

(assert (=> b!95285 (= e!62164 call!9592)))

(declare-fun b!95286 () Bool)

(assert (=> b!95286 (= e!62164 call!9592)))

(declare-fun b!95287 () Bool)

(assert (=> b!95287 (= e!62166 (insertStrictlySorted!67 (t!5471 (toList!776 lt!46752)) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95288 () Bool)

(declare-fun res!48205 () Bool)

(declare-fun e!62167 () Bool)

(assert (=> b!95288 (=> (not res!48205) (not e!62167))))

(declare-fun lt!47473 () List!1569)

(assert (=> b!95288 (= res!48205 (containsKey!152 lt!47473 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun bm!9589 () Bool)

(assert (=> bm!9589 (= call!9592 call!9593)))

(declare-fun b!95289 () Bool)

(assert (=> b!95289 (= e!62165 e!62168)))

(assert (=> b!95289 (= c!15983 (and ((_ is Cons!1565) (toList!776 lt!46752)) (= (_1!1166 (h!2157 (toList!776 lt!46752))) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun d!25105 () Bool)

(assert (=> d!25105 e!62167))

(declare-fun res!48206 () Bool)

(assert (=> d!25105 (=> (not res!48206) (not e!62167))))

(assert (=> d!25105 (= res!48206 (isStrictlySorted!302 lt!47473))))

(assert (=> d!25105 (= lt!47473 e!62165)))

(declare-fun c!15982 () Bool)

(assert (=> d!25105 (= c!15982 (and ((_ is Cons!1565) (toList!776 lt!46752)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46752))) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!25105 (isStrictlySorted!302 (toList!776 lt!46752))))

(assert (=> d!25105 (= (insertStrictlySorted!67 (toList!776 lt!46752) (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47473)))

(declare-fun b!95290 () Bool)

(assert (=> b!95290 (= e!62168 call!9593)))

(declare-fun bm!9590 () Bool)

(assert (=> bm!9590 (= call!9591 ($colon$colon!76 e!62166 (ite c!15982 (h!2157 (toList!776 lt!46752)) (tuple2!2311 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun c!15980 () Bool)

(assert (=> bm!9590 (= c!15980 c!15982)))

(declare-fun b!95291 () Bool)

(assert (=> b!95291 (= e!62167 (contains!792 lt!47473 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25105 c!15982) b!95283))

(assert (= (and d!25105 (not c!15982)) b!95289))

(assert (= (and b!95289 c!15983) b!95290))

(assert (= (and b!95289 (not c!15983)) b!95284))

(assert (= (and b!95284 c!15981) b!95286))

(assert (= (and b!95284 (not c!15981)) b!95285))

(assert (= (or b!95286 b!95285) bm!9589))

(assert (= (or b!95290 bm!9589) bm!9588))

(assert (= (or b!95283 bm!9588) bm!9590))

(assert (= (and bm!9590 c!15980) b!95287))

(assert (= (and bm!9590 (not c!15980)) b!95282))

(assert (= (and d!25105 res!48206) b!95288))

(assert (= (and b!95288 res!48205) b!95291))

(declare-fun m!103361 () Bool)

(assert (=> b!95288 m!103361))

(declare-fun m!103363 () Bool)

(assert (=> bm!9590 m!103363))

(declare-fun m!103365 () Bool)

(assert (=> b!95291 m!103365))

(declare-fun m!103367 () Bool)

(assert (=> b!95287 m!103367))

(declare-fun m!103369 () Bool)

(assert (=> d!25105 m!103369))

(declare-fun m!103371 () Bool)

(assert (=> d!25105 m!103371))

(assert (=> d!24695 d!25105))

(declare-fun b!95292 () Bool)

(declare-fun e!62172 () Bool)

(declare-fun e!62171 () Bool)

(assert (=> b!95292 (= e!62172 e!62171)))

(declare-fun c!15984 () Bool)

(assert (=> b!95292 (= c!15984 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95293 () Bool)

(declare-fun call!9594 () Bool)

(assert (=> b!95293 (= e!62171 call!9594)))

(declare-fun b!95294 () Bool)

(assert (=> b!95294 (= e!62171 call!9594)))

(declare-fun bm!9591 () Bool)

(assert (=> bm!9591 (= call!9594 (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15984 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (ite c!15758 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565))) (ite c!15758 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)))))))

(declare-fun b!95295 () Bool)

(declare-fun e!62170 () Bool)

(assert (=> b!95295 (= e!62170 e!62172)))

(declare-fun res!48209 () Bool)

(assert (=> b!95295 (=> (not res!48209) (not e!62172))))

(declare-fun e!62169 () Bool)

(assert (=> b!95295 (= res!48209 (not e!62169))))

(declare-fun res!48207 () Bool)

(assert (=> b!95295 (=> (not res!48207) (not e!62169))))

(assert (=> b!95295 (= res!48207 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun b!95296 () Bool)

(assert (=> b!95296 (= e!62169 (contains!791 (ite c!15758 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001))))))

(declare-fun d!25107 () Bool)

(declare-fun res!48208 () Bool)

(assert (=> d!25107 (=> res!48208 e!62170)))

(assert (=> d!25107 (= res!48208 (bvsge (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!25107 (= (arrayNoDuplicates!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (ite c!15758 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565)) (ite c!15736 (Cons!1564 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) Nil!1565) Nil!1565))) e!62170)))

(assert (= (and d!25107 (not res!48208)) b!95295))

(assert (= (and b!95295 res!48207) b!95296))

(assert (= (and b!95295 res!48209) b!95292))

(assert (= (and b!95292 c!15984) b!95293))

(assert (= (and b!95292 (not c!15984)) b!95294))

(assert (= (or b!95293 b!95294) bm!9591))

(declare-fun m!103373 () Bool)

(assert (=> b!95292 m!103373))

(assert (=> b!95292 m!103373))

(declare-fun m!103375 () Bool)

(assert (=> b!95292 m!103375))

(assert (=> bm!9591 m!103373))

(declare-fun m!103377 () Bool)

(assert (=> bm!9591 m!103377))

(assert (=> b!95295 m!103373))

(assert (=> b!95295 m!103373))

(assert (=> b!95295 m!103375))

(assert (=> b!95296 m!103373))

(assert (=> b!95296 m!103373))

(declare-fun m!103379 () Bool)

(assert (=> b!95296 m!103379))

(assert (=> bm!9466 d!25107))

(declare-fun d!25109 () Bool)

(assert (=> d!25109 (= (apply!90 lt!46942 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46942) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3927 () Bool)

(assert (= bs!3927 d!25109))

(assert (=> bs!3927 m!103061))

(assert (=> bs!3927 m!103061))

(declare-fun m!103381 () Bool)

(assert (=> bs!3927 m!103381))

(assert (=> b!94568 d!25109))

(declare-fun lt!47474 () Bool)

(declare-fun d!25111 () Bool)

(assert (=> d!25111 (= lt!47474 (select (content!98 (toList!776 lt!46899)) (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun e!62174 () Bool)

(assert (=> d!25111 (= lt!47474 e!62174)))

(declare-fun res!48210 () Bool)

(assert (=> d!25111 (=> (not res!48210) (not e!62174))))

(assert (=> d!25111 (= res!48210 ((_ is Cons!1565) (toList!776 lt!46899)))))

(assert (=> d!25111 (= (contains!792 (toList!776 lt!46899) (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!47474)))

(declare-fun b!95297 () Bool)

(declare-fun e!62173 () Bool)

(assert (=> b!95297 (= e!62174 e!62173)))

(declare-fun res!48211 () Bool)

(assert (=> b!95297 (=> res!48211 e!62173)))

(assert (=> b!95297 (= res!48211 (= (h!2157 (toList!776 lt!46899)) (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95298 () Bool)

(assert (=> b!95298 (= e!62173 (contains!792 (t!5471 (toList!776 lt!46899)) (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!25111 res!48210) b!95297))

(assert (= (and b!95297 (not res!48211)) b!95298))

(declare-fun m!103383 () Bool)

(assert (=> d!25111 m!103383))

(declare-fun m!103385 () Bool)

(assert (=> d!25111 m!103385))

(declare-fun m!103387 () Bool)

(assert (=> b!95298 m!103387))

(assert (=> b!94547 d!25111))

(declare-fun d!25113 () Bool)

(assert (=> d!25113 (= (apply!90 lt!46824 #b0000000000000000000000000000000000000000000000000000000000000000) (get!1265 (getValueByKey!148 (toList!776 lt!46824) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun bs!3928 () Bool)

(assert (= bs!3928 d!25113))

(assert (=> bs!3928 m!103301))

(assert (=> bs!3928 m!103301))

(declare-fun m!103389 () Bool)

(assert (=> bs!3928 m!103389))

(assert (=> b!94422 d!25113))

(declare-fun b!95299 () Bool)

(declare-fun res!48215 () Bool)

(declare-fun e!62175 () Bool)

(assert (=> b!95299 (=> (not res!48215) (not e!62175))))

(assert (=> b!95299 (= res!48215 (and (= (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992)))) (bvadd (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001)) (= (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (size!2246 (_values!2419 (v!2762 (underlying!328 thiss!992))))) (bvsge (_size!466 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000) (bvsle (_size!466 (v!2762 (underlying!328 thiss!992))) (bvadd (mask!6511 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001))))))

(declare-fun b!95302 () Bool)

(assert (=> b!95302 (= e!62175 (and (bvsge (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000) (bvsle (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000011) (bvsge (_vacant!466 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000)))))

(declare-fun d!25115 () Bool)

(declare-fun res!48212 () Bool)

(assert (=> d!25115 (=> (not res!48212) (not e!62175))))

(assert (=> d!25115 (= res!48212 (validMask!0 (mask!6511 (v!2762 (underlying!328 thiss!992)))))))

(assert (=> d!25115 (= (simpleValid!66 (v!2762 (underlying!328 thiss!992))) e!62175)))

(declare-fun b!95300 () Bool)

(declare-fun res!48213 () Bool)

(assert (=> b!95300 (=> (not res!48213) (not e!62175))))

(assert (=> b!95300 (= res!48213 (bvsge (size!2249 (v!2762 (underlying!328 thiss!992))) (_size!466 (v!2762 (underlying!328 thiss!992)))))))

(declare-fun b!95301 () Bool)

(declare-fun res!48214 () Bool)

(assert (=> b!95301 (=> (not res!48214) (not e!62175))))

(assert (=> b!95301 (= res!48214 (= (size!2249 (v!2762 (underlying!328 thiss!992))) (bvadd (_size!466 (v!2762 (underlying!328 thiss!992))) (bvsdiv (bvadd (extraKeys!2265 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000001) #b00000000000000000000000000000010))))))

(assert (= (and d!25115 res!48212) b!95299))

(assert (= (and b!95299 res!48215) b!95300))

(assert (= (and b!95300 res!48213) b!95301))

(assert (= (and b!95301 res!48214) b!95302))

(assert (=> d!25115 m!101373))

(declare-fun m!103391 () Bool)

(assert (=> b!95300 m!103391))

(assert (=> b!95301 m!103391))

(assert (=> d!24631 d!25115))

(assert (=> b!94469 d!24995))

(declare-fun c!15985 () Bool)

(declare-fun d!25117 () Bool)

(assert (=> d!25117 (= c!15985 (and ((_ is Cons!1565) (toList!776 lt!46908)) (= (_1!1166 (h!2157 (toList!776 lt!46908))) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62176 () Option!154)

(assert (=> d!25117 (= (getValueByKey!148 (toList!776 lt!46908) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62176)))

(declare-fun e!62177 () Option!154)

(declare-fun b!95305 () Bool)

(assert (=> b!95305 (= e!62177 (getValueByKey!148 (t!5471 (toList!776 lt!46908)) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95306 () Bool)

(assert (=> b!95306 (= e!62177 None!152)))

(declare-fun b!95304 () Bool)

(assert (=> b!95304 (= e!62176 e!62177)))

(declare-fun c!15986 () Bool)

(assert (=> b!95304 (= c!15986 (and ((_ is Cons!1565) (toList!776 lt!46908)) (not (= (_1!1166 (h!2157 (toList!776 lt!46908))) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95303 () Bool)

(assert (=> b!95303 (= e!62176 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46908)))))))

(assert (= (and d!25117 c!15985) b!95303))

(assert (= (and d!25117 (not c!15985)) b!95304))

(assert (= (and b!95304 c!15986) b!95305))

(assert (= (and b!95304 (not c!15986)) b!95306))

(declare-fun m!103393 () Bool)

(assert (=> b!95305 m!103393))

(assert (=> b!94551 d!25117))

(declare-fun d!25119 () Bool)

(declare-fun e!62179 () Bool)

(assert (=> d!25119 e!62179))

(declare-fun res!48216 () Bool)

(assert (=> d!25119 (=> res!48216 e!62179)))

(declare-fun lt!47478 () Bool)

(assert (=> d!25119 (= res!48216 (not lt!47478))))

(declare-fun lt!47475 () Bool)

(assert (=> d!25119 (= lt!47478 lt!47475)))

(declare-fun lt!47477 () Unit!2798)

(declare-fun e!62178 () Unit!2798)

(assert (=> d!25119 (= lt!47477 e!62178)))

(declare-fun c!15987 () Bool)

(assert (=> d!25119 (= c!15987 lt!47475)))

(assert (=> d!25119 (= lt!47475 (containsKey!152 (toList!776 lt!46970) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25119 (= (contains!789 lt!46970 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47478)))

(declare-fun b!95307 () Bool)

(declare-fun lt!47476 () Unit!2798)

(assert (=> b!95307 (= e!62178 lt!47476)))

(assert (=> b!95307 (= lt!47476 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46970) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95307 (isDefined!101 (getValueByKey!148 (toList!776 lt!46970) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95308 () Bool)

(declare-fun Unit!2852 () Unit!2798)

(assert (=> b!95308 (= e!62178 Unit!2852)))

(declare-fun b!95309 () Bool)

(assert (=> b!95309 (= e!62179 (isDefined!101 (getValueByKey!148 (toList!776 lt!46970) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25119 c!15987) b!95307))

(assert (= (and d!25119 (not c!15987)) b!95308))

(assert (= (and d!25119 (not res!48216)) b!95309))

(assert (=> d!25119 m!101689))

(declare-fun m!103395 () Bool)

(assert (=> d!25119 m!103395))

(assert (=> b!95307 m!101689))

(declare-fun m!103397 () Bool)

(assert (=> b!95307 m!103397))

(assert (=> b!95307 m!101689))

(assert (=> b!95307 m!103173))

(assert (=> b!95307 m!103173))

(declare-fun m!103399 () Bool)

(assert (=> b!95307 m!103399))

(assert (=> b!95309 m!101689))

(assert (=> b!95309 m!103173))

(assert (=> b!95309 m!103173))

(assert (=> b!95309 m!103399))

(assert (=> b!94617 d!25119))

(assert (=> b!94586 d!24749))

(declare-fun d!25121 () Bool)

(assert (=> d!25121 (= (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46744)) (v!2766 (getValueByKey!148 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46744)))))

(assert (=> d!24707 d!25121))

(declare-fun d!25123 () Bool)

(declare-fun c!15988 () Bool)

(assert (=> d!25123 (= c!15988 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46744)))))

(declare-fun e!62180 () Option!154)

(assert (=> d!25123 (= (getValueByKey!148 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46744) e!62180)))

(declare-fun b!95312 () Bool)

(declare-fun e!62181 () Option!154)

(assert (=> b!95312 (= e!62181 (getValueByKey!148 (t!5471 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!46744))))

(declare-fun b!95313 () Bool)

(assert (=> b!95313 (= e!62181 None!152)))

(declare-fun b!95311 () Bool)

(assert (=> b!95311 (= e!62180 e!62181)))

(declare-fun c!15989 () Bool)

(assert (=> b!95311 (= c!15989 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))) (not (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46744))))))

(declare-fun b!95310 () Bool)

(assert (=> b!95310 (= e!62180 (Some!153 (_2!1166 (h!2157 (toList!776 (+!133 lt!46750 (tuple2!2311 lt!46756 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(assert (= (and d!25123 c!15988) b!95310))

(assert (= (and d!25123 (not c!15988)) b!95311))

(assert (= (and b!95311 c!15989) b!95312))

(assert (= (and b!95311 (not c!15989)) b!95313))

(declare-fun m!103401 () Bool)

(assert (=> b!95312 m!103401))

(assert (=> d!24707 d!25123))

(declare-fun d!25125 () Bool)

(declare-fun c!15990 () Bool)

(assert (=> d!25125 (= c!15990 (and ((_ is Cons!1565) (toList!776 lt!46973)) (= (_1!1166 (h!2157 (toList!776 lt!46973))) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62182 () Option!154)

(assert (=> d!25125 (= (getValueByKey!148 (toList!776 lt!46973) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62182)))

(declare-fun b!95316 () Bool)

(declare-fun e!62183 () Option!154)

(assert (=> b!95316 (= e!62183 (getValueByKey!148 (t!5471 (toList!776 lt!46973)) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95317 () Bool)

(assert (=> b!95317 (= e!62183 None!152)))

(declare-fun b!95315 () Bool)

(assert (=> b!95315 (= e!62182 e!62183)))

(declare-fun c!15991 () Bool)

(assert (=> b!95315 (= c!15991 (and ((_ is Cons!1565) (toList!776 lt!46973)) (not (= (_1!1166 (h!2157 (toList!776 lt!46973))) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95314 () Bool)

(assert (=> b!95314 (= e!62182 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46973)))))))

(assert (= (and d!25125 c!15990) b!95314))

(assert (= (and d!25125 (not c!15990)) b!95315))

(assert (= (and b!95315 c!15991) b!95316))

(assert (= (and b!95315 (not c!15991)) b!95317))

(declare-fun m!103403 () Bool)

(assert (=> b!95316 m!103403))

(assert (=> b!94632 d!25125))

(declare-fun d!25127 () Bool)

(declare-fun lt!47484 () SeekEntryResult!251)

(assert (=> d!25127 (and (or ((_ is Undefined!251) lt!47484) (not ((_ is Found!251) lt!47484)) (and (bvsge (index!3146 lt!47484) #b00000000000000000000000000000000) (bvslt (index!3146 lt!47484) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!47484) ((_ is Found!251) lt!47484) (not ((_ is MissingVacant!251) lt!47484)) (not (= (index!3148 lt!47484) (index!3147 lt!46790))) (and (bvsge (index!3148 lt!47484) #b00000000000000000000000000000000) (bvslt (index!3148 lt!47484) (size!2245 (_keys!4118 newMap!16))))) (or ((_ is Undefined!251) lt!47484) (ite ((_ is Found!251) lt!47484) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3146 lt!47484)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (and ((_ is MissingVacant!251) lt!47484) (= (index!3148 lt!47484) (index!3147 lt!46790)) (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3148 lt!47484)) #b1000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!62190 () SeekEntryResult!251)

(assert (=> d!25127 (= lt!47484 e!62190)))

(declare-fun c!16000 () Bool)

(assert (=> d!25127 (= c!16000 (bvsge (x!12655 lt!46790) #b01111111111111111111111111111110))))

(declare-fun lt!47483 () (_ BitVec 64))

(assert (=> d!25127 (= lt!47483 (select (arr!1997 (_keys!4118 newMap!16)) (index!3147 lt!46790)))))

(assert (=> d!25127 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25127 (= (seekKeyOrZeroReturnVacant!0 (x!12655 lt!46790) (index!3147 lt!46790) (index!3147 lt!46790) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!47484)))

(declare-fun b!95330 () Bool)

(declare-fun e!62192 () SeekEntryResult!251)

(assert (=> b!95330 (= e!62192 (MissingVacant!251 (index!3147 lt!46790)))))

(declare-fun b!95331 () Bool)

(declare-fun e!62191 () SeekEntryResult!251)

(assert (=> b!95331 (= e!62191 (Found!251 (index!3147 lt!46790)))))

(declare-fun b!95332 () Bool)

(declare-fun nextIndex!0 ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))

(assert (=> b!95332 (= e!62192 (seekKeyOrZeroReturnVacant!0 (bvadd (x!12655 lt!46790) #b00000000000000000000000000000001) (nextIndex!0 (index!3147 lt!46790) (x!12655 lt!46790) (mask!6511 newMap!16)) (index!3147 lt!46790) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!95333 () Bool)

(assert (=> b!95333 (= e!62190 Undefined!251)))

(declare-fun b!95334 () Bool)

(assert (=> b!95334 (= e!62190 e!62191)))

(declare-fun c!15999 () Bool)

(assert (=> b!95334 (= c!15999 (= lt!47483 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!95335 () Bool)

(declare-fun c!15998 () Bool)

(assert (=> b!95335 (= c!15998 (= lt!47483 #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95335 (= e!62191 e!62192)))

(assert (= (and d!25127 c!16000) b!95333))

(assert (= (and d!25127 (not c!16000)) b!95334))

(assert (= (and b!95334 c!15999) b!95331))

(assert (= (and b!95334 (not c!15999)) b!95335))

(assert (= (and b!95335 c!15998) b!95330))

(assert (= (and b!95335 (not c!15998)) b!95332))

(declare-fun m!103405 () Bool)

(assert (=> d!25127 m!103405))

(declare-fun m!103407 () Bool)

(assert (=> d!25127 m!103407))

(assert (=> d!25127 m!101645))

(assert (=> d!25127 m!101603))

(declare-fun m!103409 () Bool)

(assert (=> b!95332 m!103409))

(assert (=> b!95332 m!103409))

(assert (=> b!95332 m!101363))

(declare-fun m!103411 () Bool)

(assert (=> b!95332 m!103411))

(assert (=> b!94393 d!25127))

(declare-fun d!25129 () Bool)

(assert (=> d!25129 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))

(declare-fun lt!47485 () Unit!2798)

(assert (=> d!25129 (= lt!47485 (choose!561 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))

(declare-fun e!62193 () Bool)

(assert (=> d!25129 e!62193))

(declare-fun res!48217 () Bool)

(assert (=> d!25129 (=> (not res!48217) (not e!62193))))

(assert (=> d!25129 (= res!48217 (isStrictlySorted!302 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!25129 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757) lt!47485)))

(declare-fun b!95336 () Bool)

(assert (=> b!95336 (= e!62193 (containsKey!152 (toList!776 (+!133 lt!46758 (tuple2!2311 lt!46749 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46757))))

(assert (= (and d!25129 res!48217) b!95336))

(assert (=> d!25129 m!101825))

(assert (=> d!25129 m!101825))

(assert (=> d!25129 m!101827))

(declare-fun m!103413 () Bool)

(assert (=> d!25129 m!103413))

(declare-fun m!103415 () Bool)

(assert (=> d!25129 m!103415))

(assert (=> b!95336 m!101821))

(assert (=> b!94541 d!25129))

(assert (=> b!94541 d!24903))

(assert (=> b!94541 d!24905))

(assert (=> b!94404 d!24615))

(declare-fun d!25131 () Bool)

(assert (=> d!25131 (= (apply!90 lt!46824 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1265 (getValueByKey!148 (toList!776 lt!46824) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(declare-fun bs!3929 () Bool)

(assert (= bs!3929 d!25131))

(assert (=> bs!3929 m!101689))

(declare-fun m!103417 () Bool)

(assert (=> bs!3929 m!103417))

(assert (=> bs!3929 m!103417))

(declare-fun m!103419 () Bool)

(assert (=> bs!3929 m!103419))

(assert (=> b!94419 d!25131))

(declare-fun d!25133 () Bool)

(declare-fun c!16001 () Bool)

(assert (=> d!25133 (= c!16001 ((_ is ValueCellFull!963) (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62194 () V!3131)

(assert (=> d!25133 (= (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)) e!62194)))

(declare-fun b!95337 () Bool)

(assert (=> b!95337 (= e!62194 (get!1263 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95338 () Bool)

(assert (=> b!95338 (= e!62194 (get!1264 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25133 c!16001) b!95337))

(assert (= (and d!25133 (not c!16001)) b!95338))

(assert (=> b!95337 m!101699))

(assert (=> b!95337 m!101697))

(declare-fun m!103421 () Bool)

(assert (=> b!95337 m!103421))

(assert (=> b!95338 m!101699))

(assert (=> b!95338 m!101697))

(declare-fun m!103423 () Bool)

(assert (=> b!95338 m!103423))

(assert (=> b!94419 d!25133))

(declare-fun b!95357 () Bool)

(declare-fun e!62208 () SeekEntryResult!251)

(declare-fun e!62207 () SeekEntryResult!251)

(assert (=> b!95357 (= e!62208 e!62207)))

(declare-fun lt!47491 () (_ BitVec 64))

(declare-fun c!16009 () Bool)

(assert (=> b!95357 (= c!16009 (or (= lt!47491 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) (= (bvadd lt!47491 lt!47491) #b0000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95358 () Bool)

(assert (=> b!95358 (= e!62208 (Intermediate!251 true (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!95359 () Bool)

(assert (=> b!95359 (= e!62207 (Intermediate!251 false (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun b!95360 () Bool)

(assert (=> b!95360 (= e!62207 (seekKeyOrZeroOrLongMinValue!0 (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (nextIndex!0 (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16)) #b00000000000000000000000000000000 (mask!6511 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)))))

(declare-fun b!95361 () Bool)

(declare-fun e!62209 () Bool)

(declare-fun e!62205 () Bool)

(assert (=> b!95361 (= e!62209 e!62205)))

(declare-fun res!48225 () Bool)

(declare-fun lt!47490 () SeekEntryResult!251)

(assert (=> b!95361 (= res!48225 (and ((_ is Intermediate!251) lt!47490) (not (undefined!1063 lt!47490)) (bvslt (x!12655 lt!47490) #b01111111111111111111111111111110) (bvsge (x!12655 lt!47490) #b00000000000000000000000000000000) (bvsge (x!12655 lt!47490) #b00000000000000000000000000000000)))))

(assert (=> b!95361 (=> (not res!48225) (not e!62205))))

(declare-fun b!95362 () Bool)

(assert (=> b!95362 (= e!62209 (bvsge (x!12655 lt!47490) #b01111111111111111111111111111110))))

(declare-fun b!95363 () Bool)

(assert (=> b!95363 (and (bvsge (index!3147 lt!47490) #b00000000000000000000000000000000) (bvslt (index!3147 lt!47490) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun e!62206 () Bool)

(assert (=> b!95363 (= e!62206 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3147 lt!47490)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun d!25135 () Bool)

(assert (=> d!25135 e!62209))

(declare-fun c!16010 () Bool)

(assert (=> d!25135 (= c!16010 (and ((_ is Intermediate!251) lt!47490) (undefined!1063 lt!47490)))))

(assert (=> d!25135 (= lt!47490 e!62208)))

(declare-fun c!16008 () Bool)

(assert (=> d!25135 (= c!16008 (bvsge #b00000000000000000000000000000000 #b01111111111111111111111111111110))))

(assert (=> d!25135 (= lt!47491 (select (arr!1997 (_keys!4118 newMap!16)) (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16))))))

(assert (=> d!25135 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25135 (= (seekKeyOrZeroOrLongMinValue!0 #b00000000000000000000000000000000 (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (_keys!4118 newMap!16) (mask!6511 newMap!16)) lt!47490)))

(declare-fun b!95364 () Bool)

(assert (=> b!95364 (and (bvsge (index!3147 lt!47490) #b00000000000000000000000000000000) (bvslt (index!3147 lt!47490) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun res!48224 () Bool)

(assert (=> b!95364 (= res!48224 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3147 lt!47490)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> b!95364 (=> res!48224 e!62206)))

(assert (=> b!95364 (= e!62205 e!62206)))

(declare-fun b!95365 () Bool)

(assert (=> b!95365 (and (bvsge (index!3147 lt!47490) #b00000000000000000000000000000000) (bvslt (index!3147 lt!47490) (size!2245 (_keys!4118 newMap!16))))))

(declare-fun res!48226 () Bool)

(assert (=> b!95365 (= res!48226 (= (select (arr!1997 (_keys!4118 newMap!16)) (index!3147 lt!47490)) #b0000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95365 (=> res!48226 e!62206)))

(assert (= (and d!25135 c!16008) b!95358))

(assert (= (and d!25135 (not c!16008)) b!95357))

(assert (= (and b!95357 c!16009) b!95359))

(assert (= (and b!95357 (not c!16009)) b!95360))

(assert (= (and d!25135 c!16010) b!95362))

(assert (= (and d!25135 (not c!16010)) b!95361))

(assert (= (and b!95361 res!48225) b!95364))

(assert (= (and b!95364 (not res!48224)) b!95365))

(assert (= (and b!95365 (not res!48226)) b!95363))

(declare-fun m!103425 () Bool)

(assert (=> b!95365 m!103425))

(assert (=> d!25135 m!101637))

(declare-fun m!103427 () Bool)

(assert (=> d!25135 m!103427))

(assert (=> d!25135 m!101603))

(assert (=> b!95363 m!103425))

(assert (=> b!95364 m!103425))

(assert (=> b!95360 m!101637))

(declare-fun m!103429 () Bool)

(assert (=> b!95360 m!103429))

(assert (=> b!95360 m!103429))

(assert (=> b!95360 m!101363))

(declare-fun m!103431 () Bool)

(assert (=> b!95360 m!103431))

(assert (=> d!24633 d!25135))

(declare-fun d!25137 () Bool)

(declare-fun lt!47497 () (_ BitVec 32))

(declare-fun lt!47496 () (_ BitVec 32))

(assert (=> d!25137 (= lt!47497 (bvmul (bvxor lt!47496 (bvlshr lt!47496 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))))

(assert (=> d!25137 (= lt!47496 ((_ extract 31 0) (bvand (bvxor (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvlshr (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))))

(assert (=> d!25137 (and (bvsge (mask!6511 newMap!16) #b00000000000000000000000000000000) (let ((res!48227 (let ((h!2160 ((_ extract 31 0) (bvand (bvxor (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvlshr (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b0000000000000000000000000000000000000000000000000000000000100000)) #b0000000000000000000000000000000011111111111111111111111111111111)))) (let ((x!12759 (bvmul (bvxor h!2160 (bvlshr h!2160 #b00000000000000000000000000010000)) #b10000101111010111100101001101011))) (bvand (bvxor x!12759 (bvlshr x!12759 #b00000000000000000000000000001101)) (mask!6511 newMap!16)))))) (and (bvslt res!48227 (bvadd (mask!6511 newMap!16) #b00000000000000000000000000000001)) (bvsge res!48227 #b00000000000000000000000000000000))))))

(assert (=> d!25137 (= (toIndex!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (mask!6511 newMap!16)) (bvand (bvxor lt!47497 (bvlshr lt!47497 #b00000000000000000000000000001101)) (mask!6511 newMap!16)))))

(assert (=> d!24633 d!25137))

(assert (=> d!24633 d!24887))

(declare-fun d!25139 () Bool)

(assert (=> d!25139 (= (get!1265 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000)) (v!2766 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!24663 d!25139))

(assert (=> d!24663 d!25019))

(declare-fun d!25141 () Bool)

(declare-fun e!62211 () Bool)

(assert (=> d!25141 e!62211))

(declare-fun res!48228 () Bool)

(assert (=> d!25141 (=> res!48228 e!62211)))

(declare-fun lt!47501 () Bool)

(assert (=> d!25141 (= res!48228 (not lt!47501))))

(declare-fun lt!47498 () Bool)

(assert (=> d!25141 (= lt!47501 lt!47498)))

(declare-fun lt!47500 () Unit!2798)

(declare-fun e!62210 () Unit!2798)

(assert (=> d!25141 (= lt!47500 e!62210)))

(declare-fun c!16011 () Bool)

(assert (=> d!25141 (= c!16011 lt!47498)))

(assert (=> d!25141 (= lt!47498 (containsKey!152 (toList!776 lt!46973) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!25141 (= (contains!789 lt!46973 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47501)))

(declare-fun b!95366 () Bool)

(declare-fun lt!47499 () Unit!2798)

(assert (=> b!95366 (= e!62210 lt!47499)))

(assert (=> b!95366 (= lt!47499 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46973) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> b!95366 (isDefined!101 (getValueByKey!148 (toList!776 lt!46973) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95367 () Bool)

(declare-fun Unit!2853 () Unit!2798)

(assert (=> b!95367 (= e!62210 Unit!2853)))

(declare-fun b!95368 () Bool)

(assert (=> b!95368 (= e!62211 (isDefined!101 (getValueByKey!148 (toList!776 lt!46973) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25141 c!16011) b!95366))

(assert (= (and d!25141 (not c!16011)) b!95367))

(assert (= (and d!25141 (not res!48228)) b!95368))

(declare-fun m!103433 () Bool)

(assert (=> d!25141 m!103433))

(declare-fun m!103435 () Bool)

(assert (=> b!95366 m!103435))

(assert (=> b!95366 m!102065))

(assert (=> b!95366 m!102065))

(declare-fun m!103437 () Bool)

(assert (=> b!95366 m!103437))

(assert (=> b!95368 m!102065))

(assert (=> b!95368 m!102065))

(assert (=> b!95368 m!103437))

(assert (=> d!24737 d!25141))

(declare-fun d!25143 () Bool)

(declare-fun c!16012 () Bool)

(assert (=> d!25143 (= c!16012 (and ((_ is Cons!1565) lt!46974) (= (_1!1166 (h!2157 lt!46974)) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62212 () Option!154)

(assert (=> d!25143 (= (getValueByKey!148 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62212)))

(declare-fun b!95371 () Bool)

(declare-fun e!62213 () Option!154)

(assert (=> b!95371 (= e!62213 (getValueByKey!148 (t!5471 lt!46974) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95372 () Bool)

(assert (=> b!95372 (= e!62213 None!152)))

(declare-fun b!95370 () Bool)

(assert (=> b!95370 (= e!62212 e!62213)))

(declare-fun c!16013 () Bool)

(assert (=> b!95370 (= c!16013 (and ((_ is Cons!1565) lt!46974) (not (= (_1!1166 (h!2157 lt!46974)) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95369 () Bool)

(assert (=> b!95369 (= e!62212 (Some!153 (_2!1166 (h!2157 lt!46974))))))

(assert (= (and d!25143 c!16012) b!95369))

(assert (= (and d!25143 (not c!16012)) b!95370))

(assert (= (and b!95370 c!16013) b!95371))

(assert (= (and b!95370 (not c!16013)) b!95372))

(declare-fun m!103439 () Bool)

(assert (=> b!95371 m!103439))

(assert (=> d!24737 d!25143))

(declare-fun d!25145 () Bool)

(assert (=> d!25145 (= (getValueByKey!148 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!47502 () Unit!2798)

(assert (=> d!25145 (= lt!47502 (choose!569 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun e!62214 () Bool)

(assert (=> d!25145 e!62214))

(declare-fun res!48229 () Bool)

(assert (=> d!25145 (=> (not res!48229) (not e!62214))))

(assert (=> d!25145 (= res!48229 (isStrictlySorted!302 lt!46974))))

(assert (=> d!25145 (= (lemmaContainsTupThenGetReturnValue!64 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47502)))

(declare-fun b!95373 () Bool)

(declare-fun res!48230 () Bool)

(assert (=> b!95373 (=> (not res!48230) (not e!62214))))

(assert (=> b!95373 (= res!48230 (containsKey!152 lt!46974 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95374 () Bool)

(assert (=> b!95374 (= e!62214 (contains!792 lt!46974 (tuple2!2311 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25145 res!48229) b!95373))

(assert (= (and b!95373 res!48230) b!95374))

(assert (=> d!25145 m!102059))

(declare-fun m!103441 () Bool)

(assert (=> d!25145 m!103441))

(declare-fun m!103443 () Bool)

(assert (=> d!25145 m!103443))

(declare-fun m!103445 () Bool)

(assert (=> b!95373 m!103445))

(declare-fun m!103447 () Bool)

(assert (=> b!95374 m!103447))

(assert (=> d!24737 d!25145))

(declare-fun e!62217 () List!1569)

(declare-fun c!16017 () Bool)

(declare-fun b!95375 () Bool)

(declare-fun c!16015 () Bool)

(assert (=> b!95375 (= e!62217 (ite c!16017 (t!5471 (toList!776 call!9457)) (ite c!16015 (Cons!1565 (h!2157 (toList!776 call!9457)) (t!5471 (toList!776 call!9457))) Nil!1566)))))

(declare-fun b!95376 () Bool)

(declare-fun e!62216 () List!1569)

(declare-fun call!9595 () List!1569)

(assert (=> b!95376 (= e!62216 call!9595)))

(declare-fun bm!9592 () Bool)

(declare-fun call!9597 () List!1569)

(assert (=> bm!9592 (= call!9597 call!9595)))

(declare-fun b!95377 () Bool)

(assert (=> b!95377 (= c!16015 (and ((_ is Cons!1565) (toList!776 call!9457)) (bvsgt (_1!1166 (h!2157 (toList!776 call!9457))) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62219 () List!1569)

(declare-fun e!62215 () List!1569)

(assert (=> b!95377 (= e!62219 e!62215)))

(declare-fun b!95378 () Bool)

(declare-fun call!9596 () List!1569)

(assert (=> b!95378 (= e!62215 call!9596)))

(declare-fun b!95379 () Bool)

(assert (=> b!95379 (= e!62215 call!9596)))

(declare-fun b!95380 () Bool)

(assert (=> b!95380 (= e!62217 (insertStrictlySorted!67 (t!5471 (toList!776 call!9457)) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95381 () Bool)

(declare-fun res!48231 () Bool)

(declare-fun e!62218 () Bool)

(assert (=> b!95381 (=> (not res!48231) (not e!62218))))

(declare-fun lt!47503 () List!1569)

(assert (=> b!95381 (= res!48231 (containsKey!152 lt!47503 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun bm!9593 () Bool)

(assert (=> bm!9593 (= call!9596 call!9597)))

(declare-fun b!95382 () Bool)

(assert (=> b!95382 (= e!62216 e!62219)))

(assert (=> b!95382 (= c!16017 (and ((_ is Cons!1565) (toList!776 call!9457)) (= (_1!1166 (h!2157 (toList!776 call!9457))) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun d!25147 () Bool)

(assert (=> d!25147 e!62218))

(declare-fun res!48232 () Bool)

(assert (=> d!25147 (=> (not res!48232) (not e!62218))))

(assert (=> d!25147 (= res!48232 (isStrictlySorted!302 lt!47503))))

(assert (=> d!25147 (= lt!47503 e!62216)))

(declare-fun c!16016 () Bool)

(assert (=> d!25147 (= c!16016 (and ((_ is Cons!1565) (toList!776 call!9457)) (bvslt (_1!1166 (h!2157 (toList!776 call!9457))) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!25147 (isStrictlySorted!302 (toList!776 call!9457))))

(assert (=> d!25147 (= (insertStrictlySorted!67 (toList!776 call!9457) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47503)))

(declare-fun b!95383 () Bool)

(assert (=> b!95383 (= e!62219 call!9597)))

(declare-fun bm!9594 () Bool)

(assert (=> bm!9594 (= call!9595 ($colon$colon!76 e!62217 (ite c!16016 (h!2157 (toList!776 call!9457)) (tuple2!2311 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun c!16014 () Bool)

(assert (=> bm!9594 (= c!16014 c!16016)))

(declare-fun b!95384 () Bool)

(assert (=> b!95384 (= e!62218 (contains!792 lt!47503 (tuple2!2311 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25147 c!16016) b!95376))

(assert (= (and d!25147 (not c!16016)) b!95382))

(assert (= (and b!95382 c!16017) b!95383))

(assert (= (and b!95382 (not c!16017)) b!95377))

(assert (= (and b!95377 c!16015) b!95379))

(assert (= (and b!95377 (not c!16015)) b!95378))

(assert (= (or b!95379 b!95378) bm!9593))

(assert (= (or b!95383 bm!9593) bm!9592))

(assert (= (or b!95376 bm!9592) bm!9594))

(assert (= (and bm!9594 c!16014) b!95380))

(assert (= (and bm!9594 (not c!16014)) b!95375))

(assert (= (and d!25147 res!48232) b!95381))

(assert (= (and b!95381 res!48231) b!95384))

(declare-fun m!103449 () Bool)

(assert (=> b!95381 m!103449))

(declare-fun m!103451 () Bool)

(assert (=> bm!9594 m!103451))

(declare-fun m!103453 () Bool)

(assert (=> b!95384 m!103453))

(declare-fun m!103455 () Bool)

(assert (=> b!95380 m!103455))

(declare-fun m!103457 () Bool)

(assert (=> d!25147 m!103457))

(declare-fun m!103459 () Bool)

(assert (=> d!25147 m!103459))

(assert (=> d!24737 d!25147))

(assert (=> bm!9471 d!24809))

(assert (=> b!94614 d!24749))

(declare-fun d!25149 () Bool)

(declare-fun lt!47504 () Bool)

(assert (=> d!25149 (= lt!47504 (select (content!98 (toList!776 lt!46903)) (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun e!62221 () Bool)

(assert (=> d!25149 (= lt!47504 e!62221)))

(declare-fun res!48233 () Bool)

(assert (=> d!25149 (=> (not res!48233) (not e!62221))))

(assert (=> d!25149 (= res!48233 ((_ is Cons!1565) (toList!776 lt!46903)))))

(assert (=> d!25149 (= (contains!792 (toList!776 lt!46903) (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!47504)))

(declare-fun b!95385 () Bool)

(declare-fun e!62220 () Bool)

(assert (=> b!95385 (= e!62221 e!62220)))

(declare-fun res!48234 () Bool)

(assert (=> b!95385 (=> res!48234 e!62220)))

(assert (=> b!95385 (= res!48234 (= (h!2157 (toList!776 lt!46903)) (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95386 () Bool)

(assert (=> b!95386 (= e!62220 (contains!792 (t!5471 (toList!776 lt!46903)) (tuple2!2311 lt!46748 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!25149 res!48233) b!95385))

(assert (= (and b!95385 (not res!48234)) b!95386))

(declare-fun m!103461 () Bool)

(assert (=> d!25149 m!103461))

(declare-fun m!103463 () Bool)

(assert (=> d!25149 m!103463))

(declare-fun m!103465 () Bool)

(assert (=> b!95386 m!103465))

(assert (=> b!94549 d!25149))

(declare-fun d!25151 () Bool)

(declare-fun e!62223 () Bool)

(assert (=> d!25151 e!62223))

(declare-fun res!48235 () Bool)

(assert (=> d!25151 (=> res!48235 e!62223)))

(declare-fun lt!47508 () Bool)

(assert (=> d!25151 (= res!48235 (not lt!47508))))

(declare-fun lt!47505 () Bool)

(assert (=> d!25151 (= lt!47508 lt!47505)))

(declare-fun lt!47507 () Unit!2798)

(declare-fun e!62222 () Unit!2798)

(assert (=> d!25151 (= lt!47507 e!62222)))

(declare-fun c!16018 () Bool)

(assert (=> d!25151 (= c!16018 lt!47505)))

(assert (=> d!25151 (= lt!47505 (containsKey!152 (toList!776 lt!47071) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25151 (= (contains!789 lt!47071 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47508)))

(declare-fun b!95387 () Bool)

(declare-fun lt!47506 () Unit!2798)

(assert (=> b!95387 (= e!62222 lt!47506)))

(assert (=> b!95387 (= lt!47506 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!47071) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> b!95387 (isDefined!101 (getValueByKey!148 (toList!776 lt!47071) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95388 () Bool)

(declare-fun Unit!2854 () Unit!2798)

(assert (=> b!95388 (= e!62222 Unit!2854)))

(declare-fun b!95389 () Bool)

(assert (=> b!95389 (= e!62223 (isDefined!101 (getValueByKey!148 (toList!776 lt!47071) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25151 c!16018) b!95387))

(assert (= (and d!25151 (not c!16018)) b!95388))

(assert (= (and d!25151 (not res!48235)) b!95389))

(declare-fun m!103467 () Bool)

(assert (=> d!25151 m!103467))

(declare-fun m!103469 () Bool)

(assert (=> b!95387 m!103469))

(assert (=> b!95387 m!102145))

(assert (=> b!95387 m!102145))

(declare-fun m!103471 () Bool)

(assert (=> b!95387 m!103471))

(assert (=> b!95389 m!102145))

(assert (=> b!95389 m!102145))

(assert (=> b!95389 m!103471))

(assert (=> d!24745 d!25151))

(declare-fun d!25153 () Bool)

(declare-fun c!16019 () Bool)

(assert (=> d!25153 (= c!16019 (and ((_ is Cons!1565) lt!47072) (= (_1!1166 (h!2157 lt!47072)) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62224 () Option!154)

(assert (=> d!25153 (= (getValueByKey!148 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) e!62224)))

(declare-fun e!62225 () Option!154)

(declare-fun b!95392 () Bool)

(assert (=> b!95392 (= e!62225 (getValueByKey!148 (t!5471 lt!47072) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95393 () Bool)

(assert (=> b!95393 (= e!62225 None!152)))

(declare-fun b!95391 () Bool)

(assert (=> b!95391 (= e!62224 e!62225)))

(declare-fun c!16020 () Bool)

(assert (=> b!95391 (= c!16020 (and ((_ is Cons!1565) lt!47072) (not (= (_1!1166 (h!2157 lt!47072)) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun b!95390 () Bool)

(assert (=> b!95390 (= e!62224 (Some!153 (_2!1166 (h!2157 lt!47072))))))

(assert (= (and d!25153 c!16019) b!95390))

(assert (= (and d!25153 (not c!16019)) b!95391))

(assert (= (and b!95391 c!16020) b!95392))

(assert (= (and b!95391 (not c!16020)) b!95393))

(declare-fun m!103473 () Bool)

(assert (=> b!95392 m!103473))

(assert (=> d!24745 d!25153))

(declare-fun d!25155 () Bool)

(assert (=> d!25155 (= (getValueByKey!148 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47509 () Unit!2798)

(assert (=> d!25155 (= lt!47509 (choose!569 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62226 () Bool)

(assert (=> d!25155 e!62226))

(declare-fun res!48236 () Bool)

(assert (=> d!25155 (=> (not res!48236) (not e!62226))))

(assert (=> d!25155 (= res!48236 (isStrictlySorted!302 lt!47072))))

(assert (=> d!25155 (= (lemmaContainsTupThenGetReturnValue!64 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47509)))

(declare-fun b!95394 () Bool)

(declare-fun res!48237 () Bool)

(assert (=> b!95394 (=> (not res!48237) (not e!62226))))

(assert (=> b!95394 (= res!48237 (containsKey!152 lt!47072 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95395 () Bool)

(assert (=> b!95395 (= e!62226 (contains!792 lt!47072 (tuple2!2311 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25155 res!48236) b!95394))

(assert (= (and b!95394 res!48237) b!95395))

(assert (=> d!25155 m!102139))

(declare-fun m!103475 () Bool)

(assert (=> d!25155 m!103475))

(declare-fun m!103477 () Bool)

(assert (=> d!25155 m!103477))

(declare-fun m!103479 () Bool)

(assert (=> b!95394 m!103479))

(declare-fun m!103481 () Bool)

(assert (=> b!95395 m!103481))

(assert (=> d!24745 d!25155))

(declare-fun e!62229 () List!1569)

(declare-fun b!95396 () Bool)

(declare-fun c!16022 () Bool)

(declare-fun c!16024 () Bool)

(assert (=> b!95396 (= e!62229 (ite c!16024 (t!5471 (toList!776 call!9426)) (ite c!16022 (Cons!1565 (h!2157 (toList!776 call!9426)) (t!5471 (toList!776 call!9426))) Nil!1566)))))

(declare-fun b!95397 () Bool)

(declare-fun e!62228 () List!1569)

(declare-fun call!9598 () List!1569)

(assert (=> b!95397 (= e!62228 call!9598)))

(declare-fun bm!9595 () Bool)

(declare-fun call!9600 () List!1569)

(assert (=> bm!9595 (= call!9600 call!9598)))

(declare-fun b!95398 () Bool)

(assert (=> b!95398 (= c!16022 (and ((_ is Cons!1565) (toList!776 call!9426)) (bvsgt (_1!1166 (h!2157 (toList!776 call!9426))) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62231 () List!1569)

(declare-fun e!62227 () List!1569)

(assert (=> b!95398 (= e!62231 e!62227)))

(declare-fun b!95399 () Bool)

(declare-fun call!9599 () List!1569)

(assert (=> b!95399 (= e!62227 call!9599)))

(declare-fun b!95400 () Bool)

(assert (=> b!95400 (= e!62227 call!9599)))

(declare-fun b!95401 () Bool)

(assert (=> b!95401 (= e!62229 (insertStrictlySorted!67 (t!5471 (toList!776 call!9426)) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95402 () Bool)

(declare-fun res!48238 () Bool)

(declare-fun e!62230 () Bool)

(assert (=> b!95402 (=> (not res!48238) (not e!62230))))

(declare-fun lt!47510 () List!1569)

(assert (=> b!95402 (= res!48238 (containsKey!152 lt!47510 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9596 () Bool)

(assert (=> bm!9596 (= call!9599 call!9600)))

(declare-fun b!95403 () Bool)

(assert (=> b!95403 (= e!62228 e!62231)))

(assert (=> b!95403 (= c!16024 (and ((_ is Cons!1565) (toList!776 call!9426)) (= (_1!1166 (h!2157 (toList!776 call!9426))) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun d!25157 () Bool)

(assert (=> d!25157 e!62230))

(declare-fun res!48239 () Bool)

(assert (=> d!25157 (=> (not res!48239) (not e!62230))))

(assert (=> d!25157 (= res!48239 (isStrictlySorted!302 lt!47510))))

(assert (=> d!25157 (= lt!47510 e!62228)))

(declare-fun c!16023 () Bool)

(assert (=> d!25157 (= c!16023 (and ((_ is Cons!1565) (toList!776 call!9426)) (bvslt (_1!1166 (h!2157 (toList!776 call!9426))) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25157 (isStrictlySorted!302 (toList!776 call!9426))))

(assert (=> d!25157 (= (insertStrictlySorted!67 (toList!776 call!9426) (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47510)))

(declare-fun b!95404 () Bool)

(assert (=> b!95404 (= e!62231 call!9600)))

(declare-fun bm!9597 () Bool)

(assert (=> bm!9597 (= call!9598 ($colon$colon!76 e!62229 (ite c!16023 (h!2157 (toList!776 call!9426)) (tuple2!2311 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun c!16021 () Bool)

(assert (=> bm!9597 (= c!16021 c!16023)))

(declare-fun b!95405 () Bool)

(assert (=> b!95405 (= e!62230 (contains!792 lt!47510 (tuple2!2311 (_1!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (= (and d!25157 c!16023) b!95397))

(assert (= (and d!25157 (not c!16023)) b!95403))

(assert (= (and b!95403 c!16024) b!95404))

(assert (= (and b!95403 (not c!16024)) b!95398))

(assert (= (and b!95398 c!16022) b!95400))

(assert (= (and b!95398 (not c!16022)) b!95399))

(assert (= (or b!95400 b!95399) bm!9596))

(assert (= (or b!95404 bm!9596) bm!9595))

(assert (= (or b!95397 bm!9595) bm!9597))

(assert (= (and bm!9597 c!16021) b!95401))

(assert (= (and bm!9597 (not c!16021)) b!95396))

(assert (= (and d!25157 res!48239) b!95402))

(assert (= (and b!95402 res!48238) b!95405))

(declare-fun m!103483 () Bool)

(assert (=> b!95402 m!103483))

(declare-fun m!103485 () Bool)

(assert (=> bm!9597 m!103485))

(declare-fun m!103487 () Bool)

(assert (=> b!95405 m!103487))

(declare-fun m!103489 () Bool)

(assert (=> b!95401 m!103489))

(declare-fun m!103491 () Bool)

(assert (=> d!25157 m!103491))

(declare-fun m!103493 () Bool)

(assert (=> d!25157 m!103493))

(assert (=> d!24745 d!25157))

(declare-fun d!25159 () Bool)

(declare-fun c!16025 () Bool)

(assert (=> d!25159 (= c!16025 (and ((_ is Cons!1565) (toList!776 lt!47067)) (= (_1!1166 (h!2157 (toList!776 lt!47067))) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!62232 () Option!154)

(assert (=> d!25159 (= (getValueByKey!148 (toList!776 lt!47067) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62232)))

(declare-fun b!95408 () Bool)

(declare-fun e!62233 () Option!154)

(assert (=> b!95408 (= e!62233 (getValueByKey!148 (t!5471 (toList!776 lt!47067)) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95409 () Bool)

(assert (=> b!95409 (= e!62233 None!152)))

(declare-fun b!95407 () Bool)

(assert (=> b!95407 (= e!62232 e!62233)))

(declare-fun c!16026 () Bool)

(assert (=> b!95407 (= c!16026 (and ((_ is Cons!1565) (toList!776 lt!47067)) (not (= (_1!1166 (h!2157 (toList!776 lt!47067))) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!95406 () Bool)

(assert (=> b!95406 (= e!62232 (Some!153 (_2!1166 (h!2157 (toList!776 lt!47067)))))))

(assert (= (and d!25159 c!16025) b!95406))

(assert (= (and d!25159 (not c!16025)) b!95407))

(assert (= (and b!95407 c!16026) b!95408))

(assert (= (and b!95407 (not c!16026)) b!95409))

(declare-fun m!103495 () Bool)

(assert (=> b!95408 m!103495))

(assert (=> b!94685 d!25159))

(declare-fun d!25161 () Bool)

(assert (=> d!25161 (= (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001))) (and (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b0000000000000000000000000000000000000000000000000000000000000000)) (not (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd from!355 #b00000000000000000000000000000001)) #b1000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!94412 d!25161))

(declare-fun d!25163 () Bool)

(declare-fun e!62235 () Bool)

(assert (=> d!25163 e!62235))

(declare-fun res!48240 () Bool)

(assert (=> d!25163 (=> res!48240 e!62235)))

(declare-fun lt!47514 () Bool)

(assert (=> d!25163 (= res!48240 (not lt!47514))))

(declare-fun lt!47511 () Bool)

(assert (=> d!25163 (= lt!47514 lt!47511)))

(declare-fun lt!47513 () Unit!2798)

(declare-fun e!62234 () Unit!2798)

(assert (=> d!25163 (= lt!47513 e!62234)))

(declare-fun c!16027 () Bool)

(assert (=> d!25163 (= c!16027 lt!47511)))

(assert (=> d!25163 (= lt!47511 (containsKey!152 (toList!776 lt!46942) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25163 (= (contains!789 lt!46942 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47514)))

(declare-fun b!95410 () Bool)

(declare-fun lt!47512 () Unit!2798)

(assert (=> b!95410 (= e!62234 lt!47512)))

(assert (=> b!95410 (= lt!47512 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46942) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95410 (isDefined!101 (getValueByKey!148 (toList!776 lt!46942) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95411 () Bool)

(declare-fun Unit!2855 () Unit!2798)

(assert (=> b!95411 (= e!62234 Unit!2855)))

(declare-fun b!95412 () Bool)

(assert (=> b!95412 (= e!62235 (isDefined!101 (getValueByKey!148 (toList!776 lt!46942) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25163 c!16027) b!95410))

(assert (= (and d!25163 (not c!16027)) b!95411))

(assert (= (and d!25163 (not res!48240)) b!95412))

(assert (=> d!25163 m!101689))

(declare-fun m!103497 () Bool)

(assert (=> d!25163 m!103497))

(assert (=> b!95410 m!101689))

(declare-fun m!103499 () Bool)

(assert (=> b!95410 m!103499))

(assert (=> b!95410 m!101689))

(assert (=> b!95410 m!103317))

(assert (=> b!95410 m!103317))

(declare-fun m!103501 () Bool)

(assert (=> b!95410 m!103501))

(assert (=> b!95412 m!101689))

(assert (=> b!95412 m!103317))

(assert (=> b!95412 m!103317))

(assert (=> b!95412 m!103501))

(assert (=> b!94569 d!25163))

(assert (=> d!24625 d!24619))

(declare-fun d!25165 () Bool)

(declare-fun res!48241 () Bool)

(declare-fun e!62236 () Bool)

(assert (=> d!25165 (=> res!48241 e!62236)))

(assert (=> d!25165 (= res!48241 (and ((_ is Cons!1565) (toList!776 lt!46762)) (= (_1!1166 (h!2157 (toList!776 lt!46762))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(assert (=> d!25165 (= (containsKey!152 (toList!776 lt!46762) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) e!62236)))

(declare-fun b!95413 () Bool)

(declare-fun e!62237 () Bool)

(assert (=> b!95413 (= e!62236 e!62237)))

(declare-fun res!48242 () Bool)

(assert (=> b!95413 (=> (not res!48242) (not e!62237))))

(assert (=> b!95413 (= res!48242 (and (or (not ((_ is Cons!1565) (toList!776 lt!46762))) (bvsle (_1!1166 (h!2157 (toList!776 lt!46762))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))) ((_ is Cons!1565) (toList!776 lt!46762)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46762))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun b!95414 () Bool)

(assert (=> b!95414 (= e!62237 (containsKey!152 (t!5471 (toList!776 lt!46762)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))))))

(assert (= (and d!25165 (not res!48241)) b!95413))

(assert (= (and b!95413 res!48242) b!95414))

(assert (=> b!95414 m!101533))

(declare-fun m!103503 () Bool)

(assert (=> b!95414 m!103503))

(assert (=> d!24623 d!25165))

(declare-fun d!25167 () Bool)

(declare-fun res!48243 () Bool)

(declare-fun e!62238 () Bool)

(assert (=> d!25167 (=> res!48243 e!62238)))

(assert (=> d!25167 (= res!48243 (and ((_ is Cons!1565) (toList!776 lt!46762)) (= (_1!1166 (h!2157 (toList!776 lt!46762))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (=> d!25167 (= (containsKey!152 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000) e!62238)))

(declare-fun b!95415 () Bool)

(declare-fun e!62239 () Bool)

(assert (=> b!95415 (= e!62238 e!62239)))

(declare-fun res!48244 () Bool)

(assert (=> b!95415 (=> (not res!48244) (not e!62239))))

(assert (=> b!95415 (= res!48244 (and (or (not ((_ is Cons!1565) (toList!776 lt!46762))) (bvsle (_1!1166 (h!2157 (toList!776 lt!46762))) #b1000000000000000000000000000000000000000000000000000000000000000)) ((_ is Cons!1565) (toList!776 lt!46762)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46762))) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(declare-fun b!95416 () Bool)

(assert (=> b!95416 (= e!62239 (containsKey!152 (t!5471 (toList!776 lt!46762)) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25167 (not res!48243)) b!95415))

(assert (= (and b!95415 res!48244) b!95416))

(declare-fun m!103505 () Bool)

(assert (=> b!95416 m!103505))

(assert (=> d!24639 d!25167))

(declare-fun d!25169 () Bool)

(declare-fun e!62241 () Bool)

(assert (=> d!25169 e!62241))

(declare-fun res!48245 () Bool)

(assert (=> d!25169 (=> res!48245 e!62241)))

(declare-fun lt!47518 () Bool)

(assert (=> d!25169 (= res!48245 (not lt!47518))))

(declare-fun lt!47515 () Bool)

(assert (=> d!25169 (= lt!47518 lt!47515)))

(declare-fun lt!47517 () Unit!2798)

(declare-fun e!62240 () Unit!2798)

(assert (=> d!25169 (= lt!47517 e!62240)))

(declare-fun c!16028 () Bool)

(assert (=> d!25169 (= c!16028 lt!47515)))

(assert (=> d!25169 (= lt!47515 (containsKey!152 (toList!776 lt!47067) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> d!25169 (= (contains!789 lt!47067 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47518)))

(declare-fun b!95417 () Bool)

(declare-fun lt!47516 () Unit!2798)

(assert (=> b!95417 (= e!62240 lt!47516)))

(assert (=> b!95417 (= lt!47516 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!47067) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(assert (=> b!95417 (isDefined!101 (getValueByKey!148 (toList!776 lt!47067) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95418 () Bool)

(declare-fun Unit!2856 () Unit!2798)

(assert (=> b!95418 (= e!62240 Unit!2856)))

(declare-fun b!95419 () Bool)

(assert (=> b!95419 (= e!62241 (isDefined!101 (getValueByKey!148 (toList!776 lt!47067) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25169 c!16028) b!95417))

(assert (= (and d!25169 (not c!16028)) b!95418))

(assert (= (and d!25169 (not res!48245)) b!95419))

(declare-fun m!103507 () Bool)

(assert (=> d!25169 m!103507))

(declare-fun m!103509 () Bool)

(assert (=> b!95417 m!103509))

(assert (=> b!95417 m!102133))

(assert (=> b!95417 m!102133))

(declare-fun m!103511 () Bool)

(assert (=> b!95417 m!103511))

(assert (=> b!95419 m!102133))

(assert (=> b!95419 m!102133))

(assert (=> b!95419 m!103511))

(assert (=> d!24741 d!25169))

(declare-fun d!25171 () Bool)

(declare-fun c!16029 () Bool)

(assert (=> d!25171 (= c!16029 (and ((_ is Cons!1565) lt!47068) (= (_1!1166 (h!2157 lt!47068)) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!62242 () Option!154)

(assert (=> d!25171 (= (getValueByKey!148 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) e!62242)))

(declare-fun e!62243 () Option!154)

(declare-fun b!95422 () Bool)

(assert (=> b!95422 (= e!62243 (getValueByKey!148 (t!5471 lt!47068) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95423 () Bool)

(assert (=> b!95423 (= e!62243 None!152)))

(declare-fun b!95421 () Bool)

(assert (=> b!95421 (= e!62242 e!62243)))

(declare-fun c!16030 () Bool)

(assert (=> b!95421 (= c!16030 (and ((_ is Cons!1565) lt!47068) (not (= (_1!1166 (h!2157 lt!47068)) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun b!95420 () Bool)

(assert (=> b!95420 (= e!62242 (Some!153 (_2!1166 (h!2157 lt!47068))))))

(assert (= (and d!25171 c!16029) b!95420))

(assert (= (and d!25171 (not c!16029)) b!95421))

(assert (= (and b!95421 c!16030) b!95422))

(assert (= (and b!95421 (not c!16030)) b!95423))

(declare-fun m!103513 () Bool)

(assert (=> b!95422 m!103513))

(assert (=> d!24741 d!25171))

(declare-fun d!25173 () Bool)

(assert (=> d!25173 (= (getValueByKey!148 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) (Some!153 (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun lt!47519 () Unit!2798)

(assert (=> d!25173 (= lt!47519 (choose!569 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun e!62244 () Bool)

(assert (=> d!25173 e!62244))

(declare-fun res!48246 () Bool)

(assert (=> d!25173 (=> (not res!48246) (not e!62244))))

(assert (=> d!25173 (= res!48246 (isStrictlySorted!302 lt!47068))))

(assert (=> d!25173 (= (lemmaContainsTupThenGetReturnValue!64 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47519)))

(declare-fun b!95424 () Bool)

(declare-fun res!48247 () Bool)

(assert (=> b!95424 (=> (not res!48247) (not e!62244))))

(assert (=> b!95424 (= res!48247 (containsKey!152 lt!47068 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95425 () Bool)

(assert (=> b!95425 (= e!62244 (contains!792 lt!47068 (tuple2!2311 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25173 res!48246) b!95424))

(assert (= (and b!95424 res!48247) b!95425))

(assert (=> d!25173 m!102127))

(declare-fun m!103515 () Bool)

(assert (=> d!25173 m!103515))

(declare-fun m!103517 () Bool)

(assert (=> d!25173 m!103517))

(declare-fun m!103519 () Bool)

(assert (=> b!95424 m!103519))

(declare-fun m!103521 () Bool)

(assert (=> b!95425 m!103521))

(assert (=> d!24741 d!25173))

(declare-fun c!16034 () Bool)

(declare-fun e!62247 () List!1569)

(declare-fun b!95426 () Bool)

(declare-fun c!16032 () Bool)

(assert (=> b!95426 (= e!62247 (ite c!16034 (t!5471 (toList!776 e!61508)) (ite c!16032 (Cons!1565 (h!2157 (toList!776 e!61508)) (t!5471 (toList!776 e!61508))) Nil!1566)))))

(declare-fun b!95427 () Bool)

(declare-fun e!62246 () List!1569)

(declare-fun call!9601 () List!1569)

(assert (=> b!95427 (= e!62246 call!9601)))

(declare-fun bm!9598 () Bool)

(declare-fun call!9603 () List!1569)

(assert (=> bm!9598 (= call!9603 call!9601)))

(declare-fun b!95428 () Bool)

(assert (=> b!95428 (= c!16032 (and ((_ is Cons!1565) (toList!776 e!61508)) (bvsgt (_1!1166 (h!2157 (toList!776 e!61508))) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun e!62249 () List!1569)

(declare-fun e!62245 () List!1569)

(assert (=> b!95428 (= e!62249 e!62245)))

(declare-fun b!95429 () Bool)

(declare-fun call!9602 () List!1569)

(assert (=> b!95429 (= e!62245 call!9602)))

(declare-fun b!95430 () Bool)

(assert (=> b!95430 (= e!62245 call!9602)))

(declare-fun b!95431 () Bool)

(assert (=> b!95431 (= e!62247 (insertStrictlySorted!67 (t!5471 (toList!776 e!61508)) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95432 () Bool)

(declare-fun res!48248 () Bool)

(declare-fun e!62248 () Bool)

(assert (=> b!95432 (=> (not res!48248) (not e!62248))))

(declare-fun lt!47520 () List!1569)

(assert (=> b!95432 (= res!48248 (containsKey!152 lt!47520 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun bm!9599 () Bool)

(assert (=> bm!9599 (= call!9602 call!9603)))

(declare-fun b!95433 () Bool)

(assert (=> b!95433 (= e!62246 e!62249)))

(assert (=> b!95433 (= c!16034 (and ((_ is Cons!1565) (toList!776 e!61508)) (= (_1!1166 (h!2157 (toList!776 e!61508))) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(declare-fun d!25175 () Bool)

(assert (=> d!25175 e!62248))

(declare-fun res!48249 () Bool)

(assert (=> d!25175 (=> (not res!48249) (not e!62248))))

(assert (=> d!25175 (= res!48249 (isStrictlySorted!302 lt!47520))))

(assert (=> d!25175 (= lt!47520 e!62246)))

(declare-fun c!16033 () Bool)

(assert (=> d!25175 (= c!16033 (and ((_ is Cons!1565) (toList!776 e!61508)) (bvslt (_1!1166 (h!2157 (toList!776 e!61508))) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (=> d!25175 (isStrictlySorted!302 (toList!776 e!61508))))

(assert (=> d!25175 (= (insertStrictlySorted!67 (toList!776 e!61508) (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))) lt!47520)))

(declare-fun b!95434 () Bool)

(assert (=> b!95434 (= e!62249 call!9603)))

(declare-fun bm!9600 () Bool)

(assert (=> bm!9600 (= call!9601 ($colon$colon!76 e!62247 (ite c!16033 (h!2157 (toList!776 e!61508)) (tuple2!2311 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))))

(declare-fun c!16031 () Bool)

(assert (=> bm!9600 (= c!16031 c!16033)))

(declare-fun b!95435 () Bool)

(assert (=> b!95435 (= e!62248 (contains!792 lt!47520 (tuple2!2311 (_1!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (_2!1166 (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))))

(assert (= (and d!25175 c!16033) b!95427))

(assert (= (and d!25175 (not c!16033)) b!95433))

(assert (= (and b!95433 c!16034) b!95434))

(assert (= (and b!95433 (not c!16034)) b!95428))

(assert (= (and b!95428 c!16032) b!95430))

(assert (= (and b!95428 (not c!16032)) b!95429))

(assert (= (or b!95430 b!95429) bm!9599))

(assert (= (or b!95434 bm!9599) bm!9598))

(assert (= (or b!95427 bm!9598) bm!9600))

(assert (= (and bm!9600 c!16031) b!95431))

(assert (= (and bm!9600 (not c!16031)) b!95426))

(assert (= (and d!25175 res!48249) b!95432))

(assert (= (and b!95432 res!48248) b!95435))

(declare-fun m!103523 () Bool)

(assert (=> b!95432 m!103523))

(declare-fun m!103525 () Bool)

(assert (=> bm!9600 m!103525))

(declare-fun m!103527 () Bool)

(assert (=> b!95435 m!103527))

(declare-fun m!103529 () Bool)

(assert (=> b!95431 m!103529))

(declare-fun m!103531 () Bool)

(assert (=> d!25175 m!103531))

(declare-fun m!103533 () Bool)

(assert (=> d!25175 m!103533))

(assert (=> d!24741 d!25175))

(declare-fun d!25177 () Bool)

(declare-fun e!62251 () Bool)

(assert (=> d!25177 e!62251))

(declare-fun res!48250 () Bool)

(assert (=> d!25177 (=> res!48250 e!62251)))

(declare-fun lt!47524 () Bool)

(assert (=> d!25177 (= res!48250 (not lt!47524))))

(declare-fun lt!47521 () Bool)

(assert (=> d!25177 (= lt!47524 lt!47521)))

(declare-fun lt!47523 () Unit!2798)

(declare-fun e!62250 () Unit!2798)

(assert (=> d!25177 (= lt!47523 e!62250)))

(declare-fun c!16035 () Bool)

(assert (=> d!25177 (= c!16035 lt!47521)))

(assert (=> d!25177 (= lt!47521 (containsKey!152 (toList!776 lt!46884) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> d!25177 (= (contains!789 lt!46884 #b1000000000000000000000000000000000000000000000000000000000000000) lt!47524)))

(declare-fun b!95436 () Bool)

(declare-fun lt!47522 () Unit!2798)

(assert (=> b!95436 (= e!62250 lt!47522)))

(assert (=> b!95436 (= lt!47522 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46884) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (=> b!95436 (isDefined!101 (getValueByKey!148 (toList!776 lt!46884) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95437 () Bool)

(declare-fun Unit!2857 () Unit!2798)

(assert (=> b!95437 (= e!62250 Unit!2857)))

(declare-fun b!95438 () Bool)

(assert (=> b!95438 (= e!62251 (isDefined!101 (getValueByKey!148 (toList!776 lt!46884) #b1000000000000000000000000000000000000000000000000000000000000000)))))

(assert (= (and d!25177 c!16035) b!95436))

(assert (= (and d!25177 (not c!16035)) b!95437))

(assert (= (and d!25177 (not res!48250)) b!95438))

(declare-fun m!103535 () Bool)

(assert (=> d!25177 m!103535))

(declare-fun m!103537 () Bool)

(assert (=> b!95436 m!103537))

(declare-fun m!103539 () Bool)

(assert (=> b!95436 m!103539))

(assert (=> b!95436 m!103539))

(declare-fun m!103541 () Bool)

(assert (=> b!95436 m!103541))

(assert (=> b!95438 m!103539))

(assert (=> b!95438 m!103539))

(assert (=> b!95438 m!103541))

(assert (=> b!94538 d!25177))

(assert (=> b!94681 d!24621))

(declare-fun d!25179 () Bool)

(declare-fun e!62253 () Bool)

(assert (=> d!25179 e!62253))

(declare-fun res!48251 () Bool)

(assert (=> d!25179 (=> res!48251 e!62253)))

(declare-fun lt!47528 () Bool)

(assert (=> d!25179 (= res!48251 (not lt!47528))))

(declare-fun lt!47525 () Bool)

(assert (=> d!25179 (= lt!47528 lt!47525)))

(declare-fun lt!47527 () Unit!2798)

(declare-fun e!62252 () Unit!2798)

(assert (=> d!25179 (= lt!47527 e!62252)))

(declare-fun c!16036 () Bool)

(assert (=> d!25179 (= c!16036 lt!47525)))

(assert (=> d!25179 (= lt!47525 (containsKey!152 (toList!776 lt!46908) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> d!25179 (= (contains!789 lt!46908 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47528)))

(declare-fun b!95439 () Bool)

(declare-fun lt!47526 () Unit!2798)

(assert (=> b!95439 (= e!62252 lt!47526)))

(assert (=> b!95439 (= lt!47526 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46908) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(assert (=> b!95439 (isDefined!101 (getValueByKey!148 (toList!776 lt!46908) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95440 () Bool)

(declare-fun Unit!2858 () Unit!2798)

(assert (=> b!95440 (= e!62252 Unit!2858)))

(declare-fun b!95441 () Bool)

(assert (=> b!95441 (= e!62253 (isDefined!101 (getValueByKey!148 (toList!776 lt!46908) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25179 c!16036) b!95439))

(assert (= (and d!25179 (not c!16036)) b!95440))

(assert (= (and d!25179 (not res!48251)) b!95441))

(declare-fun m!103543 () Bool)

(assert (=> d!25179 m!103543))

(declare-fun m!103545 () Bool)

(assert (=> b!95439 m!103545))

(assert (=> b!95439 m!101897))

(assert (=> b!95439 m!101897))

(declare-fun m!103547 () Bool)

(assert (=> b!95439 m!103547))

(assert (=> b!95441 m!101897))

(assert (=> b!95441 m!101897))

(assert (=> b!95441 m!103547))

(assert (=> d!24703 d!25179))

(declare-fun d!25181 () Bool)

(declare-fun c!16037 () Bool)

(assert (=> d!25181 (= c!16037 (and ((_ is Cons!1565) lt!46909) (= (_1!1166 (h!2157 lt!46909)) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62254 () Option!154)

(assert (=> d!25181 (= (getValueByKey!148 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) e!62254)))

(declare-fun b!95444 () Bool)

(declare-fun e!62255 () Option!154)

(assert (=> b!95444 (= e!62255 (getValueByKey!148 (t!5471 lt!46909) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95445 () Bool)

(assert (=> b!95445 (= e!62255 None!152)))

(declare-fun b!95443 () Bool)

(assert (=> b!95443 (= e!62254 e!62255)))

(declare-fun c!16038 () Bool)

(assert (=> b!95443 (= c!16038 (and ((_ is Cons!1565) lt!46909) (not (= (_1!1166 (h!2157 lt!46909)) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun b!95442 () Bool)

(assert (=> b!95442 (= e!62254 (Some!153 (_2!1166 (h!2157 lt!46909))))))

(assert (= (and d!25181 c!16037) b!95442))

(assert (= (and d!25181 (not c!16037)) b!95443))

(assert (= (and b!95443 c!16038) b!95444))

(assert (= (and b!95443 (not c!16038)) b!95445))

(declare-fun m!103549 () Bool)

(assert (=> b!95444 m!103549))

(assert (=> d!24703 d!25181))

(declare-fun d!25183 () Bool)

(assert (=> d!25183 (= (getValueByKey!148 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) (Some!153 (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun lt!47529 () Unit!2798)

(assert (=> d!25183 (= lt!47529 (choose!569 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun e!62256 () Bool)

(assert (=> d!25183 e!62256))

(declare-fun res!48252 () Bool)

(assert (=> d!25183 (=> (not res!48252) (not e!62256))))

(assert (=> d!25183 (= res!48252 (isStrictlySorted!302 lt!46909))))

(assert (=> d!25183 (= (lemmaContainsTupThenGetReturnValue!64 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47529)))

(declare-fun b!95446 () Bool)

(declare-fun res!48253 () Bool)

(assert (=> b!95446 (=> (not res!48253) (not e!62256))))

(assert (=> b!95446 (= res!48253 (containsKey!152 lt!46909 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95447 () Bool)

(assert (=> b!95447 (= e!62256 (contains!792 lt!46909 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25183 res!48252) b!95446))

(assert (= (and b!95446 res!48253) b!95447))

(assert (=> d!25183 m!101891))

(declare-fun m!103551 () Bool)

(assert (=> d!25183 m!103551))

(declare-fun m!103553 () Bool)

(assert (=> d!25183 m!103553))

(declare-fun m!103555 () Bool)

(assert (=> b!95446 m!103555))

(declare-fun m!103557 () Bool)

(assert (=> b!95447 m!103557))

(assert (=> d!24703 d!25183))

(declare-fun c!16040 () Bool)

(declare-fun b!95448 () Bool)

(declare-fun e!62259 () List!1569)

(declare-fun c!16042 () Bool)

(assert (=> b!95448 (= e!62259 (ite c!16042 (t!5471 (toList!776 lt!46754)) (ite c!16040 (Cons!1565 (h!2157 (toList!776 lt!46754)) (t!5471 (toList!776 lt!46754))) Nil!1566)))))

(declare-fun b!95449 () Bool)

(declare-fun e!62258 () List!1569)

(declare-fun call!9604 () List!1569)

(assert (=> b!95449 (= e!62258 call!9604)))

(declare-fun bm!9601 () Bool)

(declare-fun call!9606 () List!1569)

(assert (=> bm!9601 (= call!9606 call!9604)))

(declare-fun b!95450 () Bool)

(assert (=> b!95450 (= c!16040 (and ((_ is Cons!1565) (toList!776 lt!46754)) (bvsgt (_1!1166 (h!2157 (toList!776 lt!46754))) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun e!62261 () List!1569)

(declare-fun e!62257 () List!1569)

(assert (=> b!95450 (= e!62261 e!62257)))

(declare-fun b!95451 () Bool)

(declare-fun call!9605 () List!1569)

(assert (=> b!95451 (= e!62257 call!9605)))

(declare-fun b!95452 () Bool)

(assert (=> b!95452 (= e!62257 call!9605)))

(declare-fun b!95453 () Bool)

(assert (=> b!95453 (= e!62259 (insertStrictlySorted!67 (t!5471 (toList!776 lt!46754)) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun b!95454 () Bool)

(declare-fun res!48254 () Bool)

(declare-fun e!62260 () Bool)

(assert (=> b!95454 (=> (not res!48254) (not e!62260))))

(declare-fun lt!47530 () List!1569)

(assert (=> b!95454 (= res!48254 (containsKey!152 lt!47530 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))

(declare-fun bm!9602 () Bool)

(assert (=> bm!9602 (= call!9605 call!9606)))

(declare-fun b!95455 () Bool)

(assert (=> b!95455 (= e!62258 e!62261)))

(assert (=> b!95455 (= c!16042 (and ((_ is Cons!1565) (toList!776 lt!46754)) (= (_1!1166 (h!2157 (toList!776 lt!46754))) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(declare-fun d!25185 () Bool)

(assert (=> d!25185 e!62260))

(declare-fun res!48255 () Bool)

(assert (=> d!25185 (=> (not res!48255) (not e!62260))))

(assert (=> d!25185 (= res!48255 (isStrictlySorted!302 lt!47530))))

(assert (=> d!25185 (= lt!47530 e!62258)))

(declare-fun c!16041 () Bool)

(assert (=> d!25185 (= c!16041 (and ((_ is Cons!1565) (toList!776 lt!46754)) (bvslt (_1!1166 (h!2157 (toList!776 lt!46754))) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (=> d!25185 (isStrictlySorted!302 (toList!776 lt!46754))))

(assert (=> d!25185 (= (insertStrictlySorted!67 (toList!776 lt!46754) (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!47530)))

(declare-fun b!95456 () Bool)

(assert (=> b!95456 (= e!62261 call!9606)))

(declare-fun bm!9603 () Bool)

(assert (=> bm!9603 (= call!9604 ($colon$colon!76 e!62259 (ite c!16041 (h!2157 (toList!776 lt!46754)) (tuple2!2311 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))))))

(declare-fun c!16039 () Bool)

(assert (=> bm!9603 (= c!16039 c!16041)))

(declare-fun b!95457 () Bool)

(assert (=> b!95457 (= e!62260 (contains!792 lt!47530 (tuple2!2311 (_1!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) (_2!1166 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))

(assert (= (and d!25185 c!16041) b!95449))

(assert (= (and d!25185 (not c!16041)) b!95455))

(assert (= (and b!95455 c!16042) b!95456))

(assert (= (and b!95455 (not c!16042)) b!95450))

(assert (= (and b!95450 c!16040) b!95452))

(assert (= (and b!95450 (not c!16040)) b!95451))

(assert (= (or b!95452 b!95451) bm!9602))

(assert (= (or b!95456 bm!9602) bm!9601))

(assert (= (or b!95449 bm!9601) bm!9603))

(assert (= (and bm!9603 c!16039) b!95453))

(assert (= (and bm!9603 (not c!16039)) b!95448))

(assert (= (and d!25185 res!48255) b!95454))

(assert (= (and b!95454 res!48254) b!95457))

(declare-fun m!103559 () Bool)

(assert (=> b!95454 m!103559))

(declare-fun m!103561 () Bool)

(assert (=> bm!9603 m!103561))

(declare-fun m!103563 () Bool)

(assert (=> b!95457 m!103563))

(declare-fun m!103565 () Bool)

(assert (=> b!95453 m!103565))

(declare-fun m!103567 () Bool)

(assert (=> d!25185 m!103567))

(declare-fun m!103569 () Bool)

(assert (=> d!25185 m!103569))

(assert (=> d!24703 d!25185))

(declare-fun d!25187 () Bool)

(declare-fun e!62262 () Bool)

(assert (=> d!25187 e!62262))

(declare-fun res!48256 () Bool)

(assert (=> d!25187 (=> (not res!48256) (not e!62262))))

(declare-fun lt!47532 () ListLongMap!1521)

(assert (=> d!25187 (= res!48256 (contains!789 lt!47532 (_1!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun lt!47533 () List!1569)

(assert (=> d!25187 (= lt!47532 (ListLongMap!1522 lt!47533))))

(declare-fun lt!47531 () Unit!2798)

(declare-fun lt!47534 () Unit!2798)

(assert (=> d!25187 (= lt!47531 lt!47534)))

(assert (=> d!25187 (= (getValueByKey!148 lt!47533 (_1!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))) (Some!153 (_2!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(assert (=> d!25187 (= lt!47534 (lemmaContainsTupThenGetReturnValue!64 lt!47533 (_1!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (_2!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(assert (=> d!25187 (= lt!47533 (insertStrictlySorted!67 (toList!776 (ite c!15808 call!9500 (ite c!15805 call!9499 call!9494))) (_1!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (_2!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(assert (=> d!25187 (= (+!133 (ite c!15808 call!9500 (ite c!15805 call!9499 call!9494)) (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) lt!47532)))

(declare-fun b!95458 () Bool)

(declare-fun res!48257 () Bool)

(assert (=> b!95458 (=> (not res!48257) (not e!62262))))

(assert (=> b!95458 (= res!48257 (= (getValueByKey!148 (toList!776 lt!47532) (_1!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))) (Some!153 (_2!1166 (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))))

(declare-fun b!95459 () Bool)

(assert (=> b!95459 (= e!62262 (contains!792 (toList!776 lt!47532) (ite (or c!15808 c!15805) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (= (and d!25187 res!48256) b!95458))

(assert (= (and b!95458 res!48257) b!95459))

(declare-fun m!103571 () Bool)

(assert (=> d!25187 m!103571))

(declare-fun m!103573 () Bool)

(assert (=> d!25187 m!103573))

(declare-fun m!103575 () Bool)

(assert (=> d!25187 m!103575))

(declare-fun m!103577 () Bool)

(assert (=> d!25187 m!103577))

(declare-fun m!103579 () Bool)

(assert (=> b!95458 m!103579))

(declare-fun m!103581 () Bool)

(assert (=> b!95459 m!103581))

(assert (=> bm!9493 d!25187))

(assert (=> d!24659 d!24887))

(declare-fun d!25189 () Bool)

(assert (=> d!25189 (= (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46759)) (v!2766 (getValueByKey!148 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46759)))))

(assert (=> d!24689 d!25189))

(declare-fun c!16043 () Bool)

(declare-fun d!25191 () Bool)

(assert (=> d!25191 (= c!16043 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46759)))))

(declare-fun e!62263 () Option!154)

(assert (=> d!25191 (= (getValueByKey!148 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))) lt!46759) e!62263)))

(declare-fun e!62264 () Option!154)

(declare-fun b!95462 () Bool)

(assert (=> b!95462 (= e!62264 (getValueByKey!148 (t!5471 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) lt!46759))))

(declare-fun b!95463 () Bool)

(assert (=> b!95463 (= e!62264 None!152)))

(declare-fun b!95461 () Bool)

(assert (=> b!95461 (= e!62263 e!62264)))

(declare-fun c!16044 () Bool)

(assert (=> b!95461 (= c!16044 (and ((_ is Cons!1565) (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))) (not (= (_1!1166 (h!2157 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992)))))))) lt!46759))))))

(declare-fun b!95460 () Bool)

(assert (=> b!95460 (= e!62263 (Some!153 (_2!1166 (h!2157 (toList!776 (+!133 lt!46754 (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))))))

(assert (= (and d!25191 c!16043) b!95460))

(assert (= (and d!25191 (not c!16043)) b!95461))

(assert (= (and b!95461 c!16044) b!95462))

(assert (= (and b!95461 (not c!16044)) b!95463))

(declare-fun m!103583 () Bool)

(assert (=> b!95462 m!103583))

(assert (=> d!24689 d!25191))

(assert (=> d!24675 d!24615))

(declare-fun d!25193 () Bool)

(declare-fun lt!47535 () (_ BitVec 32))

(assert (=> d!25193 (and (bvsge lt!47535 #b00000000000000000000000000000000) (bvsle lt!47535 (bvsub (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000)))))

(declare-fun e!62265 () (_ BitVec 32))

(assert (=> d!25193 (= lt!47535 e!62265)))

(declare-fun c!16045 () Bool)

(assert (=> d!25193 (= c!16045 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!25193 (and (bvsle #b00000000000000000000000000000000 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(assert (=> d!25193 (= (arrayCountValidKeys!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) #b00000000000000000000000000000000 (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))) lt!47535)))

(declare-fun b!95464 () Bool)

(declare-fun e!62266 () (_ BitVec 32))

(declare-fun call!9607 () (_ BitVec 32))

(assert (=> b!95464 (= e!62266 call!9607)))

(declare-fun bm!9604 () Bool)

(assert (=> bm!9604 (= call!9607 (arrayCountValidKeys!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95465 () Bool)

(assert (=> b!95465 (= e!62265 #b00000000000000000000000000000000)))

(declare-fun b!95466 () Bool)

(assert (=> b!95466 (= e!62266 (bvadd #b00000000000000000000000000000001 call!9607))))

(declare-fun b!95467 () Bool)

(assert (=> b!95467 (= e!62265 e!62266)))

(declare-fun c!16046 () Bool)

(assert (=> b!95467 (= c!16046 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) #b00000000000000000000000000000000)))))

(assert (= (and d!25193 c!16045) b!95465))

(assert (= (and d!25193 (not c!16045)) b!95467))

(assert (= (and b!95467 c!16046) b!95466))

(assert (= (and b!95467 (not c!16046)) b!95464))

(assert (= (or b!95466 b!95464) bm!9604))

(declare-fun m!103585 () Bool)

(assert (=> bm!9604 m!103585))

(assert (=> b!95467 m!102543))

(assert (=> b!95467 m!102543))

(assert (=> b!95467 m!102551))

(assert (=> b!94376 d!25193))

(declare-fun d!25195 () Bool)

(assert (=> d!25195 (= (content!97 Nil!1565) ((as const (Array (_ BitVec 64) Bool)) false))))

(assert (=> d!24661 d!25195))

(assert (=> b!94409 d!25161))

(assert (=> b!94566 d!24749))

(declare-fun d!25197 () Bool)

(declare-fun c!16047 () Bool)

(assert (=> d!25197 (= c!16047 (and ((_ is Cons!1565) (t!5471 (toList!776 lt!46578))) (= (_1!1166 (h!2157 (t!5471 (toList!776 lt!46578)))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))))

(declare-fun e!62267 () Option!154)

(assert (=> d!25197 (= (getValueByKey!148 (t!5471 (toList!776 lt!46578)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)) e!62267)))

(declare-fun e!62268 () Option!154)

(declare-fun b!95470 () Bool)

(assert (=> b!95470 (= e!62268 (getValueByKey!148 (t!5471 (t!5471 (toList!776 lt!46578))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(declare-fun b!95471 () Bool)

(assert (=> b!95471 (= e!62268 None!152)))

(declare-fun b!95469 () Bool)

(assert (=> b!95469 (= e!62267 e!62268)))

(declare-fun c!16048 () Bool)

(assert (=> b!95469 (= c!16048 (and ((_ is Cons!1565) (t!5471 (toList!776 lt!46578))) (not (= (_1!1166 (h!2157 (t!5471 (toList!776 lt!46578)))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))))

(declare-fun b!95468 () Bool)

(assert (=> b!95468 (= e!62267 (Some!153 (_2!1166 (h!2157 (t!5471 (toList!776 lt!46578))))))))

(assert (= (and d!25197 c!16047) b!95468))

(assert (= (and d!25197 (not c!16047)) b!95469))

(assert (= (and b!95469 c!16048) b!95470))

(assert (= (and b!95469 (not c!16048)) b!95471))

(assert (=> b!95470 m!101363))

(declare-fun m!103587 () Bool)

(assert (=> b!95470 m!103587))

(assert (=> b!94451 d!25197))

(declare-fun lt!47536 () Bool)

(declare-fun d!25199 () Bool)

(assert (=> d!25199 (= lt!47536 (select (content!98 (toList!776 lt!47071)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun e!62270 () Bool)

(assert (=> d!25199 (= lt!47536 e!62270)))

(declare-fun res!48258 () Bool)

(assert (=> d!25199 (=> (not res!48258) (not e!62270))))

(assert (=> d!25199 (= res!48258 ((_ is Cons!1565) (toList!776 lt!47071)))))

(assert (=> d!25199 (= (contains!792 (toList!776 lt!47071) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47536)))

(declare-fun b!95472 () Bool)

(declare-fun e!62269 () Bool)

(assert (=> b!95472 (= e!62270 e!62269)))

(declare-fun res!48259 () Bool)

(assert (=> b!95472 (=> res!48259 e!62269)))

(assert (=> b!95472 (= res!48259 (= (h!2157 (toList!776 lt!47071)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun b!95473 () Bool)

(assert (=> b!95473 (= e!62269 (contains!792 (t!5471 (toList!776 lt!47071)) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25199 res!48258) b!95472))

(assert (= (and b!95472 (not res!48259)) b!95473))

(declare-fun m!103589 () Bool)

(assert (=> d!25199 m!103589))

(declare-fun m!103591 () Bool)

(assert (=> d!25199 m!103591))

(declare-fun m!103593 () Bool)

(assert (=> b!95473 m!103593))

(assert (=> b!94688 d!25199))

(declare-fun d!25201 () Bool)

(declare-fun e!62271 () Bool)

(assert (=> d!25201 e!62271))

(declare-fun res!48260 () Bool)

(assert (=> d!25201 (=> (not res!48260) (not e!62271))))

(declare-fun lt!47538 () ListLongMap!1521)

(assert (=> d!25201 (= res!48260 (contains!789 lt!47538 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun lt!47539 () List!1569)

(assert (=> d!25201 (= lt!47538 (ListLongMap!1522 lt!47539))))

(declare-fun lt!47537 () Unit!2798)

(declare-fun lt!47540 () Unit!2798)

(assert (=> d!25201 (= lt!47537 lt!47540)))

(assert (=> d!25201 (= (getValueByKey!148 lt!47539 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25201 (= lt!47540 (lemmaContainsTupThenGetReturnValue!64 lt!47539 (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25201 (= lt!47539 (insertStrictlySorted!67 (toList!776 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16))) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (=> d!25201 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47538)))

(declare-fun b!95474 () Bool)

(declare-fun res!48261 () Bool)

(assert (=> b!95474 (=> (not res!48261) (not e!62271))))

(assert (=> b!95474 (= res!48261 (= (getValueByKey!148 (toList!776 lt!47538) (_1!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) (Some!153 (_2!1166 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))))

(declare-fun b!95475 () Bool)

(assert (=> b!95475 (= e!62271 (contains!792 (toList!776 lt!47538) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(assert (= (and d!25201 res!48260) b!95474))

(assert (= (and b!95474 res!48261) b!95475))

(declare-fun m!103595 () Bool)

(assert (=> d!25201 m!103595))

(declare-fun m!103597 () Bool)

(assert (=> d!25201 m!103597))

(declare-fun m!103599 () Bool)

(assert (=> d!25201 m!103599))

(declare-fun m!103601 () Bool)

(assert (=> d!25201 m!103601))

(declare-fun m!103603 () Bool)

(assert (=> b!95474 m!103603))

(declare-fun m!103605 () Bool)

(assert (=> b!95475 m!103605))

(assert (=> d!24725 d!25201))

(declare-fun e!62272 () Bool)

(declare-fun b!95477 () Bool)

(declare-fun lt!47561 () ListLongMap!1521)

(assert (=> b!95477 (= e!62272 (= (apply!90 lt!47561 #b1000000000000000000000000000000000000000000000000000000000000000) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(declare-fun b!95478 () Bool)

(declare-fun e!62276 () Bool)

(assert (=> b!95478 (= e!62276 (= (apply!90 lt!47561 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) (get!1261 (select (arr!1998 (_values!2419 newMap!16)) #b00000000000000000000000000000000) (dynLambda!361 (defaultEntry!2436 newMap!16) #b0000000000000000000000000000000000000000000000000000000000000000))))))

(assert (=> b!95478 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2246 (_values!2419 newMap!16))))))

(assert (=> b!95478 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95479 () Bool)

(declare-fun e!62282 () Bool)

(assert (=> b!95479 (= e!62282 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95480 () Bool)

(declare-fun e!62277 () Bool)

(declare-fun e!62273 () Bool)

(assert (=> b!95480 (= e!62277 e!62273)))

(declare-fun res!48263 () Bool)

(declare-fun call!9609 () Bool)

(assert (=> b!95480 (= res!48263 call!9609)))

(assert (=> b!95480 (=> (not res!48263) (not e!62273))))

(declare-fun bm!9605 () Bool)

(declare-fun call!9611 () Bool)

(assert (=> bm!9605 (= call!9611 (contains!789 lt!47561 #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95481 () Bool)

(assert (=> b!95481 (= e!62273 (= (apply!90 lt!47561 #b0000000000000000000000000000000000000000000000000000000000000000) (zeroValue!2323 newMap!16)))))

(declare-fun b!95482 () Bool)

(declare-fun e!62280 () Bool)

(assert (=> b!95482 (= e!62280 e!62276)))

(declare-fun res!48270 () Bool)

(assert (=> b!95482 (=> (not res!48270) (not e!62276))))

(assert (=> b!95482 (= res!48270 (contains!789 lt!47561 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95482 (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95483 () Bool)

(declare-fun e!62275 () Bool)

(declare-fun e!62278 () Bool)

(assert (=> b!95483 (= e!62275 e!62278)))

(declare-fun c!16054 () Bool)

(assert (=> b!95483 (= c!16054 (not (= (bvand lt!46674 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95484 () Bool)

(assert (=> b!95484 (= e!62277 (not call!9609))))

(declare-fun b!95485 () Bool)

(declare-fun e!62274 () Unit!2798)

(declare-fun Unit!2859 () Unit!2798)

(assert (=> b!95485 (= e!62274 Unit!2859)))

(declare-fun b!95486 () Bool)

(assert (=> b!95486 (= e!62278 (not call!9611))))

(declare-fun call!9612 () ListLongMap!1521)

(declare-fun b!95476 () Bool)

(declare-fun e!62281 () ListLongMap!1521)

(assert (=> b!95476 (= e!62281 (+!133 call!9612 (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))))))

(declare-fun d!25203 () Bool)

(assert (=> d!25203 e!62275))

(declare-fun res!48265 () Bool)

(assert (=> d!25203 (=> (not res!48265) (not e!62275))))

(assert (=> d!25203 (= res!48265 (or (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))) (and (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))))

(declare-fun lt!47562 () ListLongMap!1521)

(assert (=> d!25203 (= lt!47561 lt!47562)))

(declare-fun lt!47560 () Unit!2798)

(assert (=> d!25203 (= lt!47560 e!62274)))

(declare-fun c!16052 () Bool)

(assert (=> d!25203 (= c!16052 e!62282)))

(declare-fun res!48262 () Bool)

(assert (=> d!25203 (=> (not res!48262) (not e!62282))))

(assert (=> d!25203 (= res!48262 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(assert (=> d!25203 (= lt!47562 e!62281)))

(declare-fun c!16053 () Bool)

(assert (=> d!25203 (= c!16053 (and (not (= (bvand lt!46674 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (not (= (bvand lt!46674 #b00000000000000000000000000000010) #b00000000000000000000000000000000))))))

(assert (=> d!25203 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25203 (= (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47561)))

(declare-fun b!95487 () Bool)

(declare-fun e!62284 () ListLongMap!1521)

(declare-fun call!9608 () ListLongMap!1521)

(assert (=> b!95487 (= e!62284 call!9608)))

(declare-fun b!95488 () Bool)

(declare-fun e!62283 () Bool)

(assert (=> b!95488 (= e!62283 (validKeyInArray!0 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95489 () Bool)

(declare-fun e!62279 () ListLongMap!1521)

(declare-fun call!9610 () ListLongMap!1521)

(assert (=> b!95489 (= e!62279 call!9610)))

(declare-fun b!95490 () Bool)

(declare-fun res!48268 () Bool)

(assert (=> b!95490 (=> (not res!48268) (not e!62275))))

(assert (=> b!95490 (= res!48268 e!62280)))

(declare-fun res!48269 () Bool)

(assert (=> b!95490 (=> res!48269 e!62280)))

(assert (=> b!95490 (= res!48269 (not e!62283))))

(declare-fun res!48267 () Bool)

(assert (=> b!95490 (=> (not res!48267) (not e!62283))))

(assert (=> b!95490 (= res!48267 (bvslt #b00000000000000000000000000000000 (size!2245 (_keys!4118 newMap!16))))))

(declare-fun b!95491 () Bool)

(declare-fun lt!47550 () Unit!2798)

(assert (=> b!95491 (= e!62274 lt!47550)))

(declare-fun lt!47557 () ListLongMap!1521)

(assert (=> b!95491 (= lt!47557 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47548 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47548 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47556 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47556 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47554 () Unit!2798)

(assert (=> b!95491 (= lt!47554 (addStillContains!66 lt!47557 lt!47548 (zeroValue!2323 newMap!16) lt!47556))))

(assert (=> b!95491 (contains!789 (+!133 lt!47557 (tuple2!2311 lt!47548 (zeroValue!2323 newMap!16))) lt!47556)))

(declare-fun lt!47544 () Unit!2798)

(assert (=> b!95491 (= lt!47544 lt!47554)))

(declare-fun lt!47549 () ListLongMap!1521)

(assert (=> b!95491 (= lt!47549 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47555 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47555 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47543 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47543 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47559 () Unit!2798)

(assert (=> b!95491 (= lt!47559 (addApplyDifferent!66 lt!47549 lt!47555 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47543))))

(assert (=> b!95491 (= (apply!90 (+!133 lt!47549 (tuple2!2311 lt!47555 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47543) (apply!90 lt!47549 lt!47543))))

(declare-fun lt!47552 () Unit!2798)

(assert (=> b!95491 (= lt!47552 lt!47559)))

(declare-fun lt!47553 () ListLongMap!1521)

(assert (=> b!95491 (= lt!47553 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47545 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47545 #b0000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47558 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47558 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(declare-fun lt!47546 () Unit!2798)

(assert (=> b!95491 (= lt!47546 (addApplyDifferent!66 lt!47553 lt!47545 (zeroValue!2323 newMap!16) lt!47558))))

(assert (=> b!95491 (= (apply!90 (+!133 lt!47553 (tuple2!2311 lt!47545 (zeroValue!2323 newMap!16))) lt!47558) (apply!90 lt!47553 lt!47558))))

(declare-fun lt!47542 () Unit!2798)

(assert (=> b!95491 (= lt!47542 lt!47546)))

(declare-fun lt!47551 () ListLongMap!1521)

(assert (=> b!95491 (= lt!47551 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun lt!47547 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47547 #b1000000000000000000000000000000000000000000000000000000000000000)))

(declare-fun lt!47541 () (_ BitVec 64))

(assert (=> b!95491 (= lt!47541 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))

(assert (=> b!95491 (= lt!47550 (addApplyDifferent!66 lt!47551 lt!47547 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) lt!47541))))

(assert (=> b!95491 (= (apply!90 (+!133 lt!47551 (tuple2!2311 lt!47547 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) lt!47541) (apply!90 lt!47551 lt!47541))))

(declare-fun b!95492 () Bool)

(declare-fun c!16051 () Bool)

(assert (=> b!95492 (= c!16051 (and (not (= (bvand lt!46674 #b00000000000000000000000000000010) #b00000000000000000000000000000000)) (= (bvand lt!46674 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(assert (=> b!95492 (= e!62279 e!62284)))

(declare-fun bm!9606 () Bool)

(assert (=> bm!9606 (= call!9609 (contains!789 lt!47561 #b0000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun b!95493 () Bool)

(assert (=> b!95493 (= e!62284 call!9610)))

(declare-fun call!9613 () ListLongMap!1521)

(declare-fun bm!9607 () Bool)

(declare-fun call!9614 () ListLongMap!1521)

(declare-fun c!16050 () Bool)

(assert (=> bm!9607 (= call!9612 (+!133 (ite c!16053 call!9614 (ite c!16050 call!9613 call!9608)) (ite (or c!16053 c!16050) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun bm!9608 () Bool)

(assert (=> bm!9608 (= call!9613 call!9614)))

(declare-fun b!95494 () Bool)

(declare-fun res!48264 () Bool)

(assert (=> b!95494 (=> (not res!48264) (not e!62275))))

(assert (=> b!95494 (= res!48264 e!62277)))

(declare-fun c!16049 () Bool)

(assert (=> b!95494 (= c!16049 (not (= (bvand lt!46674 #b00000000000000000000000000000001) #b00000000000000000000000000000000)))))

(declare-fun bm!9609 () Bool)

(assert (=> bm!9609 (= call!9614 (getCurrentListMapNoExtraKeys!98 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(declare-fun bm!9610 () Bool)

(assert (=> bm!9610 (= call!9608 call!9613)))

(declare-fun b!95495 () Bool)

(assert (=> b!95495 (= e!62281 e!62279)))

(assert (=> b!95495 (= c!16050 (and (not (= (bvand lt!46674 #b00000000000000000000000000000001) #b00000000000000000000000000000000)) (= (bvand lt!46674 #b00000000000000000000000000000010) #b00000000000000000000000000000000)))))

(declare-fun b!95496 () Bool)

(assert (=> b!95496 (= e!62278 e!62272)))

(declare-fun res!48266 () Bool)

(assert (=> b!95496 (= res!48266 call!9611)))

(assert (=> b!95496 (=> (not res!48266) (not e!62272))))

(declare-fun bm!9611 () Bool)

(assert (=> bm!9611 (= call!9610 call!9612)))

(assert (= (and d!25203 c!16053) b!95476))

(assert (= (and d!25203 (not c!16053)) b!95495))

(assert (= (and b!95495 c!16050) b!95489))

(assert (= (and b!95495 (not c!16050)) b!95492))

(assert (= (and b!95492 c!16051) b!95493))

(assert (= (and b!95492 (not c!16051)) b!95487))

(assert (= (or b!95493 b!95487) bm!9610))

(assert (= (or b!95489 bm!9610) bm!9608))

(assert (= (or b!95489 b!95493) bm!9611))

(assert (= (or b!95476 bm!9608) bm!9609))

(assert (= (or b!95476 bm!9611) bm!9607))

(assert (= (and d!25203 res!48262) b!95479))

(assert (= (and d!25203 c!16052) b!95491))

(assert (= (and d!25203 (not c!16052)) b!95485))

(assert (= (and d!25203 res!48265) b!95490))

(assert (= (and b!95490 res!48267) b!95488))

(assert (= (and b!95490 (not res!48269)) b!95482))

(assert (= (and b!95482 res!48270) b!95478))

(assert (= (and b!95490 res!48268) b!95494))

(assert (= (and b!95494 c!16049) b!95480))

(assert (= (and b!95494 (not c!16049)) b!95484))

(assert (= (and b!95480 res!48263) b!95481))

(assert (= (or b!95480 b!95484) bm!9606))

(assert (= (and b!95494 res!48264) b!95483))

(assert (= (and b!95483 c!16054) b!95496))

(assert (= (and b!95483 (not c!16054)) b!95486))

(assert (= (and b!95496 res!48266) b!95477))

(assert (= (or b!95496 b!95486) bm!9605))

(declare-fun b_lambda!4201 () Bool)

(assert (=> (not b_lambda!4201) (not b!95478)))

(assert (=> b!95478 t!5479))

(declare-fun b_and!5835 () Bool)

(assert (= b_and!5831 (and (=> t!5479 result!3201) b_and!5835)))

(assert (=> b!95478 t!5481))

(declare-fun b_and!5837 () Bool)

(assert (= b_and!5833 (and (=> t!5481 result!3203) b_and!5837)))

(declare-fun m!103607 () Bool)

(assert (=> b!95476 m!103607))

(assert (=> d!25203 m!101603))

(declare-fun m!103609 () Bool)

(assert (=> b!95477 m!103609))

(declare-fun m!103611 () Bool)

(assert (=> b!95481 m!103611))

(declare-fun m!103613 () Bool)

(assert (=> bm!9607 m!103613))

(assert (=> bm!9609 m!101361))

(declare-fun m!103615 () Bool)

(assert (=> bm!9609 m!103615))

(assert (=> b!95482 m!101689))

(assert (=> b!95482 m!101689))

(declare-fun m!103617 () Bool)

(assert (=> b!95482 m!103617))

(declare-fun m!103619 () Bool)

(assert (=> bm!9605 m!103619))

(assert (=> b!95479 m!101689))

(assert (=> b!95479 m!101689))

(assert (=> b!95479 m!101695))

(assert (=> b!95478 m!101689))

(assert (=> b!95478 m!101697))

(assert (=> b!95478 m!101699))

(assert (=> b!95478 m!101699))

(assert (=> b!95478 m!101697))

(assert (=> b!95478 m!101701))

(assert (=> b!95478 m!101689))

(declare-fun m!103621 () Bool)

(assert (=> b!95478 m!103621))

(assert (=> b!95488 m!101689))

(assert (=> b!95488 m!101689))

(assert (=> b!95488 m!101695))

(declare-fun m!103623 () Bool)

(assert (=> b!95491 m!103623))

(assert (=> b!95491 m!101689))

(declare-fun m!103625 () Bool)

(assert (=> b!95491 m!103625))

(declare-fun m!103627 () Bool)

(assert (=> b!95491 m!103627))

(declare-fun m!103629 () Bool)

(assert (=> b!95491 m!103629))

(declare-fun m!103631 () Bool)

(assert (=> b!95491 m!103631))

(assert (=> b!95491 m!103629))

(assert (=> b!95491 m!101361))

(declare-fun m!103633 () Bool)

(assert (=> b!95491 m!103633))

(declare-fun m!103635 () Bool)

(assert (=> b!95491 m!103635))

(assert (=> b!95491 m!101361))

(declare-fun m!103637 () Bool)

(assert (=> b!95491 m!103637))

(declare-fun m!103639 () Bool)

(assert (=> b!95491 m!103639))

(declare-fun m!103641 () Bool)

(assert (=> b!95491 m!103641))

(assert (=> b!95491 m!103623))

(declare-fun m!103643 () Bool)

(assert (=> b!95491 m!103643))

(declare-fun m!103645 () Bool)

(assert (=> b!95491 m!103645))

(declare-fun m!103647 () Bool)

(assert (=> b!95491 m!103647))

(assert (=> b!95491 m!103639))

(declare-fun m!103649 () Bool)

(assert (=> b!95491 m!103649))

(assert (=> b!95491 m!101361))

(assert (=> b!95491 m!103615))

(declare-fun m!103651 () Bool)

(assert (=> b!95491 m!103651))

(assert (=> b!95491 m!103645))

(declare-fun m!103653 () Bool)

(assert (=> bm!9606 m!103653))

(assert (=> d!24725 d!25203))

(assert (=> d!24725 d!24649))

(assert (=> d!24725 d!24887))

(declare-fun d!25205 () Bool)

(assert (=> d!25205 (= (+!133 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!25205 true))

(declare-fun _$8!79 () Unit!2798)

(assert (=> d!25205 (= (choose!567 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) lt!46674 (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (defaultEntry!2436 newMap!16)) _$8!79)))

(declare-fun bs!3930 () Bool)

(assert (= bs!3930 d!25205))

(assert (=> bs!3930 m!101465))

(assert (=> bs!3930 m!101465))

(assert (=> bs!3930 m!101995))

(assert (=> bs!3930 m!101361))

(assert (=> bs!3930 m!101993))

(assert (=> d!24725 d!25205))

(declare-fun d!25207 () Bool)

(assert (not d!25207))

(assert (=> b!94476 d!25207))

(assert (=> b!94677 d!24667))

(declare-fun d!25209 () Bool)

(declare-fun lt!47563 () (_ BitVec 32))

(assert (=> d!25209 (and (bvsge lt!47563 #b00000000000000000000000000000000) (bvsle lt!47563 (bvsub (size!2245 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(declare-fun e!62285 () (_ BitVec 32))

(assert (=> d!25209 (= lt!47563 e!62285)))

(declare-fun c!16055 () Bool)

(assert (=> d!25209 (= c!16055 (bvsge #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(assert (=> d!25209 (and (bvsle #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))) (bvsge #b00000000000000000000000000000000 #b00000000000000000000000000000000) (bvsle (size!2245 (_keys!4118 (_2!1167 lt!46697))) (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(assert (=> d!25209 (= (arrayCountValidKeys!0 (_keys!4118 (_2!1167 lt!46697)) #b00000000000000000000000000000000 (size!2245 (_keys!4118 (_2!1167 lt!46697)))) lt!47563)))

(declare-fun b!95497 () Bool)

(declare-fun e!62286 () (_ BitVec 32))

(declare-fun call!9615 () (_ BitVec 32))

(assert (=> b!95497 (= e!62286 call!9615)))

(declare-fun bm!9612 () Bool)

(assert (=> bm!9612 (= call!9615 (arrayCountValidKeys!0 (_keys!4118 (_2!1167 lt!46697)) (bvadd #b00000000000000000000000000000000 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (_2!1167 lt!46697)))))))

(declare-fun b!95498 () Bool)

(assert (=> b!95498 (= e!62285 #b00000000000000000000000000000000)))

(declare-fun b!95499 () Bool)

(assert (=> b!95499 (= e!62286 (bvadd #b00000000000000000000000000000001 call!9615))))

(declare-fun b!95500 () Bool)

(assert (=> b!95500 (= e!62285 e!62286)))

(declare-fun c!16056 () Bool)

(assert (=> b!95500 (= c!16056 (validKeyInArray!0 (select (arr!1997 (_keys!4118 (_2!1167 lt!46697))) #b00000000000000000000000000000000)))))

(assert (= (and d!25209 c!16055) b!95498))

(assert (= (and d!25209 (not c!16055)) b!95500))

(assert (= (and b!95500 c!16056) b!95499))

(assert (= (and b!95500 (not c!16056)) b!95497))

(assert (= (or b!95499 b!95497) bm!9612))

(declare-fun m!103655 () Bool)

(assert (=> bm!9612 m!103655))

(assert (=> b!95500 m!102287))

(assert (=> b!95500 m!102287))

(assert (=> b!95500 m!102295))

(assert (=> b!94373 d!25209))

(declare-fun d!25211 () Bool)

(declare-fun lt!47564 () Bool)

(assert (=> d!25211 (= lt!47564 (select (content!97 Nil!1565) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun e!62288 () Bool)

(assert (=> d!25211 (= lt!47564 e!62288)))

(declare-fun res!48272 () Bool)

(assert (=> d!25211 (=> (not res!48272) (not e!62288))))

(assert (=> d!25211 (= res!48272 ((_ is Cons!1564) Nil!1565))))

(assert (=> d!25211 (= (contains!791 Nil!1565 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47564)))

(declare-fun b!95501 () Bool)

(declare-fun e!62287 () Bool)

(assert (=> b!95501 (= e!62288 e!62287)))

(declare-fun res!48271 () Bool)

(assert (=> b!95501 (=> res!48271 e!62287)))

(assert (=> b!95501 (= res!48271 (= (h!2156 Nil!1565) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95502 () Bool)

(assert (=> b!95502 (= e!62287 (contains!791 (t!5470 Nil!1565) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (= (and d!25211 res!48272) b!95501))

(assert (= (and b!95501 (not res!48271)) b!95502))

(assert (=> d!25211 m!101759))

(assert (=> d!25211 m!101689))

(declare-fun m!103657 () Bool)

(assert (=> d!25211 m!103657))

(assert (=> b!95502 m!101689))

(declare-fun m!103659 () Bool)

(assert (=> b!95502 m!103659))

(assert (=> b!94590 d!25211))

(declare-fun d!25213 () Bool)

(assert (=> d!25213 (contains!789 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46965)))

(declare-fun lt!47565 () Unit!2798)

(assert (=> d!25213 (= lt!47565 (choose!563 lt!46966 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46965))))

(assert (=> d!25213 (contains!789 lt!46966 lt!46965)))

(assert (=> d!25213 (= (addStillContains!66 lt!46966 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46965) lt!47565)))

(declare-fun bs!3931 () Bool)

(assert (= bs!3931 d!25213))

(assert (=> bs!3931 m!102025))

(assert (=> bs!3931 m!102025))

(assert (=> bs!3931 m!102045))

(declare-fun m!103661 () Bool)

(assert (=> bs!3931 m!103661))

(declare-fun m!103663 () Bool)

(assert (=> bs!3931 m!103663))

(assert (=> b!94626 d!25213))

(assert (=> b!94626 d!25035))

(declare-fun d!25215 () Bool)

(assert (=> d!25215 (= (apply!90 (+!133 lt!46958 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46952) (apply!90 lt!46958 lt!46952))))

(declare-fun lt!47566 () Unit!2798)

(assert (=> d!25215 (= lt!47566 (choose!564 lt!46958 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46952))))

(declare-fun e!62289 () Bool)

(assert (=> d!25215 e!62289))

(declare-fun res!48273 () Bool)

(assert (=> d!25215 (=> (not res!48273) (not e!62289))))

(assert (=> d!25215 (= res!48273 (contains!789 lt!46958 lt!46952))))

(assert (=> d!25215 (= (addApplyDifferent!66 lt!46958 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46952) lt!47566)))

(declare-fun b!95503 () Bool)

(assert (=> b!95503 (= e!62289 (not (= lt!46952 lt!46964)))))

(assert (= (and d!25215 res!48273) b!95503))

(assert (=> d!25215 m!102047))

(assert (=> d!25215 m!102043))

(assert (=> d!25215 m!102047))

(assert (=> d!25215 m!102049))

(declare-fun m!103665 () Bool)

(assert (=> d!25215 m!103665))

(declare-fun m!103667 () Bool)

(assert (=> d!25215 m!103667))

(assert (=> b!94626 d!25215))

(declare-fun d!25217 () Bool)

(declare-fun e!62290 () Bool)

(assert (=> d!25217 e!62290))

(declare-fun res!48274 () Bool)

(assert (=> d!25217 (=> (not res!48274) (not e!62290))))

(declare-fun lt!47568 () ListLongMap!1521)

(assert (=> d!25217 (= res!48274 (contains!789 lt!47568 (_1!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun lt!47569 () List!1569)

(assert (=> d!25217 (= lt!47568 (ListLongMap!1522 lt!47569))))

(declare-fun lt!47567 () Unit!2798)

(declare-fun lt!47570 () Unit!2798)

(assert (=> d!25217 (= lt!47567 lt!47570)))

(assert (=> d!25217 (= (getValueByKey!148 lt!47569 (_1!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!25217 (= lt!47570 (lemmaContainsTupThenGetReturnValue!64 lt!47569 (_1!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!25217 (= lt!47569 (insertStrictlySorted!67 (toList!776 lt!46960) (_1!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!25217 (= (+!133 lt!46960 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!47568)))

(declare-fun b!95504 () Bool)

(declare-fun res!48275 () Bool)

(assert (=> b!95504 (=> (not res!48275) (not e!62290))))

(assert (=> b!95504 (= res!48275 (= (getValueByKey!148 (toList!776 lt!47568) (_1!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun b!95505 () Bool)

(assert (=> b!95505 (= e!62290 (contains!792 (toList!776 lt!47568) (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(assert (= (and d!25217 res!48274) b!95504))

(assert (= (and b!95504 res!48275) b!95505))

(declare-fun m!103669 () Bool)

(assert (=> d!25217 m!103669))

(declare-fun m!103671 () Bool)

(assert (=> d!25217 m!103671))

(declare-fun m!103673 () Bool)

(assert (=> d!25217 m!103673))

(declare-fun m!103675 () Bool)

(assert (=> d!25217 m!103675))

(declare-fun m!103677 () Bool)

(assert (=> b!95504 m!103677))

(declare-fun m!103679 () Bool)

(assert (=> b!95505 m!103679))

(assert (=> b!94626 d!25217))

(declare-fun d!25219 () Bool)

(declare-fun e!62291 () Bool)

(assert (=> d!25219 e!62291))

(declare-fun res!48276 () Bool)

(assert (=> d!25219 (=> (not res!48276) (not e!62291))))

(declare-fun lt!47572 () ListLongMap!1521)

(assert (=> d!25219 (= res!48276 (contains!789 lt!47572 (_1!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(declare-fun lt!47573 () List!1569)

(assert (=> d!25219 (= lt!47572 (ListLongMap!1522 lt!47573))))

(declare-fun lt!47571 () Unit!2798)

(declare-fun lt!47574 () Unit!2798)

(assert (=> d!25219 (= lt!47571 lt!47574)))

(assert (=> d!25219 (= (getValueByKey!148 lt!47573 (_1!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!25219 (= lt!47574 (lemmaContainsTupThenGetReturnValue!64 lt!47573 (_1!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!25219 (= lt!47573 (insertStrictlySorted!67 (toList!776 lt!46966) (_1!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!25219 (= (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!47572)))

(declare-fun b!95506 () Bool)

(declare-fun res!48277 () Bool)

(assert (=> b!95506 (=> (not res!48277) (not e!62291))))

(assert (=> b!95506 (= res!48277 (= (getValueByKey!148 (toList!776 lt!47572) (_1!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))))

(declare-fun b!95507 () Bool)

(assert (=> b!95507 (= e!62291 (contains!792 (toList!776 lt!47572) (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))

(assert (= (and d!25219 res!48276) b!95506))

(assert (= (and b!95506 res!48277) b!95507))

(declare-fun m!103681 () Bool)

(assert (=> d!25219 m!103681))

(declare-fun m!103683 () Bool)

(assert (=> d!25219 m!103683))

(declare-fun m!103685 () Bool)

(assert (=> d!25219 m!103685))

(declare-fun m!103687 () Bool)

(assert (=> d!25219 m!103687))

(declare-fun m!103689 () Bool)

(assert (=> b!95506 m!103689))

(declare-fun m!103691 () Bool)

(assert (=> b!95507 m!103691))

(assert (=> b!94626 d!25219))

(declare-fun d!25221 () Bool)

(declare-fun e!62292 () Bool)

(assert (=> d!25221 e!62292))

(declare-fun res!48278 () Bool)

(assert (=> d!25221 (=> (not res!48278) (not e!62292))))

(declare-fun lt!47576 () ListLongMap!1521)

(assert (=> d!25221 (= res!48278 (contains!789 lt!47576 (_1!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(declare-fun lt!47577 () List!1569)

(assert (=> d!25221 (= lt!47576 (ListLongMap!1522 lt!47577))))

(declare-fun lt!47575 () Unit!2798)

(declare-fun lt!47578 () Unit!2798)

(assert (=> d!25221 (= lt!47575 lt!47578)))

(assert (=> d!25221 (= (getValueByKey!148 lt!47577 (_1!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!25221 (= lt!47578 (lemmaContainsTupThenGetReturnValue!64 lt!47577 (_1!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!25221 (= lt!47577 (insertStrictlySorted!67 (toList!776 lt!46962) (_1!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))))))

(assert (=> d!25221 (= (+!133 lt!46962 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!47576)))

(declare-fun b!95508 () Bool)

(declare-fun res!48279 () Bool)

(assert (=> b!95508 (=> (not res!48279) (not e!62292))))

(assert (=> b!95508 (= res!48279 (= (getValueByKey!148 (toList!776 lt!47576) (_1!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))))

(declare-fun b!95509 () Bool)

(assert (=> b!95509 (= e!62292 (contains!792 (toList!776 lt!47576) (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))))))

(assert (= (and d!25221 res!48278) b!95508))

(assert (= (and b!95508 res!48279) b!95509))

(declare-fun m!103693 () Bool)

(assert (=> d!25221 m!103693))

(declare-fun m!103695 () Bool)

(assert (=> d!25221 m!103695))

(declare-fun m!103697 () Bool)

(assert (=> d!25221 m!103697))

(declare-fun m!103699 () Bool)

(assert (=> d!25221 m!103699))

(declare-fun m!103701 () Bool)

(assert (=> b!95508 m!103701))

(declare-fun m!103703 () Bool)

(assert (=> b!95509 m!103703))

(assert (=> b!94626 d!25221))

(declare-fun d!25223 () Bool)

(assert (=> d!25223 (= (apply!90 (+!133 lt!46962 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46967) (apply!90 lt!46962 lt!46967))))

(declare-fun lt!47579 () Unit!2798)

(assert (=> d!25223 (= lt!47579 (choose!564 lt!46962 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46967))))

(declare-fun e!62293 () Bool)

(assert (=> d!25223 e!62293))

(declare-fun res!48280 () Bool)

(assert (=> d!25223 (=> (not res!48280) (not e!62293))))

(assert (=> d!25223 (= res!48280 (contains!789 lt!46962 lt!46967))))

(assert (=> d!25223 (= (addApplyDifferent!66 lt!46962 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)) lt!46967) lt!47579)))

(declare-fun b!95510 () Bool)

(assert (=> b!95510 (= e!62293 (not (= lt!46967 lt!46954)))))

(assert (= (and d!25223 res!48280) b!95510))

(assert (=> d!25223 m!102041))

(assert (=> d!25223 m!102029))

(assert (=> d!25223 m!102041))

(assert (=> d!25223 m!102051))

(declare-fun m!103705 () Bool)

(assert (=> d!25223 m!103705))

(declare-fun m!103707 () Bool)

(assert (=> d!25223 m!103707))

(assert (=> b!94626 d!25223))

(declare-fun d!25225 () Bool)

(assert (=> d!25225 (= (apply!90 (+!133 lt!46960 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46950) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46960 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) lt!46950)))))

(declare-fun bs!3932 () Bool)

(assert (= bs!3932 d!25225))

(declare-fun m!103709 () Bool)

(assert (=> bs!3932 m!103709))

(assert (=> bs!3932 m!103709))

(declare-fun m!103711 () Bool)

(assert (=> bs!3932 m!103711))

(assert (=> b!94626 d!25225))

(declare-fun d!25227 () Bool)

(assert (=> d!25227 (= (apply!90 (+!133 lt!46958 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46952) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46958 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) lt!46952)))))

(declare-fun bs!3933 () Bool)

(assert (= bs!3933 d!25227))

(declare-fun m!103713 () Bool)

(assert (=> bs!3933 m!103713))

(assert (=> bs!3933 m!103713))

(declare-fun m!103715 () Bool)

(assert (=> bs!3933 m!103715))

(assert (=> b!94626 d!25227))

(declare-fun d!25229 () Bool)

(assert (=> d!25229 (= (apply!90 lt!46958 lt!46952) (get!1265 (getValueByKey!148 (toList!776 lt!46958) lt!46952)))))

(declare-fun bs!3934 () Bool)

(assert (= bs!3934 d!25229))

(declare-fun m!103717 () Bool)

(assert (=> bs!3934 m!103717))

(assert (=> bs!3934 m!103717))

(declare-fun m!103719 () Bool)

(assert (=> bs!3934 m!103719))

(assert (=> b!94626 d!25229))

(declare-fun d!25231 () Bool)

(declare-fun e!62294 () Bool)

(assert (=> d!25231 e!62294))

(declare-fun res!48281 () Bool)

(assert (=> d!25231 (=> (not res!48281) (not e!62294))))

(declare-fun lt!47581 () ListLongMap!1521)

(assert (=> d!25231 (= res!48281 (contains!789 lt!47581 (_1!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(declare-fun lt!47582 () List!1569)

(assert (=> d!25231 (= lt!47581 (ListLongMap!1522 lt!47582))))

(declare-fun lt!47580 () Unit!2798)

(declare-fun lt!47583 () Unit!2798)

(assert (=> d!25231 (= lt!47580 lt!47583)))

(assert (=> d!25231 (= (getValueByKey!148 lt!47582 (_1!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!25231 (= lt!47583 (lemmaContainsTupThenGetReturnValue!64 lt!47582 (_1!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!25231 (= lt!47582 (insertStrictlySorted!67 (toList!776 lt!46958) (_1!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) (_2!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))))))

(assert (=> d!25231 (= (+!133 lt!46958 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!47581)))

(declare-fun b!95511 () Bool)

(declare-fun res!48282 () Bool)

(assert (=> b!95511 (=> (not res!48282) (not e!62294))))

(assert (=> b!95511 (= res!48282 (= (getValueByKey!148 (toList!776 lt!47581) (_1!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))))

(declare-fun b!95512 () Bool)

(assert (=> b!95512 (= e!62294 (contains!792 (toList!776 lt!47581) (tuple2!2311 lt!46964 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))))))

(assert (= (and d!25231 res!48281) b!95511))

(assert (= (and b!95511 res!48282) b!95512))

(declare-fun m!103721 () Bool)

(assert (=> d!25231 m!103721))

(declare-fun m!103723 () Bool)

(assert (=> d!25231 m!103723))

(declare-fun m!103725 () Bool)

(assert (=> d!25231 m!103725))

(declare-fun m!103727 () Bool)

(assert (=> d!25231 m!103727))

(declare-fun m!103729 () Bool)

(assert (=> b!95511 m!103729))

(declare-fun m!103731 () Bool)

(assert (=> b!95512 m!103731))

(assert (=> b!94626 d!25231))

(declare-fun d!25233 () Bool)

(assert (=> d!25233 (= (apply!90 (+!133 lt!46962 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46967) (get!1265 (getValueByKey!148 (toList!776 (+!133 lt!46962 (tuple2!2311 lt!46954 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46967)))))

(declare-fun bs!3935 () Bool)

(assert (= bs!3935 d!25233))

(declare-fun m!103733 () Bool)

(assert (=> bs!3935 m!103733))

(assert (=> bs!3935 m!103733))

(declare-fun m!103735 () Bool)

(assert (=> bs!3935 m!103735))

(assert (=> b!94626 d!25233))

(declare-fun d!25235 () Bool)

(declare-fun e!62296 () Bool)

(assert (=> d!25235 e!62296))

(declare-fun res!48283 () Bool)

(assert (=> d!25235 (=> res!48283 e!62296)))

(declare-fun lt!47587 () Bool)

(assert (=> d!25235 (= res!48283 (not lt!47587))))

(declare-fun lt!47584 () Bool)

(assert (=> d!25235 (= lt!47587 lt!47584)))

(declare-fun lt!47586 () Unit!2798)

(declare-fun e!62295 () Unit!2798)

(assert (=> d!25235 (= lt!47586 e!62295)))

(declare-fun c!16057 () Bool)

(assert (=> d!25235 (= c!16057 lt!47584)))

(assert (=> d!25235 (= lt!47584 (containsKey!152 (toList!776 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46965))))

(assert (=> d!25235 (= (contains!789 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16)))) lt!46965) lt!47587)))

(declare-fun b!95513 () Bool)

(declare-fun lt!47585 () Unit!2798)

(assert (=> b!95513 (= e!62295 lt!47585)))

(assert (=> b!95513 (= lt!47585 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46965))))

(assert (=> b!95513 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46965))))

(declare-fun b!95514 () Bool)

(declare-fun Unit!2860 () Unit!2798)

(assert (=> b!95514 (= e!62295 Unit!2860)))

(declare-fun b!95515 () Bool)

(assert (=> b!95515 (= e!62296 (isDefined!101 (getValueByKey!148 (toList!776 (+!133 lt!46966 (tuple2!2311 lt!46957 (ite (and c!15700 c!15706) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)) (zeroValue!2323 newMap!16))))) lt!46965)))))

(assert (= (and d!25235 c!16057) b!95513))

(assert (= (and d!25235 (not c!16057)) b!95514))

(assert (= (and d!25235 (not res!48283)) b!95515))

(declare-fun m!103737 () Bool)

(assert (=> d!25235 m!103737))

(declare-fun m!103739 () Bool)

(assert (=> b!95513 m!103739))

(declare-fun m!103741 () Bool)

(assert (=> b!95513 m!103741))

(assert (=> b!95513 m!103741))

(declare-fun m!103743 () Bool)

(assert (=> b!95513 m!103743))

(assert (=> b!95515 m!103741))

(assert (=> b!95515 m!103741))

(assert (=> b!95515 m!103743))

(assert (=> b!94626 d!25235))

(declare-fun d!25237 () Bool)

(assert (=> d!25237 (= (apply!90 lt!46962 lt!46967) (get!1265 (getValueByKey!148 (toList!776 lt!46962) lt!46967)))))

(declare-fun bs!3936 () Bool)

(assert (= bs!3936 d!25237))

(declare-fun m!103745 () Bool)

(assert (=> bs!3936 m!103745))

(assert (=> bs!3936 m!103745))

(declare-fun m!103747 () Bool)

(assert (=> bs!3936 m!103747))

(assert (=> b!94626 d!25237))

(declare-fun d!25239 () Bool)

(assert (=> d!25239 (= (apply!90 (+!133 lt!46960 (tuple2!2311 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)))) lt!46950) (apply!90 lt!46960 lt!46950))))

(declare-fun lt!47588 () Unit!2798)

(assert (=> d!25239 (= lt!47588 (choose!564 lt!46960 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46950))))

(declare-fun e!62297 () Bool)

(assert (=> d!25239 e!62297))

(declare-fun res!48284 () Bool)

(assert (=> d!25239 (=> (not res!48284) (not e!62297))))

(assert (=> d!25239 (= res!48284 (contains!789 lt!46960 lt!46950))))

(assert (=> d!25239 (= (addApplyDifferent!66 lt!46960 lt!46956 (ite c!15700 (ite c!15706 (minValue!2323 newMap!16) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (minValue!2323 newMap!16)) lt!46950) lt!47588)))

(declare-fun b!95516 () Bool)

(assert (=> b!95516 (= e!62297 (not (= lt!46950 lt!46956)))))

(assert (= (and d!25239 res!48284) b!95516))

(assert (=> d!25239 m!102031))

(assert (=> d!25239 m!102053))

(assert (=> d!25239 m!102031))

(assert (=> d!25239 m!102033))

(declare-fun m!103749 () Bool)

(assert (=> d!25239 m!103749))

(declare-fun m!103751 () Bool)

(assert (=> d!25239 m!103751))

(assert (=> b!94626 d!25239))

(declare-fun d!25241 () Bool)

(assert (=> d!25241 (= (apply!90 lt!46960 lt!46950) (get!1265 (getValueByKey!148 (toList!776 lt!46960) lt!46950)))))

(declare-fun bs!3937 () Bool)

(assert (= bs!3937 d!25241))

(declare-fun m!103753 () Bool)

(assert (=> bs!3937 m!103753))

(assert (=> bs!3937 m!103753))

(declare-fun m!103755 () Bool)

(assert (=> bs!3937 m!103755))

(assert (=> b!94626 d!25241))

(declare-fun lt!47589 () Bool)

(declare-fun d!25243 () Bool)

(assert (=> d!25243 (= lt!47589 (select (content!98 (toList!776 lt!47067)) (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun e!62299 () Bool)

(assert (=> d!25243 (= lt!47589 e!62299)))

(declare-fun res!48285 () Bool)

(assert (=> d!25243 (=> (not res!48285) (not e!62299))))

(assert (=> d!25243 (= res!48285 ((_ is Cons!1565) (toList!776 lt!47067)))))

(assert (=> d!25243 (= (contains!792 (toList!776 lt!47067) (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))) lt!47589)))

(declare-fun b!95517 () Bool)

(declare-fun e!62298 () Bool)

(assert (=> b!95517 (= e!62299 e!62298)))

(declare-fun res!48286 () Bool)

(assert (=> b!95517 (=> res!48286 e!62298)))

(assert (=> b!95517 (= res!48286 (= (h!2157 (toList!776 lt!47067)) (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(declare-fun b!95518 () Bool)

(assert (=> b!95518 (= e!62298 (contains!792 (t!5471 (toList!776 lt!47067)) (ite c!15700 (ite c!15706 (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000)))) (tuple2!2311 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (get!1261 (select (arr!1998 (_values!2419 (v!2762 (underlying!328 thiss!992)))) from!355) (dynLambda!361 (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) #b0000000000000000000000000000000000000000000000000000000000000000))))))))

(assert (= (and d!25243 res!48285) b!95517))

(assert (= (and b!95517 (not res!48286)) b!95518))

(declare-fun m!103757 () Bool)

(assert (=> d!25243 m!103757))

(declare-fun m!103759 () Bool)

(assert (=> d!25243 m!103759))

(declare-fun m!103761 () Bool)

(assert (=> b!95518 m!103761))

(assert (=> b!94686 d!25243))

(assert (=> b!94556 d!25051))

(assert (=> b!94556 d!25053))

(declare-fun d!25245 () Bool)

(assert (=> d!25245 (isDefined!101 (getValueByKey!148 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun lt!47590 () Unit!2798)

(assert (=> d!25245 (= lt!47590 (choose!561 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))

(declare-fun e!62300 () Bool)

(assert (=> d!25245 e!62300))

(declare-fun res!48287 () Bool)

(assert (=> d!25245 (=> (not res!48287) (not e!62300))))

(assert (=> d!25245 (= res!48287 (isStrictlySorted!302 (toList!776 lt!46762)))))

(assert (=> d!25245 (= (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000) lt!47590)))

(declare-fun b!95519 () Bool)

(assert (=> b!95519 (= e!62300 (containsKey!152 (toList!776 lt!46762) #b1000000000000000000000000000000000000000000000000000000000000000))))

(assert (= (and d!25245 res!48287) b!95519))

(assert (=> d!25245 m!101651))

(assert (=> d!25245 m!101651))

(assert (=> d!25245 m!101653))

(declare-fun m!103763 () Bool)

(assert (=> d!25245 m!103763))

(assert (=> d!25245 m!102277))

(assert (=> b!95519 m!101647))

(assert (=> b!94397 d!25245))

(assert (=> b!94397 d!25017))

(assert (=> b!94397 d!25019))

(declare-fun lt!47591 () Bool)

(declare-fun d!25247 () Bool)

(assert (=> d!25247 (= lt!47591 (select (content!98 (toList!776 lt!46908)) (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun e!62302 () Bool)

(assert (=> d!25247 (= lt!47591 e!62302)))

(declare-fun res!48288 () Bool)

(assert (=> d!25247 (=> (not res!48288) (not e!62302))))

(assert (=> d!25247 (= res!48288 ((_ is Cons!1565) (toList!776 lt!46908)))))

(assert (=> d!25247 (= (contains!792 (toList!776 lt!46908) (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!47591)))

(declare-fun b!95520 () Bool)

(declare-fun e!62301 () Bool)

(assert (=> b!95520 (= e!62302 e!62301)))

(declare-fun res!48289 () Bool)

(assert (=> b!95520 (=> res!48289 e!62301)))

(assert (=> b!95520 (= res!48289 (= (h!2157 (toList!776 lt!46908)) (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95521 () Bool)

(assert (=> b!95521 (= e!62301 (contains!792 (t!5471 (toList!776 lt!46908)) (tuple2!2311 lt!46746 (zeroValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!25247 res!48288) b!95520))

(assert (= (and b!95520 (not res!48289)) b!95521))

(declare-fun m!103765 () Bool)

(assert (=> d!25247 m!103765))

(declare-fun m!103767 () Bool)

(assert (=> d!25247 m!103767))

(declare-fun m!103769 () Bool)

(assert (=> b!95521 m!103769))

(assert (=> b!94552 d!25247))

(declare-fun d!25249 () Bool)

(assert (=> d!25249 (contains!789 (getCurrentListMap!468 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355))))

(declare-fun lt!47594 () Unit!2798)

(declare-fun choose!572 (array!4201 array!4203 (_ BitVec 32) (_ BitVec 32) V!3131 V!3131 (_ BitVec 64) (_ BitVec 32) Int) Unit!2798)

(assert (=> d!25249 (= lt!47594 (choose!572 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)))))

(assert (=> d!25249 (validMask!0 (mask!6511 newMap!16))))

(assert (=> d!25249 (= (lemmaArrayContainsKeyThenInListMap!23 (_keys!4118 newMap!16) (_values!2419 newMap!16) (mask!6511 newMap!16) (extraKeys!2265 newMap!16) (zeroValue!2323 newMap!16) (minValue!2323 newMap!16) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) #b00000000000000000000000000000000 (defaultEntry!2436 newMap!16)) lt!47594)))

(declare-fun bs!3938 () Bool)

(assert (= bs!3938 d!25249))

(assert (=> bs!3938 m!101465))

(assert (=> bs!3938 m!101465))

(assert (=> bs!3938 m!101363))

(assert (=> bs!3938 m!102075))

(assert (=> bs!3938 m!101363))

(declare-fun m!103771 () Bool)

(assert (=> bs!3938 m!103771))

(assert (=> bs!3938 m!101603))

(assert (=> b!94671 d!25249))

(assert (=> b!94671 d!24931))

(assert (=> b!94671 d!24649))

(declare-fun d!25251 () Bool)

(declare-fun e!62304 () Bool)

(assert (=> d!25251 e!62304))

(declare-fun res!48290 () Bool)

(assert (=> d!25251 (=> res!48290 e!62304)))

(declare-fun lt!47598 () Bool)

(assert (=> d!25251 (= res!48290 (not lt!47598))))

(declare-fun lt!47595 () Bool)

(assert (=> d!25251 (= lt!47598 lt!47595)))

(declare-fun lt!47597 () Unit!2798)

(declare-fun e!62303 () Unit!2798)

(assert (=> d!25251 (= lt!47597 e!62303)))

(declare-fun c!16058 () Bool)

(assert (=> d!25251 (= c!16058 lt!47595)))

(assert (=> d!25251 (= lt!47595 (containsKey!152 (toList!776 lt!46824) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> d!25251 (= (contains!789 lt!46824 (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)) lt!47598)))

(declare-fun b!95522 () Bool)

(declare-fun lt!47596 () Unit!2798)

(assert (=> b!95522 (= e!62303 lt!47596)))

(assert (=> b!95522 (= lt!47596 (lemmaContainsKeyImpliesGetValueByKeyDefined!100 (toList!776 lt!46824) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(assert (=> b!95522 (isDefined!101 (getValueByKey!148 (toList!776 lt!46824) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000)))))

(declare-fun b!95523 () Bool)

(declare-fun Unit!2861 () Unit!2798)

(assert (=> b!95523 (= e!62303 Unit!2861)))

(declare-fun b!95524 () Bool)

(assert (=> b!95524 (= e!62304 (isDefined!101 (getValueByKey!148 (toList!776 lt!46824) (select (arr!1997 (_keys!4118 newMap!16)) #b00000000000000000000000000000000))))))

(assert (= (and d!25251 c!16058) b!95522))

(assert (= (and d!25251 (not c!16058)) b!95523))

(assert (= (and d!25251 (not res!48290)) b!95524))

(assert (=> d!25251 m!101689))

(declare-fun m!103773 () Bool)

(assert (=> d!25251 m!103773))

(assert (=> b!95522 m!101689))

(declare-fun m!103775 () Bool)

(assert (=> b!95522 m!103775))

(assert (=> b!95522 m!101689))

(assert (=> b!95522 m!103417))

(assert (=> b!95522 m!103417))

(declare-fun m!103777 () Bool)

(assert (=> b!95522 m!103777))

(assert (=> b!95524 m!101689))

(assert (=> b!95524 m!103417))

(assert (=> b!95524 m!103417))

(assert (=> b!95524 m!103777))

(assert (=> b!94423 d!25251))

(declare-fun d!25253 () Bool)

(declare-fun e!62305 () Bool)

(assert (=> d!25253 e!62305))

(declare-fun res!48291 () Bool)

(assert (=> d!25253 (=> (not res!48291) (not e!62305))))

(declare-fun lt!47600 () ListLongMap!1521)

(assert (=> d!25253 (= res!48291 (contains!789 lt!47600 (_1!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(declare-fun lt!47601 () List!1569)

(assert (=> d!25253 (= lt!47600 (ListLongMap!1522 lt!47601))))

(declare-fun lt!47599 () Unit!2798)

(declare-fun lt!47602 () Unit!2798)

(assert (=> d!25253 (= lt!47599 lt!47602)))

(assert (=> d!25253 (= (getValueByKey!148 lt!47601 (_1!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25253 (= lt!47602 (lemmaContainsTupThenGetReturnValue!64 lt!47601 (_1!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25253 (= lt!47601 (insertStrictlySorted!67 (toList!776 (ite c!15794 call!9489 (ite c!15791 call!9488 call!9483))) (_1!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) (_2!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))))))

(assert (=> d!25253 (= (+!133 (ite c!15794 call!9489 (ite c!15791 call!9488 call!9483)) (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))) lt!47600)))

(declare-fun b!95525 () Bool)

(declare-fun res!48292 () Bool)

(assert (=> b!95525 (=> (not res!48292) (not e!62305))))

(assert (=> b!95525 (= res!48292 (= (getValueByKey!148 (toList!776 lt!47600) (_1!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16))))) (Some!153 (_2!1166 (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))))

(declare-fun b!95526 () Bool)

(assert (=> b!95526 (= e!62305 (contains!792 (toList!776 lt!47600) (ite (or c!15794 c!15791) (tuple2!2311 #b0000000000000000000000000000000000000000000000000000000000000000 (zeroValue!2323 newMap!16)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 newMap!16)))))))

(assert (= (and d!25253 res!48291) b!95525))

(assert (= (and b!95525 res!48292) b!95526))

(declare-fun m!103779 () Bool)

(assert (=> d!25253 m!103779))

(declare-fun m!103781 () Bool)

(assert (=> d!25253 m!103781))

(declare-fun m!103783 () Bool)

(assert (=> d!25253 m!103783))

(declare-fun m!103785 () Bool)

(assert (=> d!25253 m!103785))

(declare-fun m!103787 () Bool)

(assert (=> b!95525 m!103787))

(declare-fun m!103789 () Bool)

(assert (=> b!95526 m!103789))

(assert (=> bm!9482 d!25253))

(declare-fun d!25255 () Bool)

(assert (=> d!25255 (= (get!1265 (getValueByKey!148 (toList!776 lt!46754) lt!46759)) (v!2766 (getValueByKey!148 (toList!776 lt!46754) lt!46759)))))

(assert (=> d!24693 d!25255))

(declare-fun d!25257 () Bool)

(declare-fun c!16059 () Bool)

(assert (=> d!25257 (= c!16059 (and ((_ is Cons!1565) (toList!776 lt!46754)) (= (_1!1166 (h!2157 (toList!776 lt!46754))) lt!46759)))))

(declare-fun e!62306 () Option!154)

(assert (=> d!25257 (= (getValueByKey!148 (toList!776 lt!46754) lt!46759) e!62306)))

(declare-fun b!95529 () Bool)

(declare-fun e!62307 () Option!154)

(assert (=> b!95529 (= e!62307 (getValueByKey!148 (t!5471 (toList!776 lt!46754)) lt!46759))))

(declare-fun b!95530 () Bool)

(assert (=> b!95530 (= e!62307 None!152)))

(declare-fun b!95528 () Bool)

(assert (=> b!95528 (= e!62306 e!62307)))

(declare-fun c!16060 () Bool)

(assert (=> b!95528 (= c!16060 (and ((_ is Cons!1565) (toList!776 lt!46754)) (not (= (_1!1166 (h!2157 (toList!776 lt!46754))) lt!46759))))))

(declare-fun b!95527 () Bool)

(assert (=> b!95527 (= e!62306 (Some!153 (_2!1166 (h!2157 (toList!776 lt!46754)))))))

(assert (= (and d!25257 c!16059) b!95527))

(assert (= (and d!25257 (not c!16059)) b!95528))

(assert (= (and b!95528 c!16060) b!95529))

(assert (= (and b!95528 (not c!16060)) b!95530))

(declare-fun m!103791 () Bool)

(assert (=> b!95529 m!103791))

(assert (=> d!24693 d!25257))

(declare-fun d!25259 () Bool)

(declare-fun res!48293 () Bool)

(declare-fun e!62308 () Bool)

(assert (=> d!25259 (=> res!48293 e!62308)))

(assert (=> d!25259 (= res!48293 (= (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355)))))

(assert (=> d!25259 (= (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001)) e!62308)))

(declare-fun b!95531 () Bool)

(declare-fun e!62309 () Bool)

(assert (=> b!95531 (= e!62308 e!62309)))

(declare-fun res!48294 () Bool)

(assert (=> b!95531 (=> (not res!48294) (not e!62309))))

(assert (=> b!95531 (= res!48294 (bvslt (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001) (size!2245 (_keys!4118 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95532 () Bool)

(assert (=> b!95532 (= e!62309 (arrayContainsKey!0 (_keys!4118 (v!2762 (underlying!328 thiss!992))) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) from!355) (bvadd #b00000000000000000000000000000001 from!355 #b00000000000000000000000000000001 #b00000000000000000000000000000001 #b00000000000000000000000000000001)))))

(assert (= (and d!25259 (not res!48293)) b!95531))

(assert (= (and b!95531 res!48294) b!95532))

(declare-fun m!103793 () Bool)

(assert (=> d!25259 m!103793))

(assert (=> b!95532 m!101363))

(declare-fun m!103795 () Bool)

(assert (=> b!95532 m!103795))

(assert (=> b!94496 d!25259))

(declare-fun d!25261 () Bool)

(assert (=> d!25261 (= (apply!90 lt!46884 (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355))) (get!1265 (getValueByKey!148 (toList!776 lt!46884) (select (arr!1997 (_keys!4118 (v!2762 (underlying!328 thiss!992)))) (bvadd #b00000000000000000000000000000001 from!355)))))))

(declare-fun bs!3939 () Bool)

(assert (= bs!3939 d!25261))

(assert (=> bs!3939 m!101533))

(assert (=> bs!3939 m!102523))

(assert (=> bs!3939 m!102523))

(declare-fun m!103797 () Bool)

(assert (=> bs!3939 m!103797))

(assert (=> b!94530 d!25261))

(assert (=> b!94530 d!24723))

(declare-fun d!25263 () Bool)

(declare-fun lt!47603 () Bool)

(assert (=> d!25263 (= lt!47603 (select (content!98 (toList!776 lt!46973)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun e!62311 () Bool)

(assert (=> d!25263 (= lt!47603 e!62311)))

(declare-fun res!48295 () Bool)

(assert (=> d!25263 (=> (not res!48295) (not e!62311))))

(assert (=> d!25263 (= res!48295 ((_ is Cons!1565) (toList!776 lt!46973)))))

(assert (=> d!25263 (= (contains!792 (toList!776 lt!46973) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))) lt!47603)))

(declare-fun b!95533 () Bool)

(declare-fun e!62310 () Bool)

(assert (=> b!95533 (= e!62311 e!62310)))

(declare-fun res!48296 () Bool)

(assert (=> b!95533 (=> res!48296 e!62310)))

(assert (=> b!95533 (= res!48296 (= (h!2157 (toList!776 lt!46973)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(declare-fun b!95534 () Bool)

(assert (=> b!95534 (= e!62310 (contains!792 (t!5471 (toList!776 lt!46973)) (tuple2!2311 #b1000000000000000000000000000000000000000000000000000000000000000 (minValue!2323 (v!2762 (underlying!328 thiss!992))))))))

(assert (= (and d!25263 res!48295) b!95533))

(assert (= (and b!95533 (not res!48296)) b!95534))

(declare-fun m!103799 () Bool)

(assert (=> d!25263 m!103799))

(declare-fun m!103801 () Bool)

(assert (=> d!25263 m!103801))

(declare-fun m!103803 () Bool)

(assert (=> b!95534 m!103803))

(assert (=> b!94633 d!25263))

(declare-fun b!95536 () Bool)

(declare-fun e!62312 () Bool)

(assert (=> b!95536 (= e!62312 tp_is_empty!2613)))

(declare-fun b!95535 () Bool)

(declare-fun e!62313 () Bool)

(assert (=> b!95535 (= e!62313 tp_is_empty!2613)))

(declare-fun mapNonEmpty!3689 () Bool)

(declare-fun mapRes!3689 () Bool)

(declare-fun tp!9467 () Bool)

(assert (=> mapNonEmpty!3689 (= mapRes!3689 (and tp!9467 e!62313))))

(declare-fun mapValue!3689 () ValueCell!963)

(declare-fun mapRest!3689 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapKey!3689 () (_ BitVec 32))

(assert (=> mapNonEmpty!3689 (= mapRest!3687 (store mapRest!3689 mapKey!3689 mapValue!3689))))

(declare-fun condMapEmpty!3689 () Bool)

(declare-fun mapDefault!3689 () ValueCell!963)

(assert (=> mapNonEmpty!3687 (= condMapEmpty!3689 (= mapRest!3687 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3689)))))

(assert (=> mapNonEmpty!3687 (= tp!9465 (and e!62312 mapRes!3689))))

(declare-fun mapIsEmpty!3689 () Bool)

(assert (=> mapIsEmpty!3689 mapRes!3689))

(assert (= (and mapNonEmpty!3687 condMapEmpty!3689) mapIsEmpty!3689))

(assert (= (and mapNonEmpty!3687 (not condMapEmpty!3689)) mapNonEmpty!3689))

(assert (= (and mapNonEmpty!3689 ((_ is ValueCellFull!963) mapValue!3689)) b!95535))

(assert (= (and mapNonEmpty!3687 ((_ is ValueCellFull!963) mapDefault!3689)) b!95536))

(declare-fun m!103805 () Bool)

(assert (=> mapNonEmpty!3689 m!103805))

(declare-fun b!95538 () Bool)

(declare-fun e!62314 () Bool)

(assert (=> b!95538 (= e!62314 tp_is_empty!2613)))

(declare-fun b!95537 () Bool)

(declare-fun e!62315 () Bool)

(assert (=> b!95537 (= e!62315 tp_is_empty!2613)))

(declare-fun mapNonEmpty!3690 () Bool)

(declare-fun mapRes!3690 () Bool)

(declare-fun tp!9468 () Bool)

(assert (=> mapNonEmpty!3690 (= mapRes!3690 (and tp!9468 e!62315))))

(declare-fun mapValue!3690 () ValueCell!963)

(declare-fun mapRest!3690 () (Array (_ BitVec 32) ValueCell!963))

(declare-fun mapKey!3690 () (_ BitVec 32))

(assert (=> mapNonEmpty!3690 (= mapRest!3688 (store mapRest!3690 mapKey!3690 mapValue!3690))))

(declare-fun condMapEmpty!3690 () Bool)

(declare-fun mapDefault!3690 () ValueCell!963)

(assert (=> mapNonEmpty!3688 (= condMapEmpty!3690 (= mapRest!3688 ((as const (Array (_ BitVec 32) ValueCell!963)) mapDefault!3690)))))

(assert (=> mapNonEmpty!3688 (= tp!9466 (and e!62314 mapRes!3690))))

(declare-fun mapIsEmpty!3690 () Bool)

(assert (=> mapIsEmpty!3690 mapRes!3690))

(assert (= (and mapNonEmpty!3688 condMapEmpty!3690) mapIsEmpty!3690))

(assert (= (and mapNonEmpty!3688 (not condMapEmpty!3690)) mapNonEmpty!3690))

(assert (= (and mapNonEmpty!3690 ((_ is ValueCellFull!963) mapValue!3690)) b!95537))

(assert (= (and mapNonEmpty!3688 ((_ is ValueCellFull!963) mapDefault!3690)) b!95538))

(declare-fun m!103807 () Bool)

(assert (=> mapNonEmpty!3690 m!103807))

(declare-fun b_lambda!4203 () Bool)

(assert (= b_lambda!4201 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4203)))

(declare-fun b_lambda!4205 () Bool)

(assert (= b_lambda!4177 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4205)))

(declare-fun b_lambda!4207 () Bool)

(assert (= b_lambda!4181 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4207)))

(declare-fun b_lambda!4209 () Bool)

(assert (= b_lambda!4185 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4209)))

(declare-fun b_lambda!4211 () Bool)

(assert (= b_lambda!4199 (or (and b!94027 b_free!2393) (and b!94030 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))) b_lambda!4211)))

(declare-fun b_lambda!4213 () Bool)

(assert (= b_lambda!4173 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4213)))

(declare-fun b_lambda!4215 () Bool)

(assert (= b_lambda!4197 (or (and b!94027 b_free!2393) (and b!94030 b_free!2395 (= (defaultEntry!2436 newMap!16) (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))))) b_lambda!4215)))

(declare-fun b_lambda!4217 () Bool)

(assert (= b_lambda!4189 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4217)))

(declare-fun b_lambda!4219 () Bool)

(assert (= b_lambda!4175 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4219)))

(declare-fun b_lambda!4221 () Bool)

(assert (= b_lambda!4193 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4221)))

(declare-fun b_lambda!4223 () Bool)

(assert (= b_lambda!4191 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4223)))

(declare-fun b_lambda!4225 () Bool)

(assert (= b_lambda!4183 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4225)))

(declare-fun b_lambda!4227 () Bool)

(assert (= b_lambda!4195 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4227)))

(declare-fun b_lambda!4229 () Bool)

(assert (= b_lambda!4179 (or (and b!94027 b_free!2393 (= (defaultEntry!2436 (v!2762 (underlying!328 thiss!992))) (defaultEntry!2436 newMap!16))) (and b!94030 b_free!2395) b_lambda!4229)))

(check-sat (not b!95337) (not b!94822) (not bm!9545) (not b!94942) (not bm!9537) (not d!24817) (not d!24751) (not b!94836) (not b!95069) (not b!95018) (not bm!9531) (not b!94887) (not b!95112) (not bm!9552) (not b!94751) (not b_lambda!4187) (not d!24859) (not d!25039) (not b!94863) (not d!25261) (not b!95525) (not b!94722) (not b!94973) (not b_lambda!4227) (not b!95509) (not d!24951) (not b!95462) (not d!25203) (not bm!9570) (not b!94833) (not b!94757) (not b!95394) (not d!25223) (not b!94801) (not b!95227) (not b!94812) (not b!95295) (not b!94737) (not b_lambda!4169) (not b!94920) (not b!94919) (not b!95201) (not b!95036) (not b!94911) (not b!94710) (not b!95152) (not d!25045) (not b!94699) (not b!94825) (not d!24961) (not b!95178) (not d!25147) (not b!95255) (not b!94823) (not d!25007) (not b!94941) (not b!94807) (not bm!9607) (not d!25055) (not d!25135) (not d!25017) (not b!95424) (not b_lambda!4203) (not b!95477) (not bm!9571) (not d!24869) (not d!25031) (not b!94857) (not b!94996) (not b_lambda!4165) (not b!95065) (not bm!9525) (not b!95203) (not d!24843) tp_is_empty!2613 (not b!95384) (not d!25067) (not b!95447) (not b!95057) (not b!95005) (not b!95089) (not d!24775) (not b!95414) (not mapNonEmpty!3689) (not b!94697) (not b!95176) (not d!25029) (not b!95507) (not d!24785) (not b!95281) (not d!25253) (not b!94730) (not b!94954) (not b!95009) (not b!94734) (not d!25129) (not b!94917) (not b!95395) (not b!95187) (not b!95188) (not bm!9538) (not d!24829) (not b!95224) (not b!95473) (not bm!9574) (not b!95092) (not b_lambda!4223) (not b!95457) (not d!25013) (not b!95161) (not bm!9578) (not d!25225) (not d!24923) (not b!94969) (not b!95051) (not b_lambda!4171) (not b!95373) (not b!95241) (not d!25241) (not b!94708) (not b!95236) (not b!95287) (not b!95454) (not b!94994) (not d!24853) (not d!24769) (not b!94844) (not b!95366) (not b_lambda!4151) (not b!95244) (not d!24969) (not bm!9569) (not b!95402) (not b!94705) (not bm!9577) (not bm!9534) (not b!94828) (not d!25157) (not b!95515) (not b!95513) (not d!25035) (not bm!9530) (not b!94748) (not bm!9548) (not d!25187) (not b!95405) (not d!25051) (not bm!9557) (not b!95444) (not b!95432) (not b!94811) (not b!95150) (not b!95291) (not b!95288) (not b!94726) (not b!94773) (not b!94944) (not b!95316) (not b!95401) (not b!95202) (not b!95453) (not bm!9551) (not d!24915) (not d!25177) (not b_lambda!4219) (not d!24877) (not b!94759) (not b!95074) (not d!24855) (not b!95478) (not b!95072) (not b!95307) (not d!24763) (not d!24981) (not b!94744) (not b!95381) (not bm!9572) (not b!95371) (not bm!9568) (not b!95149) (not d!25085) (not d!24813) (not b!95488) (not b!95075) (not d!24825) (not d!24889) (not b!95438) (not b!94821) (not b!95011) (not d!24753) (not b!95458) (not b!95470) (not d!25183) (not d!25103) (not b!94896) (not d!24897) (not d!24837) (not b!94964) (not b!94869) (not b!95280) (not b!95204) (not bm!9540) (not b!95271) (not b!94747) (not d!25251) (not d!24779) (not b!95491) (not b!95232) (not d!25237) (not d!25243) (not b_lambda!4211) (not b!94752) (not b!95085) (not b!95000) (not b!94945) (not b!95258) (not d!25105) (not d!25083) (not b!95446) (not b!95091) (not bm!9579) (not b!95182) b_and!5835 (not b!95040) (not b!95256) (not bm!9609) (not d!24913) (not d!24931) (not b!94893) (not b!95243) (not d!25173) (not b!94713) (not d!24903) (not d!24797) (not b!95054) (not d!24873) (not d!24849) (not d!25149) (not d!24799) (not b!95184) (not b!95155) (not b!95045) (not b_next!2393) (not b_lambda!4167) (not b!94929) (not b!95010) (not b!95300) (not b!95534) (not d!24917) (not d!24927) (not b!95121) (not b!94718) (not b_lambda!4213) (not d!24971) (not b_next!2395) (not bm!9559) (not b!95046) (not d!24801) (not b!95309) (not d!25061) (not d!24809) (not b!95217) (not bm!9591) (not b!95526) (not b!95338) (not d!24807) (not d!25043) (not b!95038) (not b!94820) (not b_lambda!4215) (not b!95508) (not d!25011) (not d!24761) (not b!94738) (not d!25015) (not b!95522) (not d!24967) (not b!95278) (not b!94740) (not d!24845) (not b!95476) (not b!94824) (not d!24895) (not b!94978) (not b!95198) (not b!94926) (not b_lambda!4225) (not d!24765) (not d!24819) (not b!95301) (not b!94767) (not b!94971) (not b!94937) (not d!25115) (not b!94719) (not b!94750) (not b!95199) (not bm!9527) (not b!95086) (not bm!9586) (not b!94856) (not d!24839) (not b!95207) (not d!24899) (not b!94895) (not d!25155) (not b!95479) (not b!94990) (not b!95250) (not b!95532) (not d!24925) (not b!95175) (not b!95389) (not bm!9547) (not b!95482) (not b!95196) (not b!95025) (not d!25233) (not b!95524) (not b!95419) (not b!95425) (not b!94847) (not b!94739) (not b!95026) (not b!94774) (not b!95412) (not d!24755) (not b!95226) (not b!95101) (not d!25221) (not b!95098) (not d!24857) (not d!25211) (not d!25151) (not b!94714) (not bm!9582) (not d!25109) (not d!25145) (not b!95408) (not bm!9580) (not b!95410) (not b!95505) (not b!95511) (not b!94729) (not bm!9512) (not bm!9553) (not d!25201) (not b!95292) (not b!94943) (not b!95360) (not d!25021) (not b!95262) (not d!25069) (not bm!9606) (not b!94764) (not d!24901) (not b!95439) (not b!95214) (not bm!9556) (not b!94853) (not d!24907) (not d!25163) (not b!94830) (not b!95368) (not b!94817) (not b!95441) (not b!95374) (not bm!9546) (not bm!9561) (not b!95186) (not b!94886) (not bm!9524) (not d!25205) (not b!95506) (not b!95042) (not b!94711) (not b!95431) (not bm!9594) (not b!95052) (not d!24835) (not d!25215) (not b_lambda!4229) (not b!94810) (not b!95107) (not d!25245) (not b!94753) (not d!25213) (not b!94982) (not d!25079) (not b!94889) (not b!95502) (not b_lambda!4163) (not d!25097) (not b!95237) (not d!24909) (not bm!9522) (not b!95183) (not d!25249) (not b!94916) (not d!25141) (not b!95474) (not b!95417) (not b!94826) (not d!25099) (not bm!9590) (not bm!9510) (not d!25217) (not b!95172) (not d!24851) (not b!95118) (not d!24783) (not d!25199) (not b!95475) (not d!25077) (not b!94899) (not b_lambda!4221) (not d!24935) (not b!95387) (not d!25231) (not b!94963) (not b!95435) (not d!24883) (not d!24997) (not b!95231) (not b!95260) (not d!25025) (not d!25009) (not b!95082) (not b!95016) (not d!24827) (not d!24963) (not b!95252) (not mapNonEmpty!3690) (not b!94732) (not b_lambda!4209) (not bm!9585) (not b!94947) (not b!94756) (not b!95041) (not b!95019) (not b!94884) (not d!24861) (not b!95062) (not b!94913) (not b_lambda!4147) (not b!95275) (not b!95518) (not b!94872) (not b_lambda!4205) (not b!95164) (not d!25003) (not d!25111) (not bm!9597) (not d!24955) (not b!95067) b_and!5837 (not b!94762) (not d!24943) (not b!95013) (not b!95185) (not bm!9558) (not bm!9542) (not b!94998) (not b!95380) (not b!95087) (not b!95386) (not b!94745) (not b!95177) (not d!25263) (not b!95296) (not d!24759) (not d!24885) (not b!94859) (not b!94858) (not bm!9612) (not d!24815) (not bm!9511) (not d!24999) (not b!94888) (not b!94712) (not b!95060) (not b!94991) (not b!95035) (not b!94968) (not b!95151) (not b!94804) (not d!24803) (not b!94716) (not b!95194) (not d!24789) (not b!94957) (not b!94749) (not b!95240) (not b!95088) (not d!25119) (not d!24773) (not d!24881) (not b!95190) (not d!25235) (not b!94707) (not b!94704) (not b!94855) (not b!95154) (not b!94819) (not d!24805) (not d!24933) (not b!95422) (not d!25131) (not d!24781) (not b!95191) (not bm!9532) (not b!95205) (not b!95272) (not b!94915) (not b!95246) (not d!24821) (not d!24945) (not d!25005) (not b!95208) (not b!94698) (not b!95305) (not b!95225) (not b!94882) (not b!94948) (not d!25239) (not d!24767) (not b!95467) (not d!24975) (not b!94890) (not d!24777) (not d!25219) (not d!25113) (not b!95110) (not b!95148) (not b!94914) (not b!95253) (not d!25169) (not b!95416) (not d!24771) (not b!94709) (not bm!9600) (not b!94986) (not b!95006) (not d!25247) (not b!94987) (not d!24823) (not b!94841) (not bm!9604) (not b!95050) (not b_lambda!4207) (not b!94829) (not b!95269) (not bm!9605) (not b!95336) (not d!24831) (not d!24811) (not bm!9523) (not b!94910) (not b!94901) (not b!94860) (not b!95500) (not b!94700) (not b!94761) (not d!25059) (not d!24959) (not b!95298) (not d!25175) (not b!95234) (not d!25023) (not b!95332) (not b!95529) (not d!25185) (not d!24795) (not d!25227) (not bm!9587) (not b!95512) (not b!95081) (not b_lambda!4217) (not d!24847) (not d!25049) (not b!95519) (not d!24921) (not b!95312) (not b!94837) (not b!95392) (not bm!9603) (not b!94746) (not bm!9521) (not b!94800) (not b!95273) (not b!95481) (not b!95003) (not b!95504) (not d!25095) (not b!94715) (not d!25229) (not b!95521) (not b!95233) (not d!25057) (not b!94706) (not b!95109) (not b!95436) (not d!25179) (not b!95029) (not b!95047) (not d!24757) (not b!95265) (not b!94862) (not d!25127) (not b!95002) (not b!95039) (not b!94966) (not b!95459) (not bm!9539))
(check-sat b_and!5835 b_and!5837 (not b_next!2393) (not b_next!2395))
